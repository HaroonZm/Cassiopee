================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys # Importation du module sys pour accéder aux objets liés au système, notamment les flux d'entrée/sortie
input = sys.stdin.readline # Redéfinition de la fonction input pour utiliser la méthode readline plus rapide sur l'entrée standard
import heapq # Importation du module heapq pour utiliser les files de priorité (tas binaire/min-heap)

def dijkstra(edge, start):
    # Cette fonction implémente l'algorithme de Dijkstra pour trouver les plus courts chemins depuis un sommet de départ
    n = len(edge) # On récupère le nombre de sommets du graphe (liste d'adjacence 'edge')
    dist = [float("inf")] * n # On crée une liste de distances, initialement remplies avec l'infini flottant, taille égale au nombre de sommets
    dist[start] = 0 # La distance du sommet de départ à lui-même est 0
    que = [(0, start)] # Initialisation d'une file de priorité (ici une liste contenant un tuple (distance, numéro de sommet)), utilisée pour explorer les sommets les plus proches en priorité
    while que: # Boucle principale tant que la file de priorité n'est pas vide
        d, v = heapq.heappop(que) # On retire de la file le sommet avec la plus petite distance courante, sous forme de tuple (d = distance, v = numéro du sommet)
        if dist[v] < d:
            continue # Si la distance mémorisée est déjà plus petite que celle qu'on traite, on ignore cette itération (chemin sous-optimal)
        for nv, nd in edge[v]: # Pour chaque sommet adjacent 'nv' accessible à partir de 'v', et le coût 'nd' du déplacement
            if dist[nv] > d + nd: # Si la distance vers 'nv' en empruntant ce nouvel arc est plus courte que celle qu'on connaît
                dist[nv] = d + nd # On met à jour la distance minimale vers 'nv'
                heapq.heappush(que, (dist[nv], nv)) # On ajoute ce nouveau couple distance/sommet dans la file de priorité afin de le traiter plus tard
    return dist # À la fin de la boucle, dist contenant la plus courte distance depuis 'start' vers chaque sommet est retournée

# Lecture des trois entiers n (nombre de sommets), m (nombre d'arêtes), et s (état initial ou départ spécifique)
n, m, s = map(int, input().split())
G = [[] for _ in range(n)] # Initialisation du graphe sous forme de liste d'adjacence : G[i] contiendra la liste des voisins de i

# Selon la valeur de s, le traitement diverge.
if s >= 2500:
    # Si le point de départ possède une valeur supérieure ou égale à 2500
    for _ in range(m): # Pour chaque arête, on la lit depuis l'entrée
        u, v, a, b = map(int, input().split()) # Lecture des informations de l'arête : deux sommets (u,v), coût associé a et b
        u -= 1 # Ajustement des indices des sommets en partant de 0 (en Python les listes sont indexées à partir de 0)
        v -= 1
        G[u].append((v, b)) # On ajoute à la liste d'adjacence de u un tuple (v, b) indiquant qu'il existe un arc de u à v de coût b
        G[v].append((u, b)) # Comme le graphe est non orienté, on ajoute aussi l'arc inverse dans G[v]
    L = dijkstra(G, 0) # On applique Dijkstra sur ce graphe à partir du sommet 0. Le résultat est stocké dans la liste L (distances minimales)

else:
    # Si s < 2500, version avancée du problème avec gestion d'états supplémentaires
    for _ in range(m):
        # On lit chaque arête du graphe, comme précédemment, mais potentiellement avec des informations supplémentaires
        u, v, a, b = map(int, input().split())
        u -= 1
        v -= 1
        G[u].append((v, a, b)) # On stocke l'arc avec toutes ses informations (v, a, b)
        G[v].append((u, a, b))
    CD = [list(map(int, input().split())) for _ in range(n)] # Pour chaque sommet, on lit une paire d'entiers (c, d), stockés dans une liste CD
    edge = [[] for _ in range(n * 2500)] # On construit un graphe plus grand, où chaque état (sommet, montant d'argent) est représenté par un sommet virtuel distinct. Il y a 'n' sommets et 2500 valeurs d'argent différentes possible (états)
    for i in range(n): # Pour chaque sommet du graphe initial
        c, d = CD[i] # On récupère la paire (c, d) : coût d'augmentation d'argent, argent obtenu
        for k in range(2500): # Pour chaque valeur possible du montant d'argent détenu (de 0 à 2499)
            for v, a, b in G[i]:
                # Pour chaque voisin v de i, où a est le montant minimal nécessaire pour le déplacement, b le coût
                if k >= a: # On vérifie si on détient assez d'argent pour utiliser cette arête
                    edge[2500 * i + k].append((2500 * v + (k - a), b)) # On ajoute un arc de l'état (i,k) vers l'état (v,k-a) avec coût b
            if k + c < 2500:
                # On considère l'action d'augmenter son argent
                edge[2500 * i + k].append((2500 * i + (k + c), d)) # On peut passer de l'état (i, k) à (i, k+c) avec comme coût d
    dist = dijkstra(edge, s) # On lance Dijkstra sur le graphe des états, avec comme état de départ 's' (montant d'argent initial)
    L = [0] * n # Initialisation du résultat final : distances minimales pour atteindre chaque sommet
    for i in range(n):
        # Pour chaque sommet i, on cherche la plus petite distance parmi tous les états où ce sommet est atteint avec un montant d'argent quelconque
        L[i] = min(dist[2500 * i:2500 * (i + 1)]) # On prend le minimum des 2500 sous-distances associées à ce sommet
print(*L[1:], sep="\n") # Enfin, on affiche les distances finales pour tous les sommets sauf le premier (index 1 à n-1), chaque distance sur une ligne séparée (dépliage de la liste avec *)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' #' (ID: 1069)
  → Token d'amorce (pas de prédiction)

Token 3: ' Import' (ID: 19998)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01618076115846634
    2. '<|end|>' → logprob: -5.266180992126465
    3. '  ' → logprob: -5.766180992126465
    4. '<|end|>' → logprob: -6.516180992126465
    5. ' space' → logprob: -6.891180992126465
    6. '.' → logprob: -7.266180992126465
    7. '!' → logprob: -7.266180992126465
    8. ' a' → logprob: -7.516180992126465
    9. ' import' → logprob: -7.766180992126465
    10. ' )' → logprob: -8.016180992126465

Token 4: 'ation' (ID: 387)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0036595722194761038
    2. ' .' → logprob: -6.628659725189209
    3. '[' → logprob: -7.628659725189209
    4. '.system' → logprob: -8.25365924835205
    5. '<|end|>' → logprob: -8.50365924835205
    6. ' sys' → logprob: -8.75365924835205
    7. '```' → logprob: -8.87865924835205
    8. '.sys' → logprob: -9.00365924835205
    9. ',' → logprob: -9.12865924835205
    10. '_' → logprob: -9.37865924835205

Token 5: ' du' (ID: 1462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1790372133255005
    2. '\n' → logprob: -2.929037094116211
    3. '\' → logprob: -3.429037094116211
    4. '<|end|>' → logprob: -3.679037094116211
    5. 'import' → logprob: -3.929037094116211
    6. 'newline' → logprob: -4.804037094116211
    7. '
' → logprob: -5.429037094116211
    8. '

' → logprob: -5.554037094116211
    9. '' → logprob: -5.554037094116211
    10. ',' → logprob: -5.554037094116211

Token 6: ' module' (ID: 8827)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.32507041096687317
    2. ' os' → logprob: -1.8250703811645508
    3. 'sys' → logprob: -2.450070381164551
    4. 'os' → logprob: -4.200070381164551
    5. ' module' → logprob: -5.325070381164551
    6. ' système' → logprob: -5.450070381164551
    7. ' system' → logprob: -5.575070381164551
    8. 'module' → logprob: -8.07507038116455
    9. ' ' → logprob: -8.20007038116455
    10. 's' → logprob: -8.20007038116455

Token 7: ' sys' (ID: 12228)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3390794098377228
    2. ' ' → logprob: -2.7140793800354004
    3. '' → logprob: -3.0890793800354004
    4. '\n' → logprob: -3.0890793800354004
    5. ',' → logprob: -3.2140793800354004
    6. '<|end|>' → logprob: -3.4640793800354004
    7. 'import' → logprob: -4.0890793800354
    8. '
' → logprob: -4.0890793800354
    9. '

' → logprob: -4.8390793800354
    10. '\' → logprob: -4.9640793800354

Token 8: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13197973370552063
    2. '\n' → logprob: -2.8819797039031982
    3. '
' → logprob: -4.381979942321777
    4. ' ' → logprob: -4.506979942321777
    5. '\' → logprob: -4.756979942321777
    6. '' → logprob: -4.881979942321777
    7. 'import' → logprob: -5.006979942321777
    8. 'newline' → logprob: -5.131979942321777
    9. '<|end|>' → logprob: -5.256979942321777
    10. ',' → logprob: -5.756979942321777

Token 9: ' accéder' (ID: 120555)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.492088258266449
    2. ' la' → logprob: -2.6170883178710938
    3. ' pouvoir' → logprob: -2.9920883178710938
    4. ' permettre' → logprob: -3.2420883178710938
    5. ' manip' → logprob: -3.2420883178710938
    6. ' accéder' → logprob: -3.3670883178710938
    7. 'l' → logprob: -3.6170883178710938
    8. ' récupérer' → logprob: -3.8670883178710938
    9. 'g' → logprob: -3.9920883178710938
    10. 'la' → logprob: -4.117088317871094

Token 10: ' aux' (ID: 5850)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.561790406703949
    2. ' aux' → logprob: -1.4367904663085938
    3. ' ' → logprob: -2.3117904663085938
    4. ' au' → logprob: -2.6867904663085938
    5. '.' → logprob: -4.686790466308594
    6. ' a' → logprob: -4.936790466308594
    7. ' .' → logprob: -5.936790466308594
    8. 'aux' → logprob: -6.186790466308594
    9. '  ' → logprob: -6.936790466308594
    10. 'au' → logprob: -7.311790466308594

Token 11: ' objets' (ID: 83726)
  Prédit: ' arguments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arguments' → logprob: -0.36852648854255676
    2. 'arguments' → logprob: -1.2435264587402344
    3. 'argv' → logprob: -5.743526458740234
    4. ' ' → logprob: -6.243526458740234
    5. 'param' → logprob: -6.243526458740234
    6. ' argv' → logprob: -6.243526458740234
    7. ' paramètres' → logprob: -6.243526458740234
    8. '_arguments' → logprob: -6.368526458740234
    9. 'argument' → logprob: -7.118526458740234
    10. '_' → logprob: -7.368526458740234

Token 12: ' liés' (ID: 100094)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0052076708525419235
    2. ' .' → logprob: -5.630207538604736
    3. 'import' → logprob: -7.380207538604736
    4. ',' → logprob: -8.505208015441895
    5. '<|end|>' → logprob: -8.505208015441895
    6. ' ' → logprob: -9.130208015441895
    7. '.import' → logprob: -9.505208015441895
    8. '.readline' → logprob: -9.630208015441895
    9. '```' → logprob: -10.255208015441895
    10. '<|end|>' → logprob: -10.255208015441895

Token 13: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.16567564010620117
    2. 'à' → logprob: -2.915675640106201
    3. '.' → logprob: -3.165675640106201
    4. 'au' → logprob: -4.165675640106201
    5. ' au' → logprob: -4.790675640106201
    6. ',' → logprob: -4.915675640106201
    7. ' ' → logprob: -5.040675640106201
    8. 'es' → logprob: -5.290675640106201
    9. ' a' → logprob: -5.540675640106201
    10. '  ' → logprob: -5.790675640106201

Token 14: ' système' (ID: 30034)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030090512707829475
    2. ' système' → logprob: -4.40509033203125
    3. 'system' → logprob: -5.15509033203125
    4. 'sys' → logprob: -5.40509033203125
    5. 'python' → logprob: -6.53009033203125
    6. 'f' → logprob: -6.65509033203125
    7. 'inter' → logprob: -6.65509033203125
    8. 'programme' → logprob: -7.40509033203125
    9. 'process' → logprob: -7.90509033203125
    10. 'Python' → logprob: -8.28009033203125

Token 15: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.719902753829956
    2. '
' → logprob: -1.344902753829956
    3. '' → logprob: -2.469902753829956
    4. '\n' → logprob: -2.594902753829956
    5. '

' → logprob: -3.594902753829956
    6. 'import' → logprob: -4.094902992248535
    7. ',' → logprob: -4.219902992248535
    8. ' ' → logprob: -4.594902992248535
    9. '\' → logprob: -5.094902992248535
    10. 'newline' → logprob: -5.594902992248535

Token 16: ' notamment' (ID: 31782)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1884856224060059
    2. ',' → logprob: -1.6884856224060059
    3. ' ' → logprob: -1.8134856224060059
    4. ' ,' → logprob: -1.9384856224060059
    5. '.' → logprob: -2.188485622406006
    6. ' .' → logprob: -3.813485622406006
    7. ' import' → logprob: -3.938485622406006
    8. ' os' → logprob: -4.063485622406006
    9. '<|end|>' → logprob: -5.313485622406006
    10. '  ' → logprob: -5.563485622406006

Token 17: ' les' (ID: 1341)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.28901126980781555
    2. ' ' → logprob: -2.289011240005493
    3. ' au' → logprob: -3.539011240005493
    4. '.' → logprob: -3.539011240005493
    5. ' .' → logprob: -4.164011478424072
    6. ' aux' → logprob: -4.289011478424072
    7. '  ' → logprob: -4.539011478424072
    8. 'à' → logprob: -4.789011478424072
    9. ' ,' → logprob: -4.914011478424072
    10. 'space' → logprob: -5.039011478424072

Token 18: ' flux' (ID: 36547)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.6338506937026978
    2. 'arguments' → logprob: -1.2588506937026978
    3. ' arguments' → logprob: -2.508850574493408
    4. 's' → logprob: -3.508850574493408
    5. ' argv' → logprob: -4.258850574493408
    6. 'f' → logprob: -4.508850574493408
    7. 'path' → logprob: -4.758850574493408
    8. 'argument' → logprob: -4.883850574493408
    9. 'process' → logprob: -5.508850574493408
    10. 'param' → logprob: -5.758850574493408

Token 19: ' d' (ID: 272)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6844506859779358
    2. '
' → logprob: -1.434450626373291
    3. '

' → logprob: -2.809450626373291
    4. '\n' → logprob: -2.934450626373291
    5. 'import' → logprob: -3.059450626373291
    6. '' → logprob: -3.184450626373291
    7. ',' → logprob: -3.559450626373291
    8. ' ' → logprob: -4.809450626373291
    9. '\' → logprob: -5.184450626373291
    10. '<|end|>' → logprob: -5.684450626373291

Token 20: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.321414053440094
    2. 'e' → logprob: -2.321413993835449
    3. ''entrée' → logprob: -2.571413993835449
    4. '_' → logprob: -3.071413993835449
    5. 'entr' → logprob: -4.321413993835449
    6. 'é' → logprob: -4.696413993835449
    7. ' ' → logprob: -4.821413993835449
    8. 's' → logprob: -5.696413993835449
    9. ' entr' → logprob: -5.696413993835449
    10. '`' → logprob: -6.071413993835449

Token 21: '/s' (ID: 5031)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5650797486305237
    2. ',' → logprob: -1.440079689025879
    3. '\' → logprob: -2.940079689025879
    4. '' → logprob: -2.940079689025879
    5. '\n' → logprob: -3.565079689025879
    6. '
' → logprob: -3.690079689025879
    7. ' ' → logprob: -4.565079689025879
    8. '#' → logprob: -4.815079689025879
    9. '

' → logprob: -5.190079689025879
    10. 'import' → logprob: -5.440079689025879

Token 22: 'ort' (ID: 390)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.135109081864357
    2. 'ort' → logprob: -2.7601091861724854
    3. 'or' → logprob: -3.8851091861724854
    4. 't' → logprob: -4.260108947753906
    5. '\' → logprob: -4.885108947753906
    6. 'orti' → logprob: -5.510108947753906
    7. 'ó' → logprob: -6.260108947753906
    8. '/' → logprob: -6.385108947753906
    9. 'ô' → logprob: -6.510108947753906
    10. 'é' → logprob: -6.885108947753906

Token 23: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.47504448890686035
    2. 'ie' → logprob: -0.9750444889068604
    3. 'ée' → logprob: -8.475044250488281
    4. 'ies' → logprob: -8.850044250488281
    5. 'es' → logprob: -8.975044250488281
    6. 'i' → logprob: -9.225044250488281
    7. 'é' → logprob: -9.350044250488281
    8. 'ue' → logprob: -9.850044250488281
    9. ' ie' → logprob: -9.850044250488281
    10. 'ee' → logprob: -9.975044250488281

Token 24: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.055421233177185
    2. '.' → logprob: -1.305421233177185
    3. '
' → logprob: -1.680421233177185
    4. '' → logprob: -2.3054213523864746
    5. '

' → logprob: -3.6804213523864746
    6. ',' → logprob: -3.8054213523864746
    7. '\' → logprob: -3.9304213523864746
    8. 'import' → logprob: -4.680421352386475
    9. ' ' → logprob: -5.430421352386475
    10. '#' → logprob: -5.805421352386475

Token 25: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6790649890899658
    2. '' → logprob: -1.8040649890899658
    3. '\n' → logprob: -2.054064989089966
    4. '

' → logprob: -2.679064989089966
    5. ',' → logprob: -3.179064989089966
    6. 'import' → logprob: -3.429064989089966
    7. ' ' → logprob: -3.929064989089966
    8. '#' → logprob: -4.554064750671387
    9. '.' → logprob: -4.679064750671387
    10. '\' → logprob: -4.929064750671387

Token 26: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019128151470795274
    2. '.' → logprob: -6.626912593841553
    3. ' (' → logprob: -8.001913070678711
    4. '()' → logprob: -8.751913070678711
    5. '(
' → logprob: -10.751913070678711
    6. '(.)' → logprob: -10.876913070678711
    7. ')' → logprob: -11.251913070678711
    8. '_' → logprob: -11.626913070678711
    9. '(

' → logprob: -12.001913070678711
    10. 's' → logprob: -12.376913070678711

Token 27: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07924644649028778
    2. 'sys' → logprob: -2.5792465209960938
    3. ' input' → logprob: -8.454246520996094
    4. 'input' → logprob: -9.079246520996094
    5. ' ' → logprob: -10.829246520996094
    6. '	sys' → logprob: -12.579246520996094
    7. ' lambda' → logprob: -13.079246520996094
    8. '(sys' → logprob: -13.079246520996094
    9. '=sys' → logprob: -14.079246520996094
    10. 'lambda' → logprob: -14.579246520996094

Token 28: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.528953492641449
    2. '.stdin' → logprob: -0.903953492641449
    3. ' .' → logprob: -5.903953552246094
    4. '.stdout' → logprob: -6.028953552246094
    5. '.input' → logprob: -8.153953552246094
    6. '.argv' → logprob: -8.403953552246094
    7. '.readline' → logprob: -9.778953552246094
    8. '.std' → logprob: -10.028953552246094
    9. '.stderr' → logprob: -10.903953552246094
    10. '.standard' → logprob: -12.153953552246094

Token 29: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4750877022743225
    2. '.' → logprob: -1.1000876426696777
    3. '.read' → logprob: -3.1000876426696777
    4. '.readlines' → logprob: -9.225088119506836
    5. ' .' → logprob: -9.600088119506836
    6. 'read' → logprob: -10.100088119506836
    7. '.Read' → logprob: -10.475088119506836
    8. '.write' → logprob: -11.725088119506836
    9. '<|end|>' → logprob: -11.975088119506836
    10. '.\' → logprob: -12.600088119506836

Token 30: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08024270832538605
    2. '(' → logprob: -2.58024263381958
    3. '(
' → logprob: -7.33024263381958
    4. ')' → logprob: -8.205243110656738
    5. '()
' → logprob: -8.455243110656738
    6. ' ()' → logprob: -9.830243110656738
    7. '(

' → logprob: -10.330243110656738
    8. '#' → logprob: -10.455243110656738
    9. '
' → logprob: -11.080243110656738
    10. '()\' → logprob: -11.205243110656738

Token 31: ' Red' (ID: 5952)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21216771006584167
    2. 'input' → logprob: -2.212167739868164
    3. ' input' → logprob: -2.837167739868164
    4. ' readline' → logprob: -4.837167739868164
    5. '()' → logprob: -6.087167739868164
    6. '  ' → logprob: -6.462167739868164
    7. ' read' → logprob: -6.587167739868164
    8. 'read' → logprob: -6.712167739868164
    9. 'replace' → logprob: -7.212167739868164
    10. 'rstrip' → logprob: -7.337167739868164

Token 32: 'é' (ID: 377)
  Prédit: 'irection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irection' → logprob: -0.5815587639808655
    2. 'ef' → logprob: -1.2065587043762207
    3. 'irect' → logprob: -2.2065587043762207
    4. 'ir' → logprob: -4.581558704376221
    5. 'efined' → logprob: -4.831558704376221
    6. 'é' → logprob: -4.831558704376221
    7. 'éf' → logprob: -6.081558704376221
    8. 'e' → logprob: -6.831558704376221
    9. 'uction' → logprob: -8.206559181213379
    10. 'irected' → logprob: -8.706559181213379

Token 33: 'fin' (ID: 6994)
  Prédit: 'fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.006114243995398283
    2. 'f' → logprob: -5.2561140060424805
    3. 'é' → logprob: -9.00611400604248
    4. 'claration' → logprob: -9.00611400604248
    5. 'FINITION' → logprob: -9.13111400604248
    6. 'inition' → logprob: -9.50611400604248
    7. ' finition' → logprob: -9.50611400604248
    8. 'fine' → logprob: -10.00611400604248
    9. 'ef' → logprob: -10.13111400604248
    10. 'definition' → logprob: -10.13111400604248

Token 34: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.27146944403648376
    2. 'inir' → logprob: -1.7714694738388062
    3. 'ition' → logprob: -2.7714693546295166
    4. 'ir' → logprob: -5.521469593048096
    5. 'init' → logprob: -8.271469116210938
    6. 'in' → logprob: -8.396469116210938
    7. 'é' → logprob: -8.896469116210938
    8. 'fin' → logprob: -9.271469116210938
    9. 'ini' → logprob: -9.271469116210938
    10. 'initions' → logprob: -10.021469116210938

Token 35: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04184954613447189
    2. '(
' → logprob: -3.9168496131896973
    3. '(input' → logprob: -4.666849613189697
    4. ' ' → logprob: -5.291849613189697
    5. ' (' → logprob: -5.666849613189697
    6. 'input' → logprob: -6.791849613189697
    7. '()' → logprob: -7.791849613189697
    8. ')' → logprob: -8.416849136352539
    9. '\' → logprob: -8.541849136352539
    10. ' des' → logprob: -8.666849136352539

Token 36: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0463231801986694
    2. ' input' → logprob: -1.1713231801986694
    3. 'input' → logprob: -1.1713231801986694
    4. ' l' → logprob: -4.171323299407959
    5. ' la' → logprob: -5.546323299407959
    6. '(input' → logprob: -5.796323299407959
    7. 'l' → logprob: -5.796323299407959
    8. 's' → logprob: -6.546323299407959
    9. '=input' → logprob: -7.296323299407959
    10. ' ' → logprob: -8.5463228225708

Token 37: ' fonction' (ID: 17610)
  Prédit: ' fonction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.11445040255784988
    2. ' function' → logprob: -3.364450454711914
    3. 'fonction' → logprob: -3.864450454711914
    4. ' input' → logprob: -4.239450454711914
    5. ' ' → logprob: -4.489450454711914
    6. 'input' → logprob: -4.739450454711914
    7. ' variable' → logprob: -4.989450454711914
    8. 'entrée' → logprob: -5.614450454711914
    9. ' méthode' → logprob: -5.864450454711914
    10. ' lecture' → logprob: -6.864450454711914

Token 38: ' input' (ID: 3422)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01700323261320591
    2. '(input' → logprob: -4.892003059387207
    3. 'input' → logprob: -5.517003059387207
    4. '(
' → logprob: -5.892003059387207
    5. ' (' → logprob: -6.767003059387207
    6. ' ' → logprob: -7.142003059387207
    7. ' input' → logprob: -8.392003059387207
    8. '()' → logprob: -9.517003059387207
    9. '(

' → logprob: -9.767003059387207
    10. '=input' → logprob: -9.892003059387207

Token 39: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.35676586627960205
    2. '(' → logprob: -1.231765866279602
    3. '(
' → logprob: -5.6067657470703125
    4. '\n' → logprob: -6.7317657470703125
    5. '()
' → logprob: -6.9817657470703125
    6. '
' → logprob: -7.7317657470703125
    7. '(

' → logprob: -7.7317657470703125
    8. '()

' → logprob: -7.8567657470703125
    9. ')' → logprob: -7.9817657470703125
    10. '

' → logprob: -8.731765747070312

Token 40: ' utiliser' (ID: 43227)
  Prédit: ' lire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.3466128408908844
    2. ' optimiser' → logprob: -2.8466129302978516
    3. 'l' → logprob: -3.3466129302978516
    4. 'optim' → logprob: -3.4716129302978516
    5. ' permettre' → logprob: -3.4716129302978516
    6. ' améliorer' → logprob: -3.5966129302978516
    7. ' faciliter' → logprob: -3.8466129302978516
    8. ' optim' → logprob: -4.096612930297852
    9. ' une' → logprob: -4.471612930297852
    10. ' read' → logprob: -4.846612930297852

Token 41: ' la' (ID: 557)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.644997239112854
    2. ' sys' → logprob: -0.894997239112854
    3. 'input' → logprob: -3.5199971199035645
    4. ' input' → logprob: -4.3949971199035645
    5. 'l' → logprob: -5.3949971199035645
    6. '()' → logprob: -5.3949971199035645
    7. '(sys' → logprob: -5.5199971199035645
    8. ' la' → logprob: -6.2699971199035645
    9. ' l' → logprob: -6.2699971199035645
    10. ' readline' → logprob: -6.6449971199035645

Token 42: ' méthode' (ID: 71490)
  Prédit: ' lecture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lecture' → logprob: -1.2135233879089355
    2. '.readline' → logprob: -1.4635233879089355
    3. ' readline' → logprob: -1.5885233879089355
    4. ' méthode' → logprob: -2.2135233879089355
    5. ' input' → logprob: -3.4635233879089355
    6. ' ligne' → logprob: -3.8385233879089355
    7. ' fonction' → logprob: -3.8385233879089355
    8. ' meilleure' → logprob: -4.7135233879089355
    9. ' stdin' → logprob: -4.9635233879089355
    10. ' ' → logprob: -4.9635233879089355

Token 43: ' readline' (ID: 179561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04345470666885376
    2. '.readline' → logprob: -4.168454647064209
    3. '()' → logprob: -4.668454647064209
    4. 'input' → logprob: -5.043454647064209
    5. 'sys' → logprob: -5.668454647064209
    6. 'read' → logprob: -6.043454647064209
    7. ' readline' → logprob: -6.668454647064209
    8. ' ' → logprob: -7.293454647064209
    9. ' (' → logprob: -7.293454647064209
    10. '(
' → logprob: -7.418454647064209

Token 44: ' plus' (ID: 2932)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23673385381698608
    2. '(' → logprob: -2.611733913421631
    3. '

' → logprob: -3.111733913421631
    4. '\n' → logprob: -3.611733913421631
    5. '()' → logprob: -4.236733913421631
    6. '(
' → logprob: -4.611733913421631
    7. '#' → logprob: -4.986733913421631
    8. '' → logprob: -5.361733913421631
    9. ' 
' → logprob: -5.486733913421631
    10. '\' → logprob: -5.736733913421631

Token 45: ' rapide' (ID: 44887)
  Prédit: ' rapide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rapide' → logprob: -0.5039336681365967
    2. ' efficace' → logprob: -1.6289336681365967
    3. 'rap' → logprob: -1.8789336681365967
    4. ' perform' → logprob: -3.3789336681365967
    5. 'perform' → logprob: -5.253933906555176
    6. ' effic' → logprob: -5.878933906555176
    7. ' efficient' → logprob: -6.753933906555176
    8. ' rapides' → logprob: -7.253933906555176
    9. ' eficiente' → logprob: -7.503933906555176
    10. 'efficient' → logprob: -7.503933906555176

Token 46: ' sur' (ID: 1512)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2141059935092926
    2. '

' → logprob: -1.8391059637069702
    3. '' → logprob: -4.83910608291626
    4. '\n' → logprob: -5.08910608291626
    5. '


' → logprob: -5.83910608291626
    6. '(' → logprob: -5.83910608291626
    7. '#' → logprob: -6.08910608291626
    8. '
' → logprob: -6.33910608291626
    9. 'def' → logprob: -6.33910608291626
    10. '\' → logprob: -6.83910608291626

Token 47: ' l' (ID: 305)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2915472388267517
    2. 'sys' → logprob: -2.2915472984313965
    3. '(sys' → logprob: -3.1665472984313965
    4. '()' → logprob: -3.4165472984313965
    5. ' les' → logprob: -3.9165472984313965
    6. ' stdin' → logprob: -4.4165472984313965
    7. ' la' → logprob: -4.5415472984313965
    8. 'stdin' → logprob: -4.5415472984313965
    9. ' l' → logprob: -5.0415472984313965
    10. ' le' → logprob: -5.5415472984313965

Token 48: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6036394834518433
    2. 'es' → logprob: -1.6036394834518433
    3. ''entrée' → logprob: -1.8536394834518433
    4. 'e' → logprob: -3.228639602661133
    5. ''' → logprob: -3.603639602661133
    6. 'input' → logprob: -5.228639602661133
    7. ''a' → logprob: -5.603639602661133
    8. ''ensemble' → logprob: -5.728639602661133
    9. ''import' → logprob: -5.853639602661133
    10. 'sys' → logprob: -6.228639602661133

Token 49: ' standard' (ID: 7024)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8123869299888611
    2. '\n' → logprob: -1.0623869895935059
    3. '\' → logprob: -2.687386989593506
    4. '#' → logprob: -3.437386989593506
    5. '

' → logprob: -3.812386989593506
    6. ' ' → logprob: -3.812386989593506
    7. '' → logprob: -4.562386989593506
    8. '(' → logprob: -4.812386989593506
    9. 'def' → logprob: -5.187386989593506
    10. '()' → logprob: -5.312386989593506

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27558863162994385
    2. '

' → logprob: -2.4005885124206543
    3. '' → logprob: -3.2755885124206543
    4. '\n' → logprob: -3.4005885124206543
    5. '#' → logprob: -3.5255885124206543
    6. '\' → logprob: -4.525588512420654
    7. 'def' → logprob: -4.775588512420654
    8. '(' → logprob: -5.275588512420654
    9. '()' → logprob: -5.525588512420654
    10. '(
' → logprob: -5.650588512420654

Token 51: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38556790351867676
    2. '#' → logprob: -2.2605679035186768
    3. '\n' → logprob: -2.5105679035186768
    4. '

' → logprob: -3.0105679035186768
    5. '' → logprob: -3.5105679035186768
    6. '\' → logprob: -4.885567665100098
    7. '(' → logprob: -4.885567665100098
    8. ' ' → logprob: -5.010567665100098
    9. 'def' → logprob: -5.010567665100098
    10. '<|end|>' → logprob: -5.510567665100098

Token 52: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00045593673712573946
    2. ' math' → logprob: -8.250455856323242
    3. ' collections' → logprob: -9.500455856323242
    4. 'os' → logprob: -10.000455856323242
    5. ' sys' → logprob: -10.250455856323242
    6. ' io' → logprob: -11.000455856323242
    7. ' re' → logprob: -11.625455856323242
    8. ' itertools' → logprob: -12.000455856323242
    9. ' random' → logprob: -12.500455856323242
    10. ' json' → logprob: -13.875455856323242

Token 53: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.512236498361744e-07
    2. 'queue' → logprob: -14.500000953674316
    3. ' queue' → logprob: -17.625
    4. '_queue' → logprob: -18.875
    5. 'Queue' → logprob: -19.5
    6. 't' → logprob: -19.5
    7. 'n' → logprob: -20.25
    8. 'que' → logprob: -20.625
    9. 'u' → logprob: -20.625
    10. 'p' → logprob: -20.75

Token 54: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2567506730556488
    2. '

' → logprob: -3.1317505836486816
    3. '#' → logprob: -3.5067505836486816
    4. '<|end|>' → logprob: -3.7567505836486816
    5. 'import' → logprob: -3.8817505836486816
    6. ' 

' → logprob: -3.8817505836486816
    7. '' → logprob: -4.131750583648682
    8. '\n' → logprob: -4.131750583648682
    9. ' ' → logprob: -4.506750583648682
    10. ' 
' → logprob: -4.631750583648682

Token 55: ' Import' (ID: 19998)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5334393382072449
    2. ' ' → logprob: -0.9084393382072449
    3. 'import' → logprob: -5.2834391593933105
    4. ' heap' → logprob: -5.5334391593933105
    5. ' ' → logprob: -7.2834391593933105
    6. ' #' → logprob: -8.908439636230469
    7. ' from' → logprob: -9.283439636230469
    8. ' ﻿' → logprob: -10.283439636230469
    9. ' Import' → logprob: -10.283439636230469
    10. ' space' → logprob: -10.408439636230469

Token 56: 'ation' (ID: 387)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0045851110480725765
    2. ' #' → logprob: -6.629585266113281
    3. 'import' → logprob: -6.754585266113281
    4. '#' → logprob: -7.254585266113281
    5. 'er' → logprob: -7.754585266113281
    6. 'ation' → logprob: -8.129585266113281
    7. ' import' → logprob: -8.754585266113281
    8. 'lib' → logprob: -9.129585266113281
    9. 'ing' → logprob: -9.629585266113281
    10. 'queue' → logprob: -10.254585266113281

Token 57: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13982902467250824
    2. '<|end|>' → logprob: -2.13982892036438
    3. ' heap' → logprob: -5.014829158782959
    4. ' de' → logprob: -6.014829158782959
    5. '<|end|>' → logprob: -6.889829158782959
    6. '  ' → logprob: -7.014829158782959
    7. ' ' → logprob: -8.1398286819458
    8. ' des' → logprob: -8.1398286819458
    9. '(heap' → logprob: -8.7648286819458
    10. 'heap' → logprob: -9.0148286819458

Token 58: ' module' (ID: 8827)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.10354992747306824
    2. ' module' → logprob: -3.1035499572753906
    3. ' ' → logprob: -3.2285499572753906
    4. ' space' → logprob: -4.603549957275391
    5. 'heap' → logprob: -6.603549957275391
    6. ' collections' → logprob: -7.353549957275391
    7. ' queue' → logprob: -7.978549957275391
    8. ' sys' → logprob: -8.10354995727539
    9. 'space' → logprob: -8.35354995727539
    10. '  ' → logprob: -8.60354995727539

Token 59: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.5021706819534302
    2. ' ' → logprob: -1.1271706819534302
    3. 'heap' → logprob: -2.8771705627441406
    4. '<|end|>' → logprob: -4.627170562744141
    5. '.heap' → logprob: -6.252170562744141
    6. '(heap' → logprob: -7.252170562744141
    7. ' ' → logprob: -7.627170562744141
    8. '  ' → logprob: -7.752170562744141
    9. '_heap' → logprob: -8.00217056274414
    10. ' collections' → logprob: -8.87717056274414

Token 60: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0002545448951423168
    2. '#' → logprob: -8.75025463104248
    3. 'queue' → logprob: -9.62525463104248
    4. ' queue' → logprob: -11.62525463104248
    5. ' #' → logprob: -11.87525463104248
    6. '_queue' → logprob: -12.00025463104248
    7. '<|end|>' → logprob: -13.00025463104248
    8. 'Queue' → logprob: -13.75025463104248
    9. '
' → logprob: -14.75025463104248
    10. '큐' → logprob: -14.87525463104248

Token 61: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' utiliser' (ID: 43227)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.06655530631542206
    2. ' manip' → logprob: -3.4415552616119385
    3. ' utiliser' → logprob: -4.191555500030518
    4. ' la' → logprob: -4.316555500030518
    5. ' l' → logprob: -6.066555500030518
    6. ' gestion' → logprob: -8.31655502319336
    7. ' ' → logprob: -8.44155502319336
    8. 'l' → logprob: -8.69155502319336
    9. 'g' → logprob: -8.69155502319336
    10. 'util' → logprob: -9.06655502319336

Token 63: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0614869594573975
    2. ' des' → logprob: -1.6864869594573975
    3. ' une' → logprob: -1.6864869594573975
    4. ' la' → logprob: -1.6864869594573975
    5. ' le' → logprob: -3.3114869594573975
    6. ' ' → logprob: -4.061487197875977
    7. ' l' → logprob: -4.311487197875977
    8. ' un' → logprob: -5.061487197875977
    9. ' priority' → logprob: -5.561487197875977
    10. 'des' → logprob: -5.811487197875977

Token 64: ' files' (ID: 6291)
  Prédit: ' files'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' files' → logprob: -1.052058219909668
    2. ' structures' → logprob: -1.177058219909668
    3. ' file' → logprob: -1.677058219909668
    4. ' tas' → logprob: -2.677058219909668
    5. 'tas' → logprob: -4.052058219909668
    6. ' fonctions' → logprob: -4.177058219909668
    7. 'p' → logprob: -4.677058219909668
    8. 'structures' → logprob: -4.677058219909668
    9. 'file' → logprob: -5.052058219909668
    10. ' queues' → logprob: -5.302058219909668

Token 65: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.49368610978126526
    2. ' de' → logprob: -1.4936860799789429
    3. 'd' → logprob: -2.3686861991882324
    4. '_priority' → logprob: -3.4936861991882324
    5. 'de' → logprob: -3.7436861991882324
    6. '_' → logprob: -5.493686199188232
    7. '_de' → logprob: -6.243686199188232
    8. 's' → logprob: -6.368686199188232
    9. '_prior' → logprob: -6.368686199188232
    10. '<|end|>' → logprob: -6.493686199188232

Token 66: ' priorité' (ID: 150252)
  Prédit: 'prior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prior' → logprob: -0.030649526044726372
    2. ' priorité' → logprob: -4.030649662017822
    3. ' prior' → logprob: -5.030649662017822
    4. 'priority' → logprob: -5.280649662017822
    5. ' priority' → logprob: -8.405649185180664
    6. 'pri' → logprob: -8.530649185180664
    7. 'prio' → logprob: -8.905649185180664
    8. '```' → logprob: -9.530649185180664
    9. '_prior' → logprob: -9.780649185180664
    10. 'Prior' → logprob: -10.030649185180664

Token 67: ' (' (ID: 350)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5858217477798462
    2. '
' → logprob: -0.8358217477798462
    3. '<|end|>' → logprob: -5.460821628570557
    4. '


' → logprob: -6.460821628570557
    5. '#' → logprob: -7.085821628570557
    6. '' → logprob: -7.335821628570557
    7. '
' → logprob: -7.460821628570557
    8. '\n' → logprob: -7.960821628570557
    9. '<|end|>' → logprob: -7.960821628570557
    10. '



' → logprob: -8.335822105407715

Token 68: 'tas' (ID: 34419)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.168877974152565
    2. ' )' → logprob: -1.9188779592514038
    3. ' priority' → logprob: -6.668878078460693
    4. ',' → logprob: -6.668878078460693
    5. 'priority' → logprob: -7.043878078460693
    6. ').' → logprob: -7.168878078460693
    7. ' ' → logprob: -7.543878078460693
    8. 'he' → logprob: -8.043877601623535
    9. ' en' → logprob: -8.293877601623535
    10. ' la' → logprob: -8.418877601623535

Token 69: ' b' (ID: 287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029975546058267355
    2. ' )' → logprob: -5.877997398376465
    3. 'priority' → logprob: -9.877997398376465
    4. ' priority' → logprob: -10.377997398376465
    5. ').' → logprob: -10.752997398376465
    6. ')
' → logprob: -11.252997398376465
    7. '`)' → logprob: -11.252997398376465
    8. 's' → logprob: -11.502997398376465
    9. ',' → logprob: -11.502997398376465
    10. 'q' → logprob: -12.252997398376465

Token 70: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.9020043015480042
    2. 'in' → logprob: -1.0270042419433594
    3. 'inary' → logprob: -1.9020042419433594
    4. ')' → logprob: -3.7770042419433594
    5. 'i' → logprob: -3.7770042419433594
    6. 'inar' → logprob: -4.527004241943359
    7. 'ina' → logprob: -5.152004241943359
    8. '```' → logprob: -5.152004241943359
    9. 'inaries' → logprob: -5.777004241943359
    10. 'y' → logprob: -6.402004241943359

Token 71: '/min' (ID: 62483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004493805463425815
    2. ' )' → logprob: -8.375449180603027
    3. ')
' → logprob: -9.125449180603027
    4. 'import' → logprob: -10.750449180603027
    5. ')

' → logprob: -11.125449180603027
    6. ')\' → logprob: -11.250449180603027
    7. ')
' → logprob: -11.250449180603027
    8. '#' → logprob: -11.375449180603027
    9. ').' → logprob: -11.750449180603027
    10. '```' → logprob: -12.375449180603027

Token 72: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9154194593429565
    2. 'heap' → logprob: -0.9154194593429565
    3. 'imum' → logprob: -2.165419578552246
    4. ')' → logprob: -2.915419578552246
    5. 'im' → logprob: -4.040419578552246
    6. 'q' → logprob: -5.790419578552246
    7. 't' → logprob: -6.540419578552246
    8. ' heap' → logprob: -6.915419578552246
    9. '_heap' → logprob: -7.040419578552246
    10. '' → logprob: -7.165419578552246

Token 73: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.001397260813973844
    2. 'queue' → logprob: -8.126397132873535
    3. 'imum' → logprob: -8.501397132873535
    4. ')' → logprob: -8.876397132873535
    5. ' heap' → logprob: -8.876397132873535
    6. '_heap' → logprob: -8.876397132873535
    7. 'q' → logprob: -9.126397132873535
    8. 'que' → logprob: -9.501397132873535
    9. '```' → logprob: -9.626397132873535
    10. 'he' → logprob: -9.626397132873535

Token 74: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006438109558075666
    2. ')
' → logprob: -7.750643730163574
    3. ' )' → logprob: -9.250643730163574
    4. ')

' → logprob: -9.375643730163574
    5. ')
' → logprob: -11.625643730163574
    6. '#' → logprob: -12.250643730163574
    7. 'import' → logprob: -12.750643730163574
    8. '")' → logprob: -13.250643730163574
    9. '
' → logprob: -13.375643730163574
    10. ')

' → logprob: -13.375643730163574

Token 75: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5254637002944946
    2. 'def' → logprob: -2.025463581085205
    3. '#' → logprob: -2.275463581085205
    4. '
' → logprob: -2.900463581085205
    5. 'class' → logprob: -3.150463581085205
    6. '\n' → logprob: -3.900463581085205
    7. '\' → logprob: -4.025463581085205
    8. 'd' → logprob: -4.275463581085205
    9. '' → logprob: -4.775463581085205
    10. 'a' → logprob: -4.900463581085205

Token 76: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006557517219334841
    2. '_' → logprob: -5.631557464599609
    3. ' ' → logprob: -6.756557464599609
    4. ' a' → logprob: -7.131557464599609
    5. ' space' → logprob: -8.38155746459961
    6. ' ```' → logprob: -8.75655746459961
    7. '  ' → logprob: -9.00655746459961
    8. ' main' → logprob: -9.50655746459961
    9. ' ‌' → logprob: -10.00655746459961
    10. ' `' → logprob: -10.00655746459961

Token 77: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.18022197484970093
    2. 'ijk' → logprob: -2.3052220344543457
    3. 'ij' → logprob: -2.9302220344543457
    4. 'i' → logprob: -5.180222034454346
    5. 'e' → logprob: -5.555222034454346
    6. 'jik' → logprob: -6.555222034454346
    7. '```' → logprob: -7.930222034454346
    8. 'j' → logprob: -9.055221557617188
    9. '_' → logprob: -9.305221557617188
    10. 'ijks' → logprob: -9.555221557617188

Token 78: '(edge' (ID: 84023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001126026691053994
    2. '_' → logprob: -9.375112533569336
    3. ' (' → logprob: -11.500112533569336
    4. '_(' → logprob: -12.250112533569336
    5. '(
' → logprob: -12.875112533569336
    6. '(

' → logprob: -13.000112533569336
    7. '(_' → logprob: -13.250112533569336
    8. '('' → logprob: -14.500112533569336
    9. '(node' → logprob: -15.250112533569336
    10. '(`' → logprob: -15.250112533569336

Token 79: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0013101210352033377
    2. '_list' → logprob: -7.501310348510742
    3. '(s' → logprob: -7.876310348510742
    4. ')' → logprob: -8.626310348510742
    5. ')s' → logprob: -10.376310348510742
    6. ',' → logprob: -10.626310348510742
    7. ' s' → logprob: -10.751310348510742
    8. '_s' → logprob: -10.751310348510742
    9. '):' → logprob: -10.751310348510742
    10. '(' → logprob: -10.751310348510742

Token 80: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3547971248626709
    2. ' start' → logprob: -1.354797124862671
    3. 'source' → logprob: -4.72979736328125
    4. 's' → logprob: -4.72979736328125
    5. ' n' → logprob: -5.22979736328125
    6. 'n' → logprob: -5.35479736328125
    7. ' source' → logprob: -5.60479736328125
    8. 'src' → logprob: -5.60479736328125
    9. ' s' → logprob: -5.85479736328125
    10. 'dist' → logprob: -7.10479736328125

Token 81: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3139550983905792
    2. '):' → logprob: -1.3139550685882568
    3. ' ,' → logprob: -8.188955307006836
    4. ' ):' → logprob: -8.313955307006836
    5. ')' → logprob: -9.688955307006836
    6. '):
' → logprob: -9.938955307006836
    7. '):
' → logprob: -11.063955307006836
    8. ':' → logprob: -11.438955307006836
    9. '_nodes' → logprob: -11.688955307006836
    10. '```' → logprob: -12.438955307006836

Token 82: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.05492103099823
    2. '   ' → logprob: -1.30492103099823
    3. ' distances' → logprob: -1.42992103099823
    4. ' dist' → logprob: -2.6799211502075195
    5. '	dist' → logprob: -2.9299211502075195
    6. 'distance' → logprob: -4.6799211502075195
    7. ' ' → logprob: -5.9299211502075195
    8. '_dist' → logprob: -6.0549211502075195
    9. ' distance' → logprob: -6.4299211502075195
    10. 'Distances' → logprob: -7.0549211502075195

Token 83: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8239986300468445
    2. ' n' → logprob: -1.5739986896514893
    3. ' dist' → logprob: -1.9489986896514893
    4. '   ' → logprob: -2.6989986896514893
    5. ' distances' → logprob: -2.8239986896514893
    6. 'n' → logprob: -2.9489986896514893
    7. 'import' → logprob: -4.44899845123291
    8. 'distance' → logprob: -4.82399845123291
    9. ' distance' → logprob: -5.57399845123291
    10. ' import' → logprob: -5.94899845123291

Token 84: ' Cette' (ID: 27383)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.781010627746582
    2. '   ' → logprob: -1.156010627746582
    3. ' dist' → logprob: -2.656010627746582
    4. 'n' → logprob: -2.656010627746582
    5. ' n' → logprob: -3.156010627746582
    6. ' distances' → logprob: -3.656010627746582
    7. 'distance' → logprob: -4.656010627746582
    8. 'import' → logprob: -5.656010627746582
    9. ' distance' → logprob: -6.406010627746582
    10. ' ' → logprob: -7.156010627746582

Token 85: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1285412609577179
    2. '   ' → logprob: -2.7535412311553955
    3. '_' → logprob: -4.128541469573975
    4. '  ' → logprob: -5.003541469573975
    5. '_distance' → logprob: -5.003541469573975
    6. ':' → logprob: -5.378541469573975
    7. '_queue' → logprob: -5.503541469573975
    8. ' =' → logprob: -6.003541469573975
    9. 'distance' → logprob: -6.378541469573975
    10. 'def' → logprob: -6.628541469573975

Token 86: ' impl' (ID: 15443)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3058363199234009
    2. '   ' → logprob: -1.6808363199234009
    3. ' ' → logprob: -1.8058363199234009
    4. ' dist' → logprob: -2.5558362007141113
    5. ' est' → logprob: -2.9308362007141113
    6. ' calculates' → logprob: -3.1808362007141113
    7. ' distances' → logprob: -3.3058362007141113
    8. ' :' → logprob: -3.8058362007141113
    9. ' a' → logprob: -3.8058362007141113
    10. ' implements' → logprob: -4.555836200714111

Token 87: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.22273054718971252
    2. 'ément' → logprob: -1.8477305173873901
    3. 'emente' → logprob: -3.4727306365966797
    4. 'ement' → logprob: -4.84773063659668
    5. 'ements' → logprob: -6.84773063659668
    6. 'éments' → logprob: -7.34773063659668
    7. 'mente' → logprob: -7.72273063659668
    8. 'ique' → logprob: -8.47273063659668
    9. 'ém' → logprob: -9.09773063659668
    10. '#' → logprob: -9.97273063659668

Token 88: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.015270610339939594
    2. 'ment' → logprob: -4.265270709991455
    3. 'mentation' → logprob: -7.265270709991455
    4. 'ments' → logprob: -9.515270233154297
    5. 'me' → logprob: -9.640270233154297
    6. 'mented' → logprob: -9.765270233154297
    7. 'm' → logprob: -10.515270233154297
    8. '```' → logprob: -10.515270233154297
    9. 'men' → logprob: -10.640270233154297
    10. '#' → logprob: -11.265270233154297

Token 89: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.07214999943971634
    2. ' ' → logprob: -3.0721499919891357
    3. 'l' → logprob: -3.8221499919891357
    4. ' d' → logprob: -7.822150230407715
    5. ' un' → logprob: -7.947150230407715
    6. ' la' → logprob: -8.822150230407715
    7. '	l' → logprob: -9.072150230407715
    8. 'd' → logprob: -9.197150230407715
    9. '   ' → logprob: -9.572150230407715
    10. '  ' → logprob: -9.947150230407715

Token 90: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1765219122171402
    2. 'e' → logprob: -1.926521897315979
    3. ''é' → logprob: -4.9265217781066895
    4. 'a' → logprob: -5.1765217781066895
    5. ' '' → logprob: -6.5515217781066895
    6. ''espace' → logprob: -7.9265217781066895
    7. 'é' → logprob: -8.551522254943848
    8. ''e' → logprob: -8.676522254943848
    9. ''application' → logprob: -8.801522254943848
    10. '   ' → logprob: -8.801522254943848

Token 91: 'alg' (ID: 15258)
  Prédit: 'alg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alg' → logprob: -0.1706719845533371
    2. ''' → logprob: -2.0456719398498535
    3. ' alg' → logprob: -4.5456719398498535
    4. 'algorithm' → logprob: -4.7956719398498535
    5. 'algo' → logprob: -5.6706719398498535
    6. 'a' → logprob: -6.0456719398498535
    7. ' algorithm' → logprob: -7.0456719398498535
    8. '’' → logprob: -7.9206719398498535
    9. ''al' → logprob: -7.9206719398498535
    10. '_alg' → logprob: -8.045672416687012

Token 92: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.08004840463399887
    2. 'o' → logprob: -2.8300483226776123
    3. 'orithm' → logprob: -4.455048561096191
    4. 'or' → logprob: -5.455048561096191
    5. 'orit' → logprob: -7.705048561096191
    6. '```' → logprob: -8.205048561096191
    7. ' or' → logprob: -8.455048561096191
    8. 'о' → logprob: -9.080048561096191
    9. 'ori' → logprob: -9.205048561096191
    10. 'orithms' → logprob: -9.330048561096191

Token 93: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.0015074820257723331
    2. 'm' → logprob: -6.62650728225708
    3. 'e' → logprob: -8.751507759094238
    4. 'mes' → logprob: -12.376507759094238
    5. 'd' → logprob: -12.626507759094238
    6. ' me' → logprob: -12.876507759094238
    7. '1' → logprob: -13.626507759094238
    8. 't' → logprob: -13.751507759094238
    9. 'Me' → logprob: -13.876507759094238
    10. 'ме' → logprob: -13.876507759094238

Token 94: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.06543152779340744
    2. ' ' → logprob: -3.440431594848633
    3. 'de' → logprob: -4.065431594848633
    4. ' d' → logprob: -4.815431594848633
    5. 'd' → logprob: -5.690431594848633
    6. '   ' → logprob: -6.940431594848633
    7. '  ' → logprob: -7.315431594848633
    8. '_' → logprob: -7.815431594848633
    9. ' des' → logprob: -9.440431594848633
    10. ' complet' → logprob: -9.565431594848633

Token 95: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.09761638194322586
    2. 'D' → logprob: -2.97261643409729
    3. 'd' → logprob: -4.347616195678711
    4. ' d' → logprob: -4.597616195678711
    5. ' plus' → logprob: -4.597616195678711
    6. ' Dj' → logprob: -5.097616195678711
    7. 'plus' → logprob: -7.097616195678711
    8. '```' → logprob: -7.097616195678711
    9. ' ' → logprob: -9.097616195678711
    10. 'l' → logprob: -9.347616195678711

Token 96: 'ijkstra' (ID: 124290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01108967512845993
    2. 'ij' → logprob: -4.88608980178833
    3. 'ijkstra' → logprob: -6.38608980178833
    4. 'ijk' → logprob: -7.01108980178833
    5. '```' → logprob: -8.886089324951172
    6. ''i' → logprob: -9.261089324951172
    7. 'í' → logprob: -9.386089324951172
    8. 'і' → logprob: -9.886089324951172
    9. 'ik' → logprob: -10.261089324951172
    10. ''' → logprob: -10.261089324951172

Token 97: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5657934546470642
    2. ' ' → logprob: -1.565793514251709
    3. ':' → logprob: -2.315793514251709
    4. '(' → logprob: -2.690793514251709
    5. ' :' → logprob: -3.815793514251709
    6. ',' → logprob: -4.815793514251709
    7. ' (' → logprob: -4.815793514251709
    8. '  ' → logprob: -5.565793514251709
    9. '(
' → logprob: -5.940793514251709
    10. '(space' → logprob: -6.315793514251709

Token 98: ' trouver' (ID: 23195)
  Prédit: ' trouver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.583787739276886
    2. ' calcul' → logprob: -0.833787739276886
    3. ' déterminer' → logprob: -5.45878791809082
    4. ' ' → logprob: -6.95878791809082
    5. 'calcul' → logprob: -7.45878791809082
    6. ' calc' → logprob: -7.45878791809082
    7. '   ' → logprob: -8.45878791809082
    8. ' find' → logprob: -8.70878791809082
    9. ' calcular' → logprob: -9.58378791809082
    10. ' trou' → logprob: -9.58378791809082

Token 99: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6478656530380249
    2. ' le' → logprob: -1.022865653038025
    3. ' les' → logprob: -2.8978657722473145
    4. ' la' → logprob: -3.1478657722473145
    5. ' l' → logprob: -4.3978657722473145
    6. '<|end|>' → logprob: -6.5228657722473145
    7. 'le' → logprob: -6.6478657722473145
    8. 's' → logprob: -7.1478657722473145
    9. ' un' → logprob: -7.8978657722473145
    10. '  ' → logprob: -7.8978657722473145

Token 100: ' plus' (ID: 2932)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38856831192970276
    2. ' plus' → logprob: -1.5135682821273804
    3. ' distances' → logprob: -2.76356840133667
    4. ' chemins' → logprob: -4.51356840133667
    5. 's' → logprob: -4.88856840133667
    6. 'plus' → logprob: -5.01356840133667
    7. '   ' → logprob: -5.63856840133667
    8. '  ' → logprob: -5.63856840133667
    9. ' shortest' → logprob: -6.63856840133667
    10. ' meilleurs' → logprob: -6.88856840133667

Token 101: ' courts' (ID: 33374)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1669368743896484
    2. ' ' → logprob: -1.4169368743896484
    3. ' court' → logprob: -2.0419368743896484
    4. ' _' → logprob: -2.2919368743896484
    5. ' courts' → logprob: -2.4169368743896484
    6. 'cour' → logprob: -3.2919368743896484
    7. 's' → logprob: -4.416936874389648
    8. ' proches' → logprob: -4.416936874389648
    9. ' cour' → logprob: -4.666936874389648
    10. '  ' → logprob: -4.916936874389648

Token 102: ' chemins' (ID: 192063)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16936184465885162
    2. ' ' → logprob: -1.9193618297576904
    3. ' chemins' → logprob: -5.4193620681762695
    4. ' _' → logprob: -6.6693620681762695
    5. '<|end|>' → logprob: -6.9193620681762695
    6. ' distances' → logprob: -7.1693620681762695
    7. ' paths' → logprob: -8.41936206817627
    8. '_paths' → logprob: -8.54436206817627
    9. '-' → logprob: -8.54436206817627
    10. 's' → logprob: -8.79436206817627

Token 103: ' depuis' (ID: 16277)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0037269224412739277
    2. '<|end|>' → logprob: -6.753726959228516
    3. '   ' → logprob: -7.253726959228516
    4. '  ' → logprob: -7.253726959228516
    5. '_' → logprob: -8.378726959228516
    6. ')' → logprob: -8.628726959228516
    7. '    ' → logprob: -9.003726959228516
    8. ' )' → logprob: -9.003726959228516
    9. ' des' → logprob: -9.628726959228516
    10. ',' → logprob: -10.003726959228516

Token 104: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07878810167312622
    2. '<|end|>' → logprob: -3.3287880420684814
    3. ' un' → logprob: -4.3287882804870605
    4. ' start' → logprob: -4.7037882804870605
    5. ' l' → logprob: -4.8287882804870605
    6. ' le' → logprob: -5.8287882804870605
    7. ' la' → logprob: -5.9537882804870605
    8. '  ' → logprob: -6.9537882804870605
    9. 'start' → logprob: -7.2037882804870605
    10. ' a' → logprob: -7.8287882804870605

Token 105: ' sommet' (ID: 130502)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49513256549835205
    2. ' sommet' → logprob: -0.995132565498352
    3. ' noe' → logprob: -4.9951324462890625
    4. ' somm' → logprob: -5.1201324462890625
    5. ' som' → logprob: -5.4951324462890625
    6. ' node' → logprob: -6.1201324462890625
    7. 'som' → logprob: -6.8701324462890625
    8. ' n' → logprob: -7.9951324462890625
    9. '  ' → logprob: -10.245132446289062
    10. ' point' → logprob: -10.370132446289062

Token 106: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023504719138145447
    2. ' vers' → logprob: -5.398504734039307
    3. ' de' → logprob: -5.523504734039307
    4. ' ,' → logprob: -5.648504734039307
    5. 'u' → logprob: -5.898504734039307
    6. ' jusqu' → logprob: -6.273504734039307
    7. ' source' → logprob: -6.773504734039307
    8. ' donné' → logprob: -6.898504734039307
    9. ' u' → logprob: -7.398504734039307
    10. ',' → logprob: -7.648504734039307

Token 107: ' départ' (ID: 32693)
  Prédit: ' départ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' départ' → logprob: -0.013616951182484627
    2. ' ' → logprob: -5.138617038726807
    3. 'dé' → logprob: -5.263617038726807
    4. ' sommet' → logprob: -7.763617038726807
    5. 'd' → logprob: -7.888617038726807
    6. ' origine' → logprob: -8.138616561889648
    7. 'part' → logprob: -8.388616561889648
    8. ' part' → logprob: -8.763616561889648
    9. 'depart' → logprob: -8.888616561889648
    10. ' d' → logprob: -9.263616561889648

Token 108: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6563952565193176
    2. ' :' → logprob: -1.2813951969146729
    3. '   ' → logprob: -2.781395196914673
    4. ',' → logprob: -3.281395196914673
    5. ':' → logprob: -3.281395196914673
    6. ' ,' → logprob: -3.781395196914673
    7. ' :
' → logprob: -4.531395435333252
    8. '.' → logprob: -4.781395435333252
    9. ' vers' → logprob: -4.906395435333252
    10. '  ' → logprob: -6.031395435333252

Token 109: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7576713562011719
    2. '   ' → logprob: -1.2576713562011719
    3. ' :' → logprob: -1.8826713562011719
    4. ':' → logprob: -2.882671356201172
    5. 'n' → logprob: -5.007671356201172
    6. ',' → logprob: -5.257671356201172
    7. '  ' → logprob: -5.507671356201172
    8. '    ' → logprob: -5.632671356201172
    9. ' 
' → logprob: -5.757671356201172
    10. ' :
' → logprob: -5.757671356201172

Token 110: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.43145546317100525
    2. 'n' (adapté à ' n') → logprob: -1.9314554929733276
    3. ' distances' → logprob: -2.306455373764038
    4. '   ' → logprob: -2.681455373764038
    5. ' dist' → logprob: -3.806455373764038
    6. 'dist' → logprob: -4.556455612182617
    7. ' distance' → logprob: -6.306455612182617
    8. 'distance' → logprob: -6.931455612182617
    9. ' ' → logprob: -8.056455612182617
    10. ' import' → logprob: -8.181455612182617

Token 111: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8257142305374146
    2. ' =' → logprob: -1.0757142305374146
    3. ' ,' → logprob: -2.200714111328125
    4. ' ' → logprob: -2.325714111328125
    5. '=' → logprob: -5.575714111328125
    6. ')' → logprob: -5.575714111328125
    7. '_' → logprob: -6.575714111328125
    8. ' )' → logprob: -6.700714111328125
    9. '   ' → logprob: -7.325714111328125
    10. ' _' → logprob: -8.075714111328125

Token 112: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0004886920796707273
    2. 'len' → logprob: -7.625488758087158
    3. '(len' → logprob: -15.50048828125
    4. '	len' → logprob: -16.37548828125
    5. ' ' → logprob: -16.50048828125
    6. '[len' → logprob: -16.75048828125
    7. '=len' → logprob: -16.87548828125
    8. ' ' → logprob: -16.87548828125
    9. ' le' → logprob: -17.12548828125
    10. ' max' → logprob: -18.62548828125

Token 113: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.00018971276585943997
    2. '(' → logprob: -8.625189781188965
    3. 'edge' → logprob: -12.000189781188965
    4. '=edge' → logprob: -13.375189781188965
    5. '(edges' → logprob: -13.625189781188965
    6. ' edge' → logprob: -15.375189781188965
    7. ' (' → logprob: -15.375189781188965
    8. '(s' → logprob: -15.625189781188965
    9. '(
' → logprob: -15.750189781188965
    10. 's' → logprob: -16.62518882751465

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00324687035754323
    2. ' )' → logprob: -5.753246784210205
    3. ')
' → logprob: -10.503247261047363
    4. '[' → logprob: -11.003247261047363
    5. ' ' → logprob: -11.753247261047363
    6. '   ' → logprob: -11.753247261047363
    7. ')
' → logprob: -12.753247261047363
    8. ')

' → logprob: -13.878247261047363
    9. '	' → logprob: -14.128247261047363
    10. ' )
' → logprob: -14.253247261047363

Token 115: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05491308867931366
    2. ' 
' → logprob: -3.42991304397583
    3. '  
' → logprob: -4.42991304397583
    4. '    
' → logprob: -5.80491304397583
    5. '' → logprob: -6.55491304397583
    6. '<|end|>' → logprob: -6.67991304397583
    7. ' ' → logprob: -7.05491304397583
    8. '
' → logprob: -7.17991304397583
    9. '   
' → logprob: -7.55491304397583
    10. '   ' → logprob: -8.179913520812988

Token 116: ' On' (ID: 2160)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9138481616973877
    2. ' ' → logprob: -1.2888481616973877
    3. 'n' → logprob: -2.2888481616973877
    4. '()' → logprob: -2.4138481616973877
    5. ' )' → logprob: -3.6638481616973877
    6. ' n' → logprob: -4.413847923278809
    7. ' distances' → logprob: -4.538847923278809
    8. '
' → logprob: -4.663847923278809
    9. '```' → logprob: -4.663847923278809
    10. '   ' → logprob: -5.038847923278809

Token 117: ' récup' (ID: 62856)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5218629837036133
    2. ')' → logprob: -2.1468629837036133
    3. '_' → logprob: -2.1468629837036133
    4. '<|end|>' → logprob: -2.8968629837036133
    5. 'n' → logprob: -3.5218629837036133
    6. ' =' → logprob: -4.271862983703613
    7. ' )' → logprob: -4.396862983703613
    8. ' n' → logprob: -5.021862983703613
    9. '<|end|>' → logprob: -5.771862983703613
    10. ' ' → logprob: -5.896862983703613

Token 118: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.004809961188584566
    2. 'è' → logprob: -6.129809856414795
    3. 'ére' → logprob: -7.254809856414795
    4. 'érer' → logprob: -7.379809856414795
    5. 'p' → logprob: -8.754810333251953
    6. 'èr' → logprob: -8.754810333251953
    7. '	' → logprob: -8.879810333251953
    8. '`' → logprob: -9.004810333251953
    9. 'e' → logprob: -9.254810333251953
    10. 'ere' → logprob: -9.629810333251953

Token 119: ' le' (ID: 505)
  Prédit: '(edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.18914909660816193
    2. '(' → logprob: -1.8141491413116455
    3. 'l' → logprob: -6.064148902893066
    4. ' l' → logprob: -6.564148902893066
    5. '(l' → logprob: -6.564148902893066
    6. '(len' → logprob: -6.689148902893066
    7. ' (' → logprob: -6.689148902893066
    8. 'edge' → logprob: -7.314148902893066
    9. ' ' → logprob: -8.439148902893066
    10. ' la' → logprob: -8.564148902893066

Token 120: ' nombre' (ID: 9733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0497627258300781
    2. ' ' → logprob: -1.1747627258300781
    3. ' (' → logprob: -2.549762725830078
    4. '(' → logprob: -2.674762725830078
    5. 'n' → logprob: -3.174762725830078
    6. '()' → logprob: -3.549762725830078
    7. ' )' → logprob: -4.299762725830078
    8. ' edge' → logprob: -4.299762725830078
    9. '(n' → logprob: -5.049762725830078
    10. '\' → logprob: -5.049762725830078

Token 121: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9723681807518005
    2. '(' → logprob: -1.2223682403564453
    3. ' des' → logprob: -1.9723682403564453
    4. ' (' → logprob: -2.3473682403564453
    5. ' de' → logprob: -2.8473682403564453
    6. '(s' → logprob: -4.722368240356445
    7. 'des' → logprob: -5.222368240356445
    8. ' d' → logprob: -5.347368240356445
    9. '  ' → logprob: -5.722368240356445
    10. 's' → logprob: -5.972368240356445

Token 122: ' somm' (ID: 44830)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.3511006534099579
    2. ' vertices' → logprob: -2.3511006832122803
    3. 'edge' → logprob: -2.8511006832122803
    4. ' ' → logprob: -3.2261006832122803
    5. '(edge' → logprob: -3.4761006832122803
    6. 'vertices' → logprob: -4.101100444793701
    7. ' nodes' → logprob: -4.101100444793701
    8. 's' → logprob: -4.476100444793701
    9. ' somm' → logprob: -5.101100444793701
    10. ' edges' → logprob: -5.101100444793701

Token 123: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.17447637021541595
    2. 'è' → logprob: -2.674476385116577
    3. 'e' → logprob: -3.049476385116577
    4. 'es' → logprob: -4.174476146697998
    5. 'et' → logprob: -4.424476146697998
    6. 'êts' → logprob: -4.799476146697998
    7. 'ë' → logprob: -6.674476146697998
    8. 'i' → logprob: -6.799476146697998
    9. 'ê' → logprob: -6.924476146697998
    10. 'ètres' → logprob: -7.799476146697998

Token 124: ' du' (ID: 1462)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1584104746580124
    2. ' 
' → logprob: -2.4084105491638184
    3. '  
' → logprob: -3.5334105491638184
    4. ' ' → logprob: -4.908410549163818
    5. '' → logprob: -5.533410549163818
    6. '    
' → logprob: -5.658410549163818
    7. '   ' → logprob: -5.783410549163818
    8. 'n' → logprob: -6.408410549163818
    9. '
' → logprob: -7.033410549163818
    10. '   
' → logprob: -7.033410549163818

Token 125: ' grap' (ID: 60955)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.055799391120672226
    2. 'edge' → logprob: -2.9307994842529297
    3. ' graph' → logprob: -8.05579948425293
    4. '(edge' → logprob: -8.18079948425293
    5. 'graph' → logprob: -8.55579948425293
    6. '=edge' → logprob: -9.55579948425293
    7. ' ' → logprob: -11.68079948425293
    8. 'e' → logprob: -11.93079948425293
    9. 'n' → logprob: -11.93079948425293
    10. 's' → logprob: -12.30579948425293

Token 126: 'he' (ID: 273)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.31428152322769165
    2. 'rap' → logprob: -1.6892814636230469
    3. 'aphe' → logprob: -3.064281463623047
    4. 'he' → logprob: -4.439281463623047
    5. 'rès' → logprob: -4.439281463623047
    6. 'r' → logprob: -5.314281463623047
    7. 'h' → logprob: -6.064281463623047
    8. 'aph' → logprob: -7.064281463623047
    9. 'phe' → logprob: -7.439281463623047
    10. 'f' → logprob: -7.814281463623047

Token 127: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07491178065538406
    2. ' 
' → logprob: -2.8249118328094482
    3. '  
' → logprob: -5.324911594390869
    4. ' ' → logprob: -5.949911594390869
    5. '' → logprob: -6.699911594390869
    6. '    
' → logprob: -6.824911594390869
    7. 'n' → logprob: -7.324911594390869
    8. '
' → logprob: -7.824911594390869
    9. '   
' → logprob: -7.824911594390869
    10. ')' → logprob: -8.199912071228027

Token 128: 'liste' (ID: 69656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04415343701839447
    2. ' )' → logprob: -3.1691534519195557
    3. ')
' → logprob: -8.169153213500977
    4. ' ' → logprob: -8.544153213500977
    5. ')n' → logprob: -8.919153213500977
    6. ' )
' → logprob: -9.419153213500977
    7. ' ' → logprob: -9.419153213500977
    8. 'n' → logprob: -9.794153213500977
    9. ' la' → logprob: -9.919153213500977
    10. '
' → logprob: -10.294153213500977

Token 129: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6679554581642151
    2. ' des' → logprob: -0.9179554581642151
    3. ' )' → logprob: -3.0429553985595703
    4. 'des' → logprob: -4.16795539855957
    5. ' de' → logprob: -5.04295539855957
    6. 'de' → logprob: -5.04295539855957
    7. '[' → logprob: -5.79295539855957
    8. ' d' → logprob: -5.91795539855957
    9. ' of' → logprob: -6.66795539855957
    10. 'd' → logprob: -7.29295539855957

Token 130: ''ad' (ID: 36162)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.6673188805580139
    2. ' adjacency' → logprob: -1.5423188209533691
    3. ')' → logprob: -1.6673188209533691
    4. 'lists' → logprob: -4.042318820953369
    5. ' listes' → logprob: -4.042318820953369
    6. ' ' → logprob: -4.667318820953369
    7. 'list' → logprob: -4.917318820953369
    8. 'edge' → logprob: -5.167318820953369
    9. 's' → logprob: -5.667318820953369
    10. '_lists' → logprob: -5.917318820953369

Token 131: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.3502079248428345
    2. 'j' → logprob: -1.2252079248428345
    3. 'jec' → logprob: -6.975207805633545
    4. 'ja' → logprob: -7.725207805633545
    5. '[j' → logprob: -9.725208282470703
    6. 'Jac' → logprob: -9.850208282470703
    7. '_j' → logprob: -10.475208282470703
    8. '	j' → logprob: -10.725208282470703
    9. 'jc' → logprob: -10.725208282470703
    10. ' jac' → logprob: -11.350208282470703

Token 132: 'ence' (ID: 1082)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.41111302375793457
    2. 'ac' → logprob: -1.6611130237579346
    3. 'es' → logprob: -3.0361130237579346
    4. '```' → logprob: -3.2861130237579346
    5. ']' → logprob: -4.5361127853393555
    6. ')' → logprob: -4.9111127853393555
    7. 's' → logprob: -4.9111127853393555
    8. 'ences' → logprob: -5.5361127853393555
    9. 'c' → logprob: -5.7861127853393555
    10. '}' → logprob: -6.0361127853393555

Token 133: ' '' (ID: 461)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018439752981066704
    2. ' )' → logprob: -4.018439769744873
    3. ')
' → logprob: -8.518439292907715
    4. ' )
' → logprob: -10.393439292907715
    5. '   ' → logprob: -11.268439292907715
    6. 'def' → logprob: -11.393439292907715
    7. ' ' → logprob: -12.143439292907715
    8. ' ' → logprob: -12.393439292907715
    9. ',' → logprob: -12.643439292907715
    10. '
' → logprob: -12.768439292907715

Token 134: 'edge' (ID: 13457)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.24624735116958618
    2. ')' → logprob: -1.7462472915649414
    3. ''' → logprob: -3.7462472915649414
    4. ' ')' → logprob: -4.496247291564941
    5. 'edge' → logprob: -5.371247291564941
    6. '')
' → logprob: -7.246247291564941
    7. 'e' → logprob: -7.246247291564941
    8. '[' → logprob: -7.371247291564941
    9. ' )' → logprob: -7.996247291564941
    10. '['' → logprob: -8.246247291564941

Token 135: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05648529529571533
    2. '')' → logprob: -3.306485176086426
    3. ' )' → logprob: -4.181485176086426
    4. ' ')' → logprob: -6.181485176086426
    5. ')
' → logprob: -8.681485176086426
    6. ''' → logprob: -9.431485176086426
    7. '[' → logprob: -9.431485176086426
    8. ' ' → logprob: -9.556485176086426
    9. ')'' → logprob: -9.556485176086426
    10. '   ' → logprob: -9.806485176086426

Token 136: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8915959000587463
    2. 'dist' → logprob: -1.1415958404541016
    3. ' distances' → logprob: -1.6415958404541016
    4. 'distance' → logprob: -2.8915958404541016
    5. ' 
' → logprob: -5.391595840454102
    6. ' dist' → logprob: -5.766595840454102
    7. 'Distances' → logprob: -5.891595840454102
    8. '    
' → logprob: -6.016595840454102
    9. '   ' → logprob: -6.266595840454102
    10. '	dist' → logprob: -6.391595840454102

Token 137: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.018573977053165436
    2. ' dist' → logprob: -4.768573760986328
    3. 'distance' → logprob: -5.143573760986328
    4. ' distances' → logprob: -6.268573760986328
    5. 'import' → logprob: -7.143573760986328
    6. 'INF' → logprob: -7.768573760986328
    7. 'inf' → logprob: -8.268573760986328
    8. '   ' → logprob: -8.643573760986328
    9. ' distance' → logprob: -8.768573760986328
    10. 'dis' → logprob: -9.268573760986328

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028995053842663765
    2. '=' → logprob: -3.6539950370788574
    3. '[' → logprob: -6.403995037078857
    4. 's' → logprob: -7.778995037078857
    5. ' ' → logprob: -8.278995513916016
    6. '[]' → logprob: -9.528995513916016
    7. ')' → logprob: -9.653995513916016
    8. ',' → logprob: -10.528995513916016
    9. 'ances' → logprob: -10.528995513916016
    10. ' =[' → logprob: -10.528995513916016

Token 139: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6935593485832214
    2. ' [' → logprob: -0.6935593485832214
    3. '[n' → logprob: -8.318559646606445
    4. '[int' → logprob: -9.068559646606445
    5. '[node' → logprob: -11.568559646606445
    6. '[num' → logprob: -11.943559646606445
    7. '[len' → logprob: -12.443559646606445
    8. '[input' → logprob: -12.568559646606445
    9. '[start' → logprob: -12.693559646606445
    10. '[s' → logprob: -12.693559646606445

Token 140: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.014168800786137581
    2. ' float' → logprob: -4.264168739318848
    3. '10' → logprob: -13.139168739318848
    4. 'sys' → logprob: -13.764168739318848
    5. 'int' → logprob: -14.264168739318848
    6. ' ' → logprob: -14.514168739318848
    7. ' sys' → logprob: -15.014168739318848
    8. 'inf' → logprob: -15.389168739318848
    9. '	float' → logprob: -15.514168739318848
    10. '(float' → logprob: -15.639168739318848

Token 141: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.0484450437361374e-05
    2. '(' → logprob: -10.375040054321289
    3. '("' → logprob: -12.625040054321289
    4. ' ('' → logprob: -12.750040054321289
    5. ''in' → logprob: -13.625040054321289
    6. ''' → logprob: -14.250040054321289
    7. 'inf' → logprob: -15.125040054321289
    8. ']' → logprob: -15.625040054321289
    9. '('+' → logprob: -15.750040054321289
    10. '(in' → logprob: -16.25004005432129

Token 142: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.5570885807392187e-05
    2. 'i' → logprob: -11.250015258789062
    3. 'in' → logprob: -13.500015258789062
    4. ' inf' → logprob: -15.000015258789062
    5. ''in' → logprob: -15.625015258789062
    6. 'Inf' → logprob: -16.000015258789062
    7. ''' → logprob: -16.000015258789062
    8. ''i' → logprob: -16.000015258789062
    9. '"' → logprob: -16.125015258789062
    10. '_inf' → logprob: -16.125015258789062

Token 143: '")]' (ID: 71224)
  Prédit: '")]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")]' → logprob: -0.235622838139534
    2. ')' → logprob: -2.3606228828430176
    3. '")' → logprob: -2.3606228828430176
    4. ')]' → logprob: -4.360622882843018
    5. ']' → logprob: -4.860622882843018
    6. '"),' → logprob: -8.48562240600586
    7. '"' → logprob: -8.86062240600586
    8. '')]' → logprob: -8.98562240600586
    9. '"]' → logprob: -9.86062240600586
    10. ' ")' → logprob: -10.23562240600586

Token 144: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09582632035017014
    2. ' ]' → logprob: -3.3458263874053955
    3. '(' → logprob: -3.5958263874053955
    4. ',' → logprob: -4.095826148986816
    5. ' for' → logprob: -4.845826148986816
    6. ']*' → logprob: -6.345826148986816
    7. ' ' → logprob: -6.845826148986816
    8. ' (' → logprob: -7.720826148986816
    9. ')' → logprob: -8.220826148986816
    10. 'for' → logprob: -8.970826148986816

Token 145: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06249191239476204
    2. ' n' → logprob: -2.8124918937683105
    3. '(n' → logprob: -7.5624918937683105
    4. '(' → logprob: -13.562492370605469
    5. '	n' → logprob: -13.562492370605469
    6. ' (' → logprob: -13.812492370605469
    7. ')n' → logprob: -14.312492370605469
    8. ' ' → logprob: -15.437492370605469
    9. '   ' → logprob: -16.31249237060547
    10. '_n' → logprob: -16.81249237060547

Token 146: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4784330129623413
    2. '<|end|>' → logprob: -0.9784330129623413
    3. '<|end|>' → logprob: -6.728433132171631
    4. ' ' → logprob: -7.228433132171631
    5. ' 
' → logprob: -7.353433132171631
    6. ')' → logprob: -7.728433132171631
    7. '  
' → logprob: -7.728433132171631
    8. '' → logprob: -8.228432655334473
    9. '
' → logprob: -8.853432655334473
    10. '\n' → logprob: -9.228432655334473

Token 147: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' crée' (ID: 102256)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.8146152496337891
    2. ' initialize' → logprob: -1.189615249633789
    3. 'initial' → logprob: -2.689615249633789
    4. ' continue' → logprob: -3.439615249633789
    5. 'distance' → logprob: -3.564615249633789
    6. ' initial' → logprob: -4.189615249633789
    7. ' initializes' → logprob: -4.189615249633789
    8. 'continue' → logprob: -4.439615249633789
    9. '<|end|>' → logprob: -4.439615249633789
    10. '_initialize' → logprob: -4.814615249633789

Token 149: ' une' (ID: 2463)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' liste' (ID: 31719)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09368345886468887
    2. 'list' → logprob: -3.2186834812164307
    3. 'distance' → logprob: -3.3436834812164307
    4. 'liste' → logprob: -5.093683242797852
    5. '<|end|>' → logprob: -5.593683242797852
    6. ' list' → logprob: -6.593683242797852
    7. ' ' → logprob: -7.343683242797852
    8. ' dist' → logprob: -7.718683242797852
    9. '[]' → logprob: -8.218683242797852
    10. ' liste' → logprob: -8.343683242797852

Token 151: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2942080795764923
    2. ' distances' → logprob: -1.41920804977417
    3. ' dist' → logprob: -5.16920804977417
    4. 'distance' → logprob: -5.16920804977417
    5. '<|end|>' → logprob: -7.29420804977417
    6. 'n' → logprob: -8.669208526611328
    7. 'd' → logprob: -8.794208526611328
    8. ' ' → logprob: -9.294208526611328
    9. ' distance' → logprob: -9.669208526611328
    10. 'float' → logprob: -10.044208526611328

Token 153: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ' initial' (ID: 4871)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: 'ement' (ID: 962)
  Prédit: 'isée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.14149989187717438
    2. 'isées' → logprob: -2.7664999961853027
    3. 'isé' → logprob: -3.3914999961853027
    4. 'is' → logprob: -3.7664999961853027
    5. 'isant' → logprob: -6.141499996185303
    6. 'i' → logprob: -6.266499996185303
    7. 'iser' → logprob: -6.391499996185303
    8. 'ized' → logprob: -6.391499996185303
    9. '_' → logprob: -6.766499996185303
    10. 'isés' → logprob: -7.141499996185303

Token 156: ' rem' (ID: 1662)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.05709528177976608
    2. ' inf' → logprob: -3.5570952892303467
    3. 'in' → logprob: -4.682095050811768
    4. ' infin' → logprob: -4.932095050811768
    5. ' à' → logprob: -6.932095050811768
    6. ' ' → logprob: -6.932095050811768
    7. ' infinity' → logprob: -7.182095050811768
    8. ' rempl' → logprob: -7.182095050811768
    9. '  ' → logprob: -7.307095050811768
    10. 'à' → logprob: -7.557095050811768

Token 157: 'plies' (ID: 9773)
  Prédit: 'plies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plies' → logprob: -0.645632803440094
    2. 'pl' → logprob: -0.770632803440094
    3. 'p' → logprob: -4.395632743835449
    4. '-' → logprob: -8.89563274383545
    5. 'plit' → logprob: -8.89563274383545
    6. '
' → logprob: -9.39563274383545
    7. 'pli' → logprob: -10.14563274383545
    8. '

' → logprob: -10.77063274383545
    9. '   ' → logprob: -11.14563274383545
    10. '1' → logprob: -11.27063274383545

Token 158: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2741999626159668
    2. ' d' → logprob: -1.2741999626159668
    3. ' de' → logprob: -1.7741999626159668
    4. '  ' → logprob: -2.024199962615967
    5. '<|end|>' → logprob: -2.399199962615967
    6. ' par' → logprob: -4.899199962615967
    7. ')' → logprob: -5.024199962615967
    8. ' with' → logprob: -5.024199962615967
    9. 'd' → logprob: -5.274199962615967
    10. '    ' → logprob: -5.399199962615967

Token 159: ' l' (ID: 305)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.12193606048822403
    2. 'float' → logprob: -2.246936082839966
    3. ' ' → logprob: -5.121935844421387
    4. 'inf' → logprob: -6.371935844421387
    5. '=float' → logprob: -7.871935844421387
    6. '<|end|>' → logprob: -8.121935844421387
    7. ' inf' → logprob: -8.246935844421387
    8. '(float' → logprob: -8.996935844421387
    9. ',float' → logprob: -9.246935844421387
    10. '	float' → logprob: -9.621935844421387

Token 160: ''in' (ID: 17942)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.02137342281639576
    2. ' f' → logprob: -5.396373271942139
    3. 'float' → logprob: -5.521373271942139
    4. 'o' → logprob: -5.896373271942139
    5. ' float' → logprob: -5.896373271942139
    6. 'e' → logprob: -6.271373271942139
    7. '   ' → logprob: -6.521373271942139
    8. 'a' → logprob: -7.646373271942139
    9. 'inf' → logprob: -7.771373271942139
    10. '```' → logprob: -7.896373271942139

Token 161: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.347765181795694e-05
    2. 'float' → logprob: -10.625053405761719
    3. 'finity' → logprob: -10.875053405761719
    4. 'ф' → logprob: -13.000053405761719
    5. 'fi' → logprob: -13.750053405761719
    6. '```' → logprob: -13.875053405761719
    7. '	f' → logprob: -14.250053405761719
    8. ' f' → logprob: -14.250053405761719
    9. 'fine' → logprob: -14.375053405761719
    10. 'fin' → logprob: -14.500053405761719

Token 162: 'ini' (ID: 2363)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1795674562454224
    2. '   ' → logprob: -1.5545674562454224
    3. 'i' → logprob: -1.6795674562454224
    4. 'f' → logprob: -2.179567337036133
    5. ' ' → logprob: -3.054567337036133
    6. 'ity' → logprob: -3.804567337036133
    7. 'inity' → logprob: -4.304567337036133
    8. 'ini' → logprob: -4.929567337036133
    9. ')' → logprob: -5.054567337036133
    10. ' ' → logprob: -5.179567337036133

Token 163: ' flott' (ID: 108700)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: 'ant' (ID: 493)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5849507451057434
    2. 'é' → logprob: -1.9599506855010986
    3. '-' → logprob: -3.3349506855010986
    4. '('' → logprob: -3.8349506855010986
    5. 'érieur' → logprob: -3.8349506855010986
    6. 'oint' → logprob: -3.9599506855010986
    7. '32' → logprob: -4.084950923919678
    8. 'at' → logprob: -4.084950923919678
    9. ''' → logprob: -4.209950923919678
    10. '("' → logprob: -4.209950923919678

Token 165: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: ' taille' (ID: 41644)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: ' ég' (ID: 33150)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5827659964561462
    2. ' n' → logprob: -1.457766056060791
    3. '(n' → logprob: -1.582766056060791
    4. '=n' → logprob: -6.957766056060791
    5. '	n' → logprob: -7.332766056060791
    6. ' ' → logprob: -7.457766056060791
    7. ' (' → logprob: -7.707766056060791
    8. '(' → logprob: -7.832766056060791
    9. ':' → logprob: -9.082765579223633
    10. ')n' → logprob: -9.582765579223633

Token 168: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.007649688050150871
    2. 'al' → logprob: -4.882649898529053
    3. 'ales' → logprob: -12.007649421691895
    4. 'n' → logprob: -12.257649421691895
    5. 'alité' → logprob: -12.257649421691895
    6. 'alen' → logprob: -12.507649421691895
    7. 'a' → logprob: -12.757649421691895
    8. 'aled' → logprob: -12.882649421691895
    9. 'aux' → logprob: -13.007649421691895
    10. 'alable' → logprob: -13.007649421691895

Token 169: ' au' (ID: 2791)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5718241333961487
    2. ' à' → logprob: -1.321824073791504
    3. 'au' → logprob: -2.821824073791504
    4. ' ' → logprob: -3.446824073791504
    5. 'n' → logprob: -3.946824073791504
    6. 'à' → logprob: -4.446824073791504
    7. ')' → logprob: -4.571824073791504
    8. ' n' → logprob: -4.696824073791504
    9. ' a' → logprob: -4.821824073791504
    10. '(' → logprob: -4.946824073791504

Token 170: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1427576243877411
    2. ' n' → logprob: -2.0177576541900635
    3. 'nombre' → logprob: -9.517757415771484
    4. ' nombre' → logprob: -12.517757415771484
    5. '	n' → logprob: -13.267757415771484
    6. ' ' → logprob: -14.017757415771484
    7. 'len' → logprob: -14.892757415771484
    8. 's' → logprob: -14.892757415771484
    9. ')n' → logprob: -15.017757415771484
    10. 'dist' → logprob: -15.142757415771484

Token 171: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9986789226531982
    2. '<|end|>' → logprob: -1.2486789226531982
    3. ' ' → logprob: -1.7486789226531982
    4. ' of' → logprob: -2.3736789226531982
    5. ')' → logprob: -3.6236789226531982
    6. '(' → logprob: -4.373679161071777
    7. 'des' → logprob: -5.123679161071777
    8. ' (' → logprob: -5.248679161071777
    9. ' de' → logprob: -5.373679161071777
    10. '[' → logprob: -5.373679161071777

Token 172: ' somm' (ID: 44830)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.9076523184776306
    2. ' vertices' → logprob: -1.7826523780822754
    3. ' n' → logprob: -2.0326523780822754
    4. 'n' → logprob: -2.1576523780822754
    5. ' somm' → logprob: -2.9076523780822754
    6. 'nodes' → logprob: -2.9076523780822754
    7. 's' → logprob: -3.4076523780822754
    8. 'vertices' → logprob: -3.5326523780822754
    9. '<|end|>' → logprob: -5.907652378082275
    10. ' sommet' → logprob: -6.032652378082275

Token 173: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0007566197891719639
    2. 'êts' → logprob: -7.875756740570068
    3. 'et' → logprob: -8.25075626373291
    4. 'ents' → logprob: -11.25075626373291
    5. 'ètres' → logprob: -11.25075626373291
    6. 'ет' → logprob: -11.62575626373291
    7. 'ats' → logprob: -11.75075626373291
    8. '```' → logprob: -11.75075626373291
    9. 'etso' → logprob: -11.87575626373291
    10. 'e' → logprob: -12.00075626373291

Token 174: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022555036470294
    2. '<|end|>' → logprob: -4.897554874420166
    3. ' 
' → logprob: -5.147554874420166
    4. '  
' → logprob: -5.647554874420166
    5. ' ' → logprob: -6.647554874420166
    6. '
' → logprob: -7.272554874420166
    7. ')' → logprob: -7.522554874420166
    8. '' → logprob: -7.647554874420166
    9. '\n' → logprob: -7.772554874420166
    10. '[' → logprob: -8.022555351257324

Token 175: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6460586786270142
    2. '   ' → logprob: -1.0210586786270142
    3. '  
' → logprob: -3.1460585594177246
    4. '<|end|>' → logprob: -4.021058559417725
    5. 'dist' → logprob: -4.146058559417725
    6. '    
' → logprob: -4.271058559417725
    7. ' ' → logprob: -4.521058559417725
    8. ' 
' → logprob: -5.771058559417725
    9. '   
' → logprob: -6.021058559417725
    10. ' dist' → logprob: -6.646058559417725

Token 176: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.029655370861291885
    2. ' dist' → logprob: -4.154655456542969
    3. 'start' → logprob: -4.404655456542969
    4. ' start' → logprob: -7.529655456542969
    5. '	dist' → logprob: -8.529655456542969
    6. '   ' → logprob: -8.904655456542969
    7. ' ' → logprob: -9.654655456542969
    8. '_dist' → logprob: -9.779655456542969
    9. '
' → logprob: -10.029655456542969
    10. '  ' → logprob: -10.029655456542969

Token 177: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0013435659930109978
    2. '[' → logprob: -6.626343727111816
    3. '[s' → logprob: -12.001343727111816
    4. 'start' → logprob: -12.376343727111816
    5. ' [' → logprob: -13.501343727111816
    6. '_start' → logprob: -14.251343727111816
    7. 's' → logprob: -14.751343727111816
    8. '[end' → logprob: -14.876343727111816
    9. '[int' → logprob: -14.876343727111816
    10. '```' → logprob: -14.876343727111816

Token 178: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005114490049891174
    2. ' ]' → logprob: -7.625511646270752
    3. ']=' → logprob: -10.750511169433594
    4. ')' → logprob: -14.375511169433594
    5. '=' → logprob: -14.625511169433594
    6. '[' → logprob: -15.000511169433594
    7. '']' → logprob: -15.625511169433594
    8. ' =' → logprob: -15.750511169433594
    9. '"]' → logprob: -16.500511169433594
    10. '`]' → logprob: -16.500511169433594

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2811703383922577
    2. '=' → logprob: -1.40617036819458
    3. ']' → logprob: -11.406169891357422
    4. ' ' → logprob: -12.656169891357422
    5. ')' → logprob: -13.031169891357422
    6. ']=' → logprob: -13.906169891357422
    7. '[' → logprob: -14.156169891357422
    8. ' ]' → logprob: -14.906169891357422
    9. ')=' → logprob: -15.281169891357422
    10. ' ' → logprob: -15.781169891357422

Token 180: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.003177642822266
    4. '۰' → logprob: -18.003177642822266
    5. '   ' → logprob: -19.128177642822266
    6. '00' → logprob: -19.503177642822266
    7. '  ' → logprob: -19.503177642822266
    8. '０' → logprob: -19.628177642822266
    9. ' ' → logprob: -20.503177642822266
    10. '1' → logprob: -20.690677642822266

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '۰' → logprob: -17.375003814697266
    4. '00' → logprob: -18.312503814697266
    5. '０' → logprob: -18.500003814697266
    6. '   ' → logprob: -19.437503814697266
    7. '000' → logprob: -19.562503814697266
    8. '٠' → logprob: -19.937503814697266
    9. '০' → logprob: -20.187503814697266
    10. '  ' → logprob: -20.250003814697266

Token 182: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05843771621584892
    2. '<|end|>' → logprob: -2.9334378242492676
    3. '  
' → logprob: -7.058437824249268
    4. '' → logprob: -7.183437824249268
    5. ' 
' → logprob: -7.308437824249268
    6. ' ' → logprob: -8.05843734741211
    7. '\n' → logprob: -8.68343734741211
    8. '
' → logprob: -8.93343734741211
    9. '   ' → logprob: -9.05843734741211
    10. '<|end|>' → logprob: -9.05843734741211

Token 183: ' La' (ID: 3038)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9762364029884338
    2. 'start' → logprob: -1.851236343383789
    3. ' start' → logprob: -1.851236343383789
    4. '<|end|>' → logprob: -2.476236343383789
    5. 'dist' → logprob: -3.101236343383789
    6. '  ' → logprob: -3.351236343383789
    7. 'distance' → logprob: -3.726236343383789
    8. 'input' → logprob: -3.726236343383789
    9. '    ' → logprob: -4.226236343383789
    10. '0' → logprob: -4.226236343383789

Token 184: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.5487748384475708
    2. 'distance' → logprob: -0.9237748384475708
    3. ' ' → logprob: -4.423774719238281
    4. ' dist' → logprob: -5.173774719238281
    5. 'dist' → logprob: -5.423774719238281
    6. ' distante' → logprob: -7.423774719238281
    7. 'd' → logprob: -7.673774719238281
    8. '_distance' → logprob: -8.173774719238281
    9. ' ' → logprob: -8.298774719238281
    10. 'istance' → logprob: -8.673774719238281

Token 185: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.6330362558364868
    2. ' start' → logprob: -1.1330362558364868
    3. 'start' → logprob: -2.0080361366271973
    4. ' départ' → logprob: -5.133036136627197
    5. ' ' → logprob: -5.758036136627197
    6. 's' → logprob: -7.008036136627197
    7. 'dé' → logprob: -7.133036136627197
    8. 'som' → logprob: -7.383036136627197
    9. ' point' → logprob: -7.508036136627197
    10. 'summ' → logprob: -8.633036613464355

Token 187: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.26210424304008484
    2. ' start' → logprob: -2.6371042728424072
    3. 'start' → logprob: -2.7621042728424072
    4. 'de' → logprob: -2.7621042728424072
    5. ' ' → logprob: -3.7621042728424072
    6. '[start' → logprob: -5.512104034423828
    7. ' au' → logprob: -6.012104034423828
    8. ' départ' → logprob: -7.637104034423828
    9. 'au' → logprob: -7.762104034423828
    10. 's' → logprob: -7.762104034423828

Token 188: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.35327401757240295
    2. ' départ' → logprob: -1.2282739877700806
    3. 'd' → logprob: -5.478273868560791
    4. 'depart' → logprob: -8.35327434539795
    5. 'start' → logprob: -8.60327434539795
    6. ' start' → logprob: -8.97827434539795
    7. ' ' → logprob: -9.97827434539795
    8. '	d' → logprob: -11.47827434539795
    9. 'distance' → logprob: -12.47827434539795
    10. ' d' → logprob: -12.60327434539795

Token 189: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2537468373775482
    2. '<|end|>' → logprob: -1.6287468671798706
    3. ' to' → logprob: -4.25374698638916
    4. '  ' → logprob: -5.25374698638916
    5. ' au' → logprob: -6.50374698638916
    6. ' à' → logprob: -6.87874698638916
    7. '
' → logprob: -7.00374698638916
    8. '<|end|>' → logprob: -7.25374698638916
    9. ' a' → logprob: -7.50374698638916
    10. ' is' → logprob: -7.87874698638916

Token 190: ' lui' (ID: 10623)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6119124293327332
    2. ' lui' → logprob: -0.8619124293327332
    3. ' lu' → logprob: -3.486912488937378
    4. 'lu' → logprob: -5.611912250518799
    5. ' ' → logprob: -7.486912250518799
    6. 'start' → logprob: -8.986912727355957
    7. '	l' → logprob: -8.986912727355957
    8. ' ' → logprob: -9.236912727355957
    9. 'it' → logprob: -10.111912727355957
    10. ' start' → logprob: -10.236912727355957

Token 191: '-même' (ID: 41085)
  Prédit: '-même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-même' → logprob: -0.14453190565109253
    2. '-' → logprob: -2.0195319652557373
    3. '-m' → logprob: -6.769531726837158
    4. 'self' → logprob: -8.019532203674316
    5. '-mêmes' → logprob: -8.894532203674316
    6. 'm' → logprob: -9.769532203674316
    7. ' -' → logprob: -10.019532203674316
    8. ' ' → logprob: -10.144532203674316
    9. '```' → logprob: -10.644532203674316
    10. '   ' → logprob: -10.769532203674316

Token 192: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024758970830589533
    2. ' ' → logprob: -6.002475738525391
    3. ' ' → logprob: -15.37747573852539
    4. '۰' → logprob: -19.62747573852539
    5. '   ' → logprob: -19.75247573852539
    6. ' zéro' → logprob: -19.75247573852539
    7. '```' → logprob: -19.75247573852539
    8. '  ' → logprob: -19.87747573852539
    9. ' zero' → logprob: -20.00247573852539
    10. '1' → logprob: -20.00247573852539

Token 194: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '  ' → logprob: -17.125261306762695
    4. '   ' → logprob: -17.375261306762695
    5. '０' → logprob: -18.750261306762695
    6. 'zero' → logprob: -18.875261306762695
    7. 'z' → logprob: -19.125261306762695
    8. '۰' → logprob: -19.625261306762695
    9. '    ' → logprob: -19.750261306762695
    10. ' zéro' → logprob: -20.125261306762695

Token 195: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009368092752993107
    2. '   ' → logprob: -5.634367942810059
    3. '
' → logprob: -5.884367942810059
    4. '    
' → logprob: -6.634367942810059
    5. '' → logprob: -7.384367942810059
    6. '  
' → logprob: -7.884367942810059
    7. '	
' → logprob: -8.759367942810059
    8. ' 
' → logprob: -8.884367942810059
    9. '   
' → logprob: -9.134367942810059
    10. 'heap' → logprob: -9.134367942810059

Token 196: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18147164583206177
    2. '   ' → logprob: -2.056471586227417
    3. 'heap' → logprob: -4.431471824645996
    4. '    
' → logprob: -4.931471824645996
    5. 'pq' → logprob: -5.056471824645996
    6. ' heap' → logprob: -5.556471824645996
    7. ' 
' → logprob: -6.181471824645996
    8. '  
' → logprob: -6.431471824645996
    9. '' → logprob: -6.431471824645996
    10. '
' → logprob: -7.431471824645996

Token 197: ' que' (ID: 661)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5932129621505737
    2. 'pq' → logprob: -0.9682129621505737
    3. 'queue' → logprob: -3.0932130813598633
    4. 'hq' → logprob: -4.343213081359863
    5. '   ' → logprob: -5.093213081359863
    6. 'priority' → logprob: -6.593213081359863
    7. 'q' → logprob: -7.593213081359863
    8. ' heap' → logprob: -7.718213081359863
    9. 'h' → logprob: -7.718213081359863
    10. '    
' → logprob: -8.718213081359863

Token 198: ' =' (ID: 314)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0006314247148111463
    2. 'u' → logprob: -7.500631332397461
    3. ' =' → logprob: -9.875631332397461
    4. '=' → logprob: -10.875631332397461
    5. 'uer' → logprob: -12.625631332397461
    6. 'ues' → logprob: -12.875631332397461
    7. ' ue' → logprob: -13.750631332397461
    8. 'ued' → logprob: -15.375631332397461
    9. 'ué' → logprob: -15.500631332397461
    10. 'uem' → logprob: -15.625631332397461

Token 199: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.7156167030334473
    2. '[]' → logprob: -1.4656167030334473
    3. ' []' → logprob: -1.9656167030334473
    4. ' [(' → logprob: -1.9656167030334473
    5. '[' → logprob: -11.465616226196289
    6. '[]
' → logprob: -12.090616226196289
    7. ' [' → logprob: -12.340616226196289
    8. '=[]' → logprob: -12.340616226196289
    9. ' []
' → logprob: -12.840616226196289
    10. ' []
' → logprob: -13.340616226196289

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7372048862162046e-05
    2. ' ' → logprob: -11.250027656555176
    3. 'dist' → logprob: -11.250027656555176
    4. '   ' → logprob: -14.500027656555176
    5. 'start' → logprob: -14.625027656555176
    6. ' dist' → logprob: -16.12502670288086
    7. '(dist' → logprob: -16.50002670288086
    8. ')' → logprob: -16.50002670288086
    9. ',' → logprob: -17.37502670288086
    10. '```' → logprob: -18.18752670288086

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025458165910094976
    2. ',start' → logprob: -6.0025458335876465
    3. ' ,' → logprob: -10.002545356750488
    4. 'start' → logprob: -11.002545356750488
    5. '[start' → logprob: -12.502545356750488
    6. '(start' → logprob: -13.627545356750488
    7. '<|end|>' → logprob: -13.752545356750488
    8. 'import' → logprob: -14.627545356750488
    9. ')' → logprob: -14.877545356750488
    10. '```' → logprob: -15.127545356750488

Token 202: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.03804550692439079
    2. ' start' → logprob: -3.2880454063415527
    3. '[start' → logprob: -13.413045883178711
    4. ' ' → logprob: -14.413045883178711
    5. '(start' → logprob: -14.538045883178711
    6. ')' → logprob: -14.663045883178711
    7. '=start' → logprob: -15.288045883178711
    8. ':start' → logprob: -15.538045883178711
    9. '	start' → logprob: -16.03804588317871
    10. 'star' → logprob: -16.03804588317871

Token 203: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0017151589272543788
    2. ')' → logprob: -6.376715183258057
    3. ' )' → logprob: -11.876714706420898
    4. ']' → logprob: -13.501714706420898
    5. '),' → logprob: -13.751714706420898
    6. ')])' → logprob: -13.751714706420898
    7. ')]
' → logprob: -14.126714706420898
    8. ')]
' → logprob: -14.501714706420898
    9. '))' → logprob: -14.751714706420898
    10. ')],' → logprob: -15.626714706420898

Token 204: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22324581444263458
    2. '   ' → logprob: -2.223245859146118
    3. '<|end|>' → logprob: -3.473245859146118
    4. ')' → logprob: -3.973245859146118
    5. '  
' → logprob: -4.223245620727539
    6. '    
' → logprob: -4.598245620727539
    7. ' ' → logprob: -5.098245620727539
    8. ' 
' → logprob: -5.223245620727539
    9. '' → logprob: -6.848245620727539
    10. '  ' → logprob: -7.098245620727539

Token 205: ' Initial' (ID: 9209)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.24218928813934326
    2. ')' → logprob: -1.9921892881393433
    3. ' heap' → logprob: -3.367189407348633
    4. '#' → logprob: -4.742189407348633
    5. '(heap' → logprob: -4.867189407348633
    6. '   ' → logprob: -4.867189407348633
    7. 'he' → logprob: -5.492189407348633
    8. 'import' → logprob: -5.617189407348633
    9. ' ' → logprob: -6.117189407348633
    10. '[]' → logprob: -6.242189407348633

Token 206: 'isation' (ID: 6993)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7830183506011963
    2. 'e' → logprob: -1.4080183506011963
    3. '   ' → logprob: -2.6580183506011963
    4. ',' → logprob: -3.4080183506011963
    5. 'ize' → logprob: -3.5330183506011963
    6. ' ' → logprob: -3.6580183506011963
    7. 'iser' → logprob: -3.7830183506011963
    8. ' heap' → logprob: -4.033018112182617
    9. ' )' → logprob: -4.533018112182617
    10. '[' → logprob: -4.533018112182617

Token 207: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: ''une' (ID: 13337)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5464199781417847
    2. ' une' → logprob: -1.9214199781417847
    3. 'une' → logprob: -2.671420097351074
    4. 'a' → logprob: -2.921420097351074
    5. 'u' → logprob: -3.546420097351074
    6. 'e' → logprob: -3.671420097351074
    7. ')' → logprob: -3.921420097351074
    8. ' a' → logprob: -4.421420097351074
    9. ' un' → logprob: -4.421420097351074
    10. ' ' → logprob: -5.046420097351074

Token 209: ' file' (ID: 1974)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.8144749999046326
    2. '[]' → logprob: -1.3144750595092773
    3. ' heap' → logprob: -1.9394750595092773
    4. 'priority' → logprob: -3.1894750595092773
    5. '[' → logprob: -3.5644750595092773
    6. 'list' → logprob: -3.8144750595092773
    7. ' []' → logprob: -4.439475059509277
    8. ' list' → logprob: -4.814475059509277
    9. ' priority' → logprob: -4.939475059509277
    10. '[(' → logprob: -5.064475059509277

Token 210: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.48418113589286804
    2. 'de' → logprob: -2.4841811656951904
    3. ' d' → logprob: -2.6091811656951904
    4. '<|end|>' → logprob: -2.8591811656951904
    5. ',' → logprob: -3.1091811656951904
    6. ')' → logprob: -3.6091811656951904
    7. ' ' → logprob: -4.109180927276611
    8. 'd' → logprob: -4.234180927276611
    9. '    ' → logprob: -4.859180927276611
    10. '   ' → logprob: -4.984180927276611

Token 211: ' priorité' (ID: 150252)
  Prédit: 'prior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prior' → logprob: -0.003312819404527545
    2. 'priority' → logprob: -5.878312587738037
    3. ' priorité' → logprob: -8.003313064575195
    4. 'prio' → logprob: -8.878313064575195
    5. 'pri' → logprob: -11.253313064575195
    6. '_prior' → logprob: -11.753313064575195
    7. ' prior' → logprob: -12.753313064575195
    8. 'Prior' → logprob: -13.128313064575195
    9. 'p' → logprob: -13.378313064575195
    10. '```' → logprob: -13.628313064575195

Token 212: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: 'ici' (ID: 3757)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.5813502073287964
    2. ')' → logprob: -1.7063502073287964
    3. 'heap' → logprob: -1.9563502073287964
    4. '[]' → logprob: -3.081350326538086
    5. '[' → logprob: -3.456350326538086
    6. ' [(' → logprob: -3.831350326538086
    7. '[])' → logprob: -5.331350326538086
    8. '[
' → logprob: -5.456350326538086
    9. ' [])' → logprob: -6.331350326538086
    10. 'list' → logprob: -6.831350326538086

Token 214: ' une' (ID: 2463)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.074668526649475
    2. ' un' → logprob: -1.949668526649475
    3. ' une' → logprob: -2.0746684074401855
    4. ')' → logprob: -2.1996684074401855
    5. ' )' → logprob: -2.5746684074401855
    6. 'min' → logprob: -2.9496684074401855
    7. ' a' → logprob: -3.8246684074401855
    8. ' ,' → logprob: -3.8246684074401855
    9. ' ' → logprob: -4.1996684074401855
    10. ' min' → logprob: -4.3246684074401855

Token 215: ' liste' (ID: 31719)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.4425685405731201
    2. 'liste' → logprob: -1.4425685405731201
    3. 'list' → logprob: -1.5675685405731201
    4. 'min' → logprob: -1.9425685405731201
    5. ' liste' → logprob: -1.9425685405731201
    6. '[]' → logprob: -4.192568778991699
    7. ' list' → logprob: -4.817568778991699
    8. ' heap' → logprob: -5.817568778991699
    9. 'import' → logprob: -6.692568778991699
    10. ' min' → logprob: -6.817568778991699

Token 216: ' contenant' (ID: 131049)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07023473083972931
    2. 'heap' → logprob: -3.695234775543213
    3. ',' → logprob: -4.695234775543213
    4. ' de' → logprob: -4.820234775543213
    5. 'import' → logprob: -4.820234775543213
    6. ' )' → logprob: -5.945234775543213
    7. ' heap' → logprob: -6.070234775543213
    8. '[' → logprob: -6.445234775543213
    9. '[(' → logprob: -6.570234775543213
    10. ']' → logprob: -6.570234775543213

Token 217: ' un' (ID: 537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5934906005859375
    2. ' (' → logprob: -0.8434906005859375
    3. '<|end|>' → logprob: -5.0934906005859375
    4. ')' → logprob: -5.3434906005859375
    5. ' ' → logprob: -6.0934906005859375
    6. ' un' → logprob: -6.4684906005859375
    7. ' le' → logprob: -7.8434906005859375
    8. ' une' → logprob: -7.9684906005859375
    9. ' la' → logprob: -8.093490600585938
    10. 'the' → logprob: -8.218490600585938

Token 218: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.3629092872142792
    2. 'tuple' → logprob: -1.4879093170166016
    3. 'tu' → logprob: -2.6129093170166016
    4. ' (' → logprob: -6.362909317016602
    5. '(tuple' → logprob: -7.362909317016602
    6. ' couple' → logprob: -7.987909317016602
    7. ' tuples' → logprob: -8.112909317016602
    8. ')' → logprob: -8.112909317016602
    9. 'uple' → logprob: -8.237909317016602
    10. ' ' → logprob: -8.237909317016602

Token 219: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6508933901786804
    2. ' (' → logprob: -1.2758934497833252
    3. ')' → logprob: -1.7758934497833252
    4. ' )' → logprob: -4.025893211364746
    5. ' de' → logprob: -5.150893211364746
    6. '  ' → logprob: -6.525893211364746
    7. ',' → logprob: -6.900893211364746
    8. '   ' → logprob: -7.275893211364746
    9. ' ' → logprob: -7.650893211364746
    10. 'd' → logprob: -8.275893211364746

Token 220: 'distance' (ID: 40614)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008897828869521618
    2. ' ' → logprob: -5.00889778137207
    3. 'distance' → logprob: -6.50889778137207
    4. 'dist' → logprob: -8.25889778137207
    5. ')' → logprob: -8.75889778137207
    6. '(' → logprob: -9.88389778137207
    7. 'cost' → logprob: -10.00889778137207
    8. ' distance' → logprob: -10.13389778137207
    9. ' dist' → logprob: -10.63389778137207
    10. '   ' → logprob: -10.75889778137207

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002981624274980277
    2. ' ,' → logprob: -8.500298500061035
    3. '0' → logprob: -10.125298500061035
    4. ')' → logprob: -11.125298500061035
    5. ',current' → logprob: -11.500298500061035
    6. ',)' → logprob: -12.125298500061035
    7. ' ' → logprob: -12.500298500061035
    8. 's' → logprob: -13.125298500061035
    9. ',
' → logprob: -13.250298500061035
    10. '<|end|>' → logprob: -13.625298500061035

Token 222: ' numéro' (ID: 65036)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.22658038139343262
    2. ' node' → logprob: -2.8515803813934326
    3. ' start' → logprob: -2.9765803813934326
    4. 'start' → logprob: -3.3515803813934326
    5. 'vertex' → logprob: -3.9765803813934326
    6. 'node' → logprob: -4.101580619812012
    7. ' vertex' → logprob: -4.226580619812012
    8. 'som' → logprob: -5.726580619812012
    9. ' noe' → logprob: -6.101580619812012
    10. ' som' → logprob: -6.851580619812012

Token 223: ' de' (ID: 334)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.6500943899154663
    2. ' sommet' → logprob: -2.275094509124756
    3. ',' → logprob: -2.775094509124756
    4. ')' → logprob: -2.775094509124756
    5. 'som' → logprob: -2.775094509124756
    6. ' du' → logprob: -3.150094509124756
    7. '_du' → logprob: -3.400094509124756
    8. 'de' → logprob: -3.900094509124756
    9. ' de' → logprob: -4.150094509124756
    10. '_de' → logprob: -4.150094509124756

Token 224: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.6701610088348389
    2. 'som' → logprob: -1.0451610088348389
    3. ' noe' → logprob: -2.420161008834839
    4. 's' → logprob: -3.170161008834839
    5. 'no' → logprob: -6.045161247253418
    6. 'node' → logprob: -6.795161247253418
    7. 'n' → logprob: -7.295161247253418
    8. 'vertex' → logprob: -7.795161247253418
    9. ')' → logprob: -8.045161247253418
    10. ' som' → logprob: -8.295161247253418

Token 225: ')),' (ID: 12098)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.429513543844223
    2. ')' → logprob: -1.0545135736465454
    3. ')])' → logprob: -7.804513454437256
    4. '))' → logprob: -8.179513931274414
    5. ' )' → logprob: -9.804513931274414
    6. '),' → logprob: -10.679513931274414
    7. ']' → logprob: -10.804513931274414
    8. ')]
' → logprob: -11.929513931274414
    9. ')
' → logprob: -12.304513931274414
    10. ')],' → logprob: -12.679513931274414

Token 226: ' utilisée' (ID: 106548)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39982926845550537
    2. '   ' → logprob: -1.8998292684555054
    3. 'heap' → logprob: -2.149829387664795
    4. ' heap' → logprob: -4.774829387664795
    5. '
' → logprob: -4.774829387664795
    6. ' ' → logprob: -5.149829387664795
    7. '    
' → logprob: -5.149829387664795
    8. 'while' → logprob: -5.524829387664795
    9. '#' → logprob: -5.649829387664795
    10. 'import' → logprob: -5.774829387664795

Token 227: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.6582918167114258
    2. ' for' → logprob: -1.6582918167114258
    3. ')' → logprob: -1.9082918167114258
    4. 'for' → logprob: -2.658291816711426
    5. 'pour' → logprob: -3.658291816711426
    6. ' ' → logprob: -4.283291816711426
    7. ',' → logprob: -4.408291816711426
    8. '   ' → logprob: -4.908291816711426
    9. ' to' → logprob: -5.283291816711426
    10. 'import' → logprob: -6.783291816711426

Token 228: ' explorer' (ID: 73961)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.3425702154636383
    2. 'expl' → logprob: -2.4675703048706055
    3. 'process' → logprob: -3.3425703048706055
    4. ' traiter' → logprob: -3.7175703048706055
    5. ' gérer' → logprob: -3.8425703048706055
    6. ')' → logprob: -3.9675703048706055
    7. ' heap' → logprob: -4.0925703048706055
    8. 'he' → logprob: -4.2175703048706055
    9. 'pop' → logprob: -4.5925703048706055
    10. 'tr' → logprob: -4.9675703048706055

Token 229: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: ' somm' (ID: 44830)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -1.2358310222625732
    2. ')' → logprob: -1.3608310222625732
    3. '   ' → logprob: -2.1108310222625732
    4. 'vertices' → logprob: -2.7358310222625732
    5. 'neighbors' → logprob: -2.9858310222625732
    6. ' nodes' → logprob: -3.1108310222625732
    7. 'dist' → logprob: -3.6108310222625732
    8. ' voisins' → logprob: -3.8608310222625732
    9. 'som' → logprob: -4.235831260681152
    10. 'que' → logprob: -4.485831260681152

Token 231: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.010987096466124058
    2. 'et' → logprob: -5.260987281799316
    3. 'its' → logprob: -5.760987281799316
    4. 'ts' → logprob: -6.760987281799316
    5. 'ats' → logprob: -7.385987281799316
    6. 'it' → logprob: -8.260987281799316
    7. 't' → logprob: -8.635987281799316
    8. ')' → logprob: -9.135987281799316
    9. 'ents' → logprob: -9.385987281799316
    10. 'êts' → logprob: -9.510987281799316

Token 232: ' les' (ID: 1341)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007834807969629765
    2. '   ' → logprob: -5.3828349113464355
    3. '<|end|>' → logprob: -6.6328349113464355
    4. ',' → logprob: -7.3828349113464355
    5. ' )' → logprob: -7.8828349113464355
    6. ' ' → logprob: -8.007834434509277
    7. '
' → logprob: -8.632834434509277
    8. '  ' → logprob: -9.882834434509277
    9. 's' → logprob: -10.007834434509277
    10. '    ' → logprob: -10.382834434509277

Token 233: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.04804965481162071
    2. 'plus' → logprob: -3.4230496883392334
    3. ')' → logprob: -4.798049449920654
    4. ' )' → logprob: -7.048049449920654
    5. ',' → logprob: -7.423049449920654
    6. 'import' → logprob: -7.548049449920654
    7. 'à' → logprob: -7.548049449920654
    8. ' à' → logprob: -7.798049449920654
    9. ' ' → logprob: -7.923049449920654
    10. '+' → logprob: -8.173049926757812

Token 234: ' proches' (ID: 91241)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.2733440399169922
    2. ' proches' → logprob: -1.6483440399169922
    3. 'cour' → logprob: -4.023344039916992
    4. 'prox' → logprob: -5.273344039916992
    5. '_' → logprob: -5.523344039916992
    6. '```' → logprob: -5.773344039916992
    7. 'près' → logprob: -5.773344039916992
    8. 'court' → logprob: -6.023344039916992
    9. '
' → logprob: -6.523344039916992
    10. 'pet' → logprob: -6.898344039916992

Token 235: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3574620485305786
    2. '
' → logprob: -1.6074620485305786
    3. '    
' → logprob: -3.357461929321289
    4. 'while' → logprob: -3.732461929321289
    5. ' while' → logprob: -4.107461929321289
    6. ')' → logprob: -4.482461929321289
    7. '	while' → logprob: -4.982461929321289
    8. '  
' → logprob: -6.857461929321289
    9. ',' → logprob: -6.857461929321289
    10. '	
' → logprob: -6.982461929321289

Token 236: ' priorité' (ID: 150252)
  Prédit: ' priorité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' priorité' → logprob: -0.2135249674320221
    2. 'prior' → logprob: -2.5885250568389893
    3. ' continu' → logprob: -3.0885250568389893
    4. ' premier' → logprob: -4.21352481842041
    5. 'continu' → logprob: -4.46352481842041
    6. 'continue' → logprob: -4.71352481842041
    7. 'priority' → logprob: -4.96352481842041
    8. 'ordre' → logprob: -5.08852481842041
    9. ' continue' → logprob: -5.46352481842041
    10. 'fonction' → logprob: -5.71352481842041

Token 237: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3629695177078247
    2. '   ' → logprob: -1.7379695177078247
    3. '
' → logprob: -2.112969398498535
    4. 'while' → logprob: -6.237969398498535
    5. '    
' → logprob: -6.362969398498535
    6. ',' → logprob: -6.987969398498535
    7. '  
' → logprob: -7.237969398498535
    8. ' ' → logprob: -7.362969398498535
    9. ')
' → logprob: -7.737969398498535
    10. '' → logprob: -8.112969398498535

Token 238: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5428054928779602
    2. '   ' → logprob: -1.2928054332733154
    3. '	while' → logprob: -2.2928054332733154
    4. ' while' → logprob: -3.1678054332733154
    5. '    
' → logprob: -7.7928056716918945
    6. ')' → logprob: -8.167805671691895
    7. '
' → logprob: -8.792805671691895
    8. ' ' → logprob: -9.417805671691895
    9. '' → logprob: -9.542805671691895
    10. '	' → logprob: -9.917805671691895

Token 239: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.015567604452371597
    2. '   ' → logprob: -4.515567779541016
    3. ' while' → logprob: -6.015567779541016
    4. '
' → logprob: -7.140567779541016
    5. '	while' → logprob: -7.515567779541016
    6. 'heap' → logprob: -7.515567779541016
    7. '    
' → logprob: -9.140567779541016
    8. 'visited' → logprob: -10.140567779541016
    9. '  ' → logprob: -12.015567779541016
    10. '	
' → logprob: -12.390567779541016

Token 240: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.1269325166940689
    2. 'que' → logprob: -2.1269326210021973
    3. ' ' → logprob: -12.626932144165039
    4. ' ' → logprob: -14.626932144165039
    5. 'qu' → logprob: -15.751932144165039
    6. '	' → logprob: -16.00193214416504
    7. 'Que' → logprob: -16.62693214416504
    8. '
' → logprob: -16.75193214416504
    9. ' len' → logprob: -16.87693214416504
    10. ' queue' → logprob: -16.87693214416504

Token 241: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.828512363834307e-05
    2. ':
' → logprob: -10.000088691711426
    3. '):' → logprob: -10.375088691711426
    4. '>:' → logprob: -12.500088691711426
    5. ' :' → logprob: -13.500088691711426
    6. ']:' → logprob: -13.500088691711426
    7. '[' → logprob: -13.750088691711426
    8. ' and' → logprob: -14.500088691711426
    9. '>' → logprob: -14.625088691711426
    10. 'and' → logprob: -14.875088691711426

Token 242: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3125976622104645
    2. 'd' → logprob: -1.812597632408142
    3. ',' → logprob: -2.5625977516174316
    4. '   ' → logprob: -4.437597751617432
    5. ' d' → logprob: -5.437597751617432
    6. 'dist' → logprob: -6.312597751617432
    7. ' ,' → logprob: -6.312597751617432
    8. ',d' → logprob: -6.687597751617432
    9. '0' → logprob: -6.937597751617432
    10. '    ' → logprob: -6.937597751617432

Token 243: ' Bou' (ID: 33816)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48884958028793335
    2. 'd' → logprob: -1.1138496398925781
    3. ' d' → logprob: -3.738849639892578
    4. 'dist' → logprob: -3.738849639892578
    5. ' dist' → logprob: -5.488849639892578
    6. 'cost' → logprob: -5.863849639892578
    7. 'distance' → logprob: -7.113849639892578
    8. ' cost' → logprob: -7.363849639892578
    9. 'c' → logprob: -7.738849639892578
    10. ',' → logprob: -8.113849639892578

Token 244: 'cle' (ID: 3170)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06371396034955978
    2. '   ' → logprob: -3.438714027404785
    3. 'u' → logprob: -4.563714027404785
    4. 'i' → logprob: -4.563714027404785
    5. ' e' → logprob: -5.938714027404785
    6. 'r' → logprob: -5.938714027404785
    7. 'ue' → logprob: -7.188714027404785
    8. '    ' → logprob: -7.438714027404785
    9. 'ie' → logprob: -8.063714027404785
    10. '       ' → logprob: -8.188714027404785

Token 245: ' principale' (ID: 68926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8335327506065369
    2. ',' → logprob: -1.7085328102111816
    3. ':' → logprob: -1.8335328102111816
    4. ' ' → logprob: -2.5835328102111816
    5. '    ' → logprob: -3.3335328102111816
    6. '  ' → logprob: -3.4585328102111816
    7. '=' → logprob: -4.208532810211182
    8. ' :' → logprob: -4.583532810211182
    9. '[' → logprob: -4.708532810211182
    10. ' ,' → logprob: -4.833532810211182

Token 246: ' tant' (ID: 16235)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07681354880332947
    2. '       ' → logprob: -2.7018134593963623
    3. '   ' → logprob: -5.576813697814941
    4. ':' → logprob: -6.576813697814941
    5. ' ,' → logprob: -6.951813697814941
    6. '    ' → logprob: -8.701813697814941
    7. ')' → logprob: -9.326813697814941
    8. '      ' → logprob: -9.576813697814941
    9. '     ' → logprob: -10.201813697814941
    10. '<|end|>' → logprob: -10.326813697814941

Token 247: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.000386701402021572
    2. 'que' → logprob: -8.875386238098145
    3. ' qu' → logprob: -9.000386238098145
    4. ' len' → logprob: -9.875386238098145
    5. ' not' → logprob: -10.250386238098145
    6. '   ' → logprob: -10.625386238098145
    7. ' ' → logprob: -12.250386238098145
    8. ' queue' → logprob: -12.750386238098145
    9. 'qu' → logprob: -13.750386238098145
    10. '    ' → logprob: -14.375386238098145

Token 248: ' la' (ID: 557)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.004644196014851332
    2. 'que' → logprob: -5.379644393920898
    3. ' len' → logprob: -11.504644393920898
    4. ' ' → logprob: -12.004644393920898
    5. ' la' → logprob: -13.379644393920898
    6. ' qu' → logprob: -13.754644393920898
    7. 'Que' → logprob: -13.754644393920898
    8. ' ' → logprob: -13.879644393920898
    9. '   ' → logprob: -14.629644393920898
    10. 'qu' → logprob: -14.754644393920898

Token 249: ' file' (ID: 1974)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.20454509556293488
    2. 'que' → logprob: -1.7045451402664185
    3. ' queue' → logprob: -6.454545021057129
    4. ' ' → logprob: -6.954545021057129
    5. 'queue' → logprob: -7.954545021057129
    6. 'ue' → logprob: -10.204545021057129
    7. ' ' → logprob: -10.329545021057129
    8. 'qu' → logprob: -10.454545021057129
    9. ' file' → logprob: -10.704545021057129
    10. '   ' → logprob: -11.204545021057129

Token 250: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: ' priorité' (ID: 150252)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.030684882774949074
    2. ' que' → logprob: -3.5306849479675293
    3. 'len' → logprob: -7.780684947967529
    4. 'queue' → logprob: -8.655684471130371
    5. 'heap' → logprob: -9.405684471130371
    6. ' ' → logprob: -10.155684471130371
    7. 'priority' → logprob: -10.280684471130371
    8. 'dist' → logprob: -10.280684471130371
    9. 'not' → logprob: -10.530684471130371
    10. '1' → logprob: -10.655684471130371

Token 252: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13689586520195007
    2. '<|end|>' → logprob: -2.1368958950042725
    3. ':
' → logprob: -6.261895656585693
    4. ')' → logprob: -6.386895656585693
    5. '):' → logprob: -6.886895656585693
    6. '<|end|>' → logprob: -7.136895656585693
    7. ' :' → logprob: -7.261895656585693
    8. ' is' → logprob: -7.261895656585693
    9. '.' → logprob: -7.386895656585693
    10. ' ' → logprob: -7.386895656585693

Token 253: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.7805811762809753
    2. ''' → logprob: -1.7805812358856201
    3. 'ot' → logprob: -2.03058123588562
    4. 'e' → logprob: -2.15558123588562
    5. 'o' → logprob: -2.65558123588562
    6. ''ex' → logprob: -4.530580997467041
    7. ''ont' → logprob: -5.530580997467041
    8. 'on' → logprob: -5.655580997467041
    9. ''on' → logprob: -6.155580997467041
    10. '’est' → logprob: -6.155580997467041

Token 254: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.618754506111145
    2. 'pas' → logprob: -1.118754506111145
    3. ' not' → logprob: -2.1187543869018555
    4. 'not' → logprob: -4.2437543869018555
    5. 'Pas' → logprob: -10.243754386901855
    6. ' ' → logprob: -10.618754386901855
    7. '_pas' → logprob: -10.993754386901855
    8. 'ot' → logprob: -11.118754386901855
    9. '0' → logprob: -11.243754386901855
    10. 't' → logprob: -11.368754386901855

Token 255: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.0525338351726532
    2. ' vide' → logprob: -3.0525338649749756
    3. 'empty' → logprob: -5.6775336265563965
    4. ' empty' → logprob: -8.302534103393555
    5. 'vid' → logprob: -8.427534103393555
    6. 'Vide' → logprob: -10.927534103393555
    7. '[]' → logprob: -11.427534103393555
    8. 'empt' → logprob: -11.677534103393555
    9. 'v' → logprob: -12.427534103393555
    10. 'Empty' → logprob: -13.427534103393555

Token 256: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29752856492996216
    2. ',' → logprob: -1.9225285053253174
    3. ':' → logprob: -2.7975285053253174
    4. '   ' → logprob: -3.2975285053253174
    5. '    ' → logprob: -5.1725287437438965
    6. '     ' → logprob: -7.0475287437438965
    7. ' ' → logprob: -7.0475287437438965
    8. '  ' → logprob: -7.1725287437438965
    9. '      ' → logprob: -7.2975287437438965
    10. ')' → logprob: -7.5475287437438965

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10261065512895584
    2. ',' → logprob: -2.7276105880737305
    3. '   ' → logprob: -3.8526105880737305
    4. 'd' → logprob: -5.6026105880737305
    5. '    ' → logprob: -5.7276105880737305
    6. ' ,' → logprob: -6.6026105880737305
    7. '(' → logprob: -8.22761058807373
    8. '     ' → logprob: -8.35261058807373
    9. '      ' → logprob: -8.47761058807373
    10. 'u' → logprob: -8.60261058807373

Token 258: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.16653749346733093
    2. 'cost' → logprob: -2.4165375232696533
    3. ' d' → logprob: -3.5415375232696533
    4. '   ' → logprob: -4.416537284851074
    5. 'cur' → logprob: -4.791537284851074
    6. 'dist' → logprob: -4.916537284851074
    7. 'current' → logprob: -6.416537284851074
    8. ' cost' → logprob: -6.541537284851074
    9. 'c' → logprob: -6.541537284851074
    10. 'curr' → logprob: -6.666537284851074

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012141639599576592
    2. 'ist' → logprob: -7.126214027404785
    3. ' ,' → logprob: -8.001214027404785
    4. 'istance' → logprob: -10.251214027404785
    5. ',
' → logprob: -11.626214027404785
    6. ',u' → logprob: -12.126214027404785
    7. 'is' → logprob: -12.376214027404785
    8. ',_' → logprob: -12.876214027404785
    9. ',i' → logprob: -13.001214027404785
    10. 'e' → logprob: -13.126214027404785

Token 260: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.17557042837142944
    2. 'v' → logprob: -1.9255704879760742
    3. ' u' → logprob: -4.300570487976074
    4. ' v' → logprob: -6.550570487976074
    5. 'node' → logprob: -8.925570487976074
    6. 'cur' → logprob: -9.925570487976074
    7. 'pos' → logprob: -10.925570487976074
    8. ' node' → logprob: -11.050570487976074
    9. 'current' → logprob: -11.925570487976074
    10. 'now' → logprob: -12.425570487976074

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326642632484436
    2. '=' → logprob: -1.313266396522522
    3. '   ' → logprob: -14.06326675415039
    4. 'heap' → logprob: -14.43826675415039
    5. '=v' → logprob: -14.43826675415039
    6. ')' → logprob: -14.56326675415039
    7. ' ' → logprob: -14.81326675415039
    8. 'v' → logprob: -14.93826675415039
    9. ')=' → logprob: -15.18826675415039
    10. 'pop' → logprob: -15.68826675415039

Token 262: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.25208398699760437
    2. 'heap' → logprob: -1.5020840167999268
    3. ' he' → logprob: -9.377083778381348
    4. 'he' → logprob: -9.877083778381348
    5. ' ' → logprob: -12.377083778381348
    6. '(heap' → logprob: -12.377083778381348
    7. '.heap' → logprob: -12.502083778381348
    8. ' que' → logprob: -13.252083778381348
    9. ' queue' → logprob: -14.002083778381348
    10. ' hea' → logprob: -14.252083778381348

Token 263: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.5048530030981055e-06
    2. 'p' → logprob: -13.500001907348633
    3. ',' → logprob: -16.750001907348633
    4. '
' → logprob: -18.000001907348633
    5. '	q' → logprob: -18.375001907348633
    6. ' q' → logprob: -18.375001907348633
    7. 'v' → logprob: -19.125001907348633
    8. '

' → logprob: -19.375001907348633
    9. ',q' → logprob: -19.375001907348633
    10. '[' → logprob: -19.500001907348633

Token 264: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00012368128227535635
    2. '.' → logprob: -9.250123977661133
    3. '.heap' → logprob: -10.875123977661133
    4. '.pop' → logprob: -12.000123977661133
    5. ' .' → logprob: -13.875123977661133
    6. ' he' → logprob: -14.750123977661133
    7. '.q' → logprob: -15.375123977661133
    8. 'he' → logprob: -15.500123977661133
    9. '.h' → logprob: -15.750123977661133
    10. 'q' → logprob: -16.000123977661133

Token 265: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -9.088346359931165e-07
    2. 'ap' → logprob: -14.500000953674316
    3. 'pp' → logprob: -15.125000953674316
    4. 'a' → logprob: -17.0
    5. '```' → logprob: -19.625
    6. 'appe' → logprob: -19.75
    7. '(app' → logprob: -20.0
    8. '[' → logprob: -20.0
    9. ' app' → logprob: -20.125
    10. 'q' → logprob: -20.25

Token 266: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0010355490958318114
    2. 'ush' → logprob: -6.876035690307617
    3. '[' → logprob: -13.626035690307617
    4. 'o' → logprob: -14.626035690307617
    5. 'p' → logprob: -15.001035690307617
    6. 'pop' → logprob: -15.501035690307617
    7. 'opf' → logprob: -15.626035690307617
    8. 'app' → logprob: -16.126035690307617
    9. '```' → logprob: -16.376035690307617
    10. 'opleft' → logprob: -16.751035690307617

Token 267: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -16.625
    3. '(
' → logprob: -17.375
    4. '(queue' → logprob: -18.375
    5. '((' → logprob: -19.0
    6. '(q' → logprob: -20.5
    7. '(

' → logprob: -21.25
    8. '()' → logprob: -21.5
    9. '(qu' → logprob: -21.75
    10. ')' → logprob: -21.75

Token 268: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0001290454383706674
    2. ' que' → logprob: -9.000128746032715
    3. ')' → logprob: -13.125128746032715
    4. '(' → logprob: -13.250128746032715
    5. 'qu' → logprob: -13.625128746032715
    6. 'q' → logprob: -16.00012969970703
    7. 'qui' → logprob: -16.37512969970703
    8. 'quee' → logprob: -16.50012969970703
    9. 'Que' → logprob: -16.62512969970703
    10. '```' → logprob: -16.62512969970703

Token 269: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ' )' → logprob: -12.625004768371582
    3. ')
' → logprob: -13.750004768371582
    4. '       ' → logprob: -16.875003814697266
    5. ')#' → logprob: -16.875003814697266
    6. '<|end|>' → logprob: -17.625003814697266
    7. ')`' → logprob: -17.750003814697266
    8. ')

' → logprob: -18.000003814697266
    9. ')v' → logprob: -18.125003814697266
    10. '   ' → logprob: -18.125003814697266

Token 270: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: ' On' (ID: 2160)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7006725668907166
    2. 'if' → logprob: -0.8256725668907166
    3. 'd' → logprob: -3.5756726264953613
    4. '       ' → logprob: -4.450672626495361
    5. 'dist' → logprob: -5.200672626495361
    6. '        ' → logprob: -5.325672626495361
    7. '
' → logprob: -5.325672626495361
    8. ' d' → logprob: -5.950672626495361
    9. ' dist' → logprob: -6.075672626495361
    10. 'v' → logprob: -6.200672626495361

Token 272: ' retire' (ID: 48410)
  Prédit: ' récup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' récup' → logprob: -0.6785348653793335
    2. 'v' → logprob: -2.053534984588623
    3. ' continue' → logprob: -2.553534984588623
    4. 'continue' → logprob: -3.303534984588623
    5. 'pop' → logprob: -3.303534984588623
    6. 'if' → logprob: -3.303534984588623
    7. 'extract' → logprob: -3.303534984588623
    8. 'd' → logprob: -4.053534984588623
    9. ' pop' → logprob: -4.053534984588623
    10. 'expl' → logprob: -4.053534984588623

Token 273: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7861112356185913
    2. '<|end|>' → logprob: -1.6611112356185913
    3. ' heap' → logprob: -2.161111354827881
    4. ' l' → logprob: -2.286111354827881
    5. ' que' → logprob: -3.161111354827881
    6. ' ' → logprob: -3.786111354827881
    7. 'heap' → logprob: -3.786111354827881
    8. ')' → logprob: -4.536111354827881
    9. 'l' → logprob: -4.911111354827881
    10. 'the' → logprob: -5.161111354827881

Token 275: ' file' (ID: 1974)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.8342648148536682
    2. 'prem' → logprob: -1.8342647552490234
    3. ' sommet' → logprob: -2.2092647552490234
    4. ' plus' → logprob: -2.8342647552490234
    5. ' premier' → logprob: -2.9592647552490234
    6. 'heap' → logprob: -3.4592647552490234
    7. 'tas' → logprob: -3.5842647552490234
    8. 'queue' → logprob: -3.9592647552490234
    9. '```' → logprob: -4.334264755249023
    10. ' tas' → logprob: -4.459264755249023

Token 276: ' le' (ID: 505)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9563421607017517
    2. ' le' → logprob: -1.0813422203063965
    3. 'le' → logprob: -2.5813422203063965
    4. ')' → logprob: -3.0813422203063965
    5. ' la' → logprob: -3.7063422203063965
    6. ' ' → logprob: -3.8313422203063965
    7. 'q' → logprob: -3.8313422203063965
    8. '<|end|>' → logprob: -4.4563422203063965
    9. ' (' → logprob: -4.5813422203063965
    10. 'v' → logprob: -4.5813422203063965

Token 277: ' sommet' (ID: 130502)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.9174264073371887
    2. ' sommet' → logprob: -1.292426347732544
    3. ' tuple' → logprob: -2.042426347732544
    4. ' ' → logprob: -2.792426347732544
    5. 'plus' → logprob: -3.167426347732544
    6. ')' → logprob: -4.042426586151123
    7. 'élé' → logprob: -4.542426586151123
    8. ' prochain' → logprob: -4.667426586151123
    9. ' couple' → logprob: -4.792426586151123
    10. ' meilleur' → logprob: -5.042426586151123

Token 278: ' avec' (ID: 3937)
  Prédit: ' ayant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ayant' → logprob: -1.2889065742492676
    2. ' avec' → logprob: -1.5389065742492676
    3. ',' → logprob: -1.6639065742492676
    4. ' le' → logprob: -2.1639065742492676
    5. ' ' → logprob: -2.7889065742492676
    6. 'ayant' → logprob: -3.4139065742492676
    7. 'le' → logprob: -3.6639065742492676
    8. ' ,' → logprob: -4.288906574249268
    9. ' de' → logprob: -4.288906574249268
    10. ' courant' → logprob: -4.913906574249268

Token 279: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.01309058628976345
    2. ' le' → logprob: -5.76309061050415
    3. '<|end|>' → logprob: -5.76309061050415
    4. 'la' → logprob: -6.01309061050415
    5. ' l' → logprob: -6.26309061050415
    6. 'le' → logprob: -7.13809061050415
    7. ' ' → logprob: -8.138090133666992
    8. ')' → logprob: -8.638090133666992
    9. ' the' → logprob: -8.638090133666992
    10. ',' → logprob: -8.638090133666992

Token 280: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.47773298621177673
    2. ' plus' → logprob: -0.9777330160140991
    3. 'distance' → logprob: -6.852733135223389
    4. 'd' → logprob: -7.102733135223389
    5. '+' → logprob: -7.727733135223389
    6. ' moindre' → logprob: -7.852733135223389
    7. '_plus' → logprob: -8.35273265838623
    8. 'moins' → logprob: -8.47773265838623
    9. '-plus' → logprob: -8.97773265838623
    10. 'dist' → logprob: -9.47773265838623

Token 281: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.7567498087882996
    2. '-' → logprob: -2.1317498683929443
    3. 'pro' → logprob: -2.3817498683929443
    4. '_' → logprob: -2.3817498683929443
    5. ' ' → logprob: -3.0067498683929443
    6. ' petit' → logprob: -3.2567498683929443
    7. ' proche' → logprob: -3.3817498683929443
    8. ' petite' → logprob: -3.5067498683929443
    9. ' -' → logprob: -4.131749629974365
    10. ' pro' → logprob: -4.381749629974365

Token 282: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.17297711968421936
    2. ' distance' → logprob: -2.2979772090911865
    3. '_distance' → logprob: -3.1729772090911865
    4. 'dist' → logprob: -4.297976970672607
    5. '_dist' → logprob: -6.672976970672607
    6. ' dist' → logprob: -7.547976970672607
    7. '_' → logprob: -8.172977447509766
    8. '<|end|>' → logprob: -8.547977447509766
    9. '-distance' → logprob: -8.672977447509766
    10. ' distante' → logprob: -8.797977447509766

Token 283: ' cour' (ID: 2871)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.06138835847377777
    2. 'te' → logprob: -3.6863882541656494
    3. 'a' → logprob: -3.8113882541656494
    4. 'an' → logprob: -4.8113884925842285
    5. 'r' → logprob: -7.5613884925842285
    6. 'anc' → logprob: -7.9363884925842285
    7. 'ue' → logprob: -7.9363884925842285
    8. 'tes' → logprob: -7.9363884925842285
    9. '   ' → logprob: -8.06138801574707
    10. 'u' → logprob: -8.06138801574707

Token 285: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0388352870941162
    2. '<|end|>' → logprob: -1.0388352870941162
    3. '       ' → logprob: -1.2888352870941162
    4. '        
' → logprob: -5.288835525512695
    5. ' if' → logprob: -5.538835525512695
    6. ')' → logprob: -6.288835525512695
    7. ' 
' → logprob: -6.913835525512695
    8. '        ' → logprob: -7.038835525512695
    9. ' ' → logprob: -7.163835525512695
    10. '<|end|>' → logprob: -7.288835525512695

Token 286: ' sous' (ID: 14487)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.137608140707016
    2. ' if' → logprob: -3.762608051300049
    3. '        ' → logprob: -4.137608051300049
    4. 's' → logprob: -4.262608051300049
    5. '       ' → logprob: -4.262608051300049
    6. '    ' → logprob: -4.637608051300049
    7. 'if' → logprob: -5.012608051300049
    8. ' ' → logprob: -5.262608051300049
    9. '...' → logprob: -5.387608051300049
    10. '<|end|>' → logprob: -5.637608051300049

Token 287: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.8483623266220093
    2. 'dist' → logprob: -1.4733623266220093
    3. 'la' → logprob: -2.223362445831299
    4. 'd' → logprob: -2.723362445831299
    5. 'distance' → logprob: -3.098362445831299
    6. ' la' → logprob: -3.348362445831299
    7. 'le' → logprob: -3.473362445831299
    8. 'forme' → logprob: -4.848362445831299
    9. 't' → logprob: -5.348362445831299
    10. '(' → logprob: -5.598362445831299

Token 288: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3237588703632355
    2. ' de' → logprob: -1.823758840560913
    3. ')' → logprob: -3.198758840560913
    4. ' (' → logprob: -3.948758840560913
    5. ',' → logprob: -4.073759078979492
    6. ' du' → logprob: -4.198759078979492
    7. ' )' → logprob: -5.573759078979492
    8. ' ,' → logprob: -5.823759078979492
    9. 'd' → logprob: -5.948759078979492
    10. ' of' → logprob: -6.073759078979492

Token 289: ' tuple' (ID: 31311)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7095451354980469
    2. '(d' → logprob: -1.2095451354980469
    3. 'distance' → logprob: -2.709545135498047
    4. '(distance' → logprob: -2.959545135498047
    5. ' distance' → logprob: -3.084545135498047
    6. 'd' → logprob: -4.459545135498047
    7. ' tuple' → logprob: -4.584545135498047
    8. 'tu' → logprob: -4.834545135498047
    9. '(' → logprob: -5.209545135498047
    10. ' d' → logprob: -5.584545135498047

Token 290: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8171778917312622
    2. '       ' → logprob: -0.9421778917312622
    3. ',' → logprob: -2.8171777725219727
    4. '<|end|>' → logprob: -3.1921777725219727
    5. '
' → logprob: -3.4421777725219727
    6. ')
' → logprob: -4.942177772521973
    7. '        
' → logprob: -5.192177772521973
    8. '        ' → logprob: -5.317177772521973
    9. '   ' → logprob: -5.692177772521973
    10. ' if' → logprob: -5.942177772521973

Token 291: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01777433231472969
    2. ' d' → logprob: -5.0177741050720215
    3. 'dist' → logprob: -5.2677741050720215
    4. 'distance' → logprob: -5.2677741050720215
    5. ')' → logprob: -8.01777458190918
    6. ',' → logprob: -8.76777458190918
    7. ' distance' → logprob: -9.76777458190918
    8. ' ,' → logprob: -10.26777458190918
    9. ' dist' → logprob: -10.51777458190918
    10. ' )' → logprob: -10.76777458190918

Token 292: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003758575767278671
    2. ' ,' → logprob: -8.625375747680664
    3. ',v' → logprob: -9.250375747680664
    4. 'istance' → logprob: -9.625375747680664
    5. 'ist' → logprob: -11.500375747680664
    6. ',)' → logprob: -11.625375747680664
    7. ')' → logprob: -11.750375747680664
    8. ',
' → logprob: -13.375375747680664
    9. '),' → logprob: -13.750375747680664
    10. ',val' → logprob: -14.125375747680664

Token 293: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.07012070715427399
    2. 'dist' → logprob: -3.0701208114624023
    3. ' distance' → logprob: -4.195120811462402
    4. 'd' → logprob: -5.695120811462402
    5. ')' → logprob: -6.695120811462402
    6. ' dist' → logprob: -7.195120811462402
    7. ' d' → logprob: -8.445120811462402
    8. '<|end|>' → logprob: -8.445120811462402
    9. ',' → logprob: -8.570120811462402
    10. 'istance' → logprob: -9.570120811462402

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002334568416699767
    2. ',v' → logprob: -8.87523365020752
    3. ' ,' → logprob: -9.37523365020752
    4. ')' → logprob: -12.12523365020752
    5. ',val' → logprob: -14.12523365020752
    6. ',)' → logprob: -14.62523365020752
    7. '),' → logprob: -14.75023365020752
    8. ',current' → logprob: -14.75023365020752
    9. ',s' → logprob: -15.75023365020752
    10. ',
' → logprob: -16.000232696533203

Token 295: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4287320077419281
    2. ' v' → logprob: -1.0537320375442505
    3. ' ' → logprob: -11.303731918334961
    4. 'u' → logprob: -12.053731918334961
    5. '    ' → logprob: -13.178731918334961
    6. '   ' → logprob: -13.303731918334961
    7. '	v' → logprob: -13.428731918334961
    8. ')v' → logprob: -13.553731918334961
    9. ' 
' → logprob: -13.678731918334961
    10. '```' → logprob: -14.053731918334961

Token 296: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037510290276259184
    2. '=' → logprob: -6.378750801086426
    3. ' )' → logprob: -6.878750801086426
    4. ',' → logprob: -7.378750801086426
    5. ' =' → logprob: -8.128750801086426
    6. ')=' → logprob: -10.378750801086426
    7. ',)' → logprob: -10.378750801086426
    8. ').' → logprob: -12.378750801086426
    9. '),' → logprob: -12.378750801086426
    10. ' ' → logprob: -12.378750801086426

Token 297: ' numéro' (ID: 65036)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.09527093172073364
    2. 'som' → logprob: -2.720270872116089
    3. 'vertex' → logprob: -4.345271110534668
    4. ' vertex' → logprob: -5.595271110534668
    5. 's' → logprob: -5.845271110534668
    6. ' som' → logprob: -6.095271110534668
    7. ' noe' → logprob: -6.470271110534668
    8. ' somm' → logprob: -8.220271110534668
    9. ' ' → logprob: -8.345271110534668
    10. 'node' → logprob: -8.595271110534668

Token 298: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5331909656524658
    2. ',' → logprob: -0.9081909656524658
    3. ' du' → logprob: -5.908190727233887
    4. ' de' → logprob: -6.158190727233887
    5. ' )' → logprob: -6.783190727233887
    6. '_' → logprob: -7.158190727233887
    7. '_s' → logprob: -7.283190727233887
    8. 'de' → logprob: -7.908190727233887
    9. '_de' → logprob: -7.908190727233887
    10. '_v' → logprob: -8.283190727233887

Token 299: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.22846393287181854
    2. 'som' → logprob: -1.603463888168335
    3. ' som' → logprob: -5.978464126586914
    4. 's' → logprob: -8.478464126586914
    5. ' somm' → logprob: -8.853464126586914
    6. ')' → logprob: -8.978464126586914
    7. ' )' → logprob: -11.603464126586914
    8. 'summ' → logprob: -11.978464126586914
    9. ' ' → logprob: -12.353464126586914
    10. '	s' → logprob: -12.978464126586914

Token 300: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013858173042535782
    2. ')
' → logprob: -9.250138282775879
    3. ' )' → logprob: -10.125138282775879
    4. '       ' → logprob: -14.125138282775879
    5. '   ' → logprob: -14.500138282775879
    6. ').' → logprob: -15.500138282775879
    7. ')
' → logprob: -15.500138282775879
    8. ' ' → logprob: -15.750138282775879
    9. ' ' → logprob: -16.125139236450195
    10. '))' → logprob: -16.250139236450195

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002346157329156995
    2. ' if' → logprob: -7.377346038818359
    3. '<|end|>' → logprob: -7.502346038818359
    4. '        
' → logprob: -7.877346038818359
    5. ' ' → logprob: -8.37734603881836
    6. '        ' → logprob: -8.87734603881836
    7. ' 
' → logprob: -9.12734603881836
    8. '   ' → logprob: -9.62734603881836
    9. ')' → logprob: -10.25234603881836
    10. '
' → logprob: -10.50234603881836

Token 302: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0017502688569948077
    2. ' if' → logprob: -6.876750469207764
    3. '       ' → logprob: -7.251750469207764
    4. '	if' → logprob: -12.501749992370605
    5. '        
' → logprob: -12.876749992370605
    6. '   ' → logprob: -14.251749992370605
    7. ';if' → logprob: -14.751749992370605
    8. 'If' → logprob: -15.001749992370605
    9. ' ' → logprob: -16.126750946044922
    10. '	' → logprob: -16.126750946044922

Token 303: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.11540976911783218
    2. ' d' → logprob: -2.3654098510742188
    3. 'dist' → logprob: -4.490409851074219
    4. 'd' → logprob: -5.615409851074219
    5. '	dist' → logprob: -9.115409851074219
    6. '	d' → logprob: -9.365409851074219
    7. ' ' → logprob: -11.115409851074219
    8. '(dist' → logprob: -11.365409851074219
    9. '   ' → logprob: -12.740409851074219
    10. '_dist' → logprob: -13.865409851074219

Token 304: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.935296834039036e-06
    2. 'v' → logprob: -12.87500286102295
    3. '<v' → logprob: -15.75000286102295
    4. '[d' → logprob: -15.87500286102295
    5. '[' → logprob: -17.250003814697266
    6. ' v' → logprob: -18.500003814697266
    7. '	v' → logprob: -19.875003814697266
    8. '```' → logprob: -20.250003814697266
    9. '(v' → logprob: -20.625003814697266
    10. '[val' → logprob: -20.875003814697266

Token 305: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.05731717124581337
    2. '<v' → logprob: -3.5573172569274902
    3. ' <' → logprob: -3.6823172569274902
    4. '<int' → logprob: -8.182316780090332
    5. '<m' → logprob: -8.182316780090332
    6. ']<' → logprob: -8.807316780090332
    7. '<ll' → logprob: -8.807316780090332
    8. ']' → logprob: -8.807316780090332
    9. ' ' → logprob: -9.057316780090332
    10. ')<' → logprob: -9.057316780090332

Token 306: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.002355667995288968
    2. '<v' → logprob: -6.252355575561523
    3. ' <' → logprob: -8.127355575561523
    4. '<=' → logprob: -9.252355575561523
    5. '<int' → logprob: -11.502355575561523
    6. '<c' → logprob: -11.627355575561523
    7. '<m' → logprob: -12.877355575561523
    8. '<n' → logprob: -13.002355575561523
    9. '<data' → logprob: -13.252355575561523
    10. '<D' → logprob: -13.877355575561523

Token 307: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003178544342517853
    2. ' d' → logprob: -5.753178596496582
    3. '	d' → logprob: -14.753178596496582
    4. ' ' → logprob: -14.878178596496582
    5. '   ' → logprob: -16.753177642822266
    6. '_d' → logprob: -17.940677642822266
    7. '>d' → logprob: -17.940677642822266
    8. '  ' → logprob: -18.315677642822266
    9. ')d' → logprob: -19.190677642822266
    10. '‌' → logprob: -19.253177642822266

Token 308: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028091557323932648
    2. ':
' → logprob: -5.877809047698975
    3. ':
' → logprob: -13.252809524536133
    4. ' :' → logprob: -13.502809524536133
    5. ':return' → logprob: -14.502809524536133
    6. ' continue' → logprob: -14.877809524536133
    7. '):' → logprob: -15.752809524536133
    8. 'continue' → logprob: -16.502809524536133
    9. '	continue' → logprob: -16.627809524536133
    10. ':

' → logprob: -17.627809524536133

Token 309: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6093334555625916
    2. ' continue' → logprob: -0.8593334555625916
    3. '           ' → logprob: -4.484333515167236
    4. 'continue' → logprob: -4.609333515167236
    5. '	continue' → logprob: -5.109333515167236
    6. ':' → logprob: -5.484333515167236
    7. '   ' → logprob: -7.484333515167236
    8. '	' → logprob: -8.109333038330078
    9. '_continue' → logprob: -8.859333038330078
    10. ' continues' → logprob: -8.984333038330078

Token 310: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.07894663512706757
    2. ' continue' → logprob: -2.578946590423584
    3. '	continue' → logprob: -10.453947067260742
    4. '   ' → logprob: -11.078947067260742
    5. '       ' → logprob: -12.328947067260742
    6. 'contin' → logprob: -12.328947067260742
    7. 'continu' → logprob: -13.453947067260742
    8. '_continue' → logprob: -13.703947067260742
    9. '           ' → logprob: -14.203947067260742
    10. 'Continue' → logprob: -15.203947067260742

Token 311: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019398193107917905
    2. '        
' → logprob: -7.00193977355957
    3. '
' → logprob: -7.12693977355957
    4. '<|end|>' → logprob: -9.00193977355957
    5. '  
' → logprob: -11.12693977355957
    6. '        ' → logprob: -11.12693977355957
    7. '            
' → logprob: -11.37693977355957
    8. ' 
' → logprob: -11.75193977355957
    9. '      ' → logprob: -11.75193977355957
    10. ')' → logprob: -11.75193977355957

Token 312: ' Si' (ID: 7832)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02021646872162819
    2. ' for' → logprob: -4.145216464996338
    3. 'for' → logprob: -5.895216464996338
    4. '   ' → logprob: -6.770216464996338
    5. '        
' → logprob: -9.520216941833496
    6. '           ' → logprob: -9.895216941833496
    7. '#' → logprob: -10.645216941833496
    8. ' #' → logprob: -10.895216941833496
    9. '
' → logprob: -11.020216941833496
    10. '      ' → logprob: -11.520216941833496

Token 313: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.1252819299697876
    2. ' distance' → logprob: -2.375281810760498
    3. 'dist' → logprob: -4.500281810760498
    4. 'd' → logprob: -5.625281810760498
    5. ' current' → logprob: -6.125281810760498
    6. ' dist' → logprob: -6.125281810760498
    7. 'current' → logprob: -6.125281810760498
    8. '   ' → logprob: -6.750281810760498
    9. ' ' → logprob: -7.875281810760498
    10. 'istance' → logprob: -8.125282287597656

Token 315: ' mém' (ID: 136981)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 316: 'oris' (ID: 50689)
  Prédit: 'oris'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oris' → logprob: -0.2909761965274811
    2. 'or' → logprob: -1.7909761667251587
    3. 'orie' → logprob: -2.6659762859344482
    4. '__' → logprob: -5.290976047515869
    5. '[' → logprob: -5.415976047515869
    6. 'ory' → logprob: -6.415976047515869
    7. 'oire' → logprob: -6.540976047515869
    8. '>' → logprob: -7.915976047515869
    9. '|' → logprob: -8.165976524353027
    10. 'oriz' → logprob: -8.415976524353027

Token 317: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.42691731452941895
    2. 'rée' → logprob: -1.676917314529419
    3. 'isée' → logprob: -2.051917314529419
    4. 'érée' → logprob: -3.551917314529419
    5. 'urée' → logprob: -6.42691707611084
    6. 'ér' → logprob: -8.05191707611084
    7. 'e' → logprob: -8.30191707611084
    8. 'é' → logprob: -8.55191707611084
    9. 'lée' → logprob: -9.30191707611084
    10. 'ise' → logprob: -9.42691707611084

Token 318: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2317633181810379
    2. 'est' → logprob: -1.6067633628845215
    3. ' is' → logprob: -6.1067633628845215
    4. 'pour' → logprob: -6.8567633628845215
    5. ' pour' → logprob: -7.4817633628845215
    6. '[v' → logprob: -8.106762886047363
    7. ' déjà' → logprob: -8.106762886047363
    8. '<v' → logprob: -8.106762886047363
    9. ' a' → logprob: -8.606762886047363
    10. 'à' → logprob: -8.981762886047363

Token 319: ' déjà' (ID: 21229)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.4970892369747162
    2. 'inf' → logprob: -1.6220892667770386
    3. 'strict' → logprob: -2.372089147567749
    4. 'me' → logprob: -3.247089147567749
    5. 'moins' → logprob: -3.372089147567749
    6. 'dé' → logprob: -3.747089147567749
    7. 'm' → logprob: -6.497089385986328
    8. ' plus' → logprob: -7.497089385986328
    9. 'infer' → logprob: -7.872089385986328
    10. 'mise' → logprob: -7.872089385986328

Token 320: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.7147447466850281
    2. 'me' → logprob: -0.8397447466850281
    3. 'strict' → logprob: -2.964744806289673
    4. 'inf' → logprob: -4.089744567871094
    5. ' plus' → logprob: -5.964744567871094
    6. 'moins' → logprob: -5.964744567871094
    7. ' meilleure' → logprob: -6.089744567871094
    8. 'sm' → logprob: -6.964744567871094
    9. 'better' → logprob: -7.214744567871094
    10. ' inf' → logprob: -8.089744567871094

Token 321: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.49956607818603516
    2. 'cour' → logprob: -1.1245660781860352
    3. 'short' → logprob: -3.749566078186035
    4. 'court' → logprob: -4.499566078186035
    5. '```' → logprob: -4.499566078186035
    6. 'optim' → logprob: -4.874566078186035
    7. ' courte' → logprob: -5.249566078186035
    8. 'b' → logprob: -5.499566078186035
    9. 'import' → logprob: -6.374566078186035
    10. ' petite' → logprob: -7.749566078186035

Token 322: ' que' (ID: 661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017366476356983185
    2. ',' → logprob: -4.517366409301758
    3. '<|end|>' → logprob: -5.267366409301758
    4. '      ' → logprob: -8.517366409301758
    5. '        ' → logprob: -9.017366409301758
    6. '        
' → logprob: -9.017366409301758
    7. '   ' → logprob: -9.017366409301758
    8. ' or' → logprob: -9.767366409301758
    9. '    ' → logprob: -9.892366409301758
    10. '               ' → logprob: -10.017366409301758

Token 323: ' celle' (ID: 31790)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.010258397087454796
    2. 'celle' → logprob: -5.260258197784424
    3. ' celle' → logprob: -5.635258197784424
    4. ' d' → logprob: -7.010258197784424
    5. 'c' → logprob: -8.635258674621582
    6. 'la' → logprob: -8.885258674621582
    7. 'le' → logprob: -9.385258674621582
    8. 'l' → logprob: -9.635258674621582
    9. 'cel' → logprob: -10.510258674621582
    10. ' la' → logprob: -10.760258674621582

Token 324: ' qu' (ID: 474)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7063655853271484
    2. 'retr' → logprob: -1.7063655853271484
    3. ' que' → logprob: -3.3313655853271484
    4. 'calcul' → logprob: -3.3313655853271484
    5. ',' → logprob: -3.4563655853271484
    6. ')' → logprob: -3.5813655853271484
    7. 'que' → logprob: -3.5813655853271484
    8. '       ' → logprob: -3.7063655853271484
    9. '   ' → logprob: -4.206365585327148
    10. 'ob' → logprob: -4.206365585327148

Token 325: ''on' (ID: 25812)
  Prédit: ''on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.21134734153747559
    2. 'e' → logprob: -1.8363473415374756
    3. 'on' → logprob: -4.336347579956055
    4. 'a' → logprob: -4.711347579956055
    5. ''elle' → logprob: -6.211347579956055
    6. 'ue' → logprob: -6.211347579956055
    7. ''' → logprob: -6.336347579956055
    8. ''arrive' → logprob: -7.211347579956055
    9. 'i' → logprob: -7.461347579956055
    10. ' on' → logprob: -7.711347579956055

Token 326: ' traite' (ID: 180696)
  Prédit: 'vient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vient' → logprob: -0.4970962703227997
    2. 'a' → logprob: -0.9970963001251221
    3. ' vient' → logprob: -4.372096061706543
    4. 'expl' → logprob: -4.997096061706543
    5. 'ex' → logprob: -6.372096061706543
    6. 'viens' → logprob: -7.497096061706543
    7. ''a' → logprob: -8.622096061706543
    8. 'obt' → logprob: -8.747096061706543
    9. 'ven' → logprob: -9.122096061706543
    10. ' a' → logprob: -9.372096061706543

Token 327: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011697471141815186
    2. ',' → logprob: -4.511697292327881
    3. '   ' → logprob: -8.636697769165039
    4. '<|end|>' → logprob: -8.636697769165039
    5. '        
' → logprob: -9.511697769165039
    6. ' ,' → logprob: -10.136697769165039
    7. '           ' → logprob: -10.511697769165039
    8. '.' → logprob: -10.636697769165039
    9. '	' → logprob: -10.886697769165039
    10. '      ' → logprob: -11.011697769165039

Token 328: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008968125330284238
    2. ' continue' → logprob: -8.000896453857422
    3. '   ' → logprob: -8.875896453857422
    4. '	' → logprob: -9.000896453857422
    5. '        
' → logprob: -9.500896453857422
    6. '           ' → logprob: -9.500896453857422
    7. 'continue' → logprob: -9.750896453857422
    8. '    ' → logprob: -11.250896453857422
    9. ' ' → logprob: -11.250896453857422
    10. '               ' → logprob: -11.375896453857422

Token 329: ' ignore' (ID: 17887)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0523713827133179
    2. 'ignore' → logprob: -1.1773713827133179
    3. ' ignore' → logprob: -1.3023713827133179
    4. ' passe' → logprob: -3.0523715019226074
    5. 'skip' → logprob: -4.177371501922607
    6. 'pass' → logprob: -5.802371501922607
    7. ' skip' → logprob: -6.177371501922607
    8. 'continue' → logprob: -6.927371501922607
    9. 's' → logprob: -7.552371501922607
    10. ' continue' → logprob: -7.927371501922607

Token 330: ' cette' (ID: 7696)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02106204628944397
    2. ' this' → logprob: -4.896061897277832
    3. '<|end|>' → logprob: -5.271061897277832
    4. 'this' → logprob: -6.146061897277832
    5. '   ' → logprob: -6.521061897277832
    6. ' it' → logprob: -7.021061897277832
    7. ' ' → logprob: -7.521061897277832
    8. '.' → logprob: -7.521061897277832
    9. '        
' → logprob: -8.271061897277832
    10. '
' → logprob: -8.396061897277832

Token 331: ' it' (ID: 480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0814186334609985
    2. 'entrée' → logprob: -2.206418514251709
    3. ' it' → logprob: -2.456418514251709
    4. 'iteration' → logprob: -2.581418514251709
    5. '       ' → logprob: -2.956418514251709
    6. ' iteration' → logprob: -3.081418514251709
    7. 'continue' → logprob: -3.706418514251709
    8. ' ' → logprob: -3.706418514251709
    9. 'node' → logprob: -3.706418514251709
    10. 'ligne' → logprob: -4.206418514251709

Token 332: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.003905165009200573
    2. 'ér' → logprob: -6.253905296325684
    3. 'er' → logprob: -6.753905296325684
    4. 'é' → logprob: -8.503905296325684
    5. 'érance' → logprob: -8.878905296325684
    6. 'éra' → logprob: -9.003905296325684
    7. 'ration' → logprob: -9.128905296325684
    8. 'érations' → logprob: -9.753905296325684
    9. 'étation' → logprob: -9.878905296325684
    10. 'éré' → logprob: -10.628905296325684

Token 333: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00467623770236969
    2. '        
' → logprob: -5.629676342010498
    3. '
' → logprob: -7.254676342010498
    4. '	' → logprob: -9.62967586517334
    5. '<|end|>' → logprob: -10.00467586517334
    6. '   ' → logprob: -10.12967586517334
    7. ' for' → logprob: -10.37967586517334
    8. '		
' → logprob: -10.87967586517334
    9. '            
' → logprob: -10.87967586517334
    10. '       
' → logprob: -11.25467586517334

Token 334: 'che' (ID: 926)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1975930780172348
    2. '<|end|>' → logprob: -2.1975929737091064
    3. ' )' → logprob: -3.5725929737091064
    4. '       ' → logprob: -3.9475929737091064
    5. '```' → logprob: -5.5725932121276855
    6. 's' → logprob: -5.5725932121276855
    7. '   ' → logprob: -5.9475932121276855
    8. '
' → logprob: -6.1975932121276855
    9. ' ' → logprob: -6.1975932121276855
    10. ' 
' → logprob: -6.6975932121276855

Token 335: 'min' (ID: 1493)
  Prédit: 'ck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ck' → logprob: -0.05456243082880974
    2. 'min' → logprob: -3.0545623302459717
    3. 'c' → logprob: -6.429562568664551
    4. '       ' → logprob: -6.554562568664551
    5. '   ' → logprob: -7.054562568664551
    6. '           ' → logprob: -7.304562568664551
    7. '     ' → logprob: -8.17956256866455
    8. '        ' → logprob: -8.17956256866455
    9. '    ' → logprob: -8.80456256866455
    10. 'cker' → logprob: -9.05456256866455

Token 336: ' sous' (ID: 14487)
  Prédit: ' ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ob' → logprob: -0.0442996472120285
    2. ' dé' → logprob: -4.294299602508545
    3. ' obsolete' → logprob: -4.919299602508545
    4. 'ob' → logprob: -5.294299602508545
    5. ' dépass' → logprob: -5.294299602508545
    6. 'dé' → logprob: -5.669299602508545
    7. ' déjà' → logprob: -6.669299602508545
    8. ' plus' → logprob: -6.794299602508545
    9. '   ' → logprob: -6.794299602508545
    10. ' non' → logprob: -7.044299602508545

Token 337: '-opt' (ID: 104111)
  Prédit: 'optimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optimal' → logprob: -0.026045041158795357
    2. 'optim' → logprob: -4.651044845581055
    3. ' optimal' → logprob: -4.776044845581055
    4. '-opt' → logprob: -5.401044845581055
    5. 'opt' → logprob: -5.901044845581055
    6. 'ent' → logprob: -8.401044845581055
    7. ' optimale' → logprob: -9.151044845581055
    8. ' optim' → logprob: -9.901044845581055
    9. 'est' → logprob: -10.526044845581055
    10. 'op' → logprob: -11.526044845581055

Token 338: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.056200891733169556
    2. 't' → logprob: -3.0562009811401367
    3. 'tim' → logprob: -5.931200981140137
    4. 'ti' → logprob: -5.931200981140137
    5. 'tal' → logprob: -6.306200981140137
    6. 'im' → logprob: -8.181200981140137
    7. 'imum' → logprob: -9.306200981140137
    8. 'tid' → logprob: -11.931200981140137
    9. 'тим' → logprob: -12.056200981140137
    10. '```' → logprob: -12.306200981140137

Token 339: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04466256871819496
    2. ')
' → logprob: -3.7946624755859375
    3. '       ' → logprob: -3.9196624755859375
    4. ' )' → logprob: -6.7946624755859375
    5. ')
' → logprob: -9.544662475585938
    6. ' )
' → logprob: -10.044662475585938
    7. '   ' → logprob: -10.294662475585938
    8. 's' → logprob: -10.294662475585938
    9. '           ' → logprob: -12.169662475585938
    10. '	' → logprob: -12.294662475585938

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018336061388254166
    2. ' for' → logprob: -4.518336296081543
    3. '   ' → logprob: -5.518336296081543
    4. 'for' → logprob: -5.768336296081543
    5. '        
' → logprob: -9.518336296081543
    6. '           ' → logprob: -11.518336296081543
    7. '      ' → logprob: -11.893336296081543
    8. ')' → logprob: -12.393336296081543
    9. '    ' → logprob: -12.643336296081543
    10. '        ' → logprob: -12.768336296081543

Token 341: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0767345055937767
    2. 'for' (adapté à ' for') → logprob: -3.3267345428466797
    3. ' for' → logprob: -3.3267345428466797
    4. '   ' → logprob: -6.57673454284668
    5. '	for' → logprob: -7.82673454284668
    6. '	' → logprob: -9.32673454284668
    7. '	   ' → logprob: -9.95173454284668
    8. '        
' → logprob: -10.32673454284668
    9. '           ' → logprob: -11.20173454284668
    10. '    ' → logprob: -11.70173454284668

Token 342: ' nv' (ID: 68641)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.49403882026672363
    2. 'u' → logprob: -0.9940388202667236
    3. 'w' → logprob: -4.6190385818481445
    4. 'nv' → logprob: -5.1190385818481445
    5. ' to' → logprob: -6.7440385818481445
    6. '(to' → logprob: -6.8690385818481445
    7. '(u' → logprob: -6.8690385818481445
    8. ' u' → logprob: -8.119038581848145
    9. 'e' → logprob: -9.244038581848145
    10. ' nv' → logprob: -9.869038581848145

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018912686500698328
    2. ',n' → logprob: -6.501891136169434
    3. ',v' → logprob: -8.376891136169434
    4. ' ,' → logprob: -9.251891136169434
    5. ',d' → logprob: -9.876891136169434
    6. ',next' → logprob: -12.626891136169434
    7. ',node' → logprob: -13.751891136169434
    8. ',num' → logprob: -13.751891136169434
    9. ',s' → logprob: -13.876891136169434
    10. ',w' → logprob: -13.876891136169434

Token 344: ' nd' (ID: 5914)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4697820246219635
    2. 'nd' → logprob: -1.5947819948196411
    3. 'w' → logprob: -1.9697819948196411
    4. ' nd' → logprob: -3.8447821140289307
    5. ' cost' → logprob: -5.844781875610352
    6. 'nc' → logprob: -5.844781875610352
    7. 'c' → logprob: -5.844781875610352
    8. ' w' → logprob: -7.719781875610352
    9. 'nv' → logprob: -7.719781875610352
    10. 'weight' → logprob: -7.719781875610352

Token 345: ' in' (ID: 306)
  Prédit: 'istance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istance' → logprob: -0.6197487115859985
    2. ' in' → logprob: -1.1197487115859985
    3. 'ist' → logprob: -2.494748592376709
    4. ',' → logprob: -2.994748592376709
    5. 'in' → logprob: -6.744748592376709
    6. 'ists' → logprob: -7.619748592376709
    7. 'istant' → logprob: -7.744748592376709
    8. 'is' → logprob: -8.494749069213867
    9. ' ' → logprob: -8.869749069213867
    10. 'ista' → logprob: -9.744749069213867

Token 346: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.007622364908456802
    2. 'edge' → logprob: -4.882622241973877
    3. ' ' → logprob: -11.882622718811035
    4. '(edge' → logprob: -12.007622718811035
    5. '=edge' → logprob: -13.132622718811035
    6. '.edge' → logprob: -15.007622718811035
    7. 'Edge' → logprob: -15.632622718811035
    8. '_edge' → logprob: -15.757622718811035
    9. ' edges' → logprob: -16.00762176513672
    10. '   ' → logprob: -16.88262176513672

Token 347: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.12500286102295
    3. ' [' → logprob: -15.37500286102295
    4. 'v' → logprob: -15.62500286102295
    5. '[V' → logprob: -17.250001907348633
    6. ' v' → logprob: -17.625001907348633
    7. '(v' → logprob: -17.875001907348633
    8. '	v' → logprob: -18.125001907348633
    9. '][' → logprob: -18.500001907348633
    10. '[s' → logprob: -18.750001907348633

Token 348: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.001067227916792035
    2. ']' → logprob: -7.126067161560059
    3. '):' → logprob: -8.501067161560059
    4. ']:
' → logprob: -10.626067161560059
    5. ']):' → logprob: -11.751067161560059
    6. ' ]' → logprob: -12.001067161560059
    7. ':' → logprob: -12.001067161560059
    8. ']:
' → logprob: -12.251067161560059
    9. ']:

' → logprob: -13.376067161560059
    10. '"]:' → logprob: -13.626067161560059

Token 349: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' Pour' (ID: 13931)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8560769557952881
    2. '           ' → logprob: -1.356076955795288
    3. 'if' → logprob: -2.106076955795288
    4. '       ' → logprob: -2.106076955795288
    5. '<|end|>' → logprob: -3.856076955795288
    6. ' ' → logprob: -4.356077194213867
    7. '   ' → logprob: -4.731077194213867
    8. ')' → logprob: -5.231077194213867
    9. '  ' → logprob: -5.356077194213867
    10. '        ' → logprob: -5.481077194213867

Token 351: ' chaque' (ID: 21194)
  Prédit: ' nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nv' → logprob: -0.0005818653153255582
    2. 'nv' → logprob: -8.000581741333008
    3. ' ' → logprob: -8.750581741333008
    4. '<|end|>' → logprob: -10.375581741333008
    5. ' (' → logprob: -11.500581741333008
    6. ' v' → logprob: -11.500581741333008
    7. ' n' → logprob: -11.625581741333008
    8. '_nv' → logprob: -11.750581741333008
    9. 'v' → logprob: -12.000581741333008
    10. 'n' → logprob: -13.125581741333008

Token 352: ' sommet' (ID: 130502)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.24979911744594574
    2. ' voisin' → logprob: -2.2497990131378174
    3. ' ' → logprob: -2.9997990131378174
    4. 'neighbor' → logprob: -3.9997990131378174
    5. ' neighbor' → logprob: -4.1247992515563965
    6. ' nv' → logprob: -5.6247992515563965
    7. '<|end|>' → logprob: -5.7497992515563965
    8. '_neighbor' → logprob: -5.8747992515563965
    9. ',' → logprob: -5.9997992515563965
    10. '(n' → logprob: -5.9997992515563965

Token 353: ' adjacent' (ID: 39069)
  Prédit: ' voisin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisin' → logprob: -0.12286289036273956
    2. ',' → logprob: -2.3728628158569336
    3. 'vo' → logprob: -4.872862815856934
    4. ' ,' → logprob: -4.997862815856934
    5. '   ' → logprob: -6.622862815856934
    6. ' adjacent' → logprob: -6.747862815856934
    7. '_neighbor' → logprob: -6.872862815856934
    8. 'su' → logprob: -7.497862815856934
    9. ' vois' → logprob: -7.497862815856934
    10. '_vo' → logprob: -7.747862815856934

Token 354: ' '' (ID: 461)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034520186483860016
    2. ' ,' → logprob: -3.409520149230957
    3. '<|end|>' → logprob: -7.909520149230957
    4. '   ' → logprob: -8.909520149230957
    5. ' ' → logprob: -8.909520149230957
    6. ':' → logprob: -9.659520149230957
    7. '       ' → logprob: -10.284520149230957
    8. ' :' → logprob: -10.409520149230957
    9. '  ' → logprob: -10.784520149230957
    10. ' (' → logprob: -11.034520149230957

Token 355: 'nv' (ID: 40002)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1941652297973633
    2. ' nv' → logprob: -1.1941652297973633
    3. 'nv' → logprob: -2.4441652297973633
    4. '_nv' → logprob: -2.6941652297973633
    5. '(n' → logprob: -3.1941652297973633
    6. ' ,' → logprob: -3.3191652297973633
    7. ')' → logprob: -3.5691652297973633
    8. ' (' → logprob: -3.6941652297973633
    9. '<|end|>' → logprob: -3.6941652297973633
    10. ',v' → logprob: -3.8191652297973633

Token 356: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011406922712922096
    2. ' ,' → logprob: -7.126140594482422
    3. '',' → logprob: -8.126140594482422
    4. ','' → logprob: -10.876140594482422
    5. ''' → logprob: -11.501140594482422
    6. ',n' → logprob: -12.251140594482422
    7. ',v' → logprob: -13.001140594482422
    8. ',d' → logprob: -13.501140594482422
    9. ' ,'' → logprob: -14.251140594482422
    10. '   ' → logprob: -14.376140594482422

Token 357: ' accessible' (ID: 18240)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008626987226307392
    2. ' ,' → logprob: -4.758626937866211
    3. ',d' → logprob: -12.633626937866211
    4. '<|end|>' → logprob: -13.258626937866211
    5. ',n' → logprob: -13.508626937866211
    6. '       ' → logprob: -13.633626937866211
    7. ',
' → logprob: -14.258626937866211
    8. '           ' → logprob: -14.258626937866211
    9. ')' → logprob: -14.508626937866211
    10. '   ' → logprob: -14.633626937866211

Token 358: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003790338756516576
    2. ' ,' → logprob: -5.878790378570557
    3. ' via' → logprob: -8.128789901733398
    4. ' avec' → logprob: -8.378789901733398
    5. '   ' → logprob: -8.753789901733398
    6. '       ' → logprob: -9.628789901733398
    7. '<|end|>' → logprob: -9.878789901733398
    8. ' à' → logprob: -10.753789901733398
    9. '    ' → logprob: -11.003789901733398
    10. 'via' → logprob: -11.253789901733398

Token 359: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.010601235553622246
    2. ' travers' → logprob: -6.010601043701172
    3. 'dep' → logprob: -6.635601043701172
    4. 'part' → logprob: -6.885601043701172
    5. 'n' → logprob: -7.010601043701172
    6. 'v' → logprob: -7.260601043701172
    7. 'distance' → logprob: -7.260601043701172
    8. ' from' → logprob: -7.385601043701172
    9. ' ' → logprob: -7.510601043701172
    10. 'from' → logprob: -8.260601043701172

Token 360: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.14437724649906158
    2. ' du' → logprob: -2.7693772315979004
    3. 'v' → logprob: -3.0193772315979004
    4. 'de' → logprob: -4.5193772315979
    5. ' v' → logprob: -4.7693772315979
    6. '[v' → logprob: -6.6443772315979
    7. '(v' → logprob: -7.3943772315979
    8. 'du' → logprob: -7.7693772315979
    9. ',v' → logprob: -8.394377708435059
    10. ' of' → logprob: -8.644377708435059

Token 361: ' '' (ID: 461)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.386892169713974
    2. 'v' → logprob: -1.1368921995162964
    3. '	v' → logprob: -11.011892318725586
    4. ' ' → logprob: -13.386892318725586
    5. '[v' → logprob: -13.511892318725586
    6. ',v' → logprob: -14.511892318725586
    7. ')v' → logprob: -15.386892318725586
    8. '?v' → logprob: -15.511892318725586
    9. '.v' → logprob: -16.011892318725586
    10. '(v' → logprob: -16.136892318725586

Token 362: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014168680645525455
    2. ' v' → logprob: -4.264168739318848
    3. '	v' → logprob: -12.889168739318848
    4. ')v' → logprob: -13.764168739318848
    5. '[v' → logprob: -15.014168739318848
    6. '?v' → logprob: -15.014168739318848
    7. ' ' → logprob: -15.139168739318848
    8. '<|end|>' → logprob: -15.514168739318848
    9. ',v' → logprob: -15.764168739318848
    10. '$v' → logprob: -16.76416778564453

Token 363: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08182242512702942
    2. '',' → logprob: -2.956822395324707
    3. ' ,' → logprob: -3.956822395324707
    4. ''' → logprob: -5.206822395324707
    5. '),' → logprob: -7.706822395324707
    6. ','' → logprob: -7.706822395324707
    7. ' avec' → logprob: -8.081822395324707
    8. ' ',' → logprob: -8.456822395324707
    9. '       ' → logprob: -8.581822395324707
    10. ')' → logprob: -9.706822395324707

Token 364: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3878138065338135
    2. '           ' → logprob: -1.6378138065338135
    3. ' if' → logprob: -2.5128138065338135
    4. '        ' → logprob: -3.8878138065338135
    5. '	       ' → logprob: -5.387813568115234
    6. '   ' → logprob: -5.762813568115234
    7. 'if' → logprob: -5.887813568115234
    8. '      ' → logprob: -6.637813568115234
    9. ' ' → logprob: -6.637813568115234
    10. '    ' → logprob: -6.762813568115234

Token 365: ' le' (ID: 505)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.5978487730026245
    2. 'nd' → logprob: -0.8478487730026245
    3. '(nd' → logprob: -5.472848892211914
    4. '   ' → logprob: -5.847848892211914
    5. ' la' → logprob: -5.972848892211914
    6. 'dist' → logprob: -6.597848892211914
    7. '    ' → logprob: -6.722848892211914
    8. ' dist' → logprob: -6.847848892211914
    9. ' with' → logprob: -6.972848892211914
    10. 'distance' → logprob: -6.972848892211914

Token 366: ' coût' (ID: 73109)
  Prédit: ' poids'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poids' → logprob: -0.2116440236568451
    2. 'po' → logprob: -2.211643934249878
    3. ' coût' → logprob: -3.461643934249878
    4. ' po' → logprob: -4.336644172668457
    5. 'nd' → logprob: -4.961644172668457
    6. ''' → logprob: -5.461644172668457
    7. ' nd' → logprob: -5.461644172668457
    8. 'distance' → logprob: -5.586644172668457
    9. ' '' → logprob: -6.336644172668457
    10. 'd' → logprob: -6.461644172668457

Token 367: ' '' (ID: 461)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.256361961364746
    2. ' associé' → logprob: -1.381361961364746
    3. ' =' → logprob: -2.131361961364746
    4. ')' → logprob: -2.631361961364746
    5. ' )' → logprob: -3.256361961364746
    6. '   ' → logprob: -3.256361961364746
    7. '    ' → logprob: -3.631361961364746
    8. ' d' → logprob: -3.881361961364746
    9. ' associated' → logprob: -3.881361961364746
    10. ' nd' → logprob: -4.006361961364746

Token 368: 'nd' (ID: 301)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.08437535166740417
    2. 'nd' → logprob: -2.5843753814697266
    3. ''' → logprob: -6.084375381469727
    4. ' '' → logprob: -6.459375381469727
    5. '(nd' → logprob: -7.334375381469727
    6. ' nv' → logprob: -7.959375381469727
    7. '   ' → logprob: -8.709375381469727
    8. '_nd' → logprob: -9.084375381469727
    9. ' ')' → logprob: -10.209375381469727
    10. ' ' → logprob: -10.334375381469727

Token 369: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2931583523750305
    2. ')' → logprob: -1.5431582927703857
    3. ' '' → logprob: -4.418158531188965
    4. ')'' → logprob: -4.793158531188965
    5. '):' → logprob: -5.418158531188965
    6. ''en' → logprob: -5.668158531188965
    7. ' en' → logprob: -6.168158531188965
    8. '):
' → logprob: -6.293158531188965
    9. '),' → logprob: -6.418158531188965
    10. ' in' → logprob: -6.668158531188965

Token 370: ' du' (ID: 1462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6973578333854675
    2. '):' → logprob: -0.9473578333854675
    3. '       ' → logprob: -3.1973578929901123
    4. ' :' → logprob: -3.4473578929901123
    5. '   ' → logprob: -4.447357654571533
    6. '+' → logprob: -4.947357654571533
    7. ')' → logprob: -5.322357654571533
    8. ' in' → logprob: -6.072357654571533
    9. '):
' → logprob: -6.197357654571533
    10. ' ):' → logprob: -6.197357654571533

Token 371: ' déplacement' (ID: 138449)
  Prédit: ' nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nv' → logprob: -0.5616244077682495
    2. ' nd' → logprob: -1.1866244077682495
    3. 'nd' → logprob: -3.811624526977539
    4. ' '' → logprob: -3.811624526977539
    5. 'nv' → logprob: -3.936624526977539
    6. ' ' → logprob: -4.061624526977539
    7. ' edge' → logprob: -4.686624526977539
    8. ''' → logprob: -4.811624526977539
    9. 'edge' → logprob: -5.561624526977539
    10. ' "' → logprob: -5.561624526977539

Token 372: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2318134307861328
    2. '):' → logprob: -2.856813430786133
    3. ' :' → logprob: -2.981813430786133
    4. '+' → logprob: -3.481813430786133
    5. ',' → logprob: -3.606813430786133
    6. '       ' → logprob: -3.731813430786133
    7. '   ' → logprob: -5.106813430786133
    8. '           ' → logprob: -6.231813430786133
    9. ' +' → logprob: -6.606813430786133
    10. '<|end|>' → logprob: -7.231813430786133

Token 373: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6712285876274109
    2. '           ' → logprob: -0.7962285876274109
    3. ':' → logprob: -4.171228408813477
    4. ',' → logprob: -4.796228408813477
    5. ' :' → logprob: -5.171228408813477
    6. ' ,' → logprob: -6.171228408813477
    7. '   ' → logprob: -6.296228408813477
    8. ' if' → logprob: -6.671228408813477
    9. '<|end|>' → logprob: -7.296228408813477
    10. '        ' → logprob: -7.421228408813477

Token 374: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10343416035175323
    2. ' if' → logprob: -2.6034340858459473
    3. '               ' → logprob: -3.9784340858459473
    4. 'if' (adapté à ' if') → logprob: -6.353434085845947
    5. '       ' → logprob: -6.478434085845947
    6. ' new' → logprob: -6.853434085845947
    7. '   ' → logprob: -7.978434085845947
    8. '            ' → logprob: -7.978434085845947
    9. 'new' → logprob: -9.603434562683105
    10. ',' → logprob: -9.853434562683105

Token 375: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.3892916738986969
    2. 'dist' → logprob: -1.1392916440963745
    3. 'd' → logprob: -7.139291763305664
    4. ' d' → logprob: -7.514291763305664
    5. '   ' → logprob: -7.514291763305664
    6. ' ' → logprob: -8.139291763305664
    7. '	dist' → logprob: -9.264291763305664
    8. '  ' → logprob: -10.139291763305664
    9. '(dist' → logprob: -10.514291763305664
    10. 'nd' → logprob: -10.514291763305664

Token 376: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.4743427634239197
    2. '[v' → logprob: -0.9743427634239197
    3. ' [' → logprob: -9.099342346191406
    4. ' nv' → logprob: -10.099342346191406
    5. '[' → logprob: -10.474342346191406
    6. 'nv' → logprob: -10.724342346191406
    7. 'v' → logprob: -10.724342346191406
    8. '   ' → logprob: -11.974342346191406
    9. ' ' → logprob: -12.349342346191406
    10. ' v' → logprob: -12.599342346191406

Token 377: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0024894531816244125
    2. '[v' → logprob: -6.0024895668029785
    3. 'nv' → logprob: -12.50248908996582
    4. '[n' → logprob: -12.62748908996582
    5. ' v' → logprob: -12.87748908996582
    6. ' nv' → logprob: -13.25248908996582
    7. '	v' → logprob: -14.62748908996582
    8. ']' → logprob: -15.00248908996582
    9. '[' → logprob: -15.37748908996582
    10. '(v' → logprob: -15.75248908996582

Token 378: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2019105702638626
    2. ' >' → logprob: -1.7019106149673462
    3. ']' → logprob: -8.576910972595215
    4. ']>' → logprob: -9.326910972595215
    5. ')' → logprob: -9.826910972595215
    6. ' ' → logprob: -9.951910972595215
    7. '>d' → logprob: -10.076910972595215
    8. ')>' → logprob: -10.701910972595215
    9. '">' → logprob: -10.701910972595215
    10. '[' → logprob: -11.826910972595215

Token 379: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.003189832204952836
    2. ' >' → logprob: -5.753190040588379
    3. '>d' → logprob: -11.378190040588379
    4. '＞' → logprob: -15.503190040588379
    5. '>
' → logprob: -15.878190040588379
    6. ' ' → logprob: -16.128189086914062
    7. '```' → logprob: -16.878189086914062
    8. '>

' → logprob: -17.003189086914062
    9. '">' → logprob: -17.128189086914062
    10. 'dist' → logprob: -17.628189086914062

Token 380: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9127370119094849
    2. 'd' → logprob: -1.0377370119094849
    3. ' dist' → logprob: -1.6627370119094849
    4. 'dist' → logprob: -2.9127368927001953
    5. '   ' → logprob: -8.537736892700195
    6. '	d' → logprob: -9.787736892700195
    7. '	dist' → logprob: -10.287736892700195
    8. ' ' → logprob: -10.662736892700195
    9. '(dist' → logprob: -11.162736892700195
    10. '_dist' → logprob: -11.725236892700195

Token 381: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04300617426633835
    2. '+' → logprob: -3.168006181716919
    3. ' ' → logprob: -12.66800594329834
    4. ' plus' → logprob: -13.29300594329834
    5. ' ' → logprob: -13.91800594329834
    6. '+n' → logprob: -15.04300594329834
    7. '+d' → logprob: -15.04300594329834
    8. ' +
' → logprob: -15.54300594329834
    9. ' nd' → logprob: -16.168006896972656
    10. ' +
' → logprob: -16.668006896972656

Token 382: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.38690268993377686
    2. 'nd' → logprob: -1.1369026899337769
    3. '   ' → logprob: -11.261902809143066
    4. '  ' → logprob: -12.261902809143066
    5. '(nd' → logprob: -12.386902809143066
    6. ' ' → logprob: -12.761902809143066
    7. '_nd' → logprob: -13.136902809143066
    8. '    ' → logprob: -13.511902809143066
    9. ' ' → logprob: -14.511902809143066
    10. '	' → logprob: -15.511902809143066

Token 383: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006958735757507384
    2. ' :' → logprob: -7.625695705413818
    3. ':
' → logprob: -8.500696182250977
    4. ' :
' → logprob: -13.375696182250977
    5. '):' → logprob: -13.500696182250977
    6. ':
' → logprob: -13.875696182250977
    7. '+:' → logprob: -16.000696182250977
    8. ' :
' → logprob: -16.375696182250977
    9. ':

' → logprob: -16.500696182250977
    10. '():' → logprob: -16.750696182250977

Token 384: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06758703291416168
    2. ' ' → logprob: -3.31758713722229
    3. '<|end|>' → logprob: -4.067586898803711
    4. '           ' → logprob: -5.817586898803711
    5. '                ' → logprob: -6.067586898803711
    6. ':' → logprob: -6.942586898803711
    7. '                
' → logprob: -7.317586898803711
    8. '            ' → logprob: -7.442586898803711
    9. '              ' → logprob: -7.567586898803711
    10. '=' → logprob: -8.067586898803711

Token 385: ' Si' (ID: 7832)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019621537998318672
    2. '           ' → logprob: -5.1446213722229
    3. ' dist' → logprob: -5.5196213722229
    4. ' ' → logprob: -5.6446213722229
    5. '                ' → logprob: -6.3946213722229
    6. '                
' → logprob: -7.1446213722229
    7. 'dist' → logprob: -7.3946213722229
    8. '<|end|>' → logprob: -7.3946213722229
    9. '            ' → logprob: -7.6446213722229
    10. '              ' → logprob: -8.394621849060059

Token 386: ' la' (ID: 557)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.039453309029340744
    2. 'dist' → logprob: -3.2894532680511475
    3. ' ' → logprob: -7.289453506469727
    4. ' d' → logprob: -9.476953506469727
    5. ' ' → logprob: -9.476953506469727
    6. '(dist' → logprob: -9.726953506469727
    7. '	dist' → logprob: -10.101953506469727
    8. '  ' → logprob: -10.289453506469727
    9. ' (' → logprob: -10.414453506469727
    10. 'd' → logprob: -10.601953506469727

Token 387: ' distance' (ID: 9324)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.2395244687795639
    2. 'dist' → logprob: -2.1145243644714355
    3. ' ' → logprob: -2.6145243644714355
    4. 'distance' → logprob: -4.3645243644714355
    5. ' distance' → logprob: -6.6145243644714355
    6. ' )' → logprob: -7.1145243644714355
    7. '1' → logprob: -7.3645243644714355
    8. ')' → logprob: -7.7395243644714355
    9. '  ' → logprob: -7.8645243644714355
    10. 'space' → logprob: -8.364524841308594

Token 388: ' vers' (ID: 3640)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2532038688659668
    2. '+' → logprob: -2.003203868865967
    3. '[n' → logprob: -2.503203868865967
    4. ' ' → logprob: -5.628203868865967
    5. ' >' → logprob: -7.003203868865967
    6. '<|end|>' → logprob: -7.628203868865967
    7. '[' → logprob: -7.753203868865967
    8. ' plus' → logprob: -7.753203868865967
    9. ' [' → logprob: -8.878204345703125
    10. '+n' → logprob: -9.003204345703125

Token 389: ' '' (ID: 461)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.5980077981948853
    2. 'dist' → logprob: -0.8480077981948853
    3. ' nv' → logprob: -4.098007678985596
    4. 'nv' → logprob: -5.848007678985596
    5. ' nd' → logprob: -6.848007678985596
    6. '(dist' → logprob: -7.473007678985596
    7. 'nd' → logprob: -8.598008155822754
    8. ' ' → logprob: -8.848008155822754
    9. 'd' → logprob: -9.348008155822754
    10. '	dist' → logprob: -9.973008155822754

Token 390: 'nv' (ID: 40002)
  Prédit: 'nv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.04860462248325348
    2. ' nv' → logprob: -3.048604726791382
    3. '_nv' → logprob: -11.423604965209961
    4. 'n' → logprob: -12.548604965209961
    5. '[n' → logprob: -13.673604965209961
    6. ' ' → logprob: -15.298604965209961
    7. '   ' → logprob: -15.298604965209961
    8. 'v' → logprob: -15.798604965209961
    9. 'Nv' → logprob: -16.04860496520996
    10. 'nm' → logprob: -16.04860496520996

Token 391: ''' (ID: 6)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.0722745656967163
    2. '>' → logprob: -1.5722745656967163
    3. ' ' → logprob: -2.072274684906006
    4. '+' → logprob: -2.072274684906006
    5. ' +' → logprob: -2.947274684906006
    6. ''' → logprob: -3.697274684906006
    7. ']' → logprob: -3.697274684906006
    8. '[' → logprob: -3.697274684906006
    9. '   ' → logprob: -4.572274684906006
    10. ''>' → logprob: -4.697274684906006

Token 392: ' en' (ID: 469)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7323291301727295
    2. '+' → logprob: -1.6073291301727295
    3. ':' → logprob: -1.6073291301727295
    4. ' >' → logprob: -2.4823291301727295
    5. '>' → logprob: -4.857329368591309
    6. ' ' → logprob: -5.107329368591309
    7. ' plus' → logprob: -5.357329368591309
    8. '<|end|>' → logprob: -5.357329368591309
    9. ' :' → logprob: -5.857329368591309
    10. '[' → logprob: -6.357329368591309

Token 393: ' empr' (ID: 44102)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7015170454978943
    2. 'e' → logprob: -3.201517105102539
    3. 'v' → logprob: -3.201517105102539
    4. ' passant' → logprob: -3.201517105102539
    5. ' ' → logprob: -3.451517105102539
    6. '+' → logprob: -3.576517105102539
    7. 'u' → logprob: -3.701517105102539
    8. ' d' → logprob: -3.826517105102539
    9. ' dist' → logprob: -3.951517105102539
    10. 'n' → logprob: -4.201517105102539

Token 394: 'unt' (ID: 2202)
  Prédit: 'unt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unt' → logprob: -0.011307171545922756
    2. 'unter' → logprob: -4.636307239532471
    3. 'un' → logprob: -6.761307239532471
    4. 'ut' → logprob: -8.761306762695312
    5. 'unte' → logprob: -9.261306762695312
    6. 'nt' → logprob: -11.136306762695312
    7. 'pr' → logprob: -11.511306762695312
    8. '```' → logprob: -11.636306762695312
    9. '   ' → logprob: -11.886306762695312
    10. 'ant' → logprob: -12.136306762695312

Token 395: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.07498288154602051
    2. 'er' → logprob: -2.8249828815460205
    3. 'e' → logprob: -6.074982643127441
    4. 'ée' → logprob: -6.074982643127441
    5. 'unt' → logprob: -6.199982643127441
    6. 'é' → logprob: -6.324982643127441
    7. 'nt' → logprob: -7.699982643127441
    8. '{' → logprob: -7.949982643127441
    9. 'ent' → logprob: -7.949982643127441
    10. 'tant' → logprob: -8.074982643127441

Token 396: ' ce' (ID: 2357)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.18650393187999725
    2. 'd' → logprob: -2.0615038871765137
    3. ' v' → logprob: -3.8115038871765137
    4. 'v' → logprob: -5.436503887176514
    5. ' que' → logprob: -5.436503887176514
    6. ' ' → logprob: -5.811503887176514
    7. ' '' → logprob: -6.311503887176514
    8. ' le' → logprob: -6.561503887176514
    9. ''' → logprob: -6.936503887176514
    10. ' ' → logprob: -7.436503887176514

Token 397: ' nouvel' (ID: 76298)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2943594455718994
    2. ' chemin' → logprob: -1.6693594455718994
    3. 'che' → logprob: -3.9193594455718994
    4. '+' → logprob: -5.29435920715332
    5. ' "' → logprob: -5.66935920715332
    6. ' nd' → logprob: -5.66935920715332
    7. ''' → logprob: -5.79435920715332
    8. '   ' → logprob: -5.79435920715332
    9. ' '' → logprob: -5.91935920715332
    10. '  ' → logprob: -5.91935920715332

Token 398: ' arc' (ID: 26922)
  Prédit: ' chemin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chemin' → logprob: -0.024900231510400772
    2. ' trajet' → logprob: -4.399900436401367
    3. 'che' → logprob: -5.149900436401367
    4. ')' → logprob: -7.024900436401367
    5. '_che' → logprob: -7.024900436401367
    6. ' ' → logprob: -7.274900436401367
    7. ' route' → logprob: -7.274900436401367
    8. ' itin' → logprob: -8.024900436401367
    9. ' path' → logprob: -8.149900436401367
    10. ' plus' → logprob: -8.274900436401367

Token 399: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.44095224142074585
    2. '+' → logprob: -2.0659523010253906
    3. ' +' → logprob: -2.6909523010253906
    4. ',' → logprob: -3.3159523010253906
    5. '<' → logprob: -3.8159523010253906
    6. ' ' → logprob: -4.065952301025391
    7. '           ' → logprob: -4.440952301025391
    8. ':' → logprob: -4.565952301025391
    9. ' >' → logprob: -4.815952301025391
    10. ' plus' → logprob: -4.940952301025391

Token 400: ' plus' (ID: 2932)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9011175632476807
    2. ' ' → logprob: -1.1511175632476807
    3. ' >' → logprob: -1.6511175632476807
    4. '>' → logprob: -3.4011175632476807
    5. ' "' → logprob: -4.901117324829102
    6. '  ' → logprob: -5.401117324829102
    7. ' dist' → logprob: -5.651117324829102
    8. '   ' → logprob: -5.776117324829102
    9. ' ">' → logprob: -5.776117324829102
    10. ' '' → logprob: -5.901117324829102

Token 401: ' courte' (ID: 130258)
  Prédit: ' courte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' courte' → logprob: -1.6329352855682373
    2. '   ' → logprob: -2.6329352855682373
    3. ' faible' → logprob: -2.7579352855682373
    4. ' shorter' → logprob: -2.7579352855682373
    5. 'short' → logprob: -2.8829352855682373
    6. '_short' → logprob: -3.1329352855682373
    7. '       ' → logprob: -3.1329352855682373
    8. '+' → logprob: -3.2579352855682373
    9. 'e' → logprob: -3.2579352855682373
    10. '    ' → logprob: -3.3829352855682373

Token 402: ' que' (ID: 661)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2657298743724823
    2. '               ' → logprob: -1.5157299041748047
    3. ':
' → logprob: -5.140729904174805
    4. '           ' → logprob: -6.140729904174805
    5. ',' → logprob: -6.390729904174805
    6. ' :' → logprob: -6.515729904174805
    7. '                       ' → logprob: -7.390729904174805
    8. '<|end|>' → logprob: -7.390729904174805
    9. '              ' → logprob: -8.890729904174805
    10. '                ' → logprob: -9.015729904174805

Token 403: ' celle' (ID: 31790)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.12698480486869812
    2. 'dist' → logprob: -2.1269848346710205
    3. '(dist' → logprob: -10.376984596252441
    4. '	dist' → logprob: -11.251984596252441
    5. ' ' → logprob: -13.126984596252441
    6. '_dist' → logprob: -13.251984596252441
    7. '.dist' → logprob: -13.376984596252441
    8. ' la' → logprob: -13.751984596252441
    9. ' ' → logprob: -13.751984596252441
    10. ':' → logprob: -14.126984596252441

Token 404: ' qu' (ID: 474)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5046913027763367
    2. ' actuelle' → logprob: -1.8796913623809814
    3. ' dist' → logprob: -2.1296913623809814
    4. '   ' → logprob: -2.3796913623809814
    5. '           ' → logprob: -5.629691123962402
    6. '(dist' → logprob: -5.879691123962402
    7. ' actuellement' → logprob: -5.879691123962402
    8. '       ' → logprob: -6.379691123962402
    9. 'exist' → logprob: -6.504691123962402
    10. 'act' → logprob: -6.504691123962402

Token 405: ''on' (ID: 25812)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10723956674337387
    2. 'e' → logprob: -4.107239723205566
    3. '(dist' → logprob: -4.357239723205566
    4. 'u' → logprob: -4.357239723205566
    5. 'a' → logprob: -4.482239723205566
    6. '   ' → logprob: -4.732239723205566
    7. ' dist' → logprob: -5.107239723205566
    8. '[' → logprob: -5.732239723205566
    9. 'ue' → logprob: -5.982239723205566
    10. '       ' → logprob: -5.982239723205566

Token 406: ' connaît' (ID: 124118)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8433489203453064
    2. 'avait' → logprob: -1.4683489799499512
    3. ' a' → logprob: -2.843348979949951
    4. 'a' → logprob: -2.968348979949951
    5. 'already' → logprob: -3.593348979949951
    6. ' have' → logprob: -3.718348979949951
    7. 'have' → logprob: -3.718348979949951
    8. ' has' → logprob: -3.718348979949951
    9. '[n' → logprob: -3.968348979949951
    10. 'has' → logprob: -4.093348979949951

Token 407: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04706275463104248
    2. '               ' → logprob: -3.922062873840332
    3. ' :' → logprob: -4.422062873840332
    4. '=' → logprob: -5.172062873840332
    5. ' =' → logprob: -5.672062873840332
    6. ':
' → logprob: -6.422062873840332
    7. '):' → logprob: -6.797062873840332
    8. ',' → logprob: -7.047062873840332
    9. '           ' → logprob: -7.672062873840332
    10. '                       ' → logprob: -8.797062873840332

Token 408: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010142995975911617
    2. ':' → logprob: -4.885142803192139
    3. '           ' → logprob: -6.635142803192139
    4. ' :' → logprob: -8.135143280029297
    5. ',' → logprob: -9.135143280029297
    6. '                
' → logprob: -9.135143280029297
    7. '                ' → logprob: -9.510143280029297
    8. ')' → logprob: -9.635143280029297
    9. '                   ' → logprob: -9.635143280029297
    10. '):' → logprob: -9.635143280029297

Token 409: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.088174007833004
    2. 'dist' (adapté à ' dist') → logprob: -2.5881741046905518
    3. '                   ' → logprob: -4.713173866271973
    4. '               ' → logprob: -8.463173866271973
    5. '	dist' → logprob: -10.713173866271973
    6. '_dist' → logprob: -12.088173866271973
    7. '   ' → logprob: -12.213173866271973
    8. '.dist' → logprob: -12.213173866271973
    9. '(dist' → logprob: -12.713173866271973
    10. '                       ' → logprob: -12.713173866271973

Token 410: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -12.250007629394531
    3. '[v' → logprob: -13.500007629394531
    4. '```' → logprob: -15.125007629394531
    5. ' [' → logprob: -15.875007629394531
    6. '[
' → logprob: -15.875007629394531
    7. 'n' → logprob: -16.00000762939453
    8. '	n' → logprob: -16.62500762939453
    9. '[N' → logprob: -16.75000762939453
    10. '[num' → logprob: -16.87500762939453

Token 411: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00026264708139933646
    2. '[v' → logprob: -8.375262260437012
    3. ' nv' → logprob: -11.375262260437012
    4. '[n' → logprob: -12.125262260437012
    5. 'nv' → logprob: -12.250262260437012
    6. ']' → logprob: -12.875262260437012
    7. '_nv' → logprob: -13.500262260437012
    8. ' v' → logprob: -14.000262260437012
    9. '   ' → logprob: -14.125262260437012
    10. 'ov' → logprob: -14.625262260437012

Token 412: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009115827269852161
    2. '=' → logprob: -8.000911712646484
    3. ']=' → logprob: -8.250911712646484
    4. ' =' → logprob: -8.750911712646484
    5. ' ]' → logprob: -9.000911712646484
    6. ')' → logprob: -10.375911712646484
    7. '[' → logprob: -13.875911712646484
    8. '']' → logprob: -15.000911712646484
    9. ',' → logprob: -15.375911712646484
    10. ' ' → logprob: -15.875911712646484

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. '＝' → logprob: -16.224077224731445
    4. ' ' → logprob: -16.599077224731445
    5. '.=' → logprob: -17.724077224731445
    6. ')' → logprob: -17.849077224731445
    7. ']' → logprob: -17.974077224731445
    8. '[' → logprob: -18.349077224731445
    9. ',' → logprob: -18.974077224731445
    10. '=

' → logprob: -19.724077224731445

Token 414: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.251930296421051
    2. 'd' → logprob: -1.5019302368164062
    3. '	d' → logprob: -15.001930236816406
    4. '_d' → logprob: -15.751930236816406
    5. ' ' → logprob: -15.876930236816406
    6. ' ' → logprob: -16.001930236816406
    7. '                ' → logprob: -16.251930236816406
    8. '                   ' → logprob: -16.626930236816406
    9. '               ' → logprob: -16.751930236816406
    10. '    ' → logprob: -16.876930236816406

Token 415: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.012511883862316608
    2. '+' → logprob: -4.387511730194092
    3. ' ' → logprob: -13.88751220703125
    4. ' ' → logprob: -14.01251220703125
    5. ' plus' → logprob: -14.76251220703125
    6. '+n' → logprob: -17.13751220703125
    7. '[' → logprob: -18.13751220703125
    8. '＋' → logprob: -18.95001220703125
    9. ' ' → logprob: -19.07501220703125
    10. ' +
' → logprob: -19.13751220703125

Token 416: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.04300331324338913
    2. ' nd' → logprob: -3.1680033206939697
    3. '(nd' → logprob: -13.54300308227539
    4. '_nd' → logprob: -14.04300308227539
    5. ' ' → logprob: -14.66800308227539
    6. '   ' → logprob: -15.29300308227539
    7. 'n' → logprob: -15.41800308227539
    8. 'nt' → logprob: -15.91800308227539
    9. ' ' → logprob: -16.04300308227539
    10. '  ' → logprob: -16.41800308227539

Token 417: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002858881198335439
    2. 'heap' → logprob: -8.625286102294922
    3. '			' → logprob: -10.750286102294922
    4. '                
' → logprob: -10.875286102294922
    5. ' heap' → logprob: -11.250286102294922
    6. '(heap' → logprob: -11.625286102294922
    7. '              ' → logprob: -11.875286102294922
    8. '       ' → logprob: -11.875286102294922
    9. '           ' → logprob: -12.000286102294922
    10. ',' → logprob: -12.000286102294922

Token 418: ' On' (ID: 2160)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.8649564981460571
    2. '               ' → logprob: -1.2399564981460571
    3. ' heap' → logprob: -1.2399564981460571
    4. '           ' → logprob: -10.239956855773926
    5. 'he' → logprob: -10.739956855773926
    6. ' he' → logprob: -10.864956855773926
    7. '              ' → logprob: -11.114956855773926
    8. '                   ' → logprob: -11.989956855773926
    9. '(heap' → logprob: -11.989956855773926
    10. '```' → logprob: -12.239956855773926

Token 419: ' met' (ID: 1421)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6089983582496643
    2. '               ' → logprob: -1.2339982986450195
    3. ' heap' → logprob: -2.3589982986450195
    4. 'update' → logprob: -3.7339982986450195
    5. 'push' → logprob: -3.8589982986450195
    6. ' update' → logprob: -4.2339982986450195
    7. '                   ' → logprob: -5.6089982986450195
    8. '   ' → logprob: -5.9839982986450195
    9. '           ' → logprob: -6.9839982986450195
    10. 'he' → logprob: -7.2339982986450195

Token 420: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.027768781408667564
    2. 'à' → logprob: -3.652768850326538
    3. '               ' → logprob: -7.777768611907959
    4. ' ' → logprob: -8.152769088745117
    5. ' ' → logprob: -8.402769088745117
    6. 'a' → logprob: -8.527769088745117
    7. ' a' → logprob: -8.902769088745117
    8. '```' → logprob: -9.152769088745117
    9. '                ' → logprob: -10.527769088745117
    10. 'À' → logprob: -10.652769088745117

Token 421: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.00046033994294703007
    2. 'jou' → logprob: -8.250460624694824
    3. ' jour' → logprob: -8.750460624694824
    4. '```' → logprob: -10.750460624694824
    5. 'jours' → logprob: -12.000460624694824
    6. 'dist' → logprob: -12.250460624694824
    7. 'journ' → logprob: -12.500460624694824
    8. 'Jour' → logprob: -13.250460624694824
    9. ' ' → logprob: -14.125460624694824
    10. 'day' → logprob: -14.250460624694824

Token 422: ' la' (ID: 557)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9225959181785583
    2. '               ' → logprob: -1.7975959777832031
    3. '(n' → logprob: -2.047595977783203
    4. ' dist' → logprob: -2.422595977783203
    5. '(dist' → logprob: -3.297595977783203
    6. ' (' → logprob: -3.547595977783203
    7. '[n' → logprob: -3.797595977783203
    8. '```' → logprob: -4.047595977783203
    9. '[' → logprob: -4.172595977783203
    10. 'distance' → logprob: -4.297595977783203

Token 423: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.030163386836647987
    2. ' distance' → logprob: -3.655163288116455
    3. 'plus' → logprob: -6.905163288116455
    4. 'me' → logprob: -6.905163288116455
    5. 'dist' → logprob: -6.905163288116455
    6. 'nou' → logprob: -8.530163764953613
    7. ' plus' → logprob: -8.655163764953613
    8. 'val' → logprob: -8.780163764953613
    9. ' meilleure' → logprob: -8.905163764953613
    10. ' meilleur' → logprob: -9.530163764953613

Token 424: ' minimale' (ID: 143217)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.619311974034645e-05
    2. 'heap' → logprob: -10.625036239624023
    3. '              ' → logprob: -12.375036239624023
    4. '			' → logprob: -13.500036239624023
    5. '       ' → logprob: -13.625036239624023
    6. '           ' → logprob: -13.875036239624023
    7. '                ' → logprob: -13.875036239624023
    8. '(heap' → logprob: -14.000036239624023
    9. ' heap' → logprob: -14.125036239624023
    10. ',' → logprob: -15.125036239624023

Token 425: ' vers' (ID: 3640)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005772201111540198
    2. 'heap' → logprob: -7.500577449798584
    3. ' heap' → logprob: -11.375576972961426
    4. '(heap' → logprob: -12.500576972961426
    5. '			' → logprob: -12.750576972961426
    6. '              ' → logprob: -13.375576972961426
    7. '       ' → logprob: -13.625576972961426
    8. '           ' → logprob: -13.750576972961426
    9. ',' → logprob: -14.375576972961426
    10. '                   ' → logprob: -15.000576972961426

Token 426: ' '' (ID: 461)
  Prédit: ' nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nv' → logprob: -0.2839623987674713
    2. 'nv' → logprob: -1.408962368965149
    3. '[n' → logprob: -5.908962249755859
    4. 'n' → logprob: -10.65896224975586
    5. '_nv' → logprob: -10.65896224975586
    6. '(n' → logprob: -10.90896224975586
    7. '```' → logprob: -11.78396224975586
    8. ' ' → logprob: -12.28396224975586
    9. ' ' → logprob: -12.40896224975586
    10. ' n' → logprob: -13.28396224975586

Token 427: 'nv' (ID: 40002)
  Prédit: 'nv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.0006293982733041048
    2. ' nv' → logprob: -7.375629425048828
    3. 'n' → logprob: -13.750629425048828
    4. '_nv' → logprob: -14.000629425048828
    5. '[n' → logprob: -15.500629425048828
    6. 'nm' → logprob: -16.000629425048828
    7. '   ' → logprob: -16.250629425048828
    8. '```' → logprob: -16.750629425048828
    9. '
' → logprob: -17.000629425048828
    10. 'nvarchar' → logprob: -17.125629425048828

Token 428: ''
' (ID: 2207)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00024477019906044006
    2. ')' → logprob: -9.000245094299316
    3. '<|end|>' → logprob: -10.000245094299316
    4. '              ' → logprob: -10.625245094299316
    5. '                ' → logprob: -11.000245094299316
    6. '           ' → logprob: -11.750245094299316
    7. '                   ' → logprob: -12.000245094299316
    8. ',' → logprob: -12.375245094299316
    9. '                
' → logprob: -12.500245094299316
    10. '       ' → logprob: -12.625245094299316

Token 429: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009005343541502953
    2. 'heap' → logprob: -4.759005546569824
    3. ' heap' → logprob: -8.009005546569824
    4. '(heap' → logprob: -10.509005546569824
    5. '			' → logprob: -10.884005546569824
    6. '                   ' → logprob: -12.509005546569824
    7. '              ' → logprob: -13.009005546569824
    8. '           ' → logprob: -13.884005546569824
    9. '```' → logprob: -14.009005546569824
    10. '                ' → logprob: -14.009005546569824

Token 430: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0110511165112257
    2. ' heap' → logprob: -4.511051177978516
    3. '               ' → logprob: -12.636051177978516
    4. '(heap' → logprob: -18.511051177978516
    5. 'he' → logprob: -18.636051177978516
    6. '.heap' → logprob: -19.386051177978516
    7. 'Heap' → logprob: -19.511051177978516
    8. '_heap' → logprob: -19.886051177978516
    9. '   ' → logprob: -20.636051177978516
    10. '                   ' → logprob: -21.386051177978516

Token 431: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. 'p' → logprob: -15.5
    3. '.push' → logprob: -17.625
    4. ' q' → logprob: -18.25
    5. 'h' → logprob: -18.75
    6. '.q' → logprob: -19.125
    7. '```' → logprob: -19.25
    8. '.' → logprob: -19.375
    9. '.append' → logprob: -19.375
    10. '.heap' → logprob: -20.125

Token 432: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -1.5451681974809617e-05
    2. '.heap' → logprob: -11.125015258789062
    3. '.' → logprob: -14.500015258789062
    4. '.push' → logprob: -16.625015258789062
    5. ' .' → logprob: -18.000015258789062
    6. '​.' → logprob: -18.250015258789062
    7. 'he' → logprob: -18.250015258789062
    8. '.He' → logprob: -18.500015258789062
    9. '.h' → logprob: -18.625015258789062
    10. '.py' → logprob: -18.875015258789062

Token 433: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.45848218582978e-06
    2. 'pp' → logprob: -13.25000286102295
    3. 'ap' → logprob: -14.37500286102295
    4. 'push' → logprob: -19.125001907348633
    5. 'a' → logprob: -19.250001907348633
    6. 'appen' → logprob: -19.625001907348633
    7. ' app' → logprob: -20.000001907348633
    8. 'q' → logprob: -20.000001907348633
    9. 'App' → logprob: -20.000001907348633
    10. '```' → logprob: -20.500001907348633

Token 434: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.128163257315464e-07
    2. 'push' → logprob: -15.25
    3. 'op' → logprob: -17.625
    4. 'e' → logprob: -17.875
    5. 'sh' → logprob: -18.375
    6. 'le' → logprob: -18.375
    7. 'USH' → logprob: -19.0
    8. 'p' → logprob: -19.125
    9. '   ' → logprob: -19.625
    10. '```' → logprob: -19.625

Token 435: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -15.375
    3. '(
' → logprob: -16.5
    4. '<|end|>' → logprob: -16.75
    5. '((' → logprob: -17.5
    6. ')' → logprob: -18.5
    7. '('' → logprob: -19.625
    8. '(queue' → logprob: -19.75
    9. '#' → logprob: -20.125
    10. 'que' → logprob: -20.25

Token 436: 'que' (ID: 1126)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017032715259119868
    2. 'que' → logprob: -6.376703262329102
    3. ')' → logprob: -14.376703262329102
    4. '```' → logprob: -16.1267032623291
    5. '   ' → logprob: -16.7517032623291
    6. 'quee' → logprob: -16.8767032623291
    7. '(
' → logprob: -17.0017032623291
    8. '{' → logprob: -17.6267032623291
    9. ' que' → logprob: -17.7517032623291
    10. '	' → logprob: -18.0017032623291

Token 437: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12716075778007507
    2. '((' → logprob: -2.1271607875823975
    3. ' (' → logprob: -9.127161026000977
    4. ',' → logprob: -9.127161026000977
    5. ',(' → logprob: -12.002161026000977
    6. ')' → logprob: -13.002161026000977
    7. '   ' → logprob: -13.252161026000977
    8. ' ' → logprob: -13.377161026000977
    9. '```' → logprob: -13.502161026000977
    10. ' ((' → logprob: -14.127161026000977

Token 438: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5804553627967834
    2. '(d' → logprob: -1.5804553031921387
    3. '(dist' → logprob: -1.5804553031921387
    4. '(' → logprob: -3.7054553031921387
    5. '(n' → logprob: -5.580455303192139
    6. '(nd' → logprob: -8.955455780029297
    7. '((' → logprob: -9.830455780029297
    8. '(distance' → logprob: -10.955455780029297
    9. ' ' → logprob: -11.580455780029297
    10. '   ' → logprob: -11.955455780029297

Token 439: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007816354744136333
    2. 'd' → logprob: -5.382816314697266
    3. ' dist' → logprob: -5.757816314697266
    4. ' d' → logprob: -10.632816314697266
    5. '(dist' → logprob: -12.257816314697266
    6. '   ' → logprob: -13.632816314697266
    7. '	dist' → logprob: -14.007816314697266
    8. '               ' → logprob: -14.757816314697266
    9. '_dist' → logprob: -15.757816314697266
    10. ' ' → logprob: -15.882816314697266

Token 440: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.75000286102295
    3. 'nv' → logprob: -14.62500286102295
    4. '[v' → logprob: -14.87500286102295
    5. ',n' → logprob: -14.87500286102295
    6. '(n' → logprob: -15.12500286102295
    7. ',' → logprob: -15.75000286102295
    8. 'n' → logprob: -17.125003814697266
    9. '[
' → logprob: -17.500003814697266
    10. '```' → logprob: -17.625003814697266

Token 441: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0012863060692325234
    2. 'nv' → logprob: -6.751286506652832
    3. '[n' → logprob: -9.876286506652832
    4. '[v' → logprob: -10.001286506652832
    5. ' nv' → logprob: -11.376286506652832
    6. '_nv' → logprob: -12.001286506652832
    7. 'n' → logprob: -14.376286506652832
    8. '```' → logprob: -15.376286506652832
    9. ',v' → logprob: -15.751286506652832
    10. '(n' → logprob: -16.126285552978516

Token 442: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024239711638074368
    2. ',n' → logprob: -8.625242233276367
    3. ' ,' → logprob: -9.875242233276367
    4. ',v' → logprob: -11.500242233276367
    5. '],' → logprob: -14.625242233276367
    6. '),' → logprob: -15.125242233276367
    7. '‌,' → logprob: -16.125242233276367
    8. '[n' → logprob: -16.125242233276367
    9. 'v' → logprob: -17.000242233276367
    10. '(n' → logprob: -17.125242233276367

Token 443: ' nv' (ID: 68641)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.16022889316082
    2. ' nv' → logprob: -1.9102288484573364
    3. '_nv' → logprob: -12.660228729248047
    4. ' ' → logprob: -14.160228729248047
    5. '   ' → logprob: -15.660228729248047
    6. 'n' → logprob: -15.660228729248047
    7. '  ' → logprob: -16.285228729248047
    8. '    ' → logprob: -16.535228729248047
    9. ' ' → logprob: -16.785228729248047
    10. 'nvarchar' → logprob: -16.910228729248047

Token 444: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20141801238059998
    2. '))' → logprob: -1.7014180421829224
    3. ' )' → logprob: -13.326417922973633
    4. ')
' → logprob: -13.951417922973633
    5. ')}' → logprob: -14.201417922973633
    6. '))
' → logprob: -14.451417922973633
    7. ')))' → logprob: -14.701417922973633
    8. ' ))' → logprob: -15.576417922973633
    9. ')`' → logprob: -16.326417922973633
    10. ')]' → logprob: -16.951417922973633

Token 445: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7916913032531738
    2. '   ' → logprob: -1.1666913032531738
    3. '<|end|>' → logprob: -1.7916913032531738
    4. ')' → logprob: -3.541691303253174
    5. 'return' → logprob: -4.541691303253174
    6. '	return' → logprob: -4.541691303253174
    7. ' return' → logprob: -5.166691303253174
    8. '    
' → logprob: -5.916691303253174
    9. '<|end|>' → logprob: -6.541691303253174
    10. ':return' → logprob: -6.666691303253174

Token 446: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 447: ' ajoute' (ID: 91611)
  Prédit: ' push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' push' → logprob: -0.3434067666530609
    2. 'push' → logprob: -1.8434067964553833
    3. ' pushes' → logprob: -2.0934066772460938
    4. ' he' → logprob: -5.593406677246094
    5. ' pousse' → logprob: -5.968406677246094
    6. ' pus' → logprob: -7.218406677246094
    7. 'he' → logprob: -7.593406677246094
    8. ' pous' → logprob: -7.843406677246094
    9. '_push' → logprob: -8.468406677246094
    10. 'p' → logprob: -8.843406677246094

Token 448: ' ce' (ID: 2357)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.035192977637052536
    2. '(' → logprob: -3.5351929664611816
    3. '<|end|>' → logprob: -5.410192966461182
    4. '((' → logprob: -7.785192966461182
    5. '(n' → logprob: -8.53519344329834
    6. ' ' → logprob: -9.16019344329834
    7. ')' → logprob: -9.41019344329834
    8. ' ((' → logprob: -10.28519344329834
    9. '(s' → logprob: -10.41019344329834
    10. ' )' → logprob: -11.16019344329834

Token 449: ' nouveau' (ID: 23184)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0501459538936615
    2. ' tuple' → logprob: -3.6751458644866943
    3. '(n' → logprob: -4.300146102905273
    4. ' new' → logprob: -6.050146102905273
    5. ' nouveau' → logprob: -6.050146102905273
    6. '(dist' → logprob: -6.175146102905273
    7. '(' → logprob: -7.550146102905273
    8. '(nx' → logprob: -7.550146102905273
    9. '(s' → logprob: -7.800146102905273
    10. ' nouvel' → logprob: -8.175146102905273

Token 450: ' couple' (ID: 7167)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.7522819638252258
    2. ' (' → logprob: -1.377281904220581
    3. ' trajet' → logprob: -3.002281904220581
    4. ' chemin' → logprob: -3.377281904220581
    5. ' couple' → logprob: -3.377281904220581
    6. '(' → logprob: -4.00228214263916
    7. ' tuple' → logprob: -4.00228214263916
    8. '(s' → logprob: -4.25228214263916
    9. ')' → logprob: -4.37728214263916
    10. 's' → logprob: -4.75228214263916

Token 451: ' distance' (ID: 9324)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 452: '/s' (ID: 5031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028803853318095207
    2. ',n' → logprob: -3.778803825378418
    3. ',v' → logprob: -5.653803825378418
    4. ' ,' → logprob: -6.278803825378418
    5. ',val' → logprob: -10.153803825378418
    6. ',node' → logprob: -10.778803825378418
    7. ',new' → logprob: -10.903803825378418
    8. ',num' → logprob: -11.153803825378418
    9. ',value' → logprob: -11.903803825378418
    10. ',user' → logprob: -12.028803825378418

Token 453: 'om' (ID: 310)
  Prédit: 'om'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -0.06186426430940628
    2. 'omm' → logprob: -2.9368643760681152
    3. ' sommet' → logprob: -6.561864376068115
    4. 'som' → logprob: -6.686864376068115
    5. 'ommer' → logprob: -6.811864376068115
    6. 'omme' → logprob: -6.811864376068115
    7. '```' → logprob: -7.311864376068115
    8. 'n' → logprob: -8.561863899230957
    9. 'nv' → logprob: -8.936863899230957
    10. '#' → logprob: -9.561863899230957

Token 454: 'met' (ID: 3001)
  Prédit: 'met'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'met' → logprob: -0.00037490393151529133
    2. 'et' → logprob: -9.500374794006348
    3. 'm' → logprob: -9.625374794006348
    4. 'metry' → logprob: -10.250374794006348
    5. 'mettre' → logprob: -10.375374794006348
    6. 'ment' → logprob: -10.750374794006348
    7. 'ma' → logprob: -11.000374794006348
    8. ',' → logprob: -11.375374794006348
    9. '```' → logprob: -11.500374794006348
    10. 'net' → logprob: -11.500374794006348

Token 455: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010404328349977732
    2. ' )' → logprob: -7.001040458679199
    3. '<|end|>' → logprob: -9.1260404586792
    4. ')
' → logprob: -12.3760404586792
    5. ' ' → logprob: -12.3760404586792
    6. '<|end|>' → logprob: -12.8760404586792
    7. '   ' → logprob: -13.2510404586792
    8. '               ' → logprob: -14.0010404586792
    9. ')return' → logprob: -14.2510404586792
    10. '```' → logprob: -14.2510404586792

Token 456: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7417361736297607
    2. 'que' → logprob: -0.9917361736297607
    3. ' que' → logprob: -2.2417361736297607
    4. 'la' → logprob: -3.1167361736297607
    5. 'le' → logprob: -7.36673641204834
    6. 'l' → logprob: -8.24173641204834
    7. ' ' → logprob: -8.36673641204834
    8. '(' → logprob: -8.36673641204834
    9. ' le' → logprob: -8.49173641204834
    10. ' the' → logprob: -9.11673641204834

Token 457: ' file' (ID: 1974)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.258231520652771
    2. 'file' → logprob: -1.383231520652771
    3. 'que' → logprob: -1.508231520652771
    4. ' file' → logprob: -1.633231520652771
    5. ' queue' → logprob: -3.5082316398620605
    6. ' que' → logprob: -4.1332316398620605
    7. 'priority' → logprob: -7.0082316398620605
    8. 'fil' → logprob: -8.508231163024902
    9. 'quel' → logprob: -8.883231163024902
    10. ' ' → logprob: -9.008231163024902

Token 458: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13449092209339142
    2. '<|end|>' → logprob: -2.134490966796875
    3. '   ' → logprob: -5.634490966796875
    4. '       ' → logprob: -7.009490966796875
    5. '<|end|>' → logprob: -7.509490966796875
    6. ' )' → logprob: -7.884490966796875
    7. ')
' → logprob: -7.884490966796875
    8. '
' → logprob: -8.634490966796875
    9. ',' → logprob: -9.009490966796875
    10. 'return' → logprob: -9.134490966796875

Token 459: ' priorité' (ID: 150252)
  Prédit: 'prior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prior' → logprob: -0.02159651182591915
    2. ' priorité' → logprob: -4.521596431732178
    3. 'priority' → logprob: -4.646596431732178
    4. 'prio' → logprob: -7.771596431732178
    5. '_prior' → logprob: -8.396596908569336
    6. ' prior' → logprob: -9.271596908569336
    7. 'pri' → logprob: -10.021596908569336
    8. 'Prior' → logprob: -11.146596908569336
    9. '
' → logprob: -11.271596908569336
    10. 'p' → logprob: -11.396596908569336

Token 460: ' afin' (ID: 22217)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1196843832731247
    2. '<|end|>' → logprob: -2.2446844577789307
    3. '
' → logprob: -5.619684219360352
    4. ')return' → logprob: -6.619684219360352
    5. '<|end|>' → logprob: -7.494684219360352
    6. '   ' → logprob: -7.494684219360352
    7. 'return' → logprob: -9.244684219360352
    8. ' )' → logprob: -9.369684219360352
    9. ')
' → logprob: -9.369684219360352
    10. '       ' → logprob: -9.494684219360352

Token 461: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44501805305480957
    2. ' de' → logprob: -1.6950180530548096
    3. 'de' → logprob: -3.3200180530548096
    4. 'd' → logprob: -3.4450180530548096
    5. '           ' → logprob: -3.4450180530548096
    6. '   ' → logprob: -4.0700178146362305
    7. ' d' → logprob: -4.3200178146362305
    8. ' que' → logprob: -4.5700178146362305
    9. 'que' → logprob: -4.8200178146362305
    10. '                   ' → logprob: -5.1950178146362305

Token 462: ' le' (ID: 505)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.1393170356750488
    2. 'contin' → logprob: -1.2643170356750488
    3. 'expl' → logprob: -1.6393170356750488
    4. 'p' → logprob: -2.889317035675049
    5. ' explorer' → logprob: -3.014317035675049
    6. ' poursuivre' → logprob: -3.389317035675049
    7. 'trait' → logprob: -3.889317035675049
    8. ' traiter' → logprob: -4.264317035675049
    9. 'tr' → logprob: -4.764317035675049
    10. 'ré' → logprob: -4.889317035675049

Token 463: ' traiter' (ID: 105852)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.32470089197158813
    2. ' explorer' → logprob: -2.0747008323669434
    3. 'trait' → logprob: -2.9497008323669434
    4. ' traiter' → logprob: -3.5747008323669434
    5. 'contin' → logprob: -3.6997008323669434
    6. 'tr' → logprob: -4.449700832366943
    7. 'tra' → logprob: -4.699700832366943
    8. ' continuer' → logprob: -4.949700832366943
    9. 'p' → logprob: -5.074700832366943
    10. 'ré' → logprob: -5.824700832366943

Token 464: ' plus' (ID: 2932)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0720381960272789
    2. '<|end|>' → logprob: -2.697038173675537
    3. '<|end|>' → logprob: -7.197038173675537
    4. ' )' → logprob: -8.322038650512695
    5. '
' → logprob: -8.447038650512695
    6. '\n' → logprob: -8.822038650512695
    7. ' ' → logprob: -9.072038650512695
    8. '  
' → logprob: -9.072038650512695
    9. '   ' → logprob: -9.072038650512695
    10. '```' → logprob: -9.072038650512695

Token 465: ' tard' (ID: 30225)
  Prédit: ' tard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tard' → logprob: -1.0301811695098877
    2. ' tôt' → logprob: -1.2801811695098877
    3. ' adelante' → logprob: -2.9051811695098877
    4. ' prochain' → logprob: -3.2801811695098877
    5. ')' → logprob: -3.4051811695098877
    6. ' pro' → logprob: -3.5301811695098877
    7. 't' → logprob: -3.5301811695098877
    8. ',' → logprob: -3.5301811695098877
    9. ' ahead' → logprob: -4.030180931091309
    10. 'pro' → logprob: -4.280180931091309

Token 466: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5079106092453003
    2. '<|end|>' → logprob: -1.0079106092453003
    3. '
' → logprob: -4.25791072845459
    4. '   ' → logprob: -5.00791072845459
    5. '\n' → logprob: -6.00791072845459
    6. ' ' → logprob: -6.13291072845459
    7. '<|end|>' → logprob: -6.75791072845459
    8. 'return' → logprob: -6.75791072845459
    9. ')return' → logprob: -7.13291072845459
    10. ' return' → logprob: -7.25791072845459

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9988440275192261
    2. 'return' → logprob: -1.248844027519226
    3. ' return' → logprob: -2.1238441467285156
    4. '<|end|>' → logprob: -2.3738441467285156
    5. '
' → logprob: -2.4988441467285156
    6. '	return' → logprob: -3.4988441467285156
    7. '    
' → logprob: -5.248844146728516
    8. '\n' → logprob: -5.248844146728516
    9. ':return' → logprob: -6.498844146728516
    10. '' → logprob: -6.498844146728516

Token 468: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06670630723237991
    2. '   ' → logprob: -3.316706418991089
    3. ' return' → logprob: -3.566706418991089
    4. '	return' → logprob: -11.816706657409668
    5. ' ' → logprob: -13.691706657409668
    6. ':return' → logprob: -15.191706657409668
    7. 'ret' → logprob: -15.941706657409668
    8. '  ' → logprob: -16.06670570373535
    9. '       ' → logprob: -16.81670570373535
    10. '{return' → logprob: -16.94170570373535

Token 469: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.061967797577381134
    2. ' dist' → logprob: -2.8119678497314453
    3. '(dist' → logprob: -16.061967849731445
    4. '	dist' → logprob: -17.561967849731445
    5. '_dist' → logprob: -19.186967849731445
    6. 'Dist' → logprob: -19.936967849731445
    7. '.dist' → logprob: -20.936967849731445
    8. ' ' → logprob: -21.061967849731445
    9. 'd' → logprob: -21.936967849731445
    10. '[' → logprob: -22.436967849731445

Token 470: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 471: ' À' (ID: 27643)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 472: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 473: ' fin' (ID: 2131)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.5380486249923706
    2. 'fin' → logprob: -1.2880486249923706
    3. 'return' → logprob: -2.28804874420166
    4. 'liste' → logprob: -4.91304874420166
    5. 'complete' → logprob: -5.28804874420166
    6. '```' → logprob: -5.53804874420166
    7. 'finish' → logprob: -5.66304874420166
    8. 'list' → logprob: -5.78804874420166
    9. '#' → logprob: -6.03804874420166
    10. 'python' → logprob: -6.66304874420166

Token 474: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: ' la' (ID: 557)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1588306874036789
    2. 'la' → logprob: -2.4088306427001953
    3. 'distance' → logprob: -3.6588306427001953
    4. 'l' → logprob: -4.408830642700195
    5. 'len' → logprob: -5.408830642700195
    6. 'range' → logprob: -5.533830642700195
    7. 'n' → logprob: -5.658830642700195
    8. 'd' → logprob: -6.908830642700195
    9. 'return' → logprob: -6.908830642700195
    10. 'None' → logprob: -7.033830642700195

Token 476: ' boucle' (ID: 174211)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.0053826915100216866
    2. 'function' → logprob: -5.380382537841797
    3. ' fonction' → logprob: -8.005382537841797
    4. 'fon' → logprob: -8.130382537841797
    5. 'def' → logprob: -9.380382537841797
    6. 'ligne' → logprob: -11.630382537841797
    7. 'fun' → logprob: -11.880382537841797
    8. 'dé' → logprob: -11.880382537841797
    9. '```' → logprob: -11.880382537841797
    10. ' function' → logprob: -12.005382537841797

Token 477: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 478: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.018259983509778976
    2. ' dist' → logprob: -4.0182600021362305
    3. 'return' → logprob: -9.14326000213623
    4. ' return' → logprob: -13.26826000213623
    5. '	dist' → logprob: -14.76826000213623
    6. '   ' → logprob: -15.01826000213623
    7. '.dist' → logprob: -15.39326000213623
    8. '(dist' → logprob: -15.51826000213623
    9. '_dist' → logprob: -16.268259048461914
    10. '```' → logprob: -16.893259048461914

Token 479: ' contenant' (ID: 131049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 480: ' la' (ID: 557)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.44354048371315
    2. 'la' → logprob: -1.9435404539108276
    3. ' la' → logprob: -2.318540573120117
    4. ' les' → logprob: -2.318540573120117
    5. ' toutes' → logprob: -4.693540573120117
    6. 'dist' → logprob: -5.693540573120117
    7. 'l' → logprob: -6.193540573120117
    8. 'the' → logprob: -6.943540573120117
    9. '[:]' → logprob: -7.943540573120117
    10. 't' → logprob: -7.943540573120117

Token 481: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.08717262744903564
    2. 'minimum' → logprob: -3.712172508239746
    3. ' plus' → logprob: -3.962172508239746
    4. 'liste' → logprob: -4.462172508239746
    5. 'list' → logprob: -5.462172508239746
    6. 'moins' → logprob: -5.837172508239746
    7. 'short' → logprob: -5.962172508239746
    8. ' tableau' → logprob: -6.212172508239746
    9. 'table' → logprob: -6.337172508239746
    10. 's' → logprob: -6.337172508239746

Token 482: ' courte' (ID: 130258)
  Prédit: 'cour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cour' → logprob: -0.06290159374475479
    2. 'court' → logprob: -2.812901496887207
    3. 'short' → logprob: -7.812901496887207
    4. '```' → logprob: -8.312901496887207
    5. 'pet' → logprob: -9.312901496887207
    6. ' courte' → logprob: -9.437901496887207
    7. ' court' → logprob: -10.062901496887207
    8. 'c' → logprob: -11.062901496887207
    9. 'cours' → logprob: -11.312901496887207
    10. ' cour' → logprob: -11.937901496887207

Token 483: ' distance' (ID: 9324)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.4150443375110626
    2. 's' → logprob: -1.5400443077087402
    3. '_paths' → logprob: -3.6650443077087402
    4. ' des' → logprob: -4.04004430770874
    5. ' distance' → logprob: -4.16504430770874
    6. '_' → logprob: -4.79004430770874
    7. 'dist' → logprob: -4.79004430770874
    8. 'distance' → logprob: -5.04004430770874
    9. '_dist' → logprob: -5.04004430770874
    10. ' paths' → logprob: -5.04004430770874

Token 484: ' depuis' (ID: 16277)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3229238986968994
    2. ' vers' → logprob: -2.1979238986968994
    3. '(s' → logprob: -3.3229238986968994
    4. ' ' → logprob: -3.6979238986968994
    5. '   ' → logprob: -4.19792366027832
    6. 'vers' → logprob: -4.19792366027832
    7. ')' → logprob: -4.19792366027832
    8. '<|end|>' → logprob: -4.57292366027832
    9. '[' → logprob: -4.82292366027832
    10. ' to' → logprob: -5.32292366027832

Token 485: ' '' (ID: 461)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.07323066145181656
    2. ' start' → logprob: -3.323230743408203
    3. 'le' → logprob: -3.698230743408203
    4. ' le' → logprob: -4.698230743408203
    5. 'l' → logprob: -8.448230743408203
    6. '(start' → logprob: -8.823230743408203
    7. '[start' → logprob: -9.198230743408203
    8. ' ' → logprob: -10.198230743408203
    9. 'la' → logprob: -10.573230743408203
    10. 'depart' → logprob: -10.573230743408203

Token 486: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.005255933851003647
    2. ' start' → logprob: -5.255255699157715
    3. '[start' → logprob: -12.130255699157715
    4. 'le' → logprob: -12.380255699157715
    5. '(start' → logprob: -12.380255699157715
    6. ' le' → logprob: -12.755255699157715
    7. 'l' → logprob: -13.630255699157715
    8. '=start' → logprob: -13.630255699157715
    9. ' ' → logprob: -13.880255699157715
    10. 'end' → logprob: -14.880255699157715

Token 487: ''' (ID: 6)
  Prédit: ' vers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.6224302053451538
    2. ')' → logprob: -0.8724302053451538
    3. 'vers' → logprob: -3.9974303245544434
    4. '"' → logprob: -5.247430324554443
    5. ']' → logprob: -5.247430324554443
    6. 'à' → logprob: -6.372430324554443
    7. '.' → logprob: -6.372430324554443
    8. ',' → logprob: -6.372430324554443
    9. 's' → logprob: -6.497430324554443
    10. ' jusqu' → logprob: -6.622430324554443

Token 488: ' vers' (ID: 3640)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' chaque' (ID: 21194)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06267096847295761
    2. ' tous' → logprob: -3.562670946121216
    3. 'cha' → logprob: -4.187671184539795
    4. ' chaque' → logprob: -4.562671184539795
    5. 'tout' → logprob: -5.187671184539795
    6. 'ch' → logprob: -7.937671184539795
    7. '#' → logprob: -9.062670707702637
    8. 'Tous' → logprob: -9.062670707702637
    9. 'every' → logprob: -9.187670707702637
    10. 'all' → logprob: -9.312670707702637

Token 490: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.07357215881347656
    2. ' sommet' → logprob: -2.6985721588134766
    3. 's' → logprob: -6.573572158813477
    4. 'aut' → logprob: -7.323572158813477
    5. ' noe' → logprob: -7.323572158813477
    6. 'no' → logprob: -7.698572158813477
    7. ' som' → logprob: -9.198572158813477
    8. ' autre' → logprob: -9.823572158813477
    9. 'point' → logprob: -9.823572158813477
    10. ' somm' → logprob: -10.073572158813477

Token 491: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 492: ' retourn' (ID: 150215)
  Prédit: 'ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ren' → logprob: -0.5714792609214783
    2. 'ret' → logprob: -1.196479320526123
    3. 'r' → logprob: -3.196479320526123
    4. ' ren' → logprob: -3.696479320526123
    5. '   ' → logprob: -3.946479320526123
    6. 'returned' → logprob: -4.571479320526123
    7. ' ' → logprob: -4.821479320526123
    8. 'return' → logprob: -4.821479320526123
    9. ' retourn' → logprob: -5.071479320526123
    10. '[]' → logprob: -5.196479320526123

Token 493: 'ée' (ID: 2894)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.123818278312683
    2. 'e' → logprob: -1.248818278312683
    3. '<|end|>' → logprob: -2.1238183975219727
    4. ']' → logprob: -2.3738183975219727
    5. 'ed' → logprob: -3.2488183975219727
    6. '()' → logprob: -3.4988183975219727
    7. '}' → logprob: -4.123818397521973
    8. '(' → logprob: -4.373818397521973
    9. 'er' → logprob: -4.498818397521973
    10. '_' → logprob: -4.623818397521973

Token 494: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 495: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2538048326969147
    2. 'def' → logprob: -2.253804922103882
    3. '#' → logprob: -2.378804922103882
    4. 'import' → logprob: -4.753804683685303
    5. '```' → logprob: -5.003804683685303
    6. '<|end|>' → logprob: -5.003804683685303
    7. 'N' → logprob: -7.753804683685303
    8. 'a' → logprob: -8.003805160522461
    9. 'pass' → logprob: -8.003805160522461
    10. 'num' → logprob: -8.003805160522461

Token 496: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07099631428718567
    2. 'def' → logprob: -3.5709962844848633
    3. '#' → logprob: -3.6959962844848633
    4. 'N' → logprob: -4.820996284484863
    5. 'if' → logprob: -5.570996284484863
    6. 'import' → logprob: -6.820996284484863
    7. ' n' → logprob: -7.820996284484863
    8. 't' → logprob: -8.070996284484863
    9. 'T' → logprob: -8.320996284484863
    10. ' #' → logprob: -8.320996284484863

Token 497: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0039255875162780285
    2. '(' → logprob: -6.503925800323486
    3. ' =' → logprob: -6.878925800323486
    4. 's' → logprob: -7.253925800323486
    5. '=' → logprob: -8.503925323486328
    6. 'n' → logprob: -9.753925323486328
    7. '_' → logprob: -9.878925323486328
    8. '()
' → logprob: -10.503925323486328
    9. '();' → logprob: -10.503925323486328
    10. ',' → logprob: -10.878925323486328

Token 498: ' trois' (ID: 25564)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2372802048921585
    2. 'l' → logprob: -1.987280249595642
    3. 'input' → logprob: -3.7372801303863525
    4. ' données' → logprob: -5.112280368804932
    5. 'don' → logprob: -5.112280368804932
    6. 'inputs' → logprob: -5.112280368804932
    7. 'import' → logprob: -5.237280368804932
    8. 'data' → logprob: -5.237280368804932
    9. ' n' → logprob: -5.487280368804932
    10. 'd' → logprob: -5.862280368804932

Token 499: ' ent' (ID: 1121)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24955162405967712
    2. ' lignes' → logprob: -2.62455153465271
    3. ' ()' → logprob: -3.37455153465271
    4. '_' → logprob: -3.74955153465271
    5. '(' → logprob: -4.249551773071289
    6. ' ' → logprob: -4.374551773071289
    7. ' lines' → logprob: -4.374551773071289
    8. ' =' → logprob: -4.999551773071289
    9. ' variables' → logprob: -5.249551773071289
    10. ',' → logprob: -5.249551773071289

Token 500: 'iers' (ID: 11012)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.017753254622220993
    2. 'rees' → logprob: -4.3927531242370605
    3. 'iers' → logprob: -6.5177531242370605
    4. 'rée' → logprob: -6.5177531242370605
    5. 'ries' → logprob: -6.6427531242370605
    6. 'ées' → logprob: -8.392753601074219
    7. 'ri' → logprob: -8.642753601074219
    8. 'êtes' → logprob: -8.767753601074219
    9. 'ières' → logprob: -9.267753601074219
    10. 'rés' → logprob: -9.642753601074219

Token 501: ' n' (ID: 297)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.40396660566329956
    2. 'n' → logprob: -1.1539666652679443
    3. 'a' → logprob: -5.153966426849365
    4. '=' → logprob: -5.528966426849365
    5. ' =' → logprob: -5.778966426849365
    6. '(n' → logprob: -6.403966426849365
    7. 'N' → logprob: -6.653966426849365
    8. '(' → logprob: -7.903966426849365
    9. 'v' → logprob: -9.153966903686523
    10. '()\' → logprob: -9.153966903686523

Token 502: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002220199443399906
    2. ' =' → logprob: -6.502220153808594
    3. ' ,' → logprob: -7.627220153808594
    4. ',n' → logprob: -9.502220153808594
    5. ',m' → logprob: -9.752220153808594
    6. '=' → logprob: -10.252220153808594
    7. ',u' → logprob: -11.002220153808594
    8. ' ' → logprob: -11.877220153808594
    9. ',M' → logprob: -12.002220153808594
    10. 'u' → logprob: -12.252220153808594

Token 503: 'nombre' (ID: 28576)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04543221741914749
    2. ',m' → logprob: -3.6704323291778564
    3. 'm' → logprob: -4.295432090759277
    4. ' ,' → logprob: -5.795432090759277
    5. ',k' → logprob: -6.670432090759277
    6. ' m' → logprob: -7.545432090759277
    7. 'k' → logprob: -9.045432090759277
    8. ',M' → logprob: -9.295432090759277
    9. ')' → logprob: -9.420432090759277
    10. ' ' → logprob: -10.670432090759277

Token 504: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024483513087034225
    2. ' ,' → logprob: -4.649483680725098
    3. ')' → logprob: -4.899483680725098
    4. '_' → logprob: -6.149483680725098
    5. '_vertices' → logprob: -7.024483680725098
    6. '_nodes' → logprob: -7.274483680725098
    7. ' =' → logprob: -7.274483680725098
    8. '_points' → logprob: -7.524483680725098
    9. ' )' → logprob: -7.899483680725098
    10. ' des' → logprob: -8.399483680725098

Token 505: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5445140600204468
    2. 'nodes' → logprob: -1.5445140600204468
    3. 'vertices' → logprob: -2.5445141792297363
    4. ' nodes' → logprob: -3.1695141792297363
    5. ' villes' → logprob: -4.044514179229736
    6. ' somm' → logprob: -4.294514179229736
    7. 'v' → logprob: -4.419514179229736
    8. ',' → logprob: -5.169514179229736
    9. 'cities' → logprob: -5.419514179229736
    10. 'som' → logprob: -5.419514179229736

Token 506: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.01934422366321087
    2. 'êts' → logprob: -5.019344329833984
    3. 'e' → logprob: -5.394344329833984
    4. 'auts' → logprob: -6.269344329833984
    5. 'et' → logprob: -6.519344329833984
    6. 'êtres' → logprob: -7.019344329833984
    7. 'è' → logprob: -7.394344329833984
    8. 'eurs' → logprob: -7.519344329833984
    9. 'a' → logprob: -8.019344329833984
    10. 'ètres' → logprob: -8.144344329833984

Token 507: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000513952283654362
    2. ',m' → logprob: -7.750514030456543
    3. 'm' → logprob: -10.125514030456543
    4. ' ,' → logprob: -10.875514030456543
    5. ')' → logprob: -11.250514030456543
    6. '),' → logprob: -13.125514030456543
    7. ',u' → logprob: -13.375514030456543
    8. ',
' → logprob: -13.500514030456543
    9. ',M' → logprob: -13.875514030456543
    10. 's' → logprob: -14.125514030456543

Token 508: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.009142146445810795
    2. ' m' → logprob: -4.75914192199707
    3. 'a' → logprob: -8.13414192199707
    4. 'k' → logprob: -9.00914192199707
    5. 'q' → logprob: -10.25914192199707
    6. 's' → logprob: -10.75914192199707
    7. ',' → logprob: -11.38414192199707
    8. ' ' → logprob: -11.75914192199707
    9. 'u' → logprob: -12.00914192199707
    10. 'r' → logprob: -12.00914192199707

Token 509: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015331650152802467
    2. ' =' → logprob: -4.765331745147705
    3. ',k' → logprob: -5.890331745147705
    4. '=' → logprob: -6.640331745147705
    5. ',u' → logprob: -7.515331745147705
    6. ',l' → logprob: -7.765331745147705
    7. ',n' → logprob: -7.890331745147705
    8. ',t' → logprob: -8.390331268310547
    9. ',p' → logprob: -8.515331268310547
    10. ' ,' → logprob: -9.015331268310547

Token 510: 'nombre' (ID: 28576)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7361593246459961
    2. 'k' → logprob: -1.611159324645996
    3. 'q' → logprob: -1.736159324645996
    4. 's' → logprob: -2.986159324645996
    5. 't' → logprob: -3.611159324645996
    6. ' ,' → logprob: -3.736159324645996
    7. 'p' → logprob: -4.736159324645996
    8. 'd' → logprob: -4.861159324645996
    9. ')' → logprob: -5.111159324645996
    10. ' )' → logprob: -5.861159324645996

Token 511: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07265561074018478
    2. 'de' → logprob: -3.57265567779541
    3. ')' → logprob: -4.19765567779541
    4. ' de' → logprob: -4.44765567779541
    5. ' des' → logprob: -5.82265567779541
    6. ' ,' → logprob: -5.94765567779541
    7. ' d' → logprob: -6.07265567779541
    8. ' ' → logprob: -6.44765567779541
    9. '=' → logprob: -6.69765567779541
    10. 'd' → logprob: -6.82265567779541

Token 512: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.2696322798728943
    2. 'ar' → logprob: -2.394632339477539
    3. '=' → logprob: -2.644632339477539
    4. '’ar' → logprob: -3.269632339477539
    5. ''' → logprob: -5.019632339477539
    6. '_ar' → logprob: -5.394632339477539
    7. 'e' → logprob: -5.519632339477539
    8. ',' → logprob: -5.519632339477539
    9. '```' → logprob: -5.769632339477539
    10. '_edges' → logprob: -6.019632339477539

Token 513: 'êtes' (ID: 23720)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.08955362439155579
    2. 'êtes' → logprob: -2.7145535945892334
    3. 'e' → logprob: -5.3395538330078125
    4. 'tes' → logprob: -5.3395538330078125
    5. 'c' → logprob: -5.5895538330078125
    6. 'etes' → logprob: -5.9645538330078125
    7. 'gs' → logprob: -7.2145538330078125
    8. 'g' → logprob: -7.4645538330078125
    9. 'es' → logprob: -7.7145538330078125
    10. 'r' → logprob: -8.589553833007812

Token 514: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010677010286599398
    2. ')' → logprob: -7.126067638397217
    3. '),' → logprob: -8.751068115234375
    4. ' ,' → logprob: -9.251068115234375
    5. ',n' → logprob: -12.751068115234375
    6. 'n' → logprob: -12.876068115234375
    7. 'et' → logprob: -14.001068115234375
    8. ' )' → logprob: -14.376068115234375
    9. ' ),' → logprob: -14.876068115234375
    10. ' et' → logprob: -15.001068115234375

Token 515: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.405735045671463
    2. 'q' → logprob: -1.1557350158691406
    3. 't' → logprob: -4.780735015869141
    4. ' s' → logprob: -5.030735015869141
    5. 'k' → logprob: -6.780735015869141
    6. 'a' → logprob: -7.030735015869141
    7. ' q' → logprob: -7.405735015869141
    8. 'x' → logprob: -7.905735015869141
    9. 'start' → logprob: -8.65573501586914
    10. 'c' → logprob: -8.90573501586914

Token 516: ' s' (ID: 265)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5387466549873352
    2. 's' → logprob: -1.1637465953826904
    3. 'k' → logprob: -2.7887465953826904
    4. 'start' → logprob: -3.7887465953826904
    5. 'x' → logprob: -4.5387468338012695
    6. 't' → logprob: -5.5387468338012695
    7. 'Q' → logprob: -5.9137468338012695
    8. 'K' → logprob: -7.1637468338012695
    9. 'S' → logprob: -7.2887468338012695
    10. 'c' → logprob: -7.9137468338012695

Token 517: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06828783452510834
    2. '=' → logprob: -3.1932878494262695
    3. ',' → logprob: -3.6932878494262695
    4. ',n' → logprob: -9.81828784942627
    5. 's' → logprob: -12.31828784942627
    6. 'n' → logprob: -12.56828784942627
    7. ' ,' → logprob: -12.69328784942627
    8. '=input' → logprob: -12.69328784942627
    9. ' ' → logprob: -13.06828784942627
    10. '=sys' → logprob: -13.31828784942627

Token 518: 'ét' (ID: 3913)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.021207710728049278
    2. 's' → logprob: -4.021207809448242
    3. ')' → logprob: -5.896207809448242
    4. ' start' → logprob: -9.021207809448242
    5. 'source' → logprob: -9.771207809448242
    6. ' )' → logprob: -10.896207809448242
    7. 'depart' → logprob: -11.396207809448242
    8. 'd' → logprob: -11.521207809448242
    9. 'dé' → logprob: -11.521207809448242
    10. 'int' → logprob: -11.646207809448242

Token 519: 'at' (ID: 266)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.03560318052768707
    2. 't' → logprob: -3.4106032848358154
    3. 'tar' → logprob: -7.035603046417236
    4. 'a' → logprob: -8.285603523254395
    5. 'arter' → logprob: -8.910603523254395
    6. '=' → logprob: -9.160603523254395
    7. 'ar' → logprob: -9.410603523254395
    8. 'tat' → logprob: -9.660603523254395
    9. 'arte' → logprob: -9.785603523254395
    10. 'ource' → logprob: -10.035603523254395

Token 520: ' initial' (ID: 4871)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41061514616012573
    2. ',' → logprob: -1.2856152057647705
    3. 't' → logprob: -3.6606152057647705
    4. '=' → logprob: -4.660614967346191
    5. 'ource' → logprob: -5.035614967346191
    6. ' =' → logprob: -5.410614967346191
    7. 'tat' → logprob: -5.535614967346191
    8. 'ur' → logprob: -5.785614967346191
    9. '),' → logprob: -6.660614967346191
    10. 'depart' → logprob: -6.910614967346191

Token 521: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14784586429595947
    2. ',' → logprob: -2.02284574508667
    3. ' )' → logprob: -6.39784574508667
    4. ')
' → logprob: -6.89784574508667
    5. ')=' → logprob: -7.52284574508667
    6. '):' → logprob: -7.64784574508667
    7. '):
' → logprob: -8.272846221923828
    8. ' =' → logprob: -8.397846221923828
    9. '=' → logprob: -8.647846221923828
    10. '),' → logprob: -9.147846221923828

Token 522: ' départ' (ID: 32693)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.257085919380188
    2. 'dé' → logprob: -1.632085919380188
    3. 'depart' → logprob: -1.882085919380188
    4. 'de' → logprob: -2.5070858001708984
    5. ' sommet' → logprob: -3.0070858001708984
    6. 'som' → logprob: -3.1320858001708984
    7. 'source' → logprob: -3.2570858001708984
    8. 's' → logprob: -3.5070858001708984
    9. 'destination' → logprob: -3.7570858001708984
    10. ' start' → logprob: -4.132085800170898

Token 523: ' spécifique' (ID: 113170)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006915468722581863
    2. ' )' → logprob: -5.88191556930542
    3. ',' → logprob: -6.38191556930542
    4. ')
' → logprob: -6.50691556930542
    5. '=' → logprob: -8.631915092468262
    6. ' =' → logprob: -8.756915092468262
    7. ')=' → logprob: -8.756915092468262
    8. 's' → logprob: -8.881915092468262
    9. '):' → logprob: -9.881915092468262
    10. ')
' → logprob: -10.131915092468262

Token 524: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011495513841509819
    2. ' =' → logprob: -5.511495590209961
    3. '):' → logprob: -5.761495590209961
    4. ',' → logprob: -6.261495590209961
    5. '=' → logprob: -7.136495590209961
    6. '):
' → logprob: -7.511495590209961
    7. ')
' → logprob: -7.886495590209961
    8. ' )' → logprob: -8.261495590209961
    9. ')=' → logprob: -8.886495590209961
    10. 'n' → logprob: -9.261495590209961

Token 525: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.457669562427327e-05
    2. ' n' → logprob: -10.00007438659668
    3. ' =' → logprob: -11.75007438659668
    4. 'for' → logprob: -11.87507438659668
    5. '(n' → logprob: -12.87507438659668
    6. '
' → logprob: -12.87507438659668
    7. 'line' → logprob: -13.25007438659668
    8. '=' → logprob: -13.37507438659668
    9. ',' → logprob: -14.00007438659668
    10. ',n' → logprob: -14.37507438659668

Token 526: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003065030323341489
    2. ',m' → logprob: -8.125306129455566
    3. ' ,' → logprob: -11.875306129455566
    4. ',s' → logprob: -13.500306129455566
    5. ',n' → logprob: -14.375306129455566
    6. '=' → logprob: -14.625306129455566
    7. ',v' → logprob: -15.875306129455566
    8. 's' → logprob: -16.250307083129883
    9. ',k' → logprob: -16.375307083129883
    10. ',int' → logprob: -16.500307083129883

Token 527: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.018151817843317986
    2. ' m' → logprob: -4.018151760101318
    3. ' ' → logprob: -13.893152236938477
    4. 's' → logprob: -14.393152236938477
    5. '=' → logprob: -16.143152236938477
    6. 'space' → logprob: -16.518152236938477
    7. '<|end|>' → logprob: -16.518152236938477
    8. ' =' → logprob: -17.018152236938477
    9. '	m' → logprob: -17.768152236938477
    10. ' 
' → logprob: -17.768152236938477

Token 528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004556983185466379
    2. '=' → logprob: -8.750455856323242
    3. ' =' → logprob: -8.875455856323242
    4. ',s' → logprob: -9.000455856323242
    5. ' ,' → logprob: -10.375455856323242
    6. 's' → logprob: -13.125455856323242
    7. ' s' → logprob: -14.875455856323242
    8. '=s' → logprob: -15.500455856323242
    9. ' ' → logprob: -16.750455856323242
    10. ',n' → logprob: -17.000455856323242

Token 529: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0021855919621884823
    2. ' s' → logprob: -6.127185821533203
    3. 't' → logprob: -14.502185821533203
    4. 'q' → logprob: -17.002185821533203
    5. ' ' → logprob: -18.127185821533203
    6. '_s' → logprob: -18.127185821533203
    7. 'k' → logprob: -18.377185821533203
    8. 'c' → logprob: -18.502185821533203
    9. '	s' → logprob: -18.627185821533203
    10. 'x' → logprob: -18.752185821533203

Token 530: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931498050689697
    2. ' =' → logprob: -0.6931498050689697
    3. ',' → logprob: -13.56814956665039
    4. '=input' → logprob: -14.19314956665039
    5. '=sys' → logprob: -15.19314956665039
    6. '=s' → logprob: -15.69314956665039
    7. '=int' → logprob: -16.44314956665039
    8. ' ' → logprob: -16.56814956665039
    9. '＝' → logprob: -16.69314956665039
    10. ')' → logprob: -18.06814956665039

Token 531: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.005258303135633469
    2. ' map' → logprob: -5.255258083343506
    3. 'input' → logprob: -10.630258560180664
    4. 'm' → logprob: -16.255258560180664
    5. '	map' → logprob: -16.255258560180664
    6. 'ma' → logprob: -17.255258560180664
    7. '(map' → logprob: -17.380258560180664
    8. ' input' → logprob: -17.380258560180664
    9. 'list' → logprob: -17.505258560180664
    10. '[' → logprob: -17.630258560180664

Token 532: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007139815716072917
    2. 'int' → logprob: -7.25071382522583
    3. '(' → logprob: -12.750714302062988
    4. ' int' → logprob: -15.125714302062988
    5. '[int' → logprob: -15.125714302062988
    6. '<int' → logprob: -15.250714302062988
    7. '=int' → logprob: -15.625714302062988
    8. ',int' → logprob: -17.000713348388672
    9. '(str' → logprob: -17.625713348388672
    10. '	int' → logprob: -17.750713348388672

Token 533: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.026545524597168
    2. ',' → logprob: -1.401545524597168
    3. ',input' → logprob: -1.526545524597168
    4. '(input' → logprob: -2.276545524597168
    5. 'sys' → logprob: -3.651545524597168
    6. '(),' → logprob: -4.151545524597168
    7. ')' → logprob: -4.526545524597168
    8. '(' → logprob: -4.651545524597168
    9. '(sys' → logprob: -5.151545524597168
    10. '().' → logprob: -5.651545524597168

Token 534: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009117019944824278
    2. ' input' → logprob: -7.000911712646484
    3. ')' → logprob: -16.250911712646484
    4. 'sys' → logprob: -16.750911712646484
    5. '(input' → logprob: -17.125911712646484
    6. '=input' → logprob: -18.250911712646484
    7. '	input' → logprob: -19.250911712646484
    8. '_input' → logprob: -19.375911712646484
    9. ',input' → logprob: -19.625911712646484
    10. ' ' → logprob: -20.000911712646484

Token 535: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.438573680294212e-06
    2. '()' → logprob: -12.125005722045898
    3. ' ().' → logprob: -17.2500057220459
    4. '()
' → logprob: -19.7500057220459
    5. '())' → logprob: -21.0000057220459
    6. '(' → logprob: -21.2500057220459
    7. '().
' → logprob: -21.2500057220459
    8. '.' → logprob: -21.7500057220459
    9. ')' → logprob: -22.1250057220459
    10. '.readline' → logprob: -22.8750057220459

Token 536: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.023262133821845055
    2. 'strip' → logprob: -3.7732620239257812
    3. 'rstrip' → logprob: -11.023262023925781
    4. ' split' → logprob: -15.898262023925781
    5. '().' → logprob: -16.02326202392578
    6. '(split' → logprob: -16.52326202392578
    7. ' strip' → logprob: -17.14826202392578
    8. 'spl' → logprob: -17.39826202392578
    9. 'read' → logprob: -18.14826202392578
    10. '_split' → logprob: -19.52326202392578

Token 537: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00344456871971488
    2. '()' → logprob: -6.253444671630859
    3. ')' → logprob: -6.503444671630859
    4. '()))' → logprob: -11.25344467163086
    5. '(' → logprob: -14.00344467163086
    6. '))' → logprob: -14.12844467163086
    7. '())
' → logprob: -14.12844467163086
    8. ' ())' → logprob: -14.50344467163086
    9. '().' → logprob: -15.37844467163086
    10. '());' → logprob: -16.00344467163086

Token 538: 'G' (ID: 38)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.006193030625581741
    2. 'edges' → logprob: -5.131193161010742
    3. '
' → logprob: -9.131193161010742
    4. ' edge' → logprob: -9.131193161010742
    5. ' edges' → logprob: -12.131193161010742
    6. '=edge' → logprob: -12.131193161010742
    7. 's' → logprob: -12.131193161010742
    8. '#' → logprob: -12.131193161010742
    9. 'graph' → logprob: -12.256193161010742
    10. '(edge' → logprob: -12.256193161010742

Token 539: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18051689863204956
    2. '=' → logprob: -1.8055169582366943
    3. 'raph' → logprob: -7.430516719818115
    4. '=[]' → logprob: -8.680517196655273
    5. '=edge' → logprob: -12.430517196655273
    6. '＝' → logprob: -13.680517196655273
    7. '[]' → logprob: -14.055517196655273
    8. ',' → logprob: -14.180517196655273
    9. '=[]
' → logprob: -14.430517196655273
    10. '=[' → logprob: -14.680517196655273

Token 540: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006718332413583994
    2. ' [[]' → logprob: -5.006718158721924
    3. '[]' → logprob: -13.131718635559082
    4. '[[' → logprob: -14.506718635559082
    5. '[n' → logprob: -15.506718635559082
    6. 'default' → logprob: -16.756717681884766
    7. '[len' → logprob: -16.881717681884766
    8. '[s' → logprob: -16.881717681884766
    9. '[['' → logprob: -17.131717681884766
    10. '{' → logprob: -17.506717681884766

Token 541: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47831109166145325
    2. 'for' → logprob: -0.9783110618591309
    3. ')' → logprob: -5.478311061859131
    4. 'n' → logprob: -10.478311538696289
    5. ']' → logprob: -11.478311538696289
    6. ',' → logprob: -12.978311538696289
    7. '	for' → logprob: -13.228311538696289
    8. '
' → logprob: -14.103311538696289
    9. ' ' → logprob: -14.103311538696289
    10. 'f' → logprob: -14.103311538696289

Token 542: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.700132997939363e-05
    2. ' _' → logprob: -11.125017166137695
    3. '_i' → logprob: -13.875017166137695
    4. '_range' → logprob: -14.375017166137695
    5. 'i' → logprob: -15.125017166137695
    6. '_=' → logprob: -16.375017166137695
    7. '_
' → logprob: -17.250017166137695
    8. 'range' → logprob: -17.500017166137695
    9. ' i' → logprob: -17.750017166137695
    10. '_
' → logprob: -17.875017166137695

Token 543: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3161047101020813
    2. 'range' → logprob: -1.3161046504974365
    3. ' in' → logprob: -6.441104888916016
    4. 'ange' → logprob: -7.066104888916016
    5. ' range' → logprob: -8.816104888916016
    6. 'n' → logprob: -8.941104888916016
    7. 'i' → logprob: -9.691104888916016
    8. 'ran' → logprob: -11.441104888916016
    9. '_' → logprob: -11.566104888916016
    10. 'rang' → logprob: -11.941104888916016

Token 544: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.842555426876061e-06
    2. ' range' → logprob: -12.250004768371582
    3. 'rang' → logprob: -19.1250057220459
    4. 'r' → logprob: -19.2500057220459
    5. 'ra' → logprob: -20.3750057220459
    6. 'ran' → logprob: -21.1250057220459
    7. '(range' → logprob: -21.3750057220459
    8. '	range' → logprob: -22.0000057220459
    9. '   ' → logprob: -23.2500057220459
    10. ' ' → logprob: -23.5000057220459

Token 545: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.625
    3. 'n' → logprob: -17.125
    4. ' (' → logprob: -21.125
    5. '(
' → logprob: -21.5
    6. '((' → logprob: -21.875
    7. ')n' → logprob: -22.375
    8. '	n' → logprob: -22.5
    9. '(m' → logprob: -23.75
    10. '[n' → logprob: -24.125

Token 546: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.2664456789934775e-06
    2. ')' → logprob: -14.875000953674316
    3. ')]
' → logprob: -14.875000953674316
    4. ' )' → logprob: -15.000000953674316
    5. ')]
' → logprob: -16.375001907348633
    6. ']' → logprob: -17.625001907348633
    7. ')]

' → logprob: -18.125001907348633
    8. ')].' → logprob: -19.000001907348633
    9. '')]' → logprob: -19.750001907348633
    10. ')],' → logprob: -19.875001907348633

Token 547: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022686126176267862
    2. ' for' → logprob: -6.2522687911987305
    3. '
' → logprob: -8.00226879119873
    4. '<|end|>' → logprob: -12.62726879119873
    5. ' 
' → logprob: -13.87726879119873
    6. '  
' → logprob: -15.37726879119873
    7. '
' → logprob: -15.37726879119873
    8. '	for' → logprob: -15.62726879119873
    9. '#' → logprob: -16.502267837524414
    10. '    
' → logprob: -16.627267837524414

Token 548: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.060365608893335e-05
    2. ' for' → logprob: -10.125041007995605
    3. '
' → logprob: -15.375041007995605
    4. '<|end|>' → logprob: -15.500041007995605
    5. '	for' → logprob: -17.75004005432129
    6. '#' → logprob: -17.75004005432129
    7. '```' → logprob: -18.87504005432129
    8. '<|end|>' → logprob: -19.12504005432129
    9. 'For' → logprob: -19.87504005432129
    10. ' 
' → logprob: -21.00004005432129

Token 549: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.00017815368482843041
    2. 'ization' → logprob: -8.875178337097168
    3. 'iser' → logprob: -10.250178337097168
    4. 'ation' → logprob: -13.625178337097168
    5. 'is' → logprob: -14.000178337097168
    6. 'er' → logprob: -15.250178337097168
    7. 'isierung' → logprob: -16.12517738342285
    8. 'ising' → logprob: -16.37517738342285
    9. '```' → logprob: -16.37517738342285
    10. 'ize' → logprob: -16.62517738342285

Token 550: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8807487487792969
    2. '<|end|>' → logprob: -1.5057487487792969
    3. 'for' → logprob: -1.8807487487792969
    4. ' for' → logprob: -3.130748748779297
    5. '(range' → logprob: -3.130748748779297
    6. 'm' → logprob: -3.880748748779297
    7. '#' → logprob: -4.130748748779297
    8. ' of' → logprob: -4.255748748779297
    9. 'G' → logprob: -4.255748748779297
    10. '(' → logprob: -4.255748748779297

Token 551: ' grap' (ID: 60955)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004849699791520834
    2. 'G' → logprob: -5.754849910736084
    3. 'range' → logprob: -7.129849910736084
    4. ' n' → logprob: -7.379849910736084
    5. 'm' → logprob: -9.129849433898926
    6. '[n' → logprob: -9.754849433898926
    7. ' range' → logprob: -10.004849433898926
    8. '[]' → logprob: -11.129849433898926
    9. 'graph' → logprob: -11.629849433898926
    10. ' G' → logprob: -12.004849433898926

Token 552: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.4523720145225525
    2. 'phe' → logprob: -1.2023720741271973
    3. 'he' → logprob: -3.2023720741271973
    4. 'ph' → logprob: -3.9523720741271973
    5. 'p' → logprob: -7.702372074127197
    6. 'fe' → logprob: -7.827372074127197
    7. 'che' → logprob: -7.952372074127197
    8. 'f' → logprob: -8.202371597290039
    9. 'h' → logprob: -8.202371597290039
    10. '```' → logprob: -8.452371597290039

Token 553: ' sous' (ID: 14487)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4489438831806183
    2. '<|end|>' → logprob: -1.573943853378296
    3. '
' → logprob: -2.323943853378296
    4. ' for' → logprob: -2.948943853378296
    5. '  
' → logprob: -6.573944091796875
    6. '<|end|>' → logprob: -7.073944091796875
    7. ' 
' → logprob: -8.073944091796875
    8. '
' → logprob: -8.198944091796875
    9. 'while' → logprob: -8.323944091796875
    10. '' → logprob: -8.448944091796875

Token 554: ' forme' (ID: 27450)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5517520308494568
    2. 'n' → logprob: -0.9267520308494568
    3. ' range' → logprob: -5.051752090454102
    4. '[n' → logprob: -5.301752090454102
    5. ' n' → logprob: -5.676752090454102
    6. '[]' → logprob: -5.801752090454102
    7. ')' → logprob: -6.051752090454102
    8. 'for' → logprob: -6.176752090454102
    9. 'form' → logprob: -6.301752090454102
    10. 'forme' → logprob: -6.551752090454102

Token 555: ' de' (ID: 334)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8279558420181274
    2. ' d' → logprob: -1.4529558420181274
    3. '[' → logprob: -2.077955722808838
    4. ' de' → logprob: -2.327955722808838
    5. 'de' → logprob: -2.952955722808838
    6. 'd' → logprob: -4.202955722808838
    7. '[n' → logprob: -4.702955722808838
    8. ' of' → logprob: -4.952955722808838
    9. 'of' → logprob: -4.952955722808838
    10. '(' → logprob: -5.202955722808838

Token 556: ' liste' (ID: 31719)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12303438782691956
    2. 'adj' → logprob: -2.4980344772338867
    3. ' adjacency' → logprob: -4.248034477233887
    4. '[n' → logprob: -5.248034477233887
    5. 'n' → logprob: -5.498034477233887
    6. 'list' → logprob: -5.623034477233887
    7. 'graph' → logprob: -6.373034477233887
    8. '[' → logprob: -6.498034477233887
    9. 'range' → logprob: -6.623034477233887
    10. '[][]' → logprob: -7.748034477233887

Token 557: ' d' (ID: 272)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6614829301834106
    2. '(' → logprob: -0.9114829301834106
    3. '()' → logprob: -3.411482810974121
    4. '[]' → logprob: -4.036482810974121
    5. 'of' → logprob: -4.411482810974121
    6. '(
' → logprob: -5.036482810974121
    7. ' of' → logprob: -5.536482810974121
    8. 'for' → logprob: -6.286482810974121
    9. '([]' → logprob: -6.661482810974121
    10. '[n' → logprob: -6.911482810974121

Token 558: ''ad' (ID: 36162)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.07000923901796341
    2. ''ad' → logprob: -2.820009231567383
    3. 'ad' → logprob: -6.320009231567383
    4. 'list' → logprob: -6.695009231567383
    5. 'aj' → logprob: -6.820009231567383
    6. 'lists' → logprob: -6.820009231567383
    7. '[]' → logprob: -7.695009231567383
    8. 'jac' → logprob: -8.070009231567383
    9. 'range' → logprob: -8.195009231567383
    10. '’ad' → logprob: -8.445009231567383

Token 559: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.16025154292583466
    2. 'j' → logprob: -1.910251498222351
    3. 'js' → logprob: -11.78525161743164
    4. 'aj' → logprob: -12.03525161743164
    5. 'acency' → logprob: -12.16025161743164
    6. 'jec' → logprob: -13.53525161743164
    7. 'jc' → logprob: -13.53525161743164
    8. '[j' → logprob: -13.66025161743164
    9. 'Jac' → logprob: -14.03525161743164
    10. 'd' → logprob: -14.16025161743164

Token 560: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.11166929453611374
    2. 'escence' → logprob: -2.6116693019866943
    3. 'es' → logprob: -3.7366693019866943
    4. 'acency' → logprob: -5.486669063568115
    5. 'ance' → logprob: -5.861669063568115
    6. 'ac' → logprob: -7.236669063568115
    7. 'cence' → logprob: -8.236669540405273
    8. 'ense' → logprob: -8.861669540405273
    9. 'ace' → logprob: -9.486669540405273
    10. '#' → logprob: -9.486669540405273

Token 561: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009951930493116379
    2. ' for' → logprob: -4.884952068328857
    3. '
' → logprob: -6.259952068328857
    4. '<|end|>' → logprob: -7.884952068328857
    5. '  
' → logprob: -10.6349515914917
    6. ' 
' → logprob: -11.2599515914917
    7. '#' → logprob: -12.6349515914917
    8. '
' → logprob: -13.0099515914917
    9. ')' → logprob: -13.1349515914917
    10. '    
' → logprob: -13.2599515914917

Token 562: ' G' (ID: 499)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3338499069213867
    2. 'range' → logprob: -1.8338499069213867
    3. '_' → logprob: -2.2088499069213867
    4. ' for' → logprob: -4.958849906921387
    5. ' range' → logprob: -5.833849906921387
    6. '[]' → logprob: -6.708849906921387
    7. '_range' → logprob: -7.208849906921387
    8. 'm' → logprob: -7.583849906921387
    9. '
' → logprob: -7.708849906921387
    10. '[' → logprob: -8.083849906921387

Token 563: '[i' (ID: 1768)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.714076817035675
    2. '<|end|>' → logprob: -1.5890767574310303
    3. ')' → logprob: -2.2140767574310303
    4. ']' → logprob: -2.8390767574310303
    5. '=' → logprob: -3.2140767574310303
    6. ' for' → logprob: -3.5890767574310303
    7. ' =' → logprob: -4.089076995849609
    8. '[]' → logprob: -4.714076995849609
    9. '=[]' → logprob: -5.214076995849609
    10. '(s' → logprob: -5.214076995849609

Token 564: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03427531570196152
    2. ')]' → logprob: -3.5342752933502197
    3. ']=' → logprob: -5.909275531768799
    4. '].' → logprob: -7.409275531768799
    5. '])' → logprob: -7.784275531768799
    6. ')' → logprob: -8.40927505493164
    7. '()]' → logprob: -9.03427505493164
    8. '][]' → logprob: -9.03427505493164
    9. 'for' → logprob: -9.40927505493164
    10. ' ]' → logprob: -9.53427505493164

Token 565: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11760671436786652
    2. ' =' → logprob: -2.2426066398620605
    3. '=[]' → logprob: -5.6176066398620605
    4. '<|end|>' → logprob: -7.1176066398620605
    5. '[]' → logprob: -9.367607116699219
    6. '.append' → logprob: -9.492607116699219
    7. ']' → logprob: -9.867607116699219
    8. '=[]
' → logprob: -10.617607116699219
    9. '[:]' → logprob: -10.742607116699219
    10. ')' → logprob: -11.117607116699219

Token 566: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.014865153469145298
    2. 'ains' → logprob: -5.139864921569824
    3. 'i' → logprob: -5.389864921569824
    4. 'ients' → logprob: -6.764864921569824
    5. 'iens' → logprob: -6.889864921569824
    6. 'in' → logprob: -7.014864921569824
    7. '=' → logprob: -8.139864921569824
    8. 'iennent' → logprob: -8.264864921569824
    9. 'inue' → logprob: -8.389864921569824
    10. 'ain' → logprob: -8.639864921569824

Token 567: 'endra' (ID: 32364)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -6.265633419388905e-05
    2. 'nent' → logprob: -10.375062942504883
    3. 'nt' → logprob: -12.250062942504883
    4. 'ents' → logprob: -12.250062942504883
    5. 'endra' → logprob: -12.500062942504883
    6. 'en' → logprob: -12.875062942504883
    7. 'e' → logprob: -13.375062942504883
    8. 'eux' → logprob: -13.375062942504883
    9. 'enant' → logprob: -13.500062942504883
    10. '_ent' → logprob: -13.625062942504883

Token 568: ' la' (ID: 557)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.41738998889923096
    2. '[]' → logprob: -1.292389988899231
    3. ' les' → logprob: -2.7923898696899414
    4. 'des' → logprob: -5.917389869689941
    5. ' des' → logprob: -7.667389869689941
    6. '<|end|>' → logprob: -7.667389869689941
    7. ' []' → logprob: -7.667389869689941
    8. 'la' → logprob: -7.792389869689941
    9. 't' → logprob: -8.292389869689941
    10. 's' → logprob: -9.417389869689941

Token 569: ' liste' (ID: 31719)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.14022427797317505
    2. 'list' → logprob: -2.5152242183685303
    3. ' list' → logprob: -3.2652242183685303
    4. 's' → logprob: -5.890224456787109
    5. '[]
' → logprob: -6.140224456787109
    6. ' []' → logprob: -6.515224456787109
    7. 'neighbors' → logprob: -6.640224456787109
    8. 'liste' → logprob: -7.640224456787109
    9. '[' → logprob: -7.640224456787109
    10. 'pairs' → logprob: -7.890224456787109

Token 570: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008285120129585266
    2. '(' → logprob: -5.258285045623779
    3. '[]' → logprob: -6.258285045623779
    4. '()]' → logprob: -8.383285522460938
    5. ' of' → logprob: -8.508285522460938
    6. '())' → logprob: -9.383285522460938
    7. 'of' → logprob: -9.633285522460938
    8. '()
' → logprob: -9.758285522460938
    9. ')' → logprob: -9.883285522460938
    10. '([]' → logprob: -10.258285522460938

Token 571: ' voisins' (ID: 166720)
  Prédit: ' voisins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.7729843854904175
    2. ' (' → logprob: -1.0229843854904175
    3. ' tuples' → logprob: -2.147984504699707
    4. 'neighbors' → logprob: -4.522984504699707
    5. '(' → logprob: -4.647984504699707
    6. '(edges' → logprob: -5.147984504699707
    7. 'edges' → logprob: -5.147984504699707
    8. '(s' → logprob: -5.647984504699707
    9. ' edges' → logprob: -5.897984504699707
    10. '(adj' → logprob: -6.147984504699707

Token 572: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3556056320667267
    2. 'for' → logprob: -1.6056056022644043
    3. '(i' → logprob: -3.6056056022644043
    4. '[i' → logprob: -4.230605602264404
    5. '[]' → logprob: -4.480605602264404
    6. ' for' → logprob: -4.480605602264404
    7. '<|end|>' → logprob: -4.855605602264404
    8. ',' → logprob: -5.730605602264404
    9. '()
' → logprob: -5.980605602264404
    10. '(n' → logprob: -6.105605602264404

Token 573: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048589304089546204
    2. ' i' → logprob: -3.0485892295837402
    3. '	i' → logprob: -13.923589706420898
    4. 'l' → logprob: -15.298589706420898
    5. ')i' → logprob: -15.423589706420898
    6. 's' → logprob: -16.4235897064209
    7. '[i' → logprob: -16.4235897064209
    8. ' ' → logprob: -16.5485897064209
    9. 'I' → logprob: -16.6735897064209
    10. '(i' → logprob: -17.0485897064209

Token 574: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14451438188552856
    2. '<|end|>' → logprob: -2.519514322280884
    3. ' for' → logprob: -3.394514322280884
    4. ')' → logprob: -4.144514560699463
    5. ']' → logprob: -6.519514560699463
    6. 'm' → logprob: -7.144514560699463
    7. '
' → logprob: -7.269514560699463
    8. ',' → logprob: -8.019514083862305
    9. '#' → logprob: -8.019514083862305
    10. '<|end|>' → logprob: -8.394514083862305

Token 575: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.36574100604048e-06
    2. ' for' → logprob: -12.375004768371582
    3. '
' → logprob: -16.125003814697266
    4. '	for' → logprob: -19.250003814697266
    5. 'range' → logprob: -19.500003814697266
    6. 'while' → logprob: -21.500003814697266
    7. '```' → logprob: -21.625003814697266
    8. 'm' → logprob: -22.375003814697266
    9. '<|end|>' → logprob: -22.625003814697266
    10. '#' → logprob: -23.125003814697266

Token 576: ' Selon' (ID: 88731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. ' for' → logprob: -14.75
    3. '
' → logprob: -20.375
    4. '	for' → logprob: -22.25
    5. '```' → logprob: -22.625
    6. 'while' → logprob: -25.75
    7. '``' → logprob: -25.875
    8. 'For' → logprob: -26.25
    9. '​' → logprob: -26.375
    10. '#' → logprob: -26.625

Token 577: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9624365568161011
    2. ' range' → logprob: -1.212436556816101
    3. '_' → logprob: -1.962436556816101
    4. 'm' → logprob: -2.2124366760253906
    5. ' m' → logprob: -2.8374366760253906
    6. ' la' → logprob: -6.212436676025391
    7. 'for' → logprob: -6.462436676025391
    8. 'i' → logprob: -6.587436676025391
    9. ' _' → logprob: -6.837436676025391
    10. '_range' → logprob: -6.962436676025391

Token 578: ' valeur' (ID: 41664)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.61052006483078
    2. 'range' → logprob: -1.1105201244354248
    3. ' range' → logprob: -2.610520124435425
    4. ' m' → logprob: -4.610519886016846
    5. 'suite' → logprob: -4.610519886016846
    6. 'for' → logprob: -5.235519886016846
    7. ' suite' → logprob: -5.485519886016846
    8. ' for' → logprob: -5.735519886016846
    9. '#' → logprob: -5.735519886016846
    10. '```' → logprob: -6.235519886016846

Token 579: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1383259296417236
    2. ' du' → logprob: -1.3883259296417236
    3. 'for' → logprob: -1.7633259296417236
    4. 'de' → logprob: -2.3883259296417236
    5. ' des' → logprob: -2.7633259296417236
    6. 'du' → logprob: -3.6383259296417236
    7. ' for' → logprob: -4.2633256912231445
    8. 'des' → logprob: -4.2633256912231445
    9. '(m' → logprob: -4.6383256912231445
    10. ' of' → logprob: -5.0133256912231445

Token 580: ' s' (ID: 265)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.034390952438116074
    2. 'range' → logprob: -3.659390926361084
    3. ' m' → logprob: -6.034390926361084
    4. ' range' → logprob: -6.159390926361084
    5. '_' → logprob: -6.534390926361084
    6. 's' → logprob: -6.784390926361084
    7. 'l' → logprob: -8.284391403198242
    8. '"' → logprob: -8.534391403198242
    9. 'la' → logprob: -9.534391403198242
    10. 'i' → logprob: -9.659391403198242

Token 581: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04126643389463425
    2. 'for' → logprob: -3.791266441345215
    3. ',' → logprob: -4.916266441345215
    4. ':
' → logprob: -5.791266441345215
    5. ' for' → logprob: -6.041266441345215
    6. '=' → logprob: -6.166266441345215
    7. ' =' → logprob: -7.166266441345215
    8. 's' → logprob: -7.666266441345215
    9. 'if' → logprob: -7.916266441345215
    10. ' :' → logprob: -8.166266441345215

Token 582: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03818608447909355
    2. ' for' → logprob: -3.2881860733032227
    3. 'if' → logprob: -8.913186073303223
    4. ' if' → logprob: -11.663186073303223
    5. 's' → logprob: -14.288186073303223
    6. '#' → logprob: -15.288186073303223
    7. 'range' → logprob: -16.03818702697754
    8. '```' → logprob: -16.41318702697754
    9. '
' → logprob: -16.53818702697754
    10. ' 
' → logprob: -17.03818702697754

Token 583: ' traitement' (ID: 42434)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.039765194058418274
    2. ' for' → logprob: -3.2897651195526123
    3. ' code' → logprob: -7.539765357971191
    4. 's' → logprob: -7.789765357971191
    5. 'code' → logprob: -7.914765357971191
    6. 'if' → logprob: -8.539765357971191
    7. '```' → logprob: -9.914765357971191
    8. '#' → logprob: -10.414765357971191
    9. 'pour' → logprob: -11.039765357971191
    10. ' s' → logprob: -11.164765357971191

Token 584: ' diver' (ID: 51923)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008815940469503403
    2. ' for' → logprob: -5.258815765380859
    3. 'des' → logprob: -6.883815765380859
    4. '=' → logprob: -7.133815765380859
    5. ':' → logprob: -7.508815765380859
    6. 's' → logprob: -7.633815765380859
    7. '#' → logprob: -8.25881576538086
    8. 'if' → logprob: -9.00881576538086
    9. 'continue' → logprob: -9.63381576538086
    10. 'pour' → logprob: -9.88381576538086

Token 585: 'ge' (ID: 684)
  Prédit: 'ge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.00169065420050174
    2. 'gera' → logprob: -6.751690864562988
    3. 're' → logprob: -8.751690864562988
    4. 'r' → logprob: -9.001690864562988
    5. 'g' → logprob: -9.501690864562988
    6. 'gere' → logprob: -10.126690864562988
    7. 'ger' → logprob: -10.376690864562988
    8. 'gé' → logprob: -10.376690864562988
    9. 'ra' → logprob: -10.626690864562988
    10. 't' → logprob: -11.376690864562988

Token 586: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009015031158924103
    2. 'if' → logprob: -4.884015083312988
    3. ' for' → logprob: -7.009015083312988
    4. '
' → logprob: -7.634015083312988
    5. ' if' → logprob: -11.759015083312988
    6. 's' → logprob: -12.384015083312988
    7. ':' → logprob: -12.884015083312988
    8. '```' → logprob: -13.384015083312988
    9. ':
' → logprob: -13.634015083312988
    10. 'while' → logprob: -13.634015083312988

Token 587: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.91732100979425e-05
    2. 'if' → logprob: -10.250039100646973
    3. ' for' → logprob: -12.500039100646973
    4. '
' → logprob: -20.12504005432129
    5. '	for' → logprob: -20.12504005432129
    6. '```' → logprob: -20.37504005432129
    7. 's' → logprob: -22.50004005432129
    8. ' if' → logprob: -22.62504005432129
    9. 'f' → logprob: -22.87504005432129
    10. '#' → logprob: -23.00004005432129

Token 588: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.34846505522727966
    2. 's' → logprob: -1.223465085029602
    3. '0' → logprob: -11.973464965820312
    4. ' ' → logprob: -12.348464965820312
    5. ' ' → logprob: -12.723464965820312
    6. ' not' → logprob: -13.848464965820312
    7. ' True' → logprob: -13.973464965820312
    8. '1' → logprob: -14.098464965820312
    9. 'True' → logprob: -14.223464965820312
    10. '(s' → logprob: -14.348464965820312

Token 589: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03109675459563732
    2. '==' → logprob: -3.5310966968536377
    3. ' >' → logprob: -7.406096935272217
    4. ':' → logprob: -8.031096458435059
    5. ' !=' → logprob: -8.781096458435059
    6. ' <' → logprob: -9.281096458435059
    7. '>' → logprob: -9.656096458435059
    8. ' :' → logprob: -10.156096458435059
    9. '=' → logprob: -11.031096458435059
    10. ' <=' → logprob: -11.406096458435059

Token 590: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09543196111917496
    2. 'n' → logprob: -2.8454320430755615
    3. '1' → logprob: -3.4704320430755615
    4. ' ' → logprob: -6.845431804656982
    5. '2' → logprob: -8.22043228149414
    6. ' n' → logprob: -8.22043228149414
    7. 'm' → logprob: -8.84543228149414
    8. '3' → logprob: -10.47043228149414
    9. '10' → logprob: -11.47043228149414
    10. '100' → logprob: -11.59543228149414

Token 591: '250' (ID: 6911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4651574194431305
    2. 'n' → logprob: -1.090157389640808
    3. '1' → logprob: -3.4651575088500977
    4. '2' → logprob: -6.215157508850098
    5. 'm' → logprob: -6.465157508850098
    6. '3' → logprob: -8.090157508850098
    7. '10' → logprob: -8.340157508850098
    8. '100' → logprob: -8.465157508850098
    9. '5' → logprob: -9.965157508850098
    10. ' ' → logprob: -10.215157508850098

Token 592: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5684771537780762
    2. ':' → logprob: -0.9434771537780762
    3. '000' → logprob: -3.318477153778076
    4. '00' → logprob: -5.068477153778076
    5. ':
' → logprob: -6.443477153778076
    6. ' and' → logprob: -9.193477630615234
    7. ' :' → logprob: -10.193477630615234
    8. 'and' → logprob: -10.193477630615234
    9. '_' → logprob: -10.568477630615234
    10. '-' → logprob: -11.568477630615234

Token 593: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003729966701939702
    2. ':
' → logprob: -8.250372886657715
    3. ' :' → logprob: -9.125372886657715
    4. ':
' → logprob: -13.250372886657715
    5. ' and' → logprob: -14.375372886657715
    6. ' :
' → logprob: -15.875372886657715
    7. ':#' → logprob: -16.12537384033203
    8. '+:' → logprob: -16.75037384033203
    9. ':return' → logprob: -17.12537384033203
    10. ':s' → logprob: -17.50037384033203

Token 594: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12772829830646515
    2. ':
' → logprob: -2.627728223800659
    3. '   ' → logprob: -3.377728223800659
    4. 'for' → logprob: -4.877728462219238
    5. ' for' → logprob: -5.377728462219238
    6. ' :' → logprob: -7.377728462219238
    7. ' :
' → logprob: -9.002728462219238
    8. '
' → logprob: -9.127728462219238
    9. '#' → logprob: -9.377728462219238
    10. 'n' → logprob: -9.877728462219238

Token 595: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001063536386936903
    2. '#' (adapté à ' #') → logprob: -7.501063346862793
    3. ' for' → logprob: -8.126063346862793
    4. 'import' → logprob: -9.626063346862793
    5. 'pass' → logprob: -10.376063346862793
    6. 'dist' → logprob: -10.376063346862793
    7. 'print' → logprob: -10.501063346862793
    8. '   ' → logprob: -11.376063346862793
    9. 'q' → logprob: -12.376063346862793
    10. 's' → logprob: -12.501063346862793

Token 596: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00706617021933198
    2. ' for' → logprob: -5.007066249847412
    3. '#' → logprob: -8.132065773010254
    4. 'import' → logprob: -10.132065773010254
    5. 'pass' → logprob: -11.632065773010254
    6. 'from' → logprob: -12.757065773010254
    7. 'print' → logprob: -13.507065773010254
    8. ' #' → logprob: -14.257065773010254
    9. ' pass' → logprob: -14.507065773010254
    10. '```' → logprob: -14.757065773010254

Token 597: ' le' (ID: 505)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2553555965423584
    2. 'True' → logprob: -2.5053555965423584
    3. ' s' → logprob: -3.0053555965423584
    4. ' False' → logprob: -3.1303555965423584
    5. ' m' → logprob: -3.8803555965423584
    6. 'False' → logprob: -4.2553558349609375
    7. 'm' → logprob: -5.0053558349609375
    8. 's' → logprob: -5.2553558349609375
    9. ' n' → logprob: -6.3803558349609375
    10. ' ' → logprob: -7.6303558349609375

Token 598: ' point' (ID: 2438)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20642276108264923
    2. ' s' → logprob: -1.9564228057861328
    3. 'm' → logprob: -3.456422805786133
    4. 'n' → logprob: -5.581422805786133
    5. ' m' → logprob: -5.706422805786133
    6. ' code' → logprob: -5.956422805786133
    7. 'code' → logprob: -7.893922805786133
    8. 'graph' → logprob: -7.956422805786133
    9. '#' → logprob: -8.081422805786133
    10. ' graph' → logprob: -8.206422805786133

Token 599: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.32548773288726807
    2. 's' → logprob: -2.3254876136779785
    3. 'de' → logprob: -2.4504876136779785
    4. ' s' → logprob: -3.4504876136779785
    5. 'd' → logprob: -3.5754876136779785
    6. ' d' → logprob: -3.7004876136779785
    7. ' est' → logprob: -6.3254876136779785
    8. '   ' → logprob: -6.4504876136779785
    9. ' n' → logprob: -7.0754876136779785
    10. ' is' → logprob: -7.0754876136779785

Token 600: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.3551082909107208
    2. 'vue' → logprob: -1.2301082611083984
    3. 'depart' → logprob: -5.605108261108398
    4. 'd' → logprob: -6.980108261108398
    5. 'vu' → logprob: -6.980108261108398
    6. 's' → logprob: -8.480108261108398
    7. 'part' → logprob: -8.480108261108398
    8. 'v' → logprob: -8.980108261108398
    9. 'Vue' → logprob: -9.230108261108398
    10. ' vue' → logprob: -9.480108261108398

Token 601: ' possède' (ID: 76927)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.9250048995018005
    2. ' ==' → logprob: -1.5500049591064453
    3. '==' → logprob: -1.9250049591064453
    4. 'est' → logprob: -2.4250049591064453
    5. 's' → logprob: -3.5500049591064453
    6. ' >=' → logprob: -3.5500049591064453
    7. '>=' → logprob: -3.5500049591064453
    8. ' s' → logprob: -3.6750049591064453
    9. ' n' → logprob: -3.9250049591064453
    10. ' !=' → logprob: -5.800004959106445

Token 602: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.134810209274292
    2. ' une' → logprob: -1.259810209274292
    3. 's' → logprob: -2.009810209274292
    4. 'une' → logprob: -2.634810209274292
    5. 'un' → logprob: -2.884810209274292
    6. 't' → logprob: -3.009810209274292
    7. ' peu' → logprob: -3.509810209274292
    8. ' beaucoup' → logprob: -5.259810447692871
    9. ' trop' → logprob: -5.259810447692871
    10. ' ' → logprob: -5.384810447692871

Token 603: ' valeur' (ID: 41664)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -1.200329303741455
    2. ' grande' → logprob: -2.325329303741455
    3. 'distance' → logprob: -2.450329303741455
    4. 'nombre' → logprob: -2.700329303741455
    5. ' nombre' → logprob: -3.075329303741455
    6. ' degré' → logprob: -3.075329303741455
    7. 'grand' → logprob: -3.200329303741455
    8. ' grand' → logprob: -3.325329303741455
    9. ' distance' → logprob: -3.325329303741455
    10. 't' → logprob: -3.450329303741455

Token 604: ' supérieure' (ID: 106336)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5120271444320679
    2. ' élevée' → logprob: -1.8870271444320679
    3. 'é' → logprob: -2.0120272636413574
    4. 'asse' → logprob: -3.5120272636413574
    5. 'ég' → logprob: -3.8870272636413574
    6. 'tr' → logprob: -3.8870272636413574
    7. 's' → logprob: -5.012027263641357
    8. ' très' → logprob: -5.387027263641357
    9. 't' → logprob: -5.387027263641357
    10. 'ab' → logprob: -5.762027263641357

Token 605: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.9714305400848389
    2. ' ou' → logprob: -0.9714305400848389
    3. 'à' → logprob: -2.346430540084839
    4. '=' → logprob: -2.721430540084839
    5. '   ' → logprob: -2.971430540084839
    6. 'au' → logprob: -4.346430778503418
    7. ' à' → logprob: -4.471430778503418
    8. ',' → logprob: -6.471430778503418
    9. ' =' → logprob: -6.971430778503418
    10. 'or' → logprob: -7.096430778503418

Token 606: ' ég' (ID: 33150)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.03741297125816345
    2. 'égal' → logprob: -3.7874128818511963
    3. ' ég' → logprob: -4.537413120269775
    4. '=' → logprob: -5.912413120269775
    5. 'eg' → logprob: -8.287412643432617
    6. 'é' → logprob: -9.162412643432617
    7. '#' → logprob: -9.662412643432617
    8. 'égalité' → logprob: -9.787412643432617
    9. 'équ' → logprob: -10.037412643432617
    10. '```' → logprob: -10.162412643432617

Token 607: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.010485160164535046
    2. 'uale' → logprob: -5.5104851722717285
    3. 'al' → logprob: -5.7604851722717285
    4. 'u' → logprob: -6.7604851722717285
    5. 'à' → logprob: -7.0104851722717285
    6. 'e' → logprob: -8.76048469543457
    7. 'aule' → logprob: -8.76048469543457
    8. 'alee' → logprob: -9.01048469543457
    9. '=' → logprob: -9.38548469543457
    10. 'a' → logprob: -9.38548469543457

Token 608: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.6516591906547546
    2. ' à' → logprob: -1.1516592502593994
    3. '   ' → logprob: -2.0266592502593994
    4. '250' → logprob: -3.6516592502593994
    5. 'au' → logprob: -6.02665901184082
    6. ',' → logprob: -7.15165901184082
    7. 'a' → logprob: -7.65165901184082
    8. ' ' → logprob: -8.02665901184082
    9. ' au' → logprob: -8.40165901184082
    10. '```' → logprob: -8.77665901184082

Token 609: ' ' (ID: 220)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.011415129527449608
    2. ' ' → logprob: -4.511415004730225
    3. 'n' → logprob: -8.886415481567383
    4. '0' → logprob: -9.761415481567383
    5. '25' → logprob: -10.136415481567383
    6. '2' → logprob: -10.386415481567383
    7. '100' → logprob: -10.886415481567383
    8. 's' → logprob: -11.261415481567383
    9. '200' → logprob: -11.261415481567383
    10. ' n' → logprob: -11.511415481567383

Token 610: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.001490696449764073
    2. 's' → logprob: -7.501490592956543
    3. 'n' → logprob: -7.751490592956543
    4. ' ' → logprob: -8.126490592956543
    5. '0' → logprob: -10.001490592956543
    6. '100' → logprob: -10.126490592956543
    7. 'm' → logprob: -10.501490592956543
    8. '200' → logprob: -11.251490592956543
    9. '25' → logprob: -11.376490592956543
    10. '2' → logprob: -11.501490592956543

Token 611: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.200166469876422e-06
    2. '   ' → logprob: -13.500004768371582
    3. ' ' → logprob: -13.625004768371582
    4. ',' → logprob: -13.750004768371582
    5. '1' → logprob: -14.625004768371582
    6. '000' → logprob: -15.250004768371582
    7. '00' → logprob: -15.625004768371582
    8. '       ' → logprob: -15.937504768371582
    9. ':' → logprob: -16.5625057220459
    10. ')' → logprob: -16.6250057220459

Token 612: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00828405562788248
    2. ':
' → logprob: -5.133284091949463
    3. ',' → logprob: -6.633284091949463
    4. ' :' → logprob: -7.383284091949463
    5. '   ' → logprob: -7.883284091949463
    6. ' :
' → logprob: -10.883283615112305
    7. ' and' → logprob: -12.133283615112305
    8. '):' → logprob: -12.383283615112305
    9. '.' → logprob: -13.383283615112305
    10. ':#' → logprob: -14.008283615112305

Token 613: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11641543358564377
    2. ':
' → logprob: -2.241415500640869
    3. '   ' → logprob: -5.741415500640869
    4. ',' → logprob: -8.491415023803711
    5. ' :
' → logprob: -10.241415023803711
    6. 'for' → logprob: -10.241415023803711
    7. ' :' → logprob: -10.366415023803711
    8. ' for' → logprob: -10.741415023803711
    9. '
' → logprob: -11.116415023803711
    10. '):' → logprob: -12.366415023803711

Token 614: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008694461546838284
    2. ' for' → logprob: -4.758694648742676
    3. '   ' → logprob: -9.508694648742676
    4. 'import' → logprob: -13.133694648742676
    5. 'pass' → logprob: -13.633694648742676
    6. 'print' → logprob: -13.883694648742676
    7. '#' → logprob: -14.383694648742676
    8. ' pass' → logprob: -15.383694648742676
    9. '	for' → logprob: -15.383694648742676
    10. '
' → logprob: -15.508694648742676

Token 615: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07999657094478607
    2. ' _' → logprob: -2.5799965858459473
    3. '_i' → logprob: -6.829996585845947
    4. ' i' → logprob: -10.704996109008789
    5. 'i' → logprob: -13.329996109008789
    6. ' ' → logprob: -15.329996109008789
    7. '_j' → logprob: -15.329996109008789
    8. '_range' → logprob: -15.579996109008789
    9. '_s' → logprob: -15.829996109008789
    10. '_v' → logprob: -16.70499610900879

Token 616: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009761283174157143
    2. 'in' → logprob: -4.634761333465576
    3. 'range' → logprob: -12.884760856628418
    4. ' ' → logprob: -13.884760856628418
    5. 'n' → logprob: -14.509760856628418
    6. 'import' → logprob: -14.884760856628418
    7. '_' → logprob: -15.259760856628418
    8. ',' → logprob: -15.384760856628418
    9. 's' → logprob: -16.134761810302734
    10. '0' → logprob: -16.384761810302734

Token 617: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078639671206474
    2. ' range' → logprob: -5.5040788650512695
    3. 'ange' → logprob: -17.004077911376953
    4. 'rang' → logprob: -17.004077911376953
    5. '(range' → logprob: -17.254077911376953
    6. 'r' → logprob: -17.379077911376953
    7. '	range' → logprob: -17.754077911376953
    8. '0' → logprob: -18.379077911376953
    9. '_' → logprob: -18.379077911376953
    10. ' ' → logprob: -18.629077911376953

Token 618: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -4.320199877838604e-07
    2. 'm' → logprob: -15.25
    3. '(' → logprob: -16.375
    4. ' m' → logprob: -19.75
    5. ' (' → logprob: -19.875
    6. '	m' → logprob: -21.625
    7. '(
' → logprob: -21.875
    8. '((' → logprob: -23.25
    9. '(s' → logprob: -23.375
    10. '[m' → logprob: -23.75

Token 619: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006834129337221384
    2. '):
' → logprob: -5.006834030151367
    3. ' ):' → logprob: -9.631834030151367
    4. '):
' → logprob: -10.256834030151367
    5. ')' → logprob: -11.506834030151367
    6. ':' → logprob: -11.881834030151367
    7. '   ' → logprob: -14.756834030151367
    8. ' ):
' → logprob: -15.631834030151367
    9. '):

' → logprob: -16.131834030151367
    10. '():' → logprob: -16.256834030151367

Token 620: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06889679282903671
    2. '       ' → logprob: -2.818896770477295
    3. ' u' → logprob: -5.193896770477295
    4. ' a' → logprob: -7.943896770477295
    5. '    ' → logprob: -8.943897247314453
    6. 'u' → logprob: -8.943897247314453
    7. 'a' → logprob: -9.068897247314453
    8. 'v' → logprob: -9.568897247314453
    9. ' line' → logprob: -9.568897247314453
    10. ' n' → logprob: -9.693897247314453

Token 621: ' Pour' (ID: 13931)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.16534578800201416
    2. ' u' → logprob: -2.2903456687927246
    3. '   ' → logprob: -3.2903456687927246
    4. 'a' → logprob: -4.540345668792725
    5. '	u' → logprob: -7.040345668792725
    6. 'v' → logprob: -7.540345668792725
    7. ' a' → logprob: -7.540345668792725
    8. '       ' → logprob: -7.665345668792725
    9. '    ' → logprob: -8.415346145629883
    10. 'l' → logprob: -9.290346145629883

Token 622: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.058881305158138275
    2. 'range' → logprob: -3.8088812828063965
    3. ' range' → logprob: -4.0588812828063965
    4. ' _' → logprob: -4.0588812828063965
    5. '_range' → logprob: -9.058881759643555
    6. 'm' → logprob: -9.183881759643555
    7. '__' → logprob: -9.433881759643555
    8. '0' → logprob: -10.058881759643555
    9. '...' → logprob: -11.058881759643555
    10. '_m' → logprob: -11.183881759643555

Token 623: ' ar' (ID: 646)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6411333680152893
    2. ' _' → logprob: -0.7661333680152893
    3. 'ligne' → logprob: -6.2661333084106445
    4. 'range' → logprob: -6.5161333084106445
    5. ' ' → logprob: -6.8911333084106445
    6. ' line' → logprob: -7.0161333084106445
    7. ' range' → logprob: -7.1411333084106445
    8. ' ligne' → logprob: -7.5161333084106445
    9. '```' → logprob: -8.141133308410645
    10. '__' → logprob: -8.766133308410645

Token 624: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.08626353740692139
    2. 'êt' → logprob: -2.586263656616211
    3. 'e' → logprob: -5.711263656616211
    4. 'ê' → logprob: -6.461263656616211
    5. 'r' → logprob: -7.461263656616211
    6. 'g' → logprob: -7.836263656616211
    7. 'êtes' → logprob: -8.086263656616211
    8. 't' → logprob: -8.336263656616211
    9. 'ète' → logprob: -8.461263656616211
    10. 'é' → logprob: -9.711263656616211

Token 625: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3378525376319885
    2. '   ' → logprob: -2.3378524780273438
    3. ',' → logprob: -2.5878524780273438
    4. ':
' → logprob: -3.3378524780273438
    5. '       ' → logprob: -3.5878524780273438
    6. '):
' → logprob: -3.8378524780273438
    7. '<|end|>' → logprob: -4.337852478027344
    8. '):' → logprob: -5.212852478027344
    9. ' :' → logprob: -6.087852478027344
    10. 'n' → logprob: -6.337852478027344

Token 626: ' on' (ID: 402)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5343005061149597
    2. 'u' → logprob: -0.9093005061149597
    3. '   ' → logprob: -5.284300327301025
    4. 'a' → logprob: -5.534300327301025
    5. ' a' → logprob: -6.284300327301025
    6. ' ' → logprob: -9.284300804138184
    7. '	u' → logprob: -9.909300804138184
    8. 'v' → logprob: -10.659300804138184
    9. '    ' → logprob: -10.909300804138184
    10. '    
' → logprob: -11.534300804138184

Token 627: ' la' (ID: 557)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6825535297393799
    2. 'n' → logprob: -1.8075535297393799
    3. '   ' → logprob: -2.30755352973938
    4. ' continue' → logprob: -2.80755352973938
    5. 't' → logprob: -3.30755352973938
    6. 's' → logprob: -3.30755352973938
    7. 'for' → logprob: -3.43255352973938
    8. ')' → logprob: -3.55755352973938
    9. 'continue' → logprob: -3.55755352973938
    10. 'r' → logprob: -3.68255352973938

Token 628: ' lit' (ID: 11980)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5037665367126465
    2. 'aj' → logprob: -2.3787665367126465
    3. 's' → logprob: -2.5037665367126465
    4. 'n' → logprob: -3.2537665367126465
    5. 'r' → logprob: -3.3787665367126465
    6. ' read' → logprob: -3.8787665367126465
    7. ' ajoute' → logprob: -3.8787665367126465
    8. 'for' → logprob: -4.1287665367126465
    9. ' input' → logprob: -4.8787665367126465
    10. ' lire' → logprob: -5.0037665367126465

Token 629: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08115720003843307
    2. ',' → logprob: -2.9561572074890137
    3. '       ' → logprob: -4.831157207489014
    4. ':' → logprob: -5.081157207489014
    5. 'n' → logprob: -6.331157207489014
    6. ' n' → logprob: -6.581157207489014
    7. ' ,' → logprob: -6.831157207489014
    8. ':
' → logprob: -7.206157207489014
    9. '):
' → logprob: -7.331157207489014
    10. ' x' → logprob: -7.581157207489014

Token 630: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014971664175391197
    2. ' input' → logprob: -4.264971733093262
    3. 'sys' → logprob: -8.014971733093262
    4. 'l' → logprob: -8.514971733093262
    5. 'range' → logprob: -8.764971733093262
    6. 'la' → logprob: -10.264971733093262
    7. '=input' → logprob: -10.889971733093262
    8. ' ' → logprob: -11.639971733093262
    9. 'stdin' → logprob: -11.639971733093262
    10. ' la' → logprob: -12.014971733093262

Token 631: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0775851309299469
    2. 'a' → logprob: -3.452585220336914
    3. ''entrée' → logprob: -3.827585220336914
    4. ' input' → logprob: -4.827585220336914
    5. 'e' → logprob: -5.577585220336914
    6. '=input' → logprob: -5.702585220336914
    7. 'entrée' → logprob: -6.577585220336914
    8. 'import' → logprob: -6.827585220336914
    9. ''' → logprob: -7.077585220336914
    10. '=sys' → logprob: -7.202585220336914

Token 632: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43249306082725525
    2. ',' → logprob: -2.557492971420288
    3. ':' → logprob: -2.557492971420288
    4. '=' → logprob: -3.182492971420288
    5. ' =' → logprob: -3.307492971420288
    6. ')' → logprob: -3.557492971420288
    7. 'v' → logprob: -3.682492971420288
    8. ' line' → logprob: -5.307493209838867
    9. '):
' → logprob: -5.307493209838867
    10. '):' → logprob: -5.432493209838867

Token 633: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01830258220434189
    2. ' u' → logprob: -4.5183024406433105
    3. 'u' → logprob: -5.7683024406433105
    4. 'v' → logprob: -6.2683024406433105
    5. ',' → logprob: -7.6433024406433105
    6. '	u' → logprob: -7.6433024406433105
    7. '       ' → logprob: -7.8933024406433105
    8. ' v' → logprob: -8.518302917480469
    9. ',u' → logprob: -8.518302917480469
    10. 'a' → logprob: -8.643302917480469

Token 634: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.08022862672805786
    2. 'a' → logprob: -2.580228567123413
    3. ' u' → logprob: -7.705228805541992
    4. '   ' → logprob: -7.955228805541992
    5. 'f' → logprob: -8.455228805541992
    6. 'x' → logprob: -9.080228805541992
    7. 'l' → logprob: -9.205228805541992
    8. 'v' → logprob: -10.330228805541992
    9. ' ' → logprob: -10.705228805541992
    10. ' a' → logprob: -10.830228805541992

Token 635: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008681347593665123
    2. ',v' → logprob: -4.758681297302246
    3. ' ,' → logprob: -9.633681297302246
    4. 'v' → logprob: -14.008681297302246
    5. ',w' → logprob: -16.133682250976562
    6. ',s' → logprob: -16.258682250976562
    7. ',u' → logprob: -16.508682250976562
    8. ' v' → logprob: -16.633682250976562
    9. ',n' → logprob: -17.383682250976562
    10. '=' → logprob: -17.508682250976562

Token 636: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1269325166940689
    2. ' v' → logprob: -2.1269326210021973
    3. ',v' → logprob: -13.126932144165039
    4. 'w' → logprob: -14.126932144165039
    5. '	v' → logprob: -14.251932144165039
    6. ' ' → logprob: -14.501932144165039
    7. '_v' → logprob: -16.25193214416504
    8. 't' → logprob: -16.37693214416504
    9. ' w' → logprob: -16.75193214416504
    10. 'vi' → logprob: -17.37693214416504

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05425998196005821
    2. '=' → logprob: -3.054260015487671
    3. ' =' → logprob: -5.179259777069092
    4. ' ,' → logprob: -10.80426025390625
    5. ',v' → logprob: -13.17926025390625
    6. ',w' → logprob: -14.67926025390625
    7. 'w' → logprob: -15.42926025390625
    8. ',_' → logprob: -15.55426025390625
    9. ',u' → logprob: -15.55426025390625
    10. '=input' → logprob: -15.55426025390625

Token 638: ' a' (ID: 261)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07206758856773376
    2. 'c' → logprob: -3.0720674991607666
    3. ' w' → logprob: -3.8220674991607666
    4. ' c' → logprob: -7.322067737579346
    5. 'd' → logprob: -7.822067737579346
    6. 't' → logprob: -9.447067260742188
    7. 'l' → logprob: -9.572067260742188
    8. 'cost' → logprob: -9.822067260742188
    9. ' d' → logprob: -11.322067260742188
    10. 'p' → logprob: -11.322067260742188

Token 639: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06159080192446709
    2. '=' → logprob: -2.9365909099578857
    3. ' =' → logprob: -5.811590671539307
    4. 'b' → logprob: -6.436590671539307
    5. ',b' → logprob: -6.561590671539307
    6. ' ,' → logprob: -8.061591148376465
    7. 't' → logprob: -9.936591148376465
    8. ',c' → logprob: -10.061591148376465
    9. 'cost' → logprob: -10.186591148376465
    10. 'w' → logprob: -10.311591148376465

Token 640: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04562913626432419
    2. 'c' → logprob: -3.6706290245056152
    3. 't' → logprob: -5.045629024505615
    4. ' b' → logprob: -5.420629024505615
    5. 'w' → logprob: -5.545629024505615
    6. 'l' → logprob: -6.045629024505615
    7. 'p' → logprob: -7.545629024505615
    8. 'd' → logprob: -8.045629501342773
    9. 'z' → logprob: -8.295629501342773
    10. ' c' → logprob: -8.795629501342773

Token 641: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022513806819916
    2. ' =' → logprob: -1.9102251529693604
    3. ',' → logprob: -14.160224914550781
    4. ' ' → logprob: -15.535224914550781
    5. ')' → logprob: -16.91022491455078
    6. '=input' → logprob: -17.03522491455078
    7. ')=' → logprob: -17.66022491455078
    8. '＝' → logprob: -18.28522491455078
    9. ' ' → logprob: -19.03522491455078
    10. '=sys' → logprob: -19.16022491455078

Token 642: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.20141470432281494
    2. 'map' → logprob: -1.701414704322815
    3. '	map' → logprob: -13.576415061950684
    4. ' ' → logprob: -15.951415061950684
    5. 'm' → logprob: -16.951414108276367
    6. '(map' → logprob: -18.076414108276367
    7. ' ' → logprob: -18.701414108276367
    8. '   ' → logprob: -18.826414108276367
    9. '_map' → logprob: -19.076414108276367
    10. '.map' → logprob: -19.076414108276367

Token 643: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.1318875446449965e-05
    2. 'int' → logprob: -10.125041007995605
    3. ' int' → logprob: -14.500041007995605
    4. '=int' → logprob: -15.125041007995605
    5. ',int' → logprob: -15.750041007995605
    6. '(' → logprob: -16.500041961669922
    7. ']int' → logprob: -16.500041961669922
    8. '<int' → logprob: -17.000041961669922
    9. '(in' → logprob: -17.250041961669922
    10. '[int' → logprob: -17.500041961669922

Token 644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014173386618494987
    2. ',input' → logprob: -4.26417350769043
    3. 'input' → logprob: -11.63917350769043
    4. '(input' → logprob: -14.13917350769043
    5. ' ,' → logprob: -15.76417350769043
    6. ' input' → logprob: -16.51417350769043
    7. '(),' → logprob: -16.76417350769043
    8. '=input' → logprob: -17.38917350769043
    9. '(' → logprob: -18.51417350769043
    10. '，' → logprob: -19.76417350769043

Token 645: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06196802109479904
    2. ' input' → logprob: -2.8119680881500244
    3. '(input' → logprob: -15.186967849731445
    4. '=input' → logprob: -17.186967849731445
    5. '	input' → logprob: -17.686967849731445
    6. '_input' → logprob: -17.811967849731445
    7. ',input' → logprob: -17.811967849731445
    8. ' ' → logprob: -18.186967849731445
    9. ')' → logprob: -18.436967849731445
    10. '[input' → logprob: -19.186967849731445

Token 646: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.088346359931165e-07
    2. '()' → logprob: -14.125000953674316
    3. ' ().' → logprob: -15.875000953674316
    4. '.' → logprob: -18.5
    5. '(' → logprob: -19.125
    6. ')' → logprob: -20.25
    7. '().__' → logprob: -20.375
    8. '.split' → logprob: -21.5
    9. '>().' → logprob: -21.625
    10. ' .' → logprob: -22.0

Token 647: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. 'spl' → logprob: -15.75
    3. ' split' → logprob: -17.625
    4. 'strip' → logprob: -18.125
    5. '(split' → logprob: -19.375
    6. 'rstrip' → logprob: -20.0
    7. ')' → logprob: -20.5
    8. '.split' → logprob: -21.375
    9. 's' → logprob: -22.375
    10. 'splice' → logprob: -23.125

Token 648: '())' (ID: 3516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2085254043340683
    2. '())' → logprob: -1.7085254192352295
    3. '()' → logprob: -4.95852518081665
    4. ')
' → logprob: -10.708525657653809
    5. '())
' → logprob: -10.833525657653809
    6. '(' → logprob: -11.208525657653809
    7. ' )' → logprob: -12.458525657653809
    8. '))' → logprob: -14.333525657653809
    9. '()
' → logprob: -14.583525657653809
    10. ' ())' → logprob: -14.583525657653809

Token 649: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02810797654092312
    2. '<|end|>' → logprob: -4.0281081199646
    3. '
' → logprob: -5.2781081199646
    4. '        
' → logprob: -5.7781081199646
    5. ')' → logprob: -7.5281081199646
    6. ' ' → logprob: -8.653107643127441
    7. ',' → logprob: -8.778107643127441
    8. '   ' → logprob: -8.903107643127441
    9. '<|end|>' → logprob: -9.028107643127441
    10. ' 
' → logprob: -9.153107643127441

Token 650: ' Lecture' (ID: 106534)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 651: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.42526739835739136
    2. '(' → logprob: -1.6752674579620361
    3. '(u' → logprob: -2.300267457962036
    4. '<|end|>' → logprob: -3.925267457962036
    5. ')' → logprob: -4.175267219543457
    6. 'u' → logprob: -5.175267219543457
    7. ' (' → logprob: -5.550267219543457
    8. ',' → logprob: -5.925267219543457
    9. ' des' → logprob: -6.175267219543457
    10. '...' → logprob: -6.550267219543457

Token 652: ' informations' (ID: 33951)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.29120901226997375
    2. 'qu' → logprob: -2.1662089824676514
    3. '4' → logprob: -2.2912089824676514
    4. ' u' → logprob: -4.9162092208862305
    5. '(u' → logprob: -5.0412092208862305
    6. 'ar' → logprob: -5.4162092208862305
    7. ' quatre' → logprob: -5.4162092208862305
    8. 'parameters' → logprob: -6.1662092208862305
    9. 'tokens' → logprob: -6.4162092208862305
    10. ' ' → logprob: -6.5412092208862305

Token 653: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 654: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08322295546531677
    2. 'ar' → logprob: -3.7082228660583496
    3. ' l' → logprob: -3.8332228660583496
    4. 'u' → logprob: -3.8332228660583496
    5. ' ' → logprob: -6.33322286605835
    6. 'la' → logprob: -6.33322286605835
    7. 'ligne' → logprob: -6.70822286605835
    8. 'a' → logprob: -6.95822286605835
    9. ' u' → logprob: -7.33322286605835
    10. ' ar' → logprob: -7.45822286605835

Token 655: ''ar' (ID: 54307)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.2991678714752197
    2. ''ar' → logprob: -1.4241678714752197
    3. 'aré' → logprob: -4.549167633056641
    4. 'a' → logprob: -5.174167633056641
    5. 'are' → logprob: -7.424167633056641
    6. 'arc' → logprob: -7.674167633056641
    7. ''' → logprob: -8.92416763305664
    8. '’ar' → logprob: -9.04916763305664
    9. '_ar' → logprob: -10.42416763305664
    10. ''entrée' → logprob: -10.54916763305664

Token 656: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.01905807852745056
    2. 'êtes' → logprob: -4.1440582275390625
    3. 'ète' → logprob: -7.3940582275390625
    4. 'ôte' → logprob: -7.3940582275390625
    5. 'âte' → logprob: -7.7690582275390625
    6. 'êt' → logprob: -8.019058227539062
    7. 'te' → logprob: -8.144058227539062
    8. 'tes' → logprob: -8.769058227539062
    9. 't' → logprob: -9.144058227539062
    10. 'ê' → logprob: -9.144058227539062

Token 657: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05997930094599724
    2. '<|end|>' → logprob: -2.934979200363159
    3. '        
' → logprob: -6.309979438781738
    4. '
' → logprob: -6.809979438781738
    5. ',' → logprob: -6.934979438781738
    6. ')' → logprob: -7.809979438781738
    7. '   ' → logprob: -8.559979438781738
    8. '<|end|>' → logprob: -8.934979438781738
    9. ' ' → logprob: -9.809979438781738
    10. ' ,' → logprob: -9.934979438781738

Token 658: ' deux' (ID: 10301)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1468639373779297
    2. ' u' → logprob: -2.0218639373779297
    3. '<|end|>' → logprob: -5.77186393737793
    4. ')' → logprob: -7.64686393737793
    5. ' ' → logprob: -7.89686393737793
    6. '	u' → logprob: -9.77186393737793
    7. '  ' → logprob: -10.39686393737793
    8. '[u' → logprob: -10.64686393737793
    9. ',u' → logprob: -11.14686393737793
    10. 'v' → logprob: -11.39686393737793

Token 659: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1299128383398056
    2. 'nodes' → logprob: -2.879912853240967
    3. 'points' → logprob: -3.254912853240967
    4. 'indices' → logprob: -5.254912853240967
    5. 'n' → logprob: -5.504912853240967
    6. 'no' → logprob: -5.754912853240967
    7. 'vertices' → logprob: -5.879912853240967
    8. ' nodes' → logprob: -5.879912853240967
    9. 'som' → logprob: -6.129912853240967
    10. ' points' → logprob: -6.879912853240967

Token 660: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.002231736434623599
    2. 'et' → logprob: -6.252231597900391
    3. 'ats' → logprob: -9.50223159790039
    4. 'its' → logprob: -9.50223159790039
    5. 'êts' → logprob: -9.62723159790039
    6. 'ents' → logprob: -11.62723159790039
    7. 'es' → logprob: -11.62723159790039
    8. 'oints' → logprob: -12.00223159790039
    9. 'âts' → logprob: -12.25223159790039
    10. 'ètres' → logprob: -12.25223159790039

Token 661: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014595331624150276
    2. ' ,' → logprob: -4.5145955085754395
    3. ',u' → logprob: -6.2645955085754395
    4. 'u' → logprob: -8.014595031738281
    5. ' et' → logprob: -8.139595031738281
    6. '<|end|>' → logprob: -8.264595031738281
    7. 'et' → logprob: -8.389595031738281
    8. ' u' → logprob: -8.639595031738281
    9. ',v' → logprob: -9.139595031738281
    10. ' and' → logprob: -9.639595031738281

Token 662: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.042218733578920364
    2. ')' → logprob: -3.6672186851501465
    3. ',' → logprob: -4.6672186851501465
    4. ' u' → logprob: -5.6672186851501465
    5. '),' → logprob: -6.0422186851501465
    6. ',u' → logprob: -7.7922186851501465
    7. ' ,' → logprob: -9.417219161987305
    8. ' )' → logprob: -10.667219161987305
    9. ' ),' → logprob: -11.667219161987305
    10. '<|end|>' → logprob: -12.042219161987305

Token 663: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06512406468391418
    2. ',v' → logprob: -2.815124034881592
    3. ' ,' → logprob: -5.940124034881592
    4. '),' → logprob: -8.06512451171875
    5. ',u' → logprob: -9.44012451171875
    6. 'v' → logprob: -9.56512451171875
    7. ')' → logprob: -10.31512451171875
    8. ' v' → logprob: -12.56512451171875
    9. ')v' → logprob: -13.06512451171875
    10. ' ),' → logprob: -13.06512451171875

Token 664: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8014951944351196
    2. ',' → logprob: -0.8014951944351196
    3. '),' → logprob: -2.30149507522583
    4. ' ,' → logprob: -6.55149507522583
    5. ' )' → logprob: -7.30149507522583
    6. ' ),' → logprob: -8.301495552062988
    7. ',)' → logprob: -9.551495552062988
    8. ',a' → logprob: -10.176495552062988
    9. 'a' → logprob: -10.801495552062988
    10. ',u' → logprob: -10.926495552062988

Token 665: ' coût' (ID: 73109)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0656465291976929
    2. 'c' → logprob: -1.3156465291976929
    3. '#' → logprob: -1.8156465291976929
    4. ' a' → logprob: -3.0656466484069824
    5. 'cost' → logprob: -3.0656466484069824
    6. ' c' → logprob: -3.4406466484069824
    7. ' #' → logprob: -4.315646648406982
    8. 't' → logprob: -4.815646648406982
    9. ',' → logprob: -4.940646648406982
    10. ' cost' → logprob: -5.315646648406982

Token 666: ' associé' (ID: 152099)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4025101065635681
    2. 'a' → logprob: -2.027510166168213
    3. ' ,' → logprob: -2.027510166168213
    4. '1' → logprob: -4.277510166168213
    5. ')' → logprob: -4.277510166168213
    6. '_a' → logprob: -4.652510166168213
    7. ' ' → logprob: -5.152510166168213
    8. ' a' → logprob: -5.777510166168213
    9. 's' → logprob: -5.902510166168213
    10. '=' → logprob: -5.902510166168213

Token 667: ' a' (ID: 261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13465763628482819
    2. ')' → logprob: -3.259657621383667
    3. '=' → logprob: -3.259657621383667
    4. ' =' → logprob: -4.134657859802246
    5. 'a' → logprob: -4.259657859802246
    6. ' ,' → logprob: -4.634657859802246
    7. '<|end|>' → logprob: -6.509657859802246
    8. 's' → logprob: -6.634657859802246
    9. '),' → logprob: -6.759657859802246
    10. '_a' → logprob: -6.759657859802246

Token 668: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007063324097543955
    2. ' ,' → logprob: -5.132063388824463
    3. 'et' → logprob: -7.382063388824463
    4. ' et' → logprob: -7.757063388824463
    5. ',b' → logprob: -9.507062911987305
    6. ' and' → logprob: -13.382062911987305
    7. ',
' → logprob: -13.507062911987305
    8. '_,' → logprob: -14.007062911987305
    9. 's' → logprob: -14.132062911987305
    10. ')' → logprob: -14.382062911987305

Token 669: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2721877694129944
    2. 'temps' → logprob: -2.2721877098083496
    3. ' b' → logprob: -3.2721877098083496
    4. 'un' → logprob: -3.5221877098083496
    5. 'd' → logprob: -4.77218770980835
    6. 'co' → logprob: -5.02218770980835
    7. 'le' → logprob: -5.02218770980835
    8. ' un' → logprob: -5.02218770980835
    9. 'cost' → logprob: -5.02218770980835
    10. 't' → logprob: -5.52218770980835

Token 670: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025133339688181877
    2. '<|end|>' → logprob: -4.27513313293457
    3. '
' → logprob: -5.40013313293457
    4. ',' → logprob: -6.27513313293457
    5. ')' → logprob: -6.40013313293457
    6. ' if' → logprob: -6.90013313293457
    7. '   ' → logprob: -7.52513313293457
    8. ' G' → logprob: -8.27513313293457
    9. 'u' → logprob: -9.15013313293457
    10. 'G' → logprob: -9.27513313293457

Token 671: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01214380282908678
    2. '
' → logprob: -5.012143611907959
    3. '<|end|>' → logprob: -6.012143611907959
    4. '   ' → logprob: -6.512143611907959
    5. ' if' → logprob: -7.512143611907959
    6. '        
' → logprob: -8.887144088745117
    7. '	' → logprob: -9.137144088745117
    8. ' ' → logprob: -9.262144088745117
    9. '
' → logprob: -9.387144088745117
    10. ' G' → logprob: -9.387144088745117

Token 672: ' u' (ID: 337)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8138571977615356
    2. ' if' → logprob: -1.4388571977615356
    3. 'G' → logprob: -1.8138571977615356
    4. 'if' → logprob: -2.063857078552246
    5. ' G' → logprob: -3.813857078552246
    6. '   ' → logprob: -5.438857078552246
    7. 'u' (adapté à ' u') → logprob: -6.688857078552246
    8. '#' → logprob: -7.563857078552246
    9. '<|end|>' → logprob: -7.938857078552246
    10. 'continue' → logprob: -8.688857078552246

Token 673: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.7898902297019958
    2. ' -=' → logprob: -1.0398902893066406
    3. '-' → logprob: -1.6648902893066406
    4. ',' → logprob: -6.039890289306641
    5. ' -' → logprob: -7.414890289306641
    6. ' ,' → logprob: -9.03989028930664
    7. '-,' → logprob: -9.78989028930664
    8. ' ' → logprob: -10.41489028930664
    9. ',u' → logprob: -10.78989028930664
    10. '<|end|>' → logprob: -11.03989028930664

Token 674: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.000158309936523
    4. '```' → logprob: -19.625158309936523
    5. '１' → logprob: -19.875158309936523
    6. '	' → logprob: -20.062658309936523
    7. '<|end|>' → logprob: -20.125158309936523
    8. '0' → logprob: -20.750158309936523
    9. '۱' → logprob: -20.750158309936523
    10. '=' → logprob: -21.062658309936523

Token 675: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '１' → logprob: -20.7500057220459
    4. '   ' → logprob: -20.8750057220459
    5. '<|end|>' → logprob: -20.8750057220459
    6. '```' → logprob: -21.6250057220459
    7. '১' → logprob: -22.4375057220459
    8. '۱' → logprob: -22.4375057220459
    9. '१' → logprob: -22.8750057220459
    10. '0' → logprob: -23.0625057220459

Token 676: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11036507040262222
    2. '       ' → logprob: -3.235365152359009
    3. '<|end|>' → logprob: -3.235365152359009
    4. '
' → logprob: -4.23536491394043
    5. ' v' → logprob: -5.36036491394043
    6. 'u' → logprob: -5.98536491394043
    7. ',v' → logprob: -6.11036491394043
    8. ',' → logprob: -7.48536491394043
    9. '        
' → logprob: -7.98536491394043
    10. '<|end|>' → logprob: -8.61036491394043

Token 677: ' Ajust' (ID: 197708)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014724548906087875
    2. 'u' → logprob: -4.5147247314453125
    3. ' v' → logprob: -5.6397247314453125
    4. ' u' → logprob: -9.264724731445312
    5. '<|end|>' → logprob: -11.639724731445312
    6. '	v' → logprob: -12.014724731445312
    7. '       ' → logprob: -12.139724731445312
    8. ',v' → logprob: -15.014724731445312
    9. ' ' → logprob: -15.389724731445312
    10. '	u' → logprob: -15.514724731445312

Token 678: 'ement' (ID: 962)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5618966817855835
    2. 'er' → logprob: -1.1868966817855835
    3. 'ement' → logprob: -2.936896800994873
    4. ' -=' → logprob: -4.561896800994873
    5. '=' → logprob: -4.686896800994873
    6. ' -' → logprob: -4.811896800994873
    7. 'u' → logprob: -4.811896800994873
    8. ' =' → logprob: -5.061896800994873
    9. ' u' → logprob: -5.311896800994873
    10. 'ation' → logprob: -5.561896800994873

Token 679: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 680: ' indices' (ID: 30378)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23004122078418732
    2. 'u' → logprob: -1.855041265487671
    3. ' u' → logprob: -3.355041265487671
    4. ' ' → logprob: -4.480041027069092
    5. ' indices' → logprob: -6.480041027069092
    6. 'indices' → logprob: -7.230041027069092
    7. 's' → logprob: -9.23004150390625
    8. 'index' → logprob: -9.48004150390625
    9. '<|end|>' → logprob: -9.98004150390625
    10. '0' → logprob: -9.98004150390625

Token 681: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 682: ' somm' (ID: 44830)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.18092674016952515
    2. ' somm' → logprob: -2.55592679977417
    3. 's' → logprob: -3.30592679977417
    4. 'som' → logprob: -3.55592679977417
    5. 'vertices' → logprob: -4.80592679977417
    6. ' u' → logprob: -4.93092679977417
    7. ' vertices' → logprob: -6.30592679977417
    8. ' sommet' → logprob: -6.68092679977417
    9. ' som' → logprob: -7.30592679977417
    10. '0' → logprob: -7.43092679977417

Token 683: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.6742108464241028
    2. 'ents' → logprob: -0.7992108464241028
    3. 'et' → logprob: -3.799210786819458
    4. 'ent' → logprob: -4.174211025238037
    5. 'es' → logprob: -6.424211025238037
    6. 'e' → logprob: -8.174210548400879
    7. 'ts' → logprob: -8.174210548400879
    8. 'ètres' → logprob: -8.549210548400879
    9. 't' → logprob: -9.174210548400879
    10. 'êts' → logprob: -9.299210548400879

Token 684: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05714032053947449
    2. 'v' → logprob: -3.182140350341797
    3. '<|end|>' → logprob: -4.807140350341797
    4. 'u' → logprob: -5.307140350341797
    5. ' v' → logprob: -7.932140350341797
    6. '   ' → logprob: -8.682140350341797
    7. '	v' → logprob: -9.307140350341797
    8. '	' → logprob: -9.682140350341797
    9. ',' → logprob: -9.807140350341797
    10. ' u' → logprob: -10.182140350341797

Token 685: ' part' (ID: 997)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8611858487129211
    2. '1' → logprob: -1.3611857891082764
    3. '-' → logprob: -2.2361857891082764
    4. ' u' → logprob: -2.4861857891082764
    5. 'python' → logprob: -3.2361857891082764
    6. ' ' → logprob: -3.6111857891082764
    7. ' Python' → logprob: -3.9861857891082764
    8. 'Python' → logprob: -4.6111860275268555
    9. ' code' → logprob: -4.6111860275268555
    10. ' python' → logprob: -4.8611860275268555

Token 686: 'ant' (ID: 493)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2562709450721741
    2. '-' → logprob: -1.8812708854675293
    3. ' u' → logprob: -3.7562708854675293
    4. 'icipant' → logprob: -4.381270885467529
    5. 'icipants' → logprob: -4.756270885467529
    6. ' à' → logprob: -5.881270885467529
    7. 'ition' → logprob: -6.006270885467529
    8. 'a' → logprob: -6.131270885467529
    9. 'ant' → logprob: -6.256270885467529
    10. 'à' → logprob: -6.256270885467529

Token 687: ' de' (ID: 334)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8876587748527527
    2. ' de' → logprob: -1.2626588344573975
    3. 'de' → logprob: -1.7626588344573975
    4. 'd' → logprob: -3.0126588344573975
    5. 'u' → logprob: -4.012658596038818
    6. '0' → logprob: -4.262658596038818
    7. 'from' → logprob: -4.387658596038818
    8. ' d' → logprob: -4.762658596038818
    9. ' à' → logprob: -4.762658596038818
    10. 'à' → logprob: -4.762658596038818

Token 688: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003956416912842542
    2. ' ' → logprob: -7.875395774841309
    3. '1' → logprob: -12.250395774841309
    4. 'zero' → logprob: -12.500395774841309
    5. ' zéro' → logprob: -12.500395774841309
    6. '-' → logprob: -13.000395774841309
    7. ' zero' → logprob: -14.750395774841309
    8. 'u' → logprob: -15.250395774841309
    9. 'z' → logprob: -15.500395774841309
    10. ' -' → logprob: -15.750395774841309

Token 689: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -12.00001335144043
    3. '1' → logprob: -12.12501335144043
    4. 'zero' → logprob: -13.75001335144043
    5. ' zéro' → logprob: -14.75001335144043
    6. 'z' → logprob: -16.00001335144043
    7. ' zero' → logprob: -18.25001335144043
    8. '-' → logprob: -18.87501335144043
    9. '```' → logprob: -19.25001335144043
    10. '۰' → logprob: -20.62501335144043

Token 690: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.24032966792583466
    2. '       ' → logprob: -1.615329623222351
    3. '<|end|>' → logprob: -4.865329742431641
    4. ',' → logprob: -6.240329742431641
    5. ' v' → logprob: -6.365329742431641
    6. '	v' → logprob: -6.615329742431641
    7. ',v' → logprob: -7.240329742431641
    8. '   ' → logprob: -7.365329742431641
    9. '
' → logprob: -8.74032974243164
    10. ' and' → logprob: -8.74032974243164

Token 691: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016547704115509987
    2. ')v' → logprob: -5.516547679901123
    3. 'v' → logprob: -5.641547679901123
    4. 'u' → logprob: -5.766547679901123
    5. ')
' → logprob: -6.141547679901123
    6. ' )' → logprob: -7.016547679901123
    7. 's' → logprob: -7.266547679901123
    8. ' u' → logprob: -7.266547679901123
    9. '<|end|>' → logprob: -7.516547679901123
    10. ' v' → logprob: -7.891547679901123

Token 692: ' Python' (ID: 26534)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.332330584526062
    2. ' u' → logprob: -2.0823307037353516
    3. '#' → logprob: -3.5823307037353516
    4. 'python' → logprob: -3.9573307037353516
    5. ')' → logprob: -4.457330703735352
    6. 's' → logprob: -4.582330703735352
    7. 'range' → logprob: -4.957330703735352
    8. '=' → logprob: -5.207330703735352
    9. '```' → logprob: -5.332330703735352
    10. ' code' → logprob: -5.457330703735352

Token 693: ' les' (ID: 1341)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020688334479928017
    2. ')
' → logprob: -3.89568829536438
    3. ')
' → logprob: -10.1456880569458
    4. 'u' → logprob: -10.3956880569458
    5. '<|end|>' → logprob: -11.3956880569458
    6. ').' → logprob: -11.7706880569458
    7. ')#' → logprob: -12.1456880569458
    8. '),' → logprob: -12.1456880569458
    9. ')n' → logprob: -12.1456880569458
    10. 's' → logprob: -12.3956880569458

Token 694: ' listes' (ID: 179198)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.34517961740493774
    2. 'indices' → logprob: -1.470179557800293
    3. 'index' → logprob: -3.595179557800293
    4. 'u' → logprob: -3.970179557800293
    5. ' index' → logprob: -5.970179557800293
    6. '-' → logprob: -6.095179557800293
    7. '0' → logprob: -6.095179557800293
    8. 'indexes' → logprob: -6.845179557800293
    9. ' indexes' → logprob: -6.970179557800293
    10. 'indice' → logprob: -7.220179557800293

Token 695: ' sont' (ID: 5242)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4775947630405426
    2. '<|end|>' → logprob: -2.3525948524475098
    3. '...' → logprob: -2.8525948524475098
    4. ' sont' → logprob: -2.9775948524475098
    5. 's' → logprob: -3.4775948524475098
    6. '#' → logprob: -3.7275948524475098
    7. 'u' → logprob: -3.9775948524475098
    8. ' are' → logprob: -4.22759485244751
    9. 'indices' → logprob: -4.47759485244751
    10. 'for' → logprob: -4.72759485244751

Token 696: ' index' (ID: 3472)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0583408959209919
    2. 'index' → logprob: -2.9333407878875732
    3. ' index' → logprob: -6.808341026306152
    4. ' ' → logprob: -7.183341026306152
    5. 'indices' → logprob: -7.183341026306152
    6. 'base' → logprob: -8.933341026306152
    7. 'indice' → logprob: -9.183341026306152
    8. 'z' → logprob: -9.308341026306152
    9. 'bas' → logprob: -9.433341026306152
    10. 'ind' → logprob: -9.558341026306152

Token 697: 'ées' (ID: 5161)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8355118632316589
    2. '0' → logprob: -1.0855119228363037
    3. 'és' → logprob: -1.8355119228363037
    4. '-based' → logprob: -3.0855119228363037
    5. 'é' → logprob: -4.335511684417725
    6. ' ' → logprob: -5.710511684417725
    7. 'ed' → logprob: -5.960511684417725
    8. ' -' → logprob: -6.835511684417725
    9. 'ées' → logprob: -6.960511684417725
    10. 'es' → logprob: -7.335511684417725

Token 698: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.001471757888794
    2. '-' → logprob: -1.251471757888794
    3. '0' → logprob: -1.876471757888794
    4. ' à' → logprob: -2.626471757888794
    5. ' -' → logprob: -3.751471757888794
    6. ' ' → logprob: -4.001471519470215
    7. ' au' → logprob: -4.126471519470215
    8. 'u' → logprob: -4.501471519470215
    9. 'au' → logprob: -4.626471519470215
    10. 'de' → logprob: -4.751471519470215

Token 699: ' partir' (ID: 12100)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002782054478302598
    2. ' ' → logprob: -6.502781867980957
    3. 'z' → logprob: -7.502781867980957
    4. ' zéro' → logprob: -7.877781867980957
    5. 'zero' → logprob: -8.252781867980957
    6. ' z' → logprob: -9.877781867980957
    7. ' zero' → logprob: -10.627781867980957
    8. '```' → logprob: -12.377781867980957
    9. '1' → logprob: -12.752781867980957
    10. 'u' → logprob: -13.252781867980957

Token 700: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.40034788846969604
    2. 'de' → logprob: -1.2753479480743408
    3. '0' → logprob: -3.025347948074341
    4. ' ' → logprob: -7.275347709655762
    5. '1' → logprob: -7.400347709655762
    6. 'd' → logprob: -7.525347709655762
    7. ' d' → logprob: -8.775347709655762
    8. ')' → logprob: -11.775347709655762
    9. ' des' → logprob: -12.150347709655762
    10. '=' → logprob: -12.400347709655762

Token 701: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -11.000019073486328
    3. 'z' → logprob: -13.500019073486328
    4. ' zéro' → logprob: -14.250019073486328
    5. 'zero' → logprob: -15.125019073486328
    6. '```' → logprob: -17.375019073486328
    7. ' z' → logprob: -17.625019073486328
    8. ' zero' → logprob: -18.125019073486328
    9. '1' → logprob: -19.750019073486328
    10. '<|end|>' → logprob: -19.750019073486328

Token 702: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.180258191714529e-06
    2. 'z' → logprob: -12.125008583068848
    3. ' ' → logprob: -13.750008583068848
    4. 'zero' → logprob: -13.750008583068848
    5. ' zéro' → logprob: -15.250008583068848
    6. '1' → logprob: -15.875008583068848
    7. '```' → logprob: -16.25000762939453
    8. ' z' → logprob: -17.87500762939453
    9. ' zero' → logprob: -19.50000762939453
    10. '<|end|>' → logprob: -20.00000762939453

Token 703: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018170194700360298
    2. ')
' → logprob: -4.018170356750488
    3. ')
' → logprob: -11.268170356750488
    4. ' )' → logprob: -12.518170356750488
    5. '       ' → logprob: -13.518170356750488
    6. '   ' → logprob: -13.893170356750488
    7. ' )
' → logprob: -14.643170356750488
    8. ')

' → logprob: -14.893170356750488
    9. '),' → logprob: -15.393170356750488
    10. ')#' → logprob: -16.393169403076172

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08051387220621109
    2. 'v' → logprob: -2.5805139541625977
    3. '	v' → logprob: -7.705513954162598
    4. ' v' → logprob: -8.455513954162598
    5. '<|end|>' → logprob: -8.580513954162598
    6. ' ' → logprob: -8.705513954162598
    7. ',' → logprob: -9.330513954162598
    8. '   ' → logprob: -9.330513954162598
    9. ',v' → logprob: -9.330513954162598
    10. '
' → logprob: -9.455513954162598

Token 705: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.001503790495917201
    2. ' v' → logprob: -6.501503944396973
    3. '       ' → logprob: -14.251503944396973
    4. 'u' → logprob: -14.626503944396973
    5. '   ' → logprob: -15.751503944396973
    6. '	v' → logprob: -16.001502990722656
    7. '
' → logprob: -18.001502990722656
    8. '_v' → logprob: -18.751502990722656
    9. ' ' → logprob: -18.751502990722656
    10. 'b' → logprob: -19.126502990722656

Token 706: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.387503981590271
    2. '-=' → logprob: -1.137503981590271
    3. '-' → logprob: -7.3875041007995605
    4. '=' → logprob: -11.512503623962402
    5. ' -' → logprob: -13.637503623962402
    6. '	' → logprob: -14.387503623962402
    7. ',' → logprob: -14.637503623962402
    8. ' ' → logprob: -14.762503623962402
    9. '   ' → logprob: -14.887503623962402
    10. ' =' → logprob: -15.262503623962402

Token 707: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012511178851127625
    2. ' ' → logprob: -4.387511253356934
    3. '0' → logprob: -13.512511253356934
    4. '<|end|>' → logprob: -17.262510299682617
    5. '   ' → logprob: -17.387510299682617
    6. '```' → logprob: -18.637510299682617
    7. '=' → logprob: -18.887510299682617
    8. '2' → logprob: -19.262510299682617
    9. '	' → logprob: -19.325010299682617
    10. '       ' → logprob: -19.325010299682617

Token 708: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '0' → logprob: -19.5
    4. '<|end|>' → logprob: -20.0
    5. '１' → logprob: -21.0
    6. '```' → logprob: -21.25
    7. '2' → logprob: -21.375
    8. '
' → logprob: -21.375
    9. '   ' → logprob: -21.5625
    10. 'v' → logprob: -21.625

Token 709: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007799321785569191
    2. '
' → logprob: -5.00779914855957
    3. 'G' → logprob: -8.25779914855957
    4. ' G' → logprob: -8.50779914855957
    5. '
' → logprob: -8.75779914855957
    6. 'u' → logprob: -9.38279914855957
    7. '   ' → logprob: -9.50779914855957
    8. '	' → logprob: -10.00779914855957
    9. '        
' → logprob: -10.25779914855957
    10. '#' → logprob: -10.50779914855957

Token 710: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02434251829981804
    2. 'G' → logprob: -4.6493425369262695
    3. ' G' → logprob: -4.7743425369262695
    4. ' if' → logprob: -6.0243425369262695
    5. 'a' → logprob: -7.0243425369262695
    6. 'if' → logprob: -7.5243425369262695
    7. ',' → logprob: -7.6493425369262695
    8. ' a' → logprob: -7.8993425369262695
    9. '
' → logprob: -8.14934253692627
    10. '   ' → logprob: -8.64934253692627

Token 711: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.01295950636267662
    2. 'if' → logprob: -4.3879594802856445
    3. '#' → logprob: -8.762959480285645
    4. '       ' → logprob: -9.387959480285645
    5. 'a' → logprob: -9.512959480285645
    6. 'cost' → logprob: -10.262959480285645
    7. '   ' → logprob: -10.762959480285645
    8. 'heap' → logprob: -11.262959480285645
    9. 'continue' → logprob: -11.387959480285645
    10. 'c' → logprob: -11.887959480285645

Token 712: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00280558317899704
    2. '[v' → logprob: -5.877805709838867
    3. '[a' → logprob: -15.752805709838867
    4. '[' → logprob: -16.002805709838867
    5. '[s' → logprob: -16.252805709838867
    6. 'u' → logprob: -16.752805709838867
    7. '[i' → logprob: -16.752805709838867
    8. '[x' → logprob: -17.377805709838867
    9. '[y' → logprob: -17.877805709838867
    10. '[b' → logprob: -18.002805709838867

Token 713: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.607757568359375
    2. '.append' → logprob: -0.857757568359375
    3. '.' → logprob: -3.607757568359375
    4. ').' → logprob: -5.482757568359375
    5. '.app' → logprob: -11.232757568359375
    6. '[' → logprob: -12.232757568359375
    7. '[u' → logprob: -12.357757568359375
    8. ' .' → logprob: -12.607757568359375
    9. '}.' → logprob: -12.732757568359375
    10. '[v' → logprob: -12.982757568359375

Token 714: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -16.0
    3. 'app' → logprob: -16.75
    4. ' append' → logprob: -16.875
    5. 'appen' → logprob: -19.0
    6. '_append' → logprob: -20.25
    7. 'Append' → logprob: -20.75
    8. 'push' → logprob: -21.5
    9. 'insert' → logprob: -22.125
    10. 'appe' → logprob: -22.125

Token 715: '((' (ID: 2054)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.16197803616523743
    2. '((' → logprob: -1.911978006362915
    3. '(' → logprob: -6.411978244781494
    4. ' (' → logprob: -9.161977767944336
    5. '[(' → logprob: -12.911977767944336
    6. '(u' → logprob: -13.661977767944336
    7. '(V' → logprob: -14.661977767944336
    8. '   ' → logprob: -14.786977767944336
    9. '(s' → logprob: -15.161977767944336
    10. '([' → logprob: -16.036977767944336

Token 716: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.107425062713446e-06
    2. ' v' → logprob: -11.875006675720215
    3. '(v' → logprob: -16.87500762939453
    4. 'u' → logprob: -17.12500762939453
    5. ')v' → logprob: -18.25000762939453
    6. '	v' → logprob: -19.75000762939453
    7. '[v' → logprob: -19.87500762939453
    8. 'vi' → logprob: -20.00000762939453
    9. '?v' → logprob: -20.37500762939453
    10. 'b' → logprob: -20.37500762939453

Token 717: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009463535388931632
    2. ',a' → logprob: -7.125946521759033
    3. ',b' → logprob: -9.625946044921875
    4. ' ,' → logprob: -9.625946044921875
    5. 'a' → logprob: -11.750946044921875
    6. ',
' → logprob: -14.000946044921875
    7. 'b' → logprob: -14.500946044921875
    8. ' a' → logprob: -15.250946044921875
    9. '   ' → logprob: -15.750946044921875
    10. '```' → logprob: -16.875946044921875

Token 718: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.030819956213235855
    2. 'b' → logprob: -3.530819892883301
    3. ' a' → logprob: -7.030819892883301
    4. 'min' → logprob: -9.5308198928833
    5. ' b' → logprob: -9.9058198928833
    6. '1' → logprob: -11.1558198928833
    7. '0' → logprob: -11.5308198928833
    8. '(a' → logprob: -12.4058198928833
    9. ' ' → logprob: -12.4683198928833
    10. '   ' → logprob: -12.7183198928833

Token 719: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005755512393079698
    2. '))
' → logprob: -7.750575542449951
    3. ' ))' → logprob: -8.87557601928711
    4. '))

' → logprob: -13.00057601928711
    5. '))
' → logprob: -14.00057601928711
    6. '));' → logprob: -14.50057601928711
    7. '+' → logprob: -14.75057601928711
    8. ')' → logprob: -15.25057601928711
    9. ' ))
' → logprob: -15.62557601928711
    10. ')))' → logprob: -15.75057601928711

Token 720: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 721: ' On' (ID: 2160)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.00034273360506631434
    2. ' G' → logprob: -8.00034236907959
    3. '       ' → logprob: -12.87534236907959
    4. '   ' → logprob: -13.00034236907959
    5. '<|end|>' → logprob: -13.87534236907959
    6. 'u' → logprob: -15.12534236907959
    7. '	G' → logprob: -15.37534236907959
    8. '  ' → logprob: -16.125343322753906
    9. ' ' → logprob: -16.250343322753906
    10. '```' → logprob: -16.250343322753906

Token 722: ' ajoute' (ID: 91611)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.004431778099387884
    2. '.append' → logprob: -6.00443172454834
    3. 'append' → logprob: -6.62943172454834
    4. ' G' → logprob: -7.62943172454834
    5. 'u' → logprob: -10.62943172454834
    6. 'v' → logprob: -10.75443172454834
    7. 'app' → logprob: -10.87943172454834
    8. ' append' → logprob: -11.37943172454834
    9. '<|end|>' → logprob: -11.62943172454834
    10. '   ' → logprob: -11.75443172454834

Token 723: ' à' (ID: 1221)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2574992775917053
    2. '(v' → logprob: -1.5074992179870605
    3. '(b' → logprob: -5.2574992179870605
    4. '(u' → logprob: -8.507499694824219
    5. '<|end|>' → logprob: -9.007499694824219
    6. '(' → logprob: -11.757499694824219
    7. 'b' → logprob: -12.507499694824219
    8. '(a' → logprob: -12.757499694824219
    9. ' ' → logprob: -13.257499694824219
    10. ')' → logprob: -13.257499694824219

Token 724: ' la' (ID: 557)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0025275067891925573
    2. '(v' → logprob: -7.002527713775635
    3. '(u' → logprob: -7.377527713775635
    4. ' G' → logprob: -8.002527236938477
    5. 'v' → logprob: -8.627527236938477
    6. 'u' → logprob: -8.752527236938477
    7. '[u' → logprob: -8.752527236938477
    8. ' (' → logprob: -9.627527236938477
    9. '[v' → logprob: -10.127527236938477
    10. '(G' → logprob: -10.377527236938477

Token 725: ' liste' (ID: 31719)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.017357926815748215
    2. '[u' → logprob: -5.14235782623291
    3. 'v' → logprob: -5.51735782623291
    4. ' G' → logprob: -5.64235782623291
    5. '[v' → logprob: -6.39235782623291
    6. 'u' → logprob: -7.01735782623291
    7. ' graph' → logprob: -7.64235782623291
    8. 'graph' → logprob: -7.76735782623291
    9. 'adj' → logprob: -8.89235782623291
    10. ' v' → logprob: -10.01735782623291

Token 726: ' d' (ID: 272)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.12195663899183273
    2. '(u' → logprob: -2.3719565868377686
    3. ' (' → logprob: -4.246956825256348
    4. '<|end|>' → logprob: -5.871956825256348
    5. 'de' → logprob: -6.496956825256348
    6. 'u' → logprob: -6.871956825256348
    7. 'v' → logprob: -7.621956825256348
    8. '[u' → logprob: -7.746956825256348
    9. ' de' → logprob: -8.621956825256348
    10. '[v' → logprob: -8.621956825256348

Token 727: ''ad' (ID: 36162)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.06301979720592499
    2. 'u' → logprob: -3.1880197525024414
    3. '[u' → logprob: -4.688019752502441
    4. '[v' → logprob: -5.063019752502441
    5. 'v' → logprob: -6.063019752502441
    6. ' G' → logprob: -7.563019752502441
    7. 'e' → logprob: -8.438019752502441
    8. '[G' → logprob: -8.688019752502441
    9. 'irected' → logprob: -8.813019752502441
    10. '<|end|>' → logprob: -9.188019752502441

Token 728: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.2018352597951889
    2. 'j' → logprob: -1.70183527469635
    3. 'd' → logprob: -8.326835632324219
    4. 'jec' → logprob: -9.576835632324219
    5. 'ja' → logprob: -10.451835632324219
    6. 'jc' → logprob: -10.576835632324219
    7. '[j' → logprob: -11.451835632324219
    8. '
' → logprob: -11.451835632324219
    9. '_j' → logprob: -12.451835632324219
    10. '(j' → logprob: -12.576835632324219

Token 729: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.005346059333533049
    2. 'ance' → logprob: -6.255345821380615
    3. 'escence' → logprob: -6.255345821380615
    4. 'cence' → logprob: -7.505345821380615
    5. 'es' → logprob: -8.380346298217773
    6. 'e' → logprob: -8.880346298217773
    7. 'ente' → logprob: -9.380346298217773
    8. 'ency' → logprob: -9.380346298217773
    9. 'n' → logprob: -9.880346298217773
    10. 'ense' → logprob: -10.130346298217773

Token 730: ' de' (ID: 334)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.6095115542411804
    2. ' (' → logprob: -0.8595115542411804
    3. '(u' → logprob: -3.609511613845825
    4. '<|end|>' → logprob: -5.484511375427246
    5. '(' → logprob: -6.984511375427246
    6. ',' → logprob: -8.609511375427246
    7. ')' → logprob: -8.609511375427246
    8. '(b' → logprob: -8.734511375427246
    9. 'b' → logprob: -9.609511375427246
    10. '(s' → logprob: -10.359511375427246

Token 731: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0025619841180741787
    2. ' u' → logprob: -6.002562046051025
    3. '[u' → logprob: -9.377561569213867
    4. '	u' → logprob: -13.877561569213867
    5. '(u' → logprob: -14.377561569213867
    6. '<|end|>' → logprob: -15.627561569213867
    7. '<u' → logprob: -16.877561569213867
    8. 'G' → logprob: -17.002561569213867
    9. 'v' → logprob: -17.252561569213867
    10. ''u' → logprob: -17.752561569213867

Token 732: ' un' (ID: 537)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007810085546225309
    2. ',v' → logprob: -5.507810115814209
    3. ',(' → logprob: -6.757810115814209
    4. '<|end|>' → logprob: -7.007810115814209
    5. ' ,' → logprob: -7.132810115814209
    6. '(v' → logprob: -7.882810115814209
    7. ',b' → logprob: -8.25780963897705
    8. ')' → logprob: -9.50780963897705
    9. ' (' → logprob: -10.13280963897705
    10. ',u' → logprob: -10.38280963897705

Token 733: ' tuple' (ID: 31311)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.19816404581069946
    2. '(v' → logprob: -2.0731639862060547
    3. ' tuple' → logprob: -2.9481639862060547
    4. '(' → logprob: -7.573163986206055
    5. 'uple' → logprob: -7.573163986206055
    6. '(u' → logprob: -8.573163986206055
    7. 'tuple' → logprob: -8.948163986206055
    8. '(s' → logprob: -9.948163986206055
    9. '(n' → logprob: -10.448163986206055
    10. '(t' → logprob: -10.948163986206055

Token 734: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47408562898635864
    2. '(v' → logprob: -0.9740856289863586
    3. '(' → logprob: -12.599085807800293
    4. ' v' → logprob: -13.474085807800293
    5. ',' → logprob: -14.099085807800293
    6. '<|end|>' → logprob: -14.224085807800293
    7. ')' → logprob: -14.724085807800293
    8. ' `(' → logprob: -14.724085807800293
    9. '((' → logprob: -15.224085807800293
    10. ' ' → logprob: -15.349085807800293

Token 735: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.009942840784788132
    2. 'b' → logprob: -4.884943008422852
    3. ' v' → logprob: -6.384943008422852
    4. '(v' → logprob: -8.134943008422852
    5. 'u' → logprob: -8.384943008422852
    6. 'a' → logprob: -9.759943008422852
    7. ' b' → logprob: -10.634943008422852
    8. '(b' → logprob: -11.759943008422852
    9. ')v' → logprob: -11.759943008422852
    10. ')' → logprob: -12.259943008422852

Token 736: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003062646137550473
    2. ',b' → logprob: -8.375306129455566
    3. ' ,' → logprob: -9.500306129455566
    4. ',v' → logprob: -15.000306129455566
    5. ',
' → logprob: -15.625306129455566
    6. 'b' → logprob: -16.250307083129883
    7. ',n' → logprob: -16.625307083129883
    8. ',B' → logprob: -17.125307083129883
    9. ',G' → logprob: -17.125307083129883
    10. ',u' → logprob: -17.125307083129883

Token 737: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038094162940979004
    2. ' b' → logprob: -3.2880940437316895
    3. 'a' → logprob: -10.038094520568848
    4. ' a' → logprob: -12.038094520568848
    5. ' ' → logprob: -13.788094520568848
    6. ')' → logprob: -13.913094520568848
    7. ')b' → logprob: -14.038094520568848
    8. '	b' → logprob: -16.28809356689453
    9. '_b' → logprob: -16.66309356689453
    10. '   ' → logprob: -16.91309356689453

Token 738: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001992490579141304
    2. '))' → logprob: -8.625199317932129
    3. ' )' → logprob: -10.875199317932129
    4. '),' → logprob: -15.000199317932129
    5. ')}' → logprob: -16.125198364257812
    6. ')
' → logprob: -16.500198364257812
    7. ')#' → logprob: -16.500198364257812
    8. ')`' → logprob: -17.250198364257812
    9. ')))' → logprob: -17.375198364257812
    10. ')...' → logprob: -18.000198364257812

Token 739: ' indiqu' (ID: 100773)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 740: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -2.939851037808694e-05
    2. 'e' → logprob: -11.750029563903809
    3. 'ent' → logprob: -12.000029563903809
    4. ')' → logprob: -12.000029563903809
    5. 'a' → logprob: -12.750029563903809
    6. 'antt' → logprob: -13.625029563903809
    7. 'nant' → logprob: -14.000029563903809
    8. 'ont' → logprob: -14.375029563903809
    9. ' que' → logprob: -14.500029563903809
    10. 'nt' → logprob: -14.875029563903809

Token 741: ' qu' (ID: 474)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.47222232818603516
    2. 'le' → logprob: -1.2222223281860352
    3. 'b' → logprob: -2.722222328186035
    4. ' la' → logprob: -5.222222328186035
    5. ' b' → logprob: -5.597222328186035
    6. '<|end|>' → logprob: -6.472222328186035
    7. ')' → logprob: -7.097222328186035
    8. 'la' → logprob: -7.097222328186035
    9. ' un' → logprob: -7.347222328186035
    10. 'the' → logprob: -7.597222328186035

Token 742: ''il' (ID: 14683)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2027607262134552
    2. ' la' → logprob: -2.952760696411133
    3. 'e' → logprob: -3.202760696411133
    4. 'a' → logprob: -4.077760696411133
    5. 'le' → logprob: -4.077760696411133
    6. 'u' → logprob: -4.202760696411133
    7. 'ue' → logprob: -4.327760696411133
    8. ' ce' → logprob: -5.452760696411133
    9. 'la' → logprob: -5.577760696411133
    10. ' on' → logprob: -6.077760696411133

Token 743: ' existe' (ID: 19498)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10928146541118622
    2. ' existe' → logprob: -2.484281539916992
    3. 'y' → logprob: -4.609281539916992
    4. 's' → logprob: -5.234281539916992
    5. ' est' → logprob: -6.609281539916992
    6. ' faut' → logprob: -6.859281539916992
    7. 'ex' → logprob: -7.109281539916992
    8. ' s' → logprob: -7.484281539916992
    9. 'f' → logprob: -8.234281539916992
    10. ' a' → logprob: -8.484281539916992

Token 744: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1801203191280365
    2. '<|end|>' → logprob: -2.0551202297210693
    3. ' une' → logprob: -3.4301202297210693
    4. 'un' → logprob: -5.930120468139648
    5. ',' → logprob: -7.305120468139648
    6. ' ' → logprob: -7.805120468139648
    7. ')' → logprob: -8.555120468139648
    8. 'une' → logprob: -9.305120468139648
    9. 'a' → logprob: -10.055120468139648
    10. ' ,' → logprob: -10.180120468139648

Token 745: ' arc' (ID: 26922)
  Prédit: 'arc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arc' → logprob: -0.21814148128032684
    2. ' arc' → logprob: -2.593141555786133
    3. ' chemin' → logprob: -3.218141555786133
    4. 'ar' → logprob: -3.593141555786133
    5. ' déplacement' → logprob: -3.968141555786133
    6. 'che' → logprob: -4.218141555786133
    7. ' lien' → logprob: -4.843141555786133
    8. ' trajet' → logprob: -5.343141555786133
    9. 'l' → logprob: -6.093141555786133
    10. 'traj' → logprob: -6.093141555786133

Token 746: ' de' (ID: 334)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -1.1868631839752197
    2. ' sort' → logprob: -1.5618631839752197
    3. ' de' → logprob: -1.6868631839752197
    4. ' vers' → logprob: -1.6868631839752197
    5. ' allant' → logprob: -3.6868631839752197
    6. 'sort' → logprob: -3.9368631839752197
    7. ',' → logprob: -4.061862945556641
    8. 'avec' → logprob: -4.811862945556641
    9. ' depuis' → logprob: -5.061862945556641
    10. ' dont' → logprob: -5.061862945556641

Token 747: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.44147491455078125
    2. ' u' → logprob: -1.1914749145507812
    3. 'v' → logprob: -4.191474914550781
    4. ' coût' → logprob: -4.691474914550781
    5. ' poids' → logprob: -4.941474914550781
    6. '<|end|>' → logprob: -5.066474914550781
    7. ' v' → logprob: -5.316474914550781
    8. 'co' → logprob: -5.941474914550781
    9. 'c' → logprob: -6.066474914550781
    10. ' ' → logprob: -7.691474914550781

Token 748: ' à' (ID: 1221)
  Prédit: ' vers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.036554694175720215
    2. ' à' → logprob: -3.7865548133850098
    3. 'vers' → logprob: -4.53655481338501
    4. 'à' → logprob: -6.28655481338501
    5. ',' → logprob: -7.53655481338501
    6. ' au' → logprob: -9.911554336547852
    7. '```' → logprob: -11.411554336547852
    8. 'au' → logprob: -11.661554336547852
    9. ')' → logprob: -11.661554336547852
    10. ' avec' → logprob: -11.786554336547852

Token 749: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.48759695887565613
    2. ' v' → logprob: -0.9875969886779785
    3. 'u' → logprob: -4.6125969886779785
    4. ' u' → logprob: -5.9875969886779785
    5. ' un' → logprob: -8.36259651184082
    6. 'b' → logprob: -8.86259651184082
    7. ' coût' → logprob: -9.11259651184082
    8. ' ' → logprob: -9.36259651184082
    9. ' b' → logprob: -9.48759651184082
    10. 'co' → logprob: -9.61259651184082

Token 750: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01316952332854271
    2. '<|end|>' → logprob: -4.388169288635254
    3. ' )' → logprob: -8.388169288635254
    4. ' avec' → logprob: -8.763169288635254
    5. ')
' → logprob: -9.513169288635254
    6. ',' → logprob: -10.013169288635254
    7. ' with' → logprob: -10.638169288635254
    8. ').' → logprob: -10.763169288635254
    9. '<|end|>' → logprob: -10.888169288635254
    10. ')}' → logprob: -10.888169288635254

Token 751: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -1.058443546295166
    2. ' coût' → logprob: -1.183443546295166
    3. ' poids' → logprob: -1.433443546295166
    4. 'c' → logprob: -2.933443546295166
    5. 'po' → logprob: -3.433443546295166
    6. 'cout' → logprob: -4.433443546295166
    7. ' cout' → logprob: -5.433443546295166
    8. 'weight' → logprob: -7.058443546295166
    9. ' weight' → logprob: -7.058443546295166
    10. ' co' → logprob: -7.058443546295166

Token 752: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931529641151428
    2. ' b' → logprob: -0.6931529641151428
    3. ' ' → logprob: -13.568153381347656
    4. '```' → logprob: -13.568153381347656
    5. '_b' → logprob: -13.818153381347656
    6. ''b' → logprob: -14.818153381347656
    7. ' ' → logprob: -14.818153381347656
    8. '`' → logprob: -14.943153381347656
    9. ' '' → logprob: -15.443153381347656
    10. ' `' → logprob: -15.818153381347656

Token 753: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02190258912742138
    2. '<|end|>' → logprob: -3.896902561187744
    3. '   ' → logprob: -7.646902561187744
    4. 'G' → logprob: -7.646902561187744
    5. ' G' → logprob: -8.396903038024902
    6. '	G' → logprob: -9.771903038024902
    7. '
' → logprob: -10.896903038024902
    8. ' ' → logprob: -11.271903038024902
    9. ')' → logprob: -11.396903038024902
    10. ',G' → logprob: -11.646903038024902

Token 755: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.31650465726852417
    2. 'v' → logprob: -1.316504716873169
    3. 'u' → logprob: -5.81650447845459
    4. '       ' → logprob: -8.56650447845459
    5. ' G' → logprob: -9.94150447845459
    6. ' v' → logprob: -11.19150447845459
    7. '	v' → logprob: -12.81650447845459
    8. '   ' → logprob: -13.56650447845459
    9. '	G' → logprob: -14.31650447845459
    10. ' u' → logprob: -14.69150447845459

Token 756: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.8670179997570813e-05
    2. '[u' → logprob: -11.125019073486328
    3. '[' → logprob: -12.875019073486328
    4. 'v' → logprob: -13.875019073486328
    5. ' [' → logprob: -16.875019073486328
    6. '=v' → logprob: -17.250019073486328
    7. '
' → logprob: -17.250019073486328
    8. '	v' → logprob: -17.375019073486328
    9. '```' → logprob: -17.500019073486328
    10. '[V' → logprob: -17.625019073486328

Token 757: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.008281104266643524
    2. '.append' → logprob: -5.258281230926514
    3. '.' → logprob: -5.883281230926514
    4. ').' → logprob: -8.633280754089355
    5. ' .' → logprob: -10.508280754089355
    6. ']' → logprob: -11.383280754089355
    7. '}.' → logprob: -11.508280754089355
    8. '[u' → logprob: -12.008280754089355
    9. '   ' → logprob: -12.133280754089355
    10. '       ' → logprob: -12.383280754089355

Token 758: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.723352049040841e-06
    2. '.append' → logprob: -12.625004768371582
    3. 'appen' → logprob: -14.125004768371582
    4. ' append' → logprob: -14.750004768371582
    5. 'app' → logprob: -15.750004768371582
    6. '	append' → logprob: -16.000003814697266
    7. 'prepend' → logprob: -17.500003814697266
    8. 'Append' → logprob: -17.500003814697266
    9. 'add' → logprob: -17.625003814697266
    10. '```' → logprob: -17.875003814697266

Token 759: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0036120666190981865
    2. '(u' → logprob: -5.628612041473389
    3. '(v' → logprob: -12.003612518310547
    4. ' (' → logprob: -12.628612518310547
    5. '(' → logprob: -13.253612518310547
    6. ' ((' → logprob: -15.003612518310547
    7. '(
' → logprob: -15.628612518310547
    8. '[(' → logprob: -16.878612518310547
    9. 'u' → logprob: -17.128612518310547
    10. ' ' → logprob: -17.378612518310547

Token 760: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00023321842309087515
    2. '(u' → logprob: -8.37523365020752
    3. ' u' → logprob: -13.75023365020752
    4. ',' → logprob: -14.75023365020752
    5. ',u' → logprob: -14.87523365020752
    6. '	u' → logprob: -15.00023365020752
    7. '[u' → logprob: -15.62523365020752
    8. ')' → logprob: -16.250232696533203
    9. ' (' → logprob: -16.500232696533203
    10. '(' → logprob: -16.875232696533203

Token 761: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ' ,' → logprob: -11.000019073486328
    3. ',b' → logprob: -13.125019073486328
    4. ',
' → logprob: -15.125019073486328
    5. 'b' → logprob: -16.875019073486328
    6. '<|end|>' → logprob: -17.250019073486328
    7. '‌,' → logprob: -17.625019073486328
    8. '[' → logprob: -18.250019073486328
    9. '),' → logprob: -18.250019073486328
    10. ',v' → logprob: -18.625019073486328

Token 762: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1605505794286728
    2. ' b' → logprob: -2.535550594329834
    3. 'a' → logprob: -2.785550594329834
    4. ' a' → logprob: -4.910550594329834
    5. ' ' → logprob: -10.410550117492676
    6. '	b' → logprob: -13.473050117492676
    7. ')' → logprob: -13.910550117492676
    8. ')b' → logprob: -13.973050117492676
    9. ' ' → logprob: -14.535550117492676
    10. '0' → logprob: -14.535550117492676

Token 763: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003812217037193477
    2. ' ))' → logprob: -8.000381469726562
    3. ',' → logprob: -10.625381469726562
    4. ')' → logprob: -11.125381469726562
    5. '));' → logprob: -12.625381469726562
    6. '),' → logprob: -14.125381469726562
    7. '       ' → logprob: -14.250381469726562
    8. ')),' → logprob: -14.625381469726562
    9. '   ' → logprob: -14.875381469726562
    10. '))
' → logprob: -15.000381469726562

Token 764: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 765: ' Comme' (ID: 53252)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.1221962496638298
    2. ' (' → logprob: -2.8721961975097656
    3. '(u' → logprob: -2.9971961975097656
    4. '<|end|>' → logprob: -4.872196197509766
    5. '(' → logprob: -8.122196197509766
    6. ')' → logprob: -8.747196197509766
    7. '(s' → logprob: -8.872196197509766
    8. '(n' → logprob: -9.122196197509766
    9. 'G' → logprob: -10.122196197509766
    10. '(user' → logprob: -10.872196197509766

Token 766: ' le' (ID: 505)
  Prédit: ' G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' G' → logprob: -0.23389720916748047
    2. 'G' → logprob: -2.3588972091674805
    3. ' u' → logprob: -2.6088972091674805
    4. 'u' → logprob: -3.3588972091674805
    5. ' v' → logprob: -6.2338972091674805
    6. ' (' → logprob: -7.1088972091674805
    7. 'v' → logprob: -7.8588972091674805
    8. 's' → logprob: -8.35889720916748
    9. ' ' → logprob: -8.48389720916748
    10. ' ' → logprob: -8.60889720916748

Token 767: ' grap' (ID: 60955)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.10526292771100998
    2. ' G' → logprob: -2.9802629947662354
    3. 'u' → logprob: -3.2302629947662354
    4. '<|end|>' → logprob: -5.980262756347656
    5. ' v' → logprob: -6.230262756347656
    6. 'v' → logprob: -6.355262756347656
    7. ' u' → logprob: -6.605262756347656
    8. ' graph' → logprob: -7.230262756347656
    9. 's' → logprob: -7.855262756347656
    10. 'g' → logprob: -8.105262756347656

Token 768: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7036452889442444
    2. 'he' → logprob: -0.7036452889442444
    3. 'q' → logprob: -5.2036452293396
    4. 'que' → logprob: -6.5786452293396
    5. '#' → logprob: -7.3286452293396
    6. 'G' → logprob: -7.3286452293396
    7. 'aphe' → logprob: -7.4536452293396
    8. 'e' → logprob: -7.8286452293396
    9. 'ue' → logprob: -8.828645706176758
    10. 'ph' → logprob: -8.828645706176758

Token 769: ' est' (ID: 893)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5146169662475586
    2. ' est' → logprob: -1.1396169662475586
    3. 'est' → logprob: -2.6396169662475586
    4. '#' → logprob: -5.389616966247559
    5. ' n' → logprob: -7.389616966247559
    6. ')' → logprob: -7.389616966247559
    7. 'u' → logprob: -7.389616966247559
    8. '=' → logprob: -7.514616966247559
    9. 'is' → logprob: -7.639616966247559
    10. 's' → logprob: -7.764616966247559

Token 770: ' non' (ID: 2893)
  Prédit: ' non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.047893647104501724
    2. 'non' → logprob: -3.172893762588501
    3. ' und' → logprob: -6.172893524169922
    4. 'und' → logprob: -6.797893524169922
    5. ' un' → logprob: -7.797893524169922
    6. ' ' → logprob: -8.047893524169922
    7. ' bid' → logprob: -8.422893524169922
    8. '   ' → logprob: -8.797893524169922
    9. 'pond' → logprob: -9.172893524169922
    10. ' aussi' → logprob: -9.422893524169922

Token 771: ' orient' (ID: 13198)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6039113998413086
    2. ' dirig' → logprob: -1.3539113998413086
    3. 'orient' → logprob: -2.2289113998413086
    4. ' orient' → logprob: -2.4789113998413086
    5. ' directed' → logprob: -6.603911399841309
    6. ' oriented' → logprob: -6.853911399841309
    7. 'direct' → logprob: -7.978911399841309
    8. '_or' → logprob: -8.478911399841309
    9. ' dirigido' → logprob: -8.478911399841309
    10. '-or' → logprob: -8.728911399841309

Token 772: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -4.036524842376821e-05
    2. 'ed' → logprob: -10.375040054321289
    3. 'e' → logprob: -11.750040054321289
    4. 'É' → logprob: -15.375040054321289
    5. 'éd' → logprob: -15.500040054321289
    6. 'ée' → logprob: -15.750040054321289
    7. '```' → logprob: -15.750040054321289
    8. 'ré' → logprob: -16.00004005432129
    9. 'és' → logprob: -16.50004005432129
    10. 'd' → logprob: -16.50004005432129

Token 773: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011704307049512863
    2. ' ,' → logprob: -4.511704444885254
    3. ')' → logprob: -8.011704444885254
    4. ' (' → logprob: -8.761704444885254
    5. ',(' → logprob: -9.886704444885254
    6. '       ' → logprob: -10.261704444885254
    7. '),' → logprob: -10.386704444885254
    8. ',v' → logprob: -11.011704444885254
    9. '   ' → logprob: -11.386704444885254
    10. '(v' → logprob: -12.386704444885254

Token 774: ' on' (ID: 402)
  Prédit: ' G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' G' → logprob: -0.2611035108566284
    2. 'G' → logprob: -1.5111035108566284
    3. '       ' → logprob: -5.261103630065918
    4. '<|end|>' → logprob: -6.886103630065918
    5. ' (' → logprob: -7.011103630065918
    6. ')' → logprob: -7.011103630065918
    7. ' ' → logprob: -8.136103630065918
    8. '        ' → logprob: -8.136103630065918
    9. ' ' → logprob: -9.011103630065918
    10. '(G' → logprob: -9.636103630065918

Token 775: ' ajoute' (ID: 91611)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.1207878589630127
    2. '.append' → logprob: -1.3707878589630127
    3. ' append' → logprob: -1.4957878589630127
    4. ' G' → logprob: -2.4957878589630127
    5. 'append' → logprob: -2.9957878589630127
    6. ' also' → logprob: -3.8707878589630127
    7. ' ajoute' → logprob: -3.8707878589630127
    8. ' continue' → logprob: -4.370787620544434
    9. 'aj' → logprob: -5.370787620544434
    10. '       ' → logprob: -6.370787620544434

Token 776: ' aussi' (ID: 9894)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05513467639684677
    2. '(v' → logprob: -2.9301347732543945
    3. '(u' → logprob: -8.680134773254395
    4. '((' → logprob: -9.555134773254395
    5. ' ((' → logprob: -12.305134773254395
    6. ' ' → logprob: -13.305134773254395
    7. '       ' → logprob: -13.930134773254395
    8. '(' → logprob: -13.930134773254395
    9. '<|end|>' → logprob: -14.180134773254395
    10. '   ' → logprob: -14.305134773254395

Token 777: ' l' (ID: 305)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04937366396188736
    2. '(v' → logprob: -3.0493736267089844
    3. '(u' → logprob: -7.174373626708984
    4. '((' → logprob: -10.924373626708984
    5. ' ' → logprob: -13.799373626708984
    6. ' ((' → logprob: -14.549373626708984
    7. '(' → logprob: -15.674373626708984
    8. 'u' → logprob: -16.049373626708984
    9. ' u' → logprob: -16.549373626708984
    10. '(V' → logprob: -16.799373626708984

Token 778: ''' (ID: 6)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.09223784506320953
    2. 'e' → logprob: -3.592237949371338
    3. ' (' → logprob: -3.592237949371338
    4. 'a' → logprob: -3.842237949371338
    5. 'u' → logprob: -5.092237949371338
    6. '(u' → logprob: -5.592237949371338
    7. ' v' → logprob: -8.09223747253418
    8. ' tuple' → logprob: -8.09223747253418
    9. '(' → logprob: -8.21723747253418
    10. 'es' → logprob: -8.71723747253418

Token 779: 'arc' (ID: 18843)
  Prédit: 'arc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arc' → logprob: -0.6012195348739624
    2. '(v' → logprob: -1.1012195348739624
    3. 'adj' → logprob: -3.226219654083252
    4. 'ar' → logprob: -3.351219654083252
    5. '(u' → logprob: -3.976219654083252
    6. ' (' → logprob: -4.601219654083252
    7. ' arc' → logprob: -5.101219654083252
    8. ' tuple' → logprob: -5.851219654083252
    9. 'tuple' → logprob: -5.976219654083252
    10. 'edge' → logprob: -6.601219654083252

Token 780: ' inverse' (ID: 53743)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.7212752103805542
    2. ' (' → logprob: -0.8462752103805542
    3. '(u' → logprob: -2.4712753295898438
    4. '   ' → logprob: -9.346275329589844
    5. '(' → logprob: -9.721275329589844
    6. ' de' → logprob: -9.846275329589844
    7. ',' → logprob: -10.096275329589844
    8. 'de' → logprob: -10.471275329589844
    9. 'u' → logprob: -10.846275329589844
    10. 'inverse' → logprob: -11.221275329589844

Token 781: ' dans' (ID: 2671)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.09832325577735901
    2. '(u' → logprob: -3.473323345184326
    3. ')' → logprob: -3.598323345184326
    4. ' (' → logprob: -4.098323345184326
    5. ',' → logprob: -4.223323345184326
    6. '       ' → logprob: -7.223323345184326
    7. '(' → logprob: -7.473323345184326
    8. '.' → logprob: -7.473323345184326
    9. ',v' → logprob: -7.973323345184326
    10. '   ' → logprob: -8.223322868347168

Token 782: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.010378868319094181
    2. ' G' → logprob: -4.760378837585449
    3. '(G' → logprob: -6.385378837585449
    4. ' (' → logprob: -10.01037883758545
    5. '(' → logprob: -10.76037883758545
    6. '(v' → logprob: -11.88537883758545
    7. ' la' → logprob: -13.76037883758545
    8. '(u' → logprob: -14.01037883758545
    9. ' le' → logprob: -15.13537883758545
    10. '(l' → logprob: -15.38537883758545

Token 783: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0001487140398239717
    2. '[v' → logprob: -9.50014877319336
    3. 'u' → logprob: -10.00014877319336
    4. '(u' → logprob: -10.50014877319336
    5. '```' → logprob: -14.75014877319336
    6. '[' → logprob: -15.50014877319336
    7. ')' → logprob: -16.12514877319336
    8. '[(' → logprob: -16.87514877319336
    9. '   ' → logprob: -17.12514877319336
    10. ',u' → logprob: -17.50014877319336

Token 784: ']
' (ID: 1592)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.4743843674659729
    2. ',' → logprob: -1.5993843078613281
    3. '.append' → logprob: -2.099384307861328
    4. ').' → logprob: -3.099384307861328
    5. ',v' → logprob: -5.974384307861328
    6. '(v' → logprob: -6.724384307861328
    7. '])' → logprob: -7.099384307861328
    8. ']' → logprob: -7.474384307861328
    9. ',u' → logprob: -7.474384307861328
    10. '[v' → logprob: -8.099384307861328

Token 785: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0006521515315398574
    2. 'elif' → logprob: -7.375652313232422
    3. ' else' → logprob: -11.250652313232422
    4. '   ' → logprob: -12.250652313232422
    5. '#else' → logprob: -13.125652313232422
    6. '```' → logprob: -13.250652313232422
    7. '}else' → logprob: -13.375652313232422
    8. '<|end|>' → logprob: -13.875652313232422
    9. '    
' → logprob: -14.625652313232422
    10. '#' → logprob: -15.625652313232422

Token 786: ' L' (ID: 451)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005246568005532026
    2. 'else' → logprob: -5.755246639251709
    3. 'd' → logprob: -7.255246639251709
    4. '   ' → logprob: -7.755246639251709
    5. ' dist' → logprob: -8.13024616241455
    6. 'distance' → logprob: -8.25524616241455
    7. 'dis' → logprob: -9.50524616241455
    8. 'result' → logprob: -9.63024616241455
    9. 'elif' → logprob: -10.00524616241455
    10. '    
' → logprob: -10.00524616241455

Token 787: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47930532693862915
    2. '=' → logprob: -1.6043052673339844
    3. 'e' → logprob: -2.8543052673339844
    4. '   ' → logprob: -3.2293052673339844
    5. 'dist' → logprob: -3.2293052673339844
    6. ',' → logprob: -4.854305267333984
    7. '=[]' → logprob: -5.229305267333984
    8. '=[]
' → logprob: -5.479305267333984
    9. 'et' → logprob: -5.604305267333984
    10. '_dist' → logprob: -5.854305267333984

Token 788: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.015651047229766846
    2. ' d' → logprob: -4.390651226043701
    3. 'dist' → logprob: -5.890651226043701
    4. '[' → logprob: -8.390650749206543
    5. '[d' → logprob: -9.765650749206543
    6. ' dist' → logprob: -10.140650749206543
    7. ' [' → logprob: -11.140650749206543
    8. '[]' → logprob: -11.515650749206543
    9. ' ' → logprob: -12.515650749206543
    10. 'heap' → logprob: -12.515650749206543

Token 789: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -1.2664456789934775e-06
    2. 'ijk' → logprob: -14.125000953674316
    3. 'ij' → logprob: -15.250000953674316
    4. 'jik' → logprob: -15.625000953674316
    5. 'ijks' → logprob: -16.250001907348633
    6. '```' → logprob: -17.250001907348633
    7. 'G' → logprob: -18.250001907348633
    8. 'jk' → logprob: -18.750001907348633
    9. 'j' → logprob: -19.250001907348633
    10. 'ijkl' → logprob: -19.250001907348633

Token 790: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -7.896309739408025e-07
    2. '(
' → logprob: -14.750000953674316
    3. '(' → logprob: -15.000000953674316
    4. '<|end|>' → logprob: -18.25
    5. 'G' → logprob: -19.25
    6. ' (' → logprob: -19.375
    7. '(GPIO' → logprob: -19.375
    8. '[G' → logprob: -19.75
    9. '<G' → logprob: -19.875
    10. '((' → logprob: -19.875

Token 791: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005187863018363714
    2. '(s' → logprob: -5.63018798828125
    3. ',s' → logprob: -6.50518798828125
    4. 's' → logprob: -9.63018798828125
    5. '(' → logprob: -11.25518798828125
    6. ' ,' → logprob: -11.63018798828125
    7. '[s' → logprob: -13.75518798828125
    8. ')' → logprob: -14.00518798828125
    9. ',
' → logprob: -15.13018798828125
    10. ' s' → logprob: -15.50518798828125

Token 792: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -9.877503907773644e-05
    2. ' s' → logprob: -9.375099182128906
    3. '250' → logprob: -11.500099182128906
    4. '0' → logprob: -13.250099182128906
    5. '   ' → logprob: -13.375099182128906
    6. 'n' → logprob: -16.625099182128906
    7. '	s' → logprob: -16.625099182128906
    8. '(s' → logprob: -17.125099182128906
    9. '25' → logprob: -17.125099182128906
    10. '_s' → logprob: -17.375099182128906

Token 793: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.246537173457909e-06
    2. ' s' → logprob: -12.750003814697266
    3. '250' → logprob: -14.250003814697266
    4. '0' → logprob: -15.375003814697266
    5. '   ' → logprob: -16.000003814697266
    6. 'n' → logprob: -16.375003814697266
    7. '(s' → logprob: -17.500003814697266
    8. '{s' → logprob: -18.000003814697266
    9. '	s' → logprob: -18.250003814697266
    10. '_s' → logprob: -18.500003814697266

Token 794: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008129627676680684
    2. ')[' → logprob: -7.750813007354736
    3. ')
' → logprob: -8.625812530517578
    4. ')s' → logprob: -9.000812530517578
    5. 's' → logprob: -10.125812530517578
    6. ')
' → logprob: -11.250812530517578
    7. ' )' → logprob: -12.250812530517578
    8. '[s' → logprob: -12.375812530517578
    9. ',s' → logprob: -12.625812530517578
    10. ',' → logprob: -12.750812530517578

Token 795: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05978371575474739
    2. '
' → logprob: -3.309783697128296
    3. ' print' → logprob: -4.434783935546875
    4. '<|end|>' → logprob: -5.684783935546875
    5. 'for' → logprob: -7.059783935546875
    6. 's' → logprob: -7.059783935546875
    7. '#print' → logprob: -7.059783935546875
    8. 'L' → logprob: -7.184783935546875
    9. 'dist' → logprob: -7.309783935546875
    10. ' distances' → logprob: -7.809783935546875

Token 796: ' On' (ID: 2160)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00479559600353241
    2. ' d' → logprob: -5.629795551300049
    3. 'print' → logprob: -7.254795551300049
    4. 'dist' → logprob: -8.129796028137207
    5. 'L' → logprob: -8.754796028137207
    6. ' print' → logprob: -11.629796028137207
    7. '[d' → logprob: -11.754796028137207
    8. ' L' → logprob: -12.004796028137207
    9. ' dist' → logprob: -12.129796028137207
    10. 'distance' → logprob: -13.504796028137207

Token 797: ' applique' (ID: 180579)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006564979907125235
    2. '=' → logprob: -5.881565093994141
    3. ' =' → logprob: -5.881565093994141
    4. 's' → logprob: -8.63156509399414
    5. ' print' → logprob: -8.88156509399414
    6. '
' → logprob: -9.13156509399414
    7. 'r' → logprob: -9.13156509399414
    8. 'dist' → logprob: -9.50656509399414
    9. '#print' → logprob: -9.63156509399414
    10. '#' → logprob: -10.13156509399414

Token 798: ' D' (ID: 415)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0021544264163821936
    2. 's' → logprob: -7.127154350280762
    3. ' d' → logprob: -7.502154350280762
    4. '250' → logprob: -8.377154350280762
    5. '0' → logprob: -8.502154350280762
    6. '(' → logprob: -8.877154350280762
    7. '(d' → logprob: -9.502154350280762
    8. ')' → logprob: -10.002154350280762
    9. 'the' → logprob: -10.127154350280762
    10. '(s' → logprob: -11.002154350280762

Token 799: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -1.0564331205387134e-05
    2. 'ijk' → logprob: -11.50001049041748
    3. 'ij' → logprob: -15.12501049041748
    4. 'ijks' → logprob: -17.500011444091797
    5. 'jik' → logprob: -18.125011444091797
    6. 'ijkl' → logprob: -18.500011444091797
    7. '```' → logprob: -19.625011444091797
    8. 'ijkt' → logprob: -19.875011444091797
    9. 'j' → logprob: -20.250011444091797
    10. 'i' → logprob: -20.750011444091797

Token 800: ' sur' (ID: 1512)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36482784152030945
    2. '(s' → logprob: -1.2398278713226318
    3. '(n' → logprob: -5.489827632904053
    4. '(G' → logprob: -5.864827632904053
    5. '(L' → logprob: -5.864827632904053
    6. '<|end|>' → logprob: -6.614827632904053
    7. '([' → logprob: -6.739827632904053
    8. '#' → logprob: -7.239827632904053
    9. 's' → logprob: -7.364827632904053
    10. '()' → logprob: -7.614827632904053

Token 801: ' ce' (ID: 2357)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0045015690848231316
    2. '0' → logprob: -5.8795013427734375
    3. 's' → logprob: -7.0045013427734375
    4. ' G' → logprob: -7.2545013427734375
    5. ' ' → logprob: -10.879501342773438
    6. ')' → logprob: -11.129501342773438
    7. '<|end|>' → logprob: -11.254501342773438
    8. 'L' → logprob: -11.504501342773438
    9. '250' → logprob: -12.379501342773438
    10. ' s' → logprob: -12.754501342773438

Token 802: ' grap' (ID: 60955)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0381508506834507
    2. '0' → logprob: -4.038150787353516
    3. 's' → logprob: -4.788150787353516
    4. ')' → logprob: -5.913150787353516
    5. 'L' → logprob: -6.288150787353516
    6. ' G' → logprob: -6.788150787353516
    7. '[' → logprob: -6.913150787353516
    8. 'u' → logprob: -7.788150787353516
    9. '(G' → logprob: -7.913150787353516
    10. 'n' → logprob: -8.163150787353516

Token 803: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.24807476997375488
    2. 'he' → logprob: -1.7480747699737549
    3. 'h' → logprob: -3.373074769973755
    4. 'ap' → logprob: -5.373074531555176
    5. 'aph' → logprob: -6.123074531555176
    6. 'ph' → logprob: -6.623074531555176
    7. 'phe' → logprob: -7.123074531555176
    8. '#' → logprob: -7.123074531555176
    9. 'hap' → logprob: -8.123074531555176
    10. 'ah' → logprob: -8.123074531555176

Token 804: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.027906285598874092
    2. 'for' → logprob: -3.7779061794281006
    3. 'dist' → logprob: -5.77790641784668
    4. ' print' → logprob: -7.27790641784668
    5. ' for' → logprob: -8.40290641784668
    6. '#' → logprob: -8.52790641784668
    7. '#print' → logprob: -9.15290641784668
    8. 's' → logprob: -9.27790641784668
    9. '
' → logprob: -9.77790641784668
    10. 'L' → logprob: -10.02790641784668

Token 805: ' partir' (ID: 12100)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03400364890694618
    2. 's' → logprob: -3.409003734588623
    3. 'l' → logprob: -8.784003257751465
    4. '(s' → logprob: -10.409003257751465
    5. 'le' → logprob: -10.409003257751465
    6. 'G' → logprob: -10.534003257751465
    7. 'la' → logprob: -11.159003257751465
    8. '250' → logprob: -11.159003257751465
    9. 'start' → logprob: -11.159003257751465
    10. ')' → logprob: -11.659003257751465

Token 806: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9549493193626404
    2. '(s' → logprob: -1.3299493789672852
    3. ' du' → logprob: -2.079949378967285
    4. 'du' → logprob: -2.579949378967285
    5. 's' → logprob: -2.954949378967285
    6. 'de' → logprob: -3.079949378967285
    7. '0' → logprob: -3.204949378967285
    8. ' de' → logprob: -5.579949378967285
    9. 'au' → logprob: -5.704949378967285
    10. ')' → logprob: -6.454949378967285

Token 807: ' sommet' (ID: 130502)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02642766945064068
    2. '0' → logprob: -3.651427745819092
    3. 'n' → logprob: -9.901427268981934
    4. '(s' → logprob: -10.026427268981934
    5. ' s' → logprob: -10.901427268981934
    6. 'start' → logprob: -11.651427268981934
    7. '   ' → logprob: -13.526427268981934
    8. 'u' → logprob: -13.901427268981934
    9. ' ' → logprob: -14.151427268981934
    10. '1' → logprob: -15.151427268981934

Token 808: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7010181546211243
    2. 's' → logprob: -0.7010181546211243
    3. '(s' → logprob: -5.326018333435059
    4. '250' → logprob: -6.451018333435059
    5. 'n' → logprob: -7.201018333435059
    6. '(' → logprob: -7.826018333435059
    7. ' s' → logprob: -10.076018333435059
    8. '   ' → logprob: -10.201018333435059
    9. '[s' → logprob: -10.326018333435059
    10. '1' → logprob: -10.951018333435059

Token 809: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1486244648694992
    2. '0' → logprob: -2.0236244201660156
    3. '(s' → logprob: -5.148624420166016
    4. 'n' → logprob: -9.773624420166016
    5. '(' → logprob: -10.398624420166016
    6. ' s' → logprob: -11.273624420166016
    7. '(n' → logprob: -11.523624420166016
    8. 'start' → logprob: -12.898624420166016
    9. ' (' → logprob: -13.273624420166016
    10. '250' → logprob: -13.773624420166016

Token 810: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22510294616222382
    2. 'else' → logprob: -1.7251029014587402
    3. 'print' → logprob: -3.9751029014587402
    4. 'elif' → logprob: -6.10010290145874
    5. '    
' → logprob: -6.97510290145874
    6. ' else' → logprob: -7.85010290145874
    7. 'for' → logprob: -8.100103378295898
    8. ' print' → logprob: -8.225103378295898
    9. '
' → logprob: -9.100103378295898
    10. 'dist' → logprob: -9.350103378295898

Token 811: ' Le' (ID: 2018)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4104405641555786
    2. 'else' → logprob: -1.2854405641555786
    3. '   ' → logprob: -3.535440444946289
    4. '<|end|>' → logprob: -4.285440444946289
    5. 'elif' → logprob: -4.410440444946289
    6. 'for' → logprob: -6.785440444946289
    7. ' print' → logprob: -6.910440444946289
    8. ' else' → logprob: -7.535440444946289
    9. '
' → logprob: -7.910440444946289
    10. '    
' → logprob: -7.910440444946289

Token 812: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.30930155515670776
    2. 'result' → logprob: -2.3093016147613525
    3. 's' → logprob: -3.1843016147613525
    4. 'dist' → logprob: -3.3093016147613525
    5. 'for' → logprob: -3.4343016147613525
    6. 'res' → logprob: -3.8093016147613525
    7. 'L' → logprob: -4.809301376342773
    8. 'start' → logprob: -5.184301376342773
    9. 'distance' → logprob: -5.184301376342773
    10. '#' → logprob: -6.309301376342773

Token 813: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.606558084487915
    2. '=' → logprob: -0.856558084487915
    3. 'est' → logprob: -4.856557846069336
    4. ' est' → logprob: -5.231557846069336
    5. '#' → logprob: -5.606557846069336
    6. 'print' → logprob: -5.731557846069336
    7. 'dist' → logprob: -6.231557846069336
    8. 's' → logprob: -6.356557846069336
    9. ')' → logprob: -6.606557846069336
    10. ' des' → logprob: -7.731557846069336

Token 814: ' stock' (ID: 6546)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.003187459195032716
    2. ' L' → logprob: -5.753187656402588
    3. 'd' → logprob: -12.25318717956543
    4. '[L' → logprob: -13.37818717956543
    5. ' ' → logprob: -14.25318717956543
    6. 'l' → logprob: -14.50318717956543
    7. '"L' → logprob: -15.00318717956543
    8. 'print' → logprob: -15.00318717956543
    9. '[' → logprob: -15.25318717956543
    10. '[]' → logprob: -15.62818717956543

Token 815: 'é' (ID: 377)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01970580965280533
    2. ' =' → logprob: -4.519705772399902
    3. '=L' → logprob: -6.144705772399902
    4. ' L' → logprob: -6.394705772399902
    5. '=[]' → logprob: -6.519705772399902
    6. ' en' → logprob: -7.269705772399902
    7. ' in' → logprob: -7.644705772399902
    8. 'es' → logprob: -7.894705772399902
    9. 'e' → logprob: -8.269705772399902
    10. '[:]' → logprob: -8.394705772399902

Token 816: ' dans' (ID: 2671)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.10067632049322128
    2. 'L' → logprob: -3.1006762981414795
    3. '(' → logprob: -3.6006762981414795
    4. '=' → logprob: -4.975676536560059
    5. 's' → logprob: -5.725676536560059
    6. ' L' → logprob: -5.850676536560059
    7. '(s' → logprob: -6.100676536560059
    8. ' =' → logprob: -6.475676536560059
    9. ')' → logprob: -6.850676536560059
    10. ',' → logprob: -6.975676536560059

Token 817: ' la' (ID: 557)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0002137882256647572
    2. ' L' → logprob: -8.500213623046875
    3. 'dist' → logprob: -11.750213623046875
    4. 'l' → logprob: -13.750213623046875
    5. 'd' → logprob: -15.125213623046875
    6. 's' → logprob: -15.125213623046875
    7. '`' → logprob: -15.500213623046875
    8. '_' → logprob: -15.625213623046875
    9. 'distance' → logprob: -16.000213623046875
    10. '_L' → logprob: -16.750213623046875

Token 818: ' liste' (ID: 31719)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.018723633140325546
    2. 'dist' → logprob: -4.393723487854004
    3. 'd' → logprob: -5.393723487854004
    4. ' L' → logprob: -7.268723487854004
    5. 's' → logprob: -8.018723487854004
    6. 'distance' → logprob: -9.018723487854004
    7. 'print' → logprob: -9.393723487854004
    8. ' dist' → logprob: -9.518723487854004
    9. 'G' → logprob: -9.643723487854004
    10. '[]' → logprob: -10.268723487854004

Token 819: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0005678066518157721
    2. '(L' → logprob: -7.62556791305542
    3. ' L' → logprob: -10.750567436218262
    4. '(s' → logprob: -10.750567436218262
    5. '(' → logprob: -10.875567436218262
    6. '(dist' → logprob: -11.625567436218262
    7. 'dist' → logprob: -12.500567436218262
    8. 's' → logprob: -13.625567436218262
    9. '#' → logprob: -14.875567436218262
    10. '('' → logprob: -15.000567436218262

Token 820: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.607868492603302
    2. 'else' → logprob: -0.982868492603302
    3. 'print' → logprob: -2.8578684329986572
    4. 'elif' → logprob: -4.732868671417236
    5. '<|end|>' → logprob: -5.482868671417236
    6. ' else' → logprob: -5.982868671417236
    7. '
' → logprob: -6.107868671417236
    8. '    
' → logprob: -6.232868671417236
    9. 'for' → logprob: -6.857868671417236
    10. ' print' → logprob: -6.982868671417236

Token 821: 'dist' (ID: 24126)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.19774304330348969
    2. ' L' → logprob: -2.6977429389953613
    3. 'dist' → logprob: -2.6977429389953613
    4. ')' → logprob: -4.197742938995361
    5. 'print' → logprob: -4.197742938995361
    6. ' dist' → logprob: -5.322742938995361
    7. '#' → logprob: -5.447742938995361
    8. 's' → logprob: -7.572742938995361
    9. '[L' → logprob: -7.697742938995361
    10. '[' → logprob: -7.947742938995361

Token 822: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.004359621554613113
    2. 'ance' → logprob: -6.004359722137451
    3. ' =' → logprob: -7.004359722137451
    4. '=' → logprob: -7.504359722137451
    5. ')' → logprob: -8.754359245300293
    6. ']' → logprob: -9.254359245300293
    7. '=[]' → logprob: -9.754359245300293
    8. '[]' → logprob: -10.504359245300293
    9. 's' → logprob: -10.629359245300293
    10. '[' → logprob: -11.129359245300293

Token 823: ' minim' (ID: 23874)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009627926629036665
    2. ')
' → logprob: -8.37596321105957
    3. 'final' → logprob: -8.50096321105957
    4. 'des' → logprob: -8.87596321105957
    5. ' )' → logprob: -9.12596321105957
    6. ').' → logprob: -9.50096321105957
    7. ' des' → logprob: -10.37596321105957
    8. ')#' → logprob: -10.37596321105957
    9. 's' → logprob: -10.87596321105957
    10. '#' → logprob: -11.12596321105957

Token 824: 'ales' (ID: 3459)
  Prédit: 'ances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.001050434890203178
    2. 'ance' → logprob: -8.251049995422363
    3. ')' → logprob: -8.626049995422363
    4. 'es' → logprob: -8.626049995422363
    5. ']' → logprob: -9.251049995422363
    6. '[' → logprob: -9.376049995422363
    7. '[]' → logprob: -9.876049995422363
    8. 'ancias' → logprob: -10.001049995422363
    9. '[i' → logprob: -10.376049995422363
    10. '[:]' → logprob: -10.626049995422363

Token 825: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00157437555026263
    2. ')
' → logprob: -7.126574516296387
    3. 'from' → logprob: -8.376574516296387
    4. ').' → logprob: -8.751574516296387
    5. ' )' → logprob: -8.751574516296387
    6. 'dep' → logprob: -9.876574516296387
    7. 'entre' → logprob: -10.126574516296387
    8. ')#' → logprob: -10.376574516296387
    9. '[' → logprob: -11.501574516296387
    10. 'aux' → logprob: -11.751574516296387

Token 826: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6158953309059143
    2. 'print' → logprob: -0.9908953309059143
    3. 'for' → logprob: -2.4908952713012695
    4. 'dist' → logprob: -5.8658952713012695
    5. 'elif' → logprob: -7.1158952713012695
    6. 'L' → logprob: -7.8658952713012695
    7. '   ' → logprob: -7.8658952713012695
    8. ' for' → logprob: -8.61589527130127
    9. ' else' → logprob: -8.61589527130127
    10. '#' → logprob: -9.11589527130127

Token 827: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25195810198783875
    2. ':
' → logprob: -1.5019581317901611
    3. '   ' → logprob: -10.751957893371582
    4. ':
' → logprob: -12.626957893371582
    5. ' :
' → logprob: -13.376957893371582
    6. ' :' → logprob: -13.501957893371582
    7. ':

' → logprob: -14.001957893371582
    8. ':#' → logprob: -15.126957893371582
    9. '  ' → logprob: -17.1269588470459
    10. '::' → logprob: -17.6269588470459

Token 828: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38961318135261536
    2. 'for' → logprob: -1.139613151550293
    3. '#' → logprob: -6.014613151550293
    4. ' for' → logprob: -8.264613151550293
    5. '```' → logprob: -10.764613151550293
    6. '
' → logprob: -11.514613151550293
    7. '	for' → logprob: -12.264613151550293
    8. '       ' → logprob: -15.014613151550293
    9. '   ' → logprob: -15.264613151550293
    10. ' #' → logprob: -15.639613151550293

Token 829: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08540592342615128
    2. '#' (adapté à ' #') → logprob: -2.5854058265686035
    3. '   ' → logprob: -5.0854058265686035
    4. 'L' → logprob: -9.335406303405762
    5. ' for' → logprob: -9.460406303405762
    6. 'G' → logprob: -10.210406303405762
    7. 'dist' → logprob: -10.710406303405762
    8. '
' → logprob: -11.085406303405762
    9. 'from' → logprob: -11.335406303405762
    10. '```' → logprob: -11.585406303405762

Token 830: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004278196021914482
    2. '#' → logprob: -6.129278182983398
    3. ' for' → logprob: -6.754278182983398
    4. '   ' → logprob: -7.004278182983398
    5. '
' → logprob: -11.504278182983398
    6. 'L' → logprob: -13.004278182983398
    7. '    ' → logprob: -13.879278182983398
    8. ' #' → logprob: -14.129278182983398
    9. 'For' → logprob: -14.379278182983398
    10. ' ' → logprob: -14.504278182983398

Token 831: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5234153866767883
    2. 's' → logprob: -0.8984153866767883
    3. ' le' → logprob: -9.523415565490723
    4. 'le' → logprob: -10.273415565490723
    5. 'the' → logprob: -10.648415565490723
    6. ' la' → logprob: -10.773415565490723
    7. ' ' → logprob: -10.898415565490723
    8. 'la' → logprob: -10.898415565490723
    9. 'True' → logprob: -10.898415565490723
    10. '#' → logprob: -11.273415565490723

Token 832: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05053862929344177
    2. '<' → logprob: -3.0505385398864746
    3. ' >=' → logprob: -6.550538539886475
    4. ' <=' → logprob: -8.300539016723633
    5. ' >' → logprob: -9.300539016723633
    6. '>=' → logprob: -9.925539016723633
    7. '   ' → logprob: -10.550539016723633
    8. '<=' → logprob: -10.925539016723633
    9. ' <
' → logprob: -10.925539016723633
    10. ' ==' → logprob: -11.300539016723633

Token 833: ' ' (ID: 220)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.012531313113868237
    2. ' ' → logprob: -4.387531280517578
    3. '0' → logprob: -11.762531280517578
    4. 's' → logprob: -12.887531280517578
    5. 'n' → logprob: -13.325031280517578
    6. '   ' → logprob: -13.825031280517578
    7. '  ' → logprob: -14.325031280517578
    8. '25' → logprob: -14.325031280517578
    9. '100' → logprob: -14.387531280517578
    10. '2' → logprob: -14.387531280517578

Token 834: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.0003589416155591607
    2. ' ' → logprob: -8.375358581542969
    3. 's' → logprob: -9.750358581542969
    4. '0' → logprob: -10.375358581542969
    5. 'n' → logprob: -11.125358581542969
    6. '25' → logprob: -11.750358581542969
    7. '2' → logprob: -12.750358581542969
    8. '   ' → logprob: -13.125358581542969
    9. '
' → logprob: -13.437858581542969
    10. 'm' → logprob: -13.937858581542969

Token 835: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -12.37501049041748
    3. '   ' → logprob: -13.25001049041748
    4. '00' → logprob: -13.50001049041748
    5. '=' → logprob: -13.87501049041748
    6. ',' → logprob: -14.00001049041748
    7. '1' → logprob: -14.75001049041748
    8. ')' → logprob: -14.93751049041748
    9. '
' → logprob: -15.31251049041748
    10. 'o' → logprob: -15.68751049041748

Token 836: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3557238280773163
    2. '   ' → logprob: -1.8557238578796387
    3. ':
' → logprob: -1.9807238578796387
    4. 'for' → logprob: -5.480723857879639
    5. ',' → logprob: -7.855723857879639
    6. ' for' → logprob: -8.23072338104248
    7. '=' → logprob: -9.60572338104248
    8. '
' → logprob: -10.35572338104248
    9. ' :' → logprob: -10.85572338104248
    10. '#' → logprob: -11.35572338104248

Token 837: ' version' (ID: 3926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20331810414791107
    2. '   ' → logprob: -2.4533181190490723
    3. ' for' → logprob: -2.7033181190490723
    4. '#' → logprob: -4.453318119049072
    5. 'G' → logprob: -4.578318119049072
    6. 'L' → logprob: -5.578318119049072
    7. 'edges' → logprob: -7.578318119049072
    8. ' G' → logprob: -8.203317642211914
    9. 'dist' → logprob: -8.203317642211914
    10. ' #' → logprob: -8.453317642211914

Token 838: ' avanc' (ID: 87985)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.409442663192749
    2. '=' → logprob: -1.534442663192749
    3. 'for' → logprob: -1.784442663192749
    4. '1' → logprob: -3.034442663192749
    5. 'A' → logprob: -3.534442663192749
    6. 's' → logprob: -3.659442663192749
    7. 'import' → logprob: -4.034442901611328
    8. '0' → logprob: -4.159442901611328
    9. 'else' → logprob: -4.534442901611328
    10. ' for' → logprob: -4.534442901611328

Token 839: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5005697011947632
    2. '   ' → logprob: -1.6255697011947632
    3. 'ée' → logprob: -1.8755697011947632
    4. ':' → logprob: -3.5005698204040527
    5. 'é' → logprob: -5.500569820404053
    6. 'ed' → logprob: -6.000569820404053
    7. 'ion' → logprob: -6.000569820404053
    8. '(e' → logprob: -7.250569820404053
    9. ':
' → logprob: -7.375569820404053
    10. 'else' → logprob: -8.000569343566895

Token 840: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45537030696868896
    2. ':' → logprob: -1.455370306968689
    3. ':
' → logprob: -2.7053704261779785
    4. 'for' → logprob: -3.9553704261779785
    5. '
' → logprob: -4.5803704261779785
    6. '#' → logprob: -4.8303704261779785
    7. ',' → logprob: -5.8303704261779785
    8. '=' → logprob: -5.9553704261779785
    9. ' for' → logprob: -5.9553704261779785
    10. 'edges' → logprob: -6.3928704261779785

Token 841: ' problème' (ID: 35630)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.995732843875885
    2. 'gr' → logprob: -1.3707327842712402
    3. 'd' → logprob: -1.7457327842712402
    4. 'graph' → logprob: -2.3707327842712402
    5. 'alg' → logprob: -3.6207327842712402
    6. '```' → logprob: -3.7457327842712402
    7. 'for' → logprob: -3.8707327842712402
    8. ' code' → logprob: -4.99573278427124
    9. '#' → logprob: -5.12073278427124
    10. 'D' → logprob: -5.49573278427124

Token 842: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4795619249343872
    2. 'for' → logprob: -1.6045619249343872
    3. ' for' → logprob: -2.7295618057250977
    4. '#' → logprob: -3.8545618057250977
    5. ':' → logprob: -3.9795618057250977
    6. 'L' → logprob: -4.229561805725098
    7. '
' → logprob: -5.104561805725098
    8. 'G' → logprob: -5.229561805725098
    9. ':
' → logprob: -5.229561805725098
    10. '```' → logprob: -5.604561805725098

Token 843: ' gestion' (ID: 29607)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0326498746871948
    2. 'une' → logprob: -2.0326499938964844
    3. 'un' → logprob: -2.7826499938964844
    4. 'dp' → logprob: -2.7826499938964844
    5. 'l' → logprob: -2.9076499938964844
    6. 'les' → logprob: -3.7826499938964844
    7. 'de' → logprob: -3.9076499938964844
    8. 's' → logprob: -4.032649993896484
    9. 'des' → logprob: -4.032649993896484
    10. 'la' → logprob: -4.032649993896484

Token 844: ' d' (ID: 272)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.8837853670120239
    2. ' des' → logprob: -1.133785367012024
    3. 'de' → logprob: -2.2587852478027344
    4. '   ' → logprob: -3.1337852478027344
    5. ' de' → logprob: -3.1337852478027344
    6. ' du' → logprob: -3.2587852478027344
    7. 'du' → logprob: -4.133785247802734
    8. 'import' → logprob: -5.133785247802734
    9. 'd' → logprob: -5.883785247802734
    10. ' d' → logprob: -6.008785247802734

Token 845: ''ét' (ID: 23771)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.954165518283844
    2. 'es' → logprob: -1.4541654586791992
    3. ''un' → logprob: -1.8291654586791992
    4. ''une' → logprob: -2.829165458679199
    5. 'un' → logprob: -3.454165458679199
    6. 'eux' → logprob: -3.454165458679199
    7. 'une' → logprob: -3.954165458679199
    8. ''ét' → logprob: -4.204165458679199
    9. 'u' → logprob: -4.704165458679199
    10. ''' → logprob: -4.829165458679199

Token 846: 'ats' (ID: 1838)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.2233060747385025
    2. 'ats' → logprob: -1.7233060598373413
    3. 'a' → logprob: -5.348306179046631
    4. 'apes' → logprob: -5.910806179046631
    5. 'ap' → logprob: -6.535806179046631
    6. '```' → logprob: -6.598306179046631
    7. '#' → logprob: -6.910806179046631
    8. '{' → logprob: -7.098306179046631
    9. 'tat' → logprob: -7.285806179046631
    10. '\' → logprob: -7.535806179046631

Token 847: ' supplémentaires' (ID: 99346)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.453389048576355
    2. ' =' → logprob: -1.578389048576355
    3. ',' → logprob: -2.3283891677856445
    4. '   ' → logprob: -2.4533891677856445
    5. '#' → logprob: -2.7033891677856445
    6. 'G' → logprob: -2.7033891677856445
    7. '
' → logprob: -3.0783891677856445
    8. 'for' → logprob: -3.5783891677856445
    9. 's' → logprob: -3.7033891677856445
    10. '=' → logprob: -4.0783891677856445

Token 848: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2910302877426147
    2. '   ' → logprob: -1.2910302877426147
    3. 'for' → logprob: -1.4160302877426147
    4. ' for' → logprob: -2.9160304069519043
    5. '#' → logprob: -3.0410304069519043
    6. 'G' → logprob: -3.9160304069519043
    7. '
' → logprob: -4.291030406951904
    8. 'state' → logprob: -4.541030406951904
    9. 'n' → logprob: -4.666030406951904
    10. ':
' → logprob: -4.791030406951904

Token 849: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6320645213127136
    2. '   ' → logprob: -1.5070645809173584
    3. 'state' → logprob: -3.5070645809173584
    4. 'G' → logprob: -3.7570645809173584
    5. 'dist' → logprob: -3.8820645809173584
    6. 'Q' → logprob: -4.007064342498779
    7. 'S' → logprob: -4.007064342498779
    8. 'f' → logprob: -4.257064342498779
    9. 'DP' → logprob: -4.257064342498779
    10. 'K' → logprob: -4.257064342498779

Token 850: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.362994909286499
    2. 'G' → logprob: -3.237994909286499
    3. 'state' → logprob: -3.487994909286499
    4. 'from' → logprob: -3.612994909286499
    5. 'S' → logprob: -3.612994909286499
    6. 'f' → logprob: -3.612994909286499
    7. 'dist' → logprob: -3.987994909286499
    8. 'DP' → logprob: -4.112995147705078
    9. 'Q' → logprob: -4.237995147705078
    10. 'M' → logprob: -4.237995147705078

Token 851: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04303823783993721
    2. ' _' → logprob: -3.1680381298065186
    3. '_i' → logprob: -10.668038368225098
    4. '_s' → logprob: -12.668038368225098
    5. ' i' → logprob: -12.918038368225098
    6. '_range' → logprob: -13.168038368225098
    7. 'i' → logprob: -13.668038368225098
    8. ' ' → logprob: -14.043038368225098
    9. 'range' → logprob: -14.418038368225098
    10. '_in' → logprob: -14.668038368225098

Token 852: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.576417863368988
    2. ' in' → logprob: -0.826417863368988
    3. 'range' → logprob: -7.701417922973633
    4. ' ' → logprob: -11.076417922973633
    5. '_' → logprob: -12.701417922973633
    6. '  ' → logprob: -13.451417922973633
    7. 'import' → logprob: -13.576417922973633
    8. ' range' → logprob: -13.951417922973633
    9. '    ' → logprob: -14.201417922973633
    10. ' _' → logprob: -14.451417922973633

Token 853: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00247981958091259
    2. ' range' → logprob: -6.0024800300598145
    3. '_' → logprob: -12.502479553222656
    4. '_range' → logprob: -16.002479553222656
    5. 'rang' → logprob: -16.002479553222656
    6. '(range' → logprob: -16.252479553222656
    7. '	range' → logprob: -16.877479553222656
    8. 'r' → logprob: -17.377479553222656
    9. 'ra' → logprob: -17.877479553222656
    10. ' in' → logprob: -18.002479553222656

Token 854: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.3856492842023727e-06
    2. ' (' → logprob: -14.375000953674316
    3. '(' → logprob: -14.625000953674316
    4. 'm' → logprob: -15.375000953674316
    5. '(s' → logprob: -18.875001907348633
    6. ' m' → logprob: -19.250001907348633
    7. '(M' → logprob: -19.375001907348633
    8. '   ' → logprob: -20.125001907348633
    9. 'import' → logprob: -20.125001907348633
    10. 'range' → logprob: -20.375001907348633

Token 855: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8257355093955994
    2. '):
' → logprob: -1.0757355690002441
    3. ',' → logprob: -2.075735569000244
    4. ':' → logprob: -2.575735569000244
    5. '   ' → logprob: -4.200735569000244
    6. '():
' → logprob: -6.575735569000244
    7. '):
' → logprob: -6.700735569000244
    8. '():' → logprob: -7.575735569000244
    9. ':
' → logprob: -7.825735569000244
    10. '       ' → logprob: -8.450735092163086

Token 856: '       ' (ID: 309)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.4373915195465088
    2. 'u' → logprob: -1.0623915195465088
    3. '   ' → logprob: -5.31239128112793
    4. '       ' → logprob: -5.68739128112793
    5. '	u' → logprob: -8.18739128112793
    6. ' ' → logprob: -10.18739128112793
    7. '    ' → logprob: -12.68739128112793
    8. ',u' → logprob: -12.68739128112793
    9. '```' → logprob: -12.93739128112793
    10. '(u' → logprob: -13.06239128112793

Token 857: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.02325817570090294
    2. ' u' → logprob: -3.7732582092285156
    3. '   ' → logprob: -12.023258209228516
    4. '       ' → logprob: -12.273258209228516
    5. '	u' → logprob: -14.023258209228516
    6. '    ' → logprob: -15.523258209228516
    7. 'import' → logprob: -15.898258209228516
    8. ' ' → logprob: -15.898258209228516
    9. '(u' → logprob: -16.273258209228516
    10. 'x' → logprob: -16.398258209228516

Token 858: ' On' (ID: 2160)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0026562742423266172
    2. ' u' → logprob: -6.25265645980835
    3. '   ' → logprob: -7.37765645980835
    4. '       ' → logprob: -9.377655982971191
    5. '	u' → logprob: -12.752655982971191
    6. ' ' → logprob: -13.002655982971191
    7. '    ' → logprob: -13.502655982971191
    8. '        
' → logprob: -13.752655982971191
    9. '```' → logprob: -13.752655982971191
    10. '    
' → logprob: -13.877655982971191

Token 859: ' lit' (ID: 11980)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.018334772437810898
    2. ' u' → logprob: -4.018334865570068
    3. '   ' → logprob: -9.39333438873291
    4. 's' → logprob: -10.76833438873291
    5. ',u' → logprob: -11.01833438873291
    6. '       ' → logprob: -11.51833438873291
    7. ',' → logprob: -11.64333438873291
    8. '=u' → logprob: -11.76833438873291
    9. '	u' → logprob: -11.89333438873291
    10. 't' → logprob: -12.89333438873291

Token 860: ' chaque' (ID: 21194)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.033958371728658676
    2. ' u' → logprob: -3.4089584350585938
    3. '(u' → logprob: -8.533958435058594
    4. 's' → logprob: -10.533958435058594
    5. 't' → logprob: -10.908958435058594
    6. 'l' → logprob: -11.158958435058594
    7. '   ' → logprob: -11.533958435058594
    8. 'a' → logprob: -11.658958435058594
    9. ' ' → logprob: -11.783958435058594
    10. '	u' → logprob: -11.783958435058594

Token 861: ' ar' (ID: 646)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.011538517661392689
    2. ' u' → logprob: -4.511538505554199
    3. 'line' → logprob: -8.3865385055542
    4. ' line' → logprob: -8.7615385055542
    5. 'ligne' → logprob: -9.7615385055542
    6. '(u' → logprob: -11.7615385055542
    7. '   ' → logprob: -11.7615385055542
    8. ' ' → logprob: -11.8865385055542
    9. 'l' → logprob: -11.8865385055542
    10. ' ligne' → logprob: -12.8865385055542

Token 862: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.3724035620689392
    2. 'u' → logprob: -1.497403621673584
    3. 'r' → logprob: -3.247403621673584
    4. 'te' → logprob: -4.747403621673584
    5. 't' → logprob: -5.122403621673584
    6. 'ée' → logprob: -5.497403621673584
    7. 'rée' → logprob: -5.497403621673584
    8. 'té' → logprob: -5.872403621673584
    9. 'é' → logprob: -5.872403621673584
    10. 'être' → logprob: -5.997403621673584

Token 863: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2928730249404907
    2. 'u' → logprob: -1.4178730249404907
    3. ',' → logprob: -1.5428730249404907
    4. ' u' → logprob: -1.6678730249404907
    5. '(u' → logprob: -2.792872905731201
    6. ',u' → logprob: -4.667872905731201
    7. ' =' → logprob: -5.917872905731201
    8. '   ' → logprob: -6.792872905731201
    9. '(' → logprob: -6.917872905731201
    10. '=' → logprob: -7.042872905731201

Token 864: ' grap' (ID: 60955)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04377252608537674
    2. ' input' → logprob: -3.2937724590301514
    3. 'code' → logprob: -6.0437726974487305
    4. 'u' → logprob: -7.4187726974487305
    5. '_input' → logprob: -7.4187726974487305
    6. 'sys' → logprob: -7.6687726974487305
    7. ' code' → logprob: -8.29377269744873
    8. 'la' → logprob: -8.66877269744873
    9. 'entrée' → logprob: -8.79377269744873
    10. 'l' → logprob: -8.91877269744873

Token 865: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -1.0366941690444946
    2. 'âce' → logprob: -2.036694049835205
    3. 'ève' → logprob: -2.161694049835205
    4. 'ège' → logprob: -2.536694049835205
    5. 'ée' → logprob: -3.161694049835205
    6. '_' → logprob: -3.286694049835205
    7. 'é' → logprob: -3.286694049835205
    8. 'èche' → logprob: -3.411694049835205
    9. 'ne' → logprob: -3.911694049835205
    10. 'êche' → logprob: -4.036694049835205

Token 866: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9821986556053162
    2. '       ' → logprob: -0.9821986556053162
    3. ' u' → logprob: -1.857198715209961
    4. 'u' → logprob: -2.732198715209961
    5. ',u' → logprob: -3.982198715209961
    6. '(u' → logprob: -5.232198715209961
    7. '   ' → logprob: -5.607198715209961
    8. ' ,' → logprob: -6.857198715209961
    9. '	u' → logprob: -8.607198715209961
    10. '[u' → logprob: -8.857198715209961

Token 867: ' comme' (ID: 7971)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6478563547134399
    2. ' u' → logprob: -0.7728563547134399
    3. '       ' → logprob: -4.39785623550415
    4. '   ' → logprob: -6.02285623550415
    5. '	u' → logprob: -9.272856712341309
    6. 't' → logprob: -10.335356712341309
    7. '           ' → logprob: -10.397856712341309
    8. ' ' → logprob: -10.522856712341309
    9. 'a' → logprob: -10.522856712341309
    10. 'x' → logprob: -10.710356712341309

Token 868: ' précéd' (ID: 55435)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.23845240473747253
    2. ' u' → logprob: -2.363452434539795
    3. 'int' → logprob: -4.113452434539795
    4. '(u' → logprob: -4.113452434539795
    5. 'input' → logprob: -4.238452434539795
    6. 'sys' → logprob: -4.363452434539795
    7. 'v' → logprob: -4.738452434539795
    8. 'a' → logprob: -4.988452434539795
    9. '```' → logprob: -5.738452434539795
    10. 'avant' → logprob: -5.863452434539795

Token 869: 'emment' (ID: 58019)
  Prédit: 'emment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emment' → logprob: -0.8658536672592163
    2. 'é' → logprob: -2.240853786468506
    3. 'ément' → logprob: -2.865853786468506
    4. 'iquement' → logprob: -3.365853786468506
    5. '```' → logprob: -3.490853786468506
    6. 'ins' → logprob: -3.740853786468506
    7. 'ente' → logprob: -3.740853786468506
    8. 'à' → logprob: -3.865853786468506
    9. 'que' → logprob: -3.865853786468506
    10. '`' → logprob: -3.865853786468506

Token 870: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7100769877433777
    2. ' u' → logprob: -1.0850770473480225
    3. 'u' → logprob: -1.8350770473480225
    4. ',' → logprob: -5.335076808929443
    5. '   ' → logprob: -5.835076808929443
    6. ',u' → logprob: -6.835076808929443
    7. '(u' → logprob: -7.085076808929443
    8. '	u' → logprob: -8.085077285766602
    9. '<|end|>' → logprob: -8.085077285766602
    10. ':' → logprob: -9.335077285766602

Token 871: ' mais' (ID: 2899)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.07868959754705429
    2. 'u' → logprob: -2.7036895751953125
    3. '       ' → logprob: -4.9536895751953125
    4. '   ' → logprob: -6.4536895751953125
    5. '	u' → logprob: -9.703689575195312
    6. '    ' → logprob: -12.578689575195312
    7. '           ' → logprob: -12.578689575195312
    8. ' ' → logprob: -12.703689575195312
    9. '```' → logprob: -13.578689575195312
    10. '(u' → logprob: -13.578689575195312

Token 872: ' potent' (ID: 35668)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.26629993319511414
    2. ' u' → logprob: -1.7662999629974365
    3. '       ' → logprob: -2.8912999629974365
    4. '   ' → logprob: -5.641299724578857
    5. '	u' → logprob: -7.266299724578857
    6. '(u' → logprob: -7.516299724578857
    7. ' with' → logprob: -7.891299724578857
    8. ' on' → logprob: -8.016300201416016
    9. ' avec' → logprob: -8.516300201416016
    10. ' que' → logprob: -8.891300201416016

Token 873: 'iellement' (ID: 70958)
  Prédit: 'iellement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iellement' → logprob: -0.10621099919080734
    2. 'ent' → logprob: -2.856210947036743
    3. '       ' → logprob: -4.481211185455322
    4. '   ' → logprob: -4.981211185455322
    5. 'iquement' → logprob: -5.356211185455322
    6. 'ial' → logprob: -5.606211185455322
    7. 'ential' → logprob: -6.106211185455322
    8. 'ière' → logprob: -6.231211185455322
    9. 'uellement' → logprob: -6.356211185455322
    10. 'ently' → logprob: -6.731211185455322

Token 874: ' avec' (ID: 3937)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.266258716583252
    2. 'avec' → logprob: -1.641258716583252
    3. ' en' → logprob: -2.266258716583252
    4. 'u' → logprob: -2.391258716583252
    5. ' avec' → logprob: -2.766258716583252
    6. 'sans' → logprob: -2.891258716583252
    7. '   ' → logprob: -3.016258716583252
    8. '       ' → logprob: -3.641258716583252
    9. 'with' → logprob: -3.766258716583252
    10. ' with' → logprob: -3.891258716583252

Token 875: ' des' (ID: 731)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0051937103271484
    2. 'plus' → logprob: -1.7551937103271484
    3. 'des' → logprob: -1.8801937103271484
    4. 'une' → logprob: -2.5051937103271484
    5. 'de' → logprob: -3.0051937103271484
    6. ' des' → logprob: -3.1301937103271484
    7. 'diff' → logprob: -3.3801937103271484
    8. 'l' → logprob: -3.8801937103271484
    9. 'd' → logprob: -4.130193710327148
    10. 'un' → logprob: -4.380193710327148

Token 876: ' informations' (ID: 33951)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.7474595308303833
    2. 'param' → logprob: -1.9974595308303833
    3. 'car' → logprob: -2.2474594116210938
    4. 'mod' → logprob: -2.3724594116210938
    5. 'u' → logprob: -2.6224594116210938
    6. 'conditions' → logprob: -3.2474594116210938
    7. 'restr' → logprob: -3.4974594116210938
    8. 'dist' → logprob: -3.6224594116210938
    9. 'ét' → logprob: -3.8724594116210938
    10. 'actions' → logprob: -3.9974594116210938

Token 877: ' supplémentaires' (ID: 99346)
  Prédit: ' supplémentaires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supplémentaires' → logprob: -0.7371536493301392
    2. 'u' → logprob: -2.2371535301208496
    3. 'import' → logprob: -2.7371535301208496
    4. 'compl' → logprob: -2.9871535301208496
    5. '   ' → logprob: -2.9871535301208496
    6. 'supp' → logprob: -3.1121535301208496
    7. 'sur' → logprob: -3.3621535301208496
    8. 'sup' → logprob: -3.4871535301208496
    9. 'plus' → logprob: -3.6121535301208496
    10. ' complémentaires' → logprob: -3.9871535301208496

Token 878: '
' (ID: 198)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5687706470489502
    2. 'u' → logprob: -1.0687706470489502
    3. '       ' → logprob: -2.56877064704895
    4. '(u' → logprob: -5.318770408630371
    5. ',' → logprob: -5.693770408630371
    6. ',u' → logprob: -5.943770408630371
    7. '   ' → logprob: -6.943770408630371
    8. '<|end|>' → logprob: -7.068770408630371
    9. '	u' → logprob: -8.193770408630371
    10. ':' → logprob: -8.818770408630371

Token 879: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2817140817642212
    2. ' u' → logprob: -1.6567140817642212
    3. 'u' → logprob: -3.0317139625549316
    4. '   ' → logprob: -5.656713962554932
    5. '(u' → logprob: -6.156713962554932
    6. ',' → logprob: -8.28171443939209
    7. '	u' → logprob: -8.53171443939209
    8. ',u' → logprob: -8.78171443939209
    9. '<|end|>' → logprob: -9.53171443939209
    10. ' ' → logprob: -10.15671443939209

Token 880: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.013984965160489082
    2. ' u' → logprob: -4.3889851570129395
    3. '       ' → logprob: -7.1389851570129395
    4. '   ' → logprob: -7.3889851570129395
    5. 't' → logprob: -11.388984680175781
    6. ',' → logprob: -11.513984680175781
    7. '	u' → logprob: -11.638984680175781
    8. ' ' → logprob: -12.638984680175781
    9. 'x' → logprob: -12.638984680175781
    10. '(u' → logprob: -13.013984680175781

Token 881: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030197695014066994
    2. ',v' → logprob: -8.2503023147583
    3. ' ,' → logprob: -10.1253023147583
    4. 'v' → logprob: -15.2503023147583
    5. ',u' → logprob: -15.2503023147583
    6. ' v' → logprob: -17.250301361083984
    7. ',
' → logprob: -17.625301361083984
    8. '‌,' → logprob: -17.750301361083984
    9. '=' → logprob: -18.000301361083984
    10. '<|end|>' → logprob: -18.250301361083984

Token 882: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0076065086759626865
    2. ' v' → logprob: -4.882606506347656
    3. '	v' → logprob: -15.632606506347656
    4. '<|end|>' → logprob: -16.007606506347656
    5. 'u' → logprob: -16.882606506347656
    6. ',v' → logprob: -17.507606506347656
    7. ',' → logprob: -17.882606506347656
    8. '   ' → logprob: -18.507606506347656
    9. '_v' → logprob: -19.132606506347656
    10. ' ' → logprob: -19.132606506347656

Token 883: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.869017852295656e-06
    2. ' ,' → logprob: -12.250006675720215
    3. '=' → logprob: -13.750006675720215
    4. ',v' → logprob: -15.250006675720215
    5. ',u' → logprob: -15.375006675720215
    6. ',a' → logprob: -16.00000762939453
    7. '_,' → logprob: -16.00000762939453
    8. 'b' → logprob: -16.87500762939453
    9. ',w' → logprob: -17.25000762939453
    10. ' =' → logprob: -17.25000762939453

Token 884: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005336135509423912
    2. ' a' → logprob: -7.625533580780029
    3. 'c' → logprob: -11.125534057617188
    4. 'u' → logprob: -11.500534057617188
    5. 'b' → logprob: -11.875534057617188
    6. 't' → logprob: -12.813034057617188
    7. 's' → logprob: -12.938034057617188
    8. 'A' → logprob: -13.313034057617188
    9. ' ' → logprob: -14.500534057617188
    10. '1' → logprob: -14.625534057617188

Token 885: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.431207682704553e-05
    2. ' ,' → logprob: -10.000054359436035
    3. '=' → logprob: -12.000054359436035
    4. ',b' → logprob: -13.750054359436035
    5. ',v' → logprob: -14.625054359436035
    6. '_,' → logprob: -15.000054359436035
    7. 'b' → logprob: -15.500054359436035
    8. ' =' → logprob: -15.500054359436035
    9. '<|end|>' → logprob: -15.750054359436035
    10. ',a' → logprob: -16.50005340576172

Token 886: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006277294596657157
    2. ' b' → logprob: -7.375627517700195
    3. ' ' → logprob: -14.625627517700195
    4. 'a' → logprob: -15.375627517700195
    5. '<|end|>' → logprob: -15.750627517700195
    6. 's' → logprob: -16.750627517700195
    7. '    ' → logprob: -17.250627517700195
    8. '   ' → logprob: -17.625627517700195
    9. '  ' → logprob: -17.625627517700195
    10. 'u' → logprob: -17.750627517700195

Token 887: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. ',' → logprob: -17.76104736328125
    4. ' ' → logprob: -18.38604736328125
    5. ')' → logprob: -19.01104736328125
    6. '=

' → logprob: -19.63604736328125
    7. '＝' → logprob: -19.76104736328125
    8. ')=' → logprob: -20.01104736328125
    9. '=
' → logprob: -20.13604736328125
    10. '   ' → logprob: -20.63604736328125

Token 888: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.00861468818038702
    2. 'map' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.883615493774414
    4. '(map' → logprob: -17.758615493774414
    5. ' m' → logprob: -18.133615493774414
    6. ' mapa' → logprob: -18.383615493774414
    7. '	map' → logprob: -18.508615493774414
    8. ' ' → logprob: -18.508615493774414
    9. '.map' → logprob: -18.633615493774414
    10. 'm' → logprob: -18.633615493774414

Token 889: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010568885772954673
    2. 'int' → logprob: -9.375105857849121
    3. '<int' → logprob: -11.375105857849121
    4. '[int' → logprob: -12.500105857849121
    5. '=int' → logprob: -12.625105857849121
    6. ',int' → logprob: -14.000105857849121
    7. ']int' → logprob: -14.500105857849121
    8. ' (' → logprob: -14.875105857849121
    9. '(' → logprob: -15.250105857849121
    10. ' int' → logprob: -15.750105857849121

Token 890: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1661537140607834
    2. ',input' → logprob: -1.9161536693572998
    3. '(input' → logprob: -5.291153907775879
    4. ',int' → logprob: -7.541153907775879
    5. '(' → logprob: -8.416153907775879
    6. 'input' → logprob: -9.416153907775879
    7. '(int' → logprob: -10.916153907775879
    8. ' ,' → logprob: -11.416153907775879
    9. '=input' → logprob: -11.791153907775879
    10. '(),' → logprob: -13.166153907775879

Token 891: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0067154900170862675
    2. ' input' → logprob: -5.006715297698975
    3. '(input' → logprob: -16.381715774536133
    4. 'int' → logprob: -17.506715774536133
    5. 'import' → logprob: -19.006715774536133
    6. '<input' → logprob: -19.131715774536133
    7. '=input' → logprob: -19.881715774536133
    8. ',input' → logprob: -19.881715774536133
    9. '_input' → logprob: -20.506715774536133
    10. '	input' → logprob: -20.881715774536133

Token 892: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -16.625
    3. ' ().' → logprob: -17.25
    4. '.' → logprob: -19.5
    5. '>().' → logprob: -19.875
    6. '.split' → logprob: -20.125
    7. '()).' → logprob: -21.25
    8. ').' → logprob: -21.25
    9. '()].' → logprob: -22.125
    10. '().
' → logprob: -22.5

Token 893: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.125
    3. 'spl' → logprob: -17.625
    4. '(split' → logprob: -18.75
    5. '.split' → logprob: -20.75
    6. 'strip' → logprob: -20.75
    7. 's' → logprob: -22.25
    8. 'skip' → logprob: -22.5
    9. 'plit' → logprob: -22.875
    10. '_split' → logprob: -23.125

Token 894: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.021123437210917473
    2. ')' → logprob: -4.27112340927124
    3. '()' → logprob: -5.02112340927124
    4. '())
' → logprob: -8.021123886108398
    5. '(' → logprob: -13.021123886108398
    6. ' ())' → logprob: -13.021123886108398
    7. '())
' → logprob: -13.521123886108398
    8. '())

' → logprob: -13.896123886108398
    9. '()
' → logprob: -14.021123886108398
    10. ' )' → logprob: -14.146123886108398

Token 895: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05373761057853699
    2. 'u' → logprob: -3.5537376403808594
    3. '	u' → logprob: -4.553737640380859
    4. '   ' → logprob: -4.678737640380859
    5. ' u' → logprob: -6.303737640380859
    6. '<|end|>' → logprob: -6.553737640380859
    7. ' ' → logprob: -8.17873764038086
    8. '        
' → logprob: -9.05373764038086
    9. '	   ' → logprob: -9.92873764038086
    10. '```' → logprob: -10.55373764038086

Token 896: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.07733756303787231
    2. '       ' → logprob: -3.0773375034332275
    3. ' u' → logprob: -3.5773375034332275
    4. '   ' → logprob: -9.077337265014648
    5. 'for' → logprob: -9.702337265014648
    6. '	u' → logprob: -9.952337265014648
    7. ' for' → logprob: -10.077337265014648
    8. 'a' → logprob: -10.202337265014648
    9. 'G' → logprob: -10.327337265014648
    10. ' if' → logprob: -11.702337265014648

Token 897: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.015131485648453236
    2. '-=' → logprob: -4.39013147354126
    3. '-' → logprob: -6.26513147354126
    4. ',' → logprob: -7.51513147354126
    5. ' ' → logprob: -9.890131950378418
    6. ' -' → logprob: -10.390131950378418
    7. '   ' → logprob: -10.390131950378418
    8. '       ' → logprob: -11.140131950378418
    9. ' ,' → logprob: -11.765131950378418
    10. ')' → logprob: -11.890131950378418

Token 898: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -16.625015258789062
    4. '0' → logprob: -19.750015258789062
    5. '   ' → logprob: -20.500015258789062
    6. '```' → logprob: -20.625015258789062
    7. '１' → logprob: -21.125015258789062
    8. '2' → logprob: -21.375015258789062
    9. '۱' → logprob: -22.250015258789062
    10. '<|end|>' → logprob: -22.562515258789062

Token 899: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '<|end|>' → logprob: -20.125
    4. '```' → logprob: -22.125
    5. '１' → logprob: -22.5
    6. '2' → logprob: -22.625
    7. '0' → logprob: -22.875
    8. '১' → logprob: -23.125
    9. '१' → logprob: -23.125
    10. 'user' → logprob: -23.125

Token 900: '
' (ID: 198)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.39039599895477295
    2. '       ' → logprob: -1.140395998954773
    3. ' v' → logprob: -5.7653961181640625
    4. '	v' → logprob: -8.515396118164062
    5. ',v' → logprob: -9.015396118164062
    6. ',' → logprob: -10.390396118164062
    7. '   ' → logprob: -11.140396118164062
    8. ' ' → logprob: -12.390396118164062
    9. '      ' → logprob: -12.390396118164062
    10. '	' → logprob: -13.265396118164062

Token 901: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20284880697727203
    2. 'v' → logprob: -1.7028487920761108
    3. ' v' → logprob: -6.5778489112854
    4. '	v' → logprob: -10.327848434448242
    5. ',v' → logprob: -11.827848434448242
    6. ',' → logprob: -13.452848434448242
    7. ' ' → logprob: -14.702848434448242
    8. '      ' → logprob: -14.702848434448242
    9. '   ' → logprob: -14.827848434448242
    10. '	' → logprob: -15.577848434448242

Token 902: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -6.2729995988775045e-06
    2. ' v' → logprob: -12.000006675720215
    3. '       ' → logprob: -17.6250057220459
    4. '   ' → logprob: -18.3750057220459
    5. '	v' → logprob: -18.5000057220459
    6. 's' → logprob: -20.5000057220459
    7. '(v' → logprob: -21.6250057220459
    8. 't' → logprob: -21.7500057220459
    9. 'b' → logprob: -21.7500057220459
    10. '           ' → logprob: -22.0000057220459

Token 903: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.2649632692337036
    2. '-=' → logprob: -1.5149632692337036
    3. '-' → logprob: -4.389963150024414
    4. '       ' → logprob: -8.514963150024414
    5. ',' → logprob: -9.514963150024414
    6. '.' → logprob: -9.889963150024414
    7. '<|end|>' → logprob: -10.139963150024414
    8. ')' → logprob: -10.264963150024414
    9. '=' → logprob: -10.514963150024414
    10. '#' → logprob: -10.889963150024414

Token 904: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '<|end|>' → logprob: -15.250335693359375
    4. '0' → logprob: -17.875335693359375
    5. 'v' → logprob: -18.875335693359375
    6. '-' → logprob: -19.000335693359375
    7. '2' → logprob: -19.375335693359375
    8. '   ' → logprob: -19.375335693359375
    9. '```' → logprob: -19.937835693359375
    10. '۱' → logprob: -20.437835693359375

Token 905: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. 'v' → logprob: -16.250003814697266
    4. '<|end|>' → logprob: -16.875003814697266
    5. '0' → logprob: -17.000003814697266
    6. 'int' → logprob: -17.375003814697266
    7. '2' → logprob: -17.750003814697266
    8. '```' → logprob: -18.687503814697266
    9. '-' → logprob: -19.000003814697266
    10. '
' → logprob: -20.375003814697266

Token 906: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032513891346752644
    2. ' for' → logprob: -6.628251552581787
    3. 'for' → logprob: -6.753251552581787
    4. '   ' → logprob: -7.753251552581787
    5. 'G' → logprob: -8.878251075744629
    6. ' G' → logprob: -10.753251075744629
    7. '<|end|>' → logprob: -10.753251075744629
    8. 'if' → logprob: -10.878251075744629
    9. '        
' → logprob: -10.878251075744629
    10. ' if' → logprob: -10.878251075744629

Token 907: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07293758541345596
    2. 'G' → logprob: -2.822937488555908
    3. '   ' → logprob: -5.197937488555908
    4. 'for' → logprob: -6.197937488555908
    5. '#' → logprob: -6.822937488555908
    6. ' for' → logprob: -7.322937488555908
    7. '<|end|>' → logprob: -7.447937488555908
    8. ' G' → logprob: -7.572937488555908
    9. 'if' → logprob: -9.197937965393066
    10. ' #' → logprob: -9.572937965393066

Token 908: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.47709089517593384
    2. 'for' → logprob: -0.9770908951759338
    3. 'if' → logprob: -6.602090835571289
    4. '   ' → logprob: -6.602090835571289
    5. ' for' → logprob: -8.477090835571289
    6. '       ' → logprob: -9.977090835571289
    7. ' G' → logprob: -10.602090835571289
    8. '#' → logprob: -12.227090835571289
    9. 'def' → logprob: -13.727090835571289
    10. '```' → logprob: -13.727090835571289

Token 909: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.1637164789135568e-05
    2. '[v' → logprob: -11.375011444091797
    3. 'u' → logprob: -16.000011444091797
    4. '[a' → logprob: -18.750011444091797
    5. '[' → logprob: -18.875011444091797
    6. '   ' → logprob: -19.250011444091797
    7. '[i' → logprob: -19.250011444091797
    8. '[user' → logprob: -19.500011444091797
    9. '
' → logprob: -19.625011444091797
    10. ' [' → logprob: -19.750011444091797

Token 910: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.13380104303359985
    2. '.append' → logprob: -2.258800983428955
    3. ').' → logprob: -4.008800983428955
    4. '.' → logprob: -6.008800983428955
    5. '   ' → logprob: -9.758801460266113
    6. '[' → logprob: -10.508801460266113
    7. '[u' → logprob: -11.383801460266113
    8. '
' → logprob: -11.633801460266113
    9. '}.' → logprob: -12.008801460266113
    10. ' .' → logprob: -12.258801460266113

Token 911: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: 0.0
    2. ' append' → logprob: -17.375
    3. '.append' → logprob: -18.125
    4. 'appen' → logprob: -19.0
    5. 'app' → logprob: -19.875
    6. 'extend' → logprob: -21.875
    7. '	append' → logprob: -22.125
    8. '_append' → logprob: -22.25
    9. 'Append' → logprob: -22.625
    10. 'add' → logprob: -24.375

Token 912: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00043949027894996107
    2. '(v' → logprob: -7.750439643859863
    3. '(' → logprob: -11.875439643859863
    4. '(((' → logprob: -13.625439643859863
    5. ' ((' → logprob: -14.500439643859863
    6. ' (' → logprob: -17.125438690185547
    7. '[(' → logprob: -17.250438690185547
    8. '   ' → logprob: -17.375438690185547
    9. '(u' → logprob: -17.375438690185547
    10. '(
' → logprob: -18.125438690185547

Token 913: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.009808976203203201
    2. '(v' → logprob: -4.6348090171813965
    3. ' v' → logprob: -10.884808540344238
    4. ' (' → logprob: -11.634808540344238
    5. '((' → logprob: -11.634808540344238
    6. '(u' → logprob: -12.259808540344238
    7. '   ' → logprob: -12.509808540344238
    8. 'u' → logprob: -13.384808540344238
    9. '
' → logprob: -13.384808540344238
    10. '(' → logprob: -14.134808540344238

Token 914: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004884536610916257
    2. ',a' → logprob: -8.50048828125
    3. ' ,' → logprob: -8.87548828125
    4. ',b' → logprob: -9.62548828125
    5. ',(' → logprob: -9.75048828125
    6. ',
' → logprob: -11.75048828125
    7. ' (' → logprob: -13.12548828125
    8. '(' → logprob: -13.12548828125
    9. 'a' → logprob: -13.37548828125
    10. ',n' → logprob: -14.00048828125

Token 915: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004575969185680151
    2. ' a' → logprob: -6.129576206207275
    3. 'b' → logprob: -6.504576206207275
    4. '(a' → logprob: -7.129576206207275
    5. '(' → logprob: -10.129575729370117
    6. ' b' → logprob: -11.379575729370117
    7. '(b' → logprob: -11.379575729370117
    8. ' (' → logprob: -11.504575729370117
    9. '   ' → logprob: -12.879575729370117
    10. '1' → logprob: -13.004575729370117

Token 916: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39120641350746155
    2. '))' → logprob: -1.1412063837051392
    3. ',b' → logprob: -5.89120626449585
    4. ' ,' → logprob: -7.76620626449585
    5. '+' → logprob: -8.016206741333008
    6. ' ))' → logprob: -8.266206741333008
    7. ' +' → logprob: -8.891206741333008
    8. '+b' → logprob: -9.141206741333008
    9. '))
' → logprob: -10.016206741333008
    10. ',a' → logprob: -10.266206741333008

Token 917: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004602910950779915
    2. '1' → logprob: -6.129602909088135
    3. '0' → logprob: -6.379602909088135
    4. 'a' → logprob: -7.629602909088135
    5. 's' → logprob: -9.629603385925293
    6. 'False' → logprob: -9.879603385925293
    7. ' b' → logprob: -10.129603385925293
    8. 'True' → logprob: -10.754603385925293
    9. 'u' → logprob: -11.754603385925293
    10. ')' → logprob: -12.379603385925293

Token 918: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -9.150362166110426e-05
    2. ')' → logprob: -10.125091552734375
    3. '))
' → logprob: -10.125091552734375
    4. ' ))' → logprob: -11.500091552734375
    5. '));' → logprob: -15.500091552734375
    6. ',' → logprob: -15.750091552734375
    7. ')))' → logprob: -15.750091552734375
    8. '))

' → logprob: -15.750091552734375
    9. '       ' → logprob: -16.125091552734375
    10. '))
' → logprob: -16.500091552734375

Token 919: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 920: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 921: ' stock' (ID: 6546)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.20602671802043915
    2. '.append' → logprob: -1.7060266733169556
    3. ' append' → logprob: -5.956026554107666
    4. '<|end|>' → logprob: -6.956026554107666
    5. '.' → logprob: -7.831026554107666
    6. 'continue' → logprob: -8.831027030944824
    7. '_append' → logprob: -9.331027030944824
    8. '	append' → logprob: -9.456027030944824
    9. '   ' → logprob: -10.081027030944824
    10. '[' → logprob: -10.331027030944824

Token 922: 'e' (ID: 68)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.6372755169868469
    2. '=' → logprob: -1.1372754573822021
    3. ')' → logprob: -2.637275457382202
    4. ' =' → logprob: -3.887275457382202
    5. ',' → logprob: -4.137275695800781
    6. '       ' → logprob: -4.512275695800781
    7. ' (' → logprob: -5.137275695800781
    8. 'er' → logprob: -5.887275695800781
    9. '(' → logprob: -5.887275695800781
    10. '#' → logprob: -6.137275695800781

Token 923: ' l' (ID: 305)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.42970535159111023
    2. '(' → logprob: -1.9297053813934326
    3. '(a' → logprob: -2.1797053813934326
    4. ')' → logprob: -3.6797053813934326
    5. '(v' → logprob: -4.1797051429748535
    6. '(n' → logprob: -4.1797051429748535
    7. '<|end|>' → logprob: -4.5547051429748535
    8. '(u' → logprob: -4.8047051429748535
    9. '(b' → logprob: -5.0547051429748535
    10. ',' → logprob: -5.1797051429748535

Token 924: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06336011737585068
    2. ' ,' → logprob: -3.6883602142333984
    3. ',v' → logprob: -4.938360214233398
    4. ' (' → logprob: -5.063360214233398
    5. ')' → logprob: -5.063360214233398
    6. '(' → logprob: -5.188360214233398
    7. '(v' → logprob: -5.313360214233398
    8. '(u' → logprob: -6.688360214233398
    9. ' )' → logprob: -7.313360214233398
    10. 's' → logprob: -7.813360214233398

Token 925: 'arc' (ID: 18843)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8500409126281738
    2. 'tuple' → logprob: -1.9750409126281738
    3. 'trip' → logprob: -2.100040912628174
    4. ' trip' → logprob: -2.225040912628174
    5. ' tuple' → logprob: -2.850040912628174
    6. 'u' → logprob: -3.100040912628174
    7. 'edge' → logprob: -4.725040912628174
    8. 't' → logprob: -4.850040912628174
    9. ' triple' → logprob: -4.850040912628174
    10. '3' → logprob: -4.975040912628174

Token 926: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055810555815696716
    2. ')' → logprob: -3.1808104515075684
    3. '<|end|>' → logprob: -5.430810451507568
    4. '[' → logprob: -5.805810451507568
    5. ' ,' → logprob: -6.055810451507568
    6. '),' → logprob: -6.305810451507568
    7. ',
' → logprob: -8.180810928344727
    8. '(' → logprob: -9.180810928344727
    9. ' (' → logprob: -9.555810928344727
    10. '   ' → logprob: -10.055810928344727

Token 927: ' toutes' (ID: 17502)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.045651234686374664
    2. '(a' → logprob: -4.170651435852051
    3. ')' → logprob: -4.795651435852051
    4. ' a' → logprob: -5.295651435852051
    5. ' (' → logprob: -5.295651435852051
    6. 'b' → logprob: -5.420651435852051
    7. '3' → logprob: -6.045651435852051
    8. '(' → logprob: -6.920651435852051
    9. 'l' → logprob: -7.545651435852051
    10. ' b' → logprob: -8.04565143585205

Token 928: ' ses' (ID: 6707)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9245149493217468
    2. ' trois' → logprob: -1.0495150089263916
    3. 'les' → logprob: -2.7995150089263916
    4. ' ,' → logprob: -2.9245150089263916
    5. ')' → logprob: -3.4245150089263916
    6. ' )' → logprob: -3.5495150089263916
    7. 'tro' → logprob: -4.1745147705078125
    8. '3' → logprob: -4.4245147705078125
    9. ' (' → logprob: -4.4245147705078125
    10. ' three' → logprob: -5.0495147705078125

Token 929: ' informations' (ID: 33951)
  Prédit: ' informations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' informations' → logprob: -1.092878818511963
    2. '3' → logprob: -1.717878818511963
    3. 'tro' → logprob: -2.217878818511963
    4. ' trois' → logprob: -2.467878818511963
    5. 'car' → logprob: -2.717878818511963
    6. 'infos' → logprob: -3.467878818511963
    7. 'in' → logprob: -3.592878818511963
    8. 'co' → logprob: -3.717878818511963
    9. ' ' → logprob: -3.967878818511963
    10. 'val' → logprob: -4.092878818511963

Token 930: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 931: 'v' (ID: 85)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005717403837479651
    2. ' a' → logprob: -7.6255717277526855
    3. ',' → logprob: -10.125572204589844
    4. ')' → logprob: -10.625572204589844
    5. ',a' → logprob: -11.875572204589844
    6. ')a' → logprob: -12.750572204589844
    7. '(a' → logprob: -13.375572204589844
    8. ' ' → logprob: -13.625572204589844
    9. '))' → logprob: -14.125572204589844
    10. '3' → logprob: -14.375572204589844

Token 932: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.423219696851447e-05
    2. ' ,' → logprob: -9.625083923339844
    3. ',
' → logprob: -11.750083923339844
    4. ')' → logprob: -13.500083923339844
    5. '   ' → logprob: -13.500083923339844
    6. ',n' → logprob: -13.875083923339844
    7. ',a' → logprob: -14.250083923339844
    8. '```' → logprob: -14.375083923339844
    9. '),' → logprob: -14.625083923339844
    10. '<|end|>' → logprob: -14.750083923339844

Token 933: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002805467927828431
    2. ' a' → logprob: -5.877805233001709
    3. ',' → logprob: -15.627805709838867
    4. ',a' → logprob: -15.877805709838867
    5. ')' → logprob: -16.002805709838867
    6. ')a' → logprob: -16.502805709838867
    7. '	a' → logprob: -16.752805709838867
    8. ' ' → logprob: -16.752805709838867
    9. '(a' → logprob: -18.252805709838867
    10. '   ' → logprob: -18.252805709838867

Token 934: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011844364780699834
    2. ' ,' → logprob: -9.625118255615234
    3. ',b' → logprob: -10.000118255615234
    4. ')' → logprob: -12.875118255615234
    5. ',
' → logprob: -13.625118255615234
    6. ',a' → logprob: -13.875118255615234
    7. ',v' → logprob: -14.750118255615234
    8. '),' → logprob: -14.875118255615234
    9. ',n' → logprob: -15.125118255615234
    10. '   ' → logprob: -15.625118255615234

Token 935: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029751179739832878
    2. ' b' → logprob: -3.5297510623931885
    3. ')' → logprob: -14.77975082397461
    4. ' ' → logprob: -15.40475082397461
    5. ')b' → logprob: -16.02975082397461
    6. ',' → logprob: -17.52975082397461
    7. '	b' → logprob: -18.02975082397461
    8. '   ' → logprob: -18.90475082397461
    9. '  ' → logprob: -18.90475082397461
    10. ' ' → logprob: -19.02975082397461

Token 936: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3080716346157715e-05
    2. ' )' → logprob: -11.500022888183594
    3. ')
' → logprob: -12.250022888183594
    4. '))' → logprob: -12.500022888183594
    5. ',' → logprob: -13.250022888183594
    6. '       ' → logprob: -13.750022888183594
    7. '),' → logprob: -14.125022888183594
    8. '   ' → logprob: -15.250022888183594
    9. ').' → logprob: -16.125022888183594
    10. ')#' → logprob: -16.375022888183594

Token 937: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 938: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.2266257256269455
    2. '       ' → logprob: -1.601625680923462
    3. ' G' → logprob: -6.726625919342041
    4. '   ' → logprob: -12.601625442504883
    5. '```' → logprob: -12.976625442504883
    6. '<|end|>' → logprob: -13.351625442504883
    7. '           ' → logprob: -13.476625442504883
    8. '      ' → logprob: -13.726625442504883
    9. ' ' → logprob: -14.226625442504883
    10. 'v' → logprob: -14.601625442504883

Token 939: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.999452772201039e-05
    2. '[u' → logprob: -10.500029563903809
    3. 'v' → logprob: -13.125029563903809
    4. '[' → logprob: -14.750029563903809
    5. '[w' → logprob: -17.750030517578125
    6. '
' → logprob: -18.000030517578125
    7. '```' → logprob: -18.375030517578125
    8. '[s' → logprob: -18.500030517578125
    9. ' v' → logprob: -18.500030517578125
    10. '	v' → logprob: -18.750030517578125

Token 940: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.23111601173877716
    2. '.append' → logprob: -2.1061160564422607
    3. '.' → logprob: -2.4811160564422607
    4. ').' → logprob: -7.106115818023682
    5. ' .' → logprob: -9.10611629486084
    6. '.app' → logprob: -11.23111629486084
    7. '       ' → logprob: -11.60611629486084
    8. '}.' → logprob: -11.85611629486084
    9. '           ' → logprob: -11.98111629486084
    10. ',' → logprob: -11.98111629486084

Token 941: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.125
    3. '.append' → logprob: -16.875
    4. 'appen' → logprob: -17.25
    5. '	append' → logprob: -19.25
    6. '```' → logprob: -21.875
    7. ' ' → logprob: -22.375
    8. 'appe' → logprob: -22.75
    9. '_append' → logprob: -22.75
    10. 'Append' → logprob: -22.875

Token 942: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0010367410723119974
    2. '(u' → logprob: -6.876036643981934
    3. '(' → logprob: -12.751036643981934
    4. ' (' → logprob: -14.501036643981934
    5. '(v' → logprob: -14.751036643981934
    6. '(
' → logprob: -17.25103759765625
    7. ' ((' → logprob: -17.50103759765625
    8. '```' → logprob: -17.62603759765625
    9. '   ' → logprob: -18.50103759765625
    10. 'u' → logprob: -19.25103759765625

Token 943: 'u' (ID: 84)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.03806409612298012
    2. 'u' → logprob: -3.2880640029907227
    3. ' (' → logprob: -11.163064002990723
    4. '(' → logprob: -12.413064002990723
    5. '[u' → logprob: -13.663064002990723
    6. ' u' → logprob: -14.163064002990723
    7. '   ' → logprob: -14.413064002990723
    8. '	u' → logprob: -14.538064002990723
    9. '(
' → logprob: -14.538064002990723
    10. ')' → logprob: -14.788064002990723

Token 944: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010819212911883369
    2. ',(' → logprob: -10.000107765197754
    3. ' ,' → logprob: -10.000107765197754
    4. '(' → logprob: -11.750107765197754
    5. ' (' → logprob: -12.250107765197754
    6. ')' → logprob: -14.250107765197754
    7. ',v' → logprob: -14.250107765197754
    8. ',a' → logprob: -14.375107765197754
    9. ',
' → logprob: -14.375107765197754
    10. '       ' → logprob: -14.750107765197754

Token 945: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009137284359894693
    2. ' a' → logprob: -7.000913619995117
    3. '(a' → logprob: -13.125913619995117
    4. '	a' → logprob: -15.625913619995117
    5. ',a' → logprob: -16.375913619995117
    6. '   ' → logprob: -17.750913619995117
    7. ' (' → logprob: -18.375913619995117
    8. ',' → logprob: -18.875913619995117
    9. 'а' → logprob: -19.000913619995117
    10. ''a' → logprob: -19.875913619995117

Token 946: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015074820257723331
    2. ',b' → logprob: -6.62650728225708
    3. ' ,' → logprob: -8.626507759094238
    4. ' ' → logprob: -15.001507759094238
    5. 'b' → logprob: -15.126507759094238
    6. ',a' → logprob: -15.626507759094238
    7. '	' → logprob: -15.751507759094238
    8. ',n' → logprob: -15.751507759094238
    9. '```' → logprob: -15.751507759094238
    10. ',v' → logprob: -15.876507759094238

Token 947: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024756586644798517
    2. ' b' → logprob: -6.002475738525391
    3. 'a' → logprob: -17.50247573852539
    4. '	b' → logprob: -18.12747573852539
    5. ' ' → logprob: -18.87747573852539
    6. ',b' → logprob: -19.50247573852539
    7. ',' → logprob: -20.75247573852539
    8. '   ' → logprob: -20.87747573852539
    9. ')b' → logprob: -21.50247573852539
    10. ' a' → logprob: -21.75247573852539

Token 948: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03806742653250694
    2. '))' → logprob: -3.28806734085083
    3. '       ' → logprob: -11.413067817687988
    4. ' )' → logprob: -11.413067817687988
    5. ')
' → logprob: -13.788067817687988
    6. '   ' → logprob: -13.788067817687988
    7. ')))' → logprob: -14.913067817687988
    8. ' ))' → logprob: -14.913067817687988
    9. '))
' → logprob: -15.163067817687988
    10. ')}' → logprob: -15.288067817687988

Token 949: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5024048686027527
    2. 'distance' → logprob: -2.0024049282073975
    3. 'max' → logprob: -2.2524049282073975
    4. 'state' → logprob: -3.8774049282073975
    5. '```' → logprob: -4.002404689788818
    6. 'dp' → logprob: -4.127404689788818
    7. 'INF' → logprob: -4.127404689788818
    8. 'import' → logprob: -4.377404689788818
    9. '   ' → logprob: -4.752404689788818
    10. 'S' → logprob: -4.752404689788818

Token 950: ' CD' (ID: 12178)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8799502849578857
    2. 'INF' → logprob: -1.3799502849578857
    3. 'import' → logprob: -1.7549502849578857
    4. 'dp' → logprob: -2.7549502849578857
    5. 'from' → logprob: -2.7549502849578857
    6. 'max' → logprob: -3.8799502849578857
    7. '#' → logprob: -5.879950523376465
    8. 'inf' → logprob: -5.879950523376465
    9. 'MAX' → logprob: -6.004950523376465
    10. '   ' → logprob: -6.879950523376465

Token 951: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07979230582714081
    2. '=' → logprob: -3.0797922611236572
    3. 'P' → logprob: -3.9547922611236572
    4. 'p' → logprob: -5.454792499542236
    5. 'ist' → logprob: -5.829792499542236
    6. '=[]' → logprob: -7.454792499542236
    7. 'L' → logprob: -7.704792499542236
    8. 'S' → logprob: -7.704792499542236
    9. '=[' → logprob: -7.704792499542236
    10. '=[]
' → logprob: -8.329792022705078

Token 952: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.16054174304008484
    2. '[' → logprob: -2.1605417728424072
    3. '[s' → logprob: -4.410541534423828
    4. '[(' → logprob: -4.535541534423828
    5. '[int' → logprob: -5.910541534423828
    6. '{}' → logprob: -6.535541534423828
    7. '[-' → logprob: -6.535541534423828
    8. '250' → logprob: -6.535541534423828
    9. '{' → logprob: -7.660541534423828
    10. '[n' → logprob: -8.160541534423828

Token 953: 'list' (ID: 2641)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27661216259002686
    2. 'float' → logprob: -1.6516121625900269
    3. '[-' → logprob: -4.401612281799316
    4. '[(' → logprob: -4.651612281799316
    5. '[[' → logprob: -5.151612281799316
    6. '[int' → logprob: -5.401612281799316
    7. '[]' → logprob: -6.026612281799316
    8. '0' → logprob: -6.151612281799316
    9. '(float' → logprob: -6.401612281799316
    10. '{}' → logprob: -6.401612281799316

Token 954: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.610856831073761
    2. '(range' → logprob: -0.985856831073761
    3. '()' → logprob: -2.860856771469116
    4. ']' → logprob: -5.110857009887695
    5. '[' → logprob: -5.110857009887695
    6. '(' → logprob: -5.485857009887695
    7. 'range' → logprob: -5.610857009887695
    8. 'map' → logprob: -5.860857009887695
    9. '()]' → logprob: -6.735857009887695
    10. '([' → logprob: -6.860857009887695

Token 955: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07293304055929184
    2. 'int' → logprob: -2.6979329586029053
    3. ']int' → logprob: -6.322933197021484
    4. ',int' → logprob: -7.197933197021484
    5. 'input' → logprob: -8.572933197021484
    6. '[int' → logprob: -9.322933197021484
    7. ')' → logprob: -10.197933197021484
    8. '(input' → logprob: -10.197933197021484
    9. '<int' → logprob: -10.447933197021484
    10. '=int' → logprob: -10.697933197021484

Token 956: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.34226855635643005
    2. ',input' → logprob: -1.3422685861587524
    3. ',' → logprob: -3.592268466949463
    4. 'input' → logprob: -6.967268466949463
    5. '(' → logprob: -9.842268943786621
    6. '(),' → logprob: -10.467268943786621
    7. '=input' → logprob: -11.092268943786621
    8. ' input' → logprob: -11.842268943786621
    9. ' (' → logprob: -12.967268943786621
    10. ' ,' → logprob: -12.967268943786621

Token 957: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0004324573092162609
    2. ' input' → logprob: -7.75043249130249
    3. ',input' → logprob: -13.750432014465332
    4. '(input' → logprob: -14.375432014465332
    5. ',' → logprob: -16.87543296813965
    6. ')' → logprob: -17.00043296813965
    7. '[input' → logprob: -17.87543296813965
    8. '<input' → logprob: -18.62543296813965
    9. '=input' → logprob: -18.62543296813965
    10. 'sys' → logprob: -19.12543296813965

Token 958: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011105302110081539
    2. '()' → logprob: -9.125110626220703
    3. ' ().' → logprob: -14.000110626220703
    4. '()))' → logprob: -14.500110626220703
    5. '())' → logprob: -14.875110626220703
    6. '(' → logprob: -15.375110626220703
    7. '()[' → logprob: -15.625110626220703
    8. '()
' → logprob: -17.875110626220703
    9. ' ()' → logprob: -17.875110626220703
    10. '()]' → logprob: -18.125110626220703

Token 959: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003663212701212615
    2. 'strip' → logprob: -8.7503662109375
    3. ')' → logprob: -9.0003662109375
    4. 'input' → logprob: -10.1253662109375
    5. '().' → logprob: -10.7503662109375
    6. 'read' → logprob: -11.5003662109375
    7. 'rstrip' → logprob: -12.6253662109375
    8. ' split' → logprob: -13.1253662109375
    9. ').' → logprob: -13.6253662109375
    10. '.split' → logprob: -14.1253662109375

Token 960: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.003488166257739067
    2. '()' → logprob: -6.128488063812256
    3. '())' → logprob: -7.003488063812256
    4. '))' → logprob: -8.253488540649414
    5. '()))
' → logprob: -9.253488540649414
    6. '(' → logprob: -11.253488540649414
    7. '())).' → logprob: -11.753488540649414
    8. '())))' → logprob: -12.503488540649414
    9. '()));' → logprob: -12.753488540649414
    10. '()[' → logprob: -13.378488540649414

Token 961: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008363746106624603
    2. '()]' → logprob: -5.008363723754883
    3. 'for' → logprob: -6.758363723754883
    4. ' for' → logprob: -8.008363723754883
    5. '())' → logprob: -9.883363723754883
    6. '()]
' → logprob: -10.508363723754883
    7. '()[' → logprob: -10.758363723754883
    8. '(' → logprob: -11.133363723754883
    9. ']' → logprob: -11.133363723754883
    10. '(range' → logprob: -11.883363723754883

Token 962: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00015872348740231246
    2. ' _' → logprob: -9.125158309936523
    3. '_i' → logprob: -10.375158309936523
    4. ' in' → logprob: -12.000158309936523
    5. '_in' → logprob: -12.250158309936523
    6. '_range' → logprob: -13.125158309936523
    7. '_j' → logprob: -13.750158309936523
    8. 'i' → logprob: -13.875158309936523
    9. '__' → logprob: -14.250158309936523
    10. '_a' → logprob: -14.875158309936523

Token 963: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09647233039140701
    2. 'in' → logprob: -2.5964722633361816
    3. '(range' → logprob: -4.471472263336182
    4. ' range' → logprob: -5.846472263336182
    5. ' in' → logprob: -6.471472263336182
    6. '_' → logprob: -6.971472263336182
    7. '_range' → logprob: -8.59647274017334
    8. 'i' → logprob: -8.72147274017334
    9. '	range' → logprob: -9.22147274017334
    10. '(n' → logprob: -9.47147274017334

Token 964: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026169343618676066
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -15.250261306762695
    4. '	range' → logprob: -16.375261306762695
    5. 'r' → logprob: -17.375261306762695
    6. 'rang' → logprob: -18.125261306762695
    7. ' ' → logprob: -18.500261306762695
    8. '_' → logprob: -18.500261306762695
    9. '_range' → logprob: -19.000261306762695
    10. '   ' → logprob: -19.000261306762695

Token 965: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.46022891998291016
    2. '(m' → logprob: -1.2102289199829102
    3. '(s' → logprob: -2.83522891998291
    4. '(' → logprob: -4.46022891998291
    5. '((' → logprob: -8.46022891998291
    6. 'm' → logprob: -9.46022891998291
    7. 'n' → logprob: -9.71022891998291
    8. 's' → logprob: -10.71022891998291
    9. '(range' → logprob: -10.71022891998291
    10. '(a' → logprob: -11.58522891998291

Token 966: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008636199869215488
    2. ']' → logprob: -4.758635997772217
    3. ' ]' → logprob: -11.383636474609375
    4. '()]' → logprob: -12.633636474609375
    5. ')]
' → logprob: -12.883636474609375
    6. ')' → logprob: -13.758636474609375
    7. '])]' → logprob: -13.758636474609375
    8. ' )' → logprob: -14.383636474609375
    9. ']]' → logprob: -15.133636474609375
    10. '}]' → logprob: -15.258636474609375

Token 967: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2551138699054718
    2. 'dist' → logprob: -2.5051138401031494
    3. 'dp' → logprob: -2.7551138401031494
    4. 'distance' → logprob: -3.8801138401031494
    5. '#' → logprob: -4.0051140785217285
    6. 'for' → logprob: -4.2551140785217285
    7. 'cost' → logprob: -5.2551140785217285
    8. '
' → logprob: -5.5051140785217285
    9. 'def' → logprob: -6.1301140785217285
    10. 'Q' → logprob: -6.2551140785217285

Token 968: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48663821816444397
    2. 'for' → logprob: -1.6116381883621216
    3. '<|end|>' → logprob: -2.611638307571411
    4. 'continue' → logprob: -4.111638069152832
    5. '
' → logprob: -4.236638069152832
    6. 'CD' → logprob: -4.361638069152832
    7. 'Cd' → logprob: -4.486638069152832
    8. ' for' → logprob: -4.611638069152832
    9. 'C' → logprob: -5.111638069152832
    10. 'Continue' → logprob: -5.236638069152832

Token 969: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04322846606373787
    2. '_i' → logprob: -3.1682283878326416
    3. 'i' → logprob: -9.793228149414062
    4. ' _' → logprob: -10.293228149414062
    5. '_j' → logprob: -10.293228149414062
    6. '_c' → logprob: -10.793228149414062
    7. '_s' → logprob: -11.418228149414062
    8. '_cost' → logprob: -12.168228149414062
    9. '_range' → logprob: -12.293228149414062
    10. '_color' → logprob: -12.668228149414062

Token 970: ' sommet' (ID: 130502)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5943679809570312
    2. '_i' → logprob: -0.8443679809570312
    3. 'i' → logprob: -4.094367980957031
    4. ' i' → logprob: -6.844367980957031
    5. ' _' → logprob: -8.219367980957031
    6. '_j' → logprob: -8.719367980957031
    7. '_s' → logprob: -10.094367980957031
    8. '_n' → logprob: -11.594367980957031
    9. '_c' → logprob: -11.844367980957031
    10. '_
' → logprob: -12.219367980957031

Token 971: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 972: ' on' (ID: 402)
  Prédit: 'CD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.6789692640304565
    2. '_' → logprob: -1.9289692640304565
    3. ' CD' → logprob: -2.178969383239746
    4. 'cd' → logprob: -2.553969383239746
    5. '_cd' → logprob: -2.678969383239746
    6. 'input' → logprob: -3.803969383239746
    7. '_CD' → logprob: -4.178969383239746
    8. ' input' → logprob: -4.303969383239746
    9. ' _' → logprob: -4.678969383239746
    10. ' cd' → logprob: -4.678969383239746

Token 973: ' lit' (ID: 11980)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2042949199676514
    2. 'continue' → logprob: -1.5792949199676514
    3. 'l' → logprob: -1.7042949199676514
    4. ' continue' → logprob: -2.4542949199676514
    5. 'read' → logprob: -2.8292949199676514
    6. 'contin' → logprob: -3.4542949199676514
    7. ' for' → logprob: -3.4542949199676514
    8. ' read' → logprob: -4.2042951583862305
    9. 'range' → logprob: -4.3292951583862305
    10. 'lis' → logprob: -4.7042951583862305

Token 974: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1732814908027649
    2. 'input' → logprob: -2.04828143119812
    3. ' list' → logprob: -3.92328143119812
    4. 'map' → logprob: -5.673281669616699
    5. '(input' → logprob: -6.298281669616699
    6. ' input' → logprob: -6.423281669616699
    7. '(list' → logprob: -6.798281669616699
    8. 'int' → logprob: -7.298281669616699
    9. '[' → logprob: -7.673281669616699
    10. '(' → logprob: -7.798281669616699

Token 975: ' paire' (ID: 148856)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.9510050415992737
    2. 'list' → logprob: -1.076004981994629
    3. 'ligne' → logprob: -1.701004981994629
    4. 'line' → logprob: -3.201004981994629
    5. 'l' → logprob: -3.951004981994629
    6. ' list' → logprob: -4.576004981994629
    7. ' line' → logprob: -5.201004981994629
    8. ' liste' → logprob: -5.326004981994629
    9. 'range' → logprob: -5.576004981994629
    10. ' ligne' → logprob: -7.201004981994629

Token 976: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.24767060577869415
    2. '<|end|>' → logprob: -2.4976706504821777
    3. '(' → logprob: -3.8726706504821777
    4. 'd' → logprob: -4.247670650482178
    5. 'des' → logprob: -4.247670650482178
    6. '(C' → logprob: -4.622670650482178
    7. 'time' → logprob: -4.622670650482178
    8. ' de' → logprob: -4.997670650482178
    9. '(cost' → logprob: -5.122670650482178
    10. 's' → logprob: -5.122670650482178

Token 977: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.03191501647233963
    2. 'int' → logprob: -3.9069149494171143
    3. 'ints' → logprob: -4.781915187835693
    4. 'inte' → logprob: -5.906915187835693
    5. ''ent' → logprob: -9.031914710998535
    6. 'val' → logprob: -10.281914710998535
    7. 'enti' → logprob: -10.906914710998535
    8. 'ents' → logprob: -11.656914710998535
    9. 'e' → logprob: -12.281914710998535
    10. '’ent' → logprob: -12.281914710998535

Token 978: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.029247820377349854
    2. 't' → logprob: -3.654247760772705
    3. 'ières' → logprob: -6.529247760772705
    4. 'ier' → logprob: -7.654247760772705
    5. 'rée' → logprob: -8.154248237609863
    6. 'tiers' → logprob: -8.529248237609863
    7. 'ités' → logprob: -8.654248237609863
    8. 'tries' → logprob: -9.654248237609863
    9. 'r' → logprob: -10.029248237609863
    10. 'ées' → logprob: -10.029248237609863

Token 979: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 980: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.016695499420166
    2. 'cd' → logprob: -1.391695499420166
    3. 'CD' → logprob: -2.141695499420166
    4. 'C' → logprob: -2.891695499420166
    5. 'x' → logprob: -2.891695499420166
    6. ')' → logprob: -3.641695499420166
    7. '_cd' → logprob: -3.641695499420166
    8. 'Cd' → logprob: -4.016695499420166
    9. 'cost' → logprob: -4.266695499420166
    10. 'input' → logprob: -4.266695499420166

Token 981: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4712728261947632
    2. 'ost' → logprob: -1.4712728261947632
    3. 'd' → logprob: -2.0962729454040527
    4. '0' → logprob: -2.3462729454040527
    5. '[' → logprob: -2.7212729454040527
    6. '1' → logprob: -2.8462729454040527
    7. ' =' → logprob: -2.8462729454040527
    8. ')' → logprob: -3.4712729454040527
    9. '=' → logprob: -3.4712729454040527
    10. '[i' → logprob: -4.096272945404053

Token 982: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.052377623040229e-05
    2. ' d' → logprob: -10.625070571899414
    3. 't' → logprob: -11.125070571899414
    4. 'p' → logprob: -12.500070571899414
    5. '
' → logprob: -12.625070571899414
    6. 'e' → logprob: -12.687570571899414
    7. 'r' → logprob: -13.312570571899414
    8. 'y' → logprob: -13.500070571899414
    9. 'l' → logprob: -13.562570571899414
    10. '```' → logprob: -13.562570571899414

Token 983: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47520336508750916
    2. ')]' → logprob: -0.9752033948898315
    3. ')])' → logprob: -7.225203514099121
    4. ' )' → logprob: -8.350203514099121
    5. '())' → logprob: -10.225203514099121
    6. '))' → logprob: -10.225203514099121
    7. '])' → logprob: -10.350203514099121
    8. '])]' → logprob: -11.600203514099121
    9. ')]
' → logprob: -11.725203514099121
    10. ')
' → logprob: -12.100203514099121

Token 984: ' stock' (ID: 6546)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4923912286758423
    2. ']' → logprob: -1.7423912286758423
    3. 'represent' → logprob: -1.8673912286758423
    4. ' representing' → logprob: -1.9923912286758423
    5. ')' → logprob: -3.1173911094665527
    6. 'input' → logprob: -3.7423911094665527
    7. 'def' → logprob: -3.7423911094665527
    8. 'import' → logprob: -4.242391109466553
    9. '   ' → logprob: -4.242391109466553
    10. 'c' → logprob: -4.242391109466553

Token 985: 'és' (ID: 1756)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11667579412460327
    2. ' =' → logprob: -3.741675853729248
    3. '=[' → logprob: -3.741675853729248
    4. 'ée' → logprob: -4.741675853729248
    5. '=C' → logprob: -5.116675853729248
    6. '=[]
' → logprob: -5.366675853729248
    7. '=[]' → logprob: -5.366675853729248
    8. '[
' → logprob: -5.366675853729248
    9. 'for' → logprob: -5.491675853729248
    10. '[' → logprob: -5.616675853729248

Token 986: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7359880805015564
    2. 'in' → logprob: -0.8609880805015564
    3. 'for' → logprob: -3.235988140106201
    4. ')' → logprob: -3.485988140106201
    5. ' =' → logprob: -4.485988140106201
    6. ' in' → logprob: -5.485988140106201
    7. '(c' → logprob: -6.235988140106201
    8. ']' → logprob: -6.610988140106201
    9. '.' → logprob: -6.610988140106201
    10. 's' → logprob: -6.985988140106201

Token 987: ' une' (ID: 2463)
  Prédit: 'CD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CD' → logprob: -8.180258191714529e-06
    2. ' CD' → logprob: -11.875008583068848
    3. 'C' → logprob: -14.375008583068848
    4. '_CD' → logprob: -14.625008583068848
    5. 'Cd' → logprob: -16.87500762939453
    6. '[' → logprob: -17.00000762939453
    7. 'cd' → logprob: -17.25000762939453
    8. '-CD' → logprob: -17.87500762939453
    9. '(C' → logprob: -18.62500762939453
    10. '/CD' → logprob: -18.87500762939453

Token 988: ' liste' (ID: 31719)
  Prédit: 'CD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.03548088297247887
    2. 'range' → logprob: -3.7854809761047363
    3. 'C' → logprob: -6.410480976104736
    4. 'list' → logprob: -6.410480976104736
    5. 'dist' → logprob: -6.660480976104736
    6. ' CD' → logprob: -6.910480976104736
    7. 'matrix' → logprob: -6.910480976104736
    8. 'Cd' → logprob: -7.035480976104736
    9. '
' → logprob: -7.410480976104736
    10. 'cd' → logprob: -7.410480976104736

Token 989: ' CD' (ID: 12178)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1867480278015137
    2. '<|end|>' → logprob: -1.6867480278015137
    3. 'for' → logprob: -1.8117480278015137
    4. '#' → logprob: -2.0617480278015137
    5. ')' → logprob: -2.4367480278015137
    6. ' =' → logprob: -3.4367480278015137
    7. '
' → logprob: -3.6867480278015137
    8. '=' → logprob: -4.686748027801514
    9. ' for' → logprob: -4.936748027801514
    10. 'def' → logprob: -5.061748027801514

Token 990: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0538849830627441
    2. '
' → logprob: -1.4288849830627441
    3. 'dist' → logprob: -1.5538849830627441
    4. 'def' → logprob: -3.053884983062744
    5. 'distance' → logprob: -3.428884983062744
    6. '<|end|>' → logprob: -3.928884983062744
    7. 'for' → logprob: -4.178884983062744
    8. 'max' → logprob: -4.303884983062744
    9. 'import' → logprob: -4.553884983062744
    10. ')' → logprob: -4.803884983062744

Token 991: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.26848286390304565
    2. 'dp' → logprob: -1.6434829235076904
    3. 'import' → logprob: -4.518482685089111
    4. 'D' → logprob: -5.018482685089111
    5. 'from' → logprob: -5.518482685089111
    6. 'Q' → logprob: -5.643482685089111
    7. 'INF' → logprob: -6.018482685089111
    8. 'DP' → logprob: -6.143482685089111
    9. '#' → logprob: -6.143482685089111
    10. 'cost' → logprob: -6.393482685089111

Token 992: ' edge' (ID: 11165)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.18136683106422424
    2. 'dp' → logprob: -2.4313669204711914
    3. 'INF' → logprob: -3.4313669204711914
    4. 'import' → logprob: -4.306366920471191
    5. 'from' → logprob: -4.556366920471191
    6. 'D' → logprob: -5.306366920471191
    7. '#' → logprob: -5.806366920471191
    8. 'def' → logprob: -6.056366920471191
    9. 'max' → logprob: -6.056366920471191
    10. 'inf' → logprob: -6.681366920471191

Token 993: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17978435754776
    2. ' =' → logprob: -1.8047842979431152
    3. '=[]' → logprob: -10.804784774780273
    4. 's' → logprob: -11.929784774780273
    5. '=[' → logprob: -12.679784774780273
    6. '=[]
' → logprob: -12.929784774780273
    7. '_' → logprob: -13.679784774780273
    8. '=[[' → logprob: -13.679784774780273
    9. '=edge' → logprob: -14.054784774780273
    10. ']' → logprob: -14.054784774780273

Token 994: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06506051868200302
    2. '[[' → logprob: -2.815060615539551
    3. ' [[]' → logprob: -5.815060615539551
    4. '[]' → logprob: -9.56506061553955
    5. '[n' → logprob: -10.94006061553955
    6. '{}' → logprob: -12.69006061553955
    7. '[(' → logprob: -12.81506061553955
    8. '{' → logprob: -12.94006061553955
    9. '[]
' → logprob: -13.06506061553955
    10. '[s' → logprob: -13.19006061553955

Token 995: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.693206250667572
    2. 'for' → logprob: -0.693206250667572
    3. '(n' → logprob: -10.693205833435059
    4. '   ' → logprob: -11.193205833435059
    5. '()' → logprob: -11.693205833435059
    6. ')' → logprob: -12.693205833435059
    7. 'n' → logprob: -12.943205833435059
    8. ']' → logprob: -13.443205833435059
    9. '
' → logprob: -13.693205833435059
    10. '	for' → logprob: -13.693205833435059

Token 996: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002591469557955861
    2. '_range' → logprob: -6.627591609954834
    3. ' _' → logprob: -7.002591609954834
    4. ' range' → logprob: -8.877591133117676
    5. '_s' → logprob: -9.377591133117676
    6. 'range' → logprob: -10.002591133117676
    7. '_i' → logprob: -10.377591133117676
    8. ' i' → logprob: -10.877591133117676
    9. '_x' → logprob: -12.127591133117676
    10. ' in' → logprob: -12.377591133117676

Token 997: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.388059139251709
    2. 'in' → logprob: -1.138059139251709
    3. 'range' → logprob: -6.763059139251709
    4. ' range' → logprob: -11.513059616088867
    5. 'n' → logprob: -11.638059616088867
    6. ' ' → logprob: -11.638059616088867
    7. '  ' → logprob: -13.638059616088867
    8. '_' → logprob: -14.638059616088867
    9. 'i' → logprob: -14.638059616088867
    10. '
' → logprob: -14.763059616088867

Token 998: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00317783304490149
    2. ' range' → logprob: -5.753177642822266
    3. '(range' → logprob: -16.753177642822266
    4. '	range' → logprob: -16.753177642822266
    5. '_range' → logprob: -17.503177642822266
    6. '_' → logprob: -18.253177642822266
    7. ' ' → logprob: -18.253177642822266
    8. '  ' → logprob: -19.503177642822266
    9. '
' → logprob: -19.753177642822266
    10. '   ' → logprob: -19.878177642822266

Token 999: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09098988771438599
    2. '(' → logprob: -2.715989828109741
    3. '(range' → logprob: -4.71599006652832
    4. 'range' → logprob: -4.84099006652832
    5. '((' → logprob: -5.96599006652832
    6. 'n' → logprob: -6.71599006652832
    7. ' range' → logprob: -9.34099006652832
    8. '(s' → logprob: -9.46599006652832
    9. ' (' → logprob: -11.21599006652832
    10. '
' → logprob: -12.59099006652832

Token 1000: ' *' (ID: 425)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.018398085609078407
    2. ')]
' → logprob: -4.518398284912109
    3. '*' → logprob: -5.768398284912109
    4. ' *' → logprob: -6.518398284912109
    5. ')' → logprob: -7.143398284912109
    6. '*(' → logprob: -7.518398284912109
    7. '*s' → logprob: -8.01839828491211
    8. ')][' → logprob: -8.39339828491211
    9. '+' → logprob: -8.51839828491211
    10. 's' → logprob: -9.26839828491211

Token 1001: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7368330359458923
    2. '250' → logprob: -0.8618330359458923
    3. '251' → logprob: -2.986833095550537
    4. '(s' → logprob: -3.736833095550537
    5. '51' → logprob: -5.236833095550537
    6. 's' → logprob: -5.486833095550537
    7. '501' → logprob: -6.111833095550537
    8. '300' → logprob: -6.361833095550537
    9. '100' → logprob: -6.611833095550537
    10. '50' → logprob: -6.736833095550537

Token 1002: '250' (ID: 6911)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6094120740890503
    2. '250' → logprob: -0.8594120740890503
    3. '(s' → logprob: -4.98441219329834
    4. 's' → logprob: -4.98441219329834
    5. '50' → logprob: -5.60941219329834
    6. '251' → logprob: -5.60941219329834
    7. '51' → logprob: -5.98441219329834
    8. '300' → logprob: -5.98441219329834
    9. '501' → logprob: -6.60941219329834
    10. '100' → logprob: -6.98441219329834

Token 1003: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018212802708148956
    2. '1' → logprob: -4.018212795257568
    3. ')]' → logprob: -10.518213272094727
    4. '2' → logprob: -11.643213272094727
    5. ')]
' → logprob: -12.018213272094727
    6. ')' → logprob: -12.018213272094727
    7. '
' → logprob: -12.893213272094727
    8. ')])' → logprob: -13.393213272094727
    9. ' ' → logprob: -13.455713272094727
    10. '])' → logprob: -13.518213272094727

Token 1004: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.469590491382405e-05
    2. '+' → logprob: -10.25007438659668
    3. ' )' → logprob: -11.00007438659668
    4. ')]
' → logprob: -11.25007438659668
    5. ')' → logprob: -12.00007438659668
    6. ']' → logprob: -13.62507438659668
    7. ')]
' → logprob: -14.12507438659668
    8. ' +' → logprob: -15.12507438659668
    9. ')]

' → logprob: -15.50007438659668
    10. ' ]' → logprob: -15.62507438659668

Token 1005: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1006: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4019332528114319
    2. '<|end|>' → logprob: -2.026933193206787
    3. ' for' → logprob: -2.651933193206787
    4. '[' → logprob: -3.151933193206787
    5. '[]' → logprob: -3.276933193206787
    6. '#' → logprob: -4.776933193206787
    7. '
' → logprob: -4.901933193206787
    8. '   ' → logprob: -4.901933193206787
    9. ']' → logprob: -5.276933193206787
    10. '[
' → logprob: -5.401933193206787

Token 1007: ' construit' (ID: 119882)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0075465235859155655
    2. ' for' → logprob: -5.007546424865723
    3. '<|end|>' → logprob: -8.382546424865723
    4. '#' → logprob: -9.007546424865723
    5. '[' → logprob: -9.257546424865723
    6. '
' → logprob: -9.382546424865723
    7. 'range' → logprob: -9.757546424865723
    8. 'import' → logprob: -9.882546424865723
    9. '=' → logprob: -10.632546424865723
    10. 'continue' → logprob: -10.632546424865723

Token 1008: ' un' (ID: 537)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38672488927841187
    2. '[]' → logprob: -1.8867249488830566
    3. 'edge' → logprob: -2.6367249488830566
    4. '[n' → logprob: -3.7617249488830566
    5. '[
' → logprob: -3.7617249488830566
    6. '<|end|>' → logprob: -4.011724948883057
    7. '[[' → logprob: -4.886724948883057
    8. '[(' → logprob: -5.636724948883057
    9. '[node' → logprob: -5.761724948883057
    10. 'for' → logprob: -6.136724948883057

Token 1009: ' grap' (ID: 60955)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7596777081489563
    2. '[' → logprob: -1.3846776485443115
    3. '[
' → logprob: -2.1346776485443115
    4. 'range' → logprob: -3.1346776485443115
    5. '[n' → logprob: -3.6346776485443115
    6. ']' → logprob: -4.259677886962891
    7. '[]' → logprob: -4.384677886962891
    8. 'graph' → logprob: -4.634677886962891
    9. '[[' → logprob: -5.009677886962891
    10. '<|end|>' → logprob: -5.384677886962891

Token 1010: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.39729198813438416
    2. 'aphe' → logprob: -1.1472920179367065
    3. 'h' → logprob: -5.647292137145996
    4. 'phe' → logprob: -5.772292137145996
    5. 'raph' → logprob: -6.272292137145996
    6. 'r' → logprob: -7.397292137145996
    7. 'rap' → logprob: -7.647292137145996
    8. 'aph' → logprob: -8.272292137145996
    9. '#' → logprob: -8.272292137145996
    10. 'ph' → logprob: -9.647292137145996

Token 1011: ' plus' (ID: 2932)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5270492434501648
    2. ' for' → logprob: -1.6520493030548096
    3. '<|end|>' → logprob: -2.4020493030548096
    4. '[' → logprob: -2.5270493030548096
    5. '[]' → logprob: -4.4020490646362305
    6. '[
' → logprob: -4.9020490646362305
    7. '_' → logprob: -5.2770490646362305
    8. '
' → logprob: -5.2770490646362305
    9. 'with' → logprob: -5.6520490646362305
    10. '   ' → logprob: -5.9020490646362305

Token 1012: ' grand' (ID: 6363)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.13102270662784576
    2. 'complex' → logprob: -2.1310226917266846
    3. 'compl' → logprob: -5.756022930145264
    4. ' complexe' → logprob: -8.131022453308105
    5. '_com' → logprob: -9.256022453308105
    6. 'large' → logprob: -9.381022453308105
    7. 'prof' → logprob: -9.381022453308105
    8. 'grand' → logprob: -9.881022453308105
    9. 'pro' → logprob: -10.256022453308105
    10. '_complex' → logprob: -10.256022453308105

Token 1013: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06573440879583359
    2. ' for' → logprob: -3.190734386444092
    3. '<|end|>' → logprob: -4.315734386444092
    4. '
' → logprob: -4.815734386444092
    5. ')' → logprob: -8.06573486328125
    6. '[' → logprob: -8.19073486328125
    7. ']' → logprob: -8.69073486328125
    8. ' ' → logprob: -10.19073486328125
    9. '<|end|>' → logprob: -10.19073486328125
    10. '   ' → logprob: -10.44073486328125

Token 1014: ' où' (ID: 15113)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4789173603057861
    2. '[]' → logprob: -1.7289173603057861
    3. ')' → logprob: -2.103917360305786
    4. ' for' → logprob: -2.228917360305786
    5. '[' → logprob: -2.853917360305786
    6. 'n' → logprob: -3.103917360305786
    7. ' ' → logprob: -3.228917360305786
    8. '```' → logprob: -3.853917360305786
    9. '   ' → logprob: -3.978917360305786
    10. 'edge' → logprob: -4.353917121887207

Token 1015: ' chaque' (ID: 21194)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007267852313816547
    2. ' for' → logprob: -5.382267951965332
    3. '
' → logprob: -6.757267951965332
    4. 'i' → logprob: -6.882267951965332
    5. '_' → logprob: -8.507267951965332
    6. '[i' → logprob: -10.382267951965332
    7. 'range' → logprob: -10.382267951965332
    8. '#' → logprob: -10.507267951965332
    9. ' i' → logprob: -10.757267951965332
    10. 'j' → logprob: -10.882267951965332

Token 1016: ' état' (ID: 59181)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.30969661474227905
    2. 'node' → logprob: -1.8096966743469238
    3. 'state' → logprob: -2.809696674346924
    4. 'u' → logprob: -4.559696674346924
    5. ' node' → logprob: -4.934696674346924
    6. ' sommet' → logprob: -5.684696674346924
    7. 'token' → logprob: -5.934696674346924
    8. 'base' → logprob: -5.934696674346924
    9. 'vertex' → logprob: -6.059696674346924
    10. ' i' → logprob: -6.309696674346924

Token 1017: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9088565707206726
    2. ' représente' → logprob: -1.2838566303253174
    3. ' =' → logprob: -2.6588566303253174
    4. ' de' → logprob: -3.2838566303253174
    5. '[i' → logprob: -3.5338566303253174
    6. 'rep' → logprob: -4.408856391906738
    7. 's' → logprob: -4.533856391906738
    8. 'possible' → logprob: -4.533856391906738
    9. '[]' → logprob: -4.658856391906738
    10. ' possible' → logprob: -4.658856391906738

Token 1018: 'som' (ID: 35641)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0412316657602787
    2. ' i' → logprob: -3.666231632232666
    3. 's' → logprob: -5.541231632232666
    4. 'u' → logprob: -5.666231632232666
    5. 'n' → logprob: -6.541231632232666
    6. 'j' → logprob: -6.916231632232666
    7. ')' → logprob: -7.041231632232666
    8. ' (' → logprob: -7.166231632232666
    9. '(i' → logprob: -7.791231632232666
    10. 'v' → logprob: -8.041232109069824

Token 1019: 'met' (ID: 3001)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.7516250610351562
    2. 'ate' → logprob: -1.7516250610351562
    3. 'met' → logprob: -2.1266250610351562
    4. 'a' → logprob: -2.2516250610351562
    5. 'ent' → logprob: -2.2516250610351562
    6. 'et' → logprob: -2.7516250610351562
    7. 'at' → logprob: -3.6266250610351562
    8. 'estre' → logprob: -3.6266250610351562
    9. 'range' → logprob: -3.6266250610351562
    10. 't' → logprob: -3.7516250610351562

Token 1020: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038775574415922165
    2. ')' → logprob: -3.788775682449341
    3. ' ,' → logprob: -4.788775444030762
    4. '*' → logprob: -5.538775444030762
    5. ' *' → logprob: -6.788775444030762
    6. '_,' → logprob: -8.538775444030762
    7. '[i' → logprob: -8.538775444030762
    8. '+' → logprob: -8.788775444030762
    9. '*,' → logprob: -9.163775444030762
    10. ' de' → logprob: -9.163775444030762

Token 1021: ' montant' (ID: 72364)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -1.9076029062271118
    2. 'c' → logprob: -2.4076027870178223
    3. 'cost' → logprob: -2.4076027870178223
    4. 'niveau' → logprob: -2.5326027870178223
    5. 'k' → logprob: -2.7826027870178223
    6. 'cap' → logprob: -3.1576027870178223
    7. 'charge' → logprob: -3.4076027870178223
    8. 's' → logprob: -3.6576027870178223
    9. 't' → logprob: -3.7826027870178223
    10. 'distance' → logprob: -3.9076027870178223

Token 1022: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5672527551651001
    2. 'd' → logprob: -1.6922527551651
    3. ' d' → logprob: -2.3172526359558105
    4. ')d' → logprob: -2.8172526359558105
    5. 'de' → logprob: -3.9422526359558105
    6. '_d' → logprob: -4.3172526359558105
    7. '_c' → logprob: -4.5672526359558105
    8. '_' → logprob: -4.8172526359558105
    9. '_de' → logprob: -5.1922526359558105
    10. ' de' → logprob: -5.1922526359558105

Token 1023: ''argent' (ID: 93204)
  Prédit: ''argent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''argent' → logprob: -0.004843765404075384
    2. '')' → logprob: -6.629843711853027
    3. ''' → logprob: -7.004843711853027
    4. 'argent' → logprob: -7.504843711853027
    5. ''avance' → logprob: -8.129843711853027
    6. ''énergie' → logprob: -8.254843711853027
    7. '’argent' → logprob: -8.254843711853027
    8. ''euros' → logprob: -8.879843711853027
    9. '_arg' → logprob: -9.004843711853027
    10. 'e' → logprob: -9.004843711853027

Token 1024: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025489083491265774
    2. ' )' → logprob: -6.252548694610596
    3. '+' → logprob: -8.377549171447754
    4. ')+' → logprob: -9.377549171447754
    5. ')_' → logprob: -10.377549171447754
    6. '),' → logprob: -10.627549171447754
    7. ' +' → logprob: -10.752549171447754
    8. ')=' → logprob: -10.752549171447754
    9. '))' → logprob: -10.877549171447754
    10. '_)' → logprob: -11.002549171447754

Token 1025: ' est' (ID: 893)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1033282279968262
    2. ')' → logprob: -1.3533282279968262
    3. ']' → logprob: -1.9783282279968262
    4. '<|end|>' → logprob: -2.478328227996826
    5. ' for' → logprob: -2.603328227996826
    6. '=' → logprob: -3.228328227996826
    7. ' is' → logprob: -3.978328227996826
    8. '.' → logprob: -4.228328227996826
    9. ']+=' → logprob: -4.978328227996826
    10. ').' → logprob: -5.603328227996826

Token 1026: ' représent' (ID: 42664)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4323962330818176
    2. 'range' → logprob: -1.8073961734771729
    3. 'une' → logprob: -2.807396173477173
    4. ')' → logprob: -4.182396411895752
    5. 'represented' → logprob: -4.182396411895752
    6. 'un' → logprob: -4.432396411895752
    7. ' une' → logprob: -4.807396411895752
    8. ' range' → logprob: -4.807396411895752
    9. '][]' → logprob: -4.807396411895752
    10. ']' → logprob: -5.182396411895752

Token 1027: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00019018957391381264
    2. 'ée' → logprob: -8.750189781188965
    3. 'és' → logprob: -10.875189781188965
    4. '#' → logprob: -12.750189781188965
    5. '[]' → logprob: -13.000189781188965
    6. 'e' → logprob: -13.000189781188965
    7. '[' → logprob: -14.125189781188965
    8. ')' → logprob: -14.500189781188965
    9. ']' → logprob: -14.875189781188965
    10. 'ées' → logprob: -14.875189781188965

Token 1028: ' par' (ID: 686)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.026064090430736542
    2. 'for' → logprob: -5.026063919067383
    3. '[i' → logprob: -5.151063919067383
    4. '[' → logprob: -5.401063919067383
    5. '[:]' → logprob: -6.651063919067383
    6. '[]
' → logprob: -6.776063919067383
    7. ']' → logprob: -7.151063919067383
    8. ')' → logprob: -7.276063919067383
    9. ' for' → logprob: -7.401063919067383
    10. '[])' → logprob: -7.651063919067383

Token 1029: ' un' (ID: 537)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7028949856758118
    2. '[' → logprob: -1.577894926071167
    3. 'range' → logprob: -3.077894926071167
    4. 'n' → logprob: -3.077894926071167
    5. '[n' → logprob: -3.327894926071167
    6. '[i' → logprob: -3.452894926071167
    7. 'i' → logprob: -3.702894926071167
    8. '250' → logprob: -3.952894926071167
    9. ')' → logprob: -4.327895164489746
    10. '[])' → logprob: -4.327895164489746

Token 1030: ' sommet' (ID: 130502)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.8918139934539795
    2. 'vertex' → logprob: -2.3918139934539795
    3. 'state' → logprob: -2.3918139934539795
    4. 'range' → logprob: -2.7668139934539795
    5. '[
' → logprob: -2.8918139934539795
    6. 'for' → logprob: -3.1418139934539795
    7. ' node' → logprob: -3.2668139934539795
    8. 'n' → logprob: -3.8918139934539795
    9. 'multip' → logprob: -3.8918139934539795
    10. '[' → logprob: -4.016814231872559

Token 1031: ' virt' (ID: 5824)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6059637665748596
    2. ' for' → logprob: -1.4809637069702148
    3. '<|end|>' → logprob: -2.355963706970215
    4. ')' → logprob: -2.730963706970215
    5. '   ' → logprob: -3.980963706970215
    6. '
' → logprob: -3.980963706970215
    7. '.' → logprob: -4.480963706970215
    8. ',' → logprob: -5.480963706970215
    9. '[' → logprob: -5.855963706970215
    10. ']' → logprob: -6.355963706970215

Token 1032: 'uel' (ID: 4619)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.40476635098457336
    2. 'ation' → logprob: -1.654766321182251
    3. ')' → logprob: -3.154766321182251
    4. '=' → logprob: -4.02976655960083
    5. '   ' → logprob: -4.02976655960083
    6. 'def' → logprob: -4.90476655960083
    7. ']' → logprob: -5.02976655960083
    8. '[]' → logprob: -5.15476655960083
    9. 'ée' → logprob: -5.40476655960083
    10. '[
' → logprob: -5.40476655960083

Token 1033: ' distinct' (ID: 16913)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003025006502866745
    2. ' for' → logprob: -6.128025054931641
    3. '   ' → logprob: -7.503025054931641
    4. '<|end|>' → logprob: -8.62802505493164
    5. ')' → logprob: -9.87802505493164
    6. '	for' → logprob: -10.12802505493164
    7. '
' → logprob: -12.25302505493164
    8. '```' → logprob: -13.12802505493164
    9. 'max' → logprob: -13.50302505493164
    10. ']' → logprob: -13.62802505493164

Token 1034: '.' (ID: 13)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18829841911792755
    2. ' for' → logprob: -2.063298463821411
    3. '<|end|>' → logprob: -3.688298463821411
    4. '   ' → logprob: -4.188298225402832
    5. '
' → logprob: -6.063298225402832
    6. ')' → logprob: -7.063298225402832
    7. '	for' → logprob: -8.063298225402832
    8. '<|end|>' → logprob: -8.688298225402832
    9. ' ' → logprob: -9.063298225402832
    10. '.' → logprob: -9.188298225402832

Token 1035: ' Il' (ID: 5329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9152323603630066
    2. '<|end|>' → logprob: -1.6652324199676514
    3. ' for' → logprob: -1.9152324199676514
    4. '
' → logprob: -2.4152324199676514
    5. ')' → logprob: -2.5402324199676514
    6. '   ' → logprob: -3.4152324199676514
    7. '\n' → logprob: -4.165232181549072
    8. ' 
' → logprob: -4.415232181549072
    9. ' ' → logprob: -4.665232181549072
    10. '[' → logprob: -5.665232181549072

Token 1036: ' y' (ID: 342)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11412160843610764
    2. '=' → logprob: -3.364121675491333
    3. ' for' → logprob: -3.864121675491333
    4. ')' → logprob: -4.114121437072754
    5. 's' → logprob: -4.239121437072754
    6. '#' → logprob: -5.114121437072754
    7. ' =' → logprob: -5.864121437072754
    8. 'n' → logprob: -6.364121437072754
    9. 'contin' → logprob: -6.489121437072754
    10. 'def' → logprob: -6.614121437072754

Token 1037: ' a' (ID: 261)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.109217882156372
    2. 'is' → logprob: -1.234217882156372
    3. 'are' → logprob: -1.609217882156372
    4. ']' → logprob: -3.234217882156372
    5. '```' → logprob: -3.734217882156372
    6. '#' → logprob: -3.984217882156372
    7. ')' → logprob: -4.109217643737793
    8. '=' → logprob: -4.609217643737793
    9. 'est' → logprob: -4.609217643737793
    10. ' is' → logprob: -4.734217643737793

Token 1038: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00627939822152257
    2. ' n' → logprob: -6.006279468536377
    3. '250' → logprob: -6.006279468536377
    4. '(n' → logprob: -7.256279468536377
    5. ')n' → logprob: -8.631278991699219
    6. '	n' → logprob: -8.881278991699219
    7. '<|end|>' → logprob: -9.381278991699219
    8. '\n' → logprob: -9.506278991699219
    9. '
' → logprob: -9.631278991699219
    10. '*n' → logprob: -11.006278991699219

Token 1039: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005195097532123327
    2. '250' → logprob: -5.755195140838623
    3. ' n' → logprob: -6.505195140838623
    4. '(n' → logprob: -7.880195140838623
    5. ')n' → logprob: -9.755194664001465
    6. '
' → logprob: -10.630194664001465
    7. ' ' → logprob: -12.130194664001465
    8. ')' → logprob: -12.255194664001465
    9. '```' → logprob: -12.380194664001465
    10. '   ' → logprob: -12.505194664001465

Token 1040: ''' (ID: 6)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16038213670253754
    2. '*' → logprob: -1.9103821516036987
    3. ')' → logprob: -9.785382270812988
    4. '
' → logprob: -10.035382270812988
    5. ' ' → logprob: -10.535382270812988
    6. '250' → logprob: -11.660382270812988
    7. ' *
' → logprob: -12.785382270812988
    8. '0' → logprob: -13.035382270812988
    9. ' ' → logprob: -13.160382270812988
    10. '**' → logprob: -13.285382270812988

Token 1041: ' somm' (ID: 44830)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2811737358570099
    2. ' *' → logprob: -1.4061737060546875
    3. '*num' → logprob: -12.031173706054688
    4. '250' → logprob: -12.656173706054688
    5. ')' → logprob: -12.781173706054688
    6. '*n' → logprob: -13.281173706054688
    7. ' ' → logprob: -13.531173706054688
    8. ' ' → logprob: -13.656173706054688
    9. '#' → logprob: -13.906173706054688
    10. '**' → logprob: -14.156173706054688

Token 1042: 'ets' (ID: 1719)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7395861744880676
    2. '   ' → logprob: -1.2395861148834229
    3. 'aires' → logprob: -2.614586114883423
    4. 'e' → logprob: -2.739586114883423
    5. 'a' → logprob: -3.364586114883423
    6. 'ates' → logprob: -3.739586114883423
    7. '       ' → logprob: -5.489586353302002
    8. '    ' → logprob: -5.614586353302002
    9. '      ' → logprob: -6.239586353302002
    10. '     ' → logprob: -6.489586353302002

Token 1043: ' et' (ID: 859)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.18122752010822296
    2. 'for' → logprob: -2.181227445602417
    3. ' *' → logprob: -4.556227684020996
    4. ')' → logprob: -4.556227684020996
    5. '#' → logprob: -4.931227684020996
    6. '250' → logprob: -5.181227684020996
    7. ' for' → logprob: -5.931227684020996
    8. 'pour' → logprob: -6.056227684020996
    9. ',' → logprob: -6.181227684020996
    10. 'times' → logprob: -6.431227684020996

Token 1044: ' ' (ID: 220)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.0003872974484693259
    2. ' ' → logprob: -8.000387191772461
    3. '
' → logprob: -10.750387191772461
    4. '   ' → logprob: -11.500387191772461
    5. 'max' → logprob: -12.937887191772461
    6. '  ' → logprob: -13.125387191772461
    7. 's' → logprob: -13.312887191772461
    8. '#' → logprob: -13.687887191772461
    9. '(' → logprob: -13.937887191772461
    10. '25' → logprob: -14.062887191772461

Token 1045: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.0012083302717655897
    2. ' ' → logprob: -7.001208305358887
    3. '(' → logprob: -8.626208305358887
    4. '
' → logprob: -10.001208305358887
    5. '25' → logprob: -10.751208305358887
    6. '   ' → logprob: -11.876208305358887
    7. '2' → logprob: -12.001208305358887
    8. 's' → logprob: -12.313708305358887
    9. '#' → logprob: -12.376208305358887
    10. '  ' → logprob: -13.376208305358887

Token 1046: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5570885807392187e-05
    2. '000' → logprob: -12.125015258789062
    3. '00' → logprob: -12.875015258789062
    4. '*' → logprob: -13.000015258789062
    5. ')' → logprob: -13.625015258789062
    6. '
' → logprob: -14.000015258789062
    7. '۰' → logprob: -14.625015258789062
    8. '1' → logprob: -14.875015258789062
    9. ' ' → logprob: -15.000015258789062
    10. ' *' → logprob: -15.500015258789062

Token 1047: ' valeurs' (ID: 73668)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1048: ' d' (ID: 272)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9220978021621704
    2. 'for' → logprob: -1.0470978021621704
    3. '_max' → logprob: -3.297097682952881
    4. ' for' → logprob: -3.422097682952881
    5. 'de' → logprob: -3.422097682952881
    6. '<|end|>' → logprob: -3.547097682952881
    7. 'of' → logprob: -3.922097682952881
    8. '+' → logprob: -4.797097682952881
    9. ',' → logprob: -4.797097682952881
    10. '*' → logprob: -4.922097682952881

Token 1049: ''argent' (ID: 93204)
  Prédit: 'argent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argent' → logprob: -0.6376323103904724
    2. ''argent' → logprob: -0.7626323103904724
    3. 'money' → logprob: -6.637632369995117
    4. ''état' → logprob: -7.387632369995117
    5. '’argent' → logprob: -7.512632369995117
    6. 'mont' → logprob: -8.262632369995117
    7. '```' → logprob: -8.262632369995117
    8. ''' → logprob: -8.512632369995117
    9. 'e' → logprob: -8.512632369995117
    10. 'a' → logprob: -8.512632369995117

Token 1050: ' différentes' (ID: 41398)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15200771391391754
    2. ' for' → logprob: -3.277007818222046
    3. '
' → logprob: -3.402007818222046
    4. '<|end|>' → logprob: -3.527007818222046
    5. ')' → logprob: -3.652007818222046
    6. ']' → logprob: -4.402007579803467
    7. '#' → logprob: -7.902007579803467
    8. '<|end|>' → logprob: -8.027008056640625
    9. '   ' → logprob: -8.527008056640625
    10. '[' → logprob: -8.777008056640625

Token 1051: ' possible' (ID: 4149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07510707527399063
    2. '
' → logprob: -3.4501070976257324
    3. ' for' → logprob: -3.4501070976257324
    4. '<|end|>' → logprob: -5.450107097625732
    5. ')' → logprob: -5.700107097625732
    6. ']' → logprob: -7.575107097625732
    7. '   ' → logprob: -8.825106620788574
    8. '
' → logprob: -8.825106620788574
    9. '.' → logprob: -9.200106620788574
    10. ',' → logprob: -10.075106620788574

Token 1052: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03057274781167507
    2. ' for' → logprob: -4.530572891235352
    3. ')' → logprob: -4.780572891235352
    4. '
' → logprob: -4.780572891235352
    5. '<|end|>' → logprob: -6.530572891235352
    6. ']' → logprob: -8.030572891235352
    7. '   ' → logprob: -8.280572891235352
    8. 'edge' → logprob: -8.905572891235352
    9. '#' → logprob: -9.280572891235352
    10. '<|end|>' → logprob: -10.655572891235352

Token 1053: 'ét' (ID: 3913)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14363551139831543
    2. ')]' → logprob: -2.7686355113983154
    3. '250' → logprob: -3.2686355113983154
    4. ')])' → logprob: -4.3936357498168945
    5. 'range' → logprob: -5.1436357498168945
    6. '])' → logprob: -6.1436357498168945
    7. '<|end|>' → logprob: -6.1436357498168945
    8. '   ' → logprob: -6.6436357498168945
    9. 'for' → logprob: -6.6436357498168945
    10. '*' → logprob: -7.0186357498168945

Token 1054: 'ats' (ID: 1838)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14946240186691284
    2. 'at' → logprob: -2.6494624614715576
    3. ']' → logprob: -4.1494622230529785
    4. ')' → logprob: -4.3994622230529785
    5. '])' → logprob: -4.5244622230529785
    6. 'é' → logprob: -5.7744622230529785
    7. 'ât' → logprob: -6.1494622230529785
    8. 'à' → logprob: -6.2744622230529785
    9. 'ate' → logprob: -6.3994622230529785
    10. 'e' → logprob: -6.3994622230529785

Token 1055: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7758294939994812
    2. '=' → logprob: -1.275829553604126
    3. ' =' → logprob: -2.025829553604126
    4. 'max' → logprob: -3.025829553604126
    5. '<|end|>' → logprob: -5.025829315185547
    6. ' ranging' → logprob: -5.150829315185547
    7. '   ' → logprob: -5.150829315185547
    8. 's' → logprob: -5.275829315185547
    9. '_max' → logprob: -5.400829315185547
    10. ' max' → logprob: -5.525829315185547

Token 1056: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007093389052897692
    2. 'max' → logprob: -5.63209342956543
    3. 'money' → logprob: -6.00709342956543
    4. '   ' → logprob: -8.25709342956543
    5. ' for' → logprob: -9.25709342956543
    6. 'from' → logprob: -9.75709342956543
    7. 's' → logprob: -9.75709342956543
    8. 'budget' → logprob: -9.75709342956543
    9. 'start' → logprob: -10.00709342956543
    10. 'import' → logprob: -10.25709342956543

Token 1057: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.020330015569925308
    2. ' for' → logprob: -4.27032995223999
    3. '   ' → logprob: -5.27032995223999
    4. '	for' → logprob: -7.52032995223999
    5. ')' → logprob: -9.270330429077148
    6. '       ' → logprob: -9.395330429077148
    7. ' ' → logprob: -9.770330429077148
    8. '
' → logprob: -10.020330429077148
    9. '```' → logprob: -10.145330429077148
    10. '\t' → logprob: -10.520330429077148

Token 1058: ' i' (ID: 575)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3108545243740082
    2. 'i' → logprob: -1.4358545541763306
    3. 'v' → logprob: -3.560854434967041
    4. 's' → logprob: -8.6858549118042
    5. ' u' → logprob: -8.6858549118042
    6. 'x' → logprob: -9.0608549118042
    7. '(u' → logprob: -9.5608549118042
    8. '_u' → logprob: -10.0608549118042
    9. ' i' → logprob: -10.1858549118042
    10. '```' → logprob: -10.3108549118042

Token 1059: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07075898349285126
    2. 'in' → logprob: -2.6957590579986572
    3. ' ' → logprob: -7.820758819580078
    4. 'n' → logprob: -8.320758819580078
    5. '_' → logprob: -9.445758819580078
    6. ' n' → logprob: -10.695758819580078
    7. ' i' → logprob: -10.820758819580078
    8. '	in' → logprob: -11.195758819580078
    9. 'range' → logprob: -11.945758819580078
    10. '0' → logprob: -12.195758819580078

Token 1060: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '	range' → logprob: -17.875158309936523
    4. '0' → logprob: -18.375158309936523
    5. '(range' → logprob: -18.375158309936523
    6. 'rang' → logprob: -18.500158309936523
    7. 'r' → logprob: -18.875158309936523
    8. ' ' → logprob: -19.250158309936523
    9. 'ran' → logprob: -19.875158309936523
    10. ')' → logprob: -20.000158309936523

Token 1061: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06206291541457176
    2. '(n' → logprob: -2.812062978744507
    3. ' n' → logprob: -9.437063217163086
    4. '(' → logprob: -11.937063217163086
    5. '	n' → logprob: -12.437063217163086
    6. 's' → logprob: -12.812063217163086
    7. ')n' → logprob: -14.187063217163086
    8. '_n' → logprob: -14.937063217163086
    9. ' (' → logprob: -15.062063217163086
    10. ',n' → logprob: -15.312063217163086

Token 1062: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1279001384973526
    2. '):' → logprob: -2.1279001235961914
    3. ')' → logprob: -8.002900123596191
    4. '   ' → logprob: -8.002900123596191
    5. '*n' → logprob: -9.127900123596191
    6. '):
' → logprob: -9.252900123596191
    7. '*' → logprob: -10.252900123596191
    8. ' *' → logprob: -10.377900123596191
    9. ':' → logprob: -12.127900123596191
    10. ' ):
' → logprob: -12.377900123596191

Token 1063: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.500271201133728
    2. '   ' → logprob: -1.000271201133728
    3. 'for' → logprob: -3.7502713203430176
    4. '       ' → logprob: -7.125271320343018
    5. '	for' → logprob: -7.500271320343018
    6. ' j' → logprob: -8.37527084350586
    7. ' money' → logprob: -8.62527084350586
    8. ' ' → logprob: -8.87527084350586
    9. '    ' → logprob: -9.50027084350586
    10. 'money' → logprob: -9.50027084350586

Token 1064: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3615332245826721
    2. ' for' → logprob: -1.6115331649780273
    3. 'j' → logprob: -3.3615331649780273
    4. 'money' → logprob: -3.9865331649780273
    5. '   ' → logprob: -4.736533164978027
    6. ' money' → logprob: -4.861533164978027
    7. ' j' → logprob: -4.986533164978027
    8. 'c' → logprob: -5.236533164978027
    9. 's' → logprob: -5.486533164978027
    10. ' ' → logprob: -5.736533164978027

Token 1065: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5185301303863525
    2. 'money' → logprob: -2.2685301303863525
    3. 's' → logprob: -2.6435301303863525
    4. 'range' → logprob: -2.8935301303863525
    5. 'u' → logprob: -3.0185301303863525
    6. 'v' → logprob: -3.6435301303863525
    7. 'j' → logprob: -3.8935301303863525
    8. 'c' → logprob: -3.8935301303863525
    9. '0' → logprob: -4.768529891967773
    10. 'a' → logprob: -5.143529891967773

Token 1066: ' sommet' (ID: 130502)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.3735411167144775
    2. 'i' → logprob: -1.4985411167144775
    3. 'v' → logprob: -1.6235411167144775
    4. 'j' → logprob: -1.9985411167144775
    5. 's' → logprob: -2.8735411167144775
    6. 'money' → logprob: -2.8735411167144775
    7. 'state' → logprob: -3.8735411167144775
    8. ' u' → logprob: -4.998540878295898
    9. ' v' → logprob: -5.123540878295898
    10. ' money' → logprob: -5.248540878295898

Token 1067: ' du' (ID: 1462)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.2391332387924194
    2. 'for' → logprob: -1.3641332387924194
    3. 'in' → logprob: -1.6141332387924194
    4. '   ' → logprob: -2.239133358001709
    5. ' for' → logprob: -2.739133358001709
    6. 'range' → logprob: -3.239133358001709
    7. 'money' → logprob: -3.989133358001709
    8. ' range' → logprob: -5.614133358001709
    9. 'amount' → logprob: -5.864133358001709
    10. '       ' → logprob: -5.864133358001709

Token 1068: ' grap' (ID: 60955)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3299354314804077
    2. 'range' → logprob: -1.3299354314804077
    3. ' range' → logprob: -4.454935550689697
    4. 'G' → logprob: -5.829935550689697
    5. ' n' → logprob: -6.954935550689697
    6. 'edge' → logprob: -8.079935073852539
    7. 'i' → logprob: -8.079935073852539
    8. '(n' → logprob: -9.454935073852539
    9. '250' → logprob: -9.767435073852539
    10. '(range' → logprob: -10.454935073852539

Token 1069: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.6687803268432617
    2. 'aphe' → logprob: -0.9187803268432617
    3. 'rap' → logprob: -3.7937803268432617
    4. 'phe' → logprob: -3.9187803268432617
    5. 'ph' → logprob: -4.418780326843262
    6. 'aph' → logprob: -4.418780326843262
    7. 'h' → logprob: -4.668780326843262
    8. '   ' → logprob: -5.168780326843262
    9. 'raph' → logprob: -6.793780326843262
    10. '       ' → logprob: -6.918780326843262

Token 1070: ' initial' (ID: 4871)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.107854962348938
    2. 'for' → logprob: -1.107854962348938
    3. '   ' → logprob: -1.232854962348938
    4. ':' → logprob: -4.607854843139648
    5. '<|end|>' → logprob: -4.607854843139648
    6. 'range' → logprob: -5.232854843139648
    7. ' range' → logprob: -5.482854843139648
    8. ' ' → logprob: -5.857854843139648
    9. 'money' → logprob: -5.982854843139648
    10. '):
' → logprob: -6.232854843139648

Token 1071: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5299718976020813
    2. 'for' → logprob: -1.0299718379974365
    3. '   ' → logprob: -3.0299718379974365
    4. ',' → logprob: -6.154972076416016
    5. ' ' → logprob: -7.404972076416016
    6. ':' → logprob: -7.404972076416016
    7. '	for' → logprob: -7.529972076416016
    8. 'money' → logprob: -7.654972076416016
    9. 'range' → logprob: -7.779972076416016
    10. '       ' → logprob: -8.154972076416016

Token 1072: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3382548987865448
    2. ' for' → logprob: -1.4632549285888672
    3. 'for' → logprob: -3.588254928588867
    4. ' j' → logprob: -4.463254928588867
    5. '       ' → logprob: -4.838254928588867
    6. 'j' → logprob: -6.713254928588867
    7. '    ' → logprob: -6.713254928588867
    8. '	for' → logprob: -6.713254928588867
    9. '```' → logprob: -7.088254928588867
    10. ' money' → logprob: -7.463254928588867

Token 1073: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1536247283220291
    2. ' for' → logprob: -2.1536247730255127
    3. '   ' → logprob: -4.278624534606934
    4. 'c' (adapté à ' c') → logprob: -4.653624534606934
    5. '       ' → logprob: -6.278624534606934
    6. '	for' → logprob: -7.653624534606934
    7. ' c' → logprob: -8.278624534606934
    8. 'cash' → logprob: -9.403624534606934
    9. 'money' → logprob: -9.903624534606934
    10. '           ' → logprob: -10.528624534606934

Token 1074: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6015083193778992
    2. ',' → logprob: -1.351508378982544
    3. ' =' → logprob: -1.976508378982544
    4. '=' → logprob: -3.601508378982544
    5. 'in' → logprob: -4.351508140563965
    6. 'for' → logprob: -5.601508140563965
    7. ')' → logprob: -5.601508140563965
    8. ' for' → logprob: -5.976508140563965
    9. ' ,' → logprob: -6.226508140563965
    10. 'range' → logprob: -6.976508140563965

Token 1075: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0002036595979006961
    2. ' d' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.37520408630371
    4. 'c' → logprob: -17.00020408630371
    5. 's' → logprob: -17.87520408630371
    6. '	d' → logprob: -17.87520408630371
    7. ' ' → logprob: -18.00020408630371
    8. 'D' → logprob: -18.25020408630371
    9. 'e' → logprob: -18.87520408630371
    10. '0' → logprob: -19.12520408630371

Token 1076: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815006136894226
    2. ' =' → logprob: -4.0181498527526855
    3. ')' → logprob: -16.768150329589844
    4. '=i' → logprob: -17.018150329589844
    5. '=c' → logprob: -17.393150329589844
    6. '   ' → logprob: -17.643150329589844
    7. ' ' → logprob: -18.018150329589844
    8. '=user' → logprob: -18.143150329589844
    9. '=s' → logprob: -18.143150329589844
    10. '=int' → logprob: -18.643150329589844

Token 1077: ' CD' (ID: 12178)
  Prédit: 'CD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CD' → logprob: -8.061054359131958e-06
    2. ' CD' → logprob: -11.750007629394531
    3. 'cd' → logprob: -15.750007629394531
    4. 'C' → logprob: -17.50000762939453
    5. '_CD' → logprob: -17.87500762939453
    6. '   ' → logprob: -18.62500762939453
    7. 'Cd' → logprob: -19.62500762939453
    8. 'CDATA' → logprob: -20.12500762939453
    9. ' ' → logprob: -21.00000762939453
    10. '0' → logprob: -21.50000762939453

Token 1078: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03945571929216385
    2. '[i' → logprob: -3.5394556522369385
    3. ' =' → logprob: -5.289455890655518
    4. 'i' → logprob: -5.414455890655518
    5. '=i' → logprob: -9.03945541381836
    6. 's' → logprob: -11.16445541381836
    7. '(i' → logprob: -11.16445541381836
    8. '_i' → logprob: -12.91445541381836
    9. '=
' → logprob: -13.28945541381836
    10. ',i' → logprob: -13.53945541381836

Token 1079: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007561430102214217
    2. ']
' → logprob: -8.37575626373291
    3. ')' → logprob: -8.50075626373291
    4. ']=' → logprob: -8.62575626373291
    5. '   ' → logprob: -9.00075626373291
    6. ' ]' → logprob: -11.75075626373291
    7. '       ' → logprob: -12.62575626373291
    8. ' =' → logprob: -13.25075626373291
    9. ']
' → logprob: -13.37575626373291
    10. ')]' → logprob: -13.87575626373291

Token 1080: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2881474494934082
    2. '   ' → logprob: -1.5381474494934082
    3. '<|end|>' → logprob: -3.913147449493408
    4. 'for' → logprob: -5.538147449493408
    5. ' for' → logprob: -5.913147449493408
    6. ':' → logprob: -6.288147449493408
    7. '<|end|>' → logprob: -6.538147449493408
    8. '    
' → logprob: -6.663147449493408
    9. '
' → logprob: -6.913147449493408
    10. ' ' → logprob: -7.663147449493408

Token 1081: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020135752856731415
    2. ' for' → logprob: -6.252013683319092
    3. '       ' → logprob: -9.627013206481934
    4. '   ' → logprob: -11.502013206481934
    5. '	for' → logprob: -11.877013206481934
    6. '
' → logprob: -13.877013206481934
    7. 'c' → logprob: -15.877013206481934
    8. ' ' → logprob: -16.12701416015625
    9. '        
' → logprob: -16.12701416015625
    10. '```' → logprob: -16.12701416015625

Token 1082: ' récup' (ID: 62856)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03321913257241249
    2. ' for' → logprob: -3.7832190990448
    3. 'range' → logprob: -5.033219337463379
    4. '   ' → logprob: -6.408219337463379
    5. ' range' → logprob: -6.533219337463379
    6. 'continue' → logprob: -9.158219337463379
    7. 'c' → logprob: -10.158219337463379
    8. ' continue' → logprob: -10.783219337463379
    9. 'from' → logprob: -11.033219337463379
    10. '
' → logprob: -11.283219337463379

Token 1083: 'ère' (ID: 4346)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.167777180671692
    2. '(c' → logprob: -1.292777180671692
    3. '=' → logprob: -2.5427770614624023
    4. '=c' → logprob: -2.7927770614624023
    5. 'c' → logprob: -3.2927770614624023
    6. ' c' → logprob: -3.4177770614624023
    7. '       ' → logprob: -3.4177770614624023
    8. 'ère' → logprob: -4.167777061462402
    9. 'e' → logprob: -4.292777061462402
    10. 's' → logprob: -4.417777061462402

Token 1084: ' la' (ID: 557)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.474759966135025
    2. ' c' → logprob: -0.9747599363327026
    3. '	c' → logprob: -7.349760055541992
    4. '   ' → logprob: -11.724760055541992
    5. '       ' → logprob: -11.724760055541992
    6. '    ' → logprob: -12.224760055541992
    7. ' ' → logprob: -12.349760055541992
    8. ')c' → logprob: -12.349760055541992
    9. 'cd' → logprob: -12.974760055541992
    10. '<|end|>' → logprob: -13.099760055541992

Token 1085: ' paire' (ID: 148856)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011154753156006336
    2. ' c' → logprob: -4.511154651641846
    3. ' ' → logprob: -10.136155128479004
    4. '	c' → logprob: -11.386155128479004
    5. '0' → logprob: -11.886155128479004
    6. ',' → logprob: -11.886155128479004
    7. 'd' → logprob: -12.011155128479004
    8. ',c' → logprob: -12.761155128479004
    9. 'current' → logprob: -12.886155128479004
    10. 'i' → logprob: -12.886155128479004

Token 1086: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3220115900039673
    2. '(i' → logprob: -1.9470115900039673
    3. '=' → logprob: -2.8220114707946777
    4. ',' → logprob: -3.4470114707946777
    5. 'c' → logprob: -4.072011470794678
    6. '(c' → logprob: -4.822011470794678
    7. '[i' → logprob: -5.447011470794678
    8. 's' → logprob: -5.447011470794678
    9. ' (' → logprob: -6.072011470794678
    10. '_c' → logprob: -6.572011470794678

Token 1087: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.7848862373502925e-05
    2. ' c' → logprob: -10.500027656555176
    3. ')c' → logprob: -15.875027656555176
    4. '	c' → logprob: -17.000028610229492
    5. ',c' → logprob: -17.875028610229492
    6. '_c' → logprob: -18.000028610229492
    7. '
' → logprob: -18.125028610229492
    8. '   ' → logprob: -18.250028610229492
    9. '(c' → logprob: -19.250028610229492
    10. ' ' → logprob: -19.250028610229492

Token 1088: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045545989996753633
    2. ',c' → logprob: -8.500455856323242
    3. ' ,' → logprob: -10.000455856323242
    4. ')' → logprob: -10.125455856323242
    5. ',d' → logprob: -10.250455856323242
    6. ',n' → logprob: -10.375455856323242
    7. ',
' → logprob: -10.500455856323242
    8. ',a' → logprob: -11.250455856323242
    9. ',s' → logprob: -11.875455856323242
    10. 'a' → logprob: -12.250455856323242

Token 1089: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01022842712700367
    2. 'a' → logprob: -5.635228633880615
    3. ' d' → logprob: -5.760228633880615
    4. 'money' → logprob: -6.260228633880615
    5. ')' → logprob: -7.510228633880615
    6. 'amount' → logprob: -8.760228157043457
    7. 'cost' → logprob: -8.885228157043457
    8. '   ' → logprob: -9.510228157043457
    9. ' money' → logprob: -9.760228157043457
    10. 'c' → logprob: -9.885228157043457

Token 1090: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004248355980962515
    2. ')
' → logprob: -7.875424861907959
    3. '   ' → logprob: -11.2504243850708
    4. ')
' → logprob: -11.6254243850708
    5. ')=' → logprob: -11.6254243850708
    6. ' )' → logprob: -11.8754243850708
    7. ' =' → logprob: -13.1254243850708
    8. '       ' → logprob: -13.2504243850708
    9. '=' → logprob: -14.6254243850708
    10. '),' → logprob: -14.8754243850708

Token 1091: ' :' (ID: 712)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13508306443691254
    2. '   ' → logprob: -2.385082960128784
    3. ' for' → logprob: -4.385083198547363
    4. 'for' → logprob: -5.010083198547363
    5. '<|end|>' → logprob: -5.135083198547363
    6. '    
' → logprob: -5.635083198547363
    7. '  
' → logprob: -6.135083198547363
    8. ' 
' → logprob: -7.010083198547363
    9. '       ' → logprob: -7.385083198547363
    10. '
' → logprob: -7.760083198547363

Token 1092: ' coût' (ID: 73109)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9537557363510132
    2. ' for' → logprob: -1.0787557363510132
    3. 'for' → logprob: -1.3287557363510132
    4. '   ' → logprob: -4.703755855560303
    5. '<|end|>' → logprob: -8.828755378723145
    6. ' ' → logprob: -9.078755378723145
    7. '	for' → logprob: -9.328755378723145
    8. 'c' → logprob: -9.328755378723145
    9. ',' → logprob: -9.703755378723145
    10. '	   ' → logprob: -9.828755378723145

Token 1093: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05404169484972954
    2. ' =' → logprob: -3.929041624069214
    3. 'et' → logprob: -4.554041862487793
    4. ' et' → logprob: -4.804041862487793
    5. 's' → logprob: -6.179041862487793
    6. ' ,' → logprob: -6.179041862487793
    7. '   ' → logprob: -6.679041862487793
    8. 'for' → logprob: -6.679041862487793
    9. 'pour' → logprob: -6.804041862487793
    10. '=' → logprob: -7.304041862487793

Token 1094: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2876870334148407
    2. 'achat' → logprob: -1.662687063217163
    3. 'ach' → logprob: -4.662686824798584
    4. 'argent' → logprob: -4.787686824798584
    5. 'en' → logprob: -5.287686824798584
    6. 'cash' → logprob: -5.537686824798584
    7. 'aj' → logprob: -5.662686824798584
    8. 'à' → logprob: -5.787686824798584
    9. 'de' → logprob: -5.912686824798584
    10. 'cons' → logprob: -6.162686824798584

Token 1095: 'augmentation' (ID: 140453)
  Prédit: 'achat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'achat' → logprob: -0.6008689999580383
    2. 'entrée' → logprob: -2.2258689403533936
    3. ''achat' → logprob: -2.3508689403533936
    4. 'ac' → logprob: -2.7258689403533936
    5. 'argent' → logprob: -3.2258689403533936
    6. 'l' → logprob: -3.4758689403533936
    7. 'ach' → logprob: -3.7258689403533936
    8. ',' → logprob: -4.100869178771973
    9. 'dé' → logprob: -4.725869178771973
    10. ''argent' → logprob: -5.350869178771973

Token 1096: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20974600315093994
    2. ' et' → logprob: -1.95974600315094
    3. 'et' → logprob: -4.20974588394165
    4. ' ,' → logprob: -4.45974588394165
    5. '   ' → logprob: -4.58474588394165
    6. 'de' → logprob: -6.33474588394165
    7. ' de' → logprob: -6.58474588394165
    8. ' =' → logprob: -6.95974588394165
    9. ' and' → logprob: -6.95974588394165
    10. ' pour' → logprob: -6.95974588394165

Token 1097: ''argent' (ID: 93204)
  Prédit: ''argent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''argent' → logprob: -0.18089093267917633
    2. 'argent' → logprob: -1.8058909177780151
    3. '’argent' → logprob: -7.930891036987305
    4. ''achat' → logprob: -8.055891036987305
    5. 'l' → logprob: -8.930891036987305
    6. '   ' → logprob: -9.680891036987305
    7. ',' → logprob: -9.930891036987305
    8. ''' → logprob: -10.305891036987305
    9. 'es' → logprob: -10.805891036987305
    10. ' argent' → logprob: -11.180891036987305

Token 1098: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.506049394607544
    2. ',' → logprob: -1.756049394607544
    3. '<|end|>' → logprob: -2.131049394607544
    4. '
' → logprob: -2.631049394607544
    5. ')' → logprob: -4.131049156188965
    6. '<|end|>' → logprob: -5.256049156188965
    7. ' ' → logprob: -6.381049156188965
    8. '  ' → logprob: -6.631049156188965
    9. '    
' → logprob: -6.756049156188965
    10. '    ' → logprob: -6.881049156188965

Token 1099: ' argent' (ID: 73800)
  Prédit: 'gain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gain' → logprob: -1.2502193450927734
    2. 'max' → logprob: -1.3752193450927734
    3. 'money' → logprob: -2.3752193450927734
    4. 'd' → logprob: -2.8752193450927734
    5. 'limit' → logprob: -2.8752193450927734
    6. 'e' → logprob: -3.6252193450927734
    7. 'increment' → logprob: -4.125219345092773
    8. 'c' → logprob: -4.250219345092773
    9. 'p' → logprob: -4.500219345092773
    10. 'delta' → logprob: -4.625219345092773

Token 1100: ' obtenu' (ID: 117330)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9400094151496887
    2. ',' → logprob: -2.440009355545044
    3. ' +=' → logprob: -2.565009355545044
    4. '+=' → logprob: -2.690009355545044
    5. 'poss' → logprob: -2.815009355545044
    6. '=' → logprob: -2.815009355545044
    7. 'max' → logprob: -3.190009355545044
    8. 'increment' → logprob: -3.565009355545044
    9. 'amount' → logprob: -3.815009355545044
    10. 'act' → logprob: -3.940009355545044

Token 1101: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04323234409093857
    2. ',' → logprob: -4.043232440948486
    3. '
' → logprob: -4.543232440948486
    4. ' for' → logprob: -5.418232440948486
    5. 'for' → logprob: -5.543232440948486
    6. '       ' → logprob: -5.793232440948486
    7. '<|end|>' → logprob: -7.043232440948486
    8. '```' → logprob: -8.793231964111328
    9. ')' → logprob: -8.918231964111328
    10. '	for' → logprob: -9.043231964111328

Token 1102: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05296819657087326
    2. ' for' → logprob: -3.0529682636260986
    3. 'for' → logprob: -5.8029680252075195
    4. '       ' → logprob: -7.3029680252075195
    5. '	for' → logprob: -8.42796802520752
    6. ' ' → logprob: -8.67796802520752
    7. '<|end|>' → logprob: -9.17796802520752
    8. '
' → logprob: -9.30296802520752
    9. ',' → logprob: -10.42796802520752
    10. '    
' → logprob: -11.05296802520752

Token 1103: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006974067073315382
    2. ' for' → logprob: -5.006974220275879
    3. '   ' → logprob: -8.631974220275879
    4. '       ' → logprob: -9.756974220275879
    5. '	for' → logprob: -10.881974220275879
    6. '```' → logprob: -13.381974220275879
    7. '
' → logprob: -14.631974220275879
    8. ' ' → logprob: -15.006974220275879
    9. '        
' → logprob: -15.256974220275879
    10. '    
' → logprob: -15.381974220275879

Token 1104: ' k' (ID: 372)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7931587100028992
    2. 'money' → logprob: -0.7931587100028992
    3. 'm' → logprob: -3.918158769607544
    4. 'x' → logprob: -4.418158531188965
    5. 's' → logprob: -4.668158531188965
    6. 'v' → logprob: -4.918158531188965
    7. 'amount' → logprob: -5.043158531188965
    8. 'k' → logprob: -5.043158531188965
    9. 'amt' → logprob: -5.543158531188965
    10. 'cur' → logprob: -5.793158531188965

Token 1105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014256938360631466
    2. 'in' → logprob: -4.264256954193115
    3. 'range' → logprob: -10.389256477355957
    4. ' ' → logprob: -10.514256477355957
    5. 'k' → logprob: -11.514256477355957
    6. ' range' → logprob: -11.889256477355957
    7. 'n' → logprob: -12.139256477355957
    8. ' k' → logprob: -12.764256477355957
    9. ' i' → logprob: -13.264256477355957
    10. '	in' → logprob: -13.264256477355957

Token 1106: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0028140286449342966
    2. ' range' → logprob: -5.877813816070557
    3. '(range' → logprob: -11.877814292907715
    4. '	range' → logprob: -13.127814292907715
    5. '250' → logprob: -16.7528133392334
    6. 'rang' → logprob: -17.7528133392334
    7. '_range' → logprob: -17.8778133392334
    8. '(' → logprob: -17.8778133392334
    9. '
' → logprob: -18.2528133392334
    10. ' xrange' → logprob: -18.7528133392334

Token 1107: '(' (ID: 7)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.00021343429398257285
    2. '(' → logprob: -8.625213623046875
    3. ' ' → logprob: -10.375213623046875
    4. '25' → logprob: -14.125213623046875
    5. '2' → logprob: -14.375213623046875
    6. '245' → logprob: -14.750213623046875
    7. '251' → logprob: -15.125213623046875
    8. '{' → logprob: -15.875213623046875
    9. '   ' → logprob: -15.875213623046875
    10. '0' → logprob: -16.375213623046875

Token 1108: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -4.632542913896032e-05
    2. '245' → logprob: -10.250046730041504
    3. '249' → logprob: -12.125046730041504
    4. '2' → logprob: -13.375046730041504
    5. '25' → logprob: -13.750046730041504
    6. ' ' → logprob: -13.875046730041504
    7. '240' → logprob: -13.875046730041504
    8. '0' → logprob: -15.125046730041504
    9. '251' → logprob: -15.875046730041504
    10. '225' → logprob: -16.375045776367188

Token 1109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.703443770878948e-06
    2. '1' → logprob: -12.250007629394531
    3. '۰' → logprob: -13.375007629394531
    4. '０' → logprob: -14.875007629394531
    5. ')' → logprob: -15.000007629394531
    6. '०' → logprob: -15.625007629394531
    7. '০' → logprob: -16.00000762939453
    8. '٠' → logprob: -16.25000762939453
    9. ' ' → logprob: -16.62500762939453
    10. 'o' → logprob: -17.06250762939453

Token 1110: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6336854696273804
    2. '):' → logprob: -0.7586854696273804
    3. '+' → logprob: -7.50868558883667
    4. '   ' → logprob: -8.633685111999512
    5. '):
' → logprob: -8.633685111999512
    6. '-' → logprob: -9.508685111999512
    7. ' ):' → logprob: -10.508685111999512
    8. ' ):
' → logprob: -10.633685111999512
    9. ':' → logprob: -11.258685111999512
    10. '       ' → logprob: -11.383685111999512

Token 1111: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1491117626428604
    2. '<|end|>' → logprob: -2.524111747741699
    3. '   ' → logprob: -4.274111747741699
    4. ' if' → logprob: -4.399111747741699
    5. '           ' → logprob: -4.649111747741699
    6. '        
' → logprob: -5.649111747741699
    7. ' ' → logprob: -5.774111747741699
    8. '	   ' → logprob: -5.899111747741699
    9. '	       ' → logprob: -6.149111747741699
    10. '        ' → logprob: -6.399111747741699

Token 1112: ' Pour' (ID: 13931)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0713452100753784
    2. '   ' → logprob: -1.4463452100753784
    3. 'if' → logprob: -1.5713452100753784
    4. 'for' → logprob: -1.8213452100753784
    5. ' for' → logprob: -3.071345329284668
    6. '       ' → logprob: -6.321345329284668
    7. 'range' → logprob: -6.821345329284668
    8. ' ' → logprob: -7.071345329284668
    9. '```' → logprob: -7.196345329284668
    10. ' range' → logprob: -7.446345329284668

Token 1113: ' chaque' (ID: 21194)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.013025160878896713
    2. 'range' → logprob: -5.138025283813477
    3. ' k' → logprob: -5.263025283813477
    4. ' range' → logprob: -6.388025283813477
    5. '250' → logprob: -8.763025283813477
    6. ' ' → logprob: -10.763025283813477
    7. '	k' → logprob: -11.888025283813477
    8. '   ' → logprob: -11.888025283813477
    9. '_k' → logprob: -12.263025283813477
    10. '	range' → logprob: -12.388025283813477

Token 1114: ' valeur' (ID: 41664)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.060243431478738785
    2. '250' → logprob: -2.9352433681488037
    3. 'range' → logprob: -5.935243606567383
    4. ' ' → logprob: -7.185243606567383
    5. ' k' → logprob: -7.560243606567383
    6. ' range' → logprob: -7.685243606567383
    7. 'n' → logprob: -8.185243606567383
    8. '(k' → logprob: -8.560243606567383
    9. '   ' → logprob: -9.060243606567383
    10. '
' → logprob: -9.560243606567383

Token 1115: ' possible' (ID: 4149)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.970343828201294
    2. ' in' → logprob: -1.220343828201294
    3. ' of' → logprob: -2.345343828201294
    4. 'in' → logprob: -3.220343828201294
    5. ' k' → logprob: -3.595343828201294
    6. ' (' → logprob: -3.720343828201294
    7. ' range' → logprob: -3.845343828201294
    8. ' en' → logprob: -3.970343828201294
    9. ')' → logprob: -4.345343589782715
    10. '<|end|>' → logprob: -4.720343589782715

Token 1116: ' du' (ID: 1462)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1679292917251587
    2. 'in' → logprob: -1.7929292917251587
    3. ':' → logprob: -1.9179292917251587
    4. ' (' → logprob: -2.042929172515869
    5. '(n' → logprob: -2.792929172515869
    6. ':
' → logprob: -3.167929172515869
    7. '   ' → logprob: -3.417929172515869
    8. '(k' → logprob: -3.542929172515869
    9. '(i' → logprob: -4.667929172515869
    10. ' :' → logprob: -4.667929172515869

Token 1117: ' montant' (ID: 72364)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.014914944767951965
    2. 'argent' → logprob: -4.6399149894714355
    3. '250' → logprob: -5.8899149894714355
    4. 'money' → logprob: -6.6399149894714355
    5. ' k' → logprob: -7.3899149894714355
    6. '```' → logprob: -8.639914512634277
    7. ''argent' → logprob: -9.014914512634277
    8. 'mont' → logprob: -9.889914512634277
    9. 'capital' → logprob: -10.764914512634277
    10. ' money' → logprob: -11.139914512634277

Token 1118: ' d' (ID: 272)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.6818099021911621
    2. ' d' → logprob: -2.306809902191162
    3. ' (' → logprob: -2.681809902191162
    4. 'k' → logprob: -2.806809902191162
    5. ' k' → logprob: -3.306809902191162
    6. '(range' → logprob: -3.556809902191162
    7. ' ' → logprob: -3.681809902191162
    8. '_k' → logprob: -3.806809902191162
    9. '(' → logprob: -3.931809902191162
    10. 'in' → logprob: -4.056809902191162

Token 1119: ''argent' (ID: 93204)
  Prédit: 'argent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argent' → logprob: -0.576026976108551
    2. ''argent' → logprob: -0.826026976108551
    3. '’argent' → logprob: -10.201026916503906
    4. ' argent' → logprob: -11.201026916503906
    5. 'arg' → logprob: -11.826026916503906
    6. '_arg' → logprob: -11.826026916503906
    7. 'range' → logprob: -12.326026916503906
    8. 'arge' → logprob: -12.451026916503906
    9. 'money' → logprob: -12.451026916503906
    10. ''' → logprob: -13.326026916503906

Token 1120: ' déten' (ID: 196943)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3135477602481842
    2. '   ' → logprob: -1.8135477304458618
    3. '       ' → logprob: -2.3135478496551514
    4. '<|end|>' → logprob: -6.188547611236572
    5. ':
' → logprob: -6.438547611236572
    6. ' :' → logprob: -7.188547611236572
    7. '           ' → logprob: -7.188547611236572
    8. '):' → logprob: -7.563547611236572
    9. ',' → logprob: -8.06354808807373
    10. '<|end|>' → logprob: -8.43854808807373

Token 1121: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.01262548565864563
    2. 'ue' → logprob: -4.387625694274902
    3. 'us' → logprob: -9.637625694274902
    4. 'ues' → logprob: -11.262625694274902
    5. '```' → logprob: -11.887625694274902
    6. '   ' → logprob: -12.137625694274902
    7. '[u' → logprob: -12.387625694274902
    8. 'i' → logprob: -12.512625694274902
    9. 'ant' → logprob: -13.137625694274902
    10. '
' → logprob: -13.262625694274902

Token 1122: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4773806929588318
    2. ':' → logprob: -1.1023807525634766
    3. '       ' → logprob: -3.6023807525634766
    4. '<|end|>' → logprob: -5.477380752563477
    5. '):' → logprob: -5.727380752563477
    6. ':
' → logprob: -5.727380752563477
    7. ' :' → logprob: -5.852380752563477
    8. '):
' → logprob: -6.477380752563477
    9. '```' → logprob: -6.727380752563477
    10. '           ' → logprob: -7.102380752563477

Token 1123: 'de' (ID: 613)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '250' → logprob: -0.13892391324043274
    2. ')' → logprob: -2.5139238834381104
    3. 'k' → logprob: -3.7639238834381104
    4. ' ' → logprob: -4.3889241218566895
    5. 'n' → logprob: -5.3889241218566895
    6. '):
' → logprob: -5.6389241218566895
    7. '):' → logprob: -6.3889241218566895
    8. '   ' → logprob: -7.0139241218566895
    9. '1' → logprob: -7.3889241218566895
    10. '25' → logprob: -8.013923645019531

Token 1124: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004248355980962515
    2. '250' → logprob: -8.2504243850708
    3. ' ' → logprob: -8.7504243850708
    4. 'k' → logprob: -13.1254243850708
    5. 'range' → logprob: -13.3754243850708
    6. ')' → logprob: -14.7504243850708
    7. '   ' → logprob: -14.8754243850708
    8. '    ' → logprob: -15.7504243850708
    9. '```' → logprob: -15.7504243850708
    10. ' range' → logprob: -15.8754243850708

Token 1125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.50001049041748
    3. '250' → logprob: -15.00001049041748
    4. 'range' → logprob: -16.625011444091797
    5. 'k' → logprob: -17.875011444091797
    6. '```' → logprob: -17.875011444091797
    7. '1' → logprob: -18.125011444091797
    8. '
' → logprob: -18.500011444091797
    9. '۰' → logprob: -19.250011444091797
    10. ',' → logprob: -19.750011444091797

Token 1126: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.0957568883895874
    2. ' à' → logprob: -1.5957568883895874
    3. '250' → logprob: -2.095757007598877
    4. '0' → logprob: -2.345757007598877
    5. ' to' → logprob: -2.595757007598877
    6. 'to' → logprob: -3.095757007598877
    7. ',' → logprob: -3.220757007598877
    8. ' ' → logprob: -3.470757007598877
    9. ')' → logprob: -3.720757007598877
    10. '):
' → logprob: -4.720757007598877

Token 1127: ' ' (ID: 220)
  Prédit: '249'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '249' → logprob: -0.00024299313372466713
    2. ' ' → logprob: -8.750243186950684
    3. '244' → logprob: -9.750243186950684
    4. '250' → logprob: -11.875243186950684
    5. '   ' → logprob: -11.875243186950684
    6. '  ' → logprob: -12.750243186950684
    7. '24' → logprob: -13.250243186950684
    8. '254' → logprob: -13.375243186950684
    9. '```' → logprob: -13.625243186950684
    10. '
' → logprob: -13.875243186950684

Token 1128: '249' (ID: 26392)
  Prédit: '249'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '249' → logprob: -0.0007370850071310997
    2. ' ' → logprob: -8.000737190246582
    3. '244' → logprob: -8.375737190246582
    4. '250' → logprob: -9.125737190246582
    5. '
' → logprob: -11.125737190246582
    6. '24' → logprob: -11.375737190246582
    7. 'k' → logprob: -12.125737190246582
    8. '   ' → logprob: -12.500737190246582
    9. '0' → logprob: -12.625737190246582
    10. '254' → logprob: -12.750737190246582

Token 1129: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.5776860184123507e-06
    2. ')' → logprob: -13.87500286102295
    3. '```' → logprob: -14.37500286102295
    4. '۹' → logprob: -15.50000286102295
    5. '   ' → logprob: -15.62500286102295
    6. '९' → logprob: -16.125001907348633
    7. '９' → logprob: -16.375001907348633
    8. ')
' → logprob: -16.500001907348633
    9. '
' → logprob: -16.500001907348633
    10. '٩' → logprob: -17.250001907348633

Token 1130: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2540827989578247
    2. '):' → logprob: -1.5040827989578247
    3. '   ' → logprob: -7.129082679748535
    4. ')' → logprob: -7.504082679748535
    5. '):
' → logprob: -7.629082679748535
    6. ':' → logprob: -9.004082679748535
    7. '       ' → logprob: -9.629082679748535
    8. ' ):
' → logprob: -9.754082679748535
    9. '):

' → logprob: -10.879082679748535
    10. ':
' → logprob: -11.629082679748535

Token 1131: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3917597830295563
    2. '       ' → logprob: -1.1417597532272339
    3. ' if' → logprob: -5.891759872436523
    4. '           ' → logprob: -6.766759872436523
    5. 'if' → logprob: -8.141759872436523
    6. '<|end|>' → logprob: -9.141759872436523
    7. '               ' → logprob: -9.391759872436523
    8. ' for' → logprob: -9.391759872436523
    9. '    ' → logprob: -9.516759872436523
    10. ' ' → logprob: -10.016759872436523

Token 1132: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08691278845071793
    2. '           ' → logprob: -3.9619128704071045
    3. '   ' → logprob: -3.9619128704071045
    4. ' if' → logprob: -4.211912631988525
    5. 'for' (adapté à ' for') → logprob: -4.461912631988525
    6. 'idx' → logprob: -5.086912631988525
    7. 'cur' → logprob: -6.086912631988525
    8. 'money' → logprob: -6.211912631988525
    9. 'm' → logprob: -6.586912631988525
    10. '       ' → logprob: -6.961912631988525

Token 1133: ' v' (ID: 323)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.9551404714584351
    2. '(v' → logprob: -1.080140471458435
    3. 'v' → logprob: -1.580140471458435
    4. '(u' → logprob: -3.0801405906677246
    5. 'u' → logprob: -4.705140590667725
    6. 'to' → logprob: -5.580140590667725
    7. '(n' → logprob: -6.080140590667725
    8. ' nv' → logprob: -6.455140590667725
    9. 'nx' → logprob: -6.955140590667725
    10. '(nx' → logprob: -7.205140590667725

Token 1134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011621476151049137
    2. ',u' → logprob: -5.011621475219727
    3. ' ,' → logprob: -6.386621475219727
    4. ' in' → logprob: -6.636621475219727
    5. ',v' → logprob: -7.761621475219727
    6. 'u' → logprob: -8.011621475219727
    7. 'in' → logprob: -8.136621475219727
    8. ',G' → logprob: -8.261621475219727
    9. ',user' → logprob: -9.386621475219727
    10. ',n' → logprob: -9.761621475219727

Token 1135: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018151231110095978
    2. ' a' → logprob: -4.01815128326416
    3. '	a' → logprob: -15.26815128326416
    4. ' ' → logprob: -15.39315128326416
    5. ',a' → logprob: -16.018150329589844
    6. '(a' → logprob: -16.393150329589844
    7. '           ' → logprob: -16.518150329589844
    8. '    ' → logprob: -16.643150329589844
    9. '  ' → logprob: -16.893150329589844
    10. ',' → logprob: -16.893150329589844

Token 1136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005662360228598118
    2. ',b' → logprob: -5.255662441253662
    3. ' ,' → logprob: -8.255661964416504
    4. 'b' → logprob: -9.130661964416504
    5. ',d' → logprob: -11.505661964416504
    6. ',v' → logprob: -11.630661964416504
    7. ',c' → logprob: -11.755661964416504
    8. ',w' → logprob: -11.755661964416504
    9. '```' → logprob: -12.505661964416504
    10. ',t' → logprob: -13.130661964416504

Token 1137: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.635164754698053e-05
    2. ' b' → logprob: -9.625066757202148
    3. 'c' → logprob: -16.62506675720215
    4. '       ' → logprob: -17.12506675720215
    5. ' ' → logprob: -17.25006675720215
    6. '   ' → logprob: -17.25006675720215
    7. '    ' → logprob: -18.62506675720215
    8. '	b' → logprob: -18.75006675720215
    9. '           ' → logprob: -19.12506675720215
    10. '```' → logprob: -19.25006675720215

Token 1138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05492798984050751
    2. 'in' → logprob: -2.9299280643463135
    3. ' ' → logprob: -10.304927825927734
    4. 's' → logprob: -12.554927825927734
    5. '	in' → logprob: -12.554927825927734
    6. '  ' → logprob: -13.554927825927734
    7. ',' → logprob: -13.554927825927734
    8. '<|end|>' → logprob: -14.304927825927734
    9. ' ,' → logprob: -15.304927825927734
    10. ' ' → logprob: -15.429927825927734

Token 1139: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.00020354038861114532
    2. ' G' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.12520408630371
    4. 'edge' → logprob: -18.75020408630371
    5. '[G' → logprob: -19.25020408630371
    6. ' ' → logprob: -19.37520408630371
    7. '(G' → logprob: -19.37520408630371
    8. '	G' → logprob: -19.62520408630371
    9. '  ' → logprob: -20.25020408630371
    10. '    ' → logprob: -21.12520408630371

Token 1140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004957250785082579
    2. '[u' → logprob: -8.000495910644531
    3. 'i' → logprob: -8.875495910644531
    4. '[v' → logprob: -11.000495910644531
    5. '[' → logprob: -14.250495910644531
    6. '[
' → logprob: -14.500495910644531
    7. '[k' → logprob: -14.500495910644531
    8. '[s' → logprob: -14.750495910644531
    9. '```' → logprob: -14.750495910644531
    10. '(i' → logprob: -15.375495910644531

Token 1141: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.015597064979374409
    2. ':' → logprob: -5.015596866607666
    3. ']:
' → logprob: -5.140596866607666
    4. '):' → logprob: -5.890596866607666
    5. ']:
' → logprob: -9.390597343444824
    6. '}:' → logprob: -10.265597343444824
    7. '):
' → logprob: -10.390597343444824
    8. '>:' → logprob: -10.765597343444824
    9. ']' → logprob: -11.140597343444824
    10. '       ' → logprob: -12.015597343444824

Token 1142: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011247373186051846
    2. ' if' → logprob: -7.876124858856201
    3. '                               ' → logprob: -8.876124382019043
    4. '                       ' → logprob: -9.376124382019043
    5. '	           ' → logprob: -9.501124382019043
    6. '<|end|>' → logprob: -9.751124382019043
    7. '           ' → logprob: -10.001124382019043
    8. '                ' → logprob: -10.001124382019043
    9. '                   ' → logprob: -10.126124382019043
    10. ' ' → logprob: -10.751124382019043

Token 1143: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4343660771846771
    2. ' if' → logprob: -1.0593661069869995
    3. '               ' → logprob: -5.809366226196289
    4. '                   ' → logprob: -7.434366226196289
    5. 'nk' → logprob: -7.934366226196289
    6. 'new' → logprob: -8.184366226196289
    7. '   ' → logprob: -8.309366226196289
    8. '#' (adapté à ' #') → logprob: -9.059366226196289
    9. 'next' → logprob: -9.059366226196289
    10. 'k' → logprob: -9.059366226196289

Token 1144: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04514968395233154
    2. ' if' → logprob: -3.545149803161621
    3. 'new' → logprob: -5.295149803161621
    4. 'nk' → logprob: -5.795149803161621
    5. 'next' → logprob: -6.045149803161621
    6. '               ' → logprob: -6.295149803161621
    7. 'cost' → logprob: -7.420149803161621
    8. 'nj' → logprob: -7.920149803161621
    9. 'money' → logprob: -8.045149803161621
    10. '           ' → logprob: -8.295149803161621

Token 1145: ' chaque' (ID: 21194)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09728384763002396
    2. ' k' → logprob: -2.4722838401794434
    3. 'a' → logprob: -5.847283840179443
    4. 'money' → logprob: -6.347283840179443
    5. 'l' → logprob: -7.097283840179443
    6. 'm' → logprob: -7.722283840179443
    7. ' money' → logprob: -7.847283840179443
    8. ' a' → logprob: -8.097284317016602
    9. 'v' → logprob: -8.347284317016602
    10. '(k' → logprob: -8.597284317016602

Token 1146: ' voisin' (ID: 145411)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12507683038711548
    2. 'nv' → logprob: -3.2500767707824707
    3. ' v' → logprob: -3.5000767707824707
    4. '(v' → logprob: -3.7500767707824707
    5. ' (' → logprob: -5.000076770782471
    6. 'k' → logprob: -5.000076770782471
    7. ' nv' → logprob: -6.000076770782471
    8. 'edge' → logprob: -6.500076770782471
    9. '(k' → logprob: -6.625076770782471
    10. '(' → logprob: -6.750076770782471

Token 1147: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.889919102191925
    2. ' v' → logprob: -1.8899190425872803
    3. ' in' → logprob: -2.2649190425872803
    4. '<|end|>' → logprob: -2.2649190425872803
    5. ',' → logprob: -2.8899190425872803
    6. ' (' → logprob: -3.0149190425872803
    7. '(v' → logprob: -3.6399190425872803
    8. 'in' → logprob: -3.6399190425872803
    9. ' ,' → logprob: -4.139919281005859
    10. ',v' → logprob: -4.139919281005859

Token 1148: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20499280095100403
    2. '                   ' → logprob: -2.2049927711486816
    3. ':
' → logprob: -3.3299927711486816
    4. ',' → logprob: -3.7049927711486816
    5. ' if' → logprob: -5.704992771148682
    6. '               ' → logprob: -5.954992771148682
    7. ' in' → logprob: -5.954992771148682
    8. ' and' → logprob: -6.329992771148682
    9. ' :' → logprob: -6.579992771148682
    10. '   ' → logprob: -7.454992771148682

Token 1149: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0063072387129068375
    2. ' i' → logprob: -5.756307125091553
    3. 'range' → logprob: -6.131307125091553
    4. 'edge' → logprob: -8.131307601928711
    5. 'G' → logprob: -8.381307601928711
    6. 'l' → logprob: -8.631307601928711
    7. 'v' → logprob: -9.506307601928711
    8. ' range' → logprob: -9.631307601928711
    9. '```' → logprob: -10.256307601928711
    10. ' edge' → logprob: -10.631307601928711

Token 1150: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.824656069278717
    2. ',' → logprob: -0.949656069278717
    3. '                   ' → logprob: -2.5746560096740723
    4. ':
' → logprob: -2.9496560096740723
    5. '               ' → logprob: -4.074656009674072
    6. ' :' → logprob: -4.824656009674072
    7. ' if' → logprob: -4.949656009674072
    8. '           ' → logprob: -5.699656009674072
    9. ' and' → logprob: -5.949656009674072
    10. '   ' → logprob: -6.449656009674072

Token 1151: ' où' (ID: 15113)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15752002596855164
    2. 'if' → logprob: -2.032520055770874
    3. '                   ' → logprob: -5.407519817352295
    4. '               ' → logprob: -6.032519817352295
    5. ' new' → logprob: -6.532519817352295
    6. ' nk' → logprob: -6.532519817352295
    7. 'money' → logprob: -6.907519817352295
    8. ' money' → logprob: -7.282519817352295
    9. 'new' → logprob: -7.282519817352295
    10. 'nk' → logprob: -7.532519817352295

Token 1152: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05720549821853638
    2. ' a' → logprob: -3.0572054386138916
    3. 'k' → logprob: -5.432205677032471
    4. 'v' → logprob: -6.932205677032471
    5. 'u' → logprob: -7.182205677032471
    6. ' not' → logprob: -7.557205677032471
    7. 'not' → logprob: -7.932205677032471
    8. 'b' → logprob: -8.182205200195312
    9. ' k' → logprob: -8.182205200195312
    10. ' v' → logprob: -8.682205200195312

Token 1153: ' est' (ID: 893)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6573425531387329
    2. '<=' → logprob: -0.9073425531387329
    3. ',' → logprob: -2.6573424339294434
    4. ' ,' → logprob: -5.407342433929443
    5. ',k' → logprob: -7.532342433929443
    6. '>' → logprob: -7.782342433929443
    7. ')' → logprob: -7.782342433929443
    8. '<|end|>' → logprob: -7.907342433929443
    9. ',b' → logprob: -8.282342910766602
    10. ' is' → logprob: -8.407342910766602

Token 1154: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19289417564868927
    2. ' a' → logprob: -2.192894220352173
    3. ' the' → logprob: -3.942894220352173
    4. 'the' → logprob: -4.567893981933594
    5. 'co' → logprob: -5.192893981933594
    6. 'cost' → logprob: -5.567893981933594
    7. 'k' → logprob: -5.692893981933594
    8. 'l' → logprob: -5.692893981933594
    9. '250' → logprob: -5.692893981933594
    10. ' le' → logprob: -6.067893981933594

Token 1155: ' montant' (ID: 72364)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6563783288002014
    2. 'cost' → logprob: -1.4063782691955566
    3. 'co' → logprob: -2.4063782691955566
    4. ' a' → logprob: -2.7813782691955566
    5. ' cost' → logprob: -3.5313782691955566
    6. 'amount' → logprob: -3.7813782691955566
    7. 'c' → logprob: -4.781378269195557
    8. 'k' → logprob: -5.406378269195557
    9. ' amount' → logprob: -5.656378269195557
    10. 'cout' → logprob: -6.156378269195557

Token 1156: ' minimal' (ID: 19957)
  Prédit: 'né'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'né' → logprob: -0.5164945721626282
    2. 'd' → logprob: -1.1414945125579834
    3. ' d' → logprob: -3.5164945125579834
    4. 'de' → logprob: -4.5164947509765625
    5. 'necess' → logprob: -4.6414947509765625
    6. 'n' → logprob: -5.1414947509765625
    7. '```' → logprob: -5.3914947509765625
    8. ' ' → logprob: -5.5164947509765625
    9. 'necessary' → logprob: -6.3914947509765625
    10. 'a' → logprob: -6.3914947509765625

Token 1157: ' nécessaire' (ID: 43098)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5989203453063965
    2. 'd' → logprob: -1.0989203453063965
    3. 'né' → logprob: -3.0989203453063965
    4. 'de' → logprob: -4.3489203453063965
    5. ' requis' → logprob: -4.5989203453063965
    6. ' nécessaire' → logprob: -4.8489203453063965
    7. 'necess' → logprob: -5.4739203453063965
    8. 'required' → logprob: -5.5989203453063965
    9. ' de' → logprob: -5.7239203453063965
    10. 'necessary' → logprob: -5.8489203453063965

Token 1158: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.5690833330154419
    2. 'pour' → logprob: -1.694083333015442
    3. ',' → logprob: -2.6940832138061523
    4. ' à' → logprob: -2.9440832138061523
    5. ' to' → logprob: -3.0690832138061523
    6. 'd' → logprob: -4.069083213806152
    7. ' for' → logprob: -4.444083213806152
    8. ' and' → logprob: -4.694083213806152
    9. ' et' → logprob: -4.694083213806152
    10. 'et' → logprob: -5.069083213806152

Token 1159: ' le' (ID: 505)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2449752539396286
    2. 'se' → logprob: -2.8699753284454346
    3. 'contin' → logprob: -2.8699753284454346
    4. 'pass' → logprob: -3.3699753284454346
    5. 'aller' → logprob: -4.1199750900268555
    6. 'prendre' → logprob: -4.1199750900268555
    7. ' k' → logprob: -5.2449750900268555
    8. 'acheter' → logprob: -5.4949750900268555
    9. 'util' → logprob: -5.7449750900268555
    10. 'payer' → logprob: -5.7449750900268555

Token 1160: ' déplacement' (ID: 138449)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.18167255818843842
    2. 'pass' → logprob: -2.4316725730895996
    3. 'dé' → logprob: -3.0566725730895996
    4. 'contin' → logprob: -4.8066725730896
    5. 'tr' → logprob: -5.0566725730896
    6. 'prendre' → logprob: -5.4316725730896
    7. 'voy' → logprob: -6.3066725730896
    8. ' k' → logprob: -6.5566725730896
    9. 'payer' → logprob: -6.6816725730896
    10. 'trans' → logprob: -7.0566725730896

Token 1161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023254329338669777
    2. ' if' → logprob: -4.89825439453125
    3. ' ,' → logprob: -5.27325439453125
    4. ' and' → logprob: -5.89825439453125
    5. ':' → logprob: -6.27325439453125
    6. '               ' → logprob: -6.39825439453125
    7. '<|end|>' → logprob: -7.39825439453125
    8. ',
' → logprob: -7.39825439453125
    9. '           ' → logprob: -7.64825439453125
    10. ' (' → logprob: -8.02325439453125

Token 1162: ' b' (ID: 287)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35104912519454956
    2. ' if' → logprob: -1.3510491847991943
    3. '               ' → logprob: -3.7260491847991943
    4. 'cost' → logprob: -5.851048946380615
    5. 'new' → logprob: -5.976048946380615
    6. 'and' → logprob: -6.226048946380615
    7. '                   ' → logprob: -6.351048946380615
    8. ' and' → logprob: -6.851048946380615
    9. 'c' → logprob: -7.351048946380615
    10. '#' → logprob: -7.601048946380615

Token 1163: ' le' (ID: 505)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7832518219947815
    2. ' =' → logprob: -1.5332517623901367
    3. ')' → logprob: -2.1582517623901367
    4. '>' → logprob: -3.2832517623901367
    5. '>=' → logprob: -3.4082517623901367
    6. ' est' → logprob: -3.5332517623901367
    7. ' is' → logprob: -3.6582517623901367
    8. '<|end|>' → logprob: -4.033251762390137
    9. ':' → logprob: -4.408251762390137
    10. ',' → logprob: -4.658251762390137

Token 1164: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.0008826419361867011
    2. 'c' → logprob: -8.000883102416992
    3. 'cout' → logprob: -8.125883102416992
    4. 'cost' → logprob: -8.625883102416992
    5. ' coût' → logprob: -10.625883102416992
    6. 'temps' → logprob: -11.250883102416992
    7. 'prix' → logprob: -11.250883102416992
    8. 'b' → logprob: -12.000883102416992
    9. '   ' → logprob: -13.125883102416992
    10. 'coe' → logprob: -13.375883102416992

Token 1165: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5257830619812012
    2. 'en' → logprob: -1.7757830619812012
    3. ' en' → logprob: -2.275783061981201
    4. '           ' → logprob: -2.775783061981201
    5. 'if' → logprob: -3.025783061981201
    6. '
' → logprob: -3.275783061981201
    7. 'in' → logprob: -3.525783061981201
    8. ',' → logprob: -3.650783061981201
    9. '=' → logprob: -3.650783061981201
    10. '            
' → logprob: -3.900783061981201

Token 1166: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.49743029475212097
    2. '               ' → logprob: -1.2474303245544434
    3. ' if' → logprob: -3.6224303245544434
    4. '           ' → logprob: -4.497430324554443
    5. '                       ' → logprob: -4.497430324554443
    6. ':' → logprob: -4.747430324554443
    7. '                           ' → logprob: -5.122430324554443
    8. ',' → logprob: -5.247430324554443
    9. '[token' → logprob: -5.372430324554443
    10. '                               ' → logprob: -5.497430324554443

Token 1167: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4250028729438782
    2. ' if' → logprob: -1.3000028133392334
    3. '               ' → logprob: -2.6750028133392334
    4. '                   ' → logprob: -5.9250030517578125
    5. '           ' → logprob: -6.4250030517578125
    6. 'token' → logprob: -8.800003051757812
    7. '                       ' → logprob: -9.925003051757812
    8. '                ' → logprob: -9.925003051757812
    9. 'next' → logprob: -10.300003051757812
    10. '                           ' → logprob: -10.800003051757812

Token 1168: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007430415134876966
    2. ' k' → logprob: -7.2507429122924805
    3. 'a' → logprob: -11.00074291229248
    4. 'c' → logprob: -11.75074291229248
    5. '   ' → logprob: -13.12574291229248
    6. '(k' → logprob: -13.37574291229248
    7. '250' → logprob: -14.00074291229248
    8. 'b' → logprob: -14.00074291229248
    9. '0' → logprob: -14.50074291229248
    10. ' ' → logprob: -14.81324291229248

Token 1169: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.28335195779800415
    2. ' >=' → logprob: -1.4083518981933594
    3. ']>=' → logprob: -7.158351898193359
    4. '+' → logprob: -7.908351898193359
    5. ')>=' → logprob: -8.15835189819336
    6. '[' → logprob: -8.15835189819336
    7. ' ' → logprob: -8.53335189819336
    8. '=' → logprob: -10.03335189819336
    9. '>' → logprob: -10.28335189819336
    10. '    ' → logprob: -10.40835189819336

Token 1170: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000553151941858232
    2. ' a' → logprob: -7.500553131103516
    3. '	a' → logprob: -16.125553131103516
    4. '   ' → logprob: -18.000553131103516
    5. '#a' → logprob: -18.625553131103516
    6. ' ' → logprob: -19.125553131103516
    7. ''a' → logprob: -19.375553131103516
    8. '_a' → logprob: -19.750553131103516
    9. '>a' → logprob: -19.750553131103516
    10. '"a' → logprob: -19.875553131103516

Token 1171: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4856400191783905
    2. ' and' → logprob: -0.9856400489807129
    3. 'and' → logprob: -5.110640048980713
    4. ':
' → logprob: -5.485640048980713
    5. '               ' → logprob: -7.985640048980713
    6. '           ' → logprob: -8.485639572143555
    7. ' :' → logprob: -8.735639572143555
    8. '                   ' → logprob: -8.735639572143555
    9. '):' → logprob: -9.110639572143555
    10. '                       ' → logprob: -9.235639572143555

Token 1172: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0386308431625366
    2. '                   ' → logprob: -1.0386308431625366
    3. ' new' → logprob: -2.913630962371826
    4. ' idx' → logprob: -3.538630962371826
    5. 'edge' → logprob: -3.788630962371826
    6. ' u' → logprob: -3.913630962371826
    7. ' next' → logprob: -4.038630962371826
    8. 'new' → logprob: -4.038630962371826
    9. ' nxt' → logprob: -4.038630962371826
    10. 'next' → logprob: -4.163630962371826

Token 1173: ' On' (ID: 2160)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35606327652931213
    2. 'edge' → logprob: -2.1060633659362793
    3. ' edge' → logprob: -2.3560633659362793
    4. '           ' → logprob: -2.8560633659362793
    5. '                   ' → logprob: -4.106063365936279
    6. '                       ' → logprob: -6.481063365936279
    7. '   ' → logprob: -6.731063365936279
    8. ' ' → logprob: -6.981063365936279
    9. ' token' → logprob: -7.231063365936279
    10. 'token' → logprob: -7.481063365936279

Token 1174: ' vér' (ID: 42524)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1357165575027466
    2. 'edge' → logprob: -1.7607165575027466
    3. 'continue' → logprob: -2.010716438293457
    4. '               ' → logprob: -2.010716438293457
    5. 'for' → logprob: -3.260716438293457
    6. ' continue' → logprob: -3.385716438293457
    7. 'contin' → logprob: -3.510716438293457
    8. ' edge' → logprob: -3.760716438293457
    9. '                   ' → logprob: -4.260716438293457
    10. '#' → logprob: -4.260716438293457

Token 1175: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0011590276844799519
    2. 'if' → logprob: -7.126159191131592
    3. 'i' → logprob: -8.876158714294434
    4. 'ifi' → logprob: -9.126158714294434
    5. 'ifiez' → logprob: -10.251158714294434
    6. 'ifié' → logprob: -11.001158714294434
    7. '```' → logprob: -11.376158714294434
    8. 'ifies' → logprob: -11.501158714294434
    9. 'ifier' → logprob: -11.751158714294434
    10. 'ife' → logprob: -12.501158714294434

Token 1176: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.7265129089355469
    2. '               ' → logprob: -1.7265129089355469
    3. ' if' → logprob: -1.8515129089355469
    4. ' (' → logprob: -2.101512908935547
    5. ':' → logprob: -2.351512908935547
    6. '           ' → logprob: -2.851512908935547
    7. ' k' → logprob: -3.601512908935547
    8. '                   ' → logprob: -3.851512908935547
    9. '                               ' → logprob: -3.976512908935547
    10. '(' → logprob: -4.226512908935547

Token 1177: ' on' (ID: 402)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10241377353668213
    2. ' k' → logprob: -2.3524136543273926
    3. '(k' → logprob: -7.352413654327393
    4. 'True' → logprob: -7.602413654327393
    5. ' True' → logprob: -7.852413654327393
    6. ' (' → logprob: -8.47741413116455
    7. '1' → logprob: -8.60241413116455
    8. '           ' → logprob: -9.35241413116455
    9. '               ' → logprob: -9.35241413116455
    10. '[k' → logprob: -10.85241413116455

Token 1178: ' dét' (ID: 31931)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5983929634094238
    2. ' k' → logprob: -0.8483929634094238
    3. ' has' → logprob: -4.723392963409424
    4. ' ' → logprob: -5.973392963409424
    5. ' can' → logprob: -6.348392963409424
    6. ' )' → logprob: -6.348392963409424
    7. ')' → logprob: -6.723392963409424
    8. ' >=' → logprob: -7.098392963409424
    9. 's' → logprob: -7.348392963409424
    10. '```' → logprob: -7.848392963409424

Token 1179: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.0005569627974182367
    2. 'ien' → logprob: -8.000556945800781
    3. '```' → logprob: -10.000556945800781
    4. 'int' → logprob: -10.250556945800781
    5. 'iens' → logprob: -10.375556945800781
    6. 'ait' → logprob: -10.750556945800781
    7. 'ent' → logprob: -11.375556945800781
    8. 'e' → logprob: -11.375556945800781
    9. '...' → logprob: -11.500556945800781
    10. 'iennent' → logprob: -11.875556945800781

Token 1180: ' assez' (ID: 33376)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.42965617775917053
    2. 'k' → logprob: -1.0546561479568481
    3. '1' → logprob: -8.429656028747559
    4. ' ' → logprob: -8.679656028747559
    5. '               ' → logprob: -8.679656028747559
    6. ' a' → logprob: -10.179656028747559
    7. '    ' → logprob: -10.179656028747559
    8. '(k' → logprob: -10.179656028747559
    9. '[k' → logprob: -10.804656028747559
    10. '           ' → logprob: -10.804656028747559

Token 1181: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.025320958346128464
    2. 'd' → logprob: -3.9003210067749023
    3. ' de' → logprob: -5.650321006774902
    4. 'de' → logprob: -7.400321006774902
    5. ' money' → logprob: -9.025321006774902
    6. 'money' → logprob: -9.025321006774902
    7. ''argent' → logprob: -9.150321006774902
    8. '_money' → logprob: -9.775321006774902
    9. 'argent' → logprob: -9.900321006774902
    10. 'k' → logprob: -10.150321006774902

Token 1182: ''argent' (ID: 93204)
  Prédit: ''argent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''argent' → logprob: -0.48148998618125916
    2. 'argent' → logprob: -1.2314900159835815
    3. ' money' → logprob: -3.356489896774292
    4. ' ' → logprob: -3.856489896774292
    5. 'money' → logprob: -3.856489896774292
    6. ' argent' → logprob: -4.981490135192871
    7. '’argent' → logprob: -5.481490135192871
    8. '_money' → logprob: -7.856490135192871
    9. ' arg' → logprob: -7.981490135192871
    10. ' dinheiro' → logprob: -8.231490135192871

Token 1183: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18370826542377472
    2. ' and' → logprob: -2.3087081909179688
    3. '               ' → logprob: -3.9337081909179688
    4. '                   ' → logprob: -4.058708190917969
    5. ' :' → logprob: -5.183708190917969
    6. ':
' → logprob: -5.183708190917969
    7. '           ' → logprob: -5.183708190917969
    8. '                       ' → logprob: -5.433708190917969
    9. '                           ' → logprob: -6.058708190917969
    10. 'and' → logprob: -6.933708190917969

Token 1184: ' utiliser' (ID: 43227)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.9105226993560791
    2. 'faire' → logprob: -1.660522699356079
    3. 'aller' → logprob: -1.910522699356079
    4. 'k' → logprob: -2.035522699356079
    5. 'dé' → logprob: -2.910522699356079
    6. 'pass' → logprob: -4.0355224609375
    7. ' effectuer' → logprob: -4.1605224609375
    8. 'effect' → logprob: -4.4105224609375
    9. 'se' → logprob: -5.1605224609375
    10. 'p' → logprob: -5.7855224609375

Token 1185: ' cette' (ID: 7696)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.11889160424470901
    2. ' k' → logprob: -2.993891716003418
    3. 'v' → logprob: -3.618891716003418
    4. ' this' → logprob: -4.118891716003418
    5. ' v' → logprob: -5.243891716003418
    6. 'this' → logprob: -5.493891716003418
    7. 'the' → logprob: -6.368891716003418
    8. 'that' → logprob: -6.618891716003418
    9. '(k' → logprob: -6.868891716003418
    10. '   ' → logprob: -6.868891716003418

Token 1186: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.4599498212337494
    2. 'arc' → logprob: -1.3349498510360718
    3. 'are' → logprob: -2.8349497318267822
    4. 'vo' → logprob: -4.584949970245361
    5. 'arre' → logprob: -4.709949970245361
    6. 'edge' → logprob: -4.834949970245361
    7. ' ar' → logprob: -5.709949970245361
    8. ' are' → logprob: -5.834949970245361
    9. 'voie' → logprob: -6.084949970245361
    10. ' ' → logprob: -6.334949970245361

Token 1187: 'ête' (ID: 16808)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01910625584423542
    2. 'ête' → logprob: -4.144106388092041
    3. 'ê' → logprob: -7.144106388092041
    4. 'e' → logprob: -7.144106388092041
    5. 'êt' → logprob: -7.769106388092041
    6. 'te' → logprob: -8.769105911254883
    7. 'ète' → logprob: -9.019105911254883
    8. 't' → logprob: -9.519105911254883
    9. 'g' → logprob: -9.644105911254883
    10. 'ce' → logprob: -10.019105911254883

Token 1188: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6690236330032349
    2. ':' → logprob: -1.0440236330032349
    3. '                   ' → logprob: -2.1690235137939453
    4. '                       ' → logprob: -5.294023513793945
    5. ':
' → logprob: -5.419023513793945
    6. '           ' → logprob: -5.919023513793945
    7. '                           ' → logprob: -6.044023513793945
    8. ' :' → logprob: -6.419023513793945
    9. '                               ' → logprob: -6.794023513793945
    10. '                ' → logprob: -7.169023513793945

Token 1189: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8896876573562622
    2. '                   ' → logprob: -1.0146876573562622
    3. ':' → logprob: -2.1396875381469727
    4. ':
' → logprob: -3.1396875381469727
    5. '                       ' → logprob: -3.7646875381469727
    6. ' :' → logprob: -4.639687538146973
    7. '                           ' → logprob: -4.639687538146973
    8. '                               ' → logprob: -4.764687538146973
    9. ' :
' → logprob: -5.389687538146973
    10. '           ' → logprob: -6.014687538146973

Token 1190: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.1045948937535286
    2. 'new' → logprob: -4.354594707489014
    3. 'idx' → logprob: -4.354594707489014
    4. 'u' → logprob: -4.479594707489014
    5. 'from' → logprob: -4.479594707489014
    6. 'if' → logprob: -4.854594707489014
    7. 'next' → logprob: -4.979594707489014
    8. ' edge' → logprob: -5.229594707489014
    9. 'index' → logprob: -5.354594707489014
    10. 'nk' → logprob: -5.354594707489014

Token 1191: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004182793782092631
    2. '[k' → logprob: -7.875418186187744
    3. '[' → logprob: -10.625418663024902
    4. '[(' → logprob: -12.250418663024902
    5. ' [' → logprob: -12.875418663024902
    6. '   ' → logprob: -13.375418663024902
    7. '[
' → logprob: -14.625418663024902
    8. '[u' → logprob: -14.625418663024902
    9. '[j' → logprob: -14.875418663024902
    10. '[v' → logprob: -14.875418663024902

Token 1192: '250' (ID: 6911)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.027225754223764e-05
    2. '   ' → logprob: -11.000060081481934
    3. '250' → logprob: -11.125060081481934
    4. ' i' → logprob: -11.375060081481934
    5. 'k' → logprob: -11.875060081481934
    6. '                   ' → logprob: -12.000060081481934
    7. '                       ' → logprob: -13.500060081481934
    8. '(i' → logprob: -14.375060081481934
    9. '[i' → logprob: -14.625060081481934
    10. '                           ' → logprob: -14.875060081481934

Token 1193: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2341003119945526
    2. '*i' → logprob: -1.609100341796875
    3. ' *' → logprob: -4.859100341796875
    4. ' i' → logprob: -7.859100341796875
    5. '*' → logprob: -8.484100341796875
    6. '[i' → logprob: -9.109100341796875
    7. '000' → logprob: -10.109100341796875
    8. '_i' → logprob: -10.109100341796875
    9. '0' → logprob: -10.484100341796875
    10. '```' → logprob: -10.984100341796875

Token 1194: ' *' (ID: 425)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.006771856918931007
    2. ' *' → logprob: -5.631772041320801
    3. '*' → logprob: -5.756772041320801
    4. 'i' → logprob: -13.8817720413208
    5. '*k' → logprob: -13.8817720413208
    6. '*(' → logprob: -14.1317720413208
    7. '*j' → logprob: -14.7567720413208
    8. '```' → logprob: -14.7567720413208
    9. '*a' → logprob: -14.8817720413208
    10. '[i' → logprob: -15.3817720413208

Token 1195: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.6240566083070007e-06
    2. ' i' → logprob: -13.500001907348633
    3. 'u' → logprob: -15.750001907348633
    4. '	i' → logprob: -20.250001907348633
    5. '(i' → logprob: -20.250001907348633
    6. '<|end|>' → logprob: -20.250001907348633
    7. '[i' → logprob: -20.375001907348633
    8. '```' → logprob: -20.500001907348633
    9. '   ' → logprob: -20.750001907348633
    10. ')i' → logprob: -21.500001907348633

Token 1196: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04691921919584274
    2. '+k' → logprob: -3.171919107437134
    3. ' +' → logprob: -5.546919345855713
    4. '+
' → logprob: -12.796918869018555
    5. '＋' → logprob: -12.796918869018555
    6. ']+' → logprob: -13.421918869018555
    7. '+r' → logprob: -13.796918869018555
    8. '+x' → logprob: -13.921918869018555
    9. '+j' → logprob: -14.046918869018555
    10. '+t' → logprob: -14.296918869018555

Token 1197: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.4849443838757e-06
    2. 'v' → logprob: -12.750004768371582
    3. '(k' → logprob: -14.000004768371582
    4. ' k' → logprob: -14.375004768371582
    5. '(' → logprob: -15.750004768371582
    6. '   ' → logprob: -17.875003814697266
    7. '	k' → logprob: -18.125003814697266
    8. '(v' → logprob: -18.375003814697266
    9. '           ' → logprob: -18.625003814697266
    10. '                   ' → logprob: -19.125003814697266

Token 1198: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3234715759754181
    2. '].' → logprob: -1.4484715461730957
    3. '][' → logprob: -3.6984715461730957
    4. '-' → logprob: -4.323471546173096
    5. ' -' → logprob: -6.323471546173096
    6. '   ' → logprob: -7.948471546173096
    7. '][-' → logprob: -8.448472023010254
    8. ' ]' → logprob: -8.823472023010254
    9. '],' → logprob: -8.948472023010254
    10. '           ' → logprob: -8.948472023010254

Token 1199: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0280383548888494e-06
    2. ' append' → logprob: -14.500000953674316
    3. '.append' → logprob: -14.750000953674316
    4. 'appen' → logprob: -16.625001907348633
    5. 'app' → logprob: -16.875001907348633
    6. '_append' → logprob: -17.250001907348633
    7. 'appe' → logprob: -19.625001907348633
    8. '	append' → logprob: -20.000001907348633
    9. 'Append' → logprob: -20.625001907348633
    10. 'ap' → logprob: -21.125001907348633

Token 1200: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.023246178403496742
    2. '(' → logprob: -3.7732462882995605
    3. ' (' → logprob: -15.398245811462402
    4. '(((' → logprob: -15.648245811462402
    5. '([' → logprob: -15.773245811462402
    6. '(
' → logprob: -16.02324676513672
    7. ' ((' → logprob: -17.14824676513672
    8. '   ' → logprob: -17.89824676513672
    9. '(('' → logprob: -18.64824676513672
    10. '(("' → logprob: -19.39824676513672

Token 1201: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -6.384836888173595e-05
    2. ' ' → logprob: -10.0000638961792
    3. '                   ' → logprob: -12.1250638961792
    4. '   ' → logprob: -12.5000638961792
    5. '25' → logprob: -13.1250638961792
    6. 'v' → logprob: -13.1250638961792
    7. '                       ' → logprob: -13.3750638961792
    8. '(' → logprob: -13.7500638961792
    9. '                    ' → logprob: -14.5000638961792
    10. '                           ' → logprob: -14.8750638961792

Token 1202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029625516617670655
    2. '500' → logprob: -8.250296592712402
    3. 'u' → logprob: -11.500296592712402
    4. '000' → logprob: -12.375296592712402
    5. '<|end|>' → logprob: -12.625296592712402
    6. 'v' → logprob: -12.750296592712402
    7. '400' → logprob: -12.875296592712402
    8. '00' → logprob: -13.250296592712402
    9. ' ' → logprob: -13.375296592712402
    10. '(' → logprob: -13.500296592712402

Token 1203: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4572826623916626
    2. '*' → logprob: -1.2072826623916626
    3. '*v' → logprob: -2.707282543182373
    4. 'v' → logprob: -6.832282543182373
    5. ' v' → logprob: -9.082283020019531
    6. '*j' → logprob: -10.957283020019531
    7. '*(' → logprob: -11.582283020019531
    8. '	v' → logprob: -11.832283020019531
    9. '	' → logprob: -11.832283020019531
    10. '**' → logprob: -11.832283020019531

Token 1204: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.300083648762666e-05
    2. ' v' → logprob: -9.875053405761719
    3. '	v' → logprob: -14.625053405761719
    4. '(v' → logprob: -14.625053405761719
    5. 'u' → logprob: -15.000053405761719
    6. '(' → logprob: -16.50005340576172
    7. '   ' → logprob: -16.75005340576172
    8. 'i' → logprob: -17.00005340576172
    9. '
' → logprob: -17.25005340576172
    10. 'k' → logprob: -17.87505340576172

Token 1205: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006554916966706514
    2. ' +' → logprob: -5.131555080413818
    3. '+k' → logprob: -7.381555080413818
    4. '+(' → logprob: -13.63155460357666
    5. '＋' → logprob: -14.75655460357666
    6. '+b' → logprob: -14.88155460357666
    7. '+
' → logprob: -15.00655460357666
    8. '+r' → logprob: -15.13155460357666
    9. '+x' → logprob: -15.38155460357666
    10. '+j' → logprob: -15.50655460357666

Token 1206: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001468067930545658
    2. '(k' → logprob: -9.000146865844727
    3. ' k' → logprob: -11.000146865844727
    4. 'max' → logprob: -12.250146865844727
    5. '{k' → logprob: -13.875146865844727
    6. ' (' → logprob: -15.125146865844727
    7. '   ' → logprob: -15.500146865844727
    8. '[k' → logprob: -15.500146865844727
    9. '(max' → logprob: -16.375146865844727
    10. 'min' → logprob: -17.000146865844727

Token 1207: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.778209353797138e-05
    2. 'min' → logprob: -10.375067710876465
    3. '(k' → logprob: -10.500067710876465
    4. 'max' → logprob: -12.000067710876465
    5. ' k' → logprob: -13.000067710876465
    6. '(min' → logprob: -15.750067710876465
    7. '{k' → logprob: -15.750067710876465
    8. ' min' → logprob: -16.87506866455078
    9. ' (' → logprob: -17.12506866455078
    10. '(max' → logprob: -17.25006866455078

Token 1208: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.37259289622306824
    2. ' -' → logprob: -1.2475929260253906
    3. '-' → logprob: -3.7475929260253906
    4. 'k' → logprob: -8.74759292602539
    5. '-a' → logprob: -9.49759292602539
    6. ')' → logprob: -11.37259292602539
    7. '-n' → logprob: -12.37259292602539
    8. '-b' → logprob: -12.49759292602539
    9. ' ' → logprob: -12.74759292602539
    10. '[k' → logprob: -12.87259292602539

Token 1209: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00014001218369230628
    2. ' a' → logprob: -8.875140190124512
    3. '	a' → logprob: -16.375139236450195
    4. ' ' → logprob: -18.375139236450195
    5. '#a' → logprob: -18.500139236450195
    6. ')a' → logprob: -18.750139236450195
    7. ''a' → logprob: -18.875139236450195
    8. '   ' → logprob: -19.250139236450195
    9. '>a' → logprob: -19.500139236450195
    10. '<|end|>' → logprob: -19.750139236450195

Token 1210: '),' (ID: 936)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2562599778175354
    2. '+b' → logprob: -2.2562599182128906
    3. ' +' → logprob: -2.5062599182128906
    4. ')' → logprob: -3.7562599182128906
    5. '),' → logprob: -4.256259918212891
    6. ')+' → logprob: -6.256259918212891
    7. '```' → logprob: -10.13125991821289
    8. '    ' → logprob: -10.50625991821289
    9. 'b' → logprob: -10.63125991821289
    10. '   ' → logprob: -10.75625991821289

Token 1211: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.17980138957500458
    2. ' b' → logprob: -1.804801344871521
    3. '    ' → logprob: -10.929800987243652
    4. ' ' → logprob: -11.554800987243652
    5. '   ' → logprob: -11.929800987243652
    6. 'k' → logprob: -12.179800987243652
    7. '	b' → logprob: -13.554800987243652
    8. '     ' → logprob: -13.679800987243652
    9. '               ' → logprob: -13.992300987243652
    10. '  ' → logprob: -14.054800987243652

Token 1212: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00028505371301434934
    2. ' ))' → logprob: -8.375285148620605
    3. '))
' → logprob: -9.875285148620605
    4. ')' → logprob: -13.375285148620605
    5. '))
' → logprob: -14.125285148620605
    6. '   ' → logprob: -15.875285148620605
    7. '))

' → logprob: -16.37528419494629
    8. '),' → logprob: -16.50028419494629
    9. ')))' → logprob: -16.50028419494629
    10. ' ))
' → logprob: -16.87528419494629

Token 1213: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1214: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1215: ' ajoute' (ID: 91611)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.29653725028038025
    2. '<|end|>' → logprob: -1.6715372800827026
    3. 'edge' → logprob: -3.296537160873413
    4. 'continue' → logprob: -4.296537399291992
    5. ' append' → logprob: -4.796537399291992
    6. '.append' → logprob: -5.671537399291992
    7. 'aj' → logprob: -6.921537399291992
    8. 'edges' → logprob: -7.046537399291992
    9. ' continue' → logprob: -7.546537399291992
    10. ')' → logprob: -7.671537399291992

Token 1216: ' un' (ID: 537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1217: ' arc' (ID: 26922)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1021645069122314
    2. 'edge' → logprob: -1.3521645069122314
    3. ' lien' → logprob: -1.4771645069122314
    4. ' (' → logprob: -3.3521645069122314
    5. 'ar' → logprob: -3.8521645069122314
    6. 'l' → logprob: -4.102164268493652
    7. ' edge' → logprob: -4.227164268493652
    8. 'n' → logprob: -4.352164268493652
    9. '(' → logprob: -4.352164268493652
    10. 'arc' → logprob: -4.727164268493652

Token 1218: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1219: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5355430245399475
    2. '250' → logprob: -1.4105429649353027
    3. 'edge' → logprob: -2.0355429649353027
    4. '[' → logprob: -4.285542964935303
    5. ')' → logprob: -5.035542964935303
    6. ' (' → logprob: -5.160542964935303
    7. '(edge' → logprob: -5.785542964935303
    8. 'l' → logprob: -6.035542964935303
    9. ' ' → logprob: -6.535542964935303
    10. '(v' → logprob: -6.785542964935303

Token 1220: ''état' (ID: 116357)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.596489429473877
    2. ''' → logprob: -1.596489429473877
    3. 'e' → logprob: -2.346489429473877
    4. '250' → logprob: -3.346489429473877
    5. 'edge' → logprob: -3.846489429473877
    6. ''état' → logprob: -4.096489429473877
    7. '25' → logprob: -4.346489429473877
    8. '`' → logprob: -4.596489429473877
    9. '')' → logprob: -4.846489429473877
    10. 'state' → logprob: -5.596489429473877

Token 1221: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3633301556110382
    2. '250' → logprob: -1.8633301258087158
    3. '[' → logprob: -2.613330125808716
    4. '(v' → logprob: -3.363330125808716
    5. 'i' → logprob: -4.738330364227295
    6. '(i' → logprob: -4.738330364227295
    7. 'v' → logprob: -4.863330364227295
    8. '[v' → logprob: -5.738330364227295
    9. '[i' → logprob: -6.238330364227295
    10. ' (' → logprob: -6.488330364227295

Token 1222: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07013871520757675
    2. '250' → logprob: -2.820138692855835
    3. 'v' → logprob: -5.195138931274414
    4. 'u' → logprob: -6.820138931274414
    5. ')' → logprob: -7.070138931274414
    6. 'k' → logprob: -8.570138931274414
    7. ' i' → logprob: -9.070138931274414
    8. ')i' → logprob: -9.070138931274414
    9. '(' → logprob: -10.445138931274414
    10. ')v' → logprob: -10.570138931274414

Token 1223: ',k' (ID: 35155)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.23724061250686646
    2. ',' → logprob: -2.2372405529022217
    3. '*' → logprob: -2.6122405529022217
    4. ' ,' → logprob: -4.112240791320801
    5. ')' → logprob: -4.487240791320801
    6. ',k' → logprob: -6.237240791320801
    7. ' ' → logprob: -7.612240791320801
    8. '*k' → logprob: -7.987240791320801
    9. ')*' → logprob: -8.6122407913208
    10. ' )' → logprob: -8.9872407913208

Token 1224: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010437761375214905
    2. ' )' → logprob: -9.875103950500488
    3. '+' → logprob: -11.125103950500488
    4. ' vers' → logprob: -11.625103950500488
    5. ')
' → logprob: -12.375103950500488
    6. ')`' → logprob: -12.375103950500488
    7. '))' → logprob: -12.750103950500488
    8. ',' → logprob: -13.000103950500488
    9. '),' → logprob: -13.375103950500488
    10. ')+' → logprob: -13.375103950500488

Token 1225: ' vers' (ID: 3640)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0961819738149643
    2. '<|end|>' → logprob: -2.471181869506836
    3. ' )' → logprob: -5.596181869506836
    4. '[' → logprob: -6.721181869506836
    5. '           ' → logprob: -7.096181869506836
    6. '<|end|>' → logprob: -8.471181869506836
    7. ' ' → logprob: -9.096181869506836
    8. '               ' → logprob: -9.096181869506836
    9. '    ' → logprob: -9.096181869506836
    10. '       ' → logprob: -9.221181869506836

Token 1226: ' l' (ID: 305)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '250' → logprob: -0.023386051878333092
    2. '(' → logprob: -3.773386001586914
    3. ' ' → logprob: -9.523386001586914
    4. ' (' → logprob: -10.273386001586914
    5. '(v' → logprob: -10.648386001586914
    6. '```' → logprob: -13.523386001586914
    7. 'v' → logprob: -13.648386001586914
    8. '`' → logprob: -13.898386001586914
    9. '...' → logprob: -13.898386001586914
    10. '((' → logprob: -14.023386001586914

Token 1227: ''état' (ID: 116357)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '250' → logprob: -0.007976503111422062
    2. '2' → logprob: -5.882976531982422
    3. '(' → logprob: -6.007976531982422
    4. '25' → logprob: -7.257976531982422
    5. 'v' → logprob: -7.882976531982422
    6. 'u' → logprob: -7.882976531982422
    7. '[' → logprob: -8.507976531982422
    8. '`' → logprob: -8.882976531982422
    9. 'e' → logprob: -9.257976531982422
    10. 'state' → logprob: -9.382976531982422

Token 1228: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05431225895881653
    2. '250' → logprob: -3.054312229156494
    3. '(v' → logprob: -5.804312229156494
    4. ' (' → logprob: -6.179312229156494
    5. 'v' → logprob: -7.929312229156494
    6. ' ' → logprob: -9.554312705993652
    7. '((' → logprob: -9.679312705993652
    8. '`' → logprob: -10.679312705993652
    9. '[' → logprob: -10.679312705993652
    10. '```' → logprob: -10.679312705993652

Token 1229: 'v' (ID: 85)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.008667044341564178
    2. 'v' → logprob: -4.7586669921875
    3. '(v' → logprob: -10.6336669921875
    4. '(' → logprob: -10.8836669921875
    5. ')v' → logprob: -12.7586669921875
    6. '25' → logprob: -13.3836669921875
    7. ' v' → logprob: -13.6336669921875
    8. ' ' → logprob: -14.0086669921875
    9. '150' → logprob: -14.8836669921875
    10. '```' → logprob: -15.0086669921875

Token 1230: ',k' (ID: 35155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6287189722061157
    2. ' +' → logprob: -1.1287189722061157
    3. '*' → logprob: -2.503718852996826
    4. '250' → logprob: -3.503718852996826
    5. ' *' → logprob: -4.503718852996826
    6. '+(' → logprob: -5.003718852996826
    7. '*(' → logprob: -5.253718852996826
    8. '(' → logprob: -5.878718852996826
    9. '(k' → logprob: -6.878718852996826
    10. '+k' → logprob: -6.878718852996826

Token 1231: '-a' (ID: 8575)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17579764127731323
    2. '-' → logprob: -2.050797700881958
    3. '-a' → logprob: -3.425797700881958
    4. ' ' → logprob: -11.425797462463379
    5. ')' → logprob: -11.800797462463379
    6. '-а' → logprob: -11.925797462463379
    7. '-A' → logprob: -12.300797462463379
    8. 'a' → logprob: -12.800797462463379
    9. ' ' → logprob: -12.800797462463379
    10. '
' → logprob: -13.300797462463379

Token 1232: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03046463429927826
    2. '+' → logprob: -3.9054646492004395
    3. '),' → logprob: -4.7804646492004395
    4. '))' → logprob: -7.5304646492004395
    5. ' +' → logprob: -8.030464172363281
    6. '+k' → logprob: -8.530464172363281
    7. ')+' → logprob: -8.655464172363281
    8. ' )' → logprob: -9.155464172363281
    9. '-' → logprob: -10.155464172363281
    10. ' ' → logprob: -11.030464172363281

Token 1233: ' avec' (ID: 3937)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014640314038842916
    2. '<|end|>' → logprob: -6.751463890075684
    3. ' )' → logprob: -8.501463890075684
    4. ')
' → logprob: -9.876463890075684
    5. '<|end|>' → logprob: -12.001463890075684
    6. '           ' → logprob: -12.001463890075684
    7. '       ' → logprob: -12.376463890075684
    8. '               ' → logprob: -13.001463890075684
    9. ')}' → logprob: -13.376463890075684
    10. '```' → logprob: -13.376463890075684

Token 1234: ' coût' (ID: 73109)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.14273706078529358
    2. 'b' → logprob: -2.0177371501922607
    3. ' ' → logprob: -10.51773738861084
    4. ')' → logprob: -11.14273738861084
    5. ' ' → logprob: -11.89273738861084
    6. ')b' → logprob: -12.39273738861084
    7. ' )' → logprob: -13.14273738861084
    8. ' (' → logprob: -13.14273738861084
    9. ',' → logprob: -14.39273738861084
    10. '(b' → logprob: -14.51773738861084

Token 1235: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.20148202776908875
    2. 'b' → logprob: -1.7014820575714111
    3. ')' → logprob: -10.451481819152832
    4. ' ' → logprob: -10.951481819152832
    5. ' )' → logprob: -11.701481819152832
    6. ')b' → logprob: -12.451481819152832
    7. ' 
' → logprob: -13.451481819152832
    8. ' +' → logprob: -13.576481819152832
    9. ' ' → logprob: -13.701481819152832
    10. '+' → logprob: -14.076481819152832

Token 1236: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08828849345445633
    2. '
' → logprob: -3.5882885456085205
    3. '               ' → logprob: -3.8382885456085205
    4. '<|end|>' → logprob: -4.463288307189941
    5. '+' → logprob: -5.338288307189941
    6. '       ' → logprob: -5.713288307189941
    7. '            ' → logprob: -6.088288307189941
    8. 'for' → logprob: -6.588288307189941
    9. '            
' → logprob: -6.588288307189941
    10. '   ' → logprob: -6.713288307189941

Token 1238: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18513771891593933
    2. '           ' → logprob: -1.8101377487182617
    3. ' if' → logprob: -5.435137748718262
    4. 'edge' → logprob: -7.185137748718262
    5. '               ' → logprob: -9.185137748718262
    6. '       ' → logprob: -10.310137748718262
    7. 'for' → logprob: -10.560137748718262
    8. 'token' → logprob: -10.685137748718262
    9. '            
' → logprob: -11.310137748718262
    10. '+' → logprob: -11.560137748718262

Token 1239: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07658776640892029
    2. ' k' → logprob: -2.826587677001953
    3. '250' → logprob: -4.576587677001953
    4. ' ' → logprob: -6.326587677001953
    5. '(' → logprob: -7.576587677001953
    6. 'edge' → logprob: -7.826587677001953
    7. '(k' → logprob: -8.076587677001953
    8. ' (' → logprob: -8.201587677001953
    9. 'c' → logprob: -8.201587677001953
    10. '   ' → logprob: -9.201587677001953

Token 1240: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.027855271473526955
    2. ' +' → logprob: -3.777855157852173
    3. '=' → logprob: -7.027855396270752
    4. ' <' → logprob: -7.152855396270752
    5. '<=' → logprob: -7.777855396270752
    6. '==' → logprob: -7.902855396270752
    7. '<' → logprob: -8.027854919433594
    8. ' ' → logprob: -8.152854919433594
    9. ' <=' → logprob: -8.277854919433594
    10. ' ==' → logprob: -8.402854919433594

Token 1241: ' c' (ID: 274)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02303779311478138
    2. 'c' → logprob: -4.398037910461426
    3. ' d' → logprob: -4.648037910461426
    4. '1' → logprob: -7.273037910461426
    5. ' c' → logprob: -8.648037910461426
    6. ' ' → logprob: -11.398037910461426
    7. 'cd' → logprob: -12.023037910461426
    8. '0' → logprob: -13.273037910461426
    9. '10' → logprob: -14.023037910461426
    10. '```' → logprob: -14.398037910461426

Token 1242: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.24971036612987518
    2. '<' → logprob: -1.8747103214263916
    3. ' <=' → logprob: -2.8747103214263916
    4. '<=' → logprob: -4.624710559844971
    5. '<|end|>' → logprob: -7.374710559844971
    6. '<len' → logprob: -8.624710083007812
    7. '<n' → logprob: -9.249710083007812
    8. ')' → logprob: -9.374710083007812
    9. '<num' → logprob: -9.374710083007812
    10. '[' → logprob: -9.624710083007812

Token 1243: ' ' (ID: 220)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.750045776367188
    4. '25' → logprob: -18.250045776367188
    5. '245' → logprob: -18.875045776367188
    6. '  ' → logprob: -19.125045776367188
    7. '251' → logprob: -20.000045776367188
    8. '255' → logprob: -20.750045776367188
    9. '249' → logprob: -20.750045776367188
    10. '```' → logprob: -20.750045776367188

Token 1244: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -21.125
    4. '25' → logprob: -21.75
    5. '  ' → logprob: -22.25
    6. '
' → logprob: -22.625
    7. '245' → logprob: -23.0
    8. '```' → logprob: -23.125
    9. '249' → logprob: -23.25
    10. '(' → logprob: -23.5

Token 1245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -16.0
    3. '۰' → logprob: -16.5
    4. '   ' → logprob: -16.5
    5. '00' → logprob: -16.875
    6. ' ' → logprob: -17.0
    7. 'o' → logprob: -17.125
    8. ')' → logprob: -17.625
    9. '       ' → logprob: -17.75
    10. '০' → logprob: -18.6875

Token 1246: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5272946953773499
    2. ':' → logprob: -0.9022946953773499
    3. ' and' → logprob: -6.527294635772705
    4. '               ' → logprob: -6.652294635772705
    5. '           ' → logprob: -7.527294635772705
    6. '):
' → logprob: -8.402295112609863
    7. ' :
' → logprob: -9.277295112609863
    8. 'and' → logprob: -9.277295112609863
    9. ':
' → logprob: -9.277295112609863
    10. ' :' → logprob: -9.402295112609863

Token 1247: '               ' (ID: 506)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.5053883194923401
    2. ' edge' → logprob: -1.1303882598876953
    3. '               ' → logprob: -3.1303882598876953
    4. '           ' → logprob: -4.630388259887695
    5. '(edge' → logprob: -4.880388259887695
    6. '<|end|>' → logprob: -5.880388259887695
    7. '=edge' → logprob: -6.130388259887695
    8. '[' → logprob: -6.380388259887695
    9. '       ' → logprob: -6.630388259887695
    10. '   ' → logprob: -7.005388259887695

Token 1248: ' #' (ID: 1069)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.000718030845746398
    2. ' edge' → logprob: -7.250718116760254
    3. '               ' → logprob: -11.875718116760254
    4. '           ' → logprob: -14.000718116760254
    5. '                   ' → logprob: -16.625717163085938
    6. '   ' → logprob: -16.750717163085938
    7. '```' → logprob: -17.625717163085938
    8. '       ' → logprob: -17.750717163085938
    9. '(edge' → logprob: -18.250717163085938
    10. '            ' → logprob: -18.375717163085938

Token 1249: ' On' (ID: 2160)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.006732660811394453
    2. ' edge' → logprob: -5.00673246383667
    3. '               ' → logprob: -11.506732940673828
    4. '                   ' → logprob: -12.631732940673828
    5. '           ' → logprob: -12.631732940673828
    6. '   ' → logprob: -15.381732940673828
    7. '(edge' → logprob: -16.631732940673828
    8. '
' → logprob: -16.881732940673828
    9. '                       ' → logprob: -17.006732940673828
    10. '```' → logprob: -17.131732940673828

Token 1250: ' considère' (ID: 176437)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.016038473695516586
    2. ' edge' → logprob: -4.141038417816162
    3. '=edge' → logprob: -13.51603889465332
    4. '           ' → logprob: -14.26603889465332
    5. '.edge' → logprob: -14.39103889465332
    6. '_edge' → logprob: -14.89103889465332
    7. '```' → logprob: -15.39103889465332
    8. '   ' → logprob: -15.76603889465332
    9. 'edges' → logprob: -15.76603889465332
    10. '(edge' → logprob: -15.89103889465332

Token 1251: ' l' (ID: 305)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.012043219991028309
    2. ' edge' → logprob: -4.512042999267578
    3. '250' → logprob: -7.012042999267578
    4. '   ' → logprob: -10.512042999267578
    5. '[' → logprob: -10.762042999267578
    6. '(edge' → logprob: -11.012042999267578
    7. '           ' → logprob: -11.637042999267578
    8. ' ' → logprob: -11.887042999267578
    9. '               ' → logprob: -12.637042999267578
    10. '(' → logprob: -12.637042999267578

Token 1252: ''action' (ID: 107237)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.14232036471366882
    2. '250' → logprob: -2.267320394515991
    3. ' edge' → logprob: -3.642320394515991
    4. '(' → logprob: -7.017320156097412
    5. ' ' → logprob: -7.642320156097412
    6. '[' → logprob: -8.01732063293457
    7. ' (' → logprob: -8.01732063293457
    8. '(edge' → logprob: -8.51732063293457
    9. 'token' → logprob: -9.39232063293457
    10. 'state' → logprob: -9.51732063293457

Token 1253: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2216501235961914
    2. '(' → logprob: -1.4716501235961914
    3. ' (' → logprob: -1.4716501235961914
    4. ' de' → logprob: -2.7216501235961914
    5. 'edge' → logprob: -2.7216501235961914
    6. '   ' → logprob: -3.0966501235961914
    7. ' edge' → logprob: -4.221650123596191
    8. '[(' → logprob: -4.721650123596191
    9. 'de' → logprob: -4.846650123596191
    10. ' d' → logprob: -4.846650123596191

Token 1254: ''' (ID: 6)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3249874711036682
    2. 'edge' → logprob: -1.6999874114990234
    3. '250' → logprob: -2.5749874114990234
    4. ' (' → logprob: -4.949987411499023
    5. '[' → logprob: -5.449987411499023
    6. ' edge' → logprob: -5.949987411499023
    7. '(i' → logprob: -6.824987411499023
    8. ' ' → logprob: -7.199987411499023
    9. 'i' → logprob: -7.324987411499023
    10. '(edge' → logprob: -7.824987411499023

Token 1255: 'augment' (ID: 115087)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.3069194257259369
    2. '(' → logprob: -1.4319194555282593
    3. 'aj' → logprob: -4.181919574737549
    4. '250' → logprob: -5.681919574737549
    5. 'adding' → logprob: -6.306919574737549
    6. '(edge' → logprob: -7.681919574737549
    7. 'Ajouter' → logprob: -7.806919574737549
    8. ' edge' → logprob: -8.18191909790039
    9. 'augment' → logprob: -8.18191909790039
    10. '((' → logprob: -8.30691909790039

Token 1256: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.12809301912784576
    2. 'ant' → logprob: -2.1280930042266846
    3. '               ' → logprob: -8.003092765808105
    4. '           ' → logprob: -8.253092765808105
    5. '   ' → logprob: -8.628092765808105
    6. 'e' → logprob: -9.503092765808105
    7. 'ent' → logprob: -10.128092765808105
    8. ' ant' → logprob: -10.128092765808105
    9. ' ' → logprob: -10.503092765808105
    10. 'ing' → logprob: -10.628092765808105

Token 1257: ' son' (ID: 2391)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '250' → logprob: -0.35300394892692566
    2. 'k' → logprob: -2.353003978729248
    3. '(i' → logprob: -2.728003978729248
    4. '(' → logprob: -2.853003978729248
    5. 'i' → logprob: -2.853003978729248
    6. ' ' → logprob: -4.728003978729248
    7. ' (' → logprob: -4.853003978729248
    8. ' i' → logprob: -6.353003978729248
    9. '(k' → logprob: -6.478003978729248
    10. '[i' → logprob: -7.353003978729248

Token 1258: ' argent' (ID: 73800)
  Prédit: 'argent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argent' → logprob: -0.01427057571709156
    2. 'k' → logprob: -4.514270782470703
    3. 'mont' → logprob: -6.014270782470703
    4. ' argent' → logprob: -8.389270782470703
    5. 'capital' → logprob: -9.264270782470703
    6. 'etat' → logprob: -9.264270782470703
    7. 'niveau' → logprob: -9.639270782470703
    8. 'mon' → logprob: -10.014270782470703
    9. ' k' → logprob: -10.139270782470703
    10. ' montant' → logprob: -10.264270782470703

Token 1259: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33937668800354004
    2. 'edge' → logprob: -1.83937668800354
    3. '               ' → logprob: -3.46437668800354
    4. '                   ' → logprob: -3.71437668800354
    5. ' (' → logprob: -4.089376449584961
    6. '           ' → logprob: -4.214376449584961
    7. '(edge' → logprob: -4.464376449584961
    8. ' edge' → logprob: -4.839376449584961
    9. ':' → logprob: -5.339376449584961
    10. ':
' → logprob: -5.589376449584961

Token 1260: '               ' (ID: 506)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3696940243244171
    2. 'edge' → logprob: -1.8696939945220947
    3. ':' → logprob: -2.2446939945220947
    4. ' edge' → logprob: -3.6196939945220947
    5. ' :' → logprob: -4.369694232940674
    6. ':
' → logprob: -6.244694232940674
    7. '               ' → logprob: -6.369694232940674
    8. '                   ' → logprob: -6.619694232940674
    9. ' [' → logprob: -6.869694232940674
    10. '(edge' → logprob: -6.869694232940674

Token 1261: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.0011708177626132965
    2. ' edge' → logprob: -6.751170635223389
    3. '           ' → logprob: -15.626171112060547
    4. '               ' → logprob: -16.001171112060547
    5. '                   ' → logprob: -16.751171112060547
    6. '```' → logprob: -17.126171112060547
    7. '(edge' → logprob: -17.126171112060547
    8. '
' → logprob: -17.501171112060547
    9. ')' → logprob: -18.251171112060547
    10. '=edge' → logprob: -18.376171112060547

Token 1262: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '[
' → logprob: -15.375
    3. '250' → logprob: -18.25
    4. ' [' → logprob: -18.25
    5. '   ' → logprob: -18.5
    6. '[i' → logprob: -18.625
    7. '
' → logprob: -19.625
    8. '[(' → logprob: -20.0
    9. '\[' → logprob: -21.375
    10. '```' → logprob: -21.625

Token 1263: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -12.250005722045898
    3. ' ' → logprob: -14.750005722045898
    4. '25' → logprob: -15.250005722045898
    5. '   ' → logprob: -15.875005722045898
    6. '(' → logprob: -16.6250057220459
    7. 'n' → logprob: -17.5000057220459
    8. 'i' → logprob: -18.5000057220459
    9. '255' → logprob: -19.1250057220459
    10. '500' → logprob: -19.1250057220459

Token 1264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1888679839321412e-05
    2. '*' → logprob: -12.000021934509277
    3. 'i' → logprob: -12.000021934509277
    4. '*i' → logprob: -12.125021934509277
    5. ' ' → logprob: -13.375021934509277
    6. '   ' → logprob: -14.125021934509277
    7. ' *' → logprob: -14.250021934509277
    8. '(i' → logprob: -15.500021934509277
    9. '```' → logprob: -15.625021934509277
    10. '00' → logprob: -16.25002098083496

Token 1265: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.792011022567749
    2. ' *' → logprob: -0.917011022567749
    3. '*i' → logprob: -1.917011022567749
    4. '[i' → logprob: -8.542011260986328
    5. '*[' → logprob: -10.417011260986328
    6. '*j' → logprob: -10.917011260986328
    7. '   ' → logprob: -11.292011260986328
    8. '[' → logprob: -11.667011260986328
    9. ' ' → logprob: -11.792011260986328
    10. '*p' → logprob: -12.042011260986328

Token 1266: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.842555426876061e-06
    2. ' i' → logprob: -12.375004768371582
    3. '   ' → logprob: -14.625004768371582
    4. '[i' → logprob: -17.8750057220459
    5. '	i' → logprob: -18.0000057220459
    6. '       ' → logprob: -18.2500057220459
    7. '```' → logprob: -18.2500057220459
    8. '           ' → logprob: -18.3750057220459
    9. '
' → logprob: -18.5000057220459
    10. ' ' → logprob: -18.5000057220459

Token 1267: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02376340888440609
    2. '+k' → logprob: -4.398763179779053
    3. ' +' → logprob: -4.523763179779053
    4. '+j' → logprob: -8.523763656616211
    5. '+i' → logprob: -10.023763656616211
    6. '+x' → logprob: -10.523763656616211
    7. '+p' → logprob: -10.773763656616211
    8. '+r' → logprob: -11.398763656616211
    9. '+[' → logprob: -11.523763656616211
    10. '+a' → logprob: -12.148763656616211

Token 1268: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0014935573562979698
    2. '(k' → logprob: -6.626493453979492
    3. ' k' → logprob: -8.751493453979492
    4. ' (' → logprob: -12.001493453979492
    5. '(' → logprob: -12.876493453979492
    6. '   ' → logprob: -14.626493453979492
    7. '	k' → logprob: -16.626493453979492
    8. ' ' → logprob: -17.251493453979492
    9. '           ' → logprob: -17.501493453979492
    10. '[k' → logprob: -17.626493453979492

Token 1269: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -5.049755782238208e-05
    2. ').' → logprob: -10.75005054473877
    3. ']' → logprob: -11.00005054473877
    4. '.append' → logprob: -11.62505054473877
    5. '.' → logprob: -13.50005054473877
    6. '   ' → logprob: -14.62505054473877
    7. '           ' → logprob: -14.75005054473877
    8. '       ' → logprob: -14.75005054473877
    9. '}.' → logprob: -15.12505054473877
    10. ' ].' → logprob: -15.25005054473877

Token 1270: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. '.append' → logprob: -14.875000953674316
    3. ' append' → logprob: -15.375000953674316
    4. 'appen' → logprob: -16.875
    5. '	append' → logprob: -18.125
    6. '```' → logprob: -19.25
    7. '_append' → logprob: -19.875
    8. 'Append' → logprob: -20.625
    9. 'app' → logprob: -20.875
    10. 'pend' → logprob: -21.375

Token 1271: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.011048408225178719
    2. '(' → logprob: -4.511048316955566
    3. '(
' → logprob: -14.636048316955566
    4. ' (' → logprob: -17.136049270629883
    5. '([' → logprob: -17.511049270629883
    6. '(
' → logprob: -18.636049270629883
    7. ' ((' → logprob: -18.761049270629883
    8. '(((' → logprob: -19.386049270629883
    9. '   ' → logprob: -20.261049270629883
    10. '(("' → logprob: -20.636049270629883

Token 1272: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -7.684157026233152e-05
    2. '(' → logprob: -9.625077247619629
    3. ' ' → logprob: -11.500077247619629
    4. '[' → logprob: -15.125077247619629
    5. '   ' → logprob: -15.750077247619629
    6. '252' → logprob: -17.375076293945312
    7. '{' → logprob: -17.500076293945312
    8. ' (' → logprob: -18.000076293945312
    9. '`' → logprob: -18.375076293945312
    10. '255' → logprob: -18.625076293945312

Token 1273: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '00' → logprob: -15.375000953674316
    3. '500' → logprob: -15.500000953674316
    4. ' ' → logprob: -16.75
    5. '*' → logprob: -17.125
    6. '(' → logprob: -17.125
    7. '000' → logprob: -17.5
    8. '(i' → logprob: -17.75
    9. '```' → logprob: -18.375
    10. '   ' → logprob: -18.4375

Token 1274: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.36899083852767944
    2. '*' → logprob: -1.8689908981323242
    3. '*i' → logprob: -1.8689908981323242
    4. '	' → logprob: -12.618990898132324
    5. '**' → logprob: -13.868990898132324
    6. ' ' → logprob: -14.118990898132324
    7. '*j' → logprob: -14.243990898132324
    8. '*(' → logprob: -14.493990898132324
    9. '*u' → logprob: -14.493990898132324
    10. '   ' → logprob: -14.993990898132324

Token 1275: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.735893965815194e-05
    2. ' i' → logprob: -11.000017166137695
    3. '(i' → logprob: -14.625017166137695
    4. '   ' → logprob: -16.750017166137695
    5. '	i' → logprob: -16.750017166137695
    6. '[i' → logprob: -16.750017166137695
    7. '
' → logprob: -17.125017166137695
    8. '```' → logprob: -17.375017166137695
    9. '{i' → logprob: -17.875017166137695
    10. '_i' → logprob: -18.125017166137695

Token 1276: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1282651126384735
    2. ' +' → logprob: -2.128265142440796
    3. '+k' → logprob: -6.628264904022217
    4. '＋' → logprob: -11.753265380859375
    5. '+
' → logprob: -12.878265380859375
    6. '	' → logprob: -14.378265380859375
    7. ' +
' → logprob: -14.378265380859375
    8. '+(' → logprob: -14.503265380859375
    9. ' ' → logprob: -14.753265380859375
    10. '[' → logprob: -15.378265380859375

Token 1277: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00010354319238103926
    2. '(k' → logprob: -9.250103950500488
    3. ' k' → logprob: -12.000103950500488
    4. 'min' → logprob: -13.625103950500488
    5. '(' → logprob: -17.125102996826172
    6. '(min' → logprob: -17.500102996826172
    7. ' (' → logprob: -17.625102996826172
    8. '{k' → logprob: -18.250102996826172
    9. 'kx' → logprob: -19.375102996826172
    10. '   ' → logprob: -19.625102996826172

Token 1278: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.796184723294573e-06
    2. ' k' → logprob: -12.125005722045898
    3. '(k' → logprob: -15.250005722045898
    4. '{k' → logprob: -16.6250057220459
    5. '	k' → logprob: -18.7500057220459
    6. '+k' → logprob: -19.5000057220459
    7. '[k' → logprob: -19.7500057220459
    8. '   ' → logprob: -19.8750057220459
    9. 'min' → logprob: -21.2500057220459
    10. '```' → logprob: -21.3750057220459

Token 1279: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9595862627029419
    2. '+k' → logprob: -0.9595862627029419
    3. 'k' → logprob: -1.459586262702942
    4. ' +' → logprob: -6.584586143493652
    5. ' k' → logprob: -9.209586143493652
    6. '+
' → logprob: -10.334586143493652
    7. '<|end|>' → logprob: -11.334586143493652
    8. ' ' → logprob: -11.834586143493652
    9. '{k' → logprob: -12.334586143493652
    10. '	k' → logprob: -12.459586143493652

Token 1280: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00011164903844473884
    2. ' c' → logprob: -9.12511157989502
    3. 'd' → logprob: -13.62511157989502
    4. ')c' → logprob: -14.87511157989502
    5. '	c' → logprob: -15.00011157989502
    6. '1' → logprob: -15.25011157989502
    7. ' ' → logprob: -15.87511157989502
    8. '
' → logprob: -16.500112533569336
    9. '_c' → logprob: -17.125112533569336
    10. '   ' → logprob: -17.250112533569336

Token 1281: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -3.047134305234067e-05
    2. ' ),' → logprob: -10.750030517578125
    3. ')' → logprob: -12.000030517578125
    4. '],' → logprob: -13.750030517578125
    5. ',' → logprob: -14.750030517578125
    6. '   ' → logprob: -15.000030517578125
    7. ' ' → logprob: -15.250030517578125
    8. '```' → logprob: -15.750030517578125
    9. ')),' → logprob: -15.875030517578125
    10. '[' → logprob: -16.500030517578125

Token 1282: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.018156850710511208
    2. ' d' → logprob: -4.018157005310059
    3. '   ' → logprob: -13.768157005310059
    4. ' ' → logprob: -13.768157005310059
    5. 'b' → logprob: -14.143157005310059
    6. '(d' → logprob: -14.893157005310059
    7. '0' → logprob: -15.018157005310059
    8. '               ' → logprob: -15.018157005310059
    9. '    ' → logprob: -15.143157005310059
    10. '           ' → logprob: -15.268157005310059

Token 1283: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00044890373828820884
    2. ' ))' → logprob: -7.750448703765869
    3. '))
' → logprob: -11.250449180603027
    4. ')' → logprob: -12.625449180603027
    5. ')))' → logprob: -14.625449180603027
    6. '))
' → logprob: -14.625449180603027
    7. '   ' → logprob: -14.875449180603027
    8. '),' → logprob: -15.375449180603027
    9. ' )' → logprob: -16.12544822692871
    10. '))

' → logprob: -16.37544822692871

Token 1284: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13469170033931732
    2. '#' → logprob: -3.1346917152404785
    3. 'dist' → logprob: -3.2596917152404785
    4. ' return' → logprob: -4.3846917152404785
    5. '
' → logprob: -4.8846917152404785
    6. ')' → logprob: -5.0096917152404785
    7. '   ' → logprob: -5.2596917152404785
    8. 'for' → logprob: -5.7596917152404785
    9. 'print' → logprob: -6.2596917152404785
    10. '               ' → logprob: -6.3846917152404785

Token 1285: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1286: ' peut' (ID: 9216)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.017641287297010422
    2. ' append' → logprob: -4.642641067504883
    3. '.append' → logprob: -5.517641067504883
    4. 'push' → logprob: -6.892641067504883
    5. 'add' → logprob: -7.142641067504883
    6. ')' → logprob: -7.267641067504883
    7. 'aj' → logprob: -7.517641067504883
    8. 'app' → logprob: -8.267641067504883
    9. 'continue' → logprob: -9.017641067504883
    10. ' ajoute' → logprob: -9.642641067504883

Token 1287: ' passer' (ID: 27727)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.5658872127532959
    2. 'aj' → logprob: -1.815887212753296
    3. ' ajouter' → logprob: -2.565887212753296
    4. 'acheter' → logprob: -2.690887212753296
    5. 'augment' → logprob: -3.190887212753296
    6. ' continuer' → logprob: -3.690887212753296
    7. ' augmenter' → logprob: -4.065887451171875
    8. ' effectuer' → logprob: -4.565887451171875
    9. ' acheter' → logprob: -4.940887451171875
    10. 'prendre' → logprob: -5.065887451171875

Token 1288: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00103995599783957
    2. '((' → logprob: -7.251039981842041
    3. ' (' → logprob: -8.501039505004883
    4. '(
' → logprob: -9.626039505004883
    5. 'to' → logprob: -10.251039505004883
    6. '250' → logprob: -12.001039505004883
    7. '   ' → logprob: -12.251039505004883
    8. 'from' → logprob: -13.001039505004883
    9. ')' → logprob: -13.251039505004883
    10. '[' → logprob: -13.626039505004883

Token 1289: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02994128316640854
    2. '250' → logprob: -3.5299413204193115
    3. ' (' → logprob: -8.77994155883789
    4. '[' → logprob: -11.15494155883789
    5. ' ' → logprob: -11.40494155883789
    6. '(i' → logprob: -12.02994155883789
    7. '...' → logprob: -13.40494155883789
    8. '```' → logprob: -13.90494155883789
    9. '`' → logprob: -14.65494155883789
    10. '((' → logprob: -14.77994155883789

Token 1290: ''état' (ID: 116357)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.06526870280504227
    2. ''état' → logprob: -3.4402687549591064
    3. 'i' → logprob: -4.690268516540527
    4. 'ét' → logprob: -5.190268516540527
    5. 'etat' → logprob: -5.690268516540527
    6. '[' → logprob: -5.815268516540527
    7. '`' → logprob: -6.315268516540527
    8. '’état' → logprob: -7.065268516540527
    9. 'a' → logprob: -7.315268516540527
    10. 'e' → logprob: -7.440268516540527

Token 1291: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015627220273017883
    2. '250' → logprob: -4.515627384185791
    3. '(i' → logprob: -6.265627384185791
    4. ' (' → logprob: -6.265627384185791
    5. '[' → logprob: -7.515627384185791
    6. ' ' → logprob: -8.765626907348633
    7. '`' → logprob: -10.765626907348633
    8. '```' → logprob: -11.265626907348633
    9. '[i' → logprob: -12.015626907348633
    10. '(k' → logprob: -12.640626907348633

Token 1292: 'i' (ID: 72)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -1.2948405128554441e-05
    2. 'i' → logprob: -12.00001335144043
    3. ' ' → logprob: -12.00001335144043
    4. 'n' → logprob: -15.87501335144043
    5. '25' → logprob: -16.00001335144043
    6. '   ' → logprob: -16.50001335144043
    7. 'k' → logprob: -16.62501335144043
    8. '2' → logprob: -16.87501335144043
    9. '(' → logprob: -17.12501335144043
    10. ' i' → logprob: -18.00001335144043

Token 1293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10110630095005035
    2. ',k' → logprob: -2.9761064052581787
    3. '250' → logprob: -3.8511064052581787
    4. 'k' → logprob: -4.2261061668396
    5. '+' → logprob: -5.4761061668396
    6. ' ,' → logprob: -6.7261061668396
    7. '*' → logprob: -6.7261061668396
    8. ' +' → logprob: -7.4761061668396
    9. ' ' → logprob: -7.7261061668396
    10. ',i' → logprob: -7.7261061668396

Token 1294: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.010543791577219963
    2. '250' → logprob: -4.6355438232421875
    3. ' k' → logprob: -7.2605438232421875
    4. ' ' → logprob: -10.135543823242188
    5. 'i' → logprob: -10.885543823242188
    6. '(' → logprob: -11.385543823242188
    7. '(k' → logprob: -12.260543823242188
    8. ' (' → logprob: -13.010543823242188
    9. ')' → logprob: -13.260543823242188
    10. '```' → logprob: -14.385543823242188

Token 1295: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33726969361305237
    2. '+' → logprob: -1.33726966381073
    3. '+k' → logprob: -4.2122697830200195
    4. ' +' → logprob: -4.9622697830200195
    5. '+c' → logprob: -7.2122697830200195
    6. ')+' → logprob: -7.5872697830200195
    7. ' )' → logprob: -8.58726978302002
    8. '+)' → logprob: -8.96226978302002
    9. '```' → logprob: -10.08726978302002
    10. '+a' → logprob: -10.21226978302002

Token 1296: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015717584639787674
    2. ')' → logprob: -4.390717506408691
    3. ' à' → logprob: -6.765717506408691
    4. 'to' → logprob: -7.890717506408691
    5. 'à' → logprob: -8.015717506408691
    6. '```' → logprob: -8.015717506408691
    7. ' to' → logprob: -8.140717506408691
    8. '.append' → logprob: -8.265717506408691
    9. ' ,' → logprob: -8.890717506408691
    10. '),' → logprob: -9.140717506408691

Token 1297: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014375278726220131
    2. '250' → logprob: -4.26437520980835
    3. ' (' → logprob: -8.514375686645508
    4. ' ' → logprob: -11.639375686645508
    5. '```' → logprob: -14.264375686645508
    6. '...' → logprob: -14.389375686645508
    7. '[' → logprob: -14.639375686645508
    8. '450' → logprob: -15.389375686645508
    9. '`' → logprob: -15.764375686645508
    10. '<|end|>' → logprob: -16.014375686645508

Token 1298: 'i' (ID: 72)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '250' → logprob: -3.953082341467962e-05
    2. ' ' → logprob: -10.500039100646973
    3. '(' → logprob: -11.375039100646973
    4. '```' → logprob: -15.875039100646973
    5. '`' → logprob: -16.12504005432129
    6. '[' → logprob: -16.25004005432129
    7. ' (' → logprob: -16.50004005432129
    8. '...' → logprob: -17.12504005432129
    9. ')' → logprob: -18.12504005432129
    10. '   ' → logprob: -18.25004005432129

Token 1299: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47947272658348083
    2. ' +' → logprob: -0.9794727563858032
    3. '+k' → logprob: -5.229472637176514
    4. '+c' → logprob: -10.729473114013672
    5. '+t' → logprob: -13.979473114013672
    6. 'k' → logprob: -14.979473114013672
    7. ')' → logprob: -15.104473114013672
    8. '+(' → logprob: -15.354473114013672
    9. ' ' → logprob: -15.854473114013672
    10. '[' → logprob: -16.229473114013672

Token 1300: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006983656901866198
    2. ' k' → logprob: -5.631983757019043
    3. '(k' → logprob: -5.881983757019043
    4. ' (' → logprob: -7.506983757019043
    5. '(' → logprob: -10.256983757019043
    6. '250' → logprob: -12.881983757019043
    7. ' ' → logprob: -14.256983757019043
    8. '+k' → logprob: -15.506983757019043
    9. ')' → logprob: -15.756983757019043
    10. '+' → logprob: -15.881983757019043

Token 1301: '+c' (ID: 114860)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22999395430088043
    2. ' +' → logprob: -1.9799939393997192
    3. '+c' → logprob: -2.979994058609009
    4. '+k' → logprob: -4.10499382019043
    5. '+t' → logprob: -9.85499382019043
    6. '+d' → logprob: -11.10499382019043
    7. '+n' → logprob: -11.85499382019043
    8. '+a' → logprob: -12.10499382019043
    9. '+x' → logprob: -12.35499382019043
    10. '+p' → logprob: -12.35499382019043

Token 1302: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5283438563346863
    2. ')' → logprob: -0.9033438563346863
    3. ')+' → logprob: -6.778343677520752
    4. '+' → logprob: -6.778343677520752
    5. ',' → logprob: -7.028343677520752
    6. ' ),' → logprob: -7.028343677520752
    7. ' )' → logprob: -7.153343677520752
    8. '+k' → logprob: -9.65334415435791
    9. '   ' → logprob: -9.90334415435791
    10. ')`' → logprob: -10.02834415435791

Token 1303: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0442468523979187
    2. ')' → logprob: -3.1692469120025635
    3. ',b' → logprob: -7.544246673583984
    4. '(' → logprob: -8.794246673583984
    5. ' ,' → logprob: -9.044246673583984
    6. '(b' → logprob: -9.294246673583984
    7. ' )' → logprob: -9.919246673583984
    8. '.append' → logprob: -10.044246673583984
    9. 'b' → logprob: -10.294246673583984
    10. '<|end|>' → logprob: -10.419246673583984

Token 1304: ' comme' (ID: 7971)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.062014512717723846
    2. ' d' → logprob: -2.812014579772949
    3. '(d' → logprob: -10.43701457977295
    4. ')d' → logprob: -11.68701457977295
    5. ')' → logprob: -12.06201457977295
    6. '	d' → logprob: -13.56201457977295
    7. ' (' → logprob: -14.56201457977295
    8. ',' → logprob: -15.18701457977295
    9. ' ' → logprob: -15.18701457977295
    10. ' ' → logprob: -15.31201457977295

Token 1305: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.24276934564113617
    2. 'cost' → logprob: -1.6177693605422974
    3. 'b' → logprob: -4.492769241333008
    4. 'cout' → logprob: -6.367769241333008
    5. 'c' → logprob: -6.867769241333008
    6. 'd' → logprob: -7.117769241333008
    7. 'po' → logprob: -7.492769241333008
    8. 'dist' → logprob: -7.742769241333008
    9. 'weight' → logprob: -8.117769241333008
    10. 'distance' → logprob: -8.117769241333008

Token 1306: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14269736409187317
    2. ' d' → logprob: -2.017697334289551
    3. '	d' → logprob: -12.14269733428955
    4. ',' → logprob: -12.76769733428955
    5. '0' → logprob: -12.89269733428955
    6. '(d' → logprob: -13.01769733428955
    7. ' ' → logprob: -13.39269733428955
    8. '
' → logprob: -13.64269733428955
    9. ' ' → logprob: -13.64269733428955
    10. ')' → logprob: -13.76769733428955

Token 1307: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13158144056797028
    2. ' d' → logprob: -2.2565815448760986
    3. '+d' → logprob: -4.0065813064575195
    4. '+' → logprob: -8.50658130645752
    5. ' +' → logprob: -8.88158130645752
    6. '	d' → logprob: -11.13158130645752
    7. '>d' → logprob: -11.63158130645752
    8. ' +=' → logprob: -12.63158130645752
    9. ')d' → logprob: -12.63158130645752
    10. '```' → logprob: -12.75658130645752

Token 1308: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7839116454124451
    2. 'return' → logprob: -1.5339117050170898
    3. 'L' → logprob: -1.9089117050170898
    4. '
' → logprob: -2.65891170501709
    5. '```' → logprob: -3.40891170501709
    6. ')' → logprob: -3.40891170501709
    7. '#' → logprob: -4.28391170501709
    8. 'distance' → logprob: -5.15891170501709
    9. 'result' → logprob: -5.65891170501709
    10. 's' → logprob: -6.03391170501709

Token 1309: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.014512152411043644
    2. 'L' → logprob: -4.639512062072754
    3. 'res' → logprob: -6.014512062072754
    4. 'result' → logprob: -7.389512062072754
    5. 'D' → logprob: -7.514512062072754
    6. 'ans' → logprob: -7.764512062072754
    7. 'd' → logprob: -9.139512062072754
    8. 'answer' → logprob: -9.139512062072754
    9. 'distance' → logprob: -9.139512062072754
    10. 'cost' → logprob: -9.889512062072754

Token 1310: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38696950674057007
    2. ' =' → logprob: -1.1369695663452148
    3. ',' → logprob: -9.386969566345215
    4. '[' → logprob: -11.761969566345215
    5. ')' → logprob: -12.511969566345215
    6. '＝' → logprob: -14.136969566345215
    7. 's' → logprob: -14.511969566345215
    8. '<|end|>' → logprob: -14.886969566345215
    9. '_' → logprob: -15.011969566345215
    10. '_=' → logprob: -15.261969566345215

Token 1311: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04858873412013054
    2. ' d' → logprob: -3.048588752746582
    3. '   ' → logprob: -13.923588752746582
    4. ' ' → logprob: -15.423588752746582
    5. '	d' → logprob: -16.423587799072266
    6. '[' → logprob: -16.673587799072266
    7. '[d' → logprob: -17.298587799072266
    8. '  ' → logprob: -17.798587799072266
    9. ' [' → logprob: -18.173587799072266
    10. '    ' → logprob: -18.548587799072266

Token 1312: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -2.1008713702030946e-06
    2. 'ijk' → logprob: -13.250001907348633
    3. 'ij' → logprob: -15.750001907348633
    4. 'jik' → logprob: -16.625001907348633
    5. 'jk' → logprob: -18.875001907348633
    6. '[' → logprob: -19.375001907348633
    7. 'j' → logprob: -19.500001907348633
    8. 'ijks' → logprob: -19.625001907348633
    9. 'ijkl' → logprob: -20.250001907348633
    10. 'ijkt' → logprob: -20.250001907348633

Token 1313: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -2.339278580620885e-06
    2. 'edge' → logprob: -13.375001907348633
    3. '(' → logprob: -14.875001907348633
    4. '=edge' → logprob: -15.000001907348633
    5. ' (' → logprob: -17.875001907348633
    6. '(edges' → logprob: -18.125001907348633
    7. '(
' → logprob: -18.500001907348633
    8. ' edge' → logprob: -19.625001907348633
    9. '(enemy' → logprob: -21.000001907348633
    10. '(line' → logprob: -21.500001907348633

Token 1314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009140860638581216
    2. '(' → logprob: -7.000914096832275
    3. ',(' → logprob: -13.750913619995117
    4. ' ,' → logprob: -14.125913619995117
    5. ' (' → logprob: -15.125913619995117
    6. '(edge' → logprob: -15.500913619995117
    7. '(n' → logprob: -16.250913619995117
    8. '(dist' → logprob: -16.750913619995117
    9. '[' → logprob: -17.250913619995117
    10. ',
' → logprob: -17.250913619995117

Token 1315: ' s' (ID: 265)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.011932499706745148
    2. 's' → logprob: -4.511932373046875
    3. '0' → logprob: -7.136932373046875
    4. ' ' → logprob: -9.886932373046875
    5. '(' → logprob: -11.261932373046875
    6. ' s' → logprob: -11.761932373046875
    7. '   ' → logprob: -12.386932373046875
    8. 'start' → logprob: -12.511932373046875
    9. '[' → logprob: -12.886932373046875
    10. 'n' → logprob: -13.261932373046875

Token 1316: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38467592000961304
    2. '*' → logprob: -1.2596759796142578
    3. ' *' → logprob: -3.759675979614258
    4. '[' → logprob: -4.884675979614258
    5. '*s' → logprob: -6.384675979614258
    6. '[s' → logprob: -6.759675979614258
    7. '-' → logprob: -6.759675979614258
    8. ' -' → logprob: -8.509675979614258
    9. ' )' → logprob: -9.384675979614258
    10. '   ' → logprob: -9.759675979614258

Token 1317: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5493678450584412
    2. '[' → logprob: -2.049367904663086
    3. 's' → logprob: -2.799367904663086
    4. '(' → logprob: -2.799367904663086
    5. '
' → logprob: -3.299367904663086
    6. '(s' → logprob: -3.549367904663086
    7. 'for' → logprob: -4.424367904663086
    8. '<|end|>' → logprob: -4.424367904663086
    9. ')' → logprob: -4.799367904663086
    10. '#' → logprob: -5.049367904663086

Token 1318: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.159478098154068
    2. 'for' → logprob: -2.284478187561035
    3. 'dist' → logprob: -3.159478187561035
    4. 'L' → logprob: -7.034478187561035
    5. '#' → logprob: -7.534478187561035
    6. 'ans' → logprob: -7.659478187561035
    7. 'answer' → logprob: -7.909478187561035
    8. 'result' → logprob: -8.159478187561035
    9. ' for' → logprob: -9.034478187561035
    10. '#print' → logprob: -9.284478187561035

Token 1319: ' lance' (ID: 66715)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0522857904434204
    2. 'tolist' → logprob: -1.5522857904434204
    3. 'return' → logprob: -2.427285671234131
    4. ')' → logprob: -2.427285671234131
    5. '[:]' → logprob: -3.052285671234131
    6. 's' → logprob: -3.302285671234131
    7. '=' → logprob: -3.302285671234131
    8. 'reshape' → logprob: -4.177285671234131
    9. '.tolist' → logprob: -4.177285671234131
    10. '[s' → logprob: -4.677285671234131

Token 1320: ' D' (ID: 415)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6797361373901367
    2. '(s' → logprob: -1.1797361373901367
    3. 's' → logprob: -2.3047361373901367
    4. '(' → logprob: -3.0547361373901367
    5. ' s' → logprob: -4.179736137390137
    6. ' (' → logprob: -4.179736137390137
    7. '0' → logprob: -5.804736137390137
    8. ' ' → logprob: -6.179736137390137
    9. '<|end|>' → logprob: -6.804736137390137
    10. '250' → logprob: -6.929736137390137

Token 1321: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0007449488039128482
    2. '(s' → logprob: -8.375744819641113
    3. 'ist' → logprob: -8.500744819641113
    4. '(' → logprob: -9.375744819641113
    5. '*' → logprob: -9.875744819641113
    6. 's' → logprob: -10.000744819641113
    7. 'ij' → logprob: -10.500744819641113
    8. 'ijk' → logprob: -11.000744819641113
    9. '[i' → logprob: -11.125744819641113
    10. '[' → logprob: -11.375744819641113

Token 1322: ' sur' (ID: 1512)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1634764671325684
    2. 'dist' → logprob: -1.1634764671325684
    3. 'print' → logprob: -1.6634764671325684
    4. '<|end|>' → logprob: -3.0384764671325684
    5. '(dist' → logprob: -3.4134764671325684
    6. '(s' → logprob: -3.7884764671325684
    7. '#' → logprob: -3.9134764671325684
    8. '[' → logprob: -4.038476467132568
    9. '(' → logprob: -4.413476467132568
    10. ')' → logprob: -4.663476467132568

Token 1323: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008667513728141785
    2. '250' → logprob: -4.883667469024658
    3. 'dist' → logprob: -7.758667469024658
    4. '0' → logprob: -7.883667469024658
    5. ' s' → logprob: -8.383667945861816
    6. '(' → logprob: -11.633667945861816
    7. ')' → logprob: -12.508667945861816
    8. 'the' → logprob: -12.633667945861816
    9. '(s' → logprob: -12.633667945861816
    10. 'S' → logprob: -13.133667945861816

Token 1324: ' grap' (ID: 60955)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009044568054378033
    2. '250' → logprob: -4.884044647216797
    3. 'dist' → logprob: -7.009044647216797
    4. '0' → logprob: -8.509044647216797
    5. '...' → logprob: -9.134044647216797
    6. 'start' → logprob: -9.509044647216797
    7. ' s' → logprob: -9.634044647216797
    8. '(s' → logprob: -10.759044647216797
    9. 'n' → logprob: -11.259044647216797
    10. 'd' → logprob: -12.134044647216797

Token 1325: 'he' (ID: 273)
  Prédit: 'aph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aph' → logprob: -0.8341958522796631
    2. '250' → logprob: -1.584195852279663
    3. 's' → logprob: -2.334195852279663
    4. 'e' → logprob: -2.584195852279663
    5. '500' → logprob: -3.084195852279663
    6. 'start' → logprob: -3.084195852279663
    7. 'ack' → logprob: -3.459195852279663
    8. 'u' → logprob: -4.209196090698242
    9. '200' → logprob: -4.834196090698242
    10. 'o' → logprob: -4.834196090698242

Token 1326: ' des' (ID: 731)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.37522509694099426
    2. '[' → logprob: -2.000225067138672
    3. '[:' → logprob: -2.625225067138672
    4. 's' → logprob: -3.875225067138672
    5. 'dist' → logprob: -3.875225067138672
    6. '#' → logprob: -3.875225067138672
    7. ')' → logprob: -4.250225067138672
    8. '[(' → logprob: -4.500225067138672
    9. 'def' → logprob: -6.125225067138672
    10. '250' → logprob: -6.250225067138672

Token 1327: ' états' (ID: 184259)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.17535437643527985
    2. '250' → logprob: -3.050354480743408
    3. 'ist' → logprob: -3.175354480743408
    4. 's' → logprob: -3.675354480743408
    5. 'range' → logprob: -3.675354480743408
    6. ' dist' → logprob: -4.675354480743408
    7. 'edge' → logprob: -6.050354480743408
    8. 'start' → logprob: -6.800354480743408
    9. ')' → logprob: -6.925354480743408
    10. ' s' → logprob: -6.925354480743408

Token 1328: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016374544939026237
    2. 'dist' → logprob: -7.3766374588012695
    3. '#' → logprob: -7.7516374588012695
    4. '
' → logprob: -8.00163745880127
    5. ' for' → logprob: -8.87663745880127
    6. 'print' → logprob: -9.62663745880127
    7. '#print' → logprob: -11.50163745880127
    8. '[' → logprob: -11.50163745880127
    9. 's' → logprob: -11.87663745880127
    10. ')' → logprob: -12.50163745880127

Token 1329: ' avec' (ID: 3937)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7082995772361755
    2. '250' → logprob: -2.0832996368408203
    3. '0' → logprob: -2.3332996368408203
    4. '[' → logprob: -2.4582996368408203
    5. ')' → logprob: -2.5832996368408203
    6. 's' → logprob: -2.7082996368408203
    7. '[s' → logprob: -4.20829963684082
    8. '#' → logprob: -4.83329963684082
    9. 'import' → logprob: -5.70829963684082
    10. 'for' → logprob: -5.83329963684082

Token 1330: ' comme' (ID: 7971)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07495579123497009
    2. '250' → logprob: -2.824955701828003
    3. '0' → logprob: -4.574955940246582
    4. ' s' → logprob: -6.949955940246582
    5. 'start' → logprob: -7.074955940246582
    6. ')' → logprob: -8.199955940246582
    7. '(s' → logprob: -8.699955940246582
    8. 'dist' → logprob: -9.449955940246582
    9. '...' → logprob: -10.074955940246582
    10. 'lambda' → logprob: -10.449955940246582

Token 1331: ' état' (ID: 59181)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8728386759757996
    2. 'start' → logprob: -0.8728386759757996
    3. ')' → logprob: -2.3728387355804443
    4. '250' → logprob: -2.7478387355804443
    5. '0' → logprob: -5.622838497161865
    6. ' start' → logprob: -6.997838497161865
    7. 'initial' → logprob: -8.372838973999023
    8. ' s' → logprob: -8.497838973999023
    9. 'lambda' → logprob: -8.872838973999023
    10. '
' → logprob: -8.997838973999023

Token 1332: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1625974029302597
    2. ' s' → logprob: -2.162597417831421
    3. '(s' → logprob: -3.412597417831421
    4. ' (' → logprob: -7.162597179412842
    5. '250' → logprob: -7.162597179412842
    6. '[s' → logprob: -8.03759765625
    7. '0' → logprob: -9.28759765625
    8. 'start' → logprob: -9.78759765625
    9. '=' → logprob: -11.53759765625
    10. '(' → logprob: -11.66259765625

Token 1333: ' départ' (ID: 32693)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.11287204176187515
    2. 'part' → logprob: -2.7378721237182617
    3. 's' → logprob: -4.237872123718262
    4. 'dé' → logprob: -4.862872123718262
    5. ' départ' → logprob: -5.112872123718262
    6. 'depart' → logprob: -5.237872123718262
    7. 'departure' → logprob: -5.612872123718262
    8. 'initial' → logprob: -5.862872123718262
    9. 'd' → logprob: -6.987872123718262
    10. 't' → logprob: -8.987872123718262

Token 1334: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5846608281135559
    2. '250' → logprob: -0.8346608281135559
    3. '[' → logprob: -5.33466100692749
    4. '[s' → logprob: -5.70966100692749
    5. '(' → logprob: -8.334660530090332
    6. '(s' → logprob: -8.459660530090332
    7. ' s' → logprob: -9.959660530090332
    8. '[(' → logprob: -10.709660530090332
    9. '0' → logprob: -12.084660530090332
    10. '25' → logprob: -12.084660530090332

Token 1335: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0012361799599602818
    2. '250' → logprob: -7.1262359619140625
    3. '(' → logprob: -8.126235961914062
    4. '(s' → logprob: -9.251235961914062
    5. ' s' → logprob: -11.001235961914062
    6. 'n' → logprob: -11.251235961914062
    7. '(n' → logprob: -12.501235961914062
    8. '0' → logprob: -13.626235961914062
    9. ' (' → logprob: -13.751235961914062
    10. '   ' → logprob: -14.001235961914062

Token 1336: ''' (ID: 6)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.34987810254096985
    2. ')' → logprob: -1.3498780727386475
    3. '-' → logprob: -4.599878311157227
    4. ' -' → logprob: -4.974878311157227
    5. '[' → logprob: -5.099878311157227
    6. '(s' → logprob: -5.724878311157227
    7. ')
' → logprob: -5.724878311157227
    8. '%' → logprob: -6.724878311157227
    9. '   ' → logprob: -6.849878311157227
    10. '[start' → logprob: -7.474878311157227

Token 1337: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2577502429485321
    2. '
' → logprob: -1.6327502727508545
    3. 'dist' → logprob: -3.8827502727508545
    4. '#' → logprob: -4.882750034332275
    5. '[' → logprob: -6.757750034332275
    6. 'print' → logprob: -7.007750034332275
    7. '[:-' → logprob: -8.007750511169434
    8. '[:]' → logprob: -8.132750511169434
    9. ' for' → logprob: -8.382750511169434
    10. '#print' → logprob: -8.632750511169434

Token 1338: 'mont' (ID: 27939)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3759627044200897
    2. '250' → logprob: -1.250962734222412
    3. '(' → logprob: -4.000962734222412
    4. ')' → logprob: -5.875962734222412
    5. '0' → logprob: -6.375962734222412
    6. ' (' → logprob: -6.750962734222412
    7. ' s' → logprob: -7.000962734222412
    8. '(s' → logprob: -7.375962734222412
    9. '(n' → logprob: -7.375962734222412
    10. 'n' → logprob: -7.625962734222412

Token 1339: 'ant' (ID: 493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9184667468070984
    2. '250' → logprob: -1.4184668064117432
    3. '-' → logprob: -2.418466806411743
    4. 's' → logprob: -2.543466806411743
    5. '[' → logprob: -3.168466806411743
    6. '=' → logprob: -3.543466806411743
    7. '*' → logprob: -3.793466806411743
    8. '[start' → logprob: -4.293466567993164
    9. '   ' → logprob: -4.418466567993164
    10. ' -' → logprob: -4.543466567993164

Token 1340: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6121417880058289
    2. ',' → logprob: -1.6121418476104736
    3. '<|end|>' → logprob: -2.2371418476104736
    4. 's' → logprob: -2.9871418476104736
    5. '[' → logprob: -3.2371418476104736
    6. '_s' → logprob: -4.4871416091918945
    7. ' ' → logprob: -4.7371416091918945
    8. '),' → logprob: -4.9871416091918945
    9. '[s' → logprob: -4.9871416091918945
    10. ',s' → logprob: -5.1121416091918945

Token 1341: ''argent' (ID: 93204)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1041053906083107
    2. ' ' → logprob: -3.7291054725646973
    3. 's' → logprob: -3.8541054725646973
    4. ' money' → logprob: -4.229105472564697
    5. ',' → logprob: -4.854105472564697
    6. 'money' → logprob: -5.104105472564697
    7. '),' → logprob: -5.604105472564697
    8. ' )' → logprob: -5.604105472564697
    9. ''argent' → logprob: -5.854105472564697
    10. '_money' → logprob: -5.979105472564697

Token 1342: ' initial' (ID: 4871)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1065446138381958
    2. ')' → logprob: -1.2315446138381958
    3. '[s' → logprob: -1.7315446138381958
    4. '[' → logprob: -2.3565444946289062
    5. ',' → logprob: -3.1065444946289062
    6. '%' → logprob: -3.8565444946289062
    7. '*s' → logprob: -4.356544494628906
    8. ' -' → logprob: -4.481544494628906
    9. '*' → logprob: -5.356544494628906
    10. '),' → logprob: -6.356544494628906

Token 1343: ')
' (ID: 446)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.5283836722373962
    2. ')' → logprob: -1.278383731842041
    3. '*s' → logprob: -2.403383731842041
    4. '*' → logprob: -4.528383731842041
    5. '-' → logprob: -4.653383731842041
    6. ' *' → logprob: -5.153383731842041
    7. '[' → logprob: -5.528383731842041
    8. ',' → logprob: -5.653383731842041
    9. '%' → logprob: -6.028383731842041
    10. ' -' → logprob: -7.153383731842041

Token 1344: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029166890308260918
    2. ' for' → logprob: -4.9041666984558105
    3. '<|end|>' → logprob: -5.5291666984558105
    4. ')' → logprob: -5.6541666984558105
    5. 'print' → logprob: -6.0291666984558105
    6. '[:]' → logprob: -6.4041666984558105
    7. 's' → logprob: -6.5291666984558105
    8. '
' → logprob: -6.5291666984558105
    9. '```' → logprob: -7.2791666984558105
    10. 'dist' → logprob: -7.4041666984558105

Token 1345: ' L' (ID: 451)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034365616738796234
    2. 'dist' → logprob: -3.534365653991699
    3. '
' → logprob: -6.784365653991699
    4. '   ' → logprob: -7.034365653991699
    5. 's' → logprob: -7.909365653991699
    6. 'print' → logprob: -8.1593656539917
    7. '=' → logprob: -8.2843656539917
    8. '#' → logprob: -8.4093656539917
    9. '[s' → logprob: -8.5343656539917
    10. '[:]' → logprob: -8.5343656539917

Token 1346: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42931464314460754
    2. ' =' → logprob: -1.0543146133422852
    3. '=[' → logprob: -8.179314613342285
    4. '=L' → logprob: -8.679314613342285
    5. '=s' → logprob: -9.429314613342285
    6. '[' → logprob: -10.679314613342285
    7. '=
' → logprob: -11.179314613342285
    8. ' =[' → logprob: -11.304314613342285
    9. '[:]' → logprob: -12.804314613342285
    10. '=S' → logprob: -12.929314613342285

Token 1347: ' [' (ID: 723)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00545252813026309
    2. '[' → logprob: -5.255452632904053
    3. '[min' → logprob: -9.630452156066895
    4. 'd' → logprob: -9.755452156066895
    5. ' dist' → logprob: -10.255452156066895
    6. '[d' → logprob: -10.630452156066895
    7. '[
' → logprob: -11.130452156066895
    8. '[]
' → logprob: -11.630452156066895
    9. 'min' → logprob: -13.380452156066895
    10. '(dist' → logprob: -13.505452156066895

Token 1348: '0' (ID: 15)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5561789274215698
    2. 'dist' → logprob: -0.9311789274215698
    3. 'min' → logprob: -3.4311790466308594
    4. 'inf' → logprob: -10.30617904663086
    5. ' dist' → logprob: -10.80617904663086
    6. '   ' → logprob: -11.05617904663086
    7. '250' → logprob: -11.18117904663086
    8. ' float' → logprob: -11.30617904663086
    9. 'max' → logprob: -11.30617904663086
    10. '0' → logprob: -11.43117904663086

Token 1349: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6775774359703064
    2. 'for' → logprob: -1.3025774955749512
    3. ' for' → logprob: -1.8025774955749512
    4. ']*' → logprob: -3.552577495574951
    5. ']*(' → logprob: -4.927577495574951
    6. 'if' → logprob: -5.052577495574951
    7. ' if' → logprob: -5.052577495574951
    8. '+' → logprob: -6.052577495574951
    9. ']+' → logprob: -7.052577495574951
    10. ' ]' → logprob: -7.427577495574951

Token 1350: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020668363198637962
    2. ' for' → logprob: -4.3956685066223145
    3. ']' → logprob: -5.2706685066223145
    4. ']+' → logprob: -6.7706685066223145
    5. '+' → logprob: -7.1456685066223145
    6. ']*' → logprob: -7.6456685066223145
    7. '[' → logprob: -9.395668029785156
    8. '[:]' → logprob: -9.395668029785156
    9. ']*(' → logprob: -9.395668029785156
    10. '*' → logprob: -9.520668029785156

Token 1351: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.141186450899113e-05
    2. '(n' → logprob: -11.250020980834961
    3. ' n' → logprob: -12.375020980834961
    4. '250' → logprob: -12.500020980834961
    5. '(' → logprob: -14.750020980834961
    6. ' (' → logprob: -17.37502098083496
    7. '
' → logprob: -18.50002098083496
    8. '   ' → logprob: -18.62502098083496
    9. '25' → logprob: -19.12502098083496
    10. '	n' → logprob: -19.75002098083496

Token 1352: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10756152123212814
    2. ' for' → logprob: -2.7325615882873535
    3. '
' → logprob: -3.6075615882873535
    4. '[' → logprob: -5.1075615882873535
    5. '	for' → logprob: -7.2325615882873535
    6. '   ' → logprob: -7.7325615882873535
    7. '[ind' → logprob: -7.7325615882873535
    8. '[i' → logprob: -7.9825615882873535
    9. '0' → logprob: -8.107561111450195
    10. '
' → logprob: -8.482561111450195

Token 1353: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007653143256902695
    2. 'money' → logprob: -8.000764846801758
    3. 'start' → logprob: -9.375764846801758
    4. 'initial' → logprob: -10.125764846801758
    5. 'idx' → logprob: -10.250764846801758
    6. 'offset' → logprob: -10.375764846801758
    7. 'dist' → logprob: -10.375764846801758
    8. 'q' → logprob: -10.500764846801758
    9. 'current' → logprob: -10.500764846801758
    10. 's' → logprob: -10.875764846801758

Token 1354: 'isation' (ID: 6993)
  Prédit: 'ized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.12875854969024658
    2. 'ize' → logprob: -2.128758430480957
    3. 'ization' → logprob: -6.628758430480957
    4. 'for' → logprob: -8.878758430480957
    5. 'y' → logprob: -9.003758430480957
    6. 'izer' → logprob: -9.378758430480957
    7. 'i' → logprob: -10.003758430480957
    8. 'izing' → logprob: -10.003758430480957
    9. 'ialize' → logprob: -11.003758430480957
    10. 'size' → logprob: -11.503758430480957

Token 1355: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0023940829560160637
    2. '
' → logprob: -6.377394199371338
    3. ' for' → logprob: -7.377394199371338
    4. '   ' → logprob: -11.25239372253418
    5. '<|end|>' → logprob: -11.25239372253418
    6. '[' → logprob: -12.12739372253418
    7. '#' → logprob: -12.25239372253418
    8. '```' → logprob: -12.37739372253418
    9. 'L' → logprob: -12.50239372253418
    10. '[i' → logprob: -12.75239372253418

Token 1356: ' résultat' (ID: 62556)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10156498104333878
    2. 'dist' → logprob: -3.351564884185791
    3. '250' → logprob: -3.601564884185791
    4. '(n' → logprob: -3.851564884185791
    5. 'n' → logprob: -5.351564884185791
    6. '(dist' → logprob: -5.726564884185791
    7. 'inf' → logprob: -5.976564884185791
    8. 'float' → logprob: -6.726564884185791
    9. '251' → logprob: -7.351564884185791
    10. '(L' → logprob: -8.60156536102295

Token 1357: ' final' (ID: 1721)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007193404715508223
    2. ' for' → logprob: -5.257193565368652
    3. '
' → logprob: -6.382193565368652
    4. '[' → logprob: -10.007193565368652
    5. 's' → logprob: -10.132193565368652
    6. 'i' → logprob: -10.507193565368652
    7. 'idx' → logprob: -10.882193565368652
    8. 'ind' → logprob: -11.257193565368652
    9. '	for' → logprob: -11.382193565368652
    10. '```' → logprob: -11.382193565368652

Token 1358: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1752254068851471
    2. '
' → logprob: -1.9252253770828247
    3. ' for' → logprob: -4.925225257873535
    4. '[' → logprob: -5.550225257873535
    5. '<|end|>' → logprob: -6.300225257873535
    6. '
' → logprob: -8.550225257873535
    7. '   ' → logprob: -8.675225257873535
    8. '' → logprob: -8.675225257873535
    9. ')' → logprob: -8.675225257873535
    10. '[ind' → logprob: -8.800225257873535

Token 1359: ' distances' (ID: 48294)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00195384887047112
    2. 'dist' → logprob: -7.126954078674316
    3. 'INF' → logprob: -7.751954078674316
    4. 'inf' → logprob: -7.876954078674316
    5. 'idx' → logprob: -8.501954078674316
    6. 'import' → logprob: -9.501954078674316
    7. '
' → logprob: -11.626954078674316
    8. '_inf' → logprob: -12.001954078674316
    9. ' for' → logprob: -12.251954078674316
    10. '_' → logprob: -12.376954078674316

Token 1360: ' minim' (ID: 23874)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3995809555053711
    2. '[' → logprob: -1.899580955505371
    3. '
' → logprob: -2.024580955505371
    4. '[:]' → logprob: -3.774580955505371
    5. '<|end|>' → logprob: -4.524580955505371
    6. ' for' → logprob: -5.649580955505371
    7. '=' → logprob: -6.399580955505371
    8. '[n' → logprob: -6.399580955505371
    9. '[i' → logprob: -6.899580955505371
    10. '0' → logprob: -7.149580955505371

Token 1361: 'ales' (ID: 3459)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11860103160142899
    2. 'al' → logprob: -2.743601083755493
    3. 'als' → logprob: -4.618600845336914
    4. 'ales' → logprob: -4.993600845336914
    5. '=' → logprob: -5.118600845336914
    6. 'ale' → logprob: -5.243600845336914
    7. '```' → logprob: -5.368600845336914
    8. '=[' → logprob: -6.243600845336914
    9. '[:]' → logprob: -6.493600845336914
    10. '[in' → logprob: -6.743600845336914

Token 1362: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1082572340965271
    2. '
' → logprob: -2.858257293701172
    3. '[' → logprob: -4.108257293701172
    4. ' for' → logprob: -4.483257293701172
    5. '[s' → logprob: -5.608257293701172
    6. '<|end|>' → logprob: -5.608257293701172
    7. '[n' → logprob: -6.108257293701172
    8. '[i' → logprob: -6.358257293701172
    9. '[start' → logprob: -6.608257293701172
    10. '[ind' → logprob: -6.858257293701172

Token 1363: ' atteindre' (ID: 95734)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.861651490908116e-05
    2. 'j' → logprob: -10.625068664550781
    3. ' i' → logprob: -10.875068664550781
    4. 'v' → logprob: -11.625068664550781
    5. '_' → logprob: -12.125068664550781
    6. 'range' → logprob: -12.750068664550781
    7. '_i' → logprob: -12.875068664550781
    8. '0' → logprob: -12.875068664550781
    9. '1' → logprob: -13.875068664550781
    10. '```' → logprob: -14.375068664550781

Token 1364: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004153668414801359
    2. ' i' → logprob: -6.004153728485107
    3. 'range' → logprob: -6.504153728485107
    4. 'v' → logprob: -9.37915325164795
    5. ' range' → logprob: -9.50415325164795
    6. 'node' → logprob: -12.00415325164795
    7. 'each' → logprob: -12.87915325164795
    8. '```' → logprob: -12.87915325164795
    9. 'j' → logprob: -13.00415325164795
    10. 'u' → logprob: -13.87915325164795

Token 1365: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5377181768417358
    2. 'node' → logprob: -1.6627181768417358
    3. 'som' → logprob: -2.2877182960510254
    4. ' sommet' → logprob: -3.1627182960510254
    5. ' i' → logprob: -3.4127182960510254
    6. 'vertex' → logprob: -4.037718296051025
    7. 'range' → logprob: -4.162718296051025
    8. 'v' → logprob: -4.912718296051025
    9. '_' → logprob: -5.537718296051025
    10. 's' → logprob: -5.912718296051025

Token 1366: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003958597779273987
    2. '
' → logprob: -6.378958702087402
    3. ' for' → logprob: -6.378958702087402
    4. '<|end|>' → logprob: -8.753958702087402
    5. 's' → logprob: -9.003958702087402
    6. 'i' → logprob: -9.503958702087402
    7. '[' → logprob: -10.128958702087402
    8. 'idx' → logprob: -11.003958702087402
    9. '   ' → logprob: -11.128958702087402
    10. '[s' → logprob: -11.503958702087402

Token 1367: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3535437285900116
    2. '
' → logprob: -1.478543758392334
    3. ' for' → logprob: -4.103543758392334
    4. '```' → logprob: -4.103543758392334
    5. '<|end|>' → logprob: -4.228543758392334
    6. '[' → logprob: -4.978543758392334
    7. '   ' → logprob: -5.978543758392334
    8. '[ind' → logprob: -6.353543758392334
    9. '' → logprob: -6.603543758392334
    10. ' ' → logprob: -6.728543758392334

Token 1368: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003112711710855365
    2. 'dist' → logprob: -9.125310897827148
    3. '```' → logprob: -9.375310897827148
    4. 'i' → logprob: -10.125310897827148
    5. 'idx' → logprob: -10.750310897827148
    6. '
' → logprob: -11.375310897827148
    7. '   ' → logprob: -11.375310897827148
    8. 'k' → logprob: -12.000310897827148
    9. ' for' → logprob: -12.375310897827148
    10. 'range' → logprob: -12.375310897827148

Token 1369: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005044196150265634
    2. ' i' → logprob: -7.625504493713379
    3. 'v' → logprob: -11.125504493713379
    4. 'u' → logprob: -14.125504493713379
    5. '	i' → logprob: -15.000504493713379
    6. '```' → logprob: -15.375504493713379
    7. '   ' → logprob: -15.875504493713379
    8. 'x' → logprob: -16.125503540039062
    9. '_i' → logprob: -17.125503540039062
    10. ' v' → logprob: -17.500503540039062

Token 1370: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008738666772842407
    2. 'in' → logprob: -4.7587385177612305
    3. 'n' → logprob: -9.38373851776123
    4. 'range' → logprob: -11.00873851776123
    5. ' ' → logprob: -11.63373851776123
    6. '_' → logprob: -12.38373851776123
    7. '	in' → logprob: -13.63373851776123
    8. ' i' → logprob: -13.88373851776123
    9. 's' → logprob: -13.88373851776123
    10. ' n' → logprob: -14.13373851776123

Token 1371: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015023599844425917
    2. ' range' → logprob: -6.501502513885498
    3. 'r' → logprob: -18.126502990722656
    4. 'in' → logprob: -19.501502990722656
    5. '(range' → logprob: -19.501502990722656
    6. 'rang' → logprob: -19.501502990722656
    7. ' ' → logprob: -19.751502990722656
    8. '	range' → logprob: -20.376502990722656
    9. '   ' → logprob: -21.251502990722656
    10. 'ra' → logprob: -21.501502990722656

Token 1372: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018179677426815033
    2. '(n' → logprob: -4.018179893493652
    3. '(' → logprob: -11.143179893493652
    4. ' n' → logprob: -11.518179893493652
    5. '1' → logprob: -12.643179893493652
    6. '	n' → logprob: -14.268179893493652
    7. '_n' → logprob: -14.768179893493652
    8. ',n' → logprob: -14.893179893493652
    9. '<n' → logprob: -15.893179893493652
    10. '[n' → logprob: -16.018178939819336

Token 1373: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10047721117734909
    2. '):
' → logprob: -2.3504772186279297
    3. '+' → logprob: -8.47547721862793
    4. '   ' → logprob: -10.47547721862793
    5. '):
' → logprob: -11.22547721862793
    6. ')' → logprob: -12.35047721862793
    7. ':' → logprob: -12.35047721862793
    8. 'n' → logprob: -13.35047721862793
    9. '}:' → logprob: -13.35047721862793
    10. '1' → logprob: -13.60047721862793

Token 1374: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08809192478656769
    2. '       ' → logprob: -3.7130918502807617
    3. ' L' → logprob: -3.8380918502807617
    4. 'L' → logprob: -4.338091850280762
    5. 'min' → logprob: -4.713091850280762
    6. 'm' → logprob: -5.213091850280762
    7. ' min' → logprob: -5.463091850280762
    8. 'dist' → logprob: -6.838091850280762
    9. ' minimal' → logprob: -7.213091850280762
    10. ' m' → logprob: -7.588091850280762

Token 1375: ' #' (ID: 1069)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.004095973912626505
    2. 'm' → logprob: -6.504096031188965
    3. 'mi' → logprob: -6.879096031188965
    4. 'min' → logprob: -7.504096031188965
    5. 'mn' → logprob: -7.754096031188965
    6. 'res' → logprob: -8.379096031188965
    7. 'ans' → logprob: -9.254096031188965
    8. '   ' → logprob: -10.254096031188965
    9. '       ' → logprob: -10.379096031188965
    10. 'tmp' → logprob: -10.504096031188965

Token 1376: ' Pour' (ID: 13931)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.08986266702413559
    2. 'm' → logprob: -3.964862585067749
    3. 'min' → logprob: -3.964862585067749
    4. 'res' → logprob: -4.589862823486328
    5. 'mn' → logprob: -4.714862823486328
    6. 'best' → logprob: -4.964862823486328
    7. 'mi' → logprob: -5.464862823486328
    8. 'ans' → logprob: -5.464862823486328
    9. '   ' → logprob: -5.714862823486328
    10. 'dist' → logprob: -5.964862823486328

Token 1377: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004691188223659992
    2. 'k' → logprob: -5.379691123962402
    3. 'min' → logprob: -11.004691123962402
    4. ' j' → logprob: -11.379691123962402
    5. '   ' → logprob: -11.504691123962402
    6. 'x' → logprob: -12.004691123962402
    7. 'v' → logprob: -12.254691123962402
    8. 'best' → logprob: -12.504691123962402
    9. '250' → logprob: -12.754691123962402
    10. 't' → logprob: -12.879691123962402

Token 1378: ' sommet' (ID: 130502)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03833465278148651
    2. 'k' → logprob: -3.288334608078003
    3. 'v' → logprob: -8.538334846496582
    4. 'x' → logprob: -10.788334846496582
    5. '_j' → logprob: -11.163334846496582
    6. ' j' → logprob: -11.288334846496582
    7. 'money' → logprob: -11.413334846496582
    8. 'amount' → logprob: -11.788334846496582
    9. '   ' → logprob: -12.038334846496582
    10. 'val' → logprob: -12.538334846496582

Token 1379: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.087659239768982
    2. ' in' → logprob: -1.212659239768982
    3. ':' → logprob: -2.2126593589782715
    4. 'j' → logprob: -2.9626593589782715
    5. ' j' → logprob: -3.3376593589782715
    6. ' range' → logprob: -3.5876593589782715
    7. '[' → logprob: -3.7126593589782715
    8. 'in' → logprob: -3.8376593589782715
    9. 'range' → logprob: -3.8376593589782715
    10. ':
' → logprob: -3.9626593589782715

Token 1380: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5961847305297852
    2. ':' → logprob: -1.2211847305297852
    3. '[' → logprob: -3.221184730529785
    4. '   ' → logprob: -4.096184730529785
    5. '=' → logprob: -4.221184730529785
    6. '       ' → logprob: -4.221184730529785
    7. ' in' → logprob: -4.471184730529785
    8. 'in' → logprob: -4.471184730529785
    9. ',' → logprob: -4.596184730529785
    10. '+' → logprob: -5.221184730529785

Token 1381: ' on' (ID: 402)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2711401879787445
    2. 'res' → logprob: -2.6461400985717773
    3. 'ans' → logprob: -2.8961400985717773
    4. 'm' → logprob: -3.1461400985717773
    5. 'min' → logprob: -3.8961400985717773
    6. '   ' → logprob: -4.396140098571777
    7. 'mi' → logprob: -4.771140098571777
    8. 'mn' → logprob: -4.771140098571777
    9. '       ' → logprob: -5.521140098571777
    10. 'dist' → logprob: -5.646140098571777

Token 1382: ' cherche' (ID: 52345)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.720160722732544
    2. 'L' → logprob: -1.220160722732544
    3. 'm' → logprob: -2.095160722732544
    4. '=' → logprob: -3.220160722732544
    5. 'dist' → logprob: -4.470160484313965
    6. 'mind' → logprob: -4.470160484313965
    7. 'minimum' → logprob: -5.220160484313965
    8. 'mi' → logprob: -5.595160484313965
    9. 'print' → logprob: -5.720160484313965
    10. 'best' → logprob: -5.845160484313965

Token 1383: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6069124937057495
    2. '250' → logprob: -1.7319124937057495
    3. 'j' → logprob: -1.9819124937057495
    4. '   ' → logprob: -2.981912612915039
    5. 'k' → logprob: -3.731912612915039
    6. 'm' → logprob: -4.231912612915039
    7. '       ' → logprob: -4.481912612915039
    8. '_min' → logprob: -5.106912612915039
    9. '_' → logprob: -5.231912612915039
    10. '
' → logprob: -5.231912612915039

Token 1384: ' plus' (ID: 2932)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0034068014938384295
    2. 'minimum' → logprob: -6.003407001495361
    3. 'dist' → logprob: -8.378406524658203
    4. 'm' → logprob: -8.753406524658203
    5. 'for' → logprob: -8.878406524658203
    6. '
' → logprob: -9.378406524658203
    7. 'mini' → logprob: -9.503406524658203
    8. ' min' → logprob: -9.628406524658203
    9. 'best' → logprob: -10.253406524658203
    10. 'float' → logprob: -10.378406524658203

Token 1385: ' petite' (ID: 28119)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.689150869846344
    2. 'min' → logprob: -1.0641508102416992
    3. 'pet' → logprob: -2.189150810241699
    4. ' inf' → logprob: -3.939150810241699
    5. ' petite' → logprob: -5.564150810241699
    6. 'm' → logprob: -6.189150810241699
    7. 'small' → logprob: -6.314150810241699
    8. 'float' → logprob: -6.314150810241699
    9. ' petit' → logprob: -6.439150810241699
    10. ' faible' → logprob: -6.439150810241699

Token 1386: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20433199405670166
    2. 'val' → logprob: -2.079331874847412
    3. 'distance' → logprob: -3.204331874847412
    4. 'cost' → logprob: -4.954331874847412
    5. 'd' → logprob: -5.454331874847412
    6. 'res' → logprob: -5.829331874847412
    7. 'value' → logprob: -5.954331874847412
    8. 'v' → logprob: -6.829331874847412
    9. 'x' → logprob: -7.829331874847412
    10. 'ans' → logprob: -8.45433235168457

Token 1387: ' parmi' (ID: 51713)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3380298614501953
    2. 'min' → logprob: -1.8380298614501953
    3. 'for' → logprob: -2.0880298614501953
    4. 'dist' → logprob: -2.3380298614501953
    5. '[j' → logprob: -2.4630298614501953
    6. '[min' → logprob: -2.5880298614501953
    7. '   ' → logprob: -2.8380298614501953
    8. 'in' → logprob: -3.4630298614501953
    9. '_j' → logprob: -3.7130298614501953
    10. ' =' → logprob: -4.713029861450195

Token 1388: ' tous' (ID: 10688)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1045210212469101
    2. 'dist' → logprob: -2.3545210361480713
    3. 'k' → logprob: -6.354520797729492
    4. 'j' → logprob: -6.479520797729492
    5. '250' → logprob: -7.979520797729492
    6. ' range' → logprob: -8.354520797729492
    7. 'min' → logprob: -8.979520797729492
    8. '[' → logprob: -9.104520797729492
    9. '
' → logprob: -9.854520797729492
    10. '   ' → logprob: -10.604520797729492

Token 1389: ' les' (ID: 1341)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03215411677956581
    2. 'j' → logprob: -3.657154083251953
    3. 'dist' → logprob: -5.407154083251953
    4. 'L' → logprob: -8.032154083251953
    5. '
' → logprob: -8.907154083251953
    6. '   ' → logprob: -9.032154083251953
    7. 'range' → logprob: -9.032154083251953
    8. 'money' → logprob: -9.157154083251953
    9. '[k' → logprob: -9.782154083251953
    10. ' k' → logprob: -9.782154083251953

Token 1390: ' états' (ID: 184259)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0019264941802248359
    2. '250' → logprob: -6.501926422119141
    3. 'k' → logprob: -8.87692642211914
    4. '(dist' → logprob: -9.37692642211914
    5. ' dist' → logprob: -9.50192642211914
    6. 'range' → logprob: -9.75192642211914
    7. 'j' → logprob: -10.75192642211914
    8. '(' → logprob: -11.75192642211914
    9. 'min' → logprob: -12.00192642211914
    10. 'L' → logprob: -12.00192642211914

Token 1391: ' où' (ID: 15113)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0201724767684937
    2. 'range' → logprob: -2.020172595977783
    3. '250' → logprob: -2.395172595977783
    4. '(' → logprob: -2.645172595977783
    5. ' for' → logprob: -2.645172595977783
    6. 'j' → logprob: -2.645172595977783
    7. '   ' → logprob: -3.020172595977783
    8. 'k' → logprob: -3.770172595977783
    9. ' j' → logprob: -3.895172595977783
    10. ' in' → logprob: -3.895172595977783

Token 1392: ' ce' (ID: 2357)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6551163792610168
    2. 'j' → logprob: -0.7801163792610168
    3. 'dist' → logprob: -4.655116558074951
    4. '250' → logprob: -5.030116558074951
    5. 'money' → logprob: -5.780116558074951
    6. 'state' → logprob: -7.780116558074951
    7. 'amount' → logprob: -7.905116558074951
    8. '   ' → logprob: -8.030116081237793
    9. 's' → logprob: -8.155116081237793
    10. ' j' → logprob: -8.405116081237793

Token 1393: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3074168860912323
    2. '250' → logprob: -1.6824169158935547
    3. 'for' → logprob: -3.8074169158935547
    4. 'k' → logprob: -4.307416915893555
    5. '[i' → logprob: -4.682416915893555
    6. 's' → logprob: -5.307416915893555
    7. 'n' → logprob: -5.682416915893555
    8. '`' → logprob: -5.807416915893555
    9. '(i' → logprob: -6.057416915893555
    10. 'money' → logprob: -6.182416915893555

Token 1394: ' est' (ID: 893)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -1.6484780311584473
    2. '250' → logprob: -1.6484780311584473
    3. 's' → logprob: -2.0234780311584473
    4. ' se' → logprob: -2.3984780311584473
    5. '*' → logprob: -2.6484780311584473
    6. 'appe' → logprob: -3.1484780311584473
    7. 'i' → logprob: -3.5234780311584473
    8. 'poss' → logprob: -3.5234780311584473
    9. ' est' → logprob: -3.8984780311584473
    10. 'occ' → logprob: -4.398478031158447

Token 1395: ' atteint' (ID: 104876)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '250' → logprob: -0.2886151075363159
    2. 'k' → logprob: -1.663615107536316
    3. 'j' → logprob: -3.4136152267456055
    4. 'i' → logprob: -4.7886152267456055
    5. ' ' → logprob: -4.9136152267456055
    6. 'located' → logprob: -5.5386152267456055
    7. 'idx' → logprob: -6.5386152267456055
    8. 'present' → logprob: -6.7886152267456055
    9. 'in' → logprob: -7.2886152267456055
    10. '   ' → logprob: -7.5386152267456055

Token 1396: ' avec' (ID: 3937)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.23845063149929047
    2. 'range' → logprob: -2.613450527191162
    3. 'for' → logprob: -2.988450527191162
    4. 'dist' → logprob: -4.238450527191162
    5. 'j' → logprob: -4.363450527191162
    6. '   ' → logprob: -4.488450527191162
    7. '[min' → logprob: -4.863450527191162
    8. ' min' → logprob: -5.113450527191162
    9. 'in' → logprob: -5.363450527191162
    10. 'L' → logprob: -5.488450527191162

Token 1397: ' un' (ID: 537)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0985502377152443
    2. 'range' → logprob: -2.723550319671631
    3. 'j' → logprob: -3.848550319671631
    4. 'money' → logprob: -5.973550319671631
    5. '0' → logprob: -6.223550319671631
    6. '250' → logprob: -6.848550319671631
    7. ' range' → logprob: -7.723550319671631
    8. 'min' → logprob: -8.473549842834473
    9. 'm' → logprob: -8.723549842834473
    10. ' k' → logprob: -9.098549842834473

Token 1398: ' montant' (ID: 72364)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.061292946338653564
    2. 'money' → logprob: -3.061292886734009
    3. 'range' → logprob: -5.436293125152588
    4. 'mont' → logprob: -5.936293125152588
    5. 'dist' → logprob: -6.311293125152588
    6. 'argent' → logprob: -6.561293125152588
    7. 'amount' → logprob: -7.186293125152588
    8. '250' → logprob: -7.436293125152588
    9. 'm' → logprob: -8.06129264831543
    10. ''argent' → logprob: -9.43629264831543

Token 1399: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.13761208951473236
    2. 'd' → logprob: -2.8876121044158936
    3. ' of' → logprob: -3.6376121044158936
    4. ' k' → logprob: -4.7626118659973145
    5. 'of' → logprob: -5.1376118659973145
    6. 'k' → logprob: -5.2626118659973145
    7. ' range' → logprob: -5.3876118659973145
    8. ' de' → logprob: -5.7626118659973145
    9. 'range' → logprob: -6.0126118659973145
    10. ' j' → logprob: -6.1376118659973145

Token 1400: ''argent' (ID: 93204)
  Prédit: 'argent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argent' → logprob: -0.09356600046157837
    2. ''argent' → logprob: -2.4685659408569336
    3. 'arge' → logprob: -6.718565940856934
    4. 'arg' → logprob: -6.968565940856934
    5. '_arg' → logprob: -7.218565940856934
    6. 'argin' → logprob: -7.343565940856934
    7. 'argen' → logprob: -9.093565940856934
    8. '```' → logprob: -9.218565940856934
    9. 'Arg' → logprob: -9.343565940856934
    10. 'or' → logprob: -9.343565940856934

Token 1401: ' quelcon' (ID: 199130)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6856346130371094
    2. ' range' → logprob: -1.5606346130371094
    3. '250' → logprob: -2.1856346130371094
    4. 'in' → logprob: -3.0606346130371094
    5. '(range' → logprob: -3.6856346130371094
    6. ' in' → logprob: -4.185634613037109
    7. '(' → logprob: -4.310634613037109
    8. 'min' → logprob: -4.560634613037109
    9. '=' → logprob: -4.810634613037109
    10. '[' → logprob: -4.810634613037109

Token 1402: 'que' (ID: 1126)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8537232875823975
    2. ' range' → logprob: -1.8537232875823975
    3. 'in' → logprob: -2.3537232875823975
    4. 'range' → logprob: -2.8537232875823975
    5. ' ' → logprob: -2.9787232875823975
    6. '(' → logprob: -2.9787232875823975
    7. 'en' → logprob: -2.9787232875823975
    8. 'for' → logprob: -3.1037232875823975
    9. 'à' → logprob: -3.2287232875823975
    10. 'k' → logprob: -3.3537232875823975

Token 1403: '
' (ID: 198)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.2132869958877563
    2. '   ' → logprob: -1.9632869958877563
    3. 'for' → logprob: -2.088286876678467
    4. 'dist' → logprob: -2.338286876678467
    5. 'range' → logprob: -2.463286876678467
    6. 'inf' → logprob: -3.588286876678467
    7. '[min' → logprob: -3.588286876678467
    8. ' range' → logprob: -3.588286876678467
    9. 'k' → logprob: -3.713286876678467
    10. ' min' → logprob: -3.838286876678467

Token 1404: '       ' (ID: 309)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.23634777963161469
    2. 'for' → logprob: -2.9863476753234863
    3. 'L' → logprob: -3.3613476753234863
    4. '   ' → logprob: -3.3613476753234863
    5. 'dist' → logprob: -3.3613476753234863
    6. ' min' → logprob: -4.361347675323486
    7. ' for' → logprob: -4.736347675323486
    8. ' L' → logprob: -5.111347675323486
    9. 'range' → logprob: -5.236347675323486
    10. 'm' → logprob: -5.486347675323486

Token 1405: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.029454685747623444
    2. 'min' → logprob: -4.404454708099365
    3. 'mi' → logprob: -5.279454708099365
    4. 'm' → logprob: -5.279454708099365
    5. 'mn' → logprob: -6.529454708099365
    6. 'best' → logprob: -6.904454708099365
    7. 'dist' → logprob: -6.904454708099365
    8. 'res' → logprob: -7.404454708099365
    9. 'ans' → logprob: -7.404454708099365
    10. 'tmp' → logprob: -7.904454708099365

Token 1406: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012976066500414163
    2. '[' → logprob: -9.125129699707031
    3. 'i' → logprob: -11.625129699707031
    4. '=' → logprob: -11.875129699707031
    5. '[min' → logprob: -13.500129699707031
    6. '
' → logprob: -14.625129699707031
    7. '[
' → logprob: -14.750129699707031
    8. 'for' → logprob: -14.875129699707031
    9. '=i' → logprob: -15.000129699707031
    10. ' [' → logprob: -15.250129699707031

Token 1407: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6919719576835632
    2. ']=' → logprob: -1.191972017288208
    3. '=' → logprob: -1.691972017288208
    4. ' =' → logprob: -4.691971778869629
    5. ')' → logprob: -7.066971778869629
    6. ')=' → logprob: -7.191971778869629
    7. ']+=' → logprob: -8.441971778869629
    8. ' ]' → logprob: -8.566971778869629
    9. '=min' → logprob: -8.941971778869629
    10. '[' → logprob: -9.191971778869629

Token 1408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048694103956222534
    2. ' =' → logprob: -3.048694133758545
    3. '=min' → logprob: -9.173693656921387
    4. '=
' → logprob: -13.798693656921387
    5. 'min' → logprob: -14.423693656921387
    6. '.=' → logprob: -15.048693656921387
    7. ' min' → logprob: -15.298693656921387
    8. ']=' → logprob: -15.798693656921387
    9. ')=' → logprob: -15.798693656921387
    10. '=max' → logprob: -15.923693656921387

Token 1409: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0004307884373702109
    2. ' min' → logprob: -7.750430583953857
    3. '	min' → logprob: -16.000431060791016
    4. 'float' → logprob: -17.625431060791016
    5. '(min' → logprob: -18.125431060791016
    6. 'mini' → logprob: -18.875431060791016
    7. '=min' → logprob: -18.875431060791016
    8. '   ' → logprob: -19.250431060791016
    9. 'minimum' → logprob: -19.250431060791016
    10. 'mi' → logprob: -19.750431060791016

Token 1410: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.0015053401002660394
    2. 'dist' → logprob: -6.501505374908447
    3. '(' → logprob: -13.001504898071289
    4. '([' → logprob: -15.126504898071289
    5. '(d' → logprob: -15.251504898071289
    6. '	dist' → logprob: -15.751504898071289
    7. ' dist' → logprob: -16.62650489807129
    8. '(
' → logprob: -17.12650489807129
    9. '_dist' → logprob: -17.75150489807129
    10. '((' → logprob: -18.00150489807129

Token 1411: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009601775673218071
    2. '([' → logprob: -7.625960350036621
    3. '(' → logprob: -8.000960350036621
    4. '[(' → logprob: -9.875960350036621
    5. '[
' → logprob: -10.125960350036621
    6. '[i' → logprob: -10.125960350036621
    7. '[s' → logprob: -13.625960350036621
    8. ' [' → logprob: -14.250960350036621
    9. '[[' → logprob: -14.750960350036621
    10. '[len' → logprob: -15.000960350036621

Token 1412: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.06250803172588348
    2. '[' → logprob: -2.9375081062316895
    3. 'i' → logprob: -5.0625081062316895
    4. '[i' → logprob: -6.8125081062316895
    5. '(' → logprob: -9.437507629394531
    6. '[
' → logprob: -9.937507629394531
    7. '(i' → logprob: -11.687507629394531
    8. '
' → logprob: -11.937507629394531
    9. ' ' → logprob: -12.312507629394531
    10. ' i' → logprob: -12.562507629394531

Token 1413: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -14.562501907348633
    3. '500' → logprob: -15.125001907348633
    4. 'i' → logprob: -15.312501907348633
    5. '(i' → logprob: -15.875001907348633
    6. ' ' → logprob: -16.125001907348633
    7. '00' → logprob: -16.187501907348633
    8. '000' → logprob: -16.250001907348633
    9. '۰' → logprob: -16.375001907348633
    10. '`' → logprob: -16.750001907348633

Token 1414: ' *' (ID: 425)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.3872055411338806
    2. '*' → logprob: -1.1372056007385254
    3. ' *' → logprob: -8.012205123901367
    4. '**' → logprob: -12.887205123901367
    5. 'i' → logprob: -15.762205123901367
    6. '*u' → logprob: -16.012205123901367
    7. '*(' → logprob: -16.262205123901367
    8. '*
' → logprob: -16.637205123901367
    9. '*object' → logprob: -17.012205123901367
    10. '*j' → logprob: -17.387205123901367

Token 1415: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1517960956552997e-05
    2. ' i' → logprob: -11.375011444091797
    3. '*i' → logprob: -17.125011444091797
    4. '[i' → logprob: -18.375011444091797
    5. '	i' → logprob: -18.875011444091797
    6. '(i' → logprob: -19.375011444091797
    7. ')i' → logprob: -20.250011444091797
    8. '```' → logprob: -20.250011444091797
    9. 'user' → logprob: -20.875011444091797
    10. '{i' → logprob: -21.250011444091797

Token 1416: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002491595223546028
    2. '+' → logprob: -7.252491474151611
    3. '+k' → logprob: -7.752491474151611
    4. ':k' → logprob: -7.877491474151611
    5. '+j' → logprob: -8.25249195098877
    6. 'k' → logprob: -8.62749195098877
    7. ':j' → logprob: -8.75249195098877
    8. 'j' → logprob: -9.50249195098877
    9. ':])
' → logprob: -9.75249195098877
    10. ':(' → logprob: -9.75249195098877

Token 1417: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -7.314625690924004e-05
    2. '(' → logprob: -9.625073432922363
    3. ' ' → logprob: -12.000073432922363
    4. '   ' → logprob: -15.125073432922363
    5. '
' → logprob: -15.500073432922363
    6. '25' → logprob: -16.125072479248047
    7. '251' → logprob: -16.500072479248047
    8. ' (' → logprob: -16.625072479248047
    9. '255' → logprob: -16.750072479248047
    10. '  ' → logprob: -17.375072479248047

Token 1418: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03959116339683533
    2. '500' → logprob: -3.539591073989868
    3. '250' → logprob: -5.664591312408447
    4. '(i' → logprob: -6.164591312408447
    5. '00' → logprob: -6.664591312408447
    6. 'i' → logprob: -6.914591312408447
    7. '000' → logprob: -7.414591312408447
    8. '50' → logprob: -7.914591312408447
    9. '+' → logprob: -8.664590835571289
    10. '(' → logprob: -8.664590835571289

Token 1419: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.96013343334198
    2. '*(' → logprob: -0.96013343334198
    3. '(i' → logprob: -1.46013343334198
    4. '(' → logprob: -6.4601335525512695
    5. '*i' → logprob: -8.33513355255127
    6. '+' → logprob: -8.83513355255127
    7. ' (' → logprob: -9.33513355255127
    8. ' *' → logprob: -10.46013355255127
    9. '(n' → logprob: -11.21013355255127
    10. ' ' → logprob: -11.96013355255127

Token 1420: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0003631137660704553
    2. '(' → logprob: -8.25036334991455
    3. ' (' → logprob: -9.25036334991455
    4. 'i' → logprob: -13.12536334991455
    5. '((' → logprob: -14.12536334991455
    6. '   ' → logprob: -14.25036334991455
    7. ' ' → logprob: -14.37536334991455
    8. '*(' → logprob: -14.62536334991455
    9. '(
' → logprob: -14.75036334991455
    10. '
' → logprob: -15.25036334991455

Token 1421: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004085758700966835
    2. '(i' → logprob: -5.504085540771484
    3. ' i' → logprob: -12.129085540771484
    4. '(' → logprob: -13.629085540771484
    5. ' (' → logprob: -14.629085540771484
    6. '(
' → logprob: -16.004085540771484
    7. '{i' → logprob: -16.004085540771484
    8. '	i' → logprob: -16.879085540771484
    9. '_i' → logprob: -17.129085540771484
    10. '[i' → logprob: -17.379085540771484

Token 1422: ' +' (ID: 659)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5465463399887085
    2. '+' → logprob: -0.9215463399887085
    3. 'i' → logprob: -3.796546459197998
    4. '1' → logprob: -8.29654598236084
    5. '{i' → logprob: -8.54654598236084
    6. '+i' → logprob: -9.42154598236084
    7. ' (' → logprob: -9.92154598236084
    8. ' +' → logprob: -9.92154598236084
    9. '(' → logprob: -10.42154598236084
    10. ' i' → logprob: -11.04654598236084

Token 1423: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.25
    3. ' ' → logprob: -17.5
    4. '   ' → logprob: -19.625
    5. '
' → logprob: -19.75
    6. '```' → logprob: -19.875
    7. '１' → logprob: -20.375
    8. '(i' → logprob: -21.75
    9. '2' → logprob: -22.0
    10. '+' → logprob: -22.125

Token 1424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.625
    3. ' ' → logprob: -16.0
    4. '```' → logprob: -19.375
    5. '   ' → logprob: -19.625
    6. '+' → logprob: -20.5
    7. '2' → logprob: -20.75
    8. '(i' → logprob: -21.125
    9. '１' → logprob: -21.125
    10. '])' → logprob: -21.375

Token 1425: ')])' (ID: 99066)
  Prédit: ')])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.004012865014374256
    2. '])' → logprob: -5.7540130615234375
    3. '])]' → logprob: -7.6290130615234375
    4. ')]' → logprob: -8.379013061523438
    5. ']))' → logprob: -9.879013061523438
    6. ')' → logprob: -10.379013061523438
    7. ' )' → logprob: -11.379013061523438
    8. ']])' → logprob: -11.629013061523438
    9. ')])
' → logprob: -11.879013061523438
    10. ' ])' → logprob: -12.129013061523438

Token 1426: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09115434437990189
    2. 'print' → logprob: -2.4661543369293213
    3. '
' → logprob: -6.4661545753479
    4. '<|end|>' → logprob: -8.341154098510742
    5. ' for' → logprob: -8.716154098510742
    6. ')' → logprob: -9.091154098510742
    7. '#' → logprob: -9.466154098510742
    8. '   ' → logprob: -10.966154098510742
    9. '```' → logprob: -11.716154098510742
    10. '[' → logprob: -11.966154098510742

Token 1427: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25209540128707886
    2. 'for' → logprob: -1.5020954608917236
    3. ' for' → logprob: -9.877095222473145
    4. '   ' → logprob: -10.002095222473145
    5. ' print' → logprob: -10.877095222473145
    6. 'pass' → logprob: -11.252095222473145
    7. 'L' → logprob: -11.252095222473145
    8. ')' → logprob: -12.002095222473145
    9. '
' → logprob: -12.252095222473145
    10. 'pr' → logprob: -12.502095222473145

Token 1428: ' prend' (ID: 37463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5609391331672668
    2. 'print' → logprob: -1.060939073562622
    3. '[i' → logprob: -3.435939073562622
    4. 'continue' → logprob: -3.685939073562622
    5. 'L' → logprob: -5.560939311981201
    6. 'replace' → logprob: -5.810939311981201
    7. 'pass' → logprob: -5.810939311981201
    8. '=' → logprob: -5.935939311981201
    9. '[' → logprob: -5.935939311981201
    10. '
' → logprob: -6.060939311981201

Token 1429: ' le' (ID: 505)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0001649220648687333
    2. ' min' → logprob: -9.500164985656738
    3. '(min' → logprob: -10.250164985656738
    4. 'la' → logprob: -10.875164985656738
    5. 'dist' → logprob: -11.250164985656738
    6. 'the' → logprob: -11.750164985656738
    7. 'lambda' → logprob: -12.625164985656738
    8. '[min' → logprob: -12.875164985656738
    9. 'minimum' → logprob: -13.375164985656738
    10. '```' → logprob: -13.375164985656738

Token 1430: ' minimum' (ID: 11085)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0012309459270909429
    2. 'minimum' → logprob: -6.751230716705322
    3. ' min' → logprob: -10.75123119354248
    4. 'mi' → logprob: -11.50123119354248
    5. '[min' → logprob: -12.12623119354248
    6. '0' → logprob: -12.37623119354248
    7. 'dist' → logprob: -12.50123119354248
    8. '(min' → logprob: -12.62623119354248
    9. 'm' → logprob: -12.87623119354248
    10. '```' → logprob: -13.00123119354248

Token 1431: ' des' (ID: 731)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20427970588207245
    2. 'for' → logprob: -2.204279661178589
    3. '<|end|>' → logprob: -3.454279661178589
    4. '
' → logprob: -4.454279899597168
    5. ' for' → logprob: -4.704279899597168
    6. ' print' → logprob: -4.829279899597168
    7. '[' → logprob: -4.829279899597168
    8. '```' → logprob: -6.954279899597168
    9. ')' → logprob: -7.204279899597168
    10. '(print' → logprob: -7.329279899597168

Token 1432: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0001979378139367327
    2. ' dist' → logprob: -8.750198364257812
    3. '250' → logprob: -10.375198364257812
    4. 'slice' → logprob: -13.125198364257812
    5. 'min' → logprob: -13.500198364257812
    6. '(dist' → logprob: -13.750198364257812
    7. '	dist' → logprob: -13.875198364257812
    8. 'L' → logprob: -14.625198364257812
    9. 'distance' → logprob: -14.875198364257812
    10. '```' → logprob: -14.875198364257812

Token 1433: '250' (ID: 6911)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -9.603335638530552e-05
    2. '250' → logprob: -9.500096321105957
    3. ' dist' → logprob: -11.250096321105957
    4. '(dist' → logprob: -13.500096321105957
    5. 'min' → logprob: -13.750096321105957
    6. '...' → logprob: -13.875096321105957
    7. '	dist' → logprob: -14.000096321105957
    8. '```' → logprob: -14.125096321105957
    9. ']' → logprob: -14.250096321105957
    10. '[' → logprob: -14.625096321105957

Token 1434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.856408536899835e-05
    2. '```' → logprob: -11.375028610229492
    3. 'tokens' → logprob: -12.500028610229492
    4. '>' → logprob: -13.125028610229492
    5. '*' → logprob: -13.500028610229492
    6. '00' → logprob: -13.500028610229492
    7. 'token' → logprob: -13.875028610229492
    8. '**' → logprob: -14.000028610229492
    9. ')' → logprob: -14.125028610229492
    10. ' ' → logprob: -14.250028610229492

Token 1435: ' sous' (ID: 14487)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6352739930152893
    2. '<|end|>' → logprob: -1.2602739334106445
    3. 'values' → logprob: -2.3852739334106445
    4. 'elements' → logprob: -3.3852739334106445
    5. 'tokens' → logprob: -3.5102739334106445
    6. 'dist' → logprob: -4.3852739334106445
    7. ']' → logprob: -5.6352739334106445
    8. ' distances' → logprob: -5.8852739334106445
    9. 'élé' → logprob: -6.1352739334106445
    10. '])' → logprob: -6.5102739334106445

Token 1436: '-dist' (ID: 189184)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6607722640037537
    2. 'list' → logprob: -1.4107723236083984
    3. 'liste' → logprob: -2.0357723236083984
    4. 'lists' → logprob: -2.2857723236083984
    5. 'lst' → logprob: -6.160772323608398
    6. '-l' → logprob: -6.285772323608398
    7. 'l' → logprob: -6.410772323608398
    8. '-list' → logprob: -8.160772323608398
    9. '-dist' → logprob: -8.160772323608398
    10. 'listas' → logprob: -8.285772323608398

Token 1437: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.029890025034546852
    2. '[' → logprob: -4.529890060424805
    3. 'ance' → logprob: -5.279890060424805
    4. 'ces' → logprob: -6.029890060424805
    5. 'aces' → logprob: -6.279890060424805
    6. '[L' → logprob: -6.779890060424805
    7. '```' → logprob: -6.904890060424805
    8. '[i' → logprob: -7.529890060424805
    9. 'list' → logprob: -7.529890060424805
    10. 'es' → logprob: -7.529890060424805

Token 1438: ' associ' (ID: 5516)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18370509147644043
    2. 'for' → logprob: -2.0587050914764404
    3. '
' → logprob: -3.5587050914764404
    4. ' for' → logprob: -5.6837053298950195
    5. ')' → logprob: -5.8087053298950195
    6. ' print' → logprob: -6.1837053298950195
    7. '   ' → logprob: -6.5587053298950195
    8. ')
' → logprob: -7.3087053298950195
    9. '#' → logprob: -8.43370532989502
    10. '<|end|>' → logprob: -8.55870532989502

Token 1439: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0015056940028443933
    2. 'é' → logprob: -6.7515058517456055
    3. 'ée' → logprob: -8.251505851745605
    4. 'és' → logprob: -10.251505851745605
    5. 'à' → logprob: -11.126505851745605
    6. 'nées' → logprob: -11.626505851745605
    7. 'es' → logprob: -12.626505851745605
    8. 'ees' → logprob: -12.876505851745605
    9. '```' → logprob: -13.251505851745605
    10. ' à' → logprob: -13.501505851745605

Token 1440: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2880594730377197
    2. '[i' → logprob: -1.2880594730377197
    3. 'print' → logprob: -2.0380594730377197
    4. '(i' → logprob: -2.1630594730377197
    5. 'for' → logprob: -2.9130594730377197
    6. '
' → logprob: -3.6630594730377197
    7. '[' → logprob: -3.7880594730377197
    8. '   ' → logprob: -4.038059234619141
    9. '(' → logprob: -4.038059234619141
    10. ' for' → logprob: -4.163059234619141

Token 1441: ' ce' (ID: 2357)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020013058558106422
    2. 'l' → logprob: -5.145012855529785
    3. 'cet' → logprob: -5.145012855529785
    4. 'le' → logprob: -5.520012855529785
    5. 'c' → logprob: -6.895012855529785
    6. 'ce' → logprob: -7.145012855529785
    7. 'la' → logprob: -7.770012855529785
    8. '[i' → logprob: -7.770012855529785
    9. 'dist' → logprob: -8.020012855529785
    10. ' i' → logprob: -8.020012855529785

Token 1442: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12730738520622253
    2. 'som' → logprob: -2.127307415008545
    3. 's' → logprob: -8.877306938171387
    4. 'range' → logprob: -9.127306938171387
    5. '(i' → logprob: -10.127306938171387
    6. ' sommet' → logprob: -10.627306938171387
    7. '[i' → logprob: -10.752306938171387
    8. '*i' → logprob: -11.627306938171387
    9. 'interval' → logprob: -11.752306938171387
    10. '```' → logprob: -12.002306938171387

Token 1443: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1444: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6335139274597168
    2. 'print' → logprob: -0.7585139274597168
    3. '
' → logprob: -7.758513927459717
    4. '```' → logprob: -8.633514404296875
    5. ' for' → logprob: -8.883514404296875
    6. ')' → logprob: -10.133514404296875
    7. ' print' → logprob: -10.383514404296875
    8. 's' → logprob: -10.508514404296875
    9. 'range' → logprob: -11.133514404296875
    10. '#' → logprob: -11.383514404296875

Token 1445: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.022832732647657394
    2. '(' → logprob: -4.022832870483398
    3. '('' → logprob: -6.147832870483398
    4. '("' → logprob: -6.397832870483398
    5. '('\' → logprob: -7.772832870483398
    6. '()' → logprob: -8.397832870483398
    7. '(*)' → logprob: -9.272832870483398
    8. '("\' → logprob: -9.522832870483398
    9. '(*(' → logprob: -10.647832870483398
    10. '(min' → logprob: -11.022832870483398

Token 1446: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -3.128163257315464e-07
    2. '(L' → logprob: -16.375
    3. '[L' → logprob: -16.625
    4. ' L' → logprob: -16.875
    5. 'l' → logprob: -24.375
    6. '"L' → logprob: -24.375
    7. '	L' → logprob: -24.75
    8. ''L' → logprob: -24.875
    9. ')L' → logprob: -25.0
    10. '
' → logprob: -25.5

Token 1447: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.492120155598968e-05
    2. '[:-' → logprob: -10.750064849853516
    3. '[:' → logprob: -10.875064849853516
    4. '[' → logprob: -11.125064849853516
    5. ',' → logprob: -12.625064849853516
    6. ' )' → logprob: -13.125064849853516
    7. ')
' → logprob: -13.625064849853516
    8. ',end' → logprob: -13.625064849853516
    9. ')#' → logprob: -14.625064849853516
    10. '[::-' → logprob: -14.750064849853516

Token 1448: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007320931763388216
    2. 'range' → logprob: -7.500731945037842
    3. ':' → logprob: -8.875732421875
    4. '(' → logprob: -11.500732421875
    5. ':)' → logprob: -12.000732421875
    6. ':]' → logprob: -12.000732421875
    7. ':-' → logprob: -12.250732421875
    8. '[' → logprob: -12.375732421875
    9. 's' → logprob: -12.750732421875
    10. '::-' → logprob: -13.500732421875

Token 1449: ':],' (ID: 117284)
  Prédit: ':)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':)' → logprob: -0.30077940225601196
    2. ':' → logprob: -1.4257793426513672
    3. ':]' → logprob: -4.175779342651367
    4. ',)' → logprob: -6.175779342651367
    5. ')' → logprob: -6.675779342651367
    6. ':],' → logprob: -7.550779342651367
    7. '])' → logprob: -9.925779342651367
    8. ':])
' → logprob: -9.925779342651367
    9. ',:)' → logprob: -10.300779342651367
    10. ';)' → logprob: -11.175779342651367

Token 1450: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.004547250457108021
    2. ')' → logprob: -5.504547119140625
    3. ' sep' → logprob: -8.129547119140625
    4. 'end' → logprob: -9.004547119140625
    5. 'flush' → logprob: -10.504547119140625
    6. 'file' → logprob: -10.879547119140625
    7. 'se' → logprob: -13.129547119140625
    8. ' )' → logprob: -13.754547119140625
    9. ')
' → logprob: -15.004547119140625
    10. '0' → logprob: -15.004547119140625

Token 1451: '="\' (ID: 129534)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '='' → logprob: -0.0090049859136343
    2. '=' → logprob: -4.884005069732666
    3. '="' → logprob: -6.634005069732666
    4. ''' → logprob: -9.634004592895508
    5. '='\' → logprob: -11.384004592895508
    6. '"' → logprob: -12.509004592895508
    7. ' ='' → logprob: -14.259004592895508
    8. '=\' → logprob: -14.759004592895508
    9. '=
' → logprob: -15.009004592895508
    10. '=''' → logprob: -15.509004592895508

Token 1452: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28031009435653687
    2. '\n' → logprob: -2.1553101539611816
    3. ' ' → logprob: -2.5303101539611816
    4. ''' → logprob: -4.030310153961182
    5. ' )' → logprob: -4.155310153961182
    6. '"' → logprob: -4.905310153961182
    7. ' \' → logprob: -6.155310153961182
    8. ' 
' → logprob: -6.155310153961182
    9. 'space' → logprob: -7.405310153961182
    10. ')' → logprob: -7.530310153961182

Token 1453: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.963691804325208e-05
    2. ' )' → logprob: -10.500029563903809
    3. ')
' → logprob: -13.250029563903809
    4. '```' → logprob: -16.250030517578125
    5. '")' → logprob: -16.750030517578125
    6. '`)' → logprob: -17.500030517578125
    7. ')`' → logprob: -18.000030517578125
    8. '))' → logprob: -18.125030517578125
    9. '<|end|>' → logprob: -18.125030517578125
    10. ')#' → logprob: -18.125030517578125

Token 1454: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1455: ' Enfin' (ID: 85274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1456: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1457: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01942572183907032
    2. 'for' → logprob: -4.019425868988037
    3. ' for' → logprob: -7.519425868988037
    4. ' print' → logprob: -7.644425868988037
    5. ')' → logprob: -8.519425392150879
    6. '
' → logprob: -10.894425392150879
    7. '<|end|>' → logprob: -10.894425392150879
    8. 'end' → logprob: -12.644425392150879
    9. '#' → logprob: -12.894425392150879
    10. ' 
' → logprob: -13.519425392150879

Token 1458: ' affiche' (ID: 127479)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2940523624420166
    2. 'print' → logprob: -1.4190523624420166
    3. ' for' → logprob: -4.4190521240234375
    4. '#' → logprob: -7.6690521240234375
    5. ')' → logprob: -8.669052124023438
    6. ' print' → logprob: -9.794052124023438
    7. 'pr' → logprob: -10.669052124023438
    8. 'pour' → logprob: -12.044052124023438
    9. 'continue' → logprob: -12.044052124023438
    10. 'join' → logprob: -12.169052124023438

Token 1459: ' les' (ID: 1341)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.9693590998649597
    2. '*' → logprob: -1.0943591594696045
    3. ')' → logprob: -2.0943591594696045
    4. '<|end|>' → logprob: -2.0943591594696045
    5. '#' → logprob: -4.844358921051025
    6. '
' → logprob: -5.094358921051025
    7. '0' → logprob: -5.344358921051025
    8. ' *' → logprob: -6.094358921051025
    9. '(L' → logprob: -6.219358921051025
    10. 'dist' → logprob: -6.344358921051025

Token 1460: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0254920721054077
    2. 'rés' → logprob: -1.9004920721054077
    3. 'temps' → logprob: -2.0254921913146973
    4. 'L' → logprob: -2.4004921913146973
    5. 'd' → logprob: -2.7754921913146973
    6. 'result' → logprob: -2.9004921913146973
    7. 'val' → logprob: -3.1504921913146973
    8. 'l' → logprob: -3.4004921913146973
    9. 'cout' → logprob: -4.025492191314697
    10. 'distance' → logprob: -4.900492191314697

Token 1461: ' finales' (ID: 74387)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1462: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1463: ' tous' (ID: 10688)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5271862149238586
    2. 'les' → logprob: -1.0271861553192139
    3. 'le' → logprob: -3.652186155319214
    4. 'l' → logprob: -3.902186155319214
    5. 'la' → logprob: -6.277186393737793
    6. ' i' → logprob: -6.277186393737793
    7. ' les' → logprob: -7.402186393737793
    8. 'each' → logprob: -8.652186393737793
    9. 's' → logprob: -8.777186393737793
    10. 'ch' → logprob: -9.402186393737793

Token 1464: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.02917499840259552
    2. 'i' → logprob: -4.1541748046875
    3. 'le' → logprob: -5.0291748046875
    4. 's' → logprob: -5.2791748046875
    5. 'som' → logprob: -7.5291748046875
    6. '(i' → logprob: -7.9041748046875
    7. 'la' → logprob: -8.6541748046875
    8. 'l' → logprob: -9.2791748046875
    9. ' les' → logprob: -9.5291748046875
    10. '(s' → logprob: -9.7791748046875

Token 1465: ' somm' (ID: 44830)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.04887223616242409
    2. 's' → logprob: -3.048872232437134
    3. 'aut' → logprob: -8.923871994018555
    4. 'summ' → logprob: -9.423871994018555
    5. 'i' → logprob: -10.798871994018555
    6. 'vertices' → logprob: -10.923871994018555
    7. ' somm' → logprob: -11.048871994018555
    8. 'verts' → logprob: -13.423871994018555
    9. '\' → logprob: -13.423871994018555
    10. '```' → logprob: -13.548871994018555

Token 1466: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0012564226053655148
    2. 'et' → logprob: -6.751256465911865
    3. 'es' → logprob: -10.251255989074707
    4. '#' → logprob: -11.501255989074707
    5. 'etes' → logprob: -11.501255989074707
    6. 'ètes' → logprob: -11.501255989074707
    7. 'êts' → logprob: -12.001255989074707
    8. 'e' → logprob: -12.876255989074707
    9. 'ètres' → logprob: -13.001255989074707
    10. 'ettes' → logprob: -13.376255989074707

Token 1467: ' sauf' (ID: 87919)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3868449032306671
    2. '<|end|>' → logprob: -1.6368448734283447
    3. '[' → logprob: -2.3868448734283447
    4. '(' → logprob: -4.261845111846924
    5. ' )' → logprob: -5.386845111846924
    6. '```' → logprob: -5.511845111846924
    7. '
' → logprob: -6.386845111846924
    8. ' ' → logprob: -6.636845111846924
    9. '[i' → logprob: -6.761845111846924
    10. '()' → logprob: -7.011845111846924

Token 1468: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.056972090154886246
    2. '0' → logprob: -3.056972026824951
    3. ' le' → logprob: -4.931972026824951
    4. 'l' → logprob: -7.181972026824951
    5. '_le' → logprob: -8.18197250366211
    6. 'la' → logprob: -9.68197250366211
    7. '-le' → logprob: -11.18197250366211
    8. ' ' → logprob: -12.43197250366211
    9. '1' → logprob: -12.55697250366211
    10. ' l' → logprob: -12.55697250366211

Token 1469: ' premier' (ID: 15506)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.627176768844947e-05
    2. 'prem' → logprob: -9.250096321105957
    3. ' premier' → logprob: -16.25009536743164
    4. ' ' → logprob: -17.12509536743164
    5. 'zero' → logprob: -18.12509536743164
    6. 'som' → logprob: -18.62509536743164
    7. 'zer' → logprob: -18.87509536743164
    8. '```' → logprob: -19.12509536743164
    9. 'dern' → logprob: -19.25009536743164
    10. 'first' → logprob: -19.37509536743164

Token 1470: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1471: 'index' (ID: 2257)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004340037237852812
    2. 'sep' → logprob: -5.754340171813965
    3. ' )' → logprob: -6.879340171813965
    4. '```' → logprob: -10.379340171813965
    5. '0' → logprob: -11.004340171813965
    6. '<|end|>' → logprob: -11.004340171813965
    7. ' ' → logprob: -11.254340171813965
    8. '")' → logprob: -12.004340171813965
    9. '"' → logprob: -12.129340171813965
    10. ' sep' → logprob: -12.129340171813965

Token 1472: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1365630328655243
    2. '=' → logprob: -2.3865630626678467
    3. '1' → logprob: -4.136562824249268
    4. ' =' → logprob: -4.136562824249268
    5. ' ' → logprob: -6.136562824249268
    6. '```' → logprob: -7.136562824249268
    7. ':' → logprob: -8.261563301086426
    8. ',' → logprob: -8.386563301086426
    9. ')' → logprob: -9.011563301086426
    10. '`' → logprob: -10.636563301086426

Token 1473: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012809454929083586
    2. '1' → logprob: -7.251280784606934
    3. '=' → logprob: -7.626280784606934
    4. '```' → logprob: -9.876280784606934
    5. ':' → logprob: -11.626280784606934
    6. '>' → logprob: -12.001280784606934
    7. ']' → logprob: -12.751280784606934
    8. ')' → logprob: -12.751280784606934
    9. ',' → logprob: -12.876280784606934
    10. ' ' → logprob: -13.126280784606934

Token 1474: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005637573776766658
    2. ',' → logprob: -8.625563621520996
    3. ',)' → logprob: -8.875563621520996
    4. ' )' → logprob: -9.375563621520996
    5. '])' → logprob: -9.750563621520996
    6. ':' → logprob: -10.125563621520996
    7. ':)' → logprob: -10.875563621520996
    8. '})' → logprob: -11.750563621520996
    9. '>)' → logprob: -11.875563621520996
    10. '<|end|>' → logprob: -12.250563621520996

Token 1475: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010917582549154758
    2. 'None' → logprob: -7.376091957092285
    3. '0' → logprob: -8.751091957092285
    4. ')' → logprob: -9.251091957092285
    5. 'len' → logprob: -10.126091957092285
    6. ' n' → logprob: -10.126091957092285
    7. ')n' → logprob: -11.001091957092285
    8. 'end' → logprob: -11.126091957092285
    9. '255' → logprob: -11.376091957092285
    10. 'fin' → logprob: -11.751091957092285

Token 1476: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2573123872280121
    2. ')' → logprob: -1.5073124170303345
    3. '-)' → logprob: -5.257312297821045
    4. ' -' → logprob: -10.257312774658203
    5. '–' → logprob: -10.882312774658203
    6. '−' → logprob: -11.007312774658203
    7. '```' → logprob: -11.132312774658203
    8. ']' → logprob: -11.507312774658203
    9. '<|end|>' → logprob: -11.507312774658203
    10. '`)' → logprob: -12.132312774658203

Token 1477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.894790981779806e-05
    2. '-' → logprob: -10.250048637390137
    3. ')' → logprob: -11.625048637390137
    4. '```' → logprob: -12.875048637390137
    5. ' ' → logprob: -13.500048637390137
    6. 'm' → logprob: -15.875048637390137
    7. 'n' → logprob: -16.500049591064453
    8. '`' → logprob: -16.750049591064453
    9. '``' → logprob: -17.375049591064453
    10. 'e' → logprob: -17.375049591064453

Token 1478: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.166338137816638e-05
    2. ')
' → logprob: -11.000031471252441
    3. '<|end|>' → logprob: -11.625031471252441
    4. '```' → logprob: -12.625031471252441
    5. ' )' → logprob: -14.125031471252441
    6. '
' → logprob: -14.750031471252441
    7. '")' → logprob: -15.125031471252441
    8. '\n' → logprob: -15.250031471252441
    9. ')#' → logprob: -15.375031471252441
    10. '}' → logprob: -16.125032424926758

Token 1479: ' chaque' (ID: 21194)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05700182169675827
    2. 'end' → logprob: -3.057001829147339
    3. ' )' → logprob: -5.30700159072876
    4. ' end' → logprob: -6.93200159072876
    5. 'newline' → logprob: -7.05700159072876
    6. 'sep' → logprob: -7.80700159072876
    7. '```' → logprob: -8.182002067565918
    8. 'flush' → logprob: -8.432002067565918
    9. ')
' → logprob: -8.932002067565918
    10. '<|end|>' → logprob: -8.932002067565918

Token 1480: ' distance' (ID: 9324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.014120728708803654
    2. '
' → logprob: -5.264120578765869
    3. '"\' → logprob: -5.514120578765869
    4. '\' → logprob: -5.639120578765869
    5. ')' → logprob: -8.014121055603027
    6. 'n' → logprob: -8.639121055603027
    7. '' → logprob: -9.014121055603027
    8. 'print' → logprob: -9.139121055603027
    9. '<|end|>' → logprob: -9.389121055603027
    10. ' \' → logprob: -9.514121055603027

Token 1481: ' sur' (ID: 1512)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14216452836990356
    2. '<|end|>' → logprob: -2.642164468765259
    3. '\n' → logprob: -3.642164468765259
    4. 'print' → logprob: -4.017164707183838
    5. ',' → logprob: -5.017164707183838
    6. '=' → logprob: -5.642164707183838
    7. ')
' → logprob: -6.142164707183838
    8. '
' → logprob: -6.517164707183838
    9. '),' → logprob: -7.892164707183838
    10. ',
' → logprob: -8.01716423034668

Token 1482: ' une' (ID: 2463)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.10238751769065857
    2. '\n' → logprob: -2.3523874282836914
    3. '
' → logprob: -7.102387428283691
    4. '\' → logprob: -7.352387428283691
    5. ''\' → logprob: -7.352387428283691
    6. 'print' → logprob: -10.477387428283691
    7. '\
' → logprob: -10.477387428283691
    8. '"""
' → logprob: -12.227387428283691
    9. ' "\' → logprob: -12.477387428283691
    10. '("\' → logprob: -13.477387428283691

Token 1483: ' ligne' (ID: 19583)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.00989349652081728
    2. 'nou' → logprob: -5.384893417358398
    3. 'newline' → logprob: -6.634893417358398
    4. '\' → logprob: -6.634893417358398
    5. '"\' → logprob: -7.009893417358398
    6. 'new' → logprob: -7.134893417358398
    7. 'n' → logprob: -8.259893417358398
    8. '
' → logprob: -8.384893417358398
    9. 'ligne' → logprob: -9.009893417358398
    10. '\
' → logprob: -9.384893417358398

Token 1484: ' sépar' (ID: 97160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1485: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.010689926333725452
    2. 'é' → logprob: -5.385689735412598
    3. 'e' → logprob: -5.510689735412598
    4. '\n' → logprob: -7.510689735412598
    5. 'ate' → logprob: -7.885689735412598
    6. 'ées' → logprob: -8.010689735412598
    7. '```' → logprob: -9.260689735412598
    8. '\' → logprob: -9.385689735412598
    9. 'ated' → logprob: -9.510689735412598
    10. '\u' → logprob: -9.635689735412598

Token 1486: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4153136909008026
    2. '<|end|>' → logprob: -1.290313720703125
    3. '(' → logprob: -3.165313720703125
    4. '[' → logprob: -4.665313720703125
    5. '
' → logprob: -5.165313720703125
    6. ' ' → logprob: -6.165313720703125
    7. '<|end|>' → logprob: -6.665313720703125
    8. '#' → logprob: -7.040313720703125
    9. '```' → logprob: -7.165313720703125
    10. '()' → logprob: -8.165313720703125

Token 1487: 'dé' (ID: 98340)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. ' )' → logprob: -12.000020027160645
    3. '")' → logprob: -12.125020027160645
    4. ')
' → logprob: -12.625020027160645
    5. '```' → logprob: -13.375020027160645
    6. '<|end|>' → logprob: -13.375020027160645
    7. ')#' → logprob: -14.000020027160645
    8. '')' → logprob: -15.375020027160645
    9. '\n' → logprob: -15.500020027160645
    10. '))' → logprob: -16.875019073486328

Token 1488: 'pli' (ID: 5521)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2781931459903717
    2. 'lim' → logprob: -2.403193235397339
    3. 'r' → logprob: -2.903193235397339
    4. 'limit' → logprob: -3.028193235397339
    5. 'st' → logprob: -4.27819299697876
    6. 'fin' → logprob: -4.52819299697876
    7. 'l' → logprob: -5.27819299697876
    8. 'lai' → logprob: -5.52819299697876
    9. 'la' → logprob: -5.90319299697876
    10. ')' → logprob: -6.52819299697876

Token 1489: 'age' (ID: 477)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.899711549282074
    2. 'et' → logprob: -1.5247116088867188
    3. 'eté' → logprob: -2.1497116088867188
    4. 'ée' → logprob: -2.7747116088867188
    5. 'e' → logprob: -2.8997116088867188
    6. 'ét' → logprob: -3.7747116088867188
    7. 'été' → logprob: -4.274711608886719
    8. 'ate' → logprob: -4.524711608886719
    9. 'at' → logprob: -4.774711608886719
    10. 'am' → logprob: -4.899711608886719

Token 1490: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033975292462855577
    2. ',' → logprob: -5.878397464752197
    3. ' )' → logprob: -8.753397941589355
    4. '"' → logprob: -9.628397941589355
    5. ',"' → logprob: -9.628397941589355
    6. '<|end|>' → logprob: -9.628397941589355
    7. ',)' → logprob: -10.003397941589355
    8. '")' → logprob: -10.128397941589355
    9. '*' → logprob: -10.628397941589355
    10. ''' → logprob: -10.878397941589355

Token 1491: ' la' (ID: 557)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0015554478159174323
    2. ' L' → logprob: -6.501555442810059
    3. ')' → logprob: -10.376555442810059
    4. ''L' → logprob: -11.876555442810059
    5. '"L' → logprob: -12.501555442810059
    6. ')L' → logprob: -12.626555442810059
    7. '(L' → logprob: -12.876555442810059
    8. 'l' → logprob: -13.251555442810059
    9. '[L' → logprob: -13.876555442810059
    10. ' ' → logprob: -14.501555442810059

Token 1492: ' liste' (ID: 31719)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.013982260599732399
    2. ')' → logprob: -4.38898229598999
    3. ' L' → logprob: -7.13898229598999
    4. ',' → logprob: -8.138981819152832
    5. ' )' → logprob: -8.888981819152832
    6. ')L' → logprob: -9.263981819152832
    7. '"' → logprob: -10.388981819152832
    8. ''L' → logprob: -10.513981819152832
    9. ''' → logprob: -10.638981819152832
    10. '"L' → logprob: -11.013981819152832

Token 1493: ' avec' (ID: 3937)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6166903151315637e-05
    2. ',' → logprob: -12.000016212463379
    3. ' )' → logprob: -12.625016212463379
    4. '")' → logprob: -13.500016212463379
    5. '))' → logprob: -13.625016212463379
    6. ')#' → logprob: -14.250016212463379
    7. '<|end|>' → logprob: -14.500016212463379
    8. '})' → logprob: -14.750016212463379
    9. ')
' → logprob: -15.000016212463379
    10. ',)' → logprob: -15.375016212463379

Token 1494: ' *)' (ID: 6084)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41525694727897644
    2. '"' → logprob: -1.2902569770812988
    3. ''' → logprob: -3.290256977081299
    4. 'sep' → logprob: -4.790256977081299
    5. '*' → logprob: -5.040256977081299
    6. 'print' → logprob: -5.290256977081299
    7. '),' → logprob: -6.165256977081299
    8. ',' → logprob: -6.290256977081299
    9. ' )' → logprob: -6.540256977081299
    10. ' "' → logprob: -7.915256977081299


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1492
Tokens correctement prédits (1ère position, stricte): 382
Tokens correctement prédits (1ère position, avec adaptation): 409
Tokens correctement prédits (top 10): 861
Précision stricte (1ère position): 25.60%
Précision adaptée (1ère position): 27.41%
Précision (top 10): 57.71%
================================================================================
