================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = map(int, input().split())
print(max(a + b, a - b, a * b))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2113417536020279
    2. '+' → logprob: -1.7113417387008667
    3. ',' → logprob: -5.336341857910156
    4. ' =' → logprob: -5.586341857910156
    5. ' ' → logprob: -8.086341857910156
    6. ' +' → logprob: -8.586341857910156
    7. '*' → logprob: -8.711341857910156
    8. '+=' → logprob: -8.961341857910156
    9. '.' → logprob: -9.086341857910156
    10. '[' → logprob: -9.586341857910156

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13601942360401154
    2. '0' → logprob: -2.761019468307495
    3. '1' → logprob: -2.886019468307495
    4. '10' → logprob: -4.886019229888916
    5. '5' → logprob: -8.761019706726074
    6. '42' → logprob: -9.511019706726074
    7. 'input' → logprob: -10.011019706726074
    8. '[' → logprob: -10.011019706726074
    9. 'a' → logprob: -10.386019706726074
    10. ' [' → logprob: -10.386019706726074

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19927136600017548
    2. '(lambda' → logprob: -2.3242714405059814
    3. '```' → logprob: -2.6992714405059814
    4. '<|end|>' → logprob: -4.699271202087402
    5. ')' → logprob: -7.074271202087402
    6. '(int' → logprob: -7.324271202087402
    7. '[' → logprob: -7.574271202087402
    8. '`' → logprob: -7.949271202087402
    9. '[int' → logprob: -8.199271202087402
    10. '<|end|>' → logprob: -8.324271202087402

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5411503314971924
    2. '(input' → logprob: -1.0411503314971924
    3. '(' → logprob: -2.9161503314971924
    4. 'input' → logprob: -5.666150093078613
    5. '```' → logprob: -6.291150093078613
    6. '(user' → logprob: -6.916150093078613
    7. '`)' → logprob: -7.666150093078613
    8. ',' → logprob: -7.791150093078613
    9. '(data' → logprob: -7.916150093078613
    10. '))' → logprob: -8.291150093078613

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03978810831904411
    2. ' input' → logprob: -3.289788007736206
    3. '(input' → logprob: -6.414788246154785
    4. ')' → logprob: -9.289788246154785
    5. 'user' → logprob: -12.289788246154785
    6. '=input' → logprob: -13.039788246154785
    7. ',input' → logprob: -13.414788246154785
    8. '<input' → logprob: -13.789788246154785
    9. ' )' → logprob: -13.789788246154785
    10. '```' → logprob: -13.914788246154785

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9006648659706116
    2. '(' → logprob: -1.6506648063659668
    3. ')' → logprob: -1.6506648063659668
    4. '()' → logprob: -1.7756648063659668
    5. '('' → logprob: -4.025664806365967
    6. '(()' → logprob: -5.525664806365967
    7. '(""))' → logprob: -5.900664806365967
    8. '`()' → logprob: -5.900664806365967
    9. '```' → logprob: -6.525664806365967
    10. '()))' → logprob: -6.900664806365967

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00021295747137628496
    2. 'strip' → logprob: -8.500212669372559
    3. 'rstrip' → logprob: -12.000212669372559
    4. ' split' → logprob: -13.000212669372559
    5. 'read' → logprob: -14.875212669372559
    6. ')' → logprob: -15.000212669372559
    7. '(split' → logprob: -15.250212669372559
    8. 'spl' → logprob: -15.875212669372559
    9. 'startswith' → logprob: -17.375213623046875
    10. '_split' → logprob: -18.375213623046875

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11073170602321625
    2. '())' → logprob: -2.610731601715088
    3. '))' → logprob: -3.485731601715088
    4. '()' → logprob: -7.985731601715088
    5. '()))' → logprob: -8.360732078552246
    6. '`)' → logprob: -9.985732078552246
    7. '(' → logprob: -10.610732078552246
    8. ')`' → logprob: -10.735732078552246
    9. ')))' → logprob: -11.985732078552246
    10. ' )' → logprob: -11.985732078552246

Token 11: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01239827461540699
    2. '*' → logprob: -5.1373982429504395
    3. '#' → logprob: -5.5123982429504395
    4. '+
' → logprob: -7.2623982429504395
    5. ',' → logprob: -8.137398719787598
    6. '[' → logprob: -8.262398719787598
    7. '=' → logprob: -8.762398719787598
    8. 'a' → logprob: -9.012398719787598
    9. '-' → logprob: -9.137398719787598
    10. '**' → logprob: -9.637398719787598

Token 12: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007517361082136631
    2. '('' → logprob: -7.625751972198486
    3. '("("' → logprob: -8.750751495361328
    4. '(a' → logprob: -9.375751495361328
    5. '()' → logprob: -12.000751495361328
    6. '((' → logprob: -12.250751495361328
    7. '("""' → logprob: -13.500751495361328
    8. '(`' → logprob: -13.500751495361328
    9. '("")' → logprob: -13.875751495361328
    10. '(
' → logprob: -14.625751495361328

Token 13: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18195194005966187
    2. '(a' → logprob: -1.8069519996643066
    3. '()' → logprob: -6.181951999664307
    4. ')' → logprob: -9.931951522827148
    5. '(max' → logprob: -11.056951522827148
    6. '(b' → logprob: -11.306951522827148
    7. '((' → logprob: -11.306951522827148
    8. '(
' → logprob: -11.681951522827148
    9. '())' → logprob: -11.931951522827148
    10. 'a' → logprob: -11.931951522827148

Token 14: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027654136065393686
    2. ',b' → logprob: -6.12776517868042
    3. ' ,' → logprob: -7.50276517868042
    4. ')' → logprob: -11.002765655517578
    5. ',a' → logprob: -12.002765655517578
    6. 'b' → logprob: -13.877765655517578
    7. ',
' → logprob: -13.877765655517578
    8. ' ' → logprob: -14.127765655517578
    9. '))' → logprob: -14.377765655517578
    10. ',

' → logprob: -14.877765655517578

Token 15: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4740968942642212
    2. ' b' → logprob: -0.9740968942642212
    3. ' ' → logprob: -11.09909725189209
    4. '1' → logprob: -13.22409725189209
    5. ',' → logprob: -14.34909725189209
    6. ')b' → logprob: -14.84909725189209
    7. '(b' → logprob: -15.09909725189209
    8. '+b' → logprob: -15.84909725189209
    9. '	b' → logprob: -15.97409725189209
    10. ',b' → logprob: -15.97409725189209

Token 16: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3806796967983246
    2. ')' → logprob: -1.630679726600647
    3. ',' → logprob: -2.1306796073913574
    4. ')))' → logprob: -6.630679607391357
    5. ' ,' → logprob: -7.755679607391357
    6. ' ))' → logprob: -9.130680084228516
    7. ' ' → logprob: -10.005680084228516
    8. ',a' → logprob: -10.255680084228516
    9. ' )' → logprob: -10.630680084228516
    10. '```' → logprob: -11.255680084228516

Token 17: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18087629973888397
    2. ' a' → logprob: -1.8058762550354004
    3. '0' → logprob: -7.8058762550354
    4. 'b' → logprob: -8.680876731872559
    5. ' b' → logprob: -9.055876731872559
    6. ' ' → logprob: -9.055876731872559
    7. 'abs' → logprob: -9.180876731872559
    8. ' abs' → logprob: -9.430876731872559
    9. ' max' → logprob: -10.055876731872559
    10. '(a' → logprob: -10.430876731872559

Token 18: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06773999333381653
    2. '-' → logprob: -3.192739963531494
    3. ',' → logprob: -4.192739963531494
    4. '-b' → logprob: -5.317739963531494
    5. ' ,' → logprob: -6.692739963531494
    6. ' ' → logprob: -6.942739963531494
    7. ',b' → logprob: -7.192739963531494
    8. ' +' → logprob: -7.817739963531494
    9. ' b' → logprob: -7.942739963531494
    10. ' *' → logprob: -8.692740440368652

Token 19: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.474082350730896
    2. 'b' → logprob: -0.974082350730896
    3. ' ' → logprob: -12.474081993103027
    4. ')b' → logprob: -14.099081993103027
    5. '	b' → logprob: -15.099081993103027
    6. ' ' → logprob: -15.974081993103027
    7. ' б' → logprob: -15.974081993103027
    8. '<|end|>' → logprob: -16.974082946777344
    9. 'a' → logprob: -17.099082946777344
    10. ')' → logprob: -17.224082946777344

Token 20: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12698186933994293
    2. ')' → logprob: -2.1269819736480713
    3. ')))' → logprob: -10.626981735229492
    4. '),' → logprob: -11.751981735229492
    5. ',' → logprob: -12.126981735229492
    6. ' ))' → logprob: -12.501981735229492
    7. '))
' → logprob: -12.876981735229492
    8. '```' → logprob: -13.001981735229492
    9. ' ' → logprob: -13.376981735229492
    10. '**' → logprob: -13.876981735229492

Token 21: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.31639406085014343
    2. 'a' → logprob: -1.3163940906524658
    3. '0' → logprob: -6.191393852233887
    4. ' b' → logprob: -7.441393852233887
    5. 'b' → logprob: -8.316393852233887
    6. ' ' → logprob: -8.941393852233887
    7. ')' → logprob: -9.691393852233887
    8. '(a' → logprob: -10.566393852233887
    9. ')a' → logprob: -12.191393852233887
    10. ' ' → logprob: -12.316393852233887

Token 22: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2048727571964264
    2. ' *' → logprob: -1.829872727394104
    3. '*b' → logprob: -3.7048728466033936
    4. ' ' → logprob: -9.079873085021973
    5. ')' → logprob: -10.454873085021973
    6. ' -' → logprob: -10.454873085021973
    7. '-' → logprob: -11.204873085021973
    8. '*c' → logprob: -12.829873085021973
    9. '<|end|>' → logprob: -13.079873085021973
    10. '**' → logprob: -13.204873085021973

Token 23: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25193002820014954
    2. ' b' → logprob: -1.5019299983978271
    3. ' ' → logprob: -14.376930236816406
    4. ')b' → logprob: -15.251930236816406
    5. '	b' → logprob: -17.126930236816406
    6. ')' → logprob: -17.876930236816406
    7. '<|end|>' → logprob: -18.001930236816406
    8. ' б' → logprob: -18.251930236816406
    9. '(b' → logprob: -18.876930236816406
    10. '  ' → logprob: -19.251930236816406

Token 24: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018167270347476006
    2. ')' → logprob: -4.018167495727539
    3. ')))' → logprob: -11.018167495727539
    4. '),' → logprob: -15.518167495727539
    5. '))
' → logprob: -15.643167495727539
    6. '()))' → logprob: -15.893167495727539
    7. ' ))' → logprob: -15.893167495727539
    8. ')}' → logprob: -16.76816749572754
    9. '```' → logprob: -17.26816749572754
    10. ',' → logprob: -17.64316749572754


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 22
Tokens correctement prédits (1ère position, stricte): 5
Tokens correctement prédits (1ère position, avec adaptation): 5
Tokens correctement prédits (top 10): 16
Précision stricte (1ère position): 22.73%
Précision adaptée (1ère position): 22.73%
Précision (top 10): 72.73%
================================================================================
