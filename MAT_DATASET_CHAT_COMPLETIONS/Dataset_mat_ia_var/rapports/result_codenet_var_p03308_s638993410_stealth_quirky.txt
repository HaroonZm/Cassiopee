================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def realizeTheInput(event_handler): return list(map(int,event_handler().split()))
Number = ((lambda: int(__import__('builtins').input()))())
AA = realizeTheInput(__import__('builtins').input)
potentiality = lambda arr: (max(arr),min(arr))
BigSmall = potentiality(AA)
resulter = (lambda mm: mm[0] - mm[1])(BigSmall)
[(print(resulter)) for _ in range(1)]  # Forcing print to be inside a list comprehension for no reason
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' realize' (ID: 17161)
  → Token d'amorce (pas de prédiction)

Token 2: 'The' (ID: 976)
  → Token d'amorce (pas de prédiction)

Token 3: 'Input' (ID: 3275)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5490476489067078
    2. 'R' → logprob: -2.0490477085113525
    3. 'T' → logprob: -3.0490477085113525
    4. 'A' → logprob: -3.1740477085113525
    5. 'D' → logprob: -3.1740477085113525
    6. 'F' → logprob: -3.6740477085113525
    7. 'Space' → logprob: -3.7990477085113525
    8. 'r' → logprob: -3.9240477085113525
    9. 'Function' → logprob: -4.174047470092773
    10. 'I' → logprob: -4.424047470092773

Token 4: '(event' (ID: 11536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -7.255023956531659e-05
    2. '_' → logprob: -10.250072479248047
    3. ':' → logprob: -11.500072479248047
    4. ' (' → logprob: -12.125072479248047
    5. '(:' → logprob: -12.625072479248047
    6. '```' → logprob: -12.875072479248047
    7. '(
' → logprob: -13.000072479248047
    8. '():' → logprob: -13.125072479248047
    9. 's' → logprob: -13.750072479248047
    10. '\(' → logprob: -13.750072479248047

Token 5: '_handler' (ID: 23758)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004344548564404249
    2. ')' → logprob: -5.754344463348389
    3. ':' → logprob: -6.879344463348389
    4. ',' → logprob: -9.129344940185547
    5. '.' → logprob: -11.504344940185547
    6. ' ):' → logprob: -12.004344940185547
    7. '):
' → logprob: -12.879344940185547
    8. 's' → logprob: -13.379344940185547
    9. '_' → logprob: -13.879344940185547
    10. '=' → logprob: -14.004344940185547

Token 6: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04427832365036011
    2. ')' → logprob: -3.419278383255005
    3. ',' → logprob: -4.794278144836426
    4. ':' → logprob: -6.294278144836426
    5. '.' → logprob: -8.044278144836426
    6. '(' → logprob: -9.794278144836426
    7. 's' → logprob: -11.044278144836426
    8. '_' → logprob: -11.919278144836426
    9. '=' → logprob: -11.919278144836426
    10. ' ):' → logprob: -11.919278144836426

Token 7: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.608074426651001
    2. '(' → logprob: -1.608074426651001
    3. '\' → logprob: -2.108074426651001
    4. ':' → logprob: -3.483074426651001
    5. '```' → logprob: -3.483074426651001
    6. '\n' → logprob: -3.733074426651001
    7. '    
' → logprob: -4.358074188232422
    8. ' ' → logprob: -5.483074188232422
    9. '
' → logprob: -5.483074188232422
    10. '(n' → logprob: -5.858074188232422

Token 8: ' list' (ID: 1562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028940975666046143
    2. ' None' → logprob: -4.4039411544799805
    3. '<|end|>' → logprob: -5.1539411544799805
    4. ' (' → logprob: -5.9039411544799805
    5. ' True' → logprob: -5.9039411544799805
    6. '(' → logprob: -6.7789411544799805
    7. '_' → logprob: -7.2789411544799805
    8. ''' → logprob: -7.2789411544799805
    9. 'None' → logprob: -7.6539411544799805
    10. '  ' → logprob: -7.9039411544799805

Token 9: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017771640792489052
    2. '.' → logprob: -4.2677717208862305
    3. '[' → logprob: -6.2677717208862305
    4. '<|end|>' → logprob: -6.8927717208862305
    5. '```' → logprob: -9.01777172088623
    6. ')' → logprob: -9.26777172088623
    7. '(
' → logprob: -9.26777172088623
    8. '[(' → logprob: -10.01777172088623
    9. '<|end|>' → logprob: -10.51777172088623
    10. '\(' → logprob: -10.64277172088623

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05548209324479103
    2. '(lambda' → logprob: -2.9304821491241455
    3. ' (' → logprob: -7.680481910705566
    4. '(
' → logprob: -9.430481910705566
    5. ')' → logprob: -10.805481910705566
    6. '(str' → logprob: -12.055481910705566
    7. '(None' → logprob: -12.805481910705566
    8. '(operator' → logprob: -12.805481910705566
    9. '<|end|>' → logprob: -12.805481910705566
    10. '(

' → logprob: -13.180481910705566

Token 11: ',event' (ID: 192706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4376698136329651
    2. '(event' → logprob: -1.0626697540283203
    3. '('' → logprob: -5.81266975402832
    4. ')' → logprob: -6.06266975402832
    5. '))' → logprob: -7.31266975402832
    6. '(user' → logprob: -7.68766975402832
    7. ',' → logprob: -7.81266975402832
    8. '(
' → logprob: -8.18766975402832
    9. '(input' → logprob: -8.31266975402832
    10. '<|end|>' → logprob: -8.43766975402832

Token 12: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.0036023214925080538
    2. '_' → logprob: -5.753602504730225
    3. '_hand' → logprob: -8.378602027893066
    4. ' _' → logprob: -10.378602027893066
    5. '_event' → logprob: -10.378602027893066
    6. 'handler' → logprob: -10.503602027893066
    7. '_handle' → logprob: -10.628602027893066
    8. 'event' → logprob: -10.878602027893066
    9. '_handlers' → logprob: -11.128602027893066
    10. 's' → logprob: -11.253602027893066

Token 13: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.654634952545166
    2. '(event' → logprob: -1.404634952545166
    3. ')' → logprob: -2.154634952545166
    4. '))' → logprob: -2.654634952545166
    5. '.get' → logprob: -4.654634952545166
    6. ')))' → logprob: -4.654634952545166
    7. '.' → logprob: -5.404634952545166
    8. '(input' → logprob: -5.654634952545166
    9. '('' → logprob: -5.779634952545166
    10. '(
' → logprob: -6.029634952545166

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.02441580966114998
    2. 'strip' → logprob: -3.8994157314300537
    3. 'read' → logprob: -5.649415969848633
    4. ')' → logprob: -8.524415969848633
    5. ' split' → logprob: -9.774415969848633
    6. 'replace' → logprob: -10.399415969848633
    7. 'text' → logprob: -10.649415969848633
    8. 'rstrip' → logprob: -10.774415969848633
    9. 'decode' → logprob: -13.149415969848633
    10. 'spl' → logprob: -13.524415969848633

Token 15: '()))
' (ID: 24521)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3155052065849304
    2. '(' → logprob: -1.3155052661895752
    3. '("("' → logprob: -6.565505027770996
    4. ')' → logprob: -8.315505027770996
    5. '("' → logprob: -8.815505027770996
    6. '(
' → logprob: -9.565505027770996
    7. ')))' → logprob: -9.690505027770996
    8. '(','' → logprob: -9.815505027770996
    9. ' (' → logprob: -10.315505027770996
    10. '())))' → logprob: -10.315505027770996

Token 16: 'Number' (ID: 3695)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3454544246196747
    2. ')' → logprob: -1.470454454421997
    3. '(
' → logprob: -4.220454216003418
    4. '()' → logprob: -4.345454216003418
    5. '
' → logprob: -4.845454216003418
    6. '\n' → logprob: -4.970454216003418
    7. ':' → logprob: -5.220454216003418
    8. '<|end|>' → logprob: -5.470454216003418
    9. '```' → logprob: -5.970454216003418
    10. 'newline' → logprob: -6.470454216003418

Token 17: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016101972432807088
    2. ')' → logprob: -7.001610279083252
    3. '('' → logprob: -8.501609802246094
    4. '[' → logprob: -8.876609802246094
    5. 's' → logprob: -9.626609802246094
    6. ' (' → logprob: -9.626609802246094
    7. ' ' → logprob: -10.126609802246094
    8. ''' → logprob: -10.376609802246094
    9. '.' → logprob: -10.876609802246094
    10. '("("' → logprob: -10.876609802246094

Token 18: ' ((' (ID: 3536)
  Prédit: ' realize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' realize' → logprob: -0.02381417155265808
    2. 'real' → logprob: -4.7738142013549805
    3. ' ' → logprob: -5.1488142013549805
    4. ' int' → logprob: -5.7738142013549805
    5. ' input' → logprob: -6.3988142013549805
    6. ' realiz' → logprob: -6.3988142013549805
    7. ' realized' → logprob: -6.7738142013549805
    8. 'int' → logprob: -7.5238142013549805
    9. ' realization' → logprob: -7.6488142013549805
    10. ' real' → logprob: -8.02381420135498

Token 19: 'lambda' (ID: 35280)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6500742435455322
    2. 'real' → logprob: -1.9000742435455322
    3. ' input' → logprob: -2.4000742435455322
    4. 'int' → logprob: -2.6500742435455322
    5. 'lambda' → logprob: -2.7750742435455322
    6. '0' → logprob: -3.7750742435455322
    7. '1' → logprob: -3.7750742435455322
    8. ' lambda' → logprob: -4.775074005126953
    9. ' int' → logprob: -4.900074005126953
    10. ' ' → logprob: -5.025074005126953

Token 20: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.396760493516922
    2. ' s' → logprob: -2.0217604637145996
    3. ' n' → logprob: -2.6467604637145996
    4. 's' → logprob: -3.6467604637145996
    5. ' input' → logprob: -3.6467604637145996
    6. 'x' → logprob: -4.0217604637146
    7. ' event' → logprob: -4.2717604637146
    8. ' lambda' → logprob: -5.0217604637146
    9. ':' → logprob: -5.5217604637146
    10. 'event' → logprob: -5.8967604637146

Token 21: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.22673366963863373
    2. 'input' → logprob: -1.601733684539795
    3. ' int' → logprob: -7.226733684539795
    4. 'int' → logprob: -7.726733684539795
    5. '(input' → logprob: -10.851733207702637
    6. ' ' → logprob: -10.976733207702637
    7. ' str' → logprob: -11.226733207702637
    8. ''' → logprob: -11.226733207702637
    9. 'real' → logprob: -11.351733207702637
    10. '0' → logprob: -11.601733207702637

Token 22: '(__' (ID: 11782)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4300762414932251
    2. '(' → logprob: -1.055076241493225
    3. '(
' → logprob: -7.9300761222839355
    4. '('' → logprob: -8.180076599121094
    5. '(event' → logprob: -8.305076599121094
    6. 'input' → logprob: -8.930076599121094
    7. ' (' → logprob: -9.680076599121094
    8. ' ' → logprob: -9.930076599121094
    9. ')' → logprob: -10.055076599121094
    10. '()' → logprob: -10.180076599121094

Token 23: 'import' (ID: 561)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003745094407349825
    2. ' input' → logprob: -5.878745079040527
    3. '(input' → logprob: -7.003745079040527
    4. 'import' → logprob: -10.753745079040527
    5. 'built' → logprob: -12.878745079040527
    6. '=input' → logprob: -13.378745079040527
    7. 'stdin' → logprob: -13.503745079040527
    8. 'user' → logprob: -13.628745079040527
    9. 'real' → logprob: -14.128745079040527
    10. '	input' → logprob: -14.878745079040527

Token 24: '__('' (ID: 54460)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.013273409567773342
    2. '("' → logprob: -4.763273239135742
    3. '(' → logprob: -5.763273239135742
    4. '(math' → logprob: -8.388273239135742
    5. '('__' → logprob: -8.388273239135742
    6. '__('' → logprob: -8.763273239135742
    7. '("("' → logprob: -9.138273239135742
    8. '(random' → logprob: -9.263273239135742
    9. 'random' → logprob: -9.388273239135742
    10. '(input' → logprob: -9.388273239135742

Token 25: 'built' (ID: 81936)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6942809224128723
    2. 'built' → logprob: -0.6942809224128723
    3. ' built' → logprob: -7.694281101226807
    4. 'math' → logprob: -7.944281101226807
    5. 'fun' → logprob: -8.569280624389648
    6. 'os' → logprob: -10.444280624389648
    7. '__' → logprob: -10.694280624389648
    8. 'code' → logprob: -11.194280624389648
    9. 'random' → logprob: -11.194280624389648
    10. ' sys' → logprob: -11.319280624389648

Token 26: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -2.236549335066229e-05
    2. 'in' → logprob: -11.125021934509277
    3. '```' → logprob: -12.250021934509277
    4. '``' → logprob: -14.375021934509277
    5. 'input' → logprob: -14.875021934509277
    6. 'int' → logprob: -15.000021934509277
    7. 'i' → logprob: -15.000021934509277
    8. '__' → logprob: -15.250021934509277
    9. '-ins' → logprob: -16.250022888183594
    10. '...' → logprob: -16.375022888183594

Token 27: '').' (ID: 3426)
  Prédit: '.input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.8991880416870117
    2. '').' → logprob: -1.3991880416870117
    3. ').__' → logprob: -1.6491880416870117
    4. ').' → logprob: -2.8991880416870117
    5. '.__' → logprob: -3.2741880416870117
    6. '.' → logprob: -3.6491880416870117
    7. ' ).' → logprob: -3.8991880416870117
    8. ''.' → logprob: -5.649188041687012
    9. '__.__' → logprob: -6.024188041687012
    10. ' .' → logprob: -6.649188041687012

Token 28: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00012451570364646614
    2. ' input' → logprob: -9.00012493133545
    3. 'eval' → logprob: -15.37512493133545
    4. '(input' → logprob: -15.37512493133545
    5. 'print' → logprob: -15.62512493133545
    6. 'inp' → logprob: -15.87512493133545
    7. 'open' → logprob: -16.250123977661133
    8. 'exec' → logprob: -16.625123977661133
    9. '__' → logprob: -16.750123977661133
    10. '_input' → logprob: -17.625123977661133

Token 29: '()))' (ID: 16829)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -1.0745036602020264
    2. '())))' → logprob: -1.1995036602020264
    3. '()' → logprob: -1.5745036602020264
    4. '()))' → logprob: -1.9495036602020264
    5. '('' → logprob: -6.1995038986206055
    6. '()),' → logprob: -6.9495038986206055
    7. '(' → logprob: -7.1995038986206055
    8. ' ' → logprob: -7.1995038986206055
    9. ')' → logprob: -7.3245038986206055
    10. '(),' → logprob: -7.4495038986206055

Token 30: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -1.2933531999588013
    2. '()))' → logprob: -1.2933531999588013
    3. ')' → logprob: -1.6683531999588013
    4. '))' → logprob: -1.7933531999588013
    5. '()' → logprob: -2.4183530807495117
    6. ' ' → logprob: -6.168353080749512
    7. '(' → logprob: -6.668353080749512
    8. ')))' → logprob: -7.168353080749512
    9. '   ' → logprob: -8.043353080749512
    10. ' )' → logprob: -8.168353080749512

Token 31: 'AA' (ID: 8857)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5206956267356873
    2. ')' → logprob: -2.020695686340332
    3. '.' → logprob: -2.395695686340332
    4. '*' → logprob: -2.645695686340332
    5. '<|end|>' → logprob: -3.395695686340332
    6. '\' → logprob: -4.270695686340332
    7. '+
' → logprob: -4.520695686340332
    8. '
' → logprob: -4.645695686340332
    9. ' ' → logprob: -4.895695686340332
    10. '\n' → logprob: -5.270695686340332

Token 32: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5565755367279053
    2. '[' → logprob: -0.9315755367279053
    3. '+' → logprob: -4.056575775146484
    4. ' =' → logprob: -6.056575775146484
    5. '=' → logprob: -6.181575775146484
    6. '[]' → logprob: -6.306575775146484
    7. '_' → logprob: -6.681575775146484
    8. ' +' → logprob: -6.681575775146484
    9. ' .' → logprob: -7.056575775146484
    10. '.__' → logprob: -7.431575775146484

Token 33: ' realize' (ID: 17161)
  Prédit: ' realize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' realize' → logprob: -0.6562090516090393
    2. 'real' → logprob: -1.4062089920043945
    3. ' []' → logprob: -1.9062089920043945
    4. '[]' → logprob: -3.5312089920043945
    5. ' [' → logprob: -4.4062089920043945
    6. ' list' → logprob: -4.4062089920043945
    7. '[' → logprob: -4.7812089920043945
    8. 'list' → logprob: -4.9062089920043945
    9. '[int' → logprob: -5.1562089920043945
    10. ' realized' → logprob: -5.6562089920043945

Token 34: 'The' (ID: 976)
  Prédit: 'The'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' → logprob: -8.895480277715251e-06
    2. 'T' → logprob: -12.250008583068848
    3. '(The' → logprob: -13.125008583068848
    4. ' The' → logprob: -13.875008583068848
    5. '_the' → logprob: -15.250008583068848
    6. '>The' → logprob: -15.750008583068848
    7. 'the' → logprob: -15.750008583068848
    8. '	The' → logprob: -15.875008583068848
    9. 'Ther' → logprob: -16.125009536743164
    10. '(' → logprob: -16.750009536743164

Token 35: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0009362359414808452
    2. 'put' → logprob: -7.125936031341553
    3. 'input' → logprob: -9.625936508178711
    4. 'The' → logprob: -10.000936508178711
    5. '_input' → logprob: -11.750936508178711
    6. 'n' → logprob: -11.875936508178711
    7. 'I' → logprob: -13.875936508178711
    8. ' Input' → logprob: -13.875936508178711
    9. '(Input' → logprob: -14.375936508178711
    10. 'the' → logprob: -14.500936508178711

Token 36: '(__' (ID: 11782)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3062513470649719
    2. '(event' → logprob: -1.9312512874603271
    3. '<|end|>' → logprob: -2.681251287460327
    4. '(lambda' → logprob: -4.556251525878906
    5. '(user' → logprob: -4.681251525878906
    6. '()' → logprob: -5.056251525878906
    7. ')' → logprob: -5.056251525878906
    8. '(input' → logprob: -5.806251525878906
    9. '(Event' → logprob: -5.806251525878906
    10. '((' → logprob: -6.556251525878906

Token 37: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.02334168180823326
    2. 'built' → logprob: -3.773341655731201
    3. 'name' → logprob: -9.52334213256836
    4. 'build' → logprob: -11.39834213256836
    5. 'builtin' → logprob: -12.52334213256836
    6. '_' → logprob: -13.02334213256836
    7. 'imports' → logprob: -13.14834213256836
    8. ''import' → logprob: -13.52334213256836
    9. 'im' → logprob: -14.39834213256836
    10. '```' → logprob: -14.77334213256836

Token 38: '__('' (ID: 54460)
  Prédit: '__(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__('' → logprob: -0.000516217143740505
    2. '__' → logprob: -8.000515937805176
    3. '__("' → logprob: -9.000515937805176
    4. '__(' → logprob: -10.500515937805176
    5. '('' → logprob: -11.125515937805176
    6. '__(
' → logprob: -11.500515937805176
    7. '_' → logprob: -12.375515937805176
    8. '('__' → logprob: -15.500515937805176
    9. '__(/*!' → logprob: -15.625515937805176
    10. '___' → logprob: -16.000516891479492

Token 39: 'built' (ID: 81936)
  Prédit: 'built'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'built' → logprob: -4.723352049040841e-06
    2. ''b' → logprob: -12.875004768371582
    3. ' built' → logprob: -14.250004768371582
    4. ''' → logprob: -14.500004768371582
    5. 'b' → logprob: -14.500004768371582
    6. 'sys' → logprob: -15.250004768371582
    7. 'builtin' → logprob: -16.250003814697266
    8. '-built' → logprob: -16.250003814697266
    9. '__' → logprob: -17.500003814697266
    10. 'build' → logprob: -18.000003814697266

Token 40: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -1.3404301404953003
    2. 'ils' → logprob: -1.3404301404953003
    3. 'uilt' → logprob: -1.9654301404953003
    4. 'uil' → logprob: -2.46543025970459
    5. 'its' → logprob: -2.59043025970459
    6. 's' → logprob: -2.71543025970459
    7. 'uls' → logprob: -3.46543025970459
    8. 'ults' → logprob: -3.46543025970459
    9. 'als' → logprob: -3.84043025970459
    10. 'uts' → logprob: -4.84043025970459

Token 41: '').' (ID: 3426)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.45418840646743774
    2. '.input' → logprob: -1.454188346862793
    3. '').' → logprob: -2.579188346862793
    4. '.import' → logprob: -3.704188346862793
    5. '.' → logprob: -4.079188346862793
    6. ' ).' → logprob: -4.829188346862793
    7. ' .' → logprob: -5.829188346862793
    8. ''.' → logprob: -7.079188346862793
    9. ')' → logprob: -8.079188346862793
    10. '.function' → logprob: -8.204188346862793

Token 42: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -5.676981345459353e-06
    2. ' input' → logprob: -12.125005722045898
    3. 'print' → logprob: -16.5000057220459
    4. '.input' → logprob: -17.2500057220459
    5. '<input' → logprob: -17.3750057220459
    6. '(input' → logprob: -17.8750057220459
    7. 'inp' → logprob: -17.8750057220459
    8. '_input' → logprob: -18.5000057220459
    9. '[input' → logprob: -18.8750057220459
    10. 'open' → logprob: -19.0000057220459

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25358933210372925
    2. '))' → logprob: -1.628589391708374
    3. '())' → logprob: -3.628589391708374
    4. '()))' → logprob: -7.253589153289795
    5. ')))' → logprob: -8.128589630126953
    6. ' )' → logprob: -9.128589630126953
    7. '()' → logprob: -9.878589630126953
    8. ' ())' → logprob: -10.378589630126953
    9. ' ))' → logprob: -10.878589630126953
    10. '(' → logprob: -12.503589630126953

Token 44: 'potential' (ID: 135363)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.038921426981687546
    2. '(' → logprob: -4.163921356201172
    3. ')' → logprob: -4.163921356201172
    4. '[' → logprob: -6.163921356201172
    5. '.' → logprob: -6.538921356201172
    6. '())' → logprob: -7.038921356201172
    7. '().' → logprob: -7.038921356201172
    8. '()
' → logprob: -7.288921356201172
    9. '()[' → logprob: -7.413921356201172
    10. '()

' → logprob: -9.413921356201172

Token 45: 'ity' (ID: 536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39429613947868347
    2. '_' → logprob: -1.8942961692810059
    3. '_s' → logprob: -2.644296169281006
    4. '_numbers' → logprob: -2.894296169281006
    5. 'Numbers' → logprob: -4.644296169281006
    6. 'S' → logprob: -5.269296169281006
    7. '_positions' → logprob: -5.519296169281006
    8. '(' → logprob: -5.769296169281006
    9. '_values' → logprob: -5.894296169281006
    10. 'Positions' → logprob: -6.144296169281006

Token 46: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49111297726631165
    2. '.' → logprob: -1.2411129474639893
    3. '[' → logprob: -3.6161129474639893
    4. '=' → logprob: -3.6161129474639893
    5. ')' → logprob: -4.241113185882568
    6. '('' → logprob: -5.116113185882568
    7. '_' → logprob: -5.116113185882568
    8. 's' → logprob: -5.491113185882568
    9. ' =' → logprob: -5.616113185882568
    10. '[:]' → logprob: -6.116113185882568

Token 47: ' lambda' (ID: 27871)
  Prédit: ' realize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' realize' → logprob: -0.9719611406326294
    2. ' []' → logprob: -1.3469611406326294
    3. '[' → logprob: -1.9719611406326294
    4. ' [' → logprob: -2.47196102142334
    5. ' list' → logprob: -3.22196102142334
    6. '[]' → logprob: -3.72196102142334
    7. 'real' → logprob: -3.97196102142334
    8. 'list' → logprob: -4.34696102142334
    9. '(lambda' → logprob: -4.84696102142334
    10. '(' → logprob: -4.97196102142334

Token 48: ' arr' (ID: 1724)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.12418606877326965
    2. ' ' → logprob: -3.2491860389709473
    3. ' s' → logprob: -3.4991860389709473
    4. ' n' → logprob: -4.499186038970947
    5. ' (' → logprob: -5.374186038970947
    6. 's' → logprob: -5.499186038970947
    7. '  ' → logprob: -5.499186038970947
    8. ' lambda' → logprob: -5.499186038970947
    9. ' :' → logprob: -5.624186038970947
    10. 'x' → logprob: -6.124186038970947

Token 49: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07634846866130829
    2. ' :' → logprob: -2.8263485431671143
    3. '[:' → logprob: -4.951348304748535
    4. '[:]' → logprob: -5.701348304748535
    5. ':list' → logprob: -6.701348304748535
    6. '[' → logprob: -7.201348304748535
    7. ',' → logprob: -7.701348304748535
    8. ':[' → logprob: -7.826348304748535
    9. '_:' → logprob: -7.951348304748535
    10. ',:' → logprob: -9.076348304748535

Token 50: ' (' (ID: 350)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.8487837910652161
    2. ' max' → logprob: -1.0987837314605713
    3. ' sum' → logprob: -1.7237837314605713
    4. ' list' → logprob: -3.9737837314605713
    5. ' [' → logprob: -4.97378396987915
    6. ' len' → logprob: -5.22378396987915
    7. 'all' → logprob: -5.59878396987915
    8. 'sum' → logprob: -5.59878396987915
    9. '[' → logprob: -5.72378396987915
    10. ' arr' → logprob: -5.72378396987915

Token 51: 'max' (ID: 3228)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.0239650011062622
    2. ' sum' → logprob: -1.0239650011062622
    3. 'sum' → logprob: -2.5239648818969727
    4. ' arr' → logprob: -2.8989648818969727
    5. 'arr' → logprob: -2.8989648818969727
    6. 'max' → logprob: -3.1489648818969727
    7. ' len' → logprob: -4.273964881896973
    8. ' min' → logprob: -4.898964881896973
    9. 'len' → logprob: -4.898964881896973
    10. ' [' → logprob: -5.773964881896973

Token 52: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0006151011912152171
    2. '(' → logprob: -7.750615119934082
    3. 'arr' → logprob: -8.750615119934082
    4. ' (' → logprob: -11.875615119934082
    5. ' arr' → logprob: -12.000615119934082
    6. '[arr' → logprob: -12.250615119934082
    7. ')' → logprob: -13.250615119934082
    8. '	arr' → logprob: -13.875615119934082
    9. '_arr' → logprob: -14.125615119934082
    10. ',' → logprob: -14.375615119934082

Token 53: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02713690884411335
    2. ')-' → logprob: -4.02713680267334
    3. '(arr' → logprob: -5.15213680267334
    4. ' -' → logprob: -7.15213680267334
    5. ' )' → logprob: -7.15213680267334
    6. '-' → logprob: -7.65213680267334
    7. '())' → logprob: -9.02713680267334
    8. '")' → logprob: -9.15213680267334
    9. '-)' → logprob: -9.15213680267334
    10. '(' → logprob: -9.27713680267334

Token 54: 'min' (ID: 1493)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.12773489952087402
    2. 'min' → logprob: -2.252734899520874
    3. ' sum' → logprob: -4.377735137939453
    4. 'sum' → logprob: -6.377735137939453
    5. ' len' → logprob: -8.127735137939453
    6. 'len' → logprob: -9.002735137939453
    7. ' max' → logprob: -9.502735137939453
    8. 'max' → logprob: -11.127735137939453
    9. '[min' → logprob: -11.252735137939453
    10. ')' → logprob: -11.752735137939453

Token 55: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.00013131031300872564
    2. '(' → logprob: -9.625131607055664
    3. ' (' → logprob: -10.375131607055664
    4. '[arr' → logprob: -11.375131607055664
    5. 'arr' → logprob: -11.500131607055664
    6. ' arr' → logprob: -12.125131607055664
    7. '<|end|>' → logprob: -12.375131607055664
    8. '<arr' → logprob: -13.750131607055664
    9. '<|end|>' → logprob: -14.625131607055664
    10. ')' → logprob: -14.750131607055664

Token 56: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.015269322320818901
    2. ')' → logprob: -4.2652692794799805
    3. ')))' → logprob: -7.0152692794799805
    4. '))
' → logprob: -9.01526927947998
    5. '),' → logprob: -9.76526927947998
    6. ' ))' → logprob: -12.39026927947998
    7. ',' → logprob: -12.76526927947998
    8. ' ' → logprob: -13.14026927947998
    9. '()))' → logprob: -13.26526927947998
    10. '[' → logprob: -13.26526927947998

Token 57: 'Big' (ID: 19130)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02911374345421791
    2. '(Number' → logprob: -4.02911376953125
    3. '<|end|>' → logprob: -5.65411376953125
    4. ')' → logprob: -6.15411376953125
    5. '(p' → logprob: -6.77911376953125
    6. '(
' → logprob: -7.02911376953125
    7. '(arr' → logprob: -7.27911376953125
    8. '([' → logprob: -7.77911376953125
    9. '(A' → logprob: -8.02911376953125
    10. ',' → logprob: -8.02911376953125

Token 58: 'Small' (ID: 26886)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7206348180770874
    2. 'gest' → logprob: -1.7206348180770874
    3. '=' → logprob: -2.095634937286377
    4. '(' → logprob: -2.720634937286377
    5. 'Potential' → logprob: -3.345634937286377
    6. '_' → logprob: -3.470634937286377
    7. '[' → logprob: -4.595634937286377
    8. ' ' → logprob: -5.095634937286377
    9. '=lambda' → logprob: -5.095634937286377
    10. 'potential' → logprob: -5.095634937286377

Token 59: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005387310869991779
    2. '=' → logprob: -6.255387306213379
    3. '(p' → logprob: -6.630387306213379
    4. ' =' → logprob: -7.255387306213379
    5. '(arr' → logprob: -8.255387306213379
    6. ')' → logprob: -8.505387306213379
    7. '(
' → logprob: -8.505387306213379
    8. '('' → logprob: -8.630387306213379
    9. '((' → logprob: -9.255387306213379
    10. '<|end|>' → logprob: -9.255387306213379

Token 60: ' potential' (ID: 6451)
  Prédit: ' potential'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' potential' → logprob: -0.6819176077842712
    2. ' (' → logprob: -1.556917667388916
    3. ' realize' → logprob: -2.556917667388916
    4. '(' → logprob: -2.681917667388916
    5. '(p' → logprob: -2.806917667388916
    6. '(lambda' → logprob: -4.056917667388916
    7. '(real' → logprob: -4.056917667388916
    8. ' realiz' → logprob: -4.181917667388916
    9. 'potential' → logprob: -4.431917667388916
    10. ' realized' → logprob: -5.431917667388916

Token 61: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.00011808603449026123
    2. 'ality' → logprob: -9.875118255615234
    3. '(' → logprob: -11.500118255615234
    4. 'it' → logprob: -11.625118255615234
    5. ' ity' → logprob: -11.625118255615234
    6. 'arity' → logprob: -12.375118255615234
    7. '_' → logprob: -12.375118255615234
    8. 'potential' → logprob: -12.375118255615234
    9. 'itty' → logprob: -13.125118255615234
    10. '```' → logprob: -13.125118255615234

Token 62: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2890011668205261
    2. '(Number' → logprob: -2.164001226425171
    3. '<|end|>' → logprob: -2.414001226425171
    4. ')' → logprob: -4.039000988006592
    5. '(arr' → logprob: -4.414000988006592
    6. '('' → logprob: -5.664000988006592
    7. '(
' → logprob: -6.289000988006592
    8. '((' → logprob: -6.789000988006592
    9. '<|end|>' → logprob: -6.914000988006592
    10. '(A' → logprob: -7.164000988006592

Token 63: 'AA' (ID: 8857)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.006101801060140133
    2. '(Number' → logprob: -5.631101608276367
    3. ' Number' → logprob: -6.631101608276367
    4. 'real' → logprob: -6.881101608276367
    5. '[' → logprob: -10.006101608276367
    6. '(' → logprob: -10.381101608276367
    7. 'Real' → logprob: -11.256101608276367
    8. 'AA' → logprob: -11.381101608276367
    9. '_Number' → logprob: -11.631101608276367
    10. ' realize' → logprob: -12.006101608276367

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002466975012794137
    2. '))' → logprob: -6.377467155456543
    3. '(' → logprob: -7.752467155456543
    4. '())' → logprob: -9.002467155456543
    5. '(Number' → logprob: -9.252467155456543
    6. ')))' → logprob: -10.252467155456543
    7. ' )' → logprob: -10.252467155456543
    8. ')
' → logprob: -11.877467155456543
    9. ')#' → logprob: -12.752467155456543
    10. ')`' → logprob: -13.002467155456543

Token 65: 'res' (ID: 430)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6953262686729431
    2. ')' → logprob: -0.9453262686729431
    3. '(' → logprob: -2.445326328277588
    4. '()' → logprob: -3.945326328277588
    5. '(A' → logprob: -6.445326328277588
    6. '([' → logprob: -6.445326328277588
    7. '())
' → logprob: -7.695326328277588
    8. '())[' → logprob: -8.19532585144043
    9. ' ())' → logprob: -8.57032585144043
    10. '()[' → logprob: -8.57032585144043

Token 66: 'ulter' (ID: 50549)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.007886262610554695
    2. 'ults' → logprob: -5.0078864097595215
    3. 'ultat' → logprob: -7.7578864097595215
    4. 'ize' → logprob: -8.757885932922363
    5. 't' → logprob: -8.882885932922363
    6. 'ource' → logprob: -9.382885932922363
    7. 'ul' → logprob: -9.757885932922363
    8. 'u' → logprob: -10.132885932922363
    9. 'ulta' → logprob: -10.132885932922363
    10. '```' → logprob: -10.382885932922363

Token 67: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16879720985889435
    2. ' =' → logprob: -2.043797254562378
    3. '(' → logprob: -4.293797016143799
    4. 's' → logprob: -5.043797016143799
    5. 't' → logprob: -6.293797016143799
    6. '_' → logprob: -6.418797016143799
    7. ' ' → logprob: -7.418797016143799
    8. ')' → logprob: -7.918797016143799
    9. '   ' → logprob: -9.168797492980957
    10. '=(' → logprob: -9.293797492980957

Token 68: ' (' (ID: 350)
  Prédit: '(Big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Big' → logprob: -0.7458860278129578
    2. '(' → logprob: -1.3708860874176025
    3. ' Big' → logprob: -2.7458860874176025
    4. 'Big' → logprob: -2.7458860874176025
    5. '(list' → logprob: -3.1208860874176025
    6. ' (' → logprob: -3.4958860874176025
    7. '[' → logprob: -3.6208860874176025
    8. '(lambda' → logprob: -3.9958860874176025
    9. '(max' → logprob: -4.745885848999023
    10. ' list' → logprob: -5.745885848999023

Token 69: 'lambda' (ID: 35280)
  Prédit: 'Big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Big' → logprob: -0.059499140828847885
    2. 'max' → logprob: -3.3094990253448486
    3. 'lambda' → logprob: -4.809499263763428
    4. ' Big' → logprob: -4.934499263763428
    5. 'abs' → logprob: -7.059499263763428
    6. ' max' → logprob: -7.059499263763428
    7. 'range' → logprob: -7.559499263763428
    8. 'min' → logprob: -7.684499263763428
    9. ')' → logprob: -7.809499263763428
    10. '   ' → logprob: -8.05949878692627

Token 70: ' mm' (ID: 8957)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.46038731932640076
    2. ' Big' → logprob: -1.3353873491287231
    3. 'Big' → logprob: -4.210387229919434
    4. ':' → logprob: -4.335387229919434
    5. ' a' → logprob: -4.460387229919434
    6. 'x' → logprob: -4.460387229919434
    7. ' n' → logprob: -4.585387229919434
    8. ' arr' → logprob: -4.710387229919434
    9. ' lambda' → logprob: -5.085387229919434
    10. ' :' → logprob: -5.585387229919434

Token 71: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06748341023921967
    2. ' :' → logprob: -2.942483425140381
    3. ',' → logprob: -4.817483425140381
    4. ':[' → logprob: -6.192483425140381
    5. ':list' → logprob: -7.692483425140381
    6. ':max' → logprob: -8.067482948303223
    7. '_:' → logprob: -8.442482948303223
    8. 'arr' → logprob: -8.567482948303223
    9. ':(' → logprob: -8.817482948303223
    10. ' ,' → logprob: -9.192482948303223

Token 72: ' mm' (ID: 8957)
  Prédit: ' mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mm' → logprob: -1.6625701189041138
    2. ' max' → logprob: -1.7875701189041138
    3. '(max' → logprob: -2.287569999694824
    4. ' (' → logprob: -2.537569999694824
    5. 'max' → logprob: -2.537569999694824
    6. 'mm' → logprob: -2.662569999694824
    7. ' [' → logprob: -2.787569999694824
    8. '[' → logprob: -2.912569999694824
    9. '(mm' → logprob: -2.912569999694824
    10. 'Big' → logprob: -3.537569999694824

Token 73: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4763304591178894
    2. ':' → logprob: -1.1013305187225342
    3. ' :' → logprob: -4.101330280303955
    4. ',' → logprob: -4.726330280303955
    5. '[::-' → logprob: -5.601330280303955
    6. 'max' → logprob: -5.976330280303955
    7. ':[' → logprob: -6.101330280303955
    8. '+' → logprob: -6.601330280303955
    9. ':max' → logprob: -6.601330280303955
    10. '[max' → logprob: -6.851330280303955

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08116721361875534
    2. '1' → logprob: -2.706167221069336
    3. ' ' → logprob: -4.706167221069336
    4. '-' → logprob: -7.081167221069336
    5. '])' → logprob: -8.581167221069336
    6. '[' → logprob: -8.956167221069336
    7. ':' → logprob: -9.393667221069336
    8. ']' → logprob: -9.456167221069336
    9. ' -' → logprob: -9.643667221069336
    10. ')' → logprob: -9.643667221069336

Token 75: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.21128597855567932
    2. '-' → logprob: -1.836285948753357
    3. '-mm' → logprob: -3.9612860679626465
    4. '-m' → logprob: -4.9612860679626465
    5. ',' → logprob: -6.2112860679626465
    6. '-MM' → logprob: -6.9612860679626465
    7. '+' → logprob: -7.0862860679626465
    8. ' +' → logprob: -7.9612860679626465
    9. ' ' → logprob: -8.336285591125488
    10. ' ,' → logprob: -8.586285591125488

Token 76: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2500470280647278
    2. '-' → logprob: -1.625046968460083
    3. '-mm' → logprob: -4.125047206878662
    4. '-m' → logprob: -5.250047206878662
    5. ',' → logprob: -6.750047206878662
    6. '+' → logprob: -7.500047206878662
    7. '-MM' → logprob: -7.875047206878662
    8. ' +' → logprob: -8.125046730041504
    9. ' ,' → logprob: -8.625046730041504
    10. ' ' → logprob: -9.375046730041504

Token 77: ' mm' (ID: 8957)
  Prédit: ' mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mm' → logprob: -0.016043050214648247
    2. 'mm' → logprob: -4.141043186187744
    3. ' ' → logprob: -12.641042709350586
    4. '_mm' → logprob: -13.016042709350586
    5. '(mm' → logprob: -13.766042709350586
    6. ' ' → logprob: -14.391042709350586
    7. ':mm' → logprob: -14.891042709350586
    8. 'mmm' → logprob: -15.766042709350586
    9. ' мм' → logprob: -15.766042709350586
    10. ' ms' → logprob: -15.891042709350586

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003663212701212615
    2. '1' → logprob: -8.1253662109375
    3. '_' → logprob: -10.2503662109375
    4. ' ' → logprob: -10.8753662109375
    5. ' [' → logprob: -11.5003662109375
    6. '_[' → logprob: -13.8753662109375
    7. '```' → logprob: -13.8753662109375
    8. '   ' → logprob: -14.2503662109375
    9. ' _' → logprob: -14.5003662109375
    10. 's' → logprob: -14.8753662109375

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029470553272403777
    2. ' ' → logprob: -8.25029468536377
    3. '-' → logprob: -11.68779468536377
    4. '0' → logprob: -12.25029468536377
    5. ')' → logprob: -12.50029468536377
    6. '])' → logprob: -12.75029468536377
    7. ']' → logprob: -13.00029468536377
    8. '[' → logprob: -13.56279468536377
    9. '   ' → logprob: -13.81279468536377
    10. '```' → logprob: -14.00029468536377

Token 80: '])(' (ID: 164063)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002831464516930282
    2. '))' → logprob: -8.875283241271973
    3. ')(' → logprob: -10.125283241271973
    4. ' )' → logprob: -10.250283241271973
    5. ')return' → logprob: -11.500283241271973
    6. ')))' → logprob: -11.500283241271973
    7. '[' → logprob: -11.625283241271973
    8. ')[' → logprob: -11.750283241271973
    9. '+' → logprob: -12.125283241271973
    10. '<|end|>' → logprob: -13.000283241271973

Token 81: 'Big' (ID: 19130)
  Prédit: 'Big'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Big' → logprob: -0.01817498914897442
    2. ' Big' → logprob: -4.01817512512207
    3. '(Big' → logprob: -11.14317512512207
    4. '<Big' → logprob: -11.89317512512207
    5. '	Big' → logprob: -13.26817512512207
    6. '.Big' → logprob: -13.89317512512207
    7. ')' → logprob: -14.26817512512207
    8. 'Number' → logprob: -15.89317512512207
    9. ' ' → logprob: -16.51817512512207
    10. '[' → logprob: -17.01817512512207

Token 82: 'Small' (ID: 26886)
  Prédit: 'Small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Small' → logprob: -3.106736039626412e-05
    2. 'S' → logprob: -10.500031471252441
    3. 'Sm' → logprob: -13.125031471252441
    4. ' Small' → logprob: -14.875031471252441
    5. '_small' → logprob: -15.125031471252441
    6. '.Small' → logprob: -15.125031471252441
    7. 'small' → logprob: -15.375031471252441
    8. '```' → logprob: -16.750030517578125
    9. ')' → logprob: -17.250030517578125
    10. 'Sam' → logprob: -17.250030517578125

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. '))' → logprob: -12.87500286102295
    3. ' )' → logprob: -15.50000286102295
    4. ')
' → logprob: -17.000003814697266
    5. ')))' → logprob: -17.500003814697266
    6. ')#' → logprob: -18.125003814697266
    7. ')`' → logprob: -18.375003814697266
    8. ')}' → logprob: -19.375003814697266
    9. '())' → logprob: -19.500003814697266
    10. '),' → logprob: -19.625003814697266

Token 84: '[(' (ID: 20542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.315054327249527
    2. '<|end|>' → logprob: -1.3150542974472046
    3. '```' → logprob: -7.690054416656494
    4. '#' → logprob: -7.815054416656494
    5. '<|end|>' → logprob: -8.190053939819336
    6. '(' → logprob: -8.690053939819336
    7. '
' → logprob: -8.815053939819336
    8. '()' → logprob: -9.190053939819336
    9. ' ' → logprob: -10.315053939819336
    10. '\n' → logprob: -10.440053939819336

Token 85: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7620278000831604
    2. 'res' → logprob: -1.0120277404785156
    3. 'lambda' → logprob: -2.1370277404785156
    4. 'i' → logprob: -4.137027740478516
    5. 'x' → logprob: -5.137027740478516
    6. 'int' → logprob: -5.387027740478516
    7. 'Number' → logprob: -5.512027740478516
    8. 'str' → logprob: -5.512027740478516
    9. 'Big' → logprob: -5.887027740478516
    10. '__' → logprob: -6.637027740478516

Token 86: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.04343187436461449
    2. '(i' → logprob: -3.9184317588806152
    3. ')(' → logprob: -4.793431758880615
    4. '(' → logprob: -4.918431758880615
    5. ')' → logprob: -6.418431758880615
    6. '(f' → logprob: -6.543431758880615
    7. '('' → logprob: -6.918431758880615
    8. '(x' → logprob: -7.168431758880615
    9. 'res' → logprob: -7.418431758880615
    10. ' (' → logprob: -7.793431758880615

Token 87: 'ulter' (ID: 50549)
  Prédit: 'ulter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulter' → logprob: -0.002269562566652894
    2. 'ult' → logprob: -6.252269744873047
    3. 'ul' → logprob: -8.127269744873047
    4. 'ulte' → logprob: -12.002269744873047
    5. ' ul' → logprob: -12.002269744873047
    6. 'uler' → logprob: -12.252269744873047
    7. 'ut' → logprob: -12.377269744873047
    8. 'u' → logprob: -12.627269744873047
    9. ')' → logprob: -12.877269744873047
    10. '```' → logprob: -13.252269744873047

Token 88: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.027721352875232697
    2. ')' → logprob: -3.652721405029297
    3. ')]' → logprob: -7.152721405029297
    4. ',' → logprob: -7.902721405029297
    5. '()))' → logprob: -9.027721405029297
    6. '),' → logprob: -9.652721405029297
    7. ')))' → logprob: -11.277721405029297
    8. ' ))' → logprob: -11.277721405029297
    9. ')])' → logprob: -11.527721405029297
    10. ' ' → logprob: -11.652721405029297

Token 89: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08918481320142746
    2. ')]' → logprob: -2.5891847610473633
    3. ')' → logprob: -4.839184761047363
    4. '])' → logprob: -6.464184761047363
    5. '[' → logprob: -7.714184761047363
    6. '()]' → logprob: -8.964184761047363
    7. '])]' → logprob: -9.964184761047363
    8. ')])' → logprob: -10.214184761047363
    9. ' ]' → logprob: -10.339184761047363
    10. ',' → logprob: -10.339184761047363

Token 90: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.056197624653577805
    2. ' _' → logprob: -3.4311976432800293
    3. ' range' → logprob: -3.9311976432800293
    4. ' i' → logprob: -6.431197643280029
    5. 'range' → logprob: -7.431197643280029
    6. 'i' → logprob: -8.181197166442871
    7. '__' → logprob: -9.931197166442871
    8. ' ' → logprob: -9.931197166442871
    9. ' Number' → logprob: -10.431197166442871
    10. '_i' → logprob: -10.681197166442871

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023335738107562065
    2. 'in' → logprob: -3.7733356952667236
    3. ' ' → logprob: -10.023335456848145
    4. 'range' → logprob: -10.648335456848145
    5. ' range' → logprob: -11.523335456848145
    6. '<|end|>' → logprob: -12.148335456848145
    7. '	in' → logprob: -13.023335456848145
    8. ' _' → logprob: -14.023335456848145
    9. '  ' → logprob: -14.148335456848145
    10. '_in' → logprob: -14.523335456848145

Token 92: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.575943112373352
    2. ' range' → logprob: -0.825943112373352
    3. 'Range' → logprob: -13.950942993164062
    4. '(range' → logprob: -14.200942993164062
    5. 'rang' → logprob: -14.200942993164062
    6. '	range' → logprob: -14.950942993164062
    7. '[' → logprob: -15.325942993164062
    8. 'ran' → logprob: -15.325942993164062
    9. ' ' → logprob: -16.075942993164062
    10. 'Number' → logprob: -16.200942993164062

Token 93: '(' (ID: 7)
  Prédit: '(Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Number' → logprob: -0.06738210469484329
    2. 'Number' → logprob: -2.8173820972442627
    3. ' Number' → logprob: -5.317382335662842
    4. '(' → logprob: -8.192381858825684
    5. ' (' → logprob: -8.567381858825684
    6. '(int' → logprob: -10.692381858825684
    7. '(N' → logprob: -13.692381858825684
    8. '(number' → logprob: -14.067381858825684
    9. '_Number' → logprob: -14.317381858825684
    10. '((' → logprob: -14.817381858825684

Token 94: '1' (ID: 16)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.00011474833445390686
    2. ' Number' → logprob: -9.125114440917969
    3. '(Number' → logprob: -12.125114440917969
    4. 'int' → logprob: -15.875114440917969
    5. 'Range' → logprob: -16.75011444091797
    6. '0' → logprob: -17.00011444091797
    7. '_Number' → logprob: -17.12511444091797
    8. 'number' → logprob: -17.25011444091797
    9. 'User' → logprob: -18.37511444091797
    10. '(' → logprob: -18.50011444091797

Token 95: ')]' (ID: 15710)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018955962732434273
    2. ' ,' → logprob: -4.268956184387207
    3. ',int' → logprob: -5.643956184387207
    4. ' Number' → logprob: -7.518956184387207
    5. ')' → logprob: -8.393956184387207
    6. 'Number' → logprob: -8.768956184387207
    7. '(Number' → logprob: -8.893956184387207
    8. ' ' → logprob: -10.643956184387207
    9. ',(' → logprob: -10.768956184387207
    10. ' )' → logprob: -11.018956184387207

Token 96: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11976908892393112
    2. '<|end|>' → logprob: -2.2447690963745117
    3. '#' → logprob: -5.744769096374512
    4. '
' → logprob: -6.619769096374512
    5. '```' → logprob: -7.369769096374512
    6. '(' → logprob: -7.994769096374512
    7. '\n' → logprob: -8.619769096374512
    8. '\' → logprob: -8.619769096374512
    9. ' ' → logprob: -8.744769096374512
    10. '<|end|>' → logprob: -8.869769096374512

Token 97: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5788941979408264
    2. '<|end|>' → logprob: -0.8288941979408264
    3. '#' → logprob: -7.453894138336182
    4. '(' → logprob: -7.703894138336182
    5. '```' → logprob: -7.703894138336182
    6. '<|end|>' → logprob: -7.828894138336182
    7. '()' → logprob: -7.953894138336182
    8. ']' → logprob: -8.70389461517334
    9. '
' → logprob: -8.95389461517334
    10. ' ' → logprob: -9.20389461517334

Token 98: ' For' (ID: 2214)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: 'cing' (ID: 6776)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4883696436882019
    2. ' _' → logprob: -0.9883696436882019
    3. ' range' → logprob: -4.863369464874268
    4. 'range' → logprob: -6.113369464874268
    5. ' ' → logprob: -6.863369464874268
    6. '_range' → logprob: -6.988369464874268
    7. '___' → logprob: -8.488369941711426
    8. '_input' → logprob: -8.613369941711426
    9. '_testing' → logprob: -8.613369941711426
    10. '__' → logprob: -9.113369941711426

Token 100: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018699994310736656
    2. '<|end|>' → logprob: -4.018700122833252
    3. '
' → logprob: -8.893699645996094
    4. '#' → logprob: -9.268699645996094
    5. '(' → logprob: -9.393699645996094
    6. '<|end|>' → logprob: -9.768699645996094
    7. '```' → logprob: -10.018699645996094
    8. ' ' → logprob: -10.518699645996094
    9. ' )' → logprob: -10.643699645996094
    10. '()' → logprob: -10.768699645996094

Token 102: ' be' (ID: 413)
  Prédit: ' run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.8525052666664124
    2. ' execute' → logprob: -1.9775052070617676
    3. 'execute' → logprob: -2.4775052070617676
    4. 'run' → logprob: -2.7275052070617676
    5. ' output' → logprob: -2.8525052070617676
    6. 'print' → logprob: -2.9775052070617676
    7. '<|end|>' → logprob: -3.2275052070617676
    8. ' print' → logprob: -3.7275052070617676
    9. 'occur' → logprob: -4.102505207061768
    10. 'output' → logprob: -4.352505207061768

Token 103: ' inside' (ID: 6772)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' a' (ID: 261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7421395778656006
    2. '(' → logprob: -0.9921395778656006
    3. '[]' → logprob: -2.6171395778656006
    4. '<|end|>' → logprob: -3.4921395778656006
    5. '([]' → logprob: -4.24213981628418
    6. '[' → logprob: -4.49213981628418
    7. ')' → logprob: -4.99213981628418
    8. 'range' → logprob: -5.36713981628418
    9. '())' → logprob: -5.61713981628418
    10. '```' → logprob: -6.24213981628418

Token 105: ' list' (ID: 1562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.302221417427063
    2. 'loop' → logprob: -2.5522212982177734
    3. ' loop' → logprob: -2.9272212982177734
    4. '[' → logprob: -3.6772212982177734
    5. ' for' → logprob: -3.6772212982177734
    6. 'lambda' → logprob: -3.8022212982177734
    7. 'range' → logprob: -4.052221298217773
    8. '[]' → logprob: -4.302221298217773
    9. 'list' → logprob: -4.427221298217773
    10. 'def' → logprob: -4.927221298217773

Token 106: ' comprehension' (ID: 91423)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046677034348249435
    2. '<|end|>' → logprob: -3.1716771125793457
    3. '[' → logprob: -6.421677112579346
    4. '(' → logprob: -6.671677112579346
    5. '#' → logprob: -8.421676635742188
    6. '<|end|>' → logprob: -8.671676635742188
    7. '()' → logprob: -8.921676635742188
    8. ']' → logprob: -9.796676635742188
    9. '```' → logprob: -9.921676635742188
    10. '
' → logprob: -10.296676635742188

Token 107: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12074165046215057
    2. '<|end|>' → logprob: -2.245741605758667
    3. '(' → logprob: -5.495741844177246
    4. '[' → logprob: -5.870741844177246
    5. '```' → logprob: -8.245741844177246
    6. ']' → logprob: -8.495741844177246
    7. '<|end|>' → logprob: -8.870741844177246
    8. '#' → logprob: -9.370741844177246
    9. ' ' → logprob: -9.870741844177246
    10. '
' → logprob: -10.245741844177246

Token 108: ' no' (ID: 860)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028978737071156502
    2. 'com' → logprob: -4.9039788246154785
    3. 'side' → logprob: -5.2789788246154785
    4. 'the' → logprob: -5.9039788246154785
    5. 'con' → logprob: -6.4039788246154785
    6. 'range' → logprob: -6.7789788246154785
    7. 'cons' → logprob: -6.7789788246154785
    8. '_)' → logprob: -7.0289788246154785
    9. 'completion' → logprob: -7.2789788246154785
    10. 'compat' → logprob: -7.2789788246154785

Token 109: ' reason' (ID: 5207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 107
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 59
Précision stricte (1ère position): 31.78%
Précision adaptée (1ère position): 31.78%
Précision (top 10): 55.14%
================================================================================
