================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
node_count, edge_count, param_p = map(int, input().split())
adjacency_list = [[] for _ in range(node_count)]
infinity_value = float("inf")
distance_array = [infinity_value] * node_count
distance_array[0] = 0

for _ in range(edge_count):
    from_node, to_node, edge_cost = map(int, input().split())
    adjacency_list[from_node - 1].append((to_node - 1, param_p - edge_cost))

for _ in range(node_count):
    is_updated = False
    for current_node, neighbors in enumerate(adjacency_list):
        for neighbor_node, neighbor_cost in neighbors:
            if distance_array[current_node] != infinity_value and distance_array[neighbor_node] > distance_array[current_node] + neighbor_cost:
                distance_array[neighbor_node] = distance_array[current_node] + neighbor_cost
                is_updated = True
    if not is_updated:
        break
else:
    previous_distance = distance_array[-1]
    for _ in range(node_count):
        is_negative_updated = False
        for current_node, neighbors in enumerate(adjacency_list):
            for neighbor_node, neighbor_cost in neighbors:
                if distance_array[current_node] != infinity_value and distance_array[neighbor_node] > distance_array[current_node] + neighbor_cost:
                    distance_array[neighbor_node] = distance_array[current_node] + neighbor_cost
                    is_negative_updated = True
        if not is_negative_updated:
            break
    if distance_array[-1] != previous_distance:
        print(-1)
        exit()

print(max(0, -distance_array[-1]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'node' (ID: 7005)
  → Token d'amorce (pas de prédiction)

Token 1: '_count' (ID: 7536)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' edge' (ID: 11165)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12645591795444489
    2. ' _' → logprob: -4.126455783843994
    3. ' max' → logprob: -4.126455783843994
    4. '_' → logprob: -4.376455783843994
    5. '_max' → logprob: -4.626455783843994
    6. 'max' → logprob: -4.626455783843994
    7. ' ```' → logprob: -5.001455783843994
    8. ' space' → logprob: -5.126455783843994
    9. '```' → logprob: -5.126455783843994
    10. '_space' → logprob: -5.501455783843994

Token 4: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3071628212928772
    2. 's' → logprob: -1.8071627616882324
    3. '_s' → logprob: -2.4321627616882324
    4. '_count' → logprob: -4.682162761688232
    5. '.' → logprob: -6.807162761688232
    6. '```' → logprob: -7.432162761688232
    7. ')' → logprob: -7.557162761688232
    8. '_.' → logprob: -8.93216323852539
    9. ')_' → logprob: -9.05716323852539
    10. '[' → logprob: -9.18216323852539

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8846427202224731
    2. ',' → logprob: -1.0096427202224731
    3. '_' → logprob: -2.2596426010131836
    4. '```' → logprob: -2.2596426010131836
    5. ' =' → logprob: -5.884642601013184
    6. ':' → logprob: -5.884642601013184
    7. ';' → logprob: -6.134642601013184
    8. ')' → logprob: -6.884642601013184
    9. '_,' → logprob: -7.259642601013184
    10. '*' → logprob: -7.259642601013184

Token 6: ' param' (ID: 3802)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.599001944065094
    2. '=' → logprob: -0.849001944065094
    3. ' =' → logprob: -4.099001884460449
    4. '```' → logprob: -6.224001884460449
    5. ')' → logprob: -6.349001884460449
    6. ':' → logprob: -6.599001884460449
    7. '_' → logprob: -8.22400188446045
    8. ',node' → logprob: -9.22400188446045
    9. ';' → logprob: -9.34900188446045
    10. ' ,' → logprob: -9.47400188446045

Token 7: '_p' (ID: 1359)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3733966052532196
    2. '_' → logprob: -2.498396635055542
    3. '.' → logprob: -2.623396635055542
    4. ' =' → logprob: -2.998396635055542
    5. ',' → logprob: -3.373396635055542
    6. ')' → logprob: -3.623396635055542
    7. '```' → logprob: -4.123396396636963
    8. ';' → logprob: -4.123396396636963
    9. '[' → logprob: -4.623396396636963
    10. ':' → logprob: -6.623396396636963

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10097108036279678
    2. ' =' → logprob: -2.725970983505249
    3. ',' → logprob: -3.725970983505249
    4. '_' → logprob: -5.975971221923828
    5. ')' → logprob: -6.100971221923828
    6. ';' → logprob: -7.850971221923828
    7. '```' → logprob: -7.850971221923828
    8. '*' → logprob: -8.850971221923828
    9. '.' → logprob: -8.975971221923828
    10. '>' → logprob: -9.350971221923828

Token 9: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42998701333999634
    2. '0' → logprob: -2.0549869537353516
    3. ' map' → logprob: -2.0549869537353516
    4. ' node' → logprob: -3.5549869537353516
    5. 'map' → logprob: -3.6799869537353516
    6. ' graph' → logprob: -4.429986953735352
    7. ' nodes' → logprob: -5.804986953735352
    8. ' data' → logprob: -5.929986953735352
    9. ' input' → logprob: -5.929986953735352
    10. ' dataset' → logprob: -5.929986953735352

Token 10: '(int' (ID: 2742)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 11: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3634817600250244
    2. '(input' → logprob: -1.2384817600250244
    3. 'input' → logprob: -4.613481521606445
    4. '(' → logprob: -6.613481521606445
    5. '(user' → logprob: -7.488481521606445
    6. '<|end|>' → logprob: -7.488481521606445
    7. '`)' → logprob: -7.738481521606445
    8. '(node' → logprob: -7.863481521606445
    9. '[input' → logprob: -8.238481521606445
    10. '```' → logprob: -8.238481521606445

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0380459688603878
    2. ' input' → logprob: -3.288045883178711
    3. ')' → logprob: -12.913045883178711
    4. '(input' → logprob: -13.413045883178711
    5. ',input' → logprob: -16.03804588317871
    6. '```' → logprob: -16.53804588317871
    7. '[input' → logprob: -17.03804588317871
    8. 'list' → logprob: -17.28804588317871
    9. ' )' → logprob: -17.28804588317871
    10. '=input' → logprob: -17.28804588317871

Token 13: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.597722589969635
    2. '(' → logprob: -1.9727225303649902
    3. '()' → logprob: -2.2227225303649902
    4. '(input' → logprob: -3.2227225303649902
    5. '())' → logprob: -3.2227225303649902
    6. '```' → logprob: -3.4727225303649902
    7. '`)' → logprob: -3.9727225303649902
    8. '(token' → logprob: -4.72272253036499
    9. '.readline' → logprob: -5.22272253036499
    10. '('' → logprob: -5.34772253036499

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009255149052478373
    2. 'strip' → logprob: -7.000925540924072
    3. 'rstrip' → logprob: -11.375925064086914
    4. 'read' → logprob: -13.750925064086914
    5. ' split' → logprob: -14.000925064086914
    6. '(split' → logprob: -15.375925064086914
    7. 'startswith' → logprob: -16.000925064086914
    8. 'spl' → logprob: -16.250925064086914
    9. 'replace' → logprob: -16.500925064086914
    10. ')' → logprob: -16.625925064086914

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3203646242618561
    2. '())' → logprob: -1.3203645944595337
    3. '()' → logprob: -5.695364475250244
    4. '))' → logprob: -6.695364475250244
    5. '`)' → logprob: -6.820364475250244
    6. '(' → logprob: -7.695364475250244
    7. '('' → logprob: -7.820364475250244
    8. '```' → logprob: -8.695364952087402
    9. '()))' → logprob: -9.195364952087402
    10. '')' → logprob: -10.195364952087402

Token 16: 'adj' (ID: 57001)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0883357524871826
    2. '\n' → logprob: -1.5883357524871826
    3. '
' → logprob: -1.5883357524871826
    4. 'graph' → logprob: -2.4633357524871826
    5. '#' → logprob: -3.3383357524871826
    6. 'n' → logprob: -3.9633357524871826
    7. '`' → logprob: -4.213335990905762
    8. 'if' → logprob: -4.213335990905762
    9. ')' → logprob: -4.463335990905762
    10. ',
' → logprob: -4.713335990905762

Token 17: 'acency' (ID: 118557)
  Prédit: 'acency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.027387015521526337
    2. '_list' → logprob: -4.1523871421813965
    3. 'acent' → logprob: -5.1523871421813965
    4. '[' → logprob: -5.5273871421813965
    5. '_matrix' → logprob: -7.2773871421813965
    6. '_' → logprob: -7.9023871421813965
    7. ' =' → logprob: -9.027386665344238
    8. '=' → logprob: -9.277386665344238
    9. 'ac' → logprob: -9.652386665344238
    10. '_mat' → logprob: -10.527386665344238

Token 18: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.776077389717102
    2. '_list' → logprob: -1.151077389717102
    3. '_matrix' → logprob: -1.651077389717102
    4. '[' → logprob: -3.6510772705078125
    5. '[_' → logprob: -6.2760772705078125
    6. '_array' → logprob: -6.4010772705078125
    7. '_lists' → logprob: -7.4010772705078125
    8. '```' → logprob: -8.151077270507812
    9. '_lst' → logprob: -9.026077270507812
    10. '_m' → logprob: -9.151077270507812

Token 19: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9233461618423462
    2. ' =' → logprob: -1.0483461618423462
    3. '=' → logprob: -1.4233461618423462
    4. ')' → logprob: -5.923346042633057
    5. '[node' → logprob: -6.173346042633057
    6. '_' → logprob: -6.548346042633057
    7. '[:]' → logprob: -7.173346042633057
    8. '.setdefault' → logprob: -7.298346042633057
    9. '```' → logprob: -7.548346042633057
    10. '=[]' → logprob: -7.548346042633057

Token 20: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.3545202314853668
    2. '[' → logprob: -1.3545202016830444
    3. ' [' → logprob: -3.854520320892334
    4. '{}' → logprob: -5.104520320892334
    5. ' {}' → logprob: -5.229520320892334
    6. ' []' → logprob: -5.479520320892334
    7. '[]' → logprob: -6.354520320892334
    8. ' {' → logprob: -6.979520320892334
    9. ' [{}' → logprob: -7.979520320892334
    10. ' defaultdict' → logprob: -7.979520320892334

Token 21: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028535449877381325
    2. ',' → logprob: -4.27853536605835
    3. 'for' → logprob: -4.65353536605835
    4. ' for' → logprob: -5.90353536605835
    5. ']' → logprob: -6.65353536605835
    6. ')]' → logprob: -7.40353536605835
    7. '),' → logprob: -9.903535842895508
    8. '[' → logprob: -11.278535842895508
    9. '(' → logprob: -11.903535842895508
    10. ',)' → logprob: -11.903535842895508

Token 22: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013249165378510952
    2. ' _' → logprob: -4.513249397277832
    3. ' range' → logprob: -6.263249397277832
    4. 'range' → logprob: -8.638249397277832
    5. '_range' → logprob: -9.388249397277832
    6. '(range' → logprob: -11.263249397277832
    7. ' ' → logprob: -12.388249397277832
    8. ' in' → logprob: -12.513249397277832
    9. '(' → logprob: -12.513249397277832
    10. ' i' → logprob: -12.638249397277832

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693378329277039
    2. 'in' → logprob: -2.1269338130950928
    3. 'range' → logprob: -12.376934051513672
    4. ' ' → logprob: -14.501934051513672
    5. '_' → logprob: -15.376934051513672
    6. 'i' → logprob: -15.751934051513672
    7. '(' → logprob: -16.001934051513672
    8. '0' → logprob: -16.251934051513672
    9. ' range' → logprob: -16.626934051513672
    10. 'node' → logprob: -17.001934051513672

Token 24: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002615742268972099
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -15.500261306762695
    4. '	range' → logprob: -19.500261306762695
    5. '   ' → logprob: -21.125261306762695
    6. ' ' → logprob: -21.125261306762695
    7. '```' → logprob: -22.375261306762695
    8. '  ' → logprob: -22.750261306762695
    9. '.range' → logprob: -22.875261306762695
    10. ')' → logprob: -23.000261306762695

Token 25: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0009120595059357584
    2. '(' → logprob: -7.000912189483643
    3. ' (' → logprob: -15.125911712646484
    4. '(n' → logprob: -16.000911712646484
    5. ' node' → logprob: -17.375911712646484
    6. '(num' → logprob: -17.500911712646484
    7. 'node' → logprob: -17.625911712646484
    8. '(token' → logprob: -18.125911712646484
    9. '(code' → logprob: -18.250911712646484
    10. '(nodes' → logprob: -18.250911712646484

Token 26: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.165027217415627e-05
    2. 's' → logprob: -10.875021934509277
    3. 'count' → logprob: -13.125021934509277
    4. '_' → logprob: -15.375021934509277
    5. '_COUNT' → logprob: -15.875021934509277
    6. ')' → logprob: -16.00002098083496
    7. '_s' → logprob: -16.50002098083496
    8. '_counts' → logprob: -16.62502098083496
    9. 'Count' → logprob: -17.00002098083496
    10. ')_' → logprob: -17.25002098083496

Token 27: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.5577775128767826e-06
    2. ')' → logprob: -13.250005722045898
    3. ')])' → logprob: -13.500005722045898
    4. '])]' → logprob: -14.125005722045898
    5. ']' → logprob: -14.625005722045898
    6. ' )' → logprob: -14.875005722045898
    7. '')]' → logprob: -15.250005722045898
    8. ')],' → logprob: -15.250005722045898
    9. '])' → logprob: -16.2500057220459
    10. ')]
' → logprob: -16.2500057220459

Token 28: 'in' (ID: 258)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036023214925080538
    2. ' for' → logprob: -5.628602504730225
    3. '```' → logprob: -14.128602027893066
    4. 'edge' → logprob: -14.378602027893066
    5. 'n' → logprob: -14.878602027893066
    6. 'edges' → logprob: -15.878602027893066
    7. 'node' → logprob: -16.253602981567383
    8. '
' → logprob: -16.628602981567383
    9. '<|end|>' → logprob: -16.628602981567383
    10. '`' → logprob: -17.503602981567383

Token 29: 'finity' (ID: 36064)
  Prédit: '_degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.012225652113556862
    2. '_de' → logprob: -4.76222562789917
    3. 'degree' → logprob: -5.88722562789917
    4. 'put' → logprob: -8.012226104736328
    5. '_deg' → logprob: -8.887226104736328
    6. 'de' → logprob: -9.262226104736328
    7. 'coming' → logprob: -9.887226104736328
    8. '度' → logprob: -10.012226104736328
    9. 'deg' → logprob: -10.137226104736328
    10. '_edges' → logprob: -10.137226104736328

Token 30: '_value' (ID: 6734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011131888255476952
    2. '=' → logprob: -4.511131763458252
    3. '_' → logprob: -9.51113224029541
    4. '_inf' → logprob: -12.26113224029541
    5. '```' → logprob: -14.13613224029541
    6. ' ' → logprob: -14.63613224029541
    7. ' ' → logprob: -14.76113224029541
    8. 'INF' → logprob: -14.88613224029541
    9. 'inf' → logprob: -14.88613224029541
    10. '=int' → logprob: -14.88613224029541

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00014168102643452585
    2. '=' → logprob: -8.875142097473145
    3. 's' → logprob: -14.000142097473145
    4. ',' → logprob: -15.500142097473145
    5. ' ' → logprob: -15.500142097473145
    6. ' ' → logprob: -16.250141143798828
    7. '_' → logprob: -16.250141143798828
    8. '  ' → logprob: -16.375141143798828
    9. 'inf' → logprob: -16.750141143798828
    10. 'INF' → logprob: -17.125141143798828

Token 32: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.3890025317668915
    2. 'float' → logprob: -1.5140025615692139
    3. ' ' → logprob: -2.764002561569214
    4. '10' → logprob: -3.264002561569214
    5. ' int' → logprob: -7.889002323150635
    6. 'int' → logprob: -7.889002323150635
    7. '1' → logprob: -9.014002799987793
    8. '100' → logprob: -9.889002799987793
    9. '999' → logprob: -11.764002799987793
    10. '(float' → logprob: -11.764002799987793

Token 33: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0005471954355016351
    2. ''in' → logprob: -8.250547409057617
    3. ''' → logprob: -8.875547409057617
    4. '(' → logprob: -9.125547409057617
    5. '("' → logprob: -10.750547409057617
    6. ''s' → logprob: -12.250547409057617
    7. '(in' → logprob: -13.125547409057617
    8. ''t' → logprob: -13.375547409057617
    9. '('+' → logprob: -13.375547409057617
    10. ''a' → logprob: -13.875547409057617

Token 34: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.011737300083041191
    2. ''in' → logprob: -4.51173734664917
    3. ''' → logprob: -7.63673734664917
    4. 'in' → logprob: -9.261736869812012
    5. '"' → logprob: -9.636736869812012
    6. '-inf' → logprob: -11.511736869812012
    7. '"in' → logprob: -11.761736869812012
    8. ''i' → logprob: -12.136736869812012
    9. 'info' → logprob: -12.636736869812012
    10. ''inc' → logprob: -12.761736869812012

Token 35: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0010378103470429778
    2. ')' → logprob: -7.12603759765625
    3. ')")' → logprob: -8.37603759765625
    4. '"' → logprob: -13.37603759765625
    5. '}")' → logprob: -14.87603759765625
    6. ' ")' → logprob: -15.50103759765625
    7. ')"' → logprob: -16.00103759765625
    8. '")
' → logprob: -16.00103759765625
    9. '!")' → logprob: -16.37603759765625
    10. '\")' → logprob: -16.62603759765625

Token 36: 'distance' (ID: 40614)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002942287246696651
    2. ' for' → logprob: -8.37529468536377
    3. '```' → logprob: -10.75029468536377
    4. 'distance' → logprob: -11.25029468536377
    5. 'graph' → logprob: -12.37529468536377
    6. '
' → logprob: -12.87529468536377
    7. 'd' → logprob: -13.00029468536377
    8. 'edges' → logprob: -13.00029468536377
    9. 'while' → logprob: -13.12529468536377
    10. 'visited' → logprob: -13.12529468536377

Token 37: '_array' (ID: 8766)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014699537307024002
    2. ' =' → logprob: -4.514699459075928
    3. '=' → logprob: -5.639699459075928
    4. '[' → logprob: -9.764699935913086
    5. '_' → logprob: -11.764699935913086
    6. '[]' → logprob: -11.889699935913086
    7. '[s' → logprob: -12.014699935913086
    8. '_s' → logprob: -12.764699935913086
    9. 'es' → logprob: -12.889699935913086
    10. '```' → logprob: -13.264699935913086

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0126524418592453
    2. '=' → logprob: -4.387652397155762
    3. '[' → logprob: -9.637652397155762
    4. '[]' → logprob: -10.262652397155762
    5. '[:]' → logprob: -10.762652397155762
    6. 's' → logprob: -11.762652397155762
    7. ',' → logprob: -12.887652397155762
    8. ' ' → logprob: -13.012652397155762
    9. '=[]' → logprob: -13.137652397155762
    10. '_' → logprob: -13.137652397155762

Token 39: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.09777077287435532
    2. '[in' → logprob: -2.8477706909179688
    3. '[' → logprob: -3.3477706909179688
    4. '[int' → logprob: -13.222770690917969
    5. '[ind' → logprob: -13.722770690917969
    6. '[array' → logprob: -13.847770690917969
    7. ' ' → logprob: -14.347770690917969
    8. '[node' → logprob: -14.972770690917969
    9. ' ' → logprob: -15.097770690917969
    10. '[i' → logprob: -15.222770690917969

Token 40: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.016330180689692497
    2. ' infinity' → logprob: -4.141330242156982
    3. 'inf' → logprob: -8.766329765319824
    4. '0' → logprob: -9.016329765319824
    5. '.infinity' → logprob: -11.891329765319824
    6. '	in' → logprob: -13.141329765319824
    7. '∞' → logprob: -13.641329765319824
    8. 'Infinity' → logprob: -13.641329765319824
    9. 'float' → logprob: -13.766329765319824
    10. '(in' → logprob: -14.016329765319824

Token 41: 'finity' (ID: 36064)
  Prédit: 'finity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finity' → logprob: -0.0008575046667829156
    2. 'f' → logprob: -7.125857353210449
    3. 'ity' → logprob: -10.12585735321045
    4. 'FINITY' → logprob: -11.50085735321045
    5. 'fty' → logprob: -13.87585735321045
    6. 'fi' → logprob: -13.87585735321045
    7. 'float' → logprob: -15.12585735321045
    8. 'fn' → logprob: -15.62585735321045
    9. 'finite' → logprob: -15.75085735321045
    10. 'if' → logprob: -16.500858306884766

Token 42: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.961759259458631e-06
    2. ' _' → logprob: -13.125004768371582
    3. '_' → logprob: -14.000004768371582
    4. ')_' → logprob: -14.125004768371582
    5. '_distance' → logprob: -14.625004768371582
    6. ')' → logprob: -15.625004768371582
    7. '_val' → logprob: -15.750004768371582
    8. '_values' → logprob: -15.875004768371582
    9. '"_' → logprob: -15.875004768371582
    10. ',_' → logprob: -16.5000057220459

Token 43: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003059111535549164
    2. ' for' → logprob: -6.253058910369873
    3. ' ]' → logprob: -7.253058910369873
    4. ']*' → logprob: -7.878058910369873
    5. ',' → logprob: -10.753059387207031
    6. 'for' → logprob: -11.253059387207031
    7. ')' → logprob: -12.253059387207031
    8. ']*(' → logprob: -13.378059387207031
    9. ')]' → logprob: -13.753059387207031
    10. ' ' → logprob: -15.628059387207031

Token 44: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1868223249912262
    2. ' *' → logprob: -1.9368222951889038
    3. ' for' → logprob: -4.186822414398193
    4. ']' → logprob: -5.436822414398193
    5. ',' → logprob: -6.311822414398193
    6. ')' → logprob: -6.811822414398193
    7. '[' → logprob: -6.811822414398193
    8. ' ' → logprob: -6.936822414398193
    9. '+' → logprob: -7.811822414398193
    10. 'for' → logprob: -8.311821937561035

Token 45: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.011914950795471668
    2. ' node' → logprob: -5.0119147300720215
    3. '(node' → logprob: -5.2619147300720215
    4. '(' → logprob: -14.76191520690918
    5. '[node' → logprob: -16.13691520690918
    6. '	node' → logprob: -16.38691520690918
    7. ' (' → logprob: -17.01191520690918
    8. '/node' → logprob: -18.13691520690918
    9. ',node' → logprob: -18.63691520690918
    10. '_node' → logprob: -19.76191520690918

Token 46: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.491498531133402e-06
    2. '_' → logprob: -12.625009536743164
    3. 's' → logprob: -13.250009536743164
    4. '_s' → logprob: -13.750009536743164
    5. '_counts' → logprob: -14.250009536743164
    6. '_co' → logprob: -14.500009536743164
    7. ' _' → logprob: -14.500009536743164
    8. '_c' → logprob: -14.750009536743164
    9. '_cont' → logprob: -15.500009536743164
    10. '_cut' → logprob: -15.875009536743164

Token 47: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: 'distance' (ID: 40614)
  Prédit: 'distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.40003278851509094
    2. 'for' → logprob: -1.9000327587127686
    3. 'current' → logprob: -2.2750327587127686
    4. '
' → logprob: -3.6500327587127686
    5. 'start' → logprob: -4.275032997131348
    6. 'd' → logprob: -4.775032997131348
    7. '<|end|>' → logprob: -4.900032997131348
    8. 'source' → logprob: -5.775032997131348
    9. 'visited' → logprob: -5.775032997131348
    10. '```' → logprob: -6.150032997131348

Token 49: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.0001114106344175525
    2. '_' → logprob: -9.62511157989502
    3. '[' → logprob: -11.62511157989502
    4. '[_' → logprob: -11.75011157989502
    5. '_value' → logprob: -11.87511157989502
    6. 's' → logprob: -12.50011157989502
    7. '```' → logprob: -12.87511157989502
    8. '_arr' → logprob: -13.12511157989502
    9. '_arrays' → logprob: -13.12511157989502
    10. '_s' → logprob: -13.25011157989502

Token 50: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.750021934509277
    3. '1' → logprob: -16.250022888183594
    4. '۰' → logprob: -16.437522888183594
    5. ')' → logprob: -16.625022888183594
    6. ']' → logprob: -16.875022888183594
    7. 'start' → logprob: -16.937522888183594
    8. '-' → logprob: -17.250022888183594
    9. 'source' → logprob: -17.437522888183594
    10. 's' → logprob: -17.437522888183594

Token 52: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009579126490280032
    2. ' ]' → logprob: -7.00095796585083
    3. ']=' → logprob: -10.000957489013672
    4. '=' → logprob: -14.250957489013672
    5. ')' → logprob: -15.625957489013672
    6. '`]' → logprob: -15.875957489013672
    7. ')]' → logprob: -16.625957489013672
    8. '[' → logprob: -17.125957489013672
    9. '']' → logprob: -17.125957489013672
    10. ' =' → logprob: -17.125957489013672

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10562724620103836
    2. '=' → logprob: -2.3556272983551025
    3. '<|end|>' → logprob: -5.355627059936523
    4. ',' → logprob: -8.105627059936523
    5. ' ' → logprob: -8.355627059936523
    6. '0' → logprob: -10.230627059936523
    7. ' ,' → logprob: -10.605627059936523
    8. ')' → logprob: -10.730627059936523
    9. '<|end|>' → logprob: -10.980627059936523
    10. '```' → logprob: -11.480627059936523

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -19.500001907348633
    4. '۰' → logprob: -19.625001907348633
    5. '00' → logprob: -21.312501907348633
    6. '1' → logprob: -21.625001907348633
    7. '```' → logprob: -21.750001907348633
    8. ' ' → logprob: -21.937501907348633
    9. '٠' → logprob: -21.937501907348633
    10. '  ' → logprob: -22.062501907348633

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '۰' → logprob: -17.75
    4. '1' → logprob: -18.0
    5. '   ' → logprob: -19.375
    6. '```' → logprob: -19.4375
    7. '00' → logprob: -19.5625
    8. '000' → logprob: -19.9375
    9. '０' → logprob: -20.0625
    10. '٠' → logprob: -20.1875

Token 56: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021315420046448708
    2. '
' → logprob: -4.146315574645996
    3. ' for' → logprob: -5.896315574645996
    4. '<|end|>' → logprob: -6.146315574645996
    5. '```' → logprob: -8.646315574645996
    6. '\n' → logprob: -9.146315574645996
    7. '
' → logprob: -10.646315574645996
    8. '' → logprob: -11.146315574645996
    9. '<|end|>' → logprob: -11.771315574645996
    10. 'from' → logprob: -12.021315574645996

Token 57: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010902655776590109
    2. ' for' → logprob: -9.37510871887207
    3. 'from' → logprob: -11.37510871887207
    4. 'import' → logprob: -12.37510871887207
    5. '```' → logprob: -12.37510871887207
    6. '
' → logprob: -13.50010871887207
    7. '<|end|>' → logprob: -13.75010871887207
    8. ')' → logprob: -14.87510871887207
    9. 'edges' → logprob: -15.37510871887207
    10. 'graph' → logprob: -15.87510871887207

Token 58: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.018831150606274605
    2. ' ' → logprob: -4.518831253051758
    3. ' i' → logprob: -5.768831253051758
    4. ' node' → logprob: -6.018831253051758
    5. '_' → logprob: -6.143831253051758
    6. ' edge' → logprob: -10.643831253051758
    7. '  ' → logprob: -11.643831253051758
    8. ' in' → logprob: -12.518831253051758
    9. ' ' → logprob: -12.893831253051758
    10. ' ‌' → logprob: -13.268831253051758

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006148365326225758
    2. 'in' → logprob: -5.131148338317871
    3. ' ' → logprob: -8.881148338317871
    4. 'range' → logprob: -10.756148338317871
    5. '  ' → logprob: -10.881148338317871
    6. ',' → logprob: -11.256148338317871
    7. '_' → logprob: -11.881148338317871
    8. 'n' → logprob: -12.506148338317871
    9. ' _' → logprob: -12.756148338317871
    10. ' ,' → logprob: -12.881148338317871

Token 60: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0003317705122753978
    2. 'range' → logprob: -8.12533187866211
    3. ' ' → logprob: -10.37533187866211
    4. '  ' → logprob: -12.62533187866211
    5. '	range' → logprob: -14.75033187866211
    6. '   ' → logprob: -15.50033187866211
    7. ' ran' → logprob: -15.87533187866211
    8. ' input' → logprob: -16.25033187866211
    9. '    ' → logprob: -16.37533187866211
    10. ' rang' → logprob: -16.75033187866211

Token 61: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.010821070522069931
    2. ' edge' → logprob: -5.1358208656311035
    3. '(node' → logprob: -6.2608208656311035
    4. 'edge' → logprob: -6.2608208656311035
    5. '(' → logprob: -7.1358208656311035
    6. ' (' → logprob: -8.760821342468262
    7. '(param' → logprob: -9.260821342468262
    8. ' node' → logprob: -12.760821342468262
    9. '(edges' → logprob: -13.135821342468262
    10. ' ' → logprob: -13.260821342468262

Token 62: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.226628895296017e-06
    2. 's' → logprob: -12.000007629394531
    3. '_s' → logprob: -15.375007629394531
    4. 'count' → logprob: -15.625007629394531
    5. ' _' → logprob: -15.750007629394531
    6. '_cnt' → logprob: -16.00000762939453
    7. '_counts' → logprob: -16.25000762939453
    8. ')_' → logprob: -16.37500762939453
    9. '_' → logprob: -16.87500762939453
    10. '_counter' → logprob: -17.25000762939453

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -6.802049756515771e-05
    2. ':' → logprob: -10.250067710876465
    3. '):
' → logprob: -11.250067710876465
    4. ' ):' → logprob: -11.500067710876465
    5. ')' → logprob: -11.875067710876465
    6. ']:' → logprob: -14.375067710876465
    7. '():' → logprob: -14.750067710876465
    8. ',' → logprob: -14.875067710876465
    9. '):
' → logprob: -15.000067710876465
    10. '}:' → logprob: -15.250067710876465

Token 64: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.24574622511863708
    2. ' node' → logprob: -2.62074613571167
    3. ' source' → logprob: -2.87074613571167
    4. ' from' → logprob: -3.24574613571167
    5. '   ' → logprob: -3.99574613571167
    6. ' start' → logprob: -4.12074613571167
    7. 'u' → logprob: -5.37074613571167
    8. ' src' → logprob: -5.49574613571167
    9. ' edge' → logprob: -6.12074613571167
    10. ' a' → logprob: -6.87074613571167

Token 65: ' from' (ID: 591)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6393375396728516
    2. ' u' → logprob: -0.8893375396728516
    3. ' source' → logprob: -4.014337539672852
    4. ' node' → logprob: -4.264337539672852
    5. 'source' → logprob: -4.764337539672852
    6. 'node' → logprob: -5.139337539672852
    7. 'src' → logprob: -5.889337539672852
    8. 'from' (adapté à ' from') → logprob: -6.139337539672852
    9. ' start' → logprob: -6.264337539672852
    10. 'start' → logprob: -6.264337539672852

Token 66: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.020187729969620705
    2. '_' → logprob: -4.020187854766846
    3. '_nodes' → logprob: -7.145187854766846
    4. '_,' → logprob: -7.395187854766846
    5. '_vertex' → logprob: -8.020187377929688
    6. ',' → logprob: -9.270187377929688
    7. 'node' → logprob: -9.895187377929688
    8. '_edge' → logprob: -10.270187377929688
    9. ' node' → logprob: -10.395187377929688
    10. 'Node' → logprob: -10.520187377929688

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012015394167974591
    2. ' ,' → logprob: -6.751201629638672
    3. ',node' → logprob: -11.126201629638672
    4. '_,' → logprob: -11.251201629638672
    5. '‌,' → logprob: -13.876201629638672
    6. ',to' → logprob: -14.501201629638672
    7. '<|end|>' → logprob: -15.501201629638672
    8. ',int' → logprob: -15.751201629638672
    9. '`,' → logprob: -15.751201629638672
    10. ' ' → logprob: -15.876201629638672

Token 68: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.126937136054039
    2. ' to' → logprob: -2.1269371509552
    3. ',to' → logprob: -12.376936912536621
    4. 'space' → logprob: -13.126936912536621
    5. '_to' → logprob: -13.751936912536621
    6. '	to' → logprob: -14.251936912536621
    7. '<|end|>' → logprob: -14.501936912536621
    8. '[to' → logprob: -15.876936912536621
    9. ' ' → logprob: -16.001937866210938
    10. ' space' → logprob: -16.001937866210938

Token 69: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0019624168053269386
    2. ',' → logprob: -6.626962184906006
    3. '_nodes' → logprob: -8.001962661743164
    4. '<|end|>' → logprob: -9.626962661743164
    5. 'node' → logprob: -10.001962661743164
    6. '_edge' → logprob: -10.251962661743164
    7. '_' → logprob: -10.376962661743164
    8. ' ,' → logprob: -10.501962661743164
    9. '_,' → logprob: -10.751962661743164
    10. ',node' → logprob: -11.001962661743164

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027202345430850983
    2. '=' → logprob: -4.152202129364014
    3. ' =' → logprob: -4.527202129364014
    4. ' ,' → logprob: -8.152202606201172
    5. '<|end|>' → logprob: -13.277202606201172
    6. '   ' → logprob: -13.402202606201172
    7. '```' → logprob: -14.652202606201172
    8. ')' → logprob: -14.777202606201172
    9. ' ' → logprob: -14.902202606201172
    10. '<|end|>' → logprob: -14.902202606201172

Token 71: ' edge' (ID: 11165)
  Prédit: ' weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.26274919509887695
    2. 'weight' → logprob: -1.512749195098877
    3. ' cost' → logprob: -5.012749195098877
    4. ' param' → logprob: -6.637749195098877
    5. 'cost' → logprob: -6.762749195098877
    6. 'w' → logprob: -7.637749195098877
    7. ' w' → logprob: -8.012748718261719
    8. 'param' → logprob: -8.012748718261719
    9. ' edge' → logprob: -8.637748718261719
    10. ' ' → logprob: -10.262748718261719

Token 72: '_cost' (ID: 36820)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.046819232404232025
    2. '_cost' → logprob: -3.5468192100524902
    3. '_length' → logprob: -5.17181921005249
    4. '_value' → logprob: -5.29681921005249
    5. '_distance' → logprob: -5.29681921005249
    6. '_' → logprob: -7.92181921005249
    7. 'weight' → logprob: -8.046819686889648
    8. '_weights' → logprob: -8.671819686889648
    9. '_w' → logprob: -9.296819686889648
    10. 'cost' → logprob: -9.921819686889648

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021983087062836
    2. '=' → logprob: -2.3502197265625
    3. ',' → logprob: -11.4752197265625
    4. ' ' → logprob: -12.9752197265625
    5. ')' → logprob: -15.7252197265625
    6. '   ' → logprob: -16.1002197265625
    7. '  ' → logprob: -16.7252197265625
    8. '=input' → logprob: -17.1002197265625
    9. ' ,' → logprob: -17.2252197265625
    10. '    ' → logprob: -17.9127197265625

Token 74: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0052342405542731285
    2. 'map' → logprob: -5.255234241485596
    3. '	map' → logprob: -14.880233764648438
    4. '   ' → logprob: -17.255233764648438
    5. ' list' → logprob: -17.755233764648438
    6. ' ' → logprob: -17.880233764648438
    7. ' mapa' → logprob: -18.005233764648438
    8. '.map' → logprob: -18.630233764648438
    9. ' ' → logprob: -18.630233764648438
    10. ',map' → logprob: -18.880233764648438

Token 75: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.2603901015827432e-05
    2. '<int' → logprob: -11.500022888183594
    3. '(' → logprob: -12.125022888183594
    4. '=int' → logprob: -12.750022888183594
    5. 'int' → logprob: -13.375022888183594
    6. '[int' → logprob: -13.500022888183594
    7. ',int' → logprob: -14.625022888183594
    8. '<|end|>' → logprob: -15.500022888183594
    9. ']int' → logprob: -15.750022888183594
    10. ' (' → logprob: -16.000022888183594

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004637553822249174
    2. ',input' → logprob: -5.379637718200684
    3. 'input' → logprob: -11.254637718200684
    4. '(),' → logprob: -13.129637718200684
    5. '(input' → logprob: -13.754637718200684
    6. '(' → logprob: -14.129637718200684
    7. ' ,' → logprob: -14.879637718200684
    8. ')' → logprob: -15.754637718200684
    9. '```' → logprob: -16.629636764526367
    10. ',int' → logprob: -16.879636764526367

Token 77: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141646265983582
    2. ' input' → logprob: -1.7014164924621582
    3. ')' → logprob: -13.201416015625
    4. ' ' → logprob: -14.951416015625
    5. '(input' → logprob: -15.576416015625
    6. '=input' → logprob: -15.701416015625
    7. ',input' → logprob: -15.701416015625
    8. '	input' → logprob: -15.826416015625
    9. '<input' → logprob: -16.576416015625
    10. '   ' → logprob: -16.826416015625

Token 78: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.749814019713085e-06
    2. '()' → logprob: -12.000006675720215
    3. '.' → logprob: -15.625006675720215
    4. ')' → logprob: -15.750006675720215
    5. ' ().' → logprob: -15.750006675720215
    6. '(' → logprob: -17.87500762939453
    7. '>().' → logprob: -18.25000762939453
    8. '   ' → logprob: -18.50000762939453
    9. '().__' → logprob: -18.62500762939453
    10. '.split' → logprob: -18.75000762939453

Token 79: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.292907877039397e-06
    2. ')' → logprob: -13.50000286102295
    3. '(split' → logprob: -13.75000286102295
    4. ' split' → logprob: -15.00000286102295
    5. 'strip' → logprob: -15.50000286102295
    6. 'spl' → logprob: -16.500003814697266
    7. '```' → logprob: -16.750003814697266
    8. 'rstrip' → logprob: -16.875003814697266
    9. 'plit' → logprob: -17.625003814697266
    10. 's' → logprob: -18.625003814697266

Token 80: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.14508512616157532
    2. ')' → logprob: -2.145085096359253
    3. '()' → logprob: -4.020085334777832
    4. '())
' → logprob: -10.395085334777832
    5. '();)' → logprob: -13.645085334777832
    6. '(' → logprob: -13.770085334777832
    7. '))' → logprob: -13.770085334777832
    8. '`)' → logprob: -13.770085334777832
    9. '()))' → logprob: -14.020085334777832
    10. '()
' → logprob: -14.020085334777832

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005433554761111736
    2. '<|end|>' → logprob: -5.630433559417725
    3. ')' → logprob: -7.130433559417725
    4. '    
' → logprob: -7.505433559417725
    5. 'adj' → logprob: -8.505433082580566
    6. '```' → logprob: -9.755433082580566
    7. ' adjacency' → logprob: -10.005433082580566
    8. ' ' → logprob: -10.755433082580566
    9. '    ' → logprob: -10.880433082580566
    10. '  ' → logprob: -10.880433082580566

Token 82: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.011073639616370201
    2. ' adjacency' → logprob: -4.761073589324951
    3. '<|end|>' → logprob: -6.761073589324951
    4. '   ' → logprob: -6.761073589324951
    5. ' adj' → logprob: -10.38607406616211
    6. 'ad' → logprob: -10.51107406616211
    7. ')' → logprob: -10.76107406616211
    8. '    
' → logprob: -11.38607406616211
    9. '```' → logprob: -11.51107406616211
    10. '<|end|>' → logprob: -12.01107406616211

Token 83: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -17.125
    3. '_lists' → logprob: -17.25
    4. '[_' → logprob: -17.5
    5. '_array' → logprob: -18.75
    6. '_lst' → logprob: -19.0
    7. 'List' → logprob: -19.0
    8. '_' → logprob: -19.25
    9. '[' → logprob: -19.375
    10. '```' → logprob: -19.5

Token 84: '[from' (ID: 157148)
  Prédit: '[from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[from' → logprob: -2.868328920158092e-05
    2. '[to' → logprob: -10.500028610229492
    3. '[' → logprob: -13.750028610229492
    4. 'from' → logprob: -18.375028610229492
    5. '[node' → logprob: -18.500028610229492
    6. '\[' → logprob: -19.250028610229492
    7. '[source' → logprob: -19.250028610229492
    8. '[src' → logprob: -19.875028610229492
    9. '```' → logprob: -20.125028610229492
    10. '[df' → logprob: -20.125028610229492

Token 85: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -6.988221684878226e-06
    2. '[node' → logprob: -12.500006675720215
    3. '_nodes' → logprob: -13.375006675720215
    4. '```' → logprob: -14.625006675720215
    5. '_code' → logprob: -15.500006675720215
    6. '_user' → logprob: -16.00000762939453
    7. '[_' → logprob: -16.12500762939453
    8. '_' → logprob: -16.12500762939453
    9. '[from' → logprob: -16.12500762939453
    10. '[' → logprob: -16.37500762939453

Token 86: ' -' (ID: 533)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03517363592982292
    2. ').' → logprob: -3.5351736545562744
    3. '.append' → logprob: -5.285173416137695
    4. ')' → logprob: -8.660173416137695
    5. ']' → logprob: -8.910173416137695
    6. '.' → logprob: -11.035173416137695
    7. '[' → logprob: -12.035173416137695
    8. '}.' → logprob: -12.285173416137695
    9. ' ].' → logprob: -13.410173416137695
    10. '.setdefault' → logprob: -13.535173416137695

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002764710516203195
    2. ' ' → logprob: -8.250276565551758
    3. '<|end|>' → logprob: -11.125276565551758
    4. '<|end|>' → logprob: -15.625276565551758
    5. '```' → logprob: -16.500276565551758
    6. 'to' → logprob: -16.500276565551758
    7. '0' → logprob: -17.250276565551758
    8. ')' → logprob: -17.375276565551758
    9. '   ' → logprob: -17.625276565551758
    10. '>' → logprob: -17.625276565551758

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '<|end|>' → logprob: -15.87500286102295
    4. '0' → logprob: -18.000001907348633
    5. 'to' → logprob: -18.250001907348633
    6. '2' → logprob: -18.750001907348633
    7. '```' → logprob: -19.125001907348633
    8. ')' → logprob: -19.687501907348633
    9. '১' → logprob: -19.687501907348633
    10. '१' → logprob: -19.812501907348633

Token 89: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.04514329507946968
    2. ').' → logprob: -3.1701433658599854
    3. '.append' → logprob: -6.545143127441406
    4. ')' → logprob: -8.045143127441406
    5. ']' → logprob: -8.045143127441406
    6. '.' → logprob: -10.045143127441406
    7. '}.' → logprob: -11.420143127441406
    8. ')].' → logprob: -12.920143127441406
    9. ' ].' → logprob: -13.420143127441406
    10. ''].' → logprob: -14.170143127441406

Token 90: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.5
    3. 'appen' → logprob: -16.125
    4. '.append' → logprob: -17.375
    5. '	append' → logprob: -19.25
    6. 'appe' → logprob: -20.625
    7. 'app' → logprob: -20.625
    8. '_append' → logprob: -20.75
    9. 'add' → logprob: -20.875
    10. 'Append' → logprob: -21.25

Token 91: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004087185952812433
    2. '(' → logprob: -5.754086971282959
    3. '(to' → logprob: -7.004086971282959
    4. ' (' → logprob: -15.254087448120117
    5. ' ((' → logprob: -15.504087448120117
    6. '([' → logprob: -15.629087448120117
    7. '(
' → logprob: -16.129087448120117
    8. '(((' → logprob: -16.254087448120117
    9. '(To' → logprob: -16.629087448120117
    10. '[(' → logprob: -17.254087448120117

Token 92: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.4974866644479334e-05
    2. ' to' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.125015258789062
    4. '(to' → logprob: -19.000015258789062
    5. ' ' → logprob: -19.625015258789062
    6. '  ' → logprob: -21.125015258789062
    7. '	to' → logprob: -21.625015258789062
    8. '[to' → logprob: -22.125015258789062
    9. ')' → logprob: -23.000015258789062
    10. 'from' → logprob: -23.250015258789062

Token 93: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00012308525037951767
    2. 'node' → logprob: -9.875123023986816
    3. '-node' → logprob: -10.625123023986816
    4. '-' → logprob: -10.875123023986816
    5. '_token' → logprob: -11.500123023986816
    6. 'Node' → logprob: -12.500123023986816
    7. 'to' → logprob: -12.625123023986816
    8. '_user' → logprob: -13.125123023986816
    9. '_' → logprob: -13.250123023986816
    10. '_NODE' → logprob: -13.375123023986816

Token 94: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018168320879340172
    2. '-' → logprob: -4.0181684494018555
    3. ' ' → logprob: -11.643168449401855
    4. '<|end|>' → logprob: -12.393168449401855
    5. ')' → logprob: -13.643168449401855
    6. ',' → logprob: -13.643168449401855
    7. '<|end|>' → logprob: -13.768168449401855
    8. ' ' → logprob: -14.643168449401855
    9. '   ' → logprob: -15.393168449401855
    10. '[' → logprob: -15.643168449401855

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004402055055834353
    2. ' ' → logprob: -7.7504401206970215
    3. '<|end|>' → logprob: -11.75044059753418
    4. '   ' → logprob: -14.00044059753418
    5. '```' → logprob: -15.62544059753418
    6. '<|end|>' → logprob: -15.75044059753418
    7. ')' → logprob: -15.75044059753418
    8. ',' → logprob: -16.81294059753418
    9. '2' → logprob: -17.18794059753418
    10. '`' → logprob: -17.31294059753418

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -15.250021934509277
    4. '2' → logprob: -16.500022888183594
    5. '```' → logprob: -16.500022888183594
    6. ')' → logprob: -16.750022888183594
    7. '   ' → logprob: -17.250022888183594
    8. '۱' → logprob: -17.937522888183594
    9. ',' → logprob: -18.125022888183594
    10. '`' → logprob: -18.625022888183594

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2233183042553719e-05
    2. ' ,' → logprob: -11.375012397766113
    3. ',
' → logprob: -14.875012397766113
    4. '‌,' → logprob: -15.625012397766113
    5. '<|end|>' → logprob: -17.375011444091797
    6. '),' → logprob: -17.500011444091797
    7. ')' → logprob: -17.625011444091797
    8. ',

' → logprob: -17.875011444091797
    9. ',)' → logprob: -18.125011444091797
    10. 'edge' → logprob: -18.250011444091797

Token 98: ' param' (ID: 3802)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.47408682107925415
    2. ' edge' → logprob: -0.9740868210792542
    3. '    ' → logprob: -12.97408676147461
    4. ' ' → logprob: -13.09908676147461
    5. ' ' → logprob: -13.59908676147461
    6. '   ' → logprob: -13.97408676147461
    7. '=edge' → logprob: -13.97408676147461
    8. ')' → logprob: -14.59908676147461
    9. '(edge' → logprob: -14.72408676147461
    10. '_edge' → logprob: -15.22408676147461

Token 99: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -4.320199877838604e-07
    2. '_cost' → logprob: -15.375
    3. '_' → logprob: -16.5
    4. ')' → logprob: -17.625
    5. ' _' → logprob: -17.75
    6. 'p' → logprob: -18.0
    7. '_c' → logprob: -18.125
    8. '_a' → logprob: -18.375
    9. ')_' → logprob: -19.125
    10. 's' → logprob: -20.0

Token 100: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2267286330461502
    2. '*' → logprob: -1.7267286777496338
    3. ',' → logprob: -4.226728439331055
    4. '))' → logprob: -5.226728439331055
    5. ' +' → logprob: -5.976728439331055
    6. '+' → logprob: -6.851728439331055
    7. ' -' → logprob: -7.976728439331055
    8. ')' → logprob: -8.101728439331055
    9. ' ,' → logprob: -8.226728439331055
    10. '-' → logprob: -8.476728439331055

Token 101: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.03211648017168045
    2. ' edge' → logprob: -3.532116413116455
    3. '1' → logprob: -6.157116413116455
    4. '(edge' → logprob: -10.094616889953613
    5. ' ' → logprob: -10.282116889953613
    6. ')' → logprob: -10.282116889953613
    7. '=edge' → logprob: -10.657116889953613
    8. 'cost' → logprob: -10.907116889953613
    9. '   ' → logprob: -11.219616889953613
    10. '0' → logprob: -11.782116889953613

Token 102: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.8193366486229934e-05
    2. 'cost' → logprob: -11.000018119812012
    3. '_COST' → logprob: -14.750018119812012
    4. 'Cost' → logprob: -15.000018119812012
    5. ' cost' → logprob: -15.500018119812012
    6. ')' → logprob: -16.125019073486328
    7. '-cost' → logprob: -16.125019073486328
    8. '_code' → logprob: -16.250019073486328
    9. '_c' → logprob: -16.500019073486328
    10. '_' → logprob: -16.500019073486328

Token 103: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005729287513531744
    2. ')' → logprob: -7.87557315826416
    3. '))
' → logprob: -8.62557315826416
    4. ')))' → logprob: -11.62557315826416
    5. ' ))' → logprob: -12.75057315826416
    6. '))

' → logprob: -15.12557315826416
    7. '+' → logprob: -15.25057315826416
    8. '   ' → logprob: -15.62557315826416
    9. ')
' → logprob: -16.000572204589844
    10. '));' → logprob: -16.125572204589844

Token 104: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16042639315128326
    2. ')' → logprob: -2.160426378250122
    3. '<|end|>' → logprob: -4.285426616668701
    4. '```' → logprob: -4.410426616668701
    5. '
' → logprob: -6.160426616668701
    6. '#' → logprob: -6.910426616668701
    7. ' for' → logprob: -6.910426616668701
    8. 'while' → logprob: -7.535426616668701
    9. 'if' → logprob: -7.660426616668701
    10. 'import' → logprob: -7.785426616668701

Token 105: ' _' (ID: 1175)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -1.4056860208511353
    2. ' current' → logprob: -1.6556860208511353
    3. ' i' → logprob: -1.7806860208511353
    4. ' _' → logprob: -2.0306859016418457
    5. ' neighbor' → logprob: -2.0306859016418457
    6. ' u' → logprob: -3.0306859016418457
    7. 'neighbor' → logprob: -4.030685901641846
    8. ' to' → logprob: -4.155685901641846
    9. ' next' → logprob: -4.405685901641846
    10. '_' → logprob: -4.405685901641846

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1967202126979828
    2. ' range' → logprob: -2.1967201232910156
    3. 'range' → logprob: -2.8217201232910156
    4. 'in' → logprob: -5.446720123291016
    5. ' ' → logprob: -6.321720123291016
    6. ' _' → logprob: -6.571720123291016
    7. '_' → logprob: -8.071720123291016
    8. '```' → logprob: -11.196720123291016
    9. '_range' → logprob: -11.196720123291016
    10. ' xrange' → logprob: -11.321720123291016

Token 107: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.033668406307697296
    2. ' range' → logprob: -3.4086685180664062
    3. 'adj' → logprob: -12.033668518066406
    4. '_' → logprob: -12.033668518066406
    5. '(range' → logprob: -13.033668518066406
    6. 'distance' → logprob: -13.283668518066406
    7. '_range' → logprob: -13.533668518066406
    8. 'edge' → logprob: -14.408668518066406
    9. '```' → logprob: -14.408668518066406
    10. '	range' → logprob: -14.408668518066406

Token 108: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.10515080392360687
    2. ' node' → logprob: -3.1051506996154785
    3. 'node' → logprob: -3.8551506996154785
    4. '(edge' → logprob: -4.2301506996154785
    5. '(param' → logprob: -5.1051506996154785
    6. ' (' → logprob: -5.4801506996154785
    7. '(' → logprob: -5.6051506996154785
    8. ' edge' → logprob: -6.1051506996154785
    9. 'edge' → logprob: -6.3551506996154785
    10. 'param' → logprob: -7.7301506996154785

Token 109: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.5048530030981055e-06
    2. 'count' → logprob: -13.875001907348633
    3. ')' → logprob: -15.375001907348633
    4. ')_' → logprob: -16.375001907348633
    5. '_counts' → logprob: -16.750001907348633
    6. '_COUNT' → logprob: -17.125001907348633
    7. '_cost' → logprob: -17.625001907348633
    8. '_c' → logprob: -18.375001907348633
    9. '-count' → logprob: -18.500001907348633
    10. '_' → logprob: -18.625001907348633

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048212677240371704
    2. ')' → logprob: -3.548212766647339
    3. '):
' → logprob: -4.92321252822876
    4. '-' → logprob: -4.92321252822876
    5. ' -' → logprob: -5.67321252822876
    6. ':' → logprob: -9.173213005065918
    7. '+' → logprob: -10.173213005065918
    8. ' ):' → logprob: -10.173213005065918
    9. '   ' → logprob: -10.298213005065918
    10. ',' → logprob: -10.548213005065918

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032409194856882095
    2. ' for' → logprob: -3.532409191131592
    3. 'for' → logprob: -6.032409191131592
    4. '    ' → logprob: -9.28240966796875
    5. '	for' → logprob: -9.78240966796875
    6. '   ' → logprob: -9.78240966796875
    7. '   ' → logprob: -11.15740966796875
    8. '```' → logprob: -11.28240966796875
    9. '       ' → logprob: -11.40740966796875
    10. '    
' → logprob: -12.40740966796875

Token 112: ' is' (ID: 382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30416348576545715
    2. ' for' → logprob: -1.4291634559631348
    3. '   ' → logprob: -3.9291634559631348
    4. 'updated' → logprob: -6.304163455963135
    5. 'changed' → logprob: -7.429163455963135
    6. ' ' → logprob: -8.304163932800293
    7. '    ' → logprob: -9.054163932800293
    8. ' updated' → logprob: -9.179163932800293
    9. '	for' → logprob: -9.554163932800293
    10. ' changed' → logprob: -10.304163932800293

Token 113: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -0.3284156024456024
    2. '_' → logprob: -2.078415632247925
    3. '_changed' → logprob: -3.078415632247925
    4. '<|end|>' → logprob: -4.078415393829346
    5. 'distance' → logprob: -4.328415393829346
    6. 'updated' → logprob: -4.953415393829346
    7. 'ed' → logprob: -5.078415393829346
    8. ' ' → logprob: -5.203415393829346
    9. 'changed' → logprob: -5.203415393829346
    10. ' updated' → logprob: -5.328415393829346

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014262467622756958
    2. '=' → logprob: -4.264262676239014
    3. ' ' → logprob: -10.264262199401855
    4. '=False' → logprob: -10.389262199401855
    5. 'd' → logprob: -11.139262199401855
    6. '  ' → logprob: -12.514262199401855
    7. 'ed' → logprob: -12.889262199401855
    8. '_' → logprob: -13.139262199401855
    9. '	' → logprob: -13.264262199401855
    10. ',' → logprob: -13.389262199401855

Token 115: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00408647395670414
    2. ' False' → logprob: -5.504086494445801
    3. 'True' → logprob: -11.7540864944458
    4. '(False' → logprob: -16.379085540771484
    5. 'false' → logprob: -16.754085540771484
    6. '=False' → logprob: -17.004085540771484
    7. ' True' → logprob: -17.129085540771484
    8. '_false' → logprob: -17.629085540771484
    9. '0' → logprob: -17.754085540771484
    10. '   ' → logprob: -18.004085540771484

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6731693148612976
    2. ' for' → logprob: -1.5481693744659424
    3. '<|end|>' → logprob: -1.5481693744659424
    4. '
' → logprob: -3.5481693744659424
    5. 'for' → logprob: -3.7981693744659424
    6. '	for' → logprob: -5.048169136047363
    7. ' ' → logprob: -6.173169136047363
    8. '    
' → logprob: -6.298169136047363
    9. '<|end|>' → logprob: -6.673169136047363
    10. '    ' → logprob: -7.923169136047363

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3385242223739624
    2. ' for' → logprob: -1.4635242223739624
    3. 'for' → logprob: -3.213524341583252
    4. '	for' → logprob: -4.963524341583252
    5. '
' → logprob: -5.338524341583252
    6. '<|end|>' → logprob: -6.588524341583252
    7. '    
' → logprob: -6.838524341583252
    8. ' ' → logprob: -7.088524341583252
    9. '  ' → logprob: -9.213523864746094
    10. '	
' → logprob: -9.338523864746094

Token 118: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31656667590141296
    2. ' for' → logprob: -1.4415667057037354
    3. '   ' → logprob: -3.5665667057037354
    4. '	for' → logprob: -5.066566467285156
    5. ' ' → logprob: -8.816566467285156
    6. '  ' → logprob: -10.316566467285156
    7. '       ' → logprob: -11.316566467285156
    8. '    ' → logprob: -11.316566467285156
    9. '    
' → logprob: -11.316566467285156
    10. '
' → logprob: -12.191566467285156

Token 119: ' current' (ID: 2208)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.4404267370700836
    2. 'u' → logprob: -1.4404267072677612
    3. ' current' → logprob: -2.940426826477051
    4. 'current' → logprob: -3.690426826477051
    5. ' node' → logprob: -3.940426826477051
    6. 'node' → logprob: -4.440426826477051
    7. ' from' → logprob: -5.690426826477051
    8. 'from' → logprob: -5.815426826477051
    9. ' i' → logprob: -6.315426826477051
    10. 'i' → logprob: -7.440426826477051

Token 120: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.006009375676512718
    2. '_' → logprob: -5.881009578704834
    3. ' node' → logprob: -6.506009578704834
    4. ' in' → logprob: -7.256009578704834
    5. 'node' → logprob: -7.381009578704834
    6. '_index' → logprob: -9.131009101867676
    7. ' _' → logprob: -9.631009101867676
    8. '_vertex' → logprob: -9.881009101867676
    9. ',' → logprob: -10.381009101867676
    10. '_space' → logprob: -11.506009101867676

Token 121: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0614495724439621
    2. ',' → logprob: -2.9364495277404785
    3. 'in' → logprob: -5.4364495277404785
    4. ' ,' → logprob: -6.1864495277404785
    5. ' ' → logprob: -9.186450004577637
    6. '<|end|>' → logprob: -11.561450004577637
    7. ',in' → logprob: -12.436450004577637
    8. '	in' → logprob: -12.561450004577637
    9. '_in' → logprob: -12.686450004577637
    10. ',node' → logprob: -13.186450004577637

Token 122: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.4791610538959503
    2. 'edges' → logprob: -1.229161024093628
    3. 'adj' → logprob: -2.479161024093628
    4. ' neighbors' → logprob: -6.854161262512207
    5. 'neighbor' → logprob: -6.979161262512207
    6. ' edges' → logprob: -7.354161262512207
    7. 'out' → logprob: -7.604161262512207
    8. 'ne' → logprob: -8.104161262512207
    9. '[(' → logprob: -8.354161262512207
    10. 'node' → logprob: -8.354161262512207

Token 123: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.697973906993866
    2. ' in' → logprob: -1.3229739665985107
    3. 'in' → logprob: -1.4479739665985107
    4. ' ,' → logprob: -7.947973728179932
    5. '_in' → logprob: -8.32297420501709
    6. '	in' → logprob: -9.19797420501709
    7. 's' → logprob: -9.69797420501709
    8. '_list' → logprob: -10.19797420501709
    9. ',in' → logprob: -10.44797420501709
    10. ' ' → logprob: -10.69797420501709

Token 124: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.014163747429847717
    2. ' enumerate' → logprob: -4.264163970947266
    3. '```' → logprob: -17.264163970947266
    4. '.enumer' → logprob: -17.389163970947266
    5. 'enum' → logprob: -17.514163970947266
    6. '(en' → logprob: -17.889163970947266
    7. 'en' → logprob: -18.014163970947266
    8. '   ' → logprob: -18.389163970947266
    9. 'Enumer' → logprob: -18.514163970947266
    10. 'zip' → logprob: -19.389163970947266

Token 125: '(ad' (ID: 36787)
  Prédit: '(ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ad' → logprob: -0.008690203540027142
    2. 'adj' → logprob: -4.758690357208252
    3. ' adjacency' → logprob: -9.883689880371094
    4. 'ad' → logprob: -10.883689880371094
    5. '(adj' → logprob: -12.258689880371094
    6. ')' → logprob: -14.633689880371094
    7. '(
' → logprob: -15.508689880371094
    8. '(' → logprob: -15.633689880371094
    9. '_ad' → logprob: -16.383689880371094
    10. '.ad' → logprob: -16.758689880371094

Token 126: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.014208519831299782
    2. 'acency' → logprob: -4.2642083168029785
    3. 'j' → logprob: -10.014208793640137
    4. 'ency' → logprob: -15.764208793640137
    5. 'ja' → logprob: -17.01420783996582
    6. 'Jac' → logprob: -17.26420783996582
    7. 'yac' → logprob: -17.88920783996582
    8. 'ac' → logprob: -17.88920783996582
    9. 'iac' → logprob: -18.01420783996582
    10. 'acy' → logprob: -18.26420783996582

Token 127: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -8.061054359131958e-06
    2. 'y' → logprob: -12.125007629394531
    3. 'ent' → logprob: -14.125007629394531
    4. 'cy' → logprob: -14.250007629394531
    5. 'acency' → logprob: -15.000007629394531
    6. 'ENCY' → logprob: -15.125007629394531
    7. 'acy' → logprob: -15.250007629394531
    8. 'eny' → logprob: -15.500007629394531
    9. '_list' → logprob: -16.62500762939453
    10. 'encv' → logprob: -16.62500762939453

Token 128: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.226628895296017e-06
    2. 'list' → logprob: -12.000007629394531
    3. 'List' → logprob: -14.500007629394531
    4. 's' → logprob: -15.125007629394531
    5. '_lists' → logprob: -16.75000762939453
    6. '_' → logprob: -17.37500762939453
    7. '_LIST' → logprob: -17.50000762939453
    8. ')' → logprob: -17.50000762939453
    9. 'neighbors' → logprob: -17.50000762939453
    10. '[' → logprob: -18.50000762939453

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023296247236430645
    2. '):
' → logprob: -6.1273298263549805
    3. ':' → logprob: -8.87732982635498
    4. '):
' → logprob: -12.75232982635498
    5. '():' → logprob: -14.00232982635498
    6. ')' → logprob: -14.00232982635498
    7. ' ):' → logprob: -15.87732982635498
    8. '   ' → logprob: -16.377328872680664
    9. '):

' → logprob: -16.752328872680664
    10. ':
' → logprob: -17.377328872680664

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1065850481390953
    2. ':' → logprob: -2.4815850257873535
    3. '<|end|>' → logprob: -4.7315850257873535
    4. ' for' → logprob: -5.4815850257873535
    5. '   ' → logprob: -6.1065850257873535
    6. '	for' → logprob: -7.4815850257873535
    7. ':
' → logprob: -8.106585502624512
    8. '        
' → logprob: -8.356585502624512
    9. '<|end|>' → logprob: -8.356585502624512
    10. '    ' → logprob: -8.356585502624512

Token 131: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14113515615463257
    2. 'for' (adapté à ' for') → logprob: -2.6411352157592773
    3. '   ' → logprob: -2.8911352157592773
    4. '       ' → logprob: -5.641135215759277
    5. '	for' → logprob: -7.016135215759277
    6. '	   ' → logprob: -9.016135215759277
    7. '    ' → logprob: -9.266135215759277
    8. ' ' → logprob: -9.641135215759277
    9. '<|end|>' → logprob: -10.516135215759277
    10. '	       ' → logprob: -10.641135215759277

Token 132: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.21790556609630585
    2. ' neighbor' → logprob: -1.7179055213928223
    3. 'to' → logprob: -4.592905521392822
    4. ' to' → logprob: -6.217905521392822
    5. 'next' → logprob: -6.342905521392822
    6. ' next' → logprob: -6.342905521392822
    7. '(ne' → logprob: -8.46790599822998
    8. ' (' → logprob: -8.84290599822998
    9. '(' → logprob: -8.96790599822998
    10. '(next' → logprob: -9.09290599822998

Token 133: '_node' (ID: 11390)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028147269040346146
    2. ',_' → logprob: -3.9031472206115723
    3. '_node' → logprob: -5.528147220611572
    4. '_index' → logprob: -6.153147220611572
    5. '_,' → logprob: -6.778147220611572
    6. ',node' → logprob: -8.65314769744873
    7. '_idx' → logprob: -9.77814769744873
    8. ' ,' → logprob: -9.90314769744873
    9. '_id' → logprob: -11.02814769744873
    10. '_neighbor' → logprob: -11.90314769744873

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.829823102336377e-05
    2. ',c' → logprob: -9.75009822845459
    3. ' ,' → logprob: -11.25009822845459
    4. ',d' → logprob: -11.50009822845459
    5. ',value' → logprob: -11.62509822845459
    6. ',length' → logprob: -13.12509822845459
    7. 'cost' → logprob: -13.25009822845459
    8. ',
' → logprob: -14.37509822845459
    9. ',size' → logprob: -14.75009822845459
    10. ',count' → logprob: -14.87509822845459

Token 135: ' neighbor' (ID: 13034)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.28674083948135376
    2. 'edge' → logprob: -2.286740779876709
    3. ' weight' → logprob: -2.661740779876709
    4. ' cost' → logprob: -3.161740779876709
    5. 'weight' → logprob: -3.661740779876709
    6. 'cost' → logprob: -4.661740779876709
    7. 'neighbor' → logprob: -9.661741256713867
    8. ' ' → logprob: -9.786741256713867
    9. ' w' → logprob: -10.036741256713867
    10. ' neighbor' → logprob: -10.661741256713867

Token 136: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0014017868088558316
    2. '_distance' → logprob: -7.251401901245117
    3. '_edge' → logprob: -8.001401901245117
    4. '_value' → logprob: -8.876401901245117
    5. '_weight' → logprob: -9.376401901245117
    6. 'cost' → logprob: -10.126401901245117
    7. '_' → logprob: -10.501401901245117
    8. '_score' → logprob: -11.126401901245117
    9. '_edges' → logprob: -11.876401901245117
    10. ' _' → logprob: -12.001401901245117

Token 137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011080714873969555
    2. 'in' → logprob: -4.511080741882324
    3. ' ' → logprob: -10.886080741882324
    4. '	in' → logprob: -12.386080741882324
    5. '   ' → logprob: -13.136080741882324
    6. ',' → logprob: -13.636080741882324
    7. '    ' → logprob: -13.761080741882324
    8. '  ' → logprob: -14.011080741882324
    9. '_in' → logprob: -14.136080741882324
    10. '<|end|>' → logprob: -14.261080741882324

Token 138: ' neighbors' (ID: 31655)
  Prédit: ' neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbors' → logprob: -0.25193992257118225
    2. 'neighbors' → logprob: -1.5019398927688599
    3. '_neighbors' → logprob: -11.50193977355957
    4. 'neighbor' → logprob: -15.00193977355957
    5. 'Neighbors' → logprob: -15.25193977355957
    6. 'ne' → logprob: -16.25193977355957
    7. ' ' → logprob: -17.62693977355957
    8. ' neighbor' → logprob: -17.75193977355957
    9. 'enumer' → logprob: -17.87693977355957
    10. ' neighbours' → logprob: -18.00193977355957

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003651741426438093
    2. ':
' → logprob: -6.1286516189575195
    3. '       ' → logprob: -7.1286516189575195
    4. '<|end|>' → logprob: -7.6286516189575195
    5. '<|end|>' → logprob: -9.25365161895752
    6. '):' → logprob: -10.25365161895752
    7. '   ' → logprob: -11.75365161895752
    8. ',' → logprob: -11.75365161895752
    9. '):
' → logprob: -12.00365161895752
    10. '           ' → logprob: -12.25365161895752

Token 140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003289297688752413
    2. '       ' → logprob: -7.128289222717285
    3. '<|end|>' → logprob: -7.128289222717285
    4. '            
' → logprob: -7.503289222717285
    5. '               ' → logprob: -7.628289222717285
    6. '            ' → logprob: -8.753289222717285
    7. ' if' → logprob: -9.753289222717285
    8. 'if' → logprob: -9.753289222717285
    9. '        ' → logprob: -10.253289222717285
    10. ')' → logprob: -10.378289222717285

Token 141: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8322490453720093
    2. '               ' → logprob: -1.2072490453720093
    3. 'if' (adapté à ' if') → logprob: -1.3322490453720093
    4. '   ' → logprob: -7.207249164581299
    5. '           ' → logprob: -7.707249164581299
    6. '       ' → logprob: -7.832249164581299
    7. '```' → logprob: -8.33224868774414
    8. '	if' → logprob: -9.08224868774414
    9. ' ' → logprob: -10.70724868774414
    10. '              ' → logprob: -11.45724868774414

Token 142: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.07889353483915329
    2. ' distance' → logprob: -2.5788934230804443
    3. '   ' → logprob: -13.578893661499023
    4. '(distance' → logprob: -13.703893661499023
    5. '               ' → logprob: -14.828893661499023
    6. ' ' → logprob: -15.078893661499023
    7. '           ' → logprob: -15.203893661499023
    8. 'dist' → logprob: -16.578893661499023
    9. '_distance' → logprob: -16.703893661499023
    10. '.distance' → logprob: -16.703893661499023

Token 143: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.9361264946837764e-07
    2. 'array' → logprob: -16.875
    3. '[_' → logprob: -17.125
    4. '_' → logprob: -17.375
    5. '_arrays' → logprob: -18.125
    6. '_ARRAY' → logprob: -18.375
    7. '_arr' → logprob: -18.5
    8. 'Array' → logprob: -19.0
    9. '_Array' → logprob: -19.0
    10. '[' → logprob: -20.25

Token 144: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.0007119550718925893
    2. '[' → logprob: -7.250711917877197
    3. 'current' → logprob: -13.375712394714355
    4. '[node' → logprob: -15.750712394714355
    5. '[
' → logprob: -16.12571144104004
    6. '[curr' → logprob: -17.00071144104004
    7. ' [' → logprob: -17.25071144104004
    8. '[parent' → logprob: -17.25071144104004
    9. '[next' → logprob: -17.37571144104004
    10. ' current' → logprob: -17.37571144104004

Token 145: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00025287605240009725
    2. ']' → logprob: -8.500252723693848
    3. 'node' → logprob: -11.500252723693848
    4. ']_' → logprob: -11.625252723693848
    5. ']==' → logprob: -12.000252723693848
    6. '```' → logprob: -12.375252723693848
    7. '][' → logprob: -12.875252723693848
    8. '[node' → logprob: -13.125252723693848
    9. '])' → logprob: -13.250252723693848
    10. '_index' → logprob: -13.375252723693848

Token 146: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09341356158256531
    2. ' +' → logprob: -2.4684135913848877
    3. '>' → logprob: -6.593413352966309
    4. ')' → logprob: -6.593413352966309
    5. ']' → logprob: -6.593413352966309
    6. '!=' → logprob: -8.968413352966309
    7. ']+' → logprob: -9.218413352966309
    8. '[' → logprob: -9.468413352966309
    9. ' !=' → logprob: -11.343413352966309
    10. ')+' → logprob: -11.343413352966309

Token 147: ' !=' (ID: 1666)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1293487548828125
    2. ' +' → logprob: -2.7543487548828125
    3. '>' → logprob: -2.8793487548828125
    4. '!=' → logprob: -7.0043487548828125
    5. ' >' → logprob: -7.5043487548828125
    6. ' !=' → logprob: -10.504348754882812
    7. '[' → logprob: -11.629348754882812
    8. ' ' → logprob: -12.754348754882812
    9. '-' → logprob: -13.129348754882812
    10. ' ' → logprob: -13.254348754882812

Token 148: ' infinity' (ID: 103156)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0010541265364736319
    2. ' infinity' → logprob: -7.376054286956787
    3. 'float' → logprob: -7.876054286956787
    4. 'inf' → logprob: -10.126053810119629
    5. ' float' → logprob: -12.626053810119629
    6. '.infinity' → logprob: -13.501053810119629
    7. 'None' → logprob: -14.126053810119629
    8. ' infinito' → logprob: -14.876053810119629
    9. '	in' → logprob: -15.501053810119629
    10. 'int' → logprob: -15.501053810119629

Token 149: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -12.375005722045898
    3. 'and' → logprob: -14.750005722045898
    4. ' _' → logprob: -15.125005722045898
    5. '_val' → logprob: -15.375005722045898
    6. ' and' → logprob: -16.3750057220459
    7. 'value' → logprob: -17.0000057220459
    8. '```' → logprob: -17.1250057220459
    9. '_VALUE' → logprob: -18.0000057220459
    10. '_Value' → logprob: -18.1250057220459

Token 150: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1269369274377823
    2. 'and' → logprob: -2.126936912536621
    3. '            ' → logprob: -13.126936912536621
    4. ' ' → logprob: -13.876936912536621
    5. '    ' → logprob: -13.876936912536621
    6. '        ' → logprob: -14.126936912536621
    7. '           ' → logprob: -14.126936912536621
    8. 'a' → logprob: -14.501936912536621
    9. '               ' → logprob: -14.876936912536621
    10. '   ' → logprob: -15.001936912536621

Token 151: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.3868853747844696
    2. 'distance' → logprob: -1.136885404586792
    3. '               ' → logprob: -12.386885643005371
    4. '(distance' → logprob: -12.386885643005371
    5. '           ' → logprob: -13.261885643005371
    6. '                   ' → logprob: -13.636885643005371
    7. '   ' → logprob: -14.011885643005371
    8. ' ' → logprob: -14.636885643005371
    9. ' ' → logprob: -14.886885643005371
    10. '                           ' → logprob: -15.011885643005371

Token 152: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.0280383548888494e-06
    2. 'array' → logprob: -14.250000953674316
    3. 'Array' → logprob: -15.875000953674316
    4. '_arrays' → logprob: -16.375001907348633
    5. '_ARRAY' → logprob: -16.875001907348633
    6. '[_' → logprob: -17.375001907348633
    7. '_Array' → logprob: -18.375001907348633
    8. '_' → logprob: -18.875001907348633
    9. '[' → logprob: -18.875001907348633
    10. '_arr' → logprob: -19.375001907348633

Token 153: '[' (ID: 58)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.0001605115394340828
    2. '[' → logprob: -8.750160217285156
    3. 'current' → logprob: -13.750160217285156
    4. '[node' → logprob: -14.750160217285156
    5. '[next' → logprob: -15.000160217285156
    6. '[parent' → logprob: -15.625160217285156
    7. '[cur' → logprob: -16.625160217285156
    8. ' [' → logprob: -17.500160217285156
    9. '[curr' → logprob: -17.750160217285156
    10. '[
' → logprob: -17.875160217285156

Token 154: 'neighbor' (ID: 108409)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00029506313148885965
    2. 'neighbor' → logprob: -8.50029468536377
    3. '[current' → logprob: -9.87529468536377
    4. ' current' → logprob: -10.50029468536377
    5. '	current' → logprob: -12.00029468536377
    6. '(current' → logprob: -13.62529468536377
    7. '```' → logprob: -13.62529468536377
    8. '
' → logprob: -14.00029468536377
    9. 'node' → logprob: -14.00029468536377
    10. '   ' → logprob: -14.25029468536377

Token 155: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.339278580620885e-06
    2. '[node' → logprob: -14.250001907348633
    3. '```' → logprob: -14.625001907348633
    4. 'node' → logprob: -14.625001907348633
    5. '[' → logprob: -15.250001907348633
    6. 'Node' → logprob: -16.000001907348633
    7. '_cost' → logprob: -16.625001907348633
    8. '_NODE' → logprob: -16.875001907348633
    9. '
' → logprob: -17.000001907348633
    10. '_nodes' → logprob: -17.125001907348633

Token 156: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04897905886173248
    2. ' >' → logprob: -3.0489790439605713
    3. ']' → logprob: -8.173978805541992
    4. ' ' → logprob: -10.298978805541992
    5. ']>' → logprob: -10.298978805541992
    6. ')' → logprob: -10.923978805541992
    7. '">' → logprob: -11.548978805541992
    8. ')>' → logprob: -12.298978805541992
    9. '```' → logprob: -13.298978805541992
    10. '   ' → logprob: -14.173978805541992

Token 157: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.018154270946979523
    2. ' >' → logprob: -4.018154144287109
    3. '">' → logprob: -13.64315414428711
    4. ' ' → logprob: -14.51815414428711
    5. ')' → logprob: -15.01815414428711
    6. '>

' → logprob: -15.39315414428711
    7. ' ' → logprob: -15.64315414428711
    8. ')>' → logprob: -15.76815414428711
    9. '<' → logprob: -15.95565414428711
    10. '```' → logprob: -16.20565414428711

Token 158: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.22545182704925537
    2. 'distance' → logprob: -1.6004518270492554
    3. '   ' → logprob: -10.725451469421387
    4. '(distance' → logprob: -11.975451469421387
    5. ' ' → logprob: -12.350451469421387
    6. '```' → logprob: -13.600451469421387
    7. '
' → logprob: -13.725451469421387
    8. '    ' → logprob: -14.100451469421387
    9. ' ' → logprob: -14.100451469421387
    10. '.distance' → logprob: -14.725451469421387

Token 159: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -2.339278580620885e-06
    2. 'array' → logprob: -13.125001907348633
    3. '[_' → logprob: -15.875001907348633
    4. 'Array' → logprob: -16.375001907348633
    5. '_ARRAY' → logprob: -17.625001907348633
    6. '_arrays' → logprob: -18.125001907348633
    7. '[current' → logprob: -18.625001907348633
    8. '_Array' → logprob: -18.625001907348633
    9. 'rray' → logprob: -18.750001907348633
    10. '_' → logprob: -19.250001907348633

Token 160: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -4.008129963040119e-06
    2. 'current' → logprob: -13.000003814697266
    3. '[' → logprob: -13.875003814697266
    4. '[cur' → logprob: -14.875003814697266
    5. '[
' → logprob: -15.625003814697266
    6. '[curr' → logprob: -16.500003814697266
    7. '```' → logprob: -17.250003814697266
    8. '(current' → logprob: -17.375003814697266
    9. '[node' → logprob: -17.375003814697266
    10. ' [' → logprob: -17.500003814697266

Token 161: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -4.8590300139039755e-05
    2. 'node' → logprob: -10.000048637390137
    3. 'current' → logprob: -14.250048637390137
    4. ']' → logprob: -14.500048637390137
    5. '_token' → logprob: -14.625048637390137
    6. 'Node' → logprob: -14.750048637390137
    7. '```' → logprob: -14.875048637390137
    8. '_NODE' → logprob: -15.250048637390137
    9. '-node' → logprob: -16.37504768371582
    10. ' node' → logprob: -16.50004768371582

Token 162: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.016046686097979546
    2. '+' → logprob: -4.141046524047852
    3. ' plus' → logprob: -11.766046524047852
    4. ' ' → logprob: -13.641046524047852
    5. ' +
' → logprob: -13.641046524047852
    6. ' ' → logprob: -13.766046524047852
    7. ')' → logprob: -14.266046524047852
    8. '```' → logprob: -16.51604652404785
    9. '<|end|>' → logprob: -16.64104652404785
    10. ')+' → logprob: -16.64104652404785

Token 163: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0619816891849041
    2. '+' → logprob: -2.811981678009033
    3. ' plus' → logprob: -11.686982154846191
    4. ' +
' → logprob: -13.061982154846191
    5. ' ' → logprob: -13.186982154846191
    6. 'distance' → logprob: -14.311982154846191
    7. ')' → logprob: -15.686982154846191
    8. '+c' → logprob: -15.811982154846191
    9. ' ' → logprob: -16.561981201171875
    10. 'plus' → logprob: -16.561981201171875

Token 164: ' neighbor' (ID: 13034)
  Prédit: ' neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.2014252245426178
    2. 'neighbor' → logprob: -1.7014251947402954
    3. ' neighbour' → logprob: -12.576425552368164
    4. ' ' → logprob: -13.201425552368164
    5. ' ' → logprob: -13.576425552368164
    6. 'ne' → logprob: -13.576425552368164
    7. '   ' → logprob: -14.451425552368164
    8. '    ' → logprob: -14.576425552368164
    9. '_neighbor' → logprob: -14.701425552368164
    10. '            ' → logprob: -14.951425552368164

Token 165: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -4.961759259458631e-06
    2. 'cost' → logprob: -13.000004768371582
    3. '_COST' → logprob: -14.000004768371582
    4. 'Cost' → logprob: -14.250004768371582
    5. '_' → logprob: -14.875004768371582
    6. '_code' → logprob: -15.250004768371582
    7. '```' → logprob: -16.0000057220459
    8. ' _' → logprob: -16.5000057220459
    9. '-cost' → logprob: -17.0000057220459
    10. '_neighbor' → logprob: -17.0000057220459

Token 166: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4743400514125824
    2. ':' → logprob: -0.9743400812149048
    3. '):
' → logprob: -8.724340438842773
    4. '):' → logprob: -10.599340438842773
    5. ':
' → logprob: -10.724340438842773
    6. '       ' → logprob: -10.724340438842773
    7. ' :
' → logprob: -11.599340438842773
    8. '   ' → logprob: -11.849340438842773
    9. '():
' → logprob: -12.474340438842773
    10. ':

' → logprob: -12.974340438842773

Token 167: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16938307881355286
    2. '                       ' → logprob: -2.9193830490112305
    3. '                   ' → logprob: -3.0443830490112305
    4. ':
' → logprob: -3.6693830490112305
    5. ':' → logprob: -4.7943830490112305
    6. '                               ' → logprob: -4.9193830490112305
    7. '                           ' → logprob: -6.4193830490112305
    8. '                        
' → logprob: -6.4193830490112305
    9. '
' → logprob: -6.5443830490112305
    10. '\n' → logprob: -6.7943830490112305

Token 168: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' (adapté à ' distance') → logprob: -0.6600594520568848
    2. ' distance' → logprob: -0.7850594520568848
    3. '                   ' → logprob: -3.6600594520568848
    4. '
' → logprob: -7.035059452056885
    5. '               ' → logprob: -8.410058975219727
    6. '                       ' → logprob: -9.535058975219727
    7. '                    ' → logprob: -10.285058975219727
    8. '(distance' → logprob: -10.535058975219727
    9. '                    
' → logprob: -10.660058975219727
    10. '```' → logprob: -11.285058975219727

Token 169: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -3.128163257315464e-07
    2. 'array' → logprob: -15.375
    3. '_' → logprob: -17.0
    4. 'Array' → logprob: -17.875
    5. '_arrays' → logprob: -19.0
    6. '_ARRAY' → logprob: -19.125
    7. '_arr' → logprob: -19.125
    8. '_Array' → logprob: -19.25
    9. '[_' → logprob: -19.875
    10. '```' → logprob: -20.875

Token 170: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. '[current' → logprob: -12.87500286102295
    3. '[
' → logprob: -15.62500286102295
    4. '```' → logprob: -15.75000286102295
    5. '[node' → logprob: -16.250003814697266
    6. ' [' → logprob: -17.250003814697266
    7. '[next' → logprob: -17.500003814697266
    8. '[parent' → logprob: -17.625003814697266
    9. ')[' → logprob: -18.750003814697266
    10. '_neighbor' → logprob: -19.000003814697266

Token 171: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -9.088346359931165e-07
    2. ' neighbor' → logprob: -14.125000953674316
    3. 'node' → logprob: -17.125
    4. 'ne' → logprob: -18.375
    5. '_neighbor' → logprob: -18.375
    6. 'ighbor' → logprob: -18.75
    7. '[' → logprob: -18.875
    8. 'current' → logprob: -19.125
    9. '```' → logprob: -19.25
    10. 'friend' → logprob: -19.5

Token 172: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0004201866395305842
    2. '_array' → logprob: -8.125420570373535
    3. '[node' → logprob: -9.250420570373535
    4. '_code' → logprob: -12.125420570373535
    5. '```' → logprob: -12.250420570373535
    6. 'node' → logprob: -12.375420570373535
    7. ']' → logprob: -13.000420570373535
    8. 'array' → logprob: -13.125420570373535
    9. '_index' → logprob: -13.625420570373535
    10. '_' → logprob: -13.625420570373535

Token 173: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246990516781807
    2. '=' → logprob: -3.773247003555298
    3. ']' → logprob: -14.148246765136719
    4. ' =
' → logprob: -14.773246765136719
    5. ')' → logprob: -15.273246765136719
    6. ' ' → logprob: -16.27324676513672
    7. ' =)' → logprob: -17.52324676513672
    8. ']=' → logprob: -17.89824676513672
    9. '.=' → logprob: -17.89824676513672
    10. '＝' → logprob: -18.02324676513672

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750484973192215
    2. '=' → logprob: -3.5297505855560303
    3. ' =
' → logprob: -17.90475082397461
    4. '＝' → logprob: -18.27975082397461
    5. ' ' → logprob: -18.77975082397461
    6. '.=' → logprob: -19.15475082397461
    7. ')' → logprob: -20.27975082397461
    8. ' =)' → logprob: -20.27975082397461
    9. ' =
' → logprob: -20.52975082397461
    10. '>' → logprob: -20.90475082397461

Token 175: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.10020752996206284
    2. 'distance' → logprob: -2.350207567214966
    3. '(distance' → logprob: -15.100207328796387
    4. ' ' → logprob: -15.600207328796387
    5. '    ' → logprob: -16.100208282470703
    6. ' ' → logprob: -16.225208282470703
    7. '   ' → logprob: -16.850208282470703
    8. ' dist' → logprob: -17.100208282470703
    9. 'dist' → logprob: -17.600208282470703
    10. ' distancia' → logprob: -17.725208282470703

Token 176: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -7.896309739408025e-07
    2. 'array' → logprob: -14.750000953674316
    3. '_' → logprob: -16.375
    4. 'Array' → logprob: -16.625
    5. '[_' → logprob: -17.625
    6. '_ARRAY' → logprob: -18.125
    7. '[' → logprob: -18.625
    8. '_Array' → logprob: -18.75
    9. '_arrays' → logprob: -19.125
    10. '[current' → logprob: -19.25

Token 177: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -12.875003814697266
    3. 'current' → logprob: -14.750003814697266
    4. '[
' → logprob: -15.125003814697266
    5. '[node' → logprob: -16.000003814697266
    6. '[cur' → logprob: -16.000003814697266
    7. '[curr' → logprob: -16.250003814697266
    8. '_current' → logprob: -16.875003814697266
    9. '[source' → logprob: -17.625003814697266
    10. '[parent' → logprob: -18.000003814697266

Token 178: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0007305434555746615
    2. '_array' → logprob: -7.250730514526367
    3. '[node' → logprob: -11.375730514526367
    4. 'array' → logprob: -12.750730514526367
    5. ']' → logprob: -13.125730514526367
    6. '_' → logprob: -13.750730514526367
    7. 'node' → logprob: -13.750730514526367
    8. '_value' → logprob: -15.000730514526367
    9. ']_' → logprob: -15.250730514526367
    10. '_cost' → logprob: -15.500730514526367

Token 179: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.016051966696977615
    2. '+' → logprob: -4.141051769256592
    3. ')' → logprob: -12.26605224609375
    4. ' ' → logprob: -12.39105224609375
    5. ' plus' → logprob: -12.39105224609375
    6. '<|end|>' → logprob: -13.39105224609375
    7. ' ' → logprob: -13.76605224609375
    8. ' +
' → logprob: -14.64105224609375
    9. ')+' → logprob: -14.89105224609375
    10. ']' → logprob: -15.26605224609375

Token 180: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889331132173538
    2. '+' → logprob: -2.5788934230804443
    3. ' ' → logprob: -13.328893661499023
    4. '[' → logprob: -14.328893661499023
    5. ' plus' → logprob: -14.453893661499023
    6. ' ' → logprob: -15.078893661499023
    7. ' +
' → logprob: -15.203893661499023
    8. '<|end|>' → logprob: -17.453893661499023
    9. '+
' → logprob: -17.828893661499023
    10. '```' → logprob: -17.953893661499023

Token 181: ' neighbor' (ID: 13034)
  Prédit: ' neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.061976537108421326
    2. 'neighbor' → logprob: -2.811976432800293
    3. ' neighbour' → logprob: -12.311976432800293
    4. '_neighbor' → logprob: -13.186976432800293
    5. ' ' → logprob: -14.061976432800293
    6. ' ' → logprob: -14.936976432800293
    7. 'ne' → logprob: -15.436976432800293
    8. '```' → logprob: -15.686976432800293
    9. ' neighborhood' → logprob: -15.936976432800293
    10. ' space' → logprob: -16.06197738647461

Token 182: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.5776860184123507e-06
    2. 'cost' → logprob: -13.25000286102295
    3. '_' → logprob: -14.75000286102295
    4. '_node' → logprob: -16.125001907348633
    5. '_token' → logprob: -16.250001907348633
    6. '_neighbor' → logprob: -16.500001907348633
    7. 'Cost' → logprob: -17.000001907348633
    8. '_code' → logprob: -17.375001907348633
    9. '_COST' → logprob: -17.375001907348633
    10. '_
' → logprob: -19.000001907348633

Token 183: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008653099648654461
    2. '                   ' → logprob: -5.383653163909912
    3. '
' → logprob: -6.008653163909912
    4. '                
' → logprob: -7.758653163909912
    5. '                ' → logprob: -8.133652687072754
    6. '			' → logprob: -9.008652687072754
    7. '<|end|>' → logprob: -9.008652687072754
    8. '           ' → logprob: -9.383652687072754
    9. '                    
' → logprob: -9.383652687072754
    10. '                       ' → logprob: -9.758652687072754

Token 184: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19210925698280334
    2. '                   ' → logprob: -1.817109227180481
    3. '
' → logprob: -5.067109107971191
    4. ' is' → logprob: -6.317109107971191
    5. '                       ' → logprob: -7.567109107971191
    6. '                ' → logprob: -7.567109107971191
    7. '           ' → logprob: -7.692109107971191
    8. '       ' → logprob: -7.817109107971191
    9. '                    
' → logprob: -7.942109107971191
    10. '                
' → logprob: -8.067109107971191

Token 185: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.013923718594014645
    2. 'True' → logprob: -4.638923645019531
    3. ' is' → logprob: -5.513923645019531
    4. ' True' → logprob: -9.013923645019531
    5. '=True' → logprob: -12.638923645019531
    6. '   ' → logprob: -13.888923645019531
    7. '                   ' → logprob: -13.888923645019531
    8. 'true' → logprob: -14.638923645019531
    9. '               ' → logprob: -15.013923645019531
    10. '
' → logprob: -15.138923645019531

Token 186: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -1.723973582556937e-05
    2. '_' → logprob: -11.500017166137695
    3. 'updated' → logprob: -12.875017166137695
    4. 'Updated' → logprob: -13.250017166137695
    5. '_update' → logprob: -13.625017166137695
    6. '_up' → logprob: -14.250017166137695
    7. '_UPDATED' → logprob: -14.500017166137695
    8. ' _' → logprob: -16.375017166137695
    9. '_created' → logprob: -16.500017166137695
    10. ' Updated' → logprob: -16.500017166137695

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740930497646332
    2. '=' → logprob: -0.9740930795669556
    3. ' ' → logprob: -11.349093437194824
    4. '=True' → logprob: -12.724093437194824
    5. ' =
' → logprob: -15.224093437194824
    6. '<|end|>' → logprob: -15.349093437194824
    7. ')' → logprob: -15.724093437194824
    8. ' ' → logprob: -15.724093437194824
    9. ' |=' → logprob: -16.224092483520508
    10. '[' → logprob: -16.599092483520508

Token 188: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03804149478673935
    2. ' True' → logprob: -3.288041591644287
    3. '(True' → logprob: -18.663042068481445
    4. '=True' → logprob: -20.038042068481445
    5. ' ' → logprob: -20.663042068481445
    6. 'true' → logprob: -20.913042068481445
    7. '_true' → logprob: -21.663042068481445
    8. ' Tru' → logprob: -22.038042068481445
    9. ' ' → logprob: -22.288042068481445
    10. '.True' → logprob: -22.288042068481445

Token 189: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02911224775016308
    2. '\n' → logprob: -5.029112339019775
    3. '<|end|>' → logprob: -5.029112339019775
    4. '   ' → logprob: -5.154112339019775
    5. 'if' → logprob: -5.529112339019775
    6. '    
' → logprob: -5.779112339019775
    7. ' if' → logprob: -6.529112339019775
    8. '  
' → logprob: -7.529112339019775
    9. '' → logprob: -9.029111862182617
    10. '
' → logprob: -9.654111862182617

Token 190: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6240522265434265
    2. 'if' → logprob: -1.3740522861480713
    3. '\n' → logprob: -2.2490522861480713
    4. '   ' → logprob: -2.7490522861480713
    5. ' if' → logprob: -3.6240522861480713
    6. '    
' → logprob: -4.624052047729492
    7. '<|end|>' → logprob: -6.749052047729492
    8. '  
' → logprob: -7.124052047729492
    9. '       ' → logprob: -7.374052047729492
    10. '```' → logprob: -7.499052047729492

Token 191: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12124316394329071
    2. '   ' → logprob: -2.3712432384490967
    3. ' if' → logprob: -3.9962432384490967
    4. '
' → logprob: -6.996243000030518
    5. '	if' → logprob: -7.621243000030518
    6. '    
' → logprob: -7.746243000030518
    7. ' ' → logprob: -8.746243476867676
    8. 'break' → logprob: -9.246243476867676
    9. '<|end|>' → logprob: -9.621243476867676
    10. '  ' → logprob: -9.871243476867676

Token 192: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03807282820343971
    2. 'not' → logprob: -3.2880728244781494
    3. '   ' → logprob: -11.16307258605957
    4. ' ' → logprob: -11.53807258605957
    5. '	not' → logprob: -12.66307258605957
    6. '
' → logprob: -13.53807258605957
    7. 'n' → logprob: -14.53807258605957
    8. ' ' → logprob: -14.53807258605957
    9. '!' → logprob: -14.66307258605957
    10. ' no' → logprob: -15.03807258605957

Token 193: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00317783304490149
    2. 'is' → logprob: -5.753177642822266
    3. ' ' → logprob: -16.878177642822266
    4. '	is' → logprob: -17.128177642822266
    5. ' ' → logprob: -18.378177642822266
    6. '   ' → logprob: -19.628177642822266
    7. '_is' → logprob: -20.378177642822266
    8. '  ' → logprob: -20.753177642822266
    9. ')is' → logprob: -20.753177642822266
    10. '    ' → logprob: -21.378177642822266

Token 194: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -8.895480277715251e-06
    2. 'updated' → logprob: -11.750008583068848
    3. '_up' → logprob: -15.125008583068848
    4. '_' → logprob: -15.125008583068848
    5. '_update' → logprob: -15.875008583068848
    6. 'Updated' → logprob: -15.875008583068848
    7. '_created' → logprob: -17.250009536743164
    8. '_valid' → logprob: -17.875009536743164
    9. '_UPDATED' → logprob: -18.000009536743164
    10. '_used' → logprob: -18.375009536743164

Token 195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16965164244174957
    2. '       ' → logprob: -2.169651746749878
    3. '   ' → logprob: -3.669651746749878
    4. ':
' → logprob: -4.169651508331299
    5. '	break' → logprob: -8.294651985168457
    6. '           ' → logprob: -8.669651985168457
    7. '    ' → logprob: -9.044651985168457
    8. ' break' → logprob: -9.294651985168457
    9. ' :' → logprob: -10.044651985168457
    10. ' ' → logprob: -10.169651985168457

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012963623739778996
    2. '   ' → logprob: -4.387963771820068
    3. ' break' → logprob: -7.887963771820068
    4. 'break' → logprob: -10.38796329498291
    5. '	break' → logprob: -11.01296329498291
    6. '           ' → logprob: -11.63796329498291
    7. '   ' → logprob: -12.01296329498291
    8. '
' → logprob: -12.76296329498291
    9. '	' → logprob: -13.01296329498291
    10. '    ' → logprob: -13.01296329498291

Token 197: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.41181084513664246
    2. '       ' → logprob: -1.4118108749389648
    3. ' break' → logprob: -2.786810874938965
    4. '
' → logprob: -4.161810874938965
    5. '   ' → logprob: -4.536810874938965
    6. '	break' → logprob: -5.286810874938965
    7. '           ' → logprob: -8.286810874938965
    8. '    
' → logprob: -8.661810874938965
    9. '        
' → logprob: -8.661810874938965
    10. '```' → logprob: -9.411810874938965

Token 198: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.169334277510643
    2. 'if' → logprob: -2.2943341732025146
    3. 'for' → logprob: -3.2943341732025146
    4. '
' → logprob: -4.544334411621094
    5. 'max' → logprob: -5.669334411621094
    6. 'else' → logprob: -6.919334411621094
    7. 'distance' → logprob: -7.294334411621094
    8. 'result' → logprob: -7.419334411621094
    9. '#' → logprob: -7.919334411621094
    10. ' for' → logprob: -9.044334411621094

Token 199: 'else' (ID: 2807)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47762903571128845
    2. 'if' → logprob: -1.2276290655136108
    3. 'for' → logprob: -2.6026289463043213
    4. '
' → logprob: -5.4776291847229
    5. 'else' → logprob: -5.8526291847229
    6. 'max' → logprob: -5.9776291847229
    7. 'result' → logprob: -6.8526291847229
    8. 'distance' → logprob: -7.6026291847229
    9. '\n' → logprob: -8.352628707885742
    10. 'answer' → logprob: -9.102628707885742

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037624286487698555
    2. ':
' → logprob: -5.628762245178223
    3. ' :' → logprob: -8.753762245178223
    4. ' :
' → logprob: -13.378762245178223
    5. ':

' → logprob: -14.003762245178223
    6. ':return' → logprob: -14.253762245178223
    7. ':
' → logprob: -14.878762245178223
    8. '[' → logprob: -15.003762245178223
    9. '<|end|>' → logprob: -15.503762245178223
    10. ',' → logprob: -16.62876319885254

Token 201: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02275233156979084
    2. ' print' → logprob: -4.272752285003662
    3. 'distance' → logprob: -5.397752285003662
    4. '   ' → logprob: -5.647752285003662
    5. '-' → logprob: -8.27275276184082
    6. ' distance' → logprob: -8.52275276184082
    7. ' -' → logprob: -11.27275276184082
    8. '0' → logprob: -12.39775276184082
    9. '```' → logprob: -12.52275276184082
    10. '#' → logprob: -13.02275276184082

Token 202: ' previous' (ID: 5880)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004571700002998114
    2. '   ' → logprob: -5.504571914672852
    3. '-' → logprob: -8.504571914672852
    4. 'distance' → logprob: -8.754571914672852
    5. ' print' → logprob: -9.254571914672852
    6. '    
' → logprob: -11.879571914672852
    7. '  ' → logprob: -12.129571914672852
    8. 'pass' → logprob: -12.254571914672852
    9. '```' → logprob: -12.754571914672852
    10. ' ' → logprob: -12.879571914672852

Token 203: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -1.0740177631378174
    2. '_node' → logprob: -1.6990177631378174
    3. '_line' → logprob: -2.1990177631378174
    4. 'ly' → logprob: -2.6990177631378174
    5. 'print' → logprob: -2.6990177631378174
    6. '_' → logprob: -2.8240177631378174
    7. 'distance' → logprob: -3.3240177631378174
    8. 'node' → logprob: -3.9490177631378174
    9. '-' → logprob: -3.9490177631378174
    10. '[node' → logprob: -3.9490177631378174

Token 204: ' =' (ID: 314)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.4608779549598694
    2. 's' → logprob: -1.4608778953552246
    3. ' =' → logprob: -2.3358778953552246
    4. '=' → logprob: -3.4608778953552246
    5. '[' → logprob: -5.710877895355225
    6. 'es' → logprob: -6.710877895355225
    7. 'array' → logprob: -6.835877895355225
    8. '=[]' → logprob: -7.710877895355225
    9. '_' → logprob: -7.835877895355225
    10. '[]' → logprob: -8.210878372192383

Token 205: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.22898641228675842
    2. '[]' → logprob: -2.4789865016937256
    3. '[' → logprob: -2.9789865016937256
    4. 'float' → logprob: -3.4789865016937256
    5. 'None' → logprob: -3.8539865016937256
    6. '0' → logprob: -5.2289862632751465
    7. '[]
' → logprob: -5.8539862632751465
    8. '[in' → logprob: -5.9789862632751465
    9. '[-' → logprob: -6.3539862632751465
    10. 'in' → logprob: -6.4789862632751465

Token 206: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.00010914575977949426
    2. 'array' → logprob: -9.50010871887207
    3. '_value' → logprob: -10.75010871887207
    4. 'Array' → logprob: -12.62510871887207
    5. 's' → logprob: -12.75010871887207
    6. '[' → logprob: -13.37510871887207
    7. '_' → logprob: -13.75010871887207
    8. 'value' → logprob: -15.00010871887207
    9. '[-' → logprob: -15.00010871887207
    10. '```' → logprob: -15.25010871887207

Token 207: '[-' (ID: 17503)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.4451887905597687
    2. '<|end|>' → logprob: -1.0701887607574463
    3. '[' → logprob: -4.820188999176025
    4. '.copy' → logprob: -5.195188999176025
    5. '[-' → logprob: -6.945188999176025
    6. '[:' → logprob: -7.320188999176025
    7. '=' → logprob: -8.070188522338867
    8. '[:-' → logprob: -8.695188522338867
    9. '<|end|>' → logprob: -8.945188522338867
    10. '[]' → logprob: -9.445188522338867

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008111746865324676
    2. '2' → logprob: -7.1258111000061035
    3. ' ' → logprob: -12.625811576843262
    4. '10' → logprob: -13.875811576843262
    5. '100' → logprob: -14.000811576843262
    6. '5' → logprob: -15.375811576843262
    7. '3' → logprob: -15.625811576843262
    8. '   ' → logprob: -15.625811576843262
    9. '```' → logprob: -15.938311576843262
    10. '999' → logprob: -16.125810623168945

Token 209: ']
' (ID: 1592)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8853315114974976
    2. ' <' → logprob: -1.3853315114974976
    3. ' >' → logprob: -1.5103315114974976
    4. '<|end|>' → logprob: -3.510331630706787
    5. '==' → logprob: -3.885331630706787
    6. ' !=' → logprob: -4.385331630706787
    7. ' -' → logprob: -4.635331630706787
    8. '[' → logprob: -4.635331630706787
    9. '>' → logprob: -4.885331630706787
    10. '<' → logprob: -5.135331630706787

Token 210: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42015790939331055
    2. 'if' → logprob: -1.9201579093933105
    3. 'distance' → logprob: -2.1701579093933105
    4. '   ' → logprob: -2.7951579093933105
    5. 'for' → logprob: -5.0451579093933105
    6. 'previous' → logprob: -5.1701579093933105
    7. '-' → logprob: -5.7951579093933105
    8. ' if' → logprob: -6.4201579093933105
    9. ' print' → logprob: -7.5451579093933105
    10. 'while' → logprob: -7.7951579093933105

Token 211: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5816833972930908
    2. 'print' → logprob: -1.2066833972930908
    3. 'distance' → logprob: -2.206683397293091
    4. 'for' (adapté à ' for') → logprob: -3.956683397293091
    5. 'while' → logprob: -5.081683158874512
    6. '   ' → logprob: -5.581683158874512
    7. 'previous' → logprob: -6.831683158874512
    8. 'is' → logprob: -7.581683158874512
    9. ' if' → logprob: -8.331683158874512
    10. 'raise' → logprob: -8.331683158874512

Token 212: ' _' (ID: 1175)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6192713379859924
    2. '_' → logprob: -1.6192712783813477
    3. 'neighbor' → logprob: -1.6192712783813477
    4. ' current' → logprob: -3.2442712783813477
    5. ' neighbor' → logprob: -4.869271278381348
    6. '_current' → logprob: -5.369271278381348
    7. '_neighbor' → logprob: -5.369271278381348
    8. 'node' → logprob: -6.119271278381348
    9. ' _' → logprob: -6.244271278381348
    10. 'i' → logprob: -6.619271278381348

Token 213: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14271681010723114
    2. 'in' → logprob: -2.017716884613037
    3. ' ' → logprob: -10.767716407775879
    4. 'count' → logprob: -12.267716407775879
    5. 'range' → logprob: -12.892716407775879
    6. '<|end|>' → logprob: -13.017716407775879
    7. 'distance' → logprob: -13.392716407775879
    8. '  ' → logprob: -13.517716407775879
    9. ',' → logprob: -13.642716407775879
    10. 'i' → logprob: -14.267716407775879

Token 214: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.013561930507421494
    2. ' range' → logprob: -4.388561725616455
    3. 're' → logprob: -7.888561725616455
    4. 'distance' → logprob: -8.013562202453613
    5. 'adj' → logprob: -8.638562202453613
    6. '_' → logprob: -9.638562202453613
    7. 'reverse' → logprob: -11.263562202453613
    8. '(range' → logprob: -11.513562202453613
    9. '...' → logprob: -11.638562202453613
    10. '[' → logprob: -11.763562202453613

Token 215: '(node' (ID: 13356)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0003884894831571728
    2. '100' → logprob: -9.125388145446777
    3. 'edge' → logprob: -9.250388145446777
    4. '(node' → logprob: -9.375388145446777
    5. '10' → logprob: -10.750388145446777
    6. ' node' → logprob: -10.750388145446777
    7. '50' → logprob: -11.625388145446777
    8. '2' → logprob: -11.750388145446777
    9. 'n' → logprob: -11.750388145446777
    10. '3' → logprob: -12.375388145446777

Token 216: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0004245972086209804
    2. '_node' → logprob: -9.3754243850708
    3. 'node' → logprob: -9.6254243850708
    4. '_edge' → logprob: -9.6254243850708
    5. 'count' → logprob: -10.0004243850708
    6. ')' → logprob: -10.1254243850708
    7. '_' → logprob: -10.2504243850708
    8. '   ' → logprob: -11.1254243850708
    9. '
' → logprob: -11.2504243850708
    10. ' ' → logprob: -11.6254243850708

Token 217: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6436794400215149
    2. '-' → logprob: -1.1436793804168701
    3. '):
' → logprob: -2.14367938041687
    4. ' -' → logprob: -3.51867938041687
    5. '   ' → logprob: -5.518679618835449
    6. ':' → logprob: -5.518679618835449
    7. ')' → logprob: -7.768679618835449
    8. '*' → logprob: -8.39367961883545
    9. '<|end|>' → logprob: -9.01867961883545
    10. ':
' → logprob: -9.89367961883545

Token 218: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04336008056998253
    2. '       ' → logprob: -3.1683599948883057
    3. ' for' → logprob: -8.918359756469727
    4. '<|end|>' → logprob: -9.793359756469727
    5. ' if' → logprob: -10.418359756469727
    6. '
' → logprob: -10.543359756469727
    7. '```' → logprob: -10.793359756469727
    8. 'for' → logprob: -10.793359756469727
    9. '    
' → logprob: -11.418359756469727
    10. '    ' → logprob: -11.793359756469727

Token 219: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21234926581382751
    2. 'for' → logprob: -1.83734929561615
    3. '       ' → logprob: -3.8373491764068604
    4. ' for' → logprob: -5.2123494148254395
    5. 'distance' → logprob: -5.4623494148254395
    6. '           ' → logprob: -8.462348937988281
    7. '	for' → logprob: -8.462348937988281
    8. 'is' (adapté à ' is') → logprob: -8.712348937988281
    9. 'previous' → logprob: -9.712348937988281
    10. 'current' → logprob: -9.712348937988281

Token 220: '_negative' (ID: 134489)
  Prédit: '_updated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_updated' → logprob: -4.8590300139039755e-05
    2. 'updated' → logprob: -10.250048637390137
    3. 'Updated' → logprob: -11.625048637390137
    4. '_' → logprob: -13.125048637390137
    5. '_UPDATED' → logprob: -13.375048637390137
    6. ' updated' → logprob: -15.625048637390137
    7. ' Updated' → logprob: -16.00004768371582
    8. '_initialized' → logprob: -16.12504768371582
    9. '   ' → logprob: -17.12504768371582
    10. 's' → logprob: -17.12504768371582

Token 221: '_updated' (ID: 80508)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11134843528270721
    2. '<|end|>' → logprob: -2.3613483905792236
    3. '_cycle' → logprob: -4.986348628997803
    4. '_updated' → logprob: -6.486348628997803
    5. '_update' → logprob: -7.986348628997803
    6. '=True' → logprob: -8.361348152160645
    7. '_edge' → logprob: -8.611348152160645
    8. '_cost' → logprob: -8.611348152160645
    9. '<|end|>' → logprob: -8.611348152160645
    10. ')' → logprob: -8.736348152160645

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07026106864213943
    2. '=' → logprob: -2.695261001586914
    3. ' ' → logprob: -9.195261001586914
    4. '<|end|>' → logprob: -9.320261001586914
    5. '_' → logprob: -9.820261001586914
    6. '=True' → logprob: -10.445261001586914
    7. '=False' → logprob: -11.320261001586914
    8. '   ' → logprob: -11.320261001586914
    9. '    ' → logprob: -12.445261001586914
    10. '  ' → logprob: -12.570261001586914

Token 223: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0019405345665290952
    2. ' False' → logprob: -6.251940727233887
    3. 'True' → logprob: -11.376940727233887
    4. '_false' → logprob: -16.37693977355957
    5. '=False' → logprob: -16.62693977355957
    6. ' True' → logprob: -16.87693977355957
    7. '(False' → logprob: -17.50193977355957
    8. '.False' → logprob: -17.62693977355957
    9. 'false' → logprob: -18.37693977355957
    10. '
' → logprob: -18.87693977355957

Token 224: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46301138401031494
    2. '   ' → logprob: -1.338011384010315
    3. '<|end|>' → logprob: -2.4630112648010254
    4. ' for' → logprob: -4.088011264801025
    5. '	for' → logprob: -6.838011264801025
    6. '
' → logprob: -7.088011264801025
    7. '<|end|>' → logprob: -7.213011264801025
    8. ' ' → logprob: -7.338011264801025
    9. '           ' → logprob: -7.463011264801025
    10. 'for' → logprob: -7.963011264801025

Token 226: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.48520421981811523
    2. ' for' → logprob: -0.9852042198181152
    3. '   ' → logprob: -4.610204219818115
    4. '       ' → logprob: -7.110204219818115
    5. '	for' → logprob: -8.235204696655273
    6. ' ' → logprob: -10.485204696655273
    7. '  ' → logprob: -13.985204696655273
    8. '
' → logprob: -13.985204696655273
    9. '<|end|>' → logprob: -13.985204696655273
    10. '```' → logprob: -14.485204696655273

Token 227: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2519315779209137
    2. ' current' → logprob: -1.5019315481185913
    3. '(current' → logprob: -14.626931190490723
    4. '	current' → logprob: -14.876931190490723
    5. 'urrent' → logprob: -15.126931190490723
    6. 'cur' → logprob: -15.126931190490723
    7. ',current' → logprob: -15.501931190490723
    8. 'node' → logprob: -15.626931190490723
    9. ',' → logprob: -16.12693214416504
    10. ' ' → logprob: -16.25193214416504

Token 228: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -7.076218025758862e-05
    2. '_' → logprob: -10.500070571899414
    3. ' _' → logprob: -10.875070571899414
    4. '_token' → logprob: -11.250070571899414
    5. '_user' → logprob: -12.625070571899414
    6. '_nodes' → logprob: -13.000070571899414
    7. '_code' → logprob: -13.750070571899414
    8. '_n' → logprob: -14.000070571899414
    9. 'node' → logprob: -14.250070571899414
    10. ',' → logprob: -14.500070571899414

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ' ,' → logprob: -12.500004768371582
    3. ',
' → logprob: -15.375004768371582
    4. ',node' → logprob: -15.500004768371582
    5. '‌,' → logprob: -15.750004768371582
    6. '<|end|>' → logprob: -16.250003814697266
    7. ',current' → logprob: -16.875003814697266
    8. ',n' → logprob: -16.875003814697266
    9. ' in' → logprob: -17.750003814697266
    10. 'in' → logprob: -17.875003814697266

Token 230: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.2519463300704956
    2. ' neighbors' → logprob: -1.5019463300704956
    3. '_neighbors' → logprob: -11.751946449279785
    4. 'neighbor' → logprob: -12.751946449279785
    5. 'ne' → logprob: -13.251946449279785
    6. ' ' → logprob: -13.626946449279785
    7. '```' → logprob: -14.251946449279785
    8. '   ' → logprob: -14.251946449279785
    9. 'adj' → logprob: -14.626946449279785
    10. ' neighbours' → logprob: -14.751946449279785

Token 231: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018171953037381172
    2. 'in' → logprob: -4.018171787261963
    3. ' ' → logprob: -11.893172264099121
    4. ',' → logprob: -12.518172264099121
    5. '<|end|>' → logprob: -12.643172264099121
    6. '	in' → logprob: -12.893172264099121
    7. '```' → logprob: -13.518172264099121
    8. '   ' → logprob: -13.768172264099121
    9. 's' → logprob: -14.143172264099121
    10. 'import' → logprob: -14.518172264099121

Token 232: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.029750952497124672
    2. ' enumerate' → logprob: -3.5297510623931885
    3. '.enumer' → logprob: -15.65475082397461
    4. '```' → logprob: -16.27975082397461
    5. ' enumer' → logprob: -16.77975082397461
    6. 'enum' → logprob: -16.77975082397461
    7. 'en' → logprob: -17.65475082397461
    8. 'enqueue' → logprob: -17.77975082397461
    9. ' ' → logprob: -17.90475082397461
    10. 'range' → logprob: -18.65475082397461

Token 233: '(ad' (ID: 36787)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.13908222317695618
    2. '(ad' → logprob: -2.639082193374634
    3. ' adjacency' → logprob: -2.889082193374634
    4. 'ad' → logprob: -5.889082431793213
    5. '(adj' → logprob: -11.889081954956055
    6. ' adj' → logprob: -12.139081954956055
    7. '.ad' → logprob: -13.264081954956055
    8. '_ad' → logprob: -13.264081954956055
    9. ' (' → logprob: -14.264081954956055
    10. ')' → logprob: -14.264081954956055

Token 234: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.0002096197713399306
    2. 'acency' → logprob: -8.75020980834961
    3. 'j' → logprob: -10.37520980834961
    4. 'adj' → logprob: -10.87520980834961
    5. ' adjacency' → logprob: -14.50020980834961
    6. 'yac' → logprob: -16.50020980834961
    7. '_j' → logprob: -16.50020980834961
    8. 'junction' → logprob: -17.62520980834961
    9. 'ja' → logprob: -17.75020980834961
    10. 'Jac' → logprob: -17.87520980834961

Token 235: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.7249179482460022
    2. 'acency' → logprob: -0.9749179482460022
    3. '_list' → logprob: -2.7249178886413574
    4. 'y' → logprob: -3.5999178886413574
    5. 'list' → logprob: -3.9749178886413574
    6. 'cy' → logprob: -4.224917888641357
    7. 'acy' → logprob: -4.724917888641357
    8. 'List' → logprob: -7.224917888641357
    9. ' adjacency' → logprob: -7.224917888641357
    10. 'adj' → logprob: -7.974917888641357

Token 236: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.006364451255649328
    2. '):' → logprob: -5.131364345550537
    3. '):
' → logprob: -7.881364345550537
    4. 'list' → logprob: -10.881364822387695
    5. ':' → logprob: -11.256364822387695
    6. 'List' → logprob: -11.631364822387695
    7. '[' → logprob: -12.256364822387695
    8. ')' → logprob: -12.631364822387695
    9. '_lists' → logprob: -13.256364822387695
    10. 'adj' → logprob: -13.381364822387695

Token 237: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21800796687602997
    2. '):
' → logprob: -1.7180079221725464
    3. ':' → logprob: -4.343008041381836
    4. '       ' → logprob: -6.093008041381836
    5. '   ' → logprob: -8.218008041381836
    6. '<|end|>' → logprob: -8.218008041381836
    7. '):
' → logprob: -8.468008041381836
    8. ':
' → logprob: -8.593008041381836
    9. '```' → logprob: -9.343008041381836
    10. '           ' → logprob: -10.218008041381836

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001601539261173457
    2. '<|end|>' → logprob: -9.500160217285156
    3. '	       ' → logprob: -9.875160217285156
    4. '       ' → logprob: -11.875160217285156
    5. '<|end|>' → logprob: -12.125160217285156
    6. ':' → logprob: -12.250160217285156
    7. '               ' → logprob: -12.625160217285156
    8. ':
' → logprob: -13.000160217285156
    9. '		' → logprob: -13.250160217285156
    10. '                   ' → logprob: -13.500160217285156

Token 239: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14559271931648254
    2. 'for' (adapté à ' for') → logprob: -2.27059268951416
    3. '           ' → logprob: -3.64559268951416
    4. ' for' → logprob: -5.14559268951416
    5. '       ' → logprob: -9.14559268951416
    6. '	       ' → logprob: -9.39559268951416
    7. '   ' → logprob: -9.77059268951416
    8. '	for' → logprob: -11.52059268951416
    9. '		       ' → logprob: -11.77059268951416
    10. '	           ' → logprob: -12.14559268951416

Token 240: ' neighbor' (ID: 13034)
  Prédit: ' neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.25193139910697937
    2. 'neighbor' → logprob: -1.5019314289093018
    3. ' neighbour' → logprob: -14.126931190490723
    4. '_neighbor' → logprob: -14.251931190490723
    5. ' ' → logprob: -15.626931190490723
    6. '   ' → logprob: -16.12693214416504
    7. ' neighboring' → logprob: -16.37693214416504
    8. 'Neighbor' → logprob: -16.37693214416504
    9. 'ne' → logprob: -16.50193214416504
    10. '```' → logprob: -16.87693214416504

Token 241: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.4121114822482923e-06
    2. '_nodes' → logprob: -13.250003814697266
    3. '_token' → logprob: -14.750003814697266
    4. '_user' → logprob: -14.750003814697266
    5. '_code' → logprob: -15.875003814697266
    6. '```' → logprob: -15.875003814697266
    7. '_NODE' → logprob: -16.625003814697266
    8. '
' → logprob: -16.625003814697266
    9. '_n' → logprob: -16.625003814697266
    10. ',' → logprob: -17.000003814697266

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.27099974633893e-05
    2. ' ,' → logprob: -11.375012397766113
    3. ',
' → logprob: -14.875012397766113
    4. '<|end|>' → logprob: -15.250012397766113
    5. '           ' → logprob: -15.750012397766113
    6. '‌,' → logprob: -16.50001335144043
    7. ',n' → logprob: -16.87501335144043
    8. '```' → logprob: -16.87501335144043
    9. ',user' → logprob: -17.62501335144043
    10. '_,' → logprob: -17.75001335144043

Token 243: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.1269608736038208
    2. ' neighbor' → logprob: -2.1269607543945312
    3. 'neighbors' → logprob: -10.501960754394531
    4. ' neighbors' → logprob: -13.376960754394531
    5. 'ne' → logprob: -14.126960754394531
    6. '_neighbor' → logprob: -14.251960754394531
    7. '
' → logprob: -14.501960754394531
    8. '(ne' → logprob: -14.626960754394531
    9. ' ' → logprob: -15.751960754394531
    10. '```' → logprob: -15.751960754394531

Token 244: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.953082341467962e-05
    2. 'cost' → logprob: -10.250039100646973
    3. '_' → logprob: -14.125039100646973
    4. '_COST' → logprob: -14.125039100646973
    5. 'Cost' → logprob: -14.250039100646973
    6. '_co' → logprob: -15.000039100646973
    7. ' _' → logprob: -15.375039100646973
    8. '
' → logprob: -15.375039100646973
    9. '_cos' → logprob: -15.750039100646973
    10. ',_' → logprob: -15.875039100646973

Token 245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002808917546644807
    2. 'in' → logprob: -5.877809047698975
    3. '               ' → logprob: -13.877808570861816
    4. '           ' → logprob: -14.002808570861816
    5. '            ' → logprob: -14.377808570861816
    6. '```' → logprob: -15.002808570861816
    7. '	in' → logprob: -15.252808570861816
    8. ' ' → logprob: -15.377808570861816
    9. '                ' → logprob: -16.002809524536133
    10. ',' → logprob: -16.002809524536133

Token 246: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0002619318547658622
    2. ' neighbors' → logprob: -8.250262260437012
    3. 'neighbor' → logprob: -15.000262260437012
    4. '
' → logprob: -16.500261306762695
    5. '_neighbors' → logprob: -16.875261306762695
    6. '[' → logprob: -17.000261306762695
    7. 'ne' → logprob: -17.250261306762695
    8. '```' → logprob: -17.375261306762695
    9. '(ne' → logprob: -17.875261306762695
    10. '
' → logprob: -18.250261306762695

Token 247: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15478555858135223
    2. ':' → logprob: -2.154785633087158
    3. ':
' → logprob: -3.654785633087158
    4. '           ' → logprob: -7.529785633087158
    5. '<|end|>' → logprob: -8.40478515625
    6. '              ' → logprob: -8.52978515625
    7. '                ' → logprob: -8.90478515625
    8. '                   ' → logprob: -9.02978515625
    9. '):
' → logprob: -9.90478515625
    10. ',' → logprob: -10.02978515625

Token 248: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001020663301460445
    2. '                ' → logprob: -7.751020431518555
    3. '<|end|>' → logprob: -8.251020431518555
    4. '                   ' → logprob: -9.126020431518555
    5. '              ' → logprob: -9.876020431518555
    6. ':' → logprob: -9.876020431518555
    7. '           ' → logprob: -10.626020431518555
    8. '                       ' → logprob: -11.001020431518555
    9. '                               ' → logprob: -11.501020431518555
    10. ' if' → logprob: -11.501020431518555

Token 249: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9429529309272766
    2. '                   ' → logprob: -0.9429529309272766
    3. '               ' → logprob: -1.8179528713226318
    4. 'if' (adapté à ' if') → logprob: -2.942952871322632
    5. '                ' → logprob: -6.067953109741211
    6. '   ' → logprob: -6.942953109741211
    7. '           ' → logprob: -7.192953109741211
    8. '                       ' → logprob: -7.817953109741211
    9. '                    ' → logprob: -8.192953109741211
    10. '                 ' → logprob: -8.442953109741211

Token 250: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.47408005595207214
    2. 'distance' → logprob: -0.9740800857543945
    3. '(distance' → logprob: -13.599080085754395
    4. '               ' → logprob: -13.974080085754395
    5. '                   ' → logprob: -15.099080085754395
    6. '   ' → logprob: -15.474080085754395
    7. '           ' → logprob: -15.724080085754395
    8. ' ' → logprob: -16.099079132080078
    9. '.distance' → logprob: -16.474079132080078
    10. '距离' → logprob: -17.599079132080078

Token 251: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -7.896309739408025e-07
    2. 'array' → logprob: -14.375000953674316
    3. 'Array' → logprob: -16.625
    4. '_arrays' → logprob: -18.5
    5. '_ARRAY' → logprob: -19.0
    6. '
' → logprob: -19.375
    7. '```' → logprob: -19.625
    8. '[' → logprob: -19.625
    9. '_' → logprob: -19.875
    10. '_arr' → logprob: -20.125

Token 252: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -9.949026571121067e-05
    2. '[' → logprob: -9.250099182128906
    3. 'current' → logprob: -12.750099182128906
    4. '```' → logprob: -15.750099182128906
    5. '[
' → logprob: -16.500099182128906
    6. '[node' → logprob: -16.625099182128906
    7. ' [' → logprob: -17.000099182128906
    8. '[curr' → logprob: -17.000099182128906
    9. '[parent' → logprob: -17.125099182128906
    10. '[cur' → logprob: -17.375099182128906

Token 253: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.015571007505059242
    2. '[current' → logprob: -4.890571117401123
    3. 'current' → logprob: -5.015571117401123
    4. '[node' → logprob: -7.515571117401123
    5. '_array' → logprob: -8.140570640563965
    6. '```' → logprob: -8.890570640563965
    7. '_cost' → logprob: -9.890570640563965
    8. '_count' → logprob: -10.015570640563965
    9. '_current' → logprob: -10.140570640563965
    10. 'node' → logprob: -10.640570640563965

Token 254: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0736561045050621
    2. '!=' → logprob: -2.6986560821533203
    3. ']' → logprob: -5.69865608215332
    4. ')' → logprob: -9.19865608215332
    5. ']!=' → logprob: -9.19865608215332
    6. '[' → logprob: -9.82365608215332
    7. '!=-' → logprob: -10.44865608215332
    8. ' is' → logprob: -11.19865608215332
    9. '+' → logprob: -11.19865608215332
    10. '```' → logprob: -11.32365608215332

Token 255: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.25204285979270935
    2. '!=' → logprob: -1.5020428895950317
    3. '+' → logprob: -10.127042770385742
    4. ' +' → logprob: -10.627042770385742
    5. ' is' → logprob: -10.752042770385742
    6. '!=-' → logprob: -12.002042770385742
    7. '==' → logprob: -12.377042770385742
    8. ' ==' → logprob: -12.377042770385742
    9. '[' → logprob: -13.252042770385742
    10. ' ' → logprob: -13.377042770385742

Token 256: ' infinity' (ID: 103156)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.010618575848639011
    2. ' infinity' → logprob: -4.760618686676025
    3. 'float' → logprob: -6.260618686676025
    4. ' float' → logprob: -9.760618209838867
    5. 'inf' → logprob: -11.385618209838867
    6. ' infinito' → logprob: -12.010618209838867
    7. '.infinity' → logprob: -12.260618209838867
    8. '[in' → logprob: -13.635618209838867
    9. '_INFINITY' → logprob: -13.635618209838867
    10. '-in' → logprob: -13.635618209838867

Token 257: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.750000953674316
    3. 'value' → logprob: -16.375
    4. ' _' → logprob: -16.875
    5. '```' → logprob: -17.25
    6. 'Value' → logprob: -17.5
    7. '_VALUE' → logprob: -17.875
    8. '_values' → logprob: -18.0
    9. '_Value' → logprob: -18.375
    10. '`' → logprob: -19.5

Token 258: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10020732134580612
    2. 'and' → logprob: -2.3502073287963867
    3. ' ' → logprob: -16.10020637512207
    4. '            ' → logprob: -16.35020637512207
    5. '                ' → logprob: -16.85020637512207
    6. '	and' → logprob: -16.97520637512207
    7. '    ' → logprob: -17.10020637512207
    8. '        ' → logprob: -17.10020637512207
    9. ' ' → logprob: -17.10020637512207
    10. 'a' → logprob: -17.35020637512207

Token 259: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.07889407873153687
    2. 'distance' → logprob: -2.5788941383361816
    3. '(distance' → logprob: -12.578893661499023
    4. '               ' → logprob: -15.828893661499023
    5. '.distance' → logprob: -16.078893661499023
    6. ' ' → logprob: -16.078893661499023
    7. '                   ' → logprob: -16.328893661499023
    8. 'Distance' → logprob: -16.578893661499023
    9. '                ' → logprob: -17.078893661499023
    10. '
' → logprob: -17.203893661499023

Token 260: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.3425219549390022e-05
    2. 'array' → logprob: -11.37501335144043
    3. '[' → logprob: -13.50001335144043
    4. 'Array' → logprob: -14.87501335144043
    5. '_ARRAY' → logprob: -18.12501335144043
    6. '[_' → logprob: -18.12501335144043
    7. '```' → logprob: -18.25001335144043
    8. '[node' → logprob: -18.75001335144043
    9. '_arrays' → logprob: -18.75001335144043
    10. '_' → logprob: -18.87501335144043

Token 261: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.723352049040841e-06
    2. '[
' → logprob: -13.625004768371582
    3. '[current' → logprob: -14.000004768371582
    4. '```' → logprob: -14.625004768371582
    5. ' [' → logprob: -14.750004768371582
    6. '[next' → logprob: -15.125004768371582
    7. 'neighbor' → logprob: -15.750004768371582
    8. '
' → logprob: -15.750004768371582
    9. '           ' → logprob: -15.875004768371582
    10. '[parent' → logprob: -16.125003814697266

Token 262: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0008082019630819559
    2. '[' → logprob: -7.125808238983154
    3. ' neighbor' → logprob: -13.000807762145996
    4. 'distance' → logprob: -14.500807762145996
    5. 'current' → logprob: -15.250807762145996
    6. '
' → logprob: -15.625807762145996
    7. '```' → logprob: -15.625807762145996
    8. '[current' → logprob: -15.875807762145996
    9. '[
' → logprob: -16.125808715820312
    10. '(ne' → logprob: -16.750808715820312

Token 263: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -9.29340603761375e-05
    2. '[' → logprob: -10.375092506408691
    3. '[node' → logprob: -10.875092506408691
    4. '_neighbor' → logprob: -10.875092506408691
    5. 'neighbor' → logprob: -11.250092506408691
    6. '_array' → logprob: -12.750092506408691
    7. '_cost' → logprob: -13.125092506408691
    8. 'Node' → logprob: -13.250092506408691
    9. 'node' → logprob: -13.625092506408691
    10. '```' → logprob: -13.750092506408691

Token 264: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06996133178472519
    2. '>' → logprob: -2.6949613094329834
    3. ' ' → logprob: -10.944961547851562
    4. ' >
' → logprob: -12.819961547851562
    5. ' >
' → logprob: -13.944961547851562
    6. '   ' → logprob: -14.444961547851562
    7. '```' → logprob: -14.569961547851562
    8. '>
' → logprob: -14.694961547851562
    9. '">' → logprob: -15.694961547851562
    10. ')' → logprob: -15.694961547851562

Token 265: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17985019087791443
    2. '>' → logprob: -1.8048502206802368
    3. ' ' → logprob: -9.929850578308105
    4. ' >
' → logprob: -10.429850578308105
    5. '>
' → logprob: -11.179850578308105
    6. ' >
' → logprob: -12.679850578308105
    7. '```' → logprob: -13.429850578308105
    8. '   ' → logprob: -13.554850578308105
    9. ' >

' → logprob: -13.679850578308105
    10. ' <' → logprob: -14.054850578308105

Token 266: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.5759463906288147
    2. ' distance' → logprob: -0.8259463906288147
    3. '(distance' → logprob: -12.325946807861328
    4. '```' → logprob: -14.200946807861328
    5. ' ' → logprob: -15.200946807861328
    6. '   ' → logprob: -15.325946807861328
    7. '0' → logprob: -15.325946807861328
    8. 'Distance' → logprob: -15.325946807861328
    9. '
' → logprob: -15.450946807861328
    10. '.distance' → logprob: -15.950946807861328

Token 267: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.002209854545071721
    2. '[current' → logprob: -6.127209663391113
    3. 'array' → logprob: -11.002209663391113
    4. '[' → logprob: -13.002209663391113
    5. '[_' → logprob: -13.377209663391113
    6. 'Array' → logprob: -13.627209663391113
    7. '[node' → logprob: -13.752209663391113
    8. 'current' → logprob: -14.502209663391113
    9. '```' → logprob: -14.877209663391113
    10. '_[' → logprob: -15.002209663391113

Token 268: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.6240566083070007e-06
    2. 'current' → logprob: -13.625001907348633
    3. '[' → logprob: -15.250001907348633
    4. '[cur' → logprob: -16.750001907348633
    5. '[
' → logprob: -16.750001907348633
    6. '[node' → logprob: -16.875001907348633
    7. 'distance' → logprob: -17.750001907348633
    8. '```' → logprob: -18.000001907348633
    9. '
' → logprob: -18.125001907348633
    10. '[curr' → logprob: -18.625001907348633

Token 269: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.011867834255099297
    2. '[current' → logprob: -4.761868000030518
    3. 'current' → logprob: -6.386868000030518
    4. '[node' → logprob: -6.886868000030518
    5. '_current' → logprob: -8.01186752319336
    6. '```' → logprob: -9.38686752319336
    7. '_array' → logprob: -10.26186752319336
    8. '_cost' → logprob: -10.38686752319336
    9. 'node' → logprob: -11.38686752319336
    10. '[' → logprob: -11.63686752319336

Token 270: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12846378982067108
    2. '+' → logprob: -2.1284637451171875
    3. ']' → logprob: -6.6284637451171875
    4. ']+' → logprob: -9.503463745117188
    5. '[' → logprob: -9.753463745117188
    6. ')' → logprob: -9.878463745117188
    7. '```' → logprob: -12.003463745117188
    8. ' ' → logprob: -12.503463745117188
    9. ' plus' → logprob: -12.503463745117188
    10. ')+' → logprob: -12.753463745117188

Token 271: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.043002620339393616
    2. '+' → logprob: -3.1680026054382324
    3. '[' → logprob: -13.29300308227539
    4. ' plus' → logprob: -15.04300308227539
    5. ' ' → logprob: -15.16800308227539
    6. '```' → logprob: -15.16800308227539
    7. ' +
' → logprob: -15.41800308227539
    8. ' ' → logprob: -15.66800308227539
    9. '+
' → logprob: -16.16800308227539
    10. '＋' → logprob: -16.41800308227539

Token 272: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.17975567281246185
    2. ' neighbor' → logprob: -1.804755687713623
    3. '                   ' → logprob: -12.804755210876465
    4. ' neighbour' → logprob: -13.304755210876465
    5. '               ' → logprob: -14.179755210876465
    6. ' ' → logprob: -14.179755210876465
    7. '   ' → logprob: -14.304755210876465
    8. '                    ' → logprob: -14.429755210876465
    9. '           ' → logprob: -14.554755210876465
    10. 'ne' → logprob: -14.804755210876465

Token 273: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.8889261304575484e-06
    2. '```' → logprob: -14.125003814697266
    3. 'cost' → logprob: -14.375003814697266
    4. 'Cost' → logprob: -14.375003814697266
    5. '_neighbor' → logprob: -14.375003814697266
    6. '_COST' → logprob: -14.750003814697266
    7. '_' → logprob: -15.250003814697266
    8. '_token' → logprob: -15.500003814697266
    9. '
' → logprob: -15.875003814697266
    10. '_node' → logprob: -16.750003814697266

Token 274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08964918553829193
    2. ':
' → logprob: -2.464649200439453
    3. '               ' → logprob: -7.714649200439453
    4. '                   ' → logprob: -8.714649200439453
    5. ' and' → logprob: -10.339649200439453
    6. ':

' → logprob: -11.214649200439453
    7. ':
' → logprob: -11.464649200439453
    8. '                       ' → logprob: -11.589649200439453
    9. '                ' → logprob: -12.339649200439453
    10. ':return' → logprob: -12.339649200439453

Token 275: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017334267497062683
    2. '                       ' → logprob: -4.767334461212158
    3. '               ' → logprob: -5.142334461212158
    4. 'distance' → logprob: -6.517334461212158
    5. ' distance' → logprob: -8.142333984375
    6. '                    ' → logprob: -8.517333984375
    7. '                    
' → logprob: -8.767333984375
    8. '                           ' → logprob: -8.892333984375
    9. '                ' → logprob: -9.142333984375
    10. '                               ' → logprob: -9.392333984375

Token 276: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' (adapté à ' distance') → logprob: -0.0553201399743557
    2. ' distance' → logprob: -2.9303200244903564
    3. '                   ' → logprob: -7.8053202629089355
    4. 'print' → logprob: -11.680319786071777
    5. '               ' → logprob: -11.805319786071777
    6. '                       ' → logprob: -12.430319786071777
    7. '   ' → logprob: -12.930319786071777
    8. '```' → logprob: -13.055319786071777
    9. '(distance' → logprob: -14.055319786071777
    10. 'raise' → logprob: -14.055319786071777

Token 277: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -6.704273118884885e-07
    2. 'array' → logprob: -14.875000953674316
    3. 'Array' → logprob: -16.625
    4. '[' → logprob: -17.25
    5. '[_' → logprob: -17.25
    6. '_arrays' → logprob: -17.375
    7. '_' → logprob: -17.625
    8. '```' → logprob: -18.125
    9. '_ARRAY' → logprob: -18.25
    10. '_arr' → logprob: -19.0

Token 278: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '[current' → logprob: -14.125000953674316
    3. '```' → logprob: -15.125000953674316
    4. '[node' → logprob: -16.375001907348633
    5. '[
' → logprob: -17.375001907348633
    6. '[next' → logprob: -17.375001907348633
    7. ' [' → logprob: -17.375001907348633
    8. '[...]' → logprob: -17.625001907348633
    9. 'neighbor' → logprob: -17.750001907348633
    10. '[target' → logprob: -18.875001907348633

Token 279: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.4750881791114807
    2. 'current' → logprob: -0.9750881791114807
    3. '[current' → logprob: -7.225088119506836
    4. 'node' → logprob: -8.600088119506836
    5. '[' → logprob: -9.725088119506836
    6. '[node' → logprob: -10.850088119506836
    7. ' neighbor' → logprob: -11.850088119506836
    8. ' current' → logprob: -11.850088119506836
    9. 'ne' → logprob: -13.475088119506836
    10. '   ' → logprob: -13.975088119506836

Token 280: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0006139091565273702
    2. '_array' → logprob: -7.625613689422607
    3. '[node' → logprob: -9.250614166259766
    4. '_cost' → logprob: -10.875614166259766
    5. '[current' → logprob: -12.750614166259766
    6. '```' → logprob: -13.500614166259766
    7. '_token' → logprob: -13.750614166259766
    8. '_code' → logprob: -14.000614166259766
    9. '_neighbor' → logprob: -14.000614166259766
    10. '_NODE' → logprob: -14.125614166259766

Token 281: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11287672072649002
    2. '=' → logprob: -2.2378766536712646
    3. ' -=' → logprob: -10.362876892089844
    4. ']' → logprob: -11.362876892089844
    5. '-=' → logprob: -12.612876892089844
    6. ' ' → logprob: -13.112876892089844
    7. ')' → logprob: -13.612876892089844
    8. ' =
' → logprob: -13.862876892089844
    9. '```' → logprob: -14.487876892089844
    10. ']=' → logprob: -14.487876892089844

Token 282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25194790959358215
    2. ' =' → logprob: -1.5019478797912598
    3. '-=' → logprob: -11.251948356628418
    4. ' -=' → logprob: -12.626948356628418
    5. '+=' → logprob: -14.501948356628418
    6. '[' → logprob: -14.876948356628418
    7. ' ' → logprob: -15.001948356628418
    8. '.=' → logprob: -15.376948356628418
    9. '=-' → logprob: -15.501948356628418
    10. '=
' → logprob: -15.751948356628418

Token 283: ' distance' (ID: 9324)
  Prédit: '-in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-in' → logprob: -0.7416784167289734
    2. '-distance' → logprob: -0.7416784167289734
    3. '-inf' → logprob: -3.616678476333618
    4. ' -' → logprob: -4.616678237915039
    5. '-' → logprob: -5.241678237915039
    6. '-f' → logprob: -5.866678237915039
    7. 'float' → logprob: -7.366678237915039
    8. 'distance' → logprob: -7.741678237915039
    9. ' float' → logprob: -7.866678237915039
    10. ' distance' → logprob: -8.866678237915039

Token 284: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.00010139751975657418
    2. '[current' → logprob: -9.250101089477539
    3. 'array' → logprob: -12.625101089477539
    4. '[' → logprob: -14.250101089477539
    5. 'Array' → logprob: -14.500101089477539
    6. '[_' → logprob: -15.250101089477539
    7. '[node' → logprob: -15.375101089477539
    8. '```' → logprob: -16.62510108947754
    9. '_ARRAY' → logprob: -16.87510108947754
    10. '_' → logprob: -17.12510108947754

Token 285: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.625003814697266
    3. 'current' → logprob: -15.875003814697266
    4. '[curr' → logprob: -16.375003814697266
    5. '[cur' → logprob: -16.375003814697266
    6. '[node' → logprob: -17.500003814697266
    7. '[
' → logprob: -17.625003814697266
    8. '[parent' → logprob: -18.500003814697266
    9. '[next' → logprob: -18.875003814697266
    10. '```' → logprob: -19.000003814697266

Token 286: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.001939938636496663
    2. '_token' → logprob: -6.87693977355957
    3. '_cost' → logprob: -7.12693977355957
    4. 'node' → logprob: -10.37693977355957
    5. '```' → logprob: -11.12693977355957
    6. ']' → logprob: -11.62693977355957
    7. '_code' → logprob: -12.12693977355957
    8. '           ' → logprob: -12.12693977355957
    9. ']_' → logprob: -12.12693977355957
    10. '               ' → logprob: -12.50193977355957

Token 287: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.17976513504981995
    2. '+' → logprob: -1.8047651052474976
    3. '[' → logprob: -12.304764747619629
    4. '```' → logprob: -12.429764747619629
    5. ']' → logprob: -12.554764747619629
    6. ']+' → logprob: -13.179764747619629
    7. ' ' → logprob: -13.304764747619629
    8. ')' → logprob: -14.054764747619629
    9. '                   ' → logprob: -14.304764747619629
    10. ' ' → logprob: -14.429764747619629

Token 288: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022706031799316
    2. '+' → logprob: -1.9102270603179932
    3. ' ' → logprob: -14.410226821899414
    4. '-' → logprob: -14.535226821899414
    5. ' ' → logprob: -14.660226821899414
    6. ' -' → logprob: -14.660226821899414
    7. '[' → logprob: -14.785226821899414
    8. ' plus' → logprob: -15.410226821899414
    9. '```' → logprob: -15.660226821899414
    10. ' +
' → logprob: -16.535226821899414

Token 289: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.012515772134065628
    2. ' neighbor' → logprob: -4.387515544891357
    3. '_neighbor' → logprob: -14.012516021728516
    4. ' ' → logprob: -14.387516021728516
    5. '```' → logprob: -14.512516021728516
    6. '                   ' → logprob: -14.512516021728516
    7. '1' → logprob: -14.637516021728516
    8. 'cost' → logprob: -14.762516021728516
    9. 'ne' → logprob: -15.137516021728516
    10. 'negative' → logprob: -15.137516021728516

Token 290: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -9.253090865968261e-06
    2. 'cost' → logprob: -11.875009536743164
    3. '_token' → logprob: -14.625009536743164
    4. '_' → logprob: -14.750009536743164
    5. 'Cost' → logprob: -14.875009536743164
    6. '_neighbor' → logprob: -15.125009536743164
    7. '```' → logprob: -15.625009536743164
    8. '
' → logprob: -16.125009536743164
    9. '_COST' → logprob: -16.125009536743164
    10. '_
' → logprob: -16.250009536743164

Token 291: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006210576975718141
    2. '               ' → logprob: -9.00062084197998
    3. '<|end|>' → logprob: -9.00062084197998
    4. '                       ' → logprob: -9.50062084197998
    5. '				' → logprob: -9.75062084197998
    6. '                    ' → logprob: -9.87562084197998
    7. '```' → logprob: -10.12562084197998
    8. '
' → logprob: -10.25062084197998
    9. '                    
' → logprob: -10.62562084197998
    10. '           ' → logprob: -10.75062084197998

Token 292: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000624514592345804
    2. '
' → logprob: -8.625624656677246
    3. '               ' → logprob: -9.000624656677246
    4. '				' → logprob: -9.625624656677246
    5. '           ' → logprob: -10.125624656677246
    6. '                    
' → logprob: -10.125624656677246
    7. '                       ' → logprob: -10.375624656677246
    8. '                    ' → logprob: -10.625624656677246
    9. '                  ' → logprob: -10.750624656677246
    10. '```' → logprob: -11.125624656677246

Token 293: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.006826670840382576
    2. 'print' → logprob: -5.631826877593994
    3. 'True' → logprob: -6.006826877593994
    4. ' is' → logprob: -7.381826877593994
    5. 'distance' → logprob: -9.631826400756836
    6. ' True' → logprob: -11.506826400756836
    7. 'exit' → logprob: -11.756826400756836
    8. 'return' → logprob: -11.881826400756836
    9. 'continue' → logprob: -12.006826400756836
    10. '   ' → logprob: -12.131826400756836

Token 294: '_negative' (ID: 134489)
  Prédit: '_negative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_negative' → logprob: -0.06243491172790527
    2. '_updated' → logprob: -2.8124349117279053
    3. 'negative' → logprob: -7.687435150146484
    4. '```' → logprob: -12.687435150146484
    5. ' negative' → logprob: -13.437435150146484
    6. 'updated' → logprob: -13.687435150146484
    7. '_neg' → logprob: -14.062435150146484
    8. '_positive' → logprob: -14.687435150146484
    9. 'Negative' → logprob: -14.812435150146484
    10. '-negative' → logprob: -14.937435150146484

Token 295: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -2.2200749754119897e-06
    2. 'updated' → logprob: -14.000001907348633
    3. '_UPDATED' → logprob: -14.750001907348633
    4. 'Updated' → logprob: -15.000001907348633
    5. '_update' → logprob: -15.750001907348633
    6. '_up' → logprob: -16.250001907348633
    7. '```' → logprob: -16.375001907348633
    8. '_' → logprob: -16.500001907348633
    9. '_initialized' → logprob: -16.875001907348633
    10. '_created' → logprob: -17.875001907348633

Token 296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04863755404949188
    2. ' =' → logprob: -3.048637628555298
    3. '=True' → logprob: -9.923637390136719
    4. ' ' → logprob: -15.173637390136719
    5. '=False' → logprob: -15.423637390136719
    6. '=
' → logprob: -15.673637390136719
    7. '   ' → logprob: -16.04863739013672
    8. '_' → logprob: -16.17363739013672
    9. '_=' → logprob: -16.54863739013672
    10. ' =
' → logprob: -16.67363739013672

Token 297: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.5491004129871726e-05
    2. ' True' → logprob: -10.000045776367188
    3. '(True' → logprob: -18.625045776367188
    4. '=True' → logprob: -18.750045776367188
    5. 'False' → logprob: -20.500045776367188
    6. '.True' → logprob: -22.750045776367188
    7. '
' → logprob: -22.875045776367188
    8. 'Yes' → logprob: -23.375045776367188
    9. '_true' → logprob: -23.500045776367188
    10. '```' → logprob: -24.250045776367188

Token 298: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21281111240386963
    2. '
' → logprob: -2.46281099319458
    3. '       ' → logprob: -2.96281099319458
    4. '<|end|>' → logprob: -3.58781099319458
    5. '               ' → logprob: -4.46281099319458
    6. '```' → logprob: -5.96281099319458
    7. '                    
' → logprob: -6.21281099319458
    8. '           ' → logprob: -6.33781099319458
    9. '                       ' → logprob: -6.46281099319458
    10. '\n' → logprob: -6.83781099319458

Token 299: '       ' (ID: 309)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22409163415431976
    2. '       ' → logprob: -2.5990915298461914
    3. '                       ' → logprob: -3.3490915298461914
    4. ' if' → logprob: -3.5990915298461914
    5. 'if' → logprob: -3.8490915298461914
    6. '               ' → logprob: -3.8490915298461914
    7. '           ' → logprob: -4.974091529846191
    8. '   ' → logprob: -5.474091529846191
    9. '```' → logprob: -5.474091529846191
    10. '                           ' → logprob: -6.724091529846191

Token 300: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4996909499168396
    2. '       ' → logprob: -1.1246910095214844
    3. ' if' → logprob: -2.7496910095214844
    4. '           ' → logprob: -5.624691009521484
    5. '   ' → logprob: -7.249691009521484
    6. '               ' → logprob: -8.624691009521484
    7. 'print' → logprob: -10.874691009521484
    8. '                   ' → logprob: -10.874691009521484
    9. ' ' → logprob: -11.124691009521484
    10. '```' → logprob: -11.749691009521484

Token 301: ' not' (ID: 625)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.44124165177345276
    2. 'not' → logprob: -1.5662416219711304
    3. ' is' → logprob: -2.44124174118042
    4. ' not' → logprob: -2.81624174118042
    5. 'distance' → logprob: -7.06624174118042
    6. ' distance' → logprob: -9.566241264343262
    7. '   ' → logprob: -10.191241264343262
    8. '(is' → logprob: -11.503741264343262
    9. 'negative' → logprob: -11.566241264343262
    10. '(not' → logprob: -11.753741264343262

Token 302: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25192928314208984
    2. 'is' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.501930236816406
    4. '	is' → logprob: -17.126930236816406
    5. ')is' → logprob: -17.501930236816406
    6. '(is' → logprob: -17.876930236816406
    7. ' ' → logprob: -18.626930236816406
    8. '_is' → logprob: -19.126930236816406
    9. '"is' → logprob: -19.501930236816406
    10. '```' → logprob: -19.501930236816406

Token 303: '_negative' (ID: 134489)
  Prédit: '_negative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_negative' → logprob: -0.017185118049383163
    2. 'negative' → logprob: -4.767185211181641
    3. '_updated' → logprob: -4.767185211181641
    4. 'updated' → logprob: -10.64218521118164
    5. '_neg' → logprob: -12.51718521118164
    6. ' negative' → logprob: -13.51718521118164
    7. '_positive' → logprob: -15.26718521118164
    8. 'Negative' → logprob: -15.64218521118164
    9. 'neg' → logprob: -15.76718521118164
    10. '_' → logprob: -16.14218521118164

Token 304: '_updated' (ID: 80508)
  Prédit: '_updated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_updated' → logprob: -0.0007104054093360901
    2. 'updated' → logprob: -7.250710487365723
    3. 'Updated' → logprob: -15.375710487365723
    4. '_UPDATED' → logprob: -16.500709533691406
    5. ' updated' → logprob: -17.000709533691406
    6. '_up' → logprob: -18.125709533691406
    7. '_update' → logprob: -18.375709533691406
    8. '_' → logprob: -18.375709533691406
    9. '_initialized' → logprob: -18.500709533691406
    10. 'UPDATED' → logprob: -19.250709533691406

Token 305: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.316782683134079
    2. ':
' → logprob: -1.3167827129364014
    3. '           ' → logprob: -5.691782474517822
    4. '       ' → logprob: -9.06678295135498
    5. '               ' → logprob: -11.44178295135498
    6. ':
' → logprob: -12.81678295135498
    7. '   ' → logprob: -12.94178295135498
    8. ':

' → logprob: -13.19178295135498
    9. '():
' → logprob: -13.19178295135498
    10. '):
' → logprob: -13.69178295135498

Token 306: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008215131238102913
    2. ' break' → logprob: -4.883214950561523
    3. 'break' → logprob: -7.758214950561523
    4. '       ' → logprob: -9.758214950561523
    5. '               ' → logprob: -10.383214950561523
    6. ' continue' → logprob: -10.508214950561523
    7. 'continue' → logprob: -10.758214950561523
    8. '   ' → logprob: -11.133214950561523
    9. '		' → logprob: -11.883214950561523
    10. '```' → logprob: -12.008214950561523

Token 307: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.32025575637817383
    2. 'break' (adapté à ' break') → logprob: -1.8202557563781738
    3. '           ' → logprob: -2.195255756378174
    4. '               ' → logprob: -7.820255756378174
    5. '       ' → logprob: -9.070255279541016
    6. '	break' → logprob: -9.820255279541016
    7. '   ' → logprob: -10.070255279541016
    8. '```' → logprob: -10.070255279541016
    9. '
' → logprob: -10.445255279541016
    10. '            
' → logprob: -11.695255279541016

Token 308: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01600280962884426
    2. '
' → logprob: -4.766002655029297
    3. 'if' → logprob: -5.891002655029297
    4. '   ' → logprob: -6.266002655029297
    5. 'distance' → logprob: -6.641002655029297
    6. 'else' → logprob: -7.516002655029297
    7. ' print' → logprob: -7.891002655029297
    8. '    
' → logprob: -9.016002655029297
    9. '```' → logprob: -9.516002655029297
    10. 'raise' → logprob: -10.141002655029297

Token 309: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0026044335681945086
    2. 'if' → logprob: -6.7526044845581055
    3. '
' → logprob: -7.8776044845581055
    4. 'else' → logprob: -8.127604484558105
    5. 'distance' → logprob: -8.127604484558105
    6. '   ' → logprob: -8.502604484558105
    7. ' print' → logprob: -8.877604484558105
    8. '```' → logprob: -10.377604484558105
    9. 'raise' → logprob: -10.752604484558105
    10. 'return' → logprob: -11.627604484558105

Token 310: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39171165227890015
    2. 'print' → logprob: -1.141711711883545
    3. '```' → logprob: -6.516711711883545
    4. 'else' → logprob: -6.891711711883545
    5. '   ' → logprob: -7.141711711883545
    6. ' if' → logprob: -7.516711711883545
    7. '
' → logprob: -7.516711711883545
    8. 'result' → logprob: -8.766711235046387
    9. 'distance' → logprob: -9.766711235046387
    10. ' print' → logprob: -9.891711235046387

Token 311: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.5778800249099731
    2. 'distance' → logprob: -0.8278800249099731
    3. ' is' → logprob: -6.577879905700684
    4. 'is' → logprob: -7.952879905700684
    5. '(distance' → logprob: -10.202879905700684
    6. ' previous' → logprob: -10.327879905700684
    7. ' ' → logprob: -10.702879905700684
    8. '   ' → logprob: -10.702879905700684
    9. ' negative' → logprob: -11.077879905700684
    10. ' any' → logprob: -11.702879905700684

Token 312: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -2.5776860184123507e-06
    2. '[-' → logprob: -13.50000286102295
    3. 'array' → logprob: -13.75000286102295
    4. '[_' → logprob: -17.250001907348633
    5. 'Array' → logprob: -17.375001907348633
    6. '_' → logprob: -17.500001907348633
    7. '[' → logprob: -18.250001907348633
    8. '_ARRAY' → logprob: -19.375001907348633
    9. ' array' → logprob: -19.625001907348633
    10. '_arr' → logprob: -19.750001907348633

Token 313: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -5.776898251497187e-05
    2. '[' → logprob: -10.1250581741333
    3. '[node' → logprob: -11.0000581741333
    4. ' [-' → logprob: -13.8750581741333
    5. '[target' → logprob: -18.000057220458984
    6. '[n' → logprob: -18.375057220458984
    7. '   ' → logprob: -19.375057220458984
    8. '```' → logprob: -19.375057220458984
    9. '[:-' → logprob: -19.500057220458984
    10. '[end' → logprob: -20.000057220458984

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '-' → logprob: -15.5
    3. ' ' → logprob: -16.125
    4. '   ' → logprob: -18.625
    5. ']' → logprob: -18.75
    6. '```' → logprob: -19.125
    7. '``' → logprob: -20.75
    8. ' -' → logprob: -21.0
    9. '[-' → logprob: -21.0
    10. '2' → logprob: -21.3125

Token 315: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5760830044746399
    2. ' <' → logprob: -0.8260830044746399
    3. '<int' → logprob: -10.326083183288574
    4. ' !=' → logprob: -10.826083183288574
    5. '>' → logprob: -10.951083183288574
    6. ')' → logprob: -11.326083183288574
    7. '!=' → logprob: -11.701083183288574
    8. '<n' → logprob: -11.701083183288574
    9. ' ' → logprob: -12.076083183288574
    10. '<v' → logprob: -12.201083183288574

Token 316: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07923565059900284
    2. ' <' → logprob: -2.579235553741455
    3. '==' → logprob: -9.079236030578613
    4. '<int' → logprob: -9.454236030578613
    5. ' ==' → logprob: -9.704236030578613
    6. '<n' → logprob: -10.954236030578613
    7. '<float' → logprob: -11.579236030578613
    8. '!=' → logprob: -11.829236030578613
    9. '>' → logprob: -11.954236030578613
    10. '<class' → logprob: -12.204236030578613

Token 317: ' previous' (ID: 5880)
  Prédit: '-in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-in' → logprob: -0.15008126199245453
    2. 'float' → logprob: -3.525081157684326
    3. 'previous' → logprob: -3.775081157684326
    4. 'in' → logprob: -4.025081157684326
    5. ' -' → logprob: -4.150081157684326
    6. ' previous' → logprob: -4.150081157684326
    7. '-distance' → logprob: -4.275081157684326
    8. 'distance' → logprob: -4.400081157684326
    9. '-inf' → logprob: -5.025081157684326
    10. ' float' → logprob: -6.150081157684326

Token 318: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0016010295366868377
    2. '_value' → logprob: -6.626601219177246
    3. 'distance' → logprob: -8.376601219177246
    4. '_' → logprob: -11.251601219177246
    5. '```' → logprob: -11.501601219177246
    6. '_array' → logprob: -11.876601219177246
    7. '_dist' → logprob: -12.376601219177246
    8. '   ' → logprob: -13.501601219177246
    9. ')' → logprob: -13.626601219177246
    10. ' ' → logprob: -13.626601219177246

Token 319: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4747218191623688
    2. ':
' → logprob: -0.9747217893600464
    3. ' and' → logprob: -7.474721908569336
    4. 'and' → logprob: -10.474721908569336
    5. '==' → logprob: -11.224721908569336
    6. ' :
' → logprob: -11.849721908569336
    7. ' :' → logprob: -12.224721908569336
    8. ' or' → logprob: -12.349721908569336
    9. '   ' → logprob: -12.349721908569336
    10. ' ==' → logprob: -12.599721908569336

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07639971375465393
    2. 'print' → logprob: -2.701399803161621
    3. ' print' → logprob: -5.451399803161621
    4. '   ' → logprob: -6.201399803161621
    5. '```' → logprob: -9.576399803161621
    6. '           ' → logprob: -11.076399803161621
    7. '-' → logprob: -11.576399803161621
    8. ',' → logprob: -12.701399803161621
    9. ':
' → logprob: -12.826399803161621
    10. '	print' → logprob: -12.951399803161621

Token 321: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.010800083167850971
    2. ' print' → logprob: -4.635799884796143
    3. '   ' → logprob: -7.260799884796143
    4. '       ' → logprob: -8.1358003616333
    5. '           ' → logprob: -10.2608003616333
    6. '-' → logprob: -12.0108003616333
    7. '```' → logprob: -12.6358003616333
    8. '	print' → logprob: -13.7608003616333
    9. ' ' → logprob: -14.3858003616333
    10. ' -' → logprob: -14.6358003616333

Token 322: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000977671123109758
    2. '(-' → logprob: -7.750977516174316
    3. '(' → logprob: -9.000977516174316
    4. '"-' → logprob: -9.375977516174316
    5. '-inf' → logprob: -9.375977516174316
    6. '```' → logprob: -10.500977516174316
    7. '-print' → logprob: -10.625977516174316
    8. '"' → logprob: -11.125977516174316
    9. ' -' → logprob: -11.125977516174316
    10. '-J' → logprob: -11.500977516174316

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '2' → logprob: -15.250000953674316
    3. '１' → logprob: -16.375
    4. ' ' → logprob: -17.5
    5. '999' → logprob: -18.0
    6. '"' → logprob: -18.4375
    7. '   ' → logprob: -18.5625
    8. '۱' → logprob: -18.6875
    9. '0' → logprob: -18.875
    10. '

' → logprob: -19.0

Token 324: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021965294145047665
    2. ')
' → logprob: -6.127196311950684
    3. '       ' → logprob: -12.377196311950684
    4. '   ' → logprob: -12.752196311950684
    5. ' )' → logprob: -13.377196311950684
    6. ')return' → logprob: -13.502196311950684
    7. '<|end|>' → logprob: -14.502196311950684
    8. ')
' → logprob: -15.877196311950684
    9. '```' → logprob: -16.252197265625
    10. '),' → logprob: -16.377197265625

Token 325: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.01181776262819767
    2. '   ' → logprob: -4.761817932128906
    3. '       ' → logprob: -5.761817932128906
    4. 'elif' → logprob: -10.386817932128906
    5. ' else' → logprob: -11.136817932128906
    6. '
' → logprob: -12.886817932128906
    7. '```' → logprob: -13.511817932128906
    8. 'exit' → logprob: -14.261817932128906
    9. 'return' → logprob: -14.511817932128906
    10. 'print' → logprob: -14.511817932128906

Token 326: ' exit' (ID: 10654)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10998409986495972
    2. '   ' → logprob: -2.7349841594696045
    3. 'else' → logprob: -3.3599841594696045
    4. 'exit' (adapté à ' exit') → logprob: -5.484983921051025
    5. '
' → logprob: -9.359984397888184
    6. ' exit' → logprob: -10.109984397888184
    7. ' else' → logprob: -10.109984397888184
    8. 'elif' → logprob: -10.484984397888184
    9. '	exit' → logprob: -10.484984397888184
    10. 'return' → logprob: -10.484984397888184

Token 327: '()

' (ID: 5874)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00041243841405957937
    2. '
' → logprob: -8.000411987304688
    3. 'if' → logprob: -9.750411987304688
    4. 'for' → logprob: -12.500411987304688
    5. ' print' → logprob: -12.875411987304688
    6. '```' → logprob: -12.875411987304688
    7. '    
' → logprob: -13.000411987304688
    8. '  
' → logprob: -13.250411987304688
    9. 'pr' → logprob: -14.000411987304688
    10. 'distance' → logprob: -14.000411987304688

Token 328: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000523246475495398
    2. 'if' → logprob: -7.625523090362549
    3. 'else' → logprob: -10.875523567199707
    4. '
' → logprob: -11.875523567199707
    5. ' print' → logprob: -12.125523567199707
    6. '```' → logprob: -13.625523567199707
    7. 'elif' → logprob: -14.125523567199707
    8. '    
' → logprob: -15.125523567199707
    9. 'distance' → logprob: -15.250523567199707
    10. 'max' → logprob: -15.500523567199707

Token 329: '(max' (ID: 17178)
  Prédit: '(distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(distance' → logprob: -0.018448878079652786
    2. '(max' → logprob: -4.018448829650879
    3. '(' → logprob: -8.518448829650879
    4. '(-' → logprob: -9.518448829650879
    5. 'distance' → logprob: -11.518448829650879
    6. '(abs' → logprob: -11.893448829650879
    7. 'max' → logprob: -12.268448829650879
    8. '((' → logprob: -13.643448829650879
    9. '()' → logprob: -13.643448829650879
    10. '(int' → logprob: -14.143448829650879

Token 330: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05147320404648781
    2. '(-' → logprob: -3.0514731407165527
    3. '(max' → logprob: -5.926473140716553
    4. '(distance' → logprob: -8.551473617553711
    5. '(-(' → logprob: -11.801473617553711
    6. '((' → logprob: -13.051473617553711
    7. '0' → logprob: -13.176473617553711
    8. '(sum' → logprob: -13.426473617553711
    9. ' (' → logprob: -13.551473617553711
    10. '((-' → logprob: -13.676473617553711

Token 331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21952559053897858
    2. '-distance' → logprob: -2.3445255756378174
    3. '-' → logprob: -3.2195255756378174
    4. '-max' → logprob: -3.9695255756378174
    5. 'distance' → logprob: -4.3445258140563965
    6. '[' → logprob: -4.4695258140563965
    7. '[-' → logprob: -4.9695258140563965
    8. 'max' → logprob: -5.3445258140563965
    9. '(' → logprob: -5.9695258140563965
    10. '(-' → logprob: -6.4695258140563965

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008305939263664186
    2. ' ,' → logprob: -7.37583065032959
    3. ',-' → logprob: -8.87583065032959
    4. ',d' → logprob: -10.25083065032959
    5. ',
' → logprob: -11.87583065032959
    6. ',int' → logprob: -12.12583065032959
    7. '-' → logprob: -12.25083065032959
    8. ' -' → logprob: -13.00083065032959
    9. ',max' → logprob: -13.00083065032959
    10. ',min' → logprob: -13.37583065032959

Token 333: ' -' (ID: 533)
  Prédit: '-param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-param' → logprob: -0.032620131969451904
    2. 'param' → logprob: -4.407619953155518
    3. '-distance' → logprob: -4.907619953155518
    4. '-p' → logprob: -4.907619953155518
    5. ' -' → logprob: -6.032619953155518
    6. '-' → logprob: -6.282619953155518
    7. '-node' → logprob: -8.657620429992676
    8. ' param' → logprob: -9.407620429992676
    9. '-dist' → logprob: -9.407620429992676
    10. 'distance' → logprob: -9.532620429992676

Token 334: 'distance' (ID: 40614)
  Prédit: 'distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.0031818747520446777
    2. ' distance' → logprob: -5.7531819343566895
    3. '(distance' → logprob: -13.128181457519531
    4. '   ' → logprob: -13.628181457519531
    5. '1' → logprob: -15.128181457519531
    6. 'dist' → logprob: -15.378181457519531
    7. '
' → logprob: -16.37818145751953
    8. ')' → logprob: -16.62818145751953
    9. 'min' → logprob: -17.00318145751953
    10. '  ' → logprob: -17.12818145751953

Token 335: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -2.816093228830141e-06
    2. 'array' → logprob: -13.00000286102295
    3. '[-' → logprob: -14.87500286102295
    4. 'Array' → logprob: -16.375001907348633
    5. '[' → logprob: -18.500001907348633
    6. '_arr' → logprob: -19.000001907348633
    7. '_ARRAY' → logprob: -19.625001907348633
    8. '[_' → logprob: -19.750001907348633
    9. '_' → logprob: -19.875001907348633
    10. '_Array' → logprob: -20.000001907348633

Token 336: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '[' → logprob: -17.0
    3. '[
' → logprob: -20.25
    4. ' [-' → logprob: -21.375
    5. '
' → logprob: -21.625
    6. '-' → logprob: -22.125
    7. '```' → logprob: -22.75
    8. '(-' → logprob: -23.0
    9. '][-' → logprob: -23.25
    10. '   ' → logprob: -23.375

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -17.75
    4. ']' → logprob: -18.125
    5. '
' → logprob: -18.75
    6. ')' → logprob: -19.0
    7. '2' → logprob: -19.0625
    8. '```' → logprob: -19.3125
    9. '`' → logprob: -19.4375
    10. '])' → logprob: -19.6875

Token 338: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -5.407366916188039e-05
    2. ')' → logprob: -10.375054359436035
    3. ')))' → logprob: -11.000054359436035
    4. ' ))' → logprob: -12.500054359436035
    5. '))
' → logprob: -13.125054359436035
    6. '+' → logprob: -15.000054359436035
    7. '()))' → logprob: -17.12505340576172
    8. ' ' → logprob: -18.12505340576172
    9. '),' → logprob: -18.25005340576172
    10. '})' → logprob: -18.25005340576172


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 336
Tokens correctement prédits (1ère position, stricte): 183
Tokens correctement prédits (1ère position, avec adaptation): 194
Tokens correctement prédits (top 10): 307
Précision stricte (1ère position): 54.46%
Précision adaptée (1ère position): 57.74%
Précision (top 10): 91.37%
================================================================================
