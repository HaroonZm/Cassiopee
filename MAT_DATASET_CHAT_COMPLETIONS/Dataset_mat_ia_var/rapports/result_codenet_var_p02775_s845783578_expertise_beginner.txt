================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
s = s[::-1]
taille = len(s)
s = s + "4"
a = 0
b = 0

for i in range(taille):
    v1 = int(s[i])
    v2 = int(s[i+1])
    if v1 + b >= 6 or (v1 + b >= 5 and v2 >= 5):
        a = a + (10 - v1 - b)
        b = 1
    else:
        a = a + v1 + b
        b = 0

print(a + b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003705062437802553
    2. '('' → logprob: -6.378705024719238
    3. '()' → logprob: -7.128705024719238
    4. ''' → logprob: -7.128705024719238
    5. '"' → logprob: -9.128705024719238
    6. '`' → logprob: -9.378705024719238
    7. '(
' → logprob: -9.753705024719238
    8. '("("' → logprob: -10.128705024719238
    9. '```' → logprob: -10.378705024719238
    10. '(`' → logprob: -11.253705024719238

Token 4: 's' (ID: 82)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.30454960465431213
    2. 'if' → logprob: -2.0545496940612793
    3. '[' → logprob: -3.1795496940612793
    4. '+' → logprob: -3.4295496940612793
    5. '[::-' → logprob: -4.179549694061279
    6. 'print' → logprob: -4.804549694061279
    7. '=' → logprob: -5.304549694061279
    8. '_' → logprob: -5.304549694061279
    9. '```' → logprob: -5.304549694061279
    10. ''' → logprob: -5.554549694061279

Token 5: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.30660441517829895
    2. '+' → logprob: -1.6816043853759766
    3. '[' → logprob: -3.8066043853759766
    4. '```' → logprob: -3.9316043853759766
    5. '*' → logprob: -4.806604385375977
    6. '\n' → logprob: -5.431604385375977
    7. '.split' → logprob: -5.431604385375977
    8. '.strip' → logprob: -5.681604385375977
    9. '[:]' → logprob: -6.431604385375977
    10. '#' → logprob: -6.431604385375977

Token 6: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.38904985785484314
    2. 's' → logprob: -1.1390498876571655
    3. ' ' → logprob: -7.139050006866455
    4. ' input' → logprob: -7.889050006866455
    5. 'input' → logprob: -8.139049530029297
    6. '"' → logprob: -8.889049530029297
    7. ''' → logprob: -9.139049530029297
    8. ''s' → logprob: -9.139049530029297
    9. ' "' → logprob: -9.389049530029297
    10. ' ''' → logprob: -9.889049530029297

Token 7: '[::-' (ID: 159890)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3329411745071411
    2. '[::-' → logprob: -1.3329411745071411
    3. '.lower' → logprob: -1.8329411745071411
    4. '.strip' → logprob: -2.0829410552978516
    5. '.' → logprob: -2.8329410552978516
    6. '.upper' → logprob: -2.9579410552978516
    7. ' +' → logprob: -3.4579410552978516
    8. '.replace' → logprob: -3.7079410552978516
    9. '.capitalize' → logprob: -4.332941055297852
    10. '[' → logprob: -5.832941055297852

Token 8: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008039106614887714
    2. 'v' → logprob: -8.75080394744873
    3. 's' → logprob: -8.75080394744873
    4. '-' → logprob: -8.87580394744873
    5. 't' → logprob: -9.12580394744873
    6. 'r' → logprob: -9.62580394744873
    7. 'find' → logprob: -10.12580394744873
    8. ']' → logprob: -11.00080394744873
    9. 'd' → logprob: -11.37580394744873
    10. '2' → logprob: -11.50080394744873

Token 9: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004944138927385211
    2. ']' → logprob: -7.625494480133057
    3. ')]' → logprob: -13.500494003295898
    4. '])' → logprob: -13.625494003295898
    5. '）' → logprob: -13.750494003295898
    6. '[' → logprob: -13.875494003295898
    7. '')' → logprob: -15.125494003295898
    8. ' )' → logprob: -15.125494003295898
    9. ')
' → logprob: -15.250494003295898
    10. ')`' → logprob: -15.625494003295898

Token 10: 'tail' (ID: 20472)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03954601660370827
    2. 'if' → logprob: -4.039546012878418
    3. 'for' → logprob: -5.289546012878418
    4. '#' → logprob: -5.539546012878418
    5. '[' → logprob: -5.914546012878418
    6. '```' → logprob: -6.164546012878418
    7. '+' → logprob: -6.414546012878418
    8. 'p' → logprob: -6.539546012878418
    9. ''' → logprob: -7.164546012878418
    10. '`' → logprob: -7.414546012878418

Token 11: 'le' (ID: 282)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3179033994674683
    2. ' =' → logprob: -1.4429033994674683
    3. '_len' → logprob: -1.6929033994674683
    4. 's' → logprob: -1.9429033994674683
    5. '=' → logprob: -2.192903518676758
    6. 'len' → logprob: -4.192903518676758
    7. '_index' → logprob: -4.567903518676758
    8. '_length' → logprob: -4.817903518676758
    9. '_idx' → logprob: -5.442903518676758
    10. '_s' → logprob: -5.942903518676758

Token 12: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26646047830581665
    2. '_' → logprob: -2.391460418701172
    3. '(s' → logprob: -2.516460418701172
    4. 's' → logprob: -2.891460418701172
    5. '=' → logprob: -5.766460418701172
    6. '()' → logprob: -6.141460418701172
    7. ')' → logprob: -7.641460418701172
    8. '_s' → logprob: -8.641460418701172
    9. ' =' → logprob: -9.641460418701172
    10. '('' → logprob: -10.891460418701172

Token 13: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07895104587078094
    2. ' len' → logprob: -2.578951120376587
    3. '(len' → logprob: -9.953950881958008
    4. 's' → logprob: -12.453950881958008
    5. '=len' → logprob: -12.703950881958008
    6. '10' → logprob: -13.203950881958008
    7. '[len' → logprob: -13.703950881958008
    8. '5' → logprob: -13.953950881958008
    9. '4' → logprob: -14.328950881958008
    10. '0' → logprob: -14.453950881958008

Token 14: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.005236598663032055
    2. '(' → logprob: -5.255236625671387
    3. '(t' → logprob: -13.505236625671387
    4. 's' → logprob: -13.755236625671387
    5. '(
' → logprob: -15.005236625671387
    6. ' (' → logprob: -17.50523567199707
    7. '(ss' → logprob: -17.63023567199707
    8. '(

' → logprob: -18.00523567199707
    9. '((' → logprob: -18.50523567199707
    10. '(x' → logprob: -19.13023567199707

Token 15: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.729906196298543e-06
    2. '))' → logprob: -12.500009536743164
    3. ' )' → logprob: -12.750009536743164
    4. '[' → logprob: -14.250009536743164
    5. '`)' → logprob: -14.875009536743164
    6. '')' → logprob: -15.250009536743164
    7. '()' → logprob: -15.250009536743164
    8. ')
' → logprob: -15.375009536743164
    9. 's' → logprob: -15.375009536743164
    10. ')s' → logprob: -15.875009536743164

Token 16: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13322943449020386
    2. 'i' → logprob: -2.8832294940948486
    3. 'if' → logprob: -3.3832294940948486
    4. ' for' → logprob: -4.6332292556762695
    5. '
' → logprob: -4.8832292556762695
    6. 'n' → logprob: -5.0082292556762695
    7. '\n' → logprob: -5.8832292556762695
    8. '#' → logprob: -6.5082292556762695
    9. 'while' → logprob: -7.1332292556762695
    10. 'newline' → logprob: -7.2582292556762695

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.033572278916835785
    2. '<|end|>' → logprob: -3.658572196960449
    3. '\[' → logprob: -6.283572196960449
    4. '#' → logprob: -6.658572196960449
    5. '```' → logprob: -7.033572196960449
    6. '[len' → logprob: -7.533572196960449
    7. '[:]' → logprob: -7.783572196960449
    8. '[::-' → logprob: -8.28357219696045
    9. '[
' → logprob: -8.53357219696045
    10. '[-' → logprob: -8.78357219696045

Token 18: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.058930862694978714
    2. ' s' → logprob: -2.9339308738708496
    3. 'list' → logprob: -6.43393087387085
    4. '"s' → logprob: -7.68393087387085
    5. 'input' → logprob: -8.058930397033691
    6. '"' → logprob: -8.058930397033691
    7. ' list' → logprob: -8.058930397033691
    8. ''s' → logprob: -8.683930397033691
    9. ''' → logprob: -8.808930397033691
    10. '""' → logprob: -9.058930397033691

Token 19: ' +' (ID: 659)
  Prédit: '.lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.lower' → logprob: -0.7278288006782532
    2. '[::-' → logprob: -1.1028287410736084
    3. '[:]' → logprob: -2.6028287410736084
    4. '.replace' → logprob: -3.6028287410736084
    5. '[:-' → logprob: -3.9778287410736084
    6. '+' → logprob: -3.9778287410736084
    7. '[' → logprob: -4.2278289794921875
    8. '.upper' → logprob: -4.4778289794921875
    9. '<|end|>' → logprob: -4.4778289794921875
    10. '[:' → logprob: -6.3528289794921875

Token 20: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8188198208808899
    2. '"' → logprob: -1.0688197612762451
    3. ''' → logprob: -1.8188197612762451
    4. ''s' → logprob: -3.693819761276245
    5. '"s' → logprob: -4.068819999694824
    6. ' s' → logprob: -5.818819999694824
    7. '"#' → logprob: -6.568819999694824
    8. ' "' → logprob: -6.818819999694824
    9. '(s' → logprob: -7.068819999694824
    10. ' '' → logprob: -7.068819999694824

Token 21: '4' (ID: 19)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5965009331703186
    2. 's' → logprob: -2.221500873565674
    3. ''' → logprob: -2.846500873565674
    4. '#' → logprob: -3.471500873565674
    5. '_' → logprob: -3.721500873565674
    6. '"s' → logprob: -3.846500873565674
    7. 'a' → logprob: -3.971500873565674
    8. '?' → logprob: -3.971500873565674
    9. '.' → logprob: -4.096500873565674
    10. '"""' → logprob: -4.534000873565674

Token 22: '"
' (ID: 1092)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9194542169570923
    2. '0' → logprob: -1.9194542169570923
    3. '4' → logprob: -2.6694540977478027
    4. '3' → logprob: -2.7944540977478027
    5. '5' → logprob: -3.4194540977478027
    6. '8' → logprob: -3.4194540977478027
    7. '*' → logprob: -3.7944540977478027
    8. '7' → logprob: -3.7944540977478027
    9. '"' → logprob: -4.044454097747803
    10. ' ' → logprob: -4.106954097747803

Token 23: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3743373155593872
    2. 'i' → logprob: -1.7493373155593872
    3. 'for' → logprob: -1.7493373155593872
    4. '4' → logprob: -2.3743371963500977
    5. 's' → logprob: -2.8743371963500977
    6. 'while' → logprob: -3.2493371963500977
    7. '0' → logprob: -3.4993371963500977
    8. 'a' → logprob: -3.8743371963500977
    9. ' if' → logprob: -3.8743371963500977
    10. '#' → logprob: -4.124337196350098

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5464080572128296
    2. '=' → logprob: -1.6714080572128296
    3. 'i' → logprob: -2.671408176422119
    4. 'b' → logprob: -3.671408176422119
    5. 'r' → logprob: -3.796408176422119
    6. 's' → logprob: -3.796408176422119
    7. ' ' → logprob: -4.046408176422119
    8. 'n' → logprob: -4.546408176422119
    9. 'a' → logprob: -4.921408176422119
    10. 'rray' → logprob: -4.921408176422119

Token 25: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2310638725757599
    2. '[]' → logprob: -2.3560638427734375
    3. ' ' → logprob: -3.1060638427734375
    4. '0' → logprob: -3.8560638427734375
    5. ' ""' → logprob: -3.9810638427734375
    6. ' [' → logprob: -4.2310638427734375
    7. '""' → logprob: -5.1060638427734375
    8. ' ''' → logprob: -6.4810638427734375
    9. ' "' → logprob: -6.8560638427734375
    10. ' s' → logprob: -7.1060638427734375

Token 26: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.309375137090683
    2. '0' → logprob: -1.8093751668930054
    3. '""' → logprob: -2.934375047683716
    4. '[' → logprob: -3.934375047683716
    5. '"' → logprob: -4.809375286102295
    6. 'int' → logprob: -5.059375286102295
    7. 's' → logprob: -5.309375286102295
    8. '["' → logprob: -6.309375286102295
    9. 'tail' → logprob: -6.684375286102295
    10. '[int' → logprob: -6.809375286102295

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19307757914066315
    2. '<|end|>' → logprob: -2.193077564239502
    3. ' ' → logprob: -3.818077564239502
    4. 'i' → logprob: -4.568077564239502
    5. 'while' → logprob: -4.818077564239502
    6. ' 
' → logprob: -4.818077564239502
    7. 'for' → logprob: -5.818077564239502
    8. 'n' → logprob: -6.443077564239502
    9. '  
' → logprob: -6.443077564239502
    10. 'b' → logprob: -6.693077564239502

Token 28: 'b' (ID: 65)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1756597757339478
    2. 'w' → logprob: -1.8006597757339478
    3. '
' → logprob: -1.9256597757339478
    4. 'b' → logprob: -2.300659656524658
    5. 'while' → logprob: -2.800659656524658
    6. ' ' → logprob: -2.925659656524658
    7. ' 
' → logprob: -3.300659656524658
    8. ' while' → logprob: -3.675659656524658
    9. 'n' → logprob: -4.175659656524658
    10. 'a' → logprob: -4.425659656524658

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002611368894577
    2. '=' → logprob: -2.3502612113952637
    3. ' +=' → logprob: -10.600260734558105
    4. ' ' → logprob: -11.600260734558105
    5. ',' → logprob: -11.975260734558105
    6. 'a' → logprob: -12.725260734558105
    7. '+' → logprob: -12.725260734558105
    8. '+=' → logprob: -13.350260734558105
    9. ' ,' → logprob: -13.725260734558105
    10. 's' → logprob: -13.975260734558105

Token 30: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3009270131587982
    2. ' ' → logprob: -1.4259270429611206
    3. '1' → logprob: -4.05092716217041
    4. 'a' → logprob: -7.55092716217041
    5. '"' → logprob: -8.17592716217041
    6. ' -' → logprob: -8.55092716217041
    7. ' a' → logprob: -8.80092716217041
    8. '-' → logprob: -8.80092716217041
    9. 'len' → logprob: -9.05092716217041
    10. 's' → logprob: -9.30092716217041

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02118786796927452
    2. '1' → logprob: -4.521187782287598
    3. ' ' → logprob: -5.771187782287598
    4. '-' → logprob: -6.146187782287598
    5. 'a' → logprob: -6.271187782287598
    6. 'len' → logprob: -7.146187782287598
    7. 'tail' → logprob: -7.521187782287598
    8. '4' → logprob: -8.146187782287598
    9. '2' → logprob: -8.396187782287598
    10. '"' → logprob: -8.646187782287598

Token 32: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04642773047089577
    2. 'for' → logprob: -3.7964277267456055
    3. '\n' → logprob: -5.2964277267456055
    4. ' 
' → logprob: -5.2964277267456055
    5. '' → logprob: -5.9214277267456055
    6. ':' → logprob: -6.2964277267456055
    7. ' for' → logprob: -6.2964277267456055
    8. 'while' → logprob: -6.7964277267456055
    9. 'i' → logprob: -6.9214277267456055
    10. 'n' → logprob: -7.1714277267456055

Token 33: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17418977618217468
    2. '```' → logprob: -3.049189805984497
    3. '\n' → logprob: -3.299189805984497
    4. ':' → logprob: -3.674189805984497
    5. 'for' → logprob: -3.674189805984497
    6. 'while' → logprob: -4.174189567565918
    7. 'i' → logprob: -5.799189567565918
    8. ' 
' → logprob: -6.799189567565918
    9. 'w' → logprob: -6.799189567565918
    10. 'n' → logprob: -7.049189567565918

Token 34: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0008848957950249314
    2. '  ' → logprob: -8.000885009765625
    3. ' i' → logprob: -8.125885009765625
    4. '_' → logprob: -8.875885009765625
    5. 'i' → logprob: -9.625885009765625
    6. 's' → logprob: -10.875885009765625
    7. ' ‌' → logprob: -11.625885009765625
    8. ' s' → logprob: -12.000885009765625
    9. ' _' → logprob: -12.250885009765625
    10. ' )' → logprob: -13.875885009765625

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21263717114925385
    2. 'in' → logprob: -2.087637186050415
    3. ' ' → logprob: -2.712637186050415
    4. '  ' → logprob: -6.962636947631836
    5. ' i' → logprob: -9.962636947631836
    6. 'n' → logprob: -11.087636947631836
    7. 's' → logprob: -11.212636947631836
    8. ' <' → logprob: -11.212636947631836
    9. ' ```' → logprob: -11.212636947631836
    10. ' :' → logprob: -11.337636947631836

Token 36: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0076637668535113335
    2. 'range' → logprob: -4.882663726806641
    3. ' s' → logprob: -9.88266372680664
    4. ' ' → logprob: -12.63266372680664
    5. 's' → logprob: -13.38266372680664
    6. '	range' → logprob: -14.25766372680664
    7. ' xrange' → logprob: -15.00766372680664
    8. ' rang' → logprob: -15.75766372680664
    9. '(range' → logprob: -16.00766372680664
    10. '  ' → logprob: -16.25766372680664

Token 37: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004402582533657551
    2. '(t' → logprob: -5.5044026374816895
    3. '(len' → logprob: -8.254402160644531
    4. ' (' → logprob: -10.004402160644531
    5. '(
' → logprob: -11.754402160644531
    6. '(

' → logprob: -12.504402160644531
    7. '(s' → logprob: -12.754402160644531
    8. '(n' → logprob: -13.879402160644531
    9. '(length' → logprob: -14.129402160644531
    10. '()' → logprob: -14.129402160644531

Token 38: 'aille' (ID: 44714)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21788419783115387
    2. 'ail' → logprob: -1.7178841829299927
    3. 'aille' → logprob: -4.592884063720703
    4. 'al' → logprob: -5.842884063720703
    5. 'ai' → logprob: -6.592884063720703
    6. '(a' → logprob: -7.467884063720703
    7. '(' → logprob: -7.842884063720703
    8. 'alle' → logprob: -8.592884063720703
    9. '1' → logprob: -8.592884063720703
    10. 'ale' → logprob: -9.467884063720703

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004165656864643097
    2. ' ):' → logprob: -5.7541656494140625
    3. ')' → logprob: -7.2541656494140625
    4. '-' → logprob: -9.004165649414062
    5. '):
' → logprob: -9.254165649414062
    6. ':' → logprob: -10.004165649414062
    7. ' )' → logprob: -12.504165649414062
    8. '():' → logprob: -12.754165649414062
    9. '+' → logprob: -12.879165649414062
    10. ' :' → logprob: -13.379165649414062

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5355309247970581
    2. ' ' → logprob: -1.285530924797058
    3. '<|end|>' → logprob: -2.9105310440063477
    4. ':' → logprob: -3.5355310440063477
    5. ' if' → logprob: -3.5355310440063477
    6. ' 
' → logprob: -4.035531044006348
    7. '    
' → logprob: -6.535531044006348
    8. ' :' → logprob: -6.910531044006348
    9. '    ' → logprob: -6.910531044006348
    10. '  ' → logprob: -7.410531044006348

Token 41: ' v' (ID: 323)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10148312151432037
    2. ' ' → logprob: -2.976483106613159
    3. 'if' → logprob: -3.351483106613159
    4. '   ' → logprob: -4.726483345031738
    5. 's' → logprob: -7.351483345031738
    6. ' s' → logprob: -8.601483345031738
    7. '  ' → logprob: -8.851483345031738
    8. '    ' → logprob: -8.851483345031738
    9. 'a' → logprob: -9.101483345031738
    10. '<|end|>' → logprob: -9.476483345031738

Token 42: '1' (ID: 16)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.5513365864753723
    2. '=' → logprob: -1.3013365268707275
    3. ' =' → logprob: -2.3013365268707275
    4. 'a' → logprob: -3.1763365268707275
    5. '   ' → logprob: -5.926336765289307
    6. 'i' → logprob: -6.426336765289307
    7. 'v' → logprob: -7.176336765289307
    8. '=int' → logprob: -7.301336765289307
    9. ' ' → logprob: -7.801336765289307
    10. 'alid' → logprob: -7.801336765289307

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6416791081428528
    2. '=' → logprob: -0.7666791081428528
    3. ' +=' → logprob: -6.016679286956787
    4. '+=' → logprob: -6.266679286956787
    5. '+' → logprob: -6.391679286956787
    6. ',' → logprob: -6.891679286956787
    7. 'a' → logprob: -7.391679286956787
    8. ' ' → logprob: -8.266678810119629
    9. ')' → logprob: -8.266678810119629
    10. '=int' → logprob: -8.891678810119629

Token 44: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.0140633583068848
    2. 'int' → logprob: -1.1390633583068848
    3. 's' → logprob: -1.7640633583068848
    4. ' s' → logprob: -2.1390633583068848
    5. ' ord' → logprob: -4.014063358306885
    6. 'ord' → logprob: -4.764063358306885
    7. '   ' → logprob: -8.139062881469727
    8. 'a' → logprob: -8.264062881469727
    9. ' ' → logprob: -9.014062881469727
    10. '0' → logprob: -9.264062881469727

Token 45: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0031977968756109476
    2. '(' → logprob: -5.75319766998291
    3. 's' → logprob: -10.87819766998291
    4. '(
' → logprob: -15.00319766998291
    5. '(a' → logprob: -15.12819766998291
    6. '('' → logprob: -15.50319766998291
    7. '(t' → logprob: -15.75319766998291
    8. '((' → logprob: -16.378198623657227
    9. '()' → logprob: -16.753198623657227
    10. ' (' → logprob: -16.753198623657227

Token 46: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014217838179320097
    2. '[' → logprob: -6.626421928405762
    3. ')' → logprob: -10.251421928405762
    4. '[v' → logprob: -10.626421928405762
    5. '[s' → logprob: -11.376421928405762
    6. '[a' → logprob: -11.751421928405762
    7. ' [' → logprob: -11.876421928405762
    8. '[b' → logprob: -12.876421928405762
    9. 'i' → logprob: -13.251421928405762
    10. '[
' → logprob: -13.626421928405762

Token 47: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0030081309378147125
    2. '])+' → logprob: -6.7530083656311035
    3. ']' → logprob: -7.0030083656311035
    4. '])-' → logprob: -8.503007888793945
    5. '+' → logprob: -8.628007888793945
    6. ']+' → logprob: -8.753007888793945
    7. ' ])' → logprob: -9.253007888793945
    8. '"])' → logprob: -9.628007888793945
    9. ''])' → logprob: -9.753007888793945
    10. '])
' → logprob: -9.878007888793945

Token 48: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11681123822927475
    2. ' +' → logprob: -3.4918112754821777
    3. ' if' → logprob: -4.116811275482178
    4. 'if' → logprob: -4.116811275482178
    5. '   ' → logprob: -4.241811275482178
    6. 'v' → logprob: -4.491811275482178
    7. '-' → logprob: -5.366811275482178
    8. '+
' → logprob: -5.366811275482178
    9. ')' → logprob: -5.866811275482178
    10. '*' → logprob: -5.991811275482178

Token 49: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.4030865728855133
    2. '+' → logprob: -1.278086543083191
    3. ' ' → logprob: -3.4030866622924805
    4. ' v' → logprob: -5.5280866622924805
    5. ' +' → logprob: -5.5280866622924805
    6. ' if' → logprob: -5.9030866622924805
    7. '   ' → logprob: -6.0280866622924805
    8. '	v' → logprob: -7.0280866622924805
    9. ')' → logprob: -7.1530866622924805
    10. '  ' → logprob: -7.1530866622924805

Token 50: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3132263123989105
    2. '2' → logprob: -2.3132262229919434
    3. '+' → logprob: -2.8132262229919434
    4. '=' → logprob: -2.8132262229919434
    5. '_' → logprob: -3.8132262229919434
    6. ' =' → logprob: -3.9382262229919434
    7. '-' → logprob: -5.938226222991943
    8. ' ' → logprob: -6.313226222991943
    9. ')' → logprob: -6.438226222991943
    10. 'f' → logprob: -7.688226222991943

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895877003669739
    2. '=' → logprob: -2.463958740234375
    3. ' ' → logprob: -11.588958740234375
    4. '=int' → logprob: -12.088958740234375
    5. ' +=' → logprob: -12.838958740234375
    6. '+=' → logprob: -14.713958740234375
    7. ' ' → logprob: -15.213958740234375
    8. ',' → logprob: -15.338958740234375
    9. '   ' → logprob: -15.588958740234375
    10. '    ' → logprob: -15.838958740234375

Token 52: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5762342810630798
    2. ' int' → logprob: -0.8262342810630798
    3. '0' → logprob: -9.201233863830566
    4. ' ' → logprob: -9.826233863830566
    5. 'a' → logprob: -10.576233863830566
    6. '   ' → logprob: -10.576233863830566
    7. ' v' → logprob: -11.326233863830566
    8. 'v' → logprob: -11.326233863830566
    9. ' a' → logprob: -11.451233863830566
    10. '[int' → logprob: -12.076233863830566

Token 53: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009202735964208841
    2. '(' → logprob: -7.000920295715332
    3. ' (' → logprob: -12.250920295715332
    4. 's' → logprob: -12.625920295715332
    5. '('' → logprob: -15.250920295715332
    6. '(
' → logprob: -16.250919342041016
    7. '((' → logprob: -16.250919342041016
    8. '(t' → logprob: -16.500919342041016
    9. '("("' → logprob: -16.750919342041016
    10. ')' → logprob: -17.000919342041016

Token 54: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001931970240548253
    2. '[' → logprob: -6.376932144165039
    3. '[s' → logprob: -9.876932144165039
    4. '[
' → logprob: -10.001932144165039
    5. ' [' → logprob: -10.376932144165039
    6. '(i' → logprob: -10.876932144165039
    7. '+' → logprob: -10.876932144165039
    8. ' ' → logprob: -11.626932144165039
    9. '```' → logprob: -11.876932144165039
    10. 's' → logprob: -11.876932144165039

Token 55: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007748471572995186
    2. ' +' → logprob: -4.882748603820801
    3. '])' → logprob: -9.3827486038208
    4. ']' → logprob: -10.8827486038208
    5. ']+' → logprob: -11.1327486038208
    6. '-' → logprob: -11.6327486038208
    7. ' ' → logprob: -12.5077486038208
    8. '+i' → logprob: -12.7577486038208
    9. '])+' → logprob: -13.2577486038208
    10. '   ' → logprob: -13.3827486038208

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8828707804204896e-05
    2. '])' → logprob: -10.375048637390137
    3. ' ' → logprob: -11.000048637390137
    4. ']' → logprob: -15.375048637390137
    5. '4' → logprob: -16.000049591064453
    6. '2' → logprob: -16.250049591064453
    7. '```' → logprob: -16.375049591064453
    8. '   ' → logprob: -16.625049591064453
    9. '3' → logprob: -16.750049591064453
    10. ' ])' → logprob: -17.625049591064453

Token 57: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0010375719284638762
    2. ')' → logprob: -7.00103759765625
    3. ']' → logprob: -10.00103759765625
    4. '])
' → logprob: -10.50103759765625
    5. '])+' → logprob: -10.50103759765625
    6. ']+' → logprob: -11.37603759765625
    7. '"])' → logprob: -12.62603759765625
    8. ''])' → logprob: -13.25103759765625
    9. ' ])' → logprob: -13.37603759765625
    10. '])-' → logprob: -13.62603759765625

Token 58: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6351680159568787
    2. ' if' → logprob: -1.1351680755615234
    3. '+' → logprob: -2.1351680755615234
    4. ' ' → logprob: -4.635168075561523
    5. 'a' → logprob: -5.135168075561523
    6. 'b' → logprob: -6.135168075561523
    7. 'c' → logprob: -6.385168075561523
    8. 's' → logprob: -6.510168075561523
    9. ' +' → logprob: -6.510168075561523
    10. ')' → logprob: -6.760168075561523

Token 60: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.12605474889278412
    2. ' (' → logprob: -2.3760547637939453
    3. ' ' → logprob: -4.251054763793945
    4. 'v' → logprob: -4.876054763793945
    5. '(v' → logprob: -6.376054763793945
    6. '(' → logprob: -7.001054763793945
    7. ' a' → logprob: -7.751054763793945
    8. ' s' → logprob: -8.501054763793945
    9. ' b' → logprob: -9.251054763793945
    10. ' abs' → logprob: -9.501054763793945

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020735036581754684
    2. '2' → logprob: -3.895735025405884
    3. '+' → logprob: -9.895734786987305
    4. ' ' → logprob: -9.895734786987305
    5. ')' → logprob: -11.020734786987305
    6. '==' → logprob: -11.270734786987305
    7. '>' → logprob: -11.770734786987305
    8. ' ==' → logprob: -11.833234786987305
    9. ' >' → logprob: -12.458234786987305
    10. ' <' → logprob: -12.520734786987305

Token 62: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7036837935447693
    2. ' +' → logprob: -1.578683853149414
    3. '>' → logprob: -2.328683853149414
    4. '<' → logprob: -2.828683853149414
    5. ' >' → logprob: -2.953683853149414
    6. ' <' → logprob: -3.203683853149414
    7. ' >=' → logprob: -4.203683853149414
    8. '==' → logprob: -4.328683853149414
    9. '>=' → logprob: -4.578683853149414
    10. ' ==' → logprob: -5.328683853149414

Token 63: ' b' (ID: 287)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20466215908527374
    2. ' v' → logprob: -1.7046622037887573
    3. '1' → logprob: -6.579662322998047
    4. ' ' → logprob: -7.329662322998047
    5. '4' → logprob: -7.704662322998047
    6. '2' → logprob: -8.454662322998047
    7. '	v' → logprob: -8.829662322998047
    8. 'b' → logprob: -9.579662322998047
    9. '3' → logprob: -9.704662322998047
    10. 'a' → logprob: -9.954662322998047

Token 64: ' >=' (ID: 5064)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8805777430534363
    2. '>=' → logprob: -1.130577802658081
    3. '>' → logprob: -2.255577802658081
    4. ' >=' → logprob: -2.380577802658081
    5. '<' → logprob: -3.755577802658081
    6. ' +' → logprob: -3.880577802658081
    7. ' >' → logprob: -4.005577564239502
    8. ' <' → logprob: -6.005577564239502
    9. '==' → logprob: -9.13057804107666
    10. '1' → logprob: -9.25557804107666

Token 65: ' ' (ID: 220)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03754490613937378
    2. '10' → logprob: -4.1625447273254395
    3. '5' → logprob: -4.5375447273254395
    4. '4' → logprob: -4.6625447273254395
    5. ' v' → logprob: -7.6625447273254395
    6. '9' → logprob: -8.787545204162598
    7. '7' → logprob: -8.787545204162598
    8. ' ' → logprob: -8.787545204162598
    9. '6' → logprob: -10.162545204162598
    10. '2' → logprob: -10.162545204162598

Token 66: '6' (ID: 21)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006601803004741669
    2. '10' → logprob: -5.881601810455322
    3. '5' → logprob: -6.256601810455322
    4. '4' → logprob: -7.131601810455322
    5. ' v' → logprob: -8.256601333618164
    6. '9' → logprob: -8.256601333618164
    7. '7' → logprob: -8.381601333618164
    8. '2' → logprob: -9.756601333618164
    9. '6' → logprob: -9.756601333618164
    10. '3' → logprob: -9.756601333618164

Token 67: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0070292348973453045
    2. ' :' → logprob: -5.007029056549072
    3. '   ' → logprob: -8.75702953338623
    4. '):' → logprob: -10.38202953338623
    5. ':
' → logprob: -10.38202953338623
    6. ' and' → logprob: -10.75702953338623
    7. ',' → logprob: -11.25702953338623
    8. ' ' → logprob: -11.25702953338623
    9. '0' → logprob: -11.88202953338623
    10. '.' → logprob: -12.13202953338623

Token 68: ' (' (ID: 350)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.07136666029691696
    2. 'v' → logprob: -3.571366548538208
    3. ' b' → logprob: -4.196366786956787
    4. ' (' → logprob: -4.571366786956787
    5. ' s' → logprob: -4.821366786956787
    6. ' ' → logprob: -6.071366786956787
    7. ' not' → logprob: -6.446366786956787
    8. 'b' → logprob: -7.321366786956787
    9. '(v' → logprob: -7.446366786956787
    10. 's' → logprob: -7.696366786956787

Token 69: 'v' (ID: 85)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.455875039100647
    2. 'v' → logprob: -1.080875039100647
    3. ' b' → logprob: -4.955874919891357
    4. ' (' → logprob: -5.080874919891357
    5. ' s' → logprob: -5.205874919891357
    6. 'b' → logprob: -6.080874919891357
    7. 's' → logprob: -6.455874919891357
    8. '(v' → logprob: -6.955874919891357
    9. ' ' → logprob: -7.205874919891357
    10. ' not' → logprob: -7.705874919891357

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007845098152756691
    2. '2' → logprob: -5.007844924926758
    3. ' ' → logprob: -7.757844924926758
    4. ' v' → logprob: -8.382844924926758
    5. 'v' → logprob: -9.132844924926758
    6. 's' → logprob: -9.382844924926758
    7. ' s' → logprob: -9.507844924926758
    8. ')' → logprob: -10.382844924926758
    9. '+' → logprob: -10.632844924926758
    10. '  ' → logprob: -11.195344924926758

Token 71: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13354238867759705
    2. '+' → logprob: -2.13354229927063
    3. '==' → logprob: -5.883542537689209
    4. ' ==' → logprob: -6.133542537689209
    5. '+b' → logprob: -7.258542537689209
    6. ' ' → logprob: -7.508542537689209
    7. ' -' → logprob: -9.63354206085205
    8. '<|end|>' → logprob: -9.88354206085205
    9. '  ' → logprob: -10.75854206085205
    10. ')' → logprob: -10.88354206085205

Token 72: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4566344916820526
    2. 'b' → logprob: -1.206634521484375
    3. ' a' → logprob: -3.331634521484375
    4. 'a' → logprob: -3.706634521484375
    5. ' v' → logprob: -5.831634521484375
    6. ' ' → logprob: -6.206634521484375
    7. 'v' → logprob: -6.956634521484375
    8. ' s' → logprob: -7.706634521484375
    9. '1' → logprob: -8.081634521484375
    10. '    ' → logprob: -9.831634521484375

Token 73: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6442945599555969
    2. ' ==' → logprob: -1.1442945003509521
    3. ')' → logprob: -2.394294500350952
    4. ' <' → logprob: -3.644294500350952
    5. '<' → logprob: -4.144294738769531
    6. '+' → logprob: -5.144294738769531
    7. '>' → logprob: -5.269294738769531
    8. ' >' → logprob: -5.644294738769531
    9. ' +' → logprob: -6.519294738769531
    10. ')==' → logprob: -6.644294738769531

Token 74: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9024511575698853
    2. '5' → logprob: -1.2774511575698853
    3. '4' → logprob: -1.4024511575698853
    4. '1' → logprob: -3.5274510383605957
    5. '3' → logprob: -3.6524510383605957
    6. '2' → logprob: -4.527451038360596
    7. '7' → logprob: -6.277451038360596
    8. '6' → logprob: -7.152451038360596
    9. '10' → logprob: -8.277451515197754
    10. '8' → logprob: -8.777451515197754

Token 75: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5410411357879639
    2. '5' → logprob: -1.5410411357879639
    3. ' ' → logprob: -2.666041135787964
    4. '1' → logprob: -2.916041135787964
    5. '3' → logprob: -3.416041135787964
    6. '2' → logprob: -3.791041135787964
    7. '10' → logprob: -4.416041374206543
    8. '7' → logprob: -5.541041374206543
    9. '9' → logprob: -6.041041374206543
    10. '6' → logprob: -6.291041374206543

Token 76: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09066528081893921
    2. 'and' → logprob: -2.465665340423584
    3. ')' → logprob: -6.840665340423584
    4. ' ' → logprob: -8.090664863586426
    5. '    ' → logprob: -8.840664863586426
    6. ' )' → logprob: -9.590664863586426
    7. '   ' → logprob: -9.965664863586426
    8. '<|end|>' → logprob: -10.465664863586426
    9. '	and' → logprob: -11.465664863586426
    10. '  ' → logprob: -11.840664863586426

Token 77: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.09606296569108963
    2. 'v' → logprob: -2.7210628986358643
    3. ' ' → logprob: -5.221063137054443
    4. ' s' → logprob: -5.346063137054443
    5. ' not' → logprob: -5.346063137054443
    6. ' i' → logprob: -5.971063137054443
    7. ' (' → logprob: -5.971063137054443
    8. ' b' → logprob: -6.221063137054443
    9. '  ' → logprob: -6.971063137054443
    10. ' a' → logprob: -7.221063137054443

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0158480703830719
    2. '1' → logprob: -4.265848159790039
    3. ' ' → logprob: -6.640848159790039
    4. '+' → logprob: -9.390848159790039
    5. '   ' → logprob: -9.390848159790039
    6. '  ' → logprob: -10.765848159790039
    7. '    ' → logprob: -10.765848159790039
    8. '```' → logprob: -10.890848159790039
    9. '==' → logprob: -11.015848159790039
    10. '        ' → logprob: -11.265848159790039

Token 79: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1463228464126587
    2. ' >=' → logprob: -1.6463228464126587
    3. '>=' → logprob: -2.021322727203369
    4. ' ==' → logprob: -2.146322727203369
    5. '>' → logprob: -2.396322727203369
    6. ' >' → logprob: -3.396322727203369
    7. ' <' → logprob: -3.646322727203369
    8. '+' → logprob: -3.646322727203369
    9. '<' → logprob: -3.771322727203369
    10. ')' → logprob: -4.896322727203369

Token 80: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.7568340301513672
    2. '4' → logprob: -1.3818340301513672
    3. '6' → logprob: -2.256834030151367
    4. '2' → logprob: -3.131834030151367
    5. '8' → logprob: -3.381834030151367
    6. '7' → logprob: -3.631834030151367
    7. '1' → logprob: -3.756834030151367
    8. '3' → logprob: -3.756834030151367
    9. '9' → logprob: -4.256834030151367
    10. ' ' → logprob: -4.881834030151367

Token 81: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.7536056637763977
    2. '4' → logprob: -1.378605604171753
    3. '6' → logprob: -1.878605604171753
    4. '7' → logprob: -3.628605604171753
    5. '8' → logprob: -3.628605604171753
    6. '2' → logprob: -3.753605604171753
    7. '3' → logprob: -4.003605842590332
    8. '1' → logprob: -4.128605842590332
    9. '9' → logprob: -4.503605842590332
    10. '0' → logprob: -6.753605842590332

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010255211964249611
    2. ' ):' → logprob: -5.135255336761475
    3. ')' → logprob: -5.760255336761475
    4. '):
' → logprob: -7.760255336761475
    5. ' and' → logprob: -8.135254859924316
    6. ':' → logprob: -8.385254859924316
    7. '   ' → logprob: -9.385254859924316
    8. ' )' → logprob: -9.510254859924316
    9. 'and' → logprob: -11.135254859924316
    10. ' ' → logprob: -11.510254859924316

Token 83: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4683223366737366
    2. '       ' → logprob: -1.0933222770690918
    3. 'b' → logprob: -4.343322277069092
    4. '    ' → logprob: -4.718322277069092
    5. ' b' → logprob: -5.343322277069092
    6. '	b' → logprob: -5.343322277069092
    7. '	   ' → logprob: -6.218322277069092
    8. '	' → logprob: -6.843322277069092
    9. '    
' → logprob: -7.218322277069092
    10. ':' → logprob: -7.218322277069092

Token 84: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1498221158981323
    2. '    ' → logprob: -1.3998221158981323
    3. ' b' → logprob: -1.3998221158981323
    4. 'b' → logprob: -2.024822235107422
    5. ' ' → logprob: -4.399822235107422
    6. '       ' → logprob: -4.524822235107422
    7. ' 
' → logprob: -4.774822235107422
    8. '    
' → logprob: -4.774822235107422
    9. '     
' → logprob: -5.524822235107422
    10. '	b' → logprob: -5.774822235107422

Token 85: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06796833872795105
    2. ' =' → logprob: -2.8179683685302734
    3. '+=' → logprob: -5.567968368530273
    4. '+' → logprob: -6.567968368530273
    5. ' +' → logprob: -7.692968368530273
    6. '=' → logprob: -8.567968368530273
    7. ' ' → logprob: -9.692968368530273
    8. '   ' → logprob: -11.067968368530273
    9. '  ' → logprob: -12.192968368530273
    10. '++' → logprob: -12.192968368530273

Token 86: ' a' (ID: 261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29100140929222107
    2. 'a' → logprob: -1.7910014390945435
    3. 'b' → logprob: -3.541001319885254
    4. '0' → logprob: -4.041001319885254
    5. ' ' → logprob: -4.166001319885254
    6. ' a' → logprob: -4.666001319885254
    7. 'v' → logprob: -5.041001319885254
    8. ' b' → logprob: -5.666001319885254
    9. ' (' → logprob: -6.916001319885254
    10. ' v' → logprob: -7.166001319885254

Token 87: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06072008237242699
    2. ' +' → logprob: -3.4357199668884277
    3. '1' → logprob: -3.6857199668884277
    4. ' ' → logprob: -6.935719966888428
    5. '0' → logprob: -8.685720443725586
    6. 'a' → logprob: -8.685720443725586
    7. '   ' → logprob: -8.935720443725586
    8. '2' → logprob: -10.310720443725586
    9. '  ' → logprob: -10.685720443725586
    10. '++' → logprob: -11.185720443725586

Token 88: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03403303027153015
    2. ' ' → logprob: -3.4090330600738525
    3. '7' → logprob: -9.034032821655273
    4. '2' → logprob: -9.534032821655273
    5. '(' → logprob: -9.659032821655273
    6. '10' → logprob: -9.909032821655273
    7. ' (' → logprob: -10.909032821655273
    8. '6' → logprob: -10.909032821655273
    9. '  ' → logprob: -11.159032821655273
    10. '4' → logprob: -11.534032821655273

Token 89: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07645073533058167
    2. '10' → logprob: -3.951450824737549
    3. 'v' → logprob: -4.326450824737549
    4. '(' → logprob: -4.326450824737549
    5. '7' → logprob: -4.701450824737549
    6. '6' → logprob: -4.701450824737549
    7. ' ' → logprob: -5.701450824737549
    8. '0' → logprob: -6.951450824737549
    9. '(v' → logprob: -7.076450824737549
    10. 's' → logprob: -7.201450824737549

Token 90: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.45227307081222534
    2. '-' → logprob: -1.2022731304168701
    3. ')' → logprob: -2.82727313041687
    4. ')-(' → logprob: -6.827272891998291
    5. '-(' → logprob: -7.202272891998291
    6. '-v' → logprob: -7.202272891998291
    7. ' ' → logprob: -7.452272891998291
    8. '  ' → logprob: -8.82727336883545
    9. ' -(' → logprob: -8.95227336883545
    10. 's' → logprob: -9.07727336883545

Token 91: ' v' (ID: 323)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.09380708634853363
    2. 'v' → logprob: -2.4688069820404053
    3. ' (' → logprob: -5.593807220458984
    4. '(' → logprob: -7.468807220458984
    5. '(s' → logprob: -7.968807220458984
    6. ' v' → logprob: -9.343807220458984
    7. 's' → logprob: -9.593807220458984
    8. ')' → logprob: -11.343807220458984
    9. '   ' → logprob: -11.593807220458984
    10. '(int' → logprob: -11.718807220458984

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ')' → logprob: -12.375005722045898
    3. '[' → logprob: -14.500005722045898
    4. '2' → logprob: -15.625005722045898
    5. '[i' → logprob: -16.2500057220459
    6. ' ' → logprob: -16.6250057220459
    7. '<|end|>' → logprob: -16.6875057220459
    8. ']' → logprob: -16.8750057220459
    9. '```' → logprob: -17.1875057220459
    10. '<|end|>' → logprob: -17.4375057220459

Token 93: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.81415194272995
    2. ' -' → logprob: -0.93915194272995
    3. ')' → logprob: -1.8141520023345947
    4. '-b' → logprob: -6.439151763916016
    5. ' ' → logprob: -7.439151763916016
    6. ' )' → logprob: -7.439151763916016
    7. '  ' → logprob: -9.064151763916016
    8. '   ' → logprob: -9.564151763916016
    9. ')-' → logprob: -11.064151763916016
    10. '    ' → logprob: -11.314151763916016

Token 94: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029869431629776955
    2. ' b' → logprob: -3.529869318008423
    3. '1' → logprob: -10.029869079589844
    4. ')' → logprob: -10.654869079589844
    5. ')b' → logprob: -11.029869079589844
    6. '	b' → logprob: -11.404869079589844
    7. ' -' → logprob: -11.654869079589844
    8. ' ' → logprob: -12.404869079589844
    9. ' (' → logprob: -12.904869079589844
    10. '-b' → logprob: -13.154869079589844

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12482316792011261
    2. ' -' → logprob: -2.9998230934143066
    3. '-' → logprob: -3.2498230934143066
    4. ' )' → logprob: -3.6248230934143066
    5. ')*' → logprob: -6.999823093414307
    6. ')
' → logprob: -7.874823093414307
    7. ' +' → logprob: -8.624823570251465
    8. ' ' → logprob: -8.999823570251465
    9. '   ' → logprob: -9.624823570251465
    10. ' )
' → logprob: -9.749823570251465

Token 96: '       ' (ID: 309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14117830991744995
    2. '   ' → logprob: -2.1411783695220947
    3. ' ' → logprob: -5.766178131103516
    4. 'b' → logprob: -6.016178131103516
    5. '       ' → logprob: -6.141178131103516
    6. ')' → logprob: -6.266178131103516
    7. '0' → logprob: -7.141178131103516
    8. 's' → logprob: -7.516178131103516
    9. '    
' → logprob: -7.641178131103516
    10. '+' → logprob: -8.266178131103516

Token 97: ' b' (ID: 287)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1535700410604477
    2. '-' → logprob: -2.0285699367523193
    3. ' -' → logprob: -4.903570175170898
    4. 'b' (adapté à ' b') → logprob: -6.653570175170898
    5. '+' → logprob: -7.278570175170898
    6. '       ' → logprob: -7.403570175170898
    7. '   ' → logprob: -7.903570175170898
    8. ' ' → logprob: -8.903570175170898
    9. ')' → logprob: -9.778570175170898
    10. 's' → logprob: -10.153570175170898

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2258586883544922
    2. '=' → logprob: -1.6008586883544922
    3. ' +=' → logprob: -7.850858688354492
    4. '+=' → logprob: -9.975858688354492
    5. '+' → logprob: -12.100858688354492
    6. ' ' → logprob: -12.725858688354492
    7. '1' → logprob: -14.600858688354492
    8. ' +' → logprob: -14.850858688354492
    9. '<|end|>' → logprob: -16.100858688354492
    10. ')' → logprob: -16.100858688354492

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.875009536743164
    3. '   ' → logprob: -13.000009536743164
    4. '0' → logprob: -16.250009536743164
    5. '  ' → logprob: -16.375009536743164
    6. '-' → logprob: -16.500009536743164
    7. '    ' → logprob: -17.625009536743164
    8. '﻿' → logprob: -18.500009536743164
    9. ' -' → logprob: -18.937509536743164
    10. '+' → logprob: -18.937509536743164

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -14.37500286102295
    4. '  ' → logprob: -16.875003814697266
    5. '-' → logprob: -17.875003814697266
    6. '0' → logprob: -18.125003814697266
    7. '    ' → logprob: -18.500003814697266
    8. '2' → logprob: -19.125003814697266
    9. '﻿' → logprob: -19.250003814697266
    10. '۱' → logprob: -19.312503814697266

Token 101: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12008313834667206
    2. 'else' → logprob: -2.4950830936431885
    3. '   ' → logprob: -3.4950830936431885
    4. '	else' → logprob: -8.24508285522461
    5. '<|end|>' → logprob: -10.74508285522461
    6. ' ' → logprob: -11.62008285522461
    7. '  ' → logprob: -11.99508285522461
    8. '    
' → logprob: -12.12008285522461
    9. ' elif' → logprob: -12.74508285522461
    10. '_else' → logprob: -12.99508285522461

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8622642159461975
    2. 'else' → logprob: -0.8622642159461975
    3. ' else' → logprob: -1.8622641563415527
    4. '	else' → logprob: -8.862264633178711
    5. '<|end|>' → logprob: -9.487264633178711
    6. ' ' → logprob: -11.237264633178711
    7. '    
' → logprob: -11.487264633178711
    8. '  ' → logprob: -11.737264633178711
    9. '```' → logprob: -11.987264633178711
    10. '_else' → logprob: -12.487264633178711

Token 103: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.020056527107954025
    2. ' else' → logprob: -4.27005672454834
    3. '   ' → logprob: -5.14505672454834
    4. '	else' → logprob: -10.02005672454834
    5. 'elif' → logprob: -13.39505672454834
    6. '_else' → logprob: -14.89505672454834
    7. '  ' → logprob: -15.02005672454834
    8. ' ' → logprob: -15.14505672454834
    9. '```' → logprob: -15.77005672454834
    10. '       ' → logprob: -16.270055770874023

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009919583797454834
    2. '       ' → logprob: -4.8849196434021
    3. ':
' → logprob: -6.2599196434021
    4. '<|end|>' → logprob: -8.134919166564941
    5. '   ' → logprob: -9.759919166564941
    6. ' :' → logprob: -11.634919166564941
    7. '<|end|>' → logprob: -11.634919166564941
    8. '        ' → logprob: -12.634919166564941
    9. '):
' → logprob: -12.634919166564941
    10. '    ' → logprob: -12.759919166564941

Token 105: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4014412760734558
    2. '       ' → logprob: -1.9014413356781006
    3. '   ' → logprob: -1.9014413356781006
    4. ' a' → logprob: -3.6514413356781006
    5. 'b' → logprob: -5.5264410972595215
    6. '	a' → logprob: -7.1514410972595215
    7. ' b' → logprob: -7.6514410972595215
    8. '    ' → logprob: -7.7764410972595215
    9. ' ' → logprob: -9.40144157409668
    10. '  ' → logprob: -9.77644157409668

Token 106: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.006815777160227299
    2. ' a' → logprob: -5.3818159103393555
    3. '   ' → logprob: -6.1318159103393555
    4. '	a' → logprob: -11.756815910339355
    5. '  ' → logprob: -12.381815910339355
    6. '       ' → logprob: -12.756815910339355
    7. '    ' → logprob: -12.881815910339355
    8. ' ' → logprob: -13.131815910339355
    9. 'b' → logprob: -14.631815910339355
    10. ' b' → logprob: -16.63181495666504

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32483235001564026
    2. ' +=' → logprob: -1.3248323202133179
    3. '=' → logprob: -4.574832439422607
    4. '+=' → logprob: -7.324832439422607
    5. '+' → logprob: -8.44983196258545
    6. ' +' → logprob: -8.69983196258545
    7. ' ' → logprob: -9.32483196258545
    8. '   ' → logprob: -10.69983196258545
    9. '<|end|>' → logprob: -10.82483196258545
    10. '    ' → logprob: -11.57483196258545

Token 108: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012522248551249504
    2. ' a' → logprob: -4.387522220611572
    3. '   ' → logprob: -12.01252269744873
    4. '    ' → logprob: -13.13752269744873
    5. '	a' → logprob: -13.26252269744873
    6. ' ' → logprob: -13.63752269744873
    7. '  ' → logprob: -13.76252269744873
    8. '     ' → logprob: -15.63752269744873
    9. ' ' → logprob: -16.262521743774414
    10. '       ' → logprob: -16.637521743774414

Token 109: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20142698287963867
    2. ' +' → logprob: -1.7014269828796387
    3. ' ' → logprob: -11.451427459716797
    4. ' +=' → logprob: -14.576427459716797
    5. ' plus' → logprob: -14.826427459716797
    6. ' +
' → logprob: -15.076427459716797
    7. '+a' → logprob: -15.076427459716797
    8. '+=' → logprob: -15.326427459716797
    9. '＋' → logprob: -15.451427459716797
    10. 'a' → logprob: -15.826427459716797

Token 110: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.008926658891141415
    2. '(v' → logprob: -5.008926868438721
    3. ' v' → logprob: -6.133926868438721
    4. ' (' → logprob: -10.508926391601562
    5. '(' → logprob: -11.633926391601562
    6. '	v' → logprob: -12.883926391601562
    7. '   ' → logprob: -13.883926391601562
    8. '  ' → logprob: -14.633926391601562
    9. ' ' → logprob: -15.133926391601562
    10. '    ' → logprob: -15.383926391601562

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '１' → logprob: -18.5
    4. '2' → logprob: -19.375
    5. '১' → logprob: -19.625
    6. '१' → logprob: -20.125
    7. '۱' → logprob: -20.5
    8. '[' → logprob: -20.5
    9. '<|end|>' → logprob: -20.8125
    10. '   ' → logprob: -21.0625

Token 112: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5800742506980896
    2. '+' → logprob: -0.8300742506980896
    3. '+b' → logprob: -5.705074310302734
    4. ' ' → logprob: -7.830074310302734
    5. 'b' → logprob: -8.580074310302734
    6. '<|end|>' → logprob: -9.705074310302734
    7. ' +
' → logprob: -10.080074310302734
    8. ' b' → logprob: -10.080074310302734
    9. '+
' → logprob: -10.330074310302734
    10. ' plus' → logprob: -11.830074310302734

Token 113: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931484341621399
    2. ' b' → logprob: -0.6931484341621399
    3. ' ' → logprob: -14.318148612976074
    4. '	b' → logprob: -14.693148612976074
    5. '   ' → logprob: -16.193147659301758
    6. '<|end|>' → logprob: -16.943147659301758
    7. '  ' → logprob: -17.943147659301758
    8. '    ' → logprob: -18.068147659301758
    9. ' ' → logprob: -18.568147659301758
    10. '(b' → logprob: -19.443147659301758

Token 114: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1366005688905716
    2. 'b' → logprob: -2.1366004943847656
    3. ' b' → logprob: -4.761600494384766
    4. '       ' → logprob: -7.261600494384766
    5. ' ' → logprob: -8.761600494384766
    6. '	b' → logprob: -8.761600494384766
    7. '  ' → logprob: -10.136600494384766
    8. '
' → logprob: -12.761600494384766
    9. '    ' → logprob: -12.761600494384766
    10. '```' → logprob: -12.761600494384766

Token 115: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08440789580345154
    2. 'b' → logprob: -2.5844078063964844
    3. ' b' → logprob: -5.334407806396484
    4. '       ' → logprob: -7.459407806396484
    5. ' ' → logprob: -10.084407806396484
    6. '	b' → logprob: -10.209407806396484
    7. '  ' → logprob: -11.334407806396484
    8. '    
' → logprob: -12.209407806396484
    9. '    ' → logprob: -12.459407806396484
    10. '```' → logprob: -13.834407806396484

Token 116: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -3.292907877039397e-06
    2. ' b' → logprob: -13.00000286102295
    3. '   ' → logprob: -14.00000286102295
    4. '       ' → logprob: -16.375003814697266
    5. '	b' → logprob: -18.625003814697266
    6. '0' → logprob: -20.625003814697266
    7. ' ' → logprob: -21.000003814697266
    8. '  ' → logprob: -21.125003814697266
    9. 'break' → logprob: -21.125003814697266
    10. '           ' → logprob: -21.500003814697266

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193706154823303
    2. '=' → logprob: -1.5019370317459106
    3. ' ' → logprob: -12.251936912536621
    4. '0' → logprob: -12.876936912536621
    5. '<|end|>' → logprob: -14.501936912536621
    6. ')' → logprob: -17.376937866210938
    7. ' =
' → logprob: -17.876937866210938
    8. ',' → logprob: -18.251937866210938
    9. ' =)' → logprob: -18.376937866210938
    10. ' ==' → logprob: -18.626937866210938

Token 118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.12500762939453
    4. '<|end|>' → logprob: -18.62500762939453
    5. '۰' → logprob: -19.37500762939453
    6. '00' → logprob: -21.00000762939453
    7. '```' → logprob: -21.12500762939453
    8. '０' → logprob: -21.87500762939453
    9. '  ' → logprob: -21.87500762939453
    10. '000' → logprob: -22.12500762939453

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -18.75
    4. '<|end|>' → logprob: -18.75
    5. '۰' → logprob: -19.5
    6. '00' → logprob: -19.75
    7. '000' → logprob: -20.875
    8. '=' → logprob: -21.5625
    9. '  ' → logprob: -21.625
    10. '０' → logprob: -22.0625

Token 120: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.255849152803421
    2. '<|end|>' → logprob: -1.8808491230010986
    3. ')' → logprob: -3.3808491230010986
    4. '
' → logprob: -4.380849361419678
    5. '#' → logprob: -5.130849361419678
    6. ' ' → logprob: -5.255849361419678
    7. '0' → logprob: -5.630849361419678
    8. '\n' → logprob: -5.880849361419678
    9. ' print' → logprob: -5.880849361419678
    10. '```' → logprob: -7.130849361419678

Token 121: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11043146997690201
    2. ')' → logprob: -2.860431432723999
    3. '<|end|>' → logprob: -3.735431432723999
    4. '#' → logprob: -5.360431671142578
    5. '0' → logprob: -5.485431671142578
    6. '
' → logprob: -5.735431671142578
    7. ' ' → logprob: -5.985431671142578
    8. 'a' → logprob: -6.485431671142578
    9. '\n' → logprob: -6.735431671142578
    10. ' print' → logprob: -6.860431671142578

Token 122: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.387185275554657
    2. '(a' → logprob: -1.1371853351593018
    3. '(s' → logprob: -8.887185096740723
    4. '()' → logprob: -9.012185096740723
    5. '('' → logprob: -11.012185096740723
    6. '((' → logprob: -11.137185096740723
    7. 'a' → logprob: -11.762185096740723
    8. '(
' → logprob: -12.262185096740723
    9. '(sum' → logprob: -12.887185096740723
    10. '("("' → logprob: -13.512185096740723

Token 123: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.750000953674316
    3. '))' → logprob: -16.625
    4. ')`' → logprob: -16.625
    5. ')
' → logprob: -17.125
    6. '+' → logprob: -17.375
    7. '')' → logprob: -17.75
    8. '(' → logprob: -18.375
    9. '),' → logprob: -18.5
    10. ')}' → logprob: -18.75

Token 124: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018205426633358
    2. ' b' → logprob: -4.018205642700195
    3. '1' → logprob: -11.143205642700195
    4. 's' → logprob: -11.643205642700195
    5. ' s' → logprob: -11.893205642700195
    6. '0' → logprob: -12.143205642700195
    7. '(b' → logprob: -12.143205642700195
    8. '(' → logprob: -12.643205642700195
    9. ' ' → logprob: -12.768205642700195
    10. ' (' → logprob: -12.768205642700195

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.00000286102295
    3. ')`' → logprob: -16.000001907348633
    4. ')
' → logprob: -16.250001907348633
    5. '))' → logprob: -16.625001907348633
    6. '`)' → logprob: -16.875001907348633
    7. '```' → logprob: -17.250001907348633
    8. '}' → logprob: -17.875001907348633
    9. '')' → logprob: -18.125001907348633
    10. '")' → logprob: -18.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 123
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 46
Tokens correctement prédits (top 10): 101
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 37.40%
Précision (top 10): 82.11%
================================================================================
