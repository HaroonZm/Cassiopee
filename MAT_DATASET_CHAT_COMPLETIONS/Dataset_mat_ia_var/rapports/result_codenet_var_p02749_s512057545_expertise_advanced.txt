================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque

sys.setrecursionlimit(10**9)
input = (line.rstrip() for line in sys.stdin).__next__

n = int(input())
G = [[] for _ in range(n)]
for _ in range(n-1):
    a, b = map(lambda x: int(x)-1, input().split())
    G[a].append(b)
    G[b].append(a)

flag = [0] * n

# Iterative DFS to avoid recursion:
stack = [(0, -1, 0)]
while stack:
    cur, par, f = stack.pop()
    flag[cur] = f
    stack.extend((to, cur, f ^ 1) for to in G[cur] if to != par)

one, two, three = (deque(range(x, n+1, 3)) for x in (1, 2, 3))
k = n // 3
a = sum(flag)
b = n - a
ans = [0] * n

groups = [one, two, three]

if k < a and k < b:
    for i, f in enumerate(flag):
        preferred = groups[1 if f else 2]
        secondary = groups[0]
        if preferred:
            ans[i] = preferred.popleft()
        else:
            ans[i] = secondary.popleft()
else:
    major_group, minor_group = (flag, 0) if k >= a else ([1-x for x in flag], 1)
    three_group = groups[2]
    for i, f in enumerate(flag):
        if f == minor_group:
            ans[i] = three_group.popleft()
    res = deque(one) + deque(two) + three_group
    for i, f in enumerate(flag):
        if f != minor_group:
            ans[i] = res.popleft()

print(*ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.021073132753372192
    2. 'os' → logprob: -4.021073341369629
    3. ' Py' → logprob: -7.271073341369629
    4. ' pathlib' → logprob: -7.521073341369629
    5. ' collections' → logprob: -7.646073341369629
    6. ' ' → logprob: -8.021073341369629
    7. ' math' → logprob: -8.521073341369629
    8. ' typing' → logprob: -8.896073341369629
    9. ' datetime' → logprob: -9.396073341369629
    10. 'collections' → logprob: -9.896073341369629

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5376829504966736
    2. 'import' → logprob: -0.9126829504966736
    3. '.' → logprob: -4.287683010101318
    4. ' ' → logprob: -8.16268253326416
    5. '<|end|>' → logprob: -9.03768253326416
    6. '.import' → logprob: -9.28768253326416
    7. '```' → logprob: -9.53768253326416
    8. '_import' → logprob: -10.53768253326416
    9. '	import' → logprob: -10.66268253326416
    10. '_' → logprob: -11.41268253326416

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.1301671862602234
    2. ' deque' → logprob: -2.255167245864868
    3. 'deque' → logprob: -4.630167007446289
    4. ' abc' → logprob: -5.130167007446289
    5. ' Counter' → logprob: -7.755167007446289
    6. 'abc' → logprob: -7.880167007446289
    7. ' named' → logprob: -8.130167007446289
    8. ' import' → logprob: -8.755167007446289
    9. 'import' → logprob: -9.630167007446289
    10. 'named' → logprob: -9.880167007446289

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8029761910438538
    2. '

' → logprob: -1.052976131439209
    3. '
' → logprob: -2.302976131439209
    4. '```' → logprob: -3.427976131439209
    5. 'import' → logprob: -3.552976131439209
    6. '\' → logprob: -3.677976131439209
    7. '<|end|>' → logprob: -4.802976131439209
    8. '<|end|>' → logprob: -6.177976131439209
    9. 'newline' → logprob: -6.427976131439209
    10. '' → logprob: -7.052976131439209

Token 8: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3911350965499878
    2. '```' → logprob: -1.3911350965499878
    3. 'import' → logprob: -2.3911352157592773
    4. '`' → logprob: -2.3911352157592773
    5. '\' → logprob: -2.5161352157592773
    6. 'd' → logprob: -3.1411352157592773
    7. '
' → logprob: -3.1411352157592773
    8. '\n' → logprob: -3.5161352157592773
    9. 'queue' → logprob: -3.8911352157592773
    10. 'data' → logprob: -4.266135215759277

Token 9: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -8.061054359131958e-06
    2. '.import' → logprob: -12.625007629394531
    3. '.user' → logprob: -14.250007629394531
    4. ' .' → logprob: -14.375007629394531
    5. '.`' → logprob: -14.625007629394531
    6. '.exit' → logprob: -15.000007629394531
    7. '.readline' → logprob: -15.000007629394531
    8. '.​' → logprob: -15.000007629394531
    9. '.stdout' → logprob: -15.500007629394531
    10. 'import' → logprob: -15.500007629394531

Token 10: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.04144887998700142
    2. 'limit' → logprob: -4.166449069976807
    3. 'trace' → logprob: -5.041449069976807
    4. '_limit' → logprob: -5.291449069976807
    5. 's' → logprob: -5.791449069976807
    6. 'set' → logprob: -6.041449069976807
    7. '_' → logprob: -6.166449069976807
    8. '_rec' → logprob: -6.791449069976807
    9. 'sys' → logprob: -7.541449069976807
    10. 't' → logprob: -7.666449069976807

Token 11: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0006408308399841189
    2. 'urs' → logprob: -8.000640869140625
    3. 'limit' → logprob: -8.750640869140625
    4. 'ursive' → logprob: -9.500640869140625
    5. 'ur' → logprob: -9.875640869140625
    6. '_limit' → logprob: -12.000640869140625
    7. 'urf' → logprob: -12.375640869140625
    8. 'ursor' → logprob: -13.375640869140625
    9. 'ursively' → logprob: -13.750640869140625
    10. 'urse' → logprob: -13.750640869140625

Token 12: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0002342912630410865
    2. '_limit' → logprob: -8.500234603881836
    3. ' limit' → logprob: -11.000234603881836
    4. 'depth' → logprob: -11.875234603881836
    5. 'lim' → logprob: -12.125234603881836
    6. 'Limit' → logprob: -13.875234603881836
    7. '(limit' → logprob: -15.000234603881836
    8. '_depth' → logprob: -15.750234603881836
    9. '.limit' → logprob: -16.125234603881836
    10. '-limit' → logprob: -16.750234603881836

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.173704271830502e-06
    2. ' (' → logprob: -13.25000286102295
    3. '(
' → logprob: -14.50000286102295
    4. '(

' → logprob: -14.62500286102295
    5. '((' → logprob: -15.62500286102295
    6. '("("' → logprob: -16.750003814697266
    7. '()' → logprob: -17.000003814697266
    8. '(None' → logprob: -18.000003814697266
    9. '('' → logprob: -18.000003814697266
    10. '(
' → logprob: -18.375003814697266

Token 14: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0486145056784153
    2. '100' → logprob: -3.048614501953125
    3. '500' → logprob: -11.798614501953125
    4. '999' → logprob: -12.173614501953125
    5. ' ' → logprob: -12.423614501953125
    6. '300' → logprob: -12.548614501953125
    7. '1' → logprob: -12.548614501953125
    8. '(' → logprob: -13.923614501953125
    9. '200' → logprob: -14.298614501953125
    10. '150' → logprob: -15.048614501953125

Token 15: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2666754424571991
    2. '000' → logprob: -1.5166754722595215
    3. '6' → logprob: -4.7666754722595215
    4. '00' → logprob: -5.3916754722595215
    5. '5' → logprob: -7.3916754722595215
    6. '7' → logprob: -7.3916754722595215
    7. '4' → logprob: -8.016674995422363
    8. ')' → logprob: -12.641674995422363
    9. '**' → logprob: -13.516674995422363
    10. '8' → logprob: -13.641674995422363

Token 16: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00018208740220870823
    2. '6' → logprob: -8.750182151794434
    3. '9' → logprob: -11.000182151794434
    4. '8' → logprob: -11.875182151794434
    5. '```' → logprob: -19.500181198120117
    6. ')' → logprob: -20.250181198120117
    7. ' ' → logprob: -20.625181198120117
    8. '**' → logprob: -20.875181198120117
    9. '

' → logprob: -21.250181198120117
    10. '}' → logprob: -21.500181198120117

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '))' → logprob: -14.125001907348633
    3. ' )' → logprob: -14.250001907348633
    4. ')
' → logprob: -16.250001907348633
    5. ')))' → logprob: -17.375001907348633
    6. '0' → logprob: -17.625001907348633
    7. ' ' → logprob: -17.750001907348633
    8. '```' → logprob: -17.750001907348633
    9. ')

' → logprob: -18.250001907348633
    10. '')' → logprob: -18.250001907348633

Token 18: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19070199131965637
    2. '
' → logprob: -2.315701961517334
    3. '\' → logprob: -3.440701961517334
    4. '```' → logprob: -4.190701961517334
    5. 'd' → logprob: -4.940701961517334
    6. '\n' → logprob: -5.065701961517334
    7. '

' → logprob: -5.190701961517334
    8. '`' → logprob: -5.815701961517334
    9. '' → logprob: -6.315701961517334
    10. '#' → logprob: -6.440701961517334

Token 19: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012448744382709265
    2. '40' → logprob: -7.501245021820068
    3. '('' → logprob: -8.37624454498291
    4. '()' → logprob: -8.75124454498291
    5. ''' → logprob: -9.62624454498291
    6. '```' → logprob: -9.75124454498291
    7. '("("' → logprob: -10.00124454498291
    8. '"' → logprob: -10.25124454498291
    9. ')' → logprob: -10.87624454498291
    10. '(`' → logprob: -11.37624454498291

Token 20: ' (' (ID: 350)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7435336112976074
    2. 'input' → logprob: -1.4935336112976074
    3. ' input' → logprob: -1.4935336112976074
    4. 'sys' → logprob: -2.6185336112976074
    5. ' lambda' → logprob: -6.368533611297607
    6. 'lambda' → logprob: -7.243533611297607
    7. 'int' → logprob: -11.368534088134766
    8. 'raw' → logprob: -11.618534088134766
    9. '	sys' → logprob: -11.743534088134766
    10. '=sys' → logprob: -11.743534088134766

Token 21: 'line' (ID: 1137)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0030361784156411886
    2. ' sys' → logprob: -6.378036022186279
    3. ')' → logprob: -7.253036022186279
    4. 'lambda' → logprob: -7.753036022186279
    5. 'input' → logprob: -9.128036499023438
    6. '=sys' → logprob: -10.503036499023438
    7. '	sys' → logprob: -10.628036499023438
    8. 'int' → logprob: -10.878036499023438
    9. '(sys' → logprob: -11.503036499023438
    10. 'raw' → logprob: -13.253036499023438

Token 22: '.rstrip' (ID: 161629)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12680251896381378
    2. '=sys' → logprob: -3.126802444458008
    3. '().' → logprob: -3.751802444458008
    4. '=' → logprob: -3.876802444458008
    5. '.readline' → logprob: -5.251802444458008
    6. 'sys' → logprob: -5.251802444458008
    7. '.' → logprob: -5.626802444458008
    8. 'lambda' → logprob: -5.876802444458008
    9. '=lambda' → logprob: -5.876802444458008
    10. '()' → logprob: -6.001802444458008

Token 23: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003537351731210947
    2. ')\' → logprob: -6.503537178039551
    3. '('\' → logprob: -6.878537178039551
    4. '()' → logprob: -8.25353717803955
    5. '\n' → logprob: -8.25353717803955
    6. '())' → logprob: -9.00353717803955
    7. ' )' → logprob: -9.25353717803955
    8. ' for' → logprob: -10.25353717803955
    9. '("\' → logprob: -10.87853717803955
    10. 'for' → logprob: -10.87853717803955

Token 24: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9133577346801758
    2. ')' → logprob: -1.0383577346801758
    3. 'for' → logprob: -1.4133577346801758
    4. '.readline' → logprob: -7.413357734680176
    5. '	for' → logprob: -8.663357734680176
    6. '()' → logprob: -8.663357734680176
    7. ' )' → logprob: -8.788357734680176
    8. '=>' → logprob: -10.163357734680176
    9. 'sys' → logprob: -10.163357734680176
    10. ').' → logprob: -10.913357734680176

Token 25: ' line' (ID: 2543)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4757320284843445
    2. ' line' → logprob: -0.9757320284843445
    3. 'line' → logprob: -7.22573184967041
    4. 'sys' → logprob: -7.72573184967041
    5. '	line' → logprob: -8.60073184967041
    6. '(sys' → logprob: -9.60073184967041
    7. ' ' → logprob: -9.72573184967041
    8. '	sys' → logprob: -9.72573184967041
    9. '(line' → logprob: -10.47573184967041
    10. '=sys' → logprob: -10.97573184967041

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03370171785354614
    2. 'in' → logprob: -3.4087016582489014
    3. '(sys' → logprob: -10.90870189666748
    4. ')' → logprob: -11.28370189666748
    5. '=sys' → logprob: -12.15870189666748
    6. '(' → logprob: -12.28370189666748
    7. 'import' → logprob: -12.65870189666748
    8. '	in' → logprob: -12.65870189666748
    9. '<|end|>' → logprob: -13.53370189666748
    10. '(in' → logprob: -13.53370189666748

Token 27: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0024775585625320673
    2. ' sys' → logprob: -6.002477645874023
    3. 'open' → logprob: -14.127477645874023
    4. '(sys' → logprob: -14.627477645874023
    5. '	sys' → logprob: -14.752477645874023
    6. '=sys' → logprob: -15.252477645874023
    7. 'stdin' → logprob: -16.252477645874023
    8. 'iter' → logprob: -18.752477645874023
    9. '__' → logprob: -19.127477645874023
    10. ' open' → logprob: -20.002477645874023

Token 28: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.03521392197581e-05
    2. 'stdin' → logprob: -10.500030517578125
    3. '.' → logprob: -13.750030517578125
    4. ' stdin' → logprob: -14.250030517578125
    5. '.std' → logprob: -15.250030517578125
    6. ')' → logprob: -15.375030517578125
    7. '.stdout' → logprob: -15.500030517578125
    8. '(stdin' → logprob: -16.000030517578125
    9. ' .' → logprob: -16.125030517578125
    10. '.__' → logprob: -16.875030517578125

Token 29: ').__' (ID: 48990)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010711929644457996
    2. ' )' → logprob: -9.250106811523438
    3. 'if' → logprob: -12.500106811523438
    4. '))' → logprob: -12.875106811523438
    5. '())' → logprob: -13.625106811523438
    6. '()' → logprob: -14.375106811523438
    7. ')
' → logprob: -14.375106811523438
    8. '.readline' → logprob: -14.375106811523438
    9. 'input' → logprob: -14.875106811523438
    10. 'import' → logprob: -15.500106811523438

Token 30: 'next' (ID: 7311)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.00012773419439326972
    2. 'next' → logprob: -9.000127792358398
    3. 'ait' → logprob: -12.875127792358398
    4. 'an' → logprob: -13.875127792358398
    5. 'getitem' → logprob: -14.375127792358398
    6. 'iterator' → logprob: -15.750127792358398
    7. 'it' → logprob: -17.1251277923584
    8. '_iter' → logprob: -17.3751277923584
    9. ' iter' → logprob: -17.6251277923584
    10. 'itera' → logprob: -18.8751277923584

Token 31: '__

' (ID: 58939)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08589691668748856
    2. '()' → logprob: -3.3358969688415527
    3. ')' → logprob: -3.7108969688415527
    4. '(
' → logprob: -4.835896968841553
    5. '(

' → logprob: -5.335896968841553
    6. '#' → logprob: -6.335896968841553
    7. 'def' → logprob: -6.335896968841553
    8. '

' → logprob: -6.835896968841553
    9. '\' → logprob: -7.085896968841553
    10. '
' → logprob: -7.210896968841553

Token 32: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5587102174758911
    2. 'n' → logprob: -0.9337102174758911
    3. 'N' → logprob: -3.6837100982666016
    4. 'd' → logprob: -4.808710098266602
    5. 'T' → logprob: -7.433710098266602
    6. 't' → logprob: -7.558710098266602
    7. '#' → logprob: -9.308710098266602
    8. 'q' → logprob: -9.308710098266602
    9. 'V' → logprob: -9.433710098266602
    10. 'D' → logprob: -9.558710098266602

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4345826804637909
    2. '=' → logprob: -1.5595827102661133
    3. ' ' → logprob: -2.8095827102661133
    4. '(' → logprob: -2.8095827102661133
    5. ')' → logprob: -4.684582710266113
    6. ',' → logprob: -5.184582710266113
    7. ' (' → logprob: -6.434582710266113
    8. '[' → logprob: -6.684582710266113
    9. '(space' → logprob: -6.934582710266113
    10. '  ' → logprob: -7.184582710266113

Token 34: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.048600658774375916
    2. 'int' → logprob: -3.048600673675537
    3. ' ' → logprob: -11.673600196838379
    4. '(int' → logprob: -13.923600196838379
    5. ' map' → logprob: -14.173600196838379
    6. ' input' → logprob: -14.298600196838379
    7. '<int' → logprob: -14.548600196838379
    8. '=int' → logprob: -14.673600196838379
    9. 'input' → logprob: -15.298600196838379
    10. '10' → logprob: -15.298600196838379

Token 35: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016604917123913765
    2. '(input' → logprob: -4.141604900360107
    3. '('' → logprob: -7.766604900360107
    4. '(sys' → logprob: -9.391605377197266
    5. '()' → logprob: -10.391605377197266
    6. '(n' → logprob: -12.141605377197266
    7. ' (' → logprob: -12.891605377197266
    8. '("("' → logprob: -12.891605377197266
    9. '(
' → logprob: -13.016605377197266
    10. '(s' → logprob: -13.141605377197266

Token 36: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16054093837738037
    2. '()' → logprob: -1.9105409383773804
    3. ')' → logprob: -8.410540580749512
    4. '(' → logprob: -9.535540580749512
    5. ' ())' → logprob: -11.285540580749512
    6. '())
' → logprob: -12.285540580749512
    7. '();)' → logprob: -13.660540580749512
    8. '()
' → logprob: -13.910540580749512
    9. '()]' → logprob: -14.535540580749512
    10. '(),' → logprob: -14.910540580749512

Token 37: 'G' (ID: 38)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.19433140754699707
    2. 'tree' → logprob: -2.569331407546997
    3. 'g' → logprob: -3.069331407546997
    4. 'a' → logprob: -4.194331169128418
    5. 'd' → logprob: -4.194331169128418
    6. 'edges' → logprob: -5.069331169128418
    7. ' graph' → logprob: -5.194331169128418
    8. 'dp' → logprob: -5.944331169128418
    9. 'adj' → logprob: -5.944331169128418
    10. 'stack' → logprob: -7.694331169128418

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010360575281083584
    2. '[' → logprob: -5.1353607177734375
    3. '=' → logprob: -5.5103607177734375
    4. ',' → logprob: -8.885360717773438
    5. ' ' → logprob: -9.010360717773438
    6. '[]' → logprob: -9.885360717773438
    7. ' ,' → logprob: -11.260360717773438
    8. ' =[' → logprob: -11.510360717773438
    9. ' [' → logprob: -11.760360717773438
    10. '[:]' → logprob: -12.010360717773438

Token 39: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1559407263994217
    2. ' [[]' → logprob: -2.1559407711029053
    3. ' [' → logprob: -3.6559407711029053
    4. '[]' → logprob: -6.155940532684326
    5. ' []' → logprob: -7.530940532684326
    6. ' defaultdict' → logprob: -10.655941009521484
    7. '{}' → logprob: -10.780941009521484
    8. '[n' → logprob: -11.655941009521484
    9. 'deque' → logprob: -12.030941009521484
    10. ' [{}' → logprob: -12.030941009521484

Token 40: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.29799705743789673
    2. '(' → logprob: -1.672996997833252
    3. ' for' → logprob: -3.297996997833252
    4. 'for' → logprob: -3.797996997833252
    5. '()' → logprob: -4.797996997833252
    6. '(range' → logprob: -6.797996997833252
    7. ']' → logprob: -7.047996997833252
    8. ' (' → logprob: -9.17299747467041
    9. '()]' → logprob: -9.29799747467041
    10. ')' → logprob: -9.54799747467041

Token 41: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12814722955226898
    2. ' _' → logprob: -2.3781471252441406
    3. ' range' → logprob: -4.253147125244141
    4. ' ' → logprob: -4.503147125244141
    5. 'range' → logprob: -6.503147125244141
    6. '(range' → logprob: -8.37814712524414
    7. ' in' → logprob: -8.62814712524414
    8. ' i' → logprob: -8.87814712524414
    9. '(' → logprob: -9.12814712524414
    10. '_range' → logprob: -10.37814712524414

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18929728865623474
    2. 'in' → logprob: -2.3142971992492676
    3. 'range' → logprob: -2.6892971992492676
    4. ' range' → logprob: -5.189297199249268
    5. 'n' → logprob: -9.689297676086426
    6. '(n' → logprob: -10.564297676086426
    7. '(range' → logprob: -11.064297676086426
    8. '_' → logprob: -11.689297676086426
    9. ' ' → logprob: -13.064297676086426
    10. '<n' → logprob: -14.064297676086426

Token 43: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018151583150029182
    2. ' range' → logprob: -4.018151760101318
    3. '(range' → logprob: -13.39315128326416
    4. '	range' → logprob: -16.893152236938477
    5. ' ' → logprob: -17.643152236938477
    6. 'rang' → logprob: -18.393152236938477
    7. 'ran' → logprob: -18.518152236938477
    8. 'r' → logprob: -19.893152236938477
    9. 'n' → logprob: -19.893152236938477
    10. '   ' → logprob: -20.393152236938477

Token 44: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.165027217415627e-05
    2. '(' → logprob: -10.750021934509277
    3. 'n' → logprob: -16.00002098083496
    4. ' (' → logprob: -18.50002098083496
    5. '((' → logprob: -19.50002098083496
    6. ')n' → logprob: -19.50002098083496
    7. '(N' → logprob: -19.75002098083496
    8. '(
' → logprob: -20.50002098083496
    9. ')(' → logprob: -21.25002098083496
    10. ')' → logprob: -21.50002098083496

Token 45: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.370294846012257e-05
    2. ')' → logprob: -10.125043869018555
    3. ' )' → logprob: -13.500043869018555
    4. ']' → logprob: -13.500043869018555
    5. ')]
' → logprob: -14.750043869018555
    6. ')])' → logprob: -15.750043869018555
    7. '])' → logprob: -16.375043869018555
    8. ')],' → logprob: -17.000043869018555
    9. '+' → logprob: -17.125043869018555
    10. ')]

' → logprob: -17.375043869018555

Token 46: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03764192759990692
    2. '<|end|>' → logprob: -3.662642002105713
    3. 'n' → logprob: -4.912642002105713
    4. ' for' → logprob: -5.787642002105713
    5. '\n' → logprob: -8.162641525268555
    6. 't' → logprob: -9.287641525268555
    7. '<|end|>' → logprob: -9.537641525268555
    8. ')' → logprob: -9.662641525268555
    9. '\' → logprob: -9.787641525268555
    10. ' ' → logprob: -10.162641525268555

Token 47: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.31372323632240295
    2. '_' → logprob: -1.3137232065200806
    3. ' ' → logprob: -7.813723087310791
    4. ' range' → logprob: -10.31372356414795
    5. ' i' → logprob: -12.06372356414795
    6. ' ▁' → logprob: -12.18872356414795
    7. ' ' → logprob: -12.56372356414795
    8. 'range' → logprob: -12.68872356414795
    9. ' ​' → logprob: -13.31372356414795
    10. ' ‌' → logprob: -13.56372356414795

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04297396168112755
    2. 'in' → logprob: -3.2929739952087402
    3. ' ' → logprob: -6.04297399520874
    4. 'range' → logprob: -7.04297399520874
    5. 'n' → logprob: -7.54297399520874
    6. ' range' → logprob: -7.66797399520874
    7. '_' → logprob: -8.292973518371582
    8. ' n' → logprob: -8.417973518371582
    9. ' _' → logprob: -9.667973518371582
    10. '<|end|>' → logprob: -9.917973518371582

Token 49: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018178153783082962
    2. ' range' → logprob: -4.0181779861450195
    3. '(range' → logprob: -10.51817798614502
    4. ' ' → logprob: -14.64317798614502
    5. '	range' → logprob: -14.64317798614502
    6. '(' → logprob: -16.393178939819336
    7. 'input' → logprob: -16.643178939819336
    8. ')' → logprob: -16.893178939819336
    9. 'rang' → logprob: -17.018178939819336
    10. '_range' → logprob: -17.393178939819336

Token 50: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.64970643306151e-05
    2. '(' → logprob: -9.375086784362793
    3. 'n' → logprob: -13.625086784362793
    4. ' (' → logprob: -15.125086784362793
    5. ' n' → logprob: -15.875086784362793
    6. '(
' → logprob: -17.375085830688477
    7. '(range' → logprob: -18.875085830688477
    8. '(int' → logprob: -19.375085830688477
    9. '((' → logprob: -20.500085830688477
    10. '()' → logprob: -20.500085830688477

Token 51: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04257739335298538
    2. ' -' → logprob: -3.9175775051116943
    3. '):' → logprob: -3.9175775051116943
    4. ')' → logprob: -6.292577266693115
    5. '):
' → logprob: -10.417577743530273
    6. ' ):' → logprob: -10.917577743530273
    7. ' )' → logprob: -13.292577743530273
    8. ' ' → logprob: -13.667577743530273
    9. '-)' → logprob: -14.667577743530273
    10. '1' → logprob: -14.792577743530273

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038086410495452583
    2. ' ' → logprob: -7.875380992889404
    3. ')' → logprob: -14.875380516052246
    4. '2' → logprob: -15.375380516052246
    5. '```' → logprob: -18.000381469726562
    6. '  ' → logprob: -18.500381469726562
    7. '<|end|>' → logprob: -18.625381469726562
    8. '0' → logprob: -19.000381469726562
    9. '   ' → logprob: -19.125381469726562
    10. '۱' → logprob: -19.375381469726562

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06557108461856842
    2. ')' → logprob: -3.3155710697174072
    3. ' ):' → logprob: -3.8155710697174072
    4. ':' → logprob: -6.065571308135986
    5. ' )' → logprob: -6.190571308135986
    6. '):
' → logprob: -7.315571308135986
    7. ' ):
' → logprob: -10.440570831298828
    8. ',' → logprob: -10.565570831298828
    9. ' :' → logprob: -10.815570831298828
    10. '):
' → logprob: -12.065570831298828

Token 54: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.11339335888624191
    2. ' u' → logprob: -2.3633933067321777
    3. 'a' → logprob: -4.363393306732178
    4. ' a' → logprob: -8.363393783569336
    5. '	u' → logprob: -10.113393783569336
    6. '   ' → logprob: -10.738393783569336
    7. 's' → logprob: -11.113393783569336
    8. 'v' → logprob: -11.488393783569336
    9. '<|end|>' → logprob: -11.613393783569336
    10. ' ' → logprob: -11.863393783569336

Token 55: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.029985010623931885
    2. 'a' (adapté à ' a') → logprob: -3.529984951019287
    3. ' u' → logprob: -8.404985427856445
    4. 'v' → logprob: -12.529985427856445
    5. 's' → logprob: -13.029985427856445
    6. ' a' → logprob: -13.654985427856445
    7. '	u' → logprob: -13.654985427856445
    8. 'x' → logprob: -14.279985427856445
    9. 'p' → logprob: -14.529985427856445
    10. '```' → logprob: -15.154985427856445

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06660404801368713
    2. ' ,' → logprob: -2.8166041374206543
    3. ',b' → logprob: -5.441604137420654
    4. ' ' → logprob: -8.816603660583496
    5. ',a' → logprob: -9.816603660583496
    6. ' =' → logprob: -10.691603660583496
    7. ',v' → logprob: -11.316603660583496
    8. ',int' → logprob: -11.441603660583496
    9. ',input' → logprob: -11.566603660583496
    10. 'b' → logprob: -12.566603660583496

Token 57: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31328681111335754
    2. ' b' → logprob: -1.3132867813110352
    3. ' ' → logprob: -10.688286781311035
    4. '<|end|>' → logprob: -13.563286781311035
    5. ' =' → logprob: -15.063286781311035
    6. '=' → logprob: -16.06328773498535
    7. 'c' → logprob: -16.18828773498535
    8. ',b' → logprob: -16.18828773498535
    9. '<|end|>' → logprob: -16.31328773498535
    10. 'space' → logprob: -16.31328773498535

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931480169296265
    2. ' =' → logprob: -0.6931480169296265
    3. ')' → logprob: -15.693147659301758
    4. ' ' → logprob: -15.943147659301758
    5. '=input' → logprob: -15.943147659301758
    6. ',' → logprob: -16.068147659301758
    7. '＝' → logprob: -16.193147659301758
    8. '=int' → logprob: -16.443147659301758
    9. '=line' → logprob: -16.818147659301758
    10. 'a' → logprob: -16.943147659301758

Token 59: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3869151771068573
    2. 'map' → logprob: -1.1369152069091797
    3. ' list' → logprob: -11.38691520690918
    4. ' ' → logprob: -11.51191520690918
    5. 'list' → logprob: -12.26191520690918
    6. '(map' → logprob: -12.26191520690918
    7. '[' → logprob: -12.51191520690918
    8. ' [' → logprob: -12.51191520690918
    9. '	map' → logprob: -12.76191520690918
    10. ' input' → logprob: -14.38691520690918

Token 60: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009477839921601117
    2. '(' → logprob: -7.000947952270508
    3. 'int' → logprob: -11.375947952270508
    4. '(str' → logprob: -11.500947952270508
    5. '(input' → logprob: -12.250947952270508
    6. '(lambda' → logprob: -12.500947952270508
    7. '<int' → logprob: -13.000947952270508
    8. '(in' → logprob: -13.500947952270508
    9. '[int' → logprob: -13.750947952270508
    10. ',int' → logprob: -15.250947952270508

Token 61: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0156217813491821
    2. 'x' → logprob: -1.1406217813491821
    3. 'int' → logprob: -1.2656217813491821
    4. ' int' → logprob: -3.5156216621398926
    5. ':int' → logprob: -5.890621662139893
    6. ':' → logprob: -6.140621662139893
    7. '(int' → logprob: -7.640621662139893
    8. 'lambda' → logprob: -8.14062213897705
    9. 'a' → logprob: -8.64062213897705
    10. ' lambda' → logprob: -9.01562213897705

Token 62: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036555372178554535
    2. ':int' → logprob: -3.411555290222168
    3. ' :' → logprob: -5.911555290222168
    4. ':x' → logprob: -8.786555290222168
    5. 'int' → logprob: -10.911555290222168
    6. '[int' → logprob: -12.661555290222168
    7. ',' → logprob: -12.911555290222168
    8. '=int' → logprob: -13.036555290222168
    9. ':void' → logprob: -13.036555290222168
    10. ':str' → logprob: -13.036555290222168

Token 63: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009338097646832466
    2. ' int' → logprob: -4.759337902069092
    3. 'x' → logprob: -7.384337902069092
    4. ' x' → logprob: -9.38433837890625
    5. '(int' → logprob: -11.88433837890625
    6. '<int' → logprob: -12.88433837890625
    7. ':int' → logprob: -13.13433837890625
    8. ' ' → logprob: -13.50933837890625
    9. '=int' → logprob: -13.50933837890625
    10. '[int' → logprob: -13.63433837890625

Token 64: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00010723850573413074
    2. '(' → logprob: -9.250106811523438
    3. 'x' → logprob: -11.500106811523438
    4. ' (' → logprob: -14.375106811523438
    5. '```' → logprob: -16.625106811523438
    6. '()' → logprob: -17.000106811523438
    7. ')' → logprob: -17.000106811523438
    8. '(
' → logprob: -17.125106811523438
    9. ')x' → logprob: -17.250106811523438
    10. ' x' → logprob: -17.625106811523438

Token 65: ')-' (ID: 14080)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004184771329164505
    2. '()' → logprob: -6.254184722900391
    3. '()-' → logprob: -6.379184722900391
    4. ')' → logprob: -8.50418472290039
    5. 'x' → logprob: -8.62918472290039
    6. '-' → logprob: -9.50418472290039
    7. ')-' → logprob: -9.87918472290039
    8. '())' → logprob: -11.12918472290039
    9. ' -' → logprob: -12.00418472290039
    10. '(input' → logprob: -12.37918472290039

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. ')' → logprob: -17.250179290771484
    4. ',' → logprob: -17.375179290771484
    5. '   ' → logprob: -17.562679290771484
    6. '１' → logprob: -18.312679290771484
    7. '  ' → logprob: -18.625179290771484
    8. ':' → logprob: -19.187679290771484
    9. '...' → logprob: -19.187679290771484
    10. 'to' → logprob: -19.250179290771484

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014652233803644776
    2. ',input' → logprob: -6.751465320587158
    3. ')' → logprob: -8.87646484375
    4. ',b' → logprob: -9.50146484375
    5. ',line' → logprob: -10.62646484375
    6. ' ,' → logprob: -11.25146484375
    7. ',)' → logprob: -11.37646484375
    8. ',x' → logprob: -11.62646484375
    9. ',a' → logprob: -11.87646484375
    10. 'input' → logprob: -12.00146484375

Token 68: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002476016292348504
    2. ' input' → logprob: -6.002476215362549
    3. '(input' → logprob: -16.37747573852539
    4. '=input' → logprob: -16.50247573852539
    5. ')' → logprob: -17.00247573852539
    6. ' ' → logprob: -18.00247573852539
    7. ',input' → logprob: -18.87747573852539
    8. '	input' → logprob: -18.87747573852539
    9. 'sys' → logprob: -19.12747573852539
    10. '_input' → logprob: -19.37747573852539

Token 69: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.036524842376821e-05
    2. '()' → logprob: -10.125040054321289
    3. ' ().' → logprob: -15.875040054321289
    4. ')' → logprob: -16.00004005432129
    5. '())' → logprob: -16.75004005432129
    6. '()
' → logprob: -18.62504005432129
    7. '(' → logprob: -19.00004005432129
    8. '.split' → logprob: -20.12504005432129
    9. '.' → logprob: -20.37504005432129
    10. '()?.' → logprob: -20.62504005432129

Token 70: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010580805974313989
    2. 'strip' → logprob: -9.250105857849121
    3. 'rstrip' → logprob: -12.000105857849121
    4. ' split' → logprob: -12.875105857849121
    5. '(split' → logprob: -14.750105857849121
    6. 'spl' → logprob: -14.875105857849121
    7. 's' → logprob: -16.250104904174805
    8. 'rs' → logprob: -18.250104904174805
    9. ')' → logprob: -18.750104904174805
    10. 'sp' → logprob: -18.875104904174805

Token 71: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1158129945397377
    2. '())' → logprob: -2.3658130168914795
    3. '))' → logprob: -4.8658127784729
    4. '()' → logprob: -4.8658127784729
    5. '()))' → logprob: -9.740813255310059
    6. '(' → logprob: -12.240813255310059
    7. ' )' → logprob: -12.865813255310059
    8. ')))' → logprob: -13.865813255310059
    9. ')
' → logprob: -13.990813255310059
    10. '())
' → logprob: -14.115813255310059

Token 72: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5623543858528137
    2. 'G' → logprob: -1.562354326248169
    3. ' G' → logprob: -2.562354326248169
    4. '   ' → logprob: -2.812354326248169
    5. '<|end|>' → logprob: -2.812354326248169
    6. ' ' → logprob: -5.312354564666748
    7. ')
' → logprob: -5.312354564666748
    8. '	G' → logprob: -5.437354564666748
    9. '    
' → logprob: -6.187354564666748
    10. ' 
' → logprob: -6.312354564666748

Token 73: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.00024524700711481273
    2. ' G' → logprob: -8.375245094299316
    3. '   ' → logprob: -11.375245094299316
    4. 'a' → logprob: -13.625245094299316
    5. '
' → logprob: -14.125245094299316
    6. ' ' → logprob: -15.000245094299316
    7. '<|end|>' → logprob: -15.125245094299316
    8. '	G' → logprob: -15.375245094299316
    9. '```' → logprob: -15.750245094299316
    10. '  ' → logprob: -15.875245094299316

Token 74: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.392202976712724e-06
    2. '[' → logprob: -12.375006675720215
    3. '[b' → logprob: -13.375006675720215
    4. 'a' → logprob: -14.500006675720215
    5. '[A' → logprob: -17.3750057220459
    6. '```' → logprob: -17.8750057220459
    7. ' [' → logprob: -18.3750057220459
    8. '[int' → logprob: -18.6250057220459
    9. '[u' → logprob: -19.3750057220459
    10. '[data' → logprob: -19.8750057220459

Token 75: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00025669054593890905
    2. '.append' → logprob: -8.875256538391113
    3. ').' → logprob: -9.500256538391113
    4. ']' → logprob: -10.375256538391113
    5. '.' → logprob: -11.750256538391113
    6. ' ].' → logprob: -13.000256538391113
    7. '[' → logprob: -16.00025749206543
    8. ''].' → logprob: -16.25025749206543
    9. '}.' → logprob: -16.25025749206543
    10. ')' → logprob: -16.50025749206543

Token 76: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0280383548888494e-06
    2. ' append' → logprob: -14.625000953674316
    3. '.append' → logprob: -14.750000953674316
    4. 'appen' → logprob: -16.875001907348633
    5. '_append' → logprob: -18.375001907348633
    6. '	append' → logprob: -18.500001907348633
    7. 'Append' → logprob: -18.625001907348633
    8. 'app' → logprob: -19.000001907348633
    9. 'add' → logprob: -19.000001907348633
    10. ' ' → logprob: -21.500001907348633

Token 77: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -11.875007629394531
    3. 'b' → logprob: -14.250007629394531
    4. ')b' → logprob: -18.50000762939453
    5. '((' → logprob: -18.62500762939453
    6. '(a' → logprob: -18.62500762939453
    7. '(
' → logprob: -19.00000762939453
    8. ' (' → logprob: -19.37500762939453
    9. '(B' → logprob: -19.62500762939453
    10. ' b' → logprob: -20.00000762939453

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015496177366003394
    2. ')
' → logprob: -6.50154972076416
    3. ' )' → logprob: -10.12654972076416
    4. ')
' → logprob: -12.12654972076416
    5. ' )
' → logprob: -14.62654972076416
    6. '),' → logprob: -15.00154972076416
    7. ')

' → logprob: -15.12654972076416
    8. ')b' → logprob: -15.87654972076416
    9. ')#' → logprob: -16.126548767089844
    10. '   ' → logprob: -16.251548767089844

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004740552976727486
    2. '<|end|>' → logprob: -5.7547407150268555
    3. 'G' → logprob: -6.6297407150268555
    4. '    
' → logprob: -9.629740715026855
    5. '	G' → logprob: -10.004740715026855
    6. ' G' → logprob: -10.004740715026855
    7. '  ' → logprob: -10.629740715026855
    8. '```' → logprob: -11.004740715026855
    9. ' ' → logprob: -11.254740715026855
    10. ')' → logprob: -12.254740715026855

Token 80: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.000282431225059554
    2. ' G' → logprob: -8.375282287597656
    3. '   ' → logprob: -9.875282287597656
    4. '	G' → logprob: -15.500282287597656
    5. '```' → logprob: -16.625282287597656
    6. ' ' → logprob: -17.375282287597656
    7. '<|end|>' → logprob: -17.750282287597656
    8. '  ' → logprob: -17.750282287597656
    9. '    
' → logprob: -19.375282287597656
    10. '[' → logprob: -19.500282287597656

Token 81: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -6.392202976712724e-06
    2. '[' → logprob: -12.750006675720215
    3. 'b' → logprob: -13.000006675720215
    4. '[a' → logprob: -13.750006675720215
    5. '[B' → logprob: -17.2500057220459
    6. '```' → logprob: -17.7500057220459
    7. '[s' → logprob: -18.2500057220459
    8. '][' → logprob: -18.3750057220459
    9. '[g' → logprob: -18.5000057220459
    10. '[
' → logprob: -18.5000057220459

Token 82: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.023808812722563744
    2. ').' → logprob: -3.773808717727661
    3. '.append' → logprob: -7.64880895614624
    4. '.' → logprob: -10.523808479309082
    5. ']' → logprob: -10.523808479309082
    6. ')' → logprob: -10.773808479309082
    7. ' ].' → logprob: -13.023808479309082
    8. '[' → logprob: -13.273808479309082
    9. '}.' → logprob: -13.273808479309082
    10. '<|end|>' → logprob: -13.648808479309082

Token 83: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1472419600977446e-06
    2. 'appen' → logprob: -13.875000953674316
    3. ' append' → logprob: -16.000001907348633
    4. '.append' → logprob: -16.625001907348633
    5. '	append' → logprob: -17.375001907348633
    6. 'app' → logprob: -17.875001907348633
    7. 'add' → logprob: -18.875001907348633
    8. 'Append' → logprob: -20.125001907348633
    9. '```' → logprob: -20.500001907348633
    10. 'a' → logprob: -20.750001907348633

Token 84: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0007105246186256409
    2. '(' → logprob: -7.250710487365723
    3. '(
' → logprob: -14.875710487365723
    4. 'a' → logprob: -15.750710487365723
    5. ')' → logprob: -18.87571144104004
    6. '(

' → logprob: -19.37571144104004
    7. '(b' → logprob: -19.62571144104004
    8. ' (' → logprob: -19.87571144104004
    9. '((' → logprob: -19.87571144104004
    10. '(A' → logprob: -20.00071144104004

Token 85: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011617878044489771
    2. ')
' → logprob: -9.125116348266602
    3. ' )' → logprob: -12.000116348266602
    4. '
' → logprob: -15.250116348266602
    5. ')

' → logprob: -15.250116348266602
    6. ')n' → logprob: -15.875116348266602
    7. ')return' → logprob: -16.1251163482666
    8. '),' → logprob: -16.5001163482666
    9. '```' → logprob: -16.6251163482666
    10. '))' → logprob: -16.7501163482666

Token 86: 'flag' (ID: 17665)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0613231658935547
    2. 'depth' → logprob: -1.3113231658935547
    3. 'visited' → logprob: -1.5613231658935547
    4. 'stack' → logprob: -2.6863231658935547
    5. 'color' → logprob: -3.5613231658935547
    6. 'dp' → logprob: -3.5613231658935547
    7. 'parent' → logprob: -4.436323165893555
    8. 'used' → logprob: -4.936323165893555
    9. 'seen' → logprob: -4.936323165893555
    10. 'q' → logprob: -5.311323165893555

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004608488176018
    2. '[' → logprob: -5.754608631134033
    3. 's' → logprob: -7.629608631134033
    4. '=' → logprob: -7.629608631134033
    5. ' ' → logprob: -8.379608154296875
    6. '(' → logprob: -9.754608154296875
    7. '[:]' → logprob: -10.254608154296875
    8. ' =[' → logprob: -10.379608154296875
    9. '[]' → logprob: -10.629608154296875
    10. '=[' → logprob: -11.254608154296875

Token 88: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4320053160190582
    2. 'False' → logprob: -1.8070052862167358
    3. 'True' → logprob: -1.8070052862167358
    4. ' [' → logprob: -4.182005405426025
    5. ' True' → logprob: -5.307005405426025
    6. ' False' → logprob: -6.557005405426025
    7. '0' → logprob: -8.057004928588867
    8. '[n' → logprob: -8.932004928588867
    9. '[-' → logprob: -9.057004928588867
    10. '[]' → logprob: -9.057004928588867

Token 89: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.014242835342884064
    2. 'True' → logprob: -4.889242649078369
    3. ' False' → logprob: -5.389242649078369
    4. '0' → logprob: -6.264242649078369
    5. ' True' → logprob: -9.264243125915527
    6. '-' → logprob: -10.264243125915527
    7. ' ' → logprob: -12.389243125915527
    8. ']' → logprob: -12.514243125915527
    9. '1' → logprob: -12.639243125915527
    10. '-F' → logprob: -13.514243125915527

Token 90: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03493295982480049
    2. ']*' → logprob: -3.534932851791382
    3. ' for' → logprob: -5.659933090209961
    4. ']*(' → logprob: -6.784933090209961
    5. ' ]' → logprob: -8.034933090209961
    6. 'for' → logprob: -8.534933090209961
    7. ',' → logprob: -11.159933090209961
    8. ' ' → logprob: -12.159933090209961
    9. ')' → logprob: -12.159933090209961
    10. ']+' → logprob: -12.534933090209961

Token 91: ' *' (ID: 425)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1371703147888184
    2. ' *' → logprob: -1.3871703147888184
    3. ' ]' → logprob: -2.3871703147888184
    4. ']' → logprob: -2.6371703147888184
    5. ' for' → logprob: -2.6371703147888184
    6. '*' → logprob: -3.0121703147888184
    7. ' ' → logprob: -3.7621703147888184
    8. 'n' → logprob: -4.137170314788818
    9. '*(' → logprob: -4.512170314788818
    10. '[n' → logprob: -4.512170314788818

Token 92: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.438573680294212e-06
    2. ' n' → logprob: -12.500005722045898
    3. '(n' → logprob: -13.375005722045898
    4. '(' → logprob: -16.2500057220459
    5. ')n' → logprob: -17.7500057220459
    6. '	n' → logprob: -19.3750057220459
    7. ' (' → logprob: -20.1250057220459
    8. '_n' → logprob: -20.3750057220459
    9. '[n' → logprob: -20.6250057220459
    10. '$n' → logprob: -21.1250057220459

Token 93: '

' (ID: 279)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.3268350660800934
    2. ' stack' → logprob: -2.9518351554870605
    3. 'def' → logprob: -3.0768351554870605
    4. 'dist' → logprob: -3.8268351554870605
    5. 'visited' → logprob: -3.9518351554870605
    6. 'dp' → logprob: -4.3268351554870605
    7. '\n' → logprob: -4.4518351554870605
    8. '
' → logprob: -4.4518351554870605
    9. 'deque' → logprob: -4.5768351554870605
    10. '0' → logprob: -4.7018351554870605

Token 94: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08481110632419586
    2. 'stack' → logprob: -2.709811210632324
    3. 'from' → logprob: -5.334811210632324
    4. 'q' → logprob: -5.334811210632324
    5. 'd' → logprob: -6.334811210632324
    6. 'deque' → logprob: -7.084811210632324
    7. 'queue' → logprob: -7.209811210632324
    8. 'for' → logprob: -8.084811210632324
    9. 'dq' → logprob: -8.459811210632324
    10. 'flag' → logprob: -8.459811210632324

Token 95: ' Iter' (ID: 24464)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7365512847900391
    2. 'from' → logprob: -1.611551284790039
    3. 'stack' → logprob: -1.611551284790039
    4. ' def' → logprob: -3.861551284790039
    5. ' stack' → logprob: -4.236551284790039
    6. 'b' → logprob: -4.236551284790039
    7. 'for' → logprob: -4.486551284790039
    8. ' from' → logprob: -4.861551284790039
    9. '1' → logprob: -4.986551284790039
    10. 'import' → logprob: -5.111551284790039

Token 96: 'ative' (ID: 1799)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.6639631986618042
    2. 'def' → logprob: -1.6639631986618042
    3. 'dfs' → logprob: -1.9139631986618042
    4. 'deque' → logprob: -1.9139631986618042
    5. 'ent' → logprob: -2.6639633178710938
    6. 'er' → logprob: -2.9139633178710938
    7. 'ative' → logprob: -3.0389633178710938
    8. 'depth' → logprob: -4.163963317871094
    9. 't' → logprob: -4.163963317871094
    10. 'DFS' → logprob: -4.288963317871094

Token 97: ' DFS' (ID: 115767)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.0222283601760864
    2. ' DFS' → logprob: -1.8972283601760864
    3. 'def' → logprob: -2.147228240966797
    4. ' dfs' → logprob: -2.272228240966797
    5. ' stack' → logprob: -2.772228240966797
    6. ' deep' → logprob: -2.897228240966797
    7. 'stack' → logprob: -2.897228240966797
    8. 'DFS' → logprob: -3.147228240966797
    9. 'depth' → logprob: -4.397228240966797
    10. ' def' → logprob: -4.397228240966797

Token 98: ' to' (ID: 316)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.25228381156921387
    2. ' stack' → logprob: -1.5022838115692139
    3. 's' → logprob: -8.627284049987793
    4. '_stack' → logprob: -9.377284049987793
    5. 'st' → logprob: -10.752284049987793
    6. 'stk' → logprob: -11.252284049987793
    7. ' stk' → logprob: -11.502284049987793
    8. '	stack' → logprob: -11.502284049987793
    9. 'from' → logprob: -11.877284049987793
    10. 'd' → logprob: -12.002284049987793

Token 99: ' avoid' (ID: 8397)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -1.5201351642608643
    2. 'simulate' → logprob: -1.8951351642608643
    3. 'avoid' → logprob: -2.0201351642608643
    4. 'expl' → logprob: -2.7701351642608643
    5. ' avoid' → logprob: -2.8951351642608643
    6. 'mark' → logprob: -3.0201351642608643
    7. ' stack' → logprob: -3.2701351642608643
    8. 'color' → logprob: -3.2701351642608643
    9. ' check' → logprob: -3.2701351642608643
    10. ' color' → logprob: -3.3951351642608643

Token 100: ' recursion' (ID: 122185)
  Prédit: ' recursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recursion' → logprob: -0.13607382774353027
    2. ' stack' → logprob: -2.6360738277435303
    3. ' Rec' → logprob: -3.3860738277435303
    4. 'Rec' → logprob: -4.636074066162109
    5. ' maximum' → logprob: -5.011074066162109
    6. 'stack' → logprob: -5.886074066162109
    7. 'rec' → logprob: -6.386074066162109
    8. 'maximum' → logprob: -8.01107406616211
    9. ' Runtime' → logprob: -9.38607406616211
    10. 'Stack' → logprob: -9.51107406616211

Token 101: ':
' (ID: 734)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07971668988466263
    2. ' stack' → logprob: -2.579716682434082
    3. '_stack' → logprob: -8.329716682434082
    4. 's' → logprob: -8.454716682434082
    5. 'from' → logprob: -9.329716682434082
    6. '
' → logprob: -9.829716682434082
    7. '(stack' → logprob: -10.079716682434082
    8. 'stk' → logprob: -10.079716682434082
    9. 'st' → logprob: -10.704716682434082
    10. 'd' → logprob: -11.204716682434082

Token 102: 'stack' (ID: 15145)
  Prédit: 'stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.008620720356702805
    2. ' stack' → logprob: -4.758620738983154
    3. 'stk' → logprob: -13.133620262145996
    4. 'from' → logprob: -13.383620262145996
    5. 'st' → logprob: -13.508620262145996
    6. '_stack' → logprob: -15.008620262145996
    7. '	stack' → logprob: -15.258620262145996
    8. 'Stack' → logprob: -15.383620262145996
    9. '```' → logprob: -15.633620262145996
    10. 'deque' → logprob: -16.508621215820312

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011074351146817207
    2. '=' → logprob: -4.511074542999268
    3. '=[]' → logprob: -11.38607406616211
    4. '.append' → logprob: -12.26107406616211
    5. ' =[' → logprob: -12.26107406616211
    6. '=[' → logprob: -12.38607406616211
    7. ',' → logprob: -14.13607406616211
    8. '＝' → logprob: -15.51107406616211
    9. ' ' → logprob: -16.13607406616211
    10. ' =(' → logprob: -16.63607406616211

Token 104: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.060719069093465805
    2. '[' → logprob: -3.0607190132141113
    3. 'deque' → logprob: -4.560719013214111
    4. ' [(' → logprob: -6.810719013214111
    5. ' deque' → logprob: -8.18571949005127
    6. ' [' → logprob: -9.06071949005127
    7. '[((' → logprob: -9.56071949005127
    8. '[n' → logprob: -12.06071949005127
    9. '[]' → logprob: -12.18571949005127
    10. '[d' → logprob: -12.31071949005127

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.75001049041748
    3. '(' → logprob: -13.25001049041748
    4. ')' → logprob: -14.12501049041748
    5. ',' → logprob: -15.62501049041748
    6. ' (' → logprob: -17.312511444091797
    7. '   ' → logprob: -17.312511444091797
    8. '۰' → logprob: -17.625011444091797
    9. '[' → logprob: -17.750011444091797
    10. '1' → logprob: -17.875011444091797

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0722858102526516e-05
    2. ' ,' → logprob: -10.500041007995605
    3. ',)' → logprob: -12.125041007995605
    4. ',-' → logprob: -12.750041007995605
    5. ',None' → logprob: -13.125041007995605
    6. ',
' → logprob: -14.000041007995605
    7. ')' → logprob: -14.875041007995605
    8. ')]' → logprob: -15.000041007995605
    9. '0' → logprob: -15.125041007995605
    10. ',[' → logprob: -15.250041007995605

Token 107: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002771239960566163
    2. '0' → logprob: -6.252771377563477
    3. ' -' → logprob: -7.252771377563477
    4. 'None' → logprob: -9.127771377563477
    5. 'False' → logprob: -11.127771377563477
    6. ' ' → logprob: -12.752771377563477
    7. '-n' → logprob: -13.127771377563477
    8. ' None' → logprob: -13.752771377563477
    9. ')' → logprob: -14.252771377563477
    10. '1' → logprob: -14.252771377563477

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.250005722045898
    3. '2' → logprob: -14.875005722045898
    4. '-' → logprob: -15.000005722045898
    5. ')' → logprob: -15.750005722045898
    6. '１' → logprob: -16.1875057220459
    7. '

' → logprob: -16.8750057220459
    8. '```' → logprob: -17.0625057220459
    9. '11' → logprob: -17.3125057220459
    10. '
' → logprob: -17.4375057220459

Token 109: ',' (ID: 11)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02159884199500084
    2. ',' → logprob: -3.8965988159179688
    3. ')' → logprob: -7.271598815917969
    4. ' )' → logprob: -8.146598815917969
    5. ')]
' → logprob: -10.021598815917969
    6. ' ,' → logprob: -11.896598815917969
    7. ']' → logprob: -12.396598815917969
    8. '))' → logprob: -12.521598815917969
    9. ')]

' → logprob: -12.521598815917969
    10. ')])' → logprob: -13.271598815917969

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026943495497107506
    2. 'False' → logprob: -4.026943683624268
    3. ' ' → logprob: -5.276943683624268
    4. '1' → logprob: -6.026943683624268
    5. 'True' → logprob: -7.276943683624268
    6. ' False' → logprob: -8.27694320678711
    7. '-' → logprob: -8.90194320678711
    8. ' True' → logprob: -10.65194320678711
    9. '2' → logprob: -10.90194320678711
    10. '"' → logprob: -11.02694320678711

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042333122342824936
    2. 'False' → logprob: -3.7923331260681152
    3. '1' → logprob: -4.417333126068115
    4. 'True' → logprob: -5.792333126068115
    5. '-' → logprob: -6.417333126068115
    6. ' ' → logprob: -6.917333126068115
    7. 'flag' → logprob: -7.417333126068115
    8. '2' → logprob: -9.229832649230957
    9. 'None' → logprob: -9.542332649230957
    10. ' False' → logprob: -9.729832649230957

Token 112: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0016104355454444885
    2. ')' → logprob: -7.001610279083252
    3. ')]
' → logprob: -7.876610279083252
    4. ' )' → logprob: -8.25161075592041
    5. ',' → logprob: -10.37661075592041
    6. ')]

' → logprob: -11.25161075592041
    7. ']' → logprob: -12.37661075592041
    8. ')]
' → logprob: -12.50161075592041
    9. ')])' → logprob: -13.50161075592041
    10. ')
' → logprob: -13.62661075592041

Token 113: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0004201866395305842
    2. ' while' → logprob: -7.875420093536377
    3. 'ans' → logprob: -11.375420570373535
    4. 'result' → logprob: -12.375420570373535
    5. 'answer' → logprob: -12.750420570373535
    6. 'max' → logprob: -12.750420570373535
    7. 'depth' → logprob: -12.750420570373535
    8. 'While' → logprob: -13.000420570373535
    9. 'next' → logprob: -13.000420570373535
    10. ')' → logprob: -13.125420570373535

Token 114: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.04300617426633835
    2. ' stack' → logprob: -3.168006181716919
    3. '	stack' → logprob: -12.41800594329834
    4. '(stack' → logprob: -13.41800594329834
    5. 'len' → logprob: -14.16800594329834
    6. ' ' → logprob: -15.54300594329834
    7. 'Stack' → logprob: -15.66800594329834
    8. 'st' → logprob: -16.043006896972656
    9. '   ' → logprob: -16.668006896972656
    10. ' len' → logprob: -17.168006896972656

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017421995289623737
    2. ' :' → logprob: -9.750174522399902
    3. '):' → logprob: -10.125174522399902
    4. '>:' → logprob: -10.500174522399902
    5. '!=' → logprob: -10.875174522399902
    6. ':
' → logprob: -11.250174522399902
    7. ':not' → logprob: -12.375174522399902
    8. ' and' → logprob: -13.125174522399902
    9. ':**' → logprob: -13.375174522399902
    10. ':=' → logprob: -13.375174522399902

Token 116: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6991226077079773
    2. ' v' → logprob: -1.574122667312622
    3. '   ' → logprob: -1.699122667312622
    4. 'u' → logprob: -2.824122667312622
    5. ' u' → logprob: -3.824122667312622
    6. 'node' → logprob: -4.074122428894043
    7. ' node' → logprob: -4.324122428894043
    8. ',' → logprob: -7.699122428894043
    9. ',v' → logprob: -8.074122428894043
    10. '(v' → logprob: -8.574122428894043

Token 117: ' cur' (ID: 4396)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.49108392000198364
    2. ' v' → logprob: -1.2410838603973389
    3. 'u' → logprob: -3.616083860397339
    4. ' node' → logprob: -3.741083860397339
    5. 'node' → logprob: -3.866083860397339
    6. ' u' → logprob: -3.991083860397339
    7. '   ' → logprob: -4.741084098815918
    8. '    ' → logprob: -9.991084098815918
    9. 'cur' (adapté à ' cur') → logprob: -10.491084098815918
    10. '	v' → logprob: -10.741084098815918

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7835754988482222e-05
    2. ' ,' → logprob: -11.375018119812012
    3. ',node' → logprob: -12.625018119812012
    4. '_,' → logprob: -13.625018119812012
    5. ',_' → logprob: -15.000018119812012
    6. ',n' → logprob: -15.500018119812012
    7. ',state' → logprob: -15.625018119812012
    8. ',,' → logprob: -16.000017166137695
    9. ',)' → logprob: -16.250017166137695
    10. ',),' → logprob: -16.375017166137695

Token 119: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.020162733271718025
    2. 'parent' → logprob: -4.145162582397461
    3. 'prev' → logprob: -6.020162582397461
    4. 'pre' → logprob: -6.645162582397461
    5. ' par' → logprob: -8.520162582397461
    6. 'p' → logprob: -9.770162582397461
    7. ' parent' → logprob: -9.895162582397461
    8. 'pr' → logprob: -10.020162582397461
    9. 'pa' → logprob: -10.770162582397461
    10. 'paren' → logprob: -11.270162582397461

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9186317482963204e-05
    2. ' ,' → logprob: -10.125049591064453
    3. 't' → logprob: -12.375049591064453
    4. '=' → logprob: -13.875049591064453
    5. ' ' → logprob: -14.750049591064453
    6. 's' → logprob: -15.187549591064453
    7. 'd' → logprob: -15.250049591064453
    8. 'y' → logprob: -15.312549591064453
    9. '_,' → logprob: -15.437549591064453
    10. ',current' → logprob: -16.062549591064453

Token 121: ' f' (ID: 285)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.1363304704427719
    2. 'color' → logprob: -2.6363303661346436
    3. 'col' → logprob: -3.7613303661346436
    4. 'dist' → logprob: -4.511330604553223
    5. 'd' → logprob: -4.636330604553223
    6. 'state' → logprob: -5.636330604553223
    7. 'c' → logprob: -6.011330604553223
    8. ' depth' → logprob: -6.136330604553223
    9. 'dep' → logprob: -6.761330604553223
    10. 'clr' → logprob: -7.136330604553223

Token 122: ' =' (ID: 314)
  Prédit: 'lag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lag' → logprob: -0.42019855976104736
    2. ' =' → logprob: -1.1701985597610474
    3. '=' → logprob: -3.920198440551758
    4. 'l' → logprob: -5.170198440551758
    5. 'lg' → logprob: -5.795198440551758
    6. 'lags' → logprob: -7.045198440551758
    7. 'or' → logprob: -7.295198440551758
    8. 'flag' → logprob: -7.920198440551758
    9. 'la' → logprob: -8.607698440551758
    10. ')' → logprob: -8.920198440551758

Token 123: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.01430653128772974
    2. ' stack' → logprob: -4.264306545257568
    3. 'flag' → logprob: -9.13930606842041
    4. '(stack' → logprob: -11.26430606842041
    5. ' ' → logprob: -11.38930606842041
    6. '	stack' → logprob: -12.51430606842041
    7. ' flag' → logprob: -12.76430606842041
    8. '0' → logprob: -13.38930606842041
    9. '   ' → logprob: -13.38930606842041
    10. '
' → logprob: -14.88930606842041

Token 124: '.pop' (ID: 15746)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.760644793510437
    2. '.pop' → logprob: -1.135644793510437
    3. ',' → logprob: -2.1356449127197266
    4. ' =' → logprob: -2.6356449127197266
    5. '.append' → logprob: -4.635644912719727
    6. 'pop' → logprob: -5.010644912719727
    7. '[' → logprob: -6.385644912719727
    8. ':' → logprob: -7.135644912719727
    9. ' pop' → logprob: -7.260644912719727
    10. ')' → logprob: -8.010644912719727

Token 125: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002572865632828325
    2. '()
' → logprob: -8.50025749206543
    3. '(' → logprob: -10.25025749206543
    4. ' ()' → logprob: -11.12525749206543
    5. ')' → logprob: -13.50025749206543
    6. '()

' → logprob: -14.00025749206543
    7. '()
' → logprob: -14.25025749206543
    8. '())' → logprob: -15.50025749206543
    9. '()]' → logprob: -15.62525749206543
    10. '(),' → logprob: -15.75025749206543

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5375614762306213
    2. 'flag' → logprob: -1.2875614166259766
    3. ' flag' → logprob: -2.0375614166259766
    4. ' if' → logprob: -5.162561416625977
    5. 'if' → logprob: -5.662561416625977
    6. '
' → logprob: -8.912561416625977
    7. '    
' → logprob: -9.287561416625977
    8. '	flag' → logprob: -10.537561416625977
    9. ' for' → logprob: -11.287561416625977
    10. ' ' → logprob: -11.287561416625977

Token 127: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.08077648282051086
    2. ' flag' → logprob: -3.2057764530181885
    3. 'if' → logprob: -3.5807764530181885
    4. '   ' → logprob: -5.330776691436768
    5. ' if' → logprob: -5.455776691436768
    6. '
' → logprob: -10.58077621459961
    7. ' ' → logprob: -10.83077621459961
    8. '```' → logprob: -11.08077621459961
    9. '	flag' → logprob: -11.51827621459961
    10. '(flag' → logprob: -12.39327621459961

Token 128: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.750001907348633
    3. 'cur' → logprob: -16.375001907348633
    4. '[curr' → logprob: -16.875001907348633
    5. '[f' → logprob: -17.000001907348633
    6. '[current' → logprob: -17.125001907348633
    7. ' [' → logprob: -17.750001907348633
    8. '```' → logprob: -18.000001907348633
    9. '(cur' → logprob: -18.250001907348633
    10. '
' → logprob: -18.500001907348633

Token 129: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002960585057735443
    2. ']=' → logprob: -5.877960681915283
    3. ' ]' → logprob: -9.752960205078125
    4. '|' → logprob: -10.002960205078125
    5. ')' → logprob: -10.627960205078125
    6. '=' → logprob: -10.877960205078125
    7. ']+=' → logprob: -12.127960205078125
    8. '[' → logprob: -14.252960205078125
    9. ']==' → logprob: -14.627960205078125
    10. '^' → logprob: -14.627960205078125

Token 130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02638007327914238
    2. ' =' → logprob: -3.9013800621032715
    3. '|' → logprob: -5.2763800621032715
    4. ' |=' → logprob: -8.15138053894043
    5. ' ^=' → logprob: -8.27638053894043
    6. '^' → logprob: -9.27638053894043
    7. '+=' → logprob: -9.90138053894043
    8. '=f' → logprob: -11.40138053894043
    9. ')' → logprob: -12.52638053894043
    10. '[' → logprob: -13.52638053894043

Token 131: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.019733747467398643
    2. ' f' → logprob: -4.394733905792236
    3. '1' → logprob: -5.144733905792236
    4. 'max' → logprob: -7.144733905792236
    5. ' max' → logprob: -8.894733428955078
    6. ' ' → logprob: -9.019733428955078
    7. '(f' → logprob: -9.144733428955078
    8. '(' → logprob: -9.394733428955078
    9. 'flag' → logprob: -10.144733428955078
    10. ' (' → logprob: -10.269733428955078

Token 132: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013340688310563564
    2. ' for' → logprob: -5.013340473175049
    3. 'next' → logprob: -5.763340473175049
    4. '   ' → logprob: -5.888340473175049
    5. 'c' → logprob: -8.263340950012207
    6. 'nf' → logprob: -9.263340950012207
    7. 'cnt' → logprob: -9.513340950012207
    8. '0' → logprob: -9.888340950012207
    9. '```' → logprob: -10.138340950012207
    10. ' next' → logprob: -10.388340950012207

Token 133: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008699074387550354
    2. ' for' → logprob: -4.7586989402771
    3. '   ' → logprob: -9.383699417114258
    4. 'next' → logprob: -15.883699417114258
    5. '    
' → logprob: -16.258699417114258
    6. '```' → logprob: -16.508699417114258
    7. '	for' → logprob: -16.758699417114258
    8. 'f' → logprob: -17.508699417114258
    9. '
' → logprob: -17.883699417114258
    10. '0' → logprob: -19.008699417114258

Token 134: ' stack' (ID: 10825)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005511255003511906
    2. ' for' → logprob: -7.625551223754883
    3. '   ' → logprob: -9.750551223754883
    4. 'next' → logprob: -13.375551223754883
    5. '```' → logprob: -14.125551223754883
    6. '    
' → logprob: -14.125551223754883
    7. 'f' → logprob: -14.625551223754883
    8. '0' → logprob: -14.625551223754883
    9. 'fo' → logprob: -16.125551223754883
    10. '1' → logprob: -16.375551223754883

Token 135: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.0028243737760931253
    2. '.' → logprob: -6.002824306488037
    3. 'extend' → logprob: -8.002824783325195
    4. '.append' → logprob: -12.002824783325195
    5. ' extend' → logprob: -13.252824783325195
    6. ' .' → logprob: -13.377824783325195
    7. ' extends' → logprob: -13.502824783325195
    8. 'extends' → logprob: -13.627824783325195
    9. '.ext' → logprob: -14.252824783325195
    10. '+=' → logprob: -14.377824783325195

Token 136: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.016448864713311195
    2. '([(' → logprob: -4.641448974609375
    3. '(' → logprob: -5.141448974609375
    4. '(
' → logprob: -8.016448974609375
    5. '[(' → logprob: -8.016448974609375
    6. '([' → logprob: -9.266448974609375
    7. '(((' → logprob: -9.766448974609375
    8. '([
' → logprob: -11.766448974609375
    9. '(

' → logprob: -14.766448974609375
    10. '(([' → logprob: -14.766448974609375

Token 137: 'to' (ID: 935)
  Prédit: '(child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(child' → logprob: -0.8249793648719788
    2. '(ne' → logprob: -0.9499793648719788
    3. 'child' → logprob: -2.824979305267334
    4. '(v' → logprob: -3.449979305267334
    5. '(ch' → logprob: -3.949979305267334
    6. '(nb' → logprob: -3.949979305267334
    7. '(nx' → logprob: -4.199979305267334
    8. '(n' → logprob: -4.449979305267334
    9. '(next' → logprob: -5.824979305267334
    10. 'neighbor' → logprob: -6.324979305267334

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.045823566731997e-05
    2. ' ,' → logprob: -11.125020027160645
    3. ',f' → logprob: -14.125020027160645
    4. 'r' → logprob: -14.250020027160645
    5. 'for' → logprob: -14.625020027160645
    6. ',p' → logprob: -14.750020027160645
    7. 'w' → logprob: -14.875020027160645
    8. 'v' → logprob: -15.125020027160645
    9. ' for' → logprob: -15.250020027160645
    10. ',d' → logprob: -15.250020027160645

Token 139: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0011706985533237457
    2. ' cur' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.501171112060547
    4. '	cur' → logprob: -16.001171112060547
    5. ' ' → logprob: -16.626171112060547
    6. '[cur' → logprob: -17.376171112060547
    7. 'curr' → logprob: -17.876171112060547
    8. ',' → logprob: -18.376171112060547
    9. '(cur' → logprob: -18.501171112060547
    10. '-cur' → logprob: -18.626171112060547

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023245064076036215
    2. ' ,' → logprob: -6.37732458114624
    3. '1' → logprob: -8.002324104309082
    4. ',f' → logprob: -8.627324104309082
    5. ' ' → logprob: -10.127324104309082
    6. ',
' → logprob: -11.377324104309082
    7. ' f' → logprob: -11.502324104309082
    8. '0' → logprob: -11.877324104309082
    9. 'f' → logprob: -11.877324104309082
    10. '3' → logprob: -12.252324104309082

Token 141: ' f' (ID: 285)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1126890704035759
    2. 'f' → logprob: -2.4876890182495117
    3. ' ' → logprob: -4.737689018249512
    4. '0' → logprob: -4.987689018249512
    5. '(f' → logprob: -5.487689018249512
    6. ' f' → logprob: -6.487689018249512
    7. '(' → logprob: -7.112689018249512
    8. 'not' → logprob: -7.612689018249512
    9. '   ' → logprob: -8.612689018249512
    10. '(not' → logprob: -8.737689018249512

Token 142: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.641670823097229
    2. '^' → logprob: -0.766670823097229
    3. ')' → logprob: -4.7666707038879395
    4. '1' → logprob: -9.016671180725098
    5. ' ' → logprob: -9.141671180725098
    6. '^(' → logprob: -9.516671180725098
    7. '^)' → logprob: -9.891671180725098
    8. ' if' → logprob: -10.391671180725098
    9. '0' → logprob: -10.891671180725098
    10. '   ' → logprob: -11.016671180725098

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005952975247055292
    2. ' ' → logprob: -5.130952835083008
    3. 'flag' → logprob: -11.130952835083008
    4. ' flag' → logprob: -13.005952835083008
    5. '   ' → logprob: -13.443452835083008
    6. ')' → logprob: -13.880952835083008
    7. '(' → logprob: -14.130952835083008
    8. ' (' → logprob: -14.568452835083008
    9. '0' → logprob: -14.568452835083008
    10. '255' → logprob: -14.755952835083008

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023226479243021458
    2. ' ' → logprob: -8.375232696533203
    3. 'flag' → logprob: -14.750232696533203
    4. '0' → logprob: -15.750232696533203
    5. '   ' → logprob: -15.937732696533203
    6. ')' → logprob: -16.187732696533203
    7. '(' → logprob: -16.375232696533203
    8. '255' → logprob: -16.562732696533203
    9. '１' → logprob: -16.687732696533203
    10. '3' → logprob: -16.812732696533203

Token 145: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.596781946020201e-05
    2. ' )' → logprob: -10.000045776367188
    3. ')
' → logprob: -15.000045776367188
    4. '))' → logprob: -16.375045776367188
    5. ' ' → logprob: -17.000045776367188
    6. '）' → logprob: -17.875045776367188
    7. ' for' → logprob: -18.500045776367188
    8. 'for' → logprob: -18.750045776367188
    9. '')' → logprob: -18.875045776367188
    10. '   ' → logprob: -18.875045776367188

Token 146: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018318621441721916
    2. 'for' → logprob: -4.2683186531066895
    3. ')' → logprob: -5.5183186531066895
    4. ' ' → logprob: -9.018318176269531
    5. '	for' → logprob: -11.768318176269531
    6. ' )' → logprob: -12.893318176269531
    7. '   ' → logprob: -13.143318176269531
    8. '  ' → logprob: -15.268318176269531
    9. ' ' → logprob: -16.26831817626953
    10. '
' → logprob: -16.89331817626953

Token 147: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0008195152622647583
    2. 'to' → logprob: -7.125819683074951
    3. '	to' → logprob: -11.750819206237793
    4. ' G' → logprob: -12.750819206237793
    5. ' ' → logprob: -13.375819206237793
    6. ' in' → logprob: -14.250819206237793
    7. ' neighbor' → logprob: -14.500819206237793
    8. 'G' → logprob: -15.250819206237793
    9. ' ' → logprob: -15.250819206237793
    10. ' (' → logprob: -15.625819206237793

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003507891669869423
    2. 'in' → logprob: -5.7535080909729
    3. ' G' → logprob: -8.253507614135742
    4. 'G' → logprob: -10.003507614135742
    5. ' ' → logprob: -10.878507614135742
    6. ' if' → logprob: -13.128507614135742
    7. 'In' → logprob: -13.628507614135742
    8. ')' → logprob: -14.128507614135742
    9. '  ' → logprob: -14.378507614135742
    10. 'if' → logprob: -15.003507614135742

Token 149: ' G' (ID: 499)
  Prédit: ' G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' G' → logprob: -0.07890047132968903
    2. 'G' → logprob: -2.5789005756378174
    3. ' ' → logprob: -12.078900337219238
    4. '	G' → logprob: -12.828900337219238
    5. '   ' → logprob: -13.828900337219238
    6. '(G' → logprob: -14.703900337219238
    7. ')' → logprob: -15.078900337219238
    8. '  ' → logprob: -15.703900337219238
    9. '<G' → logprob: -16.203901290893555
    10. '[G' → logprob: -16.453901290893555

Token 150: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -1.9361264946837764e-07
    2. 'cur' → logprob: -15.75
    3. '(cur' → logprob: -19.0
    4. '[curr' → logprob: -19.375
    5. '[current' → logprob: -19.75
    6. ' [' → logprob: -20.0
    7. '[c' → logprob: -20.0
    8. '	cur' → logprob: -20.375
    9. ' cur' → logprob: -21.25
    10. '[' → logprob: -21.625

Token 151: ']' (ID: 60)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.0005058500682935119
    2. 'cur' → logprob: -8.250505447387695
    3. ' if' → logprob: -8.875505447387695
    4. 'if' → logprob: -9.250505447387695
    5. ']' → logprob: -12.875505447387695
    6. ' cur' → logprob: -13.000505447387695
    7. '(cur' → logprob: -13.625505447387695
    8. '	cur' → logprob: -14.125505447387695
    9. '   ' → logprob: -14.250505447387695
    10. ' ' → logprob: -14.250505447387695

Token 152: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.131597638130188
    2. 'if' → logprob: -2.1315975189208984
    3. '[cur' → logprob: -5.381597518920898
    4. 'cur' → logprob: -10.006597518920898
    5. ' ' → logprob: -11.631597518920898
    6. ')' → logprob: -13.006597518920898
    7. ' cur' → logprob: -13.506597518920898
    8. '   ' → logprob: -15.131597518920898
    9. '  ' → logprob: -16.2565975189209
    10. '(cur' → logprob: -16.5065975189209

Token 153: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.38687217235565186
    2. 'to' → logprob: -1.1368721723556519
    3. '(to' → logprob: -14.761872291564941
    4. '	to' → logprob: -15.011872291564941
    5. '[to' → logprob: -15.886872291564941
    6. ' ' → logprob: -16.261871337890625
    7. ' ' → logprob: -16.636871337890625
    8. '```' → logprob: -17.011871337890625
    9. ' not' → logprob: -17.136871337890625
    10. '   ' → logprob: -18.136871337890625

Token 154: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1799086481332779
    2. ' !=' → logprob: -1.8049086332321167
    3. '()!=' → logprob: -9.429908752441406
    4. ')!=' → logprob: -10.179908752441406
    5. ']!=' → logprob: -10.804908752441406
    6. '!==' → logprob: -11.679908752441406
    7. '!=-' → logprob: -12.179908752441406
    8. '!='' → logprob: -13.304908752441406
    9. '!="' → logprob: -13.304908752441406
    10. 'to' → logprob: -13.429908752441406

Token 155: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.10273512452840805
    2. ' par' → logprob: -2.4777350425720215
    3. 'cur' → logprob: -4.3527350425720215
    4. ' cur' → logprob: -7.1027350425720215
    5. '	par' → logprob: -12.60273551940918
    6. ' ' → logprob: -13.35273551940918
    7. ' ' → logprob: -14.85273551940918
    8. '(par' → logprob: -15.10273551940918
    9. 'paren' → logprob: -15.85273551940918
    10. '   ' → logprob: -16.22773551940918

Token 156: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8312570318812504e-05
    2. ' )' → logprob: -11.500018119812012
    3. ')
' → logprob: -11.750018119812012
    4. ')#' → logprob: -16.875019073486328
    5. '))' → logprob: -17.500019073486328
    6. ')}' → logprob: -17.500019073486328
    7. ')

' → logprob: -17.625019073486328
    8. ')return' → logprob: -17.750019073486328
    9. '）' → logprob: -18.000019073486328
    10. '),' → logprob: -18.375019073486328

Token 157: 'one' (ID: 690)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18153774738311768
    2. 'for' → logprob: -1.9315377473831177
    3. 'if' → logprob: -5.056537628173828
    4. 'ans' → logprob: -5.681537628173828
    5. 'result' → logprob: -5.806537628173828
    6. 'cnt' → logprob: -6.306537628173828
    7. 'count' → logprob: -6.931537628173828
    8. 'res' → logprob: -7.056537628173828
    9. 'answer' → logprob: -7.181537628173828
    10. 'q' → logprob: -7.181537628173828

Token 158: ',' (ID: 11)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.5331267714500427
    2. 's' → logprob: -1.5331268310546875
    3. '_nodes' → logprob: -2.0331268310546875
    4. 'count' → logprob: -3.4081268310546875
    5. '_cnt' → logprob: -4.6581268310546875
    6. '_flag' → logprob: -5.2831268310546875
    7. ' =' → logprob: -5.4081268310546875
    8. '_counts' → logprob: -5.6581268310546875
    9. '_sum' → logprob: -6.6581268310546875
    10. '_s' → logprob: -6.6581268310546875

Token 159: ' two' (ID: 1920)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.05215654522180557
    2. ' zero' → logprob: -3.177156448364258
    3. 'two' → logprob: -4.802156448364258
    4. '0' → logprob: -7.927156448364258
    5. ' two' → logprob: -7.927156448364258
    6. 'zer' → logprob: -10.552156448364258
    7. 'sum' → logprob: -11.177156448364258
    8. '[]' → logprob: -11.427156448364258
    9. '_zero' → logprob: -11.427156448364258
    10. 'Zero' → logprob: -11.552156448364258

Token 160: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20150992274284363
    2. '=' → logprob: -1.701509952545166
    3. ',' → logprob: -9.326509475708008
    4. ' ' → logprob: -12.826509475708008
    5. '_' → logprob: -14.076509475708008
    6. ' ,' → logprob: -14.201509475708008
    7. '=[]' → logprob: -14.201509475708008
    8. ' =[' → logprob: -14.701509475708008
    9. '<|end|>' → logprob: -15.201509475708008
    10. '=count' → logprob: -15.201509475708008

Token 161: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.349469393491745
    2. 'zero' → logprob: -2.0994694232940674
    3. ' three' → logprob: -3.3494694232940674
    4. 'ans' → logprob: -3.8494694232940674
    5. '0' → logprob: -3.9744694232940674
    6. ' =' → logprob: -4.099469184875488
    7. ' zero' → logprob: -4.099469184875488
    8. '=' → logprob: -4.224469184875488
    9. '[]' → logprob: -4.599469184875488
    10. 'count' → logprob: -5.099469184875488

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2540404498577118
    2. '=' → logprob: -1.5040404796600342
    3. ',' → logprob: -6.254040241241455
    4. ' ' → logprob: -9.879040718078613
    5. '=[]' → logprob: -9.879040718078613
    6. '=[' → logprob: -10.504040718078613
    7. ' =[' → logprob: -11.379040718078613
    8. 's' → logprob: -11.629040718078613
    9. ' ,' → logprob: -12.379040718078613
    10. '0' → logprob: -13.316540718078613

Token 163: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31423094868659973
    2. '[],' → logprob: -2.1892309188842773
    3. '[' → logprob: -2.4392309188842773
    4. 'flag' → logprob: -3.6892309188842773
    5. '[]' → logprob: -3.9392309188842773
    6. ' ' → logprob: -4.814230918884277
    7. 'sum' → logprob: -4.939230918884277
    8. 'sorted' → logprob: -5.939230918884277
    9. ' [],' → logprob: -6.314230918884277
    10. ' [' → logprob: -7.189230918884277

Token 164: 'deque' (ID: 143563)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.922804594039917
    2. '[],' → logprob: -1.047804594039917
    3. 'sum' → logprob: -2.047804594039917
    4. 'flag' → logprob: -3.172804594039917
    5. '[' → logprob: -3.547804594039917
    6. '[]' → logprob: -4.422804832458496
    7. ' ' → logprob: -5.297804832458496
    8. 'len' → logprob: -5.297804832458496
    9. '[len' → logprob: -5.297804832458496
    10. '[n' → logprob: -5.422804832458496

Token 165: '(range' (ID: 50017)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03930271044373512
    2. '(),' → logprob: -3.7893028259277344
    3. '([' → logprob: -4.289302825927734
    4. '([]' → logprob: -6.664302825927734
    5. '())' → logprob: -8.414302825927734
    6. '(' → logprob: -8.539302825927734
    7. '(()' → logprob: -9.414302825927734
    8. '((' → logprob: -9.539302825927734
    9. '()
' → logprob: -9.664302825927734
    10. '()[' → logprob: -9.789302825927734

Token 166: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12757332623004913
    2. '(' → logprob: -2.127573251724243
    3. 'n' → logprob: -8.377573013305664
    4. '1' → logprob: -8.377573013305664
    5. ' (' → logprob: -9.627573013305664
    6. '((' → logprob: -10.127573013305664
    7. '(
' → logprob: -11.502573013305664
    8. '(len' → logprob: -11.502573013305664
    9. ')n' → logprob: -11.877573013305664
    10. ')(' → logprob: -11.877573013305664

Token 167: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.9303191304206848
    2. '(n' → logprob: -1.18031907081604
    3. '(' → logprob: -2.05531907081604
    4. ')),' → logprob: -3.05531907081604
    5. '1' → logprob: -3.93031907081604
    6. '),' → logprob: -4.055319309234619
    7. ')' → logprob: -4.055319309234619
    8. '//' → logprob: -4.680319309234619
    9. '[' → logprob: -4.680319309234619
    10. 'n' → logprob: -4.805319309234619

Token 168: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.035099633038043976
    2. '1' → logprob: -3.535099744796753
    3. '3' → logprob: -5.910099506378174
    4. '0' → logprob: -6.660099506378174
    5. ' n' → logprob: -7.535099506378174
    6. '2' → logprob: -8.535099983215332
    7. 'len' → logprob: -8.535099983215332
    8. 'x' → logprob: -8.910099983215332
    9. '10' → logprob: -9.910099983215332
    10. '100' → logprob: -10.285099983215332

Token 169: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004405074752867222
    2. '//' → logprob: -6.1294050216674805
    3. '))' → logprob: -7.0044050216674805
    4. '-' → logprob: -7.8794050216674805
    5. ' -' → logprob: -8.37940502166748
    6. ')),' → logprob: -8.87940502166748
    7. ' ,' → logprob: -8.87940502166748
    8. '*' → logprob: -9.12940502166748
    9. ' //' → logprob: -9.50440502166748
    10. ')))' → logprob: -9.50440502166748

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19839224219322205
    2. '3' → logprob: -2.073392152786255
    3. '2' → logprob: -3.948392152786255
    4. 'x' → logprob: -4.073392391204834
    5. 'n' → logprob: -4.448392391204834
    6. ',' → logprob: -5.448392391204834
    7. ' ' → logprob: -7.573392391204834
    8. '6' → logprob: -8.573391914367676
    9. '4' → logprob: -8.698391914367676
    10. '5' → logprob: -8.823391914367676

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006392885115928948
    2. ',n' → logprob: -8.000638961791992
    3. ' ,' → logprob: -9.125638961791992
    4. ',x' → logprob: -9.375638961791992
    5. 'n' → logprob: -10.625638961791992
    6. 'x' → logprob: -10.750638961791992
    7. '2' → logprob: -11.250638961791992
    8. '))' → logprob: -11.500638961791992
    9. '[n' → logprob: -11.875638961791992
    10. '3' → logprob: -12.000638961791992

Token 172: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0036146817728877068
    2. '2' → logprob: -6.003614902496338
    3. ' ' → logprob: -7.003614902496338
    4. '4' → logprob: -8.50361442565918
    5. '1' → logprob: -11.87861442565918
    6. '6' → logprob: -12.12861442565918
    7. '   ' → logprob: -12.37861442565918
    8. '
' → logprob: -13.00361442565918
    9. ')' → logprob: -13.12861442565918
    10. '  ' → logprob: -13.50361442565918

Token 173: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.375017166137695
    3. '4' → logprob: -12.625017166137695
    4. '2' → logprob: -14.250017166137695
    5. ')' → logprob: -14.875017166137695
    6. '
' → logprob: -15.125017166137695
    7. '   ' → logprob: -15.375017166137695
    8. '```' → logprob: -16.062517166137695
    9. '1' → logprob: -16.937517166137695
    10. '３' → logprob: -17.375017166137695

Token 174: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1271224468946457
    2. ')),' → logprob: -2.127122402191162
    3. ')' → logprob: -10.00212287902832
    4. ')),
' → logprob: -10.25212287902832
    5. ' ' → logprob: -10.37712287902832
    6. ')))' → logprob: -11.00212287902832
    7. ' ))' → logprob: -11.12712287902832
    8. '))
' → logprob: -11.25212287902832
    9. '),' → logprob: -11.37712287902832
    10. '  ' → logprob: -11.75212287902832

Token 175: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2687802016735077
    2. ' for' → logprob: -1.89378023147583
    3. 'for' → logprob: -2.64378023147583
    4. ',' → logprob: -4.51878023147583
    5. ',)' → logprob: -7.26878023147583
    6. '   ' → logprob: -7.26878023147583
    7. '[' → logprob: -7.64378023147583
    8. ' )' → logprob: -7.76878023147583
    9. ' ' → logprob: -8.643779754638672
    10. '),' → logprob: -9.018779754638672

Token 176: ' x' (ID: 1215)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09069162607192993
    2. ' range' → logprob: -2.465691566467285
    3. '(' → logprob: -7.090691566467285
    4. '(range' → logprob: -7.090691566467285
    5. '[' → logprob: -10.340691566467285
    6. 'x' → logprob: -11.090691566467285
    7. '_' → logprob: -11.715691566467285
    8. ' ' → logprob: -11.840691566467285
    9. ' xrange' → logprob: -12.215691566467285
    10. '([' → logprob: -12.340691566467285

Token 177: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.038058821111917496
    2. ' in' → logprob: -3.2880587577819824
    3. 'range' → logprob: -11.41305923461914
    4. ')' → logprob: -12.53805923461914
    5. '(' → logprob: -14.03805923461914
    6. ',' → logprob: -14.41305923461914
    7. ' ' → logprob: -15.16305923461914
    8. ' range' → logprob: -15.53805923461914
    9. 'import' → logprob: -15.91305923461914
    10. '	in' → logprob: -16.03805923461914

Token 178: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03357735276222229
    2. '(' → logprob: -4.0335774421691895
    3. '[' → logprob: -4.6585774421691895
    4. ' range' → logprob: -5.1585774421691895
    5. '(range' → logprob: -9.783576965332031
    6. '1' → logprob: -11.033576965332031
    7. ' [' → logprob: -13.033576965332031
    8. ' (' → logprob: -13.033576965332031
    9. '{' → logprob: -14.033576965332031
    10. '   ' → logprob: -15.033576965332031

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017280145548284054
    2. '0' → logprob: -6.376728057861328
    3. ' ' → logprob: -10.626728057861328
    4. '{' → logprob: -14.626728057861328
    5. '2' → logprob: -14.751728057861328
    6. '3' → logprob: -15.251728057861328
    7. '(' → logprob: -15.626728057861328
    8. '   ' → logprob: -15.626728057861328
    9. '[' → logprob: -16.126728057861328
    10. '  ' → logprob: -17.064228057861328

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006353547796607018
    2. ' ,' → logprob: -7.375635147094727
    3. '2' → logprob: -11.875635147094727
    4. ',
' → logprob: -13.375635147094727
    5. '3' → logprob: -15.875635147094727
    6. ' ' → logprob: -16.250635147094727
    7. '
' → logprob: -16.875635147094727
    8. ' ,
' → logprob: -18.125635147094727
    9. '1' → logprob: -19.000635147094727
    10. '‌,' → logprob: -19.250635147094727

Token 181: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011047935113310814
    2. ' ' → logprob: -4.511047840118408
    3. '   ' → logprob: -17.38604736328125
    4. '  ' → logprob: -17.51104736328125
    5. '3' → logprob: -17.63604736328125
    6. '２' → logprob: -18.13604736328125
    7. '
' → logprob: -18.76104736328125
    8. ' ' → logprob: -18.88604736328125
    9. '۲' → logprob: -19.07354736328125
    10. '0' → logprob: -19.13604736328125

Token 182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.690834273584187e-05
    2. ' ' → logprob: -10.25003719329834
    3. '0' → logprob: -14.25003719329834
    4. '3' → logprob: -14.50003719329834
    5. '1' → logprob: -15.12503719329834
    6. '
' → logprob: -16.500036239624023
    7. '   ' → logprob: -18.250036239624023
    8. '```' → logprob: -18.687536239624023
    9. '２' → logprob: -19.062536239624023
    10. '

' → logprob: -19.062536239624023

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008145124302245677
    2. '3' → logprob: -7.500814437866211
    3. ' ,' → logprob: -8.250814437866211
    4. ',
' → logprob: -15.375814437866211
    5. ' ' → logprob: -16.12581443786621
    6. ')' → logprob: -18.37581443786621
    7. '))' → logprob: -18.37581443786621
    8. '
' → logprob: -18.62581443786621
    9. '，' → logprob: -19.25081443786621
    10. '0' → logprob: -19.31331443786621

Token 184: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.20149199664592743
    2. ' ' → logprob: -1.7014919519424438
    3. '0' → logprob: -9.451492309570312
    4. ' ' → logprob: -17.576492309570312
    5. 'and' → logprob: -17.951492309570312
    6. ' and' → logprob: -18.701492309570312
    7. '  ' → logprob: -18.826492309570312
    8. ' or' → logprob: -19.326492309570312
    9. ',' → logprob: -19.451492309570312
    10. ' 
' → logprob: -19.576492309570312

Token 185: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10156606137752533
    2. '3' → logprob: -2.3515660762786865
    3. ' ' → logprob: -6.601565837860107
    4. '  ' → logprob: -16.101566314697266
    5. '   ' → logprob: -16.726566314697266
    6. ')' → logprob: -17.726566314697266
    7. '    ' → logprob: -18.476566314697266
    8. '))' → logprob: -18.914066314697266
    9. '     ' → logprob: -18.976566314697266
    10. '```' → logprob: -19.601566314697266

Token 186: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0024817234370857477
    2. ')' → logprob: -6.002481937408447
    3. '))
' → logprob: -12.377481460571289
    4. ')))' → logprob: -14.127481460571289
    5. ' ))' → logprob: -14.252481460571289
    6. '))

' → logprob: -15.752481460571289
    7. '),' → logprob: -16.50248146057129
    8. '()))' → logprob: -17.00248146057129
    9. ')),' → logprob: -17.25248146057129
    10. '));' → logprob: -17.62748146057129

Token 187: 'k' (ID: 74)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.29683539271354675
    2. 'res' → logprob: -1.4218354225158691
    3. 'result' → logprob: -4.921835422515869
    4. 'answer' → logprob: -5.171835422515869
    5. 'color' → logprob: -6.546835422515869
    6. 'colors' → logprob: -7.171835422515869
    7. 'for' → logprob: -9.046834945678711
    8. ' ans' → logprob: -10.171834945678711
    9. 'answers' → logprob: -10.171834945678711
    10. 'out' → logprob: -10.296834945678711

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014279740862548351
    2. '=' → logprob: -4.264279842376709
    3. 'inds' → logprob: -10.13927936553955
    4. '=int' → logprob: -10.51427936553955
    5. 'ind' → logprob: -11.51427936553955
    6. ' ' → logprob: -11.76427936553955
    7. ',' → logprob: -12.13927936553955
    8. '=[]' → logprob: -12.13927936553955
    9. '=n' → logprob: -12.76427936553955
    10. '1' → logprob: -13.38927936553955

Token 189: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.281653881072998
    2. 'n' → logprob: -1.531653881072998
    3. '(n' → logprob: -1.531653881072998
    4. ' (' → logprob: -2.031653881072998
    5. ' ' → logprob: -3.906653881072998
    6. '(' → logprob: -3.906653881072998
    7. '(one' → logprob: -4.031653881072998
    8. ' one' → logprob: -4.531653881072998
    9. 'len' → logprob: -4.656653881072998
    10. 'one' → logprob: -4.656653881072998

Token 190: ' //' (ID: 602)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8271269798278809
    2. '+' → logprob: -1.4521269798278809
    3. '
' → logprob: -2.077126979827881
    4. '#' → logprob: -2.702126979827881
    5. ' -' → logprob: -3.702126979827881
    6. 'for' → logprob: -3.827126979827881
    7. 'while' → logprob: -4.202126979827881
    8. '//' → logprob: -4.327126979827881
    9. '-k' → logprob: -4.327126979827881
    10. '[' → logprob: -5.077126979827881

Token 191: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -17.250001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '1' → logprob: -18.562501907348633
    6. '３' → logprob: -18.812501907348633
    7. 'k' → logprob: -18.937501907348633
    8. '4' → logprob: -19.125001907348633
    9. '  ' → logprob: -19.187501907348633
    10. '{' → logprob: -19.187501907348633

Token 192: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.125006675720215
    3. '2' → logprob: -15.375006675720215
    4. '```' → logprob: -15.625006675720215
    5. '

' → logprob: -15.750006675720215
    6. '1' → logprob: -15.875006675720215
    7. '
' → logprob: -16.25000762939453
    8. '7' → logprob: -16.50000762939453
    9. '
' → logprob: -17.06250762939453
    10. '{' → logprob: -17.06250762939453

Token 193: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.657290518283844
    2. 'res' → logprob: -1.2822904586791992
    3. 'answer' → logprob: -2.532290458679199
    4. 'result' → logprob: -2.657290458679199
    5. 'colors' → logprob: -3.532290458679199
    6. 'for' → logprob: -4.657290458679199
    7. 'color' → logprob: -4.782290458679199
    8. 'answers' → logprob: -6.282290458679199
    9. 'labels' → logprob: -6.657290458679199
    10. 'output' → logprob: -7.282290458679199

Token 194: 'a' (ID: 64)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5271846055984497
    2. 'res' → logprob: -1.0271846055984497
    3. 'if' → logprob: -3.90218448638916
    4. 'answer' → logprob: -4.27718448638916
    5. 'result' → logprob: -4.77718448638916
    6. 'for' → logprob: -5.40218448638916
    7. 'color' → logprob: -6.27718448638916
    8. 'ret' → logprob: -7.77718448638916
    9. 'colors' → logprob: -7.90218448638916
    10. 'rest' → logprob: -8.27718448638916

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14419130980968475
    2. '=' → logprob: -2.394191265106201
    3. 'ns' → logprob: -3.394191265106201
    4. ',' → logprob: -4.769191265106201
    5. ',b' → logprob: -7.644191265106201
    6. '=[]' → logprob: -8.51919174194336
    7. 's' → logprob: -9.26919174194336
    8. '1' → logprob: -9.64419174194336
    9. '=[]
' → logprob: -10.64419174194336
    10. 'b' → logprob: -11.01919174194336

Token 196: ' sum' (ID: 4215)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.26824650168418884
    2. '[]' → logprob: -1.8932465314865112
    3. ' [' → logprob: -2.7682464122772217
    4. ' []
' → logprob: -4.893246650695801
    5. ' flag' → logprob: -5.518246650695801
    6. '[]
' → logprob: -5.768246650695801
    7. '[' → logprob: -6.268246650695801
    8. ' one' → logprob: -6.518246650695801
    9. 'flag' → logprob: -7.143246650695801
    10. ' ' → logprob: -7.893246650695801

Token 197: '(flag' (ID: 69186)
  Prédit: '(flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flag' → logprob: -0.09063839167356491
    2. '(' → logprob: -3.0906383991241455
    3. '((' → logprob: -3.3406383991241455
    4. '([' → logprob: -6.590638160705566
    5. '(x' → logprob: -6.715638160705566
    6. '(len' → logprob: -6.840638160705566
    7. '(f' → logprob: -7.715638160705566
    8. '(not' → logprob: -7.840638160705566
    9. '(i' → logprob: -8.215638160705566
    10. '(min' → logprob: -8.340638160705566

Token 198: ')
' (ID: 446)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4161829352378845
    2. ')' → logprob: -1.1661829948425293
    3. ')
' → logprob: -4.416182994842529
    4. '[:' → logprob: -4.916182994842529
    5. ')==' → logprob: -4.916182994842529
    6. '==' → logprob: -6.916182994842529
    7. '[cur' → logprob: -8.416182518005371
    8. '[x' → logprob: -9.166182518005371
    9. '[' → logprob: -9.416182518005371
    10. ' ==' → logprob: -9.791182518005371

Token 199: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.662881076335907
    2. 'if' → logprob: -1.0378811359405518
    3. 'res' → logprob: -3.0378811359405518
    4. 'ans' → logprob: -3.2878811359405518
    5. 'result' → logprob: -4.662880897521973
    6. 'c' → logprob: -4.912880897521973
    7. 'answer' → logprob: -5.037880897521973
    8. 'zero' → logprob: -5.037880897521973
    9. ' if' → logprob: -6.412880897521973
    10. ' b' → logprob: -6.787880897521973

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994543969631195
    2. '=' → logprob: -2.6949453353881836
    3. ',' → logprob: -12.069945335388184
    4. ' ' → logprob: -13.194945335388184
    5. ' =
' → logprob: -14.444945335388184
    6. '=n' → logprob: -14.694945335388184
    7. '=k' → logprob: -16.5699462890625
    8. '=
' → logprob: -16.6949462890625
    9. '.' → logprob: -17.1949462890625
    10. '
' → logprob: -17.1949462890625

Token 201: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8918848633766174
    2. 'k' → logprob: -1.3918848037719727
    3. ' n' → logprob: -1.3918848037719727
    4. ' k' → logprob: -3.3918848037719727
    5. '(n' → logprob: -3.5168848037719727
    6. '(k' → logprob: -4.391884803771973
    7. ' (' → logprob: -4.891884803771973
    8. 'a' → logprob: -6.141884803771973
    9. 'len' → logprob: -6.641884803771973
    10. ' ' → logprob: -6.766884803771973

Token 202: ' -' (ID: 533)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.564405620098114
    2. '//' → logprob: -0.939405620098114
    3. ' -' → logprob: -3.439405679702759
    4. '-' → logprob: -5.43940544128418
    5. ' ' → logprob: -5.81440544128418
    6. '#' → logprob: -8.06440544128418
    7. '3' → logprob: -8.93940544128418
    8. ' #' → logprob: -9.31440544128418
    9. '```' → logprob: -9.68940544128418
    10. '2' → logprob: -9.68940544128418

Token 203: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0017077792435884476
    2. ' a' → logprob: -6.376707553863525
    3. 'k' → logprob: -13.126708030700684
    4. ' ' → logprob: -13.251708030700684
    5. '	a' → logprob: -14.126708030700684
    6. 'sum' → logprob: -15.501708030700684
    7. 'flag' → logprob: -15.751708030700684
    8. '  ' → logprob: -16.501707077026367
    9. '_a' → logprob: -16.501707077026367
    10. 'len' → logprob: -16.501707077026367

Token 204: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5576483607292175
    2. '
' → logprob: -1.0576484203338623
    3. 'for' → logprob: -3.1826484203338623
    4. 'if' → logprob: -3.4326484203338623
    5. 'flag' → logprob: -6.557648181915283
    6. 'one' → logprob: -7.057648181915283
    7. '#' → logprob: -7.307648181915283
    8. '<|end|>' → logprob: -7.807648181915283
    9. 'color' → logprob: -8.182648658752441
    10. 'answer' → logprob: -8.307648658752441

Token 205: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5829242467880249
    2. 'res' → logprob: -1.582924246788025
    3. 'if' → logprob: -1.707924246788025
    4. 'c' → logprob: -3.4579243659973145
    5. 'answer' → logprob: -4.4579243659973145
    6. 'color' → logprob: -5.4579243659973145
    7. 'result' → logprob: -5.7079243659973145
    8. 'for' → logprob: -7.0829243659973145
    9. 'colors' → logprob: -7.8329243659973145
    10. 'C' → logprob: -8.082923889160156

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11285126954317093
    2. '=' → logprob: -2.23785138130188
    3. ' ' → logprob: -11.3628511428833
    4. ',' → logprob: -11.9878511428833
    5. '_' → logprob: -13.2378511428833
    6. '=[]' → logprob: -13.2378511428833
    7. 's' → logprob: -13.4878511428833
    8. ' ' → logprob: -14.1128511428833
    9. '1' → logprob: -14.3628511428833
    10. '＝' → logprob: -14.4878511428833

Token 207: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05981549993157387
    2. ' []' → logprob: -2.9348154067993164
    3. '[' → logprob: -5.934815406799316
    4. '[]
' → logprob: -6.809815406799316
    5. ' [' → logprob: -7.434815406799316
    6. '[]

' → logprob: -9.434815406799316
    7. '[a' → logprob: -9.559815406799316
    8. '[n' → logprob: -9.559815406799316
    9. '[min' → logprob: -9.684815406799316
    10. '[max' → logprob: -9.809815406799316

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002221745438873768
    2. '-' → logprob: -6.377221584320068
    3. ']' → logprob: -8.127222061157227
    4. 'None' → logprob: -8.627222061157227
    5. ' ' → logprob: -10.627222061157227
    6. '   ' → logprob: -12.252222061157227
    7. ')' → logprob: -12.377222061157227
    8. '[]' → logprob: -13.002222061157227
    9. ' -' → logprob: -13.502222061157227
    10. '1' → logprob: -14.002222061157227

Token 209: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006756340153515339
    2. ']*' → logprob: -5.00675630569458
    3. ' ]' → logprob: -11.006756782531738
    4. ')' → logprob: -11.756756782531738
    5. 'for' → logprob: -12.256756782531738
    6. ']*(' → logprob: -12.381756782531738
    7. ')]' → logprob: -12.631756782531738
    8. ' for' → logprob: -13.256756782531738
    9. '])' → logprob: -13.881756782531738
    10. '*n' → logprob: -15.631756782531738

Token 210: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06511525064706802
    2. ' *' → logprob: -3.315115213394165
    3. '*n' → logprob: -5.065115451812744
    4. 'for' → logprob: -5.440115451812744
    5. '[' → logprob: -5.565115451812744
    6. ',' → logprob: -5.940115451812744
    7. '*[' → logprob: -5.940115451812744
    8. '*
' → logprob: -6.315115451812744
    9. ' for' → logprob: -6.940115451812744
    10. '0' → logprob: -7.565115451812744

Token 211: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.869639476761222e-05
    2. '(n' → logprob: -10.250039100646973
    3. ' n' → logprob: -12.625039100646973
    4. '(' → logprob: -17.000038146972656
    5. ' (' → logprob: -19.625038146972656
    6. '	n' → logprob: -19.875038146972656
    7. '_n' → logprob: -21.500038146972656
    8. ')n' → logprob: -22.250038146972656
    9. '[n' → logprob: -22.750038146972656
    10. 'k' → logprob: -22.750038146972656

Token 212: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2878398299217224
    2. 'if' → logprob: -1.4128398895263672
    3. '<|end|>' → logprob: -5.787839889526367
    4. ' for' → logprob: -6.037839889526367
    5. ' if' → logprob: -7.662839889526367
    6. 'idx' → logprob: -7.912839889526367
    7. 'i' → logprob: -8.912839889526367
    8. '```' → logprob: -9.912839889526367
    9. 'one' → logprob: -10.162839889526367
    10. 'while' → logprob: -11.037839889526367

Token 213: 'groups' (ID: 38127)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20271547138690948
    2. 'for' → logprob: -1.702715516090393
    3. 'i' → logprob: -7.7027153968811035
    4. 'one' → logprob: -8.202715873718262
    5. 'idx' → logprob: -8.327715873718262
    6. 'cnt' → logprob: -9.452715873718262
    7. 'c' → logprob: -9.702715873718262
    8. 'count' → logprob: -10.077715873718262
    9. 'x' → logprob: -10.202715873718262
    10. ' if' → logprob: -11.327715873718262

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16028454899787903
    2. '=' → logprob: -1.9102845191955566
    3. ',' → logprob: -10.035284996032715
    4. '1' → logprob: -12.535284996032715
    5. 's' → logprob: -12.785284996032715
    6. '=[]' → logprob: -13.035284996032715
    7. '=[' → logprob: -13.160284996032715
    8. '[' → logprob: -13.660284996032715
    9. ' =[' → logprob: -13.910284996032715
    10. '0' → logprob: -13.910284996032715

Token 215: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09998362511396408
    2. '[[' → logprob: -3.2249836921691895
    3. '[k' → logprob: -3.7249836921691895
    4. '[(' → logprob: -4.3499836921691895
    5. '[a' → logprob: -4.7249836921691895
    6. '[]
' → logprob: -6.0999836921691895
    7. '(' → logprob: -6.5999836921691895
    8. '[b' → logprob: -6.8499836921691895
    9. '(one' → logprob: -7.0999836921691895
    10. '([' → logprob: -7.2249836921691895

Token 216: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.025356868281960487
    2. 'deque' → logprob: -4.400356769561768
    3. '[]' → logprob: -4.900356769561768
    4. '[],' → logprob: -5.650356769561768
    5. '[' → logprob: -6.900356769561768
    6. 'list' → logprob: -8.525357246398926
    7. '(one' → logprob: -8.775357246398926
    8. 'three' → logprob: -9.650357246398926
    9. 'a' → logprob: -10.400357246398926
    10. 'zero' → logprob: -10.400357246398926

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003837213444057852
    2. ',t' → logprob: -8.000383377075195
    3. ' ,' → logprob: -10.000383377075195
    4. 'three' → logprob: -13.875383377075195
    5. 'two' → logprob: -13.875383377075195
    6. ',
' → logprob: -14.125383377075195
    7. '
' → logprob: -17.000383377075195
    8. ' ' → logprob: -17.000383377075195
    9. ',b' → logprob: -18.000383377075195
    10. 't' → logprob: -18.250383377075195

Token 218: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.0232466422021389
    2. ' two' → logprob: -3.7732465267181396
    3. 'three' → logprob: -14.398246765136719
    4. '(two' → logprob: -15.523246765136719
    5. ' ' → logprob: -16.02324676513672
    6. 'Two' → logprob: -16.27324676513672
    7. '_two' → logprob: -16.27324676513672
    8. 'tw' → logprob: -16.89824676513672
    9. '
' → logprob: -17.14824676513672
    10. '   ' → logprob: -17.27324676513672

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041208078619092703
    2. ' ,' → logprob: -8.000411987304688
    3. 'three' → logprob: -9.500411987304688
    4. ' three' → logprob: -14.375411987304688
    5. ']' → logprob: -14.500411987304688
    6. '3' → logprob: -15.875411987304688
    7. ')' → logprob: -16.000411987304688
    8. 'Three' → logprob: -16.125411987304688
    9. '_three' → logprob: -16.250411987304688
    10. ' ' → logprob: -16.375411987304688

Token 220: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.00861468818038702
    2. ' three' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.133615493774414
    4. 'Three' → logprob: -16.883615493774414
    5. '   ' → logprob: -17.383615493774414
    6. '_three' → logprob: -17.383615493774414
    7. '3' → logprob: -18.258615493774414
    8. '  ' → logprob: -18.633615493774414
    9. 'tree' → logprob: -18.758615493774414
    10. 'th' → logprob: -19.133615493774414

Token 221: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.644463479053229e-05
    2. ']
' → logprob: -11.250046730041504
    3. ' ]' → logprob: -11.250046730041504
    4. ']

' → logprob: -11.625046730041504
    5. ',' → logprob: -12.000046730041504
    6. ')' → logprob: -12.500046730041504
    7. ')]' → logprob: -14.125046730041504
    8. '])' → logprob: -15.375046730041504
    9. '()]' → logprob: -15.625046730041504
    10. '[' → logprob: -15.875046730041504

Token 222: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012805953156203032
    2. ' for' → logprob: -6.751280784606934
    3. 'if' → logprob: -9.876280784606934
    4. 'i' → logprob: -10.376280784606934
    5. 'flag' → logprob: -11.251280784606934
    6. '```' → logprob: -12.251280784606934
    7. 'idx' → logprob: -13.376280784606934
    8. 'f' → logprob: -13.876280784606934
    9. ',' → logprob: -14.001280784606934
    10. 'cur' → logprob: -14.126280784606934

Token 223: ' k' (ID: 372)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.29184502363204956
    2. ' k' → logprob: -1.6668450832366943
    3. 'a' → logprob: -3.5418450832366943
    4. 'k' → logprob: -4.166844844818115
    5. ' b' → logprob: -4.166844844818115
    6. ' ' → logprob: -5.791844844818115
    7. 'b' → logprob: -7.291844844818115
    8. '   ' → logprob: -9.166845321655273
    9. ' n' → logprob: -9.416845321655273
    10. '  ' → logprob: -9.541845321655273

Token 224: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05528787150979042
    2. '==' → logprob: -3.3052878379821777
    3. ' <=' → logprob: -4.430287837982178
    4. ' >=' → logprob: -6.305287837982178
    5. ' <' → logprob: -6.305287837982178
    6. '<=' → logprob: -7.930287837982178
    7. ' >' → logprob: -8.430288314819336
    8. '<' → logprob: -8.430288314819336
    9. ' !=' → logprob: -8.680288314819336
    10. ':' → logprob: -8.930288314819336

Token 225: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5313605666160583
    2. 'a' → logprob: -1.0313606262207031
    3. ' b' → logprob: -4.156360626220703
    4. ' ' → logprob: -4.281360626220703
    5. ' min' → logprob: -4.781360626220703
    6. 'b' → logprob: -5.156360626220703
    7. '=' → logprob: -5.656360626220703
    8. 'min' → logprob: -6.156360626220703
    9. '1' → logprob: -6.531360626220703
    10. ' n' → logprob: -7.156360626220703

Token 226: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00847344659268856
    2. ':
' → logprob: -4.8834733963012695
    3. ' :' → logprob: -7.1334733963012695
    4. ' and' → logprob: -10.38347339630127
    5. ' :
' → logprob: -10.50847339630127
    6. ' or' → logprob: -11.75847339630127
    7. ':
' → logprob: -14.50847339630127
    8. ':

' → logprob: -14.50847339630127
    9. '):' → logprob: -14.63347339630127
    10. 'and' → logprob: -14.75847339630127

Token 227: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04873508960008621
    2. ' k' → logprob: -3.0487351417541504
    3. 'b' → logprob: -9.673734664916992
    4. ' ' → logprob: -10.423734664916992
    5. '   ' → logprob: -11.298734664916992
    6. '  ' → logprob: -11.673734664916992
    7. 'if' → logprob: -12.298734664916992
    8. 'a' → logprob: -12.423734664916992
    9. ' b' → logprob: -12.923734664916992
    10. 'j' → logprob: -13.048734664916992

Token 228: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20789165794849396
    2. '<' → logprob: -2.9578917026519775
    3. '+' → logprob: -3.3328917026519775
    4. ':' → logprob: -3.4578917026519775
    5. ' and' → logprob: -3.9578917026519775
    6. '*' → logprob: -4.082891464233398
    7. ' *' → logprob: -4.832891464233398
    8. ' ' → logprob: -5.332891464233398
    9. ' +' → logprob: -5.582891464233398
    10. 'and' → logprob: -5.582891464233398

Token 229: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029833558946847916
    2. ' b' → logprob: -3.5298335552215576
    3. '=' → logprob: -10.154833793640137
    4. '=b' → logprob: -10.529833793640137
    5. 'k' → logprob: -12.154833793640137
    6. ' ' → logprob: -12.529833793640137
    7. '	b' → logprob: -13.154833793640137
    8. 'a' → logprob: -13.279833793640137
    9. ' k' → logprob: -14.279833793640137
    10. '```' → logprob: -14.529833793640137

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018161294981837273
    2. ':
' → logprob: -4.018161296844482
    3. ' :' → logprob: -12.018160820007324
    4. ' and' → logprob: -13.518160820007324
    5. ':

' → logprob: -13.518160820007324
    6. ' :
' → logprob: -13.893160820007324
    7. ':
' → logprob: -14.268160820007324
    8. ',' → logprob: -14.643160820007324
    9. '):' → logprob: -15.643160820007324
    10. '.' → logprob: -15.893160820007324

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7576759457588196
    2. ' for' → logprob: -1.2576758861541748
    3. 'for' → logprob: -2.132675886154175
    4. ' if' → logprob: -3.007675886154175
    5. 'if' → logprob: -3.632675886154175
    6. '    
' → logprob: -4.382676124572754
    7. '#' → logprob: -5.132676124572754
    8. '
' → logprob: -5.257676124572754
    9. 'idx' → logprob: -6.007676124572754
    10. ' #' → logprob: -6.132676124572754

Token 232: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.45853713154792786
    2. 'if' → logprob: -1.5835371017456055
    3. 'groups' → logprob: -3.3335371017456055
    4. 'x' → logprob: -4.0835371017456055
    5. 'flag' → logprob: -4.2085371017456055
    6. '#' → logprob: -4.2085371017456055
    7. 'idx' → logprob: -4.5835371017456055
    8. '   ' → logprob: -4.8335371017456055
    9. ' for' → logprob: -5.2085371017456055
    10. 'c' → logprob: -5.3335371017456055

Token 233: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03749370202422142
    2. ' i' → logprob: -3.7874937057495117
    3. 'x' → logprob: -5.287493705749512
    4. 'v' → logprob: -5.412493705749512
    5. 'idx' → logprob: -7.037493705749512
    6. 'cur' → logprob: -7.287493705749512
    7. 'flag' → logprob: -7.662493705749512
    8. 'u' → logprob: -7.787493705749512
    9. '_i' → logprob: -8.037493705749512
    10. 'g' → logprob: -8.287493705749512

Token 234: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05401277914643288
    2. ',' → logprob: -3.4290127754211426
    3. 'in' → logprob: -3.9290127754211426
    4. ' ' → logprob: -8.3040132522583
    5. ' ,' → logprob: -8.6790132522583
    6. '  ' → logprob: -11.3040132522583
    7. ',n' → logprob: -11.3040132522583
    8. 'n' → logprob: -11.4290132522583
    9. '   ' → logprob: -11.5540132522583
    10. 'range' → logprob: -12.6790132522583

Token 235: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4702567756175995
    2. 'val' → logprob: -2.345256805419922
    3. 'v' → logprob: -2.720256805419922
    4. 'fl' → logprob: -2.720256805419922
    5. ' val' → logprob: -3.095256805419922
    6. 'col' → logprob: -3.845256805419922
    7. ' f' → logprob: -3.845256805419922
    8. 'color' → logprob: -3.970256805419922
    9. ' fl' → logprob: -5.095256805419922
    10. 'flag' → logprob: -5.220256805419922

Token 236: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.281970739364624
    2. 'in' → logprob: -1.406970739364624
    3. ',' → logprob: -7.531970977783203
    4. 'n' → logprob: -8.281970977783203
    5. ' ' → logprob: -11.406970977783203
    6. 'enumer' → logprob: -11.656970977783203
    7. 'i' → logprob: -12.281970977783203
    8. ')' → logprob: -13.906970977783203
    9. 'a' → logprob: -14.406970977783203
    10. '_' → logprob: -14.656970977783203

Token 237: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.20141783356666565
    2. ' enumerate' → logprob: -1.7014178037643433
    3. 'flag' → logprob: -13.201417922973633
    4. 'range' → logprob: -13.576417922973633
    5. '```' → logprob: -14.951417922973633
    6. 'zip' → logprob: -15.201417922973633
    7. '(en' → logprob: -15.701417922973633
    8. '(' → logprob: -15.701417922973633
    9. 'enum' → logprob: -16.201417922973633
    10. ' ' → logprob: -16.451417922973633

Token 238: '(flag' (ID: 69186)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.04859702289104462
    2. '(flag' → logprob: -3.0485970973968506
    3. ' flag' → logprob: -11.54859733581543
    4. 'range' → logprob: -16.92359733581543
    5. '	flag' → logprob: -18.17359733581543
    6. '(range' → logprob: -19.17359733581543
    7. '_flag' → logprob: -19.42359733581543
    8. '(' → logprob: -19.54859733581543
    9. 'flags' → logprob: -20.04859733581543
    10. 'Flag' → logprob: -20.67359733581543

Token 239: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03813214227557182
    2. '):
' → logprob: -3.2881321907043457
    3. '):
' → logprob: -9.538131713867188
    4. ')' → logprob: -11.663131713867188
    5. ' ):' → logprob: -12.288131713867188
    6. ':' → logprob: -12.288131713867188
    7. ' ):
' → logprob: -15.413131713867188
    8. '   ' → logprob: -15.788131713867188
    9. '():' → logprob: -16.163131713867188
    10. '):

' → logprob: -16.163131713867188

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02338232286274433
    2. ' if' → logprob: -4.023382186889648
    3. '   ' → logprob: -6.148382186889648
    4. ',' → logprob: -6.398382186889648
    5. '
' → logprob: -8.023382186889648
    6. ' ' → logprob: -8.273382186889648
    7. 'if' → logprob: -8.648382186889648
    8. ')' → logprob: -8.648382186889648
    9. '    ' → logprob: -9.148382186889648
    10. '    
' → logprob: -9.398382186889648

Token 241: ' preferred' (ID: 20146)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40815451741218567
    2. 'if' → logprob: -1.1581544876098633
    3. '       ' → logprob: -4.033154487609863
    4. ' ans' → logprob: -6.658154487609863
    5. '   ' → logprob: -7.033154487609863
    6. 'ans' → logprob: -7.408154487609863
    7. ' groups' → logprob: -8.908154487609863
    8. 'groups' → logprob: -9.408154487609863
    9. '           ' → logprob: -9.658154487609863
    10. ' ' → logprob: -10.158154487609863

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03974296897649765
    2. '=' → logprob: -3.289742946624756
    3. 's' → logprob: -7.039742946624756
    4. '_groups' → logprob: -7.664742946624756
    5. '_tokens' → logprob: -9.539743423461914
    6. '_group' → logprob: -9.539743423461914
    7. '_' → logprob: -9.789743423461914
    8. 'groups' → logprob: -10.414743423461914
    9. '_idx' → logprob: -11.039743423461914
    10. ' ' → logprob: -11.039743423461914

Token 243: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.17500439286231995
    2. ' groups' → logprob: -2.550004482269287
    3. 'one' → logprob: -2.675004482269287
    4. 'two' → logprob: -5.300004482269287
    5. ' one' → logprob: -5.425004482269287
    6. 'flag' → logprob: -6.925004482269287
    7. 'three' → logprob: -7.550004482269287
    8. ' two' → logprob: -7.675004482269287
    9. '(groups' → logprob: -7.925004482269287
    10. 'ones' → logprob: -8.050004005432129

Token 244: '[' (ID: 58)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.005305500701069832
    2. '[' → logprob: -5.255305290222168
    3. '[i' → logprob: -11.005305290222168
    4. '[(' → logprob: -11.255305290222168
    5. 'f' → logprob: -11.505305290222168
    6. '[a' → logprob: -11.755305290222168
    7. '   ' → logprob: -12.005305290222168
    8. ' [' → logprob: -13.005305290222168
    9. '[b' → logprob: -13.130305290222168
    10. '[k' → logprob: -13.255305290222168

Token 245: '1' (ID: 16)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.11485730111598969
    2. 'flag' → logprob: -2.9898571968078613
    3. '0' → logprob: -3.2398571968078613
    4. '1' → logprob: -4.364857196807861
    5. '2' → logprob: -5.864857196807861
    6. 'i' → logprob: -6.489857196807861
    7. 'int' → logprob: -7.364857196807861
    8. '(' → logprob: -7.364857196807861
    9. ' f' → logprob: -8.48985767364502
    10. '(f' → logprob: -9.36485767364502

Token 246: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6251002550125122
    2. ']' → logprob: -1.0001002550125122
    3. 'if' → logprob: -2.5001001358032227
    4. '].' → logprob: -4.500100135803223
    5. '-' → logprob: -6.625100135803223
    6. ' -' → logprob: -7.000100135803223
    7. '][' → logprob: -8.125100135803223
    8. '-if' → logprob: -8.125100135803223
    9. '+' → logprob: -8.500100135803223
    10. ' +' → logprob: -8.875100135803223

Token 247: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00856008566915989
    2. ' f' → logprob: -4.8835601806640625
    3. 'flag' → logprob: -7.1335601806640625
    4. ' flag' → logprob: -10.133560180664062
    5. 'not' → logprob: -10.258560180664062
    6. ' ' → logprob: -10.633560180664062
    7. ' not' → logprob: -10.758560180664062
    8. 'i' → logprob: -11.258560180664062
    9. '   ' → logprob: -11.758560180664062
    10. '  ' → logprob: -12.508560180664062

Token 248: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5201678276062012
    2. 'else' → logprob: -1.1451678276062012
    3. '==' → logprob: -2.520167827606201
    4. ' ==' → logprob: -5.020167827606201
    5. ' ' → logprob: -8.64516830444336
    6. ']' → logprob: -9.77016830444336
    7. '!=' → logprob: -10.39516830444336
    8. ' !=' → logprob: -11.02016830444336
    9. ']==' → logprob: -11.27016830444336
    10. '```' → logprob: -11.39516830444336

Token 249: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17175312340259552
    2. '2' → logprob: -1.921753168106079
    3. ' ' → logprob: -4.6717529296875
    4. ':' → logprob: -6.4217529296875
    5. '1' → logprob: -8.7967529296875
    6. '   ' → logprob: -9.7967529296875
    7. ']' → logprob: -10.2342529296875
    8. '-' → logprob: -10.5467529296875
    9. 'a' → logprob: -10.5467529296875
    10. ':]' → logprob: -10.6092529296875

Token 250: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031993354205042124
    2. '2' → logprob: -5.878199100494385
    3. ' ' → logprob: -7.878199100494385
    4. '   ' → logprob: -12.190699577331543
    5. '  ' → logprob: -13.315699577331543
    6. '1' → logprob: -13.565699577331543
    7. '
' → logprob: -13.690699577331543
    8. ':' → logprob: -13.753199577331543
    9. '```' → logprob: -14.378199577331543
    10. '=' → logprob: -14.503199577331543

Token 251: ']
' (ID: 1592)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.07923740893602371
    2. ']' → logprob: -2.829237461090088
    3. ']
' → logprob: -4.079237461090088
    4. ']

' → logprob: -9.07923698425293
    5. '][' → logprob: -10.45423698425293
    6. ' if' → logprob: -11.57923698425293
    7. ']
' → logprob: -11.70423698425293
    8. ' ].' → logprob: -11.82923698425293
    9. ' ' → logprob: -11.95423698425293
    10. 'if' → logprob: -12.07923698425293

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32421258091926575
    2. '
' → logprob: -1.4492125511169434
    3. ' if' → logprob: -3.4492125511169434
    4. '        
' → logprob: -5.324212551116943
    5. '<|end|>' → logprob: -6.574212551116943
    6. ',' → logprob: -6.699212551116943
    7. 'if' → logprob: -7.574212551116943
    8. '
' → logprob: -7.824212551116943
    9. ' 
' → logprob: -8.449213027954102
    10. '  
' → logprob: -8.574213027954102

Token 253: ' secondary' (ID: 21433)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7758505344390869
    2. ' ans' → logprob: -1.525850534439087
    3. 'if' → logprob: -1.775850534439087
    4. 'ans' → logprob: -2.275850534439087
    5. '       ' → logprob: -3.150850534439087
    6. '
' → logprob: -5.900850296020508
    7. 'try' → logprob: -6.150850296020508
    8. ' try' → logprob: -7.025850296020508
    9. '   ' → logprob: -8.025850296020508
    10. '	ans' → logprob: -8.150850296020508

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805101290345192
    2. '=' → logprob: -3.288051128387451
    3. ' ' → logprob: -12.163050651550293
    4. '   ' → logprob: -13.163050651550293
    5. ',' → logprob: -13.538050651550293
    6. '    ' → logprob: -14.538050651550293
    7. '  ' → logprob: -15.413050651550293
    8. ')' → logprob: -16.28805160522461
    9. '.' → logprob: -16.53805160522461
    10. ':' → logprob: -16.53805160522461

Token 255: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.01420475635677576
    2. ' groups' → logprob: -4.264204978942871
    3. '   ' → logprob: -10.764204978942871
    4. '(groups' → logprob: -12.139204978942871
    5. '    ' → logprob: -13.139204978942871
    6. 'group' → logprob: -13.389204978942871
    7. '       ' → logprob: -13.514204978942871
    8. ' ' → logprob: -13.514204978942871
    9. '.groups' → logprob: -13.639204978942871
    10. '[]' → logprob: -13.639204978942871

Token 256: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014084660506341606
    2. '[(' → logprob: -9.250141143798828
    3. '[f' → logprob: -11.125141143798828
    4. '0' → logprob: -11.250141143798828
    5. '   ' → logprob: -12.125141143798828
    6. '[-' → logprob: -13.250141143798828
    7. ' =' → logprob: -13.250141143798828
    8. '=' → logprob: -13.250141143798828
    9. ' [' → logprob: -13.875141143798828
    10. '[
' → logprob: -14.375141143798828

Token 257: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004822176415473223
    2. ' ' → logprob: -5.504822254180908
    3. 'f' → logprob: -8.00482177734375
    4. '2' → logprob: -8.87982177734375
    5. '1' → logprob: -9.37982177734375
    6. '(' → logprob: -9.75482177734375
    7. ' f' → logprob: -9.87982177734375
    8. '[' → logprob: -10.50482177734375
    9. ' (' → logprob: -11.19232177734375
    10. '   ' → logprob: -11.50482177734375

Token 258: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018498269841074944
    2. ' if' → logprob: -4.143498420715332
    3. 'if' → logprob: -6.643498420715332
    4. ' ]' → logprob: -7.768498420715332
    5. '[' → logprob: -8.143498420715332
    6. ']
' → logprob: -8.393498420715332
    7. '       ' → logprob: -9.643498420715332
    8. '   ' → logprob: -10.393498420715332
    9. '
' → logprob: -10.518498420715332
    10. ']

' → logprob: -10.643498420715332

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022162754088640213
    2. '
' → logprob: -4.522162914276123
    3. ' if' → logprob: -4.897162914276123
    4. '<|end|>' → logprob: -6.397162914276123
    5. '        
' → logprob: -7.022162914276123
    6. ',' → logprob: -8.022162437438965
    7. '```' → logprob: -9.147162437438965
    8. 'if' → logprob: -9.397162437438965
    9. ' ' → logprob: -9.397162437438965
    10. '   ' → logprob: -9.897162437438965

Token 260: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009805197827517986
    2. ' if' → logprob: -5.009805202484131
    3. 'if' (adapté à ' if') → logprob: -6.509805202484131
    4. '   ' → logprob: -7.009805202484131
    5. '
' → logprob: -7.634805202484131
    6. '        
' → logprob: -10.384804725646973
    7. '<|end|>' → logprob: -10.759804725646973
    8. ' ' → logprob: -10.884804725646973
    9. ',' → logprob: -10.884804725646973
    10. ')' → logprob: -11.134804725646973

Token 261: ' preferred' (ID: 20146)
  Prédit: 'preferred'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preferred' → logprob: -0.3729656934738159
    2. ' preferred' → logprob: -1.372965693473816
    3. 'len' → logprob: -3.8729658126831055
    4. ' not' → logprob: -3.8729658126831055
    5. 'not' → logprob: -4.6229658126831055
    6. ' len' → logprob: -5.2479658126831055
    7. 'flag' → logprob: -6.9979658126831055
    8. 'pre' → logprob: -8.997965812683105
    9. ' flag' → logprob: -9.372965812683105
    10. ' ' → logprob: -9.747965812683105

Token 262: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10585279017686844
    2. 'and' → logprob: -2.4808528423309326
    3. ':' → logprob: -4.1058526039123535
    4. '.' → logprob: -8.480853080749512
    5. ':
' → logprob: -10.855853080749512
    6. '.pop' → logprob: -11.105853080749512
    7. ' ' → logprob: -11.605853080749512
    8. ')' → logprob: -11.730853080749512
    9. '>' → logprob: -12.730853080749512
    10. '.empty' → logprob: -12.730853080749512

Token 263: '           ' (ID: 352)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.10308271646499634
    2. '.p' → logprob: -3.8530826568603516
    3. '.' → logprob: -4.228082656860352
    4. '.append' → logprob: -4.353082656860352
    5. '.dequeue' → logprob: -4.478082656860352
    6. ' .' → logprob: -4.603082656860352
    7. '       ' → logprob: -5.103082656860352
    8. '           ' → logprob: -5.228082656860352
    9. '   ' → logprob: -6.103082656860352
    10. '[' → logprob: -6.228082656860352

Token 264: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.06427551805973053
    2. 'ans' (adapté à ' ans') → logprob: -2.8142755031585693
    3. ' x' → logprob: -6.939275741577148
    4. '           ' → logprob: -7.439275741577148
    5. 'x' → logprob: -8.189275741577148
    6. ' val' → logprob: -9.689275741577148
    7. ' idx' → logprob: -9.814275741577148
    8. ' v' → logprob: -9.939275741577148
    9. 'idx' → logprob: -9.939275741577148
    10. 'v' → logprob: -10.189275741577148

Token 265: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.945094355614856e-05
    2. '[' → logprob: -9.750069618225098
    3. '[I' → logprob: -12.625069618225098
    4. '```' → logprob: -12.875069618225098
    5. ' [' → logprob: -14.125069618225098
    6. '[a' → logprob: -14.500069618225098
    7. '][' → logprob: -14.625069618225098
    8. ')[' → logprob: -14.750069618225098
    9. '[index' → logprob: -15.125069618225098
    10. '[user' → logprob: -15.375069618225098

Token 266: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0034223550464957952
    2. ']=' → logprob: -5.753422260284424
    3. '=' → logprob: -8.753422737121582
    4. ' ]' → logprob: -9.628422737121582
    5. ' =' → logprob: -10.878422737121582
    6. ')' → logprob: -13.503422737121582
    7. '[' → logprob: -15.878422737121582
    8. ')=' → logprob: -16.253421783447266
    9. ']+=' → logprob: -16.628421783447266
    10. '   ' → logprob: -16.753421783447266

Token 267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12831345200538635
    2. ' =' → logprob: -2.1283135414123535
    3. ']' → logprob: -6.8783135414123535
    4. ']=' → logprob: -8.378313064575195
    5. '[' → logprob: -9.878313064575195
    6. '[i' → logprob: -10.628313064575195
    7. '.append' → logprob: -10.878313064575195
    8. '=index' → logprob: -12.378313064575195
    9. ',' → logprob: -12.753313064575195
    10. '.' → logprob: -12.753313064575195

Token 268: ' preferred' (ID: 20146)
  Prédit: 'preferred'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preferred' → logprob: -0.03806536644697189
    2. ' preferred' → logprob: -3.2880654335021973
    3. 'pre' → logprob: -10.788064956665039
    4. 'prefer' → logprob: -12.663064956665039
    5. 'pref' → logprob: -17.16306495666504
    6. ' ' → logprob: -17.28806495666504
    7. 'Preferred' → logprob: -17.41306495666504
    8. '	pre' → logprob: -17.53806495666504
    9. 'groups' → logprob: -17.66306495666504
    10. '   ' → logprob: -17.66306495666504

Token 269: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -6.790129555156454e-05
    2. '.pop' → logprob: -10.125067710876465
    3. '.' → logprob: -10.500067710876465
    4. ' .' → logprob: -16.25006866455078
    5. '].' → logprob: -17.12506866455078
    6. '>.' → logprob: -17.12506866455078
    7. 'p' → logprob: -18.00006866455078
    8. '```' → logprob: -18.25006866455078
    9. ').' → logprob: -18.50006866455078
    10. '.append' → logprob: -19.50006866455078

Token 270: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.31520646810531616
    2. 'op' → logprob: -1.315206527709961
    3. 'p' → logprob: -6.690206527709961
    4. 'ople' → logprob: -7.940206527709961
    5. 'pop' → logprob: -8.690206527709961
    6. 'opl' → logprob: -9.065206527709961
    7. 'oplevel' → logprob: -10.940206527709961
    8. 'opf' → logprob: -11.690206527709961
    9. '0' → logprob: -12.065206527709961
    10. '```' → logprob: -12.315206527709961

Token 271: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5760596394538879
    2. '()' → logprob: -0.8260596394538879
    3. '()
' → logprob: -9.951059341430664
    4. 'else' → logprob: -10.576059341430664
    5. '(' → logprob: -11.326059341430664
    6. '())
' → logprob: -12.076059341430664
    7. '(
' → logprob: -12.201059341430664
    8. '())' → logprob: -12.451059341430664
    9. '()\' → logprob: -12.451059341430664
    10. '()

' → logprob: -12.576059341430664

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20107655227184296
    2. ' else' → logprob: -2.0760765075683594
    3. 'else' → logprob: -2.9510765075683594
    4. 'elif' → logprob: -5.951076507568359
    5. ' elif' → logprob: -6.701076507568359
    6. '<|end|>' → logprob: -7.451076507568359
    7. '   ' → logprob: -11.82607650756836
    8. '	else' → logprob: -12.57607650756836
    9. '```' → logprob: -12.70107650756836
    10. '<|end|>' → logprob: -12.95107650756836

Token 273: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6989787817001343
    2. 'else' (adapté à ' else') → logprob: -1.3239787817001343
    3. ' else' → logprob: -1.9489787817001343
    4. 'elif' → logprob: -2.573978900909424
    5. ' elif' → logprob: -4.073978900909424
    6. '   ' → logprob: -6.823978900909424
    7. '    ' → logprob: -11.073978424072266
    8. '     ' → logprob: -11.198978424072266
    9. '      ' → logprob: -11.823978424072266
    10. ' ' → logprob: -11.823978424072266

Token 274: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07906735688447952
    2. ':' → logprob: -2.5790674686431885
    3. '           ' → logprob: -9.45406723022461
    4. ':
' → logprob: -9.82906723022461
    5. '       ' → logprob: -10.82906723022461
    6. '   ' → logprob: -11.07906723022461
    7. ':

' → logprob: -13.07906723022461
    8. ' if' → logprob: -13.57906723022461
    9. ' :
' → logprob: -13.70406723022461
    10. '          ' → logprob: -13.82906723022461

Token 275: '           ' (ID: 352)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.736121654510498
    2. '           ' → logprob: -1.486121654510498
    3. 'ans' → logprob: -1.611121654510498
    4. '   ' → logprob: -2.486121654510498
    5. '       ' → logprob: -5.486121654510498
    6. ' ' → logprob: -6.111121654510498
    7. '	ans' → logprob: -6.736121654510498
    8. ' secondary' → logprob: -7.111121654510498
    9. '               ' → logprob: -7.736121654510498
    10. '         ' → logprob: -7.736121654510498

Token 276: ' ans' (ID: 3345)
  Prédit: 'secondary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secondary' → logprob: -0.07839348167181015
    2. ' secondary' → logprob: -2.8283934593200684
    3. 'ans' (adapté à ' ans') → logprob: -4.203393459320068
    4. ' ans' → logprob: -6.953393459320068
    5. '           ' → logprob: -8.578393936157227
    6. '   ' → logprob: -9.078393936157227
    7. '
' → logprob: -10.453393936157227
    8. '       ' → logprob: -10.703393936157227
    9. ' ' → logprob: -11.328393936157227
    10. '	ans' → logprob: -11.953393936157227

Token 277: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09768914431333542
    2. '=' → logprob: -2.472689151763916
    3. '[' → logprob: -5.222689151763916
    4. ' =' → logprob: -5.847689151763916
    5. '=i' → logprob: -8.597688674926758
    6. ']' → logprob: -9.597688674926758
    7. '[:]' → logprob: -10.222688674926758
    8. '   ' → logprob: -10.222688674926758
    9. '[
' → logprob: -10.347688674926758
    10. ' ' → logprob: -10.972688674926758

Token 278: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4005938768386841
    2. '=' → logprob: -1.150593876838684
    3. ' =' → logprob: -4.5255937576293945
    4. ']=' → logprob: -6.0255937576293945
    5. ' ]' → logprob: -7.9005937576293945
    6. '   ' → logprob: -11.525593757629395
    7. ' ' → logprob: -13.275593757629395
    8. ')' → logprob: -14.275593757629395
    9. '[' → logprob: -14.400593757629395
    10. '    ' → logprob: -14.650593757629395

Token 279: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804183006286621
    2. ' =' → logprob: -3.288041830062866
    3. ']' → logprob: -15.663042068481445
    4. ' ' → logprob: -15.913042068481445
    5. '   ' → logprob: -16.663042068481445
    6. ']=' → logprob: -16.913042068481445
    7. '        ' → logprob: -17.413042068481445
    8. '    ' → logprob: -17.538042068481445
    9. '       ' → logprob: -17.913042068481445
    10. '[' → logprob: -18.663042068481445

Token 280: ' secondary' (ID: 21433)
  Prédit: ' secondary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' secondary' → logprob: -0.31326404213905334
    2. 'secondary' → logprob: -1.313264012336731
    3. ' ' → logprob: -13.813263893127441
    4. '   ' → logprob: -14.313263893127441
    5. '.secondary' → logprob: -15.188263893127441
    6. 'Secondary' → logprob: -16.438264846801758
    7. ' ' → logprob: -16.813264846801758
    8. ' groups' → logprob: -16.938264846801758
    9. '
' → logprob: -17.063264846801758
    10. '  ' → logprob: -17.063264846801758

Token 281: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.1637164789135568e-05
    2. '.' → logprob: -12.125011444091797
    3. 'p' → logprob: -12.375011444091797
    4. '.pop' → logprob: -14.125011444091797
    5. 'opleft' → logprob: -14.125011444091797
    6. ' .' → logprob: -14.875011444091797
    7. '   ' → logprob: -16.750011444091797
    8. '.append' → logprob: -18.000011444091797
    9. '```' → logprob: -18.125011444091797
    10. ' ' → logprob: -18.625011444091797

Token 282: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.00035369666875340044
    2. 'op' → logprob: -8.375353813171387
    3. 'ople' → logprob: -9.125353813171387
    4. 'opl' → logprob: -12.000353813171387
    5. 'ple' → logprob: -12.125353813171387
    6. '```' → logprob: -14.125353813171387
    7. 'oplevel' → logprob: -14.250353813171387
    8. 'opt' → logprob: -14.625353813171387
    9. 'left' → logprob: -14.875353813171387
    10. 'p' → logprob: -15.625353813171387

Token 283: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003467865171842277
    2. '()
' → logprob: -8.000347137451172
    3. '(' → logprob: -12.375347137451172
    4. '()\' → logprob: -12.625347137451172
    5. '())' → logprob: -14.375347137451172
    6. '()]' → logprob: -14.375347137451172
    7. '()?' → logprob: -14.625347137451172
    8. '()
' → logprob: -14.750347137451172
    9. '()

' → logprob: -14.750347137451172
    10. ' ()' → logprob: -15.125347137451172

Token 284: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16382171213626862
    2. 'elif' → logprob: -2.1638216972351074
    3. '   ' → logprob: -4.038821697235107
    4. '<|end|>' → logprob: -4.913821697235107
    5. ' else' → logprob: -5.038821697235107
    6. '
' → logprob: -5.413821697235107
    7. ' elif' → logprob: -9.413822174072266
    8. '    
' → logprob: -10.038822174072266
    9. '	else' → logprob: -10.788822174072266
    10. ')' → logprob: -10.788822174072266

Token 285: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16407690942287445
    2. ':
' → logprob: -1.9140769243240356
    3. '   ' → logprob: -5.664076805114746
    4. ' if' → logprob: -9.164076805114746
    5. ' :
' → logprob: -9.414076805114746
    6. ' :' → logprob: -10.039076805114746
    7. 'if' → logprob: -10.664076805114746
    8. ' for' → logprob: -10.789076805114746
    9. ':
' → logprob: -11.164076805114746
    10. '{' → logprob: -11.289076805114746

Token 286: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4722253084182739
    2. '   ' → logprob: -1.097225308418274
    3. 'idx' → logprob: -4.597225189208984
    4. 'if' → logprob: -4.847225189208984
    5. ' for' → logprob: -4.972225189208984
    6. 'indices' → logprob: -5.722225189208984
    7. 'g' → logprob: -6.097225189208984
    8. 'cnt' → logprob: -6.472225189208984
    9. 'inds' → logprob: -6.597225189208984
    10. 'x' → logprob: -6.847225189208984

Token 287: ' major' (ID: 5035)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.9951350688934326
    2. 'for' → logprob: -1.1201350688934326
    3. 'if' → logprob: -1.8701350688934326
    4. 'color' → logprob: -3.6201350688934326
    5. 'cnt' → logprob: -4.120135307312012
    6. 'c' → logprob: -4.245135307312012
    7. 'pos' → logprob: -4.870135307312012
    8. 'target' → logprob: -4.870135307312012
    9. 'colors' → logprob: -4.870135307312012
    10. 'indices' → logprob: -5.120135307312012

Token 288: '_group' (ID: 15990)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14076179265975952
    2. '_group' → logprob: -2.6407618522644043
    3. '=' → logprob: -3.1407618522644043
    4. ',' → logprob: -4.640761852264404
    5. '_groups' → logprob: -6.015761852264404
    6. 'group' → logprob: -6.640761852264404
    7. '_flag' → logprob: -7.265761852264404
    8. '_' → logprob: -7.390761852264404
    9. 'ity' → logprob: -7.640761852264404
    10. '_code' → logprob: -9.265761375427246

Token 289: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3161108195781708
    2. '=' → logprob: -1.3161108493804932
    3. ',' → logprob: -5.941110610961914
    4. 's' → logprob: -9.191110610961914
    5. '_idx' → logprob: -9.316110610961914
    6. '_index' → logprob: -12.316110610961914
    7. 'idx' → logprob: -12.566110610961914
    8. ' ' → logprob: -13.191110610961914
    9. '=[' → logprob: -13.566110610961914
    10. '   ' → logprob: -13.691110610961914

Token 290: ' minor' (ID: 15054)
  Prédit: 'minor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minor' → logprob: -0.02713087387382984
    2. ' minor' → logprob: -3.6521308422088623
    3. ' ' → logprob: -8.527131080627441
    4. ' =' → logprob: -8.902131080627441
    5. 'major' → logprob: -9.652131080627441
    6. 'other' → logprob: -10.027131080627441
    7. 'secondary' → logprob: -10.027131080627441
    8. '=' → logprob: -10.152131080627441
    9. 'min' → logprob: -10.277131080627441
    10. '   ' → logprob: -10.277131080627441

Token 291: '_group' (ID: 15990)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7201631665229797
    2. ' =' → logprob: -1.345163106918335
    3. '_group' → logprob: -1.595163106918335
    4. ',' → logprob: -3.470163106918335
    5. '_groups' → logprob: -4.095163345336914
    6. 'group' → logprob: -6.595163345336914
    7. 'groups' → logprob: -7.470163345336914
    8. ',_' → logprob: -9.720163345336914
    9. 's' → logprob: -10.095163345336914
    10. '=_' → logprob: -10.220163345336914

Token 292: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04887041822075844
    2. ' =' → logprob: -3.048870325088501
    3. ',' → logprob: -8.173870086669922
    4. '=

' → logprob: -14.048870086669922
    5. '=
' → logprob: -16.173870086669922
    6. ' ' → logprob: -16.298870086669922
    7. ' ,' → logprob: -17.048870086669922
    8. ' =
' → logprob: -18.298870086669922
    9. '=(' → logprob: -18.423870086669922
    10. '＝' → logprob: -18.548870086669922

Token 293: ' (' (ID: 350)
  Prédit: '(groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(groups' → logprob: -0.13092827796936035
    2. ' (' → logprob: -2.6309282779693604
    3. '(sorted' → logprob: -4.130928039550781
    4. '(one' → logprob: -5.255928039550781
    5. 'groups' → logprob: -5.380928039550781
    6. '([' → logprob: -5.505928039550781
    7. '(' → logprob: -5.880928039550781
    8. ' groups' → logprob: -6.005928039550781
    9. '(two' → logprob: -6.255928039550781
    10. '((' → logprob: -6.505928039550781

Token 294: 'flag' (ID: 17665)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.9364697337150574
    2. '(groups' → logprob: -1.0614697933197021
    3. '(one' → logprob: -1.5614697933197021
    4. 'one' → logprob: -3.811469793319702
    5. '(two' → logprob: -4.061469554901123
    6. 'two' → logprob: -5.186469554901123
    7. '(b' → logprob: -6.186469554901123
    8. '(' → logprob: -6.686469554901123
    9. ' groups' → logprob: -6.686469554901123
    10. ' (' → logprob: -7.561469554901123

Token 295: ',' (ID: 11)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.4045105278491974
    2. ',' → logprob: -1.154510498046875
    3. '==' → logprob: -4.779510498046875
    4. ').' → logprob: -5.404510498046875
    5. ' ==' → logprob: -6.029510498046875
    6. ' ,' → logprob: -6.779510498046875
    7. '),' → logprob: -8.154510498046875
    8. '   ' → logprob: -8.904510498046875
    9. ')' → logprob: -9.279510498046875
    10. ' ' → logprob: -9.654510498046875

Token 296: ' ' (ID: 220)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.20408815145492554
    2. ' groups' → logprob: -2.3290882110595703
    3. 'one' → logprob: -3.0790882110595703
    4. '[' → logprob: -4.07908821105957
    5. ' one' → logprob: -5.07908821105957
    6. 'flag' → logprob: -5.70408821105957
    7. ' [' → logprob: -6.32908821105957
    8. '1' → logprob: -6.45408821105957
    9. 'not' → logprob: -6.45408821105957
    10. '(groups' → logprob: -6.57908821105957

Token 297: '0' (ID: 15)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.5036059021949768
    2. 'one' → logprob: -2.128605842590332
    3. '[' → logprob: -2.378605842590332
    4. 'flag' → logprob: -2.878605842590332
    5. 'not' → logprob: -3.003605842590332
    6. '1' → logprob: -3.128605842590332
    7. ' groups' → logprob: -4.753605842590332
    8. '0' → logprob: -5.753605842590332
    9. 'ones' → logprob: -5.753605842590332
    10. '[]' → logprob: -6.003605842590332

Token 298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012405868619680405
    2. ')[' → logprob: -7.3762407302856445
    3. ' if' → logprob: -8.126240730285645
    4. ' )' → logprob: -8.376240730285645
    5. ')
' → logprob: -10.376240730285645
    6. '   ' → logprob: -10.876240730285645
    7. 'if' → logprob: -11.126240730285645
    8. ']' → logprob: -11.251240730285645
    9. '[' → logprob: -13.001240730285645
    10. ' ' → logprob: -13.376240730285645

Token 299: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40033891797065735
    2. 'if' → logprob: -1.275338888168335
    3. '
' → logprob: -3.025338888168335
    4. ',' → logprob: -6.775339126586914
    5. '   ' → logprob: -8.025339126586914
    6. '[' → logprob: -8.900339126586914
    7. '

' → logprob: -9.025339126586914
    8. ' ' → logprob: -10.025339126586914
    9. ')' → logprob: -10.400339126586914
    10. 'for' → logprob: -10.400339126586914

Token 300: ' k' (ID: 372)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008291148580610752
    2. ' a' → logprob: -5.508291244506836
    3. 'sum' → logprob: -6.508291244506836
    4. 'b' → logprob: -6.883291244506836
    5. 'len' → logprob: -7.258291244506836
    6. 'flag' → logprob: -7.883291244506836
    7. 'k' → logprob: -8.383291244506836
    8. '(a' → logprob: -8.883291244506836
    9. ' sum' → logprob: -10.008291244506836
    10. ' b' → logprob: -10.258291244506836

Token 301: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.9380702972412109
    2. ' <' → logprob: -1.313070297241211
    3. ' >=' → logprob: -1.813070297241211
    4. '<' → logprob: -2.313070297241211
    5. '<=' → logprob: -3.563070297241211
    6. '<a' → logprob: -3.938070297241211
    7. 'else' → logprob: -4.438070297241211
    8. ' <=' → logprob: -5.063070297241211
    9. ' else' → logprob: -5.313070297241211
    10. '==' → logprob: -6.188070297241211

Token 302: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.013401737436652184
    2. ' a' → logprob: -4.763401508331299
    3. 'b' → logprob: -5.388401508331299
    4. ' b' → logprob: -8.888401985168457
    5. 'max' → logprob: -10.638401985168457
    6. 'len' → logprob: -11.013401985168457
    7. ' max' → logprob: -11.638401985168457
    8. ' ' → logprob: -12.138401985168457
    9. ' (' → logprob: -12.638401985168457
    10. '(a' → logprob: -12.763401985168457

Token 303: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2014184147119522
    2. 'else' → logprob: -1.701418399810791
    3. ',' → logprob: -12.95141887664795
    4. ' ' → logprob: -14.07641887664795
    5. ' or' → logprob: -14.20141887664795
    6. '_else' → logprob: -15.32641887664795
    7. ' and' → logprob: -15.57641887664795
    8. '   ' → logprob: -15.82641887664795
    9. '	else' → logprob: -16.201417922973633
    10. 'and' → logprob: -16.326417922973633

Token 304: ' ([' (ID: 31338)
  Prédit: '(flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(flag' → logprob: -0.011348903179168701
    2. '(' → logprob: -4.636348724365234
    3. '(not' → logprob: -6.636348724365234
    4. '(b' → logprob: -8.886348724365234
    5. 'flag' → logprob: -10.011348724365234
    6. ' (' → logprob: -10.011348724365234
    7. '([' → logprob: -10.886348724365234
    8. '(True' → logprob: -12.136348724365234
    9. '(flags' → logprob: -12.386348724365234
    10. '(one' → logprob: -12.511348724365234

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03444071486592293
    2. 'f' → logprob: -4.659440517425537
    3. 'flag' → logprob: -4.659440517425537
    4. '0' → logprob: -5.159440517425537
    5. 'i' → logprob: -5.784440517425537
    6. '(' → logprob: -6.409440517425537
    7. 'x' → logprob: -6.409440517425537
    8. 'not' → logprob: -6.409440517425537
    9. '   ' → logprob: -8.534440994262695
    10. ' ' → logprob: -9.284440994262695

Token 306: '-x' (ID: 12651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5986509323120117
    2. ']*' → logprob: -0.9736509323120117
    3. ' -' → logprob: -2.7236509323120117
    4. ' flag' → logprob: -5.973650932312012
    5. ',' → logprob: -6.598650932312012
    6. 'flag' → logprob: -6.723650932312012
    7. '],' → logprob: -7.348650932312012
    8. ' for' → logprob: -7.848650932312012
    9. ']+' → logprob: -8.473650932312012
    10. '^' → logprob: -9.098650932312012

Token 307: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06228572502732277
    2. 'for' → logprob: -2.8122856616973877
    3. 'or' → logprob: -8.562285423278809
    4. ',' → logprob: -10.812285423278809
    5. ' ' → logprob: -10.812285423278809
    6. 'x' → logprob: -10.937285423278809
    7. ' x' → logprob: -11.187285423278809
    8. 'f' → logprob: -11.437285423278809
    9. ' or' → logprob: -12.187285423278809
    10. '   ' → logprob: -12.187285423278809

Token 308: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.061995361000299454
    2. 'x' → logprob: -2.811995267868042
    3. ' flag' → logprob: -10.686995506286621
    4. 'flag' → logprob: -12.436995506286621
    5. '	x' → logprob: -15.186995506286621
    6. '(x' → logprob: -15.686995506286621
    7. '$x' → logprob: -15.686995506286621
    8. '_x' → logprob: -15.936995506286621
    9. ' ' → logprob: -16.311994552612305
    10. '"x' → logprob: -16.936994552612305

Token 309: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4830247759819031
    2. 'in' → logprob: -0.9830247759819031
    3. 'flag' → logprob: -4.733024597167969
    4. 'x' → logprob: -9.483024597167969
    5. ' flag' → logprob: -10.858024597167969
    6. ',' → logprob: -12.233024597167969
    7. ' ' → logprob: -12.483024597167969
    8. '],' → logprob: -14.358024597167969
    9. '_flag' → logprob: -14.608024597167969
    10. '(flag' → logprob: -14.733024597167969

Token 310: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0031781906727701426
    2. ' flag' → logprob: -5.753178119659424
    3. '(flag' → logprob: -15.378178596496582
    4. 'range' → logprob: -16.128177642822266
    5. '	flag' → logprob: -16.378177642822266
    6. ' ' → logprob: -18.253177642822266
    7. '_flag' → logprob: -19.253177642822266
    8. 'f' → logprob: -19.378177642822266
    9. '
' → logprob: -19.378177642822266
    10. 'Flag' → logprob: -19.378177642822266

Token 311: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020566426683217287
    2. '],' → logprob: -6.37705659866333
    3. ' ,' → logprob: -8.002057075500488
    4. '),' → logprob: -11.252057075500488
    5. '   ' → logprob: -12.377057075500488
    6. ' ],' → logprob: -13.377057075500488
    7. ']' → logprob: -15.127057075500488
    8. '  ' → logprob: -15.877057075500488
    9. ' ' → logprob: -16.002056121826172
    10. '(),' → logprob: -16.627056121826172

Token 312: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32859548926353455
    2. ' ' → logprob: -1.703595519065857
    3. 'flag' → logprob: -3.7035953998565674
    4. 'b' → logprob: -3.9535953998565674
    5. ' flag' → logprob: -4.5785956382751465
    6. '[' → logprob: -4.7035956382751465
    7. ' b' → logprob: -4.8285956382751465
    8. ' [' → logprob: -4.9535956382751465
    9. 'k' → logprob: -5.2035956382751465
    10. ' k' → logprob: -5.4535956382751465

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05427827686071396
    2. 'k' → logprob: -4.054278373718262
    3. ' ' → logprob: -4.054278373718262
    4. 'b' → logprob: -4.804278373718262
    5. '2' → logprob: -5.179278373718262
    6. '0' → logprob: -6.679278373718262
    7. 'a' → logprob: -6.804278373718262
    8. ' k' → logprob: -7.179278373718262
    9. ' b' → logprob: -7.804278373718262
    10. '   ' → logprob: -8.054278373718262

Token 314: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.21784432232379913
    2. ')' → logprob: -1.8428443670272827
    3. ')

' → logprob: -3.342844247817993
    4. ' )
' → logprob: -6.592844486236572
    5. '   ' → logprob: -8.467844009399414
    6. ')
' → logprob: -8.842844009399414
    7. ' )' → logprob: -8.967844009399414
    8. 'if' → logprob: -10.092844009399414
    9. ' )

' → logprob: -10.217844009399414
    10. ',' → logprob: -10.842844009399414

Token 315: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15644171833992004
    2. 'if' → logprob: -2.0314416885375977
    3. 'major' → logprob: -5.156441688537598
    4. 'idx' → logprob: -5.656441688537598
    5. 'minor' → logprob: -7.406441688537598
    6. ' for' → logprob: -8.281441688537598
    7. 'available' → logprob: -8.281441688537598
    8. 'group' → logprob: -8.406441688537598
    9. 'fill' → logprob: -8.531441688537598
    10. 'res' → logprob: -8.531441688537598

Token 316: ' three' (ID: 3407)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08341927826404572
    2. 'if' → logprob: -3.5834193229675293
    3. 'idx' → logprob: -4.208419322967529
    4. 'major' → logprob: -4.208419322967529
    5. 'other' → logprob: -5.708419322967529
    6. 'target' → logprob: -6.708419322967529
    7. 'minor' → logprob: -6.708419322967529
    8. 'pos' → logprob: -6.958419322967529
    9. 'cnt' → logprob: -7.208419322967529
    10. 'group' → logprob: -7.208419322967529

Token 317: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.9313321709632874
    2. '_groups' → logprob: -1.3063321113586426
    3. ' =' → logprob: -1.5563321113586426
    4. '=' → logprob: -3.4313321113586426
    5. '_' → logprob: -3.9313321113586426
    6. ',' → logprob: -4.056332111358643
    7. 's' → logprob: -4.306332111358643
    8. '_idx' → logprob: -4.681332111358643
    9. 'groups' → logprob: -5.181332111358643
    10. '[' → logprob: -5.556332111358643

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22017402946949005
    2. '=' → logprob: -1.9701740741729736
    3. ',' → logprob: -2.8451740741729736
    4. ' ,' → logprob: -10.845173835754395
    5. '.pop' → logprob: -11.095173835754395
    6. '.' → logprob: -11.220173835754395
    7. '.append' → logprob: -11.595173835754395
    8. '.=' → logprob: -13.470173835754395
    9. ' ' → logprob: -13.970173835754395
    10. '.remove' → logprob: -13.970173835754395

Token 319: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.006459324155002832
    2. ' groups' → logprob: -5.3814592361450195
    3. 'three' → logprob: -6.6314592361450195
    4. '[' → logprob: -8.38145923614502
    5. '(groups' → logprob: -9.25645923614502
    6. '[]
' → logprob: -10.00645923614502
    7. '3' → logprob: -10.38145923614502
    8. 'deque' → logprob: -10.50645923614502
    9. 'one' → logprob: -10.88145923614502
    10. '[]' → logprob: -10.88145923614502

Token 320: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0041548567824065685
    2. '[min' → logprob: -5.629154682159424
    3. '[k' → logprob: -9.004155158996582
    4. '[[' → logprob: -9.629155158996582
    5. '[(' → logprob: -9.629155158996582
    6. '.pop' → logprob: -9.879155158996582
    7. '.index' → logprob: -10.129155158996582
    8. '   ' → logprob: -10.629155158996582
    9. ' =' → logprob: -10.879155158996582
    10. '[:]' → logprob: -11.004155158996582

Token 321: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07102485001087189
    2. '0' → logprob: -2.8210248947143555
    3. 'minor' → logprob: -5.0710248947143555
    4. 'major' → logprob: -6.5710248947143555
    5. ' ' → logprob: -7.6960248947143555
    6. '[' → logprob: -8.758524894714355
    7. '(' → logprob: -9.133524894714355
    8. '1' → logprob: -9.258524894714355
    9. '
' → logprob: -9.696024894714355
    10. '```' → logprob: -10.008524894714355

Token 322: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8871363997459412
    2. '
' → logprob: -0.8871363997459412
    3. ']
' → logprob: -1.762136459350586
    4. ']

' → logprob: -6.762136459350586
    5. '.copy' → logprob: -7.137136459350586
    6. ' ]' → logprob: -7.762136459350586
    7. ')' → logprob: -7.887136459350586
    8. ' ]
' → logprob: -8.387136459350586
    9. '.pop' → logprob: -8.387136459350586
    10. '

' → logprob: -8.512136459350586

Token 323: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7843259572982788
    2. ' for' → logprob: -0.9093259572982788
    3. '   ' → logprob: -2.1593260765075684
    4. 'if' → logprob: -4.534326076507568
    5. '
' → logprob: -4.659326076507568
    6. ' if' → logprob: -5.909326076507568
    7. '    
' → logprob: -6.409326076507568
    8. 'idx' → logprob: -8.15932559967041
    9. '  
' → logprob: -9.90932559967041
    10. '<|end|>' → logprob: -10.03432559967041

Token 324: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09005866199731827
    2. 'if' → logprob: -3.5900585651397705
    3. 'two' → logprob: -3.5900585651397705
    4. 'minor' → logprob: -3.9650585651397705
    5. 'other' → logprob: -5.34005880355835
    6. 'major' → logprob: -5.84005880355835
    7. 'small' → logprob: -7.09005880355835
    8. ' for' → logprob: -7.34005880355835
    9. 'idx' → logprob: -7.96505880355835
    10. 'target' → logprob: -8.215058326721191

Token 325: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020548662170767784
    2. ' i' → logprob: -3.8955485820770264
    3. '	i' → logprob: -13.270548820495605
    4. ' ' → logprob: -13.645548820495605
    5. '_i' → logprob: -14.270548820495605
    6. 'idx' → logprob: -14.520548820495605
    7. ',' → logprob: -14.645548820495605
    8. '_' → logprob: -14.770548820495605
    9. '   ' → logprob: -14.895548820495605
    10. '(i' → logprob: -15.270548820495605

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015167172998189926
    2. ' in' → logprob: -4.890167236328125
    3. 'in' → logprob: -4.890167236328125
    4. ' ,' → logprob: -11.890167236328125
    5. ',i' → logprob: -13.015167236328125
    6. 'i' → logprob: -14.390167236328125
    7. ' ' → logprob: -14.390167236328125
    8. '_,' → logprob: -15.515167236328125
    9. 'range' → logprob: -15.515167236328125
    10. '   ' → logprob: -15.640167236328125

Token 327: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.021461283788084984
    2. 'flag' → logprob: -4.396461486816406
    3. ' f' → logprob: -4.896461486816406
    4. '(' → logprob: -7.896461486816406
    5. '_' → logprob: -8.396461486816406
    6. ' flag' → logprob: -8.521461486816406
    7. '(f' → logprob: -8.771461486816406
    8. 'val' → logprob: -9.396461486816406
    9. '_f' → logprob: -9.771461486816406
    10. 'in' → logprob: -9.896461486816406

Token 328: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03594226390123367
    2. 'in' → logprob: -3.410942316055298
    3. ',' → logprob: -6.160942077636719
    4. 'enumer' → logprob: -9.035942077636719
    5. '   ' → logprob: -10.410942077636719
    6. ' ,' → logprob: -11.910942077636719
    7. '  ' → logprob: -11.910942077636719
    8. ')' → logprob: -11.910942077636719
    9. ' ' → logprob: -12.285942077636719
    10. '	in' → logprob: -13.535942077636719

Token 329: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00029625516617670655
    2. ' enumerate' → logprob: -8.125296592712402
    3. 'en' → logprob: -16.250295639038086
    4. '
' → logprob: -16.625295639038086
    5. 'enum' → logprob: -17.000295639038086
    6. '   ' → logprob: -17.250295639038086
    7. ' ' → logprob: -18.250295639038086
    8. 'enqueue' → logprob: -18.250295639038086
    9. 'range' → logprob: -19.000295639038086
    10. 'list' → logprob: -19.250295639038086

Token 330: '(flag' (ID: 69186)
  Prédit: '(flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flag' → logprob: -0.01858392544090748
    2. 'flag' → logprob: -4.39358377456665
    3. '(' → logprob: -5.64358377456665
    4. ' flag' → logprob: -6.39358377456665
    5. '(zip' → logprob: -7.89358377456665
    6. ' (' → logprob: -8.268584251403809
    7. '(range' → logprob: -9.643584251403809
    8. '(min' → logprob: -9.768584251403809
    9. 'major' → logprob: -10.393584251403809
    10. '((' → logprob: -11.393584251403809

Token 331: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10028376430273056
    2. '):' → logprob: -2.3502838611602783
    3. '):
' → logprob: -10.4752836227417
    4. ':' → logprob: -10.9752836227417
    5. '   ' → logprob: -10.9752836227417
    6. ' ):
' → logprob: -12.3502836227417
    7. '):

' → logprob: -12.4752836227417
    8. ')' → logprob: -13.1002836227417
    9. ':
' → logprob: -13.1002836227417
    10. '():
' → logprob: -14.3502836227417

Token 332: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3575054407119751
    2. '       ' → logprob: -1.232505440711975
    3. ' if' → logprob: -4.7325053215026855
    4. ',' → logprob: -9.607505798339844
    5. ')' → logprob: -9.982505798339844
    6. '<|end|>' → logprob: -10.482505798339844
    7. '
' → logprob: -10.732505798339844
    8. '```' → logprob: -11.482505798339844
    9. '    
' → logprob: -11.732505798339844
    10. '	if' → logprob: -12.357505798339844

Token 333: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05520688369870186
    2. 'if' (adapté à ' if') → logprob: -3.305206775665283
    3. '   ' → logprob: -4.305206775665283
    4. '       ' → logprob: -5.805206775665283
    5. '
' → logprob: -8.680207252502441
    6. ' f' → logprob: -8.930207252502441
    7. ' ans' → logprob: -9.180207252502441
    8. ' ' → logprob: -11.055207252502441
    9. '    ' → logprob: -11.305207252502441
    10. '	if' → logprob: -11.430207252502441

Token 334: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1602563112974167
    2. 'flag' → logprob: -2.7852563858032227
    3. 'ans' → logprob: -3.4102563858032227
    4. ' f' → logprob: -3.9102563858032227
    5. '(flag' → logprob: -5.410256385803223
    6. 'major' → logprob: -5.410256385803223
    7. '(ans' → logprob: -5.410256385803223
    8. ' ans' → logprob: -5.660256385803223
    9. 'not' → logprob: -5.785256385803223
    10. '(f' → logprob: -5.785256385803223

Token 335: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4293327331542969
    2. '==' → logprob: -1.0543327331542969
    3. ' !=' → logprob: -8.804332733154297
    4. ')' → logprob: -9.054332733154297
    5. ':' → logprob: -9.304332733154297
    6. ']==' → logprob: -9.804332733154297
    7. '!=' → logprob: -9.804332733154297
    8. ')==' → logprob: -9.929332733154297
    9. '==
' → logprob: -10.429332733154297
    10. ' ' → logprob: -10.679332733154297

Token 336: ' minor' (ID: 15054)
  Prédit: 'major'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'major' → logprob: -0.1250089704990387
    2. ' major' → logprob: -2.750009059906006
    3. 'minor' → logprob: -3.750009059906006
    4. '0' → logprob: -4.875009059906006
    5. '(' → logprob: -5.000009059906006
    6. 'flag' → logprob: -5.250009059906006
    7. ' ' → logprob: -5.750009059906006
    8. ' (' → logprob: -5.750009059906006
    9. '1' → logprob: -6.375009059906006
    10. ' flag' → logprob: -7.125009059906006

Token 337: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.0058457194827497005
    2. ':' → logprob: -5.505845546722412
    3. ':
' → logprob: -7.255845546722412
    4. 'group' → logprob: -7.630845546722412
    5. ' group' → logprob: -8.00584602355957
    6. '_' → logprob: -9.50584602355957
    7. ' or' → logprob: -10.00584602355957
    8. ' _' → logprob: -11.13084602355957
    9. '):
' → logprob: -11.13084602355957
    10. '_:' → logprob: -11.13084602355957

Token 338: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4836307466030121
    2. ':' → logprob: -0.9836307764053345
    3. ' and' → logprob: -4.733630657196045
    4. ' or' → logprob: -7.983630657196045
    5. '):
' → logprob: -8.858631134033203
    6. ' :
' → logprob: -9.233631134033203
    7. 'and' → logprob: -10.233631134033203
    8. '       ' → logprob: -10.483631134033203
    9. ' :' → logprob: -10.983631134033203
    10. '           ' → logprob: -11.358631134033203

Token 339: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6463073492050171
    2. ' and' → logprob: -0.8963073492050171
    3. ':' → logprob: -3.2713074684143066
    4. '           ' → logprob: -3.7713074684143066
    5. '       ' → logprob: -5.771307468414307
    6. '):
' → logprob: -6.646307468414307
    7. 'and' → logprob: -6.896307468414307
    8. '
' → logprob: -8.271306991577148
    9. '   ' → logprob: -8.271306991577148
    10. ' :
' → logprob: -8.646306991577148

Token 340: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.664290726184845
    2. ' ans' → logprob: -1.1642906665802002
    3. '           ' → logprob: -1.7892906665802002
    4. '
' → logprob: -6.539290904998779
    5. ' if' → logprob: -6.664290904998779
    6. 'if' → logprob: -6.789290904998779
    7. '	ans' → logprob: -7.414290904998779
    8. '               ' → logprob: -7.539290904998779
    9. '       ' → logprob: -7.914290904998779
    10. 'answer' → logprob: -8.289290428161621

Token 341: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.00000286102295
    3. '=' → logprob: -16.000001907348633
    4. ' =' → logprob: -17.125001907348633
    5. ' [' → logprob: -17.125001907348633
    6. '[
' → logprob: -17.375001907348633
    7. '[int' → logprob: -17.625001907348633
    8. '[index' → logprob: -17.625001907348633
    9. '[idx' → logprob: -17.750001907348633
    10. '][' → logprob: -18.375001907348633

Token 342: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014983771368861198
    2. '=' → logprob: -4.389983654022217
    3. ' =' → logprob: -6.764983654022217
    4. ']=' → logprob: -6.764983654022217
    5. ' ]' → logprob: -8.764984130859375
    6. '   ' → logprob: -11.889984130859375
    7. ')' → logprob: -14.264984130859375
    8. ',' → logprob: -15.514984130859375
    9. '    ' → logprob: -16.139984130859375
    10. ' ' → logprob: -16.514984130859375

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474078506231308
    2. '=' → logprob: -0.9740785360336304
    3. ')' → logprob: -14.849078178405762
    4. ',' → logprob: -15.224078178405762
    5. '   ' → logprob: -15.224078178405762
    6. ']' → logprob: -15.349078178405762
    7. ' ' → logprob: -15.599078178405762
    8. '=
' → logprob: -15.974078178405762
    9. ' =
' → logprob: -16.724079132080078
    10. '    ' → logprob: -17.599079132080078

Token 344: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.3401345908641815
    2. 'groups' → logprob: -1.715134620666504
    3. ' three' → logprob: -2.715134620666504
    4. ' groups' → logprob: -3.215134620666504
    5. 'one' → logprob: -7.590134620666504
    6. '   ' → logprob: -7.715134620666504
    7. '
' → logprob: -8.465134620666504
    8. '(groups' → logprob: -8.590134620666504
    9. ' one' → logprob: -9.090134620666504
    10. 'th' → logprob: -9.465134620666504

Token 345: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -2.045823566731997e-05
    2. '.pop' → logprob: -11.250020027160645
    3. '_groups' → logprob: -12.500020027160645
    4. '.p' → logprob: -14.000020027160645
    5. 'group' → logprob: -14.250020027160645
    6. '.append' → logprob: -14.625020027160645
    7. '[' → logprob: -15.125020027160645
    8. '_three' → logprob: -15.375020027160645
    9. '_GROUP' → logprob: -15.500020027160645
    10. '.groupby' → logprob: -15.875020027160645

Token 346: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -2.7491250875755213e-05
    2. '.pop' → logprob: -10.875027656555176
    3. ' .' → logprob: -12.250027656555176
    4. '.' → logprob: -13.125027656555176
    5. 'opleft' → logprob: -14.375027656555176
    6. '   ' → logprob: -14.750027656555176
    7. '.append' → logprob: -15.500027656555176
    8. ').' → logprob: -15.875027656555176
    9. '().' → logprob: -16.12502670288086
    10. '].' → logprob: -16.25002670288086

Token 347: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0006386925233528018
    2. 'ople' → logprob: -7.500638484954834
    3. 'op' → logprob: -9.500638961791992
    4. 'ple' → logprob: -12.250638961791992
    5. 'opl' → logprob: -12.250638961791992
    6. 'oplevel' → logprob: -14.375638961791992
    7. 'opt' → logprob: -15.000638961791992
    8. 'left' → logprob: -15.625638961791992
    9. '```' → logprob: -16.000638961791992
    10. 'p' → logprob: -16.375638961791992

Token 348: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017049367306753993
    2. '()
' → logprob: -6.376705169677734
    3. '(' → logprob: -14.126705169677734
    4. '()

' → logprob: -14.251705169677734
    5. '()
' → logprob: -15.001705169677734
    6. ' ()' → logprob: -15.251705169677734
    7. 'else' → logprob: -15.626705169677734
    8. '()\' → logprob: -15.876705169677734
    9. '()]' → logprob: -16.126705169677734
    10. '       ' → logprob: -16.626705169677734

Token 349: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08498182892799377
    2. 'else' → logprob: -2.584981918334961
    3. ' else' → logprob: -5.334981918334961
    4. '   ' → logprob: -6.709981918334961
    5. 'elif' → logprob: -10.834981918334961
    6. '<|end|>' → logprob: -12.209981918334961
    7. '```' → logprob: -12.709981918334961
    8. '
' → logprob: -13.459981918334961
    9. '	else' → logprob: -13.709981918334961
    10. '      ' → logprob: -14.209981918334961

Token 350: ' res' (ID: 694)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6378360390663147
    2. 'for' → logprob: -0.7628360390663147
    3. '   ' → logprob: -5.88783597946167
    4. '
' → logprob: -6.51283597946167
    5. 'idx' → logprob: -8.137836456298828
    6. 'else' → logprob: -9.262836456298828
    7. ' ' → logprob: -9.387836456298828
    8. '    
' → logprob: -9.387836456298828
    9. '  ' → logprob: -9.637836456298828
    10. '#' → logprob: -9.887836456298828

Token 351: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0114719867706299
    2. '_index' → logprob: -1.7614719867706299
    3. '=' → logprob: -2.01147198677063
    4. 'for' → logprob: -2.51147198677063
    5. '_idx' → logprob: -2.63647198677063
    6. 't' → logprob: -3.13647198677063
    7. 'idx' → logprob: -3.76147198677063
    8. '_indices' → logprob: -4.261471748352051
    9. 'idue' → logprob: -4.386471748352051
    10. 'aining' → logprob: -4.511471748352051

Token 352: ' deque' (ID: 90347)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.623213529586792
    2. '[]' → logprob: -1.998213529586792
    3. ' [' → logprob: -1.998213529586792
    4. '[]
' → logprob: -2.998213529586792
    5. 'groups' → logprob: -3.248213529586792
    6. 'deque' → logprob: -3.748213529586792
    7. ' groups' → logprob: -4.248213768005371
    8. '[k' → logprob: -4.248213768005371
    9. ' deque' → logprob: -4.498213768005371
    10. '0' → logprob: -4.998213768005371

Token 353: '(one' (ID: 92717)
  Prédit: '(groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(groups' → logprob: -0.3300001621246338
    2. '([' → logprob: -2.080000162124634
    3. '(g' → logprob: -2.955000162124634
    4. '()' → logprob: -3.455000162124634
    5. '()
' → logprob: -3.830000162124634
    6. '(x' → logprob: -3.830000162124634
    7. '(group' → logprob: -4.704999923706055
    8. '(sorted' → logprob: -5.579999923706055
    9. '((' → logprob: -5.704999923706055
    10. '(i' → logprob: -5.704999923706055

Token 354: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6748028993606567
    2. ' +' → logprob: -1.2998028993606567
    3. '+' → logprob: -1.7998028993606567
    4. '[' → logprob: -3.799802780151367
    5. ')' → logprob: -4.299802780151367
    6. ' if' → logprob: -4.549802780151367
    7. 'if' → logprob: -7.299802780151367
    8. '(' → logprob: -7.299802780151367
    9. '+k' → logprob: -7.549802780151367
    10. '[i' → logprob: -7.674802780151367

Token 355: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9663228392601013
    2. ' +' → logprob: -1.091322898864746
    3. '.extend' → logprob: -1.466322898864746
    4. '|' → logprob: -3.591322898864746
    5. '.union' → logprob: -4.341322898864746
    6. '<|end|>' → logprob: -5.341322898864746
    7. ' |' → logprob: -5.841322898864746
    8. ' ' → logprob: -6.591322898864746
    9. ')' → logprob: -7.716322898864746
    10. '.remove' → logprob: -7.966322898864746

Token 356: ' deque' (ID: 90347)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.32595372200012207
    2. 'deque' → logprob: -1.325953722000122
    3. ' two' → logprob: -5.075953483581543
    4. ' deque' → logprob: -5.825953483581543
    5. 'de' → logprob: -6.700953483581543
    6. '(two' → logprob: -7.075953483581543
    7. 'groups' → logprob: -7.325953483581543
    8. 'tw' → logprob: -7.700953483581543
    9. ' groups' → logprob: -9.200953483581543
    10. 'three' → logprob: -9.825953483581543

Token 357: '(two' (ID: 186841)
  Prédit: '(two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(two' → logprob: -0.0002210596576333046
    2. '(groups' → logprob: -9.500221252441406
    3. '([' → logprob: -10.000221252441406
    4. '(t' → logprob: -10.000221252441406
    5. '(' → logprob: -10.375221252441406
    6. 'two' → logprob: -10.750221252441406
    7. '(sorted' → logprob: -14.125221252441406
    8. '(b' → logprob: -14.375221252441406
    9. '((' → logprob: -15.500221252441406
    10. '(g' → logprob: -15.875221252441406

Token 358: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.49543267488479614
    2. ')' → logprob: -1.1204326152801514
    3. ')
' → logprob: -3.6204326152801514
    4. '+' → logprob: -3.9954326152801514
    5. '[' → logprob: -4.2454328536987305
    6. '3' → logprob: -6.4954328536987305
    7. ' three' → logprob: -6.9954328536987305
    8. ' -' → logprob: -7.4954328536987305
    9. 'three' → logprob: -7.9954328536987305
    10. '
' → logprob: -8.12043285369873

Token 359: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48868557810783386
    2. '<|end|>' → logprob: -0.9886856079101562
    3. '<|end|>' → logprob: -5.238685607910156
    4. ' 
' → logprob: -6.363685607910156
    5. ')' → logprob: -6.613685607910156
    6. '[:-' → logprob: -6.988685607910156
    7. 'for' → logprob: -7.113685607910156
    8. '[' → logprob: -7.363685607910156
    9. ')
' → logprob: -7.863685607910156
    10. '-' → logprob: -7.863685607910156

Token 360: ' three' (ID: 3407)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.5255588293075562
    2. 'three' → logprob: -0.9005588293075562
    3. ' three' → logprob: -6.775558948516846
    4. 'groups' → logprob: -7.400558948516846
    5. ' deque' → logprob: -7.525558948516846
    6. '[]' → logprob: -10.400558471679688
    7. '[' → logprob: -10.650558471679688
    8. 'de' → logprob: -10.900558471679688
    9. ' groups' → logprob: -11.150558471679688
    10. '(' → logprob: -11.650558471679688

Token 361: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.00016671013145241886
    2. '_groups' → logprob: -9.125166893005371
    3. 'roup' → logprob: -10.375166893005371
    4. 'group' → logprob: -12.125166893005371
    5. '=[]' → logprob: -12.625166893005371
    6. 's' → logprob: -12.750166893005371
    7. 'roups' → logprob: -12.750166893005371
    8. 'e' → logprob: -13.000166893005371
    9. '[' → logprob: -13.750166893005371
    10. '_three' → logprob: -13.750166893005371

Token 362: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49877747893333435
    2. 'for' → logprob: -0.9987775087356567
    3. '
' → logprob: -4.498777389526367
    4. '<|end|>' → logprob: -4.873777389526367
    5. '   ' → logprob: -6.373777389526367
    6. ' 
' → logprob: -6.748777389526367
    7. ')' → logprob: -7.498777389526367
    8. '  
' → logprob: -7.748777389526367
    9. '    
' → logprob: -7.748777389526367
    10. ')
' → logprob: -7.998777389526367

Token 363: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04306621477007866
    2. ' for' → logprob: -3.1680662631988525
    3. '<|end|>' → logprob: -10.543066024780273
    4. '   ' → logprob: -11.168066024780273
    5. '
' → logprob: -11.543066024780273
    6. ')' → logprob: -11.543066024780273
    7. 'while' → logprob: -12.793066024780273
    8. '	for' → logprob: -13.793066024780273
    9. '    
' → logprob: -13.918066024780273
    10. ',' → logprob: -14.543066024780273

Token 364: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05496860668063164
    2. ' for' → logprob: -2.9299685955047607
    3. '
' → logprob: -9.42996883392334
    4. 'while' → logprob: -12.30496883392334
    5. '   ' → logprob: -14.80496883392334
    6. '    
' → logprob: -14.92996883392334
    7. 'res' → logprob: -15.67996883392334
    8. ')' → logprob: -16.304967880249023
    9. ' while' → logprob: -16.304967880249023
    10. '	for' → logprob: -16.554967880249023

Token 365: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20141683518886566
    2. ' i' → logprob: -1.7014168500900269
    3. '	i' → logprob: -13.201416969299316
    4. ' ' → logprob: -13.951416969299316
    5. '   ' → logprob: -15.201416969299316
    6. '(i' → logprob: -15.701416969299316
    7. '  ' → logprob: -15.951416969299316
    8. ' ' → logprob: -16.826416015625
    9. 'idx' → logprob: -16.951416015625
    10. '_i' → logprob: -17.326416015625

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001112712430767715
    2. ' in' → logprob: -6.876112937927246
    3. 'in' → logprob: -9.876112937927246
    4. ' ,' → logprob: -10.751112937927246
    5. ',v' → logprob: -13.376112937927246
    6. ',f' → logprob: -13.501112937927246
    7. '_,' → logprob: -14.376112937927246
    8. ',in' → logprob: -14.501112937927246
    9. ',i' → logprob: -14.626112937927246
    10. ',value' → logprob: -15.251112937927246

Token 367: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2203773707151413
    2. ' f' → logprob: -2.2203774452209473
    3. 'v' → logprob: -2.7203774452209473
    4. ' val' → logprob: -4.720377445220947
    5. ' v' → logprob: -5.220377445220947
    6. 'val' → logprob: -5.970377445220947
    7. 'i' → logprob: -5.970377445220947
    8. ' in' → logprob: -7.095377445220947
    9. 'ans' → logprob: -7.595377445220947
    10. '(' → logprob: -7.720377445220947

Token 368: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08678492158651352
    2. ',' → logprob: -2.836784839630127
    3. 'in' → logprob: -3.711784839630127
    4. 'enumer' → logprob: -9.586785316467285
    5. ' ,' → logprob: -13.086785316467285
    6. ' ' → logprob: -13.711785316467285
    7. 'n' → logprob: -14.461785316467285
    8. 'if' → logprob: -14.461785316467285
    9. '   ' → logprob: -14.586785316467285
    10. '1' → logprob: -14.711785316467285

Token 369: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.004078878089785576
    2. ' enumerate' → logprob: -5.5040788650512695
    3. 'enum' → logprob: -15.75407886505127
    4. 'range' → logprob: -16.004079818725586
    5. 'en' → logprob: -16.129079818725586
    6. ' ' → logprob: -16.879079818725586
    7. '(en' → logprob: -18.254079818725586
    8. '   ' → logprob: -18.754079818725586
    9. '```' → logprob: -18.879079818725586
    10. '.enumer' → logprob: -19.004079818725586

Token 370: '(flag' (ID: 69186)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.7260149717330933
    2. '(flag' → logprob: -0.7260149717330933
    3. ' flag' → logprob: -4.601015090942383
    4. 'ans' → logprob: -5.101015090942383
    5. 'range' → logprob: -5.101015090942383
    6. '(range' → logprob: -5.476015090942383
    7. '(ans' → logprob: -5.726015090942383
    8. 'enumer' → logprob: -6.851015090942383
    9. 'zip' → logprob: -7.851015090942383
    10. '(zip' → logprob: -7.851015090942383

Token 371: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004875554237514734
    2. '):' → logprob: -5.379875659942627
    3. ':' → logprob: -9.379875183105469
    4. ':
' → logprob: -9.629875183105469
    5. '):
' → logprob: -10.254875183105469
    6. '   ' → logprob: -10.754875183105469
    7. ' ):
' → logprob: -10.879875183105469
    8. ')' → logprob: -11.879875183105469
    9. '       ' → logprob: -12.129875183105469
    10. '=' → logprob: -12.504875183105469

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002649119414854795
    2. ' if' → logprob: -9.125265121459961
    3. '<|end|>' → logprob: -9.375265121459961
    4. '   ' → logprob: -10.000265121459961
    5. '	   ' → logprob: -12.125265121459961
    6. ',' → logprob: -12.250265121459961
    7. 'if' → logprob: -12.750265121459961
    8. '	' → logprob: -12.875265121459961
    9. '<|end|>' → logprob: -13.250265121459961
    10. '```' → logprob: -13.375265121459961

Token 373: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6620518565177917
    2. ' if' → logprob: -0.7870518565177917
    3. '       ' → logprob: -3.6620519161224365
    4. '   ' → logprob: -5.787051677703857
    5. '
' → logprob: -8.662052154541016
    6. '           ' → logprob: -10.287052154541016
    7. '    ' → logprob: -11.162052154541016
    8. ' ' → logprob: -11.162052154541016
    9. '	if' → logprob: -11.537052154541016
    10. '        
' → logprob: -11.787052154541016

Token 374: ' f' (ID: 285)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5709366202354431
    2. ' ans' → logprob: -1.195936679840088
    3. 'f' → logprob: -2.320936679840088
    4. ' f' → logprob: -3.945936679840088
    5. 'flag' → logprob: -4.820936679840088
    6. ' not' → logprob: -6.070936679840088
    7. '(ans' → logprob: -6.320936679840088
    8. ' flag' → logprob: -6.570936679840088
    9. 'not' → logprob: -6.945936679840088
    10. '	ans' → logprob: -8.57093620300293

Token 375: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08080738037824631
    2. '!=' → logprob: -2.5808074474334717
    3. ' ==' → logprob: -6.455807209014893
    4. ' !=' → logprob: -8.20580768585205
    5. '==
' → logprob: -9.70580768585205
    6. '=' → logprob: -12.83080768585205
    7. ']==' → logprob: -13.08080768585205
    8. '   ' → logprob: -13.58080768585205
    9. ')==' → logprob: -14.20580768585205
    10. ')' → logprob: -14.33080768585205

Token 376: ' minor' (ID: 15054)
  Prédit: 'minor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minor' → logprob: -0.03805446997284889
    2. ' minor' → logprob: -3.2880544662475586
    3. 'min' → logprob: -11.663054466247559
    4. 'major' → logprob: -12.663054466247559
    5. '   ' → logprob: -14.413054466247559
    6. ' ' → logprob: -14.788054466247559
    7. '  ' → logprob: -16.038055419921875
    8. '_minor' → logprob: -16.288055419921875
    9. '=' → logprob: -17.413055419921875
    10. ' major' → logprob: -17.538055419921875

Token 377: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.0007175540085881948
    2. 'group' → logprob: -7.250717639923096
    3. 'minor' → logprob: -12.625717163085938
    4. 'roup' → logprob: -12.875717163085938
    5. '_minor' → logprob: -14.375717163085938
    6. '   ' → logprob: -14.625717163085938
    7. ' group' → logprob: -15.625717163085938
    8. '_GROUP' → logprob: -16.125717163085938
    9. '       ' → logprob: -16.250717163085938
    10. '"group' → logprob: -16.250717163085938

Token 378: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03572120890021324
    2. ':' → logprob: -3.5357213020324707
    3. ' and' → logprob: -5.160721302032471
    4. ' :
' → logprob: -9.285720825195312
    5. 'and' → logprob: -9.910720825195312
    6. '):
' → logprob: -10.410720825195312
    7. '       ' → logprob: -10.785720825195312
    8. '           ' → logprob: -11.785720825195312
    9. ':

' → logprob: -12.285720825195312
    10. ':
' → logprob: -12.785720825195312

Token 379: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13813002407550812
    2. '           ' → logprob: -2.388129949569702
    3. ':' → logprob: -3.388129949569702
    4. ' ans' → logprob: -6.513130187988281
    5. '       ' → logprob: -6.888130187988281
    6. ' :
' → logprob: -8.013130187988281
    7. '):
' → logprob: -8.388130187988281
    8. '   ' → logprob: -9.763130187988281
    9. ' and' → logprob: -9.888130187988281
    10. 'ans' → logprob: -10.013130187988281

Token 380: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.006954300217330456
    2. 'ans' (adapté à ' ans') → logprob: -5.006954193115234
    3. '               ' → logprob: -9.506954193115234
    4. '           ' → logprob: -9.631954193115234
    5. '	ans' → logprob: -9.631954193115234
    6. '(ans' → logprob: -11.256954193115234
    7. '
' → logprob: -11.506954193115234
    8. '       ' → logprob: -11.881954193115234
    9. '   ' → logprob: -13.131954193115234
    10. '_ans' → logprob: -14.756954193115234

Token 381: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.000000953674316
    3. ' [' → logprob: -15.625000953674316
    4. '=' → logprob: -16.875001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '```' → logprob: -18.000001907348633
    7. '[
' → logprob: -18.125001907348633
    8. '][' → logprob: -18.375001907348633
    9. '\[' → logprob: -18.375001907348633
    10. '[I' → logprob: -18.750001907348633

Token 382: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06671857833862305
    2. ']=' → logprob: -3.066718578338623
    3. '=' → logprob: -4.066718578338623
    4. ' ]' → logprob: -7.441718578338623
    5. ' =' → logprob: -8.316719055175781
    6. ')=' → logprob: -13.816719055175781
    7. ')' → logprob: -13.816719055175781
    8. '   ' → logprob: -14.441719055175781
    9. '[' → logprob: -15.316719055175781
    10. ']+=' → logprob: -15.816719055175781

Token 383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078758880496025
    2. ' =' → logprob: -5.5040788650512695
    3. '[' → logprob: -15.75407886505127
    4. ']=' → logprob: -16.254077911376953
    5. '=

' → logprob: -17.629077911376953
    6. '.=' → logprob: -17.754077911376953
    7. '=
' → logprob: -18.004077911376953
    8. '＝' → logprob: -18.004077911376953
    9. ')=' → logprob: -18.254077911376953
    10. '=int' → logprob: -18.379077911376953

Token 384: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5759395360946655
    2. 'res' → logprob: -0.8259395360946655
    3. '	res' → logprob: -16.700939178466797
    4. '(res' → logprob: -17.575939178466797
    5. ' ' → logprob: -17.825939178466797
    6. '_res' → logprob: -17.950939178466797
    7. '$res' → logprob: -18.450939178466797
    8. 'rest' → logprob: -18.575939178466797
    9. '=res' → logprob: -18.700939178466797
    10. ' ans' → logprob: -18.825939178466797

Token 385: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -14.00000286102295
    3. 'opleft' → logprob: -14.00000286102295
    4. 'p' → logprob: -14.87500286102295
    5. '.pop' → logprob: -15.37500286102295
    6. '   ' → logprob: -16.750001907348633
    7. '```' → logprob: -17.500001907348633
    8. ' .' → logprob: -17.500001907348633
    9. ')p' → logprob: -19.625001907348633
    10. '.pkl' → logprob: -20.250001907348633

Token 386: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0022191302850842476
    2. 'ople' → logprob: -6.127219200134277
    3. 'op' → logprob: -10.752219200134277
    4. 'opl' → logprob: -12.002219200134277
    5. 'oplevel' → logprob: -12.752219200134277
    6. 'ple' → logprob: -12.752219200134277
    7. '```' → logprob: -15.002219200134277
    8. 'left' → logprob: -16.62721824645996
    9. 'OPLE' → logprob: -16.75221824645996
    10. 'p' → logprob: -16.87721824645996

Token 387: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.4987974029500037e-05
    2. '()
' → logprob: -10.875024795532227
    3. '()]' → logprob: -12.750024795532227
    4. '()`' → logprob: -13.250024795532227
    5. '(' → logprob: -14.750024795532227
    6. '()\' → logprob: -15.375024795532227
    7. '()

' → logprob: -15.750024795532227
    8. '()"' → logprob: -15.875024795532227
    9. '())' → logprob: -16.000024795532227
    10. '()>' → logprob: -16.125024795532227

Token 388: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 389: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.12122615426778793
    2. '('' → logprob: -2.6212260723114014
    3. '(' → logprob: -3.3712260723114014
    4. '("' → logprob: -4.9962263107299805
    5. '(*)' → logprob: -8.24622631072998
    6. '(*(' → logprob: -9.87122631072998
    7. '(
' → logprob: -11.12122631072998
    8. '()' → logprob: -12.37122631072998
    9. '(ans' → logprob: -12.37122631072998
    10. '("("' → logprob: -13.24622631072998

Token 390: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.896309739408025e-07
    2. ' ans' → logprob: -14.250000953674316
    3. '(ans' → logprob: -16.0
    4. '	ans' → logprob: -20.0
    5. '[' → logprob: -20.625
    6. 'answer' → logprob: -21.875
    7. '   ' → logprob: -22.5
    8. 'a' → logprob: -23.0
    9. '
' → logprob: -23.25
    10. '_ans' → logprob: -23.375

Token 391: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.0
    3. ')
' → logprob: -17.0
    4. '())' → logprob: -17.5
    5. '))' → logprob: -17.75
    6. '()' → logprob: -18.25
    7. ')`' → logprob: -18.25
    8. '`)' → logprob: -19.875
    9. '),' → logprob: -20.125
    10. '')' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 389
Tokens correctement prédits (1ère position, stricte): 163
Tokens correctement prédits (1ère position, avec adaptation): 171
Tokens correctement prédits (top 10): 336
Précision stricte (1ère position): 41.90%
Précision adaptée (1ère position): 43.96%
Précision (top 10): 86.38%
================================================================================
