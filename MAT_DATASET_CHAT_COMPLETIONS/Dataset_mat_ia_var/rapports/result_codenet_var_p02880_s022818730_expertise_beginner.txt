================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
found = False

for i in range(1, 10):
    if n % i == 0:
        if n // i <= 9:
            found = True
            break

if found:
    print("Yes")
else:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'found' (ID: 26334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1900457739830017
    2. ' =' → logprob: -2.3150458335876465
    3. ' ' → logprob: -3.1900458335876465
    4. '=' → logprob: -3.9400458335876465
    5. '(' → logprob: -4.8150458335876465
    6. ':' → logprob: -6.4400458335876465
    7. '_space' → logprob: -6.6900458335876465
    8. '[' → logprob: -7.4400458335876465
    9. '[:]' → logprob: -7.8150458335876465
    10. ',' → logprob: -7.9400458335876465

Token 7: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.014740060083568096
    2. 'False' → logprob: -4.264739990234375
    3. ' ' → logprob: -7.514739990234375
    4. ' True' → logprob: -10.514739990234375
    5. ' None' → logprob: -13.014739990234375
    6. ' []' → logprob: -13.764739990234375
    7. ' false' → logprob: -15.014739990234375
    8. '0' → logprob: -15.889739990234375
    9. 'True' → logprob: -15.889739990234375
    10. ' "' → logprob: -16.139739990234375

Token 8: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7323701977729797
    2. '```' → logprob: -1.357370138168335
    3. '\n' → logprob: -1.857370138168335
    4. ' 
' → logprob: -3.232370138168335
    5. 'for' → logprob: -3.857370138168335
    6. '  
' → logprob: -4.482370376586914
    7. '\' → logprob: -4.607370376586914
    8. '``' → logprob: -5.107370376586914
    9. ' for' → logprob: -5.232370376586914
    10. '`' → logprob: -5.732370376586914

Token 9: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019657539203763008
    2. ' for' → logprob: -4.644657611846924
    3. '```' → logprob: -5.019657611846924
    4. '
' → logprob: -6.144657611846924
    5. '\n' → logprob: -7.144657611846924
    6. ' 
' → logprob: -9.144657135009766
    7. 'i' → logprob: -10.019657135009766
    8. '``' → logprob: -10.144657135009766
    9. '  
' → logprob: -10.519657135009766
    10. '' → logprob: -10.894657135009766

Token 10: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01363670825958252
    2. ' n' → logprob: -5.138636589050293
    3. ' i' → logprob: -5.138636589050293
    4. '  ' → logprob: -6.388636589050293
    5. ' ‌' → logprob: -10.388636589050293
    6. ' ' → logprob: -10.638636589050293
    7. 'i' → logprob: -11.263636589050293
    8. 'n' → logprob: -11.638636589050293
    9. ' )' → logprob: -11.763636589050293
    10. ' for' → logprob: -12.263636589050293

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.059712521731853485
    2. ' ' → logprob: -3.5597124099731445
    3. 'in' → logprob: -3.5597124099731445
    4. '  ' → logprob: -7.8097124099731445
    5. '_' → logprob: -8.934712409973145
    6. ')' → logprob: -8.934712409973145
    7. ' range' → logprob: -9.434712409973145
    8. '```' → logprob: -9.934712409973145
    9. 'range' → logprob: -9.934712409973145
    10. '<|end|>' → logprob: -10.434712409973145

Token 12: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004117938689887524
    2. 'range' → logprob: -5.504117965698242
    3. ' ' → logprob: -10.379117965698242
    4. ')' → logprob: -12.879117965698242
    5. '	range' → logprob: -13.004117965698242
    6. '(range' → logprob: -13.504117965698242
    7. ' xrange' → logprob: -13.879117965698242
    8. '```' → logprob: -15.254117965698242
    9. ' n' → logprob: -15.504117965698242
    10. ' ' → logprob: -15.754117965698242

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023854559287428856
    2. ' (' → logprob: -4.148854732513428
    3. '(n' → logprob: -4.898854732513428
    4. '(range' → logprob: -8.77385425567627
    5. '(len' → logprob: -9.27385425567627
    6. '(
' → logprob: -10.52385425567627
    7. '(i' → logprob: -10.77385425567627
    8. ' ' → logprob: -10.89885425567627
    9. '```' → logprob: -12.02385425567627
    10. ')' → logprob: -13.02385425567627

Token 14: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6362713575363159
    2. 'n' → logprob: -0.7612713575363159
    3. ' n' → logprob: -6.0112714767456055
    4. ' ' → logprob: -7.7612714767456055
    5. '2' → logprob: -8.136271476745605
    6. '0' → logprob: -8.136271476745605
    7. ')' → logprob: -9.761271476745605
    8. '(n' → logprob: -10.136271476745605
    9. '10' → logprob: -10.261271476745605
    10. ')n' → logprob: -10.636271476745605

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005672795232385397
    2. ',n' → logprob: -5.755672931671143
    3. ' ,' → logprob: -6.005672931671143
    4. '(n' → logprob: -10.880672454833984
    5. 'n' → logprob: -12.005672454833984
    6. ' n' → logprob: -14.505672454833984
    7. ' ' → logprob: -14.880672454833984
    8. ',len' → logprob: -14.880672454833984
    9. ',
' → logprob: -15.505672454833984
    10. '(' → logprob: -15.755672454833984

Token 16: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2014607936143875
    2. 'n' → logprob: -1.701460838317871
    3. ' ' → logprob: -10.326460838317871
    4. ')' → logprob: -12.076460838317871
    5. '100' → logprob: -12.951460838317871
    6. ')n' → logprob: -12.951460838317871
    7. '10' → logprob: -13.076460838317871
    8. '(n' → logprob: -13.826460838317871
    9. '	n' → logprob: -14.701460838317871
    10. ' )' → logprob: -15.326460838317871

Token 17: '10' (ID: 702)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01625758223235607
    2. ' n' → logprob: -4.1412577629089355
    3. ' ' → logprob: -9.391257286071777
    4. '10' → logprob: -9.766257286071777
    5. '100' → logprob: -10.016257286071777
    6. '101' → logprob: -11.266257286071777
    7. ')' → logprob: -12.016257286071777
    8. 'int' → logprob: -12.141257286071777
    9. '(n' → logprob: -12.641257286071777
    10. '11' → logprob: -13.141257286071777

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25718167424201965
    2. ')' → logprob: -1.5071816444396973
    3. ':' → logprob: -5.382181644439697
    4. '+' → logprob: -8.132182121276855
    5. '**' → logprob: -8.507182121276855
    6. '):
' → logprob: -10.007182121276855
    7. ',' → logprob: -11.007182121276855
    8. ' ' → logprob: -11.507182121276855
    9. ' ):' → logprob: -11.882182121276855
    10. '*' → logprob: -12.007182121276855

Token 19: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007829842157661915
    2. '   ' → logprob: -5.507829666137695
    3. ' :' → logprob: -6.382829666137695
    4. ' ' → logprob: -6.632829666137695
    5. '):' → logprob: -7.507829666137695
    6. ':
' → logprob: -10.257829666137695
    7. '<|end|>' → logprob: -10.257829666137695
    8. '  ' → logprob: -10.632829666137695
    9. '```' → logprob: -11.507829666137695
    10. '    ' → logprob: -11.507829666137695

Token 20: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35680091381073
    2. ' ' → logprob: -2.3568010330200195
    3. ' if' → logprob: -2.7318010330200195
    4. ' for' → logprob: -3.2318010330200195
    5. ':' → logprob: -3.3568010330200195
    6. '```' → logprob: -3.6068010330200195
    7. '    ' → logprob: -4.3568010330200195
    8. 'if' (adapté à ' if') → logprob: -4.6068010330200195
    9. 'for' → logprob: -5.1068010330200195
    10. '<|end|>' → logprob: -6.3568010330200195

Token 21: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.01981743983924389
    2. 'n' → logprob: -4.019817352294922
    3. ' ' → logprob: -6.769817352294922
    4. ' (' → logprob: -8.644817352294922
    5. ' i' → logprob: -8.894817352294922
    6. '(n' → logprob: -9.019817352294922
    7. '(' → logprob: -10.394817352294922
    8. 'i' → logprob: -11.019817352294922
    9. ' ' → logprob: -11.019817352294922
    10. ')' → logprob: -12.519817352294922

Token 22: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.01285642571747303
    2. '%' → logprob: -4.762856483459473
    3. ' ==' → logprob: -5.512856483459473
    4. '==' → logprob: -9.387856483459473
    5. ' ' → logprob: -9.762856483459473
    6. ' >=' → logprob: -10.637856483459473
    7. '%i' → logprob: -10.762856483459473
    8. '   ' → logprob: -12.762856483459473
    9. '```' → logprob: -14.012856483459473
    10. ' <' → logprob: -14.012856483459473

Token 23: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3487201929092407
    2. ' i' → logprob: -1.2237201929092407
    3. ' ' → logprob: -8.47372055053711
    4. '9' → logprob: -10.34872055053711
    5. '10' → logprob: -11.47372055053711
    6. '	i' → logprob: -11.72372055053711
    7. '2' → logprob: -12.47372055053711
    8. '7' → logprob: -13.09872055053711
    9. '6' → logprob: -13.09872055053711
    10. '%i' → logprob: -13.59872055053711

Token 24: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.038136161863803864
    2. '==' → logprob: -3.2881362438201904
    3. ' ' → logprob: -10.03813648223877
    4. ' =' → logprob: -10.66313648223877
    5. '=' → logprob: -11.16313648223877
    6. ' !=' → logprob: -11.53813648223877
    7. '===' → logprob: -13.53813648223877
    8. ' ===' → logprob: -14.16313648223877
    9. ')' → logprob: -14.78813648223877
    10. '!=' → logprob: -15.03813648223877

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054882507771253586
    2. ' ' → logprob: -2.929882526397705
    3. '   ' → logprob: -16.679882049560547
    4. '=' → logprob: -17.054882049560547
    5. '  ' → logprob: -17.179882049560547
    6. '1' → logprob: -17.804882049560547
    7. '<|end|>' → logprob: -17.804882049560547
    8. ' ' → logprob: -18.742382049560547
    9. '```' → logprob: -18.804882049560547
    10. '    ' → logprob: -19.179882049560547

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04858771339058876
    2. ' ' → logprob: -3.0485877990722656
    3. '  ' → logprob: -15.548587799072266
    4. '1' → logprob: -16.923587799072266
    5. '```' → logprob: -17.736087799072266
    6. ')' → logprob: -18.298587799072266
    7. '   ' → logprob: -18.298587799072266
    8. '=' → logprob: -18.673587799072266
    9. '<|end|>' → logprob: -18.673587799072266
    10. '    ' → logprob: -18.798587799072266

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004766411148011684
    2. ' and' → logprob: -5.379766464233398
    3. 'and' → logprob: -9.754766464233398
    4. ' :' → logprob: -10.129766464233398
    5. '):' → logprob: -10.754766464233398
    6. ':
' → logprob: -10.879766464233398
    7. ':**' → logprob: -12.379766464233398
    8. '   ' → logprob: -13.754766464233398
    9. '>:' → logprob: -14.004766464233398
    10. ')' → logprob: -15.254766464233398

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3939621150493622
    2. ' ' → logprob: -1.8939621448516846
    3. '    ' → logprob: -2.5189621448516846
    4. '   ' → logprob: -2.5189621448516846
    5. '<|end|>' → logprob: -5.8939619064331055
    6. '```' → logprob: -6.5189619064331055
    7. '     
' → logprob: -6.6439619064331055
    8. ' 
' → logprob: -6.7689619064331055
    9. '        
' → logprob: -6.8939619064331055
    10. ' ' → logprob: -7.2689619064331055

Token 29: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.505105197429657
    2. ' found' → logprob: -1.6301052570343018
    3. '   ' → logprob: -2.5051052570343018
    4. ' ' → logprob: -2.8801052570343018
    5. 'print' → logprob: -4.130105018615723
    6. '    ' → logprob: -4.255105018615723
    7. ' print' → logprob: -4.255105018615723
    8. 'found' → logprob: -5.005105018615723
    9. '```' → logprob: -6.255105018615723
    10. ' ' → logprob: -6.630105018615723

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.18017041683197021
    2. ' i' → logprob: -2.6801705360412598
    3. ' not' → logprob: -2.9301705360412598
    4. 'n' → logprob: -3.3051705360412598
    5. 'i' → logprob: -5.68017053604126
    6. ' ' → logprob: -6.55517053604126
    7. 'not' → logprob: -7.93017053604126
    8. ' found' → logprob: -8.180170059204102
    9. ' (' → logprob: -8.180170059204102
    10. ' True' → logprob: -8.555170059204102

Token 31: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4940500855445862
    2. ' ==' → logprob: -1.4940500259399414
    3. ' ' → logprob: -2.6190500259399414
    4. '==' → logprob: -2.7440500259399414
    5. '//' → logprob: -4.494050025939941
    6. ' %' → logprob: -5.494050025939941
    7. ' /' → logprob: -5.619050025939941
    8. ' ' → logprob: -6.494050025939941
    9. ' !=' → logprob: -6.494050025939941
    10. '%' → logprob: -6.744050025939941

Token 32: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016041172668337822
    2. ' i' → logprob: -4.141041278839111
    3. ' ' → logprob: -12.391040802001953
    4. '   ' → logprob: -13.891040802001953
    5. '	i' → logprob: -14.266040802001953
    6. '  ' → logprob: -14.516040802001953
    7. '=i' → logprob: -16.391040802001953
    8. '    ' → logprob: -16.641040802001953
    9. '<|end|>' → logprob: -16.766040802001953
    10. '<|end|>' → logprob: -16.891040802001953

Token 33: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.23746080696582794
    2. '<=' → logprob: -2.1124608516693115
    3. ' ==' → logprob: -3.3624608516693115
    4. ' >=' → logprob: -3.6124608516693115
    5. '==' → logprob: -4.612460613250732
    6. '>=' → logprob: -4.737460613250732
    7. ' in' → logprob: -5.612460613250732
    8. ' !=' → logprob: -6.612460613250732
    9. ' >' → logprob: -6.862460613250732
    10. '*' → logprob: -6.987460613250732

Token 34: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.043647125363349915
    2. '10' → logprob: -3.168647050857544
    3. ' ' → logprob: -7.793647289276123
    4. '100' → logprob: -9.043646812438965
    5. '999' → logprob: -9.543646812438965
    6. '99' → logprob: -10.168646812438965
    7. '   ' → logprob: -13.043646812438965
    8. '1' → logprob: -13.668646812438965
    9. 'n' → logprob: -14.043646812438965
    10. '20' → logprob: -14.793646812438965

Token 35: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00023178798437584192
    2. '10' → logprob: -8.500231742858887
    3. ' ' → logprob: -10.750231742858887
    4. '999' → logprob: -12.625231742858887
    5. '99' → logprob: -13.125231742858887
    6. '100' → logprob: -14.375231742858887
    7. '   ' → logprob: -15.375231742858887
    8. 'n' → logprob: -16.000232696533203
    9. '  ' → logprob: -16.250232696533203
    10. '９' → logprob: -16.562732696533203

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022570860164705664
    2. ' :' → logprob: -8.875226020812988
    3. ':
' → logprob: -9.875226020812988
    4. ' and' → logprob: -10.375226020812988
    5. '):' → logprob: -13.375226020812988
    6. 'and' → logprob: -14.375226020812988
    7. ':**' → logprob: -14.875226020812988
    8. ':return' → logprob: -15.625226020812988
    9. ' :
' → logprob: -15.750226020812988
    10. '>:' → logprob: -16.750225067138672

Token 37: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014901445247232914
    2. '       ' → logprob: -4.264901638031006
    3. '```' → logprob: -8.389901161193848
    4. ':' → logprob: -9.139901161193848
    5. ' found' → logprob: -9.514901161193848
    6. '            
' → logprob: -9.514901161193848
    7. '<|end|>' → logprob: -9.889901161193848
    8. '
' → logprob: -10.014901161193848
    9. '	       ' → logprob: -10.264901161193848
    10. '               ' → logprob: -10.514901161193848

Token 38: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.7010650038719177
    2. '       ' → logprob: -1.2010650634765625
    3. 'found' (adapté à ' found') → logprob: -1.7010650634765625
    4. '           ' → logprob: -4.4510650634765625
    5. '   ' → logprob: -5.5760650634765625
    6. '               ' → logprob: -5.9510650634765625
    7. '	found' → logprob: -6.2010650634765625
    8. 'print' → logprob: -8.951065063476562
    9. 'Found' → logprob: -9.201065063476562
    10. '(found' → logprob: -9.326065063476562

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014166799373924732
    2. '=' → logprob: -4.264166831970215
    3. '=True' → logprob: -12.889166831970215
    4. ' ' → logprob: -14.264166831970215
    5. 's' → logprob: -17.0141658782959
    6. '   ' → logprob: -18.3891658782959
    7. ' =
' → logprob: -18.3891658782959
    8. '＝' → logprob: -18.3891658782959
    9. ' ' → logprob: -18.7641658782959
    10. ' True' → logprob: -18.8891658782959

Token 40: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01814994215965271
    2. ' True' → logprob: -4.0181498527526855
    3. 'Tr' → logprob: -17.518150329589844
    4. '   ' → logprob: -17.643150329589844
    5. '(True' → logprob: -17.893150329589844
    6. '=True' → logprob: -18.143150329589844
    7. 'true' → logprob: -19.518150329589844
    8. 'T' → logprob: -19.893150329589844
    9. 'TRUE' → logprob: -20.518150329589844
    10. '1' → logprob: -20.768150329589844

Token 41: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.3557529857498594e-05
    2. '       ' → logprob: -11.75002384185791
    3. 'print' → logprob: -11.87502384185791
    4. 'break' → logprob: -13.12502384185791
    5. '               ' → logprob: -13.62502384185791
    6. '		' → logprob: -13.62502384185791
    7. '```' → logprob: -13.75002384185791
    8. '<|end|>' → logprob: -14.12502384185791
    9. '            
' → logprob: -14.25002384185791
    10. '   ' → logprob: -14.25002384185791

Token 42: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012642296496778727
    2. '       ' → logprob: -10.000126838684082
    3. 'print' → logprob: -10.250126838684082
    4. '               ' → logprob: -11.500126838684082
    5. '   ' → logprob: -11.750126838684082
    6. 'break' → logprob: -12.125126838684082
    7. '\n' → logprob: -12.125126838684082
    8. '<|end|>' → logprob: -12.375126838684082
    9. '```' → logprob: -12.500126838684082
    10. '		' → logprob: -12.875126838684082

Token 43: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2613629400730133
    2. '           ' → logprob: -1.636362910270691
    3. ' break' → logprob: -3.8863630294799805
    4. 'print' → logprob: -4.3863630294799805
    5. '       ' → logprob: -6.2613630294799805
    6. '   ' → logprob: -8.01136302947998
    7. '	break' → logprob: -10.13636302947998
    8. ' print' → logprob: -10.63636302947998
    9. '```' → logprob: -11.13636302947998
    10. '               ' → logprob: -11.88636302947998

Token 44: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1381772756576538
    2. 'if' → logprob: -2.5131773948669434
    3. 'i' → logprob: -4.513177394866943
    4. ')' → logprob: -5.388177394866943
    5. 'n' → logprob: -5.388177394866943
    6. ':' → logprob: -5.388177394866943
    7. ' if' → logprob: -5.638177394866943
    8. 'else' → logprob: -5.763177394866943
    9. '   ' → logprob: -5.888177394866943
    10. ' ' → logprob: -5.888177394866943

Token 45: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010550802107900381
    2. 'if' → logprob: -7.1260552406311035
    3. ' print' → logprob: -9.501054763793945
    4. 'p' → logprob: -10.001054763793945
    5. 'i' → logprob: -10.376054763793945
    6. '```' → logprob: -10.751054763793945
    7. ':' → logprob: -10.876054763793945
    8. '#' → logprob: -11.001054763793945
    9. ')' → logprob: -11.126054763793945
    10. 'n' → logprob: -11.626054763793945

Token 46: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.0015271214069798589
    2. 'found' → logprob: -6.501527309417725
    3. ' not' → logprob: -10.626526832580566
    4. '(found' → logprob: -14.876526832580566
    5. '	found' → logprob: -15.751526832580566
    6. 'not' → logprob: -16.751527786254883
    7. ' ' → logprob: -17.501527786254883
    8. '_found' → logprob: -17.876527786254883
    9. ' founded' → logprob: -18.751527786254883
    10. 'Found' → logprob: -19.376527786254883

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.688212614681106e-05
    2. ':
' → logprob: -11.125017166137695
    3. ' :' → logprob: -13.250017166137695
    4. ':**' → logprob: -15.750017166137695
    5. ':

' → logprob: -17.375017166137695
    6. 'print' → logprob: -17.750017166137695
    7. '.' → logprob: -17.875017166137695
    8. ':`' → logprob: -18.375017166137695
    9. ':
' → logprob: -18.375017166137695
    10. '():' → logprob: -18.375017166137695

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0076607041992247105
    2. ' print' → logprob: -5.007660865783691
    3. 'print' → logprob: -7.007660865783691
    4. '```' → logprob: -10.507660865783691
    5. '	print' → logprob: -12.132660865783691
    6. '       ' → logprob: -13.132660865783691
    7. '\' → logprob: -13.507660865783691
    8. '\n' → logprob: -14.007660865783691
    9. '``' → logprob: -14.257660865783691
    10. '`' → logprob: -14.632660865783691

Token 49: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04353482648730278
    2. ' print' → logprob: -3.168534755706787
    3. '   ' → logprob: -7.543534755706787
    4. '```' → logprob: -12.668535232543945
    5. '	print' → logprob: -14.168535232543945
    6. '\' → logprob: -14.418535232543945
    7. '\n' → logprob: -14.668535232543945
    8. '(print' → logprob: -15.543535232543945
    9. '.print' → logprob: -15.668535232543945
    10. 'Print' → logprob: -15.793535232543945

Token 50: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.15427494049072266
    2. '(' → logprob: -2.2792749404907227
    3. '(i' → logprob: -3.7792749404907227
    4. '("("' → logprob: -5.029274940490723
    5. '(":' → logprob: -5.279274940490723
    6. '('' → logprob: -5.279274940490723
    7. '("(' → logprob: -7.529274940490723
    8. '("")' → logprob: -9.529274940490723
    9. '(n' → logprob: -9.654274940490723
    10. '"' → logprob: -9.654274940490723

Token 51: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0006184352096170187
    2. 'YES' → logprob: -8.250617980957031
    3. 'H' → logprob: -9.000617980957031
    4. ' Yes' → logprob: -9.250617980957031
    5. 'Y' → logprob: -9.625617980957031
    6. 'yes' → logprob: -10.625617980957031
    7. 'Yeah' → logprob: -11.375617980957031
    8. '"' → logprob: -12.000617980957031
    9. '_yes' → logprob: -12.000617980957031
    10. 'Easy' → logprob: -12.000617980957031

Token 52: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.38712918758392334
    2. '")' → logprob: -1.1371291875839233
    3. '")
' → logprob: -8.387128829956055
    4. 'else' → logprob: -11.387128829956055
    5. ')' → logprob: -12.012128829956055
    6. ')
' → logprob: -12.512128829956055
    7. '"' → logprob: -12.887128829956055
    8. '")

' → logprob: -13.012128829956055
    9. ')")
' → logprob: -13.512128829956055
    10. ')")' → logprob: -13.512128829956055

Token 53: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.7432603272027336e-06
    2. '```' → logprob: -13.750001907348633
    3. ' else' → logprob: -14.375001907348633
    4. '   ' → logprob: -19.750001907348633
    5. '``' → logprob: -20.750001907348633
    6. 'Else' → logprob: -20.875001907348633
    7. '	else' → logprob: -21.125001907348633
    8. '}else' → logprob: -22.000001907348633
    9. '_else' → logprob: -22.000001907348633
    10. 'elser' → logprob: -22.875001907348633

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00869422685354948
    2. ':
' → logprob: -4.758694171905518
    3. '   ' → logprob: -9.508694648742676
    4. ' :' → logprob: -12.383694648742676
    5. ' :
' → logprob: -14.008694648742676
    6. ':
' → logprob: -15.633694648742676
    7. ':

' → logprob: -16.13369369506836
    8. '```' → logprob: -17.00869369506836
    9. '):' → logprob: -17.38369369506836
    10. 'print' → logprob: -17.38369369506836

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010004170471802354
    2. ' print' → logprob: -7.12600040435791
    3. 'print' → logprob: -8.87600040435791
    4. '    ' → logprob: -10.00100040435791
    5. '```' → logprob: -12.25100040435791
    6. '       ' → logprob: -13.25100040435791
    7. ' ' → logprob: -13.75100040435791
    8. '  ' → logprob: -13.87600040435791
    9. '    
' → logprob: -14.37600040435791
    10. '	print' → logprob: -14.87600040435791

Token 56: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1847771555185318
    2. 'print' (adapté à ' print') → logprob: -1.8097771406173706
    3. '   ' → logprob: -5.30977725982666
    4. '"' → logprob: -10.18477725982666
    5. '    ' → logprob: -11.43477725982666
    6. '```' → logprob: -11.55977725982666
    7. ' ' → logprob: -11.93477725982666
    8. '(print' → logprob: -12.93477725982666
    9. '	print' → logprob: -13.05977725982666
    10. '.print' → logprob: -13.68477725982666

Token 57: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.006716555915772915
    2. '(' → logprob: -5.006716728210449
    3. '('' → logprob: -14.75671672821045
    4. '("")' → logprob: -15.13171672821045
    5. '()' → logprob: -15.38171672821045
    6. '"' → logprob: -16.131715774536133
    7. '(
' → logprob: -16.756715774536133
    8. '("""' → logprob: -17.256715774536133
    9. '("("' → logprob: -17.381715774536133
    10. '(("' → logprob: -19.131715774536133

Token 58: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00026205103495158255
    2. '"No' → logprob: -8.250262260437012
    3. '"' → logprob: -14.875262260437012
    4. ' No' → logprob: -15.000262260437012
    5. '")' → logprob: -17.125261306762695
    6. 'NO' → logprob: -17.250261306762695
    7. '“No' → logprob: -18.625261306762695
    8. 'N' → logprob: -18.750261306762695
    9. '_No' → logprob: -19.625261306762695
    10. '"N' → logprob: -19.875261306762695

Token 59: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -3.011373155459296e-05
    2. ')' → logprob: -10.500030517578125
    3. ')")' → logprob: -13.000030517578125
    4. '"' → logprob: -16.250030517578125
    5. '")
' → logprob: -16.625030517578125
    6. '}")' → logprob: -18.125030517578125
    7. '')' → logprob: -19.000030517578125
    8. '\")' → logprob: -19.125030517578125
    9. '```' → logprob: -19.125030517578125
    10. '`)' → logprob: -19.625030517578125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 57
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 50
Précision stricte (1ère position): 54.39%
Précision adaptée (1ère position): 57.89%
Précision (top 10): 87.72%
================================================================================
