================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import exit, setrecursionlimit, stderr, stdin
from functools import reduce
from itertools import *
from collections import defaultdict, Counter
from bisect import bisect
import functools

def set_large_recursion_limit():
    setrecursionlimit(10**7)

def fast_input():
    return stdin.readline().strip()

def fast_read():
    return int(fast_input())

def fast_reads():
    return [int(x) for x in fast_input().split()]

def get_modulus():
    return 10**6 + 3

def initialize_factorials(mod):
    fact = [1] * mod
    for i in range(1, mod):
        fact[i] = (fact[i-1] * i) % mod
    return fact

def initialize_inverse_factorials(mod, fact):
    invfact = [0] * mod
    invfact[-1] = compute_modular_inverse(fact[-1], mod)
    fill_inverse_factorials(mod, invfact)
    return invfact

def fill_inverse_factorials(mod, invfact):
    for i in range(mod-2, -1, -1):
        invfact[i] = invfact[i+1] * (i+1) % mod

def compute_modular_inverse(n, mod):
    return pow(n, mod-2, mod)

def get_inverse(n, mod):
    return compute_modular_inverse(n, mod)

def handle_zero_x_case():
    return 0

def handle_zero_d_case(x, n, mod):
    return pow(x, n, mod)

def compute_k(x, d, mod):
    return x * get_inverse(d, mod) % mod

def check_overflow_condition(n, k, mod):
    return n + k - 1 >= mod

def handle_overflow_case():
    return 0

def compute_answer(n, k, fact, invfact, d, mod):
    value1 = fact[n + k - 1]
    value2 = invfact[k-1]
    value3 = pow(d, n, mod)
    res = value1 * value2 % mod
    res = res * value3 % mod
    return res

def solve_single_query(x, d, n, fact, invfact, mod):
    if x == 0:
        return handle_zero_x_case()
    if d == 0:
        return handle_zero_d_case(x, n, mod)
    k = compute_k(x, d, mod)
    if check_overflow_condition(n, k, mod):
        return handle_overflow_case()
    return compute_answer(n, k, fact, invfact, d, mod)

def process_queries(q, fact, invfact, mod):
    for _ in range(q):
        x, d, n = fast_reads()
        ans = solve_single_query(x, d, n, fact, invfact, mod)
        print(ans)

def main():
    set_large_recursion_limit()
    mod = get_modulus()
    fact = initialize_factorials(mod)
    invfact = initialize_inverse_factorials(mod, fact)
    q = fast_read()
    process_queries(q, fact, invfact, mod)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' exit' (ID: 10654)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.03340626507997513
    2. ' argv' → logprob: -3.9084062576293945
    3. 'exit' → logprob: -4.6584062576293945
    4. ' exit' → logprob: -6.7834062576293945
    5. 'stdout' → logprob: -6.9084062576293945
    6. 'path' → logprob: -7.7834062576293945
    7. 'stdin' → logprob: -8.033406257629395
    8. 'import' → logprob: -8.408406257629395
    9. 'version' → logprob: -9.533406257629395
    10. 'stderr' → logprob: -10.158406257629395

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.43643444776535034
    2. '(' → logprob: -1.4364345073699951
    3. '\' → logprob: -3.436434507369995
    4. '\n' → logprob: -3.686434507369995
    5. '```' → logprob: -3.686434507369995
    6. 'newline' → logprob: -4.436434268951416
    7. ',' → logprob: -5.561434268951416
    8. '()' → logprob: -5.686434268951416
    9. '<|end|>' → logprob: -6.061434268951416
    10. '
' → logprob: -6.311434268951416

Token 5: ' set' (ID: 920)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.25129786133766174
    2. 'stdout' → logprob: -2.501297950744629
    3. 'version' → logprob: -3.126297950744629
    4. ' argv' → logprob: -3.251297950744629
    5. 'stdin' → logprob: -3.626297950744629
    6. 'set' → logprob: -4.376297950744629
    7. 'stderr' → logprob: -4.626297950744629
    8. 'path' → logprob: -5.751297950744629
    9. ' stdin' → logprob: -6.126297950744629
    10. ' version' → logprob: -6.626297950744629

Token 6: 'rec' (ID: 9285)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.7778209447860718
    2. 'uptools' → logprob: -1.6528209447860718
    3. 's' → logprob: -1.9028209447860718
    4. '_' → logprob: -2.1528210639953613
    5. 'item' → logprob: -3.2778210639953613
    6. 'default' → logprob: -4.277821063995361
    7. 't' → logprob: -4.652821063995361
    8. 'set' → logprob: -5.527821063995361
    9. 'items' → logprob: -5.777821063995361
    10. 'tlement' → logprob: -6.152821063995361

Token 7: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.052605774253606796
    2. 't' → logprob: -3.3026058673858643
    3. 'urs' → logprob: -4.802605628967285
    4. 'ur' → logprob: -6.052605628967285
    5. 'limit' → logprob: -7.677605628967285
    6. 'ord' → logprob: -7.677605628967285
    7. 's' → logprob: -7.677605628967285
    8. 'set' → logprob: -7.927605628967285
    9. 'ords' → logprob: -8.177605628967285
    10. 'ursive' → logprob: -8.302605628967285

Token 8: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.022196341305971146
    2. '_limit' → logprob: -4.647196292877197
    3. 'depth' → logprob: -4.772196292877197
    4. '_depth' → logprob: -6.522196292877197
    5. 'error' → logprob: -7.022196292877197
    6. '_' → logprob: -7.272196292877197
    7. '_error' → logprob: -8.272196769714355
    8. 'set' → logprob: -9.022196769714355
    9. '()' → logprob: -9.647196769714355
    10. ' limit' → logprob: -9.772196769714355

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3353704512119293
    2. '\n' → logprob: -2.0853705406188965
    3. '\' → logprob: -2.5853705406188965
    4. '<|end|>' → logprob: -3.2103705406188965
    5. '
' → logprob: -4.5853705406188965
    6. '(
' → logprob: -5.2103705406188965
    7. ',' → logprob: -5.5853705406188965
    8. '<|end|>' → logprob: -5.7103705406188965
    9. '()' → logprob: -5.8353705406188965
    10. '(set' → logprob: -6.0853705406188965

Token 10: ' stderr' (ID: 65281)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.7002870440483093
    2. 'stdin' → logprob: -1.200287103652954
    3. 'set' → logprob: -2.825287103652954
    4. 'version' → logprob: -3.075287103652954
    5. 'stdout' → logprob: -3.325287103652954
    6. 'stderr' → logprob: -3.825287103652954
    7. 'get' → logprob: -4.075286865234375
    8. 'max' → logprob: -4.700286865234375
    9. ' argv' → logprob: -5.450286865234375
    10. ' stdin' → logprob: -5.575286865234375

Token 11: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8880158066749573
    2. ',' → logprob: -1.3880157470703125
    3. '<|end|>' → logprob: -1.5130157470703125
    4. '\n' → logprob: -3.1380157470703125
    5. '' → logprob: -3.7630157470703125
    6. 'import' → logprob: -4.2630157470703125
    7. '

' → logprob: -5.0130157470703125
    8. '```' → logprob: -5.1380157470703125
    9. ' ' → logprob: -5.5130157470703125
    10. '<|end|>' → logprob: -5.5130157470703125

Token 12: ' stdin' (ID: 75143)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.9881519675254822
    2. 'stdin' → logprob: -1.238152027130127
    3. ' stdin' → logprob: -1.988152027130127
    4. ' stdout' → logprob: -2.363152027130127
    5. 'argv' → logprob: -3.113152027130127
    6. ' argv' → logprob: -3.613152027130127
    7. 'set' → logprob: -4.613152027130127
    8. 'version' → logprob: -4.613152027130127
    9. ' set' → logprob: -4.988152027130127
    10. ' version' → logprob: -5.238152027130127

Token 13: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8058722019195557
    2. '<|end|>' → logprob: -1.4308722019195557
    3. '
' → logprob: -1.6808722019195557
    4. '.' → logprob: -3.0558722019195557
    5. '\n' → logprob: -3.6808722019195557
    6. '' → logprob: -4.430871963500977
    7. 'import' → logprob: -4.555871963500977
    8. '

' → logprob: -4.930871963500977
    9. '<|end|>' → logprob: -5.305871963500977
    10. ' ' → logprob: -5.430871963500977

Token 14: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 15: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.22148768603801727
    2. 'os' → logprob: -1.8464876413345337
    3. ' math' → logprob: -3.8464877605438232
    4. ' threading' → logprob: -5.221487522125244
    5. ' typing' → logprob: -5.346487522125244
    6. 'math' → logprob: -5.846487522125244
    7. 'io' → logprob: -6.471487522125244
    8. ' io' → logprob: -6.971487522125244
    9. ' collections' → logprob: -6.971487522125244
    10. 'typing' → logprob: -7.596487522125244

Token 16: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.16196879744529724
    2. 'import' → logprob: -1.9119688272476196
    3. '_import' → logprob: -6.41196870803833
    4. '_' → logprob: -10.161969184875488
    5. '	import' → logprob: -10.411969184875488
    6. ' ' → logprob: -11.036969184875488
    7. '.' → logprob: -12.536969184875488
    8. ' ' → logprob: -13.036969184875488
    9. ' imports' → logprob: -13.286969184875488
    10. ' importar' → logprob: -13.661969184875488

Token 17: ' reduce' (ID: 10389)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5322242975234985
    2. ' l' → logprob: -1.0322242975234985
    3. 'wrap' → logprob: -3.407224178314209
    4. 'reduce' → logprob: -4.407224178314209
    5. ' wraps' → logprob: -5.282224178314209
    6. 'partial' → logprob: -5.407224178314209
    7. 'cache' → logprob: -7.282224178314209
    8. ' partial' → logprob: -7.907224178314209
    9. ' reduce' → logprob: -8.407224655151367
    10. 'cmp' → logprob: -8.782224655151367

Token 18: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3148763179779053
    2. 'import' → logprob: -1.3148763179779053
    3. '<|end|>' → logprob: -1.3148763179779053
    4. '\n' → logprob: -2.6898763179779053
    5. '\' → logprob: -2.9398763179779053
    6. '
' → logprob: -3.9398763179779053
    7. ' ' → logprob: -4.314876556396484
    8. '' → logprob: -4.564876556396484
    9. '.' → logprob: -5.314876556396484
    10. '<|end|>' → logprob: -5.439876556396484

Token 19: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3635430335998535
    2. 'import' → logprob: -1.6135430335998535
    3. '<|end|>' → logprob: -2.7385430335998535
    4. '```' → logprob: -5.2385430335998535
    5. ' ' → logprob: -5.2385430335998535
    6. '\n' → logprob: -5.2385430335998535
    7. '<|end|>' → logprob: -5.4885430335998535
    8. '[' → logprob: -5.6135430335998535
    9. '\' → logprob: -5.8635430335998535
    10. 'from' → logprob: -6.1135430335998535

Token 20: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8794967532157898
    2. ' itertools' → logprob: -1.2544968128204346
    3. ' operator' → logprob: -1.6294968128204346
    4. 'operator' → logprob: -3.2544968128204346
    5. 'math' → logprob: -3.5044968128204346
    6. ' collections' → logprob: -3.7544968128204346
    7. 'collections' → logprob: -5.6294965744018555
    8. ' os' → logprob: -5.6294965744018555
    9. ' ' → logprob: -6.5044965744018555
    10. 'os' → logprob: -7.1294965744018555

Token 21: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.009973994456231594
    2. 'import' → logprob: -4.634974002838135
    3. '.' → logprob: -8.759973526000977
    4. ' .' → logprob: -10.634973526000977
    5. ' ' → logprob: -11.134973526000977
    6. '.import' → logprob: -11.634973526000977
    7. '	import' → logprob: -12.134973526000977
    8. '<|end|>' → logprob: -12.634973526000977
    9. ' itertools' → logprob: -13.759973526000977
    10. '_import' → logprob: -14.009973526000977

Token 22: ' *
' (ID: 2099)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chain' → logprob: -1.770874261856079
    2. 'count' → logprob: -1.895874261856079
    3. 'chain' → logprob: -2.145874261856079
    4. 'acc' → logprob: -2.270874261856079
    5. 'com' → logprob: -2.645874261856079
    6. 'product' → logprob: -2.895874261856079
    7. ' cycle' → logprob: -3.020874261856079
    8. ' product' → logprob: -3.020874261856079
    9. 'cycle' → logprob: -3.145874261856079
    10. ' accumulate' → logprob: -3.270874261856079

Token 23: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.42698490619659424
    2. ' ' → logprob: -1.6769849061965942
    3. 'from' → logprob: -2.0519847869873047
    4. '<|end|>' → logprob: -4.301984786987305
    5. ',' → logprob: -5.051984786987305
    6. '\n' → logprob: -6.176984786987305
    7. ' 
' → logprob: -6.426984786987305
    8. ' import' → logprob: -6.551984786987305
    9. ' from' → logprob: -7.176984786987305
    10. '*' → logprob: -7.301984786987305

Token 24: ' collections' (ID: 22690)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.4589489698410034
    2. ' math' → logprob: -1.5839489698410034
    3. 'operator' → logprob: -2.458949089050293
    4. 'math' → logprob: -2.833949089050293
    5. ' os' → logprob: -5.583949089050293
    6. ' collections' → logprob: -5.833949089050293
    7. 'collections' → logprob: -5.958949089050293
    8. 'os' → logprob: -6.208949089050293
    9. ' typing' → logprob: -6.333949089050293
    10. ' ' → logprob: -6.333949089050293

Token 25: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.35156962275505066
    2. 'import' → logprob: -1.226569652557373
    3. '<|end|>' → logprob: -6.476569652557373
    4. '.' → logprob: -6.726569652557373
    5. ' ' → logprob: -8.226569175720215
    6. '	import' → logprob: -10.476569175720215
    7. '```' → logprob: -10.601569175720215
    8. ' abc' → logprob: -11.601569175720215
    9. ' defaultdict' → logprob: -11.726569175720215
    10. '_import' → logprob: -11.726569175720215

Token 26: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.0328611359000206
    2. ' abc' → logprob: -3.7828612327575684
    3. ' deque' → logprob: -4.782861232757568
    4. ' ' → logprob: -7.532861232757568
    5. 'deque' → logprob: -8.28286075592041
    6. ' named' → logprob: -8.53286075592041
    7. 'abc' → logprob: -9.40786075592041
    8. ' Counter' → logprob: -9.65786075592041
    9. 'default' → logprob: -10.28286075592041
    10. ' de' → logprob: -11.78286075592041

Token 27: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.20141616463661194
    2. ' deque' → logprob: -1.8264161348342896
    3. 'Counter' → logprob: -4.201416015625
    4. 'named' → logprob: -5.826416015625
    5. ' Counter' → logprob: -6.076416015625
    6. ' named' → logprob: -7.201416015625
    7. 'Ordered' → logprob: -8.326416015625
    8. 'Deque' → logprob: -9.451416015625
    9. 'de' → logprob: -9.701416015625
    10. ' Ordered' → logprob: -10.201416015625

Token 29: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4472218453884125
    2. '
' → logprob: -2.4472217559814453
    3. 'def' → logprob: -2.4472217559814453
    4. '

' → logprob: -3.0722217559814453
    5. 'from' → logprob: -3.4472217559814453
    6. '\n' → logprob: -3.5722217559814453
    7. 'n' → logprob: -3.9472217559814453
    8. ',' → logprob: -4.572221755981445
    9. '#' → logprob: -4.697221755981445
    10. '```' → logprob: -4.822221755981445

Token 31: ' bis' (ID: 7204)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.856289803981781
    2. 'math' → logprob: -1.6062898635864258
    3. ' heap' → logprob: -1.6062898635864258
    4. ' math' → logprob: -1.9812898635864258
    5. 'operator' → logprob: -4.481289863586426
    6. ' operator' → logprob: -4.481289863586426
    7. ' typing' → logprob: -5.481289863586426
    8. 'queue' → logprob: -5.981289863586426
    9. ' queue' → logprob: -6.481289863586426
    10. 'typing' → logprob: -6.606289863586426

Token 32: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.5776860184123507e-06
    2. 'ected' → logprob: -13.50000286102295
    3. 'ec' → logprob: -14.62500286102295
    4. 'e' → logprob: -14.75000286102295
    5. 'ectl' → logprob: -16.375001907348633
    6. 'ecta' → logprob: -17.125001907348633
    7. 'ector' → logprob: -17.375001907348633
    8. '>' → logprob: -17.375001907348633
    9. 'ects' → logprob: -18.125001907348633
    10. 'ection' → logprob: -18.250001907348633

Token 33: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0341230109333992
    2. 'import' → logprob: -3.409122943878174
    3. '<|end|>' → logprob: -8.284123420715332
    4. ' ' → logprob: -9.159123420715332
    5. '	import' → logprob: -10.034123420715332
    6. '_import' → logprob: -10.159123420715332
    7. 'ort' → logprob: -11.159123420715332
    8. '_' → logprob: -11.784123420715332
    9. ' importar' → logprob: -13.534123420715332
    10. ' im' → logprob: -13.534123420715332

Token 34: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.012260387651622295
    2. ' ins' → logprob: -5.012260437011719
    3. 'bis' → logprob: -5.512260437011719
    4. 'ins' → logprob: -6.512260437011719
    5. '_ins' → logprob: -12.512260437011719
    6. ' ' → logprob: -13.137260437011719
    7. '_left' → logprob: -14.387260437011719
    8. '```' → logprob: -15.262260437011719
    9. '.ins' → logprob: -15.637260437011719
    10. ',' → logprob: -16.26226043701172

Token 35: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.512236498361744e-07
    2. 'ected' → logprob: -15.000000953674316
    3. 'e' → logprob: -16.125
    4. 'ec' → logprob: -16.625
    5. 'sect' → logprob: -18.125
    6. 'ects' → logprob: -18.375
    7. 'ector' → logprob: -18.75
    8. 'ection' → logprob: -18.75
    9. 'ectl' → logprob: -18.75
    10. 'ecta' → logprob: -18.75

Token 36: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0669046640396118
    2. ',' → logprob: -1.1919046640396118
    3. '_left' → logprob: -1.4419046640396118
    4. '_right' → logprob: -2.3169045448303223
    5. '.' → logprob: -5.691904544830322
    6. 'ing' → logprob: -5.816904544830322
    7. '```' → logprob: -6.691904544830322
    8. ' ' → logprob: -6.816904544830322
    9. '.ins' → logprob: -7.066904544830322
    10. '2' → logprob: -7.191904544830322

Token 37: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6158959269523621
    2. ',' → logprob: -0.8658959269523621
    3. 'from' → logprob: -4.490895748138428
    4. '```' → logprob: -4.865895748138428
    5. '#' → logprob: -5.490895748138428
    6. ',
' → logprob: -5.865895748138428
    7. '`' → logprob: -6.240895748138428
    8. '_' → logprob: -6.615895748138428
    9. 'def' → logprob: -6.865895748138428
    10. '.' → logprob: -6.990895748138428

Token 38: ' functools' (ID: 142636)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7932380437850952
    2. ' math' → logprob: -0.7932380437850952
    3. ' os' → logprob: -2.5432381629943848
    4. ' ' → logprob: -5.043238162994385
    5. ' itertools' → logprob: -5.418238162994385
    6. ' re' → logprob: -5.543238162994385
    7. ' heap' → logprob: -7.668238162994385
    8. ' functools' → logprob: -7.793238162994385
    9. ' numpy' → logprob: -8.543237686157227
    10. ' json' → logprob: -8.668237686157227

Token 39: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3567203879356384
    2. ' ' → logprob: -1.8567204475402832
    3. '_' → logprob: -3.231720447540283
    4. '\' → logprob: -3.731720447540283
    5. ',' → logprob: -3.856720447540283
    6. '<|end|>' → logprob: -3.981720447540283
    7. 'import' → logprob: -4.356720447540283
    8. '<|end|>' → logprob: -4.731720447540283
    9. '
' → logprob: -5.481720447540283
    10. 'def' → logprob: -6.106720447540283

Token 40: 'def' (ID: 1314)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.4928798973560333
    2. 'def' → logprob: -2.242879867553711
    3. 'import' → logprob: -2.367879867553711
    4. ' ' → logprob: -2.492879867553711
    5. '_' → logprob: -3.242879867553711
    6. 'd' → logprob: -3.867879867553711
    7. '
' → logprob: -4.617879867553711
    8. ',' → logprob: -4.992879867553711
    9. '#' → logprob: -5.242879867553711
    10. ' 
' → logprob: -5.367879867553711

Token 41: ' set' (ID: 920)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04279065504670143
    2. ' main' → logprob: -4.29279088973999
    3. ' solve' → logprob: -4.91779088973999
    4. '_' → logprob: -5.16779088973999
    5. ' dfs' → logprob: -5.79279088973999
    6. ' factorial' → logprob: -5.79279088973999
    7. ' space' → logprob: -6.91779088973999
    8. ' _' → logprob: -7.16779088973999
    9. ' read' → logprob: -7.41779088973999
    10. ' calculate' → logprob: -8.167790412902832

Token 42: '_large' (ID: 114698)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.11326669901609421
    2. '_rec' → logprob: -2.238266706466675
    3. ' recursion' → logprob: -8.238266944885254
    4. '_re' → logprob: -9.488266944885254
    5. '_recursive' → logprob: -9.738266944885254
    6. '	rec' → logprob: -11.363266944885254
    7. ' rec' → logprob: -11.613266944885254
    8. 'recursive' → logprob: -12.488266944885254
    9. 're' → logprob: -13.113266944885254
    10. ' _' → logprob: -13.488266944885254

Token 43: '_rec' (ID: 35314)
  Prédit: '_rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.4378582537174225
    2. '_stack' → logprob: -1.1878582239151
    3. ' _' → logprob: -4.5628581047058105
    4. '_limit' → logprob: -4.6878581047058105
    5. '_depth' → logprob: -4.8128581047058105
    6. 'rec' → logprob: -5.3128581047058105
    7. '_cache' → logprob: -5.3128581047058105
    8. '_recursive' → logprob: -5.5628581047058105
    9. '_' → logprob: -6.3128581047058105
    10. '_max' → logprob: -7.3128581047058105

Token 44: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -8.065608562901616e-05
    2. 'urs' → logprob: -9.750081062316895
    3. 'ursor' → logprob: -12.500081062316895
    4. '_' → logprob: -12.625081062316895
    5. 'ur' → logprob: -12.625081062316895
    6. 'ursive' → logprob: -13.000081062316895
    7. '   ' → logprob: -13.125081062316895
    8. '_limit' → logprob: -13.125081062316895
    9. 'limit' → logprob: -13.250081062316895
    10. '```' → logprob: -13.875081062316895

Token 45: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.00240764650516212
    2. '_depth' → logprob: -6.627407550811768
    3. 'limit' → logprob: -6.877407550811768
    4. '_limits' → logprob: -10.252408027648926
    5. '(limit' → logprob: -12.377408027648926
    6. '_lim' → logprob: -13.377408027648926
    7. '```' → logprob: -13.627408027648926
    8. '_stack' → logprob: -13.627408027648926
    9. '_target' → logprob: -13.877408027648926
    10. '_LIMIT' → logprob: -14.002408027648926

Token 46: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08847050368785858
    2. '():' → logprob: -2.588470458984375
    3. '(:' → logprob: -4.838470458984375
    4. '(limit' → logprob: -7.963470458984375
    5. '(n' → logprob: -8.338470458984375
    6. ':' → logprob: -9.213470458984375
    7. '(value' → logprob: -9.338470458984375
    8. '(max' → logprob: -9.338470458984375
    9. '(size' → logprob: -9.588470458984375
    10. '(num' → logprob: -9.713470458984375

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010608314536511898
    2. '(' → logprob: -4.635608196258545
    3. '(set' → logprob: -8.260608673095703
    4. ':' → logprob: -8.510608673095703
    5. '()' → logprob: -9.010608673095703
    6. '    
' → logprob: -9.385608673095703
    7. '():' → logprob: -10.385608673095703
    8. '    ' → logprob: -10.510608673095703
    9. 'set' → logprob: -10.760608673095703
    10. ' ' → logprob: -11.260608673095703

Token 48: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.5137399435043335
    2. ' set' → logprob: -1.2637399435043335
    3. '   ' → logprob: -2.138740062713623
    4. 'import' → logprob: -6.888740062713623
    5. ' import' → logprob: -9.138739585876465
    6. ' ' → logprob: -10.013739585876465
    7. '	set' → logprob: -10.013739585876465
    8. '```' → logprob: -10.388739585876465
    9. '  ' → logprob: -10.638739585876465
    10. '    ' → logprob: -10.763739585876465

Token 49: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.1002098023891449
    2. '_rec' → logprob: -2.3502097129821777
    3. '_recursive' → logprob: -13.975210189819336
    4. '_rc' → logprob: -14.850210189819336
    5. ' recursion' → logprob: -14.975210189819336
    6. 'rc' → logprob: -15.100210189819336
    7. '_large' → logprob: -15.100210189819336
    8. '_' → logprob: -15.725210189819336
    9. '_r' → logprob: -15.850210189819336
    10. 'r' → logprob: -15.975210189819336

Token 50: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0011280750622972846
    2. 'urs' → logprob: -6.876128196716309
    3. 'rs' → logprob: -9.876128196716309
    4. 'ursive' → logprob: -11.501128196716309
    5. 'ursor' → logprob: -11.626128196716309
    6. 'ors' → logprob: -11.876128196716309
    7. 'limit' → logprob: -12.126128196716309
    8. 'ur' → logprob: -12.376128196716309
    9. '_' → logprob: -12.876128196716309
    10. '_limit' → logprob: -13.126128196716309

Token 51: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0007604343118146062
    2. '_limit' → logprob: -7.250760555267334
    3. 'mit' → logprob: -10.500760078430176
    4. 'imit' → logprob: -11.500760078430176
    5. 't' → logprob: -12.250760078430176
    6. 'it' → logprob: -12.625760078430176
    7. ' limit' → logprob: -13.125760078430176
    8. 'lit' → logprob: -14.000760078430176
    9. 'lim' → logprob: -14.250760078430176
    10. '(limit' → logprob: -14.750760078430176

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.246537173457909e-06
    2. ' (' → logprob: -13.250003814697266
    3. '((' → logprob: -13.250003814697266
    4. '(
' → logprob: -15.625003814697266
    5. '(

' → logprob: -15.875003814697266
    6. '(int' → logprob: -16.250003814697266
    7. '()' → logprob: -16.375003814697266
    8. '('' → logprob: -17.875003814697266
    9. '("("' → logprob: -18.125003814697266
    10. '(max' → logprob: -18.250003814697266

Token 53: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.038478054106235504
    2. '100' → logprob: -3.288478136062622
    3. ' ' → logprob: -7.788477897644043
    4. '300' → logprob: -12.413477897644043
    5. '999' → logprob: -12.663477897644043
    6. '1' → logprob: -13.038477897644043
    7. '900' → logprob: -13.038477897644043
    8. '500' → logprob: -13.163477897644043
    9. '200' → logprob: -13.163477897644043
    10. '(' → logprob: -13.288477897644043

Token 54: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.15874770283699036
    2. '6' → logprob: -2.408747673034668
    3. '**' → logprob: -2.908747673034668
    4. '8' → logprob: -6.533747673034668
    5. '000' → logprob: -7.283747673034668
    6. '9' → logprob: -8.908747673034668
    7. '00' → logprob: -10.658747673034668
    8. '07' → logprob: -11.158747673034668
    9. '5' → logprob: -13.283747673034668
    10. '0' → logprob: -14.408747673034668

Token 55: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.014324389398097992
    2. '9' → logprob: -4.264324188232422
    3. '8' → logprob: -8.764324188232422
    4. '6' → logprob: -12.264324188232422
    5. '**' → logprob: -17.014324188232422
    6. '```' → logprob: -18.139324188232422
    7. '}' → logprob: -19.764324188232422
    8. '+' → logprob: -20.639324188232422
    9. '10' → logprob: -20.889324188232422
    10. '``' → logprob: -21.014324188232422

Token 56: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -15.000000953674316
    4. '))' → logprob: -15.375000953674316
    5. '),' → logprob: -18.625001907348633
    6. ')`' → logprob: -18.750001907348633
    7. ')

' → logprob: -19.000001907348633
    8. ')))' → logprob: -19.625001907348633
    9. ')#' → logprob: -20.000001907348633
    10. ')
' → logprob: -20.125001907348633

Token 57: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02299410291016102
    2. 'def' → logprob: -4.397994041442871
    3. '

' → logprob: -5.397994041442871
    4. ':' → logprob: -6.522994041442871
    5. '\n' → logprob: -6.897994041442871
    6. '\' → logprob: -7.272994041442871
    7. 'newline' → logprob: -7.272994041442871
    8. '    
' → logprob: -8.147994041442871
    9. '<|end|>' → logprob: -8.147994041442871
    10. ' 
' → logprob: -8.522994041442871

Token 58: ' fast' (ID: 5661)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7789283990859985
    2. ' factorial' → logprob: -1.6539283990859985
    3. ' solve' → logprob: -2.028928279876709
    4. ' ' → logprob: -2.778928279876709
    5. ' _' → logprob: -2.778928279876709
    6. '_' → logprob: -3.903928279876709
    7. ' read' → logprob: -4.153928279876709
    8. ' compute' → logprob: -4.903928279876709
    9. ' calculate' → logprob: -5.028928279876709
    10. ' dfs' → logprob: -5.153928279876709

Token 59: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.019773490726947784
    2. '_read' → logprob: -4.644773483276367
    3. 'input' → logprob: -4.894773483276367
    4. '_io' → logprob: -6.519773483276367
    5. 'read' → logprob: -7.644773483276367
    6. '_reader' → logprob: -8.644773483276367
    7. '_in' → logprob: -9.269773483276367
    8. 'io' → logprob: -9.394773483276367
    9. '_' → logprob: -9.894773483276367
    10. '_scan' → logprob: -10.769773483276367

Token 60: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001487140398239717
    2. '():
' → logprob: -9.00014877319336
    3. '()' → logprob: -11.50014877319336
    4. ' ():' → logprob: -11.62514877319336
    5. '(prompt' → logprob: -13.00014877319336
    6. '(' → logprob: -14.00014877319336
    7. '_read' → logprob: -14.25014877319336
    8. '():
' → logprob: -14.75014877319336
    9. '_reader' → logprob: -14.87514877319336
    10. 'read' → logprob: -14.87514877319336

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008322591311298311
    2. 'return' → logprob: -7.7508320808410645
    3. '()' → logprob: -8.750832557678223
    4. ' return' → logprob: -9.000832557678223
    5. '.readline' → logprob: -10.375832557678223
    6. '():' → logprob: -10.750832557678223
    7. ' readline' → logprob: -11.250832557678223
    8. 'data' → logprob: -11.500832557678223
    9. 'import' → logprob: -12.000832557678223
    10. '(stdin' → logprob: -12.375832557678223

Token 62: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31370607018470764
    2. ' return' → logprob: -1.3137060403823853
    3. '   ' → logprob: -7.938705921173096
    4. 'stdin' → logprob: -9.563706398010254
    5. 'import' → logprob: -11.688706398010254
    6. ' ' → logprob: -12.438706398010254
    7. ' stdin' → logprob: -13.063706398010254
    8. '	return' → logprob: -13.563706398010254
    9. '(stdin' → logprob: -14.688706398010254
    10. 'data' → logprob: -15.313706398010254

Token 63: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.12795321643352509
    2. ' stdin' → logprob: -2.127953290939331
    3. '(stdin' → logprob: -7.002953052520752
    4. '.stdin' → logprob: -9.37795352935791
    5. 'input' → logprob: -10.50295352935791
    6. ' input' → logprob: -13.25295352935791
    7. 'stdout' → logprob: -14.50295352935791
    8. 'stderr' → logprob: -15.25295352935791
    9. 'int' → logprob: -15.87795352935791
    10. ' ' → logprob: -16.127952575683594

Token 64: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00013858173042535782
    2. '.read' → logprob: -9.000138282775879
    3. '.buffer' → logprob: -11.375138282775879
    4. '.' → logprob: -13.125138282775879
    5. '.readlines' → logprob: -13.750138282775879
    6. 'read' → logprob: -14.875138282775879
    7. ' readline' → logprob: -16.000139236450195
    8. 'buffer' → logprob: -16.250139236450195
    9. '_read' → logprob: -20.000139236450195
    10. '_buffer' → logprob: -20.750139236450195

Token 65: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004664849489927292
    2. '().' → logprob: -5.379664897918701
    3. '()
' → logprob: -10.879664421081543
    4. ' ()' → logprob: -11.754664421081543
    5. '()\' → logprob: -11.879664421081543
    6. '(' → logprob: -12.379664421081543
    7. '()

' → logprob: -13.004664421081543
    8. '())' → logprob: -14.129664421081543
    9. '()(' → logprob: -14.379664421081543
    10. '()]' → logprob: -14.629664421081543

Token 66: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.005234594456851482
    2. 'rstrip' → logprob: -5.255234718322754
    3. ' strip' → logprob: -14.380234718322754
    4. '_strip' → logprob: -16.130233764648438
    5. 'read' → logprob: -17.255233764648438
    6. '-strip' → logprob: -17.880233764648438
    7. 'decode' → logprob: -18.130233764648438
    8. '(strip' → logprob: -18.255233764648438
    9. 'split' → logprob: -18.380233764648438
    10. 'rst' → logprob: -19.005233764648438

Token 67: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20159459114074707
    2. '(' → logprob: -1.701594591140747
    3. '(
' → logprob: -9.826594352722168
    4. '(\' → logprob: -10.201594352722168
    5. '()
' → logprob: -10.326594352722168
    6. '('' → logprob: -11.826594352722168
    7. '().' → logprob: -11.951594352722168
    8. '()\' → logprob: -11.951594352722168
    9. '(

' → logprob: -12.076594352722168
    10. '()`' → logprob: -12.576594352722168

Token 68: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8863462805747986
    2. '
' → logprob: -1.0113463401794434
    3. 'd' → logprob: -2.2613463401794434
    4. '#' → logprob: -2.7613463401794434
    5. '\' → logprob: -3.5113463401794434
    6. '\n' → logprob: -4.636346340179443
    7. 'n' → logprob: -5.761346340179443
    8. 'a' → logprob: -5.761346340179443
    9. '

' → logprob: -5.886346340179443
    10. '(' → logprob: -6.261346340179443

Token 69: ' fast' (ID: 5661)
  Prédit: ' fast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fast' → logprob: -0.37800025939941406
    2. '_' → logprob: -1.753000259399414
    3. ' main' → logprob: -3.128000259399414
    4. ' factorial' → logprob: -3.378000259399414
    5. ' ' → logprob: -4.378000259399414
    6. ' _' → logprob: -5.378000259399414
    7. '_fast' → logprob: -5.378000259399414
    8. ' map' → logprob: -5.503000259399414
    9. ' max' → logprob: -5.503000259399414
    10. 'fast' → logprob: -6.003000259399414

Token 70: '_read' (ID: 14291)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22148653864860535
    2. '_input' → logprob: -1.8464865684509277
    3. '_output' → logprob: -3.3464865684509277
    4. '_split' → logprob: -6.721486568450928
    5. '_write' → logprob: -6.846486568450928
    6. '_space' → logprob: -7.471486568450928
    7. '_char' → logprob: -7.971486568450928
    8. '_string' → logprob: -8.09648609161377
    9. '_in' → logprob: -8.72148609161377
    10. '_int' → logprob: -8.84648609161377

Token 71: '():
' (ID: 8595)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.09718120098114014
    2. 'int' → logprob: -2.4721813201904297
    3. '()' → logprob: -5.34718132019043
    4. 'ln' → logprob: -6.34718132019043
    5. 'lines' → logprob: -7.34718132019043
    6. '_int' → logprob: -7.84718132019043
    7. '_line' → logprob: -7.84718132019043
    8. 'lin' → logprob: -8.97218132019043
    9. 'l' → logprob: -9.84718132019043
    10. 'li' → logprob: -10.84718132019043

Token 72: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15633557736873627
    2. 'int' → logprob: -2.2813355922698975
    3. '   ' → logprob: -4.031335353851318
    4. ' ()' → logprob: -4.406335353851318
    5. ')' → logprob: -5.031335353851318
    6. 'map' → logprob: -7.281335353851318
    7. '())' → logprob: -7.531335353851318
    8. ' ' → logprob: -7.656335353851318
    9. 's' → logprob: -7.781335353851318
    10. 'return' → logprob: -7.781335353851318

Token 73: ' return' (ID: 622)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.8248540163040161
    2. 'int' → logprob: -1.6998540163040161
    3. 'return' (adapté à ' return') → logprob: -1.8248540163040161
    4. ' return' → logprob: -1.9498540163040161
    5. 'map' → logprob: -3.1998538970947266
    6. ' int' → logprob: -4.324853897094727
    7. ' list' → logprob: -4.824853897094727
    8. 'list' → logprob: -5.324853897094727
    9. 'stdin' → logprob: -5.949853897094727
    10. '   ' → logprob: -6.199853897094727

Token 74: ' int' (ID: 677)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6197450757026672
    2. ' int' → logprob: -1.7447450160980225
    3. ' list' → logprob: -1.9947450160980225
    4. 'int' → logprob: -2.1197450160980225
    5. 'map' → logprob: -4.119745254516602
    6. 'list' → logprob: -4.869745254516602
    7. ' stdin' → logprob: -5.869745254516602
    8. ' input' → logprob: -6.619745254516602
    9. ' ' → logprob: -7.244745254516602
    10. 'stdin' → logprob: -7.619745254516602

Token 75: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.4792681038379669
    2. '(' → logprob: -0.9792680740356445
    3. '(stdin' → logprob: -5.3542680740356445
    4. '()' → logprob: -7.8542680740356445
    5. '(input' → logprob: -10.479268074035645
    6. '(
' → logprob: -11.979268074035645
    7. 'fast' → logprob: -12.104268074035645
    8. '(st' → logprob: -12.479268074035645
    9. ' (' → logprob: -12.854268074035645
    10. '('' → logprob: -13.604268074035645

Token 76: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.0001652796781854704
    2. '(ast' → logprob: -8.750164985656738
    3. 'fast' → logprob: -13.250164985656738
    4. ' ast' → logprob: -13.250164985656738
    5. '_ast' → logprob: -13.375164985656738
    6. 'irst' → logprob: -14.250164985656738
    7. '_fast' → logprob: -15.750164985656738
    8. '.ast' → logprob: -15.875164985656738
    9. '()' → logprob: -15.875164985656738
    10. '(' → logprob: -16.000165939331055

Token 77: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00043519894825294614
    2. '_' → logprob: -8.000434875488281
    3. '_read' → logprob: -9.250434875488281
    4. '_in' → logprob: -13.000434875488281
    5. 'input' → logprob: -14.500434875488281
    6. '_)' → logprob: -15.875434875488281
    7. '_i' → logprob: -16.25043487548828
    8. ' _' → logprob: -16.25043487548828
    9. ')' → logprob: -16.37543487548828
    10. '__' → logprob: -16.62543487548828

Token 78: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00012594614236149937
    2. '()' → logprob: -9.000125885009766
    3. '()))' → logprob: -14.375125885009766
    4. ' ())' → logprob: -14.375125885009766
    5. '())
' → logprob: -14.500125885009766
    6. ')' → logprob: -14.875125885009766
    7. '();)' → logprob: -16.125125885009766
    8. '()]' → logprob: -16.250125885009766
    9. '().' → logprob: -16.625125885009766
    10. '()),' → logprob: -17.000125885009766

Token 79: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18259212374687195
    2. '
' → logprob: -2.3075921535491943
    3. '\' → logprob: -3.8075921535491943
    4. '

' → logprob: -3.9325921535491943
    5. '\n' → logprob: -4.182591915130615
    6. '#' → logprob: -4.807591915130615
    7. 'n' → logprob: -7.932591915130615
    8. '```' → logprob: -7.932591915130615
    9. '<|end|>' → logprob: -8.307592391967773
    10. '_' → logprob: -8.557592391967773

Token 80: ' fast' (ID: 5661)
  Prédit: ' fast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fast' → logprob: -0.18311387300491333
    2. ' main' → logprob: -2.1831138134002686
    3. ' map' → logprob: -3.8081138134002686
    4. ' factorial' → logprob: -5.058114051818848
    5. 'fast' → logprob: -5.183114051818848
    6. ' input' → logprob: -5.808114051818848
    7. ' list' → logprob: -6.058114051818848
    8. 'main' → logprob: -6.308114051818848
    9. 'range' → logprob: -6.683114051818848
    10. ' solve' → logprob: -6.683114051818848

Token 81: '_reads' (ID: 188480)
  Prédit: '_write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_write' → logprob: -0.33746033906936646
    2. '_read' → logprob: -2.2124602794647217
    3. '_' → logprob: -2.8374602794647217
    4. '_output' → logprob: -3.4624602794647217
    5. '_input' → logprob: -3.5874602794647217
    6. '_array' → logprob: -4.087460517883301
    7. '_split' → logprob: -4.087460517883301
    8. '_list' → logprob: -5.212460517883301
    9. '_print' → logprob: -5.462460517883301
    10. '_map' → logprob: -5.837460517883301

Token 82: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.25770241022109985
    2. '()' → logprob: -1.507702350616455
    3. 's' → logprob: -5.382702350616455
    4. '():
' → logprob: -7.382702350616455
    5. ' ()' → logprob: -8.382702827453613
    6. '()>' → logprob: -9.132702827453613
    7. '()">' → logprob: -10.132702827453613
    8. '()*' → logprob: -10.757702827453613
    9. '():

' → logprob: -10.757702827453613
    10. '()]' → logprob: -11.132702827453613

Token 83: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.024201611056923866
    2. '()' → logprob: -3.7742016315460205
    3. '():
' → logprob: -7.774201393127441
    4. ' ()' → logprob: -8.024201393127441
    5. ' ():' → logprob: -9.024201393127441
    6. '(' → logprob: -9.774201393127441
    7. '[]' → logprob: -12.399201393127441
    8. '().' → logprob: -12.524201393127441
    9. '()[' → logprob: -12.524201393127441
    10. '()>' → logprob: -12.899201393127441

Token 84: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.602333664894104
    2. ' list' → logprob: -1.227333664894104
    3. 'map' → logprob: -2.2273335456848145
    4. ' map' → logprob: -3.1023335456848145
    5. '[' → logprob: -5.2273335456848145
    6. ' [' → logprob: -8.102334022521973
    7. '[]' → logprob: -8.477334022521973
    8. 'lambda' → logprob: -8.727334022521973
    9. '(map' → logprob: -8.852334022521973
    10. '[list' → logprob: -9.477334022521973

Token 85: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2672833502292633
    2. 'list' → logprob: -1.642283320426941
    3. ' map' → logprob: -3.6422834396362305
    4. 'map' → logprob: -4.3922834396362305
    5. '[list' → logprob: -7.0172834396362305
    6. '[' → logprob: -7.1422834396362305
    7. ' [' → logprob: -7.3922834396362305
    8. '[int' → logprob: -9.39228343963623
    9. '[]' → logprob: -11.26728343963623
    10. ' ' → logprob: -11.26728343963623

Token 86: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00013321757433004677
    2. 'fast' → logprob: -9.250133514404297
    3. ' int' → logprob: -10.250133514404297
    4. ']int' → logprob: -15.000133514404297
    5. 'map' → logprob: -15.250133514404297
    6. ' fast' → logprob: -15.750133514404297
    7. '
' → logprob: -15.875133514404297
    8. '	int' → logprob: -15.875133514404297
    9. '  ' → logprob: -15.875133514404297
    10. ' ' → logprob: -16.250133514404297

Token 87: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.02085377648472786
    2. '(i' → logprob: -3.8958537578582764
    3. '(' → logprob: -8.270853996276855
    4. '(s' → logprob: -10.145853996276855
    5. '(token' → logprob: -12.520853996276855
    6. '(a' → logprob: -13.145853996276855
    7. '(n' → logprob: -13.270853996276855
    8. '](' → logprob: -13.645853996276855
    9. '(_)' → logprob: -14.020853996276855
    10. ']' → logprob: -14.020853996276855

Token 88: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00324687035754323
    2. 'for' → logprob: -6.128246784210205
    3. ' for' → logprob: -7.003246784210205
    4. '()' → logprob: -10.003247261047363
    5. 'in' → logprob: -10.128247261047363
    6. ' in' → logprob: -10.503247261047363
    7. ' )' → logprob: -11.128247261047363
    8. '(x' → logprob: -11.253247261047363
    9. '())' → logprob: -13.128247261047363
    10. '	for' → logprob: -13.628247261047363

Token 89: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.030019832774996758
    2. 'for' → logprob: -3.530019760131836
    3. ')' → logprob: -8.530019760131836
    4. '()' → logprob: -10.030019760131836
    5. ' in' → logprob: -11.155019760131836
    6. ' ' → logprob: -12.155019760131836
    7. '	for' → logprob: -12.905019760131836
    8. ']' → logprob: -13.780019760131836
    9. '(x' → logprob: -14.030019760131836
    10. 'fast' → logprob: -14.405019760131836

Token 90: ' x' (ID: 1215)
  Prédit: ' fast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fast' → logprob: -0.0085538225248456
    2. 'fast' → logprob: -5.258553981781006
    3. ' x' → logprob: -5.758553981781006
    4. ' ' → logprob: -9.008553504943848
    5. 'x' → logprob: -11.133553504943848
    6. '_fast' → logprob: -11.633553504943848
    7. ' ' → logprob: -11.758553504943848
    8. '  ' → logprob: -13.758553504943848
    9. 'Fast' → logprob: -14.008553504943848
    10. ' in' → logprob: -14.383553504943848

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022764107212424278
    2. 'in' → logprob: -4.397764205932617
    3. 'fast' → logprob: -5.147764205932617
    4. ' fast' → logprob: -5.522764205932617
    5. ' ' → logprob: -8.397764205932617
    6. ' ' → logprob: -10.022764205932617
    7. '	in' → logprob: -10.022764205932617
    8. '<|end|>' → logprob: -10.772764205932617
    9. '_' → logprob: -11.397764205932617
    10. ' f' → logprob: -12.272764205932617

Token 92: ' fast' (ID: 5661)
  Prédit: ' fast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fast' → logprob: -0.02975570224225521
    2. 'fast' → logprob: -3.5297555923461914
    3. '_fast' → logprob: -13.154755592346191
    4. ' stdin' → logprob: -13.279755592346191
    5. '.fast' → logprob: -14.904755592346191
    6. ' fasta' → logprob: -15.404755592346191
    7. ' ' → logprob: -15.529755592346191
    8. 'stdin' → logprob: -15.654755592346191
    9. ' fas' → logprob: -16.029756546020508
    10. ' ' → logprob: -16.654756546020508

Token 93: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.001264163525775075
    2. '_' → logprob: -6.7512640953063965
    3. 'input' → logprob: -9.751264572143555
    4. '_reads' → logprob: -11.001264572143555
    5. 's' → logprob: -12.501264572143555
    6. '(' → logprob: -12.626264572143555
    7. '(_' → logprob: -12.751264572143555
    8. '_inputs' → logprob: -12.876264572143555
    9. '_in' → logprob: -13.501264572143555
    10. '(input' → logprob: -13.501264572143555

Token 94: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0033765037078410387
    2. '()' → logprob: -5.753376483917236
    3. '()]' → logprob: -8.628376960754395
    4. ' ().' → logprob: -11.628376960754395
    5. '()].' → logprob: -12.753376960754395
    6. ' ()' → logprob: -13.253376960754395
    7. '(' → logprob: -13.378376960754395
    8. '())' → logprob: -13.628376960754395
    9. '()
' → logprob: -13.628376960754395
    10. '().'' → logprob: -13.878376960754395

Token 95: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5332478142227046e-05
    2. 'strip' → logprob: -11.500015258789062
    3. ' split' → logprob: -12.250015258789062
    4. 'rstrip' → logprob: -15.750015258789062
    5. 'spl' → logprob: -15.750015258789062
    6. '(split' → logprob: -16.000015258789062
    7. '.split' → logprob: -18.250015258789062
    8. 'plit' → logprob: -19.750015258789062
    9. 's' → logprob: -20.125015258789062
    10. '_split' → logprob: -20.875015258789062

Token 96: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.000889663933776319
    2. '(' → logprob: -7.625889778137207
    3. '()' → logprob: -8.125889778137207
    4. '('' → logprob: -9.250889778137207
    5. '())' → logprob: -12.500889778137207
    6. ']' → logprob: -12.750889778137207
    7. '()]
' → logprob: -13.500889778137207
    8. '("' → logprob: -14.500889778137207
    9. ']()' → logprob: -15.375889778137207
    10. '()],' → logprob: -15.375889778137207

Token 97: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21550337970256805
    2. ')]' → logprob: -1.9655033349990845
    3. '()]' → logprob: -2.965503454208374
    4. '])' → logprob: -6.590503215789795
    5. ')' → logprob: -7.340503215789795
    6. ']()' → logprob: -8.715503692626953
    7. ' ]' → logprob: -10.590503692626953
    8. '()' → logprob: -11.340503692626953
    9. ')])' → logprob: -11.590503692626953
    10. '())' → logprob: -12.590503692626953

Token 98: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9293816685676575
    2. 'def' → logprob: -0.9293816685676575
    3. '
' → logprob: -1.6793816089630127
    4. '\' → logprob: -4.679381847381592
    5. '#' → logprob: -5.554381847381592
    6. '

' → logprob: -5.554381847381592
    7. '\n' → logprob: -6.054381847381592
    8. '' → logprob: -6.429381847381592
    9. 'n' → logprob: -6.429381847381592
    10. '
' → logprob: -7.804381847381592

Token 99: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5520305037498474
    2. ' fast' → logprob: -0.9270305037498474
    3. ' solve' → logprob: -4.927030563354492
    4. ' is' → logprob: -5.177030563354492
    5. 'main' → logprob: -5.552030563354492
    6. ' factorial' → logprob: -6.177030563354492
    7. ' gcd' → logprob: -6.927030563354492
    8. ' safe' → logprob: -7.177030563354492
    9. ' dfs' → logprob: -7.302030563354492
    10. ' print' → logprob: -7.302030563354492

Token 100: '_mod' (ID: 15325)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9094982147216797
    2. '_input' → logprob: -1.9094982147216797
    3. '_max' → logprob: -2.5344982147216797
    4. '_unique' → logprob: -3.2844982147216797
    5. '_sum' → logprob: -3.4094982147216797
    6. '_array' → logprob: -3.6594982147216797
    7. '_factor' → logprob: -3.7844982147216797
    8. '_prefix' → logprob: -4.28449821472168
    9. '_indices' → logprob: -4.28449821472168
    10. '_value' → logprob: -4.40949821472168

Token 101: 'ulus' (ID: 40006)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0736752599477768
    2. '()' → logprob: -4.198675155639648
    3. 'ulus' → logprob: -4.573675155639648
    4. '_value' → logprob: -4.573675155639648
    5. '():
' → logprob: -4.573675155639648
    6. '<|end|>' → logprob: -5.198675155639648
    7. '_' → logprob: -5.573675155639648
    8. '_factor' → logprob: -5.823675155639648
    9. 'ulo' → logprob: -5.948675155639648
    10. 'ULO' → logprob: -6.573675155639648

Token 102: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0042488775216042995
    2. '(' → logprob: -6.254249095916748
    3. ' ():' → logprob: -6.254249095916748
    4. '()' → logprob: -8.25424861907959
    5. '():
' → logprob: -9.75424861907959
    6. '_' → logprob: -10.00424861907959
    7. ' ()' → logprob: -12.12924861907959
    8. ' (' → logprob: -12.75424861907959
    9. '(":' → logprob: -12.75424861907959
    10. '(:' → logprob: -13.12924861907959

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006221305229701102
    2. ' return' → logprob: -7.500622272491455
    3. 'return' → logprob: -10.500621795654297
    4. '    
' → logprob: -11.125621795654297
    5. ' ' → logprob: -12.375621795654297
    6. '(' → logprob: -12.625621795654297
    7. '    ' → logprob: -12.625621795654297
    8. '   ' → logprob: -12.875621795654297
    9. '<|end|>' → logprob: -13.000621795654297
    10. ' 
' → logprob: -13.250621795654297

Token 104: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.27546095848083496
    2. 'return' (adapté à ' return') → logprob: -1.650460958480835
    3. '   ' → logprob: -3.025460958480835
    4. '100' → logprob: -9.150461196899414
    5. ' ' → logprob: -9.400461196899414
    6. '10' → logprob: -11.025461196899414
    7. '	return' → logprob: -11.275461196899414
    8. '64' → logprob: -11.650461196899414
    9. '42' → logprob: -12.025461196899414
    10. '    
' → logprob: -12.400461196899414

Token 105: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5252830982208252
    2. ' ' → logprob: -1.1502830982208252
    3. '100' → logprob: -2.400283098220825
    4. '(' → logprob: -7.525282859802246
    5. '1' → logprob: -7.900282859802246
    6. ' (' → logprob: -8.275282859802246
    7. '998' → logprob: -8.650282859802246
    8. '999' → logprob: -12.025282859802246
    9. ' ' → logprob: -12.275282859802246
    10. '0' → logprob: -12.400282859802246

Token 106: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.05942141264677048
    2. '100' → logprob: -2.9344213008880615
    3. '(' → logprob: -5.684421539306641
    4. '998' → logprob: -7.309421539306641
    5. ' ' → logprob: -8.30942153930664
    6. 'int' → logprob: -9.43442153930664
    7. '(int' → logprob: -9.68442153930664
    8. '1' → logprob: -9.80942153930664
    9. ' (' → logprob: -11.80942153930664
    10. 'pow' → logprob: -12.18442153930664

Token 107: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.10044518113136292
    2. '**' → logprob: -2.35044527053833
    3. '09' → logprob: -8.850444793701172
    4. '6' → logprob: -10.225444793701172
    5. '+' → logprob: -10.725444793701172
    6. '7' → logprob: -11.600444793701172
    7. '^' → logprob: -11.850444793701172
    8. ' ' → logprob: -11.850444793701172
    9. '00' → logprob: -12.475444793701172
    10. '0' → logprob: -12.725444793701172

Token 108: '6' (ID: 21)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.375
    3. '```' → logprob: -17.625
    4. ' ' → logprob: -18.75
    5. '
' → logprob: -19.125
    6. '10' → logprob: -20.125
    7. '   ' → logprob: -20.375
    8. '19' → logprob: -20.5625
    9. '18' → logprob: -20.625
    10. '}' → logprob: -20.8125

Token 109: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0025176347699016333
    2. '0' → logprob: -6.3775177001953125
    3. ' +' → logprob: -7.8775177001953125
    4. '+
' → logprob: -8.377517700195312
    5. '3' → logprob: -9.252517700195312
    6. '9' → logprob: -10.127517700195312
    7. '4' → logprob: -11.127517700195312
    8. '6' → logprob: -11.127517700195312
    9. '00' → logprob: -12.127517700195312
    10. '+

' → logprob: -12.502517700195312

Token 110: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.001242847996763885
    2. '7' → logprob: -6.751242637634277
    3. '007' → logprob: -10.251242637634277
    4. '0' → logprob: -11.626242637634277
    5. '000' → logprob: -11.626242637634277
    6. '+' → logprob: -11.876242637634277
    7. '003' → logprob: -12.751242637634277
    8. '37' → logprob: -13.126242637634277
    9. ' ' → logprob: -13.251242637634277
    10. '33' → logprob: -13.376242637634277

Token 111: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.6405310816480778e-05
    2. '7' → logprob: -11.250016212463379
    3. '```' → logprob: -14.000016212463379
    4. '+' → logprob: -14.625016212463379
    5. ' ' → logprob: -14.625016212463379
    6. '

' → logprob: -15.375016212463379
    7. '003' → logprob: -15.375016212463379
    8. '   ' → logprob: -15.625016212463379
    9. '37' → logprob: -15.875016212463379
    10. '33' → logprob: -16.000017166137695

Token 112: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46285805106163025
    2. '_' → logprob: -2.087857961654663
    3. '<|end|>' → logprob: -2.462857961654663
    4. 'def' → logprob: -2.837857961654663
    5. ')' → logprob: -3.462857961654663
    6. '#' → logprob: -3.587857961654663
    7. '
' → logprob: -4.587858200073242
    8. '(' → logprob: -4.837858200073242
    9. ' ' → logprob: -5.087858200073242
    10. '=' → logprob: -6.087858200073242

Token 114: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5610172152519226
    2. ' mod' → logprob: -1.3110172748565674
    3. ' get' → logprob: -2.8110172748565674
    4. ' solve' → logprob: -3.5610172748565674
    5. ' modular' → logprob: -3.6860172748565674
    6. 'mod' → logprob: -4.061017036437988
    7. ' fast' → logprob: -5.311017036437988
    8. 'main' → logprob: -5.561017036437988
    9. ' factorial' → logprob: -5.561017036437988
    10. ' compute' → logprob: -5.811017036437988

Token 115: '_factor' (ID: 43757)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.787704586982727
    2. '_mod' → logprob: -1.287704586982727
    3. '_cache' → logprob: -3.1627044677734375
    4. '_' → logprob: -3.1627044677734375
    5. '()' → logprob: -3.2877044677734375
    6. '_map' → logprob: -3.6627044677734375
    7. '():' → logprob: -3.6627044677734375
    8. '_arrays' → logprob: -4.1627044677734375
    9. '_hash' → logprob: -4.5377044677734375
    10. '_data' → logprob: -4.6627044677734375

Token 116: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.16056591272354126
    2. 'ial' → logprob: -1.9105658531188965
    3. 'ialize' → logprob: -8.910566329956055
    4. '```' → logprob: -9.410566329956055
    5. 's' → logprob: -10.160566329956055
    6. '_' → logprob: -10.660566329956055
    7. 'ization' → logprob: -11.035566329956055
    8. '_base' → logprob: -11.785566329956055
    9. 'al' → logprob: -12.035566329956055
    10. '_counts' → logprob: -12.160566329956055

Token 117: '(mod' (ID: 45051)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.41472357511520386
    2. '(' → logprob: -1.7897236347198486
    3. '():' → logprob: -1.7897236347198486
    4. '(size' → logprob: -6.0397233963012695
    5. '(max' → logprob: -6.4147233963012695
    6. '(limit' → logprob: -7.9147233963012695
    7. '(N' → logprob: -8.53972339630127
    8. '(num' → logprob: -8.91472339630127
    9. '()' → logprob: -9.28972339630127
    10. '(m' → logprob: -9.28972339630127

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6359454989433289
    2. '=' → logprob: -0.7609454989433289
    3. 'ulus' → logprob: -6.7609453201293945
    4. '):
' → logprob: -7.2609453201293945
    5. ')' → logprob: -7.5109453201293945
    6. ',' → logprob: -8.510945320129395
    7. '=None' → logprob: -8.510945320129395
    8. ')=' → logprob: -9.260945320129395
    9. ':' → logprob: -9.260945320129395
    10. 'ule' → logprob: -9.635945320129395

Token 119: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23358052968978882
    2. '   ' → logprob: -1.8585805892944336
    3. '(n' → logprob: -3.2335805892944336
    4. ',' → logprob: -5.483580589294434
    5. '():' → logprob: -5.483580589294434
    6. '):' → logprob: -6.608580589294434
    7. ':
' → logprob: -6.608580589294434
    8. '(size' → logprob: -7.733580589294434
    9. ' :' → logprob: -8.233580589294434
    10. '(' → logprob: -9.108580589294434

Token 120: ' fact' (ID: 2840)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3370327353477478
    2. 'fact' (adapté à ' fact') → logprob: -1.9620327949523926
    3. ' factorial' → logprob: -2.9620327949523926
    4. ' fact' → logprob: -3.2120327949523926
    5. 'factor' → logprob: -3.8370327949523926
    6. 'fac' → logprob: -4.212032794952393
    7. ' global' → logprob: -4.837032794952393
    8. ' fac' → logprob: -5.712032794952393
    9. ' max' → logprob: -6.212032794952393
    10. 'global' → logprob: -7.087032794952393

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4567610025405884
    2. 'orial' → logprob: -1.8317610025405884
    3. 's' → logprob: -2.206760883331299
    4. ' =' → logprob: -2.706760883331299
    5. 'or' → logprob: -4.081760883331299
    6. '   ' → logprob: -5.581760883331299
    7. 'ials' → logprob: -5.956760883331299
    8. ',' → logprob: -6.456760883331299
    9. 'ial' → logprob: -6.706760883331299
    10. 'o' → logprob: -6.706760883331299

Token 122: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3868769407272339
    2. '[' → logprob: -1.1368769407272339
    3. ' ' → logprob: -12.761877059936523
    4. '[int' → logprob: -13.886877059936523
    5. '{' → logprob: -15.136877059936523
    6. '=[' → logprob: -15.386877059936523
    7. '1' → logprob: -15.636877059936523
    8. ' ' → logprob: -15.886877059936523
    9. ' defaultdict' → logprob: -16.011877059936523
    10. '[class' → logprob: -16.261877059936523

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. ']' → logprob: -18.875
    4. 'None' → logprob: -19.5
    5. '0' → logprob: -20.25
    6. '```' → logprob: -20.25
    7. '   ' → logprob: -20.875
    8. '  ' → logprob: -20.875
    9. '-' → logprob: -21.375
    10. '[' → logprob: -21.625

Token 124: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007275633979588747
    2. ']
' → logprob: -7.375727653503418
    3. ']*' → logprob: -10.250727653503418
    4. ',' → logprob: -10.375727653503418
    5. ']*(' → logprob: -10.625727653503418
    6. ' ]' → logprob: -12.125727653503418
    7. ']+' → logprob: -13.000727653503418
    8. ']
' → logprob: -13.875727653503418
    9. ']

' → logprob: -14.375727653503418
    10. ']int' → logprob: -14.750727653503418

Token 125: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0579620897769928
    2. ']' → logprob: -2.93296217918396
    3. ',
' → logprob: -6.057961940765381
    4. '*' → logprob: -8.557962417602539
    5. ')' → logprob: -8.932962417602539
    6. 'for' → logprob: -9.307962417602539
    7. ' for' → logprob: -9.557962417602539
    8. ']*' → logprob: -9.682962417602539
    9. ']*(' → logprob: -10.557962417602539
    10. '
' → logprob: -10.682962417602539

Token 126: ' mod' (ID: 1812)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20355211198329926
    2. '(mod' → logprob: -2.078552007675171
    3. '100' → logprob: -2.953552007675171
    4. ' (' → logprob: -5.20355224609375
    5. 'mod' → logprob: -7.57855224609375
    6. '10' → logprob: -7.95355224609375
    7. ' ' → logprob: -8.20355224609375
    8. '(m' → logprob: -9.45355224609375
    9. '1' → logprob: -9.95355224609375
    10. '200' → logprob: -10.57855224609375

Token 127: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03137080743908882
    2. '<|end|>' → logprob: -3.6563708782196045
    3. '<|end|>' → logprob: -6.781370639801025
    4. ' 
' → logprob: -6.906370639801025
    5. '  
' → logprob: -7.406370639801025
    6. '
' → logprob: -7.656370639801025
    7. ',' → logprob: -7.906370639801025
    8. ',
' → logprob: -8.156371116638184
    9. '    
' → logprob: -8.156371116638184
    10. 'for' → logprob: -8.406371116638184

Token 128: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01004929468035698
    2. ' for' → logprob: -5.760049343109131
    3. '   ' → logprob: -6.010049343109131
    4. '    
' → logprob: -6.635049343109131
    5. 'for' → logprob: -7.510049343109131
    6. ' 
' → logprob: -7.635049343109131
    7. '  
' → logprob: -7.760049343109131
    8. '	
' → logprob: -8.010048866271973
    9. '	for' → logprob: -8.260048866271973
    10. '<|end|>' → logprob: -8.510048866271973

Token 129: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00024048985505942255
    2. ' for' → logprob: -8.500240325927734
    3. '   ' → logprob: -10.250240325927734
    4. 'inv' → logprob: -13.625240325927734
    5. '	for' → logprob: -15.750240325927734
    6. 'def' → logprob: -16.375240325927734
    7. '1' → logprob: -16.750240325927734
    8. 'factor' → logprob: -17.625240325927734
    9. 'i' → logprob: -17.750240325927734
    10. 'fact' → logprob: -18.000240325927734

Token 130: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00081487005809322
    2. 'i' → logprob: -7.125814914703369
    3. ' ' → logprob: -12.500814437866211
    4. ' x' → logprob: -12.625814437866211
    5. '	i' → logprob: -13.000814437866211
    6. ' ' → logprob: -15.375814437866211
    7. 'x' → logprob: -15.625814437866211
    8. ' f' → logprob: -16.25081443786621
    9. ' p' → logprob: -16.50081443786621
    10. ' n' → logprob: -16.50081443786621

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007745040114969015
    2. 'in' → logprob: -5.507745265960693
    3. ' ' → logprob: -5.632745265960693
    4. 'n' → logprob: -10.632744789123535
    5. '  ' → logprob: -10.882744789123535
    6. ' i' → logprob: -11.507744789123535
    7. ',' → logprob: -11.507744789123535
    8. 'range' → logprob: -12.257744789123535
    9. '	in' → logprob: -12.632744789123535
    10. '   ' → logprob: -12.632744789123535

Token 132: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006720347795635462
    2. 'range' → logprob: -5.006720542907715
    3. '(range' → logprob: -13.506720542907715
    4. '	range' → logprob: -13.506720542907715
    5. ' xrange' → logprob: -13.506720542907715
    6. ' ' → logprob: -14.131720542907715
    7. 'ange' → logprob: -16.7567195892334
    8. '_range' → logprob: -17.3817195892334
    9. '```' → logprob: -17.6317195892334
    10. 'Range' → logprob: -17.8817195892334

Token 133: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -14.750000953674316
    3. '1' → logprob: -14.875000953674316
    4. '(
' → logprob: -15.875000953674316
    5. ' (' → logprob: -18.25
    6. ' ' → logprob: -18.5
    7. '[' → logprob: -20.75
    8. '(

' → logprob: -21.5
    9. '()' → logprob: -21.875
    10. 'def' → logprob: -23.0

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10072028636932373
    2. '2' → logprob: -2.3507204055786133
    3. ' ' → logprob: -7.600720405578613
    4. '   ' → logprob: -11.600720405578613
    5. '(' → logprob: -12.725720405578613
    6. ')' → logprob: -15.225720405578613
    7. 'mod' → logprob: -15.350720405578613
    8. '```' → logprob: -15.725720405578613
    9. '
' → logprob: -15.788220405578613
    10. '[' → logprob: -16.100719451904297

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004890497075393796
    2. ' ,' → logprob: -7.625489234924316
    3. ',
' → logprob: -14.250489234924316
    4. ' ' → logprob: -15.875489234924316
    5. ',module' → logprob: -16.37548828125
    6. ',m' → logprob: -16.62548828125
    7. ',len' → logprob: -17.87548828125
    8. ' ,
' → logprob: -18.75048828125
    9. ',

' → logprob: -18.75048828125
    10. '‌,' → logprob: -19.00048828125

Token 136: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04858873412013054
    2. ' mod' → logprob: -3.048588752746582
    3. '	mod' → logprob: -14.048588752746582
    4. 'len' → logprob: -15.548588752746582
    5. '(mod' → logprob: -15.673588752746582
    6. '_mod' → logprob: -16.298587799072266
    7. ' ' → logprob: -16.798587799072266
    8. ' len' → logprob: -17.048587799072266
    9. 'moder' → logprob: -18.423587799072266
    10. '```' → logprob: -18.548587799072266

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02329951710999012
    2. '):
' → logprob: -3.7732994556427
    3. ' ):' → logprob: -10.023299217224121
    4. ':' → logprob: -12.148299217224121
    5. ')' → logprob: -14.023299217224121
    6. '):
' → logprob: -14.148299217224121
    7. ' ):
' → logprob: -14.148299217224121
    8. ']:' → logprob: -14.273299217224121
    9. '}:' → logprob: -14.773299217224121
    10. '
' → logprob: -14.773299217224121

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040740106254816055
    2. ' fact' → logprob: -3.5407400131225586
    3. ':' → logprob: -5.040740013122559
    4. '   ' → logprob: -6.415740013122559
    5. 'fact' → logprob: -6.415740013122559
    6. ',' → logprob: -8.165740013122559
    7. ' ' → logprob: -8.540740013122559
    8. '    ' → logprob: -8.915740013122559
    9. '	' → logprob: -9.540740013122559
    10. ':
' → logprob: -9.790740013122559

Token 139: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.12745527923107147
    2. 'fact' (adapté à ' fact') → logprob: -2.127455234527588
    3. '       ' → logprob: -8.252455711364746
    4. '_fact' → logprob: -9.252455711364746
    5. '   ' → logprob: -9.752455711364746
    6. ' factorial' → logprob: -10.002455711364746
    7. '    ' → logprob: -10.627455711364746
    8. '.fact' → logprob: -11.127455711364746
    9. ' i' → logprob: -12.127455711364746
    10. ' ' → logprob: -12.127455711364746

Token 140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.949026571121067e-05
    2. '[' → logprob: -9.250099182128906
    3. ' [' → logprob: -13.250099182128906
    4. '\[' → logprob: -14.500099182128906
    5. '```' → logprob: -14.750099182128906
    6. '[I' → logprob: -15.125099182128906
    7. '   ' → logprob: -17.000099182128906
    8. '
' → logprob: -17.500099182128906
    9. '[index' → logprob: -17.625099182128906
    10. '[
' → logprob: -17.625099182128906

Token 141: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02525993250310421
    2. ']=' → logprob: -3.7752599716186523
    3. '=' → logprob: -6.650259971618652
    4. ' ]' → logprob: -7.400259971618652
    5. ' =' → logprob: -9.525259971618652
    6. ']=(' → logprob: -10.900259971618652
    7. ']={' → logprob: -12.400259971618652
    8. ')' → logprob: -13.275259971618652
    9. ']+=' → logprob: -13.275259971618652
    10. ' ' → logprob: -13.650259971618652

Token 142: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023270871490240097
    2. ' =' → logprob: -3.773270845413208
    3. '*=' → logprob: -10.648270606994629
    4. ' *=' → logprob: -13.898270606994629
    5. '=i' → logprob: -15.648270606994629
    6. ']=' → logprob: -16.398271560668945
    7. ')=' → logprob: -16.523271560668945
    8. '=

' → logprob: -16.648271560668945
    9. '=f' → logprob: -17.023271560668945
    10. '*' → logprob: -17.023271560668945

Token 143: ' (' (ID: 350)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.35309097170829773
    2. ' (' → logprob: -1.9780910015106201
    3. ' fact' → logprob: -2.10309100151062
    4. '(f' → logprob: -3.35309100151062
    5. 'factor' → logprob: -7.353090763092041
    6. '(i' → logprob: -7.478090763092041
    7. '(' → logprob: -7.978090763092041
    8. ' factorial' → logprob: -8.6030912399292
    9. '_fact' → logprob: -8.6030912399292
    10. '.fact' → logprob: -10.2280912399292

Token 144: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.062175389379262924
    2. ' fact' → logprob: -2.8121752738952637
    3. 'i' → logprob: -9.312175750732422
    4. ' i' → logprob: -10.062175750732422
    5. 'factor' → logprob: -10.312175750732422
    6. '_fact' → logprob: -11.187175750732422
    7. '.fact' → logprob: -11.687175750732422
    8. ' ' → logprob: -12.562175750732422
    9. ' factorial' → logprob: -12.687175750732422
    10. '   ' → logprob: -12.687175750732422

Token 145: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. 'i' → logprob: -16.5
    4. '[I' → logprob: -17.5
    5. ')[' → logprob: -17.75
    6. ' [' → logprob: -18.25
    7. '[
' → logprob: -18.75
    8. '
' → logprob: -18.875
    9. ')' → logprob: -19.375
    10. '[-' → logprob: -19.5

Token 146: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03006216324865818
    2. '[i' → logprob: -3.530062198638916
    3. '[-' → logprob: -8.155061721801758
    4. ']' → logprob: -11.655061721801758
    5. ' -' → logprob: -11.655061721801758
    6. '[' → logprob: -12.530061721801758
    7. 'i' → logprob: -13.655061721801758
    8. '[
' → logprob: -14.280061721801758
    9. '-i' → logprob: -14.905061721801758
    10. '```' → logprob: -15.155061721801758

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -11.000021934509277
    3. ']' → logprob: -12.625021934509277
    4. '<|end|>' → logprob: -14.500021934509277
    5. '```' → logprob: -14.875021934509277
    6. '
' → logprob: -15.125021934509277
    7. ')' → logprob: -16.12502098083496
    8. '   ' → logprob: -16.68752098083496
    9. ' ]' → logprob: -17.06252098083496
    10. 'i' → logprob: -17.12502098083496

Token 148: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4758433699607849
    2. '*' → logprob: -0.9758433699607849
    3. '*i' → logprob: -6.35084342956543
    4. ' ' → logprob: -11.35084342956543
    5. ' ' → logprob: -12.10084342956543
    6. '**' → logprob: -14.22584342956543
    7. '*
' → logprob: -15.22584342956543
    8. '   ' → logprob: -15.60084342956543
    9. ' **' → logprob: -15.60084342956543
    10. ')' → logprob: -15.85084342956543

Token 149: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3140227496623993
    2. ' *' → logprob: -1.3140227794647217
    3. '*i' → logprob: -7.189022541046143
    4. ' ' → logprob: -12.9390230178833
    5. ' ' → logprob: -13.0640230178833
    6. '**' → logprob: -14.3140230178833
    7. '*object' → logprob: -15.6890230178833
    8. '*
' → logprob: -16.189022064208984
    9. '   ' → logprob: -17.064022064208984
    10. '*j' → logprob: -17.064022064208984

Token 150: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2519298195838928
    2. 'i' → logprob: -1.501929759979248
    3. '	i' → logprob: -14.626930236816406
    4. ')i' → logprob: -16.126930236816406
    5. ' ' → logprob: -16.376930236816406
    6. ')' → logprob: -17.126930236816406
    7. ' ' → logprob: -17.376930236816406
    8. '   ' → logprob: -18.126930236816406
    9. '*i' → logprob: -18.251930236816406
    10. '(i' → logprob: -18.501930236816406

Token 151: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031901898328214884
    2. ')%' → logprob: -5.753190040588379
    3. ' )' → logprob: -11.378190040588379
    4. '%' → logprob: -14.128190040588379
    5. ')
' → logprob: -16.128190994262695
    6. ')#' → logprob: -16.503190994262695
    7. ')`' → logprob: -17.003190994262695
    8. '%)' → logprob: -17.378190994262695
    9. ')

' → logprob: -17.753190994262695
    10. '),' → logprob: -18.003190994262695

Token 152: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3921382427215576
    2. '%' → logprob: -1.7671382427215576
    3. ')' → logprob: -1.8921382427215576
    4. ')%' → logprob: -6.267138481140137
    5. ' )' → logprob: -7.017138481140137
    6. ' ' → logprob: -11.142138481140137
    7. '%i' → logprob: -12.642138481140137
    8. ' %)' → logprob: -12.892138481140137
    9. '%)' → logprob: -13.642138481140137
    10. ' ' → logprob: -14.017138481140137

Token 153: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.126930832862854
    2. 'mod' → logprob: -2.1269307136535645
    3. '(mod' → logprob: -13.126931190490723
    4. '	mod' → logprob: -14.376931190490723
    5. ' ' → logprob: -16.126930236816406
    6. ' ' → logprob: -16.751930236816406
    7. '```' → logprob: -17.001930236816406
    8. '_mod' → logprob: -17.251930236816406
    9. ' мод' → logprob: -18.876930236816406
    10. '`' → logprob: -19.251930236816406

Token 154: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46646246314048767
    2. '<|end|>' → logprob: -1.46646249294281
    3. '
' → logprob: -2.3414623737335205
    4. '	return' → logprob: -4.4664626121521
    5. 'return' → logprob: -4.7164626121521
    6. ' return' → logprob: -4.9664626121521
    7. ')' → logprob: -4.9664626121521
    8. '<|end|>' → logprob: -5.5914626121521
    9. ' ' → logprob: -5.7164626121521
    10. ':return' → logprob: -6.4664626121521

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0140307005494833
    2. '
' → logprob: -5.014030933380127
    3. '	return' → logprob: -6.139030933380127
    4. '<|end|>' → logprob: -6.264030933380127
    5. 'return' → logprob: -6.764030933380127
    6. ' ' → logprob: -7.264030933380127
    7. ' return' → logprob: -7.514030933380127
    8. '    
' → logprob: -7.764030933380127
    9. ':return' → logprob: -9.889030456542969
    10. '.' → logprob: -10.014030456542969

Token 156: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08725348114967346
    2. 'return' (adapté à ' return') → logprob: -2.7122535705566406
    3. ' return' → logprob: -4.337253570556641
    4. '	return' → logprob: -6.087253570556641
    5. '<|end|>' → logprob: -7.087253570556641
    6. ' ' → logprob: -7.337253570556641
    7. '
' → logprob: -9.21225357055664
    8. ':return' → logprob: -9.46225357055664
    9. '    
' → logprob: -9.83725357055664
    10. ')' → logprob: -11.21225357055664

Token 157: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.20141568779945374
    2. ' fact' → logprob: -1.7014156579971313
    3. 'factor' → logprob: -13.576416015625
    4. '_fact' → logprob: -14.451416015625
    5. 'fac' → logprob: -15.701416015625
    6. ' fakt' → logprob: -15.826416015625
    7. 'facts' → logprob: -15.826416015625
    8. ' factorial' → logprob: -16.576416015625
    9. ' facto' → logprob: -16.951416015625
    10. '.fact' → logprob: -17.201416015625

Token 158: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05124128982424736
    2. '<|end|>' → logprob: -3.801241397857666
    3. '
' → logprob: -4.051241397857666
    4. '#' → logprob: -5.551241397857666
    5. '_' → logprob: -6.426241397857666
    6. ')' → logprob: -6.926241397857666
    7. ',' → logprob: -7.176241397857666
    8. '

' → logprob: -7.301241397857666
    9. '```' → logprob: -7.551241397857666
    10. '*' → logprob: -8.301240921020508

Token 160: ' initialize' (ID: 18400)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.33528879284858704
    2. 'mod' → logprob: -1.3352887630462646
    3. ' modular' → logprob: -3.9602887630462646
    4. ' factorial' → logprob: -7.085289001464844
    5. 'inverse' → logprob: -7.460289001464844
    6. ' inverse' → logprob: -7.710289001464844
    7. 'initialize' → logprob: -8.710289001464844
    8. ' initialize' → logprob: -9.085289001464844
    9. 'n' → logprob: -9.460289001464844
    10. ' fast' → logprob: -9.710289001464844

Token 161: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.23813924193382263
    2. '_in' → logprob: -1.738139271736145
    3. '_inv' → logprob: -3.3631391525268555
    4. '_factor' → logprob: -7.1131391525268555
    5. '_' → logprob: -8.113139152526855
    6. 'inverse' → logprob: -9.113139152526855
    7. '_mod' → logprob: -9.613139152526855
    8. 'in' → logprob: -10.113139152526855
    9. 'inv' → logprob: -10.238139152526855
    10. '_com' → logprob: -11.363139152526855

Token 162: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0049352278001606464
    2. 's' → logprob: -5.379935264587402
    3. 'factor' → logprob: -8.629935264587402
    4. '_fact' → logprob: -9.129935264587402
    5. '_mod' → logprob: -11.629935264587402
    6. '_' → logprob: -12.004935264587402
    7. '_f' → logprob: -12.879935264587402
    8. 'fact' → logprob: -13.504935264587402
    9. ' factorial' → logprob: -13.504935264587402
    10. 'es' → logprob: -13.754935264587402

Token 163: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.27783945202827454
    2. 'als' → logprob: -1.5278394222259521
    3. 's' → logprob: -4.027839660644531
    4. 'ial' → logprob: -5.527839660644531
    5. 't' → logprob: -6.652839660644531
    6. '[' → logprob: -7.652839660644531
    7. 'al' → logprob: -7.777839660644531
    8. 'c' → logprob: -7.777839660644531
    9. 'vals' → logprob: -8.277839660644531
    10. '```' → logprob: -8.527839660644531

Token 164: '(mod' (ID: 45051)
  Prédit: '(mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -4.251091377227567e-05
    2. '(' → logprob: -10.500042915344238
    3. ' (' → logprob: -11.250042915344238
    4. '(Mod' → logprob: -13.875042915344238
    5. '(module' → logprob: -14.875042915344238
    6. '(m' → logprob: -15.125042915344238
    7. '_mod' → logprob: -16.375041961669922
    8. '```' → logprob: -16.875041961669922
    9. ' mod' → logprob: -17.250041961669922
    10. '(def' → logprob: -17.625041961669922

Token 165: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06225436180830002
    2. ',' → logprob: -2.8122544288635254
    3. '):
' → logprob: -8.812253952026367
    4. ' ):' → logprob: -9.312253952026367
    5. ')' → logprob: -10.187253952026367
    6. ' ,' → logprob: -12.312253952026367
    7. '):
' → logprob: -13.937253952026367
    8. '   ' → logprob: -14.312253952026367
    9. ':' → logprob: -14.437253952026367
    10. '),' → logprob: -14.937253952026367

Token 166: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.06197440251708031
    2. ' fact' → logprob: -2.811974287033081
    3. 'factor' → logprob: -12.68697452545166
    4. ')' → logprob: -14.06197452545166
    5. '_fact' → logprob: -14.31197452545166
    6. 'fac' → logprob: -14.43697452545166
    7. ' ' → logprob: -14.93697452545166
    8. '   ' → logprob: -15.31197452545166
    9. 'f' → logprob: -15.43697452545166
    10. 'facts' → logprob: -15.56197452545166

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009640395641326904
    2. ',' → logprob: -4.759640216827393
    3. '):
' → logprob: -7.259640216827393
    4. ' ):' → logprob: -8.25964069366455
    5. ')' → logprob: -10.00964069366455
    6. '):
' → logprob: -11.75964069366455
    7. ' ,' → logprob: -12.50964069366455
    8. ':' → logprob: -12.75964069366455
    9. '):

' → logprob: -14.75964069366455
    10. '[]):' → logprob: -15.00964069366455

Token 168: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12495594471693039
    2. ',' → logprob: -3.124955892562866
    3. '   ' → logprob: -3.249955892562866
    4. '):' → logprob: -3.749955892562866
    5. '():' → logprob: -4.874956130981445
    6. ':
' → logprob: -6.374956130981445
    7. '):
' → logprob: -7.249956130981445
    8. '(' → logprob: -7.999956130981445
    9. '():
' → logprob: -8.999956130981445
    10. '[' → logprob: -9.249956130981445

Token 169: ' inv' (ID: 1827)
  Prédit: ' inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.16060997545719147
    2. 'inv' (adapté à ' inv') → logprob: -1.9106099605560303
    3. '   ' → logprob: -8.03561019897461
    4. ' inverse' → logprob: -10.66061019897461
    5. 'inverse' → logprob: -11.03561019897461
    6. ' ' → logprob: -11.16061019897461
    7. 'Inv' → logprob: -13.03561019897461
    8. '_inv' → logprob: -13.53561019897461
    9. '(inv' → logprob: -14.16061019897461
    10. '.inv' → logprob: -14.28561019897461

Token 170: 'fact' (ID: 53534)
  Prédit: '_fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.01229501236230135
    2. 'fact' → logprob: -4.637295246124268
    3. ' =' → logprob: -6.387295246124268
    4. '_factor' → logprob: -7.762295246124268
    5. 'Fact' → logprob: -8.88729476928711
    6. '=' → logprob: -9.26229476928711
    7. '_fac' → logprob: -9.38729476928711
    8. 'f' → logprob: -9.51229476928711
    9. '_f' → logprob: -10.63729476928711
    10. ' fact' → logprob: -12.76229476928711

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326842308044434
    2. '=' → logprob: -1.3132684230804443
    3. '[' → logprob: -12.938268661499023
    4. 's' → logprob: -14.438268661499023
    5. ' ' → logprob: -14.438268661499023
    6. '=[]' → logprob: -14.813268661499023
    7. ',' → logprob: -14.938268661499023
    8. '_' → logprob: -14.938268661499023
    9. '   ' → logprob: -14.938268661499023
    10. ')' → logprob: -15.063268661499023

Token 172: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12692926824092865
    2. ' [' → logprob: -2.12692928314209
    3. ' ' → logprob: -14.37692928314209
    4. '   ' → logprob: -15.12692928314209
    5. '[len' → logprob: -15.25192928314209
    6. '=[' → logprob: -17.626928329467773
    7. '[-' → logprob: -17.626928329467773
    8. '[int' → logprob: -17.751928329467773
    9. '[i' → logprob: -17.876928329467773
    10. ' ' → logprob: -18.001928329467773

Token 173: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -12.25001049041748
    3. '0' → logprob: -12.87501049041748
    4. 'None' → logprob: -13.00001049041748
    5. '[' → logprob: -15.12501049041748
    6. ']' → logprob: -15.50001049041748
    7. '```' → logprob: -16.000009536743164
    8. '(' → logprob: -16.937509536743164
    9. '-' → logprob: -17.437509536743164
    10. '...' → logprob: -17.500009536743164

Token 174: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.7146746763028204e-05
    2. ']*' → logprob: -10.37503719329834
    3. ' ]' → logprob: -12.37503719329834
    4. ',' → logprob: -13.87503719329834
    5. ']*(' → logprob: -14.87503719329834
    6. ' ' → logprob: -16.250036239624023
    7. '   ' → logprob: -16.250036239624023
    8. ')' → logprob: -16.625036239624023
    9. '*' → logprob: -17.125036239624023
    10. ']+' → logprob: -17.750036239624023

Token 175: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6515930891036987
    2. ' *' → logprob: -0.7765930891036987
    3. ']' → logprob: -4.026593208312988
    4. ']*' → logprob: -8.151593208312988
    5. ' ' → logprob: -8.401593208312988
    6. ',' → logprob: -8.401593208312988
    7. ')' → logprob: -9.151593208312988
    8. ' ]' → logprob: -9.526593208312988
    9. 'def' → logprob: -11.526593208312988
    10. '[]' → logprob: -11.901593208312988

Token 176: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.2723104848410003e-05
    2. ' mod' → logprob: -10.875022888183594
    3. '(mod' → logprob: -12.500022888183594
    4. '	mod' → logprob: -18.375022888183594
    5. ' ' → logprob: -20.375022888183594
    6. '(' → logprob: -20.375022888183594
    7. '   ' → logprob: -21.000022888183594
    8. 'moder' → logprob: -21.750022888183594
    9. ' (' → logprob: -21.875022888183594
    10. 'm' → logprob: -21.875022888183594

Token 177: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025009766221046448
    2. '<|end|>' → logprob: -3.775009870529175
    3. '   ' → logprob: -6.650009632110596
    4. '<|end|>' → logprob: -8.150010108947754
    5. '    
' → logprob: -9.775010108947754
    6. '
' → logprob: -10.275010108947754
    7. ',' → logprob: -11.025010108947754
    8. '  
' → logprob: -11.150010108947754
    9. ' 
' → logprob: -11.400010108947754
    10. '[' → logprob: -11.525010108947754

Token 178: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09300120919942856
    2. '<|end|>' → logprob: -2.968001127243042
    3. '   ' → logprob: -3.343001127243042
    4. '    
' → logprob: -7.343001365661621
    5. '  
' → logprob: -7.968001365661621
    6. '<|end|>' → logprob: -8.593001365661621
    7. ' ' → logprob: -8.718001365661621
    8. ',' → logprob: -8.718001365661621
    9. ' 
' → logprob: -9.093001365661621
    10. '[' → logprob: -9.343001365661621

Token 179: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.0028363727033138275
    2. ' inv' → logprob: -6.002836227416992
    3. 'import' → logprob: -8.127836227416992
    4. '   ' → logprob: -10.752836227416992
    5. 'inverse' → logprob: -10.877836227416992
    6. 'fact' → logprob: -12.502836227416992
    7. '_inv' → logprob: -12.627836227416992
    8. 'def' → logprob: -12.752836227416992
    9. 'from' → logprob: -12.877836227416992
    10. '.inv' → logprob: -13.252836227416992

Token 180: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.7954958821064793e-05
    2. '_fact' → logprob: -12.000018119812012
    3. 'f' → logprob: -12.625018119812012
    4. 'fac' → logprob: -12.750018119812012
    5. ' fact' → logprob: -13.125018119812012
    6. 'factor' → logprob: -13.625018119812012
    7. 'fa' → logprob: -14.875018119812012
    8. 'def' → logprob: -15.125018119812012
    9. '```' → logprob: -15.625018119812012
    10. 'frac' → logprob: -16.000017166137695

Token 181: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -2.141186450899113e-05
    2. '=' → logprob: -11.625020980834961
    3. '<|end|>' → logprob: -12.500020980834961
    4. '[
' → logprob: -13.125020980834961
    5. ' =' → logprob: -13.500020980834961
    6. ' [' → logprob: -13.750020980834961
    7. '0' → logprob: -13.875020980834961
    8. '```' → logprob: -14.000020980834961
    9. '=[' → logprob: -14.375020980834961
    10. ' ' → logprob: -15.125020980834961

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001657565007917583
    2. ']' → logprob: -9.375165939331055
    3. '<|end|>' → logprob: -10.250165939331055
    4. ']=' → logprob: -10.875165939331055
    5. ' ' → logprob: -11.625165939331055
    6. '=' → logprob: -12.750165939331055
    7. '```' → logprob: -13.125165939331055
    8. ')' → logprob: -13.250165939331055
    9. 's' → logprob: -13.625165939331055
    10. 'index' → logprob: -14.250165939331055

Token 183: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0033795954659581184
    2. ']=' → logprob: -5.753379821777344
    3. '=' → logprob: -8.628379821777344
    4. ' =' → logprob: -11.628379821777344
    5. ' ]' → logprob: -11.753379821777344
    6. '],' → logprob: -13.003379821777344
    7. ']=(' → logprob: -13.628379821777344
    8. ',' → logprob: -14.128379821777344
    9. ')' → logprob: -14.378379821777344
    10. ']=-' → logprob: -15.128379821777344

Token 184: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38689103722572327
    2. ' =' → logprob: -1.1368910074234009
    3. ',' → logprob: -11.13689136505127
    4. '=int' → logprob: -13.88689136505127
    5. ']=' → logprob: -14.26189136505127
    6. ' ' → logprob: -14.51189136505127
    7. ']' → logprob: -14.63689136505127
    8. '[' → logprob: -14.76189136505127
    9. ')=' → logprob: -15.13689136505127
    10. '=len' → logprob: -15.13689136505127

Token 185: ' compute' (ID: 23864)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5775760412216187
    2. '1' → logprob: -0.8275760412216187
    3. ' pow' → logprob: -6.952576160430908
    4. ' ' → logprob: -7.452576160430908
    5. '(pow' → logprob: -10.45257568359375
    6. '0' → logprob: -11.07757568359375
    7. '   ' → logprob: -11.45257568359375
    8. '  ' → logprob: -11.82757568359375
    9. 'fun' → logprob: -12.07757568359375
    10. '```' → logprob: -12.20257568359375

Token 186: '_mod' (ID: 15325)
  Prédit: '_inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.23920676112174988
    2. '_factor' → logprob: -2.3642067909240723
    3. '_mod' → logprob: -3.1142067909240723
    4. 'mod' → logprob: -3.7392067909240723
    5. 'pow' → logprob: -3.8642067909240723
    6. 'inverse' → logprob: -4.739206790924072
    7. '<|end|>' → logprob: -5.114206790924072
    8. '_pow' → logprob: -5.239206790924072
    9. '_inv' → logprob: -5.364206790924072
    10. ' modular' → logprob: -6.489206790924072

Token 187: 'ular' (ID: 1492)
  Prédit: 'ular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ular' → logprob: -0.849702000617981
    2. 'inv' → logprob: -1.349702000617981
    3. '_inverse' → logprob: -1.849702000617981
    4. 'inverse' → logprob: -2.3497018814086914
    5. 'pow' → logprob: -4.099701881408691
    6. '_inv' → logprob: -4.224701881408691
    7. '-in' → logprob: -4.599701881408691
    8. '-' → logprob: -5.099701881408691
    9. 'exp' → logprob: -6.099701881408691
    10. 'uler' → logprob: -6.349701881408691

Token 188: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.0002137882256647572
    2. '_inv' → logprob: -9.500213623046875
    3. 'inverse' → logprob: -9.625213623046875
    4. 'Inverse' → logprob: -10.500213623046875
    5. '_in' → logprob: -10.875213623046875
    6. '_factor' → logprob: -11.000213623046875
    7. '_reverse' → logprob: -12.625213623046875
    8. '_ex' → logprob: -12.625213623046875
    9. '_pow' → logprob: -13.625213623046875
    10. '_power' → logprob: -14.250213623046875

Token 189: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3338232934474945
    2. '(f' → logprob: -1.333823323249817
    3. '<|end|>' → logprob: -4.333823204040527
    4. ' (' → logprob: -5.208823204040527
    5. '(mod' → logprob: -7.833823204040527
    6. '```' → logprob: -8.333823204040527
    7. '(
' → logprob: -8.458823204040527
    8. '((' → logprob: -8.458823204040527
    9. ' ' → logprob: -8.458823204040527
    10. ')' → logprob: -9.458823204040527

Token 190: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.01244619581848383
    2. 'od' → logprob: -4.512446403503418
    3. 'fact' → logprob: -8.512446403503418
    4. '```' → logprob: -8.887446403503418
    5. '(act' → logprob: -8.887446403503418
    6. 'mod' → logprob: -9.137446403503418
    7. ')' → logprob: -9.262446403503418
    8. '(' → logprob: -9.262446403503418
    9. '
' → logprob: -9.387446403503418
    10. '   ' → logprob: -9.762446403503418

Token 191: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00011093381908722222
    2. '[' → logprob: -9.125110626220703
    3. '[
' → logprob: -13.625110626220703
    4. '-' → logprob: -15.000110626220703
    5. ')' → logprob: -16.625110626220703
    6. '```' → logprob: -16.625110626220703
    7. '   ' → logprob: -16.750110626220703
    8. '
' → logprob: -17.000110626220703
    9. '(-' → logprob: -17.375110626220703
    10. '[m' → logprob: -17.375110626220703

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3795937522663735e-05
    2. ' ' → logprob: -11.12502384185791
    3. '
' → logprob: -13.12502384185791
    4. '```' → logprob: -13.37502384185791
    5. ')' → logprob: -14.18752384185791
    6. '   ' → logprob: -14.37502384185791
    7. ' -' → logprob: -14.68752384185791
    8. '

' → logprob: -14.87502384185791
    9. ',' → logprob: -15.25002384185791
    10. '-' → logprob: -15.25002384185791

Token 193: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012002828530967236
    2. ')' → logprob: -5.012002944946289
    3. ' ,' → logprob: -5.262002944946289
    4. '[' → logprob: -10.512002944946289
    5. ' )' → logprob: -10.887002944946289
    6. ')
' → logprob: -11.387002944946289
    7. ',
' → logprob: -11.637002944946289
    8. '   ' → logprob: -11.762002944946289
    9. ']' → logprob: -12.637002944946289
    10. ',)' → logprob: -13.012002944946289

Token 194: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.016038239002227783
    2. ' mod' → logprob: -4.141038417816162
    3. '	mod' → logprob: -13.016037940979004
    4. '(mod' → logprob: -13.641037940979004
    5. ' ' → logprob: -15.641037940979004
    6. '   ' → logprob: -16.39103889465332
    7. ')' → logprob: -16.89103889465332
    8. '
' → logprob: -17.51603889465332
    9. 'moder' → logprob: -17.51603889465332
    10. '10' → logprob: -17.76603889465332

Token 195: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011779663618654013
    2. ')
' → logprob: -6.751177787780762
    3. '   ' → logprob: -12.501177787780762
    4. ')

' → logprob: -12.876177787780762
    5. ' )' → logprob: -14.001177787780762
    6. ')
' → logprob: -14.876177787780762
    7. 'def' → logprob: -17.126178741455078
    8. ' ' → logprob: -17.126178741455078
    9. ')`' → logprob: -17.126178741455078
    10. ',' → logprob: -17.376178741455078

Token 196: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: ' fill' (ID: 6954)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2720377743244171
    2. ' for' → logprob: -2.0220377445220947
    3. 'for' → logprob: -2.2720377445220947
    4. '
' → logprob: -6.147037982940674
    5. 'def' → logprob: -8.397037506103516
    6. '    
' → logprob: -9.022037506103516
    7. '	for' → logprob: -9.397037506103516
    8. ' ' → logprob: -10.272037506103516
    9. '<|end|>' → logprob: -10.897037506103516
    10. ' 
' → logprob: -10.897037506103516

Token 198: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.5990399718284607
    2. '_inv' → logprob: -1.7240400314331055
    3. '_' → logprob: -1.9740400314331055
    4. '_factor' → logprob: -2.3490400314331055
    5. '_fact' → logprob: -5.2240400314331055
    6. '_in' → logprob: -5.4740400314331055
    7. '=' → logprob: -5.4740400314331055
    8. 'ing' → logprob: -5.5990400314331055
    9. '_down' → logprob: -5.8490400314331055
    10. 'ed' → logprob: -5.8490400314331055

Token 199: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.02190900221467018
    2. 'factor' → logprob: -4.521909236907959
    3. '_fact' → logprob: -5.396909236907959
    4. 'fact' → logprob: -5.521909236907959
    5. 's' → logprob: -6.271909236907959
    6. '_' → logprob: -8.7719087600708
    7. '_inverse' → logprob: -9.7719087600708
    8. 'f' → logprob: -10.1469087600708
    9. '_array' → logprob: -10.3969087600708
    10. 'def' → logprob: -11.0219087600708

Token 200: 'ials' (ID: 16596)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.003764093853533268
    2. 'ials' → logprob: -5.6287641525268555
    3. 'al' → logprob: -9.003764152526855
    4. '   ' → logprob: -11.253764152526855
    5. 's' → logprob: -11.628764152526855
    6. '```' → logprob: -11.878764152526855
    7. 'ls' → logprob: -12.753764152526855
    8. 'ial' → logprob: -13.253764152526855
    9. '(' → logprob: -13.753764152526855
    10. '[' → logprob: -14.003764152526855

Token 201: '(mod' (ID: 45051)
  Prédit: '(inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inv' → logprob: -0.07209386676549911
    2. '(' → logprob: -2.697093963623047
    3. '(mod' → logprob: -7.072093963623047
    4. '(in' → logprob: -7.822093963623047
    5. '(f' → logprob: -8.197093963623047
    6. ' (' → logprob: -8.447093963623047
    7. '(i' → logprob: -9.197093963623047
    8. '   ' → logprob: -9.572093963623047
    9. '_inv' → logprob: -10.197093963623047
    10. '```' → logprob: -10.447093963623047

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014445222914218903
    2. ' ,' → logprob: -6.876444339752197
    3. ')' → logprob: -8.626444816589355
    4. '-' → logprob: -9.251444816589355
    5. '   ' → logprob: -9.501444816589355
    6. ',
' → logprob: -10.626444816589355
    7. ' -' → logprob: -11.251444816589355
    8. ',f' → logprob: -11.501444816589355
    9. ' ' → logprob: -12.501444816589355
    10. '
' → logprob: -12.751444816589355

Token 203: ' inv' (ID: 1827)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.5850874185562134
    2. 'inv' → logprob: -0.9600874185562134
    3. ' fact' → logprob: -3.460087299346924
    4. ' inv' → logprob: -3.585087299346924
    5. '   ' → logprob: -7.960087299346924
    6. 'factor' → logprob: -8.960087776184082
    7. 'facts' → logprob: -10.272587776184082
    8. '```' → logprob: -10.397587776184082
    9. '
' → logprob: -10.522587776184082
    10. ' ' → logprob: -10.710087776184082

Token 204: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -7.469590491382405e-05
    2. ')' → logprob: -10.50007438659668
    3. '_fact' → logprob: -11.12507438659668
    4. ',' → logprob: -11.37507438659668
    5. ' fact' → logprob: -11.87507438659668
    6. 'act' → logprob: -13.12507438659668
    7. 'factor' → logprob: -13.37507438659668
    8. 'fac' → logprob: -13.62507438659668
    9. ')
' → logprob: -14.00007438659668
    10. '```' → logprob: -14.00007438659668

Token 205: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026502134278416634
    2. ' ,' → logprob: -6.127650260925293
    3. ')' → logprob: -7.752650260925293
    4. ',f' → logprob: -10.502650260925293
    5. '   ' → logprob: -12.627650260925293
    6. ' )' → logprob: -13.252650260925293
    7. ',
' → logprob: -14.877650260925293
    8. ',)' → logprob: -15.002650260925293
    9. '),' → logprob: -15.127650260925293
    10. ' ' → logprob: -15.252650260925293

Token 206: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007045102305710316
    2. '
' → logprob: -5.757045269012451
    3. '   ' → logprob: -6.257045269012451
    4. '<|end|>' → logprob: -6.382045269012451
    5. ' def' → logprob: -8.757044792175293
    6. ')' → logprob: -10.382044792175293
    7. '    
' → logprob: -11.257044792175293
    8. 'return' (adapté à ' return') → logprob: -11.382044792175293
    9. '

' → logprob: -11.632044792175293
    10. '```' → logprob: -11.757044792175293

Token 208: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.06201205030083656
    2. ' inv' → logprob: -2.812011957168579
    3. '(inv' → logprob: -10.06201171875
    4. '_inv' → logprob: -14.31201171875
    5. 'inverse' → logprob: -14.93701171875
    6. ' ' → logprob: -15.18701171875
    7. ' inverse' → logprob: -15.93701171875
    8. 'inf' → logprob: -16.68701171875
    9. ' ' → logprob: -16.68701171875
    10. '[' → logprob: -16.68701171875

Token 209: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -2.045823566731997e-05
    2. '_fact' → logprob: -11.250020027160645
    3. 'fac' → logprob: -12.375020027160645
    4. ' fact' → logprob: -14.625020027160645
    5. 'factor' → logprob: -14.625020027160645
    6. 'act' → logprob: -14.875020027160645
    7. 'inv' → logprob: -15.375020027160645
    8. 'foot' → logprob: -15.500020027160645
    9. 'f' → logprob: -16.12502098083496
    10. 'ft' → logprob: -16.25002098083496

Token 210: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007602131459861994
    2. '(' → logprob: -5.257602214813232
    3. '(
' → logprob: -7.257602214813232
    4. '
' → logprob: -7.257602214813232
    5. ' def' → logprob: -7.507602214813232
    6. ':' → logprob: -8.382601737976074
    7. '(def' → logprob: -9.757601737976074
    8. ':def' → logprob: -10.007601737976074
    9. '[' → logprob: -11.257601737976074
    10. '

' → logprob: -11.632601737976074

Token 211: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16255109012126923
    2. 'd' → logprob: -1.9125510454177856
    3. '
' → logprob: -7.162550926208496
    4. '(' → logprob: -7.662550926208496
    5. 'de' → logprob: -7.662550926208496
    6. '(
' → logprob: -8.537550926208496
    7. ':' → logprob: -8.912550926208496
    8. ')' → logprob: -9.412550926208496
    9. ' def' → logprob: -9.537550926208496
    10. '\' → logprob: -10.662550926208496

Token 212: ' fill' (ID: 6954)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.04316498339176178
    2. 'compute' → logprob: -3.1681649684906006
    3. ' fill' → logprob: -8.79316520690918
    4. 'fill' → logprob: -12.16816520690918
    5. ' ' → logprob: -12.66816520690918
    6. '_compute' → logprob: -13.29316520690918
    7. ' set' → logprob: -14.41816520690918
    8. ' calculate' → logprob: -14.73066520690918
    9. ' computer' → logprob: -14.91816520690918
    10. ' def' → logprob: -15.04316520690918

Token 213: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -1.3902033970225602e-05
    2. 'inverse' → logprob: -11.750014305114746
    3. '_in' → logprob: -12.625014305114746
    4. '_inv' → logprob: -13.250014305114746
    5. '_reverse' → logprob: -15.625014305114746
    6. '_' → logprob: -16.00001335144043
    7. '_factor' → logprob: -16.12501335144043
    8. 'Inverse' → logprob: -16.25001335144043
    9. ' inverse' → logprob: -16.25001335144043
    10. '_integer' → logprob: -17.00001335144043

Token 214: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -8.77627644513268e-06
    2. '_fact' → logprob: -11.875008583068848
    3. 'factor' → logprob: -13.625008583068848
    4. '_' → logprob: -15.250008583068848
    5. 'Factor' → logprob: -16.625009536743164
    6. ' factorial' → logprob: -16.750009536743164
    7. '_FACTOR' → logprob: -17.000009536743164
    8. '_inverse' → logprob: -17.125009536743164
    9. '_f' → logprob: -17.875009536743164
    10. '_fraction' → logprob: -18.000009536743164

Token 215: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.00481007993221283
    2. 'als' → logprob: -5.629809856414795
    3. 'c' → logprob: -7.129809856414795
    4. 'act' → logprob: -8.879810333251953
    5. 'ct' → logprob: -10.254810333251953
    6. 'ac' → logprob: -10.254810333251953
    7. 't' → logprob: -10.504810333251953
    8. 'actors' → logprob: -10.504810333251953
    9. '_' → logprob: -10.754810333251953
    10. 'icals' → logprob: -10.879810333251953

Token 216: '(mod' (ID: 45051)
  Prédit: '(mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -4.961759259458631e-06
    2. ' (' → logprob: -13.250004768371582
    3. '(' → logprob: -13.375004768371582
    4. '(m' → logprob: -13.500004768371582
    5. '(Mod' → logprob: -17.1250057220459
    6. ' mod' → logprob: -17.2500057220459
    7. '(mid' → logprob: -17.2500057220459
    8. '(
' → logprob: -17.5000057220459
    9. 'mod' → logprob: -17.6250057220459
    10. '```' → logprob: -17.6250057220459

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.881560041918419e-05
    2. ' ,' → logprob: -10.250039100646973
    3. '   ' → logprob: -12.750039100646973
    4. ',in' → logprob: -16.000038146972656
    5. ',
' → logprob: -16.375038146972656
    6. '):' → logprob: -16.750038146972656
    7. '):
' → logprob: -17.625038146972656
    8. '‌,' → logprob: -17.875038146972656
    9. 'def' → logprob: -18.250038146972656
    10. '‍,' → logprob: -18.250038146972656

Token 218: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.006726856809109449
    2. ' inv' → logprob: -5.0067267417907715
    3. '   ' → logprob: -12.00672721862793
    4. ' ' → logprob: -13.50672721862793
    5. 'inf' → logprob: -13.75672721862793
    6. 'fact' → logprob: -14.50672721862793
    7. '(inv' → logprob: -14.63172721862793
    8. 'inverse' → logprob: -15.00672721862793
    9. '_inv' → logprob: -15.38172721862793
    10. '
' → logprob: -15.38172721862793

Token 219: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -3.650518920039758e-06
    2. ' fact' → logprob: -13.625003814697266
    3. '_fact' → logprob: -14.125003814697266
    4. 'fac' → logprob: -14.875003814697266
    5. ',' → logprob: -15.250003814697266
    6. 'f' → logprob: -15.375003814697266
    7. 'act' → logprob: -15.875003814697266
    8. '
' → logprob: -16.000003814697266
    9. ')' → logprob: -16.000003814697266
    10. '```' → logprob: -16.250003814697266

Token 220: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07918058335781097
    2. '):
' → logprob: -2.7041804790496826
    3. ',' → logprob: -4.704180717468262
    4. '   ' → logprob: -9.829180717468262
    5. ')' → logprob: -9.954180717468262
    6. '):
' → logprob: -10.704180717468262
    7. ' ):' → logprob: -11.454180717468262
    8. ':' → logprob: -12.579180717468262
    9. '):

' → logprob: -13.204180717468262
    10. ' ,' → logprob: -14.204180717468262

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05919785797595978
    2. 'for' → logprob: -3.0591979026794434
    3. ' for' → logprob: -4.559197902679443
    4. '	for' → logprob: -10.309197425842285
    5. ' i' → logprob: -10.809197425842285
    6. 'i' → logprob: -10.934197425842285
    7. 'def' → logprob: -12.184197425842285
    8. '    
' → logprob: -12.559197425842285
    9. '
' → logprob: -13.809197425842285
    10. '   ' → logprob: -14.309197425842285

Token 222: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019834754057228565
    2. '   ' → logprob: -6.251983642578125
    3. ' for' → logprob: -10.501983642578125
    4. 'i' → logprob: -10.626983642578125
    5. 'inv' → logprob: -13.376983642578125
    6. '
' → logprob: -14.501983642578125
    7. '	for' → logprob: -15.001983642578125
    8. 'def' → logprob: -15.376983642578125
    9. 'mod' → logprob: -15.501983642578125
    10. 'global' → logprob: -15.876983642578125

Token 223: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061972394585609436
    2. ' i' → logprob: -2.8119723796844482
    3. ' ' → logprob: -13.186972618103027
    4. 'x' → logprob: -13.436972618103027
    5. '	i' → logprob: -14.186972618103027
    6. '   ' → logprob: -15.061972618103027
    7. '
' → logprob: -16.56197166442871
    8. 'k' → logprob: -16.81197166442871
    9. ' x' → logprob: -16.93697166442871
    10. '  ' → logprob: -16.93697166442871

Token 224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007644728757441044
    2. 'in' → logprob: -4.8826446533203125
    3. '   ' → logprob: -11.007644653320312
    4. ' ' → logprob: -11.882644653320312
    5. ' i' → logprob: -12.382644653320312
    6. ',' → logprob: -12.882644653320312
    7. '	in' → logprob: -13.257644653320312
    8. '
' → logprob: -13.507644653320312
    9. 'range' → logprob: -14.382644653320312
    10. 'mod' → logprob: -14.382644653320312

Token 225: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001145337475463748
    2. 're' → logprob: -7.251145362854004
    3. ' range' → logprob: -7.751145362854004
    4. '(range' → logprob: -13.126145362854004
    5. ' reversed' → logprob: -13.251145362854004
    6. '   ' → logprob: -14.376145362854004
    7. 'reverse' → logprob: -15.501145362854004
    8. '
' → logprob: -16.376144409179688
    9. 'r' → logprob: -16.501144409179688
    10. '	range' → logprob: -16.501144409179688

Token 226: '(mod' (ID: 45051)
  Prédit: '(mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.002568283583968878
    2. '(len' → logprob: -6.002568244934082
    3. 'mod' → logprob: -9.502568244934082
    4. '(' → logprob: -11.877568244934082
    5. 'len' → logprob: -12.377568244934082
    6. '(m' → logprob: -13.002568244934082
    7. '	mod' → logprob: -13.002568244934082
    8. '(inv' → logprob: -13.502568244934082
    9. '(
' → logprob: -15.502568244934082
    10. ' mod' → logprob: -16.1275691986084

Token 227: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014164448715746403
    2. ' -' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.389164924621582
    4. '2' → logprob: -15.764164924621582
    5. '   ' → logprob: -16.514163970947266
    6. '
' → logprob: -16.764163970947266
    7. '1' → logprob: -18.264163970947266
    8. '  ' → logprob: -18.576663970947266
    9. '```' → logprob: -18.826663970947266
    10. '	' → logprob: -19.139163970947266

Token 228: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. '
' → logprob: -13.87500286102295
    3. ' ' → logprob: -14.00000286102295
    4. '3' → logprob: -15.50000286102295
    5. '

' → logprob: -15.87500286102295
    6. '-' → logprob: -16.125001907348633
    7. '1' → logprob: -16.125001907348633
    8. '   ' → logprob: -16.875001907348633
    9. '  ' → logprob: -17.375001907348633
    10. '```' → logprob: -17.562501907348633

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001329287188127637
    2. ' ,' → logprob: -6.62632942199707
    3. ',-' → logprob: -12.87632942199707
    4. '   ' → logprob: -15.12632942199707
    5. ' ,-' → logprob: -15.87632942199707
    6. ',
' → logprob: -16.00132942199707
    7. ' -' → logprob: -16.62632942199707
    8. '-' → logprob: -17.00132942199707
    9. '1' → logprob: -17.25132942199707
    10. '```' → logprob: -17.50132942199707

Token 230: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6953146457672119
    2. '0' → logprob: -1.195314645767212
    3. ' -' → logprob: -1.820314645767212
    4. ' ' → logprob: -3.320314645767212
    5. '   ' → logprob: -8.195314407348633
    6. '  ' → logprob: -10.320314407348633
    7. '    ' → logprob: -10.570314407348633
    8. '
' → logprob: -12.070314407348633
    9. '1' → logprob: -12.445314407348633
    10. '	' → logprob: -12.445314407348633

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.375006675720215
    3. '
' → logprob: -14.625006675720215
    4. '   ' → logprob: -14.750006675720215
    5. '```' → logprob: -15.125006675720215
    6. ' -' → logprob: -15.625006675720215
    7. '0' → logprob: -15.750006675720215
    8. '-' → logprob: -16.1250057220459
    9. '

' → logprob: -16.1875057220459
    10. ',' → logprob: -16.2500057220459

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022296691895462573
    2. '-' → logprob: -9.250223159790039
    3. ',-' → logprob: -9.250223159790039
    4. ' ,' → logprob: -10.500223159790039
    5. '   ' → logprob: -13.625223159790039
    6. '1' → logprob: -14.000223159790039
    7. ' -' → logprob: -14.125223159790039
    8. ' ,-' → logprob: -15.125223159790039
    9. ',
' → logprob: -15.625223159790039
    10. '  ' → logprob: -17.87522315979004

Token 233: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023254914209246635
    2. ' -' → logprob: -3.773254871368408
    3. '   ' → logprob: -12.023255348205566
    4. ' ' → logprob: -13.773255348205566
    5. '  ' → logprob: -14.273255348205566
    6. ',-' → logprob: -14.898255348205566
    7. '	' → logprob: -15.023255348205566
    8. ',' → logprob: -15.523255348205566
    9. '1' → logprob: -15.523255348205566
    10. '-i' → logprob: -15.773255348205566

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. ')' → logprob: -15.875011444091797
    4. '   ' → logprob: -16.750011444091797
    5. '
' → logprob: -17.500011444091797
    6. ',' → logprob: -17.500011444091797
    7. '```' → logprob: -17.875011444091797
    8. '  ' → logprob: -18.187511444091797
    9. '):
' → logprob: -18.250011444091797
    10. 'i' → logprob: -18.500011444091797

Token 235: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16042275726795197
    2. '):' → logprob: -1.9104228019714355
    3. '   ' → logprob: -9.410422325134277
    4. ' ):
' → logprob: -9.910422325134277
    5. ',' → logprob: -10.660422325134277
    6. ')' → logprob: -11.035422325134277
    7. ' ):' → logprob: -11.410422325134277
    8. '):
' → logprob: -11.410422325134277
    9. ':' → logprob: -13.535422325134277
    10. '):

' → logprob: -13.660422325134277

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00445539690554142
    2. 'inv' → logprob: -6.12945556640625
    3. ' inv' → logprob: -6.62945556640625
    4. '   ' → logprob: -7.50445556640625
    5. '(inv' → logprob: -9.25445556640625
    6. '):
' → logprob: -9.75445556640625
    7. '```' → logprob: -9.87945556640625
    8. ',' → logprob: -10.12945556640625
    9. ':' → logprob: -10.50445556640625
    10. ')' → logprob: -10.62945556640625

Token 237: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.07958150655031204
    2. ' inv' → logprob: -2.9545814990997314
    3. '       ' → logprob: -3.8295814990997314
    4. '   ' → logprob: -5.9545817375183105
    5. 'in' → logprob: -10.704581260681152
    6. '_inv' → logprob: -10.954581260681152
    7. ' ' → logprob: -11.704581260681152
    8. '
' → logprob: -11.954581260681152
    9. '    ' → logprob: -12.079581260681152
    10. '(inv' → logprob: -12.204581260681152

Token 238: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -2.339278580620885e-06
    2. '_fact' → logprob: -13.875001907348633
    3. 'fac' → logprob: -15.500001907348633
    4. 'f' → logprob: -15.875001907348633
    5. '[i' → logprob: -16.125001907348633
    6. '```' → logprob: -16.250001907348633
    7. '...' → logprob: -16.375001907348633
    8. ' fact' → logprob: -16.375001907348633
    9. '
' → logprob: -16.625001907348633
    10. '[' → logprob: -16.750001907348633

Token 239: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013119110371917486
    2. '[' → logprob: -9.000131607055664
    3. ' [' → logprob: -13.500131607055664
    4. '[I' → logprob: -13.500131607055664
    5. '```' → logprob: -13.750131607055664
    6. '
' → logprob: -14.125131607055664
    7. '[
' → logprob: -14.500131607055664
    8. '\[' → logprob: -14.500131607055664
    9. '=' → logprob: -14.750131607055664
    10. '[j' → logprob: -15.625131607055664

Token 240: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011011277325451374
    2. ']=' → logprob: -4.636011123657227
    3. '=' → logprob: -6.761011123657227
    4. ')' → logprob: -9.761011123657227
    5. ']=(' → logprob: -11.136011123657227
    6. ' ]' → logprob: -11.636011123657227
    7. ')=' → logprob: -12.011011123657227
    8. ' =' → logprob: -12.011011123657227
    9. ']
' → logprob: -14.011011123657227
    10. ')]' → logprob: -14.386011123657227

Token 241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858827963471413
    2. ' =' → logprob: -3.048588275909424
    3. ']=' → logprob: -15.298588752746582
    4. ')=' → logprob: -15.548588752746582
    5. ']' → logprob: -15.923588752746582
    6. '=(' → logprob: -16.298587799072266
    7. '[' → logprob: -16.798587799072266
    8. ')' → logprob: -16.798587799072266
    9. '=
' → logprob: -17.048587799072266
    10. '=

' → logprob: -17.298587799072266

Token 242: ' inv' (ID: 1827)
  Prédit: '(inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inv' → logprob: -0.03155460208654404
    2. ' (' → logprob: -3.531554698944092
    3. '(in' → logprob: -6.406554698944092
    4. 'inv' → logprob: -9.781554222106934
    5. '(' → logprob: -10.156554222106934
    6. '   ' → logprob: -10.781554222106934
    7. '(int' → logprob: -11.406554222106934
    8. ' inv' → logprob: -11.906554222106934
    9. ' ' → logprob: -12.156554222106934
    10. '(ans' → logprob: -12.781554222106934

Token 243: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.5048530030981055e-06
    2. 'fac' → logprob: -14.500001907348633
    3. '_fact' → logprob: -15.375001907348633
    4. 'act' → logprob: -15.625001907348633
    5. ' fact' → logprob: -15.875001907348633
    6. '[i' → logprob: -15.875001907348633
    7. 'f' → logprob: -16.500001907348633
    8. '[' → logprob: -16.500001907348633
    9. 'ifact' → logprob: -17.000001907348633
    10. 'fait' → logprob: -17.250001907348633

Token 244: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.500003814697266
    3. 'i' → logprob: -16.250003814697266
    4. '[
' → logprob: -16.875003814697266
    5. '[I' → logprob: -18.750003814697266
    6. '[(' → logprob: -19.375003814697266
    7. '{i' → logprob: -19.750003814697266
    8. '(i' → logprob: -19.875003814697266
    9. ' [' → logprob: -20.000003814697266
    10. '```' → logprob: -20.250003814697266

Token 245: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001975802006199956
    2. '[' → logprob: -9.000197410583496
    3. '+' → logprob: -9.625197410583496
    4. '[I' → logprob: -12.625197410583496
    5. '[
' → logprob: -13.250197410583496
    6. '[next' → logprob: -14.000197410583496
    7. '1' → logprob: -14.375197410583496
    8. 'i' → logprob: -14.500197410583496
    9. '[++' → logprob: -14.875197410583496
    10. '+i' → logprob: -15.625197410583496

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -13.125003814697266
    3. '
' → logprob: -13.625003814697266
    4. '```' → logprob: -14.875003814697266
    5. ']' → logprob: -15.750003814697266
    6. '

' → logprob: -16.250003814697266
    7. '<|end|>' → logprob: -16.812503814697266
    8. '  ' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.187503814697266
    10. '
' → logprob: -17.937503814697266

Token 247: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25417768955230713
    2. ' *' → logprob: -1.5041776895523071
    3. ')' → logprob: -7.004177570343018
    4. '*i' → logprob: -7.129177570343018
    5. '*(' → logprob: -8.254178047180176
    6. ' ' → logprob: -9.129178047180176
    7. ']' → logprob: -10.004178047180176
    8. '
' → logprob: -10.754178047180176
    9. '[i' → logprob: -10.879178047180176
    10. '**' → logprob: -11.129178047180176

Token 248: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.009891134686768055
    2. ' *' → logprob: -4.634891033172607
    3. '*(' → logprob: -9.009891510009766
    4. '*i' → logprob: -11.634891510009766
    5. '**' → logprob: -14.009891510009766
    6. '*object' → logprob: -14.384891510009766
    7. '(' → logprob: -14.634891510009766
    8. '*
' → logprob: -15.009891510009766
    9. '   ' → logprob: -15.134891510009766
    10. ' ' → logprob: -15.384891510009766

Token 249: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.014301705174148083
    2. ' (' → logprob: -4.264301776885986
    3. '(' → logprob: -9.014301300048828
    4. '[i' → logprob: -12.889301300048828
    5. '(ii' → logprob: -12.889301300048828
    6. '(in' → logprob: -13.014301300048828
    7. '(next' → logprob: -13.389301300048828
    8. '(
' → logprob: -13.639301300048828
    9. '
' → logprob: -13.639301300048828
    10. '(I' → logprob: -13.889301300048828

Token 250: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14635668694972992
    2. '(i' → logprob: -2.0213565826416016
    3. ' i' → logprob: -5.896356582641602
    4. ' (' → logprob: -7.146356582641602
    5. '(' → logprob: -9.646356582641602
    6. '[i' → logprob: -10.521356582641602
    7. '{i' → logprob: -10.646356582641602
    8. '   ' → logprob: -11.521356582641602
    9. '	i' → logprob: -12.646356582641602
    10. ')i' → logprob: -12.896356582641602

Token 251: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017703777411952615
    2. ' +' → logprob: -6.376770496368408
    3. '+
' → logprob: -9.62677001953125
    4. ' +
' → logprob: -13.75177001953125
    5. '
' → logprob: -14.12677001953125
    6. '1' → logprob: -14.87677001953125
    7. '+

' → logprob: -17.00177001953125
    8. ' ' → logprob: -17.25177001953125
    9. '＋' → logprob: -17.62677001953125
    10. ' 
' → logprob: -17.75177001953125

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.946405094116926e-05
    2. '2' → logprob: -9.750079154968262
    3. ' ' → logprob: -11.000079154968262
    4. '```' → logprob: -13.375079154968262
    5. '+' → logprob: -14.375079154968262
    6. '
' → logprob: -14.500079154968262
    7. '<|end|>' → logprob: -14.687579154968262
    8. '   ' → logprob: -14.812579154968262
    9. '`' → logprob: -16.187580108642578
    10. ')' → logprob: -16.500080108642578

Token 253: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010804448975250125
    2. ')%' → logprob: -7.376080513000488
    3. '%' → logprob: -8.001080513000488
    4. ' )' → logprob: -9.376080513000488
    5. ' %' → logprob: -10.376080513000488
    6. ')
' → logprob: -13.501080513000488
    7. '   ' → logprob: -14.626080513000488
    8. '%)' → logprob: -14.626080513000488
    9. '}' → logprob: -16.001079559326172
    10. '	' → logprob: -16.501079559326172

Token 254: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07891248166561127
    2. '%' → logprob: -2.5789124965667725
    3. ')' → logprob: -10.953912734985352
    4. '%i' → logprob: -12.953912734985352
    5. ')%' → logprob: -13.703912734985352
    6. ' %=' → logprob: -14.203912734985352
    7. '%n' → logprob: -15.328912734985352
    8. '%c' → logprob: -15.578912734985352
    9. '%d' → logprob: -15.703912734985352
    10. '%x' → logprob: -15.703912734985352

Token 255: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0067156096920371056
    2. ' mod' → logprob: -5.006715774536133
    3. '(mod' → logprob: -15.256715774536133
    4. '	mod' → logprob: -17.506715774536133
    5. ' ' → logprob: -20.756715774536133
    6. '```' → logprob: -21.006715774536133
    7. '
' → logprob: -21.881715774536133
    8. 'm' → logprob: -21.881715774536133
    9. '_mod' → logprob: -22.006715774536133
    10. ' мод' → logprob: -22.256715774536133

Token 256: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.011193300597369671
    2. 'compute' → logprob: -4.51119327545166
    3. '_compute' → logprob: -9.63619327545166
    4. ' def' → logprob: -10.76119327545166
    5. '_' → logprob: -11.13619327545166
    6. ' calculate' → logprob: -11.26119327545166
    7. ' ' → logprob: -11.88619327545166
    8. ' _' → logprob: -12.38619327545166
    9. 'n' → logprob: -12.63619327545166
    10. 'def' → logprob: -12.76119327545166

Token 259: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.007649221923202276
    2. '_' → logprob: -4.8826494216918945
    3. '_factor' → logprob: -11.382649421691895
    4. '_m' → logprob: -12.757649421691895
    5. '_user' → logprob: -13.257649421691895
    6. ' _' → logprob: -13.382649421691895
    7. '_modal' → logprob: -13.507649421691895
    8. '```' → logprob: -13.507649421691895
    9. ' modular' → logprob: -13.632649421691895
    10. '_def' → logprob: -13.632649421691895

Token 260: 'ular' (ID: 1492)
  Prédit: 'ular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ular' → logprob: -1.0280383548888494e-06
    2. 'cular' → logprob: -14.875000953674316
    3. 'ULAR' → logprob: -15.000000953674316
    4. 'ularity' → logprob: -16.750001907348633
    5. 'uler' → logprob: -17.125001907348633
    6. '_' → logprob: -17.125001907348633
    7. 'ulare' → logprob: -17.125001907348633
    8. 'olar' → logprob: -17.625001907348633
    9. '```' → logprob: -18.000001907348633
    10. 'ilar' → logprob: -18.125001907348633

Token 261: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.00855287630110979
    2. '_' → logprob: -5.0085530281066895
    3. '_factor' → logprob: -6.6335530281066895
    4. '_inv' → logprob: -8.633552551269531
    5. '_in' → logprob: -10.133552551269531
    6. '_reverse' → logprob: -10.508552551269531
    7. '_function' → logprob: -10.633552551269531
    8. '_answer' → logprob: -10.633552551269531
    9. '_constant' → logprob: -10.758552551269531
    10. '_error' → logprob: -11.133552551269531

Token 262: '(n' (ID: 2406)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6462018489837646
    2. '(x' → logprob: -1.0212018489837646
    3. '(number' → logprob: -2.8962018489837646
    4. '(n' → logprob: -3.5212018489837646
    5. '(' → logprob: -3.8962018489837646
    6. '(num' → logprob: -4.896202087402344
    7. '(value' → logprob: -6.646202087402344
    8. '(base' → logprob: -6.646202087402344
    9. '(b' → logprob: -8.396202087402344
    10. ' (' → logprob: -8.646202087402344

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.607391408877447e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ',n' → logprob: -14.375036239624023
    4. '‌,' → logprob: -17.625036239624023
    5. ',
' → logprob: -18.000036239624023
    6. ',int' → logprob: -18.375036239624023
    7. ' ' → logprob: -18.500036239624023
    8. ':' → logprob: -18.750036239624023
    9. '   ' → logprob: -19.375036239624023
    10. ')' → logprob: -19.375036239624023

Token 264: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.21620716154575348
    2. 'm' → logprob: -1.9662071466445923
    3. ' mod' → logprob: -2.966207265853882
    4. ' m' → logprob: -5.841207027435303
    5. 'p' → logprob: -10.466207504272461
    6. ' modulus' → logprob: -11.966207504272461
    7. ' p' → logprob: -12.966207504272461
    8. '	mod' → logprob: -13.716207504272461
    9. ' ' → logprob: -14.341207504272461
    10. 'module' → logprob: -14.716207504272461

Token 265: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002831464516930282
    2. '):
' → logprob: -8.250283241271973
    3. ')' → logprob: -10.875283241271973
    4. ' ):' → logprob: -13.125283241271973
    5. ':' → logprob: -14.750283241271973
    6. '):
' → logprob: -15.000283241271973
    7. ',' → logprob: -15.750283241271973
    8. '   ' → logprob: -17.250282287597656
    9. '=' → logprob: -17.500282287597656
    10. '):

' → logprob: -17.625282287597656

Token 266: '   ' (ID: 271)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.11470765620470047
    2. ' pow' → logprob: -3.1147077083587646
    3. 'return' → logprob: -3.4897077083587646
    4. '   ' → logprob: -3.6147077083587646
    5. 'n' → logprob: -5.6147074699401855
    6. 'def' → logprob: -6.6147074699401855
    7. ' return' → logprob: -7.3647074699401855
    8. ' n' → logprob: -8.239707946777344
    9. '0' → logprob: -8.364707946777344
    10. '(pow' → logprob: -8.614707946777344

Token 267: ' return' (ID: 622)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.006843003910034895
    2. 'return' (adapté à ' return') → logprob: -5.006843090057373
    3. 'def' → logprob: -9.006842613220215
    4. ' pow' → logprob: -12.506842613220215
    5. '   ' → logprob: -15.131842613220215
    6. 'power' → logprob: -15.131842613220215
    7. '(pow' → logprob: -15.131842613220215
    8. '_pow' → logprob: -15.381842613220215
    9. 'x' → logprob: -16.00684356689453
    10. '
' → logprob: -17.00684356689453

Token 268: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.318681188422488e-05
    2. ' pow' → logprob: -11.25001335144043
    3. '(pow' → logprob: -16.25001335144043
    4. 'power' → logprob: -17.00001335144043
    5. '

' → logprob: -19.37501335144043
    6. '   ' → logprob: -19.50001335144043
    7. '_pow' → logprob: -20.00001335144043
    8. 'fast' → logprob: -20.00001335144043
    9. '
' → logprob: -20.62501335144043
    10. '1' → logprob: -21.50001335144043

Token 269: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01106515247374773
    2. '(' → logprob: -4.5110650062561035
    3. '(
' → logprob: -11.136065483093262
    4. '<|end|>' → logprob: -13.261065483093262
    5. 'n' → logprob: -14.386065483093262
    6. ')n' → logprob: -16.761064529418945
    7. '<|end|>' → logprob: -17.136064529418945
    8. ')' → logprob: -17.511064529418945
    9. '```' → logprob: -17.636064529418945
    10. ' (' → logprob: -17.636064529418945

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020520923135336488
    2. ' ,' → logprob: -8.500205039978027
    3. ',
' → logprob: -13.500205039978027
    4. ',n' → logprob: -15.625205039978027
    5. 'mod' → logprob: -15.875205039978027
    6. ',module' → logprob: -16.625205993652344
    7. ')' → logprob: -17.500205993652344
    8. '-' → logprob: -17.625205993652344
    9. '(mod' → logprob: -18.000205993652344
    10. '   ' → logprob: -18.000205993652344

Token 271: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0005608965293504298
    2. ' mod' → logprob: -7.500560760498047
    3. '(mod' → logprob: -12.000560760498047
    4. '	mod' → logprob: -13.375560760498047
    5. '   ' → logprob: -16.250560760498047
    6. 'modal' → logprob: -16.625560760498047
    7. ' ' → logprob: -17.125560760498047
    8. '.mod' → logprob: -17.375560760498047
    9. '_mod' → logprob: -17.500560760498047
    10. '-mod' → logprob: -18.750560760498047

Token 272: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00029601677670143545
    2. ' -' → logprob: -8.125295639038086
    3. '```' → logprob: -19.625295639038086
    4. '-
' → logprob: -20.375295639038086
    5. '−' → logprob: -21.000295639038086
    6. ' ' → logprob: -22.125295639038086
    7. '()-' → logprob: -22.250295639038086
    8. '–' → logprob: -22.562795639038086
    9. '
' → logprob: -23.000295639038086
    10. '   ' → logprob: -23.187795639038086

Token 273: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.375000953674316
    3. '۲' → logprob: -16.5625
    4. '-' → logprob: -16.8125
    5. ' ' → logprob: -17.0
    6. '٢' → logprob: -17.3125
    7. '
' → logprob: -17.5
    8. '22' → logprob: -17.625
    9. '3' → logprob: -17.75
    10. '23' → logprob: -17.8125

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00318163656629622
    2. ' ,' → logprob: -5.753181457519531
    3. ')' → logprob: -12.628181457519531
    4. ',
' → logprob: -14.628181457519531
    5. ' ' → logprob: -16.87818145751953
    6. '   ' → logprob: -17.25318145751953
    7. ' ,
' → logprob: -17.62818145751953
    8. ' )' → logprob: -17.75318145751953
    9. ',n' → logprob: -19.00318145751953
    10. ',module' → logprob: -19.00318145751953

Token 275: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.3132619559764862
    2. 'mod' → logprob: -1.3132619857788086
    3. '	mod' → logprob: -16.688261032104492
    4. '(mod' → logprob: -16.938261032104492
    5. ')' → logprob: -17.938261032104492
    6. ' ' → logprob: -18.063261032104492
    7. '   ' → logprob: -18.688261032104492
    8. '```' → logprob: -19.313261032104492
    9. 'm' → logprob: -20.063261032104492
    10. '_mod' → logprob: -20.188261032104492

Token 276: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -15.750001907348633
    4. ')return' → logprob: -18.875001907348633
    5. ')

' → logprob: -19.250001907348633
    6. ')#' → logprob: -19.250001907348633
    7. '),' → logprob: -19.875001907348633
    8. ')*' → logprob: -20.500001907348633
    9. ')}' → logprob: -21.250001907348633
    10. '))' → logprob: -21.250001907348633

Token 277: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09907497465610504
    2. 'main' → logprob: -2.8490750789642334
    3. ' n' → logprob: -4.474074840545654
    4. 'n' → logprob: -4.974074840545654
    5. ' mod' → logprob: -5.349074840545654
    6. ' compute' → logprob: -6.224074840545654
    7. ' combine' → logprob: -6.224074840545654
    8. ' modular' → logprob: -6.224074840545654
    9. ' combination' → logprob: -6.474074840545654
    10. 'mod' → logprob: -6.474074840545654

Token 279: '_inverse' (ID: 188797)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.9211673140525818
    2. '_comb' → logprob: -1.2961673736572266
    3. '_mod' → logprob: -1.4211673736572266
    4. '_max' → logprob: -3.0461673736572266
    5. '_bin' → logprob: -4.296167373657227
    6. '_' → logprob: -5.421167373657227
    7. '_com' → logprob: -5.421167373657227
    8. '_inverse' → logprob: -5.921167373657227
    9. '_input' → logprob: -6.046167373657227
    10. '_n' → logprob: -6.671167373657227

Token 280: '(n' (ID: 2406)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.11470585316419601
    2. '(n' → logprob: -3.239705801010132
    3. '_mod' → logprob: -3.614705801010132
    4. '(' → logprob: -4.114706039428711
    5. 's' → logprob: -5.364706039428711
    6. 'def' → logprob: -5.364706039428711
    7. '_function' → logprob: -5.739706039428711
    8. '_' → logprob: -6.614706039428711
    9. '(x' → logprob: -6.614706039428711
    10. ' (' → logprob: -6.989706039428711

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023083435371518135
    2. ' ,' → logprob: -8.50023078918457
    3. ')' → logprob: -11.62523078918457
    4. '   ' → logprob: -12.25023078918457
    5. ',
' → logprob: -12.25023078918457
    6. ',n' → logprob: -13.37523078918457
    7. 'def' → logprob: -13.62523078918457
    8. 'mod' → logprob: -13.75023078918457
    9. 's' → logprob: -14.37523078918457
    10. ' ' → logprob: -14.62523078918457

Token 282: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.24757066369056702
    2. ' mod' → logprob: -2.122570753097534
    3. 'get' → logprob: -2.997570753097534
    4. ' get' → logprob: -3.372570753097534
    5. ')' → logprob: -4.747570514678955
    6. '10' → logprob: -5.372570514678955
    7. ' ' → logprob: -7.747570514678955
    8. '<|end|>' → logprob: -8.122570991516113
    9. '100' → logprob: -8.372570991516113
    10. 'm' → logprob: -9.247570991516113

Token 283: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017674085684120655
    2. '):
' → logprob: -6.376767635345459
    3. ')' → logprob: -9.7517671585083
    4. '):
' → logprob: -12.5017671585083
    5. ' ):' → logprob: -13.0017671585083
    6. ',' → logprob: -14.5017671585083
    7. '   ' → logprob: -15.1267671585083
    8. '):

' → logprob: -16.376768112182617
    9. ')：' → logprob: -17.251768112182617
    10. ' ' → logprob: -17.376768112182617

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9266199160483666e-05
    2. ' return' → logprob: -11.250019073486328
    3. 'return' → logprob: -12.125019073486328
    4. '	return' → logprob: -14.500019073486328
    5. '   ' → logprob: -16.000019073486328
    6. '```' → logprob: -16.125019073486328
    7. '    
' → logprob: -17.125019073486328
    8. '       ' → logprob: -17.125019073486328
    9. '
' → logprob: -18.500019073486328
    10. '{return' → logprob: -19.000019073486328

Token 285: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005598241463303566
    2. '   ' → logprob: -5.755598068237305
    3. ' return' → logprob: -6.505598068237305
    4. 'if' → logprob: -7.005598068237305
    5. '	return' → logprob: -12.130598068237305
    6. 'inv' → logprob: -12.505598068237305
    7. ' if' → logprob: -13.505598068237305
    8. 'def' → logprob: -14.380598068237305
    9. '```' → logprob: -14.380598068237305
    10. ' ' → logprob: -14.505598068237305

Token 286: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.7675982713699341
    2. 'pow' → logprob: -1.017598271369934
    3. ' compute' → logprob: -2.1425981521606445
    4. ' pow' → logprob: -3.2675981521606445
    5. 'inv' → logprob: -5.3925981521606445
    6. ' (' → logprob: -5.5175981521606445
    7. 'fact' → logprob: -5.7675981521606445
    8. '(pow' → logprob: -6.3925981521606445
    9. '(n' → logprob: -6.8925981521606445
    10. ' inv' → logprob: -7.1425981521606445

Token 287: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.00012654215970542282
    2. '_' → logprob: -9.000126838684082
    3. '```' → logprob: -14.500126838684082
    4. '(' → logprob: -14.625126838684082
    5. ' _' → logprob: -15.250126838684082
    6. ' modular' → logprob: -15.375126838684082
    7. '"_' → logprob: -15.500126838684082
    8. '_Mod' → logprob: -16.000125885009766
    9. '_mult' → logprob: -16.000125885009766
    10. '_modal' → logprob: -16.125125885009766

Token 288: 'ular' (ID: 1492)
  Prédit: 'ular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ular' → logprob: -9.722539834911004e-05
    2. 'od' → logprob: -10.125097274780273
    3. 'cular' → logprob: -10.250097274780273
    4. 'uler' → logprob: -11.750097274780273
    5. 'ul' → logprob: -12.375097274780273
    6. '_mod' → logprob: -13.250097274780273
    7. 'orial' → logprob: -13.750097274780273
    8. '(n' → logprob: -13.750097274780273
    9. 'ularity' → logprob: -14.125097274780273
    10. 'ULAR' → logprob: -14.250097274780273

Token 289: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.005186439957469702
    2. 'inverse' → logprob: -5.380186557769775
    3. 'n' → logprob: -8.255186080932617
    4. 'verse' → logprob: -8.380186080932617
    5. '(n' → logprob: -9.880186080932617
    6. '_' → logprob: -12.380186080932617
    7. '_factor' → logprob: -12.380186080932617
    8. '_in' → logprob: -12.880186080932617
    9. ' inverse' → logprob: -13.255186080932617
    10. 'in' → logprob: -13.380186080932617

Token 290: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759692192077637
    2. '(n' → logprob: -0.8259692192077637
    3. '(
' → logprob: -10.700969696044922
    4. ' (' → logprob: -12.075969696044922
    5. '((' → logprob: -14.325969696044922
    6. '(

' → logprob: -14.575969696044922
    7. ')' → logprob: -16.075969696044922
    8. ' ' → logprob: -16.575969696044922
    9. 'n' → logprob: -16.700969696044922
    10. '()' → logprob: -17.075969696044922

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004917914047837257
    2. ' ,' → logprob: -7.625491619110107
    3. ',
' → logprob: -13.250492095947266
    4. ')' → logprob: -14.000492095947266
    5. '%' → logprob: -14.750492095947266
    6. ' ' → logprob: -15.500492095947266
    7. 'mod' → logprob: -16.125492095947266
    8. '‌,' → logprob: -16.375492095947266
    9. '%,' → logprob: -16.375492095947266
    10. '   ' → logprob: -16.750492095947266

Token 292: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04858759790658951
    2. ' mod' → logprob: -3.0485875606536865
    3. '	mod' → logprob: -15.798587799072266
    4. '(mod' → logprob: -17.173587799072266
    5. ')' → logprob: -17.673587799072266
    6. '
' → logprob: -18.048587799072266
    7. '```' → logprob: -18.423587799072266
    8. ' ' → logprob: -18.923587799072266
    9. 'm' → logprob: -19.048587799072266
    10. '   ' → logprob: -19.048587799072266

Token 293: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. ' )' → logprob: -11.625011444091797
    3. ')
' → logprob: -13.500011444091797
    4. '))' → logprob: -14.500011444091797
    5. ',' → logprob: -15.375011444091797
    6. '}' → logprob: -16.000011444091797
    7. '),' → logprob: -16.125011444091797
    8. '})' → logprob: -17.125011444091797
    9. ')}' → logprob: -17.250011444091797
    10. ' ' → logprob: -17.375011444091797

Token 294: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: ' handle' (ID: 5318)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5074473023414612
    2. 'mod' → logprob: -1.3824472427368164
    3. 'comb' → logprob: -3.2574472427368164
    4. 'n' → logprob: -3.6324472427368164
    5. ' main' → logprob: -3.7574472427368164
    6. 'fast' → logprob: -4.132447242736816
    7. 'factor' → logprob: -4.507447242736816
    8. 'compute' → logprob: -4.632447242736816
    9. 'combine' → logprob: -5.132447242736816
    10. ' mod' → logprob: -6.007447242736816

Token 296: '_zero' (ID: 53468)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.044319748878479
    2. '_query' → logprob: -1.044319748878479
    3. '_factor' → logprob: -2.1693196296691895
    4. '_comb' → logprob: -3.0443196296691895
    5. '_queries' → logprob: -3.4193196296691895
    6. '_' → logprob: -3.6693196296691895
    7. '_command' → logprob: -4.4193196296691895
    8. '_case' → logprob: -4.9193196296691895
    9. '_com' → logprob: -5.0443196296691895
    10. '_special' → logprob: -5.6693196296691895

Token 297: '_x' (ID: 7054)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.17994698882102966
    2. '():' → logprob: -2.6799468994140625
    3. '(n' → logprob: -2.9299468994140625
    4. '_case' → logprob: -3.9299468994140625
    5. '_factor' → logprob: -4.6799468994140625
    6. 'div' → logprob: -6.0549468994140625
    7. '(' → logprob: -6.4299468994140625
    8. '_input' → logprob: -6.6799468994140625
    9. '():
' → logprob: -6.8049468994140625
    10. '()' → logprob: -6.9299468994140625

Token 298: '_case' (ID: 43667)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.39514264464378357
    2. 'or' → logprob: -2.0201425552368164
    3. '():
' → logprob: -2.5201425552368164
    4. '(n' → logprob: -3.0201425552368164
    5. '():' → logprob: -3.3951425552368164
    6. '(' → logprob: -5.395142555236816
    7. '(s' → logprob: -5.645142555236816
    8. '(a' → logprob: -5.645142555236816
    9. '(p' → logprob: -5.895142555236816
    10. '_' → logprob: -6.020142555236816

Token 299: '():
' (ID: 8595)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.08111456036567688
    2. '():' → logprob: -2.7061145305633545
    3. '(' → logprob: -5.206114768981934
    4. '(n' → logprob: -5.581114768981934
    5. '(s' → logprob: -7.081114768981934
    6. '(a' → logprob: -8.581114768981934
    7. ' ():' → logprob: -9.456114768981934
    8. '(m' → logprob: -9.581114768981934
    9. '(p' → logprob: -9.706114768981934
    10. '(k' → logprob: -9.831114768981934

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013417120499070734
    2. ' return' → logprob: -10.000134468078613
    3. '    
' → logprob: -10.625134468078613
    4. 'return' → logprob: -10.750134468078613
    5. 'print' → logprob: -12.000134468078613
    6. '	return' → logprob: -12.250134468078613
    7. ' pass' → logprob: -12.500134468078613
    8. 'pass' → logprob: -12.500134468078613
    9. '	pass' → logprob: -12.625134468078613
    10. 'def' → logprob: -12.750134468078613

Token 301: ' return' (ID: 622)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.8210660219192505
    2. 'print' → logprob: -1.3210660219192505
    3. 'return' (adapté à ' return') → logprob: -2.071065902709961
    4. '   ' → logprob: -2.571065902709961
    5. 'exit' → logprob: -3.196065902709961
    6. ' pass' → logprob: -3.446065902709961
    7. ' return' → logprob: -4.946065902709961
    8. ' print' → logprob: -5.321065902709961
    9. ' exit' → logprob: -6.196065902709961
    10. 'def' → logprob: -6.696065902709961

Token 302: ' ' (ID: 220)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.8288499712944031
    2. ' ' → logprob: -1.3288500308990479
    3. 'None' → logprob: -1.8288500308990479
    4. '0' → logprob: -2.078850030899048
    5. '
' → logprob: -6.203849792480469
    6. '[]' → logprob: -6.578849792480469
    7. ' True' → logprob: -6.578849792480469
    8. 'def' → logprob: -6.578849792480469
    9. 'True' → logprob: -7.203849792480469
    10. '"' → logprob: -7.203849792480469

Token 303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1573970913887024
    2. '1' → logprob: -2.6573970317840576
    3. '[]' → logprob: -3.0323970317840576
    4. '[' → logprob: -4.657397270202637
    5. '"' → logprob: -5.407397270202637
    6. '(' → logprob: -5.907397270202637
    7. 'None' → logprob: -5.907397270202637
    8. '-' → logprob: -6.032397270202637
    9. ''' → logprob: -6.157397270202637
    10. 'True' → logprob: -7.532397270202637

Token 304: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06726441532373428
    2. '
' → logprob: -3.1922643184661865
    3. '<|end|>' → logprob: -3.8172643184661865
    4. '

' → logprob: -6.817264556884766
    5. 'x' → logprob: -8.067264556884766
    6. '#' → logprob: -9.317264556884766
    7. '<|end|>' → logprob: -9.567264556884766
    8. '0' → logprob: -9.692264556884766
    9. '    
' → logprob: -9.817264556884766
    10. '```' → logprob: -9.942264556884766

Token 305: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001399283530190587
    2. 'x' → logprob: -6.876399517059326
    3. '<|end|>' → logprob: -9.001399040222168
    4. '.' → logprob: -9.501399040222168
    5. '#' → logprob: -10.251399040222168
    6. '(' → logprob: -10.751399040222168
    7. ' def' → logprob: -10.876399040222168
    8. '\' → logprob: -11.126399040222168
    9. ')' → logprob: -11.501399040222168
    10. '0' → logprob: -11.751399040222168

Token 306: ' handle' (ID: 5318)
  Prédit: ' handle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' handle' → logprob: -0.38056185841560364
    2. ' solve' → logprob: -2.2555618286132812
    3. 'handle' → logprob: -2.5055618286132812
    4. ' main' → logprob: -2.6305618286132812
    5. ' process' → logprob: -4.505561828613281
    6. 'solve' → logprob: -4.505561828613281
    7. ' fast' → logprob: -4.880561828613281
    8. 'def' → logprob: -5.005561828613281
    9. 'main' → logprob: -5.505561828613281
    10. ' def' → logprob: -5.755561828613281

Token 307: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.634422242641449
    2. '_x' → logprob: -1.7594223022460938
    3. '_non' → logprob: -1.8844223022460938
    4. '_' → logprob: -2.7594223022460938
    5. '_one' → logprob: -4.134422302246094
    6. '_none' → logprob: -4.134422302246094
    7. '_negative' → logprob: -4.759422302246094
    8. '_max' → logprob: -5.259422302246094
    9. '_positive' → logprob: -5.259422302246094
    10. '_large' → logprob: -5.759422302246094

Token 308: '_d' (ID: 1565)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.011631147935986519
    2. '_' → logprob: -4.636631011962891
    3. '_y' → logprob: -6.886631011962891
    4. 'x' → logprob: -7.636631011962891
    5. '_a' → logprob: -9.76163101196289
    6. '_div' → logprob: -10.01163101196289
    7. '(' → logprob: -10.51163101196289
    8. '_s' → logprob: -11.01163101196289
    9. '_k' → logprob: -11.13663101196289
    10. '(x' → logprob: -11.26163101196289

Token 309: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.1586420238018036
    2. '_' → logprob: -2.908642053604126
    3. '():' → logprob: -3.033642053604126
    4. 'case' → logprob: -4.033641815185547
    5. '_x' → logprob: -4.908641815185547
    6. '():
' → logprob: -5.033641815185547
    7. '()' → logprob: -5.533641815185547
    8. '_d' → logprob: -6.408641815185547
    9. 'if' → logprob: -6.783641815185547
    10. '_value' → logprob: -7.408641815185547

Token 310: '(x' (ID: 4061)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.6100132496794686e-05
    2. '():
' → logprob: -10.250056266784668
    3. ' ():' → logprob: -10.875056266784668
    4. '()' → logprob: -13.250056266784668
    5. '():
' → logprob: -19.37505531311035
    6. ' ()' → logprob: -19.37505531311035
    7. ':' → logprob: -20.25005531311035
    8. '(' → logprob: -20.50005531311035
    9. '():

' → logprob: -20.50005531311035
    10. '(x' → logprob: -21.75005531311035

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050843335688114166
    2. '):' → logprob: -3.0508432388305664
    3. '):
' → logprob: -6.425843238830566
    4. ' ,' → logprob: -8.425843238830566
    5. ',d' → logprob: -8.425843238830566
    6. ')' → logprob: -9.425843238830566
    7. ' ):' → logprob: -10.550843238830566
    8. ',
' → logprob: -10.550843238830566
    9. ':' → logprob: -11.300843238830566
    10. '   ' → logprob: -11.425843238830566

Token 312: ' n' (ID: 297)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03554829955101013
    2. ' d' → logprob: -3.660548210144043
    3. 'n' → logprob: -5.535548210144043
    4. 'mod' → logprob: -6.410548210144043
    5. 'k' → logprob: -6.660548210144043
    6. 'y' → logprob: -7.535548210144043
    7. ' n' → logprob: -8.160548210144043
    8. 'm' → logprob: -8.410548210144043
    9. 'x' → logprob: -8.785548210144043
    10. '0' → logprob: -8.785548210144043

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5260787010192871
    2. '):' → logprob: -0.9010787010192871
    3. '):
' → logprob: -6.276078701019287
    4. ' ,' → logprob: -7.776078701019287
    5. ')' → logprob: -8.026079177856445
    6. ' ):' → logprob: -8.276079177856445
    7. '=' → logprob: -11.526079177856445
    8. ',
' → logprob: -11.651079177856445
    9. ',n' → logprob: -11.901079177856445
    10. '   ' → logprob: -12.151079177856445

Token 314: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.09435981512069702
    2. 'd' → logprob: -3.094359874725342
    3. ' mod' → logprob: -4.094359874725342
    4. 'm' → logprob: -4.219359874725342
    5. 'fact' → logprob: -4.594359874725342
    6. ' d' → logprob: -6.844359874725342
    7. 'k' → logprob: -7.094359874725342
    8. ' fact' → logprob: -7.969359874725342
    9. 'p' → logprob: -8.469359397888184
    10. 'MOD' → logprob: -9.344359397888184

Token 315: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03445545956492424
    2. ',' → logprob: -3.4094555377960205
    3. '):
' → logprob: -7.284455299377441
    4. ')' → logprob: -9.159455299377441
    5. ' ):' → logprob: -11.784455299377441
    6. '   ' → logprob: -12.659455299377441
    7. ':' → logprob: -13.284455299377441
    8. ',
' → logprob: -13.284455299377441
    9. ' ,' → logprob: -13.909455299377441
    10. '=' → logprob: -14.534455299377441

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022057687863707542
    2. 'if' → logprob: -4.64705753326416
    3. ':
' → logprob: -5.02205753326416
    4. ':' → logprob: -5.77205753326416
    5. ' if' → logprob: -6.89705753326416
    6. '):
' → logprob: -7.52205753326416
    7. 'return' → logprob: -7.64705753326416
    8. '```' → logprob: -8.77205753326416
    9. ',' → logprob: -9.27205753326416
    10. ':return' → logprob: -10.39705753326416

Token 317: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0061683859676122665
    2. 'if' → logprob: -5.131168365478516
    3. '   ' → logprob: -9.256168365478516
    4. ' return' → logprob: -9.381168365478516
    5. 'result' → logprob: -10.881168365478516
    6. 'res' → logprob: -11.506168365478516
    7. 'total' → logprob: -11.881168365478516
    8. 'ans' → logprob: -12.131168365478516
    9. '#' → logprob: -12.381168365478516
    10. 'def' → logprob: -12.506168365478516

Token 318: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.43887773156166077
    2. '(n' → logprob: -2.063877820968628
    3. '(x' → logprob: -2.563877820968628
    4. '(pow' → logprob: -2.813877820968628
    5. '(' → logprob: -3.063877820968628
    6. '1' → logprob: -3.563877820968628
    7. 'x' → logprob: -4.438877582550049
    8. 'n' → logprob: -6.688877582550049
    9. '0' → logprob: -6.688877582550049
    10. ' pow' → logprob: -7.813877582550049

Token 319: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0001462107611587271
    2. '(' → logprob: -9.00014591217041
    3. '((' → logprob: -11.75014591217041
    4. 'x' → logprob: -11.87514591217041
    5. '(n' → logprob: -11.87514591217041
    6. '(pow' → logprob: -14.87514591217041
    7. '(
' → logprob: -15.37514591217041
    8. '(abs' → logprob: -16.000146865844727
    9. '(a' → logprob: -16.750146865844727
    10. '(int' → logprob: -17.125146865844727

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14126650989055634
    2. ',n' → logprob: -2.1412665843963623
    3. 'n' → logprob: -4.266266345977783
    4. ' ,' → logprob: -9.266266822814941
    5. ',
' → logprob: -10.016266822814941
    6. '*n' → logprob: -11.141266822814941
    7. ' n' → logprob: -11.516266822814941
    8. '
' → logprob: -12.016266822814941
    9. '(n' → logprob: -12.266266822814941
    10. '[n' → logprob: -12.766266822814941

Token 321: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.180258191714529e-06
    2. '(n' → logprob: -12.625008583068848
    3. ' n' → logprob: -12.875008583068848
    4. '
' → logprob: -13.625008583068848
    5. '2' → logprob: -14.750008583068848
    6. '(' → logprob: -15.125008583068848
    7. '   ' → logprob: -16.00000762939453
    8. ' ' → logprob: -16.12500762939453
    9. '0' → logprob: -16.50000762939453
    10. '_n' → logprob: -17.87500762939453

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000703376077581197
    2. '-' → logprob: -7.75070333480835
    3. ' ,' → logprob: -8.750703811645508
    4. ' -' → logprob: -9.625703811645508
    5. ')' → logprob: -10.375703811645508
    6. ',
' → logprob: -12.875703811645508
    7. '   ' → logprob: -13.000703811645508
    8. '%' → logprob: -13.250703811645508
    9. '+' → logprob: -13.625703811645508
    10. '```' → logprob: -13.750703811645508

Token 323: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.493430894101039e-05
    2. ' mod' → logprob: -9.500075340270996
    3. '
' → logprob: -19.37507438659668
    4. '(mod' → logprob: -19.87507438659668
    5. ' ' → logprob: -20.12507438659668
    6. ')' → logprob: -20.12507438659668
    7. '	mod' → logprob: -21.25007438659668
    8. 'm' → logprob: -21.50007438659668
    9. '   ' → logprob: -21.50007438659668
    10. 'mo' → logprob: -22.12507438659668

Token 324: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.875001907348633
    4. '))' → logprob: -15.625001907348633
    5. '   ' → logprob: -16.375001907348633
    6. ')return' → logprob: -16.625001907348633
    7. ')#' → logprob: -16.625001907348633
    8. ')}' → logprob: -17.750001907348633
    9. ')x' → logprob: -18.000001907348633
    10. '),' → logprob: -18.000001907348633

Token 325: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00045069176121614873
    2. '<|end|>' → logprob: -7.875450611114502
    3. '#' → logprob: -11.00045108795166
    4. '
' → logprob: -11.25045108795166
    5. '```' → logprob: -11.37545108795166
    6. 'x' → logprob: -11.87545108795166
    7. ' def' → logprob: -12.62545108795166
    8. '<|end|>' → logprob: -12.75045108795166
    9. '\' → logprob: -13.12545108795166
    10. ')' → logprob: -13.12545108795166

Token 326: ' compute' (ID: 23864)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' → logprob: -1.3032835721969604
    2. ' main' → logprob: -1.8032835721969604
    3. ' handle' → logprob: -2.05328369140625
    4. 'def' → logprob: -2.30328369140625
    5. 'solve' → logprob: -2.30328369140625
    6. ' solve' → logprob: -2.42828369140625
    7. 'main' → logprob: -2.80328369140625
    8. 'compute' → logprob: -3.80328369140625
    9. ' compute' → logprob: -4.05328369140625
    10. 'calculate' → logprob: -4.55328369140625

Token 327: '_k' (ID: 11637)
  Prédit: '_comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_comb' → logprob: -0.7721372842788696
    2. '_bin' → logprob: -1.7721372842788696
    3. '_com' → logprob: -1.8971372842788696
    4. '_factor' → logprob: -1.8971372842788696
    5. '_mod' → logprob: -4.27213716506958
    6. '(n' → logprob: -4.89713716506958
    7. '_power' → logprob: -5.02213716506958
    8. '_' → logprob: -5.14713716506958
    9. '_sum' → logprob: -5.27213716506958
    10. '_n' → logprob: -5.52213716506958

Token 328: '(x' (ID: 4061)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.1812252253293991
    2. '_power' → logprob: -2.931225299835205
    3. '_pow' → logprob: -3.431225299835205
    4. 'th' → logprob: -3.931225299835205
    5. 'ernel' → logprob: -4.181225299835205
    6. 'power' → logprob: -4.931225299835205
    7. '**' → logprob: -5.056225299835205
    8. '
' → logprob: -5.306225299835205
    9. '_p' → logprob: -5.306225299835205
    10. '_factor' → logprob: -6.306225299835205

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0039280797354876995
    2. ',n' → logprob: -6.128928184509277
    3. ' ,' → logprob: -6.503928184509277
    4. '+' → logprob: -9.753928184509277
    5. ',
' → logprob: -10.003928184509277
    6. ',d' → logprob: -10.253928184509277
    7. '+,' → logprob: -11.003928184509277
    8. ',k' → logprob: -11.128928184509277
    9. 'n' → logprob: -11.628928184509277
    10. '   ' → logprob: -11.878928184509277

Token 330: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6078975796699524
    2. 'n' → logprob: -0.9828975796699524
    3. ' n' → logprob: -3.3578975200653076
    4. ' d' → logprob: -3.7328975200653076
    5. 'k' → logprob: -4.607897758483887
    6. 'x' → logprob: -5.357897758483887
    7. 'y' → logprob: -6.232897758483887
    8. 'mod' → logprob: -6.357897758483887
    9. '0' → logprob: -7.482897758483887
    10. ' k' → logprob: -7.670397758483887

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000995295005850494
    2. '):' → logprob: -7.12599515914917
    3. '):
' → logprob: -9.000995635986328
    4. ' ,' → logprob: -10.000995635986328
    5. ',
' → logprob: -11.750995635986328
    6. ')' → logprob: -12.125995635986328
    7. ',n' → logprob: -12.375995635986328
    8. ',x' → logprob: -13.875995635986328
    9. 'x' → logprob: -14.125995635986328
    10. '   ' → logprob: -14.375995635986328

Token 332: ' mod' (ID: 1812)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023939762264490128
    2. ' n' → logprob: -4.023939609527588
    3. 'k' → logprob: -5.898939609527588
    4. 'mod' → logprob: -6.398939609527588
    5. 'x' → logprob: -8.273940086364746
    6. 'm' → logprob: -8.273940086364746
    7. 'i' → logprob: -8.773940086364746
    8. ' mod' → logprob: -8.898940086364746
    9. 'l' → logprob: -10.086440086364746
    10. 'a' → logprob: -10.148940086364746

Token 333: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2277444452047348
    2. ',' → logprob: -1.602744460105896
    3. '):
' → logprob: -6.1027445793151855
    4. ')' → logprob: -9.852744102478027
    5. '   ' → logprob: -10.977744102478027
    6. ':' → logprob: -11.602744102478027
    7. '):
' → logprob: -12.227744102478027
    8. ' ,' → logprob: -13.227744102478027
    9. ' ):' → logprob: -13.227744102478027
    10. ',k' → logprob: -13.977744102478027

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010469590313732624
    2. ' if' → logprob: -5.635469436645508
    3. ' return' → logprob: -6.260469436645508
    4. ' (' → logprob: -6.635469436645508
    5. '(x' → logprob: -6.760469436645508
    6. 'if' → logprob: -6.885469436645508
    7. 'return' → logprob: -7.010469436645508
    8. 'x' → logprob: -8.260469436645508
    9. '(k' → logprob: -9.635469436645508
    10. ' x' → logprob: -10.260469436645508

Token 335: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4014182388782501
    2. 'k' → logprob: -1.4014182090759277
    3. 'low' → logprob: -2.7764182090759277
    4. 'left' → logprob: -4.901418209075928
    5. 'l' → logprob: -5.151418209075928
    6. 'def' → logprob: -6.151418209075928
    7. 'count' → logprob: -6.276418209075928
    8. 'cnt' → logprob: -6.401418209075928
    9. 'res' → logprob: -6.901418209075928
    10. 'lo' → logprob: -7.526418209075928

Token 336: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.22616030275821686
    2. '(d' → logprob: -2.2261602878570557
    3. '((' → logprob: -2.7261602878570557
    4. 'x' → logprob: -4.226160526275635
    5. 'd' → logprob: -4.726160526275635
    6. 'pow' → logprob: -5.976160526275635
    7. '(' → logprob: -6.601160526275635
    8. '(pow' → logprob: -7.226160526275635
    9. ' (' → logprob: -8.226160049438477
    10. '(((' → logprob: -8.601160049438477

Token 337: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0564932823181152
    2. '*' → logprob: -1.4314932823181152
    3. ' *' → logprob: -1.4314932823181152
    4. ' +' → logprob: -2.0564932823181152
    5. '%' → logprob: -3.6814932823181152
    6. ' %' → logprob: -4.056493282318115
    7. '-' → logprob: -6.806493282318115
    8. ' if' → logprob: -7.556493282318115
    9. ' -' → logprob: -7.806493282318115
    10. ' ' → logprob: -7.931493282318115

Token 338: ' get' (ID: 717)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.6089091897010803
    2. 'compute' → logprob: -0.8589091897010803
    3. 'get' → logprob: -3.6089091300964355
    4. '(' → logprob: -7.1089091300964355
    5. '(get' → logprob: -7.4839091300964355
    6. 'd' → logprob: -7.4839091300964355
    7. '((' → logprob: -7.4839091300964355
    8. '(pow' → logprob: -7.6089091300964355
    9. 'mod' → logprob: -7.9839091300964355
    10. 'fast' → logprob: -7.9839091300964355

Token 339: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -2.45848218582978e-06
    2. 'inverse' → logprob: -13.25000286102295
    3. '_mod' → logprob: -15.62500286102295
    4. 'Inverse' → logprob: -16.250001907348633
    5. '(d' → logprob: -16.500001907348633
    6. '_inv' → logprob: -16.875001907348633
    7. 'd' → logprob: -17.375001907348633
    8. '_integer' → logprob: -17.375001907348633
    9. '(k' → logprob: -17.625001907348633
    10. '_increment' → logprob: -17.750001907348633

Token 340: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00227431976236403
    2. '(' → logprob: -6.127274513244629
    3. '((' → logprob: -10.252274513244629
    4. ' (' → logprob: -10.502274513244629
    5. 'd' → logprob: -11.877274513244629
    6. '(x' → logprob: -11.877274513244629
    7. '(
' → logprob: -12.252274513244629
    8. '(k' → logprob: -12.627274513244629
    9. '(pow' → logprob: -14.127274513244629
    10. '
' → logprob: -14.627274513244629

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003318165196105838
    2. ' ,' → logprob: -5.7533183097839355
    3. '(mod' → logprob: -9.753317832946777
    4. ')' → logprob: -10.253317832946777
    5. 'mod' → logprob: -10.503317832946777
    6. ',
' → logprob: -11.753317832946777
    7. '(' → logprob: -12.753317832946777
    8. ' mod' → logprob: -12.878317832946777
    9. '),' → logprob: -13.628317832946777
    10. '`,' → logprob: -14.003317832946777

Token 342: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.001502598519437015
    2. ' mod' → logprob: -6.501502513885498
    3. '(mod' → logprob: -15.501502990722656
    4. '	mod' → logprob: -17.751502990722656
    5. '
' → logprob: -18.126502990722656
    6. ')' → logprob: -18.751502990722656
    7. '```' → logprob: -20.126502990722656
    8. ',' → logprob: -21.501502990722656
    9. ' мод' → logprob: -21.751502990722656
    10. 'moder' → logprob: -21.751502990722656

Token 343: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025776340044103563
    2. ')%' → logprob: -8.62525749206543
    3. ' )' → logprob: -9.50025749206543
    4. '%' → logprob: -13.12525749206543
    5. ')
' → logprob: -14.12525749206543
    6. '))' → logprob: -15.75025749206543
    7. '   ' → logprob: -16.00025749206543
    8. ' %' → logprob: -16.75025749206543
    9. '%)' → logprob: -16.75025749206543
    10. '**' → logprob: -17.00025749206543

Token 344: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5234025716781616
    2. ' %' → logprob: -0.8984025716781616
    3. 'def' → logprob: -9.273402214050293
    4. ')' → logprob: -9.398402214050293
    5. '%d' → logprob: -10.398402214050293
    6. '%x' → logprob: -11.023402214050293
    7. '<|end|>' → logprob: -11.273402214050293
    8. ')%' → logprob: -11.398402214050293
    9. '%n' → logprob: -11.523402214050293
    10. '
' → logprob: -12.023402214050293

Token 345: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.941850526549388e-06
    2. ' mod' → logprob: -11.750007629394531
    3. '(mod' → logprob: -17.62500762939453
    4. '	mod' → logprob: -19.37500762939453
    5. 'modal' → logprob: -20.00000762939453
    6. 'moder' → logprob: -22.12500762939453
    7. '```' → logprob: -22.25000762939453
    8. 'mo' → logprob: -22.87500762939453
    9. '
' → logprob: -23.75000762939453
    10. 'm' → logprob: -23.75000762939453

Token 346: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.702070951461792
    2. '<|end|>' → logprob: -0.702070951461792
    3. '
' → logprob: -5.827071189880371
    4. '#' → logprob: -6.202071189880371
    5. ')' → logprob: -6.327071189880371
    6. '*' → logprob: -7.827071189880371
    7. '<|end|>' → logprob: -7.827071189880371
    8. '+' → logprob: -8.077071189880371
    9. ' def' → logprob: -8.327071189880371
    10. '[' → logprob: -8.577071189880371

Token 347: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.60141521692276
    2. '<|end|>' → logprob: -0.97641521692276
    3. ')' → logprob: -3.4764151573181152
    4. '#' → logprob: -3.8514151573181152
    5. '```' → logprob: -5.101415157318115
    6. '.' → logprob: -5.226415157318115
    7. 'x' → logprob: -5.351415157318115
    8. ':' → logprob: -6.101415157318115
    9. '[' → logprob: -6.851415157318115
    10. '<|end|>' → logprob: -7.476415157318115

Token 348: ' check' (ID: 2371)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21082989871501923
    2. 'compute' → logprob: -2.085829973220825
    3. ' def' → logprob: -4.085829734802246
    4. ' compute' → logprob: -4.210829734802246
    5. 'main' → logprob: -4.585829734802246
    6. 'handle' → logprob: -4.960829734802246
    7. 'get' → logprob: -5.210829734802246
    8. ' main' → logprob: -5.835829734802246
    9. 'fast' → logprob: -6.085829734802246
    10. 'solve' → logprob: -6.710829734802246

Token 349: '_over' (ID: 34788)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.6915174722671509
    2. '(' → logprob: -1.4415174722671509
    3. ' (' → logprob: -2.5665173530578613
    4. '_' → logprob: -2.6915173530578613
    5. '_x' → logprob: -3.5665173530578613
    6. '(x' → logprob: -3.5665173530578613
    7. '(k' → logprob: -4.316517353057861
    8. '_zero' → logprob: -4.316517353057861
    9. '_valid' → logprob: -5.066517353057861
    10. '_condition' → logprob: -5.691517353057861

Token 350: 'flow' (ID: 7571)
  Prédit: 'flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' → logprob: -0.010767534375190735
    2. 'f' → logprob: -5.635767459869385
    3. 'fl' → logprob: -6.135767459869385
    4. 'low' → logprob: -6.510767459869385
    5. 'flo' → logprob: -6.510767459869385
    6. 'flows' → logprob: -6.885767459869385
    7. '
' → logprob: -8.135767936706543
    8. 'load' → logprob: -9.635767936706543
    9. 'float' → logprob: -9.885767936706543
    10. 'floor' → logprob: -10.010767936706543

Token 351: '_condition' (ID: 64948)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.299973726272583
    2. '(x' → logprob: -1.549973726272583
    3. '(' → logprob: -3.174973726272583
    4. '(n' → logprob: -6.049973487854004
    5. '(s' → logprob: -7.174973487854004
    6. 'def' → logprob: -7.674973487854004
    7. '(i' → logprob: -7.674973487854004
    8. '_k' → logprob: -8.174973487854004
    9. ' (' → logprob: -8.674973487854004
    10. '((' → logprob: -9.674973487854004

Token 352: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.28507670760154724
    2. '(x' → logprob: -1.4100767374038696
    3. '(' → logprob: -5.66007661819458
    4. '(n' → logprob: -8.785077095031738
    5. ' (' → logprob: -9.035077095031738
    6. '(s' → logprob: -10.035077095031738
    7. 'def' → logprob: -10.285077095031738
    8. '(c' → logprob: -11.160077095031738
    9. '((' → logprob: -11.285077095031738
    10. '(
' → logprob: -11.660077095031738

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023155955132097006
    2. '):' → logprob: -6.752315521240234
    3. ' ,' → logprob: -7.377315521240234
    4. ')' → logprob: -9.002315521240234
    5. ',k' → logprob: -9.127315521240234
    6. '>=' → logprob: -9.502315521240234
    7. ' >=' → logprob: -9.752315521240234
    8. ',n' → logprob: -10.877315521240234
    9. ' >' → logprob: -10.877315521240234
    10. '>' → logprob: -11.127315521240234

Token 354: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5271369814872742
    2. 'x' → logprob: -1.277137041091919
    3. '10' → logprob: -3.652137041091919
    4. 'd' → logprob: -3.902137041091919
    5. 'n' → logprob: -3.902137041091919
    6. 'compute' → logprob: -4.27713680267334
    7. '3' → logprob: -5.02713680267334
    8. '(' → logprob: -5.15213680267334
    9. ' x' → logprob: -5.90213680267334
    10. '2' → logprob: -5.90213680267334

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007289985194802284
    2. '):' → logprob: -5.007289886474609
    3. ' ,' → logprob: -8.25728988647461
    4. ',k' → logprob: -9.00728988647461
    5. '):
' → logprob: -9.25728988647461
    6. ')' → logprob: -10.38228988647461
    7. ',
' → logprob: -10.50728988647461
    8. '=' → logprob: -12.13228988647461
    9. ' ):' → logprob: -12.25728988647461
    10. ',x' → logprob: -12.38228988647461

Token 356: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.4594721794128418
    2. 'x' → logprob: -1.7094721794128418
    3. 'd' → logprob: -2.209472179412842
    4. ' mod' → logprob: -3.459472179412842
    5. 'k' → logprob: -3.834472179412842
    6. ' x' → logprob: -4.459472179412842
    7. ' d' → logprob: -5.334472179412842
    8. 'm' → logprob: -6.584472179412842
    9. 'fact' → logprob: -6.584472179412842
    10. ' k' → logprob: -7.396972179412842

Token 357: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04230889678001404
    2. ',' → logprob: -3.292308807373047
    3. '):
' → logprob: -5.542308807373047
    4. ' ):' → logprob: -8.417308807373047
    5. ')' → logprob: -9.292308807373047
    6. ' ,' → logprob: -11.542308807373047
    7. '):
' → logprob: -12.292308807373047
    8. '   ' → logprob: -12.542308807373047
    9. ',
' → logprob: -13.042308807373047
    10. ':' → logprob: -13.167308807373047

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005105441436171532
    2. 'return' → logprob: -6.005105495452881
    3. ' return' → logprob: -6.005105495452881
    4. 'if' → logprob: -9.005105018615723
    5. ' if' → logprob: -10.755105018615723
    6. 'n' → logprob: -12.255105018615723
    7. '   ' → logprob: -13.130105018615723
    8. '```' → logprob: -13.130105018615723
    9. '	return' → logprob: -13.630105018615723
    10. '    
' → logprob: -14.255105018615723

Token 359: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012529898434877396
    2. ' return' → logprob: -4.8875298500061035
    3. 'if' → logprob: -5.8875298500061035
    4. '   ' → logprob: -6.2625298500061035
    5. 'k' → logprob: -10.137530326843262
    6. 'threshold' → logprob: -10.262530326843262
    7. 'max' → logprob: -10.512530326843262
    8. '#' → logprob: -11.137530326843262
    9. 'def' → logprob: -11.387530326843262
    10. '(k' → logprob: -11.512530326843262

Token 360: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2007991373538971
    2. 'n' → logprob: -2.3257992267608643
    3. '(k' → logprob: -2.9507992267608643
    4. '(n' → logprob: -3.7007992267608643
    5. 'pow' → logprob: -5.950798988342285
    6. '2' → logprob: -6.825798988342285
    7. ' k' → logprob: -7.200798988342285
    8. '(' → logprob: -7.450798988342285
    9. ' n' → logprob: -7.700798988342285
    10. '((' → logprob: -7.950798988342285

Token 361: ' +' (ID: 659)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.33829841017723083
    2. '<' → logprob: -1.9632984399795532
    3. ' >=' → logprob: -2.7132983207702637
    4. '>' → logprob: -2.9632983207702637
    5. ' <' → logprob: -3.9632983207702637
    6. ' >' → logprob: -4.963298320770264
    7. '<=' → logprob: -7.088298320770264
    8. '*' → logprob: -7.588298320770264
    9. ' *' → logprob: -7.963298320770264
    10. '+' → logprob: -7.963298320770264

Token 362: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5385327935218811
    2. 'k' → logprob: -0.9135327935218811
    3. '2' → logprob: -4.288532733917236
    4. '3' → logprob: -7.788532733917236
    5. '10' → logprob: -8.038533210754395
    6. '4' → logprob: -8.413533210754395
    7. '(k' → logprob: -8.788533210754395
    8. ' ' → logprob: -9.288533210754395
    9. '(' → logprob: -9.538533210754395
    10. '7' → logprob: -9.913533210754395

Token 363: ' -' (ID: 533)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.4839881658554077
    2. ' >' → logprob: -1.4839881658554077
    3. '>=' → logprob: -1.4839881658554077
    4. ' >=' → logprob: -1.7339881658554077
    5. ' <' → logprob: -2.9839882850646973
    6. '<' → logprob: -3.2339882850646973
    7. '-' → logprob: -3.7339882850646973
    8. ' -' → logprob: -4.483988285064697
    9. '+' → logprob: -4.858988285064697
    10. '*' → logprob: -5.358988285064697

Token 364: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07014194130897522
    2. '2' → logprob: -2.6951420307159424
    3. '3' → logprob: -9.320141792297363
    4. 'mod' → logprob: -9.570141792297363
    5. ' ' → logprob: -10.195141792297363
    6. '0' → logprob: -13.195141792297363
    7. '4' → logprob: -13.570141792297363
    8. '(' → logprob: -13.570141792297363
    9. '(mod' → logprob: -13.570141792297363
    10. '5' → logprob: -14.070141792297363

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034080516546964645
    2. '2' → logprob: -3.4090805053710938
    3. 'mod' → logprob: -8.284080505371094
    4. '3' → logprob: -8.909080505371094
    5. '10' → logprob: -11.409080505371094
    6. '5' → logprob: -12.159080505371094
    7. ' ' → logprob: -12.159080505371094
    8. '(' → logprob: -12.159080505371094
    9. '(mod' → logprob: -12.409080505371094
    10. '4' → logprob: -12.409080505371094

Token 366: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4525231420993805
    2. ' >' → logprob: -1.702523112297058
    3. '>=' → logprob: -2.2025232315063477
    4. '>' → logprob: -3.2025232315063477
    5. ' <' → logprob: -3.8275232315063477
    6. '<' → logprob: -4.952523231506348
    7. '<|end|>' → logprob: -6.827523231506348
    8. ' ' → logprob: -8.702523231506348
    9. ')>=' → logprob: -9.077523231506348
    10. ' <=' → logprob: -9.077523231506348

Token 367: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.014273980632424355
    2. ' mod' → logprob: -4.2642741203308105
    3. '   ' → logprob: -9.139273643493652
    4. '	mod' → logprob: -13.139273643493652
    5. '(mod' → logprob: -14.639273643493652
    6. '2' → logprob: -15.389273643493652
    7. '10' → logprob: -15.764273643493652
    8. ' ' → logprob: -15.889273643493652
    9. '    ' → logprob: -16.63927459716797
    10. '  ' → logprob: -16.76427459716797

Token 368: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 369: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3020063638687134
    2. ')' → logprob: -1.6770063638687134
    3. '(' → logprob: -2.677006244659424
    4. '_' → logprob: -6.552006244659424
    5. '#' → logprob: -7.552006244659424
    6. '[' → logprob: -7.677006244659424
    7. 'n' → logprob: -7.677006244659424
    8. '\' → logprob: -8.052006721496582
    9. '+' → logprob: -8.177006721496582
    10. ',' → logprob: -8.552006721496582

Token 370: ' handle' (ID: 5318)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002429524902254343
    2. ' def' → logprob: -6.127429485321045
    3. 'main' → logprob: -9.252429962158203
    4. 'ef' → logprob: -10.877429962158203
    5. 'compute' → logprob: -11.002429962158203
    6. 'solve' → logprob: -11.252429962158203
    7. 'ndef' → logprob: -11.502429962158203
    8. 'd' → logprob: -11.627429962158203
    9. 'get' → logprob: -11.877429962158203
    10. 'define' → logprob: -12.002429962158203

Token 371: '_over' (ID: 34788)
  Prédit: '_over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_over' → logprob: -0.17934216558933258
    2. 'overflow' → logprob: -2.304342269897461
    3. '_zero' → logprob: -3.304342269897461
    4. 'zero' → logprob: -4.929342269897461
    5. 'over' → logprob: -5.429342269897461
    6. 'check' → logprob: -5.554342269897461
    7. '_large' → logprob: -6.179342269897461
    8. '_' → logprob: -6.554342269897461
    9. '_check' → logprob: -6.804342269897461
    10. '(n' → logprob: -7.304342269897461

Token 372: 'flow' (ID: 7571)
  Prédit: 'flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' → logprob: -9.968312951968983e-06
    2. 'low' → logprob: -12.000009536743164
    3. 'f' → logprob: -13.125009536743164
    4. 'fl' → logprob: -14.375009536743164
    5. 'flows' → logprob: -15.125009536743164
    6. 'flo' → logprob: -15.125009536743164
    7. '```' → logprob: -15.875009536743164
    8. 'overflow' → logprob: -16.250009536743164
    9. '_flow' → logprob: -16.250009536743164
    10. '
' → logprob: -16.625009536743164

Token 373: '_case' (ID: 43667)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.33499661087989807
    2. '(n' → logprob: -1.7099965810775757
    3. '():
' → logprob: -2.4599967002868652
    4. '_condition' → logprob: -4.709996700286865
    5. '(' → logprob: -5.834996700286865
    6. '_case' → logprob: -6.209996700286865
    7. '()' → logprob: -6.709996700286865
    8. 'def' → logprob: -7.084996700286865
    9. ' ():' → logprob: -7.209996700286865
    10. '(k' → logprob: -7.709996700286865

Token 374: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.698826789855957
    2. '():' → logprob: -0.823826789855957
    3. '(n' → logprob: -2.823826789855957
    4. '(x' → logprob: -5.698826789855957
    5. '(' → logprob: -7.198826789855957
    6. '(k' → logprob: -8.948826789855957
    7. '()' → logprob: -9.198826789855957
    8. 'def' → logprob: -9.198826789855957
    9. ' ():' → logprob: -9.198826789855957
    10. '   ' → logprob: -9.448826789855957

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01025108341127634
    2. 'return' → logprob: -4.635251045227051
    3. ' return' → logprob: -8.26025104522705
    4. 'print' → logprob: -9.88525104522705
    5. 'def' → logprob: -9.88525104522705
    6. 'exit' → logprob: -10.13525104522705
    7. '	return' → logprob: -11.01025104522705
    8. ':
' → logprob: -11.26025104522705
    9. '```' → logprob: -11.38525104522705
    10. '
' → logprob: -11.51025104522705

Token 376: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018797220662236214
    2. 'print' → logprob: -4.393797397613525
    3. 'exit' → logprob: -5.768797397613525
    4. '   ' → logprob: -6.393797397613525
    5. '0' → logprob: -6.768797397613525
    6. ' return' → logprob: -9.018796920776367
    7. 'raise' → logprob: -9.393796920776367
    8. 'pass' → logprob: -9.893796920776367
    9. '1' → logprob: -10.768796920776367
    10. 'set' → logprob: -11.893796920776367

Token 377: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47375187277793884
    2. ' ' → logprob: -1.7237519025802612
    3. 'None' → logprob: -2.4737517833709717
    4. '-' → logprob: -2.5987517833709717
    5. ' None' → logprob: -3.3487517833709717
    6. ' -' → logprob: -5.848752021789551
    7. '1' → logprob: -7.348752021789551
    8. '"' → logprob: -7.848752021789551
    9. '[]' → logprob: -8.47375202178955
    10. '  ' → logprob: -8.72375202178955

Token 378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014173968695104122
    2. '-' → logprob: -4.764173984527588
    3. '1' → logprob: -5.639173984527588
    4. '"' → logprob: -6.639173984527588
    5. 'None' → logprob: -8.26417350769043
    6. 'print' → logprob: -9.38917350769043
    7. ' ' → logprob: -9.88917350769043
    8. '(' → logprob: -10.13917350769043
    9. '```' → logprob: -10.13917350769043
    10. 'set' → logprob: -10.88917350769043

Token 379: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1886824071407318
    2. ')' → logprob: -2.3136823177337646
    3. '<|end|>' → logprob: -3.3136823177337646
    4. '(' → logprob: -4.188682556152344
    5. ':' → logprob: -5.063682556152344
    6. '
' → logprob: -5.688682556152344
    7. '(
' → logprob: -6.063682556152344
    8. '#' → logprob: -6.313682556152344
    9. 'x' → logprob: -6.938682556152344
    10. ',' → logprob: -7.063682556152344

Token 381: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.061821792274713516
    2. 'def' → logprob: -3.811821699142456
    3. 'solve' → logprob: -3.811821699142456
    4. 'compute' → logprob: -4.936821937561035
    5. ' main' → logprob: -5.061821937561035
    6. 'calculate' → logprob: -7.561821937561035
    7. 'process' → logprob: -7.936821937561035
    8. 'read' → logprob: -8.311821937561035
    9. 'comb' → logprob: -8.561821937561035
    10. ' solve' → logprob: -9.061821937561035

Token 382: '_answer' (ID: 65702)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.548645257949829
    2. '_sum' → logprob: -2.048645257949829
    3. '_comb' → logprob: -2.798645257949829
    4. '_series' → logprob: -3.048645257949829
    5. '_s' → logprob: -3.173645257949829
    6. '_n' → logprob: -3.298645257949829
    7. '_com' → logprob: -3.298645257949829
    8. 'k' → logprob: -3.423645257949829
    9. '_pol' → logprob: -3.423645257949829
    10. '_sequence' → logprob: -3.548645257949829

Token 383: '(n' (ID: 2406)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03379426524043083
    2. '(' → logprob: -3.4087941646575928
    3. '(n' → logprob: -10.033794403076172
    4. '():' → logprob: -10.408794403076172
    5. ' (' → logprob: -10.658794403076172
    6. '(k' → logprob: -10.658794403076172
    7. '(s' → logprob: -12.033794403076172
    8. '(
' → logprob: -12.283794403076172
    9. '(a' → logprob: -12.908794403076172
    10. '(p' → logprob: -13.408794403076172

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.919942486798391e-05
    2. ' ,' → logprob: -10.625059127807617
    3. ',k' → logprob: -10.875059127807617
    4. ',x' → logprob: -11.250059127807617
    5. ',
' → logprob: -13.500059127807617
    6. '):' → logprob: -15.000059127807617
    7. ',n' → logprob: -15.375059127807617
    8. ')' → logprob: -15.875059127807617
    9. '   ' → logprob: -16.125059127807617
    10. 'x' → logprob: -16.250059127807617

Token 385: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02085658349096775
    2. 'x' → logprob: -4.0208563804626465
    3. ' k' → logprob: -6.0208563804626465
    4. ' x' → logprob: -8.395856857299805
    5. 'mod' → logprob: -10.895856857299805
    6. 'd' → logprob: -11.520856857299805
    7. 'm' → logprob: -12.145856857299805
    8. '   ' → logprob: -12.895856857299805
    9. '```' → logprob: -13.020856857299805
    10. ' ' → logprob: -13.145856857299805

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020226165652275085
    2. '):' → logprob: -6.377022743225098
    3. ' ,' → logprob: -8.377022743225098
    4. '):
' → logprob: -10.377022743225098
    5. ',
' → logprob: -10.752022743225098
    6. '   ' → logprob: -10.752022743225098
    7. ' ):' → logprob: -12.502022743225098
    8. 'def' → logprob: -12.877022743225098
    9. ',n' → logprob: -13.377022743225098
    10. '
' → logprob: -14.002022743225098

Token 387: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.5689775347709656
    2. 'mod' → logprob: -0.9439775347709656
    3. ' fact' → logprob: -3.5689775943756104
    4. ' mod' → logprob: -4.318977355957031
    5. 'inv' → logprob: -6.318977355957031
    6. 'd' → logprob: -7.818977355957031
    7. 'x' → logprob: -7.943977355957031
    8. ' inv' → logprob: -8.568977355957031
    9. ' x' → logprob: -9.318977355957031
    10. '
' → logprob: -9.568977355957031

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ' ,' → logprob: -11.875009536743164
    3. '):' → logprob: -13.875009536743164
    4. ',
' → logprob: -14.000009536743164
    5. ',f' → logprob: -15.000009536743164
    6. '   ' → logprob: -15.750009536743164
    7. ',n' → logprob: -15.875009536743164
    8. '_,' → logprob: -16.125009536743164
    9. ' ' → logprob: -16.125009536743164
    10. ',k' → logprob: -16.250009536743164

Token 389: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.001709328847937286
    2. ' inv' → logprob: -6.376709461212158
    3. '   ' → logprob: -12.376708984375
    4. ' ' → logprob: -14.126708984375
    5. 'mod' → logprob: -14.376708984375
    6. 'inf' → logprob: -14.876708984375
    7. '    ' → logprob: -14.876708984375
    8. '(inv' → logprob: -15.126708984375
    9. '_inv' → logprob: -15.501708984375
    10. ')' → logprob: -16.126708984375

Token 390: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -3.292907877039397e-06
    2. '_fact' → logprob: -13.12500286102295
    3. 'f' → logprob: -14.37500286102295
    4. 'fac' → logprob: -14.87500286102295
    5. ',' → logprob: -16.000003814697266
    6. ')' → logprob: -16.625003814697266
    7. ' fact' → logprob: -16.625003814697266
    8. 'factor' → logprob: -17.875003814697266
    9. 'fa' → logprob: -18.125003814697266
    10. 'Fact' → logprob: -18.500003814697266

Token 391: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43075838685035706
    2. ',' → logprob: -1.0557583570480347
    3. '):
' → logprob: -6.305758476257324
    4. ')' → logprob: -8.930758476257324
    5. ' ):' → logprob: -10.180758476257324
    6. ' ,' → logprob: -10.805758476257324
    7. ',
' → logprob: -11.180758476257324
    8. '   ' → logprob: -12.055758476257324
    9. '):
' → logprob: -12.430758476257324
    10. ',n' → logprob: -12.930758476257324

Token 392: ' d' (ID: 272)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.018397968262434006
    2. ' mod' → logprob: -4.143397808074951
    3. 'x' → logprob: -6.393397808074951
    4. 'd' → logprob: -7.893397808074951
    5. ' x' → logprob: -9.26839828491211
    6. ')' → logprob: -10.51839828491211
    7. 'fact' → logprob: -10.64339828491211
    8. ' d' → logprob: -10.76839828491211
    9. 'n' → logprob: -10.89339828491211
    10. 'stderr' → logprob: -10.89339828491211

Token 393: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02797270193696022
    2. '):
' → logprob: -3.77797269821167
    3. ',' → logprob: -5.40297269821167
    4. '):
' → logprob: -9.277973175048828
    5. ')' → logprob: -9.527973175048828
    6. ' ):' → logprob: -10.402973175048828
    7. '):

' → logprob: -12.027973175048828
    8. ',
' → logprob: -13.152973175048828
    9. '   ' → logprob: -13.652973175048828
    10. '
' → logprob: -13.777973175048828

Token 394: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1587235927581787
    2. 'x' → logprob: -2.2837235927581787
    3. ' mod' → logprob: -3.4087235927581787
    4. ' x' → logprob: -4.533723831176758
    5. 'n' → logprob: -7.658723831176758
    6. 'k' → logprob: -8.408723831176758
    7. ' n' → logprob: -9.783723831176758
    8. 'fact' → logprob: -9.783723831176758
    9. '   ' → logprob: -10.283723831176758
    10. ')' → logprob: -10.408723831176758

Token 395: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2386321723461151
    2. '):
' → logprob: -1.6136322021484375
    3. ',' → logprob: -4.3636322021484375
    4. '):
' → logprob: -7.9886322021484375
    5. '   ' → logprob: -10.113632202148438
    6. '):

' → logprob: -11.988632202148438
    7. ')' → logprob: -12.238632202148438
    8. ' ):' → logprob: -12.738632202148438
    9. ':' → logprob: -12.863632202148438
    10. ',
' → logprob: -14.238632202148438

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006883674650453031
    2. 'if' → logprob: -8.250688552856445
    3. 'res' → logprob: -9.000688552856445
    4. '```' → logprob: -9.375688552856445
    5. 'c' → logprob: -9.500688552856445
    6. 's' → logprob: -10.000688552856445
    7. 'm' → logprob: -10.750688552856445
    8. 'ans' → logprob: -11.375688552856445
    9. '    
' → logprob: -11.625688552856445
    10. ' res' → logprob: -12.125688552856445

Token 397: ' value' (ID: 1432)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7704969644546509
    2. 'return' → logprob: -1.5204969644546509
    3. 'if' → logprob: -1.7704969644546509
    4. 'res' → logprob: -3.0204968452453613
    5. 'ans' → logprob: -3.5204968452453613
    6. '   ' → logprob: -3.6454968452453613
    7. 'comb' → logprob: -4.645496845245361
    8. 'temp' → logprob: -5.270496845245361
    9. 'r' → logprob: -5.770496845245361
    10. 'C' → logprob: -6.020496845245361

Token 398: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326265335083008
    2. ' =' → logprob: -0.7576265335083008
    3. '   ' → logprob: -11.7576265335083
    4. '_' → logprob: -11.8826265335083
    5. 's' → logprob: -12.3826265335083
    6. ' =
' → logprob: -13.5076265335083
    7. ',' → logprob: -13.6326265335083
    8. ' ' → logprob: -13.7576265335083
    9. 'def' → logprob: -14.1326265335083
    10. '=
' → logprob: -14.3826265335083

Token 399: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17975258827209473
    2. '=' → logprob: -1.8047525882720947
    3. '1' → logprob: -13.304752349853516
    4. ',' → logprob: -13.304752349853516
    5. ' =
' → logprob: -13.554752349853516
    6. '_' → logprob: -14.554752349853516
    7. ' ' → logprob: -14.804752349853516
    8. ')' → logprob: -14.929752349853516
    9. ' ' → logprob: -14.929752349853516
    10. '=
' → logprob: -15.054752349853516

Token 400: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.4504205882549286
    2. '(n' → logprob: -2.450420618057251
    3. 'pow' → logprob: -2.450420618057251
    4. '(f' → logprob: -2.950420618057251
    5. '(' → logprob: -3.450420618057251
    6. '(d' → logprob: -3.700420618057251
    7. '(k' → logprob: -3.825420618057251
    8. '((' → logprob: -3.950420618057251
    9. '(pow' → logprob: -4.325420379638672
    10. '(inv' → logprob: -5.700420379638672

Token 401: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0018698560306802392
    2. '[k' → logprob: -6.3768696784973145
    3. '[' → logprob: -9.376870155334473
    4. 'n' → logprob: -9.501870155334473
    5. '[
' → logprob: -12.501870155334473
    6. '[(' → logprob: -13.376870155334473
    7. '(n' → logprob: -13.501870155334473
    8. 'k' → logprob: -14.251870155334473
    9. '	n' → logprob: -15.876870155334473
    10. '```' → logprob: -16.001869201660156

Token 402: ' +' (ID: 659)
  Prédit: '+k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+k' → logprob: -0.08852298557758331
    2. '+' → logprob: -2.5885229110717773
    3. ' +' → logprob: -5.588522911071777
    4. 'k' → logprob: -5.963522911071777
    5. '
' → logprob: -6.713522911071777
    6. 'plus' → logprob: -7.213522911071777
    7. '-' → logprob: -7.963522911071777
    8. '   ' → logprob: -8.088522911071777
    9. '+n' → logprob: -8.588522911071777
    10. '```' → logprob: -9.463522911071777

Token 403: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.531315314830863e-06
    2. ' k' → logprob: -12.625003814697266
    3. ' ' → logprob: -15.875003814697266
    4. '   ' → logprob: -16.625003814697266
    5. '
' → logprob: -17.500003814697266
    6. '  ' → logprob: -18.125003814697266
    7. '	k' → logprob: -18.125003814697266
    8. '(k' → logprob: -18.500003814697266
    9. 'x' → logprob: -19.250003814697266
    10. '[k' → logprob: -19.375003814697266

Token 404: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04308471828699112
    2. ' -' → logprob: -3.1680846214294434
    3. '
' → logprob: -10.293085098266602
    4. ' ' → logprob: -10.793085098266602
    5. '   ' → logprob: -11.543085098266602
    6. '```' → logprob: -12.543085098266602
    7. '[' → logprob: -12.668085098266602
    8. '  ' → logprob: -12.793085098266602
    9. ']' → logprob: -13.168085098266602
    10. 's' → logprob: -13.543085098266602

Token 405: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014823723176959902
    2. ' ' → logprob: -8.875147819519043
    3. '2' → logprob: -12.000147819519043
    4. '   ' → logprob: -13.250147819519043
    5. '```' → logprob: -15.500147819519043
    6. '<|end|>' → logprob: -16.25014877319336
    7. '  ' → logprob: -17.12514877319336
    8. '<|end|>' → logprob: -17.25014877319336
    9. '
' → logprob: -18.12514877319336
    10. '`' → logprob: -18.37514877319336

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.750015258789062
    3. '2' → logprob: -11.875015258789062
    4. '   ' → logprob: -15.875015258789062
    5. '
' → logprob: -16.000015258789062
    6. '```' → logprob: -16.250015258789062
    7. '<|end|>' → logprob: -17.812515258789062
    8. '۱' → logprob: -18.000015258789062
    9. '  ' → logprob: -18.812515258789062
    10. '

' → logprob: -18.875015258789062

Token 407: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004552215104922652
    2. ']
' → logprob: -7.875455379486084
    3. ']*' → logprob: -9.875454902648926
    4. ']%' → logprob: -11.375454902648926
    5. ']

' → logprob: -12.375454902648926
    6. ']
' → logprob: -13.125454902648926
    7. '   ' → logprob: -13.125454902648926
    8. ' ]' → logprob: -13.125454902648926
    9. ']*(' → logprob: -15.250454902648926
    10. '],' → logprob: -15.250454902648926

Token 408: '   ' (ID: 271)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5712847709655762
    2. '   ' → logprob: -1.1962847709655762
    3. 'value' → logprob: -2.821284770965576
    4. '*' → logprob: -3.321284770965576
    5. '<|end|>' → logprob: -3.696284770965576
    6. ' value' → logprob: -5.821284770965576
    7. '
' → logprob: -6.196284770965576
    8. '  ' → logprob: -6.946284770965576
    9. ',' → logprob: -7.071284770965576
    10. '    
' → logprob: -7.196284770965576

Token 409: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' (adapté à ' value') → logprob: -0.00727815693244338
    2. ' value' → logprob: -5.507277965545654
    3. '   ' → logprob: -5.757277965545654
    4. '	value' → logprob: -12.382278442382812
    5. '_value' → logprob: -12.382278442382812
    6. '    
' → logprob: -12.507278442382812
    7. '<|end|>' → logprob: -12.507278442382812
    8. '(value' → logprob: -12.757278442382812
    9. '*' → logprob: -13.132278442382812
    10. ')' → logprob: -13.132278442382812

Token 410: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23038125038146973
    2. '2' → logprob: -2.1053812503814697
    3. ' =' → logprob: -2.8553812503814697
    4. ' *' → logprob: -4.605381011962891
    5. '*' → logprob: -5.105381011962891
    6. '1' → logprob: -5.105381011962891
    7. '_' → logprob: -6.605381011962891
    8. '   ' → logprob: -6.730381011962891
    9. '*=' → logprob: -7.730381011962891
    10. '```' → logprob: -7.980381011962891

Token 411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022706031799316
    2. '=' → logprob: -1.9102270603179932
    3. ')' → logprob: -14.285226821899414
    4. ',' → logprob: -14.785226821899414
    5. ' *' → logprob: -14.785226821899414
    6. '   ' → logprob: -14.910226821899414
    7. ' ' → logprob: -14.910226821899414
    8. '<|end|>' → logprob: -15.160226821899414
    9. '*' → logprob: -15.410226821899414
    10. '=int' → logprob: -16.410226821899414

Token 412: ' inv' (ID: 1827)
  Prédit: '(inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inv' → logprob: -0.5857575535774231
    2. 'inv' → logprob: -0.8357575535774231
    3. ' inv' → logprob: -5.335757732391357
    4. ' (' → logprob: -6.210757732391357
    5. '(in' → logprob: -6.585757732391357
    6. '(f' → logprob: -7.585757732391357
    7. '(' → logprob: -7.710757732391357
    8. '((' → logprob: -9.0857572555542
    9. '   ' → logprob: -9.2107572555542
    10. '(fun' → logprob: -10.3982572555542

Token 413: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -3.128163257315464e-07
    2. ' fact' → logprob: -15.375
    3. '_fact' → logprob: -18.5
    4. 'f' → logprob: -19.625
    5. 'fac' → logprob: -19.75
    6. 'factor' → logprob: -21.375
    7. 'ifact' → logprob: -21.375
    8. '.fact' → logprob: -21.375
    9. 'facts' → logprob: -21.625
    10. '   ' → logprob: -21.625

Token 414: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.05499117448925972
    2. '[n' → logprob: -2.9299912452697754
    3. 'k' → logprob: -9.304990768432617
    4. '[' → logprob: -12.054990768432617
    5. '[(' → logprob: -12.304990768432617
    6. '[
' → logprob: -13.429990768432617
    7. 'n' → logprob: -13.429990768432617
    8. '[key' → logprob: -14.429990768432617
    9. '[x' → logprob: -14.929990768432617
    10. '

' → logprob: -15.054990768432617

Token 415: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3164758086204529
    2. ']' → logprob: -1.3164758682250977
    3. ' -' → logprob: -5.941475868225098
    4. '1' → logprob: -7.816475868225098
    5. ']-' → logprob: -9.566475868225098
    6. '[' → logprob: -9.941475868225098
    7. '<|end|>' → logprob: -11.191475868225098
    8. '[-' → logprob: -11.316475868225098
    9. '])' → logprob: -12.316475868225098
    10. '],' → logprob: -12.566475868225098

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.000001907348633
    3. '<|end|>' → logprob: -14.625001907348633
    4. '```' → logprob: -15.625001907348633
    5. ')' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.875001907348633
    7. '۱' → logprob: -17.125001907348633
    8. '2' → logprob: -17.375001907348633
    9. ']' → logprob: -17.562501907348633
    10. '
' → logprob: -17.937501907348633

Token 417: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001191775663755834
    2. ']
' → logprob: -6.75119161605835
    3. ']

' → logprob: -12.376192092895508
    4. ']*' → logprob: -12.501192092895508
    5. ']%' → logprob: -12.501192092895508
    6. '   ' → logprob: -12.751192092895508
    7. ']
' → logprob: -13.001192092895508
    8. ' ]' → logprob: -13.376192092895508
    9. '<|end|>' → logprob: -14.001192092895508
    10. '']' → logprob: -14.001192092895508

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13616891205310822
    2. '<|end|>' → logprob: -2.386168956756592
    3. '*' → logprob: -4.261168956756592
    4. 'value' → logprob: -4.886168956756592
    5. ' *' → logprob: -5.011168956756592
    6. '<|end|>' → logprob: -6.511168956756592
    7. '    
' → logprob: -6.636168956756592
    8. ' 
' → logprob: -7.511168956756592
    9. ')' → logprob: -7.636168956756592
    10. ' ' → logprob: -7.886168956756592

Token 419: ' value' (ID: 1432)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5535773634910583
    2. 'value' (adapté à ' value') → logprob: -1.0535774230957031
    3. ' value' → logprob: -2.678577423095703
    4. '<|end|>' → logprob: -6.053577423095703
    5. '    ' → logprob: -6.678577423095703
    6. ' ' → logprob: -6.803577423095703
    7. ' 
' → logprob: -7.178577423095703
    8. '    
' → logprob: -7.553577423095703
    9. '	value' → logprob: -8.553577423095703
    10. '*' → logprob: -8.553577423095703

Token 420: '3' (ID: 18)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15960249304771423
    2. ' =' → logprob: -2.034602403640747
    3. ' *' → logprob: -4.909602642059326
    4. '*' → logprob: -5.159602642059326
    5. '3' → logprob: -6.909602642059326
    6. '_' → logprob: -7.284602642059326
    7. '2' → logprob: -7.284602642059326
    8. '[' → logprob: -8.284602165222168
    9. '   ' → logprob: -8.659602165222168
    10. '1' → logprob: -8.659602165222168

Token 421: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740793704986572
    2. ' =' → logprob: -0.9740793704986572
    3. ' ' → logprob: -14.099079132080078
    4. '   ' → logprob: -14.474079132080078
    5. '*' → logprob: -15.349079132080078
    6. ')' → logprob: -15.474079132080078
    7. ',' → logprob: -15.849079132080078
    8. ' *' → logprob: -15.849079132080078
    9. '=
' → logprob: -15.849079132080078
    10. ' =
' → logprob: -16.349079132080078

Token 422: ' pow' (ID: 9779)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.16117334365844727
    2. ' inv' → logprob: -1.9111733436584473
    3. '   ' → logprob: -7.411173343658447
    4. '(inv' → logprob: -8.286172866821289
    5. '  ' → logprob: -10.661172866821289
    6. ' ' → logprob: -10.661172866821289
    7. 'fact' → logprob: -11.036172866821289
    8. '    ' → logprob: -11.911172866821289
    9. ' (' → logprob: -12.536172866821289
    10. '       ' → logprob: -12.911172866821289

Token 423: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0008477445808239281
    2. 'd' → logprob: -7.750847816467285
    3. '(' → logprob: -8.000847816467285
    4. '(value' → logprob: -9.875847816467285
    5. '2' → logprob: -11.500847816467285
    6. '(
' → logprob: -11.750847816467285
    7. '(k' → logprob: -12.500847816467285
    8. '((' → logprob: -12.750847816467285
    9. '(x' → logprob: -13.875847816467285
    10. 'value' → logprob: -14.125847816467285

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.058675043284893036
    2. ',n' → logprob: -3.5586750507354736
    3. 'k' → logprob: -4.4336748123168945
    4. 'n' → logprob: -4.5586748123168945
    5. ',k' → logprob: -5.1836748123168945
    6. ' ,' → logprob: -8.183674812316895
    7. '(n' → logprob: -8.808674812316895
    8. ')' → logprob: -9.808674812316895
    9. ',
' → logprob: -10.683674812316895
    10. '
' → logprob: -11.558674812316895

Token 425: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006752623594366014
    2. '(n' → logprob: -8.000675201416016
    3. ' n' → logprob: -8.500675201416016
    4. 'k' → logprob: -9.625675201416016
    5. '   ' → logprob: -10.000675201416016
    6. '
' → logprob: -12.125675201416016
    7. '	n' → logprob: -12.625675201416016
    8. ' (' → logprob: -12.750675201416016
    9. '    ' → logprob: -12.750675201416016
    10. ' ' → logprob: -13.250675201416016

Token 426: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1338602602481842
    2. ',' → logprob: -2.1338603496551514
    3. ' -' → logprob: -5.633860111236572
    4. ')' → logprob: -5.883860111236572
    5. '*' → logprob: -8.63386058807373
    6. '```' → logprob: -9.00886058807373
    7. ' ,' → logprob: -9.50886058807373
    8. '%' → logprob: -9.63386058807373
    9. ' ' → logprob: -10.88386058807373
    10. '   ' → logprob: -11.00886058807373

Token 427: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.005234002135694027
    2. ' mod' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.755233764648438
    4. '(mod' → logprob: -16.880233764648438
    5. '	mod' → logprob: -17.130233764648438
    6. '   ' → logprob: -17.755233764648438
    7. ')' → logprob: -18.380233764648438
    8. '
' → logprob: -18.505233764648438
    9. '  ' → logprob: -19.130233764648438
    10. '```' → logprob: -19.255233764648438

Token 428: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034261439577676356
    2. ')
' → logprob: -8.37534236907959
    3. '   ' → logprob: -9.25034236907959
    4. ',' → logprob: -12.00034236907959
    5. ' )' → logprob: -12.62534236907959
    6. ')*' → logprob: -13.75034236907959
    7. ')%' → logprob: -14.12534236907959
    8. 'def' → logprob: -14.25034236907959
    9. '),' → logprob: -14.37534236907959
    10. '<|end|>' → logprob: -14.62534236907959

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001877947011962533
    2. '<|end|>' → logprob: -7.251877784729004
    3. 'value' → logprob: -7.376877784729004
    4. '	value' → logprob: -8.501877784729004
    5. ')' → logprob: -9.376877784729004
    6. '    
' → logprob: -10.001877784729004
    7. ' value' → logprob: -10.251877784729004
    8. '
' → logprob: -10.501877784729004
    9. '*' → logprob: -11.001877784729004
    10. '    ' → logprob: -11.251877784729004

Token 430: ' res' (ID: 694)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.35169366002082825
    2. 'return' → logprob: -1.6016936302185059
    3. '   ' → logprob: -2.476693630218506
    4. 'result' → logprob: -5.101693630218506
    5. 'answer' → logprob: -6.101693630218506
    6. ' value' → logprob: -7.101693630218506
    7. ' return' → logprob: -7.726693630218506
    8. '
' → logprob: -7.726693630218506
    9. 'ans' → logprob: -7.976693630218506
    10. '    
' → logprob: -8.476694107055664

Token 431: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47779300808906555
    2. '=' → logprob: -1.2277929782867432
    3. 'ult' → logprob: -2.477792978286743
    4. 'ults' → logprob: -6.477793216705322
    5. 'u' → logprob: -7.102793216705322
    6. 'ULT' → logprob: -8.852792739868164
    7. 'ultat' → logprob: -9.102792739868164
    8. 'ulta' → logprob: -9.477792739868164
    9. 'ul' → logprob: -9.602792739868164
    10. '	' → logprob: -10.102792739868164

Token 432: ' value' (ID: 1432)
  Prédit: '(value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.500259518623352
    2. 'value' → logprob: -1.250259518623352
    3. ' value' → logprob: -2.6252593994140625
    4. ' (' → logprob: -3.3752593994140625
    5. '(' → logprob: -8.250259399414062
    6. '((' → logprob: -8.500259399414062
    7. '(((' → logprob: -10.375259399414062
    8. '"value' → logprob: -11.125259399414062
    9. '   ' → logprob: -11.625259399414062
    10. ' ((' → logprob: -11.750259399414062

Token 433: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024909991770982742
    2. '3' → logprob: -6.002490997314453
    3. '
' → logprob: -12.127490997314453
    4. '```' → logprob: -12.127490997314453
    5. ' ' → logprob: -13.377490997314453
    6. '(value' → logprob: -14.127490997314453
    7. 'value' → logprob: -14.627490997314453
    8. '`' → logprob: -14.752490997314453
    9. '   ' → logprob: -15.252490997314453
    10. '[' → logprob: -15.627490997314453

Token 434: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.34852030873298645
    2. '*' → logprob: -1.223520278930664
    3. '   ' → logprob: -10.223520278930664
    4. '%' → logprob: -11.848520278930664
    5. ' ' → logprob: -11.848520278930664
    6. ',' → logprob: -12.348520278930664
    7. '
' → logprob: -12.598520278930664
    8. '```' → logprob: -12.598520278930664
    9. '**' → logprob: -12.723520278930664
    10. '<|end|>' → logprob: -13.098520278930664

Token 435: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.01816890574991703
    2. ' value' → logprob: -4.018168926239014
    3. '(value' → logprob: -11.018168449401855
    4. '<|end|>' → logprob: -13.643168449401855
    5. '	value' → logprob: -14.393168449401855
    6. ' (' → logprob: -14.768168449401855
    7. ' ' → logprob: -16.018169403076172
    8. '(' → logprob: -16.143169403076172
    9. '   ' → logprob: -16.768169403076172
    10. '  ' → logprob: -16.893169403076172

Token 436: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011851112358272076
    2. '3' → logprob: -6.751184940338135
    3. 'fact' → logprob: -11.751185417175293
    4. '```' → logprob: -12.876185417175293
    5. 'factor' → logprob: -13.876185417175293
    6. '[' → logprob: -14.876185417175293
    7. 'f' → logprob: -15.126185417175293
    8. 's' → logprob: -15.751185417175293
    9. '_factor' → logprob: -15.813685417175293
    10. '1' → logprob: -15.813685417175293

Token 437: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5234173536300659
    2. '%' → logprob: -0.8984173536300659
    3. ' *' → logprob: -8.773417472839355
    4. ')' → logprob: -9.773417472839355
    5. '*' → logprob: -10.773417472839355
    6. ' %=' → logprob: -11.023417472839355
    7. '<|end|>' → logprob: -11.398417472839355
    8. '```' → logprob: -12.023417472839355
    9. ' ' → logprob: -12.148417472839355
    10. '   ' → logprob: -12.398417472839355

Token 438: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9361264946837764e-07
    2. ' mod' → logprob: -16.25
    3. '(mod' → logprob: -17.625
    4. '
' → logprob: -19.0
    5. '	mod' → logprob: -20.625
    6. '```' → logprob: -21.5
    7. 'modal' → logprob: -23.375
    8. 'm' → logprob: -23.5
    9. 'moder' → logprob: -23.625
    10. '_mod' → logprob: -23.875

Token 439: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.04713599383831024
    2. '   ' → logprob: -3.797136068344116
    3. '*' → logprob: -3.922136068344116
    4. ' res' → logprob: -6.422135829925537
    5. ' *' → logprob: -7.547135829925537
    6. '
' → logprob: -7.797135829925537
    7. '```' → logprob: -8.297136306762695
    8. '<|end|>' → logprob: -8.422136306762695
    9. '	res' → logprob: -8.672136306762695
    10. ')' → logprob: -9.047136306762695

Token 440: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5324976444244385
    2. '*' → logprob: -1.1574976444244385
    3. '   ' → logprob: -2.7824976444244385
    4. ' *' → logprob: -4.532497406005859
    5. ' res' → logprob: -5.282497406005859
    6. '%' → logprob: -5.407497406005859
    7. '```' → logprob: -5.532497406005859
    8. '<|end|>' → logprob: -5.657497406005859
    9. ')' → logprob: -6.282497406005859
    10. '	res' → logprob: -6.657497406005859

Token 441: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0024775585625320673
    2. '   ' → logprob: -6.127477645874023
    3. 'return' → logprob: -8.377477645874023
    4. ' res' → logprob: -10.252477645874023
    5. '```' → logprob: -10.752477645874023
    6. '	res' → logprob: -12.752477645874023
    7. '``' → logprob: -13.752477645874023
    8. '    
' → logprob: -15.127477645874023
    9. '
' → logprob: -15.127477645874023
    10. '(res' → logprob: -15.252477645874023

Token 442: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010605483315885067
    2. ' =' → logprob: -4.635605335235596
    3. '*=' → logprob: -7.135605335235596
    4. ' *=' → logprob: -10.635605812072754
    5. '*' → logprob: -10.885605812072754
    6. '```' → logprob: -11.885605812072754
    7. '%=' → logprob: -14.010605812072754
    8. '   ' → logprob: -14.635605812072754
    9. '.=' → logprob: -14.635605812072754
    10. ')' → logprob: -14.760605812072754

Token 443: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3286779820919037
    2. '(res' → logprob: -1.328678011894226
    3. ' res' → logprob: -4.203678131103516
    4. ' (' → logprob: -7.953678131103516
    5. '	res' → logprob: -13.328678131103516
    6. '   ' → logprob: -13.703678131103516
    7. '(' → logprob: -14.453678131103516
    8. ',res' → logprob: -14.453678131103516
    9. '```' → logprob: -14.453678131103516
    10. '_res' → logprob: -14.703678131103516

Token 444: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4740884304046631
    2. '*' → logprob: -0.9740884304046631
    3. '%' → logprob: -11.599088668823242
    4. ' ' → logprob: -13.974088668823242
    5. '```' → logprob: -14.599088668823242
    6. '**' → logprob: -14.724088668823242
    7. '*object' → logprob: -15.849088668823242
    8. ' %' → logprob: -16.599088668823242
    9. '   ' → logprob: -17.349088668823242
    10. '
' → logprob: -17.474088668823242

Token 445: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -4.1318875446449965e-05
    2. 'pow' → logprob: -11.250041007995605
    3. '(value' → logprob: -11.250041007995605
    4. ' value' → logprob: -11.375041007995605
    5. 'inv' → logprob: -12.750041007995605
    6. ')value' → logprob: -16.375041961669922
    7. '	value' → logprob: -16.375041961669922
    8. '$value' → logprob: -16.375041961669922
    9. '"value' → logprob: -16.500041961669922
    10. ''value' → logprob: -16.875041961669922

Token 446: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.816093228830141e-06
    2. 'token' → logprob: -14.62500286102295
    3. 'value' → logprob: -14.87500286102295
    4. '```' → logprob: -14.87500286102295
    5. '
' → logprob: -15.37500286102295
    6. '(value' → logprob: -15.50000286102295
    7. '(token' → logprob: -15.50000286102295
    8. '1' → logprob: -16.000001907348633
    9. '۳' → logprob: -16.750001907348633
    10. '`' → logprob: -16.750001907348633

Token 447: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.17981752753257751
    2. '%' → logprob: -1.8048175573349
    3. ')' → logprob: -10.554817199707031
    4. '
' → logprob: -11.679817199707031
    5. ' return' → logprob: -11.804817199707031
    6. ' ' → logprob: -12.054817199707031
    7. 'return' → logprob: -12.179817199707031
    8. '```' → logprob: -12.554817199707031
    9. '	' → logprob: -12.679817199707031
    10. '   ' → logprob: -12.804817199707031

Token 448: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.001170225441455841
    2. ' mod' → logprob: -6.7511701583862305
    3. '(mod' → logprob: -17.501171112060547
    4. '	mod' → logprob: -19.626171112060547
    5. '
' → logprob: -22.126171112060547
    6. ' мод' → logprob: -22.876171112060547
    7. '_mod' → logprob: -23.251171112060547
    8. 'modal' → logprob: -23.501171112060547
    9. '```' → logprob: -23.626171112060547
    10. 'm' → logprob: -23.626171112060547

Token 449: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006955007556825876
    2. 'return' → logprob: -5.006955146789551
    3. ' return' → logprob: -9.13195514678955
    4. '	return' → logprob: -9.38195514678955
    5. '```' → logprob: -10.75695514678955
    6. '    
' → logprob: -11.00695514678955
    7. '       ' → logprob: -13.50695514678955
    8. '
' → logprob: -13.63195514678955
    9. '<|end|>' → logprob: -13.63195514678955
    10. ':return' → logprob: -14.00695514678955

Token 450: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16243445873260498
    2. '   ' → logprob: -1.912434458732605
    3. ' return' → logprob: -6.4124345779418945
    4. 'res' → logprob: -7.5374345779418945
    5. '```' → logprob: -11.287434577941895
    6. '	return' → logprob: -11.537434577941895
    7. '    
' → logprob: -12.287434577941895
    8. '  ' → logprob: -13.287434577941895
    9. ' ' → logprob: -13.537434577941895
    10. 'def' → logprob: -14.162434577941895

Token 451: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004189946048427373
    2. '   ' → logprob: -8.375418663024902
    3. 'res' → logprob: -8.750418663024902
    4. ' return' → logprob: -10.750418663024902
    5. '```' → logprob: -11.875418663024902
    6. '    
' → logprob: -13.875418663024902
    7. '
' → logprob: -15.125418663024902
    8. 'def' → logprob: -15.750418663024902
    9. '	return' → logprob: -15.875418663024902
    10. '``' → logprob: -17.00041961669922

Token 452: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005233882926404476
    2. ' res' → logprob: -5.2552337646484375
    3. '(res' → logprob: -17.630233764648438
    4. '	res' → logprob: -18.630233764648438
    5. '
' → logprob: -21.505233764648438
    6. '```' → logprob: -21.755233764648438
    7. 're' → logprob: -21.880233764648438
    8. '$res' → logprob: -22.005233764648438
    9. ' ' → logprob: -22.130233764648438
    10. 'r' → logprob: -22.380233764648438

Token 453: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 454: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9552239179611206
    2. 'def' → logprob: -1.8302239179611206
    3. '(' → logprob: -1.9552239179611206
    4. 'x' → logprob: -1.9552239179611206
    5. ')' → logprob: -2.70522403717041
    6. '#' → logprob: -2.95522403717041
    7. '(n' → logprob: -3.95522403717041
    8. '[' → logprob: -4.20522403717041
    9. 'a' → logprob: -5.83022403717041
    10. ':' → logprob: -5.95522403717041

Token 455: ' solve' (ID: 17722)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00535968691110611
    2. ' main' → logprob: -5.255359649658203
    3. 'solve' → logprob: -9.005359649658203
    4. 'process' → logprob: -13.880359649658203
    5. ' solve' → logprob: -14.130359649658203
    6. 'solution' → logprob: -14.630359649658203
    7. 'def' → logprob: -15.130359649658203
    8. 'calculate' → logprob: -16.005359649658203
    9. '_main' → logprob: -16.130359649658203
    10. 'compute' → logprob: -16.255359649658203

Token 456: '_single' (ID: 46053)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0026373686268925667
    2. '(n' → logprob: -6.0026373863220215
    3. '(' → logprob: -9.502636909484863
    4. ' ():' → logprob: -9.627636909484863
    5. '()' → logprob: -11.502636909484863
    6. '():
' → logprob: -12.127636909484863
    7. '()(' → logprob: -12.627636909484863
    8. '(x' → logprob: -14.002636909484863
    9. '(N' → logprob: -14.877636909484863
    10. ' (' → logprob: -15.377636909484863

Token 457: '_query' (ID: 13012)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.38761383295059204
    2. '()' → logprob: -1.8876137733459473
    3. '_case' → logprob: -2.0126137733459473
    4. '_problem' → logprob: -4.137613773345947
    5. '(' → logprob: -5.137613773345947
    6. '_line' → logprob: -5.262613773345947
    7. '_' → logprob: -5.637613773345947
    8. '_query' → logprob: -5.887613773345947
    9. '_question' → logprob: -7.137613773345947
    10. '_input' → logprob: -7.512613773345947

Token 458: '(x' (ID: 4061)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5314723253250122
    2. '(n' → logprob: -1.0314723253250122
    3. '(x' → logprob: -2.9064722061157227
    4. '(' → logprob: -7.156472206115723
    5. '(q' → logprob: -9.406472206115723
    6. ' ():' → logprob: -9.906472206115723
    7. '():
' → logprob: -10.031472206115723
    8. '(params' → logprob: -10.281472206115723
    9. '(args' → logprob: -10.531472206115723
    10. '()' → logprob: -10.906472206115723

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.751746746478602e-05
    2. ',n' → logprob: -10.37504768371582
    3. ' ,' → logprob: -11.25004768371582
    4. ',d' → logprob: -13.50004768371582
    5. ',
' → logprob: -13.75004768371582
    6. 'n' → logprob: -15.12504768371582
    7. '‌,' → logprob: -15.62504768371582
    8. ')' → logprob: -16.50004768371582
    9. ',x' → logprob: -17.00004768371582
    10. ',int' → logprob: -17.12504768371582

Token 460: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008279800415039062
    2. 'n' → logprob: -5.383279800415039
    3. ' d' → logprob: -5.633279800415039
    4. ' n' → logprob: -9.633279800415039
    5. 'k' → logprob: -12.633279800415039
    6. ' ' → logprob: -13.008279800415039
    7. 'x' → logprob: -13.133279800415039
    8. '0' → logprob: -13.508279800415039
    9. '   ' → logprob: -15.258279800415039
    10. 'y' → logprob: -15.383279800415039

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2948405128554441e-05
    2. ',n' → logprob: -11.50001335144043
    3. ' ,' → logprob: -13.00001335144043
    4. '):' → logprob: -15.62501335144043
    5. 'n' → logprob: -15.87501335144043
    6. ',
' → logprob: -16.00001335144043
    7. '   ' → logprob: -17.12501335144043
    8. '):
' → logprob: -17.50001335144043
    9. '‌,' → logprob: -18.50001335144043
    10. ':' → logprob: -18.75001335144043

Token 462: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0013283335138112307
    2. ' n' → logprob: -6.626328468322754
    3. 'mod' → logprob: -13.626328468322754
    4. ' ' → logprob: -15.126328468322754
    5. '   ' → logprob: -15.126328468322754
    6. '	n' → logprob: -15.376328468322754
    7. 'k' → logprob: -15.501328468322754
    8. '```' → logprob: -16.001327514648438
    9. 'N' → logprob: -17.001327514648438
    10. 'x' → logprob: -17.126327514648438

Token 463: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00017767686222214252
    2. '):
' → logprob: -9.250177383422852
    3. ')' → logprob: -9.750177383422852
    4. ',' → logprob: -11.375177383422852
    5. ':' → logprob: -11.500177383422852
    6. ' ):' → logprob: -13.750177383422852
    7. '):
' → logprob: -15.250177383422852
    8. '   ' → logprob: -16.00017738342285
    9. '):

' → logprob: -17.50017738342285
    10. '():' → logprob: -18.00017738342285

Token 464: ' fact' (ID: 2840)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0013367896899580956
    2. ' mod' → logprob: -6.626336574554443
    3. 'fact' → logprob: -12.376337051391602
    4. '):' → logprob: -13.126337051391602
    5. '   ' → logprob: -13.126337051391602
    6. ')' → logprob: -14.251337051391602
    7. ' ' → logprob: -14.251337051391602
    8. '):
' → logprob: -14.376337051391602
    9. '	mod' → logprob: -14.876337051391602
    10. ',' → logprob: -16.0013370513916

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. ' ,' → logprob: -13.00000286102295
    3. ',
' → logprob: -14.62500286102295
    4. '_,' → logprob: -15.75000286102295
    5. '   ' → logprob: -16.000003814697266
    6. '):' → logprob: -17.000003814697266
    7. ':' → logprob: -17.375003814697266
    8. 's' → logprob: -17.500003814697266
    9. '‌,' → logprob: -17.875003814697266
    10. ',f' → logprob: -18.125003814697266

Token 466: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -2.117345684382599e-05
    2. ' inv' → logprob: -10.875020980834961
    3. 'mod' → logprob: -13.125020980834961
    4. '   ' → logprob: -16.62502098083496
    5. 'inf' → logprob: -18.12502098083496
    6. '(inv' → logprob: -18.50002098083496
    7. '_inv' → logprob: -18.50002098083496
    8. ' ' → logprob: -18.87502098083496
    9. 'Inv' → logprob: -20.00002098083496
    10. 'int' → logprob: -20.62502098083496

Token 467: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.7432603272027336e-06
    2. ' fact' → logprob: -13.750001907348633
    3. 'f' → logprob: -15.000001907348633
    4. '_fact' → logprob: -15.125001907348633
    5. 'fac' → logprob: -18.375001907348633
    6. ')' → logprob: -19.500001907348633
    7. ',' → logprob: -19.625001907348633
    8. 'facts' → logprob: -19.625001907348633
    9. '.fact' → logprob: -19.750001907348633
    10. 'def' → logprob: -20.125001907348633

Token 468: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2254931926727295
    2. ',' → logprob: -1.6004931926727295
    3. '):
' → logprob: -9.725493431091309
    4. ')' → logprob: -11.600493431091309
    5. '   ' → logprob: -11.850493431091309
    6. ' ):' → logprob: -13.225493431091309
    7. ':' → logprob: -13.475493431091309
    8. '):
' → logprob: -14.975493431091309
    9. ',
' → logprob: -15.975493431091309
    10. ' ' → logprob: -15.975493431091309

Token 469: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.635164754698053e-05
    2. ' mod' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.625066757202148
    4. '	mod' → logprob: -16.37506675720215
    5. ' ' → logprob: -17.00006675720215
    6. '  ' → logprob: -19.25006675720215
    7. 'm' → logprob: -19.37506675720215
    8. '       ' → logprob: -19.62506675720215
    9. '```' → logprob: -20.12506675720215
    10. 'mode' → logprob: -20.25006675720215

Token 470: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -4.35837464465294e-05
    2. '):
' → logprob: -10.750043869018555
    3. ')' → logprob: -11.125043869018555
    4. ':' → logprob: -12.125043869018555
    5. '   ' → logprob: -14.125043869018555
    6. ',' → logprob: -14.375043869018555
    7. ' ):' → logprob: -14.750043869018555
    8. '):
' → logprob: -17.125043869018555
    9. '():' → logprob: -17.500043869018555
    10. '=' → logprob: -18.000043869018555

Token 471: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.581950306892395
    2. ' if' → logprob: -1.206950306892395
    3. 'if' → logprob: -1.956950306892395
    4. '    
' → logprob: -7.5819501876831055
    5. '```' → logprob: -9.456950187683105
    6. '	if' → logprob: -9.581950187683105
    7. ' ' → logprob: -10.456950187683105
    8. '  ' → logprob: -10.456950187683105
    9. '
' → logprob: -10.956950187683105
    10. 'k' → logprob: -11.456950187683105

Token 472: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13021604716777802
    2. ' if' → logprob: -2.130216121673584
    3. '   ' → logprob: -5.880216121673584
    4. 'k' → logprob: -7.755216121673584
    5. ' k' → logprob: -10.005215644836426
    6. '	if' → logprob: -12.130215644836426
    7. '```' → logprob: -12.130215644836426
    8. 'i' → logprob: -13.755215644836426
    9. '    
' → logprob: -14.255215644836426
    10. 'x' → logprob: -14.255215644836426

Token 473: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14135406911373138
    2. ' x' → logprob: -2.3913540840148926
    3. 'd' → logprob: -3.3913540840148926
    4. ' d' → logprob: -5.016354084014893
    5. '   ' → logprob: -11.266353607177734
    6. ' ' → logprob: -12.641353607177734
    7. 'n' → logprob: -13.266353607177734
    8. '	x' → logprob: -13.641353607177734
    9. ' ' → logprob: -15.016353607177734
    10. '	d' → logprob: -15.516353607177734

Token 474: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12696485221385956
    2. ' ==' → logprob: -2.126964807510376
    3. '=' → logprob: -11.376964569091797
    4. '<=' → logprob: -11.376964569091797
    5. '==
' → logprob: -12.501964569091797
    6. '%' → logprob: -12.876964569091797
    7. '```' → logprob: -13.251964569091797
    8. '0' → logprob: -13.376964569091797
    9. ')==' → logprob: -13.751964569091797
    10. '<' → logprob: -14.251964569091797

Token 475: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.500295639038086
    4. '=' → logprob: -17.937795639038086
    5. '۰' → logprob: -18.187795639038086
    6. '  ' → logprob: -18.437795639038086
    7. 'zero' → logprob: -19.000295639038086
    8. 'd' → logprob: -19.000295639038086
    9. ' ' → logprob: -19.437795639038086
    10. ')' → logprob: -19.500295639038086

Token 476: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '"' → logprob: -18.750009536743164
    4. ''' → logprob: -19.500009536743164
    5. '   ' → logprob: -20.125009536743164
    6. '۰' → logprob: -20.125009536743164
    7. '1' → logprob: -20.750009536743164
    8. '=' → logprob: -20.875009536743164
    9. '`' → logprob: -21.125009536743164
    10. '_' → logprob: -21.125009536743164

Token 477: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.060959119349718094
    2. ':
' → logprob: -2.9359591007232666
    3. ':return' → logprob: -5.310959339141846
    4. '   ' → logprob: -7.060959339141846
    5. ' or' → logprob: -9.060958862304688
    6. '       ' → logprob: -9.435958862304688
    7. ' and' → logprob: -9.935958862304688
    8. 'and' → logprob: -12.310958862304688
    9. ':
' → logprob: -12.560958862304688
    10. '.' → logprob: -12.810958862304688

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020133988931775093
    2. ':' → logprob: -4.145133972167969
    3. ':
' → logprob: -6.770133972167969
    4. '	' → logprob: -7.270133972167969
    5. ' return' → logprob: -7.520133972167969
    6. '   ' → logprob: -7.645133972167969
    7. 'return' → logprob: -7.770133972167969
    8. ':return' → logprob: -7.770133972167969
    9. '	return' → logprob: -9.270133972167969
    10. ',' → logprob: -9.270133972167969

Token 479: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008277330780401826
    2. '   ' → logprob: -7.750827789306641
    3. '       ' → logprob: -8.50082778930664
    4. ' return' → logprob: -8.62582778930664
    5. '	return' → logprob: -11.50082778930664
    6. 'print' → logprob: -13.12582778930664
    7. '{return' → logprob: -13.87582778930664
    8. '0' → logprob: -15.12582778930664
    9. '           ' → logprob: -15.12582778930664
    10. ':return' → logprob: -15.37582778930664

Token 480: ' handle' (ID: 5318)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5248015522956848
    2. 'handle' → logprob: -0.8998015522956848
    3. ' handle' → logprob: -6.649801731109619
    4. ' ' → logprob: -7.899801731109619
    5. '(handle' → logprob: -12.524801254272461
    6. 'hand' → logprob: -12.899801254272461
    7. '	handle' → logprob: -13.399801254272461
    8. 'handled' → logprob: -14.149801254272461
    9. '   ' → logprob: -14.274801254272461
    10. 'handler' → logprob: -14.712301254272461

Token 481: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -1.981667537620524e-06
    2. 'zero' → logprob: -13.250001907348633
    3. '_' → logprob: -16.375001907348633
    4. '0' → logprob: -17.625001907348633
    5. '_x' → logprob: -18.750001907348633
    6. '_ZERO' → logprob: -18.750001907348633
    7. '```' → logprob: -19.625001907348633
    8. '__' → logprob: -19.625001907348633
    9. '"_' → logprob: -19.750001907348633
    10. ' _' → logprob: -19.875001907348633

Token 482: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.0100624169572257e-05
    2. '_' → logprob: -10.875020027160645
    3. ' _' → logprob: -14.500020027160645
    4. '```' → logprob: -15.750020027160645
    5. '_zero' → logprob: -16.12502098083496
    6. ''_' → logprob: -16.25002098083496
    7. '_
' → logprob: -17.00002098083496
    8. '_xyz' → logprob: -17.37502098083496
    9. '_d' → logprob: -17.87502098083496
    10. '`' → logprob: -18.00002098083496

Token 483: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.47671544551849365
    2. '_x' → logprob: -0.9767154455184937
    3. '_' → logprob: -6.226715564727783
    4. '_c' → logprob: -7.851715564727783
    5. '_cases' → logprob: -9.726715087890625
    6. '_zero' → logprob: -9.976715087890625
    7. '_d' → logprob: -10.226715087890625
    8. '```' → logprob: -10.601715087890625
    9. '_value' → logprob: -10.726715087890625
    10. 'case' → logprob: -10.976715087890625

Token 484: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2531966269016266
    2. '
' → logprob: -2.3781967163085938
    3. '    
' → logprob: -2.8781967163085938
    4. '<|end|>' → logprob: -3.0031967163085938
    5. '()' → logprob: -4.003196716308594
    6. '(' → logprob: -6.253196716308594
    7. '()
' → logprob: -7.003196716308594
    8. '  
' → logprob: -7.253196716308594
    9. ')' → logprob: -7.503196716308594
    10. ' ' → logprob: -7.878196716308594

Token 485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025674929842352867
    2. '    
' → logprob: -4.150674819946289
    3. '
' → logprob: -4.900674819946289
    4. '<|end|>' → logprob: -6.900674819946289
    5. 'elif' → logprob: -7.650674819946289
    6. ' elif' → logprob: -8.900674819946289
    7. ' if' → logprob: -9.025674819946289
    8. '  
' → logprob: -9.775674819946289
    9. '	elif' → logprob: -9.775674819946289
    10. 'if' → logprob: -9.775674819946289

Token 486: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008772454224526882
    2. '   ' → logprob: -5.133772373199463
    3. 'elif' → logprob: -6.258772373199463
    4. ' if' → logprob: -7.008772373199463
    5. '
' → logprob: -11.383772850036621
    6. '```' → logprob: -12.758772850036621
    7. '    
' → logprob: -12.883772850036621
    8. ' elif' → logprob: -13.258772850036621
    9. ' ' → logprob: -13.633772850036621
    10. '	if' → logprob: -13.758772850036621

Token 487: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.061976537108421326
    2. ' d' → logprob: -2.811976432800293
    3. '   ' → logprob: -12.186976432800293
    4. ' ' → logprob: -13.061976432800293
    5. '	d' → logprob: -14.436976432800293
    6. 'x' → logprob: -15.186976432800293
    7. '    ' → logprob: -15.436976432800293
    8. '  ' → logprob: -15.811976432800293
    9. '(d' → logprob: -16.31197738647461
    10. '
' → logprob: -16.68697738647461

Token 488: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10021691024303436
    2. ' ==' → logprob: -2.350216865539551
    3. '=' → logprob: -12.22521686553955
    4. '0' → logprob: -12.85021686553955
    5. '==
' → logprob: -13.60021686553955
    6. ')==' → logprob: -14.10021686553955
    7. '()==' → logprob: -15.60021686553955
    8. ' ' → logprob: -15.97521686553955
    9. ']==' → logprob: -16.225217819213867
    10. '```' → logprob: -16.600217819213867

Token 489: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.250030517578125
    4. '۰' → logprob: -18.875030517578125
    5. '=' → logprob: -19.000030517578125
    6. '  ' → logprob: -19.562530517578125
    7. '00' → logprob: -19.875030517578125
    8. '<|end|>' → logprob: -19.875030517578125
    9. '    ' → logprob: -20.250030517578125
    10. '1' → logprob: -20.312530517578125

Token 490: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -18.250001907348633
    4. '۰' → logprob: -18.625001907348633
    5. '=' → logprob: -20.250001907348633
    6. '...' → logprob: -21.125001907348633
    7. 'zero' → logprob: -21.125001907348633
    8. '   ' → logprob: -21.375001907348633
    9. '[' → logprob: -21.375001907348633
    10. '(' → logprob: -22.062501907348633

Token 491: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1002826914191246
    2. ':
' → logprob: -2.350282669067383
    3. ':return' → logprob: -9.725282669067383
    4. '   ' → logprob: -11.850282669067383
    5. '():
' → logprob: -12.975282669067383
    6. '       ' → logprob: -13.475282669067383
    7. '==' → logprob: -13.725282669067383
    8. '):
' → logprob: -14.350282669067383
    9. ' :' → logprob: -14.475282669067383
    10. ',' → logprob: -14.600282669067383

Token 492: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3226585388183594
    2. '       ' → logprob: -1.3226585388183594
    3. ' return' → logprob: -5.197658538818359
    4. 'return' → logprob: -5.572658538818359
    5. ' ' → logprob: -11.57265853881836
    6. '	return' → logprob: -11.94765853881836
    7. '    ' → logprob: -13.19765853881836
    8. ':return' → logprob: -13.44765853881836
    9. '  ' → logprob: -14.07265853881836
    10. '     ' → logprob: -14.32265853881836

Token 493: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0017243229085579515
    2. ' return' → logprob: -6.7517242431640625
    3. '   ' → logprob: -7.5017242431640625
    4. '       ' → logprob: -13.501724243164062
    5. '	return' → logprob: -14.501724243164062
    6. ' ' → logprob: -17.626724243164062
    7. '  ' → logprob: -18.876724243164062
    8. ':return' → logprob: -19.126724243164062
    9. '
' → logprob: -19.751724243164062
    10. 'eturn' → logprob: -19.876724243164062

Token 494: ' handle' (ID: 5318)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.0005533903022296727
    2. ' handle' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.250553131103516
    4. '(handle' → logprob: -15.875553131103516
    5. ' ' → logprob: -16.875553131103516
    6. 'pow' → logprob: -17.125553131103516
    7. '	handle' → logprob: -17.750553131103516
    8. '  ' → logprob: -18.375553131103516
    9. '    ' → logprob: -20.375553131103516
    10. 'handler' → logprob: -21.125553131103516

Token 495: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -1.9981420336989686e-05
    2. 'zero' → logprob: -10.875020027160645
    3. '0' → logprob: -15.000020027160645
    4. '
' → logprob: -15.750020027160645
    5. 'd' → logprob: -16.125019073486328
    6. '_ZERO' → logprob: -16.250019073486328
    7. '(x' → logprob: -16.375019073486328
    8. '_x' → logprob: -16.625019073486328
    9. '_' → logprob: -16.625019073486328
    10. '_one' → logprob: -17.750019073486328

Token 496: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.7372048862162046e-05
    2. '_x' → logprob: -10.625027656555176
    3. 'd' → logprob: -12.750027656555176
    4. 'x' → logprob: -18.62502670288086
    5. '_' → logprob: -18.75002670288086
    6. '
' → logprob: -18.75002670288086
    7. '```' → logprob: -20.12502670288086
    8. '_c' → logprob: -20.87502670288086
    9. '_a' → logprob: -20.87502670288086
    10. '	d' → logprob: -21.00002670288086

Token 497: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -9.710618905955926e-05
    2. 'case' → logprob: -9.250097274780273
    3. 'd' → logprob: -15.375097274780273
    4. '(x' → logprob: -15.375097274780273
    5. '_d' → logprob: -16.125097274780273
    6. 'Case' → logprob: -16.375097274780273
    7. ' case' → logprob: -16.375097274780273
    8. '```' → logprob: -16.625097274780273
    9. 'x' → logprob: -16.875097274780273
    10. '_CASE' → logprob: -17.000097274780273

Token 498: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00022916549642104656
    2. '(' → logprob: -8.625228881835938
    3. '(
' → logprob: -10.000228881835938
    4. 'x' → logprob: -12.625228881835938
    5. ' (' → logprob: -14.875228881835938
    6. '
' → logprob: -15.375228881835938
    7. '```' → logprob: -16.125228881835938
    8. '()' → logprob: -16.750228881835938
    9. '   ' → logprob: -17.375228881835938
    10. '((' → logprob: -17.500228881835938

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031850787345319986
    2. ',n' → logprob: -5.753185272216797
    3. ' ,' → logprob: -12.378185272216797
    4. 'n' → logprob: -13.253185272216797
    5. ',
' → logprob: -13.753185272216797
    6. '   ' → logprob: -16.128185272216797
    7. ')' → logprob: -16.253185272216797
    8. '(n' → logprob: -17.128185272216797
    9. '[n' → logprob: -17.378185272216797
    10. ' n' → logprob: -17.753185272216797

Token 500: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000553151941858232
    2. ' n' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.625553131103516
    4. '	n' → logprob: -16.875553131103516
    5. '
' → logprob: -18.625553131103516
    6. ')n' → logprob: -18.625553131103516
    7. ',n' → logprob: -18.875553131103516
    8. ',' → logprob: -19.375553131103516
    9. '    ' → logprob: -19.625553131103516
    10. '```' → logprob: -20.500553131103516

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017118285177275538
    2. ')' → logprob: -6.376711845397949
    3. ' ,' → logprob: -11.75171184539795
    4. 'mod' → logprob: -14.25171184539795
    5. ',
' → logprob: -15.12671184539795
    6. '   ' → logprob: -15.62671184539795
    7. '```' → logprob: -15.75171184539795
    8. ')
' → logprob: -16.001710891723633
    9. '
' → logprob: -16.126710891723633
    10. '),' → logprob: -16.376710891723633

Token 502: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.696889623621246e-06
    2. ' mod' → logprob: -12.87500286102295
    3. 'd' → logprob: -18.375001907348633
    4. ')' → logprob: -18.625001907348633
    5. '	mod' → logprob: -19.875001907348633
    6. '0' → logprob: -21.000001907348633
    7. 'm' → logprob: -21.250001907348633
    8. '(mod' → logprob: -21.500001907348633
    9. 'moder' → logprob: -21.625001907348633
    10. '```' → logprob: -21.875001907348633

Token 503: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017368246335536242
    2. ')
' → logprob: -6.501736640930176
    3. '   ' → logprob: -8.376736640930176
    4. ' )' → logprob: -13.001736640930176
    5. '())' → logprob: -13.626736640930176
    6. '()' → logprob: -15.251736640930176
    7. '
' → logprob: -15.751736640930176
    8. ')

' → logprob: -16.001737594604492
    9. ')
' → logprob: -16.626737594604492
    10. ')return' → logprob: -16.626737594604492

Token 504: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008363746106624603
    2. '
' → logprob: -5.383363723754883
    3. '```' → logprob: -5.758363723754883
    4. '    
' → logprob: -8.008363723754883
    5. '<|end|>' → logprob: -8.883363723754883
    6. '  
' → logprob: -10.633363723754883
    7. 'if' → logprob: -10.758363723754883
    8. '``' → logprob: -11.633363723754883
    9. '`' → logprob: -11.633363723754883
    10. ' ' → logprob: -11.883363723754883

Token 505: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.00082309142453596
    2. '   ' → logprob: -7.125823020935059
    3. '
' → logprob: -11.250823020935059
    4. ' k' → logprob: -12.250823020935059
    5. '    
' → logprob: -15.375823020935059
    6. '	k' → logprob: -15.375823020935059
    7. '```' → logprob: -15.625823020935059
    8. '  ' → logprob: -16.375823974609375
    9. ' ' → logprob: -16.625823974609375
    10. '

' → logprob: -17.875823974609375

Token 506: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192928314208984
    2. ' =' → logprob: -1.5019292831420898
    3. ',' → logprob: -16.126930236816406
    4. ' ' → logprob: -16.501930236816406
    5. ')' → logprob: -17.501930236816406
    6. '  ' → logprob: -18.001930236816406
    7. '   ' → logprob: -18.376930236816406
    8. '.' → logprob: -18.626930236816406
    9. ' ' → logprob: -18.626930236816406
    10. '＝' → logprob: -18.751930236816406

Token 507: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -9.615255839889869e-05
    2. ' compute' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.62509536743164
    4. '.compute' → logprob: -21.87509536743164
    5. 'calculate' → logprob: -22.37509536743164
    6. 'computed' → logprob: -22.75009536743164
    7. 'comput' → logprob: -22.75009536743164
    8. ' ' → logprob: -22.87509536743164
    9. 'computer' → logprob: -22.87509536743164
    10. '
' → logprob: -24.12509536743164

Token 508: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.0683535037969705e-05
    2. 'k' → logprob: -11.50001049041748
    3. '_' → logprob: -14.62501049041748
    4. '_key' → logprob: -18.000011444091797
    5. '(k' → logprob: -18.750011444091797
    6. '
' → logprob: -19.000011444091797
    7. '```' → logprob: -19.500011444091797
    8. '_token' → logprob: -19.875011444091797
    9. '_x' → logprob: -20.250011444091797
    10. '(' → logprob: -20.250011444091797

Token 509: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.000273136975010857
    2. '(' → logprob: -8.250272750854492
    3. 'x' → logprob: -11.500272750854492
    4. ' (' → logprob: -13.500272750854492
    5. '(
' → logprob: -15.500272750854492
    6. '<|end|>' → logprob: -16.375272750854492
    7. '((' → logprob: -16.625272750854492
    8. ',x' → logprob: -17.500272750854492
    9. ')x' → logprob: -18.000272750854492
    10. '(int' → logprob: -18.375272750854492

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10032108426094055
    2. ',d' → logprob: -2.350321054458618
    3. 'd' → logprob: -9.725320816040039
    4. ' ,' → logprob: -9.850320816040039
    5. ',
' → logprob: -13.850320816040039
    6. ' d' → logprob: -15.225320816040039
    7. '_,' → logprob: -15.975320816040039
    8. ')' → logprob: -16.10032081604004
    9. '(d' → logprob: -16.10032081604004
    10. '```' → logprob: -16.35032081604004

Token 511: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.4391956685576588e-05
    2. ' d' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.125024795532227
    4. '
' → logprob: -18.875024795532227
    5. ')d' → logprob: -18.875024795532227
    6. '	d' → logprob: -19.000024795532227
    7. 'def' → logprob: -20.750024795532227
    8. ' ' → logprob: -20.875024795532227
    9. ',d' → logprob: -21.000024795532227
    10. '  ' → logprob: -21.250024795532227

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.306760805164231e-05
    2. ' ,' → logprob: -11.37501335144043
    3. ',
' → logprob: -13.75001335144043
    4. ')' → logprob: -15.25001335144043
    5. 'mod' → logprob: -16.37501335144043
    6. '),' → logprob: -17.62501335144043
    7. '(mod' → logprob: -18.75001335144043
    8. '
' → logprob: -18.87501335144043
    9. ',module' → logprob: -18.87501335144043
    10. '```' → logprob: -19.12501335144043

Token 513: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9361264946837764e-07
    2. ' mod' → logprob: -16.125
    3. 'm' → logprob: -19.875
    4. 'moder' → logprob: -20.125
    5. '	mod' → logprob: -20.25
    6. '(mod' → logprob: -22.0
    7. 'mo' → logprob: -22.625
    8. '```' → logprob: -22.75
    9. 'modal' → logprob: -23.0
    10. 'mods' → logprob: -23.375

Token 514: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02325141802430153
    2. ')
' → logprob: -3.773251533508301
    3. '   ' → logprob: -12.8982515335083
    4. ')

' → logprob: -13.8982515335083
    5. ')
' → logprob: -14.2732515335083
    6. ')n' → logprob: -14.2732515335083
    7. 'if' → logprob: -15.1482515335083
    8. '
' → logprob: -15.3982515335083
    9. 'def' → logprob: -15.7732515335083
    10. ' )' → logprob: -16.273250579833984

Token 515: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025394415482878685
    2. 'if' → logprob: -3.7753944396972656
    3. ' if' → logprob: -6.150394439697266
    4. '	if' → logprob: -12.275394439697266
    5. '```' → logprob: -12.275394439697266
    6. '<|end|>' → logprob: -12.650394439697266
    7. ' ' → logprob: -14.650394439697266
    8. '
' → logprob: -15.400394439697266
    9. '       ' → logprob: -15.650394439697266
    10. 'If' → logprob: -15.775394439697266

Token 516: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.583550642360933e-05
    2. ' if' → logprob: -10.500036239624023
    3. '   ' → logprob: -11.750036239624023
    4. '```' → logprob: -14.875036239624023
    5. '	if' → logprob: -17.875036239624023
    6. 'If' → logprob: -19.625036239624023
    7. ' ' → logprob: -20.750036239624023
    8. '
' → logprob: -21.000036239624023
    9. ';if' → logprob: -21.500036239624023
    10. 'ifs' → logprob: -21.625036239624023

Token 517: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.002477081725373864
    2. ' check' → logprob: -6.002477169036865
    3. '   ' → logprob: -13.877476692199707
    4. ' ' → logprob: -15.502476692199707
    5. '(check' → logprob: -16.752477645874023
    6. '  ' → logprob: -17.127477645874023
    7. '	check' → logprob: -17.252477645874023
    8. 'k' → logprob: -17.252477645874023
    9. 'not' → logprob: -19.752477645874023
    10. 'chec' → logprob: -19.877477645874023

Token 518: '_over' (ID: 34788)
  Prédit: '_over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_over' → logprob: -1.6240566083070007e-06
    2. '(n' → logprob: -13.875001907348633
    3. 'over' → logprob: -15.500001907348633
    4. '(k' → logprob: -15.750001907348633
    5. 'overflow' → logprob: -15.875001907348633
    6. '_OVER' → logprob: -16.125001907348633
    7. '(over' → logprob: -18.000001907348633
    8. 'Over' → logprob: -18.125001907348633
    9. '\' → logprob: -18.375001907348633
    10. '(' → logprob: -18.625001907348633

Token 519: 'flow' (ID: 7571)
  Prédit: 'flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' → logprob: -0.2813117802143097
    2. 'low' → logprob: -1.4063117504119873
    3. 'overflow' → logprob: -9.656311988830566
    4. 'load' → logprob: -10.531311988830566
    5. '```' → logprob: -11.281311988830566
    6. 'flo' → logprob: -12.031311988830566
    7. '   ' → logprob: -12.406311988830566
    8. 'f' → logprob: -12.406311988830566
    9. 'lf' → logprob: -12.531311988830566
    10. 'ow' → logprob: -12.781311988830566

Token 520: '_condition' (ID: 64948)
  Prédit: '_condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -2.629921436891891e-05
    2. 'condition' → logprob: -10.62502670288086
    3. '_case' → logprob: -13.62502670288086
    4. '_cond' → logprob: -15.12502670288086
    5. '(condition' → logprob: -16.12502670288086
    6. 'Condition' → logprob: -16.25002670288086
    7. ' condition' → logprob: -16.75002670288086
    8. '=' → logprob: -17.12502670288086
    9. '
' → logprob: -17.25002670288086
    10. '(n' → logprob: -17.50002670288086

Token 521: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00016551809676457196
    2. '(' → logprob: -8.750165939331055
    3. ' (' → logprob: -12.250165939331055
    4. '(
' → logprob: -13.750165939331055
    5. 'n' → logprob: -13.875165939331055
    6. '```' → logprob: -16.375165939331055
    7. '   ' → logprob: -16.500165939331055
    8. ',' → logprob: -16.750165939331055
    9. '<n' → logprob: -17.875165939331055
    10. ')' → logprob: -18.000165939331055

Token 522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026577893644571304
    2. ',k' → logprob: -3.651577949523926
    3. ' ,' → logprob: -8.276577949523926
    4. ',
' → logprob: -10.901577949523926
    5. 'k' → logprob: -14.026577949523926
    6. ',n' → logprob: -14.026577949523926
    7. ' k' → logprob: -14.151577949523926
    8. ')' → logprob: -14.151577949523926
    9. '<|end|>' → logprob: -15.401577949523926
    10. '),' → logprob: -15.776577949523926

Token 523: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00020354038861114532
    2. ' k' → logprob: -8.500203132629395
    3. '	k' → logprob: -18.75020408630371
    4. '(k' → logprob: -20.00020408630371
    5. ',k' → logprob: -20.00020408630371
    6. ')' → logprob: -21.12520408630371
    7. ' ' → logprob: -21.25020408630371
    8. '
' → logprob: -21.87520408630371
    9. '   ' → logprob: -23.00020408630371
    10. 'kx' → logprob: -23.12520408630371

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003730606520548463
    2. '):' → logprob: -5.628730773925781
    3. ',
' → logprob: -9.628730773925781
    4. ' ,' → logprob: -10.003730773925781
    5. '):
' → logprob: -11.253730773925781
    6. ')' → logprob: -13.378730773925781
    7. ',k' → logprob: -14.128730773925781
    8. ':' → logprob: -14.253730773925781
    9. '   ' → logprob: -14.253730773925781
    10. '=' → logprob: -15.003730773925781

Token 525: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.165027217415627e-05
    2. ' mod' → logprob: -10.750021934509277
    3. 'k' → logprob: -16.62502098083496
    4. 'm' → logprob: -17.00002098083496
    5. ')' → logprob: -17.50002098083496
    6. '
' → logprob: -17.62502098083496
    7. ' ' → logprob: -18.12502098083496
    8. '	mod' → logprob: -18.87502098083496
    9. '(mod' → logprob: -19.00002098083496
    10. '   ' → logprob: -19.25002098083496

Token 526: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001825642102630809
    2. '):
' → logprob: -8.875182151794434
    3. ':' → logprob: -10.500182151794434
    4. '   ' → logprob: -11.750182151794434
    5. ')' → logprob: -12.000182151794434
    6. ' ):' → logprob: -14.750182151794434
    7. '():' → logprob: -15.000182151794434
    8. ' or' → logprob: -15.875182151794434
    9. ',' → logprob: -17.25018310546875
    10. '       ' → logprob: -17.37518310546875

Token 527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0060682715848088264
    2. '   ' → logprob: -5.131068229675293
    3. 'return' → logprob: -9.256068229675293
    4. ' return' → logprob: -10.131068229675293
    5. '	' → logprob: -13.256068229675293
    6. '	return' → logprob: -13.381068229675293
    7. '<|end|>' → logprob: -15.881068229675293
    8. '	   ' → logprob: -16.13106918334961
    9. '```' → logprob: -16.25606918334961
    10. '
' → logprob: -16.38106918334961

Token 528: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015505515038967133
    2. '   ' → logprob: -4.265505313873291
    3. ' return' → logprob: -7.015505313873291
    4. '       ' → logprob: -7.765505313873291
    5. '	return' → logprob: -10.89050579071045
    6. '{return' → logprob: -15.01550579071045
    7. ' ' → logprob: -16.015504837036133
    8. ':return' → logprob: -16.515504837036133
    9. '           ' → logprob: -16.640504837036133
    10. '    ' → logprob: -17.640504837036133

Token 529: ' handle' (ID: 5318)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.0009966061916202307
    2. ' handle' → logprob: -7.0009965896606445
    3. '0' → logprob: -9.375996589660645
    4. ' ' → logprob: -15.375996589660645
    5. '	handle' → logprob: -16.25099754333496
    6. '(handle' → logprob: -16.37599754333496
    7. 'hand' → logprob: -17.37599754333496
    8. 'handel' → logprob: -19.00099754333496
    9. 'handled' → logprob: -19.12599754333496
    10. '_handle' → logprob: -19.50099754333496

Token 530: '_over' (ID: 34788)
  Prédit: '_over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_over' → logprob: -2.2200749754119897e-06
    2. 'overflow' → logprob: -13.250001907348633
    3. '_under' → logprob: -15.625001907348633
    4. '_' → logprob: -17.125001907348633
    5. '_of' → logprob: -17.625001907348633
    6. 'over' → logprob: -17.625001907348633
    7. '_overlap' → logprob: -17.750001907348633
    8. '_o' → logprob: -17.750001907348633
    9. '```' → logprob: -17.750001907348633
    10. '0' → logprob: -18.000001907348633

Token 531: 'flow' (ID: 7571)
  Prédit: 'flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' → logprob: -0.0012085650814697146
    2. 'low' → logprob: -6.751208782196045
    3. 'overflow' → logprob: -10.501208305358887
    4. 'f' → logprob: -12.126208305358887
    5. 'flo' → logprob: -13.626208305358887
    6. '```' → logprob: -14.126208305358887
    7. 'load' → logprob: -14.626208305358887
    8. '
' → logprob: -14.626208305358887
    9. 'flows' → logprob: -15.251208305358887
    10. 'fl' → logprob: -15.501208305358887

Token 532: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -7.703443770878948e-06
    2. '_condition' → logprob: -11.875007629394531
    3. 'case' → logprob: -14.750007629394531
    4. '_code' → logprob: -15.375007629394531
    5. '```' → logprob: -17.12500762939453
    6. '_' → logprob: -18.00000762939453
    7. 'Case' → logprob: -19.12500762939453
    8. '
' → logprob: -19.25000762939453
    9. '_value' → logprob: -19.50000762939453
    10. '`' → logprob: -20.00000762939453

Token 533: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024696841835975647
    2. '
' → logprob: -4.1496968269348145
    3. '    
' → logprob: -4.7746968269348145
    4. '  
' → logprob: -9.149697303771973
    5. '   
' → logprob: -10.899697303771973
    6. ' return' → logprob: -10.899697303771973
    7. '	return' → logprob: -11.774697303771973
    8. 'return' → logprob: -12.149697303771973
    9. '        
' → logprob: -12.274697303771973
    10. '<|end|>' → logprob: -12.274697303771973

Token 534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005949704209342599
    2. '    
' → logprob: -7.8755950927734375
    3. '
' → logprob: -8.875595092773438
    4. 'return' → logprob: -10.250595092773438
    5. '```' → logprob: -11.375595092773438
    6. ' return' → logprob: -11.750595092773438
    7. '<|end|>' → logprob: -12.000595092773438
    8. '  
' → logprob: -12.125595092773438
    9. '	return' → logprob: -13.125595092773438
    10. '        
' → logprob: -13.625595092773438

Token 535: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006871753721497953
    2. '   ' → logprob: -7.375687122344971
    3. 'answer' → logprob: -10.750687599182129
    4. 'result' → logprob: -11.375687599182129
    5. 'res' → logprob: -11.500687599182129
    6. ' return' → logprob: -11.625687599182129
    7. 'else' → logprob: -12.500687599182129
    8. 'ans' → logprob: -12.875687599182129
    9. '```' → logprob: -13.625687599182129
    10. '
' → logprob: -14.375687599182129

Token 536: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0007099286303855479
    2. ' compute' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.250709533691406
    4. 'calculate' → logprob: -20.250709533691406
    5. '
' → logprob: -20.375709533691406
    6. 'computer' → logprob: -20.625709533691406
    7. 'comput' → logprob: -20.875709533691406
    8. '.compute' → logprob: -21.250709533691406
    9. 'computed' → logprob: -21.375709533691406
    10. 'solve' → logprob: -21.500709533691406

Token 537: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -4.320199877838604e-07
    2. '_ans' → logprob: -15.375
    3. 'answer' → logprob: -16.0
    4. '_' → logprob: -17.125
    5. '_value' → logprob: -17.875
    6. '_answers' → logprob: -18.375
    7. '```' → logprob: -18.75
    8. '_question' → logprob: -19.375
    9. 's' → logprob: -19.375
    10. '_argument' → logprob: -19.625

Token 538: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.3451433409936726e-05
    2. '(' → logprob: -10.375033378601074
    3. ' (' → logprob: -13.500033378601074
    4. '(
' → logprob: -14.250033378601074
    5. '((' → logprob: -17.12503433227539
    6. '
' → logprob: -17.25003433227539
    7. 'n' → logprob: -18.75003433227539
    8. '```' → logprob: -19.00003433227539
    9. '(noun' → logprob: -19.50003433227539
    10. '

' → logprob: -19.75003433227539

Token 539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016361607238650322
    2. ',k' → logprob: -4.141361713409424
    3. ' ,' → logprob: -8.641361236572266
    4. '-' → logprob: -9.016361236572266
    5. ' -' → logprob: -11.266361236572266
    6. ',
' → logprob: -11.516361236572266
    7. '   ' → logprob: -13.016361236572266
    8. '-k' → logprob: -13.141361236572266
    9. ',n' → logprob: -15.141361236572266
    10. '+' → logprob: -15.266361236572266

Token 540: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.014684110297821e-06
    2. ' k' → logprob: -11.625008583068848
    3. '	k' → logprob: -19.750009536743164
    4. '
' → logprob: -19.875009536743164
    5. 'x' → logprob: -20.000009536743164
    6. ',k' → logprob: -20.000009536743164
    7. 'kx' → logprob: -21.125009536743164
    8. '   ' → logprob: -21.625009536743164
    9. '(k' → logprob: -22.000009536743164
    10. ' ' → logprob: -22.250009536743164

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2007883671903983e-05
    2. ',f' → logprob: -11.250021934509277
    3. ',
' → logprob: -12.125021934509277
    4. ' ,' → logprob: -12.875021934509277
    5. ')' → logprob: -14.375021934509277
    6. '```' → logprob: -16.000022888183594
    7. '   ' → logprob: -16.750022888183594
    8. ',
' → logprob: -17.125022888183594
    9. '
' → logprob: -17.375022888183594
    10. '(' → logprob: -17.500022888183594

Token 542: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0019422034965828061
    2. 'd' → logprob: -6.251942157745361
    3. ' fact' → logprob: -11.50194263458252
    4. 'factor' → logprob: -13.00194263458252
    5. '
' → logprob: -14.12694263458252
    6. ' d' → logprob: -15.12694263458252
    7. '   ' → logprob: -16.376941680908203
    8. 'f' → logprob: -16.876941680908203
    9. '  ' → logprob: -16.876941680908203
    10. ' ' → logprob: -17.001941680908203

Token 543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4855663721391466e-05
    2. ',
' → logprob: -11.875015258789062
    3. ' ,' → logprob: -12.250015258789062
    4. 'inv' → logprob: -13.375015258789062
    5. '(inv' → logprob: -15.125015258789062
    6. ',in' → logprob: -15.375015258789062
    7. ',

' → logprob: -15.500015258789062
    8. ')' → logprob: -15.750015258789062
    9. '   ' → logprob: -16.250015258789062
    10. '```' → logprob: -16.250015258789062

Token 544: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00033593899570405483
    2. ' inv' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.000335693359375
    4. ' ' → logprob: -16.250335693359375
    5. '(inv' → logprob: -16.375335693359375
    6. 'inf' → logprob: -16.625335693359375
    7. '.inv' → logprob: -17.875335693359375
    8. '_inv' → logprob: -18.250335693359375
    9. '```' → logprob: -18.375335693359375
    10. '  ' → logprob: -18.500335693359375

Token 545: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -7.896309739408025e-07
    2. ' fact' → logprob: -14.625000953674316
    3. '_fact' → logprob: -16.0
    4. 'f' → logprob: -17.625
    5. 'factor' → logprob: -17.75
    6. '```' → logprob: -17.75
    7. '[' → logprob: -18.375
    8. 'fac' → logprob: -18.5
    9. 'ifact' → logprob: -18.75
    10. '   ' → logprob: -18.875

Token 546: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.20734242349863e-05
    2. ',d' → logprob: -9.750072479248047
    3. ' ,' → logprob: -11.500072479248047
    4. ',
' → logprob: -13.125072479248047
    5. ')' → logprob: -14.000072479248047
    6. '   ' → logprob: -14.250072479248047
    7. '```' → logprob: -17.125072479248047
    8. 'd' → logprob: -18.000072479248047
    9. '
' → logprob: -18.000072479248047
    10. ',module' → logprob: -18.250072479248047

Token 547: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.7610454708337784e-05
    2. ' d' → logprob: -10.500027656555176
    3. '	d' → logprob: -19.50002670288086
    4. '
' → logprob: -19.87502670288086
    5. '   ' → logprob: -20.37502670288086
    6. '_d' → logprob: -22.50002670288086
    7. '$d' → logprob: -22.75002670288086
    8. ')d' → logprob: -23.00002670288086
    9. '­d' → logprob: -23.00002670288086
    10. 'mod' → logprob: -23.25002670288086

Token 548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006733018439263105
    2. ')' → logprob: -5.006732940673828
    3. ',
' → logprob: -12.131732940673828
    4. ')
' → logprob: -12.506732940673828
    5. ' ,' → logprob: -12.506732940673828
    6. ',module' → logprob: -14.006732940673828
    7. ',)' → logprob: -14.131732940673828
    8. ' )' → logprob: -14.381732940673828
    9. '```' → logprob: -14.881732940673828
    10. '[' → logprob: -15.006732940673828

Token 549: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.006715370807796717
    2. ' mod' → logprob: -5.006715297698975
    3. ' ' → logprob: -17.631715774536133
    4. '	mod' → logprob: -17.631715774536133
    5. '(mod' → logprob: -19.756715774536133
    6. '_mod' → logprob: -20.756715774536133
    7. '   ' → logprob: -20.881715774536133
    8. '
' → logprob: -20.881715774536133
    9. '.mod' → logprob: -21.381715774536133
    10. '  ' → logprob: -21.381715774536133

Token 550: ')

' (ID: 1029)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5397381782531738
    2. ')' → logprob: -1.0397381782531738
    3. '<|end|>' → logprob: -2.789738178253174
    4. '```' → logprob: -7.914738178253174
    5. '\n' → logprob: -8.039737701416016
    6. '+' → logprob: -8.164737701416016
    7. '#' → logprob: -8.539737701416016
    8. '}' → logprob: -8.789737701416016
    9. '<|end|>' → logprob: -8.914737701416016
    10. ')
' → logprob: -9.039737701416016

Token 551: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7646154761314392
    2. 'n' → logprob: -2.014615535736084
    3. '#' → logprob: -2.264615535736084
    4. 'for' → logprob: -2.389615535736084
    5. 'if' → logprob: -2.389615535736084
    6. 'x' → logprob: -2.889615535736084
    7. 'print' → logprob: -3.889615535736084
    8. '```' → logprob: -4.389615535736084
    9. '<|end|>' → logprob: -5.139615535736084
    10. 'd' → logprob: -5.139615535736084

Token 552: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.002610736759379506
    2. ' main' → logprob: -6.002610683441162
    3. 'solve' → logprob: -9.12761116027832
    4. 'process' → logprob: -11.12761116027832
    5. '_main' → logprob: -11.87761116027832
    6. 'def' → logprob: -12.87761116027832
    7. 'run' → logprob: -14.00261116027832
    8. ' solve' → logprob: -14.12761116027832
    9. '	main' → logprob: -15.50261116027832
    10. 'read' → logprob: -15.87761116027832

Token 553: '_queries' (ID: 172558)
  Prédit: '_queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queries' → logprob: -0.23522897064685822
    2. '_query' → logprob: -1.7352290153503418
    3. '_input' → logprob: -3.610229015350342
    4. '_single' → logprob: -5.485229015350342
    5. '()' → logprob: -6.610229015350342
    6. '():
' → logprob: -9.360228538513184
    7. '_test' → logprob: -9.485228538513184
    8. '(input' → logprob: -9.485228538513184
    9. '_' → logprob: -9.860228538513184
    10. '(query' → logprob: -10.110228538513184

Token 554: '(q' (ID: 21479)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.23053444921970367
    2. '(' → logprob: -1.9805344343185425
    3. '(q' → logprob: -2.730534553527832
    4. '():
' → logprob: -6.730534553527832
    5. '(n' → logprob: -7.730534553527832
    6. '(query' → logprob: -7.855534553527832
    7. '(num' → logprob: -8.480534553527832
    8. '(t' → logprob: -8.855534553527832
    9. ' ():' → logprob: -9.105534553527832
    10. '(input' → logprob: -10.230534553527832

Token 555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04159388691186905
    2. 'u' → logprob: -3.5415937900543213
    3. '):' → logprob: -5.1665940284729
    4. '):
' → logprob: -5.9165940284729
    5. 'uries' → logprob: -6.1665940284729
    6. 'uer' → logprob: -7.1665940284729
    7. ',
' → logprob: -8.666593551635742
    8. 'ury' → logprob: -9.666593551635742
    9. 'ual' → logprob: -9.791593551635742
    10. ':' → logprob: -9.916593551635742

Token 556: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.1830933392047882
    2. ' fact' → logprob: -2.433093309402466
    3. 'queries' → logprob: -2.683093309402466
    4. ' queries' → logprob: -4.683093547821045
    5. 'inputs' → logprob: -7.433093547821045
    6. 'input' → logprob: -7.558093547821045
    7. 'facts' → logprob: -8.558093070983887
    8. 'query' → logprob: -8.683093070983887
    9. 'data' → logprob: -9.308093070983887
    10. ' input' → logprob: -9.808093070983887

Token 557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ',
' → logprob: -13.00000286102295
    3. ' ,' → logprob: -15.50000286102295
    4. '‌,' → logprob: -17.250001907348633
    5. ',f' → logprob: -17.375001907348633
    6. '_,' → logprob: -18.000001907348633
    7. ',

' → logprob: -18.125001907348633
    8. ',
' → logprob: -18.125001907348633
    9. 's' → logprob: -18.250001907348633
    10. ',int' → logprob: -18.375001907348633

Token 558: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.688212614681106e-05
    2. ' inv' → logprob: -11.000017166137695
    3. '(inv' → logprob: -16.875017166137695
    4. '_inv' → logprob: -18.000017166137695
    5. 'inf' → logprob: -19.375017166137695
    6. '.inv' → logprob: -19.625017166137695
    7. ' ' → logprob: -19.750017166137695
    8. '   ' → logprob: -20.000017166137695
    9. '```' → logprob: -20.250017166137695
    10. '
' → logprob: -20.625017166137695

Token 559: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -2.816093228830141e-06
    2. '_fact' → logprob: -13.50000286102295
    3. ' fact' → logprob: -14.25000286102295
    4. 'f' → logprob: -15.00000286102295
    5. '```' → logprob: -15.62500286102295
    6. 'fac' → logprob: -16.625001907348633
    7. 'facts' → logprob: -17.000001907348633
    8. 'faq' → logprob: -17.500001907348633
    9. 'fait' → logprob: -17.625001907348633
    10. 'factor' → logprob: -17.750001907348633

Token 560: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.128163257315464e-07
    2. ' ,' → logprob: -15.375
    3. ',
' → logprob: -16.75
    4. '_,' → logprob: -20.25
    5. '‌,' → logprob: -20.5
    6. '):' → logprob: -20.875
    7. '):
' → logprob: -21.125
    8. 'def' → logprob: -21.625
    9. ',module' → logprob: -22.0
    10. '‍,' → logprob: -22.0

Token 561: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0031777136027812958
    2. ' mod' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.378177642822266
    4. '
' → logprob: -18.003177642822266
    5. '	mod' → logprob: -18.128177642822266
    6. '   ' → logprob: -18.378177642822266
    7. 'm' → logprob: -19.128177642822266
    8. '(mod' → logprob: -19.753177642822266
    9. '_mod' → logprob: -20.253177642822266
    10. 'Mod' → logprob: -20.253177642822266

Token 562: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21579250693321228
    2. '):
' → logprob: -2.215792417526245
    3. ',' → logprob: -2.465792417526245
    4. ')' → logprob: -10.340792655944824
    5. '   ' → logprob: -10.340792655944824
    6. '):
' → logprob: -11.215792655944824
    7. ':' → logprob: -12.090792655944824
    8. '):

' → logprob: -12.965792655944824
    9. ',q' → logprob: -14.590792655944824
    10. ',
' → logprob: -14.840792655944824

Token 563: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5729227066040039
    2. ' for' → logprob: -1.322922706604004
    3. '   ' → logprob: -2.447922706604004
    4. '	for' → logprob: -2.822922706604004
    5. '
' → logprob: -4.072922706604004
    6. 'def' → logprob: -5.697922706604004
    7. 'result' → logprob: -6.697922706604004
    8. '    
' → logprob: -7.072922706604004
    9. '```' → logprob: -7.197922706604004
    10. '	
' → logprob: -9.197922706604004

Token 564: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03913720324635506
    2. 'results' → logprob: -3.289137125015259
    3. 'result' → logprob: -7.289137363433838
    4. '   ' → logprob: -8.78913688659668
    5. 'res' → logprob: -9.41413688659668
    6. '
' → logprob: -9.66413688659668
    7. ' for' → logprob: -9.91413688659668
    8. 'answers' → logprob: -10.53913688659668
    9. 'outputs' → logprob: -10.78913688659668
    10. 'output' → logprob: -11.16413688659668

Token 565: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00011880126112373546
    2. ' _' → logprob: -9.25011920928955
    3. '_i' → logprob: -10.75011920928955
    4. '_q' → logprob: -14.37511920928955
    5. '_query' → logprob: -15.00011920928955
    6. '_
' → logprob: -16.625118255615234
    7. '_line' → logprob: -16.875118255615234
    8. '_=' → logprob: -17.125118255615234
    9. '_in' → logprob: -17.375118255615234
    10. '_index' → logprob: -17.750118255615234

Token 566: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028278196696192026
    2. 'in' → logprob: -5.8778276443481445
    3. ' ' → logprob: -11.502827644348145
    4. '  ' → logprob: -12.002827644348145
    5. '   ' → logprob: -13.377827644348145
    6. 'n' → logprob: -14.002827644348145
    7. 'range' → logprob: -14.252827644348145
    8. '	in' → logprob: -14.252827644348145
    9. 'i' → logprob: -14.377827644348145
    10. ' i' → logprob: -15.002827644348145

Token 567: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002637199067976326
    2. ' range' → logprob: -8.250264167785645
    3. '	range' → logprob: -14.875264167785645
    4. '
' → logprob: -15.250264167785645
    5. 'ange' → logprob: -15.250264167785645
    6. '   ' → logprob: -15.375264167785645
    7. 'stdin' → logprob: -15.375264167785645
    8. 'r' → logprob: -15.625264167785645
    9. '(range' → logprob: -15.875264167785645
    10. ' ' → logprob: -15.875264167785645

Token 568: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00013774730905424803
    2. '(' → logprob: -9.375137329101562
    3. 'q' → logprob: -9.875137329101562
    4. ' q' → logprob: -13.750137329101562
    5. '	q' → logprob: -15.375137329101562
    6. ' (' → logprob: -16.000137329101562
    7. '(
' → logprob: -17.500137329101562
    8. '(range' → logprob: -17.750137329101562
    9. '_q' → logprob: -18.000137329101562
    10. '(query' → logprob: -18.000137329101562

Token 569: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3488718569278717
    2. '):
' → logprob: -1.2238718271255493
    3. ':' → logprob: -8.598872184753418
    4. ')' → logprob: -8.973872184753418
    5. '   ' → logprob: -9.723872184753418
    6. ',' → logprob: -10.723872184753418
    7. ' ):' → logprob: -11.723872184753418
    8. ':
' → logprob: -11.848872184753418
    9. '):
' → logprob: -11.848872184753418
    10. ' ):
' → logprob: -12.848872184753418

Token 570: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01894250698387623
    2. '	' → logprob: -4.393942356109619
    3. 'x' → logprob: -5.643942356109619
    4. '	   ' → logprob: -7.268942356109619
    5. ',' → logprob: -7.643942356109619
    6. '<|end|>' → logprob: -8.268942832946777
    7. '```' → logprob: -8.518942832946777
    8. ' x' → logprob: -8.768942832946777
    9. '	       ' → logprob: -8.893942832946777
    10. '   ' → logprob: -9.143942832946777

Token 571: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -1.2664456789934775e-06
    2. ' x' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.875001907348633
    4. '	x' → logprob: -17.500001907348633
    5. '       ' → logprob: -17.625001907348633
    6. '        
' → logprob: -20.625001907348633
    7. '_x' → logprob: -21.375001907348633
    8. ',x' → logprob: -21.625001907348633
    9. '[x' → logprob: -21.875001907348633
    10. '    
' → logprob: -22.125001907348633

Token 572: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000559108448214829
    2. ',d' → logprob: -7.500559329986572
    3. ' ,' → logprob: -12.250558853149414
    4. 'd' → logprob: -14.125558853149414
    5. ',
' → logprob: -15.500558853149414
    6. '_,' → logprob: -16.375558853149414
    7. '=' → logprob: -16.625558853149414
    8. ',n' → logprob: -17.000558853149414
    9. ',\
' → logprob: -17.250558853149414
    10. '‌,' → logprob: -17.375558853149414

Token 573: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002476016292348504
    2. ' d' → logprob: -6.002476215362549
    3. '_d' → logprob: -15.62747573852539
    4. ' ' → logprob: -16.00247573852539
    5. '	d' → logprob: -16.87747573852539
    6. '*d' → logprob: -17.75247573852539
    7. '  ' → logprob: -18.25247573852539
    8. 'n' → logprob: -18.25247573852539
    9. ' ' → logprob: -18.37747573852539
    10. ' 
' → logprob: -18.37747573852539

Token 574: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038102082908153534
    2. '=' → logprob: -3.288102149963379
    3. ',n' → logprob: -10.038102149963379
    4. ' =' → logprob: -11.413102149963379
    5. ' ,' → logprob: -12.913102149963379
    6. 'n' → logprob: -12.913102149963379
    7. ',_' → logprob: -15.538102149963379
    8. ',...' → logprob: -15.788102149963379
    9. ',num' → logprob: -16.413101196289062
    10. '‌,' → logprob: -16.538101196289062

Token 575: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003357006062287837
    2. ' n' → logprob: -8.000335693359375
    3. '	n' → logprob: -15.500335693359375
    4. ' ' → logprob: -16.750335693359375
    5. '_n' → logprob: -17.250335693359375
    6. '   ' → logprob: -17.875335693359375
    7. '  ' → logprob: -19.125335693359375
    8. 'N' → logprob: -19.500335693359375
    9. '_' → logprob: -20.500335693359375
    10. '­n' → logprob: -20.750335693359375

Token 576: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891909033060074
    2. ' =' → logprob: -2.5789191722869873
    3. ',' → logprob: -10.453919410705566
    4. ')' → logprob: -15.703919410705566
    5. '   ' → logprob: -16.20391845703125
    6. '    ' → logprob: -16.32891845703125
    7. ' ' → logprob: -16.95391845703125
    8. 'x' → logprob: -16.95391845703125
    9. '	' → logprob: -17.07891845703125
    10. '=input' → logprob: -17.32891845703125

Token 577: ' fast' (ID: 5661)
  Prédit: 'fast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fast' → logprob: -0.0007100477814674377
    2. ' fast' → logprob: -7.2507100105285645
    3. 'fas' → logprob: -16.750709533691406
    4. 'map' → logprob: -18.250709533691406
    5. '_fast' → logprob: -19.000709533691406
    6. 'f' → logprob: -20.125709533691406
    7. '.fast' → logprob: -20.250709533691406
    8. 'Fast' → logprob: -20.250709533691406
    9. '   ' → logprob: -20.500709533691406
    10. 'reads' → logprob: -20.750709533691406

Token 578: '_reads' (ID: 188480)
  Prédit: '_reads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reads' → logprob: -0.07889111340045929
    2. 'reads' → logprob: -2.5788910388946533
    3. '_' → logprob: -14.453890800476074
    4. 'Reads' → logprob: -14.828890800476074
    5. '```' → logprob: -16.07889175415039
    6. 'r' → logprob: -16.20389175415039
    7. ' reads' → logprob: -16.20389175415039
    8. '_read' → logprob: -16.95389175415039
    9. '_rece' → logprob: -17.57889175415039
    10. '
' → logprob: -17.82889175415039

Token 579: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00024727347772568464
    2. '()
' → logprob: -9.50024700164795
    3. '       ' → logprob: -9.75024700164795
    4. ':' → logprob: -10.37524700164795
    5. ')' → logprob: -10.50024700164795
    6. ',' → logprob: -10.62524700164795
    7. '();' → logprob: -11.12524700164795
    8. '(),' → logprob: -12.87524700164795
    9. ' ()' → logprob: -13.00024700164795
    10. '():' → logprob: -13.25024700164795

Token 580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000305310997646302
    2. '<|end|>' → logprob: -9.37530517578125
    3. '```' → logprob: -9.37530517578125
    4. '
' → logprob: -9.87530517578125
    5. '        
' → logprob: -10.25030517578125
    6. '	' → logprob: -11.25030517578125
    7. '   ' → logprob: -11.37530517578125
    8. ',' → logprob: -12.37530517578125
    9. '<|end|>' → logprob: -12.75030517578125
    10. '  
' → logprob: -12.87530517578125

Token 581: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010615270584821701
    2. '       ' → logprob: -4.760615348815918
    3. 'result' → logprob: -7.260615348815918
    4. ' print' → logprob: -7.260615348815918
    5. 'res' → logprob: -7.510615348815918
    6. 'answer' → logprob: -10.760615348815918
    7. 'ans' (adapté à ' ans') → logprob: -12.010615348815918
    8. ' result' → logprob: -12.135615348815918
    9. ' res' → logprob: -12.260615348815918
    10. 'r' → logprob: -13.385615348815918

Token 582: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740789234638214
    2. ' =' → logprob: -0.974078893661499
    3. '   ' → logprob: -13.974079132080078
    4. ')' → logprob: -14.724079132080078
    5. '	' → logprob: -15.474079132080078
    6. ' ' → logprob: -16.474079132080078
    7. ':' → logprob: -16.724079132080078
    8. ',' → logprob: -17.099079132080078
    9. '  ' → logprob: -17.099079132080078
    10. '=int' → logprob: -17.349079132080078

Token 583: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0011705794604495168
    2. ' solve' → logprob: -6.751170635223389
    3. '
' → logprob: -16.126171112060547
    4. 'sol' → logprob: -16.126171112060547
    5. '   ' → logprob: -16.876171112060547
    6. '(s' → logprob: -17.251171112060547
    7. 'str' → logprob: -17.876171112060547
    8. '.solve' → logprob: -17.876171112060547
    9. 'save' → logprob: -18.126171112060547
    10. 'print' → logprob: -19.126171112060547

Token 584: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -9.088346359931165e-07
    2. 'single' → logprob: -14.125000953674316
    3. '_' → logprob: -17.25
    4. '_SINGLE' → logprob: -17.375
    5. '_s' → logprob: -18.75
    6. 'Single' → logprob: -19.0
    7. '(single' → logprob: -19.625
    8. 'ingle' → logprob: -20.75
    9. ' single' → logprob: -21.0
    10. '```' → logprob: -21.375

Token 585: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -1.4974866644479334e-05
    2. 'query' → logprob: -11.125015258789062
    3. '
' → logprob: -16.875015258789062
    4. '_' → logprob: -17.000015258789062
    5. '_question' → logprob: -17.750015258789062
    6. '```' → logprob: -18.125015258789062
    7. '_queries' → logprob: -18.500015258789062
    8. ' query' → logprob: -18.625015258789062
    9. 'Query' → logprob: -18.625015258789062
    10. '_QUERY' → logprob: -19.375015258789062

Token 586: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.15310683415737e-05
    2. '(' → logprob: -10.875021934509277
    3. '(
' → logprob: -12.875021934509277
    4. 'x' → logprob: -18.87502098083496
    5. ' (' → logprob: -19.00002098083496
    6. '
' → logprob: -19.50002098083496
    7. '((' → logprob: -20.12502098083496
    8. '(int' → logprob: -20.37502098083496
    9. '(*' → logprob: -21.12502098083496
    10. '(
' → logprob: -21.62502098083496

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003201358253136277
    2. ',d' → logprob: -5.753201484680176
    3. ' ,' → logprob: -10.753201484680176
    4. ',
' → logprob: -13.128201484680176
    5. '   ' → logprob: -15.878201484680176
    6. '‌,' → logprob: -17.00320053100586
    7. '       ' → logprob: -18.00320053100586
    8. 'd' → logprob: -18.12820053100586
    9. ',

' → logprob: -18.25320053100586
    10. '_,' → logprob: -18.25320053100586

Token 588: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0002649119414854795
    2. ' d' → logprob: -8.250265121459961
    3. '   ' → logprob: -13.000265121459961
    4. '  ' → logprob: -14.375265121459961
    5. ' ' → logprob: -15.250265121459961
    6. '    ' → logprob: -15.500265121459961
    7. '	d' → logprob: -16.00026512145996
    8. '       ' → logprob: -16.37526512145996
    9. '     ' → logprob: -16.75026512145996
    10. '
' → logprob: -16.75026512145996

Token 589: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001238325610756874
    2. ',n' → logprob: -6.7512383460998535
    3. ' ,' → logprob: -10.126237869262695
    4. 'n' → logprob: -10.501237869262695
    5. ',
' → logprob: -15.126237869262695
    6. ' n' → logprob: -15.626237869262695
    7. '   ' → logprob: -15.751237869262695
    8. '```' → logprob: -17.626237869262695
    9. '[n' → logprob: -18.126237869262695
    10. '(n' → logprob: -18.501237869262695

Token 590: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00020354038861114532
    2. ' n' → logprob: -8.500203132629395
    3. '	n' → logprob: -18.25020408630371
    4. ')n' → logprob: -20.62520408630371
    5. '   ' → logprob: -20.75020408630371
    6. ' ' → logprob: -21.50020408630371
    7. '[n' → logprob: -21.62520408630371
    8. '
' → logprob: -21.62520408630371
    9. '$n' → logprob: -21.62520408630371
    10. '       ' → logprob: -21.87520408630371

Token 591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.747814349073451e-05
    2. ' ,' → logprob: -11.625017166137695
    3. ',
' → logprob: -12.500017166137695
    4. ',f' → logprob: -12.875017166137695
    5. ')' → logprob: -13.375017166137695
    6. '```' → logprob: -15.375017166137695
    7. '
' → logprob: -16.000017166137695
    8. '   ' → logprob: -16.625017166137695
    9. ',
' → logprob: -17.500017166137695
    10. '),' → logprob: -17.625017166137695

Token 592: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00020354038861114532
    2. ' fact' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.87520408630371
    4. 'facts' → logprob: -18.87520408630371
    5. ' ' → logprob: -19.62520408630371
    6. 'factor' → logprob: -20.12520408630371
    7. 'Fact' → logprob: -20.37520408630371
    8. '_fact' → logprob: -20.37520408630371
    9. '  ' → logprob: -21.00020408630371
    10. '.fact' → logprob: -21.37520408630371

Token 593: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.465036105713807e-06
    2. ',
' → logprob: -12.625007629394531
    3. ' ,' → logprob: -12.875007629394531
    4. 'inv' → logprob: -13.500007629394531
    5. ',in' → logprob: -16.62500762939453
    6. '   ' → logprob: -17.12500762939453
    7. '
' → logprob: -17.25000762939453
    8. '=' → logprob: -18.12500762939453
    9. ' inv' → logprob: -18.12500762939453
    10. '```' → logprob: -18.12500762939453

Token 594: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -2.15310683415737e-05
    2. ' inv' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.37502098083496
    4. '(inv' → logprob: -18.12502098083496
    5. ' ' → logprob: -18.62502098083496
    6. '_inv' → logprob: -20.12502098083496
    7. 'inf' → logprob: -20.62502098083496
    8. '.inv' → logprob: -21.00002098083496
    9. 'in' → logprob: -21.12502098083496
    10. '    ' → logprob: -21.12502098083496

Token 595: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -6.704273118884885e-07
    2. 'fac' → logprob: -15.125000953674316
    3. 'act' → logprob: -15.625000953674316
    4. ' fact' → logprob: -16.875
    5. 'f' → logprob: -17.0
    6. '_fact' → logprob: -17.5
    7. 'factor' → logprob: -18.125
    8. 'ft' → logprob: -18.625
    9. 'fo' → logprob: -18.625
    10. 'frac' → logprob: -19.125

Token 596: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.704273118884885e-07
    2. ' ,' → logprob: -14.875000953674316
    3. ')' → logprob: -16.625
    4. ',
' → logprob: -16.875
    5. '```' → logprob: -16.875
    6. 'mod' → logprob: -17.625
    7. '),' → logprob: -18.125
    8. '   ' → logprob: -18.5
    9. ',module' → logprob: -20.25
    10. '
' → logprob: -20.25

Token 597: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01416350994259119
    2. ' mod' → logprob: -4.264163494110107
    3. '	mod' → logprob: -18.764163970947266
    4. ' ' → logprob: -20.264163970947266
    5. '(mod' → logprob: -21.264163970947266
    6. '_mod' → logprob: -22.139163970947266
    7. '.mod' → logprob: -22.639163970947266
    8. ' мод' → logprob: -23.014163970947266
    9. 'm' → logprob: -24.264163970947266
    10. 'moder' → logprob: -24.389163970947266

Token 598: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6099873781204224
    2. ')
' → logprob: -1.3599873781204224
    3. '       ' → logprob: -1.6099873781204224
    4. '   ' → logprob: -9.609987258911133
    5. ')
' → logprob: -11.109987258911133
    6. '	' → logprob: -13.359987258911133
    7. ',' → logprob: -14.359987258911133
    8. '           ' → logprob: -14.359987258911133
    9. 'print' → logprob: -14.484987258911133
    10. ' )' → logprob: -15.109987258911133

Token 599: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036638490855693817
    2. 'print' → logprob: -5.628664016723633
    3. '	' → logprob: -10.253664016723633
    4. '   ' → logprob: -11.253664016723633
    5. '```' → logprob: -11.378664016723633
    6. '        
' → logprob: -13.503664016723633
    7. ' print' → logprob: -13.878664016723633
    8. '	print' → logprob: -14.378664016723633
    9. '	   ' → logprob: -15.253664016723633
    10. '``' → logprob: -15.878664016723633

Token 600: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.869017852295656e-06
    2. '       ' → logprob: -12.000006675720215
    3. 'stderr' → logprob: -15.000006675720215
    4. '   ' → logprob: -15.750006675720215
    5. 'write' → logprob: -16.25000762939453
    6. ' print' → logprob: -16.50000762939453
    7. 'pr' → logprob: -17.37500762939453
    8. '```' → logprob: -17.50000762939453
    9. 'stdout' → logprob: -17.87500762939453
    10. 'println' → logprob: -18.87500762939453

Token 601: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.750008583068848
    3. '(
' → logprob: -16.62500762939453
    4. '(answer' → logprob: -16.87500762939453
    5. 'ans' → logprob: -17.00000762939453
    6. '(abs' → logprob: -18.75000762939453
    7. ' (' → logprob: -19.00000762939453
    8. '(an' → logprob: -19.12500762939453
    9. '(a' → logprob: -19.50000762939453
    10. '((' → logprob: -19.62500762939453

Token 602: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.375000953674316
    3. '())' → logprob: -15.750000953674316
    4. '()' → logprob: -15.875000953674316
    5. ')
' → logprob: -16.875
    6. '))' → logprob: -17.5
    7. '}' → logprob: -17.625
    8. ',)' → logprob: -18.125
    9. '')' → logprob: -18.25
    10. ',' → logprob: -18.875

Token 603: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2014702558517456
    2. 'if' → logprob: -1.7014702558517456
    3. 'mod' → logprob: -9.826470375061035
    4. '```' → logprob: -13.201470375061035
    5. ' if' → logprob: -14.451470375061035
    6. '#' → logprob: -14.701470375061035
    7. ' def' → logprob: -17.20146942138672
    8. 'import' → logprob: -17.45146942138672
    9. 'q' → logprob: -17.70146942138672
    10. '    
' → logprob: -18.07646942138672

Token 604: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1602308303117752
    2. ' main' → logprob: -1.9102308750152588
    3. '_main' → logprob: -12.53523063659668
    4. 'def' → logprob: -14.03523063659668
    5. 'run' → logprob: -14.28523063659668
    6. '	main' → logprob: -14.41023063659668
    7. 'set' → logprob: -15.03523063659668
    8. '__' → logprob: -15.41023063659668
    9. ' ' → logprob: -15.66023063659668
    10. ' run' → logprob: -15.91023063659668

Token 605: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.2200749754119897e-06
    2. '():
' → logprob: -13.250001907348633
    3. ' ():' → logprob: -14.875001907348633
    4. '()' → logprob: -17.875001907348633
    5. '():
' → logprob: -19.125001907348633
    6. '(' → logprob: -20.250001907348633
    7. '():

' → logprob: -21.750001907348633
    8. '().' → logprob: -22.500001907348633
    9. '(":' → logprob: -22.750001907348633
    10. ':' → logprob: -22.750001907348633

Token 606: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0067926980555057526
    2. 'mod' → logprob: -5.0067925453186035
    3. '	mod' → logprob: -10.006793022155762
    4. 'set' → logprob: -10.756793022155762
    5. ' mod' → logprob: -11.756793022155762
    6. '   ' → logprob: -13.506793022155762
    7. '(mod' → logprob: -14.006793022155762
    8. '```' → logprob: -15.256793022155762
    9. '	set' → logprob: -15.506793022155762
    10. ' set' → logprob: -15.881793022155762

Token 607: ' set' (ID: 920)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0001382241171086207
    2. 'q' → logprob: -9.750138282775879
    3. '   ' → logprob: -9.750138282775879
    4. ' mod' → logprob: -10.750138282775879
    5. '	mod' → logprob: -16.500137329101562
    6. ' q' → logprob: -18.000137329101562
    7. 'MOD' → logprob: -18.500137329101562
    8. 'm' → logprob: -18.750137329101562
    9. 'import' → logprob: -18.875137329101562
    10. 'set' (adapté à ' set') → logprob: -19.250137329101562

Token 608: '_large' (ID: 114698)
  Prédit: '_large'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_large' → logprob: -1.4378848391061183e-05
    2. '_' → logprob: -11.250014305114746
    3. '(' → logprob: -14.875014305114746
    4. 'large' → logprob: -15.375014305114746
    5. '_small' → logprob: -15.625014305114746
    6. '_l' → logprob: -15.875014305114746
    7. '_L' → logprob: -15.875014305114746
    8. '```' → logprob: -16.500015258789062
    9. 'Large' → logprob: -16.750015258789062
    10. ' _' → logprob: -16.875015258789062

Token 609: '_rec' (ID: 35314)
  Prédit: '_rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.00022523177904076874
    2. '_' → logprob: -8.500225067138672
    3. '_re' → logprob: -11.625225067138672
    4. '_recursive' → logprob: -12.625225067138672
    5. '_rep' → logprob: -12.625225067138672
    6. 'rec' → logprob: -13.875225067138672
    7. '```' → logprob: -14.875225067138672
    8. '_reg' → logprob: -15.000225067138672
    9. '_rc' → logprob: -15.000225067138672
    10. '_r' → logprob: -15.625225067138672

Token 610: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -3.404745439183898e-05
    2. 'urs' → logprob: -10.62503433227539
    3. '   ' → logprob: -12.12503433227539
    4. 'rs' → logprob: -14.50003433227539
    5. 'ur' → logprob: -14.50003433227539
    6. ' ' → logprob: -14.62503433227539
    7. '_' → logprob: -14.62503433227539
    8. 'ursive' → logprob: -14.75003433227539
    9. '```' → logprob: -14.75003433227539
    10. 'ersion' → logprob: -15.37503433227539

Token 611: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.06196802109479904
    2. 'limit' → logprob: -2.8119680881500244
    3. ' limit' → logprob: -15.311967849731445
    4. 'Limit' → logprob: -15.936967849731445
    5. '_LIMIT' → logprob: -18.436967849731445
    6. '-limit' → logprob: -18.436967849731445
    7. 'imit' → logprob: -18.686967849731445
    8. '(limit' → logprob: -20.186967849731445
    9. 'LIMIT' → logprob: -20.936967849731445
    10. 'lim' → logprob: -21.186967849731445

Token 612: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006716674659401178
    2. '()
' → logprob: -5.006716728210449
    3. '()
' → logprob: -14.50671672821045
    4. '()

' → logprob: -14.75671672821045
    5. '()`' → logprob: -15.13171672821045
    6. '()\' → logprob: -15.88171672821045
    7. ' ()' → logprob: -17.381715774536133
    8. '()"' → logprob: -17.381715774536133
    9. '();' → logprob: -18.256715774536133
    10. '():' → logprob: -18.256715774536133

Token 613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04873179271817207
    2. 'mod' → logprob: -3.048731803894043
    3. ' mod' → logprob: -9.673731803894043
    4. '```' → logprob: -10.048731803894043
    5. '	mod' → logprob: -10.298731803894043
    6. '
' → logprob: -13.548731803894043
    7. '(mod' → logprob: -13.923731803894043
    8. '   ' → logprob: -14.173731803894043
    9. ' ' → logprob: -14.423731803894043
    10. '    
' → logprob: -15.173731803894043

Token 614: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' (adapté à ' mod') → logprob: -1.3856492842023727e-06
    2. '   ' → logprob: -13.750000953674316
    3. ' mod' → logprob: -15.375000953674316
    4. '	mod' → logprob: -20.125001907348633
    5. 'm' → logprob: -21.000001907348633
    6. 'MOD' → logprob: -21.625001907348633
    7. 'mo' → logprob: -21.750001907348633
    8. '
' → logprob: -21.875001907348633
    9. '```' → logprob: -22.125001907348633
    10. 'q' → logprob: -22.250001907348633

Token 615: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740777015686035
    2. '=' → logprob: -0.9740777015686035
    3. '	' → logprob: -15.599077224731445
    4. ',' → logprob: -15.974077224731445
    5. ' =
' → logprob: -16.474077224731445
    6. '＝' → logprob: -16.724077224731445
    7. '=int' → logprob: -16.849077224731445
    8. '   ' → logprob: -17.099077224731445
    9. ' ' → logprob: -17.224077224731445
    10. ' ' → logprob: -17.349077224731445

Token 616: ' get' (ID: 717)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005770111456513405
    2. 'get' → logprob: -5.255770206451416
    3. '100' → logprob: -7.630770206451416
    4. ' ' → logprob: -10.130769729614258
    5. ' get' → logprob: -11.505769729614258
    6. '(' → logprob: -14.130769729614258
    7. '```' → logprob: -16.380769729614258
    8. 'int' → logprob: -16.505769729614258
    9. '   ' → logprob: -16.755769729614258
    10. '(get' → logprob: -17.380769729614258

Token 617: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -7.896309739408025e-07
    2. 'mod' → logprob: -14.125000953674316
    3. '_' → logprob: -17.75
    4. '_MOD' → logprob: -19.5
    5. '_Mod' → logprob: -20.25
    6. '	mod' → logprob: -20.875
    7. '_mode' → logprob: -20.875
    8. '(mod' → logprob: -21.125
    9. '_modified' → logprob: -21.625
    10. '_m' → logprob: -21.75

Token 618: 'ulus' (ID: 40006)
  Prédit: 'ulus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulus' → logprob: -7.896309739408025e-07
    2. 'us' → logprob: -14.625000953674316
    3. 'uls' → logprob: -15.500000953674316
    4. 'ul' → logprob: -16.625
    5. 'olus' → logprob: -17.25
    6. 'lus' → logprob: -17.875
    7. 'ule' → logprob: -20.75
    8. 'ulis' → logprob: -21.0
    9. 'ules' → logprob: -21.125
    10. '()' → logprob: -21.75

Token 619: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12941671907901764
    2. 'fact' → logprob: -2.1294167041778564
    3. ' fact' → logprob: -7.2544169425964355
    4. '    
' → logprob: -7.7544169425964355
    5. '```' → logprob: -7.7544169425964355
    6. '
' → logprob: -8.004416465759277
    7. '<|end|>' → logprob: -8.504416465759277
    8. '_fact' → logprob: -8.504416465759277
    9. ',' → logprob: -11.129416465759277
    10. 'Fact' → logprob: -11.379416465759277

Token 620: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3563631772994995
    2. 'fact' → logprob: -1.2313631772994995
    3. ' fact' → logprob: -4.856363296508789
    4. '```' → logprob: -10.106363296508789
    5. '_fact' → logprob: -10.481363296508789
    6. '	f' → logprob: -11.856363296508789
    7. '    
' → logprob: -12.231363296508789
    8. '
' → logprob: -12.356363296508789
    9. '  ' → logprob: -12.606363296508789
    10. 'facts' → logprob: -12.606363296508789

Token 621: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -6.704273118884885e-07
    2. ' fact' → logprob: -14.375000953674316
    3. 'facts' → logprob: -18.375
    4. 'factor' → logprob: -19.5
    5. '   ' → logprob: -20.0
    6. '_fact' → logprob: -20.125
    7. 'fac' → logprob: -20.5
    8. 'f' → logprob: -21.125
    9. '
' → logprob: -21.75
    10. '.fact' → logprob: -21.75

Token 622: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2521328330039978
    2. '=' → logprob: -1.5021328926086426
    3. ',' → logprob: -8.502132415771484
    4. '   ' → logprob: -14.752132415771484
    5. ' ' → logprob: -15.752132415771484
    6. '	' → logprob: -16.877132415771484
    7. 's' → logprob: -17.252132415771484
    8. '＝' → logprob: -17.252132415771484
    9. ' ,' → logprob: -17.377132415771484
    10. '[' → logprob: -17.502132415771484

Token 623: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.0031793788075447083
    2. ' initialize' → logprob: -5.753179550170898
    3. '[' → logprob: -13.628179550170898
    4. '	initialize' → logprob: -15.128179550170898
    5. '_initialize' → logprob: -16.6281795501709
    6. '   ' → logprob: -16.6281795501709
    7. '.initialize' → logprob: -17.8781795501709
    8. '[in' → logprob: -18.3781795501709
    9. 'itialize' → logprob: -18.3781795501709
    10. 'initialized' → logprob: -19.1281795501709

Token 624: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0032017158810049295
    2. 'factor' → logprob: -5.753201484680176
    3. '_fact' → logprob: -11.378201484680176
    4. 'fact' → logprob: -12.128201484680176
    5. '(f' → logprob: -13.128201484680176
    6. 'Factor' → logprob: -13.628201484680176
    7. '_' → logprob: -14.128201484680176
    8. ' factorial' → logprob: -14.128201484680176
    9. '_fac' → logprob: -14.753201484680176
    10. 's' → logprob: -14.878201484680176

Token 625: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.0018548656953498721
    2. 'als' → logprob: -6.50185489654541
    3. 'ial' → logprob: -8.12685489654541
    4. 't' → logprob: -10.25185489654541
    5. 'orial' → logprob: -11.50185489654541
    6. 's' → logprob: -12.37685489654541
    7. 'al' → logprob: -13.12685489654541
    8. 'c' → logprob: -14.12685489654541
    9. 'o' → logprob: -14.37685489654541
    10. 'ivals' → logprob: -14.50185489654541

Token 626: '(mod' (ID: 45051)
  Prédit: '(mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -15.25000286102295
    4. '(m' → logprob: -15.50000286102295
    5. '(Mod' → logprob: -17.000001907348633
    6. '(
' → logprob: -17.250001907348633
    7. 'mod' → logprob: -18.375001907348633
    8. '(mode' → logprob: -19.000001907348633
    9. '(module' → logprob: -19.750001907348633
    10. '	mod' → logprob: -19.750001907348633

Token 627: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007762788329273462
    2. ')
' → logprob: -4.882762908935547
    3. ',' → logprob: -9.257762908935547
    4. '   ' → logprob: -9.757762908935547
    5. ')
' → logprob: -13.507762908935547
    6. ' )' → logprob: -13.882762908935547
    7. ',)' → logprob: -15.007762908935547
    8. ' ' → logprob: -15.132762908935547
    9. '),' → logprob: -15.257762908935547
    10. ' )
' → logprob: -16.882762908935547

Token 628: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022779831662774086
    2. 'inv' → logprob: -4.272779941558838
    3. ' inv' → logprob: -4.772779941558838
    4. '```' → logprob: -9.27277946472168
    5. '(inv' → logprob: -10.89777946472168
    6. '_inv' → logprob: -12.27277946472168
    7. '
' → logprob: -12.52277946472168
    8. 'inverse' → logprob: -14.77277946472168
    9. '.inv' → logprob: -15.02277946472168
    10. '``' → logprob: -15.64777946472168

Token 629: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -2.696889623621246e-06
    2. ' inv' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.00000286102295
    4. '(inv' → logprob: -18.875001907348633
    5. '```' → logprob: -21.125001907348633
    6. '.inv' → logprob: -21.250001907348633
    7. '_inv' → logprob: -21.500001907348633
    8. 'inf' → logprob: -21.625001907348633
    9. 'inverse' → logprob: -22.625001907348633
    10. '  ' → logprob: -22.625001907348633

Token 630: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -6.392202976712724e-06
    2. '_fact' → logprob: -12.000006675720215
    3. ' fact' → logprob: -16.3750057220459
    4. '```' → logprob: -17.6250057220459
    5. 'f' → logprob: -18.3750057220459
    6. '_' → logprob: -18.8750057220459
    7. 'fac' → logprob: -18.8750057220459
    8. 'fait' → logprob: -19.3750057220459
    9. 'factor' → logprob: -19.3750057220459
    10. '.fact' → logprob: -19.6250057220459

Token 631: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20151469111442566
    2. '=' → logprob: -1.701514720916748
    3. ',' → logprob: -9.20151424407959
    4. '[' → logprob: -15.82651424407959
    5. ' ,' → logprob: -15.82651424407959
    6. '   ' → logprob: -16.451515197753906
    7. ')' → logprob: -16.826515197753906
    8. '(' → logprob: -17.076515197753906
    9. '＝' → logprob: -17.326515197753906
    10. '_' → logprob: -17.576515197753906

Token 632: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.0007181499968282878
    2. ' initialize' → logprob: -7.250718116760254
    3. '[' → logprob: -11.750718116760254
    4. '	initialize' → logprob: -15.875718116760254
    5. ' [' → logprob: -16.12571907043457
    6. '[in' → logprob: -17.25071907043457
    7. '.initialize' → logprob: -17.37571907043457
    8. '_initialize' → logprob: -17.75071907043457
    9. 'initial' → logprob: -19.37571907043457
    10. 'itialize' → logprob: -19.62571907043457

Token 633: '_inverse' (ID: 188797)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.10021842271089554
    2. '_inverse' → logprob: -2.3502185344696045
    3. 'inverse' → logprob: -11.600218772888184
    4. 'factor' → logprob: -13.225218772888184
    5. '_reverse' → logprob: -15.225218772888184
    6. '_' → logprob: -15.600218772888184
    7. '_in' → logprob: -16.100217819213867
    8. '_initialize' → logprob: -16.225217819213867
    9. '```' → logprob: -16.850217819213867
    10. '_integer' → logprob: -17.225217819213867

Token 634: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -2.1008713702030946e-06
    2. 'factor' → logprob: -13.125001907348633
    3. '_' → logprob: -17.875001907348633
    4. '_inverse' → logprob: -18.375001907348633
    5. '_fact' → logprob: -18.750001907348633
    6. 'Factor' → logprob: -19.500001907348633
    7. '```' → logprob: -19.875001907348633
    8. ' factorial' → logprob: -20.000001907348633
    9. '_FACTOR' → logprob: -20.625001907348633
    10. '
' → logprob: -22.000001907348633

Token 635: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.008706637658178806
    2. 'als' → logprob: -4.758706569671631
    3. 'ial' → logprob: -10.008707046508789
    4. 'c' → logprob: -11.633707046508789
    5. '[' → logprob: -11.758707046508789
    6. '_' → logprob: -12.008707046508789
    7. 'orial' → logprob: -12.508707046508789
    8. 'icals' → logprob: -12.633707046508789
    9. 'r' → logprob: -13.008707046508789
    10. 'al' → logprob: -13.008707046508789

Token 636: '(mod' (ID: 45051)
  Prédit: '(mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -13.250003814697266
    3. 'mod' → logprob: -13.625003814697266
    4. ' (' → logprob: -14.625003814697266
    5. '(
' → logprob: -15.750003814697266
    6. '```' → logprob: -15.750003814697266
    7. '(m' → logprob: -16.500003814697266
    8. '	mod' → logprob: -17.500003814697266
    9. ' mod' → logprob: -17.625003814697266
    10. '(mode' → logprob: -19.125003814697266

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. '(mod' → logprob: -13.000004768371582
    3. ' ,' → logprob: -13.250004768371582
    4. ',
' → logprob: -15.000004768371582
    5. 'mod' → logprob: -17.375003814697266
    6. '   ' → logprob: -17.750003814697266
    7. '‌,' → logprob: -18.875003814697266
    8. ')' → logprob: -19.000003814697266
    9. '
' → logprob: -19.125003814697266
    10. '(' → logprob: -19.875003814697266

Token 638: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0001234428636962548
    2. ' fact' → logprob: -9.000123023986816
    3. ' ' → logprob: -19.125123977661133
    4. 'facts' → logprob: -19.500123977661133
    5. 'factor' → logprob: -19.500123977661133
    6. '_fact' → logprob: -19.625123977661133
    7. 'fac' → logprob: -20.000123977661133
    8. 'Fact' → logprob: -20.125123977661133
    9. '   ' → logprob: -21.250123977661133
    10. '.fact' → logprob: -21.500123977661133

Token 639: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.553032628493384e-05
    2. ')
' → logprob: -9.625075340270996
    3. ',' → logprob: -11.875075340270996
    4. '   ' → logprob: -13.125075340270996
    5. ' )' → logprob: -14.500075340270996
    6. ')
' → logprob: -16.750076293945312
    7. ',)' → logprob: -17.000076293945312
    8. ' ' → logprob: -17.250076293945312
    9. '),' → logprob: -17.250076293945312
    10. ').' → logprob: -18.500076293945312

Token 640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3554263114929199
    2. 'q' → logprob: -2.10542631149292
    3. '	process' → logprob: -2.48042631149292
    4. '	q' → logprob: -3.10542631149292
    5. 'process' → logprob: -3.35542631149292
    6. '```' → logprob: -5.35542631149292
    7. ' process' → logprob: -5.98042631149292
    8. '<|end|>' → logprob: -6.60542631149292
    9. 'import' → logprob: -6.85542631149292
    10. '
' → logprob: -7.23042631149292

Token 641: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -13.500001907348633
    3. 'process' → logprob: -15.625001907348633
    4. ' q' → logprob: -16.125001907348633
    5. 'for' → logprob: -16.750001907348633
    6. 't' → logprob: -17.125001907348633
    7. 'queries' → logprob: -19.000001907348633
    8. '    
' → logprob: -19.375001907348633
    9. 'Q' → logprob: -19.375001907348633
    10. '_q' → logprob: -19.500001907348633

Token 642: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5772120356559753
    2. ' =' → logprob: -0.8272120356559753
    3. '=int' → logprob: -6.702211856842041
    4. ',' → logprob: -10.9522123336792
    5. ' ' → logprob: -11.0772123336792
    6. '	' → logprob: -12.0772123336792
    7. ' =
' → logprob: -13.4522123336792
    8. '   ' → logprob: -13.8272123336792
    9. '=input' → logprob: -14.9522123336792
    10. ' ' → logprob: -15.0772123336792

Token 643: ' fast' (ID: 5661)
  Prédit: 'fast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fast' → logprob: -0.029826270416378975
    2. ' fast' → logprob: -3.5298261642456055
    3. 'int' → logprob: -9.529826164245605
    4. ' int' → logprob: -13.029826164245605
    5. '_fast' → logprob: -14.529826164245605
    6. '   ' → logprob: -14.779826164245605
    7. 'fas' → logprob: -17.029827117919922
    8. '  ' → logprob: -17.654827117919922
    9. '.fast' → logprob: -17.904827117919922
    10. 'Fast' → logprob: -18.154827117919922

Token 644: '_read' (ID: 14291)
  Prédit: '_reads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reads' → logprob: -0.31327077746391296
    2. '_read' → logprob: -1.3132708072662354
    3. 'reads' → logprob: -12.063270568847656
    4. 'read' → logprob: -13.563270568847656
    5. 'Reads' → logprob: -14.313270568847656
    6. ' reads' → logprob: -14.313270568847656
    7. '_input' → logprob: -14.563270568847656
    8. '_re' → logprob: -15.563270568847656
    9. '_READ' → logprob: -16.438270568847656
    10. '_Read' → logprob: -16.563270568847656

Token 645: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.856408536899835e-05
    2. '()
' → logprob: -11.000028610229492
    3. ' ()' → logprob: -12.375028610229492
    4. '();' → logprob: -13.500028610229492
    5. '())' → logprob: -13.625028610229492
    6. '()>' → logprob: -13.625028610229492
    7. '(' → logprob: -13.750028610229492
    8. ')' → logprob: -14.500028610229492
    9. '   ' → logprob: -14.500028610229492
    10. '()\' → logprob: -15.125028610229492

Token 646: '   ' (ID: 271)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.6622962951660156
    2. '   ' → logprob: -1.1622962951660156
    3. ' process' → logprob: -2.0372962951660156
    4. '	process' → logprob: -3.5372962951660156
    5. '
' → logprob: -4.537296295166016
    6. '```' → logprob: -7.787296295166016
    7. '(process' → logprob: -7.912296295166016
    8. '_process' → logprob: -8.412296295166016
    9. '<|end|>' → logprob: -8.537296295166016
    10. '.process' → logprob: -9.662296295166016

Token 647: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -1.1994775377388578e-05
    2. ' process' → logprob: -11.750012397766113
    3. '   ' → logprob: -12.500012397766113
    4. '	process' → logprob: -14.750012397766113
    5. '(process' → logprob: -19.375011444091797
    6. '_process' → logprob: -20.750011444091797
    7. '.process' → logprob: -21.125011444091797
    8. 'proces' → logprob: -21.750011444091797
    9. '-process' → logprob: -22.000011444091797
    10. 'Process' → logprob: -23.125011444091797

Token 648: '_queries' (ID: 172558)
  Prédit: '_queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queries' → logprob: -1.5570885807392187e-05
    2. '_' → logprob: -11.250015258789062
    3. '_questions' → logprob: -14.375015258789062
    4. '_q' → logprob: -14.500015258789062
    5. '```' → logprob: -15.375015258789062
    6. '(_' → logprob: -15.625015258789062
    7. '
' → logprob: -16.125015258789062
    8. ' _' → logprob: -16.125015258789062
    9. '_query' → logprob: -16.250015258789062
    10. '"_' → logprob: -16.500015258789062

Token 649: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00018077615823131055
    2. '(' → logprob: -8.625181198120117
    3. ' (' → logprob: -14.000181198120117
    4. '(
' → logprob: -14.875181198120117
    5. '(query' → logprob: -16.750181198120117
    6. '(qu' → logprob: -16.875181198120117
    7. 'q' → logprob: -19.750181198120117
    8. '((' → logprob: -20.250181198120117
    9. '(

' → logprob: -20.500181198120117
    10. '(f' → logprob: -20.750181198120117

Token 650: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3663626305060461e-05
    2. ' ,' → logprob: -11.50001335144043
    3. ',f' → logprob: -12.87501335144043
    4. ')' → logprob: -14.87501335144043
    5. '(' → logprob: -15.50001335144043
    6. ',q' → logprob: -16.00001335144043
    7. '   ' → logprob: -16.37501335144043
    8. '(f' → logprob: -16.62501335144043
    9. '(),' → logprob: -17.25001335144043
    10. ',
' → logprob: -18.00001335144043

Token 651: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0019288709154352546
    2. ' fact' → logprob: -6.251928806304932
    3. '_fact' → logprob: -16.751928329467773
    4. '
' → logprob: -16.751928329467773
    5. 'factor' → logprob: -16.751928329467773
    6. 'facts' → logprob: -17.126928329467773
    7. 'Fact' → logprob: -17.876928329467773
    8. '   ' → logprob: -18.001928329467773
    9. 'f' → logprob: -18.001928329467773
    10. 'fac' → logprob: -18.126928329467773

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.60414821645827e-06
    2. ' ,' → logprob: -12.500004768371582
    3. ',
' → logprob: -14.125004768371582
    4. '‌,' → logprob: -17.625003814697266
    5. '   ' → logprob: -19.125003814697266
    6. 'inv' → logprob: -19.250003814697266
    7. '```' → logprob: -19.500003814697266
    8. ')' → logprob: -19.625003814697266
    9. ',in' → logprob: -19.625003814697266
    10. ',int' → logprob: -19.625003814697266

Token 653: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0015023599844425917
    2. ' inv' → logprob: -6.501502513885498
    3. '(inv' → logprob: -17.126502990722656
    4. '   ' → logprob: -17.501502990722656
    5. ' ' → logprob: -18.126502990722656
    6. '
' → logprob: -18.626502990722656
    7. '_inv' → logprob: -19.501502990722656
    8. '.inv' → logprob: -20.001502990722656
    9. 'in' → logprob: -20.251502990722656
    10. 'inf' → logprob: -20.501502990722656

Token 654: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -6.704273118884885e-07
    2. 'act' → logprob: -15.500000953674316
    3. ' fact' → logprob: -15.500000953674316
    4. '_fact' → logprob: -16.125
    5. 'f' → logprob: -19.625
    6. 'Fact' → logprob: -19.875
    7. '.fact' → logprob: -19.875
    8. 'fac' → logprob: -20.0
    9. 'factor' → logprob: -21.0
    10. 'facts' → logprob: -21.0

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.088346359931165e-07
    2. ' ,' → logprob: -14.125000953674316
    3. '(mod' → logprob: -17.5
    4. ',
' → logprob: -17.75
    5. '   ' → logprob: -18.625
    6. ')' → logprob: -18.75
    7. '```' → logprob: -19.25
    8. '`,' → logprob: -19.5
    9. '‌,' → logprob: -20.125
    10. ',module' → logprob: -20.125

Token 656: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011047935113310814
    2. ' mod' → logprob: -4.511047840118408
    3. '	mod' → logprob: -16.01104736328125
    4. '(mod' → logprob: -18.51104736328125
    5. ' ' → logprob: -18.88604736328125
    6. ' ' → logprob: -19.13604736328125
    7. '_mod' → logprob: -19.26104736328125
    8. 'moder' → logprob: -19.51104736328125
    9. '```' → logprob: -19.88604736328125
    10. ' мод' → logprob: -19.88604736328125

Token 657: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. '())' → logprob: -13.625003814697266
    3. ' )' → logprob: -13.625003814697266
    4. ')
' → logprob: -13.750003814697266
    5. '()' → logprob: -15.625003814697266
    6. '   ' → logprob: -17.000003814697266
    7. ')#' → logprob: -18.000003814697266
    8. ')

' → logprob: -18.500003814697266
    9. ')`' → logprob: -19.125003814697266
    10. '}' → logprob: -19.250003814697266

Token 658: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31369176506996155
    2. '
' → logprob: -1.3136917352676392
    3. '```' → logprob: -8.313692092895508
    4. ' if' → logprob: -9.063692092895508
    5. '\n' → logprob: -10.313692092895508
    6. 'main' → logprob: -11.313692092895508
    7. '  
' → logprob: -11.813692092895508
    8. '\
' → logprob: -12.813692092895508
    9. '    
' → logprob: -12.813692092895508
    10. '

' → logprob: -12.938692092895508

Token 659: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 657
Tokens correctement prédits (1ère position, stricte): 291
Tokens correctement prédits (1ère position, avec adaptation): 320
Tokens correctement prédits (top 10): 571
Précision stricte (1ère position): 44.29%
Précision adaptée (1ère position): 48.71%
Précision (top 10): 86.91%
================================================================================
