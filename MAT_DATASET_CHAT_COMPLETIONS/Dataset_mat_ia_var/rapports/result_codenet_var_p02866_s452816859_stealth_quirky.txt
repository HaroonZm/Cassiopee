================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import collections as clx

M_O_D = 998244353  # Personal preference: underscores and all caps for clarity

def cult_input():  # Just because I like naming things creatively
    return input()

def cult_exit(code=0):  # Wrapper for possible extensibility
    exit(code)

N = int(cult_input())
D = [*map(int, cult_input().split())]  # Star-unpacking for "style"

ctr = clx.Counter(D)  # Weird alias for Counter as clx

if D[(-N) % len(D)] != 0 or ctr.get(0,0) != 1:  # Indexing with modulo and .get()
    print(0)
    cult_exit(0)

ans = True  # Booleans as numbers, why not?

for layer in range(1, max(D) + 1):  # Renaming loop variable
    if not ctr[layer]:  # Rely on Counter giving 0 for missing keys
        ans = False
        break
    combo = pow(ctr[layer - 1], ctr[layer], M_O_D)  # Naming intermediate values
    ans = (ans * combo) % M_O_D

print(ans if ans else 0)  # Use ans directly, since bools multiply as 0/1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' cl' (ID: 567)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.9655599594116211
    2. ' ' → logprob: -1.340559959411621
    3. ' col' → logprob: -1.715559959411621
    4. 'collections' → logprob: -2.590559959411621
    5. ' cole' → logprob: -2.840559959411621
    6. ' co' → logprob: -4.215559959411621
    7. ' coll' → logprob: -4.965559959411621
    8. 'col' → logprob: -5.090559959411621
    9. ' _' → logprob: -5.340559959411621
    10. ' cl' → logprob: -5.715559959411621

Token 4: 'x' (ID: 87)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000536828360054642
    2. '_' → logprob: -8.875536918640137
    3. ';' → logprob: -9.500536918640137
    4. 'a' → logprob: -10.375536918640137
    5. '' → logprob: -10.500536918640137
    6. '.Counter' → logprob: -10.500536918640137
    7. '.a' → logprob: -10.625536918640137
    8. '```' → logprob: -10.750536918640137
    9. '#' → logprob: -11.250536918640137
    10. ')' → logprob: -11.375536918640137

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.0020742492051795e-05
    2. '\' → logprob: -11.125049591064453
    3. ',' → logprob: -12.125049591064453
    4. '.`' → logprob: -12.625049591064453
    5. '.\' → logprob: -12.625049591064453
    6. 'import' → logprob: -12.875049591064453
    7. 'newline' → logprob: -12.875049591064453
    8. ' .' → logprob: -13.375049591064453
    9. '\n' → logprob: -13.500049591064453
    10. '.n' → logprob: -13.875049591064453

Token 6: 'M' (ID: 44)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003227148437872529
    2. '.Counter' → logprob: -6.378227233886719
    3. '\' → logprob: -8.003227233886719
    4. ',' → logprob: -8.003227233886719
    5. '_' → logprob: -9.253227233886719
    6. '.C' → logprob: -9.628227233886719
    7. '.
' → logprob: -9.753227233886719
    8. '.\' → logprob: -9.878227233886719
    9. '```' → logprob: -9.878227233886719
    10. '\n' → logprob: -10.128227233886719

Token 7: '_O' (ID: 11678)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6879308223724365
    2. 'y' → logprob: -1.1879308223724365
    3. 'e' → logprob: -2.8129308223724365
    4. 'ax' → logprob: -3.4379308223724365
    5. ' =' → logprob: -3.8129308223724365
    6. '=' → logprob: -4.562931060791016
    7. 'ulti' → logprob: -4.687931060791016
    8. 'ap' → logprob: -5.062931060791016
    9. 'ult' → logprob: -5.062931060791016
    10. 'apping' → logprob: -5.187931060791016

Token 8: '_D' (ID: 2958)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.421270489692688
    2. 'DEL' → logprob: -1.546270489692688
    3. 'DE' → logprob: -2.6712703704833984
    4. 'RD' → logprob: -4.796270370483398
    5. 'DM' → logprob: -5.046270370483398
    6. 'T' → logprob: -5.171270370483398
    7. 'ST' → logprob: -5.296270370483398
    8. 'N' → logprob: -5.546270370483398
    9. 'DS' → logprob: -5.671270370483398
    10. 'NT' → logprob: -6.046270370483398

Token 9: ' =' (ID: 314)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.20395177602767944
    2. 'ULE' → logprob: -1.8289518356323242
    3. '_' → logprob: -4.828951835632324
    4. 'E' → logprob: -4.828951835632324
    5. '_U' → logprob: -5.703951835632324
    6. 'UL' → logprob: -5.953951835632324
    7. 'EL' → logprob: -6.828951835632324
    8. '_E' → logprob: -8.203951835632324
    9. '=' → logprob: -8.453951835632324
    10. '__' → logprob: -9.578951835632324

Token 10: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.71722811460495
    2. ' cl' → logprob: -2.2172281742095947
    3. '10' → logprob: -2.9672281742095947
    4. '32' → logprob: -3.0922281742095947
    5. '{}' → logprob: -3.2172281742095947
    6. ' '' → logprob: -3.3422281742095947
    7. ''' → logprob: -3.3422281742095947
    8. '100' → logprob: -3.5922281742095947
    9. ' {}' → logprob: -3.5922281742095947
    10. 'cl' → logprob: -3.7172281742095947

Token 11: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3354526460170746
    2. '100' → logprob: -1.335452675819397
    3. '998' → logprob: -4.710452556610107
    4. '(' → logprob: -5.835452556610107
    5. '1' → logprob: -5.835452556610107
    6. '2' → logprob: -6.210452556610107
    7. ' ' → logprob: -6.210452556610107
    8. 'int' → logprob: -8.210453033447266
    9. '360' → logprob: -8.210453033447266
    10. '26' → logprob: -8.335453033447266

Token 12: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -0.28151026368141174
    2. '7' → logprob: -1.4065102338790894
    3. '247' → logprob: -9.406510353088379
    4. '_' → logprob: -10.031510353088379
    5. '447' → logprob: -10.156510353088379
    6. '4' → logprob: -10.281510353088379
    7. '```' → logprob: -10.281510353088379
    8. ',' → logprob: -10.406510353088379
    9. '444' → logprob: -10.906510353088379
    10. '44' → logprob: -11.281510353088379

Token 13: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.008627460338175297
    2. '853' → logprob: -4.758627414703369
    3. '53' → logprob: -11.633627891540527
    4. '3' → logprob: -13.258627891540527
    5. '```' → logprob: -14.258627891540527
    6. '533' → logprob: -14.508627891540527
    7. '553' → logprob: -15.383627891540527
    8. '7' → logprob: -15.508627891540527
    9. '583' → logprob: -16.50862693786621
    10. '"""' → logprob: -16.94612693786621

Token 14: ' ' (ID: 220)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3184982538223267
    2. '
' → logprob: -1.8184982538223267
    3. '' → logprob: -1.9434982538223267
    4. '_' → logprob: -2.193498134613037
    5. '\' → logprob: -2.443498134613037
    6. '*' → logprob: -2.568498134613037
    7. ',' → logprob: -2.818498134613037
    8. '.' → logprob: -3.693498134613037
    9. '

' → logprob: -4.693498134613037
    10. '#' → logprob: -4.943498134613037

Token 15: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31445083022117615
    2. '\n' → logprob: -2.439450740814209
    3. '

' → logprob: -2.689450740814209
    4. '' → logprob: -2.939450740814209
    5. '*' → logprob: -3.564450740814209
    6. '
' → logprob: -4.314450740814209
    7. '_' → logprob: -5.564450740814209
    8. ',' → logprob: -5.689450740814209
    9. '\' → logprob: -5.939450740814209
    10. ' ' → logprob: -6.314450740814209

Token 16: ' Personal' (ID: 19086)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1753830909729004
    2. ' \' → logprob: -2.3003830909729004
    3. '\n' → logprob: -3.3003830909729004
    4. '\' → logprob: -4.6753830909729
    5. ' 

' → logprob: -4.8003830909729
    6. ' ' → logprob: -7.0503830909729
    7. '  
' → logprob: -7.4253830909729
    8. '  

' → logprob: -7.4253830909729
    9. '_' → logprob: -7.9253830909729
    10. ' '\' → logprob: -8.050382614135742

Token 17: ' preference' (ID: 35627)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015197111293673515
    2. ' _' → logprob: -4.765197277069092
    3. '_mod' → logprob: -6.140197277069092
    4. '_MOD' → logprob: -6.890197277069092
    5. 'mod' → logprob: -7.015197277069092
    6. ' ' → logprob: -7.515197277069092
    7. '_
' → logprob: -8.265196800231934
    8. '_constant' → logprob: -8.265196800231934
    9. '_M' → logprob: -8.390196800231934
    10. '\' → logprob: -8.765196800231934

Token 18: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04328451678156853
    2. '

' → logprob: -3.9182844161987305
    3. '\n' → logprob: -4.7932844161987305
    4. '' → logprob: -5.2932844161987305
    5. '
' → logprob: -5.2932844161987305
    6. '_' → logprob: -6.7932844161987305
    7. 'newline' → logprob: -8.16828441619873
    8. '\' → logprob: -8.29328441619873
    9. ',' → logprob: -8.41828441619873
    10. '*' → logprob: -8.54328441619873

Token 19: ' underscores' (ID: 168008)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10927237570285797
    2. '2' → logprob: -3.6092724800109863
    3. 'pow' → logprob: -4.359272480010986
    4. '10' → logprob: -4.484272480010986
    5. '1' → logprob: -4.609272480010986
    6. ' None' → logprob: -4.984272480010986
    7. 'int' → logprob: -5.359272480010986
    8. ' (' → logprob: -5.484272480010986
    9. 'None' → logprob: -5.984272480010986
    10. ' pow' → logprob: -6.109272480010986

Token 20: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7312142252922058
    2. '_' → logprob: -0.8562142252922058
    3. '_
' → logprob: -3.1062142848968506
    4. '

' → logprob: -4.8562140464782715
    5. '' → logprob: -5.2312140464782715
    6. '\n' → logprob: -5.2312140464782715
    7. '*' → logprob: -5.3562140464782715
    8. '_

' → logprob: -5.6062140464782715
    9. '
' → logprob: -5.8562140464782715
    10. '```' → logprob: -5.8562140464782715

Token 21: ' all' (ID: 722)
  Prédit: 'uppercase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uppercase' → logprob: -0.751027524471283
    2. 'caps' → logprob: -2.3760275840759277
    3. 'capital' → logprob: -2.5010275840759277
    4. ' uppercase' → logprob: -3.0010275840759277
    5. 'numbers' → logprob: -3.1260275840759277
    6. 'lower' → logprob: -3.3760275840759277
    7. 'digits' → logprob: -3.6260275840759277
    8. 'camel' → logprob: -3.7510275840759277
    9. 's' → logprob: -4.126027584075928
    10. ' capital' → logprob: -4.251027584075928

Token 22: ' caps' (ID: 26440)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45152685046195984
    2. '
' → logprob: -1.7015268802642822
    3. '' → logprob: -3.0765268802642822
    4. '
' → logprob: -3.2015268802642822
    5. '

' → logprob: -3.3265268802642822
    6. '_
' → logprob: -4.076526641845703
    7. '_

' → logprob: -4.326526641845703
    8. '.' → logprob: -4.951526641845703
    9. '\' → logprob: -5.326526641845703
    10. '```' → logprob: -5.576526641845703

Token 23: ' for' (ID: 395)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7994469404220581
    2. '
' → logprob: -1.174446940422058
    3. '

' → logprob: -2.6744470596313477
    4. '_

' → logprob: -2.9244470596313477
    5. '_
' → logprob: -2.9244470596313477
    6. '
' → logprob: -3.6744470596313477
    7. '' → logprob: -4.174447059631348
    8. '\n' → logprob: -4.299447059631348
    9. '```' → logprob: -5.799447059631348
    10. '\' → logprob: -6.299447059631348

Token 24: ' clarity' (ID: 45632)
  Prédit: ' constants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' constants' → logprob: -0.6420396566390991
    2. 'constants' → logprob: -0.8920396566390991
    3. 'module' → logprob: -3.7670397758483887
    4. ' module' → logprob: -4.517039775848389
    5. ' modulus' → logprob: -4.642039775848389
    6. 'mod' → logprob: -5.267039775848389
    7. ' the' → logprob: -5.517039775848389
    8. 'the' → logprob: -5.767039775848389
    9. 'MOD' → logprob: -5.892039775848389
    10. 'constant' → logprob: -6.017039775848389

Token 25: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6556230187416077
    2. '

' → logprob: -0.9056230187416077
    3. '_' → logprob: -3.530622959136963
    4. '_

' → logprob: -3.905622959136963
    5. '
' → logprob: -4.905622959136963
    6. '' → logprob: -4.905622959136963
    7. '_
' → logprob: -5.405622959136963
    8. '\n' → logprob: -5.655622959136963
    9. '


' → logprob: -6.530622959136963
    10. '```' → logprob: -7.780622959136963

Token 26: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7390751838684082
    2. '

' → logprob: -1.1140751838684082
    3. '
' → logprob: -3.239075183868408
    4. 'def' → logprob: -3.239075183868408
    5. '\n' → logprob: -3.489075183868408
    6. 'n' → logprob: -4.114075183868408
    7. '' → logprob: -4.239075183868408
    8. 'class' → logprob: -4.864075183868408
    9. 'a' → logprob: -4.989075183868408
    10. 'result' → logprob: -5.239075183868408

Token 27: ' cult' (ID: 4685)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23659206926822662
    2. ' factorial' → logprob: -2.4865920543670654
    3. ' add' → logprob: -3.3615920543670654
    4. ' solve' → logprob: -3.7365920543670654
    5. ' calculate' → logprob: -4.3615922927856445
    6. ' mod' → logprob: -4.7365922927856445
    7. ' compute' → logprob: -5.3615922927856445
    8. ' my' → logprob: -5.4865922927856445
    9. ' pow' → logprob: -5.6115922927856445
    10. ' dfs' → logprob: -5.6115922927856445

Token 28: '_input' (ID: 12507)
  Prédit: 'ure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.4409671127796173
    2. 'ivate' → logprob: -1.190967082977295
    3. '_' → logprob: -3.315967082977295
    4. 'e' → logprob: -5.190967082977295
    5. 'ures' → logprob: -6.190967082977295
    6. 'def' → logprob: -6.690967082977295
    7. '```' → logprob: -7.065967082977295
    8. ' =' → logprob: -7.315967082977295
    9. '_create' → logprob: -7.565967082977295
    10. 'ic' → logprob: -7.565967082977295

Token 29: '():' (ID: 9442)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01893865503370762
    2. '()' → logprob: -4.3939385414123535
    3. '():' → logprob: -5.2689385414123535
    4. '(prompt' → logprob: -8.268939018249512
    5. '_' → logprob: -8.393939018249512
    6. 's' → logprob: -8.643939018249512
    7. '('' → logprob: -8.893939018249512
    8. '("")' → logprob: -9.768939018249512
    9. '("("' → logprob: -10.018939018249512
    10. '_line' → logprob: -10.393939018249512

Token 30: ' ' (ID: 220)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.237106204032898
    2. '   ' → logprob: -1.612106204032898
    3. 'return' → logprob: -2.4871063232421875
    4. '()' → logprob: -2.6121063232421875
    5. '    ' → logprob: -2.8621063232421875
    6. ' 
' → logprob: -2.8621063232421875
    7. '    
' → logprob: -2.9871063232421875
    8. '(' → logprob: -2.9871063232421875
    9. '\n' → logprob: -3.7371063232421875
    10. '
' → logprob: -3.8621063232421875

Token 31: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7322041988372803
    2. '   ' → logprob: -0.9822041988372803
    3. ' return' → logprob: -2.3572041988372803
    4. '    
' → logprob: -4.357204437255859
    5. 'input' → logprob: -4.732204437255859
    6. '()' → logprob: -5.232204437255859
    7. '(' → logprob: -5.482204437255859
    8. '
' → logprob: -5.857204437255859
    9. '    ' → logprob: -5.982204437255859
    10. ' 
' → logprob: -6.232204437255859

Token 32: ' Just' (ID: 6214)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10134051740169525
    2. 'return' → logprob: -2.7263405323028564
    3. '   ' → logprob: -3.6013405323028564
    4. '    ' → logprob: -7.476340293884277
    5. ' pass' → logprob: -7.476340293884277
    6. ' ' → logprob: -7.601340293884277
    7. ' input' → logprob: -8.226340293884277
    8. ' """' → logprob: -8.351340293884277
    9. 'r' → logprob: -8.476340293884277
    10. 'pass' → logprob: -8.601340293884277

Token 33: ' because' (ID: 2236)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6450114250183105
    2. 'return' → logprob: -1.2700114250183105
    3. '   ' → logprob: -2.7700114250183105
    4. ' input' → logprob: -3.3950114250183105
    5. ' a' → logprob: -3.5200114250183105
    6. 'input' → logprob: -3.7700114250183105
    7. 'pass' → logprob: -4.1450114250183105
    8. ' pass' → logprob: -5.0200114250183105
    9. ' ' → logprob: -5.2700114250183105
    10. 'def' → logprob: -6.0200114250183105

Token 34: ' I' (ID: 357)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0703856945037842
    2. '   ' → logprob: -1.9453856945037842
    3. '():' → logprob: -1.9453856945037842
    4. ' return' → logprob: -2.570385694503784
    5. '<|end|>' → logprob: -2.570385694503784
    6. '(' → logprob: -3.070385694503784
    7. 'return' → logprob: -3.445385694503784
    8. ' ' → logprob: -3.820385694503784
    9. '():
' → logprob: -4.320385932922363
    10. '(
' → logprob: -4.570385932922363

Token 35: ' like' (ID: 1299)
  Prédit: ' like'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' like' → logprob: -1.306307315826416
    2. ' love' → logprob: -1.306307315826416
    3. ' want' → logprob: -1.806307315826416
    4. ''m' → logprob: -2.431307315826416
    5. 't' → logprob: -3.306307315826416
    6. 'm' → logprob: -3.556307315826416
    7. ' prefer' → logprob: -3.681307315826416
    8. 'love' → logprob: -3.806307315826416
    9. 'def' → logprob: -4.431307315826416
    10. 'like' → logprob: -4.556307315826416

Token 36: ' naming' (ID: 64882)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4059218466281891
    2. 'input' → logprob: -2.1559219360351562
    3. '(' → logprob: -3.1559219360351562
    4. '   ' → logprob: -3.2809219360351562
    5. ' ()' → logprob: -3.9059219360351562
    6. 'return' → logprob: -4.155921936035156
    7. ' ' → logprob: -4.405921936035156
    8. ' input' → logprob: -4.405921936035156
    9. ':' → logprob: -4.530921936035156
    10. ')' → logprob: -4.530921936035156

Token 37: ' things' (ID: 3283)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.015294201672077179
    2. '()' → logprob: -4.890294075012207
    3. '():
' → logprob: -5.265294075012207
    4. ':' → logprob: -6.765294075012207
    5. ' ():' → logprob: -7.765294075012207
    6. '(' → logprob: -8.265294075012207
    7. ' ()' → logprob: -9.390294075012207
    8. '):' → logprob: -9.390294075012207
    9. '(
' → logprob: -9.640294075012207
    10. '```' → logprob: -9.765294075012207

Token 38: ' creatively' (ID: 135080)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.012293596751987934
    2. '()' → logprob: -5.012293815612793
    3. ':' → logprob: -5.512293815612793
    4. '(' → logprob: -7.387293815612793
    5. '():
' → logprob: -8.137293815612793
    6. ' ():' → logprob: -8.262293815612793
    7. '```' → logprob: -10.012293815612793
    8. '().' → logprob: -10.387293815612793
    9. ' :' → logprob: -10.387293815612793
    10. '()
' → logprob: -10.512293815612793

Token 39: '
' (ID: 198)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06443747878074646
    2. ':' → logprob: -3.0644373893737793
    3. '()' → logprob: -4.814437389373779
    4. ' ():' → logprob: -6.189437389373779
    5. '():
' → logprob: -6.439437389373779
    6. ' :' → logprob: -7.064437389373779
    7. '   ' → logprob: -7.189437389373779
    8. '(' → logprob: -7.189437389373779
    9. ':return' → logprob: -7.314437389373779
    10. '()
' → logprob: -8.939437866210938

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.245547816157341
    2. ' return' → logprob: -1.7455477714538574
    3. 'return' → logprob: -3.6205477714538574
    4. '()' → logprob: -5.995547771453857
    5. ' ' → logprob: -5.995547771453857
    6. '    
' → logprob: -6.120547771453857
    7. '    ' → logprob: -6.495547771453857
    8. '	return' → logprob: -6.620547771453857
    9. ':' → logprob: -7.120547771453857
    10. ' 
' → logprob: -7.370547771453857

Token 41: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.032429039478302
    2. ' return' → logprob: -3.6574289798736572
    3. '   ' → logprob: -5.407429218292236
    4. 'try' → logprob: -7.157429218292236
    5. 'ret' → logprob: -8.407428741455078
    6. 's' → logprob: -8.782428741455078
    7. 'import' → logprob: -8.907428741455078
    8. 'raw' → logprob: -9.532428741455078
    9. 'user' → logprob: -10.032428741455078
    10. 'r' → logprob: -10.657428741455078

Token 42: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.8379309773445129
    2. 'int' → logprob: -1.0879309177398682
    3. ' input' → logprob: -1.8379309177398682
    4. 'input' → logprob: -2.962930917739868
    5. ' list' → logprob: -4.212931156158447
    6. 'list' → logprob: -5.587931156158447
    7. ' map' → logprob: -7.462931156158447
    8. ' ' → logprob: -8.462930679321289
    9. 'map' → logprob: -9.337930679321289
    10. ' tuple' → logprob: -10.212930679321289

Token 43: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4785180389881134
    2. '().' → logprob: -0.978518009185791
    3. '(' → logprob: -5.478518009185791
    4. ' ()' → logprob: -8.60351848602295
    5. '()
' → logprob: -10.85351848602295
    6. '()

' → logprob: -11.60351848602295
    7. ' ().' → logprob: -11.97851848602295
    8. ' ' → logprob: -12.35351848602295
    9. '()<' → logprob: -12.47851848602295
    10. '(
' → logprob: -12.72851848602295

Token 44: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2796115577220917
    2. '
' → logprob: -2.654611587524414
    3. '()' → logprob: -2.654611587524414
    4. '().' → logprob: -3.654611587524414
    5. '<|end|>' → logprob: -4.154611587524414
    6. '()

' → logprob: -4.404611587524414
    7. '<|end|>' → logprob: -4.529611587524414
    8. '()
' → logprob: -4.779611587524414
    9. '

' → logprob: -5.279611587524414
    10. '```' → logprob: -5.404611587524414

Token 45: ' cult' (ID: 4685)
  Prédit: ' cult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cult' → logprob: -0.6810079216957092
    2. '_' → logprob: -1.6810078620910645
    3. ' solve' → logprob: -2.3060078620910645
    4. '_c' → logprob: -2.4310078620910645
    5. ' main' → logprob: -2.6810078620910645
    6. ' parse' → logprob: -5.4935078620910645
    7. ' factorial' → logprob: -5.6185078620910645
    8. ' compute' → logprob: -5.6810078620910645
    9. ' calculate' → logprob: -5.8685078620910645
    10. ' _' → logprob: -5.9935078620910645

Token 46: '_exit' (ID: 41242)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.03480631858110428
    2. '_' → logprob: -3.659806251525879
    3. '_output' → logprob: -6.034806251525879
    4. '_put' → logprob: -6.284806251525879
    5. '_split' → logprob: -7.159806251525879
    6. '_parse' → logprob: -7.534806251525879
    7. '_string' → logprob: -8.034806251525879
    8. '_data' → logprob: -8.034806251525879
    9. '_write' → logprob: -8.284806251525879
    10. '_int' → logprob: -8.534806251525879

Token 47: '(code' (ID: 31208)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0008205882040783763
    2. ' ():' → logprob: -7.250820636749268
    3. '()' → logprob: -9.50082015991211
    4. '(' → logprob: -10.62582015991211
    5. ' ()' → logprob: -12.37582015991211
    6. ':' → logprob: -12.50082015991211
    7. '():
' → logprob: -13.12582015991211
    8. '_' → logprob: -15.00082015991211
    9. '):' → logprob: -15.00082015991211
    10. '(":' → logprob: -15.75082015991211

Token 48: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31394264101982117
    2. ')' → logprob: -1.3139426708221436
    3. '=' → logprob: -7.5639424324035645
    4. ':' → logprob: -8.938942909240723
    5. ' ):' → logprob: -11.688942909240723
    6. '):
' → logprob: -12.313942909240723
    7. '():' → logprob: -12.438942909240723
    8. ' )' → logprob: -12.688942909240723
    9. ' ' → logprob: -13.188942909240723
    10. '(' → logprob: -13.688942909240723

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003183420980349183
    2. ' ' → logprob: -5.753183364868164
    3. ')' → logprob: -12.378183364868164
    4. '1' → logprob: -15.003183364868164
    5. '  ' → logprob: -15.003183364868164
    6. '   ' → logprob: -15.128183364868164
    7. 'exit' → logprob: -15.690683364868164
    8. ' )' → logprob: -15.753183364868164
    9. 'None' → logprob: -16.315683364868164
    10. '    ' → logprob: -16.690683364868164

Token 50: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028181932866573334
    2. ')' → logprob: -5.8778181076049805
    3. ':' → logprob: -12.00281810760498
    4. ' ):' → logprob: -12.25281810760498
    5. '):
' → logprob: -13.12781810760498
    6. '   ' → logprob: -15.87781810760498
    7. ' ' → logprob: -16.502819061279297
    8. '):
' → logprob: -17.002819061279297
    9. ')：' → logprob: -17.502819061279297
    10. ',' → logprob: -17.627819061279297

Token 51: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09800058603286743
    2. ' return' → logprob: -2.8480005264282227
    3. ' exit' → logprob: -3.9730005264282227
    4. '    ' → logprob: -5.098000526428223
    5. ' raise' → logprob: -5.973000526428223
    6. ' pass' → logprob: -6.223000526428223
    7. '    
' → logprob: -6.223000526428223
    8. ' ' → logprob: -7.223000526428223
    9. 'exit' → logprob: -7.223000526428223
    10. 'return' → logprob: -7.598000526428223

Token 52: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.747847855091095
    2. ' exit' → logprob: -1.2478477954864502
    3. 'exit' → logprob: -1.4978477954864502
    4. ' return' → logprob: -4.872848033905029
    5. 'return' → logprob: -6.247848033905029
    6. 'import' → logprob: -6.497848033905029
    7. '    ' → logprob: -6.622848033905029
    8. '	exit' → logprob: -6.872848033905029
    9. '  ' → logprob: -7.622848033905029
    10. ' ' → logprob: -7.747848033905029

Token 53: ' Wrapper' (ID: 69372)
  Prédit: ' exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exit' → logprob: -0.02549075148999691
    2. 'exit' → logprob: -3.9004907608032227
    3. '   ' → logprob: -6.150490760803223
    4. ' import' → logprob: -6.150490760803223
    5. 'import' → logprob: -8.150490760803223
    6. ' pass' → logprob: -9.150490760803223
    7. ' return' → logprob: -9.275490760803223
    8. '    ' → logprob: -10.025490760803223
    9. ' raise' → logprob: -10.025490760803223
    10. ' quit' → logprob: -10.400490760803223

Token 54: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37628936767578125
    2. ' for' → logprob: -1.2512893676757812
    3. '(' → logprob: -4.251289367675781
    4. '(exit' → logprob: -5.251289367675781
    5. 'def' → logprob: -6.876289367675781
    6. 'for' → logprob: -6.876289367675781
    7. '```' → logprob: -6.876289367675781
    8. ')' → logprob: -7.251289367675781
    9. ' around' → logprob: -7.376289367675781
    10. '()' → logprob: -7.876289367675781

Token 55: ' possible' (ID: 4149)
  Prédit: ' exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exit' → logprob: -0.08913390338420868
    2. 'exit' → logprob: -2.4641339778900146
    3. ' sys' → logprob: -8.964134216308594
    4. ' quit' → logprob: -10.339134216308594
    5. '```' → logprob: -12.089134216308594
    6. '	exit' → logprob: -12.214134216308594
    7. 'sys' → logprob: -12.464134216308594
    8. ' ' → logprob: -12.464134216308594
    9. ' import' → logprob: -12.589134216308594
    10. 'quit' → logprob: -12.839134216308594

Token 56: ' extens' (ID: 34241)
  Prédit: ' exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exit' → logprob: -0.009091231040656567
    2. 'exit' → logprob: -5.134091377258301
    3. ' sys' → logprob: -6.009091377258301
    4. ' quit' → logprob: -7.884091377258301
    5. '_exit' → logprob: -9.2590913772583
    6. ' system' → logprob: -10.0090913772583
    7. ' exits' → logprob: -10.1340913772583
    8. '   ' → logprob: -11.1340913772583
    9. ' `' → logprob: -11.1340913772583
    10. ' ex' → logprob: -11.1340913772583

Token 57: 'ibility' (ID: 4295)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.25414198637008667
    2. 'ions' → logprob: -1.5041420459747314
    3. 'ons' → logprob: -7.004141807556152
    4. 'on' → logprob: -7.504141807556152
    5. 's' → logprob: -7.879141807556152
    6. ' ion' → logprob: -9.254141807556152
    7. '```' → logprob: -9.254141807556152
    8. '   ' → logprob: -10.254141807556152
    9. ' ions' → logprob: -10.879141807556152
    10. 'ing' → logprob: -11.004141807556152

Token 58: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09810379147529602
    2. ':' → logprob: -3.0981037616729736
    3. '    ' → logprob: -3.9731037616729736
    4. ':return' → logprob: -4.973104000091553
    5. ' :' → logprob: -5.223104000091553
    6. '<|end|>' → logprob: -5.348104000091553
    7. ' return' → logprob: -6.098104000091553
    8. '```' → logprob: -6.223104000091553
    9. '):' → logprob: -6.348104000091553
    10. '
' → logprob: -7.098104000091553

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033289358019828796
    2. ' exit' → logprob: -3.6582894325256348
    3. '    ' → logprob: -5.408289432525635
    4. ' return' → logprob: -6.908289432525635
    5. ' raise' → logprob: -7.158289432525635
    6. '	exit' → logprob: -8.533288955688477
    7. 'exit' → logprob: -8.783288955688477
    8. ' pass' → logprob: -9.158288955688477
    9. '    
' → logprob: -9.658288955688477
    10. '  ' → logprob: -10.283288955688477

Token 60: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.04804135486483574
    2. ' exit' → logprob: -3.298041343688965
    3. 'import' → logprob: -5.048041343688965
    4. '   ' → logprob: -5.798041343688965
    5. 'quit' → logprob: -8.923041343688965
    6. ' import' → logprob: -9.173041343688965
    7. 'raise' → logprob: -9.173041343688965
    8. '	exit' → logprob: -10.423041343688965
    9. 'return' → logprob: -10.548041343688965
    10. ' ' → logprob: -10.923041343688965

Token 61: '(code' (ID: 31208)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2679881155490875
    2. '(' → logprob: -2.1429882049560547
    3. '(code' → logprob: -2.1429882049560547
    4. '```' → logprob: -8.642988204956055
    5. '()(' → logprob: -9.142988204956055
    6. ' (' → logprob: -10.392988204956055
    7. '<|end|>' → logprob: -10.642988204956055
    8. ' ()' → logprob: -11.142988204956055
    9. '`()' → logprob: -11.642988204956055
    10. '(Code' → logprob: -11.767988204956055

Token 62: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.580929347255733e-05
    2. ')
' → logprob: -11.125016212463379
    3. ' )' → logprob: -14.750016212463379
    4. '))' → logprob: -15.750016212463379
    5. '`)' → logprob: -16.375015258789062
    6. ')`' → logprob: -16.375015258789062
    7. ')

' → logprob: -16.750015258789062
    8. '```' → logprob: -17.375015258789062
    9. ')
' → logprob: -17.625015258789062
    10. '')' → logprob: -17.625015258789062

Token 63: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32081958651542664
    2. '

' → logprob: -1.320819616317749
    3. '
' → logprob: -5.07081937789917
    4. 'class' → logprob: -7.44581937789917
    5. '```' → logprob: -9.195819854736328
    6. '\' → logprob: -9.445819854736328
    7. 'd' → logprob: -9.445819854736328
    8. '


' → logprob: -9.570819854736328
    9. '#' → logprob: -9.695819854736328
    10. '\n' → logprob: -10.195819854736328

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026789726689457893
    2. '=' → logprob: -3.901789665222168
    3. ',' → logprob: -5.151789665222168
    4. '=int' → logprob: -8.401789665222168
    5. ' ,' → logprob: -9.026789665222168
    6. '   ' → logprob: -10.276789665222168
    7. ' ' → logprob: -10.401789665222168
    8. '_' → logprob: -11.776789665222168
    9. '=input' → logprob: -12.026789665222168
    10. '  ' → logprob: -12.151789665222168

Token 65: ' int' (ID: 677)
  Prédit: ' cult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cult' → logprob: -0.4438149034976959
    2. ' int' → logprob: -1.0688148736953735
    3. 'int' → logprob: -4.943814754486084
    4. ' ' → logprob: -5.568814754486084
    5. 'cult' → logprob: -6.068814754486084
    6. ' cl' → logprob: -6.568814754486084
    7. '10' → logprob: -9.693815231323242
    8. 'cl' → logprob: -10.193815231323242
    9. '=int' → logprob: -10.443815231323242
    10. '0' → logprob: -10.568815231323242

Token 66: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00039230400579981506
    2. '(c' → logprob: -7.875392436981201
    3. '('' → logprob: -12.500391960144043
    4. '(input' → logprob: -13.125391960144043
    5. '()' → logprob: -13.875391960144043
    6. ' (' → logprob: -14.000391960144043
    7. '(
' → logprob: -14.125391960144043
    8. '(C' → logprob: -14.625391960144043
    9. '(s' → logprob: -15.000391960144043
    10. '(space' → logprob: -15.125391960144043

Token 67: 'ult' (ID: 576)
  Prédit: 'ult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.0014620233559980989
    2. ')' → logprob: -8.50146198272705
    3. '_' → logprob: -8.50146198272705
    4. ' ult' → logprob: -8.50146198272705
    5. '()' → logprob: -8.75146198272705
    6. '```' → logprob: -8.75146198272705
    7. '(' → logprob: -9.25146198272705
    8. 'u' → logprob: -9.75146198272705
    9. 'ULT' → logprob: -10.00146198272705
    10. 'ulti' → logprob: -10.50146198272705

Token 68: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.23917081207037e-05
    2. '_' → logprob: -10.250041961669922
    3. '_INPUT' → logprob: -13.375041961669922
    4. ' _' → logprob: -13.375041961669922
    5. '_in' → logprob: -13.625041961669922
    6. '_inputs' → logprob: -14.375041961669922
    7. '_Input' → logprob: -14.625041961669922
    8. '_output' → logprob: -14.750041961669922
    9. '__' → logprob: -15.000041961669922
    10. '_i' → logprob: -15.500041961669922

Token 69: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07902704924345016
    2. '()' → logprob: -2.579026937484741
    3. ' ())' → logprob: -9.95402717590332
    4. ')' → logprob: -10.07902717590332
    5. '().' → logprob: -10.82902717590332
    6. '(' → logprob: -11.32902717590332
    7. '()))' → logprob: -12.45402717590332
    8. '();)' → logprob: -12.70402717590332
    9. '()
' → logprob: -13.20402717590332
    10. ' ()' → logprob: -13.57902717590332

Token 70: 'D' (ID: 35)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.0576210021972656
    2. 'A' → logprob: -1.4326210021972656
    3. 'a' → logprob: -1.4326210021972656
    4. 'data' → logprob: -2.4326210021972656
    5. 'lst' → logprob: -4.307621002197266
    6. 'd' → logprob: -4.682621002197266
    7. 's' → logprob: -4.932621002197266
    8. '_' → logprob: -5.057621002197266
    9. ')' → logprob: -5.057621002197266
    10. 'S' → logprob: -5.182621002197266

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07005825638771057
    2. '=' → logprob: -2.8200583457946777
    3. ',' → logprob: -5.070058345794678
    4. ' ' → logprob: -7.195058345794678
    5. ' ,' → logprob: -8.57005786895752
    6. '=[]' → logprob: -8.57005786895752
    7. '_' → logprob: -9.07005786895752
    8. 'iv' → logprob: -9.69505786895752
    9. '_list' → logprob: -9.82005786895752
    10. ' =[' → logprob: -10.07005786895752

Token 72: ' [' (ID: 723)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5833640694618225
    2. 'int' → logprob: -0.8333640694618225
    3. '[int' → logprob: -5.208364009857178
    4. ' cl' → logprob: -6.958364009857178
    5. ' [' → logprob: -8.708364486694336
    6. 'list' → logprob: -8.708364486694336
    7. 'cl' → logprob: -8.708364486694336
    8. '<int' → logprob: -9.208364486694336
    9. ' cult' → logprob: -9.833364486694336
    10. 'cult' → logprob: -9.958364486694336

Token 73: '*' (ID: 9)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009588662651367486
    2. ' int' → logprob: -7.3759589195251465
    3. 'cl' → logprob: -9.500958442687988
    4. '0' → logprob: -10.000958442687988
    5. ']' → logprob: -10.250958442687988
    6. ']int' → logprob: -10.250958442687988
    7. 'map' → logprob: -10.625958442687988
    8. '[int' → logprob: -10.750958442687988
    9. '*' → logprob: -11.125958442687988
    10. 'list' → logprob: -11.250958442687988

Token 74: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00017243190086446702
    2. ' map' → logprob: -9.00017261505127
    3. '(map' → logprob: -10.37517261505127
    4. 'range' → logprob: -11.25017261505127
    5. '	map' → logprob: -13.75017261505127
    6. 'int' → logprob: -14.12517261505127
    7. ' ' → logprob: -14.25017261505127
    8. '   ' → logprob: -15.00017261505127
    9. 'ma' → logprob: -15.12517261505127
    10. 'list' → logprob: -15.25017261505127

Token 75: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.043377313762903214
    2. '(' → logprob: -3.16837739944458
    3. ' (' → logprob: -9.043376922607422
    4. ']int' → logprob: -9.293376922607422
    5. '](' → logprob: -9.668376922607422
    6. '(
' → logprob: -10.418376922607422
    7. ',int' → logprob: -11.043376922607422
    8. 'int' → logprob: -11.043376922607422
    9. '```' → logprob: -11.918376922607422
    10. '<int' → logprob: -12.043376922607422

Token 76: ',' (ID: 11)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.34659841656684875
    2. ',' → logprob: -1.3465983867645264
    3. '(c' → logprob: -3.4715983867645264
    4. ' ,' → logprob: -7.2215986251831055
    5. ',(' → logprob: -7.4715986251831055
    6. '(' → logprob: -7.8465986251831055
    7. ' (' → logprob: -12.596598625183105
    8. ',input' → logprob: -12.596598625183105
    9. '```' → logprob: -12.721598625183105
    10. '(),' → logprob: -12.721598625183105

Token 77: ' cult' (ID: 4685)
  Prédit: 'cult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cult' → logprob: -0.04048347473144531
    2. ' cult' → logprob: -3.2904834747314453
    3. 'c' → logprob: -6.165483474731445
    4. '(c' → logprob: -9.415483474731445
    5. ' ' → logprob: -9.665483474731445
    6. ')c' → logprob: -9.790483474731445
    7. '	c' → logprob: -10.415483474731445
    8. 'culture' → logprob: -11.165483474731445
    9. ',c' → logprob: -11.540483474731445
    10. '   ' → logprob: -11.665483474731445

Token 78: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.584239938296378e-06
    2. 'input' → logprob: -13.500007629394531
    3. '_in' → logprob: -13.625007629394531
    4. '_' → logprob: -14.125007629394531
    5. '__' → logprob: -14.250007629394531
    6. '_INPUT' → logprob: -14.500007629394531
    7. 'Input' → logprob: -14.750007629394531
    8. 'put' → logprob: -15.125007629394531
    9. '_x' → logprob: -15.250007629394531
    10. '_output' → logprob: -15.375007629394531

Token 79: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4498052223643754e-05
    2. ')' → logprob: -12.000014305114746
    3. '()' → logprob: -12.250014305114746
    4. ' ().' → logprob: -13.250014305114746
    5. '())' → logprob: -14.125014305114746
    6. '))' → logprob: -14.875014305114746
    7. ')]' → logprob: -16.250015258789062
    8. ' ' → logprob: -16.375015258789062
    9. '.split' → logprob: -16.375015258789062
    10. 'split' → logprob: -16.500015258789062

Token 80: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011905643157660961
    2. 'strip' → logprob: -4.511905670166016
    3. ' split' → logprob: -7.136905670166016
    4. 'rstrip' → logprob: -9.886905670166016
    5. '.split' → logprob: -12.886905670166016
    6. ' strip' → logprob: -12.886905670166016
    7. '().' → logprob: -13.011905670166016
    8. '(split' → logprob: -13.136905670166016
    9. 's' → logprob: -13.886905670166016
    10. ' ' → logprob: -14.511905670166016

Token 81: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12208568304777145
    2. ')]' → logprob: -2.7470855712890625
    3. '()))' → logprob: -3.2470855712890625
    4. '()' → logprob: -5.4970855712890625
    5. '))' → logprob: -5.4970855712890625
    6. ')' → logprob: -5.9970855712890625
    7. '()]' → logprob: -7.2470855712890625
    8. ')])' → logprob: -7.8720855712890625
    9. '(' → logprob: -9.122085571289062
    10. ' ())' → logprob: -12.122085571289062

Token 82: ']' (ID: 60)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07915811985731125
    2. ')' → logprob: -2.579158067703247
    3. ' )' → logprob: -8.579157829284668
    4. ')])' → logprob: -10.579157829284668
    5. ']' → logprob: -10.704157829284668
    6. ')]
' → logprob: -11.329157829284668
    7. '))' → logprob: -12.204157829284668
    8. '])' → logprob: -12.704157829284668
    9. ')]

' → logprob: -12.704157829284668
    10. ')
' → logprob: -13.204157829284668

Token 83: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33268237113952637
    2. ' 
' → logprob: -1.9576823711395264
    3. '
' → logprob: -3.3326823711395264
    4. ' 

' → logprob: -4.0826826095581055
    5. '#' → logprob: -4.3326826095581055
    6. 'def' → logprob: -4.5826826095581055
    7. '

' → logprob: -4.7076826095581055
    8. 'd' → logprob: -5.0826826095581055
    9. '[' → logprob: -5.2076826095581055
    10. 's' → logprob: -5.5826826095581055

Token 84: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.8123338222503662
    2. 'c' → logprob: -1.9373338222503662
    3. 'dp' → logprob: -1.9373338222503662
    4. 'D' → logprob: -2.437333822250366
    5. 'freq' → logprob: -2.562333822250366
    6. 'count' → logprob: -2.937333822250366
    7. 'def' → logprob: -3.187333822250366
    8. 'counter' → logprob: -3.312333822250366
    9. 'counts' → logprob: -3.437333822250366
    10. 'cnt' → logprob: -3.437333822250366

Token 85: ' Star' (ID: 11307)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.17799603939056396
    2. 'D' → logprob: -2.6779961585998535
    3. 'd' → logprob: -3.3029961585998535
    4. ' cl' → logprob: -4.1779961585998535
    5. '[' → logprob: -4.4279961585998535
    6. 'range' → logprob: -5.6779961585998535
    7. ')' → logprob: -5.6779961585998535
    8. '_' → logprob: -5.8029961585998535
    9. 'c' → logprob: -5.9279961585998535
    10. '```' → logprob: -5.9279961585998535

Token 86: '-un' (ID: 30296)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6060138940811157
    2. '_unpack' → logprob: -1.6060138940811157
    3. 'red' → logprob: -2.481013774871826
    4. ' unpack' → logprob: -2.856013774871826
    5. '(' → logprob: -3.356013774871826
    6. ')' → logprob: -4.231013774871826
    7. '(*)' → logprob: -4.356013774871826
    8. 'un' → logprob: -4.481013774871826
    9. '()' → logprob: -4.981013774871826
    10. '.unpack' → logprob: -5.356013774871826

Token 87: 'packing' (ID: 173195)
  Prédit: 'packing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packing' → logprob: -0.474839448928833
    2. 'pack' → logprob: -0.974839448928833
    3. 'p' → logprob: -8.099839210510254
    4. 'packs' → logprob: -8.724839210510254
    5. 'pak' → logprob: -8.974839210510254
    6. 'packed' → logprob: -9.099839210510254
    7. 'packer' → logprob: -10.599839210510254
    8. 'pac' → logprob: -11.474839210510254
    9. '*' → logprob: -11.724839210510254
    10. 'packet' → logprob: -12.724839210510254

Token 88: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4110809862613678
    2. '#' → logprob: -1.7860809564590454
    3. '[' → logprob: -3.036081075668335
    4. '' → logprob: -3.911081075668335
    5. '\' → logprob: -4.036080837249756
    6. '\n' → logprob: -4.786080837249756
    7. 'd' → logprob: -4.911080837249756
    8. 'def' → logprob: -4.911080837249756
    9. ' 
' → logprob: -5.036080837249756
    10. ')' → logprob: -5.036080837249756

Token 89: ' "' (ID: 392)
  Prédit: 'clar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clar' → logprob: -1.3880445957183838
    2. 'cl' → logprob: -1.6380445957183838
    3. ' clarity' → logprob: -2.263044595718384
    4. ' readability' → logprob: -2.388044595718384
    5. ' memory' → logprob: -2.638044595718384
    6. ' the' → logprob: -3.138044595718384
    7. 'read' → logprob: -3.263044595718384
    8. 'memory' → logprob: -3.388044595718384
    9. 'the' → logprob: -3.388044595718384
    10. 'clean' → logprob: -4.388044357299805

Token 90: 'style' (ID: 8207)
  Prédit: 'clar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clar' → logprob: -1.861214280128479
    2. 'clean' → logprob: -1.861214280128479
    3. 'con' → logprob: -1.986214280128479
    4. 'fast' → logprob: -2.3612141609191895
    5. 'read' → logprob: -2.7362141609191895
    6. 'list' → logprob: -3.2362141609191895
    7. 'input' → logprob: -3.4862141609191895
    8. 'cl' → logprob: -3.7362141609191895
    9. 'the' → logprob: -3.8612141609191895
    10. ')' → logprob: -3.8612141609191895

Token 91: '"

' (ID: 2678)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.5587905049324036
    2. '"' → logprob: -0.9337905049324036
    3. ')' → logprob: -3.433790445327759
    4. '")' → logprob: -6.683790683746338
    5. ''s' → logprob: -8.05879020690918
    6. '```' → logprob: -8.18379020690918
    7. 's' → logprob: -9.05879020690918
    8. ']"' → logprob: -9.30879020690918
    9. ')")' → logprob: -9.30879020690918
    10. ' )' → logprob: -9.43379020690918

Token 92: 'ctr' (ID: 18088)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.4874351024627686
    2. 'freq' → logprob: -1.4874351024627686
    3. 'c' → logprob: -1.8624351024627686
    4. 'd' → logprob: -2.1124351024627686
    5. 'cnt' → logprob: -3.3624351024627686
    6. 'count' → logprob: -3.7374351024627686
    7. 'D' → logprob: -3.9874351024627686
    8. '#' → logprob: -4.237435340881348
    9. 'f' → logprob: -4.237435340881348
    10. 'def' → logprob: -4.237435340881348

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4749484956264496
    2. '=' → logprob: -0.974948525428772
    3. 'o' → logprob: -7.849948406219482
    4. 's' → logprob: -8.47494888305664
    5. 'a' → logprob: -9.22494888305664
    6. '_' → logprob: -9.72494888305664
    7. ' ' → logprob: -10.34994888305664
    8. ':' → logprob: -10.97494888305664
    9. 'or' → logprob: -11.09994888305664
    10. '_=' → logprob: -11.97494888305664

Token 94: ' cl' (ID: 567)
  Prédit: ' cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cl' → logprob: -0.004623203072696924
    2. 'cl' → logprob: -5.3796234130859375
    3. '	cl' → logprob: -13.379623413085938
    4. '(cl' → logprob: -14.629623413085938
    5. ' ' → logprob: -15.629623413085938
    6. ' counter' → logprob: -15.754623413085938
    7. ' defaultdict' → logprob: -16.254623413085938
    8. 'counter' → logprob: -16.254623413085938
    9. '.cl' → logprob: -16.629623413085938
    10. ' c' → logprob: -16.754623413085938

Token 95: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. '.Counter' → logprob: -17.5
    3. 'collections' → logprob: -17.75
    4. 'xde' → logprob: -19.75
    5. ' x' → logprob: -20.25
    6. '.collections' → logprob: -20.75
    7. 'Counter' → logprob: -21.375
    8. 'xref' → logprob: -21.875
    9. 'xce' → logprob: -22.0
    10. '.' → logprob: -22.0625

Token 96: '.Counter' (ID: 175403)
  Prédit: '.Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Counter' → logprob: -0.0003076950670219958
    2. '.' → logprob: -8.1253080368042
    3. '.C' → logprob: -12.0003080368042
    4. '.Count' → logprob: -13.2503080368042
    5. 'Counter' → logprob: -14.1253080368042
    6. 'ounter' → logprob: -14.5003080368042
    7. '.Collections' → logprob: -14.7503080368042
    8. '.Order' → logprob: -14.8753080368042
    9. '.Collection' → logprob: -15.5003080368042
    10. '.Co' → logprob: -15.7503080368042

Token 97: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.009767538867890835
    2. '(' → logprob: -4.634767532348633
    3. '()' → logprob: -12.509767532348633
    4. ' (' → logprob: -13.009767532348633
    5. '([' → logprob: -13.259767532348633
    6. '(
' → logprob: -13.884767532348633
    7. '(d' → logprob: -14.009767532348633
    8. '((' → logprob: -14.259767532348633
    9. '(N' → logprob: -15.134767532348633
    10. '({' → logprob: -15.384767532348633

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ' )' → logprob: -12.250008583068848
    3. ')
' → logprob: -13.750008583068848
    4. '))' → logprob: -13.875008583068848
    5. '[' → logprob: -14.625008583068848
    6. ')`' → logprob: -15.125008583068848
    7. '),' → logprob: -15.500008583068848
    8. ')

' → logprob: -15.750008583068848
    9. ').' → logprob: -15.750008583068848
    10. '())' → logprob: -16.250009536743164

Token 99: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019622473046183586
    2. '

' → logprob: -5.269622325897217
    3. '<|end|>' → logprob: -5.519622325897217
    4. 'for' → logprob: -6.394622325897217
    5. ')' → logprob: -6.519622325897217
    6. '
' → logprob: -7.019622325897217
    7. ' 
' → logprob: -7.144622325897217
    8. '' → logprob: -7.519622325897217
    9. 's' → logprob: -7.519622325897217
    10. '\n' → logprob: -7.769622325897217

Token 100: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13206373155117035
    2. 'if' → logprob: -3.382063627243042
    3. ')' → logprob: -3.882063627243042
    4. '

' → logprob: -4.632063865661621
    5. '(' → logprob: -4.757063865661621
    6. 'for' → logprob: -4.757063865661621
    7. 'def' → logprob: -5.757063865661621
    8. '' → logprob: -5.757063865661621
    9. '(
' → logprob: -6.007063865661621
    10. 'result' → logprob: -6.132063865661621

Token 101: ' Weird' (ID: 153616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.601750135421753
    2. 'keys' → logprob: -2.351750135421753
    3. 'counter' → logprob: -2.851750135421753
    4. '#' → logprob: -2.851750135421753
    5. 'max' → logprob: -3.226750135421753
    6. 'if' → logprob: -3.351750135421753
    7. 'ans' → logprob: -3.476750135421753
    8. 'cnt' → logprob: -3.476750135421753
    9. 'sorted' → logprob: -3.476750135421753
    10. 'count' → logprob: -3.476750135421753

Token 102: ' alias' (ID: 26026)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015862736850976944
    2. '(
' → logprob: -4.640862941741943
    3. '()' → logprob: -5.515862941741943
    4. ')' → logprob: -7.515862941741943
    5. ',' → logprob: -7.640862941741943
    6. '.' → logprob: -8.765862464904785
    7. ':' → logprob: -9.140862464904785
    8. 'def' → logprob: -9.265862464904785
    9. '(

' → logprob: -9.515862464904785
    10. 'for' → logprob: -9.640862464904785

Token 103: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9608222246170044
    2. '
' → logprob: -2.085822105407715
    3. 'for' → logprob: -2.335822105407715
    4. 'if' → logprob: -2.585822105407715
    5. '#' → logprob: -3.460822105407715
    6. 'a' → logprob: -3.585822105407715
    7. 's' → logprob: -3.960822105407715
    8. 'd' → logprob: -3.960822105407715
    9. 'def' → logprob: -4.085822105407715
    10. 'r' → logprob: -4.210822105407715

Token 104: ' Counter' (ID: 32251)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.619647741317749
    2. 'counter' → logprob: -1.244647741317749
    3. 'Counter' → logprob: -2.869647741317749
    4. ' counter' → logprob: -3.244647741317749
    5. ' collections' → logprob: -3.619647741317749
    6. '"' → logprob: -3.869647741317749
    7. '`' → logprob: -5.119647979736328
    8. '```' → logprob: -5.619647979736328
    9. 'count' → logprob: -5.744647979736328
    10. 'counts' → logprob: -6.244647979736328

Token 105: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10785352438688278
    2. ')' → logprob: -3.982853412628174
    3. 'for' → logprob: -3.982853412628174
    4. '<|end|>' → logprob: -3.982853412628174
    5. '

' → logprob: -4.607853412628174
    6. '\n' → logprob: -5.357853412628174
    7. 'if' → logprob: -5.357853412628174
    8. '[' → logprob: -5.732853412628174
    9. '#' → logprob: -5.732853412628174
    10. 's' → logprob: -6.107853412628174

Token 106: ' cl' (ID: 567)
  Prédit: ' ctr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ctr' → logprob: -0.013120935298502445
    2. 'ctr' → logprob: -4.513121128082275
    3. ' cl' → logprob: -6.763121128082275
    4. ' ct' → logprob: -8.888120651245117
    5. ' counter' → logprob: -9.013120651245117
    6. ' M' → logprob: -9.138120651245117
    7. ' ' → logprob: -9.388120651245117
    8. '`' → logprob: -9.388120651245117
    9. 'ct' → logprob: -9.513120651245117
    10. ' `' → logprob: -10.138120651245117

Token 107: 'x' (ID: 87)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08236590772867203
    2. '
' → logprob: -4.082365989685059
    3. '()' → logprob: -4.207365989685059
    4. '(' → logprob: -4.332365989685059
    5. '#' → logprob: -5.457365989685059
    6. '(
' → logprob: -5.707365989685059
    7. '

' → logprob: -5.707365989685059
    8. '()
' → logprob: -6.082365989685059
    9. ')
' → logprob: -6.082365989685059
    10. 'if' → logprob: -6.332365989685059

Token 108: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6783236861228943
    2. ')' → logprob: -1.678323745727539
    3. '.' → logprob: -2.678323745727539
    4. '

' → logprob: -3.428323745727539
    5. 'if' → logprob: -3.803323745727539
    6. 'for' → logprob: -3.803323745727539
    7. '#' → logprob: -4.053323745727539
    8. '' → logprob: -4.303323745727539
    9. 's' → logprob: -4.428323745727539
    10. '(' → logprob: -4.428323745727539

Token 109: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4422415494918823
    2. 'ans' → logprob: -2.192241668701172
    3. 'keys' → logprob: -2.317241668701172
    4. 'if' → logprob: -2.442241668701172
    5. 'res' → logprob: -2.442241668701172
    6. 'result' → logprob: -3.067241668701172
    7. 'dp' → logprob: -3.192241668701172
    8. 'sorted' → logprob: -3.192241668701172
    9. 'answer' → logprob: -3.567241668701172
    10. 'max' → logprob: -4.192241668701172

Token 110: ' D' (ID: 415)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.4572073221206665
    2. ' N' → logprob: -1.5822073221206665
    3. ' ctr' → logprob: -2.082207202911377
    4. ' all' → logprob: -4.582207202911377
    5. ' not' → logprob: -5.082207202911377
    6. 'len' → logprob: -5.457207202911377
    7. 'N' → logprob: -5.582207202911377
    8. ' ' → logprob: -5.832207202911377
    9. ' any' → logprob: -6.207207202911377
    10. ' sum' → logprob: -6.332207202911377

Token 111: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4042358100414276
    2. ':' → logprob: -1.27923583984375
    3. ' and' → logprob: -3.52923583984375
    4. 'and' → logprob: -4.77923583984375
    5. '==' → logprob: -5.40423583984375
    6. '.' → logprob: -5.90423583984375
    7. ' ==' → logprob: -5.90423583984375
    8. ' :' → logprob: -6.65423583984375
    9. '!=' → logprob: -6.77923583984375
    10. '.count' → logprob: -7.02923583984375

Token 112: '(-' (ID: 8087)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021584490314126015
    2. ' ' → logprob: -3.8965845108032227
    3. '[' → logprob: -7.146584510803223
    4. ']' → logprob: -9.146584510803223
    5. '-' → logprob: -9.646584510803223
    6. '1' → logprob: -10.146584510803223
    7. ' ==' → logprob: -11.896584510803223
    8. ':' → logprob: -12.271584510803223
    9. '   ' → logprob: -12.771584510803223
    10. ' [' → logprob: -12.771584510803223

Token 113: 'N' (ID: 45)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01806260459125042
    2. '2' → logprob: -4.393062591552734
    3. ' ' → logprob: -5.268062591552734
    4. '3' → logprob: -9.393062591552734
    5. '0' → logprob: -9.518062591552734
    6. '-' → logprob: -9.893062591552734
    7. 'len' → logprob: -10.268062591552734
    8. ' -' → logprob: -10.518062591552734
    9. ')]' → logprob: -10.768062591552734
    10. 'i' → logprob: -11.018062591552734

Token 114: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.24576954543590546
    2. '):' → logprob: -2.370769500732422
    3. '+' → logprob: -2.870769500732422
    4. ')' → logprob: -3.245769500732422
    5. ' +' → logprob: -4.370769500732422
    6. ' )' → logprob: -5.620769500732422
    7. '//' → logprob: -5.745769500732422
    8. '-' → logprob: -6.120769500732422
    9. ':' → logprob: -6.870769500732422
    10. ')+' → logprob: -7.120769500732422

Token 115: ' %' (ID: 1851)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05398442596197128
    2. '-' → logprob: -3.6789844036102295
    3. ' ]' → logprob: -4.678984642028809
    4. ':]' → logprob: -4.803984642028809
    5. ']!=' → logprob: -5.678984642028809
    6. ']==' → logprob: -5.928984642028809
    7. ' -' → logprob: -6.178984642028809
    8. '1' → logprob: -7.803984642028809
    9. ' :]' → logprob: -8.053984642028809
    10. ']>' → logprob: -9.178984642028809

Token 116: ' len' (ID: 4631)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1808760166168213
    2. ' N' → logprob: -1.8058760166168213
    3. 'len' → logprob: -8.055875778198242
    4. ' len' → logprob: -8.555875778198242
    5. ']' → logprob: -8.680875778198242
    6. ' ' → logprob: -8.680875778198242
    7. ')' → logprob: -9.180875778198242
    8. 'n' → logprob: -9.430875778198242
    9. '-N' → logprob: -10.430875778198242
    10. ' -' → logprob: -11.305875778198242

Token 117: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0030977390706539154
    2. 'D' → logprob: -6.3780975341796875
    3. '(' → logprob: -6.8780975341796875
    4. ']' → logprob: -8.503097534179688
    5. '(
' → logprob: -10.378097534179688
    6. ' D' → logprob: -10.753097534179688
    7. ' (' → logprob: -10.753097534179688
    8. ' ' → logprob: -10.878097534179688
    9. ' ]' → logprob: -11.128097534179688
    10. '](' → logprob: -11.753097534179688

Token 118: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02787671610713005
    2. ']' → logprob: -3.652876615524292
    3. ']]' → logprob: -7.152876853942871
    4. ')' → logprob: -8.527876853942871
    5. ' ]' → logprob: -9.277876853942871
    6. '])' → logprob: -9.527876853942871
    7. '])]' → logprob: -9.527876853942871
    8. ']==' → logprob: -9.652876853942871
    9. ']+' → logprob: -9.902876853942871
    10. ')])' → logprob: -10.027876853942871

Token 119: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9321684837341309
    2. ' ==' → logprob: -1.3071684837341309
    3. '!=' → logprob: -1.8071684837341309
    4. ' !=' → logprob: -1.9321684837341309
    5. '%' → logprob: -4.807168483734131
    6. '>' → logprob: -5.057168483734131
    7. ':' → logprob: -5.682168483734131
    8. ' in' → logprob: -6.432168483734131
    9. ' not' → logprob: -6.432168483734131
    10. '<' → logprob: -6.557168483734131

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.854168176651001
    2. ' ' → logprob: -1.354168176651001
    3. 'D' → logprob: -1.979168176651001
    4. ' D' → logprob: -2.354168176651001
    5. '1' → logprob: -2.729168176651001
    6. ' ctr' → logprob: -5.604167938232422
    7. ' max' → logprob: -6.104167938232422
    8. 'max' → logprob: -6.354167938232422
    9. ' N' → logprob: -6.479167938232422
    10. 'N' → logprob: -6.479167938232422

Token 121: '0' (ID: 15)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.19521062076091766
    2. '0' → logprob: -1.945210576057434
    3. '1' → logprob: -3.6952106952667236
    4. 'max' → logprob: -5.8202104568481445
    5. 'N' → logprob: -6.3202104568481445
    6. 'ctr' → logprob: -6.5702104568481445
    7. '-' → logprob: -7.3202104568481445
    8. ' ' → logprob: -8.070210456848145
    9. 'M' → logprob: -8.070210456848145
    10. '(' → logprob: -8.070210456848145

Token 122: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002826038980856538
    2. ' or' → logprob: -6.75282621383667
    3. ' :' → logprob: -7.00282621383667
    4. ':
' → logprob: -7.50282621383667
    5. ' and' → logprob: -8.877825736999512
    6. 'or' → logprob: -10.252825736999512
    7. ')' → logprob: -12.002825736999512
    8. 'and' → logprob: -12.377825736999512
    9. '):' → logprob: -13.252825736999512
    10. ':return' → logprob: -13.252825736999512

Token 123: ' ctr' (ID: 113563)
  Prédit: 'ctr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctr' → logprob: -0.2676633596420288
    2. ' ctr' → logprob: -1.7676633596420288
    3. 'len' → logprob: -4.017663478851318
    4. 'any' → logprob: -4.392663478851318
    5. ' len' → logprob: -5.392663478851318
    6. ' any' → logprob: -5.392663478851318
    7. 'N' → logprob: -5.517663478851318
    8. 'max' → logprob: -5.517663478851318
    9. '(' → logprob: -5.892663478851318
    10. ' max' → logprob: -6.017663478851318

Token 124: '.get' (ID: 775)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004125575942452997
    2. '0' → logprob: -8.500412940979004
    3. '.get' → logprob: -9.250412940979004
    4. '.' → logprob: -9.750412940979004
    5. '```' → logprob: -11.375412940979004
    6. '!=' → logprob: -11.875412940979004
    7. ' [' → logprob: -12.125412940979004
    8. '[
' → logprob: -12.250412940979004
    9. '1' → logprob: -12.625412940979004
    10. '
' → logprob: -13.125412940979004

Token 125: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024965754710137844
    2. '0' → logprob: -8.375249862670898
    3. ' (' → logprob: -11.125249862670898
    4. '(
' → logprob: -13.000249862670898
    5. '(-' → logprob: -13.875249862670898
    6. '
' → logprob: -15.000249862670898
    7. ' ' → logprob: -15.375249862670898
    8. '((' → logprob: -15.750249862670898
    9. '1' → logprob: -16.2502498626709
    10. '```' → logprob: -16.2502498626709

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002904847264289856
    2. '1' → logprob: -6.127904891967773
    3. ' ' → logprob: -7.502904891967773
    4. ')' → logprob: -10.252904891967773
    5. '(' → logprob: -10.252904891967773
    6. '2' → logprob: -10.752904891967773
    7. 'N' → logprob: -10.877904891967773
    8. 'D' → logprob: -11.127904891967773
    9. 'M' → logprob: -11.127904891967773
    10. '   ' → logprob: -12.127904891967773

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13154226541519165
    2. ')' → logprob: -2.381542205810547
    3. ')!=' → logprob: -4.006542205810547
    4. ' ,' → logprob: -5.506542205810547
    5. '!=' → logprob: -5.631542205810547
    6. ' !=' → logprob: -6.131542205810547
    7. ']!=' → logprob: -6.756542205810547
    8. ' is' → logprob: -8.131542205810547
    9. '2' → logprob: -8.756542205810547
    10. ',None' → logprob: -8.756542205810547

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.070246621966362
    2. ' ' → logprob: -2.695246696472168
    3. '1' → logprob: -8.695246696472168
    4. ' None' → logprob: -9.320246696472168
    5. 'None' → logprob: -10.070246696472168
    6. '2' → logprob: -12.695246696472168
    7. ' N' → logprob: -12.945246696472168
    8. 'N' → logprob: -13.445246696472168
    9. ')' → logprob: -13.695246696472168
    10. '   ' → logprob: -14.507746696472168

Token 129: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030511818826198578
    2. ')!=' → logprob: -3.6555118560791016
    3. '!=' → logprob: -6.030511856079102
    4. ' !=' → logprob: -7.155511856079102
    5. ')==' → logprob: -7.780511856079102
    6. ' )' → logprob: -8.280511856079102
    7. '==' → logprob: -9.280511856079102
    8. '>' → logprob: -9.780511856079102
    9. ')>' → logprob: -10.030511856079102
    10. ')<' → logprob: -10.155511856079102

Token 130: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2649275064468384
    2. ' !=' → logprob: -1.5149275064468384
    3. '<' → logprob: -4.764927387237549
    4. '>' → logprob: -6.014927387237549
    5. '==' → logprob: -6.514927387237549
    6. ' >' → logprob: -9.014927864074707
    7. ' <' → logprob: -9.264927864074707
    8. ' ' → logprob: -9.514927864074707
    9. ' ==' → logprob: -9.764927864074707
    10. '<=' → logprob: -10.264927864074707

Token 131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000995890935882926
    2. ' ' → logprob: -7.000996112823486
    3. '2' → logprob: -10.375995635986328
    4. 'N' → logprob: -10.813495635986328
    5. '(' → logprob: -12.625995635986328
    6. '0' → logprob: -12.813495635986328
    7. '  ' → logprob: -12.875995635986328
    8. '   ' → logprob: -12.938495635986328
    9. ')' → logprob: -13.000995635986328
    10. '3' → logprob: -13.000995635986328

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.44574936106801e-05
    2. ' ' → logprob: -9.75007438659668
    3. '2' → logprob: -11.75007438659668
    4. 'N' → logprob: -13.00007438659668
    5. '0' → logprob: -14.37507438659668
    6. '   ' → logprob: -14.50007438659668
    7. ')' → logprob: -14.75007438659668
    8. '!' → logprob: -14.75007438659668
    9. '{' → logprob: -14.81257438659668
    10. '3' → logprob: -14.87507438659668

Token 133: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002737330214586109
    2. ':
' → logprob: -8.375273704528809
    3. ' or' → logprob: -10.625273704528809
    4. ' :' → logprob: -11.125273704528809
    5. ')' → logprob: -13.750273704528809
    6. '):' → logprob: -13.750273704528809
    7. 'or' → logprob: -14.250273704528809
    8. ':return' → logprob: -14.750273704528809
    9. '   ' → logprob: -15.875273704528809
    10. ' and' → logprob: -15.875273704528809

Token 134: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08124535530805588
    2. ' cult' → logprob: -2.9562454223632812
    3. 'cult' → logprob: -3.7062454223632812
    4. '
' → logprob: -7.581245422363281
    5. '```' → logprob: -8.081245422363281
    6. '   ' → logprob: -8.331245422363281
    7. '	c' → logprob: -8.456245422363281
    8. '    
' → logprob: -9.206245422363281
    9. 'c' → logprob: -10.706245422363281
    10. '\t' → logprob: -11.831245422363281

Token 135: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3619409501552582
    2. 'cult' → logprob: -1.2369409799575806
    3. ' cult' → logprob: -4.361940860748291
    4. '
' → logprob: -8.23694133758545
    5. '```' → logprob: -8.36194133758545
    6. 'c' → logprob: -10.11194133758545
    7. '	c' → logprob: -10.48694133758545
    8. '    
' → logprob: -10.48694133758545
    9. '   ' → logprob: -10.86194133758545
    10. 'cul' → logprob: -11.11194133758545

Token 136: ' Index' (ID: 14580)
  Prédit: 'cult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cult' → logprob: -0.1714755892753601
    2. '   ' → logprob: -2.171475648880005
    3. ' cult' → logprob: -3.171475648880005
    4. '
' → logprob: -7.171475410461426
    5. '```' → logprob: -7.796475410461426
    6. '    
' → logprob: -8.421475410461426
    7. 'cul' → logprob: -9.546475410461426
    8. 'c' → logprob: -10.046475410461426
    9. ' ' → logprob: -10.796475410461426
    10. '	c' → logprob: -11.046475410461426

Token 137: 'ing' (ID: 289)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.001065731048584
    2. ':' → logprob: -1.501065731048584
    3. ' :' → logprob: -2.376065731048584
    4. ' [' → logprob: -3.126065731048584
    5. ' out' → logprob: -3.501065731048584
    6. ' error' → logprob: -3.501065731048584
    7. ' ]' → logprob: -3.501065731048584
    8. '0' → logprob: -3.626065731048584
    9. '  ' → logprob: -4.001065731048584
    10. ' )' → logprob: -4.126065731048584

Token 138: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014111855998635292
    2. ' :' → logprob: -7.501410961151123
    3. ':
' → logprob: -7.876410961151123
    4. '   ' → logprob: -8.626411437988281
    5. ':return' → logprob: -9.376411437988281
    6. '<|end|>' → logprob: -9.376411437988281
    7. 'continue' → logprob: -11.001411437988281
    8. '{' → logprob: -11.126411437988281
    9. ' ' → logprob: -11.126411437988281
    10. '  ' → logprob: -11.626411437988281

Token 139: ' modulo' (ID: 112372)
  Prédit: '-N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-N' → logprob: -0.5197548866271973
    2. '-' → logprob: -1.0197548866271973
    3. '-negative' → logprob: -4.269754886627197
    4. ' -' → logprob: -4.894754886627197
    5. '-mod' → logprob: -5.269754886627197
    6. '(-' → logprob: -5.394754886627197
    7. '-D' → logprob: -5.769754886627197
    8. '-n' → logprob: -6.144754886627197
    9. '-M' → logprob: -6.269754886627197
    10. '0' → logprob: -6.269754886627197

Token 140: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5461922883987427
    2. ':
' → logprob: -1.6711922883987427
    3. ' cult' → logprob: -2.046192169189453
    4. 'cult' → logprob: -2.546192169189453
    5. '   ' → logprob: -3.796192169189453
    6. ':c' → logprob: -6.796192169189453
    7. '```' → logprob: -7.171192169189453
    8. ' :' → logprob: -8.296192169189453
    9. ' :
' → logprob: -8.546192169189453
    10. '(c' → logprob: -10.171192169189453

Token 141: ' .' (ID: 887)
  Prédit: 'cult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cult' → logprob: -0.13197879493236542
    2. 'exit' → logprob: -2.631978750228882
    3. ' cult' → logprob: -3.506978750228882
    4. 'ctr' → logprob: -5.381978988647461
    5. 'quit' → logprob: -5.756978988647461
    6. 'print' → logprob: -6.131978988647461
    7. '```' → logprob: -6.381978988647461
    8. 'len' → logprob: -6.381978988647461
    9. ' exit' → logprob: -6.756978988647461
    10. '0' → logprob: -6.756978988647461

Token 142: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.38027673959732056
    2. 'values' → logprob: -1.8802766799926758
    3. 'pop' → logprob: -2.755276679992676
    4. 'exit' → logprob: -3.630276679992676
    5. 'max' → logprob: -4.255276679992676
    6. 'items' → logprob: -4.505276679992676
    7. 'count' → logprob: -4.505276679992676
    8. 'len' → logprob: -4.880276679992676
    9. 'continue' → logprob: -5.255276679992676
    10. '0' → logprob: -5.880276679992676

Token 143: '()
' (ID: 1234)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015270020812749863
    2. ':
' → logprob: -6.876526832580566
    3. ' :' → logprob: -8.001526832580566
    4. '():' → logprob: -9.251526832580566
    5. '(' → logprob: -10.626526832580566
    6. '   ' → logprob: -11.626526832580566
    7. ' or' → logprob: -12.251526832580566
    8. '):' → logprob: -12.626526832580566
    9. ':c' → logprob: -12.626526832580566
    10. '(c' → logprob: -12.876526832580566

Token 144: '   ' (ID: 271)
  Prédit: ' cult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cult' → logprob: -0.949778139591217
    2. 'cult' → logprob: -0.949778139591217
    3. '   ' → logprob: -1.5747780799865723
    4. '```' → logprob: -4.824778079986572
    5. ':
' → logprob: -4.949778079986572
    6. ':' → logprob: -6.449778079986572
    7. '    
' → logprob: -6.824778079986572
    8. '
' → logprob: -7.449778079986572
    9. '``' → logprob: -8.44977855682373
    10. 'Cult' → logprob: -9.07477855682373

Token 145: ' print' (ID: 2123)
  Prédit: 'cult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cult' → logprob: -0.18360795080661774
    2. ' cult' → logprob: -1.8086079359054565
    3. '   ' → logprob: -6.308608055114746
    4. '```' → logprob: -7.308608055114746
    5. '
' → logprob: -7.433608055114746
    6. '    
' → logprob: -8.058608055114746
    7. 'print' (adapté à ' print') → logprob: -8.808608055114746
    8. 'cul' → logprob: -8.933608055114746
    9. 'c' → logprob: -9.933608055114746
    10. '	c' → logprob: -10.183608055114746

Token 146: '(' (ID: 7)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.17672133445739746
    2. '(' → logprob: -2.3017213344573975
    3. '("' → logprob: -2.8017213344573975
    4. '('' → logprob: -8.051721572875977
    5. '("-' → logprob: -8.051721572875977
    6. '-' → logprob: -8.676721572875977
    7. '(False' → logprob: -8.801721572875977
    8. '(":' → logprob: -9.551721572875977
    9. '0' → logprob: -10.051721572875977
    10. '(
' → logprob: -10.176721572875977

Token 147: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018297549337148666
    2. '0' → logprob: -4.1432976722717285
    3. '-c' → logprob: -6.6432976722717285
    4. '-im' → logprob: -8.26829719543457
    5. '-m' → logprob: -9.39329719543457
    6. '-M' → logprob: -9.51829719543457
    7. '1' → logprob: -9.76829719543457
    8. '-d' → logprob: -9.89329719543457
    9. '"-' → logprob: -9.89329719543457
    10. '-N' → logprob: -10.51829719543457

Token 148: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.17985248565673828
    2. ')' → logprob: -1.8048524856567383
    3. ')
' → logprob: -9.804852485656738
    4. ' )
' → logprob: -10.429852485656738
    5. ' )' → logprob: -11.554852485656738
    6. ')

' → logprob: -12.804852485656738
    7. '())
' → logprob: -13.304852485656738
    8. ')return' → logprob: -13.429852485656738
    9. ')`
' → logprob: -13.554852485656738
    10. '   ' → logprob: -13.679852485656738

Token 149: '   ' (ID: 271)
  Prédit: 'cult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cult' → logprob: -0.44612517952919006
    2. '   ' → logprob: -1.1961251497268677
    3. ' cult' → logprob: -2.9461252689361572
    4. 'exit' → logprob: -6.196125030517578
    5. 'else' → logprob: -6.321125030517578
    6. '```' → logprob: -7.696125030517578
    7. 'cul' → logprob: -8.821125030517578
    8. ' and' → logprob: -9.821125030517578
    9. 'elif' → logprob: -9.821125030517578
    10. 'Cult' → logprob: -9.821125030517578

Token 150: ' cult' (ID: 4685)
  Prédit: 'cult'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cult' (adapté à ' cult') → logprob: -0.141606867313385
    2. '   ' → logprob: -2.1416068077087402
    3. ' cult' → logprob: -4.76660680770874
    4. '    
' → logprob: -5.89160680770874
    5. '```' → logprob: -7.14160680770874
    6. 'else' → logprob: -7.26660680770874
    7. '
' → logprob: -7.51660680770874
    8. 'cul' → logprob: -7.89160680770874
    9. 'exit' → logprob: -8.016607284545898
    10. 'elif' → logprob: -8.766607284545898

Token 151: '_exit' (ID: 41242)
  Prédit: '_exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exit' → logprob: -4.320199877838604e-07
    2. 'exit' → logprob: -15.0
    3. '_EXIT' → logprob: -19.125
    4. '_enter' → logprob: -21.375
    5. 'Exit' → logprob: -21.875
    6. '_' → logprob: -22.0
    7. '	exit' → logprob: -22.375
    8. '_ex' → logprob: -22.75
    9. '_escape' → logprob: -22.875
    10. '(exit' → logprob: -23.5

Token 152: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006849045865237713
    2. '(' → logprob: -5.0068488121032715
    3. '()
' → logprob: -9.00684928894043
    4. '()`' → logprob: -13.13184928894043
    5. ' ()' → logprob: -13.25684928894043
    6. '())' → logprob: -13.25684928894043
    7. '()

' → logprob: -13.63184928894043
    8. '()<' → logprob: -13.88184928894043
    9. '(
' → logprob: -14.38184928894043
    10. '()]' → logprob: -14.50684928894043

Token 153: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13266554474830627
    2. '0' → logprob: -2.1326656341552734
    3. '1' → logprob: -5.257665634155273
    4. ')
' → logprob: -8.257665634155273
    5. ' )' → logprob: -8.632665634155273
    6. '())' → logprob: -10.632665634155273
    7. ' ' → logprob: -10.882665634155273
    8. '()' → logprob: -12.257665634155273
    9. '```' → logprob: -12.257665634155273
    10. '2' → logprob: -12.632665634155273

Token 154: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029309913516044617
    2. ')
' → logprob: -5.877931118011475
    3. ')

' → logprob: -9.002930641174316
    4. ' )' → logprob: -13.627930641174316
    5. '())' → logprob: -14.502930641174316
    6. '
' → logprob: -15.252930641174316
    7. ')`' → logprob: -15.627930641174316
    8. '))' → logprob: -16.127931594848633
    9. ')
' → logprob: -16.127931594848633
    10. '   ' → logprob: -16.252931594848633

Token 155: 'ans' (ID: 616)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.39469805359840393
    2. 'ans' → logprob: -2.519698143005371
    3. 'res' → logprob: -2.644698143005371
    4. 'answer' → logprob: -3.269698143005371
    5. 'f' → logprob: -4.144698143005371
    6. 'for' → logprob: -4.144698143005371
    7. 'ways' → logprob: -4.269698143005371
    8. 'result' → logprob: -4.269698143005371
    9. 'p' → logprob: -5.019698143005371
    10. 'ret' → logprob: -5.769698143005371

Token 156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3485511243343353
    2. ' =' → logprob: -1.2235511541366577
    3. '_' → logprob: -9.473550796508789
    4. ',' → logprob: -11.598550796508789
    5. '_=' → logprob: -12.473550796508789
    6. ')' → logprob: -12.598550796508789
    7. ' ' → logprob: -12.848550796508789
    8. ':' → logprob: -13.473550796508789
    9. ' *=' → logprob: -13.473550796508789
    10. 'import' → logprob: -13.848550796508789

Token 157: ' True' (ID: 6432)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.875295639038086
    3. '0' → logprob: -9.375295639038086
    4. 'pow' → logprob: -10.750295639038086
    5. '2' → logprob: -11.250295639038086
    6. '(' → logprob: -12.187795639038086
    7. 'M' → logprob: -12.250295639038086
    8. '[' → logprob: -12.375295639038086
    9. '-' → logprob: -13.125295639038086
    10. 'int' → logprob: -13.187795639038086

Token 158: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22519659996032715
    2. '<|end|>' → logprob: -2.475196599960327
    3. ' for' → logprob: -2.975196599960327
    4. '
' → logprob: -3.600196599960327
    5. ')' → logprob: -4.225196838378906
    6. ':' → logprob: -5.225196838378906
    7. ' ' → logprob: -5.475196838378906
    8. 'if' → logprob: -5.725196838378906
    9. '*' → logprob: -5.975196838378906
    10. '.' → logprob: -6.350196838378906

Token 159: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40218594670295715
    2. '*' → logprob: -1.5271859169006348
    3. 'if' → logprob: -3.5271859169006348
    4. ' for' → logprob: -3.6521859169006348
    5. '
' → logprob: -4.277185916900635
    6. '*
' → logprob: -4.777185916900635
    7. '\n' → logprob: -5.027185916900635
    8. ' ' → logprob: -5.152185916900635
    9. ' 
' → logprob: -5.777185916900635
    10. ')' → logprob: -5.902185916900635

Token 160: ' Bo' (ID: 4381)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009370805695652962
    2. 'if' → logprob: -6.134370803833008
    3. 'from' → logprob: -6.259370803833008
    4. 'cnt' → logprob: -7.134370803833008
    5. 'counter' → logprob: -7.509370803833008
    6. ' for' → logprob: -7.759370803833008
    7. 'print' → logprob: -7.759370803833008
    8. 'i' → logprob: -8.009370803833008
    9. 'count' → logprob: -8.384370803833008
    10. '#' → logprob: -8.384370803833008

Token 161: 'ole' (ID: 1491)
  Prédit: 'ol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.0004527182609308511
    2. 'olean' → logprob: -8.500452995300293
    3. 'l' → logprob: -9.375452995300293
    4. ' ol' → logprob: -9.875452995300293
    5. 'o' → logprob: -10.375452995300293
    6. 'OLEAN' → logprob: -11.000452995300293
    7. 'øl' → logprob: -11.000452995300293
    8. 'Ol' → logprob: -11.625452995300293
    9. 'ole' → logprob: -11.625452995300293
    10. 'ол' → logprob: -11.625452995300293

Token 162: 'ans' (ID: 616)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.00041125001735053957
    2. 'ans' → logprob: -8.000411033630371
    3. '<|end|>' → logprob: -10.250411033630371
    4. '```' → logprob: -11.750411033630371
    5. 'val' → logprob: -12.250411033630371
    6. 'w' → logprob: -12.500411033630371
    7. 'v' → logprob: -12.750411033630371
    8. 'ean' → logprob: -13.125411033630371
    9. 'and' → logprob: -13.250411033630371
    10. 'x' → logprob: -13.250411033630371

Token 163: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: ' numbers' (ID: 8663)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.360607773065567
    2. '1' → logprob: -1.8606077432632446
    3. 'flags' → logprob: -3.110607862472534
    4. 'ints' → logprob: -3.360607862472534
    5. 'True' → logprob: -3.610607862472534
    6. '0' → logprob: -4.485607624053955
    7. 'flag' → logprob: -4.985607624053955
    8. 'inte' → logprob: -5.110607624053955
    9. 'ans' → logprob: -5.485607624053955
    10. 'bool' → logprob: -5.860607624053955

Token 165: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3949151635169983
    2. '<|end|>' → logprob: -1.3949151039123535
    3. '\n' → logprob: -3.6449151039123535
    4. 'if' → logprob: -4.6449151039123535
    5. '*' → logprob: -4.7699151039123535
    6. ' ' → logprob: -5.0199151039123535
    7. '

' → logprob: -5.6449151039123535
    8. 'for' → logprob: -5.7699151039123535
    9. ' and' → logprob: -6.0199151039123535
    10. 'and' → logprob: -6.2699151039123535

Token 166: ' why' (ID: 4436)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8048437237739563
    2. '0' → logprob: -1.5548436641693115
    3. '*' → logprob: -2.1798436641693115
    4. '2' → logprob: -2.5548436641693115
    5. 'not' → logprob: -3.6798436641693115
    6. 'N' → logprob: -3.9298436641693115
    7. 'True' → logprob: -4.554843902587891
    8. ')' → logprob: -4.679843902587891
    9. ' ' → logprob: -4.929843902587891
    10. 'sum' → logprob: -4.929843902587891

Token 167: ' not' (ID: 625)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7066580057144165
    2. 'if' → logprob: -1.3316580057144165
    3. '*' → logprob: -2.581657886505127
    4. ')' → logprob: -3.206657886505127
    5. ' for' → logprob: -3.331657886505127
    6. 'else' → logprob: -3.456657886505127
    7. ' if' → logprob: -4.331657886505127
    8. ' ' → logprob: -5.081657886505127
    9. '=' → logprob: -5.206657886505127
    10. 'elif' → logprob: -5.331657886505127

Token 168: '?

' (ID: 1715)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23067055642604828
    2. 'if' → logprob: -1.7306705713272095
    3. 'from' → logprob: -4.48067045211792
    4. 'i' → logprob: -5.35567045211792
    5. 'else' → logprob: -6.35567045211792
    6. 'count' → logprob: -6.60567045211792
    7. '*' → logprob: -6.73067045211792
    8. 'cnt' → logprob: -6.73067045211792
    9. 'elif' → logprob: -6.85567045211792
    10. '#' → logprob: -7.23067045211792

Token 169: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13175156712532043
    2. 'if' → logprob: -2.631751537322998
    3. 'i' → logprob: -4.256751537322998
    4. '*' → logprob: -4.506751537322998
    5. ')' → logprob: -5.006751537322998
    6. 'print' → logprob: -6.256751537322998
    7. 'prev' → logprob: -6.256751537322998
    8. 'idx' → logprob: -6.756751537322998
    9. 'count' → logprob: -6.756751537322998
    10. 'from' → logprob: -6.756751537322998

Token 170: ' layer' (ID: 10261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19375036656856537
    2. 'd' → logprob: -2.4437503814697266
    3. 'x' → logprob: -3.0687503814697266
    4. ' i' → logprob: -3.5687503814697266
    5. 'k' → logprob: -5.193750381469727
    6. ' d' → logprob: -5.443750381469727
    7. ' x' → logprob: -6.693750381469727
    8. 'v' → logprob: -7.318750381469727
    9. 'a' → logprob: -7.443750381469727
    10. '_i' → logprob: -7.943750381469727

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03886042535305023
    2. 'in' → logprob: -3.288860321044922
    3. ' ' → logprob: -7.788860321044922
    4. ',' → logprob: -8.163860321044922
    5. ' ,' → logprob: -10.163860321044922
    6. 's' → logprob: -10.788860321044922
    7. '_in' → logprob: -11.538860321044922
    8. ' i' → logprob: -11.538860321044922
    9. '_' → logprob: -11.663860321044922
    10. 'i' → logprob: -12.351360321044922

Token 172: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002805940806865692
    2. ' range' → logprob: -5.877805709838867
    3. '(range' → logprob: -15.002805709838867
    4. 'D' → logprob: -15.627805709838867
    5. '	range' → logprob: -15.752805709838867
    6. ' ' → logprob: -16.877805709838867
    7. 'rang' → logprob: -17.002805709838867
    8. 'list' → logprob: -17.002805709838867
    9. '   ' → logprob: -17.252805709838867
    10. 'ran' → logprob: -17.377805709838867

Token 173: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011816580081358552
    2. '(N' → logprob: -6.751181602478027
    3. '1' → logprob: -11.751181602478027
    4. '((' → logprob: -13.876181602478027
    5. '(n' → logprob: -14.001181602478027
    6. '(len' → logprob: -14.001181602478027
    7. '(-' → logprob: -15.376181602478027
    8. ' (' → logprob: -15.501181602478027
    9. '(
' → logprob: -16.001182556152344
    10. 'N' → logprob: -16.126182556152344

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06624552607536316
    2. 'N' → logprob: -2.8162455558776855
    3. '(' → logprob: -5.8162455558776855
    4. '0' → logprob: -7.3162455558776855
    5. '(N' → logprob: -7.8162455558776855
    6. '2' → logprob: -9.566245079040527
    7. 'D' → logprob: -10.441245079040527
    8. 'len' → logprob: -10.566245079040527
    9. ' ' → logprob: -10.691245079040527
    10. 'max' → logprob: -11.066245079040527

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018405340611934662
    2. ',N' → logprob: -4.393405437469482
    3. ' ,' → logprob: -5.143405437469482
    4. 'N' → logprob: -11.393404960632324
    5. ' N' → logprob: -11.518404960632324
    6. ',n' → logprob: -11.768404960632324
    7. ',len' → logprob: -12.143404960632324
    8. ',
' → logprob: -12.768404960632324
    9. '1' → logprob: -14.143404960632324
    10. ',(' → logprob: -14.268404960632324

Token 176: ' max' (ID: 2999)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.7389131188392639
    2. 'N' → logprob: -1.2389130592346191
    3. '(max' → logprob: -1.8639130592346191
    4. 'max' → logprob: -2.863913059234619
    5. '((' → logprob: -4.738913059234619
    6. '(' → logprob: -5.613913059234619
    7. ' (' → logprob: -5.738913059234619
    8. '(len' → logprob: -6.113913059234619
    9. 'len' → logprob: -6.613913059234619
    10. '(n' → logprob: -8.363913536071777

Token 177: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0008459602249786258
    2. '(' → logprob: -7.625845909118652
    3. '(N' → logprob: -8.375845909118652
    4. 'D' → logprob: -9.625845909118652
    5. 'N' → logprob: -10.875845909118652
    6. '(max' → logprob: -10.875845909118652
    7. '((' → logprob: -12.000845909118652
    8. '(
' → logprob: -12.625845909118652
    9. '(len' → logprob: -13.125845909118652
    10. '(range' → logprob: -13.375845909118652

Token 178: ')' (ID: 8)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.10090426355600357
    2. ')' → logprob: -2.3509042263031006
    3. ')):' → logprob: -7.60090446472168
    4. ' )' → logprob: -9.72590446472168
    5. '))' → logprob: -9.72590446472168
    6. '))+' → logprob: -10.60090446472168
    7. '):' → logprob: -11.22590446472168
    8. ')+(' → logprob: -11.97590446472168
    9. ' ' → logprob: -12.22590446472168
    10. '+' → logprob: -12.47590446472168

Token 179: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15889476239681244
    2. '):' → logprob: -2.6588947772979736
    3. ' +' → logprob: -2.6588947772979736
    4. '//' → logprob: -5.2838945388793945
    5. ' //' → logprob: -6.6588945388793945
    6. '):
' → logprob: -8.658894538879395
    7. '   ' → logprob: -9.533894538879395
    8. ' ):' → logprob: -10.158894538879395
    9. '```' → logprob: -10.408894538879395
    10. '()+' → logprob: -10.408894538879395

Token 180: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028108209371566772
    2. ' ' → logprob: -5.877810955047607
    3. '2' → logprob: -12.25281047821045
    4. '(' → logprob: -14.87781047821045
    5. '   ' → logprob: -15.62781047821045
    6. '
' → logprob: -15.75281047821045
    7. '```' → logprob: -16.315311431884766
    8. ')' → logprob: -16.440311431884766
    9. ' ' → logprob: -16.440311431884766
    10. '0' → logprob: -17.190311431884766

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024263552040793002
    2. ' ' → logprob: -8.500242233276367
    3. '2' → logprob: -10.250242233276367
    4. '(' → logprob: -13.375242233276367
    5. '   ' → logprob: -14.687742233276367
    6. '```' → logprob: -15.062742233276367
    7. '
' → logprob: -15.250242233276367
    8. '3' → logprob: -15.375242233276367
    9. 'layer' → logprob: -15.875242233276367
    10. '0' → logprob: -16.437742233276367

Token 182: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003566330997273326
    2. ':' → logprob: -5.878566265106201
    3. '):
' → logprob: -7.628566265106201
    4. ' ):' → logprob: -8.50356674194336
    5. ')' → logprob: -9.75356674194336
    6. ',' → logprob: -12.00356674194336
    7. ' :' → logprob: -12.62856674194336
    8. '():' → logprob: -14.00356674194336
    9. '}:' → logprob: -14.12856674194336
    10. '   ' → logprob: -14.50356674194336

Token 183: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009973875246942043
    2. 'if' → logprob: -4.759974002838135
    3. ' if' → logprob: -7.134974002838135
    4. 'n' → logprob: -9.634973526000977
    5. 's' → logprob: -9.634973526000977
    6. 'count' → logprob: -9.759973526000977
    7. 'c' → logprob: -9.759973526000977
    8. 'cnt' → logprob: -9.759973526000977
    9. '    
' → logprob: -9.884973526000977
    10. '   ' → logprob: -10.384973526000977

Token 184: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7255667448043823
    2. 'if' → logprob: -0.7255667448043823
    3. 'cnt' → logprob: -4.850566864013672
    4. 'count' → logprob: -5.850566864013672
    5. ' if' → logprob: -5.975566864013672
    6. 's' → logprob: -6.100566864013672
    7. 'ans' → logprob: -6.225566864013672
    8. 'n' → logprob: -6.350566864013672
    9. 'c' → logprob: -6.350566864013672
    10. 'x' → logprob: -6.725566864013672

Token 185: ' Ren' (ID: 17631)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36941373348236084
    2. 'expected' → logprob: -1.9944137334823608
    3. 'cnt' → logprob: -3.3694138526916504
    4. '   ' → logprob: -3.4944138526916504
    5. 'count' → logprob: -3.7444138526916504
    6. 'ans' → logprob: -4.36941385269165
    7. 'c' → logprob: -4.49441385269165
    8. 'prev' → logprob: -4.61941385269165
    9. 'x' → logprob: -5.24441385269165
    10. 'cur' → logprob: -5.61941385269165

Token 186: 'aming' (ID: 11300)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.010251910425722599
    2. '   ' → logprob: -5.760251998901367
    3. 'ange' → logprob: -5.885251998901367
    4. 'g' → logprob: -6.010251998901367
    5. 'nge' → logprob: -7.510251998901367
    6. 'age' → logprob: -8.010251998901367
    7. 'range' → logprob: -8.510251998901367
    8. '```' → logprob: -8.885251998901367
    9. 'e' → logprob: -9.010251998901367
    10. 'for' → logprob: -9.635251998901367

Token 187: ' loop' (ID: 11453)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.7288875579833984
    2. ' layer' → logprob: -2.1038875579833984
    3. ' if' → logprob: -2.2288875579833984
    4. 'for' → logprob: -2.2288875579833984
    5. 'if' → logprob: -2.3538875579833984
    6. 'count' → logprob: -2.6038875579833984
    7. '   ' → logprob: -2.8538875579833984
    8. 'cnt' → logprob: -3.8538875579833984
    9. ':' → logprob: -3.9788875579833984
    10. ' ans' → logprob: -4.103887557983398

Token 188: ' variable' (ID: 11076)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5798406004905701
    2. '   ' → logprob: -0.9548406004905701
    3. ' if' → logprob: -4.329840660095215
    4. 'if' → logprob: -4.454840660095215
    5. '):' → logprob: -4.579840660095215
    6. ':
' → logprob: -5.829840660095215
    7. ')' → logprob: -5.829840660095215
    8. 's' → logprob: -6.079840660095215
    9. 'count' → logprob: -6.204840660095215
    10. '<|end|>' → logprob: -6.204840660095215

Token 189: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01322599034756422
    2. '):' → logprob: -5.38822603225708
    3. '   ' → logprob: -6.01322603225708
    4. 'if' → logprob: -6.38822603225708
    5. ':
' → logprob: -6.51322603225708
    6. ' if' → logprob: -7.13822603225708
    7. ' :' → logprob: -7.76322603225708
    8. ',' → logprob: -7.76322603225708
    9. 'count' → logprob: -8.388225555419922
    10. ')' → logprob: -8.513225555419922

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02669757790863514
    2. 'if' → logprob: -3.7766976356506348
    3. ' if' → logprob: -6.776697635650635
    4. '    
' → logprob: -7.776697635650635
    5. 'count' → logprob: -7.901697635650635
    6. 'c' → logprob: -7.901697635650635
    7. 'cnt' → logprob: -8.151697158813477
    8. 'n' → logprob: -8.651697158813477
    9. 'ans' → logprob: -8.901697158813477
    10. 's' → logprob: -9.401697158813477

Token 191: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06750813871622086
    2. 'expected' → logprob: -4.067508220672607
    3. 'cnt' → logprob: -4.442508220672607
    4. 'count' → logprob: -4.567508220672607
    5. 'prev' → logprob: -5.192508220672607
    6. 'c' → logprob: -5.817508220672607
    7. 'x' → logprob: -6.067508220672607
    8. 'ans' → logprob: -6.192508220672607
    9. 'p' → logprob: -6.317508220672607
    10. '   ' → logprob: -6.442508220672607

Token 192: ' not' (ID: 625)
  Prédit: 'ctr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ctr' → logprob: -0.0008432185277342796
    2. ' ctr' → logprob: -7.625843048095703
    3. '(' → logprob: -9.375843048095703
    4. 'not' → logprob: -9.500843048095703
    5. '   ' → logprob: -9.875843048095703
    6. 'ans' → logprob: -10.125843048095703
    7. 'D' → logprob: -11.125843048095703
    8. '2' → logprob: -11.375843048095703
    9. 'layer' → logprob: -11.500843048095703
    10. '  ' → logprob: -11.500843048095703

Token 193: ' ctr' (ID: 113563)
  Prédit: 'ctr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctr' → logprob: -0.04781557247042656
    2. '(' → logprob: -3.2978155612945557
    3. ' ctr' → logprob: -5.297815799713135
    4. 'all' → logprob: -6.047815799713135
    5. 'ans' → logprob: -7.047815799713135
    6. '(
' → logprob: -7.922815799713135
    7. '((' → logprob: -8.422815322875977
    8. ' (' → logprob: -8.797815322875977
    9. '(ans' → logprob: -8.922815322875977
    10. '   ' → logprob: -9.172815322875977

Token 194: '[layer' (ID: 189148)
  Prédit: '[layer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[layer' → logprob: -0.5803594589233398
    2. '.get' → logprob: -0.8303594589233398
    3. '[' → logprob: -5.95535945892334
    4. '[(' → logprob: -7.45535945892334
    5. 'layer' → logprob: -8.08035945892334
    6. 'get' → logprob: -8.45535945892334
    7. '.' → logprob: -8.58035945892334
    8. '.__' → logprob: -8.70535945892334
    9. '(layer' → logprob: -9.70535945892334
    10. '   ' → logprob: -10.33035945892334

Token 195: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2715843617916107
    2. ']==' → logprob: -1.646584391593933
    3. '==' → logprob: -3.7715842723846436
    4. '*' → logprob: -5.146584510803223
    5. 'or' → logprob: -5.521584510803223
    6. ' or' → logprob: -5.771584510803223
    7. '//' → logprob: -6.021584510803223
    8. ')' → logprob: -6.521584510803223
    9. ' ==' → logprob: -6.896584510803223
    10. '   ' → logprob: -7.271584510803223

Token 196: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3679322302341461
    2. '   ' → logprob: -1.6179322004318237
    3. 'print' → logprob: -2.7429323196411133
    4. 'ans' → logprob: -3.4929323196411133
    5. ' if' → logprob: -4.992932319641113
    6. '    
' → logprob: -5.992932319641113
    7. '       ' → logprob: -6.367932319641113
    8. 'continue' → logprob: -7.742932319641113
    9. '        
' → logprob: -7.992932319641113
    10. 'break' → logprob: -8.242932319641113

Token 197: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5132590532302856
    2. 'if' → logprob: -1.0132590532302856
    3. '   ' → logprob: -4.013258934020996
    4. 'print' → logprob: -4.138258934020996
    5. ' ans' → logprob: -6.763258934020996
    6. '(ans' → logprob: -6.888258934020996
    7. ' if' → logprob: -7.013258934020996
    8. 'continue' → logprob: -8.013258934020996
    9. 'break' → logprob: -8.263258934020996
    10. '	ans' → logprob: -9.138258934020996

Token 198: ' R' (ID: 460)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25065335631370544
    2. 'ans' → logprob: -1.7506533861160278
    3. 'print' → logprob: -3.6256532669067383
    4. 'break' → logprob: -4.625653266906738
    5. '   ' → logprob: -5.000653266906738
    6. 'continue' → logprob: -6.000653266906738
    7. ' if' → logprob: -6.500653266906738
    8. ' ans' → logprob: -8.125653266906738
    9. '(ans' → logprob: -8.750653266906738
    10. 'answer' → logprob: -9.750653266906738

Token 199: 'ely' (ID: 1151)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.19169825315475464
    2. 'print' → logprob: -2.1916983127593994
    3. '   ' → logprob: -3.9416983127593994
    4. 'eturn' → logprob: -4.19169807434082
    5. ' print' → logprob: -5.06669807434082
    6. '
' → logprob: -5.06669807434082
    7. ' ' → logprob: -5.69169807434082
    8. 'ange' → logprob: -6.06669807434082
    9. '    ' → logprob: -6.19169807434082
    10. '  ' → logprob: -6.19169807434082

Token 200: ' on' (ID: 402)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.23978844285011292
    2. '   ' → logprob: -1.6147884130477905
    3. '       ' → logprob: -4.73978853225708
    4. 'on' → logprob: -6.36478853225708
    5. '           ' → logprob: -7.36478853225708
    6. '
' → logprob: -7.73978853225708
    7. 'es' → logprob: -8.239788055419922
    8. 'ents' → logprob: -8.364788055419922
    9. 'ng' → logprob: -8.614788055419922
    10. ' on' → logprob: -8.739788055419922

Token 201: ' Counter' (ID: 32251)
  Prédit: 'ctr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ctr' → logprob: -0.053271710872650146
    2. 'ans' → logprob: -3.928271770477295
    3. 'False' → logprob: -5.053271770477295
    4. ' ctr' → logprob: -5.178271770477295
    5. '(' → logprob: -5.303271770477295
    6. 'layer' → logprob: -5.803271770477295
    7. '0' → logprob: -5.928271770477295
    8. '
' → logprob: -6.678271770477295
    9. 'True' → logprob: -6.678271770477295
    10. '   ' → logprob: -6.928271770477295

Token 202: ' giving' (ID: 9874)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5865324139595032
    2. 'or' → logprob: -2.3365323543548584
    3. ' and' → logprob: -2.5865323543548584
    4. '   ' → logprob: -2.5865323543548584
    5. '%' → logprob: -2.9615323543548584
    6. '==' → logprob: -2.9615323543548584
    7. 'and' → logprob: -3.0865323543548584
    8. '*' → logprob: -4.4615325927734375
    9. ' %' → logprob: -5.3365325927734375
    10. ' *' → logprob: -5.4615325927734375

Token 203: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. 'False' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.250001907348633
    4. '```' → logprob: -17.875001907348633
    5. 'a' → logprob: -18.125001907348633
    6. 'false' → logprob: -18.875001907348633
    7. 'int' → logprob: -19.375001907348633
    8. 'default' → logprob: -19.375001907348633
    9. '۰' → logprob: -19.500001907348633
    10. 'zero' → logprob: -19.750001907348633

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. 'False' → logprob: -12.87500286102295
    3. ' ' → logprob: -15.50000286102295
    4. 'int' → logprob: -17.250003814697266
    5. 'false' → logprob: -17.375003814697266
    6. 'default' → logprob: -18.000003814697266
    7. 'zero' → logprob: -18.000003814697266
    8. '```' → logprob: -18.000003814697266
    9. '۰' → logprob: -18.125003814697266
    10. 'a' → logprob: -18.125003814697266

Token 205: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4604949951171875
    2. ':' → logprob: -1.9604949951171875
    3. ' or' → logprob: -1.9604949951171875
    4. ' and' → logprob: -2.7104949951171875
    5. 'and' → logprob: -4.5854949951171875
    6. 'print' → logprob: -5.9604949951171875
    7. '       ' → logprob: -6.2104949951171875
    8. ':
' → logprob: -6.5854949951171875
    9. 'or' → logprob: -7.0854949951171875
    10. ' print' → logprob: -7.3354949951171875

Token 206: ' missing' (ID: 12486)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.10985337942838669
    2. 'layer' → logprob: -3.4848532676696777
    3. 'keys' → logprob: -3.6098532676696777
    4. 'False' → logprob: -3.7348532676696777
    5. 'undefined' → logprob: -4.234853267669678
    6. 'layers' → logprob: -5.609853267669678
    7. 'abs' → logprob: -5.859853267669678
    8. 'elements' → logprob: -8.234853744506836
    9. 'false' → logprob: -8.234853744506836
    10. 'values' → logprob: -8.984853744506836

Token 207: ' keys' (ID: 12994)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.1845253705978394
    2. 'or' → logprob: -1.3095253705978394
    3. 'and' → logprob: -2.059525489807129
    4. 'ans' → logprob: -2.184525489807129
    5. ':' → logprob: -2.684525489807129
    6. ' and' → logprob: -3.059525489807129
    7. 'if' → logprob: -3.559525489807129
    8. 'D' → logprob: -4.684525489807129
    9. ' if' → logprob: -4.934525489807129
    10. ')' → logprob: -5.684525489807129

Token 208: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7539932727813721
    2. 'if' → logprob: -1.003993272781372
    3. '       ' → logprob: -2.628993272781372
    4. ' if' → logprob: -3.378993272781372
    5. ' and' → logprob: -3.628993272781372
    6. ' or' → logprob: -4.503993034362793
    7. 'and' → logprob: -4.503993034362793
    8. 'print' → logprob: -6.003993034362793
    9. 'or' → logprob: -6.503993034362793
    10. 'ans' → logprob: -6.628993034362793

Token 209: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5222102999687195
    2. '   ' → logprob: -1.5222103595733643
    3. '       ' → logprob: -2.0222103595733643
    4. ' if' → logprob: -3.1472103595733643
    5. 'print' → logprob: -4.897210121154785
    6. 'ans' → logprob: -5.397210121154785
    7. ' and' → logprob: -8.897210121154785
    8. '        
' → logprob: -9.022210121154785
    9. '    
' → logprob: -9.147210121154785
    10. ' print' → logprob: -9.147210121154785

Token 210: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0021025598980486393
    2. '   ' → logprob: -6.502102375030518
    3. ' ans' → logprob: -7.752102375030518
    4. 'print' → logprob: -9.877102851867676
    5. '    
' → logprob: -10.377102851867676
    6. '	ans' → logprob: -10.502102851867676
    7. '
' → logprob: -10.752102851867676
    8. '(ans' → logprob: -11.627102851867676
    9. 'break' → logprob: -11.752102851867676
    10. '0' → logprob: -12.002102851867676

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014187951572239399
    2. ' =' → logprob: -4.264187812805176
    3. '=False' → logprob: -10.889187812805176
    4. '*=' → logprob: -12.139187812805176
    5. ' *=' → logprob: -14.889187812805176
    6. ' ' → logprob: -17.139188766479492
    7. '.=' → logprob: -17.264188766479492
    8. '=True' → logprob: -17.389188766479492
    9. '＝' → logprob: -17.639188766479492
    10. '-=' → logprob: -17.639188766479492

Token 212: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.008157310076057911
    2. '0' → logprob: -4.883157253265381
    3. ' False' → logprob: -7.508157253265381
    4. ' ' → logprob: -13.508157730102539
    5. 'F' → logprob: -14.508157730102539
    6. '   ' → logprob: -15.508157730102539
    7. 'false' → logprob: -16.13315773010254
    8. '(False' → logprob: -16.63315773010254
    9. '=False' → logprob: -16.75815773010254
    10. '  ' → logprob: -17.25815773010254

Token 213: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007656438276171684
    2. '   ' → logprob: -4.882656574249268
    3. '<|end|>' → logprob: -11.38265609741211
    4. ',' → logprob: -11.88265609741211
    5. '      ' → logprob: -12.13265609741211
    6. '           ' → logprob: -12.50765609741211
    7. '.' → logprob: -12.63265609741211
    8. '	' → logprob: -12.75765609741211
    9. '    ' → logprob: -12.75765609741211
    10. '     ' → logprob: -12.88265609741211

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05518025904893875
    2. '   ' → logprob: -2.930180311203003
    3. '<|end|>' → logprob: -9.055180549621582
    4. '	' → logprob: -10.055180549621582
    5. '    ' → logprob: -10.305180549621582
    6. '.' → logprob: -11.055180549621582
    7. ')' → logprob: -11.055180549621582
    8. ' ' → logprob: -11.305180549621582
    9. ',' → logprob: -11.555180549621582
    10. '      ' → logprob: -11.680180549621582

Token 215: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.8417482972145081
    2. '       ' → logprob: -0.9667482972145081
    3. '   ' → logprob: -1.7167482376098633
    4. ' break' → logprob: -4.841748237609863
    5. '	break' → logprob: -7.341748237609863
    6. ' ' → logprob: -8.716748237609863
    7. ' ' → logprob: -9.466748237609863
    8. '  ' → logprob: -9.716748237609863
    9. '    ' → logprob: -10.216748237609863
    10. '
' → logprob: -10.466748237609863

Token 216: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9747776985168457
    2. 'if' → logprob: -1.2247776985168457
    3. '   ' → logprob: -1.7247776985168457
    4. 'elif' → logprob: -2.4747776985168457
    5. ' if' → logprob: -3.7247776985168457
    6. 'else' → logprob: -4.224777698516846
    7. 'for' → logprob: -4.724777698516846
    8. ')' → logprob: -5.474777698516846
    9. ' elif' → logprob: -6.099777698516846
    10. ' print' → logprob: -6.349777698516846

Token 217: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7792270183563232
    2. 'print' → logprob: -1.0292270183563232
    3. 'elif' → logprob: -2.7792270183563232
    4. '   ' → logprob: -3.1542270183563232
    5. 'for' → logprob: -3.4042270183563232
    6. 'else' → logprob: -3.5292270183563232
    7. ')' → logprob: -5.279227256774902
    8. ' if' → logprob: -5.404227256774902
    9. ' for' → logprob: -7.029227256774902
    10. '    
' → logprob: -7.154227256774902

Token 218: ' combo' (ID: 32014)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04673859104514122
    2. 'elif' → logprob: -3.546738624572754
    3. '   ' → logprob: -4.546738624572754
    4. 'ans' → logprob: -6.296738624572754
    5. 'print' → logprob: -6.546738624572754
    6. ' if' → logprob: -6.546738624572754
    7. 'else' → logprob: -7.046738624572754
    8. 'cnt' → logprob: -9.296738624572754
    9. '    
' → logprob: -9.421738624572754
    10. '```' → logprob: -9.671738624572754

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3594053089618683
    2. 's' → logprob: -1.734405279159546
    3. '_count' → logprob: -2.359405279159546
    4. '_size' → logprob: -4.484405517578125
    5. '=' → logprob: -4.609405517578125
    6. '_cnt' → logprob: -5.984405517578125
    7. '_s' → logprob: -6.859405517578125
    8. 'ns' → logprob: -6.984405517578125
    9. '   ' → logprob: -7.234405517578125
    10. '_counts' → logprob: -7.484405517578125

Token 220: ' pow' (ID: 9779)
  Prédit: 'ctr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctr' → logprob: -0.5237930417060852
    2. 'pow' → logprob: -1.1487929821014404
    3. 'ans' → logprob: -3.2737929821014404
    4. '(' → logprob: -3.3987929821014404
    5. '1' → logprob: -5.3987932205200195
    6. '2' → logprob: -5.5237932205200195
    7. 'comb' → logprob: -6.1487932205200195
    8. ' ctr' → logprob: -6.1487932205200195
    9. '(ans' → logprob: -6.2737932205200195
    10. ' pow' → logprob: -7.0237932205200195

Token 221: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022065204102545977
    2. '2' → logprob: -6.377206325531006
    3. '(len' → logprob: -8.627206802368164
    4. '(
' → logprob: -9.627206802368164
    5. '(max' → logprob: -9.752206802368164
    6. '(M' → logprob: -9.752206802368164
    7. '(N' → logprob: -10.002206802368164
    8. '((' → logprob: -10.752206802368164
    9. '(layer' → logprob: -10.752206802368164
    10. '(D' → logprob: -12.127206802368164

Token 222: 'ctr' (ID: 18088)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01498941145837307
    2. '(' → logprob: -4.264989376068115
    3. 'ctr' → logprob: -7.639989376068115
    4. 'max' → logprob: -9.764989852905273
    5. 'layer' → logprob: -10.014989852905273
    6. ' ' → logprob: -10.139989852905273
    7. 'len' → logprob: -10.514989852905273
    8. 'ans' → logprob: -10.764989852905273
    9. '
' → logprob: -11.014989852905273
    10. 'N' → logprob: -11.139989852905273

Token 223: '[layer' (ID: 189148)
  Prédit: '[layer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[layer' → logprob: -0.003766113193705678
    2. '(layer' → logprob: -5.628766059875488
    3. '[' → logprob: -9.253766059875488
    4. 'layer' → logprob: -10.128766059875488
    5. '(' → logprob: -11.378766059875488
    6. '```' → logprob: -12.753766059875488
    7. '	layer' → logprob: -12.878766059875488
    8. '[level' → logprob: -13.378766059875488
    9. '[D' → logprob: -13.503766059875488
    10. '0' → logprob: -13.628766059875488

Token 224: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10749974846839905
    2. '2' → logprob: -2.732499837875366
    3. '(' → logprob: -4.357499599456787
    4. '[' → logprob: -4.357499599456787
    5. '(layer' → logprob: -5.232499599456787
    6. '[layer' → logprob: -5.982499599456787
    7. 'layer' → logprob: -6.857499599456787
    8. ' ,' → logprob: -6.982499599456787
    9. '][' → logprob: -8.357500076293945
    10. ' ' → logprob: -8.732500076293945

Token 225: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.572941179503687e-05
    2. 'layer' → logprob: -10.875045776367188
    3. ' ' → logprob: -11.500045776367188
    4. '   ' → logprob: -11.750045776367188
    5. '2' → logprob: -12.250045776367188
    6. '
' → logprob: -14.250045776367188
    7. 'D' → logprob: -14.500045776367188
    8. '```' → logprob: -14.750045776367188
    9. ']' → logprob: -14.875045776367188
    10. ')' → logprob: -15.062545776367188

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014931005716789514
    2. ']' → logprob: -9.750149726867676
    3. '2' → logprob: -10.000149726867676
    4. 'layer' → logprob: -10.750149726867676
    5. ' ' → logprob: -12.000149726867676
    6. '   ' → logprob: -12.500149726867676
    7. '
' → logprob: -12.875149726867676
    8. '```' → logprob: -13.000149726867676
    9. '0' → logprob: -13.125149726867676
    10. 'D' → logprob: -13.625149726867676

Token 227: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10158403217792511
    2. '2' → logprob: -2.726583957672119
    3. ' ,' → logprob: -3.476583957672119
    4. ')' → logprob: -9.351584434509277
    5. '),' → logprob: -10.851584434509277
    6. '(),' → logprob: -10.976584434509277
    7. ' ' → logprob: -11.226584434509277
    8. '
' → logprob: -11.476584434509277
    9. 'if' → logprob: -11.726584434509277
    10. ',
' → logprob: -11.726584434509277

Token 228: ' ctr' (ID: 113563)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004929834394715726
    2. ' ' → logprob: -8.250493049621582
    3. 'ctr' → logprob: -8.875493049621582
    4. '   ' → logprob: -9.625493049621582
    5. '  ' → logprob: -12.250493049621582
    6. 'D' → logprob: -12.500493049621582
    7. ' ctr' → logprob: -13.250493049621582
    8. ' ' → logprob: -13.250493049621582
    9. '3' → logprob: -13.375493049621582
    10. '```' → logprob: -13.375493049621582

Token 229: '[layer' (ID: 189148)
  Prédit: '[layer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[layer' → logprob: -4.723352049040841e-06
    2. 'layer' → logprob: -12.750004768371582
    3. '[' → logprob: -14.000004768371582
    4. '[l' → logprob: -15.125004768371582
    5. '[level' → logprob: -15.500004768371582
    6. '(layer' → logprob: -15.750004768371582
    7. '[
' → logprob: -16.750003814697266
    8. '	layer' → logprob: -16.875003814697266
    9. '```' → logprob: -16.875003814697266
    10. '[module' → logprob: -17.500003814697266

Token 230: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3939633071422577
    2. ',' → logprob: -1.14396333694458
    3. ')*' → logprob: -6.14396333694458
    4. '*' → logprob: -6.64396333694458
    5. '})' → logprob: -6.89396333694458
    6. '}' → logprob: -7.14396333694458
    7. ' ,' → logprob: -7.89396333694458
    8. '),' → logprob: -8.018962860107422
    9. '))' → logprob: -8.393962860107422
    10. ' )' → logprob: -8.393962860107422

Token 231: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00014203863975126296
    2. ' M' → logprob: -8.875142097473145
    3. '   ' → logprob: -13.250142097473145
    4. ' ' → logprob: -15.625142097473145
    5. 'MOD' → logprob: -16.250141143798828
    6. '	M' → logprob: -16.750141143798828
    7. '
' → logprob: -17.250141143798828
    8. '  ' → logprob: -17.500141143798828
    9. '998' → logprob: -17.875141143798828
    10. ')' → logprob: -18.125141143798828

Token 232: '_O' (ID: 11678)
  Prédit: '_O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_O' → logprob: -0.0003815756645053625
    2. 'O' → logprob: -7.8753814697265625
    3. '_OD' → logprob: -13.625381469726562
    4. ')' → logprob: -16.125381469726562
    5. '```' → logprob: -17.500381469726562
    6. '\' → logprob: -17.500381469726562
    7. '_' → logprob: -17.625381469726562
    8. ' O' → logprob: -18.000381469726562
    9. '	O' → logprob: -18.125381469726562
    10. '__' → logprob: -18.125381469726562

Token 233: '_D' (ID: 2958)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -3.392824874026701e-05
    2. '_D' → logprob: -11.00003433227539
    3. 'Д' → logprob: -11.62503433227539
    4. ' D' → logprob: -12.62503433227539
    5. '   ' → logprob: -14.81253433227539
    6. '﻿' → logprob: -14.93753433227539
    7. ' ' → logprob: -15.06253433227539
    8. '	D' → logprob: -15.12503433227539
    9. '
' → logprob: -15.50003433227539
    10. 'Ｄ' → logprob: -15.56253433227539

Token 234: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027897433028556406
    2. ')
' → logprob: -8.375279426574707
    3. ' )' → logprob: -10.500279426574707
    4. ')*' → logprob: -12.375279426574707
    5. ',' → logprob: -12.625279426574707
    6. ')%' → logprob: -12.750279426574707
    7. ')}' → logprob: -13.125279426574707
    8. '   ' → logprob: -13.625279426574707
    9. '))' → logprob: -13.750279426574707
    10. '*' → logprob: -13.875279426574707

Token 235: ' ' (ID: 220)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7169870734214783
    2. '   ' → logprob: -0.9669870734214783
    3. ')' → logprob: -2.216987133026123
    4. ' *' → logprob: -4.466987133026123
    5. '**' → logprob: -5.966987133026123
    6. 'ans' → logprob: -6.091987133026123
    7. '<|end|>' → logprob: -6.591987133026123
    8. '%' → logprob: -6.966987133026123
    9. '*
' → logprob: -7.341987133026123
    10. '(ans' → logprob: -7.841987133026123

Token 236: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8753740191459656
    2. 'ans' → logprob: -1.0003740787506104
    3. ')' → logprob: -1.8753740787506104
    4. '*' → logprob: -3.2503740787506104
    5. '(ans' → logprob: -4.500373840332031
    6. '**' → logprob: -5.375373840332031
    7. ' ans' → logprob: -6.625373840332031
    8. '<|end|>' → logprob: -7.250373840332031
    9. '	ans' → logprob: -7.250373840332031
    10. '%' → logprob: -7.500373840332031

Token 237: ' Naming' (ID: 185297)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1283312737941742
    2. '(ans' → logprob: -2.378331184387207
    3. 'pow' → logprob: -4.128331184387207
    4. 'combo' → logprob: -4.753331184387207
    5. ' ans' → logprob: -6.378331184387207
    6. '(' → logprob: -8.128331184387207
    7. 'comb' → logprob: -8.628331184387207
    8. '(combo' → logprob: -8.753331184387207
    9. '(pow' → logprob: -8.753331184387207
    10. ' combo' → logprob: -9.503331184387207

Token 238: ' intermediate' (ID: 47388)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.689793586730957
    2. ')' → logprob: -1.064793586730957
    3. '_' → logprob: -2.064793586730957
    4. '(ans' → logprob: -4.564793586730957
    5. '_ans' → logprob: -5.064793586730957
    6. '(' → logprob: -6.064793586730957
    7. '(
' → logprob: -6.189793586730957
    8. ' )' → logprob: -7.189793586730957
    9. '<|end|>' → logprob: -7.189793586730957
    10. ' ans' → logprob: -7.689793586730957

Token 239: ' values' (ID: 4824)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.132123589515686
    2. 'result' → logprob: -1.132123589515686
    3. 'variable' → logprob: -1.382123589515686
    4. '_' → logprob: -3.2571234703063965
    5. '_result' → logprob: -3.7571234703063965
    6. ')' → logprob: -4.1321234703063965
    7. '_variable' → logprob: -4.6321234703063965
    8. 'token' → logprob: -5.1321234703063965
    9. '_ans' → logprob: -5.8821234703063965
    10. 'value' → logprob: -5.8821234703063965

Token 240: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.15559031069278717
    2. ')' → logprob: -2.280590295791626
    3. '   ' → logprob: -3.655590295791626
    4. '*' → logprob: -5.280590534210205
    5. '(ans' → logprob: -5.530590534210205
    6. ' ans' → logprob: -5.780590534210205
    7. '**' → logprob: -6.530590534210205
    8. '	ans' → logprob: -7.780590534210205
    9. 'print' → logprob: -8.155590057373047
    10. '%' → logprob: -8.780590057373047

Token 241: '   ' (ID: 271)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8180173635482788
    2. ')' → logprob: -0.9430173635482788
    3. '   ' → logprob: -1.9430173635482788
    4. ' *' → logprob: -4.818017482757568
    5. 'ans' → logprob: -5.068017482757568
    6. '**' → logprob: -5.068017482757568
    7. '<|end|>' → logprob: -7.193017482757568
    8. '(ans' → logprob: -7.443017482757568
    9. ' ' → logprob: -7.568017482757568
    10. '+' → logprob: -8.06801700592041

Token 242: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00015824666479602456
    2. '(ans' → logprob: -8.875158309936523
    3. ' ans' → logprob: -11.250158309936523
    4. '   ' → logprob: -12.875158309936523
    5. '
' → logprob: -14.000158309936523
    6. '    
' → logprob: -14.125158309936523
    7. '	ans' → logprob: -14.375158309936523
    8. 'if' → logprob: -15.750158309936523
    9. 'answer' → logprob: -15.875158309936523
    10. '_ans' → logprob: -16.375158309936523

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3051534593105316
    2. ' =' → logprob: -1.430153489112854
    3. ' *=' → logprob: -4.1801533699035645
    4. '*=' → logprob: -4.8051533699035645
    5. '%=' → logprob: -9.055153846740723
    6. ' ' → logprob: -9.930153846740723
    7. ' %=' → logprob: -10.930153846740723
    8. '*' → logprob: -11.555153846740723
    9. '   ' → logprob: -11.680153846740723
    10. '	' → logprob: -11.805153846740723

Token 244: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.002032253658398986
    2. 'ans' → logprob: -6.252032279968262
    3. ' (' → logprob: -9.752032279968262
    4. ' ans' → logprob: -10.627032279968262
    5. '(' → logprob: -11.502032279968262
    6. '	ans' → logprob: -12.627032279968262
    7. '   ' → logprob: -14.127032279968262
    8. '(ord' → logprob: -14.127032279968262
    9. '(int' → logprob: -14.377032279968262
    10. '((' → logprob: -14.377032279968262

Token 245: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0024923032615333796
    2. '(ans' → logprob: -6.252492427825928
    3. ' ans' → logprob: -7.502492427825928
    4. '	ans' → logprob: -11.75249195098877
    5. '   ' → logprob: -13.25249195098877
    6. '_ans' → logprob: -14.00249195098877
    7. '
' → logprob: -15.12749195098877
    8. 'Ans' → logprob: -15.25249195098877
    9. 'answer' → logprob: -15.62749195098877
    10. 'ANS' → logprob: -15.75249195098877

Token 246: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10021184384822845
    2. '*' → logprob: -2.3502118587493896
    3. ' ' → logprob: -12.475212097167969
    4. 'ans' → logprob: -14.225212097167969
    5. ' ans' → logprob: -14.975212097167969
    6. ' ' → logprob: -15.600212097167969
    7. ')' → logprob: -16.35021209716797
    8. '**' → logprob: -16.72521209716797
    9. '(ans' → logprob: -17.72521209716797
    10. ' *
' → logprob: -17.72521209716797

Token 247: ' combo' (ID: 32014)
  Prédit: 'combo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combo' → logprob: -0.0019293478690087795
    2. ' combo' → logprob: -6.25192928314209
    3. 'comb' → logprob: -14.50192928314209
    4. '(combo' → logprob: -15.37692928314209
    5. '.combo' → logprob: -17.501930236816406
    6. '   ' → logprob: -17.876930236816406
    7. ' ' → logprob: -18.251930236816406
    8. '_combo' → logprob: -18.376930236816406
    9. '
' → logprob: -19.626930236816406
    10. 'int' → logprob: -19.626930236816406

Token 248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004131536406930536
    2. ')%' → logprob: -8.000412940979004
    3. ' )' → logprob: -9.500412940979004
    4. '%' → logprob: -13.000412940979004
    5. ' %' → logprob: -15.125412940979004
    6. '   ' → logprob: -15.250412940979004
    7. ')
' → logprob: -17.12541389465332
    8. '%)' → logprob: -18.00041389465332
    9. ' ' → logprob: -18.25041389465332
    10. '```' → logprob: -18.62541389465332

Token 249: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.31327617168426514
    2. ' %' → logprob: -1.3132761716842651
    3. ' %=' → logprob: -12.438276290893555
    4. '%i' → logprob: -13.313276290893555
    5. '%c' → logprob: -13.313276290893555
    6. '%=' → logprob: -13.438276290893555
    7. '%d' → logprob: -13.688276290893555
    8. '%s' → logprob: -14.063276290893555
    9. ')' → logprob: -14.188276290893555
    10. ')%' → logprob: -14.188276290893555

Token 250: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -2.15310683415737e-05
    2. ' M' → logprob: -10.750021934509277
    3. '998' → logprob: -17.50002098083496
    4. '(M' → logprob: -20.62502098083496
    5. '```' → logprob: -21.37502098083496
    6. '
' → logprob: -21.75002098083496
    7. ' ' → logprob: -22.00002098083496
    8. '   ' → logprob: -22.87502098083496
    9. '=M' → logprob: -23.50002098083496
    10. '	M' → logprob: -23.50002098083496

Token 251: '_O' (ID: 11678)
  Prédit: '_O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_O' → logprob: -1.5928495486150496e-05
    2. '_' → logprob: -11.750016212463379
    3. 'O' → logprob: -12.000016212463379
    4. '_OD' → logprob: -13.875016212463379
    5. '_OB' → logprob: -15.875016212463379
    6. '_A' → logprob: -16.000015258789062
    7. '_MOD' → logprob: -16.000015258789062
    8. ' _' → logprob: -16.375015258789062
    9. '\' → logprob: -16.500015258789062
    10. '_OP' → logprob: -16.625015258789062

Token 252: '_D' (ID: 2958)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6327097415924072
    2. '_D' → logprob: -0.7577097415924072
    3. '_MOD' → logprob: -10.882709503173828
    4. 'OD' → logprob: -11.007709503173828
    5. 'Д' → logprob: -11.382709503173828
    6. ' D' → logprob: -11.632709503173828
    7. '	D' → logprob: -11.632709503173828
    8. '_d' → logprob: -12.132709503173828
    9. '__' → logprob: -12.257709503173828
    10. '
' → logprob: -12.382709503173828

Token 253: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.061972059309482574
    2. '(' → logprob: -2.811972141265869
    3. '((' → logprob: -13.436971664428711
    4. '(
' → logprob: -14.186971664428711
    5. ' (' → logprob: -14.686971664428711
    6. 'ans' → logprob: -14.936971664428711
    7. '(answer' → logprob: -14.936971664428711
    8. '(f' → logprob: -15.186971664428711
    9. '(`' → logprob: -15.186971664428711
    10. '('' → logprob: -15.936971664428711

Token 256: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. ' )' → logprob: -11.125016212463379
    3. ')
' → logprob: -14.250016212463379
    4. '*' → logprob: -15.250016212463379
    5. '```' → logprob: -16.000017166137695
    6. '())' → logprob: -16.125017166137695
    7. '`)' → logprob: -16.250017166137695
    8. ')`' → logprob: -16.500017166137695
    9. '))' → logprob: -16.750017166137695
    10. '()' → logprob: -16.875017166137695

Token 257: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00026169343618676066
    2. ' ans' → logprob: -8.250261306762695
    3. '(ans' → logprob: -15.500261306762695
    4. ' ' → logprob: -17.000261306762695
    5. 'not' → logprob: -17.250261306762695
    6. '   ' → logprob: -17.375261306762695
    7. '	ans' → logprob: -17.375261306762695
    8. 'N' → logprob: -18.125261306762695
    9. '  ' → logprob: -18.375261306762695
    10. 'True' → logprob: -18.875261306762695

Token 258: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.25265955924987793
    2. ' else' → logprob: -1.752659559249878
    3. '!=' → logprob: -3.002659559249878
    4. '>' → logprob: -8.627659797668457
    5. ' !=' → logprob: -9.127659797668457
    6. '==' → logprob: -11.752659797668457
    7. ' ' → logprob: -13.377659797668457
    8. '!==' → logprob: -13.877659797668457
    9. '	else' → logprob: -14.377659797668457
    10. '   ' → logprob: -14.627659797668457

Token 259: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5451681974809617e-05
    2. ' ' → logprob: -11.125015258789062
    3. '"' → logprob: -15.125015258789062
    4. ')' → logprob: -16.375015258789062
    5. ''' → logprob: -16.875015258789062
    6. '(' → logprob: -16.875015258789062
    7. '   ' → logprob: -17.250015258789062
    8. '`' → logprob: -17.250015258789062
    9. '```' → logprob: -17.750015258789062
    10. 'print' → logprob: -17.875015258789062

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '"' → logprob: -15.75000286102295
    4. '```' → logprob: -17.375001907348633
    5. ''' → logprob: -17.625001907348633
    6. '`' → logprob: -17.750001907348633
    7. 'print' → logprob: -18.000001907348633
    8. ')' → logprob: -18.375001907348633
    9. '(' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.875001907348633

Token 261: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -15.125000953674316
    4. '))' → logprob: -18.375001907348633
    5. '`)' → logprob: -18.375001907348633
    6. ')`' → logprob: -18.375001907348633
    7. '')' → logprob: -18.875001907348633
    8. ')#' → logprob: -19.125001907348633
    9. '```' → logprob: -19.500001907348633
    10. '())' → logprob: -19.875001907348633

Token 262: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: ' Use' (ID: 7649)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: ' ans' (ID: 3345)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8908168077468872
    2. '<|end|>' → logprob: -0.8908168077468872
    3. 'ans' → logprob: -3.1408166885375977
    4. '```' → logprob: -3.7658166885375977
    5. '\n' → logprob: -4.015816688537598
    6. 'newline' → logprob: -4.015816688537598
    7. '  
' → logprob: -4.265816688537598
    8. ' ' → logprob: -4.265816688537598
    9. '(ans' → logprob: -4.515816688537598
    10. ')' → logprob: -4.640816688537598

Token 266: ' directly' (ID: 8516)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.675800085067749
    2. '<|end|>' → logprob: -0.800800085067749
    3. '
' → logprob: -4.425800323486328
    4. ')' → logprob: -4.800800323486328
    5. '=' → logprob: -4.925800323486328
    6. ' *' → logprob: -5.175800323486328
    7. ' ' → logprob: -5.925800323486328
    8. '```' → logprob: -6.300800323486328
    9. '**' → logprob: -7.050800323486328
    10. '#' → logprob: -7.175800323486328

Token 267: ',' (ID: 11)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.012167592532932758
    2. ' *' → logprob: -4.762167453765869
    3. '<|end|>' → logprob: -6.012167453765869
    4. ')' → logprob: -7.512167453765869
    5. '=' → logprob: -8.512167930603027
    6. ' ' → logprob: -9.262167930603027
    7. '*=' → logprob: -9.262167930603027
    8. '*
' → logprob: -10.637167930603027
    9. '```' → logprob: -10.637167930603027
    10. '**' → logprob: -10.887167930603027

Token 268: ' since' (ID: 3630)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' bool' (ID: 3792)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02597907930612564
    2. '0' → logprob: -4.025979042053223
    3. 'it' → logprob: -5.150979042053223
    4. 'False' → logprob: -6.900979042053223
    5. 'print' → logprob: -8.150979042053223
    6. 'True' → logprob: -8.275979042053223
    7. 'it's' → logprob: -9.150979042053223
    8. ' ans' → logprob: -9.275979042053223
    9. 'bool' → logprob: -9.525979042053223
    10. '
' → logprob: -10.150979042053223

Token 270: 's' (ID: 82)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: ' multiply' (ID: 57388)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: ' ' (ID: 220)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.4965192675590515
    2. 'ints' → logprob: -0.9965192675590515
    3. 'int' → logprob: -3.9965193271636963
    4. ' integers' → logprob: -6.246519088745117
    5. 'numbers' → logprob: -6.496519088745117
    6. '1' → logprob: -7.996519088745117
    7. ' ints' → logprob: -10.746519088745117
    8. ' numbers' → logprob: -12.496519088745117
    9. 'expected' → logprob: -12.621519088745117
    10. 'integer' → logprob: -14.746519088745117

Token 274: '0' (ID: 15)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.12479475885629654
    2. 'inte' → logprob: -2.6247947216033936
    3. 'int' → logprob: -3.1247947216033936
    4. 'numbers' → logprob: -7.124794960021973
    5. '1' → logprob: -9.124794960021973
    6. ' integers' → logprob: -12.249794960021973
    7. ' ints' → logprob: -13.499794960021973
    8. 'nums' → logprob: -14.249794960021973
    9. '```' → logprob: -15.749794960021973
    10. '0' → logprob: -15.999794960021973

Token 275: '/' (ID: 14)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003025729674845934
    2. 'int' → logprob: -8.3753023147583
    3. 'ans' → logprob: -10.2503023147583
    4. 'False' → logprob: -10.5003023147583
    5. 'None' → logprob: -12.7503023147583
    6. 'print' → logprob: -13.3753023147583
    7. 'ints' → logprob: -13.7503023147583
    8. ' ' → logprob: -14.0003023147583
    9. 'True' → logprob: -14.6253023147583
    10. '0' → logprob: -14.8753023147583


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 274
Tokens correctement prédits (1ère position, stricte): 67
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 148
Précision stricte (1ère position): 24.45%
Précision adaptée (1ère position): 27.01%
Précision (top 10): 54.01%
================================================================================
