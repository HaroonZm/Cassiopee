================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

a, b, x = map(int, input().split())

vol = a ** 2 * b
ans = 0

if vol / 2 < x:
    h0 = x / (a ** 2)
    c = 2 * h0 - b
    ans = math.degrees(math.atan((b - c) / a))
else:
    d = (2 * x) / (b * a)
    ans = math.degrees(math.atan(b / d))

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0008702484192326665
    2. 'import' → logprob: -7.875870227813721
    3. '```' → logprob: -9.000870704650879
    4. '\n' → logprob: -9.625870704650879
    5. '\' → logprob: -10.000870704650879
    6. '.pi' → logprob: -10.125870704650879
    7. '<|end|>' → logprob: -10.375870704650879
    8. 'def' → logprob: -10.500870704650879
    9. '.import' → logprob: -11.000870704650879
    10. 'as' → logprob: -11.000870704650879

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.040046416223049164
    2. '=' → logprob: -4.165046215057373
    3. '+' → logprob: -4.790046215057373
    4. '[' → logprob: -5.165046215057373
    5. ' ' → logprob: -6.165046215057373
    6. ')' → logprob: -6.415046215057373
    7. 'd' → logprob: -6.540046215057373
    8. '*' → logprob: -6.540046215057373
    9. ',' → logprob: -7.290046215057373
    10. ' =' → logprob: -7.665046215057373

Token 5: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.7639792561531067
    2. 'b' → logprob: -1.013979196548462
    3. ' ' → logprob: -1.763979196548462
    4. ' =' → logprob: -10.888978958129883
    5. 'space' → logprob: -12.388978958129883
    6. ' ' → logprob: -12.513978958129883
    7. ' )' → logprob: -12.638978958129883
    8. ' ,' → logprob: -12.638978958129883
    9. '=' → logprob: -12.763978958129883
    10. ')' → logprob: -12.888978958129883

Token 6: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12259747833013535
    2. '=' → logprob: -2.2475974559783936
    3. ',' → logprob: -4.872597694396973
    4. ' ' → logprob: -6.872597694396973
    5. ' ,' → logprob: -7.247597694396973
    6. ')' → logprob: -8.872597694396973
    7. '<|end|>' → logprob: -9.122597694396973
    8. '  ' → logprob: -10.872597694396973
    9. ' =
' → logprob: -11.247597694396973
    10. '[' → logprob: -11.872597694396973

Token 7: ' x' (ID: 1215)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1761295646429062
    2. 'c' → logprob: -1.9261295795440674
    3. ' =' → logprob: -4.551129341125488
    4. '=' → logprob: -5.551129341125488
    5. ' ' → logprob: -6.676129341125488
    6. '_c' → logprob: -10.676129341125488
    7. 's' → logprob: -11.051129341125488
    8. '=c' → logprob: -11.676129341125488
    9. ' s' → logprob: -11.801129341125488
    10. ' ' → logprob: -12.426129341125488

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741438627243042
    2. '=' → logprob: -0.9741438627243042
    3. ',' → logprob: -9.849143981933594
    4. ' ' → logprob: -11.974143981933594
    5. ')' → logprob: -12.224143981933594
    6. 'space' → logprob: -14.349143981933594
    7. '<|end|>' → logprob: -15.224143981933594
    8. ' =
' → logprob: -15.474143981933594
    9. 's' → logprob: -15.599143981933594
    10. '_' → logprob: -15.974143981933594

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2700476050376892
    2. 'map' → logprob: -1.895047664642334
    3. ' ' → logprob: -2.520047664642334
    4. '5' → logprob: -6.270047664642334
    5. '10' → logprob: -6.395047664642334
    6. '0' → logprob: -6.895047664642334
    7. '1' → logprob: -7.145047664642334
    8. '3' → logprob: -8.645047187805176
    9. '2' → logprob: -9.645047187805176
    10. '42' → logprob: -9.895047187805176

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25677943229675293
    2. '(int' → logprob: -2.006779432296753
    3. '(lambda' → logprob: -2.881779432296753
    4. '(str' → logprob: -3.631779432296753
    5. '<|end|>' → logprob: -5.631779670715332
    6. '```' → logprob: -6.631779670715332
    7. '(float' → logprob: -7.256779670715332
    8. 'int' → logprob: -7.381779670715332
    9. '[int' → logprob: -7.631779670715332
    10. '(eval' → logprob: -8.131779670715332

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3225921392440796
    2. ')' → logprob: -1.8225921392440796
    3. '(' → logprob: -2.197592258453369
    4. '(int' → logprob: -8.197591781616211
    5. '```' → logprob: -8.197591781616211
    6. ')(' → logprob: -8.322591781616211
    7. '(math' → logprob: -8.447591781616211
    8. '`)' → logprob: -8.697591781616211
    9. '(token' → logprob: -8.947591781616211
    10. '(range' → logprob: -8.947591781616211

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.252267062664032
    2. ' input' → logprob: -1.5022671222686768
    3. ')' → logprob: -8.377266883850098
    4. '(input' → logprob: -9.252266883850098
    5. ',input' → logprob: -12.627266883850098
    6. ' )' → logprob: -12.752266883850098
    7. '```' → logprob: -13.127266883850098
    8. '=input' → logprob: -13.627266883850098
    9. 'math' → logprob: -14.752266883850098
    10. ' ' → logprob: -15.252266883850098

Token 13: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1114223375916481
    2. '()' → logprob: -2.486422300338745
    3. ')' → logprob: -4.236422538757324
    4. '(' → logprob: -5.861422538757324
    5. '().' → logprob: -5.986422538757324
    6. '());' → logprob: -6.861422538757324
    7. '()))' → logprob: -8.361422538757324
    8. '();)' → logprob: -8.361422538757324
    9. '(""))' → logprob: -8.986422538757324
    10. '(()' → logprob: -9.111422538757324

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009312293259426951
    2. 'strip' → logprob: -7.000931262969971
    3. 'rstrip' → logprob: -10.875930786132812
    4. ' split' → logprob: -14.000930786132812
    5. '(split' → logprob: -16.625930786132812
    6. 'read' → logprob: -17.375930786132812
    7. ')' → logprob: -18.125930786132812
    8. 'spl' → logprob: -18.250930786132812
    9. ' strip' → logprob: -19.375930786132812
    10. ' readline' → logprob: -20.125930786132812

Token 15: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00617253640666604
    2. '))' → logprob: -5.1311726570129395
    3. '())' → logprob: -8.756172180175781
    4. ')))' → logprob: -10.506172180175781
    5. '`)' → logprob: -11.006172180175781
    6. '()' → logprob: -12.006172180175781
    7. '),' → logprob: -12.131172180175781
    8. '(' → logprob: -12.256172180175781
    9. ')`' → logprob: -12.506172180175781
    10. ')])' → logprob: -12.756172180175781

Token 16: 'vol' (ID: 2978)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20760662853717804
    2. 'area' → logprob: -2.707606554031372
    3. 'r' → logprob: -3.582606554031372
    4. 'h' → logprob: -3.707606554031372
    5. 'c' → logprob: -3.707606554031372
    6. 'theta' → logprob: -4.457606792449951
    7. 's' → logprob: -4.832606792449951
    8. ')' → logprob: -5.082606792449951
    9. 'angle' → logprob: -5.707606792449951
    10. 'd' → logprob: -5.957606792449951

Token 17: ' =' (ID: 314)
  Prédit: 'ume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ume' → logprob: -0.006163766607642174
    2. '=' → logprob: -5.131163597106934
    3. ' =' → logprob: -9.006163597106934
    4. '_' → logprob: -10.256163597106934
    5. 'u' → logprob: -10.881163597106934
    6. 'ime' → logprob: -11.256163597106934
    7. ')' → logprob: -11.381163597106934
    8. 'um' → logprob: -11.506163597106934
    9. '()' → logprob: -12.131163597106934
    10. ' ume' → logprob: -12.131163597106934

Token 18: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.37223580479621887
    2. 'a' → logprob: -2.6222357749938965
    3. ' (' → logprob: -2.6222357749938965
    4. ' min' → logprob: -2.7472357749938965
    5. ' math' → logprob: -2.8722357749938965
    6. ' ' → logprob: -3.8722357749938965
    7. 'math' → logprob: -4.4972357749938965
    8. 'min' → logprob: -5.1222357749938965
    9. '(math' → logprob: -6.1222357749938965
    10. '(a' → logprob: -6.6222357749938965

Token 19: ' **' (ID: 6240)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.330730140209198
    2. '*' → logprob: -1.3307301998138428
    3. '*b' → logprob: -4.330729961395264
    4. '**' → logprob: -5.580729961395264
    5. ' **' → logprob: -7.955729961395264
    6. '*a' → logprob: -11.330730438232422
    7. ' ' → logprob: -11.455730438232422
    8. '＊' → logprob: -13.080730438232422
    9. '*v' → logprob: -13.330730438232422
    10. '*w' → logprob: -13.830730438232422

Token 20: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011495060753077269
    2. '3' → logprob: -6.876149654388428
    3. ' ' → logprob: -9.12614917755127
    4. '-' → logprob: -12.37614917755127
    5. '0' → logprob: -14.50114917755127
    6. '```' → logprob: -14.56364917755127
    7. '1' → logprob: -14.75114917755127
    8. '(' → logprob: -15.12614917755127
    9. ' ' → logprob: -15.18864917755127
    10. '²' → logprob: -15.43864917755127

Token 21: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005617309361696243
    2. '3' → logprob: -7.625561714172363
    3. '-' → logprob: -9.750561714172363
    4. ' ' → logprob: -11.500561714172363
    5. 'b' → logprob: -13.625561714172363
    6. '(' → logprob: -13.750561714172363
    7. '(-' → logprob: -14.500561714172363
    8. '```' → logprob: -14.625561714172363
    9. '1' → logprob: -14.750561714172363
    10. '   ' → logprob: -15.500561714172363

Token 22: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.15056836605072021
    2. '*' → logprob: -2.0255684852600098
    3. '*b' → logprob: -4.90056848526001
    4. 'b' → logprob: -8.025568008422852
    5. ' ' → logprob: -10.400568008422852
    6. '*c' → logprob: -10.775568008422852
    7. '*h' → logprob: -11.275568008422852
    8. '*a' → logprob: -11.650568008422852
    9. ' b' → logprob: -12.400568008422852
    10. '*x' → logprob: -13.150568008422852

Token 23: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002019907406065613
    2. ' b' → logprob: -8.875202178955078
    3. '(' → logprob: -10.375202178955078
    4. '(b' → logprob: -10.625202178955078
    5. 'a' → logprob: -13.375202178955078
    6. ' (' → logprob: -13.375202178955078
    7. '(a' → logprob: -13.750202178955078
    8. '	b' → logprob: -14.875202178955078
    9. 'x' → logprob: -15.000202178955078
    10. '((' → logprob: -15.625202178955078

Token 24: '
' (ID: 198)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6336272954940796
    2. ' *' → logprob: -1.2586272954940796
    3. '/' → logprob: -2.758627414703369
    4. '*' → logprob: -2.883627414703369
    5. ' ' → logprob: -3.258627414703369
    6. ' -' → logprob: -3.883627414703369
    7. '-' → logprob: -6.008627414703369
    8. ' //' → logprob: -6.383627414703369
    9. '**' → logprob: -8.258626937866211
    10. 'if' → logprob: -8.258626937866211

Token 25: 'ans' (ID: 616)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.6213396787643433
    2. ' if' → logprob: -1.6213396787643433
    3. 'if' → logprob: -1.6213396787643433
    4. ' /' → logprob: -1.8713396787643433
    5. ' *' → logprob: -2.246339797973633
    6. '/' → logprob: -2.246339797973633
    7. ' -' → logprob: -4.246339797973633
    8. ' ' → logprob: -4.496339797973633
    9. '-' → logprob: -5.121339797973633
    10. 'x' → logprob: -6.246339797973633

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014173848554491997
    2. '=' → logprob: -4.264173984527588
    3. ' ' → logprob: -11.88917350769043
    4. ',' → logprob: -13.88917350769043
    5. '  ' → logprob: -14.38917350769043
    6. ':' → logprob: -15.01417350769043
    7. ' =
' → logprob: -15.26417350769043
    8. ')' → logprob: -15.38917350769043
    9. ' =)' → logprob: -15.76417350769043
    10. 's' → logprob: -16.26417350769043

Token 27: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4475286900997162
    2. 'vol' → logprob: -1.5725287199020386
    3. ' x' → logprob: -2.947528600692749
    4. '(' → logprob: -4.072528839111328
    5. ' vol' → logprob: -4.072528839111328
    6. '2' → logprob: -4.447528839111328
    7. ' (' → logprob: -4.447528839111328
    8. ' ' → logprob: -4.447528839111328
    9. '"' → logprob: -4.697528839111328
    10. '(vol' → logprob: -5.322528839111328

Token 28: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3414303660392761
    2. 'vol' → logprob: -2.341430425643921
    3. '0' → logprob: -2.591430425643921
    4. '(' → logprob: -3.341430425643921
    5. '2' → logprob: -3.716430425643921
    6. 'math' → logprob: -4.466430187225342
    7. '(x' → logprob: -4.466430187225342
    8. '"' → logprob: -5.091430187225342
    9. 'min' → logprob: -5.341430187225342
    10. '"x' → logprob: -5.591430187225342

Token 29: '

' (ID: 279)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1763172596693039
    2. 'if' → logprob: -2.4263172149658203
    3. ' ' → logprob: -2.6763172149658203
    4. ' =' → logprob: -6.55131721496582
    5. '<|end|>' → logprob: -7.17631721496582
    6. '=' → logprob: -7.55131721496582
    7. ':' → logprob: -8.30131721496582
    8. '(' → logprob: -8.55131721496582
    9. '*' → logprob: -8.55131721496582
    10. ' *' → logprob: -8.67631721496582

Token 30: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04570896923542023
    2. ' if' → logprob: -3.2957088947296143
    3. ' ' → logprob: -5.045709133148193
    4. '<|end|>' → logprob: -7.795709133148193
    5. 'If' → logprob: -8.545708656311035
    6. '```' → logprob: -9.545708656311035
    7. '\n' → logprob: -9.670708656311035
    8. 'x' → logprob: -9.670708656311035
    9. '*' → logprob: -10.045708656311035
    10. 'i' → logprob: -10.295708656311035

Token 31: ' vol' (ID: 2639)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.48564860224723816
    2. ' x' → logprob: -0.9856486320495605
    3. ' vol' → logprob: -4.8606486320495605
    4. '2' → logprob: -6.6106486320495605
    5. 'vol' → logprob: -6.6106486320495605
    6. ' ' → logprob: -7.1106486320495605
    7. 'a' → logprob: -9.485648155212402
    8. ' a' → logprob: -10.110648155212402
    9. '(x' → logprob: -10.735648155212402
    10. ' volume' → logprob: -11.235648155212402

Token 32: ' /' (ID: 820)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.29600584506988525
    2. ' <' → logprob: -1.7960058450698853
    3. ' <=' → logprob: -3.5460057258605957
    4. '>=' → logprob: -4.421005725860596
    5. ' ==' → logprob: -4.546005725860596
    6. ' >' → logprob: -4.671005725860596
    7. '<' → logprob: -4.796005725860596
    8. '/' → logprob: -4.921005725860596
    9. ' /' → logprob: -5.171005725860596
    10. '>' → logprob: -5.796005725860596

Token 33: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02794128656387329
    2. 'x' → logprob: -4.2779412269592285
    3. ' ' → logprob: -4.6529412269592285
    4. '=' → logprob: -5.6529412269592285
    5. ' x' → logprob: -7.7779412269592285
    6. '3' → logprob: -8.777941703796387
    7. 'a' → logprob: -11.027941703796387
    8. '(x' → logprob: -11.527941703796387
    9. '(' → logprob: -12.027941703796387
    10. '6' → logprob: -12.402941703796387

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007049837149679661
    2. 'x' → logprob: -5.007050037384033
    3. ' ' → logprob: -8.257049560546875
    4. '=' → logprob: -10.757049560546875
    5. '(x' → logprob: -11.257049560546875
    6. '3' → logprob: -11.382049560546875
    7. ' x' → logprob: -11.507049560546875
    8. '(' → logprob: -11.882049560546875
    9. 'a' → logprob: -12.632049560546875
    10. '```' → logprob: -13.944549560546875

Token 35: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6634401082992554
    2. ' >=' → logprob: -1.2884401082992554
    3. '>' → logprob: -2.413440227508545
    4. ' <' → logprob: -2.663440227508545
    5. '>=' → logprob: -3.288440227508545
    6. '<' → logprob: -4.913440227508545
    7. ' <=' → logprob: -6.163440227508545
    8. ' ==' → logprob: -6.163440227508545
    9. '==' → logprob: -7.538440227508545
    10. '<=' → logprob: -8.163439750671387

Token 36: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006724722217768431
    2. ' x' → logprob: -5.006724834442139
    3. '	x' → logprob: -12.63172435760498
    4. ' ' → logprob: -12.88172435760498
    5. '   ' → logprob: -13.63172435760498
    6. '  ' → logprob: -14.63172435760498
    7. '=' → logprob: -15.13172435760498
    8. 'a' → logprob: -15.38172435760498
    9. ' ' → logprob: -15.38172435760498
    10. '>x' → logprob: -15.50672435760498

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002441741817165166
    2. ' :' → logprob: -8.375244140625
    3. ':
' → logprob: -11.750244140625
    4. '+:' → logprob: -13.625244140625
    5. ':**' → logprob: -13.625244140625
    6. '>:' → logprob: -14.000244140625
    7. '):' → logprob: -14.125244140625
    8. '*:' → logprob: -14.875244140625
    9. '#:' → logprob: -15.375244140625
    10. ',:' → logprob: -15.875244140625

Token 38: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7704038619995117
    2. 'ans' → logprob: -1.6454038619995117
    3. 'print' → logprob: -2.0204038619995117
    4. ' =' → logprob: -2.7704038619995117
    5. 'angle' → logprob: -3.3954038619995117
    6. '\n' → logprob: -4.270403861999512
    7. ' ans' → logprob: -4.395403861999512
    8. 'import' → logprob: -4.395403861999512
    9. ':
' → logprob: -4.395403861999512
    10. '   ' → logprob: -4.645403861999512

Token 39: ' h' (ID: 312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8047738075256348
    2. 'angle' → logprob: -0.9297738075256348
    3. ' angle' → logprob: -2.4297738075256348
    4. 'print' → logprob: -4.304773807525635
    5. 'theta' → logprob: -4.679773807525635
    6. ' theta' → logprob: -4.929773807525635
    7. ' ans' → logprob: -4.929773807525635
    8. 'import' → logprob: -5.054773807525635
    9. 'ans' → logprob: -5.179773807525635
    10. ' print' → logprob: -5.929773807525635

Token 40: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0057376292534172535
    2. '=' → logprob: -5.255737781524658
    3. ' ' → logprob: -8.2557373046875
    4. '   ' → logprob: -8.8807373046875
    5. '  ' → logprob: -10.7557373046875
    6. 'e' → logprob: -11.2557373046875
    7. 'eight' → logprob: -11.3807373046875
    8. '=(' → logprob: -11.8807373046875
    9. '=e' → logprob: -11.8807373046875
    10. '=float' → logprob: -12.5057373046875

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009832000359892845
    2. '=' → logprob: -4.63483190536499
    3. ' ' → logprob: -10.009832382202148
    4. '   ' → logprob: -11.384832382202148
    5. '＝' → logprob: -12.634832382202148
    6. '  ' → logprob: -12.884832382202148
    7. 't' → logprob: -13.134832382202148
    8. '-' → logprob: -13.259832382202148
    9. '    ' → logprob: -13.634832382202148
    10. 'ight' → logprob: -13.759832382202148

Token 42: ' x' (ID: 1215)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.717674970626831
    2. '2' → logprob: -0.717674970626831
    3. 'b' → logprob: -4.34267520904541
    4. ' (' → logprob: -5.96767520904541
    5. '3' → logprob: -6.09267520904541
    6. '(b' → logprob: -6.71767520904541
    7. ' ' → logprob: -7.21767520904541
    8. 'a' → logprob: -7.21767520904541
    9. '6' → logprob: -7.34267520904541
    10. 'x' → logprob: -7.46767520904541

Token 43: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5007525682449341
    2. '*' → logprob: -1.750752568244934
    3. '/' → logprob: -1.750752568244934
    4. ' *' → logprob: -3.1257524490356445
    5. '/(' → logprob: -6.1257524490356445
    6. '2' → logprob: -9.000752449035645
    7. ' ' → logprob: -9.500752449035645
    8. ' /(' → logprob: -9.750752449035645
    9. '   ' → logprob: -9.875752449035645
    10. '0' → logprob: -10.750752449035645

Token 44: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5872622728347778
    2. '(a' → logprob: -0.8372622728347778
    3. ' (' → logprob: -5.212262153625488
    4. '(' → logprob: -5.462262153625488
    5. ' a' → logprob: -6.587262153625488
    6. 'b' → logprob: -9.837262153625488
    7. '/a' → logprob: -10.587262153625488
    8. '(b' → logprob: -10.837262153625488
    9. '(math' → logprob: -11.587262153625488
    10. '/' → logprob: -11.712262153625488

Token 45: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1908581256866455
    2. '(a' → logprob: -1.8158581256866455
    3. ' (' → logprob: -5.315857887268066
    4. ' a' → logprob: -5.440857887268066
    5. '(' → logprob: -6.440857887268066
    6. 'b' → logprob: -9.565857887268066
    7. '(math' → logprob: -10.815857887268066
    8. '(b' → logprob: -11.315857887268066
    9. '   ' → logprob: -11.315857887268066
    10. 'h' → logprob: -11.690857887268066

Token 46: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7666714787483215
    2. '/' → logprob: -1.2666714191436768
    3. ')' → logprob: -1.6416714191436768
    4. '/a' → logprob: -3.2666714191436768
    5. '*' → logprob: -5.516671657562256
    6. ' /' → logprob: -5.516671657562256
    7. '/b' → logprob: -5.891671657562256
    8. 'b' → logprob: -6.141671657562256
    9. '2' → logprob: -6.391671657562256
    10. 'a' → logprob: -7.016671657562256

Token 47: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003572388319298625
    2. ' ' → logprob: -5.753572463989258
    3. '1' → logprob: -8.128572463989258
    4. '   ' → logprob: -10.003572463989258
    5. ')' → logprob: -10.878572463989258
    6. '  ' → logprob: -11.003572463989258
    7. '**' → logprob: -13.316072463989258
    8. '0' → logprob: -13.503572463989258
    9. '-' → logprob: -13.566072463989258
    10. '[' → logprob: -13.628572463989258

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038264848990365863
    2. ' ' → logprob: -8.500382423400879
    3. '1' → logprob: -9.125382423400879
    4. '   ' → logprob: -10.250382423400879
    5. '  ' → logprob: -12.000382423400879
    6. '3' → logprob: -12.125382423400879
    7. '-' → logprob: -12.187882423400879
    8. '```' → logprob: -12.562882423400879
    9. '**' → logprob: -13.000382423400879
    10. '*' → logprob: -13.500382423400879

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031815171241760254
    2. '<|end|>' → logprob: -6.878181457519531
    3. 'b' → logprob: -7.003181457519531
    4. ')
' → logprob: -7.628181457519531
    5. ' )' → logprob: -8.878181457519531
    6. '   ' → logprob: -9.003181457519531
    7. ')b' → logprob: -9.003181457519531
    8. '0' → logprob: -9.253181457519531
    9. '2' → logprob: -10.253181457519531
    10. '/' → logprob: -10.378181457519531

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5057753920555115
    2. '
' → logprob: -2.0057754516601562
    3. 'else' → logprob: -2.0057754516601562
    4. 'b' → logprob: -2.3807754516601562
    5. ' else' → logprob: -4.880775451660156
    6. '0' → logprob: -5.505775451660156
    7. 'a' → logprob: -5.880775451660156
    8. '2' → logprob: -6.130775451660156
    9. ')' → logprob: -6.255775451660156
    10. 'h' → logprob: -6.255775451660156

Token 51: ' c' (ID: 274)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8459019064903259
    2. '2' → logprob: -1.3459019660949707
    3. '*' → logprob: -1.4709019660949707
    4. 'b' → logprob: -3.5959019660949707
    5. '   ' → logprob: -4.345901966094971
    6. '(' → logprob: -4.720901966094971
    7. 'h' → logprob: -5.220901966094971
    8. ')' → logprob: -5.470901966094971
    9. '0' → logprob: -5.595901966094971
    10. ' /' → logprob: -5.720901966094971

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7707446813583374
    2. 'os' → logprob: -1.1457446813583374
    3. 'ont' → logprob: -2.520744800567627
    4. '1' → logprob: -3.895744800567627
    5. 'on' → logprob: -4.020744800567627
    6. 'h' → logprob: -4.645744800567627
    7. 'alc' → logprob: -4.770744800567627
    8. 'o' → logprob: -4.895744800567627
    9. 'r' → logprob: -5.145744800567627
    10. 'm' → logprob: -5.395744800567627

Token 53: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.5149096250534058
    2. ' b' → logprob: -1.6399096250534058
    3. 'b' → logprob: -1.8899096250534058
    4. ' ' → logprob: -2.2649097442626953
    5. '2' → logprob: -2.6399097442626953
    6. ' math' → logprob: -2.8899097442626953
    7. ' h' → logprob: -3.1399097442626953
    8. ' a' → logprob: -3.1399097442626953
    9. 'h' → logprob: -3.1399097442626953
    10. 'a' → logprob: -3.6399097442626953

Token 54: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5531401038169861
    2. 'b' → logprob: -1.1781401634216309
    3. '3' → logprob: -3.303140163421631
    4. 'h' → logprob: -3.553140163421631
    5. 'a' → logprob: -4.053140163421631
    6. 'math' → logprob: -4.303140163421631
    7. '(' → logprob: -4.928140163421631
    8. '6' → logprob: -5.178140163421631
    9. ' math' → logprob: -6.678140163421631
    10. '(math' → logprob: -6.678140163421631

Token 55: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.40957972407341003
    2. '*' → logprob: -1.6595797538757324
    3. '*b' → logprob: -2.0345797538757324
    4. ' -' → logprob: -5.284579753875732
    5. 'b' → logprob: -5.534579753875732
    6. '*(' → logprob: -5.909579753875732
    7. '-' → logprob: -6.784579753875732
    8. '*h' → logprob: -6.909579753875732
    9. '*a' → logprob: -8.284579277038574
    10. '0' → logprob: -8.534579277038574

Token 56: ' h' (ID: 312)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7758756875991821
    2. 'h' → logprob: -0.7758756875991821
    3. '*' → logprob: -3.4008755683898926
    4. 'a' → logprob: -3.6508755683898926
    5. '*b' → logprob: -5.525875568389893
    6. ' *' → logprob: -5.775875568389893
    7. '*h' → logprob: -6.025875568389893
    8. ' b' → logprob: -6.025875568389893
    9. ' h' → logprob: -6.275875568389893
    10. ' (' → logprob: -6.650875568389893

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004462812503334135
    2. 'b' → logprob: -8.250446319580078
    3. 'a' → logprob: -9.750446319580078
    4. 'c' → logprob: -10.000446319580078
    5. '-' → logprob: -11.125446319580078
    6. '_' → logprob: -11.375446319580078
    7. 's' → logprob: -11.875446319580078
    8. 'o' → logprob: -11.937946319580078
    9. 'e' → logprob: -12.312946319580078
    10. '[' → logprob: -12.937946319580078

Token 58: ' -' (ID: 533)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2136090248823166
    2. ' *' → logprob: -2.088608980178833
    3. '/' → logprob: -3.463608980178833
    4. '/b' → logprob: -4.588609218597412
    5. 'b' → logprob: -4.963609218597412
    6. '*' → logprob: -4.963609218597412
    7. '/a' → logprob: -5.713609218597412
    8. '*b' → logprob: -5.838609218597412
    9. ' b' → logprob: -6.963609218597412
    10. 'a' → logprob: -7.463609218597412

Token 59: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0010336418636143208
    2. ' b' → logprob: -6.876033782958984
    3. 'a' → logprob: -14.876033782958984
    4. ' ' → logprob: -15.626033782958984
    5. '	b' → logprob: -15.751033782958984
    6. 'h' → logprob: -16.376033782958984
    7. '3' → logprob: -16.626033782958984
    8. '2' → logprob: -17.501033782958984
    9. ')b' → logprob: -17.751033782958984
    10. '  ' → logprob: -18.001033782958984

Token 60: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34285104274749756
    2. '   ' → logprob: -2.342851161956787
    3. ')' → logprob: -2.717851161956787
    4. 'else' → logprob: -2.967851161956787
    5. ' else' → logprob: -4.342851161956787
    6. '
' → logprob: -4.467851161956787
    7. '    
' → logprob: -4.967851161956787
    8. '  
' → logprob: -5.092851161956787
    9. '**' → logprob: -5.342851161956787
    10. ' math' → logprob: -5.342851161956787

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09041330963373184
    2. ' math' → logprob: -3.0904133319854736
    3. 'math' → logprob: -3.7154133319854736
    4. ')' → logprob: -5.0904130935668945
    5. 'else' → logprob: -5.2154130935668945
    6. 'a' → logprob: -6.8404130935668945
    7. '
' → logprob: -7.2154130935668945
    8. ' else' → logprob: -7.4654130935668945
    9. '(math' → logprob: -8.465413093566895
    10. '0' → logprob: -8.590413093566895

Token 62: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6203747987747192
    2. 'math' → logprob: -1.3703747987747192
    3. ')' → logprob: -2.9953746795654297
    4. '/' → logprob: -3.1203746795654297
    5. ' math' → logprob: -3.6203746795654297
    6. 'import' → logprob: -3.7453746795654297
    7. '/math' → logprob: -3.7453746795654297
    8. '*' → logprob: -4.99537467956543
    9. 'print' → logprob: -5.12037467956543
    10. 'ans' (adapté à ' ans') → logprob: -5.49537467956543

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859452322125435
    2. '=' → logprob: -3.0485944747924805
    3. ' ' → logprob: -12.42359447479248
    4. ' +=' → logprob: -13.67359447479248
    5. '＝' → logprob: -14.54859447479248
    6. '+=' → logprob: -15.17359447479248
    7. ' *=' → logprob: -15.29859447479248
    8. '  ' → logprob: -15.67359447479248
    9. ' /=' → logprob: -15.67359447479248
    10. ' ' → logprob: -15.92359447479248

Token 64: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.5314877033233643
    2. ' math' → logprob: -0.9064877033233643
    3. ' str' → logprob: -6.031487464904785
    4. '(math' → logprob: -6.531487464904785
    5. '180' → logprob: -6.781487464904785
    6. 'str' → logprob: -7.156487464904785
    7. '   ' → logprob: -7.281487464904785
    8. ' ' → logprob: -7.406487464904785
    9. '90' → logprob: -7.906487464904785
    10. '360' → logprob: -9.031487464904785

Token 65: '.de' (ID: 3906)
  Prédit: '.atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.atan' → logprob: -0.0024657866451889277
    2. '.de' → logprob: -6.627465724945068
    3. '.' → logprob: -7.002465724945068
    4. '.ac' → logprob: -9.127466201782227
    5. '.as' → logprob: -9.377466201782227
    6. '.t' → logprob: -10.377466201782227
    7. '.pi' → logprob: -13.627466201782227
    8. '.f' → logprob: -14.002466201782227
    9. '.sqrt' → logprob: -14.252466201782227
    10. '.sin' → logprob: -14.877466201782227

Token 66: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -0.256428599357605
    2. 'g' → logprob: -1.506428599357605
    3. 'gree' → logprob: -6.3814287185668945
    4. 'gr' → logprob: -6.6314287185668945
    5. 'gs' → logprob: -6.8814287185668945
    6. 'gre' → logprob: -8.506428718566895
    7. 'ng' → logprob: -9.006428718566895
    8. 'r' → logprob: -10.006428718566895
    9. 'gress' → logprob: -10.381428718566895
    10. 'gres' → logprob: -11.256428718566895

Token 67: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.03807052597403526
    2. '(' → logprob: -3.2880704402923584
    3. '(Math' → logprob: -10.788070678710938
    4. '(
' → logprob: -12.663070678710938
    5. ' (' → logprob: -13.413070678710938
    6. '(mat' → logprob: -13.913070678710938
    7. '(

' → logprob: -14.038070678710938
    8. 'math' → logprob: -14.538070678710938
    9. '(ar' → logprob: -15.163070678710938
    10. '(ast' → logprob: -15.538070678710938

Token 68: '.atan' (ID: 157113)
  Prédit: '.atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.atan' → logprob: -0.0015550976386293769
    2. '.' → logprob: -6.5015549659729
    3. '.ac' → logprob: -10.001555442810059
    4. '.as' → logprob: -12.001555442810059
    5. ').' → logprob: -14.376555442810059
    6. '.at' → logprob: -15.376555442810059
    7. '.t' → logprob: -15.876555442810059
    8. ' .' → logprob: -16.501554489135742
    9. '‌.' → logprob: -16.501554489135742
    10. '.)' → logprob: -17.126554489135742

Token 69: '((' (ID: 2054)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0030397435184568167
    2. '(' → logprob: -6.503039836883545
    3. ' (' → logprob: -6.628039836883545
    4. ')' → logprob: -9.003039360046387
    5. '((' → logprob: -10.003039360046387
    6. 'c' → logprob: -10.878039360046387
    7. '(a' → logprob: -12.003039360046387
    8. ')c' → logprob: -12.003039360046387
    9. ' c' → logprob: -12.628039360046387
    10. ')(' → logprob: -13.128039360046387

Token 70: 'b' (ID: 65)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.19033387303352356
    2. 'a' → logprob: -1.8153338432312012
    3. ' c' → logprob: -4.940333843231201
    4. ' a' → logprob: -6.440333843231201
    5. '2' → logprob: -7.315333843231201
    6. '   ' → logprob: -8.31533432006836
    7. '	c' → logprob: -8.56533432006836
    8. ' ' → logprob: -8.69033432006836
    9. 'b' → logprob: -9.06533432006836
    10. ')c' → logprob: -9.31533432006836

Token 71: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6050084233283997
    2. ' /' → logprob: -1.3550083637237549
    3. ' -' → logprob: -2.480008363723755
    4. ' )' → logprob: -2.730008363723755
    5. '-' → logprob: -3.730008363723755
    6. '/' → logprob: -3.980008363723755
    7. ' ' → logprob: -6.105008602142334
    8. ')/' → logprob: -7.480008602142334
    9. ')/(' → logprob: -7.480008602142334
    10. '/c' → logprob: -8.105008125305176

Token 72: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.43546828627586365
    2. ' c' → logprob: -1.060468316078186
    3. ')' → logprob: -5.5604681968688965
    4. ')c' → logprob: -6.1854681968688965
    5. '	c' → logprob: -7.5604681968688965
    6. 'h' → logprob: -9.560468673706055
    7. '   ' → logprob: -9.560468673706055
    8. ' ' → logprob: -9.810468673706055
    9. ' )' → logprob: -10.560468673706055
    10. ')/' → logprob: -10.810468673706055

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01496720127761364
    2. ' )' → logprob: -4.26496696472168
    3. ' /' → logprob: -8.01496696472168
    4. '/' → logprob: -8.38996696472168
    5. ')/' → logprob: -8.38996696472168
    6. '/a' → logprob: -12.13996696472168
    7. '   ' → logprob: -12.63996696472168
    8. ' ' → logprob: -12.63996696472168
    9. ')/(' → logprob: -12.63996696472168
    10. ')
' → logprob: -14.13996696472168

Token 74: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.43583908677101135
    2. ' /' → logprob: -1.060839056968689
    3. ')' → logprob: -5.0608391761779785
    4. '/a' → logprob: -7.4358391761779785
    5. '/
' → logprob: -9.81083869934082
    6. ' ' → logprob: -9.93583869934082
    7. ' /
' → logprob: -10.81083869934082
    8. ' )' → logprob: -11.06083869934082
    9. '   ' → logprob: -11.31083869934082
    10. ')/' → logprob: -12.06083869934082

Token 75: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014171971939504147
    2. ' a' → logprob: -4.264172077178955
    3. '	a' → logprob: -12.264171600341797
    4. ')a' → logprob: -13.139171600341797
    5. ' ' → logprob: -14.389171600341797
    6. ')' → logprob: -14.889171600341797
    7. '(a' → logprob: -15.639171600341797
    8. '   ' → logprob: -16.264171600341797
    9. '-a' → logprob: -16.264171600341797
    10. '#a' → logprob: -16.514171600341797

Token 76: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007195804500952363
    2. ')' → logprob: -7.6257195472717285
    3. '))
' → logprob: -8.625720024108887
    4. ' ))' → logprob: -10.250720024108887
    5. '))

' → logprob: -11.625720024108887
    6. '))
' → logprob: -12.750720024108887
    7. ' ' → logprob: -13.500720024108887
    8. ')))' → logprob: -13.875720024108887
    9. '2' → logprob: -14.875720024108887
    10. '1' → logprob: -14.875720024108887

Token 77: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8710034489631653
    2. ')' → logprob: -1.1210033893585205
    3. '\n' → logprob: -2.3710033893585205
    4. ' else' → logprob: -2.3710033893585205
    5. '
' → logprob: -3.2460033893585205
    6. ':' → logprob: -4.3710036277771
    7. '<|end|>' → logprob: -5.6210036277771
    8. 'b' → logprob: -6.2460036277771
    9. ')
' → logprob: -6.7460036277771
    10. '```' → logprob: -6.9960036277771

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6331787109375
    2. ':
' → logprob: -0.7581787109375
    3. '
' → logprob: -7.8831787109375
    4. '   ' → logprob: -9.0081787109375
    5. ':
' → logprob: -11.0081787109375
    6. ':

' → logprob: -11.1331787109375
    7. '```' → logprob: -11.6331787109375
    8. ' :
' → logprob: -12.1331787109375
    9. '):
' → logprob: -12.5081787109375
    10. '  
' → logprob: -12.7581787109375

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057590000331401825
    2. ' h' → logprob: -4.057590007781982
    3. 'h' → logprob: -4.307590007781982
    4. '```' → logprob: -4.432590007781982
    5. ' ans' → logprob: -5.057590007781982
    6. ' math' → logprob: -6.307590007781982
    7. '``' → logprob: -6.807590007781982
    8. 'ans' → logprob: -6.932590007781982
    9. '    ' → logprob: -7.307590007781982
    10. ' ' → logprob: -7.557590007781982

Token 80: ' d' (ID: 272)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.11145678162574768
    2. 'h' → logprob: -2.986456871032715
    3. '   ' → logprob: -3.361456871032715
    4. ' ans' → logprob: -4.361456871032715
    5. 'angle' → logprob: -6.486456871032715
    6. 'ang' → logprob: -6.986456871032715
    7. 'c' → logprob: -7.111456871032715
    8. '	ans' → logprob: -7.111456871032715
    9. 'a' → logprob: -7.361456871032715
    10. ' h' → logprob: -7.486456871032715

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008137806318700314
    2. '=' → logprob: -5.1331377029418945
    3. '0' → logprob: -6.6331377029418945
    4. ' ' → logprob: -8.133137702941895
    5. 'f' → logprob: -8.383137702941895
    6. 'd' → logprob: -9.383137702941895
    7. 'x' → logprob: -9.883137702941895
    8. '  ' → logprob: -10.258137702941895
    9. 'e' → logprob: -10.258137702941895
    10. '1' → logprob: -10.508137702941895

Token 82: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7002809047698975
    2. '(' → logprob: -0.9502809047698975
    3. ' (' → logprob: -2.9502809047698975
    4. 'x' → logprob: -3.3252809047698975
    5. ' ' → logprob: -3.8252809047698975
    6. 'b' → logprob: -6.075281143188477
    7. 'a' → logprob: -6.575281143188477
    8. ' x' → logprob: -6.700281143188477
    9. ' math' → logprob: -7.450281143188477
    10. '(b' → logprob: -8.450281143188477

Token 83: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011582481674849987
    2. 'a' → logprob: -5.136582374572754
    3. 'x' → logprob: -6.011582374572754
    4. ' ' → logprob: -6.511582374572754
    5. '(' → logprob: -6.886582374572754
    6. 'b' → logprob: -7.386582374572754
    7. '   ' → logprob: -11.136582374572754
    8. '(a' → logprob: -11.636582374572754
    9. ' a' → logprob: -11.886582374572754
    10. '  ' → logprob: -12.261582374572754

Token 84: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6338098645210266
    2. ' *' → logprob: -0.7588098645210266
    3. '*x' → logprob: -6.883810043334961
    4. 'x' → logprob: -9.133810043334961
    5. ' ' → logprob: -10.008810043334961
    6. ' x' → logprob: -11.133810043334961
    7. ')' → logprob: -12.133810043334961
    8. '.' → logprob: -12.383810043334961
    9. '*object' → logprob: -13.383810043334961
    10. '   ' → logprob: -14.133810043334961

Token 85: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011093802750110626
    2. ' x' → logprob: -4.636093616485596
    3. '*' → logprob: -7.636093616485596
    4. 'b' → logprob: -7.761093616485596
    5. 'a' → logprob: -7.886093616485596
    6. '*x' → logprob: -11.011094093322754
    7. ' *' → logprob: -11.136094093322754
    8. ' ' → logprob: -12.636094093322754
    9. 'vol' → logprob: -12.886094093322754
    10. ' b' → logprob: -12.886094093322754

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026601969730108976
    2. ')/(' → logprob: -6.502660274505615
    3. ' )' → logprob: -7.002660274505615
    4. ')/' → logprob: -9.377659797668457
    5. '/' → logprob: -9.627659797668457
    6. ' /' → logprob: -10.002659797668457
    7. '   ' → logprob: -11.377659797668457
    8. 'a' → logprob: -11.502659797668457
    9. ' ' → logprob: -11.877659797668457
    10. '    ' → logprob: -12.752659797668457

Token 87: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5786000490188599
    2. '/' → logprob: -0.8286000490188599
    3. ')' → logprob: -7.32859992980957
    4. '/(' → logprob: -7.32859992980957
    5. '/a' → logprob: -7.57859992980957
    6. '/
' → logprob: -7.95359992980957
    7. ' /
' → logprob: -9.07859992980957
    8. 'd' → logprob: -9.20359992980957
    9. '/d' → logprob: -9.57859992980957
    10. ' ' → logprob: -9.70359992980957

Token 88: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03307082876563072
    2. 'a' → logprob: -3.7830708026885986
    3. '(' → logprob: -5.158071041107178
    4. ' (' → logprob: -6.283071041107178
    5. '(b' → logprob: -6.533071041107178
    6. 'b' → logprob: -7.658071041107178
    7. '(math' → logprob: -8.78307056427002
    8. '<|end|>' → logprob: -11.28307056427002
    9. '(ab' → logprob: -11.28307056427002
    10. '(A' → logprob: -11.65807056427002

Token 89: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008164160535670817
    2. 'b' → logprob: -7.750816345214844
    3. '(a' → logprob: -8.125816345214844
    4. ' a' → logprob: -9.625816345214844
    5. '(' → logprob: -11.000816345214844
    6. ' (' → logprob: -12.125816345214844
    7. '(b' → logprob: -14.125816345214844
    8. ')a' → logprob: -15.375816345214844
    9. '_a' → logprob: -15.625816345214844
    10. ' ' → logprob: -15.750816345214844

Token 90: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2670542895793915
    2. '*' → logprob: -1.5170543193817139
    3. 'a' → logprob: -4.767054080963135
    4. '*a' → logprob: -5.517054080963135
    5. ' /' → logprob: -6.267054080963135
    6. ')' → logprob: -8.517054557800293
    7. ' a' → logprob: -8.767054557800293
    8. ' ' → logprob: -8.892054557800293
    9. '/' → logprob: -10.642054557800293
    10. '<|end|>' → logprob: -11.017054557800293

Token 91: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00029625516617670655
    2. ' a' → logprob: -8.125296592712402
    3. '	a' → logprob: -15.750296592712402
    4. ' ' → logprob: -17.000295639038086
    5. '   ' → logprob: -18.375295639038086
    6. 'b' → logprob: -18.625295639038086
    7. 'а' → logprob: -18.875295639038086
    8. '  ' → logprob: -19.125295639038086
    9. '#a' → logprob: -19.250295639038086
    10. '<|end|>' → logprob: -19.250295639038086

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08073173463344574
    2. ')
' → logprob: -2.5807316303253174
    3. ')**' → logprob: -7.3307318687438965
    4. '**' → logprob: -7.8307318687438965
    5. ')
' → logprob: -8.080731391906738
    6. 'a' → logprob: -8.205731391906738
    7. ' )' → logprob: -9.830731391906738
    8. ')

' → logprob: -9.955731391906738
    9. ')a' → logprob: -10.330731391906738
    10. '   ' → logprob: -10.955731391906738

Token 93: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011819529347121716
    2. '   ' → logprob: -5.261819362640381
    3. ' ans' → logprob: -5.261819362640381
    4. 'import' → logprob: -7.011819362640381
    5. '	ans' → logprob: -8.011819839477539
    6. '(ans' → logprob: -10.261819839477539
    7. 'answer' → logprob: -10.761819839477539
    8. '_ans' → logprob: -10.761819839477539
    9. '```' → logprob: -11.511819839477539
    10. ' ' → logprob: -11.636819839477539

Token 94: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00471492251381278
    2. ' ans' → logprob: -5.3797149658203125
    3. '	ans' → logprob: -10.254714965820312
    4. 'import' → logprob: -10.504714965820312
    5. '   ' → logprob: -11.004714965820312
    6. '(ans' → logprob: -12.754714965820312
    7. '_ans' → logprob: -13.254714965820312
    8. 'angle' → logprob: -13.629714965820312
    9. 'answer' → logprob: -13.629714965820312
    10. '
' → logprob: -13.754714965820312

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587825149297714
    2. '=' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.298587799072266
    4. '＝' → logprob: -16.548587799072266
    5. '  ' → logprob: -18.423587799072266
    6. '   ' → logprob: -18.548587799072266
    7. ' +=' → logprob: -18.798587799072266
    8. '=

' → logprob: -18.923587799072266
    9. ' =)' → logprob: -19.048587799072266
    10. ' ' → logprob: -19.173587799072266

Token 96: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0010218516690656543
    2. ' math' → logprob: -7.001021862030029
    3. '90' → logprob: -9.251021385192871
    4. '(math' → logprob: -11.876021385192871
    5. '   ' → logprob: -12.126021385192871
    6. '180' → logprob: -13.501021385192871
    7. ' ' → logprob: -16.001022338867188
    8. '.math' → logprob: -16.376022338867188
    9. '/math' → logprob: -16.626022338867188
    10. '  ' → logprob: -16.751022338867188

Token 97: '.de' (ID: 3906)
  Prédit: '.de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.de' → logprob: -0.5798270106315613
    2. '.atan' → logprob: -0.8298270106315613
    3. '.ac' → logprob: -6.454826831817627
    4. '.' → logprob: -6.454826831817627
    5. '.as' → logprob: -7.329826831817627
    6. '.at' → logprob: -10.454827308654785
    7. '.sqrt' → logprob: -11.954827308654785
    8. ' .' → logprob: -12.204827308654785
    9. '.fre' → logprob: -12.204827308654785
    10. '.ceil' → logprob: -12.329827308654785

Token 98: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -2.4868770196917467e-05
    2. 'g' → logprob: -10.750024795532227
    3. 'gres' → logprob: -13.875024795532227
    4. 'gress' → logprob: -13.875024795532227
    5. 'gr' → logprob: -14.875024795532227
    6. 'gree' → logprob: -15.250024795532227
    7. 'rees' → logprob: -15.500024795532227
    8. 'gre' → logprob: -15.500024795532227
    9. 'degrees' → logprob: -16.125024795532227
    10. 'f' → logprob: -16.250024795532227

Token 99: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.0017196849221363664
    2. '(' → logprob: -6.3767194747924805
    3. '(Math' → logprob: -11.25171947479248
    4. 'math' → logprob: -13.12671947479248
    5. '(
' → logprob: -14.25171947479248
    6. ' (' → logprob: -14.25171947479248
    7. '(torch' → logprob: -15.12671947479248
    8. '(ast' → logprob: -15.75171947479248
    9. '(

' → logprob: -15.75171947479248
    10. '(mat' → logprob: -15.87671947479248

Token 100: '.atan' (ID: 157113)
  Prédit: '.atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.atan' → logprob: -9.77022064034827e-05
    2. '.' → logprob: -9.250097274780273
    3. 'atan' → logprob: -14.375097274780273
    4. '.t' → logprob: -15.125097274780273
    5. '.as' → logprob: -15.375097274780273
    6. ' .' → logprob: -15.375097274780273
    7. '.sqrt' → logprob: -15.875097274780273
    8. '.ac' → logprob: -16.125097274780273
    9. '.de' → logprob: -17.125097274780273
    10. ').' → logprob: -17.500097274780273

Token 101: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.03173868730664253
    2. '((' → logprob: -4.031738758087158
    3. '(d' → logprob: -4.906738758087158
    4. '(' → logprob: -5.781738758087158
    5. 'b' → logprob: -5.906738758087158
    6. 'd' → logprob: -8.40673828125
    7. '(a' → logprob: -9.90673828125
    8. ' (' → logprob: -12.03173828125
    9. 'a' → logprob: -12.15673828125
    10. '2' → logprob: -12.28173828125

Token 102: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5241550803184509
    2. ' /' → logprob: -1.0241551399230957
    3. '/d' → logprob: -3.0241551399230957
    4. '/a' → logprob: -9.149154663085938
    5. '/(' → logprob: -9.774154663085938
    6. '   ' → logprob: -10.649154663085938
    7. '*' → logprob: -10.899154663085938
    8. ' ' → logprob: -11.399154663085938
    9. ')' → logprob: -12.399154663085938
    10. '-' → logprob: -12.524154663085938

Token 103: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0009168167016468942
    2. ' d' → logprob: -7.000916957855225
    3. '   ' → logprob: -13.125916481018066
    4. '(d' → logprob: -13.625916481018066
    5. '	d' → logprob: -14.250916481018066
    6. ' ' → logprob: -14.625916481018066
    7. '(' → logprob: -14.875916481018066
    8. 'a' → logprob: -15.375916481018066
    9. '  ' → logprob: -15.500916481018066
    10. ' (' → logprob: -15.750916481018066

Token 104: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002850998193025589
    2. ' ))' → logprob: -5.8778510093688965
    3. ')' → logprob: -11.002850532531738
    4. ' ' → logprob: -11.377850532531738
    5. '))
' → logprob: -11.627850532531738
    6. ')))' → logprob: -12.752850532531738
    7. '   ' → logprob: -13.252850532531738
    8. ' /' → logprob: -14.252850532531738
    9. '/a' → logprob: -14.252850532531738
    10. ' )' → logprob: -14.877850532531738

Token 105: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00034821697045117617
    2. ')' → logprob: -8.625348091125488
    3. '(print' → logprob: -9.000348091125488
    4. '(' → logprob: -11.125348091125488
    5. ' print' → logprob: -11.125348091125488
    6. '```' → logprob: -11.875348091125488
    7. '#print' → logprob: -13.125348091125488
    8. '(
' → logprob: -13.375348091125488
    9. '-print' → logprob: -13.875348091125488
    10. '()' → logprob: -13.875348091125488

Token 106: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07906889915466309
    2. '(ans' → logprob: -2.579068899154663
    3. '()' → logprob: -10.079069137573242
    4. '('' → logprob: -10.704069137573242
    5. '(f' → logprob: -10.704069137573242
    6. '("("' → logprob: -10.704069137573242
    7. '(math' → logprob: -10.704069137573242
    8. '(round' → logprob: -10.829069137573242
    9. '(
' → logprob: -11.829069137573242
    10. '((' → logprob: -12.454069137573242

Token 107: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. '))' → logprob: -12.125005722045898
    3. ' )' → logprob: -14.875005722045898
    4. ')`' → logprob: -16.5000057220459
    5. '()' → logprob: -17.2500057220459
    6. ')
' → logprob: -17.5000057220459
    7. '())' → logprob: -17.5000057220459
    8. ')))' → logprob: -18.3750057220459
    9. '）' → logprob: -18.8750057220459
    10. '})' → logprob: -19.1250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 105
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 89
Précision stricte (1ère position): 39.05%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 84.76%
================================================================================
