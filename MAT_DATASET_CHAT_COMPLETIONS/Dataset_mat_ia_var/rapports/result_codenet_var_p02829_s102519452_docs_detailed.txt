================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_user_inputs(num_inputs):
    """
    Demande à l'utilisateur de saisir un nombre donné d'entiers.
    
    Args:
        num_inputs (int): Le nombre de valeurs à demander à l'utilisateur.
    
    Returns:
        list: Une liste des entiers saisis par l'utilisateur.
    """
    # Crée une liste vide pour stocker les entrées de l'utilisateur
    inputs = []
    for i in range(num_inputs):
        # Demande à l'utilisateur de saisir un entier et l'ajoute à la liste
        value = int(input(f"Entrez un entier ({i+1}/{num_inputs}) : "))
        inputs.append(value)
    return inputs

def find_unique_element(full_list, exclude_list):
    """
    Trouve l'élément unique dans full_list qui n'est pas présent dans exclude_list.
    
    Args:
        full_list (list): La liste complète des éléments possibles.
        exclude_list (list): La liste des éléments à exclure.
    
    Returns:
        L'élément unique restant dans full_list après exclusion.
        Si plusieurs éléments restent, retourne le premier.
    """
    # Convertit les listes en ensembles pour faciliter la différence d'ensemble
    remaining_elements = set(full_list) - set(exclude_list)
    # Transforme l'ensemble résultant en liste et retourne son premier élément
    return list(remaining_elements)[0]

def main():
    """
    Exécute le flux principal du programme :
    - Lit deux entiers en entrée,
    - Trouve et affiche l'unique valeur manquante dans [1,2,3].
    """
    # Liste complète de référence
    ans_list = [1, 2, 3]
    # Demande à l'utilisateur de saisir deux entiers
    ab = get_user_inputs(2)
    # Trouve la valeur manquante et l'affiche
    result = find_unique_element(ans_list, ab)
    print(result)

# Exécution du programme principal
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_user' (ID: 7146)
  → Token d'amorce (pas de prédiction)

Token 3: '_inputs' (ID: 67304)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7640902996063232
    2. '(' → logprob: -0.8890902996063232
    3. '_name' → logprob: -2.8890902996063232
    4. '```' → logprob: -3.1390902996063232
    5. '(_' → logprob: -5.389090538024902
    6. 'name' → logprob: -5.389090538024902
    7. '_s' → logprob: -5.639090538024902
    8. '(name' → logprob: -5.889090538024902
    9. 'def' → logprob: -7.014090538024902
    10. '():' → logprob: -7.389090538024902

Token 4: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3564265966415405
    2. '():' → logprob: -1.2314265966415405
    3. '_' → logprob: -5.85642671585083
    4. '(:' → logprob: -5.98142671585083
    5. '(_:' → logprob: -6.73142671585083
    6. '(_' → logprob: -7.48142671585083
    7. '()' → logprob: -7.98142671585083
    8. '```' → logprob: -8.856426239013672
    9. ':' → logprob: -9.731426239013672
    10. '_:' → logprob: -9.981426239013672

Token 5: '_inputs' (ID: 67304)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.047464244067668915
    2. '_s' → logprob: -3.42246413230896
    3. '):' → logprob: -5.172464370727539
    4. ')_' → logprob: -5.547464370727539
    5. '_' → logprob: -6.422464370727539
    6. ')' → logprob: -6.547464370727539
    7. '_inputs' → logprob: -8.047464370727539
    8. '```' → logprob: -8.672464370727539
    9. ')s' → logprob: -8.922464370727539
    10. '_choices' → logprob: -9.422464370727539

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009930337546393275
    2. ')' → logprob: -7.375993251800537
    3. ':' → logprob: -8.250992774963379
    4. ',' → logprob: -9.625992774963379
    5. 's' → logprob: -11.125992774963379
    6. '):
' → logprob: -11.625992774963379
    7. '=' → logprob: -12.625992774963379
    8. '```' → logprob: -12.625992774963379
    9. ' ):' → logprob: -13.250992774963379
    10. ''):' → logprob: -13.625992774963379

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014646444469690323
    2. '```' → logprob: -4.764646530151367
    3. '():' → logprob: -5.889646530151367
    4. '   ' → logprob: -6.264646530151367
    5. '':' → logprob: -8.139646530151367
    6. ':
' → logprob: -8.264646530151367
    7. '`:' → logprob: -8.764646530151367
    8. '    
' → logprob: -9.139646530151367
    9. '):' → logprob: -9.389646530151367
    10. '":' → logprob: -9.389646530151367

Token 8: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.030848503112793
    2. ' inputs' → logprob: -1.280848503112793
    3. '```' → logprob: -1.655848503112793
    4. 'inputs' → logprob: -2.155848503112793
    5. '`' → logprob: -3.655848503112793
    6. '    
' → logprob: -4.780848503112793
    7. '\' → logprob: -5.530848503112793
    8. '``' → logprob: -5.655848503112793
    9. ' ' → logprob: -5.780848503112793
    10. '\n' → logprob: -5.905848503112793

Token 9: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.0242695808410645
    2. '   ' → logprob: -1.5242695808410645
    3. 'r' → logprob: -2.1492695808410645
    4. '"""
' → logprob: -2.8992695808410645
    5. 'inputs' → logprob: -2.8992695808410645
    6. 'u' → logprob: -3.1492695808410645
    7. 'i' → logprob: -3.2742695808410645
    8. ' ' → logprob: -3.7742695808410645
    9. 'user' → logprob: -3.7742695808410645
    10. ' inputs' → logprob: -4.2742695808410645

Token 10: ' Dem' (ID: 9458)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.270829975605011
    2. 'Collect' → logprob: -2.145829916000366
    3. '"""
' → logprob: -2.770829916000366
    4. 'Generate' → logprob: -3.520829916000366
    5. 'Get' → logprob: -5.020830154418945
    6. '   ' → logprob: -5.145830154418945
    7. 'Gener' → logprob: -5.395830154418945
    8. 'Returns' → logprob: -5.520830154418945
    9. ' Collect' → logprob: -6.395830154418945
    10. ''''' → logprob: -6.520830154418945

Token 11: 'ande' (ID: 4102)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.27809783816337585
    2. 'ands' → logprob: -1.5280978679656982
    3. '   ' → logprob: -4.153097629547119
    4. 'an' → logprob: -5.403097629547119
    5. 'onstr' → logprob: -6.153097629547119
    6. 'a' → logprob: -6.278097629547119
    7. ' and' → logprob: -7.403097629547119
    8. '```' → logprob: -8.153098106384277
    9. ' ' → logprob: -8.403098106384277
    10. ' a' → logprob: -9.403098106384277

Token 12: ' à' (ID: 1221)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9241390228271484
    2. 's' → logprob: -1.1741390228271484
    3. 'r' → logprob: -1.5491390228271484
    4. '   ' → logprob: -3.4241390228271484
    5. ' ' → logprob: -4.299139022827148
    6. ' d' → logprob: -4.424139022827148
    7. ' à' → logprob: -5.174139022827148
    8. ' de' → logprob: -5.424139022827148
    9. ' aux' → logprob: -6.049139022827148
    10. 'd' → logprob: -6.549139022827148

Token 13: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.13515709340572357
    2. ' l' → logprob: -2.1351571083068848
    3. '   ' → logprob: -5.135157108306885
    4. 'util' → logprob: -6.510157108306885
    5. 's' → logprob: -8.760156631469727
    6. '"' → logprob: -9.385156631469727
    7. ''utilisateur' → logprob: -9.385156631469727
    8. 'user' → logprob: -9.510156631469727
    9. ''' → logprob: -9.635156631469727
    10. ' utilisateur' → logprob: -9.760156631469727

Token 14: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.029188895598053932
    2. 'util' → logprob: -4.029189109802246
    3. 'u' → logprob: -5.529189109802246
    4. 'a' → logprob: -5.779189109802246
    5. ' utilisateur' → logprob: -6.529189109802246
    6. '’utilisateur' → logprob: -6.529189109802246
    7. ''' → logprob: -7.779189109802246
    8. ''util' → logprob: -8.404189109802246
    9. '_util' → logprob: -8.654189109802246
    10. '   ' → logprob: -10.154189109802246

Token 15: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.31556910276412964
    2. '   ' → logprob: -1.6905691623687744
    3. ' des' → logprob: -3.4405691623687744
    4. ' d' → logprob: -3.8155691623687744
    5. ' ' → logprob: -3.9405691623687744
    6. 's' → logprob: -5.565568923950195
    7. '    ' → logprob: -6.065568923950195
    8. ' un' → logprob: -6.690568923950195
    9. ' for' → logprob: -7.440568923950195
    10. ' ' → logprob: -7.440568923950195

Token 16: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37140092253685
    2. ' saisir' → logprob: -1.4964009523391724
    3. ' fournir' → logprob: -3.371400833129883
    4. 'r' → logprob: -3.996400833129883
    5. ' entrer' → logprob: -4.121400833129883
    6. 'entr' → logprob: -4.246400833129883
    7. '   ' → logprob: -6.871400833129883
    8. ' rentrer' → logprob: -7.121400833129883
    9. '```' → logprob: -8.246400833129883
    10. ' ' → logprob: -8.621400833129883

Token 17: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9893497824668884
    2. ' des' → logprob: -0.9893497824668884
    3. ' un' → logprob: -1.9893498420715332
    4. '   ' → logprob: -2.614349842071533
    5. ' une' → logprob: -3.739349842071533
    6. 's' → logprob: -4.614349842071533
    7. ' les' → logprob: -5.739349842071533
    8. '    ' → logprob: -6.364349842071533
    9. 'des' → logprob: -6.489349842071533
    10. ' le' → logprob: -6.864349842071533

Token 18: ' nombre' (ID: 9733)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03506164997816086
    2. ' nombre' → logprob: -3.9100615978240967
    3. 'n' → logprob: -5.160061836242676
    4. ' ' → logprob: -5.660061836242676
    5. ' s' → logprob: -7.160061836242676
    6. 'e' → logprob: -7.285061836242676
    7. 'nombre' → logprob: -7.285061836242676
    8. ' n' → logprob: -7.785061836242676
    9. ' num' → logprob: -7.910061836242676
    10. 'es' → logprob: -7.910061836242676

Token 19: ' donné' (ID: 52079)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0900387316942215
    2. ' de' → logprob: -3.465038776397705
    3. 's' → logprob: -3.840038776397705
    4. ' d' → logprob: -3.965038776397705
    5. '_' → logprob: -5.215038776397705
    6. '(s' → logprob: -6.590038776397705
    7. ''' → logprob: -6.715038776397705
    8. '  ' → logprob: -6.965038776397705
    9. '`' → logprob: -7.090038776397705
    10. '   ' → logprob: -7.215038776397705

Token 20: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2083692103624344
    2. ' de' → logprob: -1.958369255065918
    3. '_' → logprob: -3.708369255065918
    4. ' ' → logprob: -4.208369255065918
    5. 'd' → logprob: -5.833369255065918
    6. 's' → logprob: -6.833369255065918
    7. 'de' → logprob: -6.958369255065918
    8. ')' → logprob: -7.458369255065918
    9. ' 
' → logprob: -7.583369255065918
    10. '   ' → logprob: -8.083369255065918

Token 21: ''ent' (ID: 53422)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7707203030586243
    2. '_' → logprob: -0.8957203030586243
    3. ' de' → logprob: -2.7707202434539795
    4. ' espaces' → logprob: -3.6457202434539795
    5. ' ' → logprob: -4.270720481872559
    6. ''' → logprob: -5.020720481872559
    7. 's' → logprob: -5.395720481872559
    8. ' inputs' → logprob: -6.145720481872559
    9. ' espace' → logprob: -6.520720481872559
    10. 'e' → logprob: -6.645720481872559

Token 22: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.49815189838409424
    2. 'r' → logprob: -0.9981518983840942
    3. 'ries' → logprob: -4.623151779174805
    4. 'ées' → logprob: -5.623151779174805
    5. 'rée' → logprob: -5.873151779174805
    6. 'ières' → logprob: -6.623151779174805
    7. '```' → logprob: -6.748151779174805
    8. 'ers' → logprob: -6.998151779174805
    9. 'ri' → logprob: -6.998151779174805
    10. 'ier' → logprob: -7.748151779174805

Token 23: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06448632478713989
    2. '\n' → logprob: -3.689486265182495
    3. '.' → logprob: -4.189486503601074
    4. '
' → logprob: -5.814486503601074
    5. 's' → logprob: -6.064486503601074
    6. ' :' → logprob: -6.189486503601074
    7. ',' → logprob: -6.189486503601074
    8. ' ' → logprob: -6.314486503601074
    9. '\' → logprob: -6.689486503601074
    10. ':' → logprob: -6.814486503601074

Token 24: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045029569417238235
    2. '"""
' → logprob: -3.295029640197754
    3. '\n' → logprob: -7.045029640197754
    4. '
' → logprob: -7.045029640197754
    5. 'def' → logprob: -7.045029640197754
    6. '    
' → logprob: -7.170029640197754
    7. '"' → logprob: -7.295029640197754
    8. '"""' → logprob: -7.420029640197754
    9. ' """
' → logprob: -7.920029640197754
    10. '```' → logprob: -8.170029640197754

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013008450157940388
    2. '```' → logprob: -4.6380085945129395
    3. '"""' → logprob: -6.3880085945129395
    4. '"""
' → logprob: -7.5130085945129395
    5. '"' → logprob: -8.513008117675781
    6. '
' → logprob: -8.763008117675781
    7. '`' → logprob: -9.013008117675781
    8. '       ' → logprob: -9.263008117675781
    9. '    
' → logprob: -9.763008117675781
    10. '``' → logprob: -9.888008117675781

Token 26: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16138416528701782
    2. 'inputs' → logprob: -2.036384105682373
    3. '"""
' → logprob: -4.411384105682373
    4. ' inputs' → logprob: -6.036384105682373
    5. '"""' → logprob: -6.161384105682373
    6. 'user' → logprob: -7.286384105682373
    7. ' """
' → logprob: -7.661384105682373
    8. '```' → logprob: -9.036384582519531
    9. 'result' → logprob: -9.286384582519531
    10. ' ' → logprob: -9.536384582519531

Token 27: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18137021362781525
    2. ':' → logprob: -2.181370258331299
    3. ' :' → logprob: -3.181370258331299
    4. '):' → logprob: -5.431370258331299
    5. ',' → logprob: -5.931370258331299
    6. ')' → logprob: -6.056370258331299
    7. '[' → logprob: -7.306370258331299
    8. '```' → logprob: -7.556370258331299
    9. '    ' → logprob: -8.80636978149414
    10. '       ' → logprob: -9.18136978149414

Token 28: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5847979187965393
    2. '       ' → logprob: -0.9597979187965393
    3. '    ' → logprob: -3.3347978591918945
    4. ' num' → logprob: -3.9597978591918945
    5. 'num' → logprob: -5.4597978591918945
    6. ' n' → logprob: -8.084797859191895
    7. 'n' → logprob: -8.459797859191895
    8. '     ' → logprob: -9.584797859191895
    9. ' self' → logprob: -10.084797859191895
    10. ' ' → logprob: -10.084797859191895

Token 29: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.08632434159517288
    2. ' num' → logprob: -2.711324453353882
    3. '   ' → logprob: -4.211324214935303
    4. 'user' → logprob: -7.211324214935303
    5. 'n' → logprob: -7.586324214935303
    6. '       ' → logprob: -9.586324691772461
    7. ' user' → logprob: -9.961324691772461
    8. ' n' → logprob: -10.836324691772461
    9. 'inputs' → logprob: -11.086324691772461
    10. '    ' → logprob: -11.836324691772461

Token 30: '_inputs' (ID: 67304)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9862225651741028
    2. '_inputs' → logprob: -0.9862225651741028
    3. ' _' → logprob: -1.986222505569458
    4. '_s' → logprob: -3.611222505569458
    5. 's' → logprob: -3.986222505569458
    6. '_users' → logprob: -4.361222743988037
    7. '_ent' → logprob: -4.611222743988037
    8. '```' → logprob: -4.736222743988037
    9. '_tokens' → logprob: -4.986222743988037
    10. '_p' → logprob: -5.236222743988037

Token 31: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7237575054168701
    2. ' (' → logprob: -1.4737575054168701
    3. '(int' → logprob: -1.5987575054168701
    4. '   ' → logprob: -2.84875750541687
    5. '):' → logprob: -4.598757743835449
    6. ':int' → logprob: -5.223757743835449
    7. ' :' → logprob: -5.723757743835449
    8. ')' → logprob: -5.848757743835449
    9. '```' → logprob: -6.723757743835449
    10. '):
' → logprob: -7.098757743835449

Token 32: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031815171241760254
    2. ' int' → logprob: -5.753181457519531
    3. ')' → logprob: -12.503181457519531
    4. '=int' → logprob: -17.50318145751953
    5. ':int' → logprob: -17.50318145751953
    6. '(int' → logprob: -18.12818145751953
    7. '   ' → logprob: -18.50318145751953
    8. '):' → logprob: -18.50318145751953
    9. '```' → logprob: -18.50318145751953
    10. ' )' → logprob: -18.62818145751953

Token 33: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14285847544670105
    2. ')' → logprob: -2.0178585052490234
    3. ' ):' → logprob: -9.392858505249023
    4. '   ' → logprob: -10.017858505249023
    5. '):
' → logprob: -10.517858505249023
    6. ':' → logprob: -11.892858505249023
    7. ' )' → logprob: -12.017858505249023
    8. ' ' → logprob: -12.392858505249023
    9. 'int' → logprob: -13.017858505249023
    10. '```' → logprob: -13.017858505249023

Token 34: ' Le' (ID: 2018)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33096563816070557
    2. ' Le' → logprob: -1.8309656381607056
    3. '    ' → logprob: -2.830965518951416
    4. ' le' → logprob: -3.705965518951416
    5. '   ' → logprob: -4.205965518951416
    6. ' nombre' → logprob: -5.205965518951416
    7. ' Nombre' → logprob: -5.205965518951416
    8. ')' → logprob: -6.205965518951416
    9. '<|end|>' → logprob: -6.455965518951416
    10. 'Le' → logprob: -6.580965518951416

Token 35: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.008915432728827
    2. 'nombre' → logprob: -4.758915424346924
    3. ' nombres' → logprob: -9.008915901184082
    4. ' ' → logprob: -9.383915901184082
    5. '   ' → logprob: -9.508915901184082
    6. 'Nombre' → logprob: -12.758915901184082
    7. ' number' → logprob: -13.008915901184082
    8. 's' → logprob: -13.258915901184082
    9. '    ' → logprob: -13.258915901184082
    10. 'n' → logprob: -13.258915901184082

Token 36: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0532667376101017
    2. 'd' → logprob: -4.053266525268555
    3. ' de' → logprob: -4.303266525268555
    4. ' ' → logprob: -5.053266525268555
    5. '_' → logprob: -5.178266525268555
    6. ' total' → logprob: -5.803266525268555
    7. '<|end|>' → logprob: -6.678266525268555
    8. 's' → logprob: -7.053266525268555
    9. 'total' → logprob: -7.053266525268555
    10. '_d' → logprob: -7.178266525268555

Token 37: ' valeurs' (ID: 73668)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016098303720355034
    2. 's' → logprob: -5.641098499298096
    3. ' ent' → logprob: -5.766098499298096
    4. '_' → logprob: -6.266098499298096
    5. ' valeurs' → logprob: -6.266098499298096
    6. ' inputs' → logprob: -6.641098499298096
    7. ' espaces' → logprob: -7.516098499298096
    8. ' entr' → logprob: -7.641098499298096
    9. ')' → logprob: -7.766098499298096
    10. 'ent' → logprob: -7.891098499298096

Token 38: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17192460596561432
    2. ' à' → logprob: -2.421924591064453
    3. '   ' → logprob: -2.921924591064453
    4. '    ' → logprob: -4.671924591064453
    5. ')' → logprob: -6.046924591064453
    6. 'à' → logprob: -6.671924591064453
    7. ' )' → logprob: -7.421924591064453
    8. '  ' → logprob: -7.546924591064453
    9. ' que' → logprob: -7.921924591064453
    10. '       ' → logprob: -8.921924591064453

Token 39: ' demander' (ID: 60771)
  Prédit: ' saisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.48800066113471985
    2. ' demander' → logprob: -1.3630006313323975
    3. 's' → logprob: -2.6130006313323975
    4. '   ' → logprob: -3.7380006313323975
    5. ' récupérer' → logprob: -4.238000869750977
    6. 'r' → logprob: -5.363000869750977
    7. ' recue' → logprob: -5.613000869750977
    8. ' obtenir' → logprob: -6.488000869750977
    9. ' entrer' → logprob: -6.738000869750977
    10. 'collect' → logprob: -6.738000869750977

Token 40: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1259106695652008
    2. ')' → logprob: -2.250910758972168
    3. '):' → logprob: -5.500910758972168
    4. '       ' → logprob: -6.125910758972168
    5. ' )' → logprob: -6.500910758972168
    6. '):
' → logprob: -6.750910758972168
    7. '    
' → logprob: -7.375910758972168
    8. ' à' → logprob: -7.375910758972168
    9. '```' → logprob: -7.625910758972168
    10. '    ' → logprob: -7.750910758972168

Token 41: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.48112112283706665
    2. 'l' → logprob: -0.9811211228370667
    3. ' saisir' → logprob: -6.106121063232422
    4. '   ' → logprob: -6.356121063232422
    5. 's' → logprob: -6.981121063232422
    6. '	l' → logprob: -7.231121063232422
    7. ' ' → logprob: -8.106121063232422
    8. ' user' → logprob: -8.481121063232422
    9. ' chaque' → logprob: -8.731121063232422
    10. ' ' → logprob: -8.856121063232422

Token 42: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.1838851124048233
    2. ''' → logprob: -2.058885097503662
    3. 'u' → logprob: -3.558885097503662
    4. 'a' → logprob: -5.183885097503662
    5. '’utilisateur' → logprob: -6.433885097503662
    6. ''util' → logprob: -6.558885097503662
    7. ''us' → logprob: -7.058885097503662
    8. 'e' → logprob: -7.183885097503662
    9. ''u' → logprob: -7.433885097503662
    10. ''user' → logprob: -7.683885097503662

Token 43: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2584172487258911
    2. '):' → logprob: -1.7584172487258911
    3. '   ' → logprob: -3.0084171295166016
    4. '```' → logprob: -6.383417129516602
    5. ',' → logprob: -7.133417129516602
    6. '.' → logprob: -7.133417129516602
    7. ' ' → logprob: -7.633417129516602
    8. ':' → logprob: -8.133417129516602
    9. ' )' → logprob: -8.133417129516602
    10. ')
' → logprob: -8.258417129516602

Token 44: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14577634632587433
    2. '    
' → logprob: -3.2707762718200684
    3. '\n' → logprob: -3.3957762718200684
    4. ')' → logprob: -3.7707762718200684
    5. '"""
' → logprob: -4.395776271820068
    6. '
' → logprob: -5.270776271820068
    7. '```' → logprob: -5.395776271820068
    8. '"""' → logprob: -5.395776271820068
    9. '\' → logprob: -5.770776271820068
    10. '"' → logprob: -6.020776271820068

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0891498327255249
    2. ' """
' → logprob: -3.8391499519348145
    3. 'Returns' → logprob: -4.0891499519348145
    4. '"""
' → logprob: -4.2141499519348145
    5. 'r' → logprob: -4.4641499519348145
    6. '"""' → logprob: -5.0891499519348145
    7. '"' → logprob: -5.7141499519348145
    8. ' """' → logprob: -5.9641499519348145
    9. ' Returns' → logprob: -6.2141499519348145
    10. ' ' → logprob: -6.3391499519348145

Token 46: ' Returns' (ID: 9609)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.6242349147796631
    2. '   ' → logprob: -0.9992349147796631
    3. 'returns' → logprob: -3.124234914779663
    4. 'Returns' (adapté à ' Returns') → logprob: -3.874234914779663
    5. '"""
' → logprob: -4.874235153198242
    6. 'user' → logprob: -4.999235153198242
    7. ' inputs' → logprob: -5.624235153198242
    8. 'result' → logprob: -5.749235153198242
    9. '```' → logprob: -5.749235153198242
    10. 'results' → logprob: -6.249235153198242

Token 47: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.16719025373458862
    2. ':' → logprob: -2.7921903133392334
    3. ' ' → logprob: -3.9171903133392334
    4. '[' → logprob: -4.542190074920654
    5. '   ' → logprob: -4.542190074920654
    6. '<|end|>' → logprob: -4.792190074920654
    7. '[:]' → logprob: -5.042190074920654
    8. '```' → logprob: -5.292190074920654
    9. ' ,' → logprob: -5.417190074920654
    10. ' =' → logprob: -5.792190074920654

Token 48: '       ' (ID: 309)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.035551175475120544
    2. ' [' → logprob: -3.660551071166992
    3. '[' → logprob: -5.410551071166992
    4. '   ' → logprob: -5.660551071166992
    5. '[]' → logprob: -6.910551071166992
    6. ' a' → logprob: -9.535551071166992
    7. '    ' → logprob: -9.660551071166992
    8. 'List' → logprob: -11.285551071166992
    9. ' [])' → logprob: -11.285551071166992
    10. 'a' → logprob: -11.410551071166992

Token 49: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5785927772521973
    2. 'list' (adapté à ' list') → logprob: -0.9535927772521973
    3. 'List' → logprob: -3.3285927772521973
    4. ' List' → logprob: -4.078592777252197
    5. '   ' → logprob: -7.328592777252197
    6. ' A' → logprob: -9.703592300415039
    7. ' liste' → logprob: -10.078592300415039
    8. 'A' → logprob: -10.203592300415039
    9. ' a' → logprob: -10.328592300415039
    10. ' []' → logprob: -10.328592300415039

Token 50: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1397399753332138
    2. '[int' → logprob: -2.139739990234375
    3. ' of' → logprob: -5.639739990234375
    4. '<|end|>' → logprob: -5.639739990234375
    5. '[]' → logprob: -6.139739990234375
    6. ']' → logprob: -6.764739990234375
    7. ')' → logprob: -7.264739990234375
    8. ':' → logprob: -7.764739990234375
    9. '<|end|>' → logprob: -8.889739990234375
    10. '_' → logprob: -9.014739990234375

Token 51: ' Une' (ID: 19758)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' liste' (ID: 31719)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5812291502952576
    2. ' []' → logprob: -2.2062292098999023
    3. ' list' → logprob: -2.2062292098999023
    4. '[' → logprob: -2.8312292098999023
    5. ' de' → logprob: -2.9562292098999023
    6. ' [' → logprob: -3.3312292098999023
    7. '[]' → logprob: -3.4562292098999023
    8. 's' → logprob: -4.331229209899902
    9. ' d' → logprob: -5.206229209899902
    10. ' liste' → logprob: -5.331229209899902

Token 53: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5093198418617249
    2. ' des' → logprob: -1.13431978225708
    3. 'des' → logprob: -3.75931978225708
    4. ' de' → logprob: -3.88431978225708
    5. 'd' → logprob: -4.63431978225708
    6. '<|end|>' → logprob: -5.38431978225708
    7. ' d' → logprob: -5.63431978225708
    8. ' of' → logprob: -5.63431978225708
    9. '[]' → logprob: -5.88431978225708
    10. '[str' → logprob: -6.25931978225708

Token 54: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3209899663925171
    2. ' ent' → logprob: -1.695989966392517
    3. ' integers' → logprob: -3.6959900856018066
    4. ' int' → logprob: -3.8209900856018066
    5. ' valeurs' → logprob: -3.8209900856018066
    6. 'ent' → logprob: -4.820990085601807
    7. '  ' → logprob: -5.945990085601807
    8. 's' → logprob: -5.945990085601807
    9. '_' → logprob: -6.570990085601807
    10. '_ent' → logprob: -6.820990085601807

Token 55: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.01239674724638462
    2. 'ières' → logprob: -5.387396812438965
    3. 't' → logprob: -5.887396812438965
    4. 'i' → logprob: -6.387396812438965
    5. 'ti' → logprob: -6.387396812438965
    6. '```' → logprob: -7.137396812438965
    7. '   ' → logprob: -8.137396812438965
    8. 'ière' → logprob: -8.887396812438965
    9. '       ' → logprob: -9.637396812438965
    10. 'ier' → logprob: -10.137396812438965

Token 56: ' sa' (ID: 880)
  Prédit: ' sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.9656187891960144
    2. 's' → logprob: -1.2156188488006592
    3. ' des' → logprob: -1.7156188488006592
    4. ' entr' → logprob: -3.340618848800659
    5. '```' → logprob: -3.340618848800659
    6. ' sais' → logprob: -3.590618848800659
    7. ' ' → logprob: -4.34061861038208
    8. '   ' → logprob: -4.71561861038208
    9. ' four' → logprob: -5.21561861038208
    10. 'entr' → logprob: -5.84061861038208

Token 57: 'isis' (ID: 11352)
  Prédit: 'isis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isis' → logprob: -0.030469153076410294
    2. 'is' → logprob: -3.7804691791534424
    3. 'isi' → logprob: -5.655468940734863
    4. 'ís' → logprob: -6.405468940734863
    5. 'ïs' → logprob: -7.030468940734863
    6. 'i' → logprob: -7.905468940734863
    7. 'sis' → logprob: -8.155468940734863
    8. 'nis' → logprob: -9.405468940734863
    9. 'isie' → logprob: -9.655468940734863
    10. 'n' → logprob: -9.655468940734863

Token 58: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24213531613349915
    2. ']' → logprob: -2.8671352863311768
    3. '[]' → logprob: -3.4921352863311768
    4. ',' → logprob: -3.7421352863311768
    5. '[' → logprob: -3.7421352863311768
    6. '```' → logprob: -3.8671352863311768
    7. '.' → logprob: -4.367135524749756
    8. '`' → logprob: -5.117135524749756
    9. 's' → logprob: -5.117135524749756
    10. 'def' → logprob: -5.117135524749756

Token 59: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.0348634235560894
    2. 'l' → logprob: -3.4098634719848633
    3. ' ' → logprob: -7.409863471984863
    4. '_l' → logprob: -8.159863471984863
    5. ' ' → logprob: -9.409863471984863
    6. '	l' → logprob: -9.534863471984863
    7. '_' → logprob: -10.159863471984863
    8. ' la' → logprob: -10.659863471984863
    9. ''utilisateur' → logprob: -11.034863471984863
    10. '   ' → logprob: -11.409863471984863

Token 60: ''utilisateur' (ID: 140803)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2587045133113861
    2. ''utilisateur' → logprob: -1.6337045431137085
    3. 'u' → logprob: -3.758704423904419
    4. 'a' → logprob: -5.633704662322998
    5. ''u' → logprob: -6.383704662322998
    6. 'e' → logprob: -7.008704662322998
    7. ''user' → logprob: -7.133704662322998
    8. ''util' → logprob: -7.258704662322998
    9. ''a' → logprob: -7.508704662322998
    10. ''us' → logprob: -7.758704662322998

Token 61: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06817314773797989
    2. ':' → logprob: -3.3181731700897217
    3. '```' → logprob: -4.943172931671143
    4. ']' → logprob: -5.193172931671143
    5. '.' → logprob: -5.568172931671143
    6. '):' → logprob: -5.943172931671143
    7. ')' → logprob: -6.193172931671143
    8. '       ' → logprob: -6.443172931671143
    9. ':
' → logprob: -6.568172931671143
    10. 'def' → logprob: -6.943172931671143

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012655739672482014
    2. '"""' → logprob: -5.387655735015869
    3. '"""
' → logprob: -6.012655735015869
    4. ')' → logprob: -6.387655735015869
    5. '    
' → logprob: -6.762655735015869
    6. '"' → logprob: -7.012655735015869
    7. '```' → logprob: -7.262655735015869
    8. '):' → logprob: -8.512656211853027
    9. ':' → logprob: -9.137656211853027
    10. '\n' → logprob: -9.137656211853027

Token 63: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03014800325036049
    2. '
' → logprob: -4.655148029327393
    3. '    
' → logprob: -4.905148029327393
    4. '"""' → logprob: -5.405148029327393
    5. ')' → logprob: -6.530148029327393
    6. '"""
' (adapté à ' """
') → logprob: -6.780148029327393
    7. '"' → logprob: -7.155148029327393
    8. 'def' → logprob: -7.280148029327393
    9. '```' → logprob: -7.280148029327393
    10. ':' → logprob: -7.905148029327393

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03278038650751114
    2. 'inputs' → logprob: -4.032780170440674
    3. ' inputs' → logprob: -4.657780170440674
    4. '    
' → logprob: -6.657780170440674
    5. 'result' → logprob: -6.782780170440674
    6. 'user' → logprob: -7.532780170440674
    7. '
' → logprob: -7.657780170440674
    8. 'n' → logprob: -8.157780647277832
    9. '    ' → logprob: -8.282780647277832
    10. ' user' → logprob: -8.407780647277832

Token 65: ' #' (ID: 1069)
  Prédit: ' inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inputs' → logprob: -0.7705974578857422
    2. 'inputs' → logprob: -0.7705974578857422
    3. ' user' → logprob: -3.145597457885742
    4. 'user' → logprob: -3.770597457885742
    5. '   ' → logprob: -5.145597457885742
    6. 'result' → logprob: -6.895597457885742
    7. ' result' → logprob: -7.520597457885742
    8. ' results' → logprob: -8.145597457885742
    9. 'results' → logprob: -8.770597457885742
    10. 'u' → logprob: -9.270597457885742

Token 66: ' Cr' (ID: 5790)
  Prédit: ' inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inputs' → logprob: -0.12019582092761993
    2. 'inputs' → logprob: -2.4951958656311035
    3. ' user' → logprob: -3.6201958656311035
    4. 'user' → logprob: -5.9951958656311035
    5. ' result' → logprob: -7.3701958656311035
    6. 'result' → logprob: -8.120195388793945
    7. ' results' → logprob: -8.370195388793945
    8. '   ' → logprob: -8.870195388793945
    9. ' values' → logprob: -10.120195388793945
    10. ' for' → logprob: -10.745195388793945

Token 67: 'ée' (ID: 2894)
  Prédit: 'éer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éer' → logprob: -0.18167643249034882
    2. 'ée' → logprob: -2.0566763877868652
    3. 'é' → logprob: -3.9316763877868652
    4. 'o' → logprob: -4.681676387786865
    5. 'e' → logprob: -5.681676387786865
    6. 'a' → logprob: -6.181676387786865
    7. 'ép' → logprob: -7.056676387786865
    8. 'édit' → logprob: -7.931676387786865
    9. 'ede' → logprob: -8.056676864624023
    10. 'éd' → logprob: -8.056676864624023

Token 68: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018137075006961823
    2. ' []' → logprob: -4.393136978149414
    3. '   ' → logprob: -6.143136978149414
    4. ' un' → logprob: -7.018136978149414
    5. '_' → logprob: -7.518136978149414
    6. '  ' → logprob: -7.643136978149414
    7. '[]' → logprob: -7.893136978149414
    8. ' une' → logprob: -8.393136978149414
    9. ' a' → logprob: -8.393136978149414
    10. ' [' → logprob: -8.768136978149414

Token 69: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.7817631959915161
    2. ' []' → logprob: -1.6567631959915161
    3. 'liste' → logprob: -1.6567631959915161
    4. ' ' → logprob: -2.1567630767822266
    5. '[]' → logprob: -4.156763076782227
    6. ' list' → logprob: -4.531763076782227
    7. 'list' → logprob: -5.031763076782227
    8. 'l' → logprob: -5.531763076782227
    9. 's' → logprob: -5.906763076782227
    10. ' lst' → logprob: -7.156763076782227

Token 70: ' vide' (ID: 21835)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.39065423607826233
    2. ' []' → logprob: -1.89065420627594
    3. '   ' → logprob: -3.1406543254852295
    4. '_' → logprob: -3.2656543254852295
    5. '[' → logprob: -3.2656543254852295
    6. ' des' → logprob: -4.14065408706665
    7. ' =' → logprob: -4.64065408706665
    8. '=[]' → logprob: -4.76565408706665
    9. ' ' → logprob: -5.39065408706665
    10. '[:]' → logprob: -6.01565408706665

Token 71: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20858782529830933
    2. '   ' → logprob: -2.458587884902954
    3. '_' → logprob: -3.083587884902954
    4. '    ' → logprob: -4.583587646484375
    5. 's' → logprob: -4.958587646484375
    6. 'u' → logprob: -5.208587646484375
    7. 'user' → logprob: -5.208587646484375
    8. 'inputs' → logprob: -5.208587646484375
    9. '  ' → logprob: -5.833587646484375
    10. ' des' → logprob: -6.083587646484375

Token 72: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.003530582645907998
    2. ' ' → logprob: -6.503530502319336
    3. ' collect' → logprob: -7.628530502319336
    4. 'stock' → logprob: -7.878530502319336
    5. ' recue' → logprob: -8.628530502319336
    6. ' enregistr' → logprob: -8.753530502319336
    7. 's' → logprob: -9.003530502319336
    8. '_' → logprob: -9.628530502319336
    9. ' r' → logprob: -9.753530502319336
    10. ' recevoir' → logprob: -9.753530502319336

Token 73: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.03695158287882805
    2. 'e' → logprob: -3.5369515419006348
    3. ' ' → logprob: -5.786951541900635
    4. '_' → logprob: -6.036951541900635
    5. '   ' → logprob: -7.536951541900635
    6. '  ' → logprob: -8.036952018737793
    7. 'r' → logprob: -8.161952018737793
    8. ' e' → logprob: -8.661952018737793
    9. ' des' → logprob: -9.161952018737793
    10. 'a' → logprob: -9.786952018737793

Token 74: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12771141529083252
    2. ' les' → logprob: -2.252711296081543
    3. ' des' → logprob: -5.252711296081543
    4. 's' → logprob: -5.752711296081543
    5. 'es' → logprob: -7.127711296081543
    6. ' []' → logprob: -7.127711296081543
    7. '  ' → logprob: -7.252711296081543
    8. '_' → logprob: -7.627711296081543
    9. ' user' → logprob: -7.627711296081543
    10. 'les' → logprob: -7.627711296081543

Token 75: ' entr' (ID: 7072)
  Prédit: ' inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inputs' → logprob: -0.09041081368923187
    2. ' valeurs' → logprob: -3.4654107093811035
    3. 'inputs' → logprob: -3.9654107093811035
    4. ' val' → logprob: -4.0904107093811035
    5. ' ' → logprob: -4.9654107093811035
    6. 'val' → logprob: -5.4654107093811035
    7. ' user' → logprob: -5.7154107093811035
    8. ' values' → logprob: -6.4654107093811035
    9. ' entr' → logprob: -7.2154107093811035
    10. ' result' → logprob: -7.4654107093811035

Token 76: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0639818012714386
    2. 'ée' → logprob: -3.438981771469116
    3. 'é' → logprob: -4.438982009887695
    4. 'és' → logprob: -4.563982009887695
    5. '   ' → logprob: -5.688982009887695
    6. 's' → logprob: -5.938982009887695
    7. 'e' → logprob: -7.438982009887695
    8. 'ers' → logprob: -8.563982009887695
    9. 'iers' → logprob: -8.688982009887695
    10. 't' → logprob: -9.188982009887695

Token 77: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2627715468406677
    2. ' ' → logprob: -2.1377716064453125
    3. '_' → logprob: -3.2627716064453125
    4. 'inputs' → logprob: -3.3877716064453125
    5. 's' → logprob: -4.5127716064453125
    6. 'user' → logprob: -4.8877716064453125
    7. '_inputs' → logprob: -5.2627716064453125
    8. ' inputs' → logprob: -5.7627716064453125
    9. '[' → logprob: -5.8877716064453125
    10. '`' → logprob: -6.2627716064453125

Token 78: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04757088050246239
    2. '_' → logprob: -3.9225709438323975
    3. ' user' → logprob: -4.172570705413818
    4. ' l' → logprob: -5.172570705413818
    5. ' u' → logprob: -7.047570705413818
    6. 's' → logprob: -7.297570705413818
    7. 'u' → logprob: -7.422570705413818
    8. 'user' → logprob: -7.547570705413818
    9. 'l' → logprob: -7.672570705413818
    10. ' _' → logprob: -7.922570705413818

Token 79: ''utilisateur' (ID: 140803)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6538105607032776
    2. 'i' → logprob: -1.2788105010986328
    3. 'a' → logprob: -2.028810501098633
    4. ''' → logprob: -3.528810501098633
    5. ''utilisateur' → logprob: -3.903810501098633
    6. ''us' → logprob: -5.278810501098633
    7. 'e' → logprob: -5.528810501098633
    8. ''u' → logprob: -6.153810501098633
    9. ''util' → logprob: -6.403810501098633
    10. 'us' → logprob: -6.528810501098633

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8437923192977905
    2. '    
' → logprob: -1.3437923192977905
    3. 'n' → logprob: -1.9687923192977905
    4. '   
' → logprob: -3.21879243850708
    5. ' 
' → logprob: -3.84379243850708
    6. '  
' → logprob: -4.09379243850708
    7. ' ' → logprob: -4.09379243850708
    8. '
' → logprob: -4.21879243850708
    9. '\' → logprob: -4.46879243850708
    10. '     
' → logprob: -4.59379243850708

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02487836964428425
    2. '    
' → logprob: -4.39987850189209
    3. 'inputs' → logprob: -5.14987850189209
    4. '    ' → logprob: -6.89987850189209
    5. 'u' → logprob: -7.02487850189209
    6. 'n' → logprob: -7.14987850189209
    7. ' inputs' → logprob: -7.27487850189209
    8. '   
' → logprob: -7.27487850189209
    9. 'user' → logprob: -7.52487850189209
    10. '     
' → logprob: -7.89987850189209

Token 82: ' inputs' (ID: 21963)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.29410308599472046
    2. 'user' → logprob: -1.9191031455993652
    3. ' inputs' → logprob: -2.5441031455993652
    4. 'inputs' (adapté à ' inputs') → logprob: -3.6691031455993652
    5. '   ' → logprob: -5.669103145599365
    6. 'u' → logprob: -8.794102668762207
    7. ' u' → logprob: -9.669102668762207
    8. ' ' → logprob: -9.794102668762207
    9. ' users' → logprob: -10.294102668762207
    10. ' []' → logprob: -10.419102668762207

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45826342701911926
    2. '_' → logprob: -1.3332633972167969
    3. 's' → logprob: -2.583263397216797
    4. '=' → logprob: -3.958263397216797
    5. '.append' → logprob: -5.208263397216797
    6. 'es' → logprob: -6.958263397216797
    7. '=[]' → logprob: -7.833263397216797
    8. '[:]' → logprob: -8.208263397216797
    9. '_list' → logprob: -8.333263397216797
    10. '[' → logprob: -8.333263397216797

Token 84: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0010435284348204732
    2. '[]' → logprob: -6.876043319702148
    3. ' [' → logprob: -12.001043319702148
    4. ' ' → logprob: -12.751043319702148
    5. ' []
' → logprob: -13.876043319702148
    6. '[' → logprob: -14.626043319702148
    7. ' ' → logprob: -15.751043319702148
    8. ' []

' → logprob: -16.37604331970215
    9. ' [],' → logprob: -17.37604331970215
    10. ' [])' → logprob: -17.50104331970215

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3360477685928345
    2. '    
' → logprob: -2.211047649383545
    3. ' 
' → logprob: -2.836047649383545
    4. '
' → logprob: -3.461047649383545
    5. ' ' → logprob: -3.711047649383545
    6. '  
' → logprob: -3.836047649383545
    7. ' for' → logprob: -4.461047649383545
    8. 'for' → logprob: -4.836047649383545
    9. '' → logprob: -5.211047649383545
    10. '   
' → logprob: -5.461047649383545

Token 86: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18770043551921844
    2. '
' → logprob: -2.4377005100250244
    3. '    
' → logprob: -3.3127005100250244
    4. ' 
' → logprob: -3.9377005100250244
    5. 'for' (adapté à ' for') → logprob: -4.687700271606445
    6. ' for' → logprob: -4.937700271606445
    7. ' ' → logprob: -5.562700271606445
    8. '   
' → logprob: -6.187700271606445
    9. '  
' → logprob: -6.187700271606445
    10. '    ' → logprob: -7.062700271606445

Token 87: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014357296749949455
    2. ' i' → logprob: -4.264357089996338
    3. ' _' → logprob: -8.764357566833496
    4. '_' → logprob: -10.889357566833496
    5. ' ‌' → logprob: -12.014357566833496
    6. '  ' → logprob: -12.139357566833496
    7. ' space' → logprob: -13.264357566833496
    8. ' ```' → logprob: -13.639357566833496
    9. ' ▁' → logprob: -13.889357566833496
    10. ' n' → logprob: -14.514357566833496

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0332268550992012
    2. ' ' → logprob: -3.53322696685791
    3. 'in' → logprob: -5.90822696685791
    4. ' i' → logprob: -7.65822696685791
    5. ' n' → logprob: -9.40822696685791
    6. 'n' → logprob: -9.53322696685791
    7. '  ' → logprob: -9.53322696685791
    8. '_' → logprob: -10.90822696685791
    9. '	in' → logprob: -12.15822696685791
    10. ' ' → logprob: -12.65822696685791

Token 89: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.007195416372269392
    2. ' ' → logprob: -5.632195472717285
    3. 'range' → logprob: -5.632195472717285
    4. '	range' → logprob: -12.507195472717285
    5. ' in' → logprob: -13.632195472717285
    6. ' xrange' → logprob: -14.382195472717285
    7. '_range' → logprob: -14.632195472717285
    8. ' space' → logprob: -14.757195472717285
    9. '  ' → logprob: -14.757195472717285
    10. '_' → logprob: -15.132195472717285

Token 90: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033732960000634193
    2. '(num' → logprob: -5.878373146057129
    3. ' (' → logprob: -7.628373146057129
    4. '(
' → logprob: -9.503373146057129
    5. '(n' → logprob: -13.128373146057129
    6. '(i' → logprob: -13.128373146057129
    7. '(len' → logprob: -13.753373146057129
    8. '(

' → logprob: -13.753373146057129
    9. ' ' → logprob: -15.128373146057129
    10. '(int' → logprob: -15.378373146057129

Token 91: '_inputs' (ID: 67304)
  Prédit: '_inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -0.009130921214818954
    2. '_' → logprob: -4.759130954742432
    3. '_i' → logprob: -8.759130477905273
    4. '_put' → logprob: -8.759130477905273
    5. ' _' → logprob: -9.884130477905273
    6. '_p' → logprob: -10.134130477905273
    7. '_
' → logprob: -10.384130477905273
    8. '_t' → logprob: -11.384130477905273
    9. ')_' → logprob: -11.634130477905273
    10. ')' → logprob: -11.634130477905273

Token 92: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021179579198360443
    2. ')' → logprob: -3.896179676055908
    3. ' ):' → logprob: -7.646179676055908
    4. ':' → logprob: -9.27117919921875
    5. '+' → logprob: -10.89617919921875
    6. '):
' → logprob: -10.89617919921875
    7. ' ' → logprob: -11.02117919921875
    8. ' )' → logprob: -12.02117919921875
    9. ' :' → logprob: -13.89617919921875
    10. '():' → logprob: -14.02117919921875

Token 93: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5015377402305603
    2. ':' → logprob: -2.251537799835205
    3. '       ' → logprob: -2.376537799835205
    4. '    
' → logprob: -2.501537799835205
    5. '    ' → logprob: -3.376537799835205
    6. ' 
' → logprob: -3.751537799835205
    7. '     
' → logprob: -4.001537799835205
    8. '        
' → logprob: -4.626537799835205
    9. '   
' → logprob: -4.626537799835205
    10. ' ' → logprob: -5.126537799835205

Token 94: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.4619693458080292
    2. '    
' → logprob: -1.5869693756103516
    3. '     
' → logprob: -3.0869693756103516
    4. '   ' → logprob: -3.4619693756103516
    5. '        
' → logprob: -3.5869693756103516
    6. '       ' → logprob: -4.086969375610352
    7. '   
' → logprob: -4.461969375610352
    8. 'n' → logprob: -4.461969375610352
    9. '    ' → logprob: -5.461969375610352
    10. 'try' → logprob: -6.086969375610352

Token 95: ' Dem' (ID: 9458)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9339298009872437
    2. '   ' → logprob: -1.3089298009872437
    3. 'while' → logprob: -2.058929920196533
    4. 'value' → logprob: -2.933929920196533
    5. ' user' → logprob: -3.308929920196533
    6. ' value' → logprob: -3.558929920196533
    7. 'user' → logprob: -3.683929920196533
    8. 'try' → logprob: -3.808929920196533
    9. ' try' → logprob: -3.933929920196533
    10. '       ' → logprob: -4.808929920196533

Token 96: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.13270322978496552
    2. 'ander' → logprob: -2.2577033042907715
    3. 'andez' → logprob: -5.2577033042907715
    4. 'and' → logprob: -5.2577033042907715
    5. '       ' → logprob: -5.6327033042907715
    6. 'an' → logprob: -5.7577033042907715
    7. 'a' → logprob: -7.0077033042907715
    8. '   ' → logprob: -7.3827033042907715
    9. 'ade' → logprob: -9.132702827453613
    10. 'e' → logprob: -9.382702827453613

Token 97: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18009713292121887
    2. ' à' → logprob: -2.1800971031188965
    3. '    ' → logprob: -3.6800971031188965
    4. '   ' → logprob: -4.1800971031188965
    5. ' a' → logprob: -5.8050971031188965
    6. '  ' → logprob: -6.1800971031188965
    7. ' (' → logprob: -6.4300971031188965
    8. ' )' → logprob: -6.6800971031188965
    9. '       ' → logprob: -7.6800971031188965
    10. '(' → logprob: -7.9300971031188965

Token 98: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.08373978734016418
    2. 'l' → logprob: -3.208739757537842
    3. ' ' → logprob: -3.833739757537842
    4. '   ' → logprob: -4.958739757537842
    5. ' user' → logprob: -5.208739757537842
    6. ' input' → logprob: -6.583739757537842
    7. ' utilisateur' → logprob: -6.583739757537842
    8. 'user' → logprob: -7.458739757537842
    9. '    ' → logprob: -7.583739757537842
    10. ' ' → logprob: -7.958739757537842

Token 99: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.023269474506378174
    2. ''' → logprob: -3.8982694149017334
    3. '’utilisateur' → logprob: -7.1482696533203125
    4. ''user' → logprob: -7.5232696533203125
    5. 'a' → logprob: -7.7732696533203125
    6. '   ' → logprob: -8.023269653320312
    7. ''util' → logprob: -8.398269653320312
    8. ' utilisateur' → logprob: -8.773269653320312
    9. ' '' → logprob: -10.148269653320312
    10. 'util' → logprob: -10.398269653320312

Token 100: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3233880996704102
    2. '    ' → logprob: -1.4483880996704102
    3. '   ' → logprob: -1.6983880996704102
    4. ' d' → logprob: -2.07338809967041
    5. ' ' → logprob: -2.69838809967041
    6. '       ' → logprob: -3.19838809967041
    7. ' une' → logprob: -3.69838809967041
    8. 'd' → logprob: -4.82338809967041
    9. ' la' → logprob: -5.32338809967041
    10. '    
' → logprob: -5.32338809967041

Token 101: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.05661168694496155
    2. ' ' → logprob: -3.8066117763519287
    3. ' entrer' → logprob: -4.68161153793335
    4. ' input' → logprob: -5.05661153793335
    5. 's' → logprob: -5.18161153793335
    6. '   ' → logprob: -5.55661153793335
    7. ' int' → logprob: -6.05661153793335
    8. 'int' → logprob: -6.43161153793335
    9. ' sais' → logprob: -7.30661153793335
    10. ' ' → logprob: -7.55661153793335

Token 102: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.34914469718933105
    2. ' ' → logprob: -1.349144697189331
    3. ' ' → logprob: -4.97414493560791
    4. ' une' → logprob: -4.97414493560791
    5. 'un' → logprob: -5.72414493560791
    6. ' "' → logprob: -5.84914493560791
    7. '  ' → logprob: -5.84914493560791
    8. ' a' → logprob: -6.09914493560791
    9. ' f' → logprob: -6.22414493560791
    10. ' int' → logprob: -6.59914493560791

Token 103: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.027546141296625137
    2. ' entier' → logprob: -3.6525461673736572
    3. ' nombre' → logprob: -7.152545928955078
    4. 'e' → logprob: -8.777545928955078
    5. 'ent' → logprob: -9.652545928955078
    6. ' integer' → logprob: -10.152545928955078
    7. 'n' → logprob: -10.277545928955078
    8. ' int' → logprob: -10.527545928955078
    9. ' ent' → logprob: -10.527545928955078
    10. '  ' → logprob: -10.652545928955078

Token 104: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8158819675445557
    2. '   ' → logprob: -1.8158819675445557
    3. ':' → logprob: -2.3158819675445557
    4. ' :' → logprob: -2.3158819675445557
    5. ' ' → logprob: -2.4408819675445557
    6. ',' → logprob: -3.0658819675445557
    7. ')' → logprob: -4.065881729125977
    8. '    ' → logprob: -4.565881729125977
    9. '(' → logprob: -5.190881729125977
    10. ' )' → logprob: -5.315881729125977

Token 105: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7152757048606873
    2. ' while' → logprob: -1.340275764465332
    3. ' try' → logprob: -1.840275764465332
    4. ' continue' → logprob: -3.465275764465332
    5. '    ' → logprob: -3.965275764465332
    6. ' continuer' → logprob: -4.090275764465332
    7. 'while' → logprob: -5.715275764465332
    8. 'try' → logprob: -5.840275764465332
    9. '       ' → logprob: -6.340275764465332
    10. ' ' → logprob: -6.590275764465332

Token 106: ''aj' (ID: 116735)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2478692531585693
    2. ' while' → logprob: -2.2478692531585693
    3. 'a' → logprob: -2.3728692531585693
    4. ''' → logprob: -2.3728692531585693
    5. 'o' → logprob: -2.4978692531585693
    6. '   ' → logprob: -2.6228692531585693
    7. 'while' → logprob: -3.2478692531585693
    8. ' =' → logprob: -3.7478692531585693
    9. ''aj' → logprob: -4.122869491577148
    10. ' '' → logprob: -4.247869491577148

Token 107: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -4.127333340875339e-06
    2. 'outer' → logprob: -13.000003814697266
    3. 'out' → logprob: -14.000003814697266
    4. 'outez' → logprob: -14.875003814697266
    5. 'oue' → logprob: -15.375003814697266
    6. 'ou' → logprob: -15.500003814697266
    7. 'outes' → logprob: -15.750003814697266
    8. 'o' → logprob: -16.125003814697266
    9. 'ointe' → logprob: -18.375003814697266
    10. 'e' → logprob: -18.625003814697266

Token 108: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15530334413051605
    2. ' à' → logprob: -2.6553032398223877
    3. '   ' → logprob: -3.1553032398223877
    4. '    ' → logprob: -4.530303478240967
    5. '  ' → logprob: -5.655303478240967
    6. ' a' → logprob: -5.905303478240967
    7. '       ' → logprob: -5.905303478240967
    8. ')' → logprob: -6.155303478240967
    9. ' )' → logprob: -6.280303478240967
    10. ''' → logprob: -6.655303478240967

Token 109: ' la' (ID: 557)
  Prédit: ' inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inputs' → logprob: -0.006520683411508799
    2. ' ' → logprob: -6.131520748138428
    3. ' input' → logprob: -6.381520748138428
    4. ' int' → logprob: -6.756520748138428
    5. 'inputs' → logprob: -6.881520748138428
    6. ' la' → logprob: -8.75652027130127
    7. ' l' → logprob: -9.63152027130127
    8. ' the' → logprob: -10.00652027130127
    9. 'int' → logprob: -10.13152027130127
    10. '   ' → logprob: -10.63152027130127

Token 110: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.33872339129447937
    2. 'liste' → logprob: -1.7137234210968018
    3. 'list' → logprob: -3.2137234210968018
    4. ' list' → logprob: -3.2137234210968018
    5. 'inputs' → logprob: -4.088723182678223
    6. ' inputs' → logprob: -5.088723182678223
    7. '   ' → logprob: -6.713723182678223
    8. 'lists' → logprob: -7.588723182678223
    9. 's' → logprob: -7.588723182678223
    10. ' listes' → logprob: -8.463723182678223

Token 111: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020316695794463158
    2. '        
' → logprob: -4.6453166007995605
    3. '   ' → logprob: -5.3953166007995605
    4. '    ' → logprob: -6.7703166007995605
    5. '    
' → logprob: -6.7703166007995605
    6. ',' → logprob: -6.8953166007995605
    7. '     
' → logprob: -7.7703166007995605
    8. '       
' → logprob: -7.7703166007995605
    9. ' ' → logprob: -8.145317077636719
    10. '(' → logprob: -8.520317077636719

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008079977706074715
    2. '        
' → logprob: -5.383080005645752
    3. '   ' → logprob: -7.008080005645752
    4. '    
' → logprob: -7.133080005645752
    5. ' 
' → logprob: -7.383080005645752
    6. '     
' → logprob: -8.383079528808594
    7. 'n' → logprob: -8.758079528808594
    8. '    ' → logprob: -9.258079528808594
    9. '       
' → logprob: -9.383079528808594
    10. ' try' → logprob: -9.883079528808594

Token 113: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.9613677859306335
    2. ' user' → logprob: -1.7113678455352783
    3. ' inputs' → logprob: -1.8363678455352783
    4. 'value' (adapté à ' value') → logprob: -2.3363678455352783
    5. 'user' → logprob: -2.9613678455352783
    6. 'inputs' → logprob: -3.2113678455352783
    7. ' input' → logprob: -4.211367607116699
    8. 'input' → logprob: -4.461367607116699
    9. '   ' → logprob: -4.461367607116699
    10. ' val' → logprob: -4.461367607116699

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017367053078487515
    2. '=' → logprob: -6.376736640930176
    3. '_' → logprob: -10.751736640930176
    4. 's' → logprob: -12.001736640930176
    5. ' ' → logprob: -12.751736640930176
    6. ' =
' → logprob: -13.251736640930176
    7. '=int' → logprob: -14.376736640930176
    8. ')' → logprob: -14.501736640930176
    9. ',' → logprob: -15.251736640930176
    10. '_input' → logprob: -15.501736640930176

Token 115: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.004826799500733614
    2. 'int' → logprob: -5.50482702255249
    3. ' input' → logprob: -7.25482702255249
    4. ' ' → logprob: -10.379826545715332
    5. 'input' → logprob: -12.254826545715332
    6. '	int' → logprob: -13.379826545715332
    7. ' in' → logprob: -13.379826545715332
    8. ' ' → logprob: -13.629826545715332
    9. '  ' → logprob: -14.504826545715332
    10. '   ' → logprob: -16.00482749938965

Token 116: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04860621318221092
    2. '(' → logprob: -3.0486061573028564
    3. 'input' → logprob: -11.423605918884277
    4. '(
' → logprob: -11.798605918884277
    5. ' (' → logprob: -15.923605918884277
    6. '(

' → logprob: -16.423606872558594
    7. ' input' → logprob: -17.173606872558594
    8. '(in' → logprob: -17.423606872558594
    9. '=input' → logprob: -17.423606872558594
    10. ' ' → logprob: -17.673606872558594

Token 117: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.6211293935775757
    2. '(' → logprob: -0.8711293935775757
    3. '("' → logprob: -3.4961295127868652
    4. '("("' → logprob: -4.371129512786865
    5. '("(' → logprob: -7.371129512786865
    6. '('' → logprob: -8.246129035949707
    7. '(
' → logprob: -8.496129035949707
    8. '(">' → logprob: -9.246129035949707
    9. '(

' → logprob: -11.371129035949707
    10. '()' → logprob: -12.121129035949707

Token 118: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0034685709979385138
    2. '"S' → logprob: -6.0034685134887695
    3. '("' → logprob: -7.3784685134887695
    4. ''' → logprob: -8.12846851348877
    5. '(' → logprob: -10.87846851348877
    6. 'Ent' → logprob: -11.12846851348877
    7. '">' → logprob: -12.37846851348877
    8. '"In' → logprob: -12.50346851348877
    9. '(
' → logprob: -12.62846851348877
    10. ''S' → logprob: -12.62846851348877

Token 119: 'Ent' (ID: 3263)
  Prédit: 'Ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ent' → logprob: -0.035782624036073685
    2. 'Entr' → logprob: -3.9107825756073
    3. 'Enter' → logprob: -5.160782814025879
    4. 'Veuillez' → logprob: -5.410782814025879
    5. 'S' → logprob: -6.285782814025879
    6. '"' → logprob: -6.285782814025879
    7. 'Vale' → logprob: -7.035782814025879
    8. '"S' → logprob: -9.660782814025879
    9. ' Ent' → logprob: -9.785782814025879
    10. 'Please' → logprob: -10.285782814025879

Token 120: 'rez' (ID: 13676)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.014749223366379738
    2. 'rez' → logprob: -4.639749050140381
    3. 're' → logprob: -6.514749050140381
    4. ' ier' → logprob: -6.764749050140381
    5. 'er' → logprob: -7.139749050140381
    6. 'rier' → logprob: -7.639749050140381
    7. 'rer' → logprob: -7.764749050140381
    8. 'rée' → logprob: -8.389749526977539
    9. 'ree' → logprob: -8.889749526977539
    10. '   ' → logprob: -9.639749526977539

Token 121: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3496468663215637
    2. ' l' → logprob: -1.599646806716919
    3. ' la' → logprob: -3.349646806716919
    4. ' le' → logprob: -3.724646806716919
    5. ' ' → logprob: -4.224647045135498
    6. ' valeur' → logprob: -4.724647045135498
    7. ' une' → logprob: -5.849647045135498
    8. ' votre' → logprob: -6.099647045135498
    9. ' nombre' → logprob: -6.349647045135498
    10. ' value' → logprob: -7.599647045135498

Token 122: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.05255306139588356
    2. ' ' → logprob: -3.302553176879883
    3. ' nombre' → logprob: -4.302553176879883
    4. 'ent' → logprob: -7.677553176879883
    5. ' entière' → logprob: -9.552553176879883
    6. '  ' → logprob: -9.677553176879883
    7. ' valeur' → logprob: -9.677553176879883
    8. '_' → logprob: -10.177553176879883
    9. ' integer' → logprob: -10.427553176879883
    10. ' ent' → logprob: -10.427553176879883

Token 123: ' ({' (ID: 16472)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.36148348450660706
    2. ' ({' → logprob: -2.236483573913574
    3. ' :' → logprob: -3.111483573913574
    4. ':' → logprob: -3.486483573913574
    5. ' numéro' → logprob: -3.486483573913574
    6. '{' → logprob: -3.736483573913574
    7. ' pour' → logprob: -3.986483573913574
    8. ' (' → logprob: -3.986483573913574
    9. ' ' → logprob: -4.861483573913574
    10. ' (#' → logprob: -5.236483573913574

Token 124: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0013690461637452245
    2. ' i' → logprob: -6.626368999481201
    3. '{i' → logprob: -10.62636947631836
    4. '
' → logprob: -11.75136947631836
    5. ' ' → logprob: -12.75136947631836
    6. '

' → logprob: -13.50136947631836
    7. ' 
' → logprob: -13.87636947631836
    8. '1' → logprob: -14.00136947631836
    9. '   ' → logprob: -14.12636947631836
    10. ')i' → logprob: -14.50136947631836

Token 125: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47407785058021545
    2. ' +' → logprob: -0.9740778207778931
    3. ' +
' → logprob: -15.474078178405762
    4. ' ' → logprob: -15.724078178405762
    5. '}' → logprob: -15.724078178405762
    6. '+
' → logprob: -15.974078178405762
    7. '1' → logprob: -16.724077224731445
    8. ' plus' → logprob: -17.099077224731445
    9. ' ' → logprob: -17.474077224731445
    10. '}+' → logprob: -18.099077224731445

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00584334647282958
    2. ' +' → logprob: -5.880843162536621
    3. '+' → logprob: -6.130843162536621
    4. ' ' → logprob: -7.630843162536621
    5. '}' → logprob: -8.130843162536621
    6. '}/{' → logprob: -10.255843162536621
    7. '   ' → logprob: -11.005843162536621
    8. '}/' → logprob: -12.255843162536621
    9. ' }' → logprob: -12.380843162536621
    10. '/' → logprob: -12.630843162536621

Token 127: '}/{' (ID: 46407)
  Prédit: '}/{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}/{' → logprob: -0.058077845722436905
    2. '}' → logprob: -2.933077812194824
    3. '/' → logprob: -5.933077812194824
    4. '}/' → logprob: -8.058077812194824
    5. '}/${' → logprob: -8.933077812194824
    6. '})' → logprob: -9.683077812194824
    7. ' }' → logprob: -11.558077812194824
    8. ')' → logprob: -12.058077812194824
    9. ' /' → logprob: -12.183077812194824
    10. '}")' → logprob: -13.183077812194824

Token 128: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.02324768900871277
    2. ' num' → logprob: -3.773247718811035
    3. ')' → logprob: -14.398247718811035
    4. '
' → logprob: -14.898247718811035
    5. '	num' → logprob: -15.148247718811035
    6. ',num' → logprob: -15.398247718811035
    7. '<num' → logprob: -15.523247718811035
    8. '{' → logprob: -15.648247718811035
    9. ' ' → logprob: -16.02324676513672
    10. ' )' → logprob: -16.39824676513672

Token 129: '_inputs' (ID: 67304)
  Prédit: '_inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -0.02413271926343441
    2. 'puts' → logprob: -4.02413272857666
    3. 'put' → logprob: -5.39913272857666
    4. 'inputs' → logprob: -6.77413272857666
    5. 'ut' → logprob: -9.39913272857666
    6. 'uts' → logprob: -9.64913272857666
    7. '   ' → logprob: -10.39913272857666
    8. 't' → logprob: -10.89913272857666
    9. 's' → logprob: -11.02413272857666
    10. '_' → logprob: -11.02413272857666

Token 130: '})' (ID: 9263)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.02082073502242565
    2. '})' → logprob: -3.8958206176757812
    3. ')' → logprob: -8.270820617675781
    4. '):' → logprob: -11.520820617675781
    5. ' }):' → logprob: -12.020820617675781
    6. ')}' → logprob: -13.645820617675781
    7. '}")' → logprob: -13.895820617675781
    8. '}:' → logprob: -14.145820617675781
    9. ' ' → logprob: -14.145820617675781
    10. ' })' → logprob: -14.270820617675781

Token 131: ' :' (ID: 712)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12811379134655
    2. ')' → logprob: -2.1281137466430664
    3. '"):' → logprob: -7.628113746643066
    4. ':' → logprob: -8.378113746643066
    5. '")' → logprob: -8.503113746643066
    6. '}' → logprob: -8.628113746643066
    7. '}:' → logprob: -10.128113746643066
    8. ')")' → logprob: -10.878113746643066
    9. ''):' → logprob: -11.253113746643066
    10. ' ):' → logprob: -12.253113746643066

Token 132: ' "))
' (ID: 94820)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.007144059520214796
    2. ' "))' → logprob: -5.382143974304199
    3. '"))
' → logprob: -6.382143974304199
    4. '")' → logprob: -7.882143974304199
    5. '"' → logprob: -8.7571439743042
    6. '))' → logprob: -9.1321439743042
    7. ')' → logprob: -9.1321439743042
    8. ' "))
' → logprob: -10.6321439743042
    9. '"))
' → logprob: -11.1321439743042
    10. ')")' → logprob: -11.2571439743042

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08112082630395889
    2. ')' → logprob: -3.331120729446411
    3. 'inputs' → logprob: -4.45612096786499
    4. '
' → logprob: -4.58112096786499
    5. ')
' → logprob: -4.83112096786499
    6. '        
' → logprob: -5.58112096786499
    7. '    
' → logprob: -5.95612096786499
    8. ' 
' → logprob: -6.45612096786499
    9. '   ' → logprob: -6.45612096786499
    10. ' inputs' → logprob: -6.58112096786499

Token 134: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' (adapté à ' inputs') → logprob: -0.1191507875919342
    2. ' inputs' → logprob: -2.2441508769989014
    3. '       ' → logprob: -5.619150638580322
    4. '   ' → logprob: -7.119150638580322
    5. ' 
' → logprob: -7.369150638580322
    6. '    
' → logprob: -7.869150638580322
    7. '        
' → logprob: -8.11915111541748
    8. ')' → logprob: -8.61915111541748
    9. '
' → logprob: -9.11915111541748
    10. '(inputs' → logprob: -9.36915111541748

Token 135: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005241106729954481
    2. '.' → logprob: -5.2552409172058105
    3. '.app' → logprob: -13.005241394042969
    4. ' .' → logprob: -13.255241394042969
    5. '.extend' → logprob: -13.630241394042969
    6. '.push' → logprob: -14.255241394042969
    7. 'append' → logprob: -14.255241394042969
    8. '.Append' → logprob: -14.755241394042969
    9. '.ap' → logprob: -16.00524139404297
    10. '.add' → logprob: -16.38024139404297

Token 136: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.00020520923135336488
    2. '(' → logprob: -8.500205039978027
    3. ' (' → logprob: -13.625205039978027
    4. 'value' → logprob: -14.500205039978027
    5. '(
' → logprob: -17.375205993652344
    6. ')value' → logprob: -17.375205993652344
    7. ' value' → logprob: -17.625205993652344
    8. '(val' → logprob: -19.875205993652344
    9. '(valor' → logprob: -20.000205993652344
    10. '(v' → logprob: -20.125205993652344

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024251631111837924
    2. ')
' → logprob: -8.375242233276367
    3. ' )' → logprob: -11.875242233276367
    4. '   ' → logprob: -12.500242233276367
    5. '       ' → logprob: -14.875242233276367
    6. '))' → logprob: -15.625242233276367
    7. '`)' → logprob: -15.875242233276367
    8. ' ' → logprob: -16.125242233276367
    9. ')`' → logprob: -16.125242233276367
    10. ')return' → logprob: -16.375242233276367

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36916521191596985
    2. '
' → logprob: -2.2441651821136475
    3. '    
' → logprob: -2.4941651821136475
    4. 'return' → logprob: -2.6191651821136475
    5. ' return' → logprob: -3.9941651821136475
    6. ' 
' → logprob: -4.869165420532227
    7. '  
' → logprob: -4.994165420532227
    8. '\n' → logprob: -5.369165420532227
    9. 'r' → logprob: -5.494165420532227
    10. '\' → logprob: -6.869165420532227

Token 139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014225331135094166
    2. '   ' → logprob: -4.514225482940674
    3. ' return' → logprob: -5.764225482940674
    4. '    
' → logprob: -11.014225006103516
    5. '
' → logprob: -11.639225006103516
    6. '	return' → logprob: -12.889225006103516
    7. ' ' → logprob: -13.014225006103516
    8. '```' → logprob: -13.014225006103516
    9. ':return' → logprob: -14.514225006103516
    10. '  
' → logprob: -14.639225006103516

Token 140: ' inputs' (ID: 21963)
  Prédit: ' inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inputs' → logprob: -0.002476016292348504
    2. 'inputs' → logprob: -6.002476215362549
    3. ' ' → logprob: -15.37747573852539
    4. '(inputs' → logprob: -16.25247573852539
    5. ' ' → logprob: -17.37747573852539
    6. ' input' → logprob: -18.50247573852539
    7. '_inputs' → logprob: -19.25247573852539
    8. 'Inputs' → logprob: -19.75247573852539
    9. ' outputs' → logprob: -20.62747573852539
    10. '.inputs' → logprob: -20.75247573852539

Token 141: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5663515329360962
    2. '<|end|>' → logprob: -1.1913515329360962
    3. '\n' → logprob: -2.9413514137268066
    4. '#' → logprob: -3.8163514137268066
    5. '```' → logprob: -3.8163514137268066
    6. '[' → logprob: -4.941351413726807
    7. 'newline' → logprob: -5.066351413726807
    8. '' → logprob: -6.066351413726807
    9. '\' → logprob: -6.066351413726807
    10. ' ' → logprob: -6.191351413726807

Token 142: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6698690056800842
    2. '#' → logprob: -0.9198690056800842
    3. '<|end|>' → logprob: -3.4198689460754395
    4. '\n' → logprob: -4.1698689460754395
    5. 'def' → logprob: -4.4198689460754395
    6. '```' → logprob: -4.6698689460754395
    7. '\' → logprob: -4.7948689460754395
    8. '' → logprob: -5.7948689460754395
    9. '[' → logprob: -6.2948689460754395
    10. '

' → logprob: -6.4198689460754395

Token 143: ' find' (ID: 1646)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.09930501878261566
    2. ' main' → logprob: -3.4743049144744873
    3. ' compute' → logprob: -3.5993049144744873
    4. ' sum' → logprob: -4.224305152893066
    5. ' process' → logprob: -4.599305152893066
    6. ' calcul' → logprob: -4.974305152893066
    7. ' ' → logprob: -6.724305152893066
    8. ' square' → logprob: -7.224305152893066
    9. ' add' → logprob: -7.474305152893066
    10. 'calculate' → logprob: -7.599305152893066

Token 144: '_unique' (ID: 51840)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.4825817942619324
    2. '_' → logprob: -0.9825817942619324
    3. '_min' → logprob: -5.607581615447998
    4. '_unique' → logprob: -7.107581615447998
    5. '_missing' → logprob: -7.107581615447998
    6. '_sub' → logprob: -8.107582092285156
    7. '_m' → logprob: -8.107582092285156
    8. ' _' → logprob: -8.107582092285156
    9. '_best' → logprob: -8.482582092285156
    10. '_sum' → logprob: -8.482582092285156

Token 145: '_element' (ID: 21131)
  Prédit: '_elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.3090849816799164
    2. '_numbers' → logprob: -2.059084892272949
    3. '_values' → logprob: -2.184084892272949
    4. '_' → logprob: -4.309084892272949
    5. '_element' → logprob: -4.934084892272949
    6. '_value' → logprob: -6.434084892272949
    7. '_number' → logprob: -7.559084892272949
    8. '_in' → logprob: -7.559084892272949
    9. '_items' → logprob: -7.559084892272949
    10. '_indices' → logprob: -8.30908489227295

Token 146: '(full' (ID: 59745)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23575101792812347
    2. '(lst' → logprob: -1.9857510328292847
    3. '(nums' → logprob: -3.485750913619995
    4. '(arr' → logprob: -3.860750913619995
    5. '(elements' → logprob: -4.860751152038574
    6. '(numbers' → logprob: -5.485751152038574
    7. '(array' → logprob: -5.985751152038574
    8. ' (' → logprob: -6.110751152038574
    9. '(items' → logprob: -6.610751152038574
    10. '_' → logprob: -7.485751152038574

Token 147: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.1841299682855606
    2. '_array' → logprob: -1.8091299533843994
    3. '_' → logprob: -6.1841301918029785
    4. '_arr' → logprob: -7.3091301918029785
    5. '_lst' → logprob: -7.6841301918029785
    6. 's' → logprob: -8.55912971496582
    7. 'array' → logprob: -8.68412971496582
    8. '_l' → logprob: -8.80912971496582
    9. '_set' → logprob: -8.80912971496582
    10. ')' → logprob: -9.43412971496582

Token 148: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03723416477441788
    2. ',' → logprob: -3.66223406791687
    3. ')' → logprob: -4.787234306335449
    4. ' ):' → logprob: -6.162234306335449
    5. '):
' → logprob: -9.03723430633545
    6. ':' → logprob: -9.41223430633545
    7. '_list' → logprob: -9.66223430633545
    8. ' ,' → logprob: -9.91223430633545
    9. ' )' → logprob: -10.66223430633545
    10. '   ' → logprob: -10.66223430633545

Token 149: ' exclude' (ID: 39566)
  Prédit: ' unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' unique' → logprob: -0.4165307283401489
    2. ' target' → logprob: -1.291530728340149
    3. 'unique' → logprob: -3.6665306091308594
    4. ' element' → logprob: -4.666530609130859
    5. ' key' → logprob: -5.041530609130859
    6. 'target' → logprob: -5.166530609130859
    7. ' k' → logprob: -6.041530609130859
    8. ' subset' → logprob: -6.291530609130859
    9. ' sub' → logprob: -6.666530609130859
    10. ' partial' → logprob: -6.666530609130859

Token 150: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.11946681141853333
    2. '_elements' → logprob: -2.869466781616211
    3. '_' → logprob: -3.494466781616211
    4. 'ed' → logprob: -4.494466781616211
    5. '_duplicates' → logprob: -5.744466781616211
    6. '_items' → logprob: -6.119466781616211
    7. '_element' → logprob: -6.369466781616211
    8. '_values' → logprob: -6.369466781616211
    9. ')' → logprob: -6.744466781616211
    10. '_unique' → logprob: -7.369466781616211

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007224892731755972
    2. ')' → logprob: -5.007225036621094
    3. ',' → logprob: -8.007225036621094
    4. ' ):' → logprob: -8.757225036621094
    5. ':' → logprob: -11.632225036621094
    6. '):
' → logprob: -12.132225036621094
    7. ' )' → logprob: -14.007225036621094
    8. '=' → logprob: -14.132225036621094
    9. '_list' → logprob: -14.507225036621094
    10. '   ' → logprob: -14.757225036621094

Token 152: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033671122509986162
    2. '(
' → logprob: -6.503366947174072
    3. '(full' → logprob: -7.628366947174072
    4. '   ' → logprob: -7.878366947174072
    5. ' (' → logprob: -7.878366947174072
    6. ':' → logprob: -8.37836742401123
    7. '_' → logprob: -8.75336742401123
    8. ' ' → logprob: -9.87836742401123
    9. '[' → logprob: -10.00336742401123
    10. ''' → logprob: -10.50336742401123

Token 153: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38728073239326477
    2. ' for' → logprob: -1.3872807025909424
    3. ' """
' → logprob: -3.3872807025909424
    4. '    ' → logprob: -4.3872809410095215
    5. ' 
' → logprob: -5.2622809410095215
    6. ' unique' → logprob: -5.2622809410095215
    7. 'for' → logprob: -5.7622809410095215
    8. ' """' → logprob: -6.0122809410095215
    9. '    
' → logprob: -6.2622809410095215
    10. ' full' → logprob: -6.7622809410095215

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5166452527046204
    2. ' for' → logprob: -1.1416451930999756
    3. ' unique' → logprob: -3.6416451930999756
    4. 'for' → logprob: -3.8916451930999756
    5. ' """
' → logprob: -4.391645431518555
    6. ' #' → logprob: -5.266645431518555
    7. ' 
' → logprob: -5.266645431518555
    8. '    
' → logprob: -5.641645431518555
    9. ' full' → logprob: -6.141645431518555
    10. '#' → logprob: -6.641645431518555

Token 155: ' Trou' (ID: 58947)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10390976071357727
    2. ' Trou' → logprob: -3.103909730911255
    3. 'Trou' (adapté à ' Trou') → logprob: -3.228909730911255
    4. ' """
' → logprob: -5.603909969329834
    5. '"""
' → logprob: -5.978909969329834
    6. ' Ident' → logprob: -6.728909969329834
    7. '    ' → logprob: -6.728909969329834
    8. 'Ident' → logprob: -6.728909969329834
    9. '
' → logprob: -7.478909969329834
    10. '#' → logprob: -7.853909969329834

Token 156: 've' (ID: 737)
  Prédit: 've'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.0003213997988495976
    2. '   ' → logprob: -9.250321388244629
    3. '
' → logprob: -9.375321388244629
    4. 'v' → logprob: -10.875321388244629
    5. '

' → logprob: -11.375321388244629
    6. '    ' → logprob: -11.500321388244629
    7. '     ' → logprob: -11.500321388244629
    8. '  ' → logprob: -11.625321388244629
    9. '       ' → logprob: -11.625321388244629
    10. '\' → logprob: -11.750321388244629

Token 157: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.015032495371997356
    2. ' ' → logprob: -4.5150322914123535
    3. ' un' → logprob: -6.8900322914123535
    4. ' la' → logprob: -7.1400322914123535
    5. ' le' → logprob: -7.2650322914123535
    6. 'l' → logprob: -7.6400322914123535
    7. '_l' → logprob: -8.390032768249512
    8. ' lâ' → logprob: -8.390032768249512
    9. ' the' → logprob: -9.140032768249512
    10. '_' → logprob: -9.265032768249512

Token 158: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012108124792575836
    2. ' élément' → logprob: -6.012108325958252
    3. ''é' → logprob: -6.012108325958252
    4. 'élé' → logprob: -6.262108325958252
    5. '   ' → logprob: -6.637108325958252
    6. 'e' → logprob: -7.012108325958252
    7. 'a' → logprob: -7.012108325958252
    8. ''un' → logprob: -7.262108325958252
    9. '_' → logprob: -8.512107849121094
    10. '’' → logprob: -8.512107849121094

Token 159: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0012347568990662694
    2. ' élément' → logprob: -7.501234531402588
    3. ''' → logprob: -8.001235008239746
    4. 'unique' → logprob: -8.751235008239746
    5. 'é' → logprob: -9.876235008239746
    6. 'él' → logprob: -10.376235008239746
    7. '
' → logprob: -10.751235008239746
    8. '`' → logprob: -11.001235008239746
    9. ' ' → logprob: -11.626235008239746
    10. '_' → logprob: -12.001235008239746

Token 160: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.000452241423772648
    2. 'men' → logprob: -9.250452041625977
    3. 'ément' → logprob: -9.375452041625977
    4. 'm' → logprob: -9.375452041625977
    5. 'me' → logprob: -10.000452041625977
    6. ' ment' → logprob: -10.750452041625977
    7. 'ement' → logprob: -11.000452041625977
    8. '   ' → logprob: -11.250452041625977
    9. 'ments' → logprob: -11.375452041625977
    10. 'ent' → logprob: -11.625452041625977

Token 161: ' unique' (ID: 5746)
  Prédit: ' unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unique' → logprob: -0.07726970314979553
    2. '_unique' → logprob: -3.0772697925567627
    3. ' qui' → logprob: -4.202269554138184
    4. ' présent' → logprob: -4.827269554138184
    5. 'unique' → logprob: -5.827269554138184
    6. '_' → logprob: -7.327269554138184
    7. ' present' → logprob: -7.327269554138184
    8. ' dans' → logprob: -7.952269554138184
    9. ' ' → logprob: -9.077269554138184
    10. 'prés' → logprob: -9.202269554138184

Token 162: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8772440552711487
    2. ' ' → logprob: -0.8772440552711487
    3. ' de' → logprob: -3.252243995666504
    4. ' dans' → logprob: -3.252243995666504
    5. '<|end|>' → logprob: -3.252243995666504
    6. ' qui' → logprob: -4.252243995666504
    7. '_d' → logprob: -5.377243995666504
    8. ' in' → logprob: -5.502243995666504
    9. ' present' → logprob: -5.627243995666504
    10. ',' → logprob: -5.752243995666504

Token 163: ' full' (ID: 3149)
  Prédit: ' full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' full' → logprob: -0.0018844923470169306
    2. 'full' → logprob: -6.376884460449219
    3. ' la' → logprob: -9.251884460449219
    4. ' ' → logprob: -10.751884460449219
    5. '	full' → logprob: -11.376884460449219
    6. ' `' → logprob: -11.751884460449219
    7. ' ' → logprob: -11.751884460449219
    8. ' set' → logprob: -11.751884460449219
    9. ' le' → logprob: -11.751884460449219
    10. '_full' → logprob: -12.626884460449219

Token 164: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.003045331686735153
    2. '_' → logprob: -6.003045558929443
    3. '_l' → logprob: -7.878045558929443
    4. ' _' → logprob: -8.753045082092285
    5. '_li' → logprob: -11.128045082092285
    6. '_lst' → logprob: -12.253045082092285
    7. '_lista' → logprob: -12.503045082092285
    8. '\' → logprob: -13.128045082092285
    9. '_lists' → logprob: -13.753045082092285
    10. '_L' → logprob: -14.003045082092285

Token 165: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.026967985555529594
    2. '   ' → logprob: -4.526968002319336
    3. ' that' → logprob: -4.526968002319336
    4. ' ' → logprob: -6.151968002319336
    5. ',' → logprob: -6.901968002319336
    6. ' (' → logprob: -8.026968002319336
    7. '_' → logprob: -8.651968002319336
    8. ' def' → logprob: -8.651968002319336
    9. ' ,' → logprob: -8.651968002319336
    10. ' que' → logprob: -9.026968002319336

Token 166: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.017947634682059288
    2. ' not' → logprob: -4.767947673797607
    3. 'n' → logprob: -5.267947673797607
    4. ' ne' → logprob: -5.642947673797607
    5. ' est' → logprob: -8.14294719696045
    6. ' ' → logprob: -9.39294719696045
    7. '   ' → logprob: -9.51794719696045
    8. 'n't' → logprob: -10.01794719696045
    9. 'not' → logprob: -11.01794719696045
    10. ' is' → logprob: -11.26794719696045

Token 167: ''est' (ID: 6616)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.5483917593955994
    2. 'pas' → logprob: -1.6733918190002441
    3. ' est' → logprob: -2.798391819000244
    4. ''est' → logprob: -2.923391819000244
    5. '<|end|>' → logprob: -3.048391819000244
    6. ' appartient' → logprob: -3.923391819000244
    7. 'est' → logprob: -4.298391819000244
    8. ' is' → logprob: -4.673391819000244
    9. 'a' → logprob: -5.423391819000244
    10. 'e' → logprob: -5.423391819000244

Token 168: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.009190810844302177
    2. 'pas' → logprob: -4.759191036224365
    3. ' present' → logprob: -8.009190559387207
    4. ' présent' → logprob: -8.634190559387207
    5. 'present' → logprob: -10.134190559387207
    6. 'prés' → logprob: -11.384190559387207
    7. ' ' → logprob: -12.134190559387207
    8. '_pas' → logprob: -12.759190559387207
    9. ' présente' → logprob: -13.509190559387207
    10. '<|end|>' → logprob: -13.759190559387207

Token 169: ' présent' (ID: 24129)
  Prédit: ' présent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' présent' → logprob: -0.7511106729507446
    2. ' dans' → logprob: -1.6261106729507446
    3. ' present' → logprob: -1.8761106729507446
    4. 'prés' → logprob: -2.751110553741455
    5. 'dans' → logprob: -3.251110553741455
    6. 'present' → logprob: -3.376110553741455
    7. ' in' → logprob: -3.751110553741455
    8. '<|end|>' → logprob: -5.376110553741455
    9. '_present' → logprob: -5.626110553741455
    10. ' présente' → logprob: -5.876110553741455

Token 170: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.3172362148761749
    2. ' in' → logprob: -1.6922361850738525
    3. ' ' → logprob: -2.8172361850738525
    4. 'dans' → logprob: -3.6922361850738525
    5. 'in' → logprob: -6.817236423492432
    6. ' ' → logprob: -7.692236423492432
    7. 's' → logprob: -7.817236423492432
    8. '<|end|>' → logprob: -8.192235946655273
    9. '_' → logprob: -8.692235946655273
    10. '  ' → logprob: -9.067235946655273

Token 171: ' exclude' (ID: 39566)
  Prédit: ' exclude'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exclude' → logprob: -0.11283241957426071
    2. 'exclude' → logprob: -2.2378323078155518
    3. ' excl' → logprob: -11.987832069396973
    4. ' ' → logprob: -13.487832069396973
    5. '.exclude' → logprob: -14.612832069396973
    6. 'ex' → logprob: -15.112832069396973
    7. 'excluded' → logprob: -15.237832069396973
    8. '   ' → logprob: -15.237832069396973
    9. '	ex' → logprob: -15.362832069396973
    10. ' excluded' → logprob: -15.487832069396973

Token 172: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0012777344090864062
    2. '_' → logprob: -7.376277923583984
    3. '_l' → logprob: -7.501277923583984
    4. ' _' → logprob: -9.626277923583984
    5. '_li' → logprob: -11.626277923583984
    6. '\' → logprob: -12.001277923583984
    7. '_lists' → logprob: -12.376277923583984
    8. '_lst' → logprob: -12.626277923583984
    9. '_full' → logprob: -13.126277923583984
    10. '_lista' → logprob: -13.626277923583984

Token 173: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02915925160050392
    2. ':' → logprob: -4.154159069061279
    3. ',' → logprob: -4.904159069061279
    4. '   ' → logprob: -5.904159069061279
    5. '.
' → logprob: -6.654159069061279
    6. ' :' → logprob: -7.279159069061279
    7. ' .' → logprob: -7.404159069061279
    8. ':
' → logprob: -8.904159545898438
    9. ' ,' → logprob: -10.404159545898438
    10. ' :
' → logprob: -10.654159545898438

Token 174: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025178218260407448
    2. ':' → logprob: -5.0251784324646
    3. ' 
' → logprob: -5.2751784324646
    4. '    
' → logprob: -5.4001784324646
    5. '
' → logprob: -6.0251784324646
    6. '"' → logprob: -6.2751784324646
    7. '   
' → logprob: -7.4001784324646
    8. ':
' → logprob: -7.5251784324646
    9. '.' → logprob: -7.5251784324646
    10. ')' → logprob: -7.6501784324646

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015407454338856041
    2. '    
' → logprob: -9.125154495239258
    3. '
' → logprob: -10.500154495239258
    4. '    ' → logprob: -12.000154495239258
    5. '  ' → logprob: -12.625154495239258
    6. '  
' → logprob: -13.375154495239258
    7. ' 
' → logprob: -14.250154495239258
    8. '       ' → logprob: -14.250154495239258
    9. ' full' → logprob: -14.250154495239258
    10. '   
' → logprob: -14.250154495239258

Token 176: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032145457807928324
    2. '
' → logprob: -6.503214359283447
    3. '    
' → logprob: -6.878214359283447
    4. '    ' → logprob: -8.753214836120605
    5. ' full' → logprob: -9.003214836120605
    6. ' for' → logprob: -9.128214836120605
    7. 'for' → logprob: -10.128214836120605
    8. '"""
' → logprob: -10.503214836120605
    9. '#' → logprob: -10.628214836120605
    10. '  ' → logprob: -10.753214836120605

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1692628115415573
    2. '   ' → logprob: -2.1692628860473633
    3. ')' → logprob: -4.294262886047363
    4. ' :' → logprob: -4.794262886047363
    5. '):' → logprob: -5.044262886047363
    6. '=' → logprob: -5.669262886047363
    7. '       ' → logprob: -5.919262886047363
    8. ' (' → logprob: -6.419262886047363
    9. '):
' → logprob: -6.669262886047363
    10. '(' → logprob: -7.044262886047363

Token 178: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43598631024360657
    2. ' full' → logprob: -1.0609862804412842
    3. '       ' → logprob: -5.060986518859863
    4. 'full' → logprob: -7.310986518859863
    5. '	full' → logprob: -9.560986518859863
    6. '    ' → logprob: -9.810986518859863
    7. '   ' → logprob: -9.935986518859863
    8. ' ' → logprob: -10.935986518859863
    9. '  ' → logprob: -11.060986518859863
    10. '    
' → logprob: -11.185986518859863

Token 179: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' (adapté à ' full') → logprob: -0.3488384783267975
    2. ' full' → logprob: -1.223838448524475
    3. '   ' → logprob: -8.848838806152344
    4. 'list' → logprob: -9.348838806152344
    5. 'Full' → logprob: -10.223838806152344
    6. 'exclude' → logprob: -10.473838806152344
    7. 'return' → logprob: -11.473838806152344
    8. '
' → logprob: -11.598838806152344
    9. '	full' → logprob: -11.598838806152344
    10. '(full' → logprob: -11.598838806152344

Token 180: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00021331508469302207
    2. '_' → logprob: -8.875213623046875
    3. '_l' → logprob: -9.875213623046875
    4. '   ' → logprob: -11.625213623046875
    5. ' _' → logprob: -12.000213623046875
    6. '_lists' → logprob: -13.250213623046875
    7. 'List' → logprob: -14.125213623046875
    8. '_lista' → logprob: -14.375213623046875
    9. '```' → logprob: -14.500213623046875
    10. '_li' → logprob: -14.500213623046875

Token 181: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.032586693763733
    2. '):' → logprob: -1.407586693763733
    3. ' (' → logprob: -1.532586693763733
    4. ' :' → logprob: -2.0325865745544434
    5. ')' → logprob: -3.4075865745544434
    6. ',' → logprob: -5.032586574554443
    7. ' ):' → logprob: -5.157586574554443
    8. '   ' → logprob: -6.282586574554443
    9. '):
' → logprob: -6.657586574554443
    10. ' ,' → logprob: -6.782586574554443

Token 182: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0017344404477626085
    2. ' list' → logprob: -6.376734256744385
    3. '   ' → logprob: -10.501734733581543
    4. ')' → logprob: -13.126734733581543
    5. 'List' → logprob: -13.626734733581543
    6. '(list' → logprob: -15.126734733581543
    7. ' ' → logprob: -15.376734733581543
    8. '```' → logprob: -15.501734733581543
    9. '       ' → logprob: -15.626734733581543
    10. '  ' → logprob: -15.751734733581543

Token 183: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008070098701864481
    2. ')' → logprob: -7.75080680847168
    3. ':' → logprob: -8.87580680847168
    4. '):
' → logprob: -9.00080680847168
    5. ' ):' → logprob: -10.12580680847168
    6. ',' → logprob: -10.50080680847168
    7. '   ' → logprob: -10.50080680847168
    8. '[' → logprob: -12.00080680847168
    9. '[int' → logprob: -12.00080680847168
    10. ' ' → logprob: -13.87580680847168

Token 184: ' La' (ID: 3038)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7027948498725891
    2. 'list' → logprob: -0.7027948498725891
    3. '   ' → logprob: -5.452795028686523
    4. 'La' → logprob: -5.702795028686523
    5. '       ' → logprob: -6.827795028686523
    6. 'List' → logprob: -8.202795028686523
    7. ' La' → logprob: -8.452795028686523
    8. ' la' → logprob: -8.577795028686523
    9. 'The' → logprob: -8.952795028686523
    10. '(list' → logprob: -11.202795028686523

Token 185: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.22583061456680298
    2. 'liste' → logprob: -1.6008305549621582
    3. 'list' → logprob: -8.100831031799316
    4. '   ' → logprob: -10.350831031799316
    5. 'Liste' → logprob: -11.100831031799316
    6. ' list' → logprob: -11.475831031799316
    7. ' Liste' → logprob: -11.725831031799316
    8. 'prem' → logprob: -11.850831031799316
    9. ' complète' → logprob: -11.975831031799316
    10. ' ' → logprob: -11.975831031799316

Token 186: ' complète' (ID: 75660)
  Prédit: ' complète'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complète' → logprob: -0.39167991280555725
    2. ' des' → logprob: -1.6416798830032349
    3. 'com' → logprob: -2.7666800022125244
    4. 'des' → logprob: -4.141679763793945
    5. 'compl' → logprob: -4.391679763793945
    6. '   ' → logprob: -4.641679763793945
    7. 'complete' → logprob: -5.141679763793945
    8. '<|end|>' → logprob: -5.266679763793945
    9. ' complet' → logprob: -5.641679763793945
    10. 'de' → logprob: -5.641679763793945

Token 187: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2686934769153595
    2. ')' → logprob: -2.893693447113037
    3. ',' → logprob: -2.893693447113037
    4. '   ' → logprob: -2.893693447113037
    5. 'des' → logprob: -3.768693447113037
    6. '<|end|>' → logprob: -3.893693447113037
    7. ':' → logprob: -5.018693447113037
    8. ' complète' → logprob: -5.393693447113037
    9. ' qui' → logprob: -6.018693447113037
    10. ' contenant' → logprob: -6.518693447113037

Token 188: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.023399215191602707
    2. ' éléments' → logprob: -3.7733991146087646
    3. 'val' → logprob: -9.898399353027344
    4. 'elements' → logprob: -10.148399353027344
    5. ' valeurs' → logprob: -10.648399353027344
    6. 'é' → logprob: -11.148399353027344
    7. 'él' → logprob: -11.273399353027344
    8. ' elements' → logprob: -12.398399353027344
    9. ' él' → logprob: -13.398399353027344
    10. ' ' → logprob: -13.898399353027344

Token 189: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03672316297888756
    2. ',' → logprob: -4.0367231369018555
    3. '       ' → logprob: -4.5367231369018555
    4. ' à' → logprob: -6.1617231369018555
    5. ' des' → logprob: -6.2867231369018555
    6. ')' → logprob: -6.7867231369018555
    7. '.' → logprob: -6.7867231369018555
    8. '    
' → logprob: -8.286723136901855
    9. '<|end|>' → logprob: -8.411723136901855
    10. ',
' → logprob: -9.036723136901855

Token 190: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07957170903682709
    2. ',' → logprob: -3.3295717239379883
    3. ')' → logprob: -3.8295717239379883
    4. '.' → logprob: -4.579571723937988
    5. '    
' → logprob: -5.704571723937988
    6. ',
' → logprob: -6.954571723937988
    7. '):
' → logprob: -7.079571723937988
    8. '       ' → logprob: -7.204571723937988
    9. ':' → logprob: -7.579571723937988
    10. '
' → logprob: -7.579571723937988

Token 191: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47561919689178467
    2. '       ' → logprob: -0.9756191968917847
    3. 'exclude' → logprob: -6.600619316101074
    4. ' exclude' → logprob: -9.350619316101074
    5. '    ' → logprob: -11.100619316101074
    6. '      ' → logprob: -11.225619316101074
    7. '  ' → logprob: -11.600619316101074
    8. '    
' → logprob: -11.600619316101074
    9. '
' → logprob: -11.725619316101074
    10. '     ' → logprob: -11.725619316101074

Token 192: ' exclude' (ID: 39566)
  Prédit: 'exclude'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exclude' (adapté à ' exclude') → logprob: -0.43238160014152527
    2. ' exclude' → logprob: -1.0573816299438477
    3. '   ' → logprob: -5.682381629943848
    4. '       ' → logprob: -8.557381629943848
    5. ' excl' → logprob: -11.182381629943848
    6. 'excluded' → logprob: -11.432381629943848
    7. '.exclude' → logprob: -11.557381629943848
    8. '
' → logprob: -11.807381629943848
    9. 'ex' → logprob: -12.057381629943848
    10. ' ' → logprob: -12.057381629943848

Token 193: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0002669384120963514
    2. '_l' → logprob: -8.750267028808594
    3. '_' → logprob: -9.625267028808594
    4. ' _' → logprob: -10.625267028808594
    5. '_lists' → logprob: -11.625267028808594
    6. '_li' → logprob: -12.250267028808594
    7. '_lst' → logprob: -13.750267028808594
    8. '_lista' → logprob: -14.250267028808594
    9. '\' → logprob: -14.875267028808594
    10. 's' → logprob: -15.500267028808594

Token 194: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0049526626244187355
    2. '(list' → logprob: -5.504952430725098
    3. ' ' → logprob: -7.129952430725098
    4. ':' → logprob: -10.379952430725098
    5. ')' → logprob: -10.754952430725098
    6. '   ' → logprob: -11.754952430725098
    7. ':list' → logprob: -12.504952430725098
    8. '  ' → logprob: -12.629952430725098
    9. '):' → logprob: -13.254952430725098
    10. '```' → logprob: -13.504952430725098

Token 195: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0010463856160640717
    2. ' list' → logprob: -6.876046180725098
    3. ')' → logprob: -11.626046180725098
    4. '(list' → logprob: -13.001046180725098
    5. 'set' → logprob: -13.126046180725098
    6. '   ' → logprob: -16.251047134399414
    7. ' )' → logprob: -16.751047134399414
    8. '):' → logprob: -16.876047134399414
    9. '[list' → logprob: -16.876047134399414
    10. ' (' → logprob: -17.501047134399414

Token 196: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000662280130200088
    2. ')' → logprob: -7.375662326812744
    3. ':' → logprob: -11.125661849975586
    4. ' ):' → logprob: -11.125661849975586
    5. '):
' → logprob: -13.000661849975586
    6. ' ' → logprob: -13.625661849975586
    7. '   ' → logprob: -13.750661849975586
    8. '**' → logprob: -14.500661849975586
    9. '):

' → logprob: -14.875661849975586
    10. '```' → logprob: -16.000661849975586

Token 197: ' La' (ID: 3038)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.16378740966320038
    2. ' La' → logprob: -2.163787364959717
    3. 'list' → logprob: -4.163787364959717
    4. 'La' → logprob: -4.413787364959717
    5. ' la' → logprob: -4.788787364959717
    6. 'List' → logprob: -9.538787841796875
    7. ' The' → logprob: -9.788787841796875
    8. ' A' → logprob: -10.913787841796875
    9. 'The' → logprob: -11.538787841796875
    10. ' liste' → logprob: -11.788787841796875

Token 198: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.5764232277870178
    2. 'liste' → logprob: -0.8264232277870178
    3. 'list' → logprob: -7.701423168182373
    4. ' list' → logprob: -11.701423645019531
    5. 'Liste' → logprob: -11.826423645019531
    6. ' Liste' → logprob: -12.951423645019531
    7. ' listes' → logprob: -13.201423645019531
    8. ' ' → logprob: -13.326423645019531
    9. 's' → logprob: -13.451423645019531
    10. '   ' → logprob: -13.576423645019531

Token 199: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.48626500368118286
    2. 'des' → logprob: -0.9862650036811829
    3. '_des' → logprob: -4.986265182495117
    4. ' à' → logprob: -6.361265182495117
    5. ':' → logprob: -6.986265182495117
    6. 'à' → logprob: -7.236265182495117
    7. '[' → logprob: -7.986265182495117
    8. 'd' → logprob: -8.236265182495117
    9. '```' → logprob: -8.236265182495117
    10. ' complète' → logprob: -8.611265182495117

Token 200: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.03388035297393799
    2. ' éléments' → logprob: -3.4088802337646484
    3. 'é' → logprob: -8.658880233764648
    4. 'elements' → logprob: -10.658880233764648
    5. 'él' → logprob: -10.783880233764648
    6. ' elements' → logprob: -12.908880233764648
    7. '_' → logprob: -13.033880233764648
    8. ' ' → logprob: -13.283880233764648
    9. ' é' → logprob: -13.408880233764648
    10. '```' → logprob: -13.658880233764648

Token 201: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6352667212486267
    2. 'à' → logprob: -0.7602667212486267
    3. '_' → logprob: -7.0102667808532715
    4. 'ex' → logprob: -7.6352667808532715
    5. '_ex' → logprob: -7.7602667808532715
    6. 'À' → logprob: -8.510266304016113
    7. ' ' → logprob: -8.885266304016113
    8. 'prés' → logprob: -9.135266304016113
    9. '_a' → logprob: -9.385266304016113
    10. ' présents' → logprob: -9.635266304016113

Token 202: ' excl' (ID: 57282)
  Prédit: ' excl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' excl' → logprob: -0.055207788944244385
    2. 'ex' → logprob: -2.9302077293395996
    3. 'exclude' → logprob: -9.180208206176758
    4. '_ex' → logprob: -10.055208206176758
    5. ' exclude' → logprob: -10.180208206176758
    6. ' ex' → logprob: -10.430208206176758
    7. ' excluding' → logprob: -10.930208206176758
    8. ' excluir' → logprob: -10.930208206176758
    9. '	ex' → logprob: -11.055208206176758
    10. ''ex' → logprob: -11.305208206176758

Token 203: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.026852982118725777
    2. 'uder' → logprob: -3.901853084564209
    3. 'urer' → logprob: -5.651853084564209
    4. 'uer' → logprob: -6.776853084564209
    5. 'ur' → logprob: -7.276853084564209
    6. 'l' → logprob: -8.15185260772705
    7. 'user' → logprob: -8.27685260772705
    8. 'u' → logprob: -8.65185260772705
    9. 'uire' → logprob: -9.77685260772705
    10. 'lude' → logprob: -10.27685260772705

Token 204: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0471101775765419
    2. ')
' → logprob: -4.047110080718994
    3. '   ' → logprob: -4.297110080718994
    4. ' )' → logprob: -5.297110080718994
    5. '):
' → logprob: -5.422110080718994
    6. '):' → logprob: -5.672110080718994
    7. '.' → logprob: -7.297110080718994
    8. ').' → logprob: -7.297110080718994
    9. ' )
' → logprob: -8.297110557556152
    10. ')

' → logprob: -9.422110557556152

Token 205: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8379546999931335
    2. '   ' → logprob: -1.2129547595977783
    3. '    
' → logprob: -1.3379547595977783
    4. ')' → logprob: -5.712954521179199
    5. '   
' → logprob: -6.587954521179199
    6. '  
' → logprob: -7.212954521179199
    7. ' 
' → logprob: -7.337954521179199
    8. '        
' → logprob: -7.712954521179199
    9. ')
' → logprob: -7.837954521179199
    10. '"""
' → logprob: -8.5879545211792

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05311381444334984
    2. 'Returns' → logprob: -3.0531136989593506
    3. ' Returns' → logprob: -5.80311393737793
    4. '
' → logprob: -7.05311393737793
    5. 'Retour' → logprob: -8.55311393737793
    6. '    
' → logprob: -8.55311393737793
    7. '"""
' → logprob: -9.55311393737793
    8. ')' → logprob: -10.55311393737793
    9. '       ' → logprob: -10.67811393737793
    10. '"""' → logprob: -10.92811393737793

Token 207: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.0006062911124899983
    2. '   ' → logprob: -8.125606536865234
    3. '"""
' → logprob: -8.750606536865234
    4. 'Retour' → logprob: -10.250606536865234
    5. ' Returns' → logprob: -10.375606536865234
    6. '
' → logprob: -10.500606536865234
    7. '#' → logprob: -10.500606536865234
    8. 'returns' → logprob: -11.125606536865234
    9. '"""' → logprob: -11.500606536865234
    10. '```' → logprob: -13.375606536865234

Token 208: ':
' (ID: 734)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0618257112801075
    2. ':' → logprob: -3.061825752258301
    3. 'None' → logprob: -4.936825752258301
    4. ' :' → logprob: -6.311825752258301
    5. '   ' → logprob: -6.936825752258301
    6. '    ' → logprob: -7.186825752258301
    7. ' =' → logprob: -7.686825752258301
    8. ' next' → logprob: -7.936825752258301
    9. ' ' → logprob: -8.5618257522583
    10. ' ' → logprob: -8.5618257522583

Token 209: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2899598777294159
    2. '       ' → logprob: -1.5399599075317383
    3. '    ' → logprob: -3.9149599075317383
    4. ' None' → logprob: -5.039959907531738
    5. 'None' → logprob: -5.914959907531738
    6. ' l' → logprob: -6.039959907531738
    7. ' int' → logprob: -6.539959907531738
    8. 'int' → logprob: -6.664959907531738
    9. 'l' → logprob: -7.289959907531738
    10. '        ' → logprob: -7.914959907531738

Token 210: ' L' (ID: 451)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3600458800792694
    2. ' int' → logprob: -2.360045909881592
    3. 'any' → logprob: -2.610045909881592
    4. ' any' → logprob: -3.235045909881592
    5. 'Any' → logprob: -3.235045909881592
    6. 'object' → logprob: -3.610045909881592
    7. 'The' → logprob: -4.735045909881592
    8. ' object' → logprob: -4.985045909881592
    9. 'élé' → logprob: -6.110045909881592
    10. ' The' → logprob: -6.485045909881592

Token 211: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3037908971309662
    2. ''' → logprob: -1.6787909269332886
    3. ''objet' → logprob: -3.678790807723999
    4. 'es' → logprob: -3.803790807723999
    5. ''un' → logprob: -4.678791046142578
    6. ''espace' → logprob: -6.178791046142578
    7. 'ist' → logprob: -6.428791046142578
    8. 'eur' → logprob: -6.553791046142578
    9. ''é' → logprob: -6.678791046142578
    10. 'None' → logprob: -6.803791046142578

Token 212: 'élé' (ID: 15228)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2639451324939728
    2. 'élé' → logprob: -1.5139451026916504
    3. ''objet' → logprob: -5.13894510269165
    4. ' élément' → logprob: -6.51394510269165
    5. 'element' → logprob: -6.76394510269165
    6. ''un' → logprob: -7.26394510269165
    7. 'lement' → logprob: -7.26394510269165
    8. 'e' → logprob: -7.26394510269165
    9. ''é' → logprob: -7.38894510269165
    10. '’' → logprob: -9.138945579528809

Token 213: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -3.845798710244708e-05
    2. 'ement' → logprob: -11.000038146972656
    3. 'ément' → logprob: -11.000038146972656
    4. 'ent' → logprob: -12.750038146972656
    5. 'ments' → logprob: -14.375038146972656
    6. 'm' → logprob: -15.125038146972656
    7. 'men' → logprob: -15.375038146972656
    8. '```' → logprob: -15.625038146972656
    9. 'me' → logprob: -16.125038146972656
    10. 'mente' → logprob: -16.250038146972656

Token 214: ' unique' (ID: 5746)
  Prédit: ' unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unique' → logprob: -0.4572785198688507
    2. '_' → logprob: -1.5822784900665283
    3. '_unique' → logprob: -1.9572784900665283
    4. '<|end|>' → logprob: -4.832278728485107
    5. ' _' → logprob: -5.207278728485107
    6. 'unique' → logprob: -5.832278728485107
    7. ' absent' → logprob: -6.832278728485107
    8. ' ' → logprob: -7.957278728485107
    9. ' ' → logprob: -8.08227825164795
    10. ' qui' → logprob: -8.45727825164795

Token 215: ' restant' (ID: 172358)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6392068266868591
    2. ' qui' → logprob: -1.639206886291504
    3. '_' → logprob: -2.139206886291504
    4. ' present' → logprob: -3.014206886291504
    5. ' de' → logprob: -4.264206886291504
    6. '<|end|>' → logprob: -4.264206886291504
    7. ' absent' → logprob: -4.389206886291504
    8. ' présent' → logprob: -4.639206886291504
    9. '   ' → logprob: -5.139206886291504
    10. ' None' → logprob: -5.264206886291504

Token 216: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1897269487380981
    2. ' de' → logprob: -1.6897269487380981
    3. ',' → logprob: -1.8147269487380981
    4. ' ou' → logprob: -2.1897268295288086
    5. ' or' → logprob: -2.9397268295288086
    6. '    
' → logprob: -3.1897268295288086
    7. ':' → logprob: -3.3147268295288086
    8. ' if' → logprob: -4.189726829528809
    9. ' dans' → logprob: -4.314726829528809
    10. '
' → logprob: -4.439726829528809

Token 217: ' full' (ID: 3149)
  Prédit: ' full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' full' → logprob: -0.16432666778564453
    2. 'full' → logprob: -1.9143266677856445
    3. ' la' → logprob: -5.9143266677856445
    4. ' set' → logprob: -7.2893266677856445
    5. 'set' → logprob: -8.414326667785645
    6. 'la' → logprob: -9.164326667785645
    7. '   ' → logprob: -10.039326667785645
    8. ' list' → logprob: -10.164326667785645
    9. ' le' → logprob: -10.226826667785645
    10. '(full' → logprob: -10.601826667785645

Token 218: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00015121731848921627
    2. '_' → logprob: -8.875151634216309
    3. '_l' → logprob: -12.000151634216309
    4. ' _' → logprob: -12.875151634216309
    5. '_set' → logprob: -14.125151634216309
    6. '_lists' → logprob: -14.125151634216309
    7. '_li' → logprob: -14.500151634216309
    8. 'list' → logprob: -15.875151634216309
    9. '\' → logprob: -16.125150680541992
    10. '_lista' → logprob: -17.000150680541992

Token 219: ' après' (ID: 16460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2890704572200775
    2. ',' → logprob: -2.6640703678131104
    3. ':' → logprob: -2.6640703678131104
    4. '    
' → logprob: -3.2890703678131104
    5. '[' → logprob: -4.1640706062316895
    6. '
' → logprob: -4.4140706062316895
    7. ' qui' → logprob: -5.0390706062316895
    8. ' 
' → logprob: -5.0390706062316895
    9. ':
' → logprob: -5.2890706062316895
    10. '

' → logprob: -5.7890706062316895

Token 220: ' exclusion' (ID: 81989)
  Prédit: ' exclusion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exclusion' → logprob: -0.009133875370025635
    2. ' avoir' → logprob: -5.009133815765381
    3. 'ex' → logprob: -6.884133815765381
    4. ' suppression' → logprob: -7.634133815765381
    5. ' l' → logprob: -7.759133815765381
    6. 'l' → logprob: -8.509134292602539
    7. 'avoir' → logprob: -9.134134292602539
    8. ' excl' → logprob: -9.634134292602539
    9. ' la' → logprob: -10.259134292602539
    10. ' son' → logprob: -11.509134292602539

Token 221: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4381391108036041
    2. '.' → logprob: -1.9381390810012817
    3. '    
' → logprob: -2.8131392002105713
    4. '.
' → logprob: -3.0631392002105713
    5. ' 
' → logprob: -3.8131392002105713
    6. ':' → logprob: -4.063138961791992
    7. ',' → logprob: -4.188138961791992
    8. '```' → logprob: -4.563138961791992
    9. '  
' → logprob: -4.813138961791992
    10. '
' → logprob: -4.813138961791992

Token 222: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6103541851043701
    2. '   ' → logprob: -1.2353541851043701
    3. '    
' → logprob: -2.23535418510437
    4. '  
' → logprob: -3.86035418510437
    5. ' 
' → logprob: -4.360354423522949
    6. '   
' → logprob: -4.485354423522949
    7. '\n' → logprob: -5.485354423522949
    8. '```' → logprob: -6.110354423522949
    9. '"""
' → logprob: -6.235354423522949
    10. '     
' → logprob: -6.860354423522949

Token 223: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8986409306526184
    2. '
' → logprob: -1.2736408710479736
    3. '    
' → logprob: -1.2736408710479736
    4. '  
' → logprob: -4.273641109466553
    5. '   
' → logprob: -4.523641109466553
    6. ' 
' → logprob: -5.398641109466553
    7. '"""
' → logprob: -6.648641109466553
    8. '     
' → logprob: -6.648641109466553
    9. ' """
' → logprob: -7.898641109466553
    10. '```' → logprob: -8.273640632629395

Token 224: ' plusieurs' (ID: 20875)
  Prédit: ' full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' full' → logprob: -0.31634992361068726
    2. ' not' → logprob: -2.316349983215332
    3. ' len' → logprob: -2.941349983215332
    4. ' None' → logprob: -3.191349983215332
    5. 'full' → logprob: -3.691349983215332
    6. 'None' → logprob: -3.941349983215332
    7. 'not' → logprob: -4.441349983215332
    8. 'len' → logprob: -4.566349983215332
    9. ' none' → logprob: -5.941349983215332
    10. ' aucun' → logprob: -5.941349983215332

Token 225: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.40789714455604553
    2. ' éléments' → logprob: -1.2828971147537231
    3. ' elements' → logprob: -3.2828972339630127
    4. 'elements' → logprob: -4.157896995544434
    5. ' or' → logprob: -6.407896995544434
    6. ' ou' → logprob: -6.782896995544434
    7. ' unique' → logprob: -8.157896995544434
    8. 'ou' → logprob: -8.532896995544434
    9. ' uniques' → logprob: -8.532896995544434
    10. 'element' → logprob: -9.157896995544434

Token 226: ' restent' (ID: 116443)
  Prédit: ' unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unique' → logprob: -0.7765957713127136
    2. ' sont' → logprob: -1.0265958309173584
    3. 's' → logprob: -3.1515958309173584
    4. ' restent' → logprob: -3.1515958309173584
    5. ' rest' → logprob: -4.151595592498779
    6. ' man' → logprob: -4.276595592498779
    7. ' ne' → logprob: -4.276595592498779
    8. 'unique' → logprob: -4.401595592498779
    9. ' uniques' → logprob: -4.526595592498779
    10. ' are' → logprob: -4.776595592498779

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02443256601691246
    2. ' ou' → logprob: -4.02443265914917
    3. ' or' → logprob: -5.52443265914917
    4. ' ,' → logprob: -6.39943265914917
    5. ' None' → logprob: -8.149432182312012
    6. 'None' → logprob: -9.524432182312012
    7. ' ' → logprob: -9.774432182312012
    8. 'ou' → logprob: -9.899432182312012
    9. ' (' → logprob: -11.149432182312012
    10. '   ' → logprob: -11.274432182312012

Token 228: ' retourne' (ID: 178818)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.4027009606361389
    2. 'None' → logprob: -1.2777009010314941
    3. '   ' → logprob: -3.152700901031494
    4. ' retourne' → logprob: -5.652700901031494
    5. ' return' → logprob: -6.027700901031494
    6. '    ' → logprob: -6.527700901031494
    7. '       ' → logprob: -6.902700901031494
    8. ' aucun' → logprob: -8.027701377868652
    9. ' aucune' → logprob: -8.277701377868652
    10. ' raise' → logprob: -8.402701377868652

Token 229: ' le' (ID: 505)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.008634781464934349
    2. 'None' → logprob: -4.758634567260742
    3. '   ' → logprob: -12.258634567260742
    4. ' none' → logprob: -12.633634567260742
    5. ' ' → logprob: -12.883634567260742
    6. ' Aucun' → logprob: -13.008634567260742
    7. '_None' → logprob: -13.258634567260742
    8. ' ' → logprob: -13.883634567260742
    9. ' N' → logprob: -14.258634567260742
    10. ' la' → logprob: -14.258634567260742

Token 230: ' premier' (ID: 15506)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.45787346363067627
    2. 'None' → logprob: -1.0828734636306763
    3. ' first' → logprob: -3.8328733444213867
    4. ' premier' → logprob: -5.957873344421387
    5. 'prem' → logprob: -6.082873344421387
    6. 'first' → logprob: -7.207873344421387
    7. 'none' → logprob: -8.332873344421387
    8. ' unique' → logprob: -8.582873344421387
    9. ' none' → logprob: -8.832873344421387
    10. ' seul' → logprob: -9.082873344421387

Token 231: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1372789144515991
    2. ' ' → logprob: -1.3872789144515991
    3. ' élément' → logprob: -2.0122790336608887
    4. ' element' → logprob: -2.8872790336608887
    5. ' None' → logprob: -3.1372790336608887
    6. '.' → logprob: -3.5122790336608887
    7. ' _' → logprob: -4.137279033660889
    8. '<|end|>' → logprob: -4.387279033660889
    9. ')' → logprob: -4.512279033660889
    10. ' de' → logprob: -4.512279033660889

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006173247937113047
    2. '
' → logprob: -5.756173133850098
    3. '    
' → logprob: -5.881173133850098
    4. '"""' → logprob: -9.131173133850098
    5. '"""
' → logprob: -10.256173133850098
    6. '```' → logprob: -11.131173133850098
    7. 'def' → logprob: -11.881173133850098
    8. ' """
' → logprob: -12.006173133850098
    9. '    ' → logprob: -12.131173133850098
    10. '   
' → logprob: -12.131173133850098

Token 233: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09274396300315857
    2. '"""
' (adapté à ' """
') → logprob: -3.4677438735961914
    3. '    
' → logprob: -3.5927438735961914
    4. '
' → logprob: -3.9677438735961914
    5. '"""' → logprob: -5.092743873596191
    6. ' """
' → logprob: -5.967743873596191
    7. ' 
' → logprob: -7.467743873596191
    8. '```' → logprob: -7.592743873596191
    9. '     
' → logprob: -7.967743873596191
    10. '   
' → logprob: -8.342743873596191

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038189569022506475
    2. ' remaining' → logprob: -6.378818988800049
    3. 'remaining' → logprob: -6.753818988800049
    4. 'filtered' → logprob: -8.12881851196289
    5. '
' → logprob: -8.25381851196289
    6. ' filtered' → logprob: -9.62881851196289
    7. '    
' → logprob: -9.75381851196289
    8. 'set' → logprob: -9.87881851196289
    9. ' for' → logprob: -10.25381851196289
    10. 'for' → logprob: -10.25381851196289

Token 235: ' #' (ID: 1069)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.6724466681480408
    2. 'for' → logprob: -0.9224466681480408
    3. ' remaining' → logprob: -2.9224467277526855
    4. ' for' → logprob: -4.0474467277526855
    5. 'filtered' → logprob: -4.6724467277526855
    6. '   ' → logprob: -5.2974467277526855
    7. 'result' → logprob: -5.6724467277526855
    8. 'set' → logprob: -7.2974467277526855
    9. 'unique' → logprob: -7.2974467277526855
    10. 'full' → logprob: -7.5474467277526855

Token 236: ' Convert' (ID: 15629)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.6675620675086975
    2. 'for' → logprob: -0.9175620675086975
    3. 'filtered' → logprob: -3.0425620079040527
    4. 'unique' → logprob: -4.417562007904053
    5. ' remaining' → logprob: -4.792562007904053
    6. 'result' → logprob: -5.167562007904053
    7. 'set' → logprob: -5.792562007904053
    8. 'elements' → logprob: -5.792562007904053
    9. ' for' → logprob: -6.292562007904053
    10. '#' → logprob: -6.292562007904053

Token 237: 'it' (ID: 278)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7157348990440369
    2. ' full' → logprob: -0.7157348990440369
    3. 'full' → logprob: -5.215734958648682
    4. '_full' → logprob: -5.215734958648682
    5. 'ir' → logprob: -5.590734958648682
    6. 's' → logprob: -6.090734958648682
    7. 'er' → logprob: -6.465734958648682
    8. ' set' → logprob: -6.590734958648682
    9. '	full' → logprob: -6.965734958648682
    10. 'set' → logprob: -7.340734958648682

Token 238: ' les' (ID: 1341)
  Prédit: ' full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' full' → logprob: -0.026802491396665573
    2. 'full' → logprob: -3.6518025398254395
    3. ' les' → logprob: -8.901802062988281
    4. '	full' → logprob: -9.151802062988281
    5. ' exclude' → logprob: -10.026802062988281
    6. '_full' → logprob: -10.151802062988281
    7. '   ' → logprob: -10.401802062988281
    8. ' la' → logprob: -10.526802062988281
    9. ' set' → logprob: -10.526802062988281
    10. ' the' → logprob: -10.651802062988281

Token 239: ' listes' (ID: 179198)
  Prédit: 'exclude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exclude' → logprob: -0.15634475648403168
    2. ' exclude' → logprob: -2.4063446521759033
    3. ' full' → logprob: -3.4063446521759033
    4. 'full' → logprob: -3.9063446521759033
    5. 'set' → logprob: -7.906344890594482
    6. 'lists' → logprob: -8.031344413757324
    7. ' lists' → logprob: -8.781344413757324
    8. 'ex' → logprob: -9.156344413757324
    9. ' set' → logprob: -9.531344413757324
    10. ' sets' → logprob: -9.781344413757324

Token 240: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.022521816194057465
    2. ' full' → logprob: -4.02252197265625
    3. 'full' → logprob: -6.27252197265625
    4. ' set' → logprob: -7.52252197265625
    5. '_full' → logprob: -7.52252197265625
    6. 'en' → logprob: -7.89752197265625
    7. ' to' → logprob: -8.52252197265625
    8. '_en' → logprob: -8.77252197265625
    9. '   ' → logprob: -9.14752197265625
    10. 'set' → logprob: -9.39752197265625

Token 241: ' ensembles' (ID: 144172)
  Prédit: 'sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.46247580647468567
    2. 'ense' → logprob: -1.7124757766723633
    3. ' sets' → logprob: -2.3374757766723633
    4. ' ensembles' → logprob: -2.9624757766723633
    5. 'set' → logprob: -3.2124757766723633
    6. ' set' → logprob: -7.087475776672363
    7. 'ensemble' → logprob: -7.837475776672363
    8. 's' → logprob: -10.712475776672363
    9. ' ensemble' → logprob: -10.712475776672363
    10. ' conjuntos' → logprob: -11.212475776672363

Token 242: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22948481142520905
    2. ' full' → logprob: -1.6044847965240479
    3. 'full' → logprob: -6.354485034942627
    4. '    
' → logprob: -6.979485034942627
    5. ' set' → logprob: -7.354485034942627
    6. '
' → logprob: -8.479484558105469
    7. ' to' → logprob: -8.854484558105469
    8. '	full' → logprob: -9.479484558105469
    9. '_full' → logprob: -9.604484558105469
    10. '(full' → logprob: -10.104484558105469

Token 243: ' faciliter' (ID: 106284)
  Prédit: ' effectuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effectuer' → logprob: -0.5663555860519409
    2. ' faciliter' → logprob: -1.066355586051941
    3. ' permettre' → logprob: -4.0663557052612305
    4. 'fac' → logprob: -4.5663557052612305
    5. ' faire' → logprob: -4.6913557052612305
    6. ' une' → logprob: -4.8163557052612305
    7. ' facil' → logprob: -5.1913557052612305
    8. ' pouvoir' → logprob: -5.5663557052612305
    9. 'effect' → logprob: -5.6913557052612305
    10. 'perform' → logprob: -5.8163557052612305

Token 244: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7993793487548828
    2. 'l' → logprob: -1.4243793487548828
    3. ' les' → logprob: -1.7993793487548828
    4. 'la' → logprob: -2.549379348754883
    5. 'les' → logprob: -3.174379348754883
    6. ' l' → logprob: -3.924379348754883
    7. ' leur' → logprob: -7.299379348754883
    8. ' leurs' → logprob: -7.674379348754883
    9. 'diff' → logprob: -7.799379348754883
    10. 'le' → logprob: -7.924379348754883

Token 245: ' différence' (ID: 79196)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.2281889021396637
    2. 'sou' → logprob: -2.478188991546631
    3. ' différence' → logprob: -2.978188991546631
    4. 'difference' → logprob: -3.478188991546631
    5. 's' → logprob: -4.353188991546631
    6. ' sou' → logprob: -4.728188991546631
    7. 'd' → logprob: -5.103188991546631
    8. 'set' → logprob: -5.853188991546631
    9. ' manipulation' → logprob: -6.478188991546631
    10. ' difference' → logprob: -6.853188991546631

Token 246: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024214059114456177
    2. ' full' → logprob: -4.024214267730713
    3. '    
' → logprob: -5.774214267730713
    4. '
' → logprob: -6.649214267730713
    5. 'full' → logprob: -7.274214267730713
    6. '(full' → logprob: -8.524213790893555
    7. ' set' → logprob: -8.649213790893555
    8. '	full' → logprob: -9.149213790893555
    9. ' (' → logprob: -9.649213790893555
    10. '   
' → logprob: -10.024213790893555

Token 247: ''ensemble' (ID: 79341)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12953874468803406
    2. ''' → logprob: -2.6295387744903564
    3. 'es' → logprob: -4.129538536071777
    4. 'a' → logprob: -5.629538536071777
    5. 'é' → logprob: -5.629538536071777
    6. ' sets' → logprob: -5.754538536071777
    7. '`' → logprob: -6.004538536071777
    8. ''ensemble' → logprob: -6.004538536071777
    9. 'ense' → logprob: -6.129538536071777
    10. 's' → logprob: -6.129538536071777

Token 248: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017540089786052704
    2. '    
' → logprob: -4.767539978027344
    3. ' full' → logprob: -5.267539978027344
    4. '
' → logprob: -6.142539978027344
    5. 'full' → logprob: -7.142539978027344
    6. '(full' → logprob: -8.892539978027344
    7. 's' → logprob: -9.142539978027344
    8. '   
' → logprob: -9.392539978027344
    9. '	full' → logprob: -9.392539978027344
    10. ':' → logprob: -9.767539978027344

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010151614435017109
    2. ' full' → logprob: -4.885151386260986
    3. '    
' → logprob: -6.260151386260986
    4. 'full' → logprob: -7.635151386260986
    5. ' set' → logprob: -9.885151863098145
    6. '
' → logprob: -10.635151863098145
    7. '(full' → logprob: -11.385151863098145
    8. '   
' → logprob: -11.510151863098145
    9. 'Full' → logprob: -12.010151863098145
    10. '	full' → logprob: -12.010151863098145

Token 250: ' remaining' (ID: 15448)
  Prédit: ' full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' full' → logprob: -0.2790442109107971
    2. 'full' → logprob: -1.7790441513061523
    3. ' set' → logprob: -3.2790441513061523
    4. 'set' → logprob: -3.5290441513061523
    5. '   ' → logprob: -5.029044151306152
    6. ' unique' → logprob: -7.654044151306152
    7. 'unique' → logprob: -8.279044151306152
    8. 'diff' → logprob: -8.404044151306152
    9. 'remaining' (adapté à ' remaining') → logprob: -10.154044151306152
    10. ' remaining' → logprob: -10.279044151306152

Token 251: '_elements' (ID: 53344)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18670423328876495
    2. '_elements' → logprob: -2.311704158782959
    3. 's' → logprob: -2.811704158782959
    4. '_' → logprob: -5.186704158782959
    5. '=' → logprob: -5.811704158782959
    6. '_set' → logprob: -6.311704158782959
    7. '_s' → logprob: -7.811704158782959
    8. '=set' → logprob: -9.311704635620117
    9. '_items' → logprob: -9.561704635620117
    10. '_full' → logprob: -9.686704635620117

Token 252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00026169343618676066
    2. '=' → logprob: -8.250261306762695
    3. ' ' → logprob: -15.500261306762695
    4. ' =
' → logprob: -15.750261306762695
    5. 's' → logprob: -16.875261306762695
    6. '   ' → logprob: -17.000261306762695
    7. '=set' → logprob: -18.375261306762695
    8. ' ' → logprob: -18.625261306762695
    9. ' =
' → logprob: -18.750261306762695
    10. ')' → logprob: -19.875261306762695

Token 253: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.05488668009638786
    2. 'set' → logprob: -2.92988657951355
    3. '(set' → logprob: -13.179886817932129
    4. '   ' → logprob: -13.679886817932129
    5. '	set' → logprob: -14.179886817932129
    6. '=set' → logprob: -15.179886817932129
    7. ' ' → logprob: -16.054885864257812
    8. 's' → logprob: -16.304885864257812
    9. ' list' → logprob: -16.679885864257812
    10. '```' → logprob: -17.179885864257812

Token 254: '(full' (ID: 59745)
  Prédit: '(full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(full' → logprob: -2.816093228830141e-06
    2. 'full' → logprob: -13.00000286102295
    3. '(' → logprob: -14.87500286102295
    4. ' full' → logprob: -16.000001907348633
    5. ' (' → logprob: -17.125001907348633
    6. '	full' → logprob: -17.500001907348633
    7. '/full' → logprob: -19.500001907348633
    8. 'Full' → logprob: -19.875001907348633
    9. '_full' → logprob: -20.250001907348633
    10. '.full' → logprob: -20.625001907348633

Token 255: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.625000953674316
    3. 'List' → logprob: -14.875000953674316
    4. 'list' → logprob: -16.375001907348633
    5. '_lists' → logprob: -16.375001907348633
    6. '(_' → logprob: -16.750001907348633
    7. '_List' → logprob: -17.250001907348633
    8. '_set' → logprob: -17.375001907348633
    9. '_l' → logprob: -17.750001907348633
    10. '_LIST' → logprob: -18.000001907348633

Token 256: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.7159857786027715e-05
    2. ' )' → logprob: -10.000046730041504
    3. ').' → logprob: -13.375046730041504
    4. ' -' → logprob: -15.500046730041504
    5. '-' → logprob: -17.12504768371582
    6. ')-' → logprob: -17.62504768371582
    7. '）' → logprob: -18.50004768371582
    8. ']' → logprob: -18.87504768371582
    9. '   ' → logprob: -18.87504768371582
    10. '-)' → logprob: -19.37504768371582

Token 257: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47411486506462097
    2. '-' → logprob: -0.9741148948669434
    3. ')' → logprob: -10.349114418029785
    4. '.d' → logprob: -12.599114418029785
    5. '.' → logprob: -13.724114418029785
    6. ' ' → logprob: -14.599114418029785
    7. '   ' → logprob: -15.599114418029785
    8. '-ex' → logprob: -15.599114418029785
    9. ' .' → logprob: -15.974114418029785
    10. ' ' → logprob: -16.4741153717041

Token 258: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.17975476384162903
    2. ' set' → logprob: -1.8047547340393066
    3. '   ' → logprob: -12.554755210876465
    4. '	set' → logprob: -12.804755210876465
    5. ' ' → logprob: -13.179755210876465
    6. '(set' → logprob: -14.054755210876465
    7. '=set' → logprob: -14.304755210876465
    8. '  ' → logprob: -15.929755210876465
    9. ')set' → logprob: -16.55475425720215
    10. '    ' → logprob: -16.80475425720215

Token 259: '(ex' (ID: 9292)
  Prédit: '(ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ex' → logprob: -5.931863051955588e-05
    2. '(' → logprob: -10.250059127807617
    3. ' (' → logprob: -10.875059127807617
    4. 'exclude' → logprob: -12.500059127807617
    5. ' exclude' → logprob: -14.000059127807617
    6. '(include' → logprob: -16.500059127807617
    7. 'ex' → logprob: -16.625059127807617
    8. '(exc' → logprob: -16.625059127807617
    9. '(exchange' → logprob: -16.750059127807617
    10. '	ex' → logprob: -16.750059127807617

Token 260: 'clude' (ID: 1472)
  Prédit: 'lude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lude' → logprob: -0.03806134685873985
    2. 'clude' → logprob: -3.2880613803863525
    3. 'l' → logprob: -11.038061141967773
    4. 'lose' → logprob: -13.288061141967773
    5. '
' → logprob: -14.913061141967773
    6. '```' → logprob: -14.913061141967773
    7. 'ude' → logprob: -15.038061141967773
    8. 'lu' → logprob: -15.413061141967773
    9. '[' → logprob: -16.038061141967773
    10. '|' → logprob: -16.163061141967773

Token 261: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.869017852295656e-06
    2. 'e' → logprob: -12.625006675720215
    3. '_' → logprob: -13.500006675720215
    4. '_l' → logprob: -14.000006675720215
    5. 'list' → logprob: -15.125006675720215
    6. 's' → logprob: -15.250006675720215
    7. '_lists' → logprob: -15.375006675720215
    8. 'elements' → logprob: -16.12500762939453
    9. 'List' → logprob: -16.25000762939453
    10. '_elements' → logprob: -16.25000762939453

Token 262: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010342379100620747
    2. ')
' → logprob: -6.876034259796143
    3. ' )' → logprob: -14.501033782958984
    4. ')
' → logprob: -14.501033782958984
    5. '   ' → logprob: -14.876033782958984
    6. ')

' → logprob: -15.751033782958984
    7. '))' → logprob: -17.751033782958984
    8. ')set' → logprob: -18.251033782958984
    9. ')return' → logprob: -18.376033782958984
    10. ').' → logprob: -18.501033782958984

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019551869481801987
    2. '
' → logprob: -4.644551753997803
    3. ' if' → logprob: -5.394551753997803
    4. '    
' → logprob: -5.519551753997803
    5. 'if' → logprob: -6.894551753997803
    6. ' 
' → logprob: -9.769552230834961
    7. '  
' → logprob: -9.894552230834961
    8. 'return' → logprob: -10.144552230834961
    9. '   
' → logprob: -11.269552230834961
    10. '    ' → logprob: -11.894552230834961

Token 264: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09268169850111008
    2. '   ' → logprob: -3.092681646347046
    3. 'if' → logprob: -3.217681646347046
    4. ' return' → logprob: -6.592681884765625
    5. '    
' → logprob: -7.342681884765625
    6. '
' → logprob: -7.467681884765625
    7. ' 
' → logprob: -8.217681884765625
    8. 'return' → logprob: -8.592681884765625
    9. '  
' → logprob: -11.092681884765625
    10. '    ' → logprob: -11.842681884765625

Token 265: ' Transform' (ID: 27287)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6565746068954468
    2. 'if' → logprob: -0.7815746068954468
    3. 'return' → logprob: -4.281574726104736
    4. ' return' → logprob: -4.906574726104736
    5. '   ' → logprob: -6.031574726104736
    6. 'If' → logprob: -11.031574249267578
    7. ' Si' → logprob: -11.656574249267578
    8. '#' → logprob: -11.906574249267578
    9. ' If' → logprob: -12.406574249267578
    10. 's' → logprob: -12.531574249267578

Token 266: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02725001983344555
    2. 'er' → logprob: -3.652250051498413
    3. '   ' → logprob: -7.652249813079834
    4. ' remaining' → logprob: -8.152250289916992
    5. ' e' → logprob: -10.527250289916992
    6. 'ation' → logprob: -10.527250289916992
    7. 'ez' → logprob: -10.527250289916992
    8. 'ion' → logprob: -10.902250289916992
    9. 'remaining' → logprob: -10.902250289916992
    10. 'é' → logprob: -11.027250289916992

Token 267: ' l' (ID: 305)
  Prédit: ' remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remaining' → logprob: -0.45703861117362976
    2. 'remaining' → logprob: -1.3320386409759521
    3. ' list' → logprob: -2.332038640975952
    4. 'list' → logprob: -5.957038402557373
    5. ' la' → logprob: -6.582038402557373
    6. ' en' → logprob: -7.207038402557373
    7. '_remaining' → logprob: -7.332038402557373
    8. ' le' → logprob: -8.582038879394531
    9. ' les' → logprob: -9.082038879394531
    10. ' restante' → logprob: -10.582038879394531

Token 268: ''ensemble' (ID: 79341)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.09856989234685898
    2. 'remaining' → logprob: -3.223569869995117
    3. 'isting' → logprob: -4.223569869995117
    4. 'iste' → logprob: -4.723569869995117
    5. 'a' → logprob: -4.973569869995117
    6. ' remaining' → logprob: -5.348569869995117
    7. 'es' → logprob: -5.973569869995117
    8. 'ista' → logprob: -5.973569869995117
    9. 'e' → logprob: -6.098569869995117
    10. 'st' → logprob: -6.098569869995117

Token 269: ' résult' (ID: 31657)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.638598620891571
    2. 'en' → logprob: -0.763598620891571
    3. 'remaining' → logprob: -5.638598442077637
    4. ' remaining' → logprob: -6.638598442077637
    5. '(en' → logprob: -8.138598442077637
    6. 'rest' → logprob: -8.388598442077637
    7. ' restant' → logprob: -9.013598442077637
    8. '()' → logprob: -9.763598442077637
    9. ' list' → logprob: -9.763598442077637
    10. 'list' → logprob: -10.013598442077637

Token 270: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.11857137829065323
    2. 'at' → logprob: -2.6185712814331055
    3. 'ante' → logprob: -3.3685712814331055
    4. 'e' → logprob: -7.1185712814331055
    5. 'ent' → logprob: -7.2435712814331055
    6. 'é' → logprob: -7.4935712814331055
    7. ' en' → logprob: -7.4935712814331055
    8. 'set' → logprob: -7.4935712814331055
    9. 'a' → logprob: -7.8685712814331055
    10. 'en' → logprob: -7.9935712814331055

Token 271: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.25223344564437866
    2. 'en' → logprob: -1.5022335052490234
    3. ' ' → logprob: -9.127233505249023
    4. '_en' → logprob: -10.002233505249023
    5. 's' → logprob: -10.627233505249023
    6. '   ' → logprob: -10.877233505249023
    7. ' back' → logprob: -10.877233505249023
    8. '()' → logprob: -10.877233505249023
    9. '(en' → logprob: -11.002233505249023
    10. ' ' → logprob: -11.502233505249023

Token 272: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9318215847015381
    2. ' list' → logprob: -1.181821584701538
    3. ' liste' → logprob: -1.431821584701538
    4. 'liste' → logprob: -2.806821584701538
    5. '_list' → logprob: -9.556821823120117
    6. 'une' → logprob: -10.806821823120117
    7. ' une' → logprob: -11.431821823120117
    8. 'l' → logprob: -11.556821823120117
    9. ' listes' → logprob: -11.806821823120117
    10. '   ' → logprob: -11.931821823120117

Token 273: ' et' (ID: 859)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.9349726438522339
    2. '   ' → logprob: -1.0599726438522339
    3. '(' → logprob: -1.9349726438522339
    4. ' remaining' → logprob: -2.9349727630615234
    5. '()' → logprob: -3.0599727630615234
    6. '[' → logprob: -5.309972763061523
    7. '[]' → logprob: -6.434972763061523
    8. '<|end|>' → logprob: -6.684972763061523
    9. '<|end|>' → logprob: -6.684972763061523
    10. ',' → logprob: -6.934972763061523

Token 274: ' retourne' (ID: 178818)
  Prédit: ' retourne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.522345244884491
    2. ' return' → logprob: -2.0223453044891357
    3. 'return' → logprob: -2.1473453044891357
    4. ' récup' → logprob: -2.8973453044891357
    5. ' convert' → logprob: -3.5223453044891357
    6. ' list' → logprob: -3.7723453044891357
    7. ' liste' → logprob: -4.647345066070557
    8. 'convert' → logprob: -4.897345066070557
    9. ' returns' → logprob: -5.022345066070557
    10. 'list' → logprob: -5.147345066070557

Token 275: ' son' (ID: 2391)
  Prédit: ' remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remaining' → logprob: -0.5015458464622498
    2. ' list' → logprob: -1.0015459060668945
    3. 'remaining' → logprob: -4.0015459060668945
    4. 'list' → logprob: -5.2515459060668945
    5. ' next' → logprob: -5.8765459060668945
    6. ' la' → logprob: -7.5015459060668945
    7. ' sorted' → logprob: -9.501545906066895
    8. 'next' → logprob: -10.126545906066895
    9. '   ' → logprob: -10.876545906066895
    10. ' ' → logprob: -11.126545906066895

Token 276: ' premier' (ID: 15506)
  Prédit: ' premier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.12058856338262558
    2. '[' → logprob: -2.870588541030884
    3. ' first' → logprob: -3.245588541030884
    4. 'prem' → logprob: -4.245588779449463
    5. 'first' → logprob: -6.370588779449463
    6. ' ' → logprob: -6.870588779449463
    7. '0' → logprob: -7.870588779449463
    8. ' [' → logprob: -8.370588302612305
    9. ' première' → logprob: -8.995588302612305
    10. ' premi' → logprob: -10.495588302612305

Token 277: ' élément' (ID: 99627)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18108470737934113
    2. ' élément' → logprob: -2.056084632873535
    3. ' element' → logprob: -3.681084632873535
    4. 'element' → logprob: -5.181084632873535
    5. 'élé' → logprob: -5.306084632873535
    6. '(' → logprob: -7.306084632873535
    7. ' ()' → logprob: -7.431084632873535
    8. ')' → logprob: -8.556084632873535
    9. 'lement' → logprob: -9.056084632873535
    10. ' elemento' → logprob: -9.556084632873535

Token 278: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6333052515983582
    2. '[' → logprob: -1.008305311203003
    3. '()' → logprob: -3.258305311203003
    4. '(' → logprob: -3.508305311203003
    5. 'return' → logprob: -4.258305072784424
    6. '()[' → logprob: -4.508305072784424
    7. '()
' → logprob: -5.383305072784424
    8. ' return' → logprob: -6.383305072784424
    9. ' if' → logprob: -6.758305072784424
    10. '
' → logprob: -7.008305072784424

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00032151900813914835
    2. 'return' → logprob: -8.250321388244629
    3. ' return' → logprob: -10.125321388244629
    4. '    
' → logprob: -11.625321388244629
    5. '
' → logprob: -11.875321388244629
    6. '[' → logprob: -12.875321388244629
    7. '[]' → logprob: -14.750321388244629
    8. '(' → logprob: -15.750321388244629
    9. ' if' → logprob: -15.750321388244629
    10. ' 
' → logprob: -16.000322341918945

Token 280: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31889331340789795
    2. ' return' → logprob: -1.318893313407898
    3. '   ' → logprob: -5.3188934326171875
    4. 'if' → logprob: -7.8188934326171875
    5. ' if' → logprob: -8.068893432617188
    6. 'list' → logprob: -14.318893432617188
    7. '	return' → logprob: -14.943893432617188
    8. '```' → logprob: -14.943893432617188
    9. ' list' → logprob: -15.068893432617188
    10. '    
' → logprob: -15.443893432617188

Token 281: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.25199633836746216
    2. 'list' → logprob: -1.5019962787628174
    3. ' next' → logprob: -9.876996040344238
    4. 'next' → logprob: -11.251996040344238
    5. '	list' → logprob: -13.376996040344238
    6. '   ' → logprob: -14.626996040344238
    7. ' ' → logprob: -14.876996040344238
    8. '(list' → logprob: -15.876996040344238
    9. ' ' → logprob: -16.001996994018555
    10. 'List' → logprob: -16.626996994018555

Token 282: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. ' (' → logprob: -14.875000953674316
    3. 'remaining' → logprob: -15.375000953674316
    4. '(full' → logprob: -15.625000953674316
    5. '(set' → logprob: -16.500001907348633
    6. '(
' → logprob: -17.125001907348633
    7. '(rem' → logprob: -17.125001907348633
    8. '(rest' → logprob: -17.375001907348633
    9. '(existing' → logprob: -17.500001907348633
    10. '(return' → logprob: -18.375001907348633

Token 283: 'remaining' (ID: 83570)
  Prédit: 'remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -1.5048530030981055e-06
    2. ' remaining' → logprob: -13.500001907348633
    3. '(' → logprob: -19.250001907348633
    4. '.remaining' → logprob: -20.000001907348633
    5. 'remain' → logprob: -20.750001907348633
    6. '_remaining' → logprob: -20.875001907348633
    7. ')' → logprob: -22.000001907348633
    8. 'Remaining' → logprob: -22.375001907348633
    9. '   ' → logprob: -24.125001907348633
    10. '```' → logprob: -24.750001907348633

Token 284: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.0003831252979580313
    2. 'elements' → logprob: -7.875382900238037
    3. '_ELEMENTS' → logprob: -14.000383377075195
    4. '_tokens' → logprob: -14.125383377075195
    5. 'Elements' → logprob: -14.375383377075195
    6. 'lements' → logprob: -15.625383377075195
    7. '_' → logprob: -16.000383377075195
    8. 'remaining' → logprob: -16.000383377075195
    9. '_remaining' → logprob: -16.125383377075195
    10. 's' → logprob: -16.125383377075195

Token 285: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.00016158436483237892
    2. ')' → logprob: -9.000161170959473
    3. '[' → logprob: -10.250161170959473
    4. ' )[' → logprob: -13.000161170959473
    5. '())[' → logprob: -14.750161170959473
    6. '   ' → logprob: -16.25016212463379
    7. '")[' → logprob: -18.25016212463379
    8. '][' → logprob: -18.75016212463379
    9. '()[' → logprob: -19.00016212463379
    10. '))[' → logprob: -19.00016212463379

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '۰' → logprob: -19.0
    4. '
' → logprob: -19.5
    5. '   ' → logprob: -19.625
    6. '00' → logprob: -20.3125
    7. '٠' → logprob: -20.375
    8. '０' → logprob: -20.5625
    9. '000' → logprob: -21.125
    10. '```' → logprob: -21.3125

Token 287: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005282615311443806
    2. ']' → logprob: -5.255282402038574
    3. '}' → logprob: -10.005282402038574
    4. ' )' → logprob: -13.505282402038574
    5. '])' → logprob: -14.380282402038574
    6. '）' → logprob: -14.380282402038574
    7. ')
' → logprob: -14.630282402038574
    8. ')]' → logprob: -15.130282402038574
    9. '<|end|>' → logprob: -15.755282402038574
    10. ')}' → logprob: -16.88028335571289

Token 288: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6655158996582031
    2. '#' → logprob: -0.7905158996582031
    3. '<|end|>' → logprob: -3.665515899658203
    4. '```' → logprob: -5.665515899658203
    5. '
' → logprob: -6.040515899658203
    6. '<|end|>' → logprob: -7.915515899658203
    7. 'print' → logprob: -9.165515899658203
    8. 'a' → logprob: -9.290515899658203
    9. 'n' → logprob: -9.415515899658203
    10. '[' → logprob: -10.290515899658203

Token 289: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05390921235084534
    2. ' calculate' → logprob: -3.9289093017578125
    3. ' find' → logprob: -4.0539093017578125
    4. 'main' → logprob: -6.0539093017578125
    5. ' process' → logprob: -6.1789093017578125
    6. ' filter' → logprob: -6.1789093017578125
    7. ' check' → logprob: -6.6789093017578125
    8. ' count' → logprob: -6.6789093017578125
    9. ' sum' → logprob: -6.8039093017578125
    10. ' get' → logprob: -7.1789093017578125

Token 290: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00014919086243025959
    2. '(' → logprob: -9.75014877319336
    3. '()' → logprob: -9.87514877319336
    4. ' ():' → logprob: -10.62514877319336
    5. '_' → logprob: -12.00014877319336
    6. '():
' → logprob: -12.25014877319336
    7. '()>' → logprob: -13.62514877319336
    8. 'def' → logprob: -14.00014877319336
    9. '_def' → logprob: -14.87514877319336
    10. '():
' → logprob: -14.87514877319336

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005263288039714098
    2. ' full' → logprob: -5.380263328552246
    3. '#' → logprob: -8.255263328552246
    4. 'full' → logprob: -9.130263328552246
    5. '(full' → logprob: -9.630263328552246
    6. '    
' → logprob: -9.755263328552246
    7. '	full' → logprob: -9.880263328552246
    8. ' #' → logprob: -11.130263328552246
    9. 'Full' → logprob: -11.380263328552246
    10. '
' → logprob: -11.630263328552246

Token 292: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5220848917961121
    2. 'full' → logprob: -1.7720849514007568
    3. '#' → logprob: -2.022084951400757
    4. ' full' → logprob: -2.522084951400757
    5. 'num' → logprob: -4.022084712982178
    6. ' #' → logprob: -6.397084712982178
    7. 'all' → logprob: -6.647084712982178
    8. ' num' → logprob: -7.022084712982178
    9. 'n' → logprob: -7.397084712982178
    10. 'total' → logprob: -8.272085189819336

Token 293: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5899038314819336
    2. 'full' → logprob: -1.5899038314819336
    3. '   ' → logprob: -1.9649038314819336
    4. 'num' → logprob: -2.5899038314819336
    5. 'n' → logprob: -4.589903831481934
    6. ' full' → logprob: -5.089903831481934
    7. ' #' → logprob: -5.964903831481934
    8. ' num' → logprob: -7.214903831481934
    9. '"' → logprob: -7.339903831481934
    10. 'nombre' → logprob: -7.339903831481934

Token 294: ' Ex' (ID: 1771)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5118061304092407
    2. '#' → logprob: -1.6368061304092407
    3. ' #' → logprob: -2.136806011199951
    4. ' num' → logprob: -2.761806011199951
    5. ' print' → logprob: -5.386806011199951
    6. 'num' → logprob: -5.511806011199951
    7. '    ' → logprob: -5.511806011199951
    8. ' full' → logprob: -6.011806011199951
    9. 'Dem' → logprob: -6.511806011199951
    10. ' user' → logprob: -6.636806011199951

Token 295: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.02617163397371769
    2. 'ecute' → logprob: -3.7761716842651367
    3. 'é' → logprob: -6.401171684265137
    4. 'ec' → logprob: -8.026171684265137
    5. 'e' → logprob: -8.401171684265137
    6. '
' → logprob: -8.651171684265137
    7. 'écution' → logprob: -9.401171684265137
    8. 'p' → logprob: -9.776171684265137
    9. '\' → logprob: -10.151171684265137
    10. 'plore' → logprob: -10.401171684265137

Token 296: 'ute' (ID: 1331)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -0.7738421559333801
    2. 'é' → logprob: -1.2738420963287354
    3. 'éc' → logprob: -1.6488420963287354
    4. 'e' → logprob: -3.7738420963287354
    5. 'ute' → logprob: -4.1488423347473145
    6. 'cute' → logprob: -4.2738423347473145
    7. '\' → logprob: -5.8988423347473145
    8. '�' → logprob: -6.5238423347473145
    9. 'ec' → logprob: -6.5238423347473145
    10. 'è' → logprob: -6.5238423347473145

Token 297: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.24064432084560394
    2. ' la' → logprob: -1.8656443357467651
    3. ' l' → logprob: -3.6156442165374756
    4. '()' → logprob: -3.6156442165374756
    5. ' les' → logprob: -5.865644454956055
    6. 'le' → logprob: -7.615644454956055
    7. '   ' → logprob: -7.865644454956055
    8. ' the' → logprob: -7.990644454956055
    9. ' un' → logprob: -8.115644454956055
    10. ' ' → logprob: -8.490644454956055

Token 298: ' flux' (ID: 36547)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.2088744044303894
    2. ' programme' → logprob: -1.7088744640350342
    3. 'program' → logprob: -5.583874225616455
    4. 'code' → logprob: -7.333874225616455
    5. ' code' → logprob: -7.458874225616455
    6. ' program' → logprob: -7.708874225616455
    7. 'process' → logprob: -7.708874225616455
    8. 'flux' → logprob: -8.208874702453613
    9. ' processus' → logprob: -8.333874702453613
    10. 'script' → logprob: -8.333874702453613

Token 299: ' principal' (ID: 10589)
  Prédit: ' principal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' principal' → logprob: -0.03747968748211861
    2. ' de' → logprob: -4.037479877471924
    3. '   ' → logprob: -4.787479877471924
    4. ' complet' → logprob: -5.162479877471924
    5. ' du' → logprob: -5.787479877471924
    6. 'principal' → logprob: -6.787479877471924
    7. ' principale' → logprob: -7.662479877471924
    8. 'de' → logprob: -8.412479400634766
    9. ' main' → logprob: -9.537479400634766
    10. ' program' → logprob: -9.662479400634766

Token 300: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6528570652008057
    2. ' du' → logprob: -1.0278570652008057
    3. ' de' → logprob: -2.1528570652008057
    4. 'de' → logprob: -6.902856826782227
    5. '    ' → logprob: -7.152856826782227
    6. 'def' → logprob: -7.152856826782227
    7. '    
' → logprob: -7.402856826782227
    8. 'du' → logprob: -8.152856826782227
    9. ' des' → logprob: -8.152856826782227
    10. ':' → logprob: -8.527856826782227

Token 301: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.009597527794539928
    2. ' programme' → logprob: -4.884597301483154
    3. 'program' → logprob: -6.259597301483154
    4. 'script' → logprob: -10.259597778320312
    5. 'jeu' → logprob: -10.509597778320312
    6. 'code' → logprob: -12.134597778320312
    7. 'programm' → logprob: -13.259597778320312
    8. 'programma' → logprob: -13.259597778320312
    9. '```' → logprob: -13.259597778320312
    10. 'Programme' → logprob: -13.509597778320312

Token 302: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4421963095664978
    2. ':' → logprob: -1.4421963691711426
    3. '():' → logprob: -2.1921963691711426
    4. '()' → logprob: -6.067196369171143
    5. '):' → logprob: -6.067196369171143
    6. '.' → logprob: -6.692196369171143
    7. ' :' → logprob: -6.692196369171143
    8. ')' → logprob: -7.692196369171143
    9. '():
' → logprob: -7.817196369171143
    10. ',' → logprob: -8.067195892333984

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009203101508319378
    2. '    ' → logprob: -5.38420295715332
    3. '    
' → logprob: -5.88420295715332
    4. '#' → logprob: -7.25920295715332
    5. ' full' → logprob: -7.38420295715332
    6. ' #' → logprob: -8.63420295715332
    7. '     
' → logprob: -9.50920295715332
    8. '       ' → logprob: -9.63420295715332
    9. '   
' → logprob: -10.50920295715332
    10. ' 
' → logprob: -10.88420295715332

Token 304: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0502631813287735
    2. ' full' → logprob: -3.8002631664276123
    3. '#' → logprob: -4.050263404846191
    4. ' #' → logprob: -5.050263404846191
    5. '    ' → logprob: -7.050263404846191
    6. '    
' → logprob: -7.050263404846191
    7. ' num' → logprob: -7.925263404846191
    8. 'full' → logprob: -8.800263404846191
    9. 'num' → logprob: -9.300263404846191
    10. '  ' → logprob: -9.425263404846191

Token 305: ' Lit' (ID: 45595)
  Prédit: 'Dem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dem' → logprob: -1.4822914600372314
    2. '#' → logprob: -1.6072914600372314
    3. ' Dem' → logprob: -1.7322914600372314
    4. ' num' → logprob: -2.2322914600372314
    5. ' full' → logprob: -2.2322914600372314
    6. 'num' → logprob: -2.7322914600372314
    7. ' #' → logprob: -3.1072914600372314
    8. 'R' → logprob: -4.107291221618652
    9. ' R' → logprob: -4.232291221618652
    10. '   ' → logprob: -5.232291221618652

Token 306: ' deux' (ID: 10301)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.034554608166217804
    2. ' num' → logprob: -4.409554481506348
    3. ' les' → logprob: -5.159554481506348
    4. ' la' → logprob: -5.284554481506348
    5. ' un' → logprob: -5.659554481506348
    6. 'num' → logprob: -6.159554481506348
    7. '   ' → logprob: -6.284554481506348
    8. 'le' → logprob: -6.409554481506348
    9. ' nombre' → logprob: -7.659554481506348
    10. ' ' → logprob: -8.034554481506348

Token 307: ' ent' (ID: 1121)
  Prédit: ' listes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.11192875355482101
    2. ' nombres' → logprob: -3.236928701400757
    3. 'list' → logprob: -3.986928701400757
    4. ' lists' → logprob: -4.111928939819336
    5. ' lignes' → logprob: -5.361928939819336
    6. 'lists' → logprob: -5.611928939819336
    7. ' ent' → logprob: -5.611928939819336
    8. 'n' → logprob: -5.861928939819336
    9. ' list' → logprob: -6.111928939819336
    10. 'ent' → logprob: -6.111928939819336

Token 308: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.05091959610581398
    2. 'r' → logprob: -4.175919532775879
    3. 'rees' → logprob: -4.300919532775879
    4. 'ier' → logprob: -4.675919532775879
    5. 'ières' → logprob: -4.925919532775879
    6. 'ries' → logprob: -6.925919532775879
    7. 'er' → logprob: -7.550919532775879
    8. 'ées' → logprob: -7.550919532775879
    9. 'rée' → logprob: -7.925919532775879
    10. 'ers' → logprob: -8.050919532775879

Token 309: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9984591007232666
    2. '   ' → logprob: -1.6234591007232666
    3. 'n' → logprob: -1.7484591007232666
    4. ' n' → logprob: -2.6234591007232666
    5. '()' → logprob: -2.6234591007232666
    6. 'num' → logprob: -3.8734591007232666
    7. ' num' → logprob: -3.9984591007232666
    8. ' (' → logprob: -4.2484588623046875
    9. ' pour' → logprob: -4.3734588623046875
    10. ' à' → logprob: -5.2484588623046875

Token 310: ' entrée' (ID: 95590)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.4429115951061249
    2. ' input' → logprob: -2.3179116249084473
    3. 'input' → logprob: -2.4429116249084473
    4. ' entrée' → logprob: -2.5679116249084473
    5. 'entr' → logprob: -3.8179116249084473
    6. 'ent' → logprob: -4.192911624908447
    7. 'entrant' → logprob: -4.567911624908447
    8. ' ' → logprob: -4.817911624908447
    9. 't' → logprob: -5.317911624908447
    10. ' entr' → logprob: -5.442911624908447

Token 311: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44253408908843994
    2. ',' → logprob: -1.06753408908844
    3. '()' → logprob: -5.56753396987915
    4. '    
' → logprob: -6.31753396987915
    5. ' ,' → logprob: -6.56753396987915
    6. '    ' → logprob: -6.81753396987915
    7. '(' → logprob: -7.06753396987915
    8. ',
' → logprob: -7.19253396987915
    9. ')' → logprob: -7.69253396987915
    10. ' (' → logprob: -7.94253396987915

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017596713732928038
    2. '    ' → logprob: -6.5017595291137695
    3. ',' → logprob: -9.37675952911377
    4. '  ' → logprob: -10.00175952911377
    5. '#' → logprob: -10.75175952911377
    6. '    
' → logprob: -10.75175952911377
    7. ' ' → logprob: -10.87675952911377
    8. '       ' → logprob: -11.62675952911377
    9. ')' → logprob: -11.62675952911377
    10. 'def' → logprob: -11.75175952911377

Token 313: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036078762263059616
    2. '    ' → logprob: -4.036078929901123
    3. ' #' → logprob: -5.161078929901123
    4. ' n' → logprob: -5.786078929901123
    5. '#' → logprob: -6.036078929901123
    6. '  ' → logprob: -6.286078929901123
    7. 'num' → logprob: -6.536078929901123
    8. ' num' → logprob: -6.661078929901123
    9. 'n' → logprob: -7.786078929901123
    10. ' ' → logprob: -8.036078453063965

Token 314: ' Trou' (ID: 58947)
  Prédit: ' full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' full' → logprob: -0.5149916410446167
    2. ' lit' → logprob: -2.2649917602539062
    3. ' exclude' → logprob: -2.3899917602539062
    4. ' demande' → logprob: -3.0149917602539062
    5. ' num' → logprob: -3.6399917602539062
    6. ' reads' → logprob: -4.014991760253906
    7. ' excl' → logprob: -4.514991760253906
    8. ' excludes' → logprob: -4.639991760253906
    9. 'num' → logprob: -4.764991760253906
    10. ' inputs' → logprob: -4.889991760253906

Token 315: 've' (ID: 737)
  Prédit: 've'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.00030709904967807233
    2. '
' → logprob: -10.125307083129883
    3. '   ' → logprob: -10.125307083129883
    4. 'v' → logprob: -10.625307083129883
    5. '#' → logprob: -11.062807083129883
    6. '```' → logprob: -11.312807083129883
    7. '

' → logprob: -11.375307083129883
    8. 'ver' → logprob: -11.375307083129883
    9. 'ves' → logprob: -11.375307083129883
    10. '\' → logprob: -11.500307083129883

Token 316: ' et' (ID: 859)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.3282431364059448
    2. ' un' → logprob: -1.4532431364059448
    3. ' le' → logprob: -1.7032431364059448
    4. ' une' → logprob: -2.3282432556152344
    5. ' trois' → logprob: -3.0782432556152344
    6. ' les' → logprob: -3.2032432556152344
    7. '   ' → logprob: -3.4532432556152344
    8. ' the' → logprob: -4.078243255615234
    9. ' l' → logprob: -4.578243255615234
    10. ' ' → logprob: -4.828243255615234

Token 317: ' affiche' (ID: 127479)
  Prédit: ' affiche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.09297166764736176
    2. ' demande' → logprob: -3.2179715633392334
    3. ' imprime' → logprob: -3.9679715633392334
    4. 'aff' → logprob: -4.7179718017578125
    5. ' print' → logprob: -5.2179718017578125
    6. ' les' → logprob: -5.5929718017578125
    7. 'print' → logprob: -6.0929718017578125
    8. ' affich' → logprob: -6.9679718017578125
    9. ' appelle' → logprob: -7.2179718017578125
    10. ' l' → logprob: -7.2179718017578125

Token 318: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.011855817399919033
    2. ' le' → logprob: -4.886855602264404
    3. 'l' → logprob: -5.761855602264404
    4. ' la' → logprob: -7.261855602264404
    5. ' ' → logprob: -9.011856079101562
    6. 'le' → logprob: -9.761856079101562
    7. ' unique' → logprob: -9.761856079101562
    8. ' the' → logprob: -9.761856079101562
    9. ' un' → logprob: -10.386856079101562
    10. ' ' → logprob: -11.011856079101562

Token 319: ''un' (ID: 9788)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.019175024703145027
    2. 'élé' → logprob: -4.519175052642822
    3. ''un' → logprob: -5.519175052642822
    4. ''é' → logprob: -6.894175052642822
    5. ' élément' → logprob: -7.019175052642822
    6. ''ent' → logprob: -7.894175052642822
    7. ' unique' → logprob: -8.644174575805664
    8. ''ex' → logprob: -8.769174575805664
    9. ''objet' → logprob: -8.769174575805664
    10. 'a' → logprob: -9.269174575805664

Token 320: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.017504123970866203
    2. ' des' → logprob: -4.5175042152404785
    3. 'élé' → logprob: -5.3925042152404785
    4. ' élément' → logprob: -7.0175042152404785
    5. 'e' → logprob: -7.8925042152404785
    6. 'ic' → logprob: -8.14250373840332
    7. 'iques' → logprob: -9.89250373840332
    8. 'des' → logprob: -10.01750373840332
    9. 'IQUE' → logprob: -10.26750373840332
    10. 'iqu' → logprob: -10.64250373840332

Token 321: ' valeur' (ID: 41664)
  Prédit: ' élément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.5892416834831238
    2. 'élé' → logprob: -0.8392416834831238
    3. ' ' → logprob: -5.4642415046691895
    4. ' element' → logprob: -6.0892415046691895
    5. ' entier' → logprob: -6.2142415046691895
    6. '_' → logprob: -6.7142415046691895
    7. 'element' → logprob: -6.7142415046691895
    8. ' él' → logprob: -7.4642415046691895
    9. ' éléments' → logprob: -8.589241981506348
    10. 'é' → logprob: -8.589241981506348

Token 322: ' man' (ID: 873)
  Prédit: ' man'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' man' → logprob: -0.028667520731687546
    2. 'man' → logprob: -4.778667449951172
    3. ' qui' → logprob: -5.278667449951172
    4. ' unique' → logprob: -5.403667449951172
    5. ' restante' → logprob: -5.528667449951172
    6. ' abs' → logprob: -5.653667449951172
    7. ' ' → logprob: -7.778667449951172
    8. ' missing' → logprob: -7.778667449951172
    9. 'abs' → logprob: -7.903667449951172
    10. ' manc' → logprob: -8.028667449951172

Token 323: 'qu' (ID: 351)
  Prédit: 'qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -2.129266067640856e-05
    2. 'quant' → logprob: -11.750020980834961
    3. 'q' → logprob: -12.500020980834961
    4. 'ante' → logprob: -12.625020980834961
    5. 'que' → logprob: -13.000020980834961
    6. 'nante' → logprob: -13.625020980834961
    7. '
' → logprob: -14.125020980834961
    8. 'cante' → logprob: -14.375020980834961
    9. 'quée' → logprob: -14.500020980834961
    10. 't' → logprob: -14.875020980834961

Token 324: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0002060436672763899
    2. 'e' → logprob: -8.750205993652344
    3. 'ant' → logprob: -10.875205993652344
    4. 'ente' → logprob: -11.875205993652344
    5. 'te' → logprob: -12.000205993652344
    6. 'a' → logprob: -12.250205993652344
    7. 'nante' → logprob: -12.625205993652344
    8. 'ate' → logprob: -13.125205993652344
    9. 't' → logprob: -13.625205993652344
    10. 'nte' → logprob: -14.125205993652344

Token 325: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -1.2282593250274658
    2. ' parmi' → logprob: -1.2282593250274658
    3. ' entre' → logprob: -2.228259325027466
    4. '   ' → logprob: -2.353259325027466
    5. 'dans' → logprob: -2.853259325027466
    6. 'entre' → logprob: -3.478259325027466
    7. ' des' → logprob: -3.603259325027466
    8. 'from' → logprob: -3.603259325027466
    9. ' par' → logprob: -4.353259086608887
    10. ' ' → logprob: -4.478259086608887

Token 326: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2362067848443985
    2. ' [' → logprob: -1.6112067699432373
    3. ' la' → logprob: -5.486207008361816
    4. 'range' → logprob: -6.111207008361816
    5. 'la' → logprob: -6.486207008361816
    6. ' range' → logprob: -6.861207008361816
    7. 'une' → logprob: -8.111207008361816
    8. 'l' → logprob: -8.486207008361816
    9. ' une' → logprob: -8.611207008361816
    10. 'list' → logprob: -9.111207008361816

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33099764585494995
    2. '[' → logprob: -1.3309977054595947
    3. ' [' → logprob: -4.830997467041016
    4. ' ' → logprob: -5.830997467041016
    5. 'range' → logprob: -6.080997467041016
    6. '   ' → logprob: -6.330997467041016
    7. '3' → logprob: -6.455997467041016
    8. ' range' → logprob: -8.455997467041016
    9. '{' → logprob: -8.955997467041016
    10. '0' → logprob: -9.080997467041016

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004086275293957442
    2. '3' → logprob: -8.125408172607422
    3. ' ,' → logprob: -9.750408172607422
    4. '2' → logprob: -10.125408172607422
    5. ' ' → logprob: -12.125408172607422
    6. '1' → logprob: -13.750408172607422
    7. '7' → logprob: -13.875408172607422
    8. '5' → logprob: -14.000408172607422
    9. '4' → logprob: -14.000408172607422
    10. '6' → logprob: -14.125408172607422

Token 329: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.636752724647522
    2. '3' → logprob: -0.761752724647522
    3. '2' → logprob: -6.011752605438232
    4. '4' → logprob: -6.761752605438232
    5. '9' → logprob: -9.13675308227539
    6. '5' → logprob: -9.26175308227539
    7. '   ' → logprob: -9.76175308227539
    8. '  ' → logprob: -10.01175308227539
    9. '10' → logprob: -10.01175308227539
    10. ',' → logprob: -10.13675308227539

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016623204573988914
    2. '3' → logprob: -4.391623020172119
    3. ' ,' → logprob: -5.516623020172119
    4. ' ' → logprob: -9.516623497009277
    5. '   ' → logprob: -12.641623497009277
    6. '4' → logprob: -13.141623497009277
    7. ',
' → logprob: -13.391623497009277
    8. '  ' → logprob: -13.704123497009277
    9. ']' → logprob: -14.579123497009277
    10. '    ' → logprob: -14.641623497009277

Token 331: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0007146967691369355
    2. ' ' → logprob: -7.2507147789001465
    3. ',' → logprob: -12.500714302062988
    4. '4' → logprob: -15.500714302062988
    5. '```' → logprob: -16.063215255737305
    6. '9' → logprob: -16.563215255737305
    7. '   ' → logprob: -16.625715255737305
    8. ' ' → logprob: -16.688215255737305
    9. ']' → logprob: -16.750715255737305
    10. ' ,' → logprob: -16.875715255737305

Token 332: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39019665122032166
    2. ',' → logprob: -1.140196681022644
    3. '4' → logprob: -6.890196800231934
    4. ' ]' → logprob: -7.265196800231934
    5. ' ' → logprob: -7.515196800231934
    6. ' ,' → logprob: -7.890196800231934
    7. '].' → logprob: -8.390196800231934
    8. '],' → logprob: -8.640196800231934
    9. '])' → logprob: -9.265196800231934
    10. '   ' → logprob: -9.515196800231934

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008701292099431157
    2. ')' → logprob: -7.500870227813721
    3. '    
' → logprob: -9.250869750976562
    4. 'def' → logprob: -9.375869750976562
    5. '
' → logprob: -9.500869750976562
    6. '```' → logprob: -11.375869750976562
    7. '"""' → logprob: -11.750869750976562
    8. '<|end|>' → logprob: -12.000869750976562
    9. '       ' → logprob: -12.500869750976562
    10. '  
' → logprob: -12.750869750976562

Token 334: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01263937447220087
    2. '    
' → logprob: -5.01263952255249
    3. '
' → logprob: -5.13763952255249
    4. '   
' → logprob: -11.262639045715332
    5. '  
' → logprob: -11.887639045715332
    6. ' 
' → logprob: -12.637639045715332
    7. '    ' → logprob: -13.262639045715332
    8. 'num' → logprob: -13.637639045715332
    9. '    
    
' → logprob: -13.762639045715332
    10. '```' → logprob: -14.137639045715332

Token 335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007386347278952599
    2. '
' → logprob: -7.750738620758057
    3. '    
' → logprob: -9.125739097595215
    4. 'num' → logprob: -9.500739097595215
    5. 'full' → logprob: -10.000739097595215
    6. 'inputs' → logprob: -10.250739097595215
    7. ' full' → logprob: -11.625739097595215
    8. 'a' → logprob: -11.750739097595215
    9. 'user' → logprob: -12.000739097595215
    10. 'input' → logprob: -12.375739097595215

Token 336: ' #' (ID: 1069)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.30899202823638916
    2. 'inputs' → logprob: -2.4339919090270996
    3. 'num' → logprob: -2.9339919090270996
    4. '#' (adapté à ' #') → logprob: -3.5589919090270996
    5. 'nums' → logprob: -3.6839919090270996
    6. 'numbers' → logprob: -3.9339919090270996
    7. '   ' → logprob: -4.0589919090271
    8. ' full' → logprob: -4.4339919090271
    9. 'user' → logprob: -4.9339919090271
    10. 'values' → logprob: -5.1839919090271

Token 337: ' Liste' (ID: 61030)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.3222053647041321
    2. ' full' → logprob: -1.8222053050994873
    3. 'inputs' → logprob: -3.3222053050994873
    4. 'user' → logprob: -3.5722053050994873
    5. 'numbers' → logprob: -4.447205543518066
    6. 'values' → logprob: -5.072205543518066
    7. '#' → logprob: -5.322205543518066
    8. 'nums' → logprob: -5.322205543518066
    9. ' inputs' → logprob: -5.447205543518066
    10. 'required' → logprob: -6.072205543518066

Token 338: ' complète' (ID: 75660)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08823184669017792
    2. '[' → logprob: -4.088232040405273
    3. '   ' → logprob: -4.463232040405273
    4. ' [' → logprob: -4.463232040405273
    5. 'complete' → logprob: -4.838232040405273
    6. ' complet' → logprob: -4.963232040405273
    7. ' complete' → logprob: -5.213232040405273
    8. '=[' → logprob: -5.338232040405273
    9. ' full' → logprob: -5.463232040405273
    10. 'com' → logprob: -6.213232040405273

Token 339: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15932248532772064
    2. 'complete' → logprob: -2.659322500228882
    3. '_complete' → logprob: -4.159322261810303
    4. '[' → logprob: -4.284322261810303
    5. ' complete' → logprob: -4.784322261810303
    6. 'full' → logprob: -4.909322261810303
    7. 'des' → logprob: -5.034322261810303
    8. 'com' → logprob: -5.159322261810303
    9. ' full' → logprob: -5.159322261810303
    10. '_com' → logprob: -6.409322261810303

Token 340: ' référence' (ID: 76252)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -9.817902173381299e-05
    2. ' [' → logprob: -9.25009822845459
    3. ' ' → logprob: -14.87509822845459
    4. 'l' → logprob: -15.12509822845459
    5. 'val' → logprob: -15.12509822845459
    6. 'base' → logprob: -16.125097274780273
    7. '   ' → logprob: -16.250097274780273
    8. 'elements' → logprob: -16.250097274780273
    9. '```' → logprob: -16.375097274780273
    10. 'full' → logprob: -16.500097274780273

Token 341: '
' (ID: 198)
  Prédit: ' full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' full' → logprob: -0.5262172818183899
    2. '   ' → logprob: -2.526217222213745
    3. ' complete' → logprob: -2.526217222213745
    4. ' =' → logprob: -2.651217222213745
    5. 'full' → logprob: -2.651217222213745
    6. '[' → logprob: -3.151217222213745
    7. 'complete' → logprob: -3.526217222213745
    8. ' [' → logprob: -4.526217460632324
    9. ' possible' → logprob: -5.151217460632324
    10. 'possible' → logprob: -5.401217460632324

Token 342: '   ' (ID: 271)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.7824793457984924
    2. '   ' → logprob: -1.1574792861938477
    3. ' full' → logprob: -1.6574792861938477
    4. '[' → logprob: -4.157479286193848
    5. 'complete' → logprob: -4.282479286193848
    6. ' complete' → logprob: -5.532479286193848
    7. 'reference' → logprob: -6.032479286193848
    8. ' reference' → logprob: -7.532479286193848
    9. ' [' → logprob: -7.657479286193848
    10. 'all' → logprob: -8.282479286193848

Token 343: ' ans' (ID: 3345)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.4134925305843353
    2. ' full' → logprob: -1.5384925603866577
    3. 'complete' → logprob: -2.538492441177368
    4. 'reference' → logprob: -3.538492441177368
    5. ' complete' → logprob: -4.538492679595947
    6. ' reference' → logprob: -6.038492679595947
    7. '[' → logprob: -7.038492679595947
    8. 'all' → logprob: -7.163492679595947
    9. 'numbers' → logprob: -7.413492679595947
    10. '   ' → logprob: -8.413492202758789

Token 344: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.86895352602005
    2. 'wer' → logprob: -0.86895352602005
    3. 'wers' → logprob: -2.4939534664154053
    4. '_list' → logprob: -3.4939534664154053
    5. 'w' → logprob: -3.8689534664154053
    6. 'were' → logprob: -4.993953704833984
    7. 's' → logprob: -5.243953704833984
    8. '=[' → logprob: -5.618953704833984
    9. '=' → logprob: -5.743953704833984
    10. 'swer' → logprob: -5.868953704833984

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014165159314870834
    2. '=' → logprob: -4.264164924621582
    3. ' =[' → logprob: -14.264164924621582
    4. 's' → logprob: -14.889164924621582
    5. '=[' → logprob: -15.639164924621582
    6. ' ' → logprob: -16.1391658782959
    7. '   ' → logprob: -16.1391658782959
    8. ' ' → logprob: -16.2641658782959
    9. '[' → logprob: -16.8891658782959
    10. '  ' → logprob: -17.3891658782959

Token 346: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0031777136027812958
    2. ' [' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.003177642822266
    4. '   ' → logprob: -17.378177642822266
    5. ' ' → logprob: -18.878177642822266
    6. '  ' → logprob: -19.003177642822266
    7. '	' → logprob: -20.628177642822266
    8. '=[' → logprob: -21.503177642822266
    9. '```' → logprob: -21.753177642822266
    10. '['' → logprob: -22.003177642822266

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.0
    4. '
' → logprob: -21.5
    5. '  ' → logprob: -21.5
    6. '```' → logprob: -21.5
    7. ']' → logprob: -22.0
    8. '１' → logprob: -22.25
    9. '۱' → logprob: -22.5
    10. '    ' → logprob: -23.0

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.718606891809031e-05
    2. ' ,' → logprob: -9.625066757202148
    3. ',
' → logprob: -14.250066757202148
    4. '3' → logprob: -15.375066757202148
    5. '2' → logprob: -16.75006675720215
    6. '1' → logprob: -17.62506675720215
    7. '‌,' → logprob: -18.62506675720215
    8. ',

' → logprob: -19.12506675720215
    9. ' ' → logprob: -19.25006675720215
    10. '،' → logprob: -20.00006675720215

Token 349: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2014196664094925
    2. ' ' → logprob: -1.701419711112976
    3. '   ' → logprob: -12.576419830322266
    4. '  ' → logprob: -12.951419830322266
    5. ',' → logprob: -15.201419830322266
    6. '    ' → logprob: -15.951419830322266
    7. ' ,' → logprob: -16.701419830322266
    8. '２' → logprob: -17.826419830322266
    9. ' ' → logprob: -18.326419830322266
    10. '3' → logprob: -18.701419830322266

Token 350: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023154958034865558
    2. ' ' → logprob: -8.375231742858887
    3. ',' → logprob: -14.250231742858887
    4. '3' → logprob: -16.00023078918457
    5. '   ' → logprob: -16.25023078918457
    6. '  ' → logprob: -16.37523078918457
    7. '
' → logprob: -18.75023078918457
    8. '２' → logprob: -18.75023078918457
    9. '1' → logprob: -18.87523078918457
    10. ' ,' → logprob: -19.37523078918457

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005037044174969196
    2. ' ,' → logprob: -7.8755035400390625
    3. '3' → logprob: -9.000503540039062
    4. ' ' → logprob: -16.000503540039062
    5. '   ' → logprob: -16.125503540039062
    6. ',
' → logprob: -17.500503540039062
    7. '1' → logprob: -18.375503540039062
    8. '2' → logprob: -18.375503540039062
    9. '4' → logprob: -18.375503540039062
    10. '‌,' → logprob: -18.875503540039062

Token 352: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005935313180088997
    2. ' ' → logprob: -5.130935192108154
    3. '   ' → logprob: -12.005935668945312
    4. '  ' → logprob: -14.755935668945312
    5. '    ' → logprob: -16.005935668945312
    6. '```' → logprob: -17.505935668945312
    7. ',' → logprob: -18.130935668945312
    8. ' ' → logprob: -18.318435668945312
    9. '       ' → logprob: -18.380935668945312
    10. '۳' → logprob: -18.505935668945312

Token 353: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -19.875003814697266
    4. '۳' → logprob: -20.000003814697266
    5. '  ' → logprob: -20.250003814697266
    6. '３' → logprob: -20.937503814697266
    7. '৩' → logprob: -21.375003814697266
    8. '```' → logprob: -21.750003814697266
    9. '३' → logprob: -22.062503814697266
    10. '    ' → logprob: -22.812503814697266

Token 354: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011653638648567721
    2. ' ]' → logprob: -9.375116348266602
    3. '   ' → logprob: -10.500116348266602
    4. ']
' → logprob: -12.875116348266602
    5. ',' → logprob: -13.625116348266602
    6. ')' → logprob: -15.875116348266602
    7. ']

' → logprob: -16.3751163482666
    8. ' ' → logprob: -16.8751163482666
    9. ']
' → logprob: -17.2501163482666
    10. '.' → logprob: -18.1251163482666

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014721735380589962
    2. 'user' → logprob: -5.264721870422363
    3. '    
' → logprob: -5.264721870422363
    4. 'inputs' → logprob: -5.889721870422363
    5. '
' → logprob: -7.514721870422363
    6. 'missing' → logprob: -8.764721870422363
    7. 'excluded' → logprob: -8.889721870422363
    8. 'input' → logprob: -9.139721870422363
    9. ' user' → logprob: -9.264721870422363
    10. ' inputs' → logprob: -9.514721870422363

Token 356: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27677804231643677
    2. 'user' → logprob: -2.151777982711792
    3. 'inputs' → logprob: -2.526777982711792
    4. '#' (adapté à ' #') → logprob: -3.651777982711792
    5. 'num' → logprob: -5.276778221130371
    6. 'input' → logprob: -5.276778221130371
    7. 'excluded' → logprob: -5.901778221130371
    8. 'missing' → logprob: -6.276778221130371
    9. 'first' → logprob: -7.276778221130371
    10. ' user' → logprob: -7.401778221130371

Token 357: ' Dem' (ID: 9458)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.16690972447395325
    2. 'inputs' → logprob: -2.166909694671631
    3. 'excluded' → logprob: -4.291909694671631
    4. 'missing' → logprob: -4.916909694671631
    5. '#' → logprob: -4.916909694671631
    6. 'input' → logprob: -5.166909694671631
    7. '   ' → logprob: -6.916909694671631
    8. 'num' → logprob: -7.666909694671631
    9. 'values' → logprob: -7.666909694671631
    10. 'nums' → logprob: -7.666909694671631

Token 358: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.22081440687179565
    2. 'and' → logprob: -2.5958144664764404
    3. 'andez' → logprob: -2.7208144664764404
    4. 'ander' → logprob: -2.9708144664764404
    5. 'ands' → logprob: -5.720814228057861
    6. '   ' → logprob: -6.970814228057861
    7. 'andes' → logprob: -7.595814228057861
    8. 'e' → logprob: -8.09581470489502
    9. 'it' → logprob: -8.59581470489502
    10. '#' → logprob: -8.72081470489502

Token 359: ' à' (ID: 1221)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.8467826247215271
    2. '   ' → logprob: -0.9717826247215271
    3. 'user' → logprob: -2.596782684326172
    4. ' num' → logprob: -2.971782684326172
    5. ' user' → logprob: -4.096782684326172
    6. ' deux' → logprob: -4.721782684326172
    7. ' ' → logprob: -4.846782684326172
    8. 'inputs' → logprob: -4.971782684326172
    9. ' les' → logprob: -5.346782684326172
    10. ' =' → logprob: -5.721782684326172

Token 360: ' l' (ID: 305)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.25092393159866333
    2. ' user' → logprob: -2.5009238719940186
    3. 'l' → logprob: -2.8759238719940186
    4. 'get' → logprob: -2.8759238719940186
    5. ' get' → logprob: -4.000924110412598
    6. ' l' → logprob: -5.000924110412598
    7. 'the' → logprob: -7.000924110412598
    8. 'util' → logprob: -7.375924110412598
    9. ' utilisateur' → logprob: -8.250924110412598
    10. ' the' → logprob: -9.000924110412598

Token 361: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.6611632704734802
    2. 'user' → logprob: -0.9111632704734802
    3. 'util' → logprob: -2.911163330078125
    4. '_user' → logprob: -3.661163330078125
    5. ' utilisateur' → logprob: -7.411163330078125
    6. ''user' → logprob: -7.661163330078125
    7. '_util' → logprob: -8.786163330078125
    8. '’utilisateur' → logprob: -8.911163330078125
    9. ' user' → logprob: -9.286163330078125
    10. 'User' → logprob: -10.286163330078125

Token 362: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5505878329277039
    2. 'num' → logprob: -1.3005878925323486
    3. 'def' → logprob: -2.5505878925323486
    4. '(num' → logprob: -3.9255878925323486
    5. '(' → logprob: -4.1755876541137695
    6. 'inputs' → logprob: -4.3005876541137695
    7. ' num' → logprob: -5.0505876541137695
    8. 'user' → logprob: -5.4255876541137695
    9. '  ' → logprob: -6.4255876541137695
    10. ':' → logprob: -6.6755876541137695

Token 363: ' saisir' (ID: 152120)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.009854541160166264
    2. ' get' → logprob: -4.884854316711426
    3. 's' → logprob: -6.509854316711426
    4. ' saisir' → logprob: -7.259854316711426
    5. 'r' → logprob: -10.259854316711426
    6. 'enter' → logprob: -11.634854316711426
    7. 'entr' → logprob: -12.884854316711426
    8. ' obtenir' → logprob: -13.384854316711426
    9. 'user' → logprob: -13.634854316711426
    10. 'rec' → logprob: -14.134854316711426

Token 364: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015104549238458276
    2. ' ' → logprob: -7.0015106201171875
    3. '3' → logprob: -7.8765106201171875
    4. 'num' → logprob: -9.001510620117188
    5. 'ans' → logprob: -11.001510620117188
    6. '   ' → logprob: -11.376510620117188
    7. 'len' → logprob: -11.626510620117188
    8. ' ans' → logprob: -11.751510620117188
    9. ' deux' → logprob: -11.876510620117188
    10. 'inputs' → logprob: -11.876510620117188

Token 365: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.781812846660614
    2. ' integers' → logprob: -1.4068129062652588
    3. 'ent' → logprob: -1.7818129062652588
    4. 'val' → logprob: -3.906812906265259
    5. ' numbers' → logprob: -4.28181266784668
    6. 'inte' → logprob: -4.40681266784668
    7. ' inputs' → logprob: -4.53181266784668
    8. 'inputs' → logprob: -4.78181266784668
    9. ' valeurs' → logprob: -4.78181266784668
    10. 'user' → logprob: -4.90681266784668

Token 366: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.004625341854989529
    2. 't' → logprob: -5.50462532043457
    3. 'tiers' → logprob: -8.62962532043457
    4. 'ti' → logprob: -9.00462532043457
    5. 'ters' → logprob: -9.75462532043457
    6. 'tes' → logprob: -10.00462532043457
    7. 'ers' → logprob: -10.50462532043457
    8. 'tiens' → logprob: -10.62962532043457
    9. 'ts' → logprob: -10.75462532043457
    10. '   ' → logprob: -11.37962532043457

Token 367: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7392828464508057
    2. ' (' → logprob: -1.3642828464508057
    3. '(' → logprob: -2.3642828464508057
    4. ' inputs' → logprob: -2.7392828464508057
    5. 'inputs' → logprob: -3.1142828464508057
    6. ' num' → logprob: -3.9892828464508057
    7. ' user' → logprob: -4.864282608032227
    8. ' ans' → logprob: -4.864282608032227
    9. 'num' → logprob: -5.364282608032227
    10. ' deux' → logprob: -5.864282608032227

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10411377251148224
    2. 'user' → logprob: -3.604113817214966
    3. 'inputs' → logprob: -3.604113817214966
    4. ' inputs' → logprob: -3.979113817214966
    5. ' user' → logprob: -4.354113578796387
    6. '(' → logprob: -4.854113578796387
    7. ' two' → logprob: -7.354113578796387
    8. 'num' → logprob: -7.604113578796387
    9. 'two' → logprob: -7.604113578796387
    10. ' =' → logprob: -7.854113578796387

Token 369: ' ab' (ID: 692)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.08499967306852341
    2. ' user' → logprob: -2.9599995613098145
    3. 'inputs' → logprob: -3.7099995613098145
    4. ' inputs' → logprob: -5.4599995613098145
    5. 'values' → logprob: -8.085000038146973
    6. 'input' → logprob: -8.585000038146973
    7. '   ' → logprob: -8.835000038146973
    8. 'entered' → logprob: -9.710000038146973
    9. 'numbers' → logprob: -9.710000038146973
    10. 'selected' → logprob: -9.960000038146973

Token 370: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7634443044662476
    2. '_inputs' → logprob: -0.7634443044662476
    3. 's' → logprob: -3.013444423675537
    4. '_values' → logprob: -4.513444423675537
    5. '_' → logprob: -5.263444423675537
    6. '_vals' → logprob: -7.138444423675537
    7. '=' → logprob: -7.513444423675537
    8. 'inputs' → logprob: -7.888444423675537
    9. '_list' → logprob: -8.263443946838379
    10. 'puts' → logprob: -8.638443946838379

Token 371: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.2519291639328003
    2. ' get' → logprob: -1.5019291639328003
    3. '	get' → logprob: -17.501928329467773
    4. '[get' → logprob: -18.501928329467773
    5. '(get' → logprob: -18.876928329467773
    6. ' ' → logprob: -18.876928329467773
    7. '.get' → logprob: -19.376928329467773
    8. '=get' → logprob: -19.751928329467773
    9. '   ' → logprob: -21.126928329467773
    10. '_get' → logprob: -21.251928329467773

Token 372: '_user' (ID: 7146)
  Prédit: '_user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_user' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.500000953674316
    3. 'user' → logprob: -15.250000953674316
    4. '_us' → logprob: -16.500001907348633
    5. '_use' → logprob: -16.750001907348633
    6. '_users' → logprob: -17.125001907348633
    7. ' _' → logprob: -17.125001907348633
    8. '_User' → logprob: -17.125001907348633
    9. '_USER' → logprob: -17.250001907348633
    10. 'User' → logprob: -17.625001907348633

Token 373: '_inputs' (ID: 67304)
  Prédit: '_inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -4.47757811343763e-05
    2. '_' → logprob: -10.375044822692871
    3. '_outputs' → logprob: -12.000044822692871
    4. ' _' → logprob: -12.750044822692871
    5. 's' → logprob: -13.375044822692871
    6. '_user' → logprob: -13.875044822692871
    7. 'inputs' → logprob: -14.375044822692871
    8. '_s' → logprob: -15.875044822692871
    9. '_input' → logprob: -16.000043869018555
    10. '_values' → logprob: -16.000043869018555

Token 374: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. '2' → logprob: -15.000000953674316
    3. ' (' → logprob: -15.500000953674316
    4. '3' → logprob: -19.25
    5. '(
' → logprob: -21.25
    6. ' ' → logprob: -22.25
    7. '```' → logprob: -23.0
    8. '4' → logprob: -24.5
    9. '((' → logprob: -24.625
    10. '[' → logprob: -24.875

Token 375: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.375001907348633
    4. '(' → logprob: -19.500001907348633
    5. ')' → logprob: -20.125001907348633
    6. '  ' → logprob: -21.875001907348633
    7. '２' → logprob: -21.875001907348633
    8. '```' → logprob: -22.000001907348633
    9. '3' → logprob: -22.250001907348633
    10. '۲' → logprob: -22.375001907348633

Token 376: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. ' )' → logprob: -11.875007629394531
    3. '())' → logprob: -14.750007629394531
    4. '()' → logprob: -14.875007629394531
    5. '(' → logprob: -15.875007629394531
    6. ')
' → logprob: -16.37500762939453
    7. '   ' → logprob: -16.50000762939453
    8. '))' → logprob: -16.50000762939453
    9. ')`' → logprob: -17.50000762939453
    10. ' ' → logprob: -18.62500762939453

Token 377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0357443243265152
    2. ' missing' → logprob: -4.1607441902160645
    3. 'missing' → logprob: -4.4107441902160645
    4. '    
' → logprob: -5.9107441902160645
    5. '
' → logprob: -6.6607441902160645
    6. 'c' → logprob: -7.2857441902160645
    7. '```' → logprob: -7.7857441902160645
    8. 'b' → logprob: -7.9107441902160645
    9. ' unique' → logprob: -8.160744667053223
    10. 'm' → logprob: -8.285744667053223

Token 378: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5467568039894104
    2. 'missing' → logprob: -1.5467567443847656
    3. 'c' → logprob: -2.5467567443847656
    4. ' missing' → logprob: -2.7967567443847656
    5. '    
' → logprob: -4.171756744384766
    6. 'unique' → logprob: -4.671756744384766
    7. 'b' → logprob: -4.921756744384766
    8. 'result' → logprob: -5.421756744384766
    9. 'm' → logprob: -5.421756744384766
    10. ' c' → logprob: -5.546756744384766

Token 379: ' Trou' (ID: 58947)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.43686509132385254
    2. ' missing' → logprob: -1.9368650913238525
    3. 'unique' → logprob: -2.4368650913238525
    4. ' unique' → logprob: -3.6868650913238525
    5. 'result' → logprob: -3.9368650913238525
    6. 'c' → logprob: -4.061864852905273
    7. 'res' → logprob: -4.686864852905273
    8. 'ans' → logprob: -5.061864852905273
    9. 'answer' → logprob: -5.186864852905273
    10. 'miss' → logprob: -5.311864852905273

Token 380: 've' (ID: 737)
  Prédit: 've'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.001441184664145112
    2. 'ver' → logprob: -7.62644100189209
    3. 'ves' → logprob: -8.12644100189209
    4. '   ' → logprob: -8.50144100189209
    5. 'v' → logprob: -8.75144100189209
    6. 'vez' → logprob: -8.87644100189209
    7. '       ' → logprob: -9.75144100189209
    8. 'vé' → logprob: -10.62644100189209
    9. '    ' → logprob: -11.37644100189209
    10. '#' → logprob: -11.75144100189209

Token 381: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3340752124786377
    2. ' unique' → logprob: -2.0840752124786377
    3. '_unique' → logprob: -2.3340752124786377
    4. 'l' → logprob: -4.209074974060059
    5. ' la' → logprob: -4.334074974060059
    6. ' the' → logprob: -4.834074974060059
    7. ' missing' → logprob: -4.834074974060059
    8. 'unique' → logprob: -5.209074974060059
    9. ' le' → logprob: -5.709074974060059
    10. '_missing' → logprob: -5.834074974060059

Token 382: ' valeur' (ID: 41664)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.4628704786300659
    2. 'missing' → logprob: -1.087870478630066
    3. 'val' → logprob: -3.9628705978393555
    4. 'value' → logprob: -5.3378705978393555
    5. 'man' → logprob: -6.2128705978393555
    6. ' unique' → logprob: -6.3378705978393555
    7. 'answer' → logprob: -6.4628705978393555
    8. 'result' → logprob: -6.9628705978393555
    9. ' missing' → logprob: -7.3378705978393555
    10. 'uniq' → logprob: -7.4628705978393555

Token 383: ' man' (ID: 873)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.3675248622894287
    2. ' man' → logprob: -1.6175248622894287
    3. '_unique' → logprob: -2.9925248622894287
    4. '_man' → logprob: -3.4925248622894287
    5. ' unique' → logprob: -4.242525100708008
    6. '_' → logprob: -4.742525100708008
    7. 'unique' → logprob: -5.867525100708008
    8. '_missing' → logprob: -6.367525100708008
    9. 'missing' → logprob: -7.742525100708008
    10. ' missing' → logprob: -7.992525100708008

Token 384: 'qu' (ID: 351)
  Prédit: 'qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.0016967225819826126
    2. 'cante' → logprob: -6.626696586608887
    3. 'q' → logprob: -8.251696586608887
    4. 'nante' → logprob: -9.876696586608887
    5. 'que' → logprob: -10.501696586608887
    6. '
' → logprob: -12.001696586608887
    7. 'quant' → logprob: -12.126696586608887
    8. 's' → logprob: -12.626696586608887
    9. '   ' → logprob: -12.876696586608887
    10. 'quée' → logprob: -13.126696586608887

Token 385: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.01759771816432476
    2. 'ing' → logprob: -5.017597675323486
    3. 'qu' → logprob: -5.267597675323486
    4. 'nante' → logprob: -6.017597675323486
    5. 'que' → logprob: -7.017597675323486
    6. 'a' → logprob: -7.642597675323486
    7. 'in' → logprob: -7.642597675323486
    8. 'cante' → logprob: -7.767597675323486
    9. 'ant' → logprob: -8.892598152160645
    10. 'issante' → logprob: -9.017598152160645

Token 386: ' et' (ID: 859)
  Prédit: ' missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' missing' → logprob: -0.5133394002914429
    2. ' =' → logprob: -1.5133394002914429
    3. 'missing' → logprob: -2.2633395195007324
    4. ' unique' → logprob: -3.1383395195007324
    5. '   ' → logprob: -4.263339519500732
    6. 'unique' → logprob: -5.513339519500732
    7. '_missing' → logprob: -5.513339519500732
    8. '=' → logprob: -5.763339519500732
    9. ' value' → logprob: -5.888339519500732
    10. ' man' → logprob: -6.638339519500732

Token 387: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0486765056848526
    2. ' print' → logprob: -3.0486764907836914
    3. '   ' → logprob: -10.423676490783691
    4. 'unique' → logprob: -10.798676490783691
    5. ' unique' → logprob: -11.298676490783691
    6. 'prints' → logprob: -11.923676490783691
    7. '
' → logprob: -12.298676490783691
    8. ' prints' → logprob: -12.673676490783691
    9. '_print' → logprob: -13.923676490783691
    10. 'return' → logprob: -14.048676490783691

Token 388: ''aff' (ID: 53397)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9520400166511536
    2. ''aff' → logprob: -1.0770399570465088
    3. '=' → logprob: -2.577039957046509
    4. ' =' → logprob: -2.827039957046509
    5. 'unique' → logprob: -2.827039957046509
    6. '   ' → logprob: -3.952039957046509
    7. 'a' → logprob: -4.577040195465088
    8. 'aff' → logprob: -5.202040195465088
    9. '```' → logprob: -5.202040195465088
    10. ' unique' → logprob: -5.452040195465088

Token 389: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -1.259079363080673e-05
    2. 'ic' → logprob: -11.750012397766113
    3. 'che' → logprob: -13.250012397766113
    4. 'ich' → logprob: -13.375012397766113
    5. 'ichage' → logprob: -15.000012397766113
    6. '```' → logprob: -15.500012397766113
    7. 'iches' → logprob: -16.12501335144043
    8. 'icher' → logprob: -16.37501335144043
    9. '>' → logprob: -16.87501335144043
    10. ' iche' → logprob: -16.87501335144043

Token 390: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15850336849689484
    2. ' missing' → logprob: -2.533503293991089
    3. 'missing' → logprob: -2.783503293991089
    4. '
' → logprob: -5.908503532409668
    5. '    
' → logprob: -7.033503532409668
    6. 'result' → logprob: -7.283503532409668
    7. 'print' → logprob: -8.158503532409668
    8. 'value' → logprob: -8.658503532409668
    9. ' unique' → logprob: -8.783503532409668
    10. ' print' → logprob: -9.283503532409668

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45699992775917053
    2. ' missing' → logprob: -1.2069998979568481
    3. 'missing' → logprob: -3.2070000171661377
    4. ' result' → logprob: -4.331999778747559
    5. 'result' → logprob: -5.706999778747559
    6. ' unique' → logprob: -5.956999778747559
    7. ' print' → logprob: -5.956999778747559
    8. ' value' → logprob: -6.331999778747559
    9. ' answer' → logprob: -7.081999778747559
    10. '
' → logprob: -7.206999778747559

Token 392: ' result' (ID: 1534)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.21624740958213806
    2. 'print' → logprob: -2.216247320175171
    3. ' missing' → logprob: -3.091247320175171
    4. 'unique' → logprob: -4.46624755859375
    5. 'result' (adapté à ' result') → logprob: -4.71624755859375
    6. ' print' → logprob: -4.96624755859375
    7. 'answer' → logprob: -5.34124755859375
    8. ' unique' → logprob: -6.09124755859375
    9. 'ans' → logprob: -6.71624755859375
    10. 'miss' → logprob: -7.09124755859375

Token 393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008622024208307266
    2. '=' → logprob: -4.758622169494629
    3. '_' → logprob: -11.883622169494629
    4. ')' → logprob: -15.258622169494629
    5. ' ' → logprob: -16.383621215820312
    6. ' ' → logprob: -16.383621215820312
    7. '   ' → logprob: -16.508621215820312
    8. '  ' → logprob: -16.758621215820312
    9. '_=' → logprob: -18.008621215820312
    10. 's' → logprob: -18.133621215820312

Token 394: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.2519296407699585
    2. ' find' → logprob: -1.5019296407699585
    3. '(find' → logprob: -15.12692928314209
    4. '	find' → logprob: -15.25192928314209
    5. '=find' → logprob: -16.876930236816406
    6. '.find' → logprob: -19.001930236816406
    7. ')find' → logprob: -20.251930236816406
    8. '_find' → logprob: -20.376930236816406
    9. 'f' → logprob: -20.626930236816406
    10. '
' → logprob: -20.751930236816406

Token 395: '_unique' (ID: 51840)
  Prédit: '_unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unique' → logprob: -1.9361264946837764e-07
    2. 'unique' → logprob: -16.5
    3. '_' → logprob: -17.5
    4. 'Unique' → logprob: -18.5
    5. '_user' → logprob: -18.75
    6. '_uni' → logprob: -18.875
    7. '_missing' → logprob: -19.375
    8. ' unique' → logprob: -19.75
    9. '(unique' → logprob: -20.25
    10. '```' → logprob: -20.75

Token 396: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -1.0280383548888494e-06
    2. '_elem' → logprob: -14.500000953674316
    3. '_' → logprob: -15.500000953674316
    4. 'element' → logprob: -16.375001907348633
    5. '_elements' → logprob: -16.500001907348633
    6. '_ele' → logprob: -17.500001907348633
    7. ' _' → logprob: -17.750001907348633
    8. '_ELEMENT' → logprob: -18.000001907348633
    9. '_value' → logprob: -18.250001907348633
    10. '_unique' → logprob: -18.375001907348633

Token 397: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.875003814697266
    3. ' (' → logprob: -14.000003814697266
    4. '(ab' → logprob: -16.750003814697266
    5. '(answer' → logprob: -17.250003814697266
    6. 'ans' → logprob: -17.500003814697266
    7. '```' → logprob: -18.125003814697266
    8. '(
' → logprob: -18.250003814697266
    9. ' ans' → logprob: -18.500003814697266
    10. '(arr' → logprob: -19.375003814697266

Token 398: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.896309739408025e-07
    2. 'list' → logprob: -14.500000953674316
    3. 'List' → logprob: -15.625000953674316
    4. '(ans' → logprob: -17.625
    5. '_LIST' → logprob: -18.5
    6. '_lst' → logprob: -18.75
    7. 's' → logprob: -19.0
    8. 'ist' → logprob: -19.875
    9. '_List' → logprob: -19.875
    10. '_' → logprob: -19.875

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005877026706002653
    2. '(ab' → logprob: -8.125587463378906
    3. ' ,' → logprob: -8.750587463378906
    4. '(' → logprob: -9.000587463378906
    5. ')' → logprob: -12.250587463378906
    6. '   ' → logprob: -13.000587463378906
    7. ',(' → logprob: -15.000587463378906
    8. ' (' → logprob: -15.000587463378906
    9. ',
' → logprob: -15.000587463378906
    10. '(ans' → logprob: -15.125587463378906

Token 400: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.28116896748542786
    2. ' ab' → logprob: -1.4061689376831055
    3. '(ab' → logprob: -11.656168937683105
    4. '   ' → logprob: -12.281168937683105
    5. '_ab' → logprob: -13.906168937683105
    6. 'abc' → logprob: -14.156168937683105
    7. ' ' → logprob: -14.281168937683105
    8. 'abbr' → logprob: -14.406168937683105
    9. 'AB' → logprob: -14.906168937683105
    10. ''ab' → logprob: -15.031168937683105

Token 401: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1602482944726944
    2. ')
' → logprob: -1.9102482795715332
    3. ')
' → logprob: -11.160248756408691
    4. ')

' → logprob: -12.535248756408691
    5. ' )
' → logprob: -12.660248756408691
    6. ' )' → logprob: -13.160248756408691
    7. '   ' → logprob: -13.785248756408691
    8. ' ' → logprob: -16.160247802734375
    9. ')\
' → logprob: -17.285247802734375
    10. ')`
' → logprob: -17.660247802734375

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06208465248346329
    2. 'print' → logprob: -2.812084674835205
    3. ' print' → logprob: -9.312084197998047
    4. '
' → logprob: -10.812084197998047
    5. '    
' → logprob: -12.312084197998047
    6. '	print' → logprob: -13.437084197998047
    7. '```' → logprob: -14.687084197998047
    8. '
' → logprob: -17.062084197998047
    9. '  
' → logprob: -17.187084197998047
    10. '   ' → logprob: -17.437084197998047

Token 403: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.20375168323516846
    2. '   ' → logprob: -1.7037516832351685
    3. ' print' → logprob: -6.078751564025879
    4. '
' → logprob: -10.578751564025879
    5. '```' → logprob: -11.453751564025879
    6. '	print' → logprob: -11.828751564025879
    7. '    
' → logprob: -13.953751564025879
    8. '
' → logprob: -15.828751564025879
    9. '.print' → logprob: -16.953752517700195
    10. '  ' → logprob: -17.203752517700195

Token 404: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.047640442848205566
    2. '(result' → logprob: -3.547640323638916
    3. '(f' → logprob: -4.047640323638916
    4. '("("' → logprob: -8.297640800476074
    5. '()' → logprob: -12.297640800476074
    6. '('' → logprob: -12.547640800476074
    7. ' (' → logprob: -12.672640800476074
    8. '((' → logprob: -13.422640800476074
    9. '("")' → logprob: -13.672640800476074
    10. '("' → logprob: -14.172640800476074

Token 405: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.875000953674316
    3. '()' → logprob: -17.0
    4. '())' → logprob: -17.5
    5. '))' → logprob: -18.125
    6. ')`' → logprob: -19.125
    7. ')
' → logprob: -20.25
    8. '')' → logprob: -20.5
    9. '}' → logprob: -21.25
    10. '")' → logprob: -21.25

Token 406: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.1557283111615106e-05
    2. 'main' → logprob: -10.125041961669922
    3. ' if' → logprob: -13.625041961669922
    4. '
' → logprob: -16.000041961669922
    5. '```' → logprob: -16.125041961669922
    6. '#' → logprob: -17.875041961669922
    7. '\n' → logprob: -18.500041961669922
    8. '<|end|>' → logprob: -18.625041961669922
    9. '  
' → logprob: -19.000041961669922
    10. '\' → logprob: -19.250041961669922

Token 407: ' Ex' (ID: 1771)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00026217024424113333
    2. 'main' → logprob: -8.250262260437012
    3. ' if' → logprob: -14.000262260437012
    4. 'If' → logprob: -17.875261306762695
    5. '__' → logprob: -19.750261306762695
    6. ' main' → logprob: -20.875261306762695
    7. '```' → logprob: -21.750261306762695
    8. '#' → logprob: -22.500261306762695
    9. '(main' → logprob: -23.500261306762695
    10. 'Main' → logprob: -24.375261306762695

Token 408: 'écution' (ID: 122423)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -0.21096466481685638
    2. 'if' → logprob: -2.2109646797180176
    3. 'ec' → logprob: -3.0859646797180176
    4. 'éc' → logprob: -3.5859646797180176
    5. 'ecution' → logprob: -5.835964679718018
    6. 'ecut' → logprob: -6.335964679718018
    7. 'ecu' → logprob: -6.835964679718018
    8. 'e' → logprob: -7.085964679718018
    9. 'écution' → logprob: -8.21096420288086
    10. 'é' → logprob: -8.83596420288086

Token 409: ' du' (ID: 1462)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.901345038088039e-05
    2. ' if' → logprob: -9.375099182128906
    3. 'main' → logprob: -11.500099182128906
    4. '
' → logprob: -12.500099182128906
    5. '\' → logprob: -16.250099182128906
    6. '```' → logprob: -16.625099182128906
    7. '_main' → logprob: -17.000099182128906
    8. ' main' → logprob: -17.875099182128906
    9. '\n' → logprob: -18.250099182128906
    10. ':' → logprob: -18.500099182128906

Token 410: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.4457932412624359
    2. ' programme' → logprob: -1.4457932710647583
    3. 'script' → logprob: -2.5707931518554688
    4. ' script' → logprob: -3.3207931518554688
    5. 'program' → logprob: -4.695793151855469
    6. '__' → logprob: -6.695793151855469
    7. 'main' → logprob: -7.820793151855469
    8. ' program' → logprob: -7.820793151855469
    9. ' __' → logprob: -8.945793151855469
    10. ' main' → logprob: -9.695793151855469

Token 411: ' principal' (ID: 10589)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.967624019831419e-05
    2. '
' → logprob: -9.750060081481934
    3. ' if' → logprob: -14.375060081481934
    4. 'main' → logprob: -14.375060081481934
    5. '

' → logprob: -16.625059127807617
    6. '```' → logprob: -17.375059127807617
    7. '    
' → logprob: -21.250059127807617
    8. '  
' → logprob: -21.625059127807617
    9. '\
' → logprob: -22.250059127807617
    10. '\' → logprob: -22.625059127807617

Token 412: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6939240097999573
    2. 'if' → logprob: -0.6939240097999573
    3. '

' → logprob: -7.1939239501953125
    4. ' if' → logprob: -11.443923950195312
    5. '
' → logprob: -12.193923950195312
    6. '  
' → logprob: -12.568923950195312
    7. '\n' → logprob: -13.318923950195312
    8. ' 
' → logprob: -13.443923950195312
    9. '```' → logprob: -13.443923950195312
    10. '\' → logprob: -14.568923950195312

Token 413: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009115827269852161
    2. 'main' → logprob: -7.000911712646484
    3. ' if' → logprob: -17.000911712646484
    4. ' main' → logprob: -21.500911712646484
    5. '```' → logprob: -23.125911712646484
    6. '(main' → logprob: -24.375911712646484
    7. 'If' → logprob: -25.125911712646484
    8. '__' → logprob: -25.750911712646484
    9. '_main' → logprob: -26.000911712646484
    10. '	main' → logprob: -26.375911712646484

Token 414: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.010956449434161186
    2. ' ' → logprob: -5.135956287384033
    3. '__' → logprob: -5.510956287384033
    4. ' _' → logprob: -8.010956764221191
    5. '_' → logprob: -8.385956764221191
    6. ' ' → logprob: -8.635956764221191
    7. ' ' → logprob: -9.260956764221191
    8. ' ‌' → logprob: -9.635956764221191
    9. ' ​' → logprob: -11.010956764221191
    10. ' space' → logprob: -11.385956764221191

Token 415: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13175542652606964
    2. ' ==' → logprob: -2.5067553520202637
    3. ' __' → logprob: -3.3817553520202637
    4. '==' → logprob: -5.131755352020264
    5. 'name' → logprob: -6.756755352020264
    6. '_' → logprob: -7.381755352020264
    7. '_name' → logprob: -9.631755828857422
    8. ' _' → logprob: -10.256755828857422
    9. ' ' → logprob: -11.256755828857422
    10. '=="' → logprob: -11.256755828857422

Token 416: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.704273118884885e-07
    2. '==' → logprob: -14.750000953674316
    3. '__.__' → logprob: -16.375
    4. ' ==' → logprob: -17.375
    5. '_' → logprob: -17.625
    6. '___' → logprob: -18.25
    7. '____' → logprob: -18.625
    8. '__
' → logprob: -18.75
    9. ' __' → logprob: -18.875
    10. '__.' → logprob: -19.125

Token 417: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00039504567394033074
    2. '==' → logprob: -8.125394821166992
    3. ' ==' → logprob: -9.500394821166992
    4. '___' → logprob: -11.375394821166992
    5. '_' → logprob: -11.750394821166992
    6. '=="' → logprob: -13.125394821166992
    7. '____' → logprob: -13.875394821166992
    8. '"' → logprob: -14.125394821166992
    9. ' __' → logprob: -15.125394821166992
    10. '__
' → logprob: -15.750394821166992

Token 418: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004203763324767351
    2. ''' → logprob: -5.504203796386719
    3. ' "__' → logprob: -9.004203796386719
    4. '__' → logprob: -13.379203796386719
    5. ' '__' → logprob: -14.254203796386719
    6. '"user' → logprob: -16.62920379638672
    7. '"name' → logprob: -17.37920379638672
    8. ''"' → logprob: -17.50420379638672
    9. '"'' → logprob: -17.50420379638672
    10. '("__' → logprob: -17.87920379638672

Token 419: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. 'name' → logprob: -17.875
    3. ' main' → logprob: -18.625
    4. '_main' → logprob: -20.75
    5. 'ma' → logprob: -21.5
    6. '	main' → logprob: -23.0
    7. 'mai' → logprob: -23.625
    8. 'm' → logprob: -24.0
    9. 'maine' → logprob: -24.125
    10. '-main' → logprob: -25.375

Token 420: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20142073929309845
    2. '__' → logprob: -1.701420783996582
    3. '__':
' → logprob: -12.326420783996582
    4. '_' → logprob: -12.826420783996582
    5. '_"' → logprob: -16.326419830322266
    6. '__["' → logprob: -16.326419830322266
    7. '__:' → logprob: -16.701419830322266
    8. '__",' → logprob: -17.451419830322266
    9. '__("' → logprob: -17.826419830322266
    10. ' "__' → logprob: -18.576419830322266

Token 421: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003423308487981558
    2. '__' → logprob: -6.50342321395874
    3. 'main' → logprob: -6.62842321395874
    4. ''' → logprob: -7.50342321395874
    5. ' main' → logprob: -10.503423690795898
    6. ' "__' → logprob: -11.003423690795898
    7. '	main' → logprob: -14.628423690795898
    8. '   ' → logprob: -15.003423690795898
    9. ' ' → logprob: -15.253423690795898
    10. '_main' → logprob: -15.753423690795898

Token 422: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -9.088346359931165e-07
    2. ' main' → logprob: -14.000000953674316
    3. '	main' → logprob: -21.0
    4. '   ' → logprob: -22.5
    5. 'ma' → logprob: -24.375
    6. '_main' → logprob: -24.5
    7. 'mai' → logprob: -24.625
    8. 'm' → logprob: -24.875
    9. 'Main' → logprob: -25.5
    10. '(main' → logprob: -25.5

Token 423: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 421
Tokens correctement prédits (1ère position, stricte): 183
Tokens correctement prédits (1ère position, avec adaptation): 192
Tokens correctement prédits (top 10): 327
Précision stricte (1ère position): 43.47%
Précision adaptée (1ère position): 45.61%
Précision (top 10): 77.67%
================================================================================
