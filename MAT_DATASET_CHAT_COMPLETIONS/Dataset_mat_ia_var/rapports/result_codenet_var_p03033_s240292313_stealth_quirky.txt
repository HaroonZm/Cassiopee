================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys as SystemModule
import bisect as bis
from heapq import heappush as pushy, heappop as popy
from heapq import heapify as make_heap_now
Input = SystemModule.stdin.readline
from itertools import chain as flat
SystemModule.setrecursionlimit(42424242)

Read = lambda: list(map(int, Input().split()))
SplitInt = lambda: list(map(int, Input().split()))

N, Q = Read()
Stuff = [SplitInt() for meh in range(N)]
Days = [int(Input()) for _ in [42]*Q]

MY_INFINITY = float('inf') * 0.9 + 1e8  # just having fun

def make_intervals(x):
    s, t, dx = x
    return (s-dx, 1, dx), (t-dx, 0, dx)

Chunks = [make_intervals(r) for r in Stuff] + [[(-MY_INFINITY, 1, MY_INFINITY), (MY_INFINITY, 0, MY_INFINITY)]]
IntervalSoup = sorted(list(flat(*Chunks)))

H_add = [MY_INFINITY]
H_del = [MY_INFINITY+1]
Days.append(MY_INFINITY)
DaysIter = iter(Days)

current_d = next(DaysIter)
some_flag = 0
while some_flag < 1:
    for val, entry, valx in IntervalSoup:
        while current_d < val:
            if not H_add[0] == MY_INFINITY:
                print(H_add[0])
            else:
                print(-1)
            current_d = next(DaysIter)
            if current_d == MY_INFINITY:
                some_flag = 2
                break
        if entry:
            pushy(H_add, valx)
        else:
            pushy(H_del, valx)
        while H_add[0] == H_del[0]:
            popy(H_add)
            popy(H_del)
    break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' System' (ID: 1219)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5051555633544922
    2. ' sys' → logprob: -1.0051555633544922
    3. ' ' → logprob: -4.005155563354492
    4. 'sy' → logprob: -5.255155563354492
    5. '   ' → logprob: -5.630155563354492
    6. ' sy' → logprob: -7.255155563354492
    7. '```' → logprob: -7.255155563354492
    8. 's' → logprob: -7.630155563354492
    9. '`' → logprob: -7.880155563354492
    10. '  ' → logprob: -8.255155563354492

Token 4: 'Module' (ID: 5300)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005599428550340235
    2. '.
' → logprob: -9.37555980682373
    3. '<|end|>' → logprob: -9.50055980682373
    4. 'newline' → logprob: -9.75055980682373
    5. '\n' → logprob: -10.00055980682373
    6. '```' → logprob: -10.00055980682373
    7. 'import' → logprob: -10.25055980682373
    8. '
' → logprob: -10.25055980682373
    9. '.

' → logprob: -10.50055980682373
    10. '.import' → logprob: -10.75055980682373

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004762261174619198
    2. '
' → logprob: -5.754762172698975
    3. '.
' → logprob: -8.379762649536133
    4. '<|end|>' → logprob: -8.379762649536133
    5. '

' → logprob: -8.754762649536133
    6. '.import' → logprob: -9.129762649536133
    7. 'import' → logprob: -9.129762649536133
    8. '\n' → logprob: -9.254762649536133
    9. '```' → logprob: -9.504762649536133
    10. '' → logprob: -9.504762649536133

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002712500048801303
    2. '
' → logprob: -7.002712726593018
    3. '.
' → logprob: -8.00271224975586
    4. '<|end|>' → logprob: -8.12771224975586
    5. '\n' → logprob: -8.50271224975586
    6. '.import' → logprob: -8.62771224975586
    7. 'import' → logprob: -8.87771224975586
    8. '

' → logprob: -9.25271224975586
    9. '.readline' → logprob: -9.37771224975586
    10. 'newline' → logprob: -9.87771224975586

Token 7: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.004095973912626505
    2. 'os' → logprob: -5.504096031188965
    3. ' math' → logprob: -11.879096031188965
    4. ' sys' → logprob: -12.504096031188965
    5. ' json' → logprob: -13.004096031188965
    6. '_os' → logprob: -13.504096031188965
    7. '	os' → logprob: -14.379096031188965
    8. '"os' → logprob: -14.379096031188965
    9. ' re' → logprob: -14.754096031188965
    10. ' ' → logprob: -15.004096031188965

Token 8: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.5332478142227046e-05
    2. 'ected' → logprob: -11.625015258789062
    3. 'e' → logprob: -12.875015258789062
    4. 't' → logprob: -13.500015258789062
    5. 'ection' → logprob: -14.500015258789062
    6. 'ector' → logprob: -15.000015258789062
    7. 'ectl' → logprob: -15.000015258789062
    8. '```' → logprob: -15.125015258789062
    9. 'ec' → logprob: -15.500015258789062
    10. 'ects' → logprob: -16.000015258789062

Token 9: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07877246290445328
    2. '<|end|>' → logprob: -2.82877254486084
    3. ' ' → logprob: -5.57877254486084
    4. 'import' → logprob: -6.07877254486084
    5. '<|end|>' → logprob: -6.20377254486084
    6. '
' → logprob: -6.20377254486084
    7. ',' → logprob: -6.82877254486084
    8. '_' → logprob: -7.20377254486084
    9. '.b' → logprob: -7.45377254486084
    10. '' → logprob: -7.57877254486084

Token 10: ' bis' (ID: 7204)
  Prédit: ' Bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bis' → logprob: -0.6953919529914856
    2. ' bis' → logprob: -0.8203919529914856
    3. ' B' → logprob: -3.820391893386841
    4. ' b' → logprob: -3.820391893386841
    5. 'Bis' → logprob: -5.19539213180542
    6. ' Bisc' → logprob: -5.69539213180542
    7. ' Bi' → logprob: -6.19539213180542
    8. ' System' → logprob: -6.32039213180542
    9. ' ' → logprob: -6.69539213180542
    10. ' sys' → logprob: -7.57039213180542

Token 11: '
' (ID: 198)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.16569381952285767
    2. '.' → logprob: -1.915693759918213
    3. 'ects' → logprob: -6.540693759918213
    4. '[' → logprob: -6.915693759918213
    5. '.ins' → logprob: -7.415693759918213
    6. 'ective' → logprob: -8.290694236755371
    7. 't' → logprob: -8.415694236755371
    8. '_' → logprob: -8.415694236755371
    9. 'ec' → logprob: -8.540694236755371
    10. 'ectl' → logprob: -8.540694236755371

Token 12: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01943390630185604
    2. 'import' → logprob: -5.519433975219727
    3. '_' → logprob: -5.644433975219727
    4. '
' → logprob: -5.769433975219727
    5. '
' → logprob: -6.394433975219727
    6. '' → logprob: -6.644433975219727
    7. '.
' → logprob: -7.144433975219727
    8. 'newline' → logprob: -7.394433975219727
    9. '\' → logprob: -7.644433975219727
    10. '

' → logprob: -7.644433975219727

Token 13: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.126234233379364
    2. ' math' → logprob: -2.751234292984009
    3. 'collections' → logprob: -3.501234292984009
    4. ' typing' → logprob: -4.37623405456543
    5. ' itertools' → logprob: -5.12623405456543
    6. ' os' → logprob: -5.75123405456543
    7. 'math' → logprob: -8.00123405456543
    8. ' abc' → logprob: -8.00123405456543
    9. ' functools' → logprob: -8.12623405456543
    10. ' threading' → logprob: -8.12623405456543

Token 14: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0006455989787355065
    2. 'import' → logprob: -7.375645637512207
    3. 'queue' → logprob: -11.500645637512207
    4. ' import' → logprob: -11.750645637512207
    5. ' queue' → logprob: -14.500645637512207
    6. 'ify' → logprob: -15.750645637512207
    7. 'i' → logprob: -16.12564468383789
    8. 'from' → logprob: -16.37564468383789
    9. 'ort' → logprob: -16.37564468383789
    10. ' q' → logprob: -17.50064468383789

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.011708428151905537
    2. 'import' → logprob: -4.5117082595825195
    3. ' ' → logprob: -7.3867082595825195
    4. '<|end|>' → logprob: -11.26170825958252
    5. '.' → logprob: -11.76170825958252
    6. '	import' → logprob: -11.88670825958252
    7. '_import' → logprob: -12.63670825958252
    8. '.import' → logprob: -13.38670825958252
    9. ' im' → logprob: -13.51170825958252
    10. ' impor' → logprob: -13.63670825958252

Token 16: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.5355994701385498
    2. 'he' → logprob: -0.9105994701385498
    3. 'heap' → logprob: -4.785599708557129
    4. ' n' → logprob: -6.410599708557129
    5. 'nl' → logprob: -6.910599708557129
    6. ' heap' → logprob: -7.910599708557129
    7. 'n' → logprob: -8.035599708557129
    8. 'merge' → logprob: -8.160599708557129
    9. ' ' → logprob: -8.285599708557129
    10. ' merge' → logprob: -9.410599708557129

Token 17: 'app' (ID: 903)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.6941301226615906
    2. 'app' → logprob: -0.6941301226615906
    3. 'a' → logprob: -6.944129943847656
    4. 'aq' → logprob: -11.819129943847656
    5. 'ап' → logprob: -12.569129943847656
    6. 'apl' → logprob: -13.694129943847656
    7. 'aps' → logprob: -13.694129943847656
    8. 'q' → logprob: -13.694129943847656
    9. '[' → logprob: -14.694129943847656
    10. 'apt' → logprob: -15.194129943847656

Token 18: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.011054890230298042
    2. 'op' → logprob: -4.511054992675781
    3. 'us' → logprob: -12.386054992675781
    4. 'o' → logprob: -13.886054992675781
    5. 'u' → logprob: -14.011054992675781
    6. '[' → logprob: -15.011054992675781
    7. 'osh' → logprob: -16.01105499267578
    8. '

' → logprob: -16.13605499267578
    9. '```' → logprob: -16.13605499267578
    10. '   ' → logprob: -16.26105499267578

Token 19: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04788284748792648
    2. ' ' → logprob: -4.172883033752441
    3. 'he' → logprob: -4.547883033752441
    4. ' (' → logprob: -4.547883033752441
    5. ',' → logprob: -5.047883033752441
    6. ' and' → logprob: -6.797883033752441
    7. '(
' → logprob: -6.922883033752441
    8. 'import' → logprob: -7.797883033752441
    9. '<|end|>' → logprob: -8.422883033752441
    10. ')' → logprob: -8.797883033752441

Token 20: ' push' (ID: 9349)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.14081811904907227
    2. ' h' → logprob: -2.6408181190490723
    3. 'he' → logprob: -3.3908181190490723
    4. ' push' → logprob: -4.765818119049072
    5. ' heap' → logprob: -5.015818119049072
    6. '_he' → logprob: -5.515818119049072
    7. ' hp' → logprob: -5.515818119049072
    8. 'heap' → logprob: -7.015818119049072
    9. 'h' → logprob: -7.640818119049072
    10. 'push' → logprob: -8.140817642211914

Token 21: 'y' (ID: 88)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3740120530128479
    2. ' ' → logprob: -1.7490119934082031
    3. ' (' → logprob: -2.624011993408203
    4. ',' → logprob: -2.874011993408203
    5. 'he' → logprob: -6.374011993408203
    6. '_' → logprob: -6.749011993408203
    7. ')' → logprob: -6.749011993408203
    8. '<|end|>' → logprob: -7.124011993408203
    9. '  ' → logprob: -7.374011993408203
    10. ' ,' → logprob: -7.499011993408203

Token 22: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09853975474834442
    2. ',' → logprob: -3.2235398292541504
    3. '<|end|>' → logprob: -4.22353982925415
    4. '(
' → logprob: -4.34853982925415
    5. ' (' → logprob: -4.84853982925415
    6. ')' → logprob: -5.22353982925415
    7. '.' → logprob: -5.47353982925415
    8. ' ' → logprob: -5.59853982925415
    9. 'p' → logprob: -7.09853982925415
    10. 'import' → logprob: -7.34853982925415

Token 23: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.14516319334506989
    2. 'he' → logprob: -2.0201632976531982
    3. 'heap' → logprob: -6.395163059234619
    4. ' heap' → logprob: -7.645163059234619
    5. 'pop' → logprob: -9.395163536071777
    6. ' ' → logprob: -9.520163536071777
    7. ' pop' → logprob: -10.145163536071777
    8. 'hep' → logprob: -11.020163536071777
    9. 'import' → logprob: -11.082663536071777
    10. ' and' → logprob: -11.520163536071777

Token 24: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.02062107063829899
    2. 'ap' → logprob: -3.8956210613250732
    3. 'a' → logprob: -10.270621299743652
    4. 'apput' → logprob: -12.145621299743652
    5. '```' → logprob: -12.145621299743652
    6. 'ап' → logprob: -12.270621299743652
    7. 'appt' → logprob: -12.520621299743652
    8. 'appa' → logprob: -13.020621299743652
    9. 'q' → logprob: -13.020621299743652
    10. '	app' → logprob: -13.270621299743652

Token 25: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00868394784629345
    2. 'ush' → logprob: -4.758684158325195
    3. 'opleft' → logprob: -10.883684158325195
    4. '   ' → logprob: -11.508684158325195
    5. 'o' → logprob: -11.633684158325195
    6. 'opl' → logprob: -11.883684158325195
    7. 'opp' → logprob: -11.883684158325195
    8. '```' → logprob: -12.383684158325195
    9. 'osh' → logprob: -13.133684158325195
    10. '  ' → logprob: -13.633684158325195

Token 26: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.03553127497434616
    2. 'as' → logprob: -3.7855312824249268
    3. '<|end|>' → logprob: -4.410531044006348
    4. '<|end|>' → logprob: -10.160531044006348
    5. '(as' → logprob: -12.160531044006348
    6. ' ' → logprob: -12.285531044006348
    7. ' (' → logprob: -12.535531044006348
    8. '	as' → logprob: -13.160531044006348
    9. ')' → logprob: -13.785531044006348
    10. '  ' → logprob: -13.910531044006348

Token 27: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0605756975710392
    2. ' p' → logprob: -3.4355757236480713
    3. 'pop' → logprob: -4.560575485229492
    4. ' pop' → logprob: -4.810575485229492
    5. ' ' → logprob: -5.685575485229492
    6. '```' → logprob: -6.685575485229492
    7. 'h' → logprob: -7.435575485229492
    8. 'ppy' → logprob: -7.435575485229492
    9. 'oppy' → logprob: -7.560575485229492
    10. 'po' → logprob: -8.060575485229492

Token 28: 'opy' (ID: 2074)
  Prédit: 'opy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opy' → logprob: -0.28405195474624634
    2. 'op' → logprob: -2.0340518951416016
    3. 'oppy' → logprob: -2.1590518951416016
    4. '```' → logprob: -7.909051895141602
    5. 'ophy' → logprob: -8.909051895141602
    6. 'opsy' → logprob: -9.409051895141602
    7. 'ushy' → logprob: -9.534051895141602
    8. 'o' → logprob: -9.909051895141602
    9. 'opup' → logprob: -10.159051895141602
    10. 'upy' → logprob: -10.284051895141602

Token 29: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15221454203128815
    2. ',' → logprob: -2.777214527130127
    3. '
' → logprob: -4.277214527130127
    4. '(
' → logprob: -4.402214527130127
    5. '\' → logprob: -4.652214527130127
    6. ' ' → logprob: -4.777214527130127
    7. ' (' → logprob: -4.777214527130127
    8. '\n' → logprob: -5.152214527130127
    9. '<|end|>' → logprob: -5.652214527130127
    10. ')' → logprob: -5.777214527130127

Token 30: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7861762642860413
    2. ',' → logprob: -1.9111762046813965
    3. '
' → logprob: -1.9111762046813965
    4. ' ' → logprob: -2.2861762046813965
    5. '(
' → logprob: -3.6611762046813965
    6. '\n' → logprob: -3.6611762046813965
    7. '\' → logprob: -3.9111762046813965
    8. '

' → logprob: -4.4111762046813965
    9. '.' → logprob: -4.5361762046813965
    10. '' → logprob: -4.9111762046813965

Token 31: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.27103134989738464
    2. ' math' → logprob: -2.396031379699707
    3. 'collections' → logprob: -2.521031379699707
    4. ' itertools' → logprob: -2.771031379699707
    5. 'math' → logprob: -6.896031379699707
    6. ' functools' → logprob: -7.521031379699707
    7. ' queue' → logprob: -7.646031379699707
    8. ' typing' → logprob: -7.896031379699707
    9. ' os' → logprob: -8.396031379699707
    10. ' operator' → logprob: -9.021031379699707

Token 32: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.320199877838604e-07
    2. 'queue' → logprob: -15.125
    3. 'import' → logprob: -16.375
    4. 'ql' → logprob: -19.375
    5. 'p' → logprob: -20.375
    6. ' queue' → logprob: -20.5
    7. 'n' → logprob: -21.125
    8. 'qh' → logprob: -21.25
    9. 'from' → logprob: -21.5
    10. 'dict' → logprob: -21.5

Token 33: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0442468523979187
    2. 'import' → logprob: -3.2942469120025635
    3. ' ' → logprob: -5.169246673583984
    4. ' as' → logprob: -8.419246673583984
    5. '<|end|>' → logprob: -8.669246673583984
    6. '	import' → logprob: -11.044246673583984
    7. '_import' → logprob: -11.044246673583984
    8. '.' → logprob: -11.419246673583984
    9. '<|end|>' → logprob: -12.044246673583984
    10. '  ' → logprob: -12.169246673583984

Token 34: ' heap' (ID: 37237)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -1.023031234741211
    2. ' he' → logprob: -1.523031234741211
    3. 'heap' → logprob: -1.898031234741211
    4. 'nl' → logprob: -2.148031234741211
    5. ' n' → logprob: -2.898031234741211
    6. ' heap' → logprob: -3.023031234741211
    7. 'n' → logprob: -3.398031234741211
    8. 'merge' → logprob: -5.523031234741211
    9. ' ' → logprob: -5.898031234741211
    10. '_he' → logprob: -6.023031234741211

Token 35: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.01122607197612524
    2. 'replace' → logprob: -4.511226177215576
    3. 'push' → logprob: -9.761225700378418
    4. 'q' → logprob: -9.886225700378418
    5. 'ush' → logprob: -10.761225700378418
    6. 'lify' → logprob: -11.136225700378418
    7. '_replace' → logprob: -11.386225700378418
    8. 'IFY' → logprob: -12.136225700378418
    9. 'size' → logprob: -12.761225700378418
    10. ' replace' → logprob: -13.761225700378418

Token 36: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.09616605192422867
    2. ' ' → logprob: -2.5961661338806152
    3. 'as' → logprob: -4.471166133880615
    4. '(' → logprob: -6.346166133880615
    5. '<|end|>' → logprob: -6.471166133880615
    6. ' (' → logprob: -6.721166133880615
    7. ',' → logprob: -8.596165657043457
    8. ' 
' → logprob: -8.971165657043457
    9. '(
' → logprob: -8.971165657043457
    10. '  
' → logprob: -9.096165657043457

Token 37: ' make' (ID: 1520)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.24230335652828217
    2. ' h' → logprob: -2.3673033714294434
    3. 'heap' → logprob: -2.4923033714294434
    4. ' he' → logprob: -3.7423033714294434
    5. 'he' → logprob: -5.367303371429443
    6. ' ' → logprob: -5.617303371429443
    7. 'ify' → logprob: -6.117303371429443
    8. 'h' → logprob: -6.617303371429443
    9. ' heaps' → logprob: -7.617303371429443
    10. ' ' → logprob: -8.367302894592285

Token 38: '_heap' (ID: 88741)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '_now' (ID: 49444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.574958860874176
    2. '<|end|>' → logprob: -1.6999588012695312
    3. 'import' → logprob: -2.9499588012695312
    4. 'def' → logprob: -2.9499588012695312
    5. '\n' → logprob: -3.3249588012695312
    6. ' ' → logprob: -3.3249588012695312
    7. ',' → logprob: -4.074958801269531
    8. '<|end|>' → logprob: -4.574958801269531
    9. '

' → logprob: -4.949958801269531
    10. 'newline' → logprob: -5.324958801269531

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4880271255970001
    2. '<|end|>' → logprob: -1.1130270957946777
    3. 'import' → logprob: -4.488027095794678
    4. '\n' → logprob: -4.488027095794678
    5. ' ' → logprob: -4.738027095794678
    6. '<|end|>' → logprob: -5.113027095794678
    7. '

' → logprob: -5.738027095794678
    8. '' → logprob: -5.863027095794678
    9. '\' → logprob: -6.113027095794678
    10. 'def' → logprob: -6.113027095794678

Token 41: 'Input' (ID: 3275)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16608716547489166
    2. '

' → logprob: -2.6660871505737305
    3. '<|end|>' → logprob: -2.7910871505737305
    4. ',' → logprob: -5.1660871505737305
    5. '
' → logprob: -5.5410871505737305
    6. ' ' → logprob: -6.4160871505737305
    7. '\n' → logprob: -6.4160871505737305
    8. '' → logprob: -6.5410871505737305
    9. 'import' → logprob: -6.6660871505737305
    10. 'def' → logprob: -6.6660871505737305

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7930294871330261
    2. '=' → logprob: -0.9180294871330261
    3. '(' → logprob: -3.043029546737671
    4. 'Data' → logprob: -3.668029546737671
    5. '()' → logprob: -3.668029546737671
    6. 'data' → logprob: -4.543029308319092
    7. ':' → logprob: -5.168029308319092
    8. ',' → logprob: -5.168029308319092
    9. 's' → logprob: -5.293029308319092
    10. '_data' → logprob: -5.793029308319092

Token 43: ' System' (ID: 1219)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3390105366706848
    2. ' input' → logprob: -1.71401047706604
    3. 'sys' → logprob: -2.46401047706604
    4. ' sys' → logprob: -3.96401047706604
    5. 'lambda' → logprob: -6.714010715484619
    6. ' lambda' → logprob: -7.714010715484619
    7. 'System' → logprob: -8.089010238647461
    8. 'list' → logprob: -8.089010238647461
    9. 'raw' → logprob: -8.214010238647461
    10. ' System' → logprob: -9.214010238647461

Token 44: 'Module' (ID: 5300)
  Prédit: 'Module'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Module' → logprob: -0.00017231269157491624
    2. '.stdin' → logprob: -10.25017261505127
    3. 'Input' → logprob: -10.50017261505127
    4. '.Module' → logprob: -10.75017261505127
    5. '.input' → logprob: -10.75017261505127
    6. 'input' → logprob: -10.87517261505127
    7. 'System' → logprob: -11.50017261505127
    8. 'Modules' → logprob: -11.75017261505127
    9. '.' → logprob: -11.87517261505127
    10. 'module' → logprob: -12.00017261505127

Token 45: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2217586487531662
    2. '.stdin' → logprob: -2.0967586040496826
    3. '.readline' → logprob: -3.3467586040496826
    4. '.Input' → logprob: -3.9717586040496826
    5. '.argv' → logprob: -5.221758842468262
    6. '.input' → logprob: -5.596758842468262
    7. ' .' → logprob: -6.721758842468262
    8. '.std' → logprob: -6.971758842468262
    9. '.Module' → logprob: -7.096758842468262
    10. '.Read' → logprob: -7.221758842468262

Token 46: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.39940086007118225
    2. '.' → logprob: -1.1494008302688599
    3. '.read' → logprob: -4.39940071105957
    4. '.readlines' → logprob: -9.52440071105957
    5. '.Read' → logprob: -11.02440071105957
    6. 'read' → logprob: -11.02440071105957
    7. '[' → logprob: -11.89940071105957
    8. '.write' → logprob: -12.02440071105957
    9. '.

' → logprob: -12.14940071105957
    10. ',' → logprob: -12.52440071105957

Token 47: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26107871532440186
    2. '()' → logprob: -2.2610788345336914
    3. '(
' → logprob: -2.5110788345336914
    4. '
' → logprob: -3.5110788345336914
    5. '(

' → logprob: -5.886078834533691
    6. ',' → logprob: -6.386078834533691
    7. '()
' → logprob: -6.386078834533691
    8. ' ' → logprob: -6.761078834533691
    9. '<|end|>' → logprob: -6.761078834533691
    10. '

' → logprob: -6.886078834533691

Token 48: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7370120286941528
    2. 'def' → logprob: -0.8620120286941528
    3. '(' → logprob: -3.1120119094848633
    4. '

' → logprob: -3.9870119094848633
    5. '(
' → logprob: -4.112011909484863
    6. '\n' → logprob: -5.862011909484863
    7. '' → logprob: -6.362011909484863
    8. ' def' → logprob: -6.487011909484863
    9. '
' → logprob: -6.612011909484863
    10. '()' → logprob: -6.737011909484863

Token 49: ' itertools' (ID: 103178)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.2559968829154968
    2. ' math' → logprob: -1.7559969425201416
    3. ' itertools' → logprob: -3.3809969425201416
    4. ' typing' → logprob: -4.3809967041015625
    5. 'collections' → logprob: -5.3809967041015625
    6. ' os' → logprob: -7.5059967041015625
    7. ' functools' → logprob: -8.130996704101562
    8. ' sys' → logprob: -8.255996704101562
    9. ' heap' → logprob: -8.505996704101562
    10. 'math' → logprob: -8.630996704101562

Token 50: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.030020754784345627
    2. 'import' → logprob: -3.5300207138061523
    3. ' ' → logprob: -9.405020713806152
    4. '	import' → logprob: -9.405020713806152
    5. '<|end|>' → logprob: -10.405020713806152
    6. '_import' → logprob: -10.530020713806152
    7. '.' → logprob: -10.655020713806152
    8. ' itertools' → logprob: -11.780020713806152
    9. '<|end|>' → logprob: -12.655020713806152
    10. ' .' → logprob: -13.030020713806152

Token 51: ' chain' (ID: 13464)
  Prédit: ' accumulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -1.3424499034881592
    2. ' permutations' → logprob: -1.7174499034881592
    3. 'count' → logprob: -2.092449903488159
    4. ' count' → logprob: -2.467449903488159
    5. 'acc' → logprob: -2.467449903488159
    6. ' group' → logprob: -2.717449903488159
    7. ' is' → logprob: -3.342449903488159
    8. ' combinations' → logprob: -3.467449903488159
    9. 'com' → logprob: -3.467449903488159
    10. ' cycle' → logprob: -4.217450141906738

Token 52: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4770098924636841
    2. 'from' → logprob: -2.1020097732543945
    3. '<|end|>' → logprob: -2.4770097732543945
    4. '.' → logprob: -3.6020097732543945
    5. 'import' → logprob: -3.7270097732543945
    6. ' ' → logprob: -3.7270097732543945
    7. '<|end|>' → logprob: -3.7270097732543945
    8. '
' → logprob: -3.9770097732543945
    9. 'for' → logprob: -4.6020097732543945
    10. 'def' → logprob: -4.7270097732543945

Token 53: ' flat' (ID: 12508)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.38755398988723755
    2. 'chain' → logprob: -2.2625539302825928
    3. ' ch' → logprob: -2.7625539302825928
    4. ' chains' → logprob: -3.1375539302825928
    5. 'ch' → logprob: -3.7625539302825928
    6. ' itertools' → logprob: -3.8875539302825928
    7. ' chained' → logprob: -4.637554168701172
    8. ' it' → logprob: -4.762554168701172
    9. 'chains' → logprob: -5.137554168701172
    10. ' ' → logprob: -5.137554168701172

Token 54: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1680842638015747
    2. 'map' → logprob: -1.4180842638015747
    3. '.' → logprob: -2.168084144592285
    4. 'ter' → logprob: -2.918084144592285
    5. '<|end|>' → logprob: -2.918084144592285
    6. 'from' → logprob: -3.043084144592285
    7. '_' → logprob: -3.418084144592285
    8. '(' → logprob: -3.543084144592285
    9. '_map' → logprob: -3.668084144592285
    10. 'chain' → logprob: -4.418084144592285

Token 55: 'System' (ID: 3320)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4194157123565674
    2. 'from' → logprob: -2.2944157123565674
    3. ',' → logprob: -2.9194157123565674
    4. '
' → logprob: -3.0444157123565674
    5. '<|end|>' → logprob: -3.0444157123565674
    6. 'for' → logprob: -4.169415473937988
    7. '#' → logprob: -4.544415473937988
    8. 'flat' → logprob: -4.669415473937988
    9. ',
' → logprob: -4.919415473937988
    10. ' ' → logprob: -4.919415473937988

Token 56: 'Module' (ID: 5300)
  Prédit: 'Module'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Module' → logprob: -0.0001375089050270617
    2. '.' → logprob: -9.375137329101562
    3. '.Module' → logprob: -10.375137329101562
    4. 'Mod' → logprob: -11.375137329101562
    5. 'Modules' → logprob: -11.875137329101562
    6. 'M' → logprob: -13.750137329101562
    7. '_Module' → logprob: -14.250137329101562
    8. 'Mo' → logprob: -14.875137329101562
    9. 'odule' → logprob: -15.500137329101562
    10. '@Module' → logprob: -16.125137329101562

Token 57: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00023977462842594832
    2. ' .' → logprob: -10.125239372253418
    3. '.stdout' → logprob: -10.750239372253418
    4. '.readline' → logprob: -10.875239372253418
    5. '.exit' → logprob: -11.000239372253418
    6. '.system' → logprob: -11.125239372253418
    7. '.

' → logprob: -11.125239372253418
    8. '.stdin' → logprob: -11.375239372253418
    9. '.import' → logprob: -11.750239372253418
    10. '.stderr' → logprob: -11.875239372253418

Token 58: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.08731783181428909
    2. '_' → logprob: -3.587317943572998
    3. 'ex' → logprob: -3.712317943572998
    4. 'trace' → logprob: -5.462317943572998
    5. 'up' → logprob: -5.712317943572998
    6. '_rec' → logprob: -5.712317943572998
    7. 'e' → logprob: -5.962317943572998
    8. 'encoding' → logprob: -5.962317943572998
    9. '_trace' → logprob: -6.337317943572998
    10. 'default' → logprob: -6.337317943572998

Token 59: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0007100477814674377
    2. 'urs' → logprob: -7.7507100105285645
    3. 'ursive' → logprob: -8.250710487365723
    4. 'ursor' → logprob: -12.375710487365723
    5. 'limit' → logprob: -12.625710487365723
    6. 't' → logprob: -13.375710487365723
    7. 'ur' → logprob: -13.375710487365723
    8. 'urse' → logprob: -13.625710487365723
    9. 'usion' → logprob: -14.000710487365723
    10. 'ode' → logprob: -14.125710487365723

Token 60: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.7432603272027336e-06
    2. '_limit' → logprob: -13.500001907348633
    3. ' limit' → logprob: -15.625001907348633
    4. 'lim' → logprob: -17.125001907348633
    5. 'depth' → logprob: -18.250001907348633
    6. 'Limit' → logprob: -19.250001907348633
    7. '_' → logprob: -20.375001907348633
    8. 'stack' → logprob: -20.375001907348633
    9. '-' → logprob: -20.750001907348633
    10. '-limit' → logprob: -21.000001907348633

Token 61: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.558399319241289e-05
    2. ' (' → logprob: -10.625025749206543
    3. '(
' → logprob: -14.750025749206543
    4. '40' → logprob: -15.500025749206543
    5. '()' → logprob: -15.625025749206543
    6. '((' → logprob: -15.625025749206543
    7. ' ' → logprob: -16.000024795532227
    8. '(

' → logprob: -16.500024795532227
    9. '<|end|>' → logprob: -17.000024795532227
    10. '100' → logprob: -17.500024795532227

Token 62: '424' (ID: 35272)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2541137933731079
    2. '100' → logprob: -1.504113793373108
    3. ' ' → logprob: -6.754113674163818
    4. '300' → logprob: -8.504114151000977
    5. '400' → logprob: -8.754114151000977
    6. '200' → logprob: -8.754114151000977
    7. '999' → logprob: -8.879114151000977
    8. '500' → logprob: -9.254114151000977
    9. '250' → logprob: -9.629114151000977
    10. '1' → logprob: -10.129114151000977

Token 63: '242' (ID: 24472)
  Prédit: '242'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '242' → logprob: -0.4858364164829254
    2. '2' → logprob: -0.985836386680603
    3. '244' → logprob: -5.860836505889893
    4. '289' → logprob: -6.235836505889893
    5. '243' → logprob: -6.360836505889893
    6. '292' → logprob: -6.360836505889893
    7. '000' → logprob: -7.235836505889893
    8. '288' → logprob: -7.610836505889893
    9. '294' → logprob: -7.860836505889893
    10. '24' → logprob: -7.985836505889893

Token 64: '42' (ID: 4689)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009657727787271142
    2. ' )' → logprob: -7.125965595245361
    3. '7' → logprob: -10.37596607208252
    4. '9' → logprob: -10.75096607208252
    5. '4' → logprob: -10.87596607208252
    6. '0' → logprob: -10.87596607208252
    7. '))' → logprob: -11.00096607208252
    8. '6' → logprob: -11.37596607208252
    9. '5' → logprob: -11.75096607208252
    10. '1' → logprob: -11.87596607208252

Token 65: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9160102712921798e-05
    2. ' )' → logprob: -10.500029563903809
    3. '))' → logprob: -14.125029563903809
    4. ')
' → logprob: -15.125029563903809
    5. ')`' → logprob: -16.625028610229492
    6. ')

' → logprob: -17.000028610229492
    7. ');' → logprob: -17.250028610229492
    8. ')}' → logprob: -17.250028610229492
    9. ')
' → logprob: -17.250028610229492
    10. '6' → logprob: -17.500028610229492

Token 66: 'Read' (ID: 4455)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07939158380031586
    2. 'class' → logprob: -3.7043914794921875
    3. '#' → logprob: -3.8293914794921875
    4. '
' → logprob: -4.0793914794921875
    5. 'd' → logprob: -5.9543914794921875
    6. '

' → logprob: -6.4543914794921875
    7. 'n' → logprob: -6.7043914794921875
    8. 'de' → logprob: -7.0793914794921875
    9. ')' → logprob: -7.3293914794921875
    10. '<|end|>' → logprob: -7.3293914794921875

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.045823574066162
    2. 'Line' → logprob: -1.045823574066162
    3. 'line' → logprob: -2.295823574066162
    4. 'Input' → logprob: -3.170823574066162
    5. '=' → logprob: -3.420823574066162
    6. '_' → logprob: -3.670823574066162
    7. '_line' → logprob: -4.045823574066162
    8. 's' → logprob: -4.420823574066162
    9. 'Data' → logprob: -4.545823574066162
    10. 'Lines' → logprob: -4.670823574066162

Token 68: ' lambda' (ID: 27871)
  Prédit: ' Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Input' → logprob: -0.2786034941673279
    2. 'Input' → logprob: -2.2786035537719727
    3. ' lambda' → logprob: -2.4036035537719727
    4. ' System' → logprob: -3.2786035537719727
    5. 'lambda' → logprob: -5.278603553771973
    6. ' flat' → logprob: -5.778603553771973
    7. 'System' → logprob: -6.028603553771973
    8. 'flat' → logprob: -7.653603553771973
    9. ' ' → logprob: -7.778603553771973
    10. ' input' → logprob: -8.278603553771973

Token 69: ':' (ID: 25)
  Prédit: ' System'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' System' → logprob: -0.9394829273223877
    2. ':' → logprob: -1.0644829273223877
    3. ' :' → logprob: -2.5644829273223877
    4. ' sys' → logprob: -3.3144829273223877
    5. 'System' → logprob: -3.5644829273223877
    6. ':System' → logprob: -3.6894829273223877
    7. ' ' → logprob: -3.8144829273223877
    8. ' Input' → logprob: -3.9394829273223877
    9. 'Input' → logprob: -4.314482688903809
    10. ' input' → logprob: -4.314482688903809

Token 70: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.204519510269165
    2. ' map' → logprob: -1.204519510269165
    3. ' int' → logprob: -1.579519510269165
    4. 'int' → logprob: -2.204519510269165
    5. 'map' → logprob: -3.829519510269165
    6. 'list' → logprob: -3.954519510269165
    7. ' System' → logprob: -4.079519271850586
    8. ' Input' → logprob: -4.704519271850586
    9. 'Input' → logprob: -5.204519271850586
    10. 'System' → logprob: -5.454519271850586

Token 71: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.03005269169807434
    2. '(' → logprob: -3.530052661895752
    3. '(int' → logprob: -8.40505313873291
    4. '(input' → logprob: -10.28005313873291
    5. '(System' → logprob: -11.53005313873291
    6. '()' → logprob: -11.65505313873291
    7. '(
' → logprob: -12.15505313873291
    8. '(Map' → logprob: -13.28005313873291
    9. '(Input' → logprob: -13.40505313873291
    10. '(m' → logprob: -13.40505313873291

Token 72: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002456046058796346
    2. '(' → logprob: -8.625246047973633
    3. 'int' → logprob: -9.875246047973633
    4. ',int' → logprob: -12.250246047973633
    5. '<int' → logprob: -12.250246047973633
    6. '(str' → logprob: -13.750246047973633
    7. ' int' → logprob: -13.875246047973633
    8. ')' → logprob: -14.250246047973633
    9. '[int' → logprob: -14.250246047973633
    10. '=int' → logprob: -14.250246047973633

Token 73: ',' (ID: 11)
  Prédit: '(Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Input' → logprob: -0.5900609493255615
    2. '(System' → logprob: -1.0900609493255615
    3. ',' → logprob: -2.7150609493255615
    4. ',System' → logprob: -3.4650609493255615
    5. '(' → logprob: -4.590061187744141
    6. 'Input' → logprob: -6.965061187744141
    7. ' Input' → logprob: -8.71506118774414
    8. 'System' → logprob: -8.84006118774414
    9. '	Input' → logprob: -8.84006118774414
    10. ',input' → logprob: -9.46506118774414

Token 74: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.25213801860809326
    2. ' Input' → logprob: -1.5021380186080933
    3. 'System' → logprob: -9.627138137817383
    4. 'input' → logprob: -10.127138137817383
    5. ' input' → logprob: -10.502138137817383
    6. '	Input' → logprob: -10.502138137817383
    7. ' System' → logprob: -11.127138137817383
    8. '(Input' → logprob: -11.502138137817383
    9. '<Input' → logprob: -12.002138137817383
    10. '_Input' → logprob: -12.627138137817383

Token 75: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00038229089113883674
    2. '()' → logprob: -8.250382423400879
    3. '())))' → logprob: -9.500382423400879
    4. '()))' → logprob: -10.125382423400879
    5. '())' → logprob: -13.500382423400879
    6. ' ().' → logprob: -13.500382423400879
    7. '()));' → logprob: -14.000382423400879
    8. ')))' → logprob: -14.000382423400879
    9. '(' → logprob: -14.750382423400879
    10. '()[' → logprob: -16.000381469726562

Token 76: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.12734486162662506
    2. 'split' → logprob: -2.377344846725464
    3. 'rstrip' → logprob: -3.627344846725464
    4. 'read' → logprob: -8.627345085144043
    5. ' strip' → logprob: -12.002345085144043
    6. ' split' → logprob: -14.377345085144043
    7. ')' → logprob: -15.127345085144043
    8. 'rs' → logprob: -15.627345085144043
    9. 'decode' → logprob: -16.252344131469727
    10. ' ' → logprob: -16.252344131469727

Token 77: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.47904905676841736
    2. '))' → logprob: -0.9790490865707397
    3. '()' → logprob: -5.604049205780029
    4. '())' → logprob: -7.104049205780029
    5. ')))' → logprob: -8.729048728942871
    6. '(' → logprob: -9.104048728942871
    7. ')' → logprob: -9.479048728942871
    8. '()))
' → logprob: -10.104048728942871
    9. '())))' → logprob: -10.229048728942871
    10. '()));' → logprob: -11.479048728942871

Token 78: 'Split' (ID: 26377)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7977120876312256
    2. '
' → logprob: -1.2977120876312256
    3. '(' → logprob: -2.6727120876312256
    4. '\n' → logprob: -2.7977120876312256
    5. '(
' → logprob: -3.5477120876312256
    6. '()' → logprob: -3.7977120876312256
    7. '

' → logprob: -4.297712326049805
    8. '#' → logprob: -4.547712326049805
    9. '\' → logprob: -4.672712326049805
    10. ')' → logprob: -5.172712326049805

Token 79: 'Int' (ID: 2471)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1477874517440796
    2. '=' → logprob: -2.397787570953369
    3. 'lines' → logprob: -3.897787570953369
    4. '()' → logprob: -4.397787570953369
    5. 's' → logprob: -6.147787570953369
    6. 'Lines' → logprob: -6.272787570953369
    7. '(' → logprob: -6.647787570953369
    8. 'ter' → logprob: -6.772787570953369
    9. '_' → logprob: -6.772787570953369
    10. '('' → logprob: -6.897787570953369

Token 80: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4988378584384918
    2. ' =' → logprob: -1.6238378286361694
    3. '=' → logprob: -1.7488378286361694
    4. 'List' → logprob: -5.248837947845459
    5. '()' → logprob: -5.748837947845459
    6. 'Array' → logprob: -6.248837947845459
    7. 'eger' → logprob: -6.248837947845459
    8. '[]' → logprob: -6.623837947845459
    9. '32' → logprob: -6.873837947845459
    10. 'S' → logprob: -6.998837947845459

Token 81: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.2918207347393036
    2. 'lambda' → logprob: -1.791820764541626
    3. 'int' → logprob: -2.791820764541626
    4. ' int' → logprob: -4.416820526123047
    5. '(lambda' → logprob: -4.916820526123047
    6. '[int' → logprob: -6.666820526123047
    7. '(int' → logprob: -6.791820526123047
    8. 'map' → logprob: -7.416820526123047
    9. ' map' → logprob: -7.666820526123047
    10. '=lambda' → logprob: -7.791820526123047

Token 82: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7330300807952881
    2. 'int' → logprob: -1.608030080795288
    3. 'Input' → logprob: -2.233030080795288
    4. ' Input' → logprob: -3.108030080795288
    5. 'x' → logprob: -3.608030080795288
    6. ' x' → logprob: -3.733030080795288
    7. ' lambda' → logprob: -3.983030080795288
    8. 'lambda' → logprob: -3.983030080795288
    9. 's' → logprob: -4.233030319213867
    10. ' int' → logprob: -4.733030319213867

Token 83: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8593007326126099
    2. ' int' → logprob: -0.9843007326126099
    3. ' map' → logprob: -1.8593007326126099
    4. ' list' → logprob: -4.10930061340332
    5. 'map' → logprob: -4.23430061340332
    6. '[int' → logprob: -4.73430061340332
    7. 'list' → logprob: -5.35930061340332
    8. ' [' → logprob: -6.98430061340332
    9. '[' → logprob: -7.35930061340332
    10. ' ' → logprob: -8.10930061340332

Token 84: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0005127601907588542
    2. '(' → logprob: -7.625512599945068
    3. '(int' → logprob: -10.750513076782227
    4. '(Map' → logprob: -14.625513076782227
    5. 'map' → logprob: -14.875513076782227
    6. '(
' → logprob: -15.000513076782227
    7. '(Read' → logprob: -15.125513076782227
    8. '(system' → logprob: -15.250513076782227
    9. '()' → logprob: -15.625513076782227
    10. ',map' → logprob: -15.750513076782227

Token 85: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012003510491922498
    2. 'int' → logprob: -6.876200199127197
    3. '(' → logprob: -9.251200675964355
    4. '(str' → logprob: -10.126200675964355
    5. '(lambda' → logprob: -11.251200675964355
    6. ',int' → logprob: -12.751200675964355
    7. '(ord' → logprob: -12.751200675964355
    8. '<int' → logprob: -12.876200675964355
    9. '[int' → logprob: -13.376200675964355
    10. 'str' → logprob: -13.751200675964355

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000871082826051861
    2. '(Input' → logprob: -7.750871181488037
    3. ',input' → logprob: -7.875871181488037
    4. ' ,' → logprob: -10.500870704650879
    5. ',(' → logprob: -11.625870704650879
    6. ',System' → logprob: -11.750870704650879
    7. 'Input' → logprob: -11.875870704650879
    8. ',int' → logprob: -12.375870704650879
    9. '，' → logprob: -13.750870704650879
    10. '(' → logprob: -14.250870704650879

Token 87: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.005880560260266066
    2. 'input' → logprob: -5.255880355834961
    3. ' Input' → logprob: -8.130880355834961
    4. 'str' → logprob: -8.630880355834961
    5. 'sys' → logprob: -10.255880355834961
    6. ')' → logprob: -10.630880355834961
    7. 'list' → logprob: -10.755880355834961
    8. ' input' → logprob: -10.880880355834961
    9. 'lambda' → logprob: -11.380880355834961
    10. 'System' → logprob: -11.630880355834961

Token 88: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003945688367821276
    2. '()' → logprob: -7.875394344329834
    3. '()))' → logprob: -11.625394821166992
    4. '().__' → logprob: -13.000394821166992
    5. '))' → logprob: -14.125394821166992
    6. ' ().' → logprob: -14.375394821166992
    7. '.' → logprob: -14.875394821166992
    8. '(' → logprob: -15.375394821166992
    9. ')' → logprob: -15.375394821166992
    10. '()[' → logprob: -15.375394821166992

Token 89: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.314625690924004e-05
    2. 'strip' → logprob: -9.750073432922363
    3. 'read' → logprob: -11.875073432922363
    4. ' split' → logprob: -12.750073432922363
    5. 'rstrip' → logprob: -12.875073432922363
    6. ')' → logprob: -13.000073432922363
    7. 'spl' → logprob: -15.375073432922363
    8. 'plit' → logprob: -17.125072479248047
    9. '(split' → logprob: -18.125072479248047
    10. '_split' → logprob: -18.250072479248047

Token 90: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2901032865047455
    2. '))' → logprob: -1.5401033163070679
    3. '()' → logprob: -3.2901031970977783
    4. '())' → logprob: -9.0401029586792
    5. '(' → logprob: -10.5401029586792
    6. ')' → logprob: -10.7901029586792
    7. '()))
' → logprob: -10.9151029586792
    8. '()));' → logprob: -11.7901029586792
    9. '()))

' → logprob: -12.4151029586792
    10. '(),' → logprob: -13.7901029586792

Token 91: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47585123777389526
    2. '(' → logprob: -2.10085129737854
    3. '#' → logprob: -2.22585129737854
    4. 'n' → logprob: -2.72585129737854
    5. 'a' → logprob: -4.725851058959961
    6. '\' → logprob: -4.850851058959961
    7. 'D' → logprob: -4.850851058959961
    8. '_' → logprob: -4.850851058959961
    9. 'd' → logprob: -4.975851058959961
    10. '\n' → logprob: -5.100851058959961

Token 92: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6926551461219788
    2. ' =' → logprob: -0.9426551461219788
    3. '=' → logprob: -3.317655086517334
    4. ',' → logprob: -3.442655086517334
    5. '<|end|>' → logprob: -3.442655086517334
    6. '.' → logprob: -5.192655086517334
    7. '  ' → logprob: -6.692655086517334
    8. ')' → logprob: -6.692655086517334
    9. ' ,' → logprob: -7.192655086517334
    10. 'space' → logprob: -8.692655563354492

Token 93: ' Q' (ID: 1486)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.0970771312713623
    2. ' K' → logprob: -1.0970771312713623
    3. '<|end|>' → logprob: -2.0970771312713623
    4. 'M' → logprob: -2.2220771312713623
    5. ' M' → logprob: -2.7220771312713623
    6. ' ' → logprob: -3.4720771312713623
    7. '_' → logprob: -5.722077369689941
    8. 'Q' → logprob: -8.597077369689941
    9. '<|end|>' → logprob: -9.097077369689941
    10. '=' → logprob: -9.659577369689941

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5308184623718262
    2. '=' → logprob: -0.9058184623718262
    3. ',' → logprob: -4.905818462371826
    4. '<|end|>' → logprob: -8.405818939208984
    5. ' ' → logprob: -11.530818939208984
    6. ')' → logprob: -12.155818939208984
    7. '=int' → logprob: -12.530818939208984
    8. '=input' → logprob: -12.905818939208984
    9. ' ,' → logprob: -12.905818939208984
    10. ' =)' → logprob: -13.280818939208984

Token 95: ' Read' (ID: 5405)
  Prédit: ' Read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Read' → logprob: -0.4103768765926361
    2. 'Read' → logprob: -1.2853769063949585
    3. ' Split' → logprob: -3.285376787185669
    4. ' map' → logprob: -4.535377025604248
    5. 'Split' → logprob: -4.785377025604248
    6. ' ' → logprob: -6.535377025604248
    7. 'map' → logprob: -6.535377025604248
    8. '0' → logprob: -8.03537654876709
    9. '	Read' → logprob: -8.91037654876709
    10. 'Map' → logprob: -9.66037654876709

Token 96: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002632138319313526
    2. '(' → logprob: -6.127632141113281
    3. '()
' → logprob: -7.877632141113281
    4. '();' → logprob: -11.252632141113281
    5. ')' → logprob: -11.377632141113281
    6. '()\' → logprob: -11.627632141113281
    7. ' ()' → logprob: -11.752632141113281
    8. ',' → logprob: -12.377632141113281
    9. '()

' → logprob: -12.502632141113281
    10. '(
' → logprob: -12.627632141113281

Token 97: 'Stuff' (ID: 89474)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13460169732570648
    2. '<|end|>' → logprob: -2.509601593017578
    3. '\n' → logprob: -3.884601593017578
    4. '
' → logprob: -4.759601593017578
    5. '' → logprob: -5.759601593017578
    6. 'newline' → logprob: -6.134601593017578
    7. '[' → logprob: -6.384601593017578
    8. '  
' → logprob: -6.509601593017578
    9. ' 
' → logprob: -6.634601593017578
    10. '<|end|>' → logprob: -6.759601593017578

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5524006485939026
    2. '=' → logprob: -1.1774005889892578
    3. 's' → logprob: -2.427400588989258
    4. ',' → logprob: -3.677400588989258
    5. '=[]' → logprob: -6.052400588989258
    6. '[' → logprob: -9.427400588989258
    7. '=[' → logprob: -10.177400588989258
    8. '_' → logprob: -10.302400588989258
    9. '  ' → logprob: -10.427400588989258
    10. ' ' → logprob: -10.552400588989258

Token 99: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5476548671722412
    2. ' []' → logprob: -1.5476548671722412
    3. '[' → logprob: -2.547654867172241
    4. '[]' → logprob: -2.672654867172241
    5. 'Split' → logprob: -3.797654867172241
    6. 'Read' → logprob: -4.17265510559082
    7. ' Split' → logprob: -4.67265510559082
    8. ' [[]' → logprob: -5.17265510559082
    9. ' Read' → logprob: -5.92265510559082
    10. ' list' → logprob: -6.79765510559082

Token 100: 'Split' (ID: 26377)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4276594817638397
    2. '[]' → logprob: -2.052659511566162
    3. 'tuple' → logprob: -2.552659511566162
    4. '()]' → logprob: -2.802659511566162
    5. ']' → logprob: -3.427659511566162
    6. 'Read' → logprob: -3.927659511566162
    7. 'int' → logprob: -4.177659511566162
    8. '()' → logprob: -5.427659511566162
    9. 'list' → logprob: -6.427659511566162
    10. '(' → logprob: -6.552659511566162

Token 101: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -8.339776832144707e-05
    2. 'int' → logprob: -9.500082969665527
    3. 'Ints' → logprob: -12.250082969665527
    4. '()' → logprob: -13.875082969665527
    5. '(int' → logprob: -14.750082969665527
    6. ' Int' → logprob: -14.875082969665527
    7. '(Int' → logprob: -14.875082969665527
    8. '```' → logprob: -15.625082969665527
    9. '())' → logprob: -15.750082969665527
    10. ')' → logprob: -15.875082969665527

Token 102: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06209462508559227
    2. '()]' → logprob: -2.8120946884155273
    3. '())' → logprob: -9.312094688415527
    4. ' ()' → logprob: -11.687094688415527
    5. '()`' → logprob: -12.187094688415527
    6. '()]
' → logprob: -12.312094688415527
    7. '()[' → logprob: -12.812094688415527
    8. '()
' → logprob: -12.812094688415527
    9. '（）' → logprob: -12.937094688415527
    10. ']()' → logprob: -13.187094688415527

Token 103: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00042054426739923656
    2. 'for' → logprob: -8.500420570373535
    3. '()]' → logprob: -8.875420570373535
    4. '()[' → logprob: -10.125420570373535
    5. ' ()' → logprob: -11.125420570373535
    6. ' for' → logprob: -11.125420570373535
    7. ']' → logprob: -13.250420570373535
    8. '(' → logprob: -13.750420570373535
    9. ')' → logprob: -14.250420570373535
    10. '();' → logprob: -14.250420570373535

Token 104: ' meh' (ID: 94184)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002477796748280525
    2. ' range' → logprob: -6.627477645874023
    3. 'range' → logprob: -7.502477645874023
    4. ' _' → logprob: -7.502477645874023
    5. ' in' → logprob: -10.627477645874023
    6. '_range' → logprob: -10.877477645874023
    7. '(range' → logprob: -13.502477645874023
    8. 'in' → logprob: -13.627477645874023
    9. 'i' → logprob: -14.877477645874023
    10. '__' → logprob: -15.002477645874023

Token 105: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25741317868232727
    2. ' in' → logprob: -1.5074131488800049
    3. 'range' → logprob: -5.382413387298584
    4. '(range' → logprob: -8.132412910461426
    5. ' ' → logprob: -8.257412910461426
    6. ' range' → logprob: -8.757412910461426
    7. '_' → logprob: -9.382412910461426
    8. 'ange' → logprob: -10.757412910461426
    9. '()' → logprob: -11.507412910461426
    10. '  ' → logprob: -11.632412910461426

Token 106: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067170290276408195
    2. ' range' → logprob: -5.006717205047607
    3. '	range' → logprob: -14.38171672821045
    4. '_' → logprob: -14.63171672821045
    5. 'rang' → logprob: -15.50671672821045
    6. '(range' → logprob: -16.006717681884766
    7. ' ' → logprob: -16.006717681884766
    8. '   ' → logprob: -16.881717681884766
    9. 'ran' → logprob: -17.256717681884766
    10. '[' → logprob: -17.256717681884766

Token 107: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -6.659005157416686e-05
    2. '(' → logprob: -9.625066757202148
    3. '(Q' → logprob: -15.875066757202148
    4. ' (' → logprob: -15.875066757202148
    5. '(n' → logprob: -15.875066757202148
    6. 'N' → logprob: -16.62506675720215
    7. '(
' → logprob: -16.62506675720215
    8. '(int' → logprob: -18.37506675720215
    9. '((' → logprob: -18.75006675720215
    10. '(M' → logprob: -20.25006675720215

Token 108: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00016635251813568175
    2. ')' → logprob: -8.750165939331055
    3. ']' → logprob: -11.875165939331055
    4. ')],' → logprob: -14.875165939331055
    5. ' )' → logprob: -15.500165939331055
    6. ')]
' → logprob: -16.625165939331055
    7. ')])' → logprob: -16.625165939331055
    8. ')][' → logprob: -17.000165939331055
    9. ')].' → logprob: -17.125165939331055
    10. '')]' → logprob: -17.625165939331055

Token 109: 'Days' (ID: 24680)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6668723821640015
    2. '
' → logprob: -1.6668723821640015
    3. '<|end|>' → logprob: -2.166872501373291
    4. 'for' → logprob: -2.666872501373291
    5. '.' → logprob: -2.666872501373291
    6. '?' → logprob: -2.791872501373291
    7. 'Q' → logprob: -3.166872501373291
    8. '[' → logprob: -3.291872501373291
    9. ' 
' → logprob: -3.291872501373291
    10. ')' → logprob: -3.416872501373291

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13051500916481018
    2. ',' → logprob: -2.6305150985717773
    3. '=' → logprob: -3.0055150985717773
    4. ' ,' → logprob: -8.005515098571777
    5. '=[]' → logprob: -8.755515098571777
    6. '_' → logprob: -9.630515098571777
    7. 's' → logprob: -9.755515098571777
    8. '<|end|>' → logprob: -10.880515098571777
    9. '[' → logprob: -11.255515098571777
    10. ' ' → logprob: -11.505515098571777

Token 111: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6985679268836975
    2. '[' → logprob: -1.4485678672790527
    3. ' [' → logprob: -1.6985678672790527
    4. ' []' → logprob: -2.5735678672790527
    5. 'Split' → logprob: -6.448567867279053
    6. '[len' → logprob: -6.448567867279053
    7. ' [[]' → logprob: -6.698567867279053
    8. '[max' → logprob: -7.073567867279053
    9. '[int' → logprob: -7.073567867279053
    10. '{}' → logprob: -7.073567867279053

Token 112: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09770893305540085
    2. '[]' → logprob: -3.2227089405059814
    3. 'Split' → logprob: -3.4727089405059814
    4. 'int' → logprob: -5.097708702087402
    5. 'Read' → logprob: -5.847708702087402
    6. 'False' → logprob: -5.972708702087402
    7. ']' → logprob: -6.097708702087402
    8. '[' → logprob: -6.597708702087402
    9. 'Stuff' → logprob: -6.972708702087402
    10. '-' → logprob: -7.097708702087402

Token 113: '(Input' (ID: 52522)
  Prédit: '(Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Input' → logprob: -0.18143951892852783
    2. '(' → logprob: -1.8064395189285278
    3. '(x' → logprob: -6.806439399719238
    4. '()' → logprob: -8.556439399719238
    5. '(
' → logprob: -9.556439399719238
    6. '(

' → logprob: -9.556439399719238
    7. '()]' → logprob: -9.681439399719238
    8. '(System' → logprob: -10.181439399719238
    9. '(i' → logprob: -10.556439399719238
    10. '(`' → logprob: -10.806439399719238

Token 114: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.051899880170822144
    2. '().' → logprob: -3.3018999099731445
    3. '()' → logprob: -4.3018999099731445
    4. '()
' → logprob: -9.301899909973145
    5. '()]' → logprob: -9.551899909973145
    6. '())
' → logprob: -10.426899909973145
    7. ')' → logprob: -11.301899909973145
    8. ' ())' → logprob: -12.301899909973145
    9. '()),' → logprob: -13.676899909973145
    10. '())

' → logprob: -13.801899909973145

Token 115: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.022069238126277924
    2. '())' → logprob: -4.397069454193115
    3. '().' → logprob: -4.772069454193115
    4. '()]' → logprob: -7.147069454193115
    5. ')' → logprob: -8.522068977355957
    6. ' ()' → logprob: -11.147068977355957
    7. '(' → logprob: -11.397068977355957
    8. '.strip' → logprob: -11.647068977355957
    9. '()
' → logprob: -11.647068977355957
    10. '()[' → logprob: -11.897068977355957

Token 116: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47598856687545776
    2. ' _' → logprob: -1.1009886264801025
    3. ' range' → logprob: -3.1009886264801025
    4. 'range' → logprob: -6.975988388061523
    5. ' ' → logprob: -8.975988388061523
    6. ' in' → logprob: -9.600988388061523
    7. '_range' → logprob: -10.850988388061523
    8. ' ' → logprob: -11.725988388061523
    9. '_me' → logprob: -12.475988388061523
    10. '  ' → logprob: -12.725988388061523

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07109247148036957
    2. 'in' → logprob: -2.946092367172241
    3. 'range' → logprob: -4.44609260559082
    4. ' range' → logprob: -5.44609260559082
    5. ' ' → logprob: -10.19609260559082
    6. 'Q' → logprob: -13.94609260559082
    7. '  ' → logprob: -14.57109260559082
    8. '	in' → logprob: -14.57109260559082
    9. 'Range' → logprob: -14.94609260559082
    10. '	range' → logprob: -15.07109260559082

Token 118: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01105206273496151
    2. ' range' → logprob: -4.511052131652832
    3. ' ' → logprob: -14.386052131652832
    4. '(range' → logprob: -14.386052131652832
    5. '	range' → logprob: -14.636052131652832
    6. '[' → logprob: -14.761052131652832
    7. 'ran' → logprob: -14.761052131652832
    8. 'r' → logprob: -15.011052131652832
    9. 'Q' → logprob: -15.261052131652832
    10. '   ' → logprob: -15.386052131652832

Token 119: '42' (ID: 4689)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24359296262264252
    2. 'range' → logprob: -1.6185929775238037
    3. 'None' → logprob: -4.118592739105225
    4. ' range' → logprob: -7.493592739105225
    5. '...' → logprob: -7.743592739105225
    6. '_' → logprob: -7.743592739105225
    7. '-' → logprob: -8.743593215942383
    8. ' ' → logprob: -10.118593215942383
    9. '1' → logprob: -10.618593215942383
    10. '   ' → logprob: -11.118593215942383

Token 120: ']*' (ID: 18579)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.3787887990474701
    2. '...' → logprob: -2.253788709640503
    3. '_' → logprob: -2.378788709640503
    4. ']' → logprob: -2.628788709640503
    5. ']*' → logprob: -4.628788948059082
    6. 'range' → logprob: -5.003788948059082
    7. '..' → logprob: -5.378788948059082
    8. '0' → logprob: -5.753788948059082
    9. ':' → logprob: -5.878788948059082
    10. '_]' → logprob: -5.878788948059082

Token 121: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0001499060745118186
    2. '(Q' → logprob: -9.000149726867676
    3. ' Q' → logprob: -10.625149726867676
    4. '	Q' → logprob: -13.750149726867676
    5. '(' → logprob: -14.000149726867676
    6. '   ' → logprob: -17.250150680541992
    7. ',Q' → logprob: -17.375150680541992
    8. '<Q' → logprob: -17.375150680541992
    9. ' ' → logprob: -17.750150680541992
    10. ' (' → logprob: -17.875150680541992

Token 122: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004462812503334135
    2. ')]' → logprob: -7.750446319580078
    3. '()]' → logprob: -11.750446319580078
    4. '`]' → logprob: -12.875446319580078
    5. ')' → logprob: -13.375446319580078
    6. ' ]' → logprob: -13.500446319580078
    7. ']
' → logprob: -13.625446319580078
    8. ']

' → logprob: -15.250446319580078
    9. '']' → logprob: -15.750446319580078
    10. '}]' → logprob: -16.250446319580078

Token 123: 'MY' (ID: 34194)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0064325639978051186
    2. '#' → logprob: -6.75643253326416
    3. 'for' → logprob: -6.88143253326416
    4. '\n' → logprob: -7.00643253326416
    5. '<|end|>' → logprob: -7.13143253326416
    6. '
' → logprob: -7.75643253326416
    7. ')' → logprob: -7.88143253326416
    8. ']' → logprob: -8.13143253326416
    9. '.' → logprob: -8.63143253326416
    10. '[' → logprob: -8.88143253326416

Token 124: '_INFINITY' (ID: 188542)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.816407322883606
    2. '_' → logprob: -1.941407322883606
    3. '_st' → logprob: -2.8164072036743164
    4. '_ST' → logprob: -2.9414072036743164
    5. 'Stuff' → logprob: -2.9414072036743164
    6. '_heap' → logprob: -3.4414072036743164
    7. '_list' → logprob: -3.5664072036743164
    8. 'St' → logprob: -3.6914072036743164
    9. 'Stack' → logprob: -3.8164072036743164
    10. '_stack' → logprob: -3.8164072036743164

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023270288482308388
    2. '=' → logprob: -3.77327036857605
    3. '_' → logprob: -11.148270606994629
    4. ' ' → logprob: -12.523270606994629
    5. ',' → logprob: -12.773270606994629
    6. '  ' → logprob: -14.023270606994629
    7. '=int' → logprob: -14.273270606994629
    8. ':' → logprob: -14.898270606994629
    9. ' =)' → logprob: -15.898270606994629
    10. 'INF' → logprob: -16.023269653320312

Token 126: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1392197608947754
    2. ' ' → logprob: -2.7642197608947754
    3. 'float' → logprob: -3.3892197608947754
    4. '424' → logprob: -3.8892197608947754
    5. '100' → logprob: -5.139219760894775
    6. ' float' → logprob: -6.139219760894775
    7. '999' → logprob: -6.764219760894775
    8. 'int' → logprob: -7.139219760894775
    9. '1' → logprob: -7.389219760894775
    10. '42' → logprob: -7.514219760894775

Token 127: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0011128316400572658
    2. ''in' → logprob: -7.626112937927246
    3. '("' → logprob: -8.126112937927246
    4. '(' → logprob: -9.001112937927246
    5. ''' → logprob: -10.001112937927246
    6. '<|end|>' → logprob: -10.251112937927246
    7. '('+' → logprob: -10.376112937927246
    8. 'inf' → logprob: -10.751112937927246
    9. '"' → logprob: -11.626112937927246
    10. '('_' → logprob: -11.751112937927246

Token 128: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0035337794106453657
    2. ''in' → logprob: -5.753533840179443
    3. ''' → logprob: -8.503533363342285
    4. '"' → logprob: -9.003533363342285
    5. 'in' → logprob: -11.753533363342285
    6. '-inf' → logprob: -11.753533363342285
    7. '"in' → logprob: -12.753533363342285
    8. 'INF' → logprob: -12.753533363342285
    9. ' inf' → logprob: -13.003533363342285
    10. 'info' → logprob: -13.753533363342285

Token 129: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011084727942943573
    2. '')' → logprob: -4.51108455657959
    3. ')
' → logprob: -11.13608455657959
    4. ' )' → logprob: -11.51108455657959
    5. ')'' → logprob: -13.01108455657959
    6. '()' → logprob: -13.13608455657959
    7. '")' → logprob: -13.51108455657959
    8. '())' → logprob: -13.76108455657959
    9. '')
' → logprob: -14.01108455657959
    10. ');' → logprob: -14.51108455657959

Token 130: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.037153761833906174
    2. '<|end|>' → logprob: -4.162153720855713
    3. '#' → logprob: -4.912153720855713
    4. ')' → logprob: -6.037153720855713
    5. '\n' → logprob: -6.287153720855713
    6. '
' → logprob: -7.162153720855713
    7. '' → logprob: -7.287153720855713
    8. 'max' → logprob: -7.412153720855713
    9. 'for' → logprob: -7.412153720855713
    10. '

' → logprob: -7.412153720855713

Token 131: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23964576423168182
    2. '2' → logprob: -2.3646457195281982
    3. '1' → logprob: -2.7396457195281982
    4. '10' → logprob: -3.8646457195281982
    5. '100' → logprob: -3.9896457195281982
    6. '0' → logprob: -4.739645957946777
    7. ' -' → logprob: -6.239645957946777
    8. '-' → logprob: -7.114645957946777
    9. ' float' → logprob: -7.864645957946777
    10. '42' → logprob: -7.864645957946777

Token 132: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8593312501907349
    2. '1' → logprob: -1.7343312501907349
    3. '-' → logprob: -1.8593312501907349
    4. '100' → logprob: -2.4843311309814453
    5. '10' → logprob: -2.4843311309814453
    6. '0' → logprob: -3.2343311309814453
    7. '42' → logprob: -4.109331130981445
    8. '3' → logprob: -5.109331130981445
    9. '(' → logprob: -5.984331130981445
    10. 'float' → logprob: -6.109331130981445

Token 133: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38639137148857117
    2. '
' → logprob: -1.8863914012908936
    3. ')' → logprob: -3.5113914012908936
    4. '0' → logprob: -3.6363914012908936
    5. '+' → logprob: -3.7613914012908936
    6. '<|end|>' → logprob: -4.2613911628723145
    7. '#' → logprob: -4.5113911628723145
    8. '1' → logprob: -4.6363911628723145
    9. 'x' → logprob: -4.7613911628723145
    10. '.
' → logprob: -5.2613911628723145

Token 134: '9' (ID: 24)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.3439789116382599
    2. '0' → logprob: -1.5939788818359375
    3. '1' → logprob: -2.4689788818359375
    4. '25' → logprob: -7.5939788818359375
    5. '<|end|>' → logprob: -7.5939788818359375
    6. '01' → logprob: -8.218978881835938
    7. '000' → logprob: -8.343978881835938
    8. '001' → logprob: -8.593978881835938
    9. '05' → logprob: -8.968978881835938
    10. '+' → logprob: -8.968978881835938

Token 135: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1558845341205597
    2. '#' → logprob: -2.9058845043182373
    3. '<|end|>' → logprob: -4.030884742736816
    4. ')' → logprob: -4.155884742736816
    5. 'def' → logprob: -4.530884742736816
    6. 'for' → logprob: -4.530884742736816
    7. '\n' → logprob: -4.780884742736816
    8. '' → logprob: -5.280884742736816
    9. '

' → logprob: -5.530884742736816
    10. 'max' → logprob: -6.530884742736816

Token 136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4712452292442322
    2. '0' → logprob: -1.471245288848877
    3. ' ' → logprob: -2.471245288848877
    4. 'float' → logprob: -3.596245288848877
    5. '42' → logprob: -4.346245288848877
    6. '100' → logprob: -5.471245288848877
    7. ' float' → logprob: -5.596245288848877
    8. '2' → logprob: -6.096245288848877
    9. '10' → logprob: -6.221245288848877
    10. '123' → logprob: -6.721245288848877

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3114077150821686
    2. '0' → logprob: -1.6864076852798462
    3. '42' → logprob: -3.6864078044891357
    4. 'float' → logprob: -3.6864078044891357
    5. '7' → logprob: -4.936407566070557
    6. '100' → logprob: -5.061407566070557
    7. '2' → logprob: -5.686407566070557
    8. '10' → logprob: -5.936407566070557
    9. ' ' → logprob: -6.311407566070557
    10. '3' → logprob: -6.436407566070557

Token 138: 'e' (ID: 68)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05797266587615013
    2. '0' → logprob: -3.4329726696014404
    3. '

' → logprob: -5.182972431182861
    4. '
' → logprob: -5.557972431182861
    5. '.' → logprob: -6.182972431182861
    6. '#' → logprob: -6.432972431182861
    7. 'def' → logprob: -6.807972431182861
    8. '  
' → logprob: -6.807972431182861
    9. '' → logprob: -6.932972431182861
    10. 'e' → logprob: -6.932972431182861

Token 139: '8' (ID: 23)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10870836675167084
    2. '9' → logprob: -3.858708381652832
    3. '8' → logprob: -4.108708381652832
    4. '10' → logprob: -4.483708381652832
    5. '7' → logprob: -4.858708381652832
    6. '100' → logprob: -5.108708381652832
    7. '12' → logprob: -5.233708381652832
    8. '6' → logprob: -5.483708381652832
    9. '15' → logprob: -5.608708381652832
    10. '18' → logprob: -5.733708381652832

Token 140: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10845040529966354
    2. '#' → logprob: -3.108450412750244
    3. '+' → logprob: -4.483450412750244
    4. '' → logprob: -4.983450412750244
    5. '*' → logprob: -5.233450412750244
    6. ' 
' → logprob: -5.233450412750244
    7. '0' → logprob: -5.358450412750244
    8. '<|end|>' → logprob: -5.358450412750244
    9. ')' → logprob: -5.733450412750244
    10. '.' → logprob: -5.983450412750244

Token 141: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029776642099022865
    2. '<|end|>' → logprob: -5.279776573181152
    3. '#' → logprob: -5.529776573181152
    4. ')' → logprob: -5.654776573181152
    5. '0' → logprob: -5.779776573181152
    6. '+' → logprob: -6.279776573181152
    7. '' → logprob: -6.404776573181152
    8. ' 
' → logprob: -6.404776573181152
    9. '\n' → logprob: -6.779776573181152
    10. '*' → logprob: -6.779776573181152

Token 142: ' just' (ID: 1327)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2771320343017578
    2. '
' → logprob: -2.402132034301758
    3. '#' → logprob: -2.777132034301758
    4. ' ' → logprob: -3.027132034301758
    5. '1' → logprob: -4.527132034301758
    6. '<|end|>' → logprob: -5.402132034301758
    7. '.' → logprob: -5.527132034301758
    8. ' 
' → logprob: -5.527132034301758
    9. '  
' → logprob: -5.902132034301758
    10. ' #' → logprob: -6.152132034301758

Token 143: ' having' (ID: 4566)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7755377292633057
    2. ' to' → logprob: -1.2755377292633057
    3. 'to' → logprob: -3.0255377292633057
    4. '#' → logprob: -3.2755377292633057
    5. '.' → logprob: -3.4005377292633057
    6. '+' → logprob: -3.5255377292633057
    7. ' a' → logprob: -4.400537490844727
    8. ' for' → logprob: -4.525537490844727
    9. '-' → logprob: -4.650537490844727
    10. ' ' → logprob: -4.650537490844727

Token 144: ' fun' (ID: 2827)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'some' → logprob: -0.6598544120788574
    2. 'a' → logprob: -0.9098544120788574
    3. 'en' → logprob: -3.7848544120788574
    4. 'something' → logprob: -4.034854412078857
    5. 'fun' → logprob: -4.284854412078857
    6. 'an' → logprob: -5.409854412078857
    7. 'the' → logprob: -5.534854412078857
    8. 'float' → logprob: -6.034854412078857
    9. 'safe' → logprob: -6.034854412078857
    10. '0' → logprob: -6.034854412078857

Token 145: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0082107782363892
    2. '#' → logprob: -2.0082106590270996
    3. 'max' → logprob: -2.1332106590270996
    4. 'for' → logprob: -2.6332106590270996
    5. 'result' → logprob: -2.8832106590270996
    6. ')' → logprob: -3.6332106590270996
    7. '+' → logprob: -4.0082106590271
    8. 'def' → logprob: -4.1332106590271
    9. '=' → logprob: -4.3832106590271
    10. '*' → logprob: -4.3832106590271

Token 146: 'def' (ID: 1314)
  Prédit: 'answers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answers' → logprob: -1.2083176374435425
    2. 'answer' → logprob: -2.208317756652832
    3. 'result' → logprob: -2.583317756652832
    4. 'results' → logprob: -2.708317756652832
    5. 'Answers' → logprob: -3.083317756652832
    6. 'ans' → logprob: -3.208317756652832
    7. 'def' → logprob: -3.333317756652832
    8. 'max' → logprob: -3.458317756652832
    9. 'for' → logprob: -3.458317756652832
    10. 'res' → logprob: -3.583317756652832

Token 147: ' make' (ID: 1520)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.6476536989212036
    2. ' main' → logprob: -1.5226536989212036
    3. ' find' → logprob: -2.647653579711914
    4. ' process' → logprob: -3.147653579711914
    5. ' get' → logprob: -3.272653579711914
    6. 'solve' → logprob: -3.772653579711914
    7. ' calculate' → logprob: -4.772653579711914
    8. ' best' → logprob: -4.772653579711914
    9. ' query' → logprob: -5.272653579711914
    10. ' binary' → logprob: -5.960153579711914

Token 148: '_inter' (ID: 16818)
  Prédit: '_heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.4109058976173401
    2. '_' → logprob: -2.1609058380126953
    3. '_st' → logprob: -2.9109058380126953
    4. '_sorted' → logprob: -3.4109058380126953
    5. '_stack' → logprob: -3.9109058380126953
    6. '_set' → logprob: -4.410905838012695
    7. '_list' → logprob: -4.785905838012695
    8. '_queue' → logprob: -5.285905838012695
    9. '_days' → logprob: -5.660905838012695
    10. '_priority' → logprob: -5.660905838012695

Token 149: 'vals' (ID: 44567)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.04550192132592201
    2. 'vals' → logprob: -3.170501947402954
    3. 'section' → logprob: -7.545501708984375
    4. 'sect' → logprob: -8.170501708984375
    5. '```' → logprob: -8.295501708984375
    6. '(val' → logprob: -9.108001708984375
    7. 'polate' → logprob: -9.170501708984375
    8. 'pol' → logprob: -9.483001708984375
    9. 'pret' → logprob: -9.733001708984375
    10. 'valo' → logprob: -9.795501708984375

Token 150: '(x' (ID: 4061)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2555822730064392
    2. '(' → logprob: -1.505582332611084
    3. ' ():' → logprob: -7.255582332611084
    4. '(start' → logprob: -8.130581855773926
    5. '(s' → logprob: -8.255581855773926
    6. '(lst' → logprob: -8.380581855773926
    7. '(:' → logprob: -8.505581855773926
    8. '(Start' → logprob: -8.505581855773926
    9. '(S' → logprob: -9.005581855773926
    10. ' (' → logprob: -9.380581855773926

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1031683012843132
    2. ',' → logprob: -2.353168249130249
    3. ':' → logprob: -7.103168487548828
    4. ')' → logprob: -7.103168487548828
    5. ' ):' → logprob: -7.478168487548828
    6. '_' → logprob: -8.478168487548828
    7. ' ,' → logprob: -9.603168487548828
    8. 's' → logprob: -9.728168487548828
    9. '_,' → logprob: -9.978168487548828
    10. '=' → logprob: -10.228168487548828

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44092467427253723
    2. ':' → logprob: -1.0659246444702148
    3. ':
' → logprob: -6.190924644470215
    4. '():' → logprob: -6.315924644470215
    5. ':return' → logprob: -6.815924644470215
    6. '    ' → logprob: -6.815924644470215
    7. '[' → logprob: -6.940924644470215
    8. ' :' → logprob: -7.065924644470215
    9. '    
' → logprob: -7.065924644470215
    10. ',' → logprob: -7.815924644470215

Token 153: ' s' (ID: 265)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.6729102730751038
    2. ' res' → logprob: -2.047910213470459
    3. '   ' → logprob: -2.297910213470459
    4. ' if' → logprob: -3.172910213470459
    5. ' return' → logprob: -3.297910213470459
    6. 'interval' → logprob: -3.922910213470459
    7. ' l' → logprob: -4.047910213470459
    8. ' x' → logprob: -4.422910213470459
    9. ' result' → logprob: -4.547910213470459
    10. ' ans' → logprob: -4.672910213470459

Token 154: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.349942147731781
    2. 't' → logprob: -1.4749422073364258
    3. ',' → logprob: -3.724942207336426
    4. 'et' → logprob: -4.474942207336426
    5. '=' → logprob: -4.974942207336426
    6. ' ' → logprob: -5.349942207336426
    7. 'um' → logprob: -5.349942207336426
    8. 'tar' → logprob: -5.599942207336426
    9. '   ' → logprob: -6.349942207336426
    10. 'plits' → logprob: -6.599942207336426

Token 155: ' t' (ID: 260)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.029159827157855034
    2. 't' → logprob: -4.404160022735596
    3. ' e' → logprob: -5.154160022735596
    4. 'l' → logprob: -5.779160022735596
    5. '_' → logprob: -6.404160022735596
    6. 'd' → logprob: -6.779160022735596
    7. 'f' → logprob: -7.279160022735596
    8. 'x' → logprob: -7.404160022735596
    9. '_=' → logprob: -7.779160022735596
    10. '_,' → logprob: -8.154159545898438

Token 156: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46458494663238525
    2. ',' → logprob: -1.4645849466323853
    3. ' =' → logprob: -1.9645849466323853
    4. '=int' → logprob: -10.214585304260254
    5. ' ,' → logprob: -10.339585304260254
    6. ')' → logprob: -10.464585304260254
    7. ',x' → logprob: -10.714585304260254
    8. ',int' → logprob: -11.714585304260254
    9. ',y' → logprob: -11.839585304260254
    10. '   ' → logprob: -11.839585304260254

Token 157: ' dx' (ID: 29472)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9732063412666321
    2. 'c' → logprob: -1.9732062816619873
    3. 'y' → logprob: -1.9732062816619873
    4. 'd' → logprob: -2.3482062816619873
    5. ' v' → logprob: -2.9732062816619873
    6. 'a' → logprob: -3.5982062816619873
    7. ' y' → logprob: -3.5982062816619873
    8. 'k' → logprob: -3.8482062816619873
    9. ' c' → logprob: -4.098206520080566
    10. 'w' → logprob: -4.223206520080566

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15358322858810425
    2. ' =' → logprob: -2.028583288192749
    3. ',' → logprob: -4.52858304977417
    4. ')' → logprob: -11.028583526611328
    5. ')=' → logprob: -11.528583526611328
    6. 'a' → logprob: -12.278583526611328
    7. ',y' → logprob: -12.778583526611328
    8. ' ' → logprob: -12.903583526611328
    9. '   ' → logprob: -13.278583526611328
    10. 't' → logprob: -13.653583526611328

Token 159: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.26423782110214233
    2. ' x' → logprob: -1.764237880706787
    3. 'Stuff' → logprob: -3.014237880706787
    4. ' Stuff' → logprob: -4.514237880706787
    5. '0' → logprob: -7.764237880706787
    6. ' ' → logprob: -9.139237403869629
    7. '(x' → logprob: -9.889237403869629
    8. ' stuff' → logprob: -9.889237403869629
    9. 'stuff' → logprob: -9.889237403869629
    10. ' map' → logprob: -10.264237403869629

Token 160: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16592763364315033
    2. '[' → logprob: -2.2909276485443115
    3. '=' → logprob: -4.040927410125732
    4. ' =' → logprob: -4.665927410125732
    5. ':' → logprob: -4.915927410125732
    6. '.split' → logprob: -5.540927410125732
    7. '<|end|>' → logprob: -5.665927410125732
    8. '.' → logprob: -6.290927410125732
    9. ';' → logprob: -6.540927410125732
    10. 's' → logprob: -6.665927410125732

Token 161: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3216083347797394
    2. '   ' → logprob: -1.696608304977417
    3. ':' → logprob: -2.946608304977417
    4. ':
' → logprob: -4.696608543395996
    5. '    
' → logprob: -5.071608543395996
    6. ',' → logprob: -5.196608543395996
    7. '<|end|>' → logprob: -5.321608543395996
    8. '  
' → logprob: -6.071608543395996
    9. ',
' → logprob: -6.321608543395996
    10. ':return' → logprob: -6.446608543395996

Token 162: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7733818888664246
    2. 'return' (adapté à ' return') → logprob: -1.6483819484710693
    3. ' return' → logprob: -2.1483819484710693
    4. ' if' → logprob: -2.8983819484710693
    5. 'if' → logprob: -3.2733819484710693
    6. 'l' → logprob: -3.6483819484710693
    7. ' l' → logprob: -4.39838171005249
    8. 'start' → logprob: -4.52338171005249
    9. ' intervals' → logprob: -4.77338171005249
    10. 'i' → logprob: -4.89838171005249

Token 163: ' (' (ID: 350)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.2647210657596588
    2. '(s' → logprob: -2.389721155166626
    3. '[s' → logprob: -2.514721155166626
    4. ' [(' → logprob: -3.764721155166626
    5. ' (' → logprob: -4.139720916748047
    6. '[' → logprob: -5.514720916748047
    7. 's' → logprob: -5.514720916748047
    8. '(t' → logprob: -5.764720916748047
    9. '[t' → logprob: -6.139720916748047
    10. '[[' → logprob: -6.389720916748047

Token 164: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09999386966228485
    2. '(s' → logprob: -2.474993944168091
    3. ' s' → logprob: -4.974993705749512
    4. ' (' → logprob: -6.474993705749512
    5. 'max' → logprob: -7.224993705749512
    6. '(' → logprob: -7.974993705749512
    7. '(max' → logprob: -8.099993705749512
    8. '[s' → logprob: -8.599993705749512
    9. ')' → logprob: -8.724993705749512
    10. '(t' → logprob: -8.849993705749512

Token 165: '-d' (ID: 2469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0537482313811779
    2. '-' → logprob: -3.30374813079834
    3. ' -' → logprob: -4.42874813079834
    4. ' ,' → logprob: -6.92874813079834
    5. '*' → logprob: -7.05374813079834
    6. '+' → logprob: -7.17874813079834
    7. ',t' → logprob: -7.55374813079834
    8. ' +' → logprob: -8.92874813079834
    9. ' *' → logprob: -9.42874813079834
    10. '+t' → logprob: -10.17874813079834

Token 166: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000874539720825851
    2. '1' → logprob: -7.2508745193481445
    3. ',' → logprob: -9.750874519348145
    4. 'ay' → logprob: -10.250874519348145
    5. 'f' → logprob: -11.625874519348145
    6. 't' → logprob: -11.750874519348145
    7. ')' → logprob: -11.875874519348145
    8. ' x' → logprob: -12.375874519348145
    9. ' ' → logprob: -12.500874519348145
    10. 'elta' → logprob: -12.625874519348145

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05128556862473488
    2. ' ,' → logprob: -3.0512855052948
    3. '),' → logprob: -6.926285743713379
    4. '+' → logprob: -7.676285743713379
    5. '-' → logprob: -8.176285743713379
    6. ' -' → logprob: -8.426285743713379
    7. ',t' → logprob: -8.551285743713379
    8. ' +' → logprob: -8.676285743713379
    9. ' ),' → logprob: -9.301285743713379
    10. ',
' → logprob: -9.801285743713379

Token 168: ' ' (ID: 220)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.31150364875793457
    2. 's' → logprob: -1.5615036487579346
    3. ' t' → logprob: -3.0615036487579346
    4. ' s' → logprob: -4.5615034103393555
    5. ' ' → logprob: -9.311503410339355
    6. ')' → logprob: -9.624003410339355
    7. 'x' → logprob: -9.936503410339355
    8. ',' → logprob: -10.186503410339355
    9. '   ' → logprob: -10.186503410339355
    10. '
' → logprob: -10.311503410339355

Token 169: '1' (ID: 16)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2828090488910675
    2. 's' → logprob: -1.4078090190887451
    3. ' t' → logprob: -7.032809257507324
    4. ' s' → logprob: -8.657809257507324
    5. 'x' → logprob: -8.907809257507324
    6. '

' → logprob: -9.782809257507324
    7. '0' → logprob: -10.032809257507324
    8. '(t' → logprob: -10.157809257507324
    9. ')' → logprob: -10.407809257507324
    10. '
' → logprob: -10.470309257507324

Token 170: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5427694320678711
    2. ',' → logprob: -0.9177694320678711
    3. '),' → logprob: -4.042769432067871
    4. '),(' → logprob: -7.667769432067871
    5. ' ,' → logprob: -7.792769432067871
    6. ' )' → logprob: -7.792769432067871
    7. '-' → logprob: -8.417769432067871
    8. '0' → logprob: -9.792769432067871
    9. ' ),' → logprob: -9.792769432067871
    10. ',s' → logprob: -9.792769432067871

Token 171: ' dx' (ID: 29472)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6501951813697815
    2. 's' → logprob: -0.9001951813697815
    3. ' t' → logprob: -3.2751951217651367
    4. ' s' → logprob: -3.5251951217651367
    5. 'dx' → logprob: -7.025195121765137
    6. '(s' → logprob: -7.400195121765137
    7. ' (' → logprob: -7.525195121765137
    8. 'x' → logprob: -7.650195121765137
    9. '(t' → logprob: -8.275195121765137
    10. ' dx' → logprob: -8.650195121765137

Token 172: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018176245503127575
    2. ' )' → logprob: -7.00181770324707
    3. '),' → logprob: -7.25181770324707
    4. ',' → logprob: -8.87681770324707
    5. ')
' → logprob: -10.87681770324707
    6. '),(' → logprob: -12.00181770324707
    7. '+' → logprob: -12.12681770324707
    8. ')

' → logprob: -12.12681770324707
    9. '-' → logprob: -12.62681770324707
    10. ' ' → logprob: -13.25181770324707

Token 173: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.44840890169143677
    2. ' (' → logprob: -1.073408842086792
    3. '(s' → logprob: -3.948408842086792
    4. '(' → logprob: -9.198409080505371
    5. 't' → logprob: -9.698409080505371
    6. ' t' → logprob: -10.823409080505371
    7. ' ' → logprob: -11.198409080505371
    8. '[t' → logprob: -11.698409080505371
    9. '(T' → logprob: -12.323409080505371
    10. 's' → logprob: -12.823409080505371

Token 174: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.018554553389549255
    2. ' t' → logprob: -4.3935546875
    3. 's' → logprob: -5.5185546875
    4. '(t' → logprob: -6.5185546875
    5. '   ' → logprob: -9.1435546875
    6. ' s' → logprob: -9.2685546875
    7. '(s' → logprob: -9.5185546875
    8. 'x' → logprob: -9.8310546875
    9. ' ' → logprob: -9.9560546875
    10. ')' → logprob: -11.2060546875

Token 175: '-d' (ID: 2469)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14470656216144562
    2. '-d' → logprob: -2.2697064876556396
    3. ',' → logprob: -3.6447064876556396
    4. ' +' → logprob: -5.894706726074219
    5. ' -' → logprob: -6.769706726074219
    6. '-' → logprob: -7.394706726074219
    7. ' ,' → logprob: -8.519706726074219
    8. '+d' → logprob: -8.519706726074219
    9. 'dx' → logprob: -10.019706726074219
    10. ' ' → logprob: -10.019706726074219

Token 176: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.796184723294573e-06
    2. 'dx' → logprob: -13.125005722045898
    3. '<|end|>' → logprob: -13.250005722045898
    4. ' x' → logprob: -13.625005722045898
    5. 'sx' → logprob: -15.875005722045898
    6. 's' → logprob: -16.6250057220459
    7. ' dx' → logprob: -16.6250057220459
    8. ')' → logprob: -17.1250057220459
    9. '<|end|>' → logprob: -17.1250057220459
    10. '+' → logprob: -17.2500057220459

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023204941302537918
    2. '+' → logprob: -3.898205041885376
    3. ' +' → logprob: -6.273204803466797
    4. ' ,' → logprob: -7.273204803466797
    5. '+,' → logprob: -10.273204803466797
    6. '),' → logprob: -11.523204803466797
    7. '-' → logprob: -11.773204803466797
    8. ')' → logprob: -12.148204803466797
    9. '0' → logprob: -12.273204803466797
    10. ',
' → logprob: -12.523204803466797

Token 178: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.028913414105772972
    2. ' -' → logprob: -3.6539134979248047
    3. '0' → logprob: -6.028913497924805
    4. ' ' → logprob: -8.903913497924805
    5. '1' → logprob: -11.216413497924805
    6. '2' → logprob: -11.278913497924805
    7. '
' → logprob: -11.653913497924805
    8. '   ' → logprob: -12.466413497924805
    9. ')' → logprob: -12.778913497924805
    10. ',' → logprob: -12.841413497924805

Token 179: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0017707353690639138
    2. ' -' → logprob: -6.501770973205566
    3. '0' → logprob: -8.876770973205566
    4. '
' → logprob: -10.251770973205566
    5. '   ' → logprob: -10.876770973205566
    6. ' ' → logprob: -10.876770973205566
    7. '  ' → logprob: -11.626770973205566
    8. '2' → logprob: -12.126770973205566
    9. '+' → logprob: -12.939270973205566
    10. '1' → logprob: -13.064270973205566

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012798800598829985
    2. ')' → logprob: -6.876279830932617
    3. ' ,' → logprob: -8.626279830932617
    4. ',d' → logprob: -10.376279830932617
    5. '<|end|>' → logprob: -11.251279830932617
    6. ',)' → logprob: -11.876279830932617
    7. '),' → logprob: -12.501279830932617
    8. ' )' → logprob: -13.251279830932617
    9. ',
' → logprob: -13.376279830932617
    10. ',x' → logprob: -13.376279830932617

Token 181: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.145309180021286
    2. ' dx' → logprob: -2.0203092098236084
    3. '-d' → logprob: -6.270308971405029
    4. '-' → logprob: -7.895308971405029
    5. ' -' → logprob: -8.395309448242188
    6. ' ' → logprob: -10.020309448242188
    7. 'x' → logprob: -10.645309448242188
    8. '_dx' → logprob: -11.645309448242188
    9. '(dx' → logprob: -11.645309448242188
    10. '.dx' → logprob: -11.770309448242188

Token 182: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2617008400848135e-05
    2. ' )' → logprob: -10.500032424926758
    3. ')
' → logprob: -12.500032424926758
    4. '),' → logprob: -14.500032424926758
    5. '<|end|>' → logprob: -15.875032424926758
    6. ',)' → logprob: -16.000032424926758
    7. '))' → logprob: -16.250032424926758
    8. '   ' → logprob: -16.375032424926758
    9. ',' → logprob: -16.375032424926758
    10. ')#' → logprob: -16.750032424926758

Token 183: 'Chunks' (ID: 99983)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29283756017684937
    2. ',' → logprob: -1.9178376197814941
    3. '=' → logprob: -2.542837619781494
    4. '.extend' → logprob: -4.292837619781494
    5. '.append' → logprob: -5.167837619781494
    6. ' +=' → logprob: -5.417837619781494
    7. '.' → logprob: -6.042837619781494
    8. ' ,' → logprob: -7.792837619781494
    9. '+=' → logprob: -8.292837142944336
    10. '.sort' → logprob: -8.417837142944336

Token 185: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3660481870174408
    2. '[' → logprob: -1.4910482168197632
    3. 'list' → logprob: -2.9910480976104736
    4. '[list' → logprob: -4.741048336029053
    5. 'sorted' → logprob: -5.116048336029053
    6. 'flat' → logprob: -5.241048336029053
    7. ' []' → logprob: -5.366048336029053
    8. ' [' → logprob: -6.491048336029053
    9. '[]
' → logprob: -7.616048336029053
    10. ' list' → logprob: -7.616048336029053

Token 186: 'make' (ID: 14172)
  Prédit: 'make'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.037462469190359116
    2. '*' → logprob: -3.7874624729156494
    3. ']' → logprob: -4.53746223449707
    4. '(make' → logprob: -6.66246223449707
    5. ')' → logprob: -6.91246223449707
    6. ' make' → logprob: -7.78746223449707
    7. ']*' → logprob: -8.91246223449707
    8. '(' → logprob: -9.16246223449707
    9. '*(' → logprob: -9.53746223449707
    10. '])' → logprob: -9.66246223449707

Token 187: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -8.180258191714529e-06
    2. '_chunks' → logprob: -12.000008583068848
    3. 'interval' → logprob: -13.750008583068848
    4. 'Intervals' → logprob: -15.125008583068848
    5. 'inter' → logprob: -15.250008583068848
    6. '_interval' → logprob: -15.625008583068848
    7. '_int' → logprob: -17.87500762939453
    8. '_in' → logprob: -18.00000762939453
    9. '(interval' → logprob: -18.37500762939453
    10. '_ranges' → logprob: -18.50000762939453

Token 188: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.04150571674108505
    2. 'r' → logprob: -3.291505813598633
    3. 'val' → logprob: -6.041505813598633
    4. 'als' → logprob: -6.916505813598633
    5. '```' → logprob: -11.791505813598633
    6. '
' → logprob: -11.916505813598633
    7. 'ls' → logprob: -12.041505813598633
    8. 's' → logprob: -12.041505813598633
    9. 't' → logprob: -12.166505813598633
    10. '   ' → logprob: -12.416505813598633

Token 189: '(r' (ID: 4729)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.38568663597106934
    2. '(' → logprob: -1.7606866359710693
    3. '(i' → logprob: -2.7606866359710693
    4. '(st' → logprob: -3.0106866359710693
    5. '(item' → logprob: -4.635686874389648
    6. '(s' → logprob: -5.010686874389648
    7. '(chunk' → logprob: -5.510686874389648
    8. '(S' → logprob: -6.010686874389648
    9. '(St' → logprob: -6.010686874389648
    10. '(e' → logprob: -6.135686874389648

Token 190: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017872467637062073
    2. 'ow' → logprob: -4.767872333526611
    3. '(x' → logprob: -5.767872333526611
    4. 'ange' → logprob: -6.017872333526611
    5. 'for' → logprob: -6.892872333526611
    6. 'x' → logprob: -7.142872333526611
    7. 'ef' → logprob: -8.39287281036377
    8. '(' → logprob: -8.76787281036377
    9. 'ows' → logprob: -8.89287281036377
    10. 'aw' → logprob: -8.89287281036377

Token 191: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.306619793176651
    2. 'for' → logprob: -1.9316197633743286
    3. ' for' → logprob: -3.181619882583618
    4. '(i' → logprob: -3.931619882583618
    5. '(st' → logprob: -4.306619644165039
    6. '(r' → logprob: -4.306619644165039
    7. '(s' → logprob: -4.556619644165039
    8. '(item' → logprob: -5.056619644165039
    9. '(' → logprob: -5.306619644165039
    10. '(chunk' → logprob: -5.556619644165039

Token 192: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4295033812522888
    2. ' r' → logprob: -1.0545034408569336
    3. ' ' → logprob: -7.804503440856934
    4. '_' → logprob: -8.179503440856934
    5. ' _' → logprob: -9.554503440856934
    6. '_r' → logprob: -11.679503440856934
    7. '  ' → logprob: -11.679503440856934
    8. 'row' → logprob: -12.804503440856934
    9. '   ' → logprob: -12.867003440856934
    10. 'x' → logprob: -13.242003440856934

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020602969452738762
    2. 'in' → logprob: -3.8956029415130615
    3. 'range' → logprob: -10.89560317993164
    4. 'r' → logprob: -10.89560317993164
    5. ' ' → logprob: -11.64560317993164
    6. '<|end|>' → logprob: -12.52060317993164
    7. 'In' → logprob: -12.89560317993164
    8. ' r' → logprob: -13.02060317993164
    9. ')' → logprob: -13.64560317993164
    10. '<|end|>' → logprob: -13.89560317993164

Token 194: ' Stuff' (ID: 74093)
  Prédit: 'Stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stuff' → logprob: -0.04319295659661293
    2. ' Stuff' → logprob: -3.1681928634643555
    3. 'Range' → logprob: -9.668192863464355
    4. ' range' → logprob: -9.668192863464355
    5. 'range' → logprob: -10.043192863464355
    6. 'Staff' → logprob: -11.918192863464355
    7. ' ' → logprob: -12.543192863464355
    8. 'stuff' → logprob: -12.918192863464355
    9. ' stuff' → logprob: -13.043192863464355
    10. '(' → logprob: -13.168192863464355

Token 195: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.697387966094539e-05
    2. ' ]' → logprob: -10.000086784362793
    3. ')]' → logprob: -10.750086784362793
    4. ']
' → logprob: -11.000086784362793
    5. ')' → logprob: -13.750086784362793
    6. '()]' → logprob: -14.000086784362793
    7. ']

' → logprob: -15.625086784362793
    8. ']
' → logprob: -16.00008773803711
    9. '])' → logprob: -16.12508773803711
    10. '`]' → logprob: -16.12508773803711

Token 196: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5846846699714661
    2. '[(' → logprob: -0.9596846699714661
    3. ' [(' → logprob: -3.9596846103668213
    4. ' [' → logprob: -3.9596846103668213
    5. 'Chunks' → logprob: -4.4596848487854
    6. '[((' → logprob: -6.0846848487854
    7. 'make' → logprob: -6.3346848487854
    8. '[]' → logprob: -6.7096848487854
    9. 'list' → logprob: -7.3346848487854
    10. '[List' → logprob: -7.4596848487854

Token 198: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07558445632457733
    2. '(-' → logprob: -3.8255844116210938
    3. '(make' → logprob: -3.9505844116210938
    4. 'make' → logprob: -4.325584411621094
    5. ']' → logprob: -5.450584411621094
    6. '(M' → logprob: -5.700584411621094
    7. '((' → logprob: -6.075584411621094
    8. '(None' → logprob: -6.950584411621094
    9. ' (' → logprob: -7.450584411621094
    10. '(S' → logprob: -7.575584411621094

Token 199: 'MY' (ID: 34194)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9091739654541016
    2. '1' → logprob: -1.1591739654541016
    3. '100' → logprob: -2.2841739654541016
    4. 'MY' → logprob: -2.5341739654541016
    5. '(' → logprob: -3.6591739654541016
    6. '999' → logprob: -4.159173965454102
    7. 'int' → logprob: -4.534173965454102
    8. 'float' → logprob: -4.909173965454102
    9. '424' → logprob: -4.909173965454102
    10. '42' → logprob: -5.159173965454102

Token 200: '_INFINITY' (ID: 188542)
  Prédit: '_INFINITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INFINITY' → logprob: -0.0003122247871942818
    2. 'IN' → logprob: -8.250311851501465
    3. '_IN' → logprob: -10.125311851501465
    4. 'Infinity' → logprob: -12.125311851501465
    5. '_INF' → logprob: -13.250311851501465
    6. ')' → logprob: -13.500311851501465
    7. 'in' → logprob: -14.750311851501465
    8. '.infinity' → logprob: -15.125311851501465
    9. '∞' → logprob: -15.375311851501465
    10. '1' → logprob: -15.750311851501465

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008176080300472677
    2. ' ,' → logprob: -7.250817775726318
    3. '),' → logprob: -10.25081729888916
    4. '<|end|>' → logprob: -11.37581729888916
    5. ',),' → logprob: -11.62581729888916
    6. ',None' → logprob: -11.75081729888916
    7. ')' → logprob: -12.12581729888916
    8. '0' → logprob: -12.25081729888916
    9. '...' → logprob: -12.62581729888916
    10. ',
' → logprob: -13.00081729888916

Token 202: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5895997285842896
    2. '0' → logprob: -1.3395997285842896
    3. ' ' → logprob: -1.7145997285842896
    4. '-' → logprob: -6.464599609375
    5. ')' → logprob: -7.339599609375
    6. ' -' → logprob: -7.839599609375
    7. ',' → logprob: -8.214599609375
    8. '2' → logprob: -9.152099609375
    9. '<|end|>' → logprob: -9.464599609375
    10. '),' → logprob: -9.839599609375

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6204587817192078
    2. '0' → logprob: -0.8704587817192078
    3. '-' → logprob: -3.8704588413238525
    4. ' ' → logprob: -3.8704588413238525
    5. ' -' → logprob: -7.370458602905273
    6. '2' → logprob: -7.745458602905273
    7. ')' → logprob: -8.307958602905273
    8. ',' → logprob: -8.807958602905273
    9. '...' → logprob: -9.432958602905273
    10. '  ' → logprob: -9.995458602905273

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002163825323805213
    2. '<|end|>' → logprob: -7.002163887023926
    3. ')' → logprob: -7.377163887023926
    4. '),' → logprob: -8.127163887023926
    5. ' ,' → logprob: -8.377163887023926
    6. ')],' → logprob: -11.252163887023926
    7. ',None' → logprob: -11.252163887023926
    8. '...' → logprob: -11.627163887023926
    9. ',
' → logprob: -11.752163887023926
    10. '),(' → logprob: -11.752163887023926

Token 205: ' MY' (ID: 30096)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.734315037727356
    2. 'MY' → logprob: -0.984315037727356
    3. '-' → logprob: -2.4843149185180664
    4. '-M' → logprob: -3.9843149185180664
    5. '1' → logprob: -4.609314918518066
    6. 'None' → logprob: -4.734314918518066
    7. ' MY' → logprob: -4.984314918518066
    8. ' ' → logprob: -4.984314918518066
    9. ' -' → logprob: -6.234314918518066
    10. '42' → logprob: -6.484314918518066

Token 206: '_INFINITY' (ID: 188542)
  Prédit: '_INFINITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INFINITY' → logprob: -4.394135612528771e-05
    2. '_IN' → logprob: -10.875043869018555
    3. 'IN' → logprob: -11.375043869018555
    4. 'Infinity' → logprob: -11.750043869018555
    5. '.infinity' → logprob: -13.250043869018555
    6. 'in' → logprob: -14.500043869018555
    7. '_INF' → logprob: -14.625043869018555
    8. ')' → logprob: -14.875043869018555
    9. '∞' → logprob: -15.000043869018555
    10. 'FINITY' → logprob: -15.375043869018555

Token 207: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02167571522295475
    2. ')' → logprob: -4.2716755867004395
    3. ')],' → logprob: -5.2716755867004395
    4. ')]' → logprob: -6.5216755867004395
    5. '),(' → logprob: -7.3966755867004395
    6. '),
' → logprob: -8.646676063537598
    7. ' ),' → logprob: -9.771676063537598
    8. ')])' → logprob: -11.521676063537598
    9. ' )' → logprob: -12.271676063537598
    10. ')][' → logprob: -12.771676063537598

Token 208: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.2677707076072693
    2. ' (' → logprob: -2.017770767211914
    3. '(+' → logprob: -3.017770767211914
    4. '(-' → logprob: -3.517770767211914
    5. '(' → logprob: -3.892770767211914
    6. ' (+' → logprob: -6.267770767211914
    7. ' (-' → logprob: -7.642770767211914
    8. ' ' → logprob: -8.392770767211914
    9. '(My' → logprob: -8.642770767211914
    10. '((' → logprob: -9.142770767211914

Token 209: 'MY' (ID: 34194)
  Prédit: 'MY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MY' → logprob: -0.008894870989024639
    2. ' MY' → logprob: -5.383894920349121
    3. '+' → logprob: -6.383894920349121
    4. '-M' → logprob: -6.633894920349121
    5. '(M' → logprob: -7.258894920349121
    6. '-' → logprob: -9.008894920349121
    7. '0' → logprob: -9.508894920349121
    8. '_MY' → logprob: -9.633894920349121
    9. '(' → logprob: -9.758894920349121
    10. '(-' → logprob: -9.883894920349121

Token 210: '_INFINITY' (ID: 188542)
  Prédit: '_INFINITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INFINITY' → logprob: -1.2664456789934775e-06
    2. '_IN' → logprob: -13.750000953674316
    3. 'Infinity' → logprob: -17.000001907348633
    4. 'IN' → logprob: -17.125001907348633
    5. '.infinity' → logprob: -18.375001907348633
    6. 'FINITY' → logprob: -19.000001907348633
    7. '_INF' → logprob: -19.375001907348633
    8. '_INTR' → logprob: -21.125001907348633
    9. ')' → logprob: -21.625001907348633
    10. '_EXPECT' → logprob: -21.875001907348633

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.100059156073257e-05
    2. ' ,' → logprob: -9.625070571899414
    3. '+' → logprob: -13.750070571899414
    4. '0' → logprob: -14.250070571899414
    5. '```' → logprob: -14.375070571899414
    6. 'import' → logprob: -14.875070571899414
    7. '<|end|>' → logprob: -15.000070571899414
    8. '-' → logprob: -15.125070571899414
    9. ',
' → logprob: -15.125070571899414
    10. ' ' → logprob: -15.625070571899414

Token 212: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08210326731204987
    2. ' ' → logprob: -2.5821032524108887
    3. '1' → logprob: -5.832103252410889
    4. ',' → logprob: -8.582103729248047
    5. ' ,' → logprob: -10.582103729248047
    6. ' -' → logprob: -10.894603729248047
    7. '-' → logprob: -11.019603729248047
    8. ')' → logprob: -12.644603729248047
    9. '   ' → logprob: -13.269603729248047
    10. '  ' → logprob: -13.269603729248047

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0054968721233308315
    2. ' ' → logprob: -5.255496978759766
    3. '1' → logprob: -8.755496978759766
    4. ',' → logprob: -9.255496978759766
    5. ' ,' → logprob: -12.505496978759766
    6. '-' → logprob: -12.942996978759766
    7. ' -' → logprob: -14.130496978759766
    8. '  ' → logprob: -15.005496978759766
    9. '<|end|>' → logprob: -15.067996978759766
    10. '   ' → logprob: -15.192996978759766

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.456358823925257e-05
    2. ' ,' → logprob: -9.750064849853516
    3. '<|end|>' → logprob: -12.750064849853516
    4. ',
' → logprob: -14.125064849853516
    5. ',M' → logprob: -14.250064849853516
    6. '```' → logprob: -15.125064849853516
    7. ')]' → logprob: -15.125064849853516
    8. 'import' → logprob: -15.250064849853516
    9. '<|end|>' → logprob: -15.750064849853516
    10. '),' → logprob: -15.750064849853516

Token 215: ' MY' (ID: 30096)
  Prédit: 'MY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MY' → logprob: -0.009785604663193226
    2. ' MY' → logprob: -4.6347856521606445
    3. '-M' → logprob: -11.009785652160645
    4. ' ' → logprob: -12.759785652160645
    5. ' -' → logprob: -12.884785652160645
    6. '-' → logprob: -13.259785652160645
    7. '+' → logprob: -13.384785652160645
    8. '_MY' → logprob: -13.634785652160645
    9. '   ' → logprob: -14.134785652160645
    10. ' ' → logprob: -14.634785652160645

Token 216: '_INFINITY' (ID: 188542)
  Prédit: '_INFINITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INFINITY' → logprob: -5.080963092041202e-06
    2. 'IN' → logprob: -13.000004768371582
    3. 'Infinity' → logprob: -13.500004768371582
    4. '_IN' → logprob: -13.750004768371582
    5. '.infinity' → logprob: -15.750004768371582
    6. 'FINITY' → logprob: -15.875004768371582
    7. '_INF' → logprob: -18.0000057220459
    8. '∞' → logprob: -18.3750057220459
    9. 'in' → logprob: -19.0000057220459
    10. 'finity' → logprob: -19.3750057220459

Token 217: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020696155726909637
    2. ')]' → logprob: -3.8956961631774902
    3. ' )' → logprob: -9.520695686340332
    4. ')])' → logprob: -9.645695686340332
    5. ']]]' → logprob: -12.020695686340332
    6. '])]' → logprob: -12.395695686340332
    7. ')],' → logprob: -13.770695686340332
    8. ')))' → logprob: -13.770695686340332
    9. '))' → logprob: -14.395695686340332
    10. '),' → logprob: -14.520695686340332

Token 218: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002655079588294029
    2. ']]' → logprob: -8.750265121459961
    3. ')]' → logprob: -9.500265121459961
    4. '])' → logprob: -10.875265121459961
    5. ' ]' → logprob: -12.500265121459961
    6. ']
' → logprob: -12.500265121459961
    7. '])]' → logprob: -13.375265121459961
    8. ']]]' → logprob: -13.750265121459961
    9. ']

' → logprob: -14.000265121459961
    10. ']}' → logprob: -14.375265121459961

Token 219: 'Interval' (ID: 13947)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.631992518901825
    2. '<|end|>' → logprob: -1.5069925785064697
    3. ')' → logprob: -1.7569925785064697
    4. '
' → logprob: -4.006992340087891
    5. '[' → logprob: -4.256992340087891
    6. '[
' → logprob: -4.381992340087891
    7. 'chunks' → logprob: -5.256992340087891
    8. 'Chunks' → logprob: -5.256992340087891
    9. ',' → logprob: -5.756992340087891
    10. '<|end|>' → logprob: -5.756992340087891

Token 220: 'Soup' (ID: 73795)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003765404922887683
    2. ' =' → logprob: -6.25376558303833
    3. '=' → logprob: -6.75376558303833
    4. 'Chunks' → logprob: -8.128765106201172
    5. 'Events' → logprob: -9.253765106201172
    6. '_chunks' → logprob: -9.753765106201172
    7. ',' → logprob: -10.753765106201172
    8. 'Points' → logprob: -10.878765106201172
    9. 'List' → logprob: -11.003765106201172
    10. '_points' → logprob: -11.253765106201172

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742163419723511
    2. '=' → logprob: -0.9742163419723511
    3. '.extend' → logprob: -9.47421646118164
    4. '=[]' → logprob: -9.97421646118164
    5. ' +=' → logprob: -12.59921646118164
    6. ',' → logprob: -12.72421646118164
    7. ' =[' → logprob: -12.72421646118164
    8. '+=' → logprob: -13.59921646118164
    9. '.=' → logprob: -13.59921646118164
    10. '=[' → logprob: -14.09921646118164

Token 222: ' sorted' (ID: 20099)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4741487205028534
    2. 'sorted' → logprob: -1.2241487503051758
    3. '[' → logprob: -2.849148750305176
    4. 'sum' → logprob: -4.224148750305176
    5. 'flat' → logprob: -5.099148750305176
    6. '[list' → logprob: -6.224148750305176
    7. '[]
' → logprob: -6.849148750305176
    8. '[]' → logprob: -7.599148750305176
    9. '[*' → logprob: -8.474148750305176
    10. ' sorted' → logprob: -8.474148750305176

Token 223: '(list' (ID: 13116)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.9522789120674133
    2. '(' → logprob: -1.4522788524627686
    3. '(sum' → logprob: -1.4522788524627686
    4. '(chain' → logprob: -2.2022788524627686
    5. '(chunk' → logprob: -4.202279090881348
    6. '(i' → logprob: -4.327279090881348
    7. '((' → logprob: -6.077279090881348
    8. '(x' → logprob: -6.452279090881348
    9. '(item' → logprob: -6.952279090881348
    10. '(ch' → logprob: -7.952279090881348

Token 224: '(flat' (ID: 198434)
  Prédit: '(flat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flat' → logprob: -0.006854608654975891
    2. '(chain' → logprob: -5.13185453414917
    3. 'flat' → logprob: -7.13185453414917
    4. '(' → logprob: -9.131855010986328
    5. '(sum' → logprob: -11.631855010986328
    6. '((' → logprob: -13.256855010986328
    7. ')' → logprob: -13.381855010986328
    8. 'chain' → logprob: -13.631855010986328
    9. '.flat' → logprob: -14.006855010986328
    10. '(filter' → logprob: -14.256855010986328

Token 225: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -6.396757089532912e-05
    2. 'Chunks' → logprob: -9.8750638961792
    3. ' (' → logprob: -12.5000638961792
    4. '((' → logprob: -12.5000638961792
    5. '([' → logprob: -13.6250638961792
    6. ')' → logprob: -14.1250638961792
    7. '(
' → logprob: -14.5000638961792
    8. ')(' → logprob: -14.5000638961792
    9. '(ch' → logprob: -14.6250638961792
    10. '(CH' → logprob: -15.2500638961792

Token 226: 'Chunks' (ID: 99983)
  Prédit: 'Chunks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chunks' → logprob: -9.746380237629637e-05
    2. '(' → logprob: -9.625097274780273
    3. ' Ch' → logprob: -11.000097274780273
    4. 'Chunk' → logprob: -12.750097274780273
    5. 'Intervals' → logprob: -12.750097274780273
    6. 'chunks' → logprob: -12.875097274780273
    7. '_chunks' → logprob: -13.000097274780273
    8. '
' → logprob: -13.375097274780273
    9. 'Ch' → logprob: -14.375097274780273
    10. ')' → logprob: -14.500097274780273

Token 227: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00201999768614769
    2. ')))' → logprob: -6.377019882202148
    3. '),' → logprob: -8.252019882202148
    4. '))
' → logprob: -10.502019882202148
    5. ')' → logprob: -11.377019882202148
    6. ' ))' → logprob: -11.752019882202148
    7. '()))' → logprob: -12.377019882202148
    8. '))))' → logprob: -13.502019882202148
    9. ')),' → logprob: -13.502019882202148
    10. ',' → logprob: -13.877019882202148

Token 228: 'H' (ID: 39)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6094106435775757
    2. ',' → logprob: -1.9844106435775757
    3. '(' → logprob: -2.3594107627868652
    4. '[' → logprob: -2.7344107627868652
    5. ':' → logprob: -3.1094107627868652
    6. ']' → logprob: -3.2344107627868652
    7. 'def' → logprob: -3.4844107627868652
    8. '#' → logprob: -4.984410762786865
    9. '(
' → logprob: -4.984410762786865
    10. ',
' → logprob: -5.234410762786865

Token 229: '_add' (ID: 8390)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.277163028717041
    2. '=' → logprob: -2.277163028717041
    3. ' =' → logprob: -2.277163028717041
    4. 'ints' → logprob: -5.402163028717041
    5. 'ead' → logprob: -6.027163028717041
    6. 'E' → logprob: -6.027163028717041
    7. 'it' → logprob: -6.277163028717041
    8. 'istory' → logprob: -6.277163028717041
    9. ',' → logprob: -6.527163028717041
    10. 'elp' → logprob: -6.527163028717041

Token 230: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8213551044464111
    2. '=' → logprob: -1.0713551044464111
    3. ' =' → logprob: -1.5713551044464111
    4. '=[]' → logprob: -4.696354866027832
    5. 's' → logprob: -8.071354866027832
    6. '  ' → logprob: -9.946354866027832
    7. '=[]
' → logprob: -9.946354866027832
    8. '   ' → logprob: -10.071354866027832
    9. ' ' → logprob: -10.571354866027832
    10. '=[],' → logprob: -10.821354866027832

Token 231: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0002465582510922104
    2. '[]
' → logprob: -8.75024700164795
    3. ' []' → logprob: -9.50024700164795
    4. '[' → logprob: -11.87524700164795
    5. '[]}' → logprob: -12.75024700164795
    6. '[]

' → logprob: -14.00024700164795
    7. '0' → logprob: -14.12524700164795
    8. '[]>' → logprob: -14.25024700164795
    9. '[],' → logprob: -14.37524700164795
    10. 'list' → logprob: -15.25024700164795

Token 232: 'MY' (ID: 34194)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11242862790822983
    2. '0' → logprob: -2.362428665161133
    3. '(' → logprob: -5.987428665161133
    4. '()]' → logprob: -5.987428665161133
    5. ']
' → logprob: -6.112428665161133
    6. 'MY' → logprob: -6.237428665161133
    7. '[]' → logprob: -6.987428665161133
    8. ']

' → logprob: -7.112428665161133
    9. '(-' → logprob: -7.862428665161133
    10. 'float' → logprob: -8.862428665161133

Token 233: '_INFINITY' (ID: 188542)
  Prédit: '_INFINITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INFINITY' → logprob: -2.1008713702030946e-06
    2. '_IN' → logprob: -13.375001907348633
    3. '_INF' → logprob: -14.875001907348633
    4. 'Infinity' → logprob: -16.750001907348633
    5. 'IN' → logprob: -17.625001907348633
    6. '_INTERVAL' → logprob: -18.625001907348633
    7. '.infinity' → logprob: -19.000001907348633
    8. 'FINITY' → logprob: -19.625001907348633
    9. '_INCREMENT' → logprob: -20.375001907348633
    10. 'in' → logprob: -20.375001907348633

Token 234: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0034341192804276943
    2. ']*' → logprob: -5.878434181213379
    3. ',' → logprob: -8.628434181213379
    4. ' ]' → logprob: -8.878434181213379
    5. ']+' → logprob: -9.253434181213379
    6. ']*(' → logprob: -9.378434181213379
    7. ' for' → logprob: -9.753434181213379
    8. '+' → logprob: -11.128434181213379
    9. 'for' → logprob: -11.378434181213379
    10. ')' → logprob: -11.503434181213379

Token 235: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.09398756921291351
    2. ',' → logprob: -2.593987464904785
    3. ']' → logprob: -5.218987464904785
    4. ',
' → logprob: -5.218987464904785
    5. '0' → logprob: -6.718987464904785
    6. '[' → logprob: -7.843987464904785
    7. 'heap' → logprob: -8.218987464904785
    8. ',H' → logprob: -8.468987464904785
    9. 'import' → logprob: -8.718987464904785
    10. '<|end|>' → logprob: -8.843987464904785

Token 236: '_del' (ID: 39544)
  Prédit: '_remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.5492036938667297
    2. '_add' → logprob: -1.424203634262085
    3. '_pop' → logprob: -2.299203634262085
    4. '_' → logprob: -3.174203634262085
    5. ' =' → logprob: -4.424203872680664
    6. '_push' → logprob: -4.674203872680664
    7. '=' → logprob: -5.549203872680664
    8. '_del' → logprob: -5.674203872680664
    9. '_get' → logprob: -5.924203872680664
    10. '_sub' → logprob: -5.924203872680664

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3485221564769745
    2. ' =' → logprob: -1.2235221862792969
    3. '=[]' → logprob: -9.848522186279297
    4. '=[' → logprob: -11.348522186279297
    5. '[' → logprob: -12.598522186279297
    6. ']' → logprob: -12.723522186279297
    7. ' =[' → logprob: -12.848522186279297
    8. ' ' → logprob: -13.348522186279297
    9. ',' → logprob: -14.348522186279297
    10. ')' → logprob: -14.598522186279297

Token 238: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0035179948899894953
    2. '[]' → logprob: -5.753518104553223
    3. ' [' → logprob: -8.128518104553223
    4. '[-' → logprob: -10.628518104553223
    5. ' ' → logprob: -12.128518104553223
    6. '[M' → logprob: -12.253518104553223
    7. ' []' → logprob: -12.753518104553223
    8. '[MAX' → logprob: -13.128518104553223
    9. '  ' → logprob: -13.878518104553223
    10. '[:]' → logprob: -13.878518104553223

Token 239: 'MY' (ID: 34194)
  Prédit: 'MY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MY' → logprob: -0.0019543254747986794
    2. '-M' → logprob: -6.376954555511475
    3. ']' → logprob: -9.126954078674316
    4. '-' → logprob: -9.626954078674316
    5. ' MY' → logprob: -9.876954078674316
    6. '_MY' → logprob: -11.501954078674316
    7. '0' → logprob: -11.876954078674316
    8. ' ' → logprob: -13.251954078674316
    9. ']-' → logprob: -13.876954078674316
    10. '  ' → logprob: -14.126954078674316

Token 240: '_INFINITY' (ID: 188542)
  Prédit: '_INFINITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INFINITY' → logprob: -7.941850526549388e-06
    2. 'IN' → logprob: -12.875007629394531
    3. 'Infinity' → logprob: -12.875007629394531
    4. '_IN' → logprob: -12.875007629394531
    5. '.infinity' → logprob: -16.62500762939453
    6. '_INF' → logprob: -17.37500762939453
    7. 'FINITY' → logprob: -18.00000762939453
    8. '∞' → logprob: -18.50000762939453
    9. 'in' → logprob: -19.00000762939453
    10. '_INTERVAL' → logprob: -19.75000762939453

Token 241: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012082771718269214
    2. ']
' → logprob: -10.000121116638184
    3. ')' → logprob: -10.250121116638184
    4. ' ]' → logprob: -11.000121116638184
    5. ',' → logprob: -11.125121116638184
    6. ')]' → logprob: -12.375121116638184
    7. '])' → logprob: -13.125121116638184
    8. ']

' → logprob: -14.000121116638184
    9. '()]' → logprob: -14.625121116638184
    10. '<|end|>' → logprob: -15.750121116638184

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015519599430263042
    2. '0' → logprob: -5.265519618988037
    3. ']' → logprob: -5.640519618988037
    4. ' ' → logprob: -5.640519618988037
    5. '42' → logprob: -6.890519618988037
    6. '10' → logprob: -7.265519618988037
    7. '100' → logprob: -8.140519142150879
    8. '2' → logprob: -8.265519142150879
    9. ']
' → logprob: -8.765519142150879
    10. '7' → logprob: -9.203019142150879

Token 243: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014239625306800008
    2. ']
' → logprob: -9.750142097473145
    3. ' ]' → logprob: -10.000142097473145
    4. ')' → logprob: -11.000142097473145
    5. ',' → logprob: -11.125142097473145
    6. ']

' → logprob: -13.250142097473145
    7. '])' → logprob: -13.250142097473145
    8. ')]' → logprob: -13.375142097473145
    9. '<|end|>' → logprob: -14.000142097473145
    10. '']' → logprob: -15.375142097473145

Token 244: 'Days' (ID: 24680)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.6966280937194824
    2. 'ans' → logprob: -1.9466280937194824
    3. 'Answers' → logprob: -2.5716280937194824
    4. 'result' → logprob: -2.6966280937194824
    5. 'Answer' → logprob: -2.6966280937194824
    6. 'Results' → logprob: -2.6966280937194824
    7. 'answer' → logprob: -2.8216280937194824
    8. 'answers' → logprob: -2.8216280937194824
    9. 'Ans' → logprob: -3.1966280937194824
    10. 'results' → logprob: -3.1966280937194824

Token 245: '.append' (ID: 3709)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.04900914058089256
    2. '(' → logprob: -3.174009084701538
    3. '(int' → logprob: -5.549009323120117
    4. '(-' → logprob: -6.799009323120117
    5. 'int' → logprob: -8.049009323120117
    6. '(float' → logprob: -8.174009323120117
    7. 'MY' → logprob: -9.049009323120117
    8. '((' → logprob: -9.174009323120117
    9. '(D' → logprob: -10.299009323120117
    10. '(+' → logprob: -10.549009323120117

Token 247: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -8.745069499127567e-05
    2. '_INFINITY' → logprob: -10.12508773803711
    3. ')' → logprob: -11.50008773803711
    4. '_Y' → logprob: -11.87508773803711
    5. '0' → logprob: -12.87508773803711
    6. '```' → logprob: -13.06258773803711
    7. '_' → logprob: -13.06258773803711
    8. 'AX' → logprob: -13.25008773803711
    9. 'Infinity' → logprob: -14.06258773803711
    10. 'YX' → logprob: -14.18758773803711

Token 248: '_INFINITY' (ID: 188542)
  Prédit: '_INFINITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INFINITY' → logprob: -3.292907877039397e-06
    2. '_IN' → logprob: -13.12500286102295
    3. 'Infinity' → logprob: -14.12500286102295
    4. 'IN' → logprob: -14.75000286102295
    5. '_INF' → logprob: -16.875003814697266
    6. '.infinity' → logprob: -18.000003814697266
    7. '_INCREMENT' → logprob: -19.125003814697266
    8. 'in' → logprob: -19.125003814697266
    9. '∞' → logprob: -19.125003814697266
    10. 'FINITY' → logprob: -19.250003814697266

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.073596548754722e-05
    2. ' )' → logprob: -10.12505054473877
    3. ')
' → logprob: -11.62505054473877
    4. '))' → logprob: -14.75005054473877
    5. '+' → logprob: -15.37505054473877
    6. ')

' → logprob: -15.75005054473877
    7. ']' → logprob: -16.000051498413086
    8. ')`' → logprob: -16.125051498413086
    9. '
' → logprob: -16.250051498413086
    10. '),' → logprob: -16.625051498413086

Token 250: 'Days' (ID: 24680)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.163153886795044
    2. 'res' → logprob: -2.288153886795044
    3. 'for' → logprob: -2.413153886795044
    4. 'answer' → logprob: -2.413153886795044
    5. 'Answer' → logprob: -2.663153886795044
    6. 'idx' → logprob: -2.913153886795044
    7. 'result' → logprob: -3.163153886795044
    8. 'Ans' → logprob: -3.538153886795044
    9. 'Answers' → logprob: -3.913153886795044
    10. 'Results' → logprob: -4.038153648376465

Token 251: 'Iter' (ID: 11168)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12701316177845
    2. '=' → logprob: -2.1270132064819336
    3. '_' → logprob: -10.127013206481934
    4. '_iter' → logprob: -10.627013206481934
    5. 'iter' → logprob: -12.127013206481934
    6. '_idx' → logprob: -12.752013206481934
    7. '_=' → logprob: -13.127013206481934
    8. ' ' → logprob: -13.377013206481934
    9. 'iterator' → logprob: -13.627013206481934
    10. '__' → logprob: -13.877013206481934

Token 253: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.013231641612946987
    2. ' iter' → logprob: -4.5132317543029785
    3. '0' → logprob: -6.1382317543029785
    4. ' ' → logprob: -11.63823127746582
    5. '(iter' → logprob: -11.76323127746582
    6. 'enumer' → logprob: -12.38823127746582
    7. 'flat' → logprob: -14.51323127746582
    8. '	iter' → logprob: -14.63823127746582
    9. '   ' → logprob: -15.51323127746582
    10. '1' → logprob: -16.13823127746582

Token 254: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -3.440506407059729e-05
    2. '(' → logprob: -10.37503433227539
    3. '(days' → logprob: -13.12503433227539
    4. 'Days' → logprob: -15.25003433227539
    5. '(
' → logprob: -15.25003433227539
    6. '(Dense' → logprob: -15.62503433227539
    7. '((' → logprob: -16.50003433227539
    8. '(d' → logprob: -16.62503433227539
    9. '()' → logprob: -16.87503433227539
    10. '(iter' → logprob: -17.12503433227539

Token 255: 'ays' (ID: 1044)
  Prédit: 'ays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ays' → logprob: -0.00013929695705883205
    2. 'Days' → logprob: -9.750139236450195
    3. 'AYS' → logprob: -10.125139236450195
    4. 'A' → logprob: -11.750139236450195
    5. '```' → logprob: -12.000139236450195
    6. 'ay' → logprob: -12.375139236450195
    7. 'days' → logprob: -13.125139236450195
    8. '[' → logprob: -13.125139236450195
    9. '_days' → logprob: -13.625139236450195
    10. 'a' → logprob: -13.750139236450195

Token 256: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010103991371579468
    2. ' )' → logprob: -9.250101089477539
    3. ')
' → logprob: -12.875101089477539
    4. '))' → logprob: -14.250101089477539
    5. ')`' → logprob: -15.000101089477539
    6. ' ' → logprob: -15.250101089477539
    7. ',)' → logprob: -15.375101089477539
    8. ')

' → logprob: -15.375101089477539
    9. '())' → logprob: -15.625101089477539
    10. ',' → logprob: -16.50010108947754

Token 257: 'current' (ID: 5804)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.7940229177474976
    2. 'ans' → logprob: -2.169023036956787
    3. 'answer' → logprob: -2.544023036956787
    4. 'current' → logprob: -2.544023036956787
    5. 'now' → logprob: -2.794023036956787
    6. 'res' → logprob: -3.044023036956787
    7. 'curr' → logprob: -3.169023036956787
    8. 'best' → logprob: -3.544023036956787
    9. 'Current' → logprob: -3.544023036956787
    10. 'result' → logprob: -4.044023036956787

Token 258: '_d' (ID: 1565)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8922330141067505
    2. '=' → logprob: -2.392232894897461
    3. '_' → logprob: -2.517232894897461
    4. '_inter' → logprob: -2.642232894897461
    5. '_idx' → logprob: -2.767232894897461
    6. '_val' → logprob: -2.767232894897461
    7. '_interval' → logprob: -2.892232894897461
    8. '_min' → logprob: -3.767232894897461
    9. ',' → logprob: -3.892232894897461
    10. '_token' → logprob: -4.017232894897461

Token 259: ' =' (ID: 314)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.10060343891382217
    2. '=' → logprob: -3.1006033420562744
    3. ' =' → logprob: -3.1006033420562744
    4. ',' → logprob: -5.2256035804748535
    5. 'ef' → logprob: -9.225603103637695
    6. 'istance' → logprob: -10.100603103637695
    7. ' ' → logprob: -10.975603103637695
    8. 'a' → logprob: -11.100603103637695
    9. 'e' → logprob: -11.225603103637695
    10. 'y' → logprob: -11.350603103637695

Token 260: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0008853725739754736
    2. '0' → logprob: -7.625885486602783
    3. ' next' → logprob: -8.000885009765625
    4. '-' → logprob: -10.375885009765625
    5. '-next' → logprob: -11.000885009765625
    6. '(next' → logprob: -11.625885009765625
    7. 'min' → logprob: -12.875885009765625
    8. 'Next' → logprob: -14.750885009765625
    9. '1' → logprob: -14.875885009765625
    10. ' -' → logprob: -14.875885009765625

Token 261: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.00033796546631492674
    2. 'Days' → logprob: -8.000337600708008
    3. '(' → logprob: -13.125337600708008
    4. 'D' → logprob: -15.500337600708008
    5. '(
' → logprob: -16.125337600708008
    6. '(days' → logprob: -16.250337600708008
    7. 'Day' → logprob: -16.375337600708008
    8. ' Days' → logprob: -17.375337600708008
    9. '(Dense' → logprob: -17.500337600708008
    10. '_days' → logprob: -19.000337600708008

Token 262: 'ays' (ID: 1044)
  Prédit: 'ays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ays' → logprob: -1.4617256056226324e-05
    2. 'Days' → logprob: -11.375014305114746
    3. 'ay' → logprob: -13.250014305114746
    4. 'days' → logprob: -14.250014305114746
    5. 'ys' → logprob: -16.000015258789062
    6. '
' → logprob: -16.375015258789062
    7. '```' → logprob: -16.500015258789062
    8. 'a' → logprob: -16.750015258789062
    9. 'AYS' → logprob: -17.500015258789062
    10. '[' → logprob: -17.500015258789062

Token 263: 'Iter' (ID: 11168)
  Prédit: 'Iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iter' → logprob: -6.813969957875088e-05
    2. ')' → logprob: -9.750067710876465
    3. 'It' → logprob: -11.750067710876465
    4. ')
' → logprob: -14.375067710876465
    5. '_iter' → logprob: -14.750067710876465
    6. 'I' → logprob: -15.125067710876465
    7. 'iter' → logprob: -15.875067710876465
    8. 'Itr' → logprob: -16.12506866455078
    9. 'Inter' → logprob: -16.62506866455078
    10. '
' → logprob: -16.62506866455078

Token 264: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010580805974313989
    2. ' )' → logprob: -9.250105857849121
    3. ')
' → logprob: -11.875105857849121
    4. '()' → logprob: -13.625105857849121
    5. '())' → logprob: -14.000105857849121
    6. ' ' → logprob: -15.250105857849121
    7. ')

' → logprob: -15.500105857849121
    8. '))' → logprob: -16.375104904174805
    9. ',' → logprob: -17.125104904174805
    10. ')`' → logprob: -17.125104904174805

Token 265: 'some' (ID: 25231)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9069386124610901
    2. 'answer' → logprob: -2.0319385528564453
    3. 'idx' → logprob: -2.2819385528564453
    4. 'result' → logprob: -2.2819385528564453
    5. 'i' → logprob: -3.0319385528564453
    6. 'current' → logprob: -3.7819385528564453
    7. 'res' → logprob: -3.7819385528564453
    8. 'answers' → logprob: -3.9069385528564453
    9. 'while' → logprob: -4.031938552856445
    10. 'events' → logprob: -4.281938552856445

Token 266: '_flag' (ID: 25269)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5692633390426636
    2. '_d' → logprob: -2.444263458251953
    3. '_idx' → logprob: -2.444263458251953
    4. '_inter' → logprob: -2.569263458251953
    5. ' =' → logprob: -2.694263458251953
    6. '_index' → logprob: -2.819263458251953
    7. '=' → logprob: -3.319263458251953
    8. '_val' → logprob: -3.444263458251953
    9. '_stack' → logprob: -3.569263458251953
    10. 'thing' → logprob: -3.694263458251953

Token 267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933420896530151
    2. ' =' → logprob: -0.6933420896530151
    3. ',' → logprob: -8.693342208862305
    4. ' ' → logprob: -11.568342208862305
    5. '_' → logprob: -11.943342208862305
    6. ' ,' → logprob: -12.943342208862305
    7. '=False' → logprob: -13.818342208862305
    8. ' ' → logprob: -14.068342208862305
    9. '=True' → logprob: -14.193342208862305
    10. 's' → logprob: -14.443342208862305

Token 268: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07873720675706863
    2. 'True' → logprob: -2.703737258911133
    3. '0' → logprob: -4.953737258911133
    4. ' False' → logprob: -6.578737258911133
    5. ' True' → logprob: -8.828737258911133
    6. '1' → logprob: -9.453737258911133
    7. '[]' → logprob: -10.078737258911133
    8. 'None' → logprob: -11.078737258911133
    9. '-' → logprob: -11.578737258911133
    10. ' ' → logprob: -11.953737258911133

Token 269: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.06577739119529724
    2. 'True' → logprob: -2.94077730178833
    3. '0' → logprob: -4.56577730178833
    4. '1' → logprob: -8.940777778625488
    5. '[]' → logprob: -9.315777778625488
    6. 'None' → logprob: -9.690777778625488
    7. '-' → logprob: -9.940777778625488
    8. ' False' → logprob: -10.565777778625488
    9. 'current' → logprob: -11.065777778625488
    10. '[' → logprob: -11.190777778625488

Token 270: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.554115891456604
    2. 'i' → logprob: -1.679115891456604
    3. 'idx' → logprob: -2.4291157722473145
    4. 'while' → logprob: -3.0541157722473145
    5. 'current' → logprob: -4.1791157722473145
    6. 'index' → logprob: -4.6791157722473145
    7. 'interval' → logprob: -4.8041157722473145
    8. 'pos' → logprob: -4.9291157722473145
    9. 'def' → logprob: -5.3041157722473145
    10. 'events' → logprob: -5.3041157722473145

Token 271: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3494419455528259
    2. 'i' → logprob: -2.7244420051574707
    3. 'idx' → logprob: -2.8494420051574707
    4. 'answer' → logprob: -3.2244420051574707
    5. 'result' → logprob: -3.3494420051574707
    6. 'events' → logprob: -4.474442005157471
    7. 'results' → logprob: -4.724442005157471
    8. 'res' → logprob: -4.849442005157471
    9. 'I' → logprob: -5.474442005157471
    10. 'current' → logprob: -5.474442005157471

Token 272: ' some' (ID: 1236)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.774867594242096
    2. ' True' → logprob: -1.0248675346374512
    3. 'current' → logprob: -2.149867534637451
    4. 'True' → logprob: -3.024867534637451
    5. ' some' → logprob: -5.149867534637451
    6. 'some' → logprob: -5.524867534637451
    7. ' not' → logprob: -6.274867534637451
    8. '(True' → logprob: -6.524867534637451
    9. ' Interval' → logprob: -6.649867534637451
    10. ' ' → logprob: -8.14986801147461

Token 273: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.0006841989234089851
    2. '_' → logprob: -7.5006842613220215
    3. '_f' → logprob: -9.875683784484863
    4. ' _' → logprob: -10.250683784484863
    5. 'flag' → logprob: -11.875683784484863
    6. 'Flag' → logprob: -12.000683784484863
    7. '_flags' → logprob: -12.000683784484863
    8. '_FLAG' → logprob: -12.250683784484863
    9. '_d' → logprob: -12.375683784484863
    10. '_F' → logprob: -13.250683784484863

Token 274: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4461739957332611
    2. '<' → logprob: -1.1961740255355835
    3. ' <=' → logprob: -3.196173906326294
    4. '<=' → logprob: -4.446174144744873
    5. ' ==' → logprob: -6.071174144744873
    6. ' !=' → logprob: -6.696174144744873
    7. '==' → logprob: -6.946174144744873
    8. '!=' → logprob: -8.821173667907715
    9. ' ' → logprob: -9.446173667907715
    10. '<len' → logprob: -9.696173667907715

Token 275: ' ' (ID: 220)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.17216899991035461
    2. 'len' → logprob: -2.4221689701080322
    3. 'N' → logprob: -2.6721689701080322
    4. '10' → logprob: -9.672168731689453
    5. 'current' → logprob: -9.922168731689453
    6. ' Q' → logprob: -9.922168731689453
    7. '1' → logprob: -10.047168731689453
    8. '=' → logprob: -10.922168731689453
    9. '100' → logprob: -11.047168731689453
    10. 'float' → logprob: -11.047168731689453

Token 276: '1' (ID: 16)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.20189127326011658
    2. 'len' → logprob: -1.951891303062439
    3. 'N' → logprob: -3.2018911838531494
    4. '10' → logprob: -10.70189094543457
    5. '1' → logprob: -10.95189094543457
    6. ' Q' → logprob: -11.32689094543457
    7. 'float' → logprob: -11.57689094543457
    8. '42' → logprob: -11.70189094543457
    9. '100' → logprob: -11.70189094543457
    10. '2' → logprob: -11.82689094543457

Token 277: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018291465938091278
    2. ' :' → logprob: -4.018291473388672
    3. ':
' → logprob: -9.018291473388672
    4. ' :
' → logprob: -11.018291473388672
    5. ' and' → logprob: -13.893291473388672
    6. '):' → logprob: -14.268291473388672
    7. '():' → logprob: -14.393291473388672
    8. '+:' → logprob: -15.018291473388672
    9. ',' → logprob: -15.393291473388672
    10. '0' → logprob: -15.643291473388672

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17416994273662567
    2. ' event' → logprob: -3.0491700172424316
    3. 'event' → logprob: -4.049170017242432
    4. ' pos' → logprob: -4.799170017242432
    5. ' token' → logprob: -4.799170017242432
    6. 'e' → logprob: -4.924170017242432
    7. ' i' → logprob: -4.924170017242432
    8. 'pos' → logprob: -5.049170017242432
    9. ' d' → logprob: -5.049170017242432
    10. '    
' → logprob: -5.174170017242432

Token 279: ' for' (ID: 395)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4653145372867584
    2. 'd' → logprob: -2.0903146266937256
    3. 'point' → logprob: -3.3403146266937256
    4. 'p' → logprob: -3.3403146266937256
    5. 'x' → logprob: -3.4653146266937256
    6. 'event' → logprob: -3.5903146266937256
    7. 'current' → logprob: -4.0903143882751465
    8. 'cur' → logprob: -4.2153143882751465
    9. 'if' → logprob: -4.4653143882751465
    10. 'i' → logprob: -4.8403143882751465

Token 280: ' val' (ID: 1459)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.5201857089996338
    2. 'event' → logprob: -1.5201857089996338
    3. 'i' → logprob: -1.8951857089996338
    4. 'point' → logprob: -2.145185708999634
    5. 'idx' → logprob: -3.020185708999634
    6. 'd' → logprob: -3.145185708999634
    7. 'interval' → logprob: -3.145185708999634
    8. '_,' → logprob: -3.895185708999634
    9. 'current' → logprob: -4.145185470581055
    10. 'time' → logprob: -4.395185470581055

Token 281: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11563406884670258
    2. 'in' → logprob: -2.365633964538574
    3. ',' → logprob: -4.240633964538574
    4. ' ,' → logprob: -7.490633964538574
    5. ' ' → logprob: -8.615633964538574
    6. '  ' → logprob: -10.115633964538574
    7. '_in' → logprob: -11.115633964538574
    8. ',val' → logprob: -11.115633964538574
    9. '=' → logprob: -11.490633964538574
    10. 's' → logprob: -11.490633964538574

Token 282: ' entry' (ID: 7251)
  Prédit: 'typ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'typ' → logprob: -0.4414214491844177
    2. 'kind' → logprob: -2.6914215087890625
    3. 'tp' → logprob: -3.0664215087890625
    4. 'is' → logprob: -3.8164215087890625
    5. 'mode' → logprob: -3.8164215087890625
    6. 'flag' → logprob: -3.8164215087890625
    7. 'type' → logprob: -3.9414215087890625
    8. 'op' → logprob: -3.9414215087890625
    9. 't' → logprob: -4.1914215087890625
    10. 'ty' → logprob: -4.4414215087890625

Token 283: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2606865167617798
    2. ' in' → logprob: -1.6356865167617798
    3. ',' → logprob: -3.3856863975524902
    4. 'type' → logprob: -8.760686874389648
    5. '_type' → logprob: -8.885686874389648
    6. ' ,' → logprob: -8.885686874389648
    7. '_in' → logprob: -9.135686874389648
    8. ')' → logprob: -9.760686874389648
    9. '<|end|>' → logprob: -10.260686874389648
    10. '<|end|>' → logprob: -10.385686874389648

Token 284: ' val' (ID: 1459)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.10406779497861862
    2. 'delta' → logprob: -3.479067802429199
    3. 'dist' → logprob: -3.854067802429199
    4. 'd' → logprob: -4.604067802429199
    5. 'diff' → logprob: -4.854067802429199
    6. 'weight' → logprob: -5.229067802429199
    7. 'cost' → logprob: -5.854067802429199
    8. 'x' → logprob: -5.979067802429199
    9. 'w' → logprob: -6.604067802429199
    10. 'length' → logprob: -6.604067802429199

Token 285: 'x' (ID: 87)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7426005005836487
    2. 'in' → logprob: -0.8676005005836487
    3. 'dx' → logprob: -2.617600440979004
    4. '=' → logprob: -4.117600440979004
    5. 's' → logprob: -5.492600440979004
    6. ' ' → logprob: -6.242600440979004
    7. ',' → logprob: -6.242600440979004
    8. '_in' → logprob: -6.367600440979004
    9. ' =' → logprob: -6.742600440979004
    10. '_dx' → logprob: -6.992600440979004

Token 286: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.100494883954525
    2. 'in' → logprob: -2.350494861602783
    3. 'd' → logprob: -10.100495338439941
    4. 's' → logprob: -10.100495338439941
    5. 'n' → logprob: -10.225495338439941
    6. '_in' → logprob: -10.225495338439941
    7. 'x' → logprob: -10.725495338439941
    8. ' ' → logprob: -10.850495338439941
    9. 'dx' → logprob: -10.850495338439941
    10. '=' → logprob: -11.725495338439941

Token 287: ' Interval' (ID: 80693)
  Prédit: 'Interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Interval' → logprob: -0.007963493466377258
    2. ' Interval' → logprob: -4.88296365737915
    3. '[' → logprob: -8.257963180541992
    4. 'filter' → logprob: -10.382963180541992
    5. 'interval' → logprob: -10.882963180541992
    6. 'sorted' → logprob: -11.507963180541992
    7. 'System' → logprob: -11.882963180541992
    8. '(' → logprob: -12.132963180541992
    9. 'Filter' → logprob: -12.882963180541992
    10. '   ' → logprob: -12.882963180541992

Token 288: 'Soup' (ID: 73795)
  Prédit: 'Soup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Soup' → logprob: -1.981667537620524e-06
    2. 's' → logprob: -14.250001907348633
    3. 'Sou' → logprob: -14.750001907348633
    4. '_s' → logprob: -15.375001907348633
    5. ' Soup' → logprob: -15.875001907348633
    6. ' soup' → logprob: -16.375001907348633
    7. 'Soap' → logprob: -16.500001907348633
    8. 'Soul' → logprob: -16.625001907348633
    9. '_S' → logprob: -16.750001907348633
    10. '   ' → logprob: -17.000001907348633

Token 289: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01836508885025978
    2. ':
' → logprob: -4.018364906311035
    3. ' :' → logprob: -8.768364906311035
    4. '   ' → logprob: -10.268364906311035
    5. ' :
' → logprob: -11.018364906311035
    6. ':

' → logprob: -13.268364906311035
    7. ' if' → logprob: -13.643364906311035
    8. ':
' → logprob: -13.893364906311035
    9. ',' → logprob: -14.268364906311035
    10. '[' → logprob: -14.393364906311035

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17281615734100342
    2. ' if' → logprob: -1.9228161573410034
    3. '    ' → logprob: -5.297816276550293
    4. '   ' → logprob: -5.672816276550293
    5. '<|end|>' → logprob: -6.422816276550293
    6. ' ' → logprob: -7.047816276550293
    7. '        ' → logprob: -7.672816276550293
    8. 'if' → logprob: -7.922816276550293
    9. '	if' → logprob: -9.047816276550293
    10. ',' → logprob: -9.172816276550293

Token 291: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.511391282081604
    2. 'if' → logprob: -1.136391282081604
    3. '   ' → logprob: -3.2613911628723145
    4. '       ' → logprob: -4.0113911628723145
    5. '    ' → logprob: -4.1363911628723145
    6. '        ' → logprob: -5.8863911628723145
    7. 'while' (adapté à ' while') → logprob: -6.7613911628723145
    8. ' while' → logprob: -7.0113911628723145
    9. '<|end|>' → logprob: -7.0113911628723145
    10. '	if' → logprob: -8.386391639709473

Token 292: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2740175127983093
    2. 'val' → logprob: -1.524017572402954
    3. ' current' → logprob: -3.899017572402954
    4. ' val' → logprob: -6.524017333984375
    5. '   ' → logprob: -10.274017333984375
    6. '(current' → logprob: -10.774017333984375
    7. ' ' → logprob: -11.024017333984375
    8. 'not' → logprob: -11.149017333984375
    9. '  ' → logprob: -12.024017333984375
    10. '(val' → logprob: -12.399017333984375

Token 293: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -8.0536883615423e-05
    2. '_' → logprob: -9.500080108642578
    3. '_val' → logprob: -12.750080108642578
    4. 'val' → logprob: -13.250080108642578
    5. '_
' → logprob: -15.500080108642578
    6. '<' → logprob: -15.625080108642578
    7. '
' → logprob: -16.625080108642578
    8. 'd' → logprob: -16.750080108642578
    9. '_a' → logprob: -16.750080108642578
    10. '\' → logprob: -17.000080108642578

Token 294: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.1710959672927856
    2. '<' → logprob: -1.2960959672927856
    3. '>=' → logprob: -1.4210959672927856
    4. ' <' → logprob: -1.9210959672927856
    5. '>' → logprob: -4.046095848083496
    6. ' >' → logprob: -4.671095848083496
    7. ' ' → logprob: -7.421095848083496
    8. '<=' → logprob: -7.671095848083496
    9. ' <=' → logprob: -7.796095848083496
    10. '<int' → logprob: -9.921095848083496

Token 295: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.03365768492221832
    2. ' val' → logprob: -3.4086577892303467
    3. '	val' → logprob: -12.783658027648926
    4. '(val' → logprob: -13.533658027648926
    5. ' ' → logprob: -13.783658027648926
    6. '=' → logprob: -13.908658027648926
    7. '   ' → logprob: -14.158658027648926
    8. 'int' → logprob: -14.221158027648926
    9. 'Val' → logprob: -14.346158027648926
    10. 'System' → logprob: -14.408658027648926

Token 296: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36300185322761536
    2. ':
' → logprob: -1.363001823425293
    3. ' and' → logprob: -3.113001823425293
    4. 'and' → logprob: -5.613001823425293
    5. ' or' → logprob: -8.738001823425293
    6. '           ' → logprob: -9.488001823425293
    7. '   ' → logprob: -10.363001823425293
    8. ':
' → logprob: -10.363001823425293
    9. '       ' → logprob: -10.488001823425293
    10. ':

' → logprob: -10.863001823425293

Token 297: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3802538216114044
    2. 'current' → logprob: -2.005253791809082
    3. ' current' → logprob: -2.130253791809082
    4. '       ' → logprob: -3.130253791809082
    5. '           ' → logprob: -4.130253791809082
    6. '
' → logprob: -6.755253791809082
    7. 'break' → logprob: -7.880253791809082
    8. ' break' → logprob: -8.255253791809082
    9. '    
' → logprob: -8.505253791809082
    10. '	current' → logprob: -8.755253791809082

Token 298: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2487173229455948
    2. '   ' → logprob: -2.2487173080444336
    3. 'current' → logprob: -2.9987173080444336
    4. 'if' (adapté à ' if') → logprob: -3.2487173080444336
    5. 'try' → logprob: -4.998717308044434
    6. 'd' → logprob: -5.498717308044434
    7. 'break' → logprob: -5.498717308044434
    8. '       ' → logprob: -6.248717308044434
    9. 'val' → logprob: -6.373717308044434
    10. 'answer' → logprob: -6.623717308044434

Token 299: ' not' (ID: 625)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'some' → logprob: -0.7746700048446655
    2. 'current' → logprob: -1.5246700048446655
    3. 'not' → logprob: -1.8996700048446655
    4. 'H' → logprob: -2.024670124053955
    5. 'len' → logprob: -4.274670124053955
    6. 'p' → logprob: -4.649670124053955
    7. 'val' → logprob: -4.774670124053955
    8. ' not' → logprob: -6.274670124053955
    9. 'push' → logprob: -6.649670124053955
    10. 'Days' → logprob: -7.274670124053955

Token 300: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0630066990852356
    2. 'some' → logprob: -3.063006639480591
    3. ' H' → logprob: -4.93800687789917
    4. 'current' → logprob: -6.18800687789917
    5. '(H' → logprob: -6.93800687789917
    6. ' some' → logprob: -7.18800687789917
    7. 'push' → logprob: -7.31300687789917
    8. 'val' → logprob: -7.43800687789917
    9. 'len' → logprob: -7.56300687789917
    10. 'p' → logprob: -8.813006401062012

Token 301: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.01818096451461315
    2. '_del' → logprob: -4.018180847167969
    3. 'add' → logprob: -10.893180847167969
    4. 'del' → logprob: -11.893180847167969
    5. '_d' → logprob: -14.268180847167969
    6. '_' → logprob: -14.518180847167969
    7. '_added' → logprob: -14.518180847167969
    8. '_delete' → logprob: -14.768180847167969
    9. 'Add' → logprob: -14.893180847167969
    10. '_Add' → logprob: -15.018180847167969

Token 302: '[' (ID: 58)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03946603089570999
    2. '[' → logprob: -4.16446590423584
    3. ':' → logprob: -4.28946590423584
    4. 'or' → logprob: -4.78946590423584
    5. ' and' → logprob: -7.28946590423584
    6. ':
' → logprob: -8.16446590423584
    7. 'and' → logprob: -9.91446590423584
    8. '[-' → logprob: -10.41446590423584
    9. '==' → logprob: -10.91446590423584
    10. ' ' → logprob: -11.28946590423584

Token 303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008569772355258465
    2. '-' → logprob: -5.008569717407227
    3. ':' → logprob: -6.883569717407227
    4. ' ' → logprob: -8.758569717407227
    5. '1' → logprob: -8.883569717407227
    6. '
' → logprob: -9.133569717407227
    7. ' -' → logprob: -9.383569717407227
    8. '-M' → logprob: -9.508569717407227
    9. ':]' → logprob: -10.133569717407227
    10. '::-' → logprob: -10.133569717407227

Token 304: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21231196820735931
    2. ']>' → logprob: -2.7123119831085205
    3. ']<' → logprob: -2.9623119831085205
    4. ']>=' → logprob: -4.212311744689941
    5. '<' → logprob: -4.337311744689941
    6. ' <' → logprob: -4.462311744689941
    7. '>' → logprob: -4.462311744689941
    8. ' ]' → logprob: -5.087311744689941
    9. ']<=' → logprob: -5.837311744689941
    10. ']:' → logprob: -5.837311744689941

Token 305: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6954997181892395
    2. ' <' → logprob: -1.6954996585845947
    3. '>' → logprob: -2.5704996585845947
    4. '<' → logprob: -3.0704996585845947
    5. ' >' → logprob: -3.0704996585845947
    6. '<=' → logprob: -3.4454996585845947
    7. ' <=' → logprob: -3.5704996585845947
    8. '>=' → logprob: -3.5704996585845947
    9. '==' → logprob: -3.6954996585845947
    10. ' >=' → logprob: -3.6954996585845947

Token 306: ' MY' (ID: 30096)
  Prédit: 'MY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MY' → logprob: -0.028731925413012505
    2. 'current' → logprob: -3.7787318229675293
    3. 'H' → logprob: -5.653731822967529
    4. ' MY' → logprob: -6.528731822967529
    5. 'float' → logprob: -8.278732299804688
    6. ' current' → logprob: -8.778732299804688
    7. 'MH' → logprob: -10.153732299804688
    8. 'My' → logprob: -11.153732299804688
    9. '
' → logprob: -11.903732299804688
    10. 'my' → logprob: -12.028732299804688

Token 307: '_INFINITY' (ID: 188542)
  Prédit: '_INFINITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INFINITY' → logprob: -1.3856492842023727e-06
    2. '_IN' → logprob: -13.625000953674316
    3. 'Infinity' → logprob: -17.500001907348633
    4. 'IN' → logprob: -17.750001907348633
    5. '_INF' → logprob: -18.750001907348633
    6. '.infinity' → logprob: -19.500001907348633
    7. 'FINITY' → logprob: -21.125001907348633
    8. '_' → logprob: -21.375001907348633
    9. 'in' → logprob: -21.625001907348633
    10. '_INTR' → logprob: -22.000001907348633

Token 308: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10939312726259232
    2. ':
' → logprob: -2.3593931198120117
    3. ' and' → logprob: -4.734393119812012
    4. 'and' → logprob: -9.109393119812012
    5. ' :' → logprob: -9.859393119812012
    6. '):' → logprob: -10.109393119812012
    7. ':

' → logprob: -10.109393119812012
    8. ' or' → logprob: -10.359393119812012
    9. ' :
' → logprob: -10.859393119812012
    10. ')' → logprob: -10.984393119812012

Token 309: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2321820855140686
    2. ':
' → logprob: -1.8571820259094238
    3. ':' → logprob: -3.607182025909424
    4. ',' → logprob: -4.607182025909424
    5. '           ' → logprob: -5.732182025909424
    6. ')' → logprob: -5.982182025909424
    7. '):
' → logprob: -6.232182025909424
    8. ' and' → logprob: -6.857182025909424
    9. ' :
' → logprob: -6.857182025909424
    10. '):' → logprob: -7.482182025909424

Token 310: ' print' (ID: 2123)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -1.135196328163147
    2. ' print' → logprob: -1.260196328163147
    3. 'print' (adapté à ' print') → logprob: -1.885196328163147
    4. '               ' → logprob: -2.3851962089538574
    5. ' current' → logprob: -2.8851962089538574
    6. 'break' → logprob: -3.0101962089538574
    7. 'current' → logprob: -4.010196208953857
    8. '                   ' → logprob: -5.385196208953857
    9. ' result' → logprob: -5.510196208953857
    10. ' ans' → logprob: -6.135196208953857

Token 311: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.03045538440346718
    2. '(' → logprob: -3.5304553508758545
    3. '(min' → logprob: -8.280455589294434
    4. '('' → logprob: -9.030455589294434
    5. '(int' → logprob: -9.030455589294434
    6. '(-' → logprob: -9.530455589294434
    7. '(max' → logprob: -10.155455589294434
    8. ' (' → logprob: -10.280455589294434
    9. '((' → logprob: -11.405455589294434
    10. '(abs' → logprob: -11.530455589294434

Token 312: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -1.9862216504407115e-05
    2. '_del' → logprob: -11.125020027160645
    3. 'add' → logprob: -12.250020027160645
    4. '_ad' → logprob: -17.000019073486328
    5. '_added' → logprob: -17.000019073486328
    6. '_' → logprob: -17.500019073486328
    7. 'del' → logprob: -17.500019073486328
    8. '_push' → logprob: -17.625019073486328
    9. '[' → logprob: -17.750019073486328
    10. '_pop' → logprob: -17.875019073486328

Token 313: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5690089639974758e-05
    2. '0' → logprob: -12.000015258789062
    3. ')' → logprob: -12.250015258789062
    4. '
' → logprob: -13.875015258789062
    5. ' [' → logprob: -13.875015258789062
    6. ',' → logprob: -14.500015258789062
    7. ')[' → logprob: -14.625015258789062
    8. '   ' → logprob: -14.875015258789062
    9. '[
' → logprob: -15.000015258789062
    10. ')
' → logprob: -15.000015258789062

Token 314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.537868779967539e-06
    2. '[' → logprob: -12.500008583068848
    3. ' ' → logprob: -12.500008583068848
    4. '   ' → logprob: -14.375008583068848
    5. '
' → logprob: -16.00000762939453
    6. '```' → logprob: -16.37500762939453
    7. '  ' → logprob: -16.62500762939453
    8. '﻿' → logprob: -17.50000762939453
    9. '    ' → logprob: -17.81250762939453
    10. '1' → logprob: -18.00000762939453

Token 315: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5236338973045349
    2. ')
' → logprob: -0.8986338973045349
    3. ' )' → logprob: -8.89863395690918
    4. ' )
' → logprob: -9.14863395690918
    5. '))' → logprob: -9.27363395690918
    6. ')
' → logprob: -9.77363395690918
    7. '))
' → logprob: -9.89863395690918
    8. '               ' → logprob: -10.39863395690918
    9. ')`
' → logprob: -11.77363395690918
    10. '           ' → logprob: -12.14863395690918

Token 316: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04837862774729729
    2. '            
' → logprob: -3.5483787059783936
    3. '               ' → logprob: -4.5483784675598145
    4. '                
' → logprob: -5.1733784675598145
    5. 'else' → logprob: -7.6733784675598145
    6. 'current' → logprob: -7.9233784675598145
    7. '    
' → logprob: -8.048378944396973
    8. ',' → logprob: -8.298378944396973
    9. ')' → logprob: -9.173378944396973
    10. '
' → logprob: -9.173378944396973

Token 317: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3565041422843933
    2. 'current' → logprob: -1.356504201889038
    3. 'else' (adapté à ' else') → logprob: -3.731504201889038
    4. '
' → logprob: -4.606503963470459
    5. ' current' → logprob: -5.731503963470459
    6. '       ' → logprob: -6.106503963470459
    7. ' else' → logprob: -7.231503963470459
    8. '            
' → logprob: -7.356503963470459
    9. 'break' → logprob: -7.481503963470459
    10. '               ' → logprob: -7.606503963470459

Token 318: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.042274389415979385
    2. ':
' → logprob: -3.4172744750976562
    3. '           ' → logprob: -5.542274475097656
    4. ':' → logprob: -5.667274475097656
    5. ',' → logprob: -7.042274475097656
    6. 'print' → logprob: -9.292274475097656
    7. '	           ' → logprob: -9.792274475097656
    8. ' :
' → logprob: -10.417274475097656
    9. '):
' → logprob: -10.542274475097656
    10. ':

' → logprob: -11.042274475097656

Token 319: '               ' (ID: 506)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08749794214963913
    2. '           ' → logprob: -2.5874979496002197
    3. ' print' → logprob: -4.962497711181641
    4. '               ' → logprob: -6.462497711181641
    5. '   ' → logprob: -11.83749771118164
    6. '       ' → logprob: -13.08749771118164
    7. '	print' → logprob: -13.46249771118164
    8. 'break' → logprob: -13.46249771118164
    9. ' ' → logprob: -13.83749771118164
    10. 'pass' → logprob: -14.96249771118164

Token 320: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005662570474669337
    2. ' print' → logprob: -7.875566482543945
    3. '           ' → logprob: -8.625566482543945
    4. '   ' → logprob: -12.750566482543945
    5. 'pr' → logprob: -13.875566482543945
    6. '-' → logprob: -14.250566482543945
    7. 'prin' → logprob: -14.750566482543945
    8. '	print' → logprob: -15.000566482543945
    9. '       ' → logprob: -15.000566482543945
    10. '               ' → logprob: -15.250566482543945

Token 321: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.25788915157318115
    2. '-' → logprob: -1.8828891515731812
    3. '(' → logprob: -2.7578892707824707
    4. '0' → logprob: -5.257889270782471
    5. '(M' → logprob: -5.882889270782471
    6. '-M' → logprob: -6.882889270782471
    7. '("' → logprob: -7.007889270782471
    8. '('' → logprob: -7.132889270782471
    9. '(current' → logprob: -8.507888793945312
    10. '("-' → logprob: -8.632888793945312

Token 322: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '11' → logprob: -15.875000953674316
    3. ' ' → logprob: -16.125
    4. 'MY' → logprob: -16.625
    5. '2' → logprob: -16.75
    6. '100' → logprob: -17.25
    7. '

' → logprob: -17.5
    8. '
' → logprob: -17.75
    9. '-' → logprob: -18.0
    10. '10' → logprob: -18.1875

Token 323: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3900316655635834
    2. ')' → logprob: -1.1400316953659058
    3. '           ' → logprob: -5.765031814575195
    4. ' )
' → logprob: -11.890031814575195
    5. ')

' → logprob: -12.140031814575195
    6. ')
' → logprob: -12.765031814575195
    7. ' )' → logprob: -13.140031814575195
    8. ')`
' → logprob: -13.890031814575195
    9. '       ' → logprob: -14.265031814575195
    10. '               ' → logprob: -14.390031814575195

Token 324: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056356627494096756
    2. 'current' → logprob: -2.93135666847229
    3. ' current' → logprob: -6.931356430053711
    4. '
' → logprob: -8.931356430053711
    5. '               ' → logprob: -9.056356430053711
    6. '       ' → logprob: -9.056356430053711
    7. '            
' → logprob: -9.931356430053711
    8. 'break' → logprob: -9.931356430053711
    9. ',current' → logprob: -11.806356430053711
    10. '   ' → logprob: -12.056356430053711

Token 325: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.0022319748532027006
    2. ' current' → logprob: -6.627232074737549
    3. '           ' → logprob: -7.877232074737549
    4. 'try' → logprob: -8.37723159790039
    5. '
' → logprob: -8.62723159790039
    6. '   ' → logprob: -9.75223159790039
    7. 'break' → logprob: -10.00223159790039
    8. '            
' → logprob: -12.50223159790039
    9. '       ' → logprob: -13.12723159790039
    10. '	current' → logprob: -13.50223159790039

Token 326: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.2113979209971149e-05
    2. '_' → logprob: -11.375012397766113
    3. 'd' → logprob: -15.375012397766113
    4. '_=' → logprob: -16.125011444091797
    5. '_
' → logprob: -16.500011444091797
    6. '\' → logprob: -17.625011444091797
    7. '=' → logprob: -18.000011444091797
    8. '_token' → logprob: -18.125011444091797
    9. '=_' → logprob: -18.500011444091797
    10. '_val' → logprob: -18.500011444091797

Token 327: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02977270446717739
    2. ' =' → logprob: -3.5297727584838867
    3. '+=' → logprob: -10.904772758483887
    4. ' +=' → logprob: -12.654772758483887
    5. '.=' → logprob: -15.279772758483887
    6. ',' → logprob: -15.529772758483887
    7. '*=' → logprob: -16.40477180480957
    8. ' next' → logprob: -16.65477180480957
    9. ' ' → logprob: -16.90477180480957
    10. '_=' → logprob: -17.52977180480957

Token 328: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.005234121344983578
    2. ' next' → logprob: -5.255234241485596
    3. '(next' → logprob: -16.255233764648438
    4. '	next' → logprob: -16.880233764648438
    5. '   ' → logprob: -17.005233764648438
    6. '[next' → logprob: -17.630233764648438
    7. ',next' → logprob: -18.880233764648438
    8. '
' → logprob: -19.005233764648438
    9. '.next' → logprob: -19.130233764648438
    10. '_next' → logprob: -20.130233764648438

Token 329: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.00026205103495158255
    2. 'Days' → logprob: -8.250262260437012
    3. 'D' → logprob: -14.250262260437012
    4. '(
' → logprob: -16.875261306762695
    5. 'Day' → logprob: -17.250261306762695
    6. '(' → logprob: -17.500261306762695
    7. '	D' → logprob: -18.750261306762695
    8. ' Days' → logprob: -19.125261306762695
    9. '(Dense' → logprob: -19.250261306762695
    10. '
' → logprob: -19.375261306762695

Token 330: 'ays' (ID: 1044)
  Prédit: 'ays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ays' → logprob: -0.0004375830467324704
    2. 'Days' → logprob: -7.7504377365112305
    3. 'ys' → logprob: -13.12543773651123
    4. '>' → logprob: -13.87543773651123
    5. 'ay' → logprob: -14.25043773651123
    6. '```' → logprob: -14.62543773651123
    7. 'AYS' → logprob: -14.62543773651123
    8. ' Days' → logprob: -15.00043773651123
    9. 'eys' → logprob: -15.50043773651123
    10. 'days' → logprob: -15.50043773651123

Token 331: 'Iter' (ID: 11168)
  Prédit: 'Iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iter' → logprob: -1.9361264946837764e-07
    2. 'iter' → logprob: -16.625
    3. 'It' → logprob: -17.75
    4. ')' → logprob: -18.0
    5. 'Iterator' → logprob: -18.625
    6. ' Iter' → logprob: -19.625
    7. '   ' → logprob: -20.125
    8. '(' → logprob: -20.375
    9. 'Inter' → logprob: -20.75
    10. '_iter' → logprob: -20.75

Token 332: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.176947600673884e-05
    2. ' )' → logprob: -11.625021934509277
    3. ')
' → logprob: -12.000021934509277
    4. '<|end|>' → logprob: -12.250021934509277
    5. ')return' → logprob: -14.875021934509277
    6. ',' → logprob: -15.125021934509277
    7. '   ' → logprob: -15.375021934509277
    8. '())' → logprob: -15.500021934509277
    9. '       ' → logprob: -15.750021934509277
    10. '))' → logprob: -16.00002098083496

Token 333: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0074877738952637
    2. ',' → logprob: -1.7574877738952637
    3. '   ' → logprob: -1.7574877738952637
    4. '<|end|>' → logprob: -2.2574877738952637
    5. '       ' → logprob: -3.2574877738952637
    6. '    ' → logprob: -3.3824877738952637
    7. ' ' → logprob: -3.6324877738952637
    8. ' )' → logprob: -3.7574877738952637
    9. '(' → logprob: -4.757487773895264
    10. '#' → logprob: -4.882487773895264

Token 334: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2586551010608673
    2. 'if' (adapté à ' if') → logprob: -2.633655071258545
    3. '   ' → logprob: -3.133655071258545
    4. '       ' → logprob: -3.383655071258545
    5. '    ' → logprob: -3.508655071258545
    6. 'push' → logprob: -4.633655071258545
    7. '        ' → logprob: -5.133655071258545
    8. ' push' → logprob: -5.258655071258545
    9. ' H' → logprob: -5.508655071258545
    10. ')' → logprob: -5.508655071258545

Token 335: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.01393712405115366
    2. 'some' → logprob: -4.888936996459961
    3. ' current' → logprob: -6.013936996459961
    4. 'H' → logprob: -6.388936996459961
    5. 'not' → logprob: -6.763936996459961
    6. 'val' → logprob: -7.263936996459961
    7. 'False' → logprob: -9.138936996459961
    8. '0' → logprob: -9.763936996459961
    9. ' not' → logprob: -10.138936996459961
    10. '(current' → logprob: -10.388936996459961

Token 336: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -4.8232690460281447e-05
    2. '_' → logprob: -10.125048637390137
    3. '==' → logprob: -12.375048637390137
    4. 'd' → logprob: -13.250048637390137
    5. '_val' → logprob: -14.750048637390137
    6. ' ==' → logprob: -15.000048637390137
    7. '_x' → logprob: -15.500048637390137
    8. ''_' → logprob: -15.875048637390137
    9. '```' → logprob: -16.37504768371582
    10. '_s' → logprob: -16.62504768371582

Token 337: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.41448140144348145
    2. ' >=' → logprob: -1.6644814014434814
    3. '>' → logprob: -2.2894814014434814
    4. ' ==' → logprob: -3.6644814014434814
    5. '>=' → logprob: -4.164481163024902
    6. '==' → logprob: -5.789481163024902
    7. ' <' → logprob: -6.164481163024902
    8. ' is' → logprob: -6.664481163024902
    9. ' <=' → logprob: -7.289481163024902
    10. '<' → logprob: -8.164481163024902

Token 338: ' MY' (ID: 30096)
  Prédit: 'MY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MY' → logprob: -0.00022272850037552416
    2. ' MY' → logprob: -8.500223159790039
    3. 'int' → logprob: -11.000223159790039
    4. '   ' → logprob: -13.500223159790039
    5. ' ' → logprob: -14.375223159790039
    6. 'My' → logprob: -15.875223159790039
    7. 'MH' → logprob: -16.62522315979004
    8. '-M' → logprob: -16.75022315979004
    9. '_MY' → logprob: -16.87522315979004
    10. '  ' → logprob: -17.00022315979004

Token 339: '_INFINITY' (ID: 188542)
  Prédit: '_INFINITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INFINITY' → logprob: -3.650518920039758e-06
    2. 'Infinity' → logprob: -13.125003814697266
    3. '_IN' → logprob: -13.500003814697266
    4. 'IN' → logprob: -15.625003814697266
    5. '.infinity' → logprob: -18.625003814697266
    6. '_INF' → logprob: -19.625003814697266
    7. 'FINITY' → logprob: -20.000003814697266
    8. '_INTR' → logprob: -20.375003814697266
    9. '∞' → logprob: -20.500003814697266
    10. '_INCREMENT' → logprob: -20.875003814697266

Token 340: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10084325820207596
    2. ':' → logprob: -2.3508431911468506
    3. '       ' → logprob: -7.97584342956543
    4. '):
' → logprob: -9.35084342956543
    5. ',' → logprob: -9.72584342956543
    6. '               ' → logprob: -9.85084342956543
    7. '           ' → logprob: -10.35084342956543
    8. ' or' → logprob: -11.10084342956543
    9. ' and' → logprob: -11.35084342956543
    10. ':return' → logprob: -11.72584342956543

Token 341: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2031109780073166
    2. 'some' → logprob: -2.453110933303833
    3. '           ' → logprob: -2.953110933303833
    4. ' some' → logprob: -3.578110933303833
    5. '       ' → logprob: -4.328111171722412
    6. 'break' → logprob: -5.953111171722412
    7. ' break' → logprob: -7.453111171722412
    8. '   ' → logprob: -7.578111171722412
    9. ':' → logprob: -8.453110694885254
    10. '
' → logprob: -8.578110694885254

Token 342: ' some' (ID: 1236)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'some' (adapté à ' some') → logprob: -0.010778502561151981
    2. '
' → logprob: -5.385778427124023
    3. 'break' → logprob: -5.635778427124023
    4. ' some' → logprob: -6.260778427124023
    5. '   ' → logprob: -7.885778427124023
    6. '               ' → logprob: -9.135778427124023
    7. '           ' → logprob: -9.635778427124023
    8. ' break' → logprob: -9.760778427124023
    9. '                   ' → logprob: -10.760778427124023
    10. '    ' → logprob: -12.260778427124023

Token 343: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -1.9361264946837764e-07
    2. 'flag' → logprob: -16.75
    3. '_f' → logprob: -16.875
    4. '_FLAG' → logprob: -17.0
    5. '_' → logprob: -18.375
    6. 'Flag' → logprob: -18.5
    7. '_flags' → logprob: -19.125
    8. ' _' → logprob: -20.0
    9. '__' → logprob: -20.625
    10. '_fl' → logprob: -20.875

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19120751321315765
    2. '+=' → logprob: -1.9412075281143188
    3. ' =' → logprob: -3.6912074089050293
    4. ' +=' → logprob: -5.191207408905029
    5. '   ' → logprob: -14.691207885742188
    6. ' ' → logprob: -15.191207885742188
    7. '+' → logprob: -15.941207885742188
    8. '1' → logprob: -16.941207885742188
    9. '=True' → logprob: -17.066207885742188
    10. '  ' → logprob: -17.191207885742188

Token 345: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00048358101048506796
    2. ' ' → logprob: -8.500483512878418
    3. '2' → logprob: -8.625483512878418
    4. '42' → logprob: -9.500483512878418
    5. '   ' → logprob: -11.500483512878418
    6. 'True' → logprob: -12.250483512878418
    7. '10' → logprob: -12.875483512878418
    8. '7' → logprob: -13.125483512878418
    9. '  ' → logprob: -13.500483512878418
    10. '    ' → logprob: -13.875483512878418

Token 346: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006323355250060558
    2. '2' → logprob: -5.131323337554932
    3. '42' → logprob: -8.38132381439209
    4. '10' → logprob: -9.25632381439209
    5. '5' → logprob: -11.13132381439209
    6. '100' → logprob: -11.13132381439209
    7. ' ' → logprob: -11.38132381439209
    8. '3' → logprob: -11.50632381439209
    9. '7' → logprob: -12.63132381439209
    10. '424' → logprob: -13.00632381439209

Token 347: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.441083699464798
    2. '       ' → logprob: -1.3160836696624756
    3. '           ' → logprob: -2.4410836696624756
    4. 'import' → logprob: -7.941083908081055
    5. '                   ' → logprob: -8.316083908081055
    6. '   ' → logprob: -8.316083908081055
    7. 'break' → logprob: -8.566083908081055
    8. ',' → logprob: -9.566083908081055
    9. ' break' → logprob: -9.816083908081055
    10. ' if' → logprob: -10.191083908081055

Token 348: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3378799855709076
    2. '<|end|>' → logprob: -1.58788001537323
    3. '           ' → logprob: -3.0878798961639404
    4. '        ' → logprob: -4.5878801345825195
    5. '   ' → logprob: -5.2128801345825195
    6. '               ' → logprob: -5.8378801345825195
    7. '
' → logprob: -6.2128801345825195
    8. ')' → logprob: -6.3378801345825195
    9. '<|end|>' → logprob: -6.3378801345825195
    10. ',' → logprob: -6.7128801345825195

Token 349: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06798738241195679
    2. ' break' → logprob: -3.1929874420166016
    3. '               ' → logprob: -3.9429874420166016
    4. '           ' → logprob: -5.442987442016602
    5. '       ' → logprob: -7.192987442016602
    6. '	break' → logprob: -8.942987442016602
    7. '   ' → logprob: -9.942987442016602
    8. '                   ' → logprob: -10.817987442016602
    9. '
' → logprob: -12.942987442016602
    10. '```' → logprob: -13.567987442016602

Token 350: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020028717815876007
    2. '<|end|>' → logprob: -4.270028591156006
    3. '        ' → logprob: -6.145028591156006
    4. 'else' → logprob: -7.145028591156006
    5. '        
' → logprob: -7.270028591156006
    6. 'if' → logprob: -7.895028591156006
    7. ' if' → logprob: -8.020029067993164
    8. ',' → logprob: -8.020029067993164
    9. '   ' → logprob: -8.645029067993164
    10. '           ' → logprob: -9.020029067993164

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5769479274749756
    2. ' if' → logprob: -1.4519479274749756
    3. '   ' → logprob: -2.2019479274749756
    4. '<|end|>' → logprob: -3.0769479274749756
    5. 'if' → logprob: -3.9519479274749756
    6. '    ' → logprob: -5.701948165893555
    7. ',' → logprob: -5.701948165893555
    8. ')' → logprob: -5.701948165893555
    9. '        ' → logprob: -5.826948165893555
    10. '           ' → logprob: -6.201948165893555

Token 352: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2072363644838333
    2. 'if' (adapté à ' if') → logprob: -1.957236409187317
    3. ' if' → logprob: -3.3322362899780273
    4. '   ' → logprob: -4.707236289978027
    5. '	if' → logprob: -7.957236289978027
    6. '    ' → logprob: -8.582236289978027
    7. '           ' → logprob: -8.707236289978027
    8. '        
' → logprob: -8.957236289978027
    9. '	' → logprob: -9.957236289978027
    10. '        ' → logprob: -10.082236289978027

Token 353: ' entry' (ID: 7251)
  Prédit: ' entry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entry' → logprob: -0.002130633220076561
    2. 'entry' → logprob: -6.752130508422852
    3. ' not' → logprob: -7.877130508422852
    4. ' val' → logprob: -8.002130508422852
    5. '(entry' → logprob: -9.377130508422852
    6. ' ' → logprob: -9.627130508422852
    7. ' some' → logprob: -10.252130508422852
    8. '	entry' → logprob: -10.877130508422852
    9. '  ' → logprob: -11.502130508422852
    10. ' (' → logprob: -12.127130508422852

Token 354: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11288812011480331
    2. ' ==' → logprob: -2.2378880977630615
    3. '==
' → logprob: -10.98788833618164
    4. ':' → logprob: -11.36288833618164
    5. '[' → logprob: -11.48788833618164
    6. ' ' → logprob: -11.98788833618164
    7. ')==' → logprob: -12.23788833618164
    8. '0' → logprob: -12.48788833618164
    9. ']==' → logprob: -12.98788833618164
    10. '===' → logprob: -13.11288833618164

Token 355: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7560927271842957
    2. '           ' → logprob: -0.8810927271842957
    3. ' push' → logprob: -3.0060927867889404
    4. 'push' → logprob: -3.0060927867889404
    5. '   ' → logprob: -4.131092548370361
    6. '.push' → logprob: -7.756092548370361
    7. '	push' → logprob: -8.00609302520752
    8. ' ' → logprob: -9.50609302520752
    9. '               ' → logprob: -9.63109302520752
    10. '  ' → logprob: -9.88109302520752

Token 356: ' push' (ID: 9349)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' (adapté à ' push') → logprob: -0.026035284623503685
    2. '   ' → logprob: -4.276035308837891
    3. ' push' → logprob: -4.526035308837891
    4. '       ' → logprob: -7.401035308837891
    5. 'import' → logprob: -8.65103530883789
    6. '	push' → logprob: -9.40103530883789
    7. 'he' → logprob: -9.65103530883789
    8. '  ' → logprob: -11.52603530883789
    9. ' ' → logprob: -11.90103530883789
    10. ' he' → logprob: -12.15103530883789

Token 357: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931799650192261
    2. '(H' → logprob: -0.6931799650192261
    3. '(y' → logprob: -10.943180084228516
    4. '(' → logprob: -11.818180084228516
    5. 'py' → logprob: -12.443180084228516
    6. '   ' → logprob: -14.318180084228516
    7. ' (' → logprob: -14.943180084228516
    8. 'H' → logprob: -14.943180084228516
    9. 'ys' → logprob: -15.318180084228516
    10. 'yl' → logprob: -15.568180084228516

Token 358: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.25001335144043
    3. ' (' → logprob: -18.00001335144043
    4. 'H' → logprob: -18.37501335144043
    5. '(h' → logprob: -20.00001335144043
    6. '(
' → logprob: -20.25001335144043
    7. '((' → logprob: -20.62501335144043
    8. '(M' → logprob: -21.12501335144043
    9. '(A' → logprob: -22.37501335144043
    10. '(K' → logprob: -22.37501335144043

Token 359: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.0009143244242295623
    2. 'add' → logprob: -7.000914096832275
    3. 'Add' → logprob: -13.125914573669434
    4. '_del' → logprob: -15.250914573669434
    5. '(add' → logprob: -15.500914573669434
    6. '_ad' → logprob: -16.000913619995117
    7. '_Add' → logprob: -16.250913619995117
    8. ' add' → logprob: -16.250913619995117
    9. ')add' → logprob: -16.875913619995117
    10. '_ADD' → logprob: -17.125913619995117

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20145007967948914
    2. ',val' → logprob: -1.7014501094818115
    3. ' ,' → logprob: -10.32645034790039
    4. '(val' → logprob: -13.45145034790039
    5. '[val' → logprob: -14.32645034790039
    6. ',v' → logprob: -14.70145034790039
    7. 'val' → logprob: -15.07645034790039
    8. ' val' → logprob: -15.32645034790039
    9. ',value' → logprob: -15.70145034790039
    10. '(' → logprob: -15.82645034790039

Token 361: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.20142698287963867
    2. ' val' → logprob: -1.7014269828796387
    3. '   ' → logprob: -12.701427459716797
    4. '(val' → logprob: -12.826427459716797
    5. '	val' → logprob: -12.951427459716797
    6. '[val' → logprob: -13.451427459716797
    7. '-val' → logprob: -13.451427459716797
    8. ' ' → logprob: -14.451427459716797
    9. ')' → logprob: -14.576427459716797
    10. ',val' → logprob: -14.951427459716797

Token 362: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4617256056226324e-05
    2. ')' → logprob: -11.375014305114746
    3. '+' → logprob: -14.125014305114746
    4. '-' → logprob: -14.625014305114746
    5. 'val' → logprob: -14.750014305114746
    6. '
' → logprob: -15.000014305114746
    7. ' -' → logprob: -15.500014305114746
    8. '+x' → logprob: -15.625014305114746
    9. '```' → logprob: -15.625014305114746
    10. ' +' → logprob: -16.375015258789062

Token 363: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759934782981873
    2. ')
' → logprob: -0.8259934782981873
    3. ')
' → logprob: -9.950993537902832
    4. ' )
' → logprob: -13.075993537902832
    5. ')

' → logprob: -13.325993537902832
    6. ' )' → logprob: -13.700993537902832
    7. '       ' → logprob: -14.575993537902832
    8. '   ' → logprob: -14.950993537902832
    9. '           ' → logprob: -15.075993537902832
    10. ')`
' → logprob: -15.825993537902832

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015516664832830429
    2. 'else' → logprob: -4.265516757965088
    3. ' else' → logprob: -6.640516757965088
    4. '<|end|>' → logprob: -10.76551628112793
    5. ')' → logprob: -11.51551628112793
    6. ',' → logprob: -12.51551628112793
    7. '   ' → logprob: -12.89051628112793
    8. '           ' → logprob: -13.01551628112793
    9. '	else' → logprob: -14.26551628112793
    10. '>' → logprob: -14.26551628112793

Token 365: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2026575654745102
    2. '       ' → logprob: -1.7026575803756714
    3. ' else' → logprob: -6.702657699584961
    4. '   ' → logprob: -11.327657699584961
    5. '	else' → logprob: -13.202657699584961
    6. 'elif' → logprob: -14.077657699584961
    7. '```' → logprob: -14.952657699584961
    8. '           ' → logprob: -15.577657699584961
    9. '...' → logprob: -16.20265769958496
    10. '	' → logprob: -16.20265769958496

Token 366: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.152352437376976
    2. '           ' → logprob: -2.0273523330688477
    3. ':' → logprob: -5.902352333068848
    4. '   ' → logprob: -6.152352333068848
    5. 'push' → logprob: -6.402352333068848
    6. ' push' → logprob: -6.652352333068848
    7. ':
' → logprob: -6.777352333068848
    8. '
' → logprob: -8.652352333068848
    9. ',' → logprob: -9.277352333068848
    10. '	push' → logprob: -9.777352333068848

Token 367: '           ' (ID: 352)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.3088899850845337
    2. ' push' → logprob: -1.6838899850845337
    3. '       ' → logprob: -2.558889865875244
    4. '   ' → logprob: -6.058889865875244
    5. '	push' → logprob: -8.808890342712402
    6. 'p' → logprob: -9.433890342712402
    7. ' p' → logprob: -9.933890342712402
    8. '           ' → logprob: -10.558890342712402
    9. 'pop' → logprob: -10.683890342712402
    10. ' ' → logprob: -11.933890342712402

Token 368: ' push' (ID: 9349)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' (adapté à ' push') → logprob: -3.416665640543215e-05
    2. ' push' → logprob: -10.87503433227539
    3. '   ' → logprob: -11.87503433227539
    4. 'p' → logprob: -12.25003433227539
    5. '	push' → logprob: -13.25003433227539
    6. '
' → logprob: -14.62503433227539
    7. 'pus' → logprob: -15.37503433227539
    8. '       ' → logprob: -15.37503433227539
    9. '  ' → logprob: -15.87503433227539
    10. '(push' → logprob: -16.00003433227539

Token 369: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002214250387623906
    2. '(H' → logprob: -6.127214431762695
    3. 'p' → logprob: -10.502214431762695
    4. 'py' → logprob: -13.877214431762695
    5. 'H' → logprob: -14.877214431762695
    6. 'push' → logprob: -16.252214431762695
    7. 'pop' → logprob: -16.627214431762695
    8. 'del' → logprob: -17.252214431762695
    9. '(p' → logprob: -17.627214431762695
    10. ' y' → logprob: -17.752214431762695

Token 370: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.9361264946837764e-07
    2. 'H' → logprob: -16.5
    3. '(' → logprob: -16.875
    4. '(
' → logprob: -21.0
    5. '[' → logprob: -23.0
    6. '(h' → logprob: -23.25
    7. '(`' → logprob: -23.625
    8. ')' → logprob: -23.625
    9. ' (' → logprob: -24.125
    10. 'p' → logprob: -24.375

Token 371: '_del' (ID: 39544)
  Prédit: '_del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_del' → logprob: -0.008410204201936722
    2. 'del' → logprob: -4.8834099769592285
    3. 'Del' → logprob: -7.6334099769592285
    4. 'H' → logprob: -8.133410453796387
    5. '_delete' → logprob: -11.883410453796387
    6. 'DEL' → logprob: -11.883410453796387
    7. '	del' → logprob: -12.508410453796387
    8. '(del' → logprob: -13.258410453796387
    9. 'D' → logprob: -13.633410453796387
    10. '_de' → logprob: -13.883410453796387

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.551721889991313e-05
    2. ' ,' → logprob: -10.375065803527832
    3. ',H' → logprob: -10.375065803527832
    4. '(H' → logprob: -12.875065803527832
    5. ',
' → logprob: -15.750065803527832
    6. ')' → logprob: -16.875064849853516
    7. '(' → logprob: -17.000064849853516
    8. ',val' → logprob: -17.500064849853516
    9. 'H' → logprob: -17.750064849853516
    10. '   ' → logprob: -18.000064849853516

Token 373: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.06197104603052139
    2. ' val' → logprob: -2.8119709491729736
    3. '	val' → logprob: -13.811970710754395
    4. ' ' → logprob: -14.061970710754395
    5. '-val' → logprob: -14.186970710754395
    6. '   ' → logprob: -14.686970710754395
    7. '(val' → logprob: -15.436970710754395
    8. '  ' → logprob: -16.18697166442871
    9. '[val' → logprob: -16.18697166442871
    10. ',val' → logprob: -16.81197166442871

Token 374: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00017565040616318583
    2. 'val' → logprob: -8.750175476074219
    3. ' val' → logprob: -12.000175476074219
    4. '   ' → logprob: -12.875175476074219
    5. ')' → logprob: -13.000175476074219
    6. 'ax' → logprob: -13.875175476074219
    7. ',' → logprob: -13.875175476074219
    8. ' ' → logprob: -14.000175476074219
    9. ',val' → logprob: -14.000175476074219
    10. '  ' → logprob: -14.750175476074219

Token 375: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007176732178777456
    2. ')
' → logprob: -7.250717639923096
    3. ' )' → logprob: -12.125718116760254
    4. ')#' → logprob: -14.375718116760254
    5. ')

' → logprob: -14.750718116760254
    6. '<|end|>' → logprob: -15.125718116760254
    7. ')
' → logprob: -15.750718116760254
    8. '   ' → logprob: -15.750718116760254
    9. '))' → logprob: -16.250717163085938
    10. '),' → logprob: -16.375717163085938

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2686655819416046
    2. ' p' → logprob: -2.7686655521392822
    3. ' while' → logprob: -3.0186655521392822
    4. '<|end|>' → logprob: -3.0186655521392822
    5. ' if' → logprob: -3.8936655521392822
    6. '   ' → logprob: -4.268665790557861
    7. ' pop' → logprob: -4.768665790557861
    8. 'p' → logprob: -4.893665790557861
    9. 'while' → logprob: -4.893665790557861
    10. 'pop' → logprob: -5.393665790557861

Token 377: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -1.0733416080474854
    2. '   ' → logprob: -1.1983416080474854
    3. ' while' → logprob: -1.5733416080474854
    4. ' if' → logprob: -2.8233416080474854
    5. '       ' → logprob: -3.3233416080474854
    6. 'if' → logprob: -3.5733416080474854
    7. 'import' → logprob: -5.698341369628906
    8. 'p' → logprob: -5.948341369628906
    9. ' p' → logprob: -5.948341369628906
    10. 'from' → logprob: -6.198341369628906

Token 378: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.01606862246990204
    2. ' H' → logprob: -4.141068458557129
    3. '   ' → logprob: -10.516068458557129
    4. ' ' → logprob: -12.516068458557129
    5. 'len' → logprob: -13.766068458557129
    6. '(H' → logprob: -14.016068458557129
    7. '  ' → logprob: -14.516068458557129
    8. '(' → logprob: -14.891068458557129
    9. '	H' → logprob: -15.141068458557129
    10. ' not' → logprob: -15.766068458557129

Token 379: '_add' (ID: 8390)
  Prédit: '_del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_del' → logprob: -0.16694362461566925
    2. '_add' → logprob: -1.9169436693191528
    3. 'del' → logprob: -5.416943550109863
    4. '[' → logprob: -6.166943550109863
    5. 'add' → logprob: -9.416943550109863
    6. '   ' → logprob: -10.791943550109863
    7. 'Del' → logprob: -11.041943550109863
    8. '_pop' → logprob: -11.541943550109863
    9. '_' → logprob: -12.166943550109863
    10. '_delete' → logprob: -12.291943550109863

Token 380: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005557744298130274
    2. ' and' → logprob: -7.750555992126465
    3. 'and' → logprob: -9.000555992126465
    4. ' ' → logprob: -14.125555992126465
    5. '   ' → logprob: -15.375555992126465
    6. '0' → logprob: -15.625555992126465
    7. '>' → logprob: -15.875555992126465
    8. '```' → logprob: -16.50055503845215
    9. ' [' → logprob: -16.75055503845215
    10. '
' → logprob: -17.00055503845215

Token 381: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004415993578732014
    2. 'and' → logprob: -6.254415988922119
    3. ' and' → logprob: -6.379415988922119
    4. '0' → logprob: -7.254415988922119
    5. ' ' → logprob: -9.629416465759277
    6. '   ' → logprob: -12.254416465759277
    7. '>' → logprob: -12.754416465759277
    8. '```' → logprob: -12.879416465759277
    9. '1' → logprob: -13.629416465759277
    10. ')' → logprob: -14.129416465759277

Token 382: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16731742024421692
    2. ' ==' → logprob: -1.9173173904418945
    3. '>' → logprob: -5.9173173904418945
    4. '>=' → logprob: -5.9173173904418945
    5. '=' → logprob: -7.1673173904418945
    6. 'in' → logprob: -8.042317390441895
    7. ')' → logprob: -8.667317390441895
    8. ']==' → logprob: -8.792317390441895
    9. ' >=' → logprob: -9.417317390441895
    10. ')==' → logprob: -9.792317390441895

Token 383: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.013282106257975101
    2. ' ==' → logprob: -4.513282299041748
    3. '>=' → logprob: -6.388282299041748
    4. '>' → logprob: -7.763282299041748
    5. '=' → logprob: -9.63828182220459
    6. '==
' → logprob: -10.13828182220459
    7. 'in' → logprob: -11.51328182220459
    8. '===' → logprob: -12.76328182220459
    9. ' >=' → logprob: -13.13828182220459
    10. ')==' → logprob: -13.76328182220459

Token 384: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.3663626305060461e-05
    2. ' H' → logprob: -11.25001335144043
    3. '   ' → logprob: -14.37501335144043
    4. ' ' → logprob: -17.12501335144043
    5. '  ' → logprob: -17.25001335144043
    6. '	H' → logprob: -19.25001335144043
    7. '
' → logprob: -20.12501335144043
    8. '[' → logprob: -20.75001335144043
    9. '    ' → logprob: -20.87501335144043
    10. '<H' → logprob: -21.37501335144043

Token 385: '_del' (ID: 39544)
  Prédit: '_del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_del' → logprob: -6.704273118884885e-07
    2. 'del' → logprob: -14.625000953674316
    3. '	del' → logprob: -16.0
    4. 'Del' → logprob: -18.875
    5. '_add' → logprob: -19.375
    6. '[' → logprob: -19.875
    7. '_' → logprob: -19.875
    8. '_def' → logprob: -19.875
    9. '_DEL' → logprob: -20.125
    10. '_d' → logprob: -20.75

Token 386: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2842308680992573e-05
    2. '0' → logprob: -10.875022888183594
    3. '   ' → logprob: -13.375022888183594
    4. ' ' → logprob: -13.875022888183594
    5. ' [' → logprob: -13.875022888183594
    6. '  ' → logprob: -16.125022888183594
    7. '```' → logprob: -16.250022888183594
    8. '1' → logprob: -16.625022888183594
    9. 's' → logprob: -16.875022888183594
    10. '[
' → logprob: -17.125022888183594

Token 387: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5233986973762512
    2. '0' → logprob: -0.8983986973762512
    3. ' ' → logprob: -8.773398399353027
    4. '   ' → logprob: -9.273398399353027
    5. '  ' → logprob: -11.648398399353027
    6. '```' → logprob: -12.148398399353027
    7. '<|end|>' → logprob: -12.398398399353027
    8. ' [' → logprob: -13.273398399353027
    9. '    ' → logprob: -13.648398399353027
    10. '<|end|>' → logprob: -14.148398399353027

Token 388: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5691947340965271
    2. '):
' → logprob: -1.5691947937011719
    3. ':
' → logprob: -1.9441947937011719
    4. ']:
' → logprob: -2.944194793701172
    5. '):' → logprob: -4.194194793701172
    6. ']:' → logprob: -4.444194793701172
    7. '[' → logprob: -6.194194793701172
    8. '   ' → logprob: -7.944194793701172
    9. ']' → logprob: -9.069194793701172
    10. ' and' → logprob: -9.194194793701172

Token 389: '           ' (ID: 352)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0160284042358398
    2. '           ' → logprob: -1.5160284042358398
    3. '   ' → logprob: -1.7660284042358398
    4. ' p' → logprob: -2.76602840423584
    5. '       ' → logprob: -3.14102840423584
    6. ',p' → logprob: -3.26602840423584
    7. ',' → logprob: -3.51602840423584
    8. ':
' → logprob: -3.64102840423584
    9. 'pop' → logprob: -3.89102840423584
    10. ' and' → logprob: -4.89102840423584

Token 390: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.14057235419750214
    2. 'pop' → logprob: -2.5155723094940186
    3. 'push' → logprob: -3.0155723094940186
    4. ' p' → logprob: -7.265572547912598
    5. '           ' → logprob: -8.515572547912598
    6. '   ' → logprob: -9.265572547912598
    7. '
' → logprob: -9.390572547912598
    8. ' pop' → logprob: -10.015572547912598
    9. ' push' → logprob: -10.140572547912598
    10. 'import' → logprob: -10.140572547912598

Token 391: 'opy' (ID: 2074)
  Prédit: 'opy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opy' → logprob: -0.05069106072187424
    2. 'op' → logprob: -3.0506911277770996
    3. 'oppy' → logprob: -6.9256911277771
    4. '```' → logprob: -8.050690650939941
    5. 'ush' → logprob: -9.175690650939941
    6. 'p' → logprob: -9.300690650939941
    7. '
' → logprob: -9.425690650939941
    8. 'pop' → logprob: -9.675690650939941
    9. 'оп' → logprob: -10.175690650939941
    10. 'ushy' → logprob: -10.613190650939941

Token 392: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.500000953674316
    3. '(
' → logprob: -16.875
    4. ' (' → logprob: -19.375
    5. 'H' → logprob: -19.5
    6. '()' → logprob: -20.5
    7. '(`' → logprob: -21.0
    8. '   ' → logprob: -21.375
    9. '(
' → logprob: -21.625
    10. '	H' → logprob: -21.875

Token 393: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.029869431629776955
    2. '_del' → logprob: -3.529869318008423
    3. 'add' → logprob: -9.529869079589844
    4. 'del' → logprob: -10.029869079589844
    5. '_added' → logprob: -15.154869079589844
    6. 'Add' → logprob: -15.279869079589844
    7. '_delete' → logprob: -15.279869079589844
    8. '	add' → logprob: -15.404869079589844
    9. ' add' → logprob: -15.779869079589844
    10. '_d' → logprob: -16.029869079589844

Token 394: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.012682225555181503
    2. ')' → logprob: -4.3876824378967285
    3. ')
' → logprob: -8.76268196105957
    4. ');' → logprob: -11.63768196105957
    5. '),' → logprob: -12.63768196105957
    6. ')

' → logprob: -13.01268196105957
    7. ' )
' → logprob: -14.26268196105957
    8. '           ' → logprob: -14.88768196105957
    9. '0' → logprob: -15.63768196105957
    10. ');
' → logprob: -15.76268196105957

Token 395: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03636480122804642
    2. 'p' → logprob: -4.036365032196045
    3. ' p' → logprob: -4.161365032196045
    4. ',' → logprob: -7.411365032196045
    5. '       ' → logprob: -7.536365032196045
    6. '(p' → logprob: -8.161364555358887
    7. '   ' → logprob: -8.161364555358887
    8. ',p' → logprob: -8.286364555358887
    9. '          ' → logprob: -8.661364555358887
    10. ')' → logprob: -9.911364555358887

Token 396: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0003818140830844641
    2. ' p' → logprob: -7.875381946563721
    3. '   ' → logprob: -14.250381469726562
    4. '(p' → logprob: -14.750381469726562
    5. 'pop' → logprob: -14.875381469726562
    6. ' ' → logprob: -16.375381469726562
    7. '  ' → logprob: -16.625381469726562
    8. '(' → logprob: -16.875381469726562
    9. '       ' → logprob: -17.875381469726562
    10. '	p' → logprob: -17.875381469726562

Token 397: 'opy' (ID: 2074)
  Prédit: 'opy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opy' → logprob: -1.3782830137643032e-05
    2. 'op' → logprob: -11.50001335144043
    3. 'p' → logprob: -12.75001335144043
    4. 'oppy' → logprob: -15.37501335144043
    5. 'copy' → logprob: -16.00001335144043
    6. 'py' → logprob: -16.12501335144043
    7. '0' → logprob: -16.75001335144043
    8. '```' → logprob: -17.00001335144043
    9. '
' → logprob: -17.50001335144043
    10. 'pop' → logprob: -17.87501335144043

Token 398: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.50001049041748
    3. '(
' → logprob: -17.375009536743164
    4. 'H' → logprob: -17.750009536743164
    5. ' (' → logprob: -20.500009536743164
    6. '(
' → logprob: -21.000009536743164
    7. '(

' → logprob: -21.500009536743164
    8. '	H' → logprob: -21.875009536743164
    9. '(h' → logprob: -21.875009536743164
    10. ')' → logprob: -22.125009536743164

Token 399: '_del' (ID: 39544)
  Prédit: '_del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_del' → logprob: -4.811348480870947e-05
    2. 'del' → logprob: -10.00004768371582
    3. '	del' → logprob: -13.12504768371582
    4. 'Del' → logprob: -14.87504768371582
    5. '_DEL' → logprob: -16.12504768371582
    6. '-del' → logprob: -16.62504768371582
    7. 'DEL' → logprob: -16.75004768371582
    8. '_add' → logprob: -17.62504768371582
    9. '(del' → logprob: -17.87504768371582
    10. 'H' → logprob: -18.12504768371582

Token 400: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011735594598576427
    2. ')
' → logprob: -6.751173496246338
    3. '<|end|>' → logprob: -13.751173973083496
    4. ')

' → logprob: -14.001173973083496
    5. ' )' → logprob: -15.376173973083496
    6. '       ' → logprob: -15.501173973083496
    7. ')return' → logprob: -15.626173973083496
    8. ')#' → logprob: -15.751173973083496
    9. ')
' → logprob: -15.876173973083496
    10. '   ' → logprob: -16.00117301940918

Token 401: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: ' break' (ID: 2338)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 400
Tokens correctement prédits (1ère position, stricte): 155
Tokens correctement prédits (1ère position, avec adaptation): 165
Tokens correctement prédits (top 10): 304
Précision stricte (1ère position): 38.75%
Précision adaptée (1ère position): 41.25%
Précision (top 10): 76.00%
================================================================================
