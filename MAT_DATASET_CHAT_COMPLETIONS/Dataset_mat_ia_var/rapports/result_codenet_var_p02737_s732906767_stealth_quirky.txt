================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict as ddict
import sys as s

g_input = lambda: s.stdin.readline().strip()

def XTEU(U, V):
    # non-traditional variable pattern
    T = [1, 0, U]
    S = [0, 1, V]
    while T[2] != 1:
        d, m = divmod(S[2], T[2])
        T[0], S[0] = S[0] - d * T[0], T[0]
        T[1], S[1] = S[1] - d * T[1], T[1]
        T[2], S[2] = m, T[2]
    return (T[0], T[1])

class FunkyMod(int):
    # unconventional mod class
    def __new__(KLS, V=0, *a, **kw):
        return int.__new__(KLS, V%MM, *a, **kw)
    def __add__(Z, OOPS):
        return Z.__class__(int(Z) + int(OOPS))
    def __sub__(Z, OOPS):
        return Z.__class__(int(Z) - int(OOPS))
    def __neg__(Z):
        return Z.__class__(-int(Z))
    def __mul__(Z, OOPS):
        return Z.__class__(int(Z) * int(OOPS))
    def __floordiv__(Z, OOPS):
        inv, _ = XTEU(OOPS, MM)
        return Z * inv
    def __pow__(Z, EXP):
        return Z.__class__(pow(int(Z), int(EXP), MM))

def MEX(JUNK):
    i = 0
    while i <= LLL:
        if i not in JUNK:
            return i
        i += 1

def weird_grundy(E):
    GDICT = {}
    I = LLL
    while I > 0:
        if I not in E: 
            I -= 1
            continue
        MEH = MEX({GDICT.get(J, 0) for J in E[I]})
        if MEH:
            GDICT[I] = MEH
        I -= 1
    AccSum = ddict(FunkyMod)
    AccSum[0] = (BBB ** (LLL+1) - BBB) // (BBB - 1)
    _v, _step = 0, FunkyMod(1)
    Rakugo = E # unused to seem idio(t)syncratic
    for w in range(1, LLL+1):
        if w in GDICT:
            _step *= BBB ** (w - _v)
            AccSum[GDICT[w]] += _step
            AccSum[0] -= _step
            _v, _step = w, _step
    return AccSum

def e_reader():
    xxz = int(g_input())
    ret = ddict(list)
    for i in range(xxz):
        a1, b1 = sorted(map(int, g_input().split()))
        ret[a1].append(b1)
    return ret

def S0LV3R(LLL, EDGE):
    SMLIST = list(map(weird_grundy, EDGE))
    ANS = FunkyMod(0)
    # crazy nesting and name choice
    for xxx, Sx in SMLIST[0].items():
        for yyy, Sy in SMLIST[1].items():
            ZZZ = xxx ^ yyy
            Sz = SMLIST[2][ZZZ]
            if Sz:
                ANS += Sx * Sy * Sz
    return ANS

MM = 998244353
BBB = FunkyMod(10) ** 18
LLL = int(g_input())

EDGX = [e_reader() for _ in '--x']

print(S0LV3R(LLL, EDGX))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.6234369277954102
    2. 'deque' → logprob: -1.4984369277954102
    3. 'default' → logprob: -2.37343692779541
    4. 'abc' → logprob: -2.74843692779541
    5. ' deque' → logprob: -3.37343692779541
    6. ' abc' → logprob: -3.49843692779541
    7. 'Counter' → logprob: -5.12343692779541
    8. ' Counter' → logprob: -5.37343692779541
    9. ' named' → logprob: -5.37343692779541
    10. 'named' → logprob: -5.87343692779541

Token 4: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002277530962601304
    2. '(
' → logprob: -6.252277374267578
    3. '\(' → logprob: -8.752277374267578
    4. '\' → logprob: -9.877277374267578
    5. '\n' → logprob: -10.377277374267578
    6. '(

' → logprob: -10.502277374267578
    7. 'newline' → logprob: -10.877277374267578
    8. '```' → logprob: -11.627277374267578
    9. '
' → logprob: -12.002277374267578
    10. '()' → logprob: -12.252277374267578

Token 5: ' dd' (ID: 18636)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.17250381410121918
    2. ' dd' → logprob: -2.047503709793091
    3. '_dd' → logprob: -3.547503709793091
    4. 'DD' → logprob: -8.422503471374512
    5. 'default' → logprob: -9.547503471374512
    6. 'ddd' → logprob: -9.672503471374512
    7. '-dd' → logprob: -9.797503471374512
    8. ' defaultdict' → logprob: -9.922503471374512
    9. 'dict' → logprob: -10.547503471374512
    10. 'ddb' → logprob: -10.672503471374512

Token 6: 'ict' (ID: 1360)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09033294022083282
    2. '.' → logprob: -2.8403329849243164
    3. ',' → logprob: -4.965332984924316
    4. ' (' → logprob: -5.090332984924316
    5. '\' → logprob: -5.215332984924316
    6. '\(' → logprob: -5.715332984924316
    7. '(
' → logprob: -6.340332984924316
    8. 'newline' → logprob: -7.090332984924316
    9. '\n' → logprob: -7.590332984924316
    10. '[' → logprob: -7.590332984924316

Token 7: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008864453993737698
    2. '.' → logprob: -8.375886917114258
    3. '(
' → logprob: -8.625886917114258
    4. '\' → logprob: -9.250886917114258
    5. '\(' → logprob: -9.250886917114258
    6. ',' → logprob: -9.375886917114258
    7. '\n' → logprob: -9.500886917114258
    8. '()' → logprob: -10.000886917114258
    9. ' (' → logprob: -10.500886917114258
    10. 'newline' → logprob: -10.625886917114258

Token 8: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0076198759488761425
    2. '(
' → logprob: -5.132619857788086
    3. '.' → logprob: -7.632619857788086
    4. ',' → logprob: -8.132619857788086
    5. '\' → logprob: -8.382619857788086
    6. '\(' → logprob: -8.757619857788086
    7. 'newline' → logprob: -9.257619857788086
    8. '(

' → logprob: -9.507619857788086
    9. '
' → logprob: -9.632619857788086
    10. '\n' → logprob: -9.757619857788086

Token 9: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.16197560727596283
    2. ' sys' → logprob: -2.661975622177124
    3. ' collections' → logprob: -3.661975622177124
    4. ' re' → logprob: -3.911975622177124
    5. ' json' → logprob: -4.161975383758545
    6. ' numpy' → logprob: -5.161975383758545
    7. ' pandas' → logprob: -5.536975383758545
    8. ' itertools' → logprob: -5.536975383758545
    9. ' ' → logprob: -6.536975383758545
    10. ' random' → logprob: -6.911975383758545

Token 10: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38801276683807373
    2. '
' → logprob: -1.6380127668380737
    3. '\n' → logprob: -2.8880128860473633
    4. '\' → logprob: -3.2630128860473633
    5. 'import' → logprob: -5.263012886047363
    6. '

' → logprob: -5.388012886047363
    7. '```' → logprob: -5.638012886047363
    8. 'newline' → logprob: -5.638012886047363
    9. ',' → logprob: -5.763012886047363
    10. '.
' → logprob: -5.763012886047363

Token 11: ' s' (ID: 265)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.010250375606119633
    2. 'sys' → logprob: -4.635250568389893
    3. '=sys' → logprob: -8.510250091552734
    4. ' ' → logprob: -9.010250091552734
    5. 's' → logprob: -10.010250091552734
    6. '_sys' → logprob: -10.885250091552734
    7. ' s' → logprob: -11.010250091552734
    8. ' sy' → logprob: -11.135250091552734
    9. ' _' → logprob: -11.135250091552734
    10. '	sys' → logprob: -11.385250091552734

Token 12: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002330813091248274
    2. '\' → logprob: -7.377330780029297
    3. 'ys' → logprob: -8.127330780029297
    4. '' → logprob: -8.252330780029297
    5. ',' → logprob: -8.502330780029297
    6. 'y' → logprob: -8.627330780029297
    7. '.
' → logprob: -9.252330780029297
    8. '_' → logprob: -9.377330780029297
    9. '[' → logprob: -9.377330780029297
    10. 't' → logprob: -9.627330780029297

Token 13: 'g' (ID: 70)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0015062900492921472
    2. '=' → logprob: -7.501506328582764
    3. ',' → logprob: -8.251505851745605
    4. '\' → logprob: -9.001505851745605
    5. '.
' → logprob: -9.001505851745605
    6. '[' → logprob: -9.376505851745605
    7. ':' → logprob: -9.751505851745605
    8. '_' → logprob: -9.751505851745605
    9. '.

' → logprob: -9.876505851745605
    10. ';' → logprob: -10.376505851745605

Token 14: '_input' (ID: 12507)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48508137464523315
    2. '=' → logprob: -1.735081434249878
    3. 'raph' → logprob: -2.360081434249878
    4. 'g' → logprob: -2.485081434249878
    5. 'r' → logprob: -4.735081195831299
    6. '.' → logprob: -6.110081195831299
    7. '=sys' → logprob: -6.110081195831299
    8. '=g' → logprob: -6.235081195831299
    9. 'def' → logprob: -6.235081195831299
    10. ' ' → logprob: -6.360081195831299

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1243199110031128
    2. '.' → logprob: -1.2493199110031128
    3. '()' → logprob: -1.8743199110031128
    4. ' =' → logprob: -2.8743200302124023
    5. '(' → logprob: -3.1243200302124023
    6. '_data' → logprob: -3.3743200302124023
    7. '_' → logprob: -3.8743200302124023
    8. '[' → logprob: -3.9993200302124023
    9. 'data' → logprob: -4.374320030212402
    10. ')' → logprob: -4.374320030212402

Token 16: ' lambda' (ID: 27871)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01682753674685955
    2. ' s' → logprob: -4.641827583312988
    3. 'sys' → logprob: -6.141827583312988
    4. 'input' → logprob: -6.391827583312988
    5. '[]' → logprob: -7.016827583312988
    6. 'dd' → logprob: -7.766827583312988
    7. '""' → logprob: -7.891827583312988
    8. '(s' → logprob: -8.141827583312988
    9. '{}' → logprob: -9.016827583312988
    10. 'list' → logprob: -9.141827583312988

Token 17: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48294907808303833
    2. ' s' → logprob: -1.3579490184783936
    3. 's' → logprob: -2.4829490184783936
    4. ' :' → logprob: -3.3579490184783936
    5. ':s' → logprob: -5.482949256896973
    6. ' g' → logprob: -6.357949256896973
    7. ':list' → logprob: -8.357949256896973
    8. 'x' → logprob: -8.482949256896973
    9. ' ' → logprob: -8.982949256896973
    10. ' x' → logprob: -8.982949256896973

Token 18: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07026873528957367
    2. ' s' → logprob: -2.6952686309814453
    3. 'input' → logprob: -8.320268630981445
    4. ' input' → logprob: -9.695268630981445
    5. ' ' → logprob: -11.445268630981445
    6. '(s' → logprob: -12.570268630981445
    7. '	s' → logprob: -12.820268630981445
    8. 'sys' → logprob: -12.945268630981445
    9. 'list' → logprob: -13.320268630981445
    10. ' sys' → logprob: -13.945268630981445

Token 19: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.0921942703134846e-05
    2. '.stdout' → logprob: -12.25001049041748
    3. '.input' → logprob: -13.00001049041748
    4. '.readline' → logprob: -13.12501049041748
    5. '.argv' → logprob: -14.12501049041748
    6. '.' → logprob: -14.75001049041748
    7. 'stdin' → logprob: -14.75001049041748
    8. ' stdin' → logprob: -16.375011444091797
    9. '.stderr' → logprob: -16.875011444091797
    10. 'td' → logprob: -17.375011444091797

Token 20: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.07743564993143082
    2. '.read' → logprob: -2.9524357318878174
    3. '.' → logprob: -3.8274357318878174
    4. 'read' → logprob: -8.577435493469238
    5. '.Read' → logprob: -8.577435493469238
    6. '.readlines' → logprob: -9.452435493469238
    7. '().' → logprob: -10.952435493469238
    8. '<|end|>' → logprob: -11.452435493469238
    9. '.write' → logprob: -11.702435493469238
    10. '```' → logprob: -11.952435493469238

Token 21: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01116818469017744
    2. '().' → logprob: -4.511168003082275
    3. '(' → logprob: -9.761168479919434
    4. '()
' → logprob: -10.011168479919434
    5. ' ()' → logprob: -12.011168479919434
    6. '()

' → logprob: -12.136168479919434
    7. '()\' → logprob: -12.511168479919434
    8. '())' → logprob: -14.761168479919434
    9. '()(' → logprob: -15.011168479919434
    10. '()`' → logprob: -15.386168479919434

Token 22: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.008615515194833279
    2. 'rstrip' → logprob: -4.758615493774414
    3. ' strip' → logprob: -14.758615493774414
    4. 'decode' → logprob: -15.133615493774414
    5. 'read' → logprob: -15.258615493774414
    6. '_strip' → logprob: -16.758615493774414
    7. 'rst' → logprob: -18.008615493774414
    8. 'r' → logprob: -18.008615493774414
    9. 'str' → logprob: -18.258615493774414
    10. '-strip' → logprob: -18.383615493774414

Token 23: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6384341716766357
    2. '()' → logprob: -0.7634341716766357
    3. '(
' → logprob: -5.513434410095215
    4. '()
' → logprob: -7.013434410095215
    5. '(

' → logprob: -8.138434410095215
    6. '()

' → logprob: -8.763434410095215
    7. '\n' → logprob: -9.013434410095215
    8. '()\' → logprob: -10.013434410095215
    9. '(\' → logprob: -10.138434410095215
    10. ')' → logprob: -10.138434410095215

Token 24: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5377151966094971
    2. 'n' → logprob: -2.037715196609497
    3. '#' → logprob: -2.537715196609497
    4. 'd' → logprob: -3.037715196609497
    5. '\n' → logprob: -3.412715196609497
    6. ')' → logprob: -3.662715196609497
    7. 'a' → logprob: -4.162714958190918
    8. 'for' → logprob: -4.162714958190918
    9. 'data' → logprob: -4.287714958190918
    10. '(' → logprob: -4.662714958190918

Token 25: ' X' (ID: 2127)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7466676831245422
    2. ' solve' → logprob: -1.4966676235198975
    3. ' dfs' → logprob: -2.3716676235198975
    4. ' process' → logprob: -2.7466676235198975
    5. ' ' → logprob: -2.8716676235198975
    6. ' read' → logprob: -4.246667861938477
    7. ' solution' → logprob: -4.371667861938477
    8. ' parse' → logprob: -4.496667861938477
    9. ' bfs' → logprob: -4.871667861938477
    10. ' func' → logprob: -5.621667861938477

Token 26: 'TE' (ID: 5075)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4413403570652008
    2. '(' → logprob: -1.1913403272628784
    3. '_' → logprob: -3.566340446472168
    4. ':' → logprob: -4.566340446472168
    5. '(s' → logprob: -5.316340446472168
    6. '(a' → logprob: -6.566340446472168
    7. '()' → logprob: -6.691340446472168
    8. '```' → logprob: -7.066340446472168
    9. 'X' → logprob: -7.691340446472168
    10. '(p' → logprob: -7.691340446472168

Token 27: 'U' (ID: 52)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.02074333094060421
    2. 'RA' → logprob: -4.770743370056152
    3. '_R' → logprob: -6.145743370056152
    4. 'RC' → logprob: -6.395743370056152
    5. 'N' → logprob: -6.645743370056152
    6. 'RP' → logprob: -6.895743370056152
    7. 'RM' → logprob: -7.645743370056152
    8. 'ND' → logprob: -7.645743370056152
    9. 'RS' → logprob: -7.645743370056152
    10. 'RN' → logprob: -7.645743370056152

Token 28: '(U' (ID: 27452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6083080172538757
    2. 'R' → logprob: -1.3583080768585205
    3. 'P' → logprob: -3.6083080768585205
    4. 'r' → logprob: -3.6083080768585205
    5. 'RC' → logprob: -3.8583080768585205
    6. '_' → logprob: -4.108307838439941
    7. 'V' → logprob: -4.733307838439941
    8. 'F' → logprob: -4.858307838439941
    9. '():' → logprob: -4.858307838439941
    10. 'X' → logprob: -4.858307838439941

Token 29: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10423053801059723
    2. ',' → logprob: -2.8542306423187256
    3. ')' → logprob: -3.9792306423187256
    4. 'p' → logprob: -5.4792304039001465
    5. ':' → logprob: -6.2292304039001465
    6. 'ser' → logprob: -6.3542304039001465
    7. 'V' → logprob: -6.4792304039001465
    8. 'C' → logprob: -6.6042304039001465
    9. 's' → logprob: -6.7292304039001465
    10. '):
' → logprob: -6.8542304039001465

Token 30: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.983971357345581
    2. ' V' → logprob: -1.608971357345581
    3. 'T' → logprob: -3.358971357345581
    4. 'D' → logprob: -3.483971357345581
    5. 'L' → logprob: -3.671471357345581
    6. 'E' → logprob: -3.983971357345581
    7. ' T' → logprob: -3.983971357345581
    8. ' D' → logprob: -4.29647159576416
    9. 'N' → logprob: -4.35897159576416
    10. 'R' → logprob: -4.42147159576416

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023183224257081747
    2. ',' → logprob: -6.252318382263184
    3. ')' → logprob: -8.127318382263184
    4. ' ):' → logprob: -9.877318382263184
    5. ':' → logprob: -10.377318382263184
    6. '):
' → logprob: -13.002318382263184
    7. '   ' → logprob: -13.502318382263184
    8. '**' → logprob: -13.627318382263184
    9. ' ' → logprob: -13.877318382263184
    10. '=' → logprob: -14.002318382263184

Token 32: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030362652614712715
    2. '   ' → logprob: -3.780362606048584
    3. ':
' → logprob: -5.780362606048584
    4. ' :' → logprob: -6.655362606048584
    5. '):' → logprob: -7.030362606048584
    6. ':return' → logprob: -8.030363082885742
    7. ' ' → logprob: -8.155363082885742
    8. '    ' → logprob: -8.655363082885742
    9. ',' → logprob: -8.655363082885742
    10. ')' → logprob: -8.780363082885742

Token 33: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23486635088920593
    2. ' return' → logprob: -2.6098663806915283
    3. 'd' → logprob: -2.7348663806915283
    4. ' d' → logprob: -3.7348663806915283
    5. ' r' → logprob: -4.359866142272949
    6. 'r' → logprob: -4.734866142272949
    7. 'return' → logprob: -5.109866142272949
    8. '    ' → logprob: -5.984866142272949
    9. ' dp' → logprob: -6.234866142272949
    10. ' defaultdict' → logprob: -6.734866142272949

Token 34: ' non' (ID: 2893)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.7545075416564941
    2. ' if' → logprob: -2.379507541656494
    3. 'd' → logprob: -2.504507541656494
    4. ' d' → logprob: -2.754507541656494
    5. ' dp' → logprob: -2.754507541656494
    6. '   ' → logprob: -3.129507541656494
    7. ' res' → logprob: -3.254507541656494
    8. ' result' → logprob: -3.254507541656494
    9. 'dp' → logprob: -3.379507541656494
    10. ' ret' → logprob: -3.504507541656494

Token 35: '-tr' (ID: 15461)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.29731935262680054
    2. 'e' → logprob: -1.6723194122314453
    3. 'de' → logprob: -3.7973194122314453
    4. 'd' → logprob: -4.422319412231445
    5. '_' → logprob: -4.547319412231445
    6. ' local' → logprob: -5.172319412231445
    7. 'empty' → logprob: -5.672319412231445
    8. '-' → logprob: -5.672319412231445
    9. ')' → logprob: -6.797319412231445
    10. 'zero' → logprob: -7.047319412231445

Token 36: 'aditional' (ID: 171523)
  Prédit: 'ivial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ivial' → logprob: -0.04252324998378754
    2. 'iv' → logprob: -3.792523145675659
    3. 'ans' → logprob: -4.417523384094238
    4. 'i' → logprob: -6.167523384094238
    5. 'e' → logprob: -6.167523384094238
    6. 'a' → logprob: -7.167523384094238
    7. 'iangle' → logprob: -7.917523384094238
    8. 'av' → logprob: -8.417523384094238
    9. 'ival' → logprob: -8.542523384094238
    10. '```' → logprob: -8.792523384094238

Token 37: ' variable' (ID: 11076)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44826099276542664
    2. '   ' → logprob: -2.198261022567749
    3. ' :' → logprob: -2.323261022567749
    4. '_' → logprob: -2.698261022567749
    5. ' ' → logprob: -3.698261022567749
    6. ')' → logprob: -3.823261022567749
    7. '):' → logprob: -4.19826078414917
    8. 'def' → logprob: -5.32326078414917
    9. ',' → logprob: -5.82326078414917
    10. '    ' → logprob: -6.07326078414917

Token 38: ' pattern' (ID: 8302)
  Prédit: ' names'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' names' → logprob: -1.0133757591247559
    2. '_' → logprob: -1.1383757591247559
    3. 's' → logprob: -1.7633757591247559
    4. '_names' → logprob: -2.888375759124756
    5. ' ' → logprob: -3.763375759124756
    6. 'names' → logprob: -4.263375759124756
    7. ' naming' → logprob: -4.388375759124756
    8. '_name' → logprob: -5.013375759124756
    9. ' name' → logprob: -5.013375759124756
    10. ' _' → logprob: -5.263375759124756

Token 39: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.452139288187027
    2. '   ' → logprob: -1.8271392583847046
    3. ' :' → logprob: -2.202139377593994
    4. '_' → logprob: -3.077139377593994
    5. ' ' → logprob: -4.702139377593994
    6. '):' → logprob: -4.952139377593994
    7. '[' → logprob: -5.202139377593994
    8. ')' → logprob: -5.452139377593994
    9. ',' → logprob: -5.827139377593994
    10. '():' → logprob: -6.077139377593994

Token 40: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2396710067987442
    2. ' :' → logprob: -2.489670991897583
    3. '   ' → logprob: -2.614670991897583
    4. ' ' → logprob: -4.239671230316162
    5. ':
' → logprob: -4.364671230316162
    6. ' :
' → logprob: -4.364671230316162
    7. ')' → logprob: -5.739671230316162
    8. ' 
' → logprob: -6.239671230316162
    9. '):' → logprob: -6.364671230316162
    10. '[' → logprob: -6.739671230316162

Token 41: ' T' (ID: 353)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6513155698776245
    2. ' return' → logprob: -1.6513155698776245
    3. ' result' → logprob: -2.901315689086914
    4. ' r' → logprob: -3.526315689086914
    5. ' res' → logprob: -3.651315689086914
    6. ' dp' → logprob: -3.776315689086914
    7. 'return' → logprob: -3.901315689086914
    8. 'r' → logprob: -3.901315689086914
    9. 'd' → logprob: -4.276315689086914
    10. ' d' → logprob: -4.651315689086914

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18872347474098206
    2. '=' → logprob: -1.9387234449386597
    3. 'emp' → logprob: -5.313723564147949
    4. 'o' → logprob: -5.813723564147949
    5. ' ' → logprob: -5.938723564147949
    6. 'r' → logprob: -6.313723564147949
    7. ',' → logprob: -6.438723564147949
    8. 'ime' → logprob: -6.563723564147949
    9. '  ' → logprob: -6.938723564147949
    10. 'a' → logprob: -7.063723564147949

Token 43: ' [' (ID: 723)
  Prédit: ' dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dd' → logprob: -0.9255163073539734
    2. 'dd' → logprob: -1.5505163669586182
    3. 'len' → logprob: -2.550516366958618
    4. '{}' → logprob: -2.925516366958618
    5. ' len' → logprob: -3.050516366958618
    6. ' defaultdict' → logprob: -3.675516366958618
    7. '[]' → logprob: -3.675516366958618
    8. '{' → logprob: -3.675516366958618
    9. ' U' → logprob: -4.050516128540039
    10. '0' → logprob: -4.050516128540039

Token 44: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05014912784099579
    2. 'dd' → logprob: -3.8001492023468018
    3. ']' → logprob: -4.925148963928223
    4. '[]' → logprob: -5.050148963928223
    5. 'V' → logprob: -5.425148963928223
    6. 'set' → logprob: -6.425148963928223
    7. '[' → logprob: -6.425148963928223
    8. 'U' → logprob: -7.175148963928223
    9. '[V' → logprob: -7.550148963928223
    10. 'len' → logprob: -7.800148963928223

Token 45: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004674572963267565
    2. ']*' → logprob: -5.879674434661865
    3. ']+' → logprob: -7.254674434661865
    4. ' ]' → logprob: -7.629674434661865
    5. ']*(' → logprob: -8.129674911499023
    6. ',' → logprob: -9.254674911499023
    7. '0' → logprob: -9.504674911499023
    8. ' for' → logprob: -9.504674911499023
    9. ']<<' → logprob: -10.754674911499023
    10. 'for' → logprob: -10.879674911499023

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9736787676811218
    2. '0' → logprob: -1.3486788272857666
    3. '2' → logprob: -1.3486788272857666
    4. '1' → logprob: -2.5986788272857666
    5. '-' → logprob: -4.7236785888671875
    6. ' -' → logprob: -5.3486785888671875
    7. ']' → logprob: -5.5986785888671875
    8. ' U' → logprob: -5.7236785888671875
    9. ' V' → logprob: -5.8486785888671875
    10. 'V' → logprob: -5.9736785888671875

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0102661848068237
    2. '2' → logprob: -1.0102661848068237
    3. '1' → logprob: -1.5102661848068237
    4. '-' → logprob: -3.7602663040161133
    5. 'V' → logprob: -4.760266304016113
    6. ' ' → logprob: -4.885266304016113
    7. 'U' → logprob: -5.635266304016113
    8. ']' → logprob: -6.010266304016113
    9. '3' → logprob: -6.760266304016113
    10. ' U' → logprob: -7.010266304016113

Token 48: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013519818894565105
    2. ' ]' → logprob: -4.763519763946533
    3. ',' → logprob: -5.388519763946533
    4. '1' → logprob: -9.388520240783691
    5. '],' → logprob: -9.513520240783691
    6. ' ,' → logprob: -9.888520240783691
    7. ']+' → logprob: -10.513520240783691
    8. ']*' → logprob: -10.763520240783691
    9. '0' → logprob: -10.888520240783691
    10. '2' → logprob: -12.451020240783691

Token 49: ' U' (ID: 601)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.881009578704834
    2. '1' → logprob: -1.381009578704834
    3. ' ' → logprob: -1.631009578704834
    4. '-' → logprob: -2.381009578704834
    5. ' -' → logprob: -3.131009578704834
    6. ']' → logprob: -7.256009578704834
    7. '2' → logprob: -7.506009578704834
    8. ' U' → logprob: -7.881009578704834
    9. '3' → logprob: -9.006010055541992
    10. 'U' → logprob: -9.381010055541992

Token 50: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5966946482658386
    2. ']' → logprob: -1.7216947078704834
    3. ' +' → logprob: -2.2216947078704834
    4. ',' → logprob: -2.3466947078704834
    5. '-' → logprob: -3.2216947078704834
    6. ' -' → logprob: -4.721694469451904
    7. '%' → logprob: -5.221694469451904
    8. ' ,' → logprob: -6.096694469451904
    9. '   ' → logprob: -6.221694469451904
    10. ' ]' → logprob: -6.221694469451904

Token 51: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1713634729385376
    2. ']' → logprob: -1.4213634729385376
    3. ' ' → logprob: -2.421363353729248
    4. '   ' → logprob: -2.421363353729248
    5. '[' → logprob: -2.546363353729248
    6. ' ]' → logprob: -3.171363353729248
    7. '+' → logprob: -3.796363353729248
    8. ' ,' → logprob: -3.796363353729248
    9. ',
' → logprob: -3.921363353729248
    10. '.' → logprob: -3.921363353729248

Token 52: ' S' (ID: 336)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3199703693389893
    2. ',' → logprob: -1.8199703693389893
    3. ' ' → logprob: -2.0699703693389893
    4. ']' → logprob: -2.1949703693389893
    5. '   ' → logprob: -2.4449703693389893
    6. ')' → logprob: -3.3199703693389893
    7. 'V' → logprob: -3.3199703693389893
    8. '.' → logprob: -3.5699703693389893
    9. '+' → logprob: -3.5699703693389893
    10. 'for' → logprob: -4.19497013092041

Token 53: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5771932005882263
    2. ' =' → logprob: -0.8271932005882263
    3. '.append' → logprob: -7.452193260192871
    4. ' ' → logprob: -8.827193260192871
    5. ',' → logprob: -8.952193260192871
    6. '[' → logprob: -9.202193260192871
    7. '+=' → logprob: -9.827193260192871
    8. '+' → logprob: -9.952193260192871
    9. ' +=' → logprob: -10.327193260192871
    10. '   ' → logprob: -10.577193260192871

Token 54: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6125913262367249
    2. '[' → logprob: -1.11259126663208
    3. '[V' → logprob: -3.11259126663208
    4. '0' → logprob: -3.86259126663208
    5. ' V' → logprob: -4.11259126663208
    6. ' ' → logprob: -4.36259126663208
    7. 'V' → logprob: -4.36259126663208
    8. '1' → logprob: -5.11259126663208
    9. '[]' → logprob: -5.11259126663208
    10. '[T' → logprob: -6.61259126663208

Token 55: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6223957538604736
    2. '0' → logprob: -1.3723957538604736
    3. 'V' → logprob: -1.7473957538604736
    4. '2' → logprob: -4.1223955154418945
    5. '-' → logprob: -4.4973955154418945
    6. ']' → logprob: -6.4973955154418945
    7. 'U' → logprob: -6.8723955154418945
    8. ',' → logprob: -7.1223955154418945
    9. ' V' → logprob: -7.1223955154418945
    10. ' ' → logprob: -7.1223955154418945

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024934951215982437
    2. ' ,' → logprob: -6.252493381500244
    3. ']' → logprob: -7.627493381500244
    4. '1' → logprob: -10.502493858337402
    5. ']*' → logprob: -11.377493858337402
    6. ' ' → logprob: -11.877493858337402
    7. ' for' → logprob: -12.377493858337402
    8. '0' → logprob: -12.627493858337402
    9. ',U' → logprob: -12.752493858337402
    10. ' ]' → logprob: -12.939993858337402

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09100643545389175
    2. ' ' → logprob: -2.4660065174102783
    3. '0' → logprob: -7.216006278991699
    4. '-' → logprob: -8.0910062789917
    5. 'U' → logprob: -8.0910062789917
    6. ' U' → logprob: -8.2160062789917
    7. ',' → logprob: -9.0910062789917
    8. ' -' → logprob: -9.5910062789917
    9. ' T' → logprob: -10.2785062789917
    10. '  ' → logprob: -10.2785062789917

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005087175872176886
    2. ' ' → logprob: -6.380087375640869
    3. '-' → logprob: -6.505087375640869
    4. 'U' → logprob: -7.005087375640869
    5. '0' → logprob: -7.880087375640869
    6. 'V' → logprob: -8.255086898803711
    7. ',' → logprob: -9.255086898803711
    8. ' -' → logprob: -9.880086898803711
    9. 'T' → logprob: -10.380086898803711
    10. '  ' → logprob: -10.380086898803711

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006472678505815566
    2. ' ,' → logprob: -7.500647068023682
    3. ',V' → logprob: -10.00064754486084
    4. ']' → logprob: -10.37564754486084
    5. '<|end|>' → logprob: -12.12564754486084
    6. ',U' → logprob: -12.25064754486084
    7. ' ' → logprob: -13.87564754486084
    8. '<|end|>' → logprob: -14.00064754486084
    9. 'V' → logprob: -14.12564754486084
    10. ',T' → logprob: -14.25064754486084

Token 60: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.3872022330760956
    2. ' V' → logprob: -1.137202262878418
    3. '0' → logprob: -8.887202262878418
    4. ' ' → logprob: -9.387202262878418
    5. '   ' → logprob: -10.637202262878418
    6. ',' → logprob: -10.949702262878418
    7. '  ' → logprob: -11.512202262878418
    8. 'U' → logprob: -11.824702262878418
    9. ',V' → logprob: -12.012202262878418
    10. '	V' → logprob: -12.074702262878418

Token 61: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002879145904444158
    2. ' ]' → logprob: -8.375288009643555
    3. ']
' → logprob: -10.250288009643555
    4. '   ' → logprob: -11.125288009643555
    5. ')' → logprob: -12.500288009643555
    6. ']

' → logprob: -13.625288009643555
    7. ']
' → logprob: -14.000288009643555
    8. ')]' → logprob: -14.875288009643555
    9. '']' → logprob: -15.500288009643555
    10. '`]' → logprob: -15.500288009643555

Token 62: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5246105790138245
    2. '   ' → logprob: -1.3996105194091797
    3. ' while' → logprob: -2.2746105194091797
    4. 'while' → logprob: -3.3996105194091797
    5. '<|end|>' → logprob: -4.52461051940918
    6. '    
' → logprob: -5.14961051940918
    7. '	while' → logprob: -5.64961051940918
    8. ' 
' → logprob: -6.64961051940918
    9. ' ' → logprob: -6.89961051940918
    10. '```' → logprob: -8.02461051940918

Token 63: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.39356401562690735
    2. '
' → logprob: -1.518563985824585
    3. 'while' (adapté à ' while') → logprob: -2.768563985824585
    4. ' 
' → logprob: -4.393564224243164
    5. ' ' → logprob: -4.518564224243164
    6. '   ' → logprob: -4.643564224243164
    7. '	while' → logprob: -5.518564224243164
    8. '<|end|>' → logprob: -6.268564224243164
    9. '    
' → logprob: -6.893564224243164
    10. ' for' → logprob: -7.518564224243164

Token 64: ' T' (ID: 353)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.47288671135902405
    2. ' T' → logprob: -1.5978866815567017
    3. 'S' → logprob: -1.9728866815567017
    4. 'T' → logprob: -3.472886800765991
    5. ' not' → logprob: -6.722886562347412
    6. ' True' → logprob: -7.097886562347412
    7. ' ' → logprob: -7.472886562347412
    8. ' U' → logprob: -7.722886562347412
    9. ' V' → logprob: -8.22288703918457
    10. ' (' → logprob: -9.03538703918457

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017096864758059382
    2. '[-' → logprob: -6.376709461212158
    3. ' [' → logprob: -12.751709938049316
    4. '!=' → logprob: -13.126709938049316
    5. ' and' → logprob: -13.501709938049316
    6. 'and' → logprob: -14.876709938049316
    7. ' !=' → logprob: -15.501709938049316
    8. '[len' → logprob: -16.001708984375
    9. '>' → logprob: -16.751708984375
    10. '1' → logprob: -16.876708984375

Token 66: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010100651998072863
    2. '-' → logprob: -7.126009941101074
    3. '0' → logprob: -9.501009941101074
    4. ' ' → logprob: -9.626009941101074
    5. '1' → logprob: -11.313509941101074
    6. '```' → logprob: -11.688509941101074
    7. '

' → logprob: -11.938509941101074
    8. '[' → logprob: -12.063509941101074
    9. ']' → logprob: -12.313509941101074
    10. '   ' → logprob: -12.501009941101074

Token 67: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.13545946776866913
    2. '!=' → logprob: -2.6354594230651855
    3. ' >' → logprob: -3.8854594230651855
    4. ' and' → logprob: -4.3854594230651855
    5. '>' → logprob: -5.0104594230651855
    6. ' >=' → logprob: -5.1354594230651855
    7. ']' → logprob: -6.3854594230651855
    8. '%' → logprob: -6.6354594230651855
    9. '>=' → logprob: -7.0104594230651855
    10. ')' → logprob: -7.0104594230651855

Token 68: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5977914929389954
    2. ' !=' → logprob: -0.8477914929389954
    3. '>' → logprob: -5.09779167175293
    4. ' and' → logprob: -5.34779167175293
    5. ' >' → logprob: -5.97279167175293
    6. '!' → logprob: -6.22279167175293
    7. ':' → logprob: -6.47279167175293
    8. 'and' → logprob: -6.97279167175293
    9. '>=' → logprob: -6.97279167175293
    10. ' >=' → logprob: -7.47279167175293

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003178306156769395
    2. ' ' → logprob: -5.753178119659424
    3. '1' → logprob: -14.628178596496582
    4. '   ' → logprob: -16.253177642822266
    5. '  ' → logprob: -17.378177642822266
    6. ' ' → logprob: -18.253177642822266
    7. '    ' → logprob: -18.503177642822266
    8. '00' → logprob: -20.128177642822266
    9. '۰' → logprob: -20.440677642822266
    10. 's' → logprob: -20.628177642822266

Token 70: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.00023078918457
    4. '1' → logprob: -16.00023078918457
    5. '  ' → logprob: -17.50023078918457
    6. '00' → logprob: -18.93773078918457
    7. '    ' → logprob: -19.06273078918457
    8. 's' → logprob: -19.43773078918457
    9. ' ' → logprob: -20.00023078918457
    10. '000' → logprob: -20.06273078918457

Token 71: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11558151990175247
    2. ':' → logprob: -2.490581512451172
    3. 'and' → logprob: -4.115581512451172
    4. ' :' → logprob: -4.615581512451172
    5. ':
' → logprob: -10.490581512451172
    6. ' ' → logprob: -10.865581512451172
    7. ' :
' → logprob: -11.115581512451172
    8. ' or' → logprob: -12.615581512451172
    9. ')' → logprob: -13.115581512451172
    10. '):' → logprob: -13.365581512451172

Token 72: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3486592769622803
    2. ':' → logprob: -1.8486592769622803
    3. ' :' → logprob: -2.9736592769622803
    4. '<|end|>' → logprob: -3.2236592769622803
    5. ' ' → logprob: -4.098659515380859
    6. ' :
' → logprob: -4.723659515380859
    7. ':
' → logprob: -5.223659515380859
    8. 'and' → logprob: -5.473659515380859
    9. '       ' → logprob: -6.098659515380859
    10. ',' → logprob: -6.223659515380859

Token 73: ' d' (ID: 272)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4779374301433563
    2. ' q' → logprob: -1.3529374599456787
    3. 'Q' → logprob: -2.4779374599456787
    4. ' Q' → logprob: -4.3529372215271
    5. ' if' → logprob: -4.8529372215271
    6. '   ' → logprob: -5.8529372215271
    7. 'k' → logprob: -6.2279372215271
    8. ' k' → logprob: -6.7279372215271
    9. 'S' → logprob: -6.8529372215271
    10. 'if' → logprob: -6.9779372215271

Token 74: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28550848364830017
    2. '=' → logprob: -1.6605085134506226
    3. ',' → logprob: -3.160508394241333
    4. 'iv' → logprob: -4.285508632659912
    5. ' ' → logprob: -7.535508632659912
    6. 'ivid' → logprob: -7.660508632659912
    7. 'e' → logprob: -8.035508155822754
    8. 'v' → logprob: -9.535508155822754
    9. ' ,' → logprob: -9.535508155822754
    10. 'i' → logprob: -9.535508155822754

Token 75: ' m' (ID: 284)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.4870784282684326
    2. 'q' → logprob: -1.2370784282684326
    3. ' T' → logprob: -3.7370784282684326
    4. ' r' → logprob: -3.8620784282684326
    5. 'r' → logprob: -3.9870784282684326
    6. 'T' → logprob: -4.487078666687012
    7. ' ' → logprob: -4.987078666687012
    8. '_=' → logprob: -5.737078666687012
    9. '=' → logprob: -5.987078666687012
    10. ' =' → logprob: -6.737078666687012

Token 76: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22586268186569214
    2. ' =' → logprob: -1.600862741470337
    3. ',' → logprob: -7.850862503051758
    4. '=int' → logprob: -11.100862503051758
    5. '=T' → logprob: -11.725862503051758
    6. 'div' → logprob: -13.100862503051758
    7. ' ' → logprob: -13.100862503051758
    8. '   ' → logprob: -13.100862503051758
    9. 'a' → logprob: -13.225862503051758
    10. 'd' → logprob: -13.350862503051758

Token 77: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.617056131362915
    2. ' div' → logprob: -0.867056131362915
    3. ' T' → logprob: -3.742056131362915
    4. 'T' → logprob: -4.117055892944336
    5. ' ' → logprob: -9.367055892944336
    6. 'S' → logprob: -9.867055892944336
    7. ' S' → logprob: -9.992055892944336
    8. '(div' → logprob: -10.367055892944336
    9. '	div' → logprob: -11.242055892944336
    10. '   ' → logprob: -11.242055892944336

Token 78: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.896309739408025e-07
    2. '(T' → logprob: -15.750000953674316
    3. 'm' → logprob: -15.875000953674316
    4. 'T' → logprob: -16.125
    5. 'u' → logprob: -16.375
    6. 't' → logprob: -17.125
    7. 'MOD' → logprob: -17.625
    8. ' mod' → logprob: -17.625
    9. 'ision' → logprob: -17.75
    10. ' ' → logprob: -17.875

Token 79: '(S' (ID: 6181)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.5870949029922485
    2. 'S' → logprob: -0.9620949029922485
    3. '(T' → logprob: -2.962094783782959
    4. '(S' → logprob: -4.962094783782959
    5. ' T' → logprob: -6.337094783782959
    6. ' S' → logprob: -6.962094783782959
    7. '(' → logprob: -8.212095260620117
    8. 'U' → logprob: -9.212095260620117
    9. '   ' → logprob: -10.837095260620117
    10. '(U' → logprob: -10.962095260620117

Token 80: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. '2' → logprob: -14.50000286102295
    3. '   ' → logprob: -14.50000286102295
    4. '[-' → logprob: -14.62500286102295
    5. ' [' → logprob: -15.12500286102295
    6. ')' → logprob: -15.50000286102295
    7. '[
' → logprob: -15.68750286102295
    8. '	' → logprob: -16.125003814697266
    9. 's' → logprob: -16.312503814697266
    10. '```' → logprob: -16.500003814697266

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016611411410849541
    2. '[' → logprob: -9.000165939331055
    3. ' ' → logprob: -10.125165939331055
    4. '1' → logprob: -14.125165939331055
    5. '   ' → logprob: -14.812665939331055
    6. '  ' → logprob: -15.312665939331055
    7. '```' → logprob: -15.312665939331055
    8. '#' → logprob: -15.812665939331055
    9. '>' → logprob: -15.812665939331055
    10. '0' → logprob: -16.062665939331055

Token 82: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05506687983870506
    2. ' ,' → logprob: -2.9300668239593506
    3. ',T' → logprob: -8.80506706237793
    4. ' ' → logprob: -11.80506706237793
    5. '%,' → logprob: -12.43006706237793
    6. ',S' → logprob: -12.93006706237793
    7. '   ' → logprob: -13.18006706237793
    8. '-' → logprob: -13.18006706237793
    9. ',U' → logprob: -13.18006706237793
    10. '‌,' → logprob: -13.55506706237793

Token 83: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.005238025914877653
    2. ' T' → logprob: -5.255238056182861
    3. ' ' → logprob: -13.880237579345703
    4. '	T' → logprob: -14.005237579345703
    5. '   ' → logprob: -14.130237579345703
    6. '=T' → logprob: -14.505237579345703
    7. ')' → logprob: -14.880237579345703
    8. '  ' → logprob: -14.880237579345703
    9. '<|end|>' → logprob: -15.630237579345703
    10. '>T' → logprob: -16.255237579345703

Token 84: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22542108595371246
    2. '2' → logprob: -1.6004210710525513
    3. ' ' → logprob: -12.725420951843262
    4. '.' → logprob: -12.850420951843262
    5. '```' → logprob: -13.975420951843262
    6. ')' → logprob: -14.850420951843262
    7. '(' → logprob: -15.100420951843262
    8. '   ' → logprob: -15.850420951843262
    9. '#' → logprob: -15.850420951843262
    10. ',' → logprob: -16.100421905517578

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -12.125008583068848
    3. '[' → logprob: -12.750008583068848
    4. '```' → logprob: -16.250009536743164
    5. '0' → logprob: -16.500009536743164
    6. '   ' → logprob: -16.687509536743164
    7. ']' → logprob: -17.875009536743164
    8. '  ' → logprob: -18.500009536743164
    9. '२' → logprob: -18.625009536743164
    10. '۲' → logprob: -18.625009536743164

Token 86: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009557669400237501
    2. '])' → logprob: -7.750955581665039
    3. ' )' → logprob: -8.500955581665039
    4. ')
' → logprob: -8.875955581665039
    5. '),' → logprob: -9.750955581665039
    6. ')]' → logprob: -9.750955581665039
    7. ')])' → logprob: -10.875955581665039
    8. '):' → logprob: -11.000955581665039
    9. '))' → logprob: -11.625955581665039
    10. ')

' → logprob: -12.250955581665039

Token 87: '       ' (ID: 309)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -1.1770356893539429
    2. 'S' → logprob: -1.3020356893539429
    3. '   ' → logprob: -1.3020356893539429
    4. '       ' → logprob: -2.6770358085632324
    5. '[' → logprob: -3.1770358085632324
    6. 'for' → logprob: -3.6770358085632324
    7. ' for' → logprob: -5.927035808563232
    8. ' T' → logprob: -6.177035808563232
    9. ' S' → logprob: -6.552035808563232
    10. '[
' → logprob: -7.802035808563232

Token 88: ' T' (ID: 353)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8050292134284973
    2. 'T' (adapté à ' T') → logprob: -0.8050292134284973
    3. 'for' → logprob: -3.8050291538238525
    4. 'n' → logprob: -3.9300291538238525
    5. 'r' → logprob: -4.180029392242432
    6. '   ' → logprob: -4.680029392242432
    7. 'U' → logprob: -4.680029392242432
    8. 'q' → logprob: -5.055029392242432
    9. 'N' → logprob: -5.180029392242432
    10. '       ' → logprob: -5.680029392242432

Token 89: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06221773847937584
    2. '[' → logprob: -3.5622177124023438
    3. '=' → logprob: -3.6872177124023438
    4. ' =' → logprob: -5.437217712402344
    5. ',m' → logprob: -6.562217712402344
    6. ' ,' → logprob: -7.687217712402344
    7. ',s' → logprob: -9.437217712402344
    8. ',d' → logprob: -9.437217712402344
    9. '[:]' → logprob: -9.437217712402344
    10. '[:' → logprob: -9.562217712402344

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7417928576469421
    2. '2' → logprob: -0.7417928576469421
    3. '1' → logprob: -3.241792917251587
    4. ',' → logprob: -4.866792678833008
    5. 'm' → logprob: -8.866792678833008
    6. ',m' → logprob: -9.304292678833008
    7. '[' → logprob: -9.491792678833008
    8. ' ' → logprob: -9.804292678833008
    9. '],' → logprob: -9.804292678833008
    10. ' ,' → logprob: -10.179292678833008

Token 91: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011364567093551159
    2. ' ,' → logprob: -5.136364459991455
    3. '-' → logprob: -6.886364459991455
    4. ' -' → logprob: -7.011364459991455
    5. ' +=' → logprob: -7.636364459991455
    6. ' -=' → logprob: -7.761364459991455
    7. ',T' → logprob: -7.886364459991455
    8. '*' → logprob: -8.386364936828613
    9. '+' → logprob: -8.511364936828613
    10. '+=' → logprob: -8.636364936828613

Token 92: ' S' (ID: 336)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.034955523908138275
    2. ' T' → logprob: -3.5349555015563965
    3. 'S' → logprob: -5.2849555015563965
    4. ' S' → logprob: -9.284955978393555
    5. 's' → logprob: -11.909955978393555
    6. ' ' → logprob: -11.909955978393555
    7. '<|end|>' → logprob: -12.159955978393555
    8. '  ' → logprob: -12.409955978393555
    9. '   ' → logprob: -12.909955978393555
    10. '<|end|>' → logprob: -13.284955978393555

Token 93: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003800296690315008
    2. '0' → logprob: -8.00037956237793
    3. '.' → logprob: -10.12537956237793
    4. ',' → logprob: -13.25037956237793
    5. '=' → logprob: -14.00037956237793
    6. ' ' → logprob: -15.00037956237793
    7. ' [' → logprob: -15.31287956237793
    8. '[
' → logprob: -15.50037956237793
    9. '```' → logprob: -15.75037956237793
    10. '   ' → logprob: -16.06287956237793

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006214152672328055
    2. '[' → logprob: -7.500621318817139
    3. '1' → logprob: -10.250621795654297
    4. ' ' → logprob: -10.750621795654297
    5. '<|end|>' → logprob: -12.000621795654297
    6. '<|end|>' → logprob: -12.500621795654297
    7. ']' → logprob: -14.875621795654297
    8. '   ' → logprob: -15.000621795654297
    9. '-' → logprob: -15.000621795654297
    10. '  ' → logprob: -15.875621795654297

Token 95: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2639244794845581
    2. ' =' → logprob: -1.513924479484558
    3. ',' → logprob: -4.513924598693848
    4. ' ' → logprob: -8.263924598693848
    5. '<|end|>' → logprob: -8.888924598693848
    6. ' -=' → logprob: -9.388924598693848
    7. ' ,' → logprob: -9.513924598693848
    8. '    ' → logprob: -9.638924598693848
    9. '-' → logprob: -9.638924598693848
    10. '-=' → logprob: -10.013924598693848

Token 96: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20763103663921356
    2. '=' → logprob: -1.83263099193573
    3. ',S' → logprob: -3.9576311111450195
    4. ' ,' → logprob: -5.2076311111450195
    5. ' =' → logprob: -6.4576311111450195
    6. '=S' → logprob: -6.8326311111450195
    7. ',T' → logprob: -8.70763111114502
    8. ',s' → logprob: -10.20763111114502
    9. 'S' → logprob: -11.20763111114502
    10. '[' → logprob: -11.45763111114502

Token 97: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.08909758925437927
    2. ' S' → logprob: -2.464097499847412
    3. '(S' → logprob: -9.33909797668457
    4. '   ' → logprob: -10.46409797668457
    5. '  ' → logprob: -11.08909797668457
    6. ' ' → logprob: -11.21409797668457
    7. 's' → logprob: -12.33909797668457
    8. ' (' → logprob: -12.58909797668457
    9. '    ' → logprob: -13.58909797668457
    10. '(' → logprob: -13.96409797668457

Token 98: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1428036093711853
    2. '0' → logprob: -2.01780366897583
    3. ' ' → logprob: -10.142803192138672
    4. ' [' → logprob: -10.267803192138672
    5. '(' → logprob: -11.017803192138672
    6. '1' → logprob: -11.642803192138672
    7. '-' → logprob: -11.767803192138672
    8. '   ' → logprob: -11.892803192138672
    9. ',' → logprob: -12.705303192138672
    10. '  ' → logprob: -13.080303192138672

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002979240380227566
    2. '[' → logprob: -8.375297546386719
    3. ' ' → logprob: -9.750297546386719
    4. '1' → logprob: -11.875297546386719
    5. '-' → logprob: -14.375297546386719
    6. '.' → logprob: -14.875297546386719
    7. ',' → logprob: -15.000297546386719
    8. '   ' → logprob: -15.375297546386719
    9. ' [' → logprob: -16.06279754638672
    10. '```' → logprob: -16.68779754638672

Token 100: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6341690421104431
    2. ' -' → logprob: -0.7591690421104431
    3. '-T' → logprob: -6.759169101715088
    4. ',' → logprob: -8.00916862487793
    5. ' ' → logprob: -10.13416862487793
    6. ' ,' → logprob: -11.00916862487793
    7. '-S' → logprob: -12.63416862487793
    8. ')' → logprob: -13.00916862487793
    9. '    ' → logprob: -13.13416862487793
    10. '   ' → logprob: -13.25916862487793

Token 101: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23165515065193176
    2. ' -' → logprob: -1.6066551208496094
    3. '-T' → logprob: -5.481655120849609
    4. ',' → logprob: -6.231655120849609
    5. '-S' → logprob: -10.35665512084961
    6. ' ,' → logprob: -10.85665512084961
    7. ' ' → logprob: -11.10665512084961
    8. ',T' → logprob: -11.60665512084961
    9. '-,' → logprob: -12.23165512084961
    10. '-t' → logprob: -13.60665512084961

Token 102: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0008165352046489716
    2. ' d' → logprob: -7.125816345214844
    3. '   ' → logprob: -12.250816345214844
    4. ' ' → logprob: -12.500816345214844
    5. '	d' → logprob: -13.125816345214844
    6. '  ' → logprob: -14.125816345214844
    7. 'T' → logprob: -14.625816345214844
    8. '    ' → logprob: -15.750816345214844
    9. '     ' → logprob: -16.250816345214844
    10. '       ' → logprob: -17.125816345214844

Token 103: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.020044375211000443
    2. '*T' → logprob: -4.020044326782227
    3. ' *' → logprob: -6.270044326782227
    4. '   ' → logprob: -15.270044326782227
    5. '**' → logprob: -16.645044326782227
    6. 'T' → logprob: -16.895044326782227
    7. '*t' → logprob: -17.270044326782227
    8. ' ' → logprob: -17.395044326782227
    9. '`' → logprob: -17.895044326782227
    10. '  ' → logprob: -17.895044326782227

Token 104: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0021876145619899035
    2. ' T' → logprob: -6.127187728881836
    3. '	T' → logprob: -14.002187728881836
    4. '   ' → logprob: -14.752187728881836
    5. '[T' → logprob: -15.127187728881836
    6. '  ' → logprob: -15.127187728881836
    7. '[' → logprob: -15.502187728881836
    8. '*T' → logprob: -15.502187728881836
    9. ' ' → logprob: -15.877187728881836
    10. '<|end|>' → logprob: -16.127187728881836

Token 105: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007104054093360901
    2. '0' → logprob: -7.250710487365723
    3. ' [' → logprob: -15.750710487365723
    4. '   ' → logprob: -16.375709533691406
    5. '(' → logprob: -16.500709533691406
    6. '```' → logprob: -16.500709533691406
    7. '1' → logprob: -17.250709533691406
    8. '.' → logprob: -17.500709533691406
    9. ' ' → logprob: -17.750709533691406
    10. '[
' → logprob: -17.875709533691406

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.375
    3. '[' → logprob: -16.5
    4. '۰' → logprob: -19.375
    5. '   ' → logprob: -20.0
    6. '1' → logprob: -20.5
    7. '<|end|>' → logprob: -21.125
    8. '<|end|>' → logprob: -21.125
    9. '０' → logprob: -21.5
    10. '০' → logprob: -21.8125

Token 107: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009205120149999857
    2. ' ,' → logprob: -7.000920295715332
    3. '),' → logprob: -12.500920295715332
    4. ',T' → logprob: -13.000920295715332
    5. '],' → logprob: -14.125920295715332
    6. '   ' → logprob: -14.375920295715332
    7. ',
' → logprob: -14.750920295715332
    8. ' ' → logprob: -15.250920295715332
    9. ',S' → logprob: -15.375920295715332
    10. '<|end|>' → logprob: -15.625920295715332

Token 108: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.31511807441711426
    2. ' T' → logprob: -1.3151180744171143
    3. 'S' → logprob: -6.690117835998535
    4. ' S' → logprob: -7.940117835998535
    5. '   ' → logprob: -8.940117835998535
    6. '  ' → logprob: -9.815117835998535
    7. ' ' → logprob: -10.315117835998535
    8. '    ' → logprob: -10.690117835998535
    9. '       ' → logprob: -11.940117835998535
    10. '      ' → logprob: -13.315117835998535

Token 109: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9743012671824545e-05
    2. '1' → logprob: -10.875020027160645
    3. '0' → logprob: -14.625020027160645
    4. '   ' → logprob: -15.875020027160645
    5. '[
' → logprob: -16.375019073486328
    6. ' [' → logprob: -17.000019073486328
    7. '```' → logprob: -17.750019073486328
    8. '	' → logprob: -18.125019073486328
    9. '-' → logprob: -18.500019073486328
    10. '(' → logprob: -18.750019073486328

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00034535606391727924
    2. '[' → logprob: -8.125345230102539
    3. '1' → logprob: -10.000345230102539
    4. ' ' → logprob: -13.375345230102539
    5. '   ' → logprob: -14.687845230102539
    6. ']' → logprob: -14.687845230102539
    7. '۰' → logprob: -15.500345230102539
    8. '][' → logprob: -15.750345230102539
    9. '<|end|>' → logprob: -15.812845230102539
    10. '```' → logprob: -16.06284523010254

Token 111: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008381003513932228
    2. '   ' → logprob: -5.258380889892578
    3. '<|end|>' → logprob: -6.633380889892578
    4. 'T' → logprob: -7.258380889892578
    5. ',' → logprob: -8.008380889892578
    6. ' ' → logprob: -8.133380889892578
    7. ' T' → logprob: -8.633380889892578
    8. '[' → logprob: -9.133380889892578
    9. '  ' → logprob: -10.133380889892578
    10. '      ' → logprob: -10.633380889892578

Token 113: ' T' (ID: 353)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23328016698360443
    2. 'T' (adapté à ' T') → logprob: -1.6082801818847656
    3. ' T' → logprob: -4.983280181884766
    4. 'S' → logprob: -7.983280181884766
    5. '   ' → logprob: -7.983280181884766
    6. '<|end|>' → logprob: -9.358280181884766
    7. ',' → logprob: -9.483280181884766
    8. ' ' → logprob: -10.233280181884766
    9. '[' → logprob: -10.858280181884766
    10. '      ' → logprob: -11.233280181884766

Token 114: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006347587914206088
    2. ',' → logprob: -7.375634670257568
    3. '1' → logprob: -12.000635147094727
    4. '   ' → logprob: -14.250635147094727
    5. ' ,' → logprob: -14.625635147094727
    6. '=' → logprob: -15.000635147094727
    7. ' ' → logprob: -15.875635147094727
    8. '  ' → logprob: -16.250635147094727
    9. ',[' → logprob: -16.375635147094727
    10. ' [' → logprob: -16.625635147094727

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.875005722045898
    3. '0' → logprob: -13.000005722045898
    4. '2' → logprob: -15.125005722045898
    5. '   ' → logprob: -16.0000057220459
    6. ' ' → logprob: -16.8125057220459
    7. '```' → logprob: -17.5000057220459
    8. '
' → logprob: -17.5625057220459
    9. '' → logprob: -17.7500057220459
    10. '  ' → logprob: -18.0000057220459

Token 116: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.15441757265944e-05
    2. ' ,' → logprob: -10.625031471252441
    3. '],' → logprob: -12.625031471252441
    4. '=' → logprob: -13.250031471252441
    5. '),' → logprob: -13.625031471252441
    6. ',S' → logprob: -14.875031471252441
    7. 's' → logprob: -15.625031471252441
    8. '>,' → logprob: -16.500032424926758
    9. ',s' → logprob: -16.625032424926758
    10. ',T' → logprob: -17.250032424926758

Token 117: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.01251282636076212
    2. ' S' → logprob: -4.387512683868408
    3. '   ' → logprob: -13.762513160705566
    4. ' ' → logprob: -14.012513160705566
    5. '  ' → logprob: -14.137513160705566
    6. 's' → logprob: -15.637513160705566
    7. '    ' → logprob: -16.26251220703125
    8. '       ' → logprob: -16.51251220703125
    9. '	S' → logprob: -17.01251220703125
    10. ',' → logprob: -17.26251220703125

Token 118: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. ' [' → logprob: -14.250001907348633
    3. '   ' → logprob: -14.750001907348633
    4. '=' → logprob: -15.000001907348633
    5. '1' → logprob: -15.625001907348633
    6. ',' → logprob: -16.125001907348633
    7. '0' → logprob: -16.125001907348633
    8. '[
' → logprob: -16.250001907348633
    9. ' =' → logprob: -16.750001907348633
    10. '    ' → logprob: -16.875001907348633

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008061755215749145
    2. '[' → logprob: -7.1258063316345215
    3. '0' → logprob: -14.750805854797363
    4. ' ' → logprob: -14.875805854797363
    5. '   ' → logprob: -15.250805854797363
    6. '
' → logprob: -16.62580680847168
    7. '  ' → logprob: -16.75080680847168
    8. '```' → logprob: -16.75080680847168
    9. '-' → logprob: -16.87580680847168
    10. '(' → logprob: -16.93830680847168

Token 120: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25195634365081787
    2. ' =' → logprob: -1.5019563436508179
    3. ' ' → logprob: -10.87695598602295
    4. '   ' → logprob: -12.62695598602295
    5. '    ' → logprob: -13.62695598602295
    6. ')' → logprob: -13.62695598602295
    7. ']' → logprob: -13.87695598602295
    8. ',' → logprob: -14.00195598602295
    9. '        ' → logprob: -15.25195598602295
    10. '  ' → logprob: -15.75195598602295

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01822369173169136
    2. ' =' → logprob: -4.018223762512207
    3. ',' → logprob: -9.518223762512207
    4. ' ' → logprob: -15.643223762512207
    5. ' ,' → logprob: -17.01822280883789
    6. '   ' → logprob: -17.14322280883789
    7. '=s' → logprob: -17.76822280883789
    8. '    ' → logprob: -18.14322280883789
    9. 's' → logprob: -18.64322280883789
    10. '  ' → logprob: -18.89322280883789

Token 122: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.029769234359264374
    2. ' S' → logprob: -3.5297691822052
    3. 's' → logprob: -11.154768943786621
    4. '(S' → logprob: -13.279768943786621
    5. '   ' → logprob: -14.029768943786621
    6. ' ' → logprob: -14.154768943786621
    7. '  ' → logprob: -14.279768943786621
    8. '	S' → logprob: -15.529768943786621
    9. '_S' → logprob: -15.904768943786621
    10. '    ' → logprob: -16.279769897460938

Token 123: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.65707261255011e-06
    2. '1' → logprob: -11.750008583068848
    3. '0' → logprob: -15.500008583068848
    4. ' ' → logprob: -16.000009536743164
    5. '-' → logprob: -16.375009536743164
    6. '   ' → logprob: -16.875009536743164
    7. '(' → logprob: -16.875009536743164
    8. ' [' → logprob: -17.500009536743164
    9. '[
' → logprob: -17.625009536743164
    10. 's' → logprob: -18.000009536743164

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011386145837605
    2. '[' → logprob: -4.511385917663574
    3. '0' → logprob: -8.761385917663574
    4. ' ' → logprob: -9.636385917663574
    5. 'S' → logprob: -10.136385917663574
    6. '-' → logprob: -10.261385917663574
    7. 's' → logprob: -10.886385917663574
    8. '   ' → logprob: -12.136385917663574
    9. '
' → logprob: -12.136385917663574
    10. '  ' → logprob: -12.761385917663574

Token 125: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016298402100801468
    2. '-' → logprob: -4.141298294067383
    3. ',' → logprob: -8.641298294067383
    4. '[' → logprob: -9.641298294067383
    5. ' ' → logprob: -11.641298294067383
    6. '+' → logprob: -12.141298294067383
    7. ' +' → logprob: -12.391298294067383
    8. ' ,' → logprob: -13.891298294067383
    9. '   ' → logprob: -14.141298294067383
    10. ' ' → logprob: -14.266298294067383

Token 126: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3134738802909851
    2. '-' → logprob: -1.3134739398956299
    3. '[' → logprob: -9.18847370147705
    4. ',' → logprob: -10.18847370147705
    5. '1' → logprob: -10.31347370147705
    6. ' ' → logprob: -10.93847370147705
    7. '+' → logprob: -11.31347370147705
    8. 'm' → logprob: -12.81347370147705
    9. '   ' → logprob: -13.18847370147705
    10. ' +' → logprob: -13.31347370147705

Token 127: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12693388760089874
    2. ' d' → logprob: -2.1269338130950928
    3. ' ' → logprob: -12.751934051513672
    4. '   ' → logprob: -13.376934051513672
    5. '	d' → logprob: -14.126934051513672
    6. '  ' → logprob: -15.501934051513672
    7. 's' → logprob: -16.376934051513672
    8. 'T' → logprob: -16.376934051513672
    9. '    ' → logprob: -16.501934051513672
    10. '       ' → logprob: -17.251934051513672

Token 128: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03809760883450508
    2. '*' → logprob: -3.288097620010376
    3. '[' → logprob: -10.038097381591797
    4. '*S' → logprob: -12.163097381591797
    5. '*T' → logprob: -12.413097381591797
    6. ' ' → logprob: -13.538097381591797
    7. ',' → logprob: -13.788097381591797
    8. '*[' → logprob: -15.038097381591797
    9. '   ' → logprob: -15.163097381591797
    10. '*s' → logprob: -16.288097381591797

Token 129: ' T' (ID: 353)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07910635322332382
    2. 'T' → logprob: -2.579106330871582
    3. ' S' → logprob: -8.954106330871582
    4. ' T' → logprob: -9.954106330871582
    5. 's' → logprob: -11.329106330871582
    6. '   ' → logprob: -11.329106330871582
    7. ' ' → logprob: -12.079106330871582
    8. '[' → logprob: -12.454106330871582
    9. '  ' → logprob: -12.579106330871582
    10. '       ' → logprob: -13.329106330871582

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5213274309644476e-05
    2. '1' → logprob: -11.125015258789062
    3. ',' → logprob: -16.875015258789062
    4. '[
' → logprob: -17.000015258789062
    5. '```' → logprob: -17.125015258789062
    6. 'T' → logprob: -17.250015258789062
    7. '-' → logprob: -17.375015258789062
    8. ']' → logprob: -17.750015258789062
    9. 's' → logprob: -17.750015258789062
    10. '(' → logprob: -18.000015258789062

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010950337309623137
    2. '[' → logprob: -9.125109672546387
    3. ' ' → logprob: -15.500109672546387
    4. '0' → logprob: -15.875109672546387
    5. '(' → logprob: -16.12510871887207
    6. '
' → logprob: -17.00010871887207
    7. '   ' → logprob: -17.75010871887207
    8. '```' → logprob: -18.43760871887207
    9. 'T' → logprob: -18.81260871887207
    10. '-' → logprob: -18.93760871887207

Token 132: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014656837447546422
    2. ' ,' → logprob: -9.500146865844727
    3. '],' → logprob: -9.625146865844727
    4. ',S' → logprob: -12.625146865844727
    5. '),' → logprob: -14.875146865844727
    6. '   ' → logprob: -15.125146865844727
    7. ',
' → logprob: -15.250146865844727
    8. 'S' → logprob: -15.375146865844727
    9. ',T' → logprob: -15.375146865844727
    10. '       ' → logprob: -15.375146865844727

Token 133: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0009120595059357584
    2. ' T' → logprob: -7.000912189483643
    3. '   ' → logprob: -15.625911712646484
    4. '  ' → logprob: -15.750911712646484
    5. 'S' → logprob: -16.000911712646484
    6. ' ' → logprob: -16.500911712646484
    7. '	T' → logprob: -17.625911712646484
    8. 't' → logprob: -18.500911712646484
    9. '    ' → logprob: -18.625911712646484
    10. '1' → logprob: -19.000911712646484

Token 134: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '1' → logprob: -13.500001907348633
    3. '(' → logprob: -17.125001907348633
    4. '-' → logprob: -17.500001907348633
    5. '0' → logprob: -17.875001907348633
    6. '```' → logprob: -18.250001907348633
    7. '[
' → logprob: -18.250001907348633
    8. '.' → logprob: -18.625001907348633
    9. ' [' → logprob: -19.125001907348633
    10. '<|end|>' → logprob: -19.125001907348633

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4378848391061183e-05
    2. '[' → logprob: -11.500014305114746
    3. '0' → logprob: -12.500014305114746
    4. ' ' → logprob: -15.875014305114746
    5. '<|end|>' → logprob: -16.125015258789062
    6. '(' → logprob: -16.500015258789062
    7. '۱' → logprob: -17.687515258789062
    8. '-' → logprob: -17.812515258789062
    9. '   ' → logprob: -18.250015258789062
    10. ']' → logprob: -18.375015258789062

Token 136: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21890144050121307
    2. '<|end|>' → logprob: -2.0939013957977295
    3. ']' → logprob: -2.8439013957977295
    4. '       ' → logprob: -4.343901634216309
    5. '<|end|>' → logprob: -6.843901634216309
    6. '   ' → logprob: -7.968901634216309
    7. '}' → logprob: -8.343901634216309
    8. ')
' → logprob: -8.843901634216309
    9. '```' → logprob: -8.968901634216309
    10. ')]' → logprob: -9.968901634216309

Token 137: '       ' (ID: 309)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.48195239901542664
    2. '       ' → logprob: -0.981952428817749
    3. ' T' → logprob: -4.98195219039917
    4. '   ' → logprob: -7.23195219039917
    5. ',' → logprob: -9.606952667236328
    6. '```' → logprob: -9.606952667236328
    7. '[' → logprob: -9.731952667236328
    8. ' ' → logprob: -10.481952667236328
    9. '      ' → logprob: -12.106952667236328
    10. ',T' → logprob: -12.481952667236328

Token 138: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' (adapté à ' T') → logprob: -6.337155355140567e-05
    2. '       ' → logprob: -10.375062942504883
    3. ' T' → logprob: -11.000062942504883
    4. '   ' → logprob: -11.250062942504883
    5. 'S' → logprob: -13.125062942504883
    6. '```' → logprob: -15.375062942504883
    7. 't' → logprob: -16.625062942504883
    8. '  ' → logprob: -17.000062942504883
    9. '
' → logprob: -17.625062942504883
    10. ' ' → logprob: -17.750062942504883

Token 139: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003243798855692148
    2. '2' → logprob: -8.250324249267578
    3. ',' → logprob: -9.750324249267578
    4. '=' → logprob: -12.875324249267578
    5. '.' → logprob: -14.500324249267578
    6. ']' → logprob: -14.750324249267578
    7. '.append' → logprob: -15.125324249267578
    8. '   ' → logprob: -15.625324249267578
    9. ' =' → logprob: -15.625324249267578
    10. ' ' → logprob: -15.750324249267578

Token 140: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2948405128554441e-05
    2. '0' → logprob: -12.12501335144043
    3. '1' → logprob: -12.25001335144043
    4. '[' → logprob: -13.25001335144043
    5. '```' → logprob: -15.50001335144043
    6. ' ' → logprob: -15.87501335144043
    7. '(' → logprob: -16.25001335144043
    8. '-' → logprob: -16.56251335144043
    9. '۲' → logprob: -16.56251335144043
    10. '   ' → logprob: -16.81251335144043

Token 141: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.006351773627102375
    2. ',' → logprob: -5.131351947784424
    3. ']' → logprob: -7.881351947784424
    4. ' ],' → logprob: -10.756351470947266
    5. '),' → logprob: -11.506351470947266
    6. ' ,' → logprob: -12.631351470947266
    7. '},' → logprob: -12.881351470947266
    8. '>,' → logprob: -13.131351470947266
    9. '],
' → logprob: -13.506351470947266
    10. '=' → logprob: -13.756351470947266

Token 142: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00014001218369230628
    2. ' S' → logprob: -8.875140190124512
    3. '  ' → logprob: -16.125139236450195
    4. '   ' → logprob: -17.125139236450195
    5. 's' → logprob: -17.375139236450195
    6. '	S' → logprob: -17.500139236450195
    7. ' ' → logprob: -17.875139236450195
    8. '       ' → logprob: -18.625139236450195
    9. '    ' → logprob: -20.000139236450195
    10. '=S' → logprob: -20.250139236450195

Token 143: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '=' → logprob: -14.625000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '[
' → logprob: -16.000001907348633
    5. '(' → logprob: -16.125001907348633
    6. '0' → logprob: -16.250001907348633
    7. '```' → logprob: -16.875001907348633
    8. '...' → logprob: -17.500001907348633
    9. ',' → logprob: -17.625001907348633
    10. '	' → logprob: -17.625001907348633

Token 144: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010530461557209492
    2. '[' → logprob: -4.635530471801758
    3. '1' → logprob: -7.260530471801758
    4. '0' → logprob: -9.635530471801758
    5. '(' → logprob: -13.260530471801758
    6. ']' → logprob: -13.510530471801758
    7. '```' → logprob: -13.760530471801758
    8. ' ' → logprob: -15.073030471801758
    9. '   ' → logprob: -15.073030471801758
    10. ')' → logprob: -15.198030471801758

Token 145: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00454606581479311
    2. ' =' → logprob: -5.754546165466309
    3. ']' → logprob: -7.129546165466309
    4. ')' → logprob: -7.504546165466309
    5. ']=' → logprob: -11.629546165466309
    6. ')=' → logprob: -12.254546165466309
    7. ',' → logprob: -13.879546165466309
    8. ' ' → logprob: -14.879546165466309
    9. '   ' → logprob: -15.754546165466309
    10. '=s' → logprob: -16.254545211791992

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008620131760835648
    2. ' =' → logprob: -4.758620262145996
    3. ',' → logprob: -12.133620262145996
    4. '=S' → logprob: -16.25861930847168
    5. ' ' → logprob: -17.88361930847168
    6. '   ' → logprob: -19.38361930847168
    7. '=s' → logprob: -19.50861930847168
    8. '＝' → logprob: -19.50861930847168
    9. ',S' → logprob: -19.75861930847168
    10. 'S' → logprob: -19.75861930847168

Token 147: ' m' (ID: 284)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.026343610137701035
    2. ' S' → logprob: -3.651343584060669
    3. ' ' → logprob: -10.40134334564209
    4. '  ' → logprob: -11.90134334564209
    5. '   ' → logprob: -12.90134334564209
    6. 'T' → logprob: -13.15134334564209
    7. 's' → logprob: -14.02634334564209
    8. 'm' → logprob: -15.40134334564209
    9. '    ' → logprob: -15.52634334564209
    10. '	S' → logprob: -16.026344299316406

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04444514960050583
    2. 'T' → logprob: -3.169445037841797
    3. ',T' → logprob: -7.044445037841797
    4. '[' → logprob: -8.294445037841797
    5. ' T' → logprob: -8.919445037841797
    6. ' ,' → logprob: -8.919445037841797
    7. 'S' → logprob: -11.044445037841797
    8. '   ' → logprob: -11.294445037841797
    9. '       ' → logprob: -12.294445037841797
    10. ',S' → logprob: -12.794445037841797

Token 149: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00018852073117159307
    2. ' T' → logprob: -8.750188827514648
    3. 'S' → logprob: -10.625188827514648
    4. 'U' → logprob: -13.750188827514648
    5. '   ' → logprob: -13.750188827514648
    6. 'V' → logprob: -14.250188827514648
    7. ' ' → logprob: -14.625188827514648
    8. '  ' → logprob: -14.750188827514648
    9. '	T' → logprob: -14.750188827514648
    10. 'd' → logprob: -14.875188827514648

Token 150: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12693671882152557
    2. '2' → logprob: -2.126936674118042
    3. '.' → logprob: -12.251936912536621
    4. '(' → logprob: -13.126936912536621
    5. ' ' → logprob: -15.001936912536621
    6. '<|end|>' → logprob: -15.126936912536621
    7. '```' → logprob: -15.376936912536621
    8. '   ' → logprob: -15.626936912536621
    9. '	' → logprob: -15.626936912536621
    10. '_' → logprob: -16.251935958862305

Token 151: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0325924449716695e-05
    2. '[' → logprob: -11.50001049041748
    3. '۲' → logprob: -16.125009536743164
    4. '२' → logprob: -17.500009536743164
    5. '২' → logprob: -18.250009536743164
    6. '```' → logprob: -18.250009536743164
    7. ']' → logprob: -18.375009536743164
    8. '２' → logprob: -19.000009536743164
    9. ' ' → logprob: -19.125009536743164
    10. '(' → logprob: -19.125009536743164

Token 152: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2869540750980377
    2. '<|end|>' → logprob: -1.4119540452957153
    3. '       ' → logprob: -5.661953926086426
    4. ')' → logprob: -6.536953926086426
    5. ',' → logprob: -8.661953926086426
    6. '    ' → logprob: -8.786953926086426
    7. '<|end|>' → logprob: -9.036953926086426
    8. '	return' → logprob: -9.036953926086426
    9. '[' → logprob: -10.161953926086426
    10. ' ' → logprob: -10.161953926086426

Token 154: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ' (' (ID: 350)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.1601702868938446
    2. 'S' → logprob: -2.660170316696167
    3. '(T' → logprob: -2.785170316696167
    4. '(S' → logprob: -4.660170078277588
    5. ' T' → logprob: -5.410170078277588
    6. ' (' → logprob: -6.660170078277588
    7. ' S' → logprob: -7.910170078277588
    8. '[T' → logprob: -8.535170555114746
    9. '(-' → logprob: -8.785170555114746
    10. '   ' → logprob: -8.910170555114746

Token 156: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0008982429862953722
    2. ' T' → logprob: -7.250898361206055
    3. 'S' → logprob: -9.375898361206055
    4. '   ' → logprob: -9.750898361206055
    5. '(T' → logprob: -10.125898361206055
    6. ')' → logprob: -13.375898361206055
    7. '	T' → logprob: -14.000898361206055
    8. '(' → logprob: -14.500898361206055
    9. ' ' → logprob: -14.625898361206055
    10. '[T' → logprob: -14.625898361206055

Token 157: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010925926035270095
    2. '0' → logprob: -6.876092433929443
    3. ')' → logprob: -9.751092910766602
    4. ' [' → logprob: -15.001092910766602
    5. '(' → logprob: -15.126092910766602
    6. ')[' → logprob: -15.251092910766602
    7. ' ' → logprob: -16.1260929107666
    8. '```' → logprob: -16.6260929107666
    9. ']' → logprob: -16.6885929107666
    10. ',' → logprob: -16.8135929107666

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.145118848304264e-05
    2. '1' → logprob: -10.250051498413086
    3. '2' → logprob: -11.750051498413086
    4. ' ' → logprob: -12.375051498413086
    5. '[' → logprob: -13.312551498413086
    6. '(' → logprob: -15.125051498413086
    7. ']' → logprob: -15.312551498413086
    8. '
' → logprob: -15.437551498413086
    9. ':' → logprob: -15.625051498413086
    10. ')' → logprob: -15.750051498413086

Token 159: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004224515287205577
    2. ' ,' → logprob: -8.500422477722168
    3. ',T' → logprob: -9.500422477722168
    4. '%' → logprob: -9.625422477722168
    5. ' %' → logprob: -9.625422477722168
    6. ')' → logprob: -12.500422477722168
    7. '%,' → logprob: -12.625422477722168
    8. '   ' → logprob: -12.625422477722168
    9. '),' → logprob: -14.625422477722168
    10. ' ' → logprob: -15.250422477722168

Token 160: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00020687808864749968
    2. ' T' → logprob: -8.50020694732666
    3. '   ' → logprob: -12.87520694732666
    4. ' ' → logprob: -15.00020694732666
    5. '	T' → logprob: -15.62520694732666
    6. '    ' → logprob: -16.250205993652344
    7. '  ' → logprob: -16.375205993652344
    8. ')' → logprob: -17.375205993652344
    9. '[T' → logprob: -17.375205993652344
    10. '(T' → logprob: -18.125205993652344

Token 161: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0046316226944327354
    2. '1' → logprob: -5.379631519317627
    3. '][' → logprob: -12.629631996154785
    4. ')' → logprob: -13.004631996154785
    5. '[
' → logprob: -13.754631996154785
    6. ')[' → logprob: -13.879631996154785
    7. ']' → logprob: -14.004631996154785
    8. ',' → logprob: -14.254631996154785
    9. ' [' → logprob: -14.629631996154785
    10. '])' → logprob: -14.754631996154785

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -14.500000953674316
    3. '[' → logprob: -15.875000953674316
    4. '```' → logprob: -16.75
    5. '0' → logprob: -16.875
    6. '(' → logprob: -17.25
    7. '۱' → logprob: -17.8125
    8. '-' → logprob: -17.875
    9. ']' → logprob: -18.125
    10. '
' → logprob: -18.1875

Token 163: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ' )' → logprob: -13.500005722045898
    3. ')
' → logprob: -13.625005722045898
    4. '   ' → logprob: -14.375005722045898
    5. ')}' → logprob: -14.500005722045898
    6. '}' → logprob: -14.750005722045898
    7. '[' → logprob: -15.250005722045898
    8. '),' → logprob: -15.500005722045898
    9. ',' → logprob: -15.625005722045898
    10. '<|end|>' → logprob: -15.625005722045898

Token 164: 'class' (ID: 1444)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015239379368722439
    2. ':' → logprob: -4.390239238739014
    3. ',' → logprob: -6.765239238739014
    4. '<|end|>' → logprob: -7.140239238739014
    5. ' )' → logprob: -8.390239715576172
    6. ' ' → logprob: -8.890239715576172
    7. '(' → logprob: -9.140239715576172
    8. '#' → logprob: -9.140239715576172
    9. '[' → logprob: -9.890239715576172
    10. '_' → logprob: -10.390239715576172

Token 165: ' Funk' (ID: 36107)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -1.3518126010894775
    2. 'X' → logprob: -1.8518126010894775
    3. ' Solution' → logprob: -2.2268126010894775
    4. ' Graph' → logprob: -2.7268126010894775
    5. ' Z' → logprob: -3.7268126010894775
    6. ' Matrix' → logprob: -3.8518126010894775
    7. ' Mod' → logprob: -3.8518126010894775
    8. ' M' → logprob: -3.8518126010894775
    9. 'Mod' → logprob: -3.9768126010894775
    10. ' Solver' → logprob: -3.9768126010894775

Token 166: 'y' (ID: 88)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.037566494196653366
    2. ':
' → logprob: -3.9125664234161377
    3. '(F' → logprob: -5.037566661834717
    4. '():' → logprob: -5.037566661834717
    5. '(' → logprob: -6.287566661834717
    6. 'F' → logprob: -7.162566661834717
    7. '():
' → logprob: -8.412566184997559
    8. '(Function' → logprob: -9.037566184997559
    9. '(object' → logprob: -9.162566184997559
    10. ' (' → logprob: -9.162566184997559

Token 167: 'Mod' (ID: 4721)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013376918621361256
    2. '():' → logprob: -4.763376712799072
    3. '(' → logprob: -6.013376712799072
    4. ':
' → logprob: -6.888376712799072
    5. 'F' → logprob: -8.13837718963623
    6. '(object' → logprob: -8.51337718963623
    7. ' :' → logprob: -8.63837718963623
    8. '):' → logprob: -9.38837718963623
    9. '(F' → logprob: -9.88837718963623
    10. 'Function' → logprob: -10.63837718963623

Token 168: '(int' (ID: 2742)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006111674592830241
    2. ':
' → logprob: -7.500611305236816
    3. '(object' → logprob: -10.625611305236816
    4. '(' → logprob: -11.375611305236816
    5. '():' → logprob: -11.625611305236816
    6. ':def' → logprob: -12.250611305236816
    7. '):' → logprob: -12.500611305236816
    8. ' :' → logprob: -14.000611305236816
    9. ':**' → logprob: -14.250611305236816
    10. '```' → logprob: -14.375611305236816

Token 169: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000981958699412644
    2. '):
' → logprob: -7.12598180770874
    3. ')' → logprob: -8.750982284545898
    4. ':' → logprob: -11.375982284545898
    5. '):

' → logprob: -12.875982284545898
    6. ' ):' → logprob: -12.875982284545898
    7. '):
' → logprob: -13.625982284545898
    8. ',' → logprob: -14.375982284545898
    9. ''):' → logprob: -16.2509822845459
    10. '   ' → logprob: -16.6259822845459

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07299099117517471
    2. ' def' → logprob: -2.697990894317627
    3. '	def' → logprob: -6.072990894317627
    4. 'def' → logprob: -7.447990894317627
    5. ':' → logprob: -9.822991371154785
    6. ':
' → logprob: -10.822991371154785
    7. '):
' → logprob: -10.822991371154785
    8. ':def' → logprob: -10.947991371154785
    9. ',' → logprob: -11.572991371154785
    10. '\t' → logprob: -12.072991371154785

Token 171: ' #' (ID: 1069)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.23826287686824799
    2. '   ' → logprob: -1.6132628917694092
    3. 'def' → logprob: -4.48826265335083
    4. '	def' → logprob: -6.86326265335083
    5. ' __' → logprob: -7.98826265335083
    6. '\t' → logprob: -10.363263130187988
    7. '    ' → logprob: -10.363263130187988
    8. ' ' → logprob: -10.488263130187988
    9. '__' → logprob: -10.988263130187988
    10. ' _' → logprob: -11.488263130187988

Token 172: ' unconventional' (ID: 124893)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.26548081636428833
    2. 'def' → logprob: -1.6404807567596436
    3. '   ' → logprob: -3.3904807567596436
    4. ' __' → logprob: -5.390480995178223
    5. '__' → logprob: -7.765480995178223
    6. ' pass' → logprob: -7.765480995178223
    7. '    ' → logprob: -9.640480995178223
    8. 'pass' → logprob: -10.140480995178223
    9. ' ' → logprob: -11.015480995178223
    10. ' _' → logprob: -11.265480995178223

Token 173: ' mod' (ID: 1812)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39320358633995056
    2. 'def' → logprob: -1.518203616142273
    3. ' def' → logprob: -2.2682034969329834
    4. '    ' → logprob: -7.2682037353515625
    5. '    
' → logprob: -7.2682037353515625
    6. ' ' → logprob: -7.8932037353515625
    7. '  ' → logprob: -8.643203735351562
    8. '	def' → logprob: -9.143203735351562
    9. ' pass' → logprob: -9.393203735351562
    10. 'pass' → logprob: -9.893203735351562

Token 174: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8311929702758789
    2. ' def' → logprob: -1.081192970275879
    3. ':
' → logprob: -2.081192970275879
    4. ':' → logprob: -3.081192970275879
    5. '):
' → logprob: -3.831192970275879
    6. 'def' → logprob: -3.956192970275879
    7. '):' → logprob: -5.331192970275879
    8. ' ' → logprob: -5.456192970275879
    9. '	def' → logprob: -6.581192970275879
    10. '  ' → logprob: -7.456192970275879

Token 175: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14350394904613495
    2. ' def' → logprob: -3.0185039043426514
    3. ':' → logprob: -3.3935039043426514
    4. '
' → logprob: -3.5185039043426514
    5. ':
' → logprob: -5.0185041427612305
    6. '	def' → logprob: -5.1435041427612305
    7. 'def' → logprob: -5.2685041427612305
    8. '    
' → logprob: -6.2685041427612305
    9. ',' → logprob: -7.1435041427612305
    10. ':def' → logprob: -7.2685041427612305

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13179607689380646
    2. ':' → logprob: -2.75679612159729
    3. ':
' → logprob: -3.38179612159729
    4. ' def' → logprob: -4.006795883178711
    5. '	def' → logprob: -5.756795883178711
    6. 'def' → logprob: -6.381795883178711
    7. '
' → logprob: -7.006795883178711
    8. ':def' → logprob: -7.131795883178711
    9. '):
' → logprob: -7.256795883178711
    10. ',' → logprob: -8.256795883178711

Token 177: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20228612422943115
    2. ' def' → logprob: -1.9522861242294312
    3. 'def' (adapté à ' def') → logprob: -3.2022862434387207
    4. '	def' → logprob: -7.952286243438721
    5. '
' → logprob: -9.702285766601562
    6. '    
' → logprob: -10.827285766601562
    7. ' __' → logprob: -10.952285766601562
    8. '   ' → logprob: -11.202285766601562
    9. '__' → logprob: -11.577285766601562
    10. '    ' → logprob: -11.577285766601562

Token 178: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07069623470306396
    2. '__' → logprob: -2.8206963539123535
    3. 'pow' → logprob: -5.0706963539123535
    4. ' pow' → logprob: -7.0706963539123535
    5. 'mod' → logprob: -7.0706963539123535
    6. ' new' → logprob: -7.9456963539123535
    7. 'new' → logprob: -8.945695877075195
    8. ' mod' → logprob: -8.945695877075195
    9. '_mod' → logprob: -10.820695877075195
    10. 'init' → logprob: -11.070695877075195

Token 179: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2270994633436203
    2. 'init' → logprob: -2.2270994186401367
    3. 'mod' → logprob: -2.4770994186401367
    4. 'pow' → logprob: -5.102099418640137
    5. 'int' → logprob: -5.352099418640137
    6. 'flo' → logprob: -8.352099418640137
    7. 'call' → logprob: -9.227099418640137
    8. 'eq' → logprob: -10.227099418640137
    9. 'neg' → logprob: -10.727099418640137
    10. 'abs' → logprob: -10.852099418640137

Token 180: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -5.9153885558771435e-06
    2. '_(' → logprob: -12.125005722045898
    3. '__(
' → logprob: -15.500005722045898
    4. '(cls' → logprob: -15.750005722045898
    5. '__(*' → logprob: -17.3750057220459
    6. '___' → logprob: -18.2500057220459
    7. '__('' → logprob: -18.2500057220459
    8. 'cls' → logprob: -18.3750057220459
    9. '__((' → logprob: -18.3750057220459
    10. '__' → logprob: -18.5000057220459

Token 181: 'K' (ID: 42)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -5.512236498361744e-07
    2. 'self' → logprob: -15.125000953674316
    3. ' cls' → logprob: -15.875000953674316
    4. 'cl' → logprob: -16.75
    5. '(cls' → logprob: -17.875
    6. 'klass' → logprob: -19.625
    7. '_,' → logprob: -20.125
    8. '_cls' → logprob: -20.5
    9. 'Cls' → logprob: -20.5
    10. 'k' → logprob: -21.375

Token 182: 'LS' (ID: 10172)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13055822253227234
    2. 'cls' → logprob: -2.1305582523345947
    3. '_,' → logprob: -6.505558013916016
    4. '(cls' → logprob: -7.130558013916016
    5. '__,' → logprob: -7.630558013916016
    6. '   ' → logprob: -7.630558013916016
    7. ' cls' → logprob: -9.255558013916016
    8. ',class' → logprob: -9.380558013916016
    9. 'class' → logprob: -10.255558013916016
    10. 'Cls' → logprob: -10.380558013916016

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035870319698005915
    2. 'cls' → logprob: -8.250358581542969
    3. ',K' → logprob: -9.375358581542969
    4. ' ,' → logprob: -12.625358581542969
    5. '   ' → logprob: -13.000358581542969
    6. '_,' → logprob: -13.125358581542969
    7. '(cls' → logprob: -13.375358581542969
    8. ',k' → logprob: -13.875358581542969
    9. ',class' → logprob: -14.250358581542969
    10. ' cls' → logprob: -14.500358581542969

Token 184: ' V' (ID: 631)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.15674301981925964
    2. ' value' → logprob: -2.656743049621582
    3. 'val' → logprob: -2.906743049621582
    4. 'v' → logprob: -5.031743049621582
    5. 'n' → logprob: -5.531743049621582
    6. 'x' → logprob: -6.156743049621582
    7. ' val' → logprob: -6.281743049621582
    8. 'K' → logprob: -6.531743049621582
    9. 'cls' → logprob: -7.156743049621582
    10. 'N' → logprob: -7.156743049621582

Token 185: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030456893146038055
    2. '):' → logprob: -5.878045558929443
    3. ' ,' → logprob: -8.503046035766602
    4. '):
' → logprob: -11.753046035766602
    5. ':' → logprob: -12.003046035766602
    6. ',K' → logprob: -12.003046035766602
    7. ',V' → logprob: -12.128046035766602
    8. ' ):' → logprob: -13.003046035766602
    9. '   ' → logprob: -13.003046035766602
    10. '=' → logprob: -13.878046035766602

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40262264013290405
    2. '1' → logprob: -1.1526226997375488
    3. 'None' → logprob: -4.402622699737549
    4. '2' → logprob: -6.527622699737549
    5. ' ' → logprob: -6.902622699737549
    6. '7' → logprob: -8.27762222290039
    7. ' None' → logprob: -8.52762222290039
    8. '10' → logprob: -9.15262222290039
    9. '42' → logprob: -9.52762222290039
    10. '-' → logprob: -10.02762222290039

Token 187: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6433122754096985
    2. ',' → logprob: -0.7683122754096985
    3. '):
' → logprob: -4.643312454223633
    4. ' ,' → logprob: -7.768312454223633
    5. ' ):' → logprob: -8.268312454223633
    6. '):
' → logprob: -9.018312454223633
    7. ',K' → logprob: -9.643312454223633
    8. '   ' → logprob: -10.018312454223633
    9. ')' → logprob: -10.143312454223633
    10. ',k' → logprob: -11.018312454223633

Token 188: ' *' (ID: 425)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.25894811749458313
    2. ' M' → logprob: -1.6339480876922607
    3. 'N' → logprob: -4.38394832611084
    4. 'mod' → logprob: -4.88394832611084
    5. 'P' → logprob: -6.00894832611084
    6. ' mod' → logprob: -6.50894832611084
    7. ' N' → logprob: -6.50894832611084
    8. 'MOD' → logprob: -6.63394832611084
    9. 'W' → logprob: -6.88394832611084
    10. 'm' → logprob: -7.25894832611084

Token 189: 'a' (ID: 64)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.2679711580276489
    2. 'A' → logprob: -2.8929710388183594
    3. 'a' → logprob: -3.0179710388183594
    4. '_,' → logprob: -3.5179710388183594
    5. '_args' → logprob: -4.517971038818359
    6. 'K' → logprob: -5.017971038818359
    7. '_' → logprob: -5.017971038818359
    8. 'Ks' → logprob: -5.142971038818359
    9. '_)' → logprob: -5.142971038818359
    10. 'Q' → logprob: -5.392971038818359

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5212459564208984
    2. '):' → logprob: -1.0212459564208984
    3. 's' → logprob: -3.3962459564208984
    4. '):
' → logprob: -4.646245956420898
    5. ')' → logprob: -6.396245956420898
    6. ',args' → logprob: -7.521245956420898
    7. 'args' → logprob: -8.271245956420898
    8. ',K' → logprob: -8.771245956420898
    9. '):
' → logprob: -10.396245956420898
    10. '):

' → logprob: -10.396245956420898

Token 191: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04919255152344704
    2. ' **' → logprob: -3.5491926670074463
    3. ' M' → logprob: -4.799192428588867
    4. 'M' → logprob: -5.049192428588867
    5. 'm' → logprob: -7.174192428588867
    6. 'N' → logprob: -7.924192428588867
    7. 'n' → logprob: -8.174192428588867
    8. ' N' → logprob: -8.174192428588867
    9. 'mod' → logprob: -8.424192428588867
    10. 'K' → logprob: -8.424192428588867

Token 192: 'kw' (ID: 9500)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9773564338684082
    2. 'b' → logprob: -1.1023564338684082
    3. 'kw' → logprob: -2.227356433868408
    4. 'kwargs' → logprob: -2.977356433868408
    5. 'p' → logprob: -3.852356433868408
    6. 'r' → logprob: -3.852356433868408
    7. 'a' → logprob: -3.852356433868408
    8. 'args' → logprob: -4.477356433868408
    9. 'K' → logprob: -4.727356433868408
    10. 'w' → logprob: -4.852356433868408

Token 193: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4743300676345825
    2. '):
' → logprob: -0.9743300676345825
    3. '):
' → logprob: -8.724329948425293
    4. ')' → logprob: -9.849329948425293
    5. 's' → logprob: -10.599329948425293
    6. '):

' → logprob: -11.849329948425293
    7. ' ):' → logprob: -12.974329948425293
    8. ' ):
' → logprob: -14.099329948425293
    9. ':' → logprob: -14.224329948425293
    10. '   ' → logprob: -14.474329948425293

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006231655832380056
    2. 'return' → logprob: -5.506231784820557
    3. ' return' → logprob: -6.381231784820557
    4. 'obj' → logprob: -9.381231307983398
    5. 'self' → logprob: -9.631231307983398
    6. ' K' → logprob: -9.756231307983398
    7. 'result' → logprob: -10.131231307983398
    8. 'K' → logprob: -10.381231307983398
    9. 'ret' → logprob: -10.631231307983398
    10. '	' → logprob: -10.631231307983398

Token 195: ' return' (ID: 622)
  Prédit: 'obj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obj' → logprob: -1.202475905418396
    2. 'return' (adapté à ' return') → logprob: -1.327475905418396
    3. 'cls' → logprob: -1.577475905418396
    4. '       ' → logprob: -2.5774760246276855
    5. 'R' → logprob: -2.8274760246276855
    6. 'r' → logprob: -3.5774760246276855
    7. 'res' → logprob: -3.8274760246276855
    8. 'ret' → logprob: -4.2024760246276855
    9. 'K' → logprob: -4.5774760246276855
    10. 'self' → logprob: -5.4524760246276855

Token 196: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038047004491090775
    2. 'super' → logprob: -3.2880470752716064
    3. ' super' → logprob: -12.788046836853027
    4. ' int' → logprob: -12.913046836853027
    5. '   ' → logprob: -15.538046836853027
    6. ' ' → logprob: -17.788047790527344
    7. '(int' → logprob: -18.413047790527344
    8. '	int' → logprob: -18.413047790527344
    9. '	super' → logprob: -18.538047790527344
    10. '       ' → logprob: -18.663047790527344

Token 197: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -2.868328920158092e-05
    2. '(int' → logprob: -12.250028610229492
    3. '(K' → logprob: -12.375028610229492
    4. 'int' → logprob: -12.750028610229492
    5. '(V' → logprob: -12.750028610229492
    6. '._' → logprob: -13.000028610229492
    7. '((' → logprob: -13.375028610229492
    8. ').__' → logprob: -13.500028610229492
    9. '().__' → logprob: -13.625028610229492
    10. '__.__' → logprob: -13.750028610229492

Token 198: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: 0.0
    2. '_new' → logprob: -17.375
    3. ' new' → logprob: -18.625
    4. '
' → logprob: -20.0
    5. '	new' → logprob: -20.75
    6. 'New' → logprob: -20.75
    7. '.new' → logprob: -21.25
    8. '__' → logprob: -21.375
    9. 'int' → logprob: -21.625
    10. '

' → logprob: -21.875

Token 199: '__(' (ID: 8241)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.000817369669675827
    2. '(F' → logprob: -7.75081729888916
    3. '(int' → logprob: -8.00081729888916
    4. 'F' → logprob: -10.12581729888916
    5. 'K' → logprob: -12.50081729888916
    6. 'int' → logprob: -12.62581729888916
    7. '__(' → logprob: -13.37581729888916
    8. '(' → logprob: -14.00081729888916
    9. '```' → logprob: -14.87581729888916
    10. ')(' → logprob: -15.12581729888916

Token 200: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.320199877838604e-07
    2. 'F' → logprob: -15.25
    3. 'int' → logprob: -15.875
    4. ' K' → logprob: -19.25
    5. '	K' → logprob: -20.25
    6. '   ' → logprob: -20.5
    7. '(K' → logprob: -20.75
    8. 'type' → logprob: -21.25
    9. '  ' → logprob: -22.875
    10. '<K' → logprob: -23.25

Token 201: 'LS' (ID: 10172)
  Prédit: 'LS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.014627409167587757
    2. 'K' → logprob: -4.264627456665039
    3. 'L' → logprob: -7.889627456665039
    4. 'ls' → logprob: -9.639627456665039
    5. '(K' → logprob: -10.889627456665039
    6. '(' → logprob: -12.764627456665039
    7. ')' → logprob: -14.764627456665039
    8. 'S' → logprob: -14.889627456665039
    9. '[' → logprob: -15.264627456665039
    10. 'KS' → logprob: -15.639627456665039

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021021578868385404
    2. ',V' → logprob: -8.50020980834961
    3. ' ,' → logprob: -12.50020980834961
    4. ',K' → logprob: -13.12520980834961
    5. ',int' → logprob: -14.37520980834961
    6. 'V' → logprob: -15.75020980834961
    7. ')' → logprob: -16.12520980834961
    8. ',(' → logprob: -16.50020980834961
    9. '(V' → logprob: -16.87520980834961
    10. ',v' → logprob: -17.87520980834961

Token 203: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0018514160765334964
    2. ' V' → logprob: -7.126851558685303
    3. '(V' → logprob: -8.376851081848145
    4. 'int' → logprob: -8.376851081848145
    5. '(' → logprob: -8.501851081848145
    6. '0' → logprob: -8.626851081848145
    7. 'K' → logprob: -8.876851081848145
    8. 'abs' → logprob: -11.376851081848145
    9. '(int' → logprob: -11.751851081848145
    10. '((' → logprob: -11.876851081848145

Token 204: '%' (ID: 4)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01616750657558441
    2. ',' → logprob: -4.141167640686035
    3. ')
' → logprob: -9.391167640686035
    4. ')

' → logprob: -11.016167640686035
    5. ' )' → logprob: -11.516167640686035
    6. ' ,' → logprob: -12.516167640686035
    7. '   ' → logprob: -12.516167640686035
    8. ')V' → logprob: -12.641167640686035
    9. '%' → logprob: -13.641167640686035
    10. '       ' → logprob: -13.891167640686035

Token 205: 'MM' (ID: 12365)
  Prédit: 'kw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kw' → logprob: -0.42147305607795715
    2. 'a' → logprob: -1.5464730262756348
    3. ' kw' → logprob: -2.5464730262756348
    4. '(' → logprob: -3.6714730262756348
    5. '100' → logprob: -4.421473026275635
    6. ' a' → logprob: -5.546473026275635
    7. '(a' → logprob: -5.671473026275635
    8. ' (' → logprob: -6.171473026275635
    9. ' ' → logprob: -6.546473026275635
    10. 'K' → logprob: -6.671473026275635

Token 206: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0129391485825181
    2. ',' → logprob: -4.387938976287842
    3. ' )' → logprob: -7.887938976287842
    4. ' ,' → logprob: -10.762939453125
    5. '<|end|>' → logprob: -11.512939453125
    6. ')
' → logprob: -12.012939453125
    7. '))' → logprob: -12.762939453125
    8. ')

' → logprob: -12.887939453125
    9. '),' → logprob: -13.387939453125
    10. ',)' → logprob: -13.637939453125

Token 207: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.261658638715744
    2. '*a' → logprob: -1.8866586685180664
    3. ')' → logprob: -3.3866586685180664
    4. 'a' → logprob: -3.6366586685180664
    5. ' *' → logprob: -4.261658668518066
    6. '*K' → logprob: -6.136658668518066
    7. '*k' → logprob: -7.386658668518066
    8. '**' → logprob: -8.386658668518066
    9. ' a' → logprob: -8.386658668518066
    10. '*s' → logprob: -9.136658668518066

Token 208: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.676292231422849e-05
    2. ' a' → logprob: -11.000017166137695
    3. 'args' → logprob: -18.250017166137695
    4. '<|end|>' → logprob: -19.250017166137695
    5. '<|end|>' → logprob: -19.250017166137695
    6. 'а' → logprob: -20.125017166137695
    7. '	a' → logprob: -20.625017166137695
    8. ',' → logprob: -21.125017166137695
    9. ' ' → logprob: -21.250017166137695
    10. ')a' → logprob: -22.000017166137695

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003802680876106024
    2. ' ,' → logprob: -7.875380039215088
    3. ',
' → logprob: -16.62537956237793
    4. '       ' → logprob: -17.37537956237793
    5. '   ' → logprob: -17.50037956237793
    6. ' ' → logprob: -18.00037956237793
    7. ')' → logprob: -18.00037956237793
    8. '  ' → logprob: -18.37537956237793
    9. ',k' → logprob: -18.62537956237793
    10. ',args' → logprob: -18.62537956237793

Token 210: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.016047390177845955
    2. ' **' → logprob: -4.141047477722168
    3. 'kw' → logprob: -11.516047477722168
    4. ' kw' → logprob: -13.516047477722168
    5. '*' → logprob: -13.766047477722168
    6. '**)' → logprob: -14.766047477722168
    7. ' ' → logprob: -15.891047477722168
    8. '**,' → logprob: -17.39104652404785
    9. '(**' → logprob: -17.51604652404785
    10. 'kwargs' → logprob: -17.64104652404785

Token 211: 'kw' (ID: 9500)
  Prédit: 'kw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kw' → logprob: -8.625866030342877e-05
    2. ' kw' → logprob: -9.375085830688477
    3. 'kwargs' → logprob: -14.125085830688477
    4. '_kw' → logprob: -15.000085830688477
    5. 'k' → logprob: -15.875085830688477
    6. 'Kw' → logprob: -16.250085830688477
    7. '**' → logprob: -16.750085830688477
    8. '.kw' → logprob: -17.250085830688477
    9. 'qw' → logprob: -19.125085830688477
    10. ')' → logprob: -19.125085830688477

Token 212: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.0391463193809614e-05
    2. ')
' → logprob: -10.500060081481934
    3. '   ' → logprob: -10.625060081481934
    4. ')

' → logprob: -11.750060081481934
    5. '       ' → logprob: -14.875060081481934
    6. ' )' → logprob: -15.500060081481934
    7. ')`' → logprob: -17.50006103515625
    8. '),' → logprob: -18.25006103515625
    9. ')return' → logprob: -18.37506103515625
    10. ' ' → logprob: -18.37506103515625

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012638313695788383
    2. '<|end|>' → logprob: -5.012638092041016
    3. '
' → logprob: -5.262638092041016
    4. '    
' → logprob: -8.012638092041016
    5. 'def' → logprob: -8.637638092041016
    6. ' ' → logprob: -9.387638092041016
    7. '  ' → logprob: -10.512638092041016
    8. '<|end|>' → logprob: -10.637638092041016
    9. ' def' → logprob: -11.387638092041016
    10. '    ' → logprob: -11.637638092041016

Token 214: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7662624716758728
    2. '   ' → logprob: -0.7662624716758728
    3. '    
' → logprob: -3.6412625312805176
    4. '<|end|>' → logprob: -3.6412625312805176
    5. ' ' → logprob: -4.891262531280518
    6. '  ' → logprob: -6.016262531280518
    7. 'def' (adapté à ' def') → logprob: -6.391262531280518
    8. '  
' → logprob: -6.766262531280518
    9. ')' → logprob: -6.766262531280518
    10. '    ' → logprob: -6.891262531280518

Token 215: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.15984807908535004
    2. '__' → logprob: -2.6598479747772217
    3. 'mod' → logprob: -2.7848479747772217
    4. 'pow' → logprob: -4.659848213195801
    5. ' pow' → logprob: -6.284848213195801
    6. '_mod' → logprob: -6.784848213195801
    7. ' mod' → logprob: -6.784848213195801
    8. 'add' → logprob: -7.034848213195801
    9. ' add' → logprob: -7.159848213195801
    10. 'repr' → logprob: -7.909848213195801

Token 216: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.48312613368034363
    2. 'mod' → logprob: -0.983126163482666
    3. 'pow' → logprob: -5.733126163482666
    4. 'init' → logprob: -6.108126163482666
    5. 'eq' → logprob: -6.358126163482666
    6. 'repr' → logprob: -7.108126163482666
    7. 'int' → logprob: -7.983126163482666
    8. 'mul' → logprob: -8.233125686645508
    9. 'flo' → logprob: -9.358125686645508
    10. 'new' → logprob: -9.358125686645508

Token 217: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00016361083544325083
    2. '__' → logprob: -8.750164031982422
    3. '__((' → logprob: -12.625164031982422
    4. '__(
' → logprob: -13.750164031982422
    5. '__('' → logprob: -14.625164031982422
    6. '__(*' → logprob: -15.750164031982422
    7. '(self' → logprob: -16.125164031982422
    8. '__("' → logprob: -17.000164031982422
    9. '_(' → logprob: -17.250164031982422
    10. '___' → logprob: -19.125164031982422

Token 218: 'Z' (ID: 57)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47485581040382385
    2. 'K' → logprob: -0.9748557806015015
    3. ' self' → logprob: -7.349855899810791
    4. ' K' → logprob: -9.099855422973633
    5. '(self' → logprob: -11.224855422973633
    6. '   ' → logprob: -12.349855422973633
    7. 'O' → logprob: -13.474855422973633
    8. ' ' → logprob: -13.599855422973633
    9. '	self' → logprob: -14.099855422973633
    10. 's' → logprob: -14.724855422973633

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.900992214679718
    2. '(self' → logprob: -1.5259921550750732
    3. 'self' → logprob: -1.6509921550750732
    4. '__(' → logprob: -2.5259921550750732
    5. ',self' → logprob: -3.0259921550750732
    6. ')(' → logprob: -3.1509921550750732
    7. ' self' → logprob: -5.025992393493652
    8. ',K' → logprob: -6.400992393493652
    9. ' (' → logprob: -6.775992393493652
    10. ' ,' → logprob: -6.900992393493652

Token 220: ' O' (ID: 532)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.9547790288925171
    2. 'O' → logprob: -1.204779028892517
    3. ' other' → logprob: -1.829779028892517
    4. ' O' → logprob: -1.954779028892517
    5. 'o' → logprob: -5.704779148101807
    6. 'Y' → logprob: -5.954779148101807
    7. 'X' → logprob: -6.329779148101807
    8. ' Y' → logprob: -6.579779148101807
    9. ' ' → logprob: -6.954779148101807
    10. ' X' → logprob: -7.579779148101807

Token 221: 'OPS' (ID: 69994)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13164310157299042
    2. '):' → logprob: -2.256643056869507
    3. '):
' → logprob: -4.006643295288086
    4. ' ,' → logprob: -8.506643295288086
    5. '):
' → logprob: -9.381643295288086
    6. ' ):' → logprob: -9.506643295288086
    7. ')' → logprob: -10.756643295288086
    8. ',O' → logprob: -10.756643295288086
    9. ',Z' → logprob: -11.631643295288086
    10. '):

' → logprob: -11.631643295288086

Token 222: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003124632057733834
    2. ' ,' → logprob: -8.625312805175781
    3. ',O' → logprob: -9.750312805175781
    4. '):' → logprob: -9.875312805175781
    5. ',Z' → logprob: -11.125312805175781
    6. 'O' → logprob: -12.625312805175781
    7. '):
' → logprob: -12.625312805175781
    8. 'self' → logprob: -15.375312805175781
    9. ')' → logprob: -15.375312805175781
    10. 'Z' → logprob: -15.625312805175781

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13954973220825195
    2. '):
' → logprob: -2.764549732208252
    3. ':' → logprob: -3.389549732208252
    4. '):' → logprob: -4.764549732208252
    5. ':
' → logprob: -4.889549732208252
    6. ' return' → logprob: -5.264549732208252
    7. '<|end|>' → logprob: -5.764549732208252
    8. '=' → logprob: -6.514549732208252
    9. ',' → logprob: -7.014549732208252
    10. '   ' → logprob: -7.014549732208252

Token 224: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10342362523078918
    2. 'F' → logprob: -2.728423595428467
    3. '       ' → logprob: -3.978423595428467
    4. ' return' → logprob: -4.853423595428467
    5. 'K' → logprob: -5.728423595428467
    6. 'Z' → logprob: -5.853423595428467
    7. 'Q' → logprob: -9.603424072265625
    8. 'result' → logprob: -10.478424072265625
    9. 'type' → logprob: -10.978424072265625
    10. 'if' → logprob: -11.103424072265625

Token 225: ' Z' (ID: 1489)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00043257648940198123
    2. ' Funk' → logprob: -8.250432968139648
    3. 'K' → logprob: -9.125432968139648
    4. 'type' → logprob: -10.125432968139648
    5. 'Z' → logprob: -11.625432968139648
    6. ' F' → logprob: -12.375432968139648
    7. '  ' → logprob: -13.000432968139648
    8. '   ' → logprob: -13.250432968139648
    9. 'funk' → logprob: -13.625432968139648
    10. ' ' → logprob: -13.625432968139648

Token 226: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.03845728933811188
    2. '+' → logprob: -3.6634573936462402
    3. 'if' → logprob: -5.16345739364624
    4. 'F' → logprob: -5.53845739364624
    5. ' +' → logprob: -6.78845739364624
    6. '__' → logprob: -7.66345739364624
    7. '.F' → logprob: -8.413456916809082
    8. ' if' → logprob: -8.663456916809082
    9. 'class' → logprob: -9.163456916809082
    10. 'new' → logprob: -9.788456916809082

Token 227: 'class' (ID: 1444)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.3306845724582672
    2. 'class' → logprob: -1.5806845426559448
    3. 'new' → logprob: -2.5806846618652344
    4. '+' → logprob: -12.330684661865234
    5. 'r' → logprob: -12.330684661865234
    6. 'int' → logprob: -13.205684661865234
    7. '_add' → logprob: -14.330684661865234
    8. 'and' → logprob: -16.080684661865234
    9. 'call' → logprob: -16.205684661865234
    10. ' +' → logprob: -16.580684661865234

Token 228: '__(' (ID: 8241)
  Prédit: '(Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Z' → logprob: -0.4803559184074402
    2. '((' → logprob: -1.230355978012085
    3. '(int' → logprob: -2.480355978012085
    4. '(' → logprob: -5.730355739593506
    5. '__(' → logprob: -7.105355739593506
    6. '(K' → logprob: -7.605355739593506
    7. '(((' → logprob: -8.105356216430664
    8. '__((' → logprob: -8.355356216430664
    9. '(super' → logprob: -8.855356216430664
    10. '(F' → logprob: -9.105356216430664

Token 229: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.23324835300445557
    2. '(int' → logprob: -1.7332483530044556
    3. '(Z' → logprob: -3.483248233795166
    4. 'super' → logprob: -8.233248710632324
    5. 'Z' → logprob: -8.608248710632324
    6. '(super' → logprob: -9.108248710632324
    7. ' int' → logprob: -10.358248710632324
    8. ' (' → logprob: -10.983248710632324
    9. '(z' → logprob: -11.858248710632324
    10. '((' → logprob: -12.608248710632324

Token 230: '(Z' (ID: 55117)
  Prédit: '.__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.004091342911124229
    2. '(Z' → logprob: -5.504091262817383
    3. 'Z' → logprob: -12.754091262817383
    4. '__' → logprob: -12.754091262817383
    5. '.add' → logprob: -12.879091262817383
    6. ').__' → logprob: -13.754091262817383
    7. '(int' → logprob: -14.504091262817383
    8. ')' → logprob: -14.504091262817383
    9. '._' → logprob: -14.754091262817383
    10. '.Z' → logprob: -15.004091262817383

Token 231: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10078883916139603
    2. ')+' → logprob: -2.3507888317108154
    3. '+' → logprob: -7.4757890701293945
    4. ' +' → logprob: -12.100789070129395
    5. ')+(' → logprob: -12.350789070129395
    6. 'O' → logprob: -13.600789070129395
    7. ').__' → logprob: -13.850789070129395
    8. '.__' → logprob: -14.350789070129395
    9. ' )' → logprob: -14.600789070129395
    10. '__' → logprob: -14.850789070129395

Token 232: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10021605342626572
    2. ' +' → logprob: -2.3502161502838135
    3. '+(' → logprob: -12.100215911865234
    4. ')+' → logprob: -13.725215911865234
    5. '()+' → logprob: -14.350215911865234
    6. 'int' → logprob: -14.475215911865234
    7. '.__' → logprob: -14.725215911865234
    8. ')' → logprob: -14.850215911865234
    9. '+
' → logprob: -15.600215911865234
    10. ' ' → logprob: -15.975215911865234

Token 233: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2525263726711273
    2. 'O' → logprob: -1.5025264024734497
    3. ' int' → logprob: -7.62752628326416
    4. ' O' → logprob: -9.12752628326416
    5. '   ' → logprob: -14.50252628326416
    6. 'o' → logprob: -15.00252628326416
    7. ' ' → logprob: -15.37752628326416
    8. '  ' → logprob: -15.75252628326416
    9. '	O' → logprob: -16.002527236938477
    10. '(O' → logprob: -16.252527236938477

Token 234: '(O' (ID: 49357)
  Prédit: '(O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(O' → logprob: -2.5776860184123507e-06
    2. 'O' → logprob: -13.12500286102295
    3. '(Z' → logprob: -15.00000286102295
    4. '(' → logprob: -16.000001907348633
    5. '(U' → logprob: -18.375001907348633
    6. '(o' → logprob: -19.125001907348633
    7. '(
' → logprob: -19.125001907348633
    8. ' (' → logprob: -19.375001907348633
    9. ')(' → logprob: -19.500001907348633
    10. '	O' → logprob: -19.500001907348633

Token 235: 'OPS' (ID: 69994)
  Prédit: 'OPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OPS' → logprob: -0.0056935385800898075
    2. 'O' → logprob: -5.380693435668945
    3. 'OP' → logprob: -7.380693435668945
    4. 'Oops' → logprob: -8.630693435668945
    5. ')' → logprob: -9.630693435668945
    6. '(' → logprob: -9.880693435668945
    7. 'ops' → logprob: -10.505693435668945
    8. '
' → logprob: -11.380693435668945
    9. 'PS' → logprob: -11.505693435668945
    10. '```' → logprob: -11.505693435668945

Token 236: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018272733315825462
    2. '))' → logprob: -4.018272876739502
    3. ')))' → logprob: -10.018272399902344
    4. ' )' → logprob: -10.268272399902344
    5. ')
' → logprob: -10.518272399902344
    6. '())' → logprob: -12.393272399902344
    7. ',' → logprob: -12.518272399902344
    8. '))
' → logprob: -13.143272399902344
    9. ' ))' → logprob: -13.268272399902344
    10. ')}' → logprob: -13.893272399902344

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005160700995475054
    2. 'def' → logprob: -5.380160808563232
    3. '<|end|>' → logprob: -8.505160331726074
    4. '```' → logprob: -9.005160331726074
    5. '    
' → logprob: -9.255160331726074
    6. ' def' → logprob: -10.380160331726074
    7. ')' → logprob: -10.880160331726074
    8. '  ' → logprob: -11.130160331726074
    9. ',' → logprob: -11.380160331726074
    10. '...' → logprob: -12.130160331726074

Token 238: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005097614601254463
    2. 'def' (adapté à ' def') → logprob: -5.630097389221191
    3. '
' → logprob: -7.630097389221191
    4. '  ' → logprob: -7.880097389221191
    5. '<|end|>' → logprob: -8.380097389221191
    6. ' ' → logprob: -8.880097389221191
    7. ' def' → logprob: -9.255097389221191
    8. ')' → logprob: -9.880097389221191
    9. '    
' → logprob: -10.505097389221191
    10. '```' → logprob: -11.005097389221191

Token 239: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1141698956489563
    2. ' __' → logprob: -2.4891698360443115
    3. 'sub' → logprob: -3.7391698360443115
    4. '_sub' → logprob: -7.614170074462891
    5. 'mul' → logprob: -7.614170074462891
    6. ' sub' → logprob: -9.48917007446289
    7. '_mul' → logprob: -10.23917007446289
    8. ' mul' → logprob: -10.86417007446289
    9. 'mod' → logprob: -11.98917007446289
    10. 'r' → logprob: -12.36417007446289

Token 240: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.03986027464270592
    2. 'mul' → logprob: -3.289860248565674
    3. 'r' → logprob: -6.539860248565674
    4. 'neg' → logprob: -8.289860725402832
    5. 'mod' → logprob: -9.664860725402832
    6. 'pow' → logprob: -10.664860725402832
    7. 'mult' → logprob: -11.289860725402832
    8. 'xor' → logprob: -12.164860725402832
    9. 'int' → logprob: -12.289860725402832
    10. 'and' → logprob: -12.664860725402832

Token 241: '__(' (ID: 8241)
  Prédit: '(Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Z' → logprob: -8.315936429426074e-05
    2. '(' → logprob: -10.375082969665527
    3. '__(' → logprob: -11.125082969665527
    4. '(self' → logprob: -11.250082969665527
    5. '(W' → logprob: -11.750082969665527
    6. '(F' → logprob: -12.250082969665527
    7. '(K' → logprob: -13.000082969665527
    8. '(Q' → logprob: -13.125082969665527
    9. '(S' → logprob: -13.500082969665527
    10. '(Y' → logprob: -13.500082969665527

Token 242: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.0010554377222433686
    2. '(Z' → logprob: -6.8760552406311035
    3. 'self' → logprob: -10.876055717468262
    4. ' Z' → logprob: -13.001055717468262
    5. '(self' → logprob: -14.626055717468262
    6. '	Z' → logprob: -15.126055717468262
    7. ')' → logprob: -15.376055717468262
    8. ',Z' → logprob: -16.251054763793945
    9. '(' → logprob: -16.376054763793945
    10. '   ' → logprob: -16.501054763793945

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002694416616577655
    2. ',Z' → logprob: -9.125269889831543
    3. ',O' → logprob: -9.375269889831543
    4. ' ,' → logprob: -9.625269889831543
    5. '(Z' → logprob: -12.250269889831543
    6. ',
' → logprob: -13.500269889831543
    7. '(' → logprob: -14.125269889831543
    8. '(O' → logprob: -14.125269889831543
    9. ')' → logprob: -14.625269889831543
    10. ',(' → logprob: -15.750269889831543

Token 244: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.03389556333422661
    2. ' O' → logprob: -3.408895492553711
    3. 'Z' → logprob: -8.408895492553711
    4. 'int' → logprob: -11.533895492553711
    5. '	O' → logprob: -11.908895492553711
    6. '   ' → logprob: -12.533895492553711
    7. ' Z' → logprob: -13.033895492553711
    8. ' ' → logprob: -13.283895492553711
    9. '    ' → logprob: -14.158895492553711
    10. '  ' → logprob: -14.283895492553711

Token 245: 'OPS' (ID: 69994)
  Prédit: 'OPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OPS' → logprob: -0.03858266398310661
    2. 'class' → logprob: -4.163582801818848
    3. 'O' → logprob: -4.538582801818848
    4. 'PS' → logprob: -5.413582801818848
    5. 'OP' → logprob: -6.538582801818848
    6. '```' → logprob: -6.663582801818848
    7. 'P' → logprob: -7.163582801818848
    8. 'Oops' → logprob: -7.288582801818848
    9. 'APS' → logprob: -7.788582801818848
    10. 'ops' → logprob: -7.913582801818848

Token 246: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.026192422956228256
    2. '):' → logprob: -3.7761924266815186
    3. ',' → logprob: -5.9011921882629395
    4. '(Z' → logprob: -9.151192665100098
    5. ')' → logprob: -9.901192665100098
    6. '):
' → logprob: -11.276192665100098
    7. '       ' → logprob: -11.526192665100098
    8. '):

' → logprob: -11.651192665100098
    9. ',Z' → logprob: -12.151192665100098
    10. '(' → logprob: -12.401192665100098

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13694867491722107
    2. ' return' → logprob: -2.636948585510254
    3. 'return' → logprob: -4.011948585510254
    4. 'Z' → logprob: -4.011948585510254
    5. ' Z' → logprob: -4.011948585510254
    6. '   ' → logprob: -6.886948585510254
    7. '(Z' → logprob: -7.011948585510254
    8. '	Z' → logprob: -9.386948585510254
    9. ',Z' → logprob: -10.136948585510254
    10. ' ' → logprob: -11.136948585510254

Token 248: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.22085464000701904
    2. 'Z' → logprob: -1.720854640007019
    3. ' return' → logprob: -3.9708547592163086
    4. ' Z' → logprob: -7.845854759216309
    5. 'z' → logprob: -13.095854759216309
    6. '   ' → logprob: -13.345854759216309
    7. '(Z' → logprob: -15.095854759216309
    8. '>Z' → logprob: -15.220854759216309
    9. ' ' → logprob: -15.345854759216309
    10. '  ' → logprob: -16.470853805541992

Token 249: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.0015040287980809808
    2. ' Z' → logprob: -6.501503944396973
    3. '  ' → logprob: -14.126503944396973
    4. '	Z' → logprob: -14.751503944396973
    5. '   ' → logprob: -15.501503944396973
    6. ' ' → logprob: -15.626503944396973
    7. '(Z' → logprob: -16.00150489807129
    8. '>Z' → logprob: -16.37650489807129
    9. 'z' → logprob: -16.87650489807129
    10. '    ' → logprob: -17.50150489807129

Token 250: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -4.036524842376821e-05
    2. '().__' → logprob: -10.375040054321289
    3. '(Z' → logprob: -12.750040054321289
    4. '__' → logprob: -13.000040054321289
    5. ' .' → logprob: -13.000040054321289
    6. '.' → logprob: -14.500040054321289
    7. '.Z' → logprob: -14.500040054321289
    8. '__.__' → logprob: -15.250040054321289
    9. 'class' → logprob: -15.375040054321289
    10. '._' → logprob: -16.12504005432129

Token 251: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -7.481510692741722e-05
    2. 'add' → logprob: -10.50007438659668
    3. 'sub' → logprob: -10.50007438659668
    4. '__' → logprob: -11.00007438659668
    5. '_class' → logprob: -13.62507438659668
    6. '<class' → logprob: -14.87507438659668
    7. '.__' → logprob: -15.25007438659668
    8. 'new' → logprob: -15.50007438659668
    9. '(Z' → logprob: -15.87507438659668
    10. ' class' → logprob: -15.87507438659668

Token 252: '__(' (ID: 8241)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.704065213445574e-05
    2. '__(' → logprob: -10.625046730041504
    3. '(' → logprob: -10.750046730041504
    4. ')(' → logprob: -15.250046730041504
    5. '(Int' → logprob: -15.750046730041504
    6. ' (' → logprob: -15.875046730041504
    7. '(Z' → logprob: -16.37504768371582
    8. '()(' → logprob: -16.37504768371582
    9. '>(' → logprob: -16.50004768371582
    10. '}(' → logprob: -16.62504768371582

Token 253: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.6240566083070007e-06
    2. ' int' → logprob: -13.500001907348633
    3. '(int' → logprob: -15.875001907348633
    4. '[int' → logprob: -19.500001907348633
    5. '   ' → logprob: -19.875001907348633
    6. ' ' → logprob: -20.375001907348633
    7. '
' → logprob: -21.000001907348633
    8. '	int' → logprob: -21.000001907348633
    9. '  ' → logprob: -21.250001907348633
    10. '<int' → logprob: -21.750001907348633

Token 254: '(Z' (ID: 55117)
  Prédit: '(Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Z' → logprob: 0.0
    2. 'Z' → logprob: -17.0
    3. '(' → logprob: -18.25
    4. '(Q' → logprob: -19.75
    5. '(O' → logprob: -20.875
    6. '(z' → logprob: -21.125
    7. '	Z' → logprob: -21.625
    8. ')' → logprob: -22.125
    9. '>Z' → logprob: -22.125
    10. '(int' → logprob: -22.25

Token 255: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002446509897708893
    2. '-' → logprob: -8.375245094299316
    3. ' -' → logprob: -12.125245094299316
    4. ')-' → logprob: -12.750245094299316
    5. '(' → logprob: -13.250245094299316
    6. '()' → logprob: -13.250245094299316
    7. '(Z' → logprob: -13.750245094299316
    8. ']' → logprob: -14.750245094299316
    9. '>' → logprob: -15.000245094299316
    10. ' )' → logprob: -16.625244140625

Token 256: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.389154851436615
    2. ' -' → logprob: -1.1391549110412598
    3. ')' → logprob: -6.38915491104126
    4. '()' → logprob: -7.51415491104126
    5. '()-' → logprob: -10.514154434204102
    6. '(' → logprob: -11.139154434204102
    7. '(int' → logprob: -13.389154434204102
    8. ' ' → logprob: -13.389154434204102
    9. ')-' → logprob: -13.389154434204102
    10. '−' → logprob: -13.514154434204102

Token 257: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003290288441348821
    2. '(int' → logprob: -8.75032901763916
    3. ' int' → logprob: -8.75032901763916
    4. '(O' → logprob: -11.50032901763916
    5. 'O' → logprob: -13.12532901763916
    6. ' O' → logprob: -19.625329971313477
    7. '=int' → logprob: -20.375329971313477
    8. '	int' → logprob: -20.500329971313477
    9. ':int' → logprob: -20.625329971313477
    10. '<int' → logprob: -20.625329971313477

Token 258: '(O' (ID: 49357)
  Prédit: '(O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(O' → logprob: -6.2729995988775045e-06
    2. '(Z' → logprob: -12.000006675720215
    3. '(' → logprob: -16.8750057220459
    4. '(OS' → logprob: -18.7500057220459
    5. '(int' → logprob: -19.1250057220459
    6. 'O' → logprob: -19.6250057220459
    7. ')' → logprob: -19.8750057220459
    8. '(OP' → logprob: -19.8750057220459
    9. ')(' → logprob: -20.3750057220459
    10. '(
' → logprob: -20.5000057220459

Token 259: 'OPS' (ID: 69994)
  Prédit: 'OPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OPS' → logprob: -0.27039024233818054
    2. 'O' → logprob: -1.895390272140503
    3. '(O' → logprob: -2.520390272140503
    4. ')' → logprob: -6.395390033721924
    5. 'PS' → logprob: -6.645390033721924
    6. '(' → logprob: -7.270390033721924
    7. '(Z' → logprob: -7.395390033721924
    8. 'Oops' → logprob: -7.895390033721924
    9. 'APS' → logprob: -8.395390510559082
    10. '{' → logprob: -8.770390510559082

Token 260: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.875001907348633
    3. '<|end|>' → logprob: -15.500001907348633
    4. ' )' → logprob: -15.625001907348633
    5. ')return' → logprob: -15.625001907348633
    6. '   ' → logprob: -16.375001907348633
    7. ')}' → logprob: -16.750001907348633
    8. '))' → logprob: -16.875001907348633
    9. '),' → logprob: -18.000001907348633
    10. ')}}' → logprob: -18.250001907348633

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15580496191978455
    2. 'def' → logprob: -2.0308048725128174
    3. '<|end|>' → logprob: -4.7808051109313965
    4. '```' → logprob: -6.7808051109313965
    5. '#' → logprob: -7.1558051109313965
    6. ' def' → logprob: -7.4058051109313965
    7. '  ' → logprob: -7.6558051109313965
    8. ' ' → logprob: -8.155804634094238
    9. '...' → logprob: -8.405804634094238
    10. '	def' → logprob: -8.405804634094238

Token 262: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21219876408576965
    2. '<|end|>' → logprob: -1.8371987342834473
    3. 'def' (adapté à ' def') → logprob: -3.5871987342834473
    4. ')' → logprob: -6.712198734283447
    5. '<|end|>' → logprob: -7.212198734283447
    6. ' def' → logprob: -7.462198734283447
    7. '  ' → logprob: -7.587198734283447
    8. '```' → logprob: -7.712198734283447
    9. ' ' → logprob: -8.087199211120605
    10. '...' → logprob: -9.212199211120605

Token 263: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20235885679721832
    2. ' __' → logprob: -1.7023588418960571
    3. '_mul' → logprob: -7.452358722686768
    4. 'mul' → logprob: -7.952358722686768
    5. ' mul' → logprob: -11.452359199523926
    6. '.__' → logprob: -14.077359199523926
    7. '_m' → logprob: -15.202359199523926
    8. ' ' → logprob: -15.452359199523926
    9. '_mult' → logprob: -15.577359199523926
    10. '___' → logprob: -15.827359199523926

Token 264: 'neg' (ID: 18775)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.00043794067460112274
    2. 'neg' → logprob: -8.62543773651123
    3. 'r' → logprob: -8.75043773651123
    4. 'pow' → logprob: -10.00043773651123
    5. 'flo' → logprob: -10.87543773651123
    6. 'mod' → logprob: -11.12543773651123
    7. 'rm' → logprob: -11.87543773651123
    8. 'xor' → logprob: -12.62543773651123
    9. 'mult' → logprob: -12.75043773651123
    10. 'eq' → logprob: -13.12543773651123

Token 265: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0006375004886649549
    2. '__' → logprob: -8.00063705444336
    3. '(Z' → logprob: -8.12563705444336
    4. '__(
' → logprob: -13.00063705444336
    5. '_(' → logprob: -13.12563705444336
    6. '__((' → logprob: -13.62563705444336
    7. 'Z' → logprob: -15.87563705444336
    8. '___' → logprob: -15.87563705444336
    9. '```' → logprob: -15.87563705444336
    10. '(' → logprob: -16.00063705444336

Token 266: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.001676852349191904
    2. '(Z' → logprob: -6.6266770362854
    3. 'self' → logprob: -8.751676559448242
    4. 'K' → logprob: -9.001676559448242
    5. '(self' → logprob: -10.126676559448242
    6. ')' → logprob: -11.626676559448242
    7. '(' → logprob: -12.126676559448242
    8. ')(' → logprob: -12.376676559448242
    9. ' Z' → logprob: -12.501676559448242
    10. '	Z' → logprob: -13.251676559448242

Token 267: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8797518610954285
    2. '(self' → logprob: -1.5047519207000732
    3. '(Z' → logprob: -1.5047519207000732
    4. '):' → logprob: -2.1297519207000732
    5. ')(' → logprob: -4.754751682281494
    6. 'self' → logprob: -5.129751682281494
    7. ')' → logprob: -5.754751682281494
    8. ',' → logprob: -6.004751682281494
    9. '(' → logprob: -7.129751682281494
    10. '):

' → logprob: -7.629751682281494

Token 268: '       ' (ID: 309)
  Prédit: '(Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Z' → logprob: -0.5817585587501526
    2. 'Z' → logprob: -0.9567585587501526
    3. 'K' → logprob: -3.331758499145508
    4. '(' → logprob: -5.081758499145508
    5. 'return' → logprob: -5.081758499145508
    6. '   ' → logprob: -5.956758499145508
    7. ' Z' → logprob: -6.331758499145508
    8. ' return' → logprob: -6.456758499145508
    9. '       ' → logprob: -7.581758499145508
    10. '<|end|>' → logprob: -7.581758499145508

Token 269: ' return' (ID: 622)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.030097564682364464
    2. 'return' (adapté à ' return') → logprob: -3.530097484588623
    3. ' Z' → logprob: -8.280097961425781
    4. ' return' → logprob: -9.405097961425781
    5. '	Z' → logprob: -12.405097961425781
    6. '   ' → logprob: -12.655097961425781
    7. 'z' → logprob: -13.780097961425781
    8. '  ' → logprob: -13.780097961425781
    9. '0' → logprob: -14.530097961425781
    10. '>Z' → logprob: -15.030097961425781

Token 270: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.0008072483469732106
    2. ' Z' → logprob: -7.125807285308838
    3. '	Z' → logprob: -14.00080680847168
    4. '-Z' → logprob: -14.37580680847168
    5. '(Z' → logprob: -14.62580680847168
    6. '-' → logprob: -15.12580680847168
    7. '>Z' → logprob: -15.62580680847168
    8. 'F' → logprob: -15.87580680847168
    9. '0' → logprob: -16.00080680847168
    10. 'z' → logprob: -16.25080680847168

Token 271: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.003482823958620429
    2. '(' → logprob: -7.253482818603516
    3. '().__' → logprob: -7.253482818603516
    4. '(Z' → logprob: -7.503482818603516
    5. '.Z' → logprob: -7.503482818603516
    6. '__' → logprob: -8.003482818603516
    7. '(-' → logprob: -8.128482818603516
    8. 'class' → logprob: -8.878482818603516
    9. '.class' → logprob: -10.253482818603516
    10. '-' → logprob: -10.253482818603516

Token 272: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.941161776310764e-05
    2. 'neg' → logprob: -10.625039100646973
    3. '-class' → logprob: -11.625039100646973
    4. '_class' → logprob: -13.125039100646973
    5. 'new' → logprob: -13.500039100646973
    6. 'sub' → logprob: -13.625039100646973
    7. '<class' → logprob: -14.500039100646973
    8. 'add' → logprob: -14.750039100646973
    9. 'cls' → logprob: -16.25004005432129
    10. '_neg' → logprob: -16.25004005432129

Token 273: '__' (ID: 771)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.005685122683644295
    2. '(' → logprob: -5.255685329437256
    3. '(int' → logprob: -7.755685329437256
    4. '(-(' → logprob: -10.755684852600098
    5. '(
' → logprob: -14.755684852600098
    6. '()' → logprob: -15.380684852600098
    7. ')(' → logprob: -15.880684852600098
    8. '(INT' → logprob: -16.130685806274414
    9. '(True' → logprob: -16.255685806274414
    10. '(Int' → logprob: -16.255685806274414

Token 274: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.046923428773880005
    2. '(' → logprob: -3.1719233989715576
    3. '(int' → logprob: -5.546923637390137
    4. '(-(' → logprob: -12.046923637390137
    5. '-' → logprob: -12.296923637390137
    6. '-int' → logprob: -12.796923637390137
    7. 'int' → logprob: -14.421923637390137
    8. '(Int' → logprob: -14.796923637390137
    9. '1' → logprob: -14.796923637390137
    10. '((' → logprob: -14.921923637390137

Token 275: 'int' (ID: 491)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.04859009385108948
    2. 'int' → logprob: -3.0485901832580566
    3. ' int' → logprob: -13.423589706420898
    4. '(int' → logprob: -14.298589706420898
    5. ' Z' → logprob: -15.048589706420898
    6. '(Z' → logprob: -15.923589706420898
    7. 'z' → logprob: -16.6735897064209
    8. '<int' → logprob: -17.7985897064209
    9. '[int' → logprob: -18.2985897064209
    10. '	Z' → logprob: -18.2985897064209

Token 276: '(Z' (ID: 55117)
  Prédit: '(Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Z' → logprob: -1.2664456789934775e-06
    2. 'Z' → logprob: -14.250000953674316
    3. '(' → logprob: -14.625000953674316
    4. ')' → logprob: -16.500001907348633
    5. '(z' → logprob: -18.000001907348633
    6. '(Q' → logprob: -18.375001907348633
    7. '(O' → logprob: -19.000001907348633
    8. '(
' → logprob: -19.375001907348633
    9. '((' → logprob: -19.375001907348633
    10. ')(' → logprob: -19.625001907348633

Token 277: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. '))' → logprob: -13.125004768371582
    3. ')
' → logprob: -13.250004768371582
    4. '<|end|>' → logprob: -14.625004768371582
    5. ' )' → logprob: -15.125004768371582
    6. ')}' → logprob: -15.250004768371582
    7. ')return' → logprob: -16.2500057220459
    8. ')

' → logprob: -16.7500057220459
    9. ')}}' → logprob: -16.8750057220459
    10. '),' → logprob: -17.6250057220459

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002596822800114751
    2. 'def' → logprob: -6.127596855163574
    3. '<|end|>' → logprob: -8.877596855163574
    4. ')' → logprob: -9.752596855163574
    5. ' def' → logprob: -9.752596855163574
    6. '	def' → logprob: -10.252596855163574
    7. '```' → logprob: -10.252596855163574
    8. '...' → logprob: -10.752596855163574
    9. ',' → logprob: -11.502596855163574
    10. '+' → logprob: -11.502596855163574

Token 279: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3782830137643032e-05
    2. 'def' (adapté à ' def') → logprob: -11.37501335144043
    3. ' def' → logprob: -14.50001335144043
    4. '    
' → logprob: -14.62501335144043
    5. '```' → logprob: -15.12501335144043
    6. '	def' → logprob: -15.25001335144043
    7. ')' → logprob: -15.62501335144043
    8. '  ' → logprob: -15.62501335144043
    9. ' ' → logprob: -15.62501335144043
    10. '<|end|>' → logprob: -16.25001335144043

Token 280: ' __' (ID: 2516)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.017545705661177635
    2. ' mul' → logprob: -4.267545700073242
    3. '__' → logprob: -6.392545700073242
    4. 'abs' → logprob: -7.267545700073242
    5. ' __' → logprob: -7.392545700073242
    6. 'pow' → logprob: -8.392545700073242
    7. '_mul' → logprob: -10.142545700073242
    8. 'r' → logprob: -10.767545700073242
    9. 'rm' → logprob: -10.767545700073242
    10. ' abs' → logprob: -10.767545700073242

Token 281: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -6.384836888173595e-05
    2. 'pow' → logprob: -10.2500638961792
    3. 'r' → logprob: -11.5000638961792
    4. 'flo' → logprob: -12.2500638961792
    5. 'eq' → logprob: -12.5000638961792
    6. 'abs' → logprob: -12.7500638961792
    7. 'xor' → logprob: -12.7500638961792
    8. 'mod' → logprob: -13.2500638961792
    9. 'pos' → logprob: -14.0000638961792
    10. 'rm' → logprob: -14.6250638961792

Token 282: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.007630534935742617
    2. '(Z' → logprob: -4.882630348205566
    3. '(' → logprob: -11.507630348205566
    4. '__' → logprob: -11.882630348205566
    5. '__(
' → logprob: -12.382630348205566
    6. '__((' → logprob: -13.882630348205566
    7. '__('' → logprob: -14.257630348205566
    8. '__(*' → logprob: -14.632630348205566
    9. '(F' → logprob: -15.382630348205566
    10. '(M' → logprob: -15.757630348205566

Token 283: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.0006037878338247538
    2. '(Z' → logprob: -7.500603675842285
    3. '<|end|>' → logprob: -10.125603675842285
    4. ' Z' → logprob: -11.625603675842285
    5. '	Z' → logprob: -14.125603675842285
    6. '>Z' → logprob: -15.250603675842285
    7. '(' → logprob: -15.375603675842285
    8. ',Z' → logprob: -15.750603675842285
    9. 'K' → logprob: -16.0006046295166
    10. ')' → logprob: -16.0006046295166

Token 284: ',' (ID: 11)
  Prédit: '(Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Z' → logprob: -0.47544315457344055
    2. ',' → logprob: -0.9754431247711182
    3. ')(' → logprob: -7.600443363189697
    4. ',Z' → logprob: -8.100442886352539
    5. '(' → logprob: -8.475442886352539
    6. '<|end|>' → logprob: -8.725442886352539
    7. ')' → logprob: -9.225442886352539
    8. '(self' → logprob: -10.225442886352539
    9. ' (' → logprob: -10.975442886352539
    10. ' ,' → logprob: -11.600442886352539

Token 285: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.020841402933001518
    2. 'Z' → logprob: -4.520841598510742
    3. ' O' → logprob: -4.645841598510742
    4. '<|end|>' → logprob: -9.520841598510742
    5. ' Z' → logprob: -10.145841598510742
    6. ' ' → logprob: -11.395841598510742
    7. '	O' → logprob: -11.770841598510742
    8. '  ' → logprob: -12.645841598510742
    9. ')' → logprob: -12.645841598510742
    10. '   ' → logprob: -12.770841598510742

Token 286: 'OPS' (ID: 69994)
  Prédit: 'OPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OPS' → logprob: -0.0014394002500921488
    2. '(Z' → logprob: -7.501439571380615
    3. 'O' → logprob: -7.751439571380615
    4. 'Oops' → logprob: -8.876439094543457
    5. 'ops' → logprob: -9.501439094543457
    6. '```' → logprob: -9.751439094543457
    7. ')' → logprob: -10.501439094543457
    8. 'OSS' → logprob: -10.751439094543457
    9. '(' → logprob: -10.751439094543457
    10. 'PS' → logprob: -11.126439094543457

Token 287: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07335064560174942
    2. '(Z' → logprob: -2.698350667953491
    3. '):
' → logprob: -6.573350429534912
    4. '):' → logprob: -7.073350429534912
    5. ')(' → logprob: -7.698350429534912
    6. ',Z' → logprob: -7.823350429534912
    7. ' (' → logprob: -8.82335090637207
    8. ' ,' → logprob: -9.57335090637207
    9. '(' → logprob: -10.57335090637207
    10. '   ' → logprob: -11.19835090637207

Token 288: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8445538282394409
    2. '       ' → logprob: -1.094553828239441
    3. ' return' → logprob: -1.469553828239441
    4. '   ' → logprob: -5.7195539474487305
    5. 'Z' → logprob: -6.3445539474487305
    6. '<|end|>' → logprob: -8.71955394744873
    7. ' Z' → logprob: -9.34455394744873
    8. ' ' → logprob: -9.46955394744873
    9. '	return' → logprob: -10.09455394744873
    10. '        ' → logprob: -10.59455394744873

Token 289: ' return' (ID: 622)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.1004321351647377
    2. 'return' (adapté à ' return') → logprob: -2.3504321575164795
    3. ' return' → logprob: -8.475432395935059
    4. ' Z' → logprob: -11.100432395935059
    5. '   ' → logprob: -13.850432395935059
    6. 'z' → logprob: -15.225432395935059
    7. ' ' → logprob: -15.975432395935059
    8. 'F' → logprob: -15.975432395935059
    9. '	Z' → logprob: -16.100431442260742
    10. 'def' → logprob: -16.225431442260742

Token 290: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.020553918555378914
    2. ' Z' → logprob: -3.8955538272857666
    3. '	Z' → logprob: -11.895553588867188
    4. 'K' → logprob: -13.270553588867188
    5. '<|end|>' → logprob: -13.895553588867188
    6. ' ' → logprob: -14.020553588867188
    7. '   ' → logprob: -14.395553588867188
    8. '(Z' → logprob: -15.020553588867188
    9. '>Z' → logprob: -15.020553588867188
    10. '  ' → logprob: -15.020553588867188

Token 291: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -1.5094070477061905e-05
    2. '__' → logprob: -11.375015258789062
    3. '().__' → logprob: -13.125015258789062
    4. 'class' → logprob: -13.750015258789062
    5. '(Z' → logprob: -14.875015258789062
    6. '__.__' → logprob: -16.875015258789062
    7. '.class' → logprob: -17.375015258789062
    8. '*' → logprob: -17.625015258789062
    9. '.*' → logprob: -17.750015258789062
    10. ' .' → logprob: -17.875015258789062

Token 292: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -6.153795766294934e-06
    2. '<class' → logprob: -12.625005722045898
    3. 'mul' → logprob: -13.750005722045898
    4. 'add' → logprob: -13.875005722045898
    5. 'classmethod' → logprob: -14.875005722045898
    6. '(class' → logprob: -16.2500057220459
    7. '```' → logprob: -16.2500057220459
    8. 'new' → logprob: -17.1250057220459
    9. ' class' → logprob: -17.3750057220459
    10. '...' → logprob: -17.5000057220459

Token 293: '__(' (ID: 8241)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00016611411410849541
    2. '__(' → logprob: -9.000165939331055
    3. ')(' → logprob: -10.625165939331055
    4. ' (' → logprob: -12.125165939331055
    5. '>(' → logprob: -12.250165939331055
    6. '}(' → logprob: -13.000165939331055
    7. '=int' → logprob: -13.750165939331055
    8. '(' → logprob: -13.875165939331055
    9. ',int' → logprob: -14.625165939331055
    10. ''(' → logprob: -14.625165939331055

Token 294: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.511406809295295e-06
    2. ' int' → logprob: -12.000006675720215
    3. '(int' → logprob: -15.125006675720215
    4. 'Z' → logprob: -16.8750057220459
    5. '   ' → logprob: -17.2500057220459
    6. '  ' → logprob: -19.2500057220459
    7. ' ' → logprob: -19.2500057220459
    8. '    ' → logprob: -20.5000057220459
    9. '	int' → logprob: -20.5000057220459
    10. '[int' → logprob: -20.5000057220459

Token 295: '(Z' (ID: 55117)
  Prédit: '(Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Z' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.625000953674316
    3. '<|end|>' → logprob: -16.125
    4. 'Z' → logprob: -17.375
    5. '(z' → logprob: -18.0
    6. '(Q' → logprob: -18.0
    7. ')' → logprob: -19.375
    8. '[' → logprob: -20.875
    9. '>Z' → logprob: -20.875
    10. '(F' → logprob: -21.25

Token 296: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027866870164871216
    2. '*' → logprob: -3.652866840362549
    3. ' *' → logprob: -6.777866840362549
    4. ')*' → logprob: -7.902866840362549
    5. '(Z' → logprob: -10.777867317199707
    6. '()' → logprob: -11.027867317199707
    7. '(' → logprob: -11.277867317199707
    8. '(*' → logprob: -13.777867317199707
    9. '*)' → logprob: -13.777867317199707
    10. '(int' → logprob: -14.027867317199707

Token 297: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.38687339425086975
    2. '*' → logprob: -1.1368733644485474
    3. ')' → logprob: -13.511873245239258
    4. '()' → logprob: -15.261873245239258
    5. ' ' → logprob: -15.636873245239258
    6. ')*' → logprob: -15.636873245239258
    7. '*(' → logprob: -16.136873245239258
    8. '()*' → logprob: -16.261873245239258
    9. '(' → logprob: -16.636873245239258
    10. ' ' → logprob: -17.261873245239258

Token 298: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.438573680294212e-06
    2. ' int' → logprob: -12.250005722045898
    3. '(int' → logprob: -14.375005722045898
    4. 'O' → logprob: -19.1250057220459
    5. '   ' → logprob: -19.5000057220459
    6. '<int' → logprob: -20.5000057220459
    7. '	int' → logprob: -20.5000057220459
    8. ' ' → logprob: -21.3750057220459
    9. '  ' → logprob: -21.5000057220459
    10. '(O' → logprob: -21.6250057220459

Token 299: '(O' (ID: 49357)
  Prédit: '(O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(O' → logprob: -0.001170225441455841
    2. '(Z' → logprob: -6.7511701583862305
    3. '(OS' → logprob: -17.876171112060547
    4. '<O' → logprob: -18.126171112060547
    5. '(' → logprob: -18.251171112060547
    6. '(Q' → logprob: -18.626171112060547
    7. 'O' → logprob: -18.751171112060547
    8. '(OP' → logprob: -19.376171112060547
    9. '	O' → logprob: -19.751171112060547
    10. '(int' → logprob: -19.876171112060547

Token 300: 'OPS' (ID: 69994)
  Prédit: 'OPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OPS' → logprob: -0.009487723931670189
    2. 'PS' → logprob: -5.009487628936768
    3. 'ops' → logprob: -6.009487628936768
    4. 'Oops' → logprob: -9.259488105773926
    5. 'oops' → logprob: -9.759488105773926
    6. ')' → logprob: -10.009488105773926
    7. 'APS' → logprob: -10.384488105773926
    8. '```' → logprob: -10.759488105773926
    9. 'O' → logprob: -11.384488105773926
    10. 'OSP' → logprob: -11.634488105773926

Token 301: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. '))' → logprob: -12.500006675720215
    3. ')
' → logprob: -13.875006675720215
    4. '<|end|>' → logprob: -14.500006675720215
    5. ')return' → logprob: -14.750006675720215
    6. ')}' → logprob: -15.750006675720215
    7. ' )' → logprob: -16.1250057220459
    8. ')}}' → logprob: -16.6250057220459
    9. ')`' → logprob: -17.2500057220459
    10. '),' → logprob: -17.2500057220459

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03534730151295662
    2. 'def' → logprob: -3.5353472232818604
    3. '<|end|>' → logprob: -6.0353474617004395
    4. ')' → logprob: -7.0353474617004395
    5. ' ' → logprob: -7.2853474617004395
    6. ' def' → logprob: -7.5353474617004395
    7. '  ' → logprob: -8.285346984863281
    8. '    
' → logprob: -8.535346984863281
    9. '...' → logprob: -9.160346984863281
    10. '
' → logprob: -9.535346984863281

Token 303: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.961093008518219
    2. 'def' (adapté à ' def') → logprob: -1.0860929489135742
    3. ')' → logprob: -1.5860929489135742
    4. ' def' → logprob: -3.336092948913574
    5. '<|end|>' → logprob: -3.961092948913574
    6. '*' → logprob: -5.211092948913574
    7. ' ' → logprob: -5.836092948913574
    8. '_' → logprob: -5.961092948913574
    9. '__' → logprob: -6.086092948913574
    10. '```' → logprob: -6.586092948913574

Token 304: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07649832218885422
    2. ' __' → logprob: -2.70149827003479
    3. 'pow' → logprob: -5.076498508453369
    4. '_pow' → logprob: -9.076498031616211
    5. ' pow' → logprob: -9.451498031616211
    6. 'r' → logprob: -10.326498031616211
    7. 'div' → logprob: -10.951498031616211
    8. 'tr' → logprob: -11.451498031616211
    9. '```' → logprob: -11.576498031616211
    10. 'flo' → logprob: -12.201498031616211

Token 305: 'flo' (ID: 174761)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.049633461982011795
    2. 'flo' → logprob: -3.049633502960205
    3. 'rm' → logprob: -7.174633502960205
    4. 'tr' → logprob: -8.424633026123047
    5. 'r' → logprob: -10.174633026123047
    6. 'rf' → logprob: -11.674633026123047
    7. 'mod' → logprob: -12.174633026123047
    8. 'xor' → logprob: -12.424633026123047
    9. 'Pow' → logprob: -14.174633026123047
    10. 'abs' → logprob: -14.299633026123047

Token 306: 'ord' (ID: 604)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.002338066464290023
    2. 'ord' → logprob: -6.12733793258667
    3. '__' → logprob: -9.002338409423828
    4. '(or' → logprob: -11.502338409423828
    5. '__
' → logprob: -12.252338409423828
    6. '##' → logprob: -12.502338409423828
    7. '``' → logprob: -13.127338409423828
    8. '```' → logprob: -13.252338409423828
    9. 'orm' → logprob: -13.752338409423828
    10. '**' → logprob: -13.752338409423828

Token 307: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.29074305295944214
    2. '__' → logprob: -1.665743112564087
    3. 'or' → logprob: -2.915743112564087
    4. '(Z' → logprob: -5.290742874145508
    5. '__(' → logprob: -6.915742874145508
    6. 'div' → logprob: -6.915742874145508
    7. 'Div' → logprob: -7.790742874145508
    8. 'r' → logprob: -7.915742874145508
    9. '_div' → logprob: -8.165742874145508
    10. 'Z' → logprob: -8.290742874145508

Token 308: '__(' (ID: 8241)
  Prédit: '(Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Z' → logprob: -3.9888433093437925e-05
    2. '(' → logprob: -10.375040054321289
    3. '(K' → logprob: -12.500040054321289
    4. '(S' → logprob: -13.250040054321289
    5. '<|end|>' → logprob: -14.000040054321289
    6. '(Q' → logprob: -14.625040054321289
    7. '(B' → logprob: -14.875040054321289
    8. '(E' → logprob: -15.625040054321289
    9. '(D' → logprob: -15.625040054321289
    10. '(A' → logprob: -15.625040054321289

Token 309: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.009769546799361706
    2. '(Z' → logprob: -4.634769439697266
    3. 'self' → logprob: -11.759769439697266
    4. ' Z' → logprob: -12.509769439697266
    5. '(self' → logprob: -14.634769439697266
    6. '	Z' → logprob: -14.759769439697266
    7. 'K' → logprob: -15.009769439697266
    8. ')' → logprob: -15.634769439697266
    9. '   ' → logprob: -15.759769439697266
    10. '(' → logprob: -16.009769439697266

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010900077410042286
    2. ',Z' → logprob: -5.135900020599365
    3. '(Z' → logprob: -5.385900020599365
    4. 'self' → logprob: -8.760900497436523
    5. ' ,' → logprob: -9.135900497436523
    6. ',self' → logprob: -10.260900497436523
    7. '(self' → logprob: -10.635900497436523
    8. '(' → logprob: -10.885900497436523
    9. ',O' → logprob: -11.135900497436523
    10. ',K' → logprob: -12.635900497436523

Token 311: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.006588066928088665
    2. ' O' → logprob: -5.256587982177734
    3. 'Z' → logprob: -6.631587982177734
    4. 'K' → logprob: -12.131587982177734
    5. ' ' → logprob: -12.256587982177734
    6. ' Z' → logprob: -12.381587982177734
    7. 'int' → logprob: -12.506587982177734
    8. ')' → logprob: -12.756587982177734
    9. '<|end|>' → logprob: -12.756587982177734
    10. '	O' → logprob: -12.881587982177734

Token 312: 'OPS' (ID: 69994)
  Prédit: 'OPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OPS' → logprob: -0.0257742740213871
    2. 'class' → logprob: -5.4007744789123535
    3. 'PS' → logprob: -5.4007744789123535
    4. 'O' → logprob: -5.5257744789123535
    5. 'ops' → logprob: -5.5257744789123535
    6. 'OP' → logprob: -6.5257744789123535
    7. 'Oops' → logprob: -6.6507744789123535
    8. 'Z' → logprob: -6.7757744789123535
    9. '(Z' → logprob: -7.4007744789123535
    10. '```' → logprob: -7.6507744789123535

Token 313: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021625438705086708
    2. '):
' → logprob: -4.396625518798828
    3. '(Z' → logprob: -5.396625518798828
    4. ')' → logprob: -6.021625518798828
    5. ',' → logprob: -6.896625518798828
    6. '(' → logprob: -7.396625518798828
    7. ')(' → logprob: -8.396625518798828
    8. ':' → logprob: -9.771625518798828
    9. '=' → logprob: -9.896625518798828
    10. '):
' → logprob: -10.521625518798828

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07020106911659241
    2. 'return' → logprob: -2.9452011585235596
    3. ' return' → logprob: -4.1952009201049805
    4. 'Z' → logprob: -10.07020092010498
    5. '   ' → logprob: -10.32020092010498
    6. ':return' → logprob: -10.57020092010498
    7. '	return' → logprob: -11.44520092010498
    8. '{return' → logprob: -11.69520092010498
    9. '<|end|>' → logprob: -12.82020092010498
    10. ' ' → logprob: -13.07020092010498

Token 315: ' inv' (ID: 1827)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.021883344277739525
    2. 'Z' → logprob: -3.896883249282837
    3. ' return' → logprob: -6.896883487701416
    4. 'self' → logprob: -9.396883010864258
    5. 'ret' → logprob: -9.646883010864258
    6. 'K' → logprob: -10.146883010864258
    7. 'F' → logprob: -10.271883010864258
    8. 'inv' (adapté à ' inv') → logprob: -11.146883010864258
    9. 'def' → logprob: -11.271883010864258
    10. 'res' → logprob: -11.646883010864258

Token 316: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3505871593952179
    2. ' =' → logprob: -1.2255871295928955
    3. 'Z' → logprob: -6.725587368011475
    4. '(Z' → logprob: -7.350587368011475
    5. 'O' → logprob: -8.600586891174316
    6. '(' → logprob: -10.850586891174316
    7. '(O' → logprob: -11.725586891174316
    8. '_Z' → logprob: -11.850586891174316
    9. ',' → logprob: -11.975586891174316
    10. 's' → logprob: -12.475586891174316

Token 317: ' _' (ID: 1175)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.6080051064491272
    2. 'Z' → logprob: -0.9830051064491272
    3. '_' → logprob: -3.9830050468444824
    4. ' X' → logprob: -4.108005046844482
    5. ' Z' → logprob: -4.108005046844482
    6. '*' → logprob: -5.108005046844482
    7. '_=' → logprob: -5.233005046844482
    8. 'O' → logprob: -5.858005046844482
    9. 'x' → logprob: -6.108005046844482
    10. 'self' → logprob: -6.358005046844482

Token 318: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052342405542731285
    2. ' =' → logprob: -5.255234241485596
    3. ',' → logprob: -14.755233764648438
    4. '=_' → logprob: -17.380233764648438
    5. '=}' → logprob: -18.130233764648438
    6. ' ' → logprob: -18.380233764648438
    7. ':=' → logprob: -19.817733764648438
    8. ')=' → logprob: -19.880233764648438
    9. '_=' → logprob: -19.880233764648438
    10. '  ' → logprob: -19.880233764648438

Token 319: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00026729601086117327
    2. ' X' → logprob: -8.250267028808594
    3. 'Z' → logprob: -12.625267028808594
    4. ' ' → logprob: -13.750267028808594
    5. 'F' → logprob: -14.250267028808594
    6. '  ' → logprob: -15.125267028808594
    7. '   ' → logprob: -15.375267028808594
    8. '	X' → logprob: -15.625267028808594
    9. '
' → logprob: -16.000267028808594
    10. 'K' → logprob: -17.000267028808594

Token 320: 'TE' (ID: 5075)
  Prédit: 'TE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TE' → logprob: -0.0004523606039583683
    2. 'O' → logprob: -8.750452041625977
    3. 'T' → logprob: -8.750452041625977
    4. 'te' → logprob: -9.625452041625977
    5. 'X' → logprob: -9.750452041625977
    6. '(X' → logprob: -12.125452041625977
    7. '(O' → logprob: -14.000452041625977
    8. '(T' → logprob: -14.000452041625977
    9. 'UE' → logprob: -14.375452041625977
    10. 'EU' → logprob: -14.625452041625977

Token 321: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.007606270257383585
    2. 'EU' → logprob: -5.007606506347656
    3. '(U' → logprob: -8.007606506347656
    4. 'O' → logprob: -8.257606506347656
    5. 'UE' → logprob: -8.632606506347656
    6. 'E' → logprob: -10.132606506347656
    7. '(Z' → logprob: -10.632606506347656
    8. 'OU' → logprob: -11.257606506347656
    9. 'eu' → logprob: -11.632606506347656
    10. 'Z' → logprob: -12.382606506347656

Token 322: '(O' (ID: 49357)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.25030583143234253
    2. '(O' → logprob: -1.7503058910369873
    3. 'O' → logprob: -4.000305652618408
    4. 'int' → logprob: -4.250305652618408
    5. 'MM' → logprob: -4.750305652618408
    6. '(M' → logprob: -5.250305652618408
    7. '(Z' → logprob: -7.000305652618408
    8. '(' → logprob: -8.875306129455566
    9. '(o' → logprob: -9.875306129455566
    10. '(mm' → logprob: -10.000306129455566

Token 323: 'OPS' (ID: 69994)
  Prédit: 'OPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OPS' → logprob: -0.11877263337373734
    2. 'O' → logprob: -2.2437727451324463
    3. 'ops' → logprob: -6.118772506713867
    4. 'PS' → logprob: -7.368772506713867
    5. '(' → logprob: -7.493772506713867
    6. 'S' → logprob: -7.868772506713867
    7. '{' → logprob: -7.993772506713867
    8. 'Oops' → logprob: -8.118772506713867
    9. 'OP' → logprob: -8.243772506713867
    10. '`' → logprob: -8.868772506713867

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012998805614188313
    2. ' ,' → logprob: -8.126299858093262
    3. '%' → logprob: -8.626299858093262
    4. '.value' → logprob: -8.751299858093262
    5. 'int' → logprob: -9.001299858093262
    6. 'value' → logprob: -9.376299858093262
    7. '  ' → logprob: -9.501299858093262
    8. '   ' → logprob: -9.501299858093262
    9. '(' → logprob: -9.626299858093262
    10. 'MM' → logprob: -10.126299858093262

Token 325: ' MM' (ID: 34047)
  Prédit: 'MM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MM' → logprob: -5.438573680294212e-06
    2. ' MM' → logprob: -12.750005722045898
    3. 'M' → logprob: -13.500005722045898
    4. '   ' → logprob: -14.875005722045898
    5. 'K' → logprob: -15.250005722045898
    6. 'MMM' → logprob: -15.375005722045898
    7. '-MM' → logprob: -15.750005722045898
    8. 'int' → logprob: -16.7500057220459
    9. '  ' → logprob: -17.0000057220459
    10. 'MMMM' → logprob: -17.2500057220459

Token 326: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6326791644096375
    2. ')
' → logprob: -0.7576791644096375
    3. ')
' → logprob: -10.257678985595703
    4. ')

' → logprob: -11.382678985595703
    5. ')[' → logprob: -11.757678985595703
    6. ')return' → logprob: -11.882678985595703
    7. '0' → logprob: -12.507678985595703
    8. '   ' → logprob: -12.757678985595703
    9. ' )
' → logprob: -13.007678985595703
    10. 'return' → logprob: -13.382678985595703

Token 327: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.015038017183542252
    2. ' return' → logprob: -4.640038013458252
    3. '       ' → logprob: -5.265038013458252
    4. '
' → logprob: -9.39003849029541
    5. '	return' → logprob: -12.51503849029541
    6. ')' → logprob: -13.01503849029541
    7. '   ' → logprob: -13.01503849029541
    8. 'ret' → logprob: -13.26503849029541
    9. 'eturn' → logprob: -13.89003849029541
    10. '        
' → logprob: -14.14003849029541

Token 328: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.3213025744771585e-05
    2. ' return' → logprob: -10.875033378601074
    3. '       ' → logprob: -11.375033378601074
    4. '   ' → logprob: -14.125033378601074
    5. 'assert' → logprob: -14.625033378601074
    6. '	return' → logprob: -14.875033378601074
    7. 'ret' → logprob: -15.250033378601074
    8. 'inv' → logprob: -15.500033378601074
    9. '
' → logprob: -15.625033378601074
    10. 'if' → logprob: -15.625033378601074

Token 329: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.001276426832191646
    2. 'F' → logprob: -6.75127649307251
    3. 'K' → logprob: -9.501276016235352
    4. ' Z' → logprob: -10.751276016235352
    5. '(Z' → logprob: -12.501276016235352
    6. '   ' → logprob: -13.376276016235352
    7. '  ' → logprob: -13.376276016235352
    8. 'z' → logprob: -14.126276016235352
    9. '	Z' → logprob: -14.376276016235352
    10. ' Funk' → logprob: -14.376276016235352

Token 330: ' *' (ID: 425)
  Prédit: '.__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.003876077476888895
    2. 'class' → logprob: -6.378876209259033
    3. '__' → logprob: -7.253876209259033
    4. ' //' → logprob: -8.128875732421875
    5. '(Z' → logprob: -8.378875732421875
    6. '().__' → logprob: -8.378875732421875
    7. ' *' → logprob: -8.753875732421875
    8. ' __' → logprob: -9.128875732421875
    9. '*' → logprob: -9.128875732421875
    10. '//' → logprob: -9.503875732421875

Token 331: ' inv' (ID: 1827)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.11604780703783035
    2. 'inv' → logprob: -2.4910478591918945
    3. 'Z' → logprob: -4.3660478591918945
    4. 'K' → logprob: -4.3660478591918945
    5. ' Funk' → logprob: -6.9910478591918945
    6. ' inv' → logprob: -8.491047859191895
    7. 'in' → logprob: -9.491047859191895
    8. '(inv' → logprob: -9.741047859191895
    9. 'funk' → logprob: -10.616047859191895
    10. ' F' → logprob: -11.241047859191895

Token 332: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: ' def' (ID: 1056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3550635874271393
    2. '<|end|>' → logprob: -1.480063557624817
    3. '   ' → logprob: -2.8550636768341064
    4. ':' → logprob: -5.355063438415527
    5. '<|end|>' → logprob: -5.980063438415527
    6. '(' → logprob: -6.855063438415527
    7. '):' → logprob: -6.980063438415527
    8. '...' → logprob: -7.480063438415527
    9. '```' → logprob: -7.480063438415527
    10. ' ' → logprob: -7.855063438415527

Token 335: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.016143105924129486
    2. ' __' → logprob: -4.141143321990967
    3. 'pow' → logprob: -9.766142845153809
    4. '_pow' → logprob: -11.016142845153809
    5. '```' → logprob: -11.266142845153809
    6. '/__' → logprob: -11.891142845153809
    7. '.__' → logprob: -12.641142845153809
    8. 'tr' → logprob: -12.891142845153809
    9. '**' → logprob: -13.516142845153809
    10. 'r' → logprob: -13.641142845153809

Token 336: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.3830287754535675
    2. 'rf' → logprob: -1.6330287456512451
    3. 'tr' → logprob: -2.133028745651245
    4. 'eq' → logprob: -6.008028984069824
    5. 'r' → logprob: -6.883028984069824
    6. 'mod' → logprob: -7.758028984069824
    7. 'rm' → logprob: -8.258028984069824
    8. 'repr' → logprob: -9.258028984069824
    9. 'flo' → logprob: -9.383028984069824
    10. 'if' → logprob: -11.258028984069824

Token 337: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -6.933173426659778e-05
    2. '__' → logprob: -9.625069618225098
    3. '__(
' → logprob: -13.375069618225098
    4. '(Z' → logprob: -14.500069618225098
    5. '__((' → logprob: -14.625069618225098
    6. '_(' → logprob: -15.500069618225098
    7. '(' → logprob: -15.500069618225098
    8. '__('' → logprob: -15.875069618225098
    9. '__(*' → logprob: -16.37506866455078
    10. '___' → logprob: -17.00006866455078

Token 338: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -5.32392441527918e-05
    2. '(Z' → logprob: -10.250053405761719
    3. 'self' → logprob: -11.625053405761719
    4. ' Z' → logprob: -12.250053405761719
    5. 'K' → logprob: -13.250053405761719
    6. '   ' → logprob: -14.000053405761719
    7. '	Z' → logprob: -14.375053405761719
    8. ')(' → logprob: -15.625053405761719
    9. ',Z' → logprob: -15.750053405761719
    10. 'z' → logprob: -16.12505340576172

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001761272142175585
    2. ',Z' → logprob: -9.500176429748535
    3. '(Z' → logprob: -10.500176429748535
    4. ' ,' → logprob: -10.625176429748535
    5. ',O' → logprob: -10.750176429748535
    6. '(' → logprob: -10.875176429748535
    7. '(O' → logprob: -12.875176429748535
    8. ' (' → logprob: -13.500176429748535
    9. ')' → logprob: -14.000176429748535
    10. '<|end|>' → logprob: -14.125176429748535

Token 340: ' EXP' (ID: 24457)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.005585075356066227
    2. ' O' → logprob: -5.630585193634033
    3. 'Z' → logprob: -6.505585193634033
    4. 'int' → logprob: -8.630584716796875
    5. ' ' → logprob: -9.380584716796875
    6. 'MM' → logprob: -9.630584716796875
    7. 'K' → logprob: -10.130584716796875
    8. 'other' → logprob: -10.630584716796875
    9. '  ' → logprob: -11.005584716796875
    10. 'n' → logprob: -11.505584716796875

Token 341: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004631265066564083
    2. '):
' → logprob: -5.754631042480469
    3. '):' → logprob: -6.629631042480469
    4. ' ,' → logprob: -9.879631042480469
    5. '   ' → logprob: -10.629631042480469
    6. '):
' → logprob: -10.879631042480469
    7. ',Z' → logprob: -11.379631042480469
    8. '       ' → logprob: -12.004631042480469
    9. ',O' → logprob: -12.379631042480469
    10. '(' → logprob: -12.754631042480469

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02805871143937111
    2. 'return' → logprob: -4.9030585289001465
    3. 'def' → logprob: -5.0280585289001465
    4. 'result' → logprob: -5.5280585289001465
    5. 'Z' → logprob: -5.6530585289001465
    6. 'if' → logprob: -6.1530585289001465
    7. ' return' → logprob: -7.1530585289001465
    8. ' if' → logprob: -7.4030585289001465
    9. '   ' → logprob: -7.4030585289001465
    10. ' result' → logprob: -8.028059005737305

Token 343: ' return' (ID: 622)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.4865165054798126
    2. 'return' (adapté à ' return') → logprob: -1.3615164756774902
    3. 'result' → logprob: -2.8615164756774902
    4. 'def' → logprob: -3.4865164756774902
    5. 'res' → logprob: -4.11151647567749
    6. 'K' → logprob: -4.11151647567749
    7. 'F' → logprob: -6.36151647567749
    8. 'Z' → logprob: -6.61151647567749
    9. 'r' → logprob: -6.61151647567749
    10. 'R' → logprob: -6.86151647567749

Token 344: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.0035318902228027582
    2. 'pow' → logprob: -6.3785319328308105
    3. ' Z' → logprob: -6.5035319328308105
    4. 'F' → logprob: -8.503531455993652
    5. 'K' → logprob: -9.128531455993652
    6. ' pow' → logprob: -11.878531455993652
    7. '	Z' → logprob: -13.003531455993652
    8. 'super' → logprob: -13.003531455993652
    9. '(Z' → logprob: -13.128531455993652
    10. 'int' → logprob: -13.628531455993652

Token 345: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.005060956347733736
    2. '**' → logprob: -5.755061149597168
    3. '__' → logprob: -7.630061149597168
    4. '(Z' → logprob: -7.755061149597168
    5. '().__' → logprob: -7.880061149597168
    6. 'class' → logprob: -8.130061149597168
    7. '.pow' → logprob: -9.880061149597168
    8. '(pow' → logprob: -9.880061149597168
    9. '(int' → logprob: -10.005061149597168
    10. '__.__' → logprob: -10.505061149597168

Token 346: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.002087450586259365
    2. 'pow' → logprob: -6.252087593078613
    3. 'new' → logprob: -8.752087593078613
    4. '
' → logprob: -16.002086639404297
    5. '_class' → logprob: -16.002086639404297
    6. 'call' → logprob: -16.502086639404297
    7. '```' → logprob: -17.002086639404297
    8. '_pow' → logprob: -17.127086639404297
    9. '<class' → logprob: -17.252086639404297
    10. 'clas' → logprob: -17.252086639404297

Token 347: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03466999903321266
    2. '(pow' → logprob: -3.409670114517212
    3. '(int' → logprob: -7.159669876098633
    4. '>(' → logprob: -9.159669876098633
    5. '"(' → logprob: -10.534669876098633
    6. '__((' → logprob: -10.659669876098633
    7. '()(' → logprob: -11.284669876098633
    8. '_(' → logprob: -11.409669876098633
    9. ''(' → logprob: -11.534669876098633
    10. ')(' → logprob: -11.534669876098633

Token 348: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0001713590754661709
    2. ' pow' → logprob: -9.125171661376953
    3. 'int' → logprob: -9.750171661376953
    4. '   ' → logprob: -13.000171661376953
    5. '(pow' → logprob: -14.250171661376953
    6. '
' → logprob: -15.000171661376953
    7. 'power' → logprob: -15.250171661376953
    8. ' ' → logprob: -15.625171661376953
    9. '1' → logprob: -16.625171661376953
    10. '  ' → logprob: -16.625171661376953

Token 349: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.4140441635390744e-05
    2. '(' → logprob: -12.375014305114746
    3. '(Z' → logprob: -12.500014305114746
    4. ',int' → logprob: -12.625014305114746
    5. 'int' → logprob: -13.375014305114746
    6. ')' → logprob: -14.625014305114746
    7. '=int' → logprob: -15.375014305114746
    8. ')(' → logprob: -15.375014305114746
    9. '<int' → logprob: -16.50001335144043
    10. ' int' → logprob: -16.62501335144043

Token 350: '(Z' (ID: 55117)
  Prédit: '(Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Z' → logprob: -4.0484450437361374e-05
    2. 'Z' → logprob: -10.125040054321289
    3. ')' → logprob: -15.750040054321289
    4. 'int' → logprob: -17.25004005432129
    5. '(int' → logprob: -17.50004005432129
    6. ',Z' → logprob: -17.62504005432129
    7. '(' → logprob: -17.75004005432129
    8. '	Z' → logprob: -18.37504005432129
    9. '[' → logprob: -18.62504005432129
    10. '   ' → logprob: -19.25004005432129

Token 351: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015026269480586052
    2. '),' → logprob: -4.515026092529297
    3. '(Z' → logprob: -5.640026092529297
    4. ' ,' → logprob: -8.640026092529297
    5. '(' → logprob: -8.765026092529297
    6. ',Z' → logprob: -10.640026092529297
    7. '(),' → logprob: -10.890026092529297
    8. '(int' → logprob: -11.140026092529297
    9. ')' → logprob: -11.765026092529297
    10. '   ' → logprob: -12.640026092529297

Token 352: ' int' (ID: 677)
  Prédit: 'EXP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EXP' → logprob: -0.0007930741412565112
    2. 'int' → logprob: -7.500792980194092
    3. ' EXP' → logprob: -8.37579345703125
    4. ' int' → logprob: -12.87579345703125
    5. '   ' → logprob: -12.87579345703125
    6. 'EX' → logprob: -13.25079345703125
    7. ' ' → logprob: -13.75079345703125
    8. 'INT' → logprob: -14.00079345703125
    9. 'exp' → logprob: -14.62579345703125
    10. '  ' → logprob: -15.62579345703125

Token 353: '(EX' (ID: 52817)
  Prédit: '(EX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(EX' → logprob: -0.005427750293165445
    2. '(Z' → logprob: -5.630427837371826
    3. 'EXP' → logprob: -6.505427837371826
    4. 'Z' → logprob: -8.505427360534668
    5. '(EXPR' → logprob: -9.380427360534668
    6. 'EX' → logprob: -10.380427360534668
    7. '(' → logprob: -12.130427360534668
    8. '(exp' → logprob: -13.630427360534668
    9. ')' → logprob: -13.630427360534668
    10. ' EXP' → logprob: -14.005427360534668

Token 354: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -4.5252596464706585e-05
    2. ')' → logprob: -10.875044822692871
    3. '(P' → logprob: -11.750044822692871
    4. '(' → logprob: -12.000044822692871
    5. 'EXP' → logprob: -12.000044822692871
    6. '(exp' → logprob: -13.125044822692871
    7. 'XP' → logprob: -13.875044822692871
    8. '[P' → logprob: -14.750044822692871
    9. 'p' → logprob: -15.000044822692871
    10. ')
' → logprob: -15.125044822692871

Token 355: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002327363472431898
    2. '),' → logprob: -6.3773274421691895
    3. '))' → logprob: -8.252326965332031
    4. ' ,' → logprob: -8.252326965332031
    5. ')' → logprob: -9.627326965332031
    6. ')))' → logprob: -10.752326965332031
    7. ',Z' → logprob: -12.127326965332031
    8. '%' → logprob: -12.252326965332031
    9. '(),' → logprob: -13.752326965332031
    10. ',M' → logprob: -14.252326965332031

Token 356: ' MM' (ID: 34047)
  Prédit: 'MM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MM' → logprob: -7.493430894101039e-05
    2. ' MM' → logprob: -9.500075340270996
    3. 'MMM' → logprob: -18.37507438659668
    4. '-MM' → logprob: -20.12507438659668
    5. ' ' → logprob: -20.25007438659668
    6. '   ' → logprob: -20.50007438659668
    7. 'M' → logprob: -20.87507438659668
    8. '_MM' → logprob: -21.00007438659668
    9. '  ' → logprob: -21.37507438659668
    10. '.MM' → logprob: -21.75007438659668

Token 357: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0015350970206782222
    2. ')' → logprob: -6.501534938812256
    3. '))
' → logprob: -10.501535415649414
    4. ')))' → logprob: -13.001535415649414
    5. ' ))' → logprob: -13.501535415649414
    6. '))

' → logprob: -14.126535415649414
    7. '));' → logprob: -15.376535415649414
    8. ')}' → logprob: -15.376535415649414
    9. '   ' → logprob: -15.876535415649414
    10. ')
' → logprob: -16.751535415649414

Token 358: 'def' (ID: 1314)
  Prédit: 'MM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MM' → logprob: -0.40999311208724976
    2. ':' → logprob: -1.7849931716918945
    3. '#' → logprob: -2.5349931716918945
    4. '   ' → logprob: -3.7849931716918945
    5. '_' → logprob: -4.0349931716918945
    6. '_MM' → logprob: -4.5349931716918945
    7. ')' → logprob: -4.9099931716918945
    8. 'M' → logprob: -5.2849931716918945
    9. 'def' → logprob: -5.4099931716918945
    10. '.' → logprob: -6.0349931716918945

Token 359: ' M' (ID: 391)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6390449404716492
    2. 'main' → logprob: -1.264045000076294
    3. 'solve' → logprob: -2.764045000076294
    4. 'MM' → logprob: -3.014045000076294
    5. ' solve' → logprob: -3.264045000076294
    6. ' MM' → logprob: -3.889045000076294
    7. 'read' → logprob: -5.389044761657715
    8. 'parse' → logprob: -6.264044761657715
    9. 'input' → logprob: -6.639044761657715
    10. ' input' → logprob: -6.764044761657715

Token 360: 'EX' (ID: 3922)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0028558745980262756
    2. '(M' → logprob: -6.2528557777404785
    3. 'od' → logprob: -8.752856254577637
    4. 'MM' → logprob: -8.877856254577637
    5. '(' → logprob: -9.377856254577637
    6. 'def' → logprob: -9.627856254577637
    7. 'm' → logprob: -9.877856254577637
    8. '():' → logprob: -10.502856254577637
    9. 'ML' → logprob: -11.002856254577637
    10. 'ult' → logprob: -11.002856254577637

Token 361: '(J' (ID: 25268)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.9753671884536743
    2. '(lst' → logprob: -1.3503671884536743
    3. '(L' → logprob: -2.2253670692443848
    4. '(A' → logprob: -2.6003670692443848
    5. '(' → logprob: -2.8503670692443848
    6. '(array' → logprob: -3.3503670692443848
    7. '(S' → logprob: -4.100367069244385
    8. '(a' → logprob: -4.350367069244385
    9. '(seq' → logprob: -4.350367069244385
    10. '(s' → logprob: -4.725367069244385

Token 362: 'UNK' (ID: 74104)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6476837992668152
    2. '):' → logprob: -0.7726837992668152
    3. ',' → logprob: -5.647683620452881
    4. 'J' → logprob: -6.147683620452881
    5. 'S' → logprob: -6.397683620452881
    6. '):

' → logprob: -6.772683620452881
    7. 'X' → logprob: -7.147683620452881
    8. 'L' → logprob: -7.272683620452881
    9. ')' → logprob: -7.522683620452881
    10. 'N' → logprob: -7.772683620452881

Token 363: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22744686901569366
    2. '):
' → logprob: -1.6024469137191772
    3. ')' → logprob: -6.602447032928467
    4. '):
' → logprob: -8.602446556091309
    5. '   ' → logprob: -9.102446556091309
    6. ' ):' → logprob: -9.477446556091309
    7. ',' → logprob: -9.602446556091309
    8. ':' → logprob: -9.727446556091309
    9. '):

' → logprob: -10.352446556091309
    10. ')):' → logprob: -10.602446556091309

Token 364: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00800500437617302
    2. ' S' → logprob: -6.258005142211914
    3. ' s' → logprob: -6.258005142211914
    4. 'S' → logprob: -6.758005142211914
    5. 's' → logprob: -7.258005142211914
    6. ' return' → logprob: -8.258005142211914
    7. ' R' → logprob: -8.695505142211914
    8. 'n' → logprob: -9.070505142211914
    9. ' L' → logprob: -9.320505142211914
    10. ' ' → logprob: -9.383005142211914

Token 365: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6503934264183044
    2. 's' → logprob: -2.150393486022949
    3. ' s' → logprob: -2.775393486022949
    4. ' return' → logprob: -2.900393486022949
    5. 'return' → logprob: -3.275393486022949
    6. 'S' → logprob: -3.525393486022949
    7. 'r' → logprob: -3.650393486022949
    8. 'R' → logprob: -3.775393486022949
    9. 'M' → logprob: -4.025393486022949
    10. 'm' → logprob: -4.150393486022949

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043217726051807404
    2. ' =' → logprob: -3.168217658996582
    3. ',' → logprob: -9.543217658996582
    4. 'n' → logprob: -9.793217658996582
    5. '   ' → logprob: -10.918217658996582
    6. 'f' → logprob: -11.043217658996582
    7. ' ' → logprob: -11.543217658996582
    8. 'x' → logprob: -11.543217658996582
    9. '=int' → logprob: -11.918217658996582
    10. 'nt' → logprob: -12.418217658996582

Token 367: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. '1' → logprob: -16.50048828125
    4. '-' → logprob: -16.87548828125
    5. '  ' → logprob: -16.87548828125
    6. '   ' → logprob: -17.12548828125
    7. '۰' → logprob: -17.87548828125
    8. '{' → logprob: -18.43798828125
    9. 'set' → logprob: -18.62548828125
    10. '[' → logprob: -19.50048828125

Token 368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '1' → logprob: -17.75
    4. '۰' → logprob: -18.375
    5. '{' → logprob: -19.0
    6. '-' → logprob: -19.625
    7. 'set' → logprob: -19.875
    8. '[' → logprob: -19.875
    9. '```' → logprob: -20.0
    10. '０' → logprob: -20.25

Token 369: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3387748897075653
    2. '
' → logprob: -1.4637749195098877
    3. ' while' → logprob: -3.5887749195098877
    4. 'while' → logprob: -3.8387749195098877
    5. ' 
' → logprob: -6.963774681091309
    6. '  
' → logprob: -6.963774681091309
    7. ',' → logprob: -7.213774681091309
    8. ':
' → logprob: -7.213774681091309
    9. '	while' → logprob: -7.338774681091309
    10. ' ' → logprob: -7.463774681091309

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005658571142703295
    2. ' while' → logprob: -5.7556586265563965
    3. 'while' → logprob: -6.3806586265563965
    4. '	while' → logprob: -8.255658149719238
    5. '
' → logprob: -8.380658149719238
    6. '<|end|>' → logprob: -8.880658149719238
    7. '    
' → logprob: -10.130658149719238
    8. ',' → logprob: -10.380658149719238
    9. ' ' → logprob: -11.005658149719238
    10. '```' → logprob: -11.880658149719238

Token 371: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.040373679250478745
    2. ' while' → logprob: -4.290373802185059
    3. 's' → logprob: -4.540373802185059
    4. 'S' → logprob: -5.665373802185059
    5. '   ' → logprob: -5.915373802185059
    6. 'for' → logprob: -6.165373802185059
    7. '  ' → logprob: -6.540373802185059
    8. 'W' → logprob: -6.665373802185059
    9. 'J' → logprob: -7.040373802185059
    10. 'w' → logprob: -7.290373802185059

Token 372: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2255549430847168
    2. ' i' → logprob: -1.6005549430847168
    3. ' True' → logprob: -9.225555419921875
    4. 'True' → logprob: -10.350555419921875
    5. ' ' → logprob: -12.475555419921875
    6. '(i' → logprob: -13.225555419921875
    7. '{i' → logprob: -13.350555419921875
    8. ' ' → logprob: -13.475555419921875
    9. '   ' → logprob: -13.850555419921875
    10. '  ' → logprob: -14.475555419921875

Token 373: ' <=' (ID: 5017)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2265516072511673
    2. '<' → logprob: -2.9765515327453613
    3. ' in' → logprob: -2.9765515327453613
    4. '<len' → logprob: -2.9765515327453613
    5. 'not' → logprob: -3.6015515327453613
    6. 'in' → logprob: -4.476551532745361
    7. ' <' → logprob: -4.726551532745361
    8. '<J' → logprob: -7.101551532745361
    9. '<=' → logprob: -7.851551532745361
    10. '[' → logprob: -8.60155200958252

Token 374: ' L' (ID: 451)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3464896082878113
    2. 'J' → logprob: -1.721489667892456
    3. 'max' → logprob: -2.221489667892456
    4. ' J' → logprob: -6.721489429473877
    5. ' len' → logprob: -6.721489429473877
    6. ' max' → logprob: -6.721489429473877
    7. '100' → logprob: -7.471489429473877
    8. ' ' → logprob: -7.846489429473877
    9. '255' → logprob: -8.096489906311035
    10. '10' → logprob: -8.471489906311035

Token 375: 'LL' (ID: 7454)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.9653369784355164
    2. 'en' → logprob: -1.2153370380401611
    3. 'EN' → logprob: -1.4653370380401611
    4. '(J' → logprob: -3.590337038040161
    5. 'E' → logprob: -4.215336799621582
    6. 'ist' → logprob: -4.590336799621582
    7. 'e' → logprob: -5.590336799621582
    8. 'ength' → logprob: -5.590336799621582
    9. 'L' → logprob: -5.965336799621582
    10. 'max' → logprob: -6.090336799621582

Token 376: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07144679874181747
    2. 'and' → logprob: -2.6964468955993652
    3. ' or' → logprob: -7.071446895599365
    4. ':
' → logprob: -7.571446895599365
    5. ':' → logprob: -9.696446418762207
    6. ' ' → logprob: -10.696446418762207
    7. ' in' → logprob: -11.321446418762207
    8. 'or' → logprob: -11.571446418762207
    9. '   ' → logprob: -11.571446418762207
    10. 'in' → logprob: -11.946446418762207

Token 377: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17043767869472504
    2. '       ' → logprob: -2.4204375743865967
    3. 'and' → logprob: -3.6704375743865967
    4. ':' → logprob: -3.7954375743865967
    5. ':
' → logprob: -4.295437812805176
    6. ' if' → logprob: -5.795437812805176
    7. '<|end|>' → logprob: -6.920437812805176
    8. '   ' → logprob: -7.545437812805176
    9. ',' → logprob: -7.670437812805176
    10. ' not' → logprob: -8.545437812805176

Token 378: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3512421250343323
    2. 'if' (adapté à ' if') → logprob: -1.2262420654296875
    3. '       ' → logprob: -5.9762420654296875
    4. '   ' → logprob: -8.851242065429688
    5. ' and' → logprob: -10.226242065429688
    6. ' not' → logprob: -10.726242065429688
    7. '	if' → logprob: -11.351242065429688
    8. ':' → logprob: -12.226242065429688
    9. '    ' → logprob: -12.351242065429688
    10. ',' → logprob: -12.351242065429688

Token 379: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15207333862781525
    2. 'J' → logprob: -2.277073383331299
    3. ' i' → logprob: -3.402073383331299
    4. ' J' → logprob: -5.527073383331299
    5. 'not' → logprob: -7.277073383331299
    6. ' not' → logprob: -8.40207290649414
    7. '   ' → logprob: -8.77707290649414
    8. ' ' → logprob: -10.71457290649414
    9. 'I' → logprob: -10.77707290649414
    10. '(i' → logprob: -10.96457290649414

Token 380: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01607777364552021
    2. 'not' → logprob: -4.141077995300293
    3. ' in' → logprob: -10.516077995300293
    4. 'in' → logprob: -12.391077995300293
    5. '<|end|>' → logprob: -12.516077995300293
    6. '	not' → logprob: -12.766077995300293
    7. ')' → logprob: -13.641077995300293
    8. '==' → logprob: -13.891077995300293
    9. '<|end|>' → logprob: -14.266077995300293
    10. '
' → logprob: -14.516077995300293

Token 381: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.317691832780838
    2. 'in' → logprob: -1.3176918029785156
    3. 'J' → logprob: -5.942691802978516
    4. ' J' → logprob: -6.442691802978516
    5. '<|end|>' → logprob: -9.942691802978516
    6. '<|end|>' → logprob: -10.442691802978516
    7. ' not' → logprob: -10.567691802978516
    8. '	in' → logprob: -11.692691802978516
    9. ' ' → logprob: -12.067691802978516
    10. ')' → logprob: -12.255191802978516

Token 382: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.006717743817716837
    2. ' J' → logprob: -5.006717681884766
    3. 'set' → logprob: -13.506717681884766
    4. '   ' → logprob: -14.256717681884766
    5. ' set' → logprob: -15.631717681884766
    6. '	J' → logprob: -16.006717681884766
    7. ' ' → logprob: -16.756717681884766
    8. '{' → logprob: -17.381717681884766
    9. '
' → logprob: -18.131717681884766
    10. '```' → logprob: -18.381717681884766

Token 383: 'UNK' (ID: 74104)
  Prédit: 'UNK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UNK' → logprob: -0.00010151672904612496
    2. 'UN' → logprob: -11.250101089477539
    3. ':' → logprob: -11.500101089477539
    4. 'UMP' → logprob: -11.625101089477539
    5. 'unk' → logprob: -12.000101089477539
    6. '{' → logprob: -12.125101089477539
    7. '```' → logprob: -12.125101089477539
    8. '   ' → logprob: -12.250101089477539
    9. '_' → logprob: -12.750101089477539
    10. 'UCK' → logprob: -12.750101089477539

Token 384: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.429065465927124
    2. ':
' → logprob: -1.054065465927124
    3. ':return' → logprob: -9.179065704345703
    4. '):
' → logprob: -9.679065704345703
    5. '       ' → logprob: -10.054065704345703
    6. '<|end|>' → logprob: -10.304065704345703
    7. ' and' → logprob: -10.429065704345703
    8. '():
' → logprob: -10.804065704345703
    9. '):' → logprob: -11.054065704345703
    10. ':

' → logprob: -11.179065704345703

Token 385: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2993380129337311
    2. ':' → logprob: -1.4243379831314087
    3. '           ' → logprob: -4.049337863922119
    4. '       ' → logprob: -8.174338340759277
    5. ':return' → logprob: -9.049338340759277
    6. ' :
' → logprob: -9.799338340759277
    7. ' :' → logprob: -10.299338340759277
    8. '):
' → logprob: -10.674338340759277
    9. ' return' → logprob: -10.799338340759277
    10. ':
' → logprob: -11.049338340759277

Token 386: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.591982364654541
    2. '           ' → logprob: -0.841982364654541
    3. 'return' (adapté à ' return') → logprob: -4.216982364654541
    4. ' i' → logprob: -7.341982364654541
    5. '            ' → logprob: -8.591981887817383
    6. '               ' → logprob: -8.966981887817383
    7. '          ' → logprob: -10.091981887817383
    8. ' break' → logprob: -10.466981887817383
    9. '	return' → logprob: -10.466981887817383
    10. ':return' → logprob: -10.716981887817383

Token 387: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011047935113310814
    2. ' i' → logprob: -4.511047840118408
    3. '	i' → logprob: -17.13604736328125
    4. 'F' → logprob: -17.26104736328125
    5. '   ' → logprob: -17.63604736328125
    6. 'K' → logprob: -17.88604736328125
    7. '(i' → logprob: -18.51104736328125
    8. '{i' → logprob: -18.51104736328125
    9. ' ' → logprob: -18.76104736328125
    10. 'Z' → logprob: -19.76104736328125

Token 388: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000500370399095118
    2. '
' → logprob: -8.125500679016113
    3. '<|end|>' → logprob: -9.625500679016113
    4. '        
' → logprob: -10.375500679016113
    5. '   ' → logprob: -10.625500679016113
    6. 'i' → logprob: -10.875500679016113
    7. '<|end|>' → logprob: -11.625500679016113
    8. ',' → logprob: -11.875500679016113
    9. '	' → logprob: -12.125500679016113
    10. ' i' → logprob: -12.250500679016113

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003618024929892272
    2. 'i' → logprob: -8.750361442565918
    3. '   ' → logprob: -9.250361442565918
    4. ' i' → logprob: -10.625361442565918
    5. '	' → logprob: -10.750361442565918
    6. '           ' → logprob: -10.875361442565918
    7. '<|end|>' → logprob: -11.250361442565918
    8. '0' → logprob: -12.250361442565918
    9. 'import' → logprob: -13.125361442565918
    10. '        
' → logprob: -13.250361442565918

Token 390: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2302340269088745
    2. 'i' (adapté à ' i') → logprob: -1.7302340269088745
    3. ' i' → logprob: -3.730234146118164
    4. '   ' → logprob: -5.480234146118164
    5. '	i' → logprob: -8.855234146118164
    6. '	' → logprob: -10.230234146118164
    7. '++' → logprob: -10.730234146118164
    8. ' ' → logprob: -11.355234146118164
    9. '
' → logprob: -11.605234146118164
    10. '           ' → logprob: -11.855234146118164

Token 391: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.012208692729473114
    2. '+' → logprob: -4.512208461761475
    3. ' +=' → logprob: -6.762208461761475
    4. '=' → logprob: -13.512208938598633
    5. '++' → logprob: -13.762208938598633
    6. '+="' → logprob: -15.012208938598633
    7. '+='' → logprob: -15.262208938598633
    8. ']+=' → logprob: -16.387208938598633
    9. '+=(' → logprob: -16.512208938598633
    10. '+i' → logprob: -16.637208938598633

Token 392: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.37500762939453
    4. '```' → logprob: -19.50000762939453
    5. '  ' → logprob: -20.68750762939453
    6. '۱' → logprob: -21.43750762939453
    7. '１' → logprob: -21.50000762939453
    8. '0' → logprob: -21.56250762939453
    9. ' ' → logprob: -21.87500762939453
    10. '१' → logprob: -21.87500762939453

Token 393: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -21.0
    4. '   ' → logprob: -21.875
    5. '۱' → logprob: -22.625
    6. '１' → logprob: -22.875
    7. '0' → logprob: -23.5
    8. '
' → logprob: -23.5625
    9. '१' → logprob: -23.75
    10. '  ' → logprob: -23.75

Token 394: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 395: 'def' (ID: 1314)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.3151218295097351
    2. 'M' → logprob: -1.8151218891143799
    3. '#' → logprob: -2.31512188911438
    4. ')' → logprob: -6.440121650695801
    5. ':' → logprob: -6.565121650695801
    6. 'MM' → logprob: -6.565121650695801
    7. '_' → logprob: -6.815121650695801
    8. 'LL' → logprob: -7.065121650695801
    9. '<|end|>' → logprob: -7.565121650695801
    10. '.' → logprob: -8.0651216506958

Token 396: ' weird' (ID: 28783)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07020328938961029
    2. ' solve' → logprob: -3.4452033042907715
    3. 'main' → logprob: -3.6952033042907715
    4. 'solve' → logprob: -5.8202033042907715
    5. ' DP' → logprob: -7.1327033042907715
    6. '_main' → logprob: -7.4452033042907715
    7. ' Z' → logprob: -7.7577033042907715
    8. ' run' → logprob: -7.8827033042907715
    9. ' M' → logprob: -8.007702827453613
    10. ' MAIN' → logprob: -8.007702827453613

Token 397: '_' (ID: 62)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -1.0888209342956543
    2. '_' → logprob: -1.4638209342956543
    3. '_function' → logprob: -2.4638209342956543
    4. '_func' → logprob: -2.9638209342956543
    5. '_m' → logprob: -3.0888209342956543
    6. '_mod' → logprob: -3.9638209342956543
    7. '_sequence' → logprob: -3.9638209342956543
    8. '_factor' → logprob: -4.338820934295654
    9. '_union' → logprob: -4.463820934295654
    10. '_min' → logprob: -4.588820934295654

Token 398: 'grund' (ID: 27797)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'func' → logprob: -1.3132297992706299
    2. 'mod' → logprob: -1.5632297992706299
    3. 'function' → logprob: -2.81322979927063
    4. 'pattern' → logprob: -2.93822979927063
    5. 'xor' → logprob: -2.93822979927063
    6. 'input' → logprob: -3.43822979927063
    7. 'calc' → logprob: -3.56322979927063
    8. 'sum' → logprob: -3.68822979927063
    9. 'pow' → logprob: -4.063229560852051
    10. 'add' → logprob: -4.188229560852051

Token 399: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.009804139845073223
    2. 'def' → logprob: -5.0098042488098145
    3. 'ey' → logprob: -6.8848042488098145
    4. 'value' → logprob: -7.7598042488098145
    5. 'val' → logprob: -8.009803771972656
    6. '(' → logprob: -8.884803771972656
    7. 'my' → logprob: -8.884803771972656
    8. 'wert' → logprob: -9.134803771972656
    9. '()' → logprob: -9.384803771972656
    10. 'werte' → logprob: -9.509803771972656

Token 400: '(E' (ID: 20882)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.8457090854644775
    2. '(state' → logprob: -1.4707090854644775
    3. '(node' → logprob: -2.3457090854644775
    4. '(N' → logprob: -2.3457090854644775
    5. '(n' → logprob: -3.3457090854644775
    6. '(' → logprob: -3.8457090854644775
    7. '(State' → logprob: -3.8457090854644775
    8. '(x' → logprob: -4.845708847045898
    9. '(s' → logprob: -4.845708847045898
    10. '(F' → logprob: -4.970708847045898

Token 401: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22950518131256104
    2. '):
' → logprob: -2.4795050621032715
    3. ',' → logprob: -2.8545050621032715
    4. 'D' → logprob: -3.7295050621032715
    5. 'N' → logprob: -5.1045050621032715
    6. 'E' → logprob: -5.2295050621032715
    7. 'X' → logprob: -5.8545050621032715
    8. 'd' → logprob: -5.8545050621032715
    9. 'V' → logprob: -5.9795050621032715
    10. 'R' → logprob: -6.2295050621032715

Token 402: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1680659055709839
    2. '   ' → logprob: -1.9180659055709839
    3. 'if' → logprob: -4.918066024780273
    4. ' s' → logprob: -9.293066024780273
    5. ' R' → logprob: -9.543066024780273
    6. ' n' → logprob: -10.293066024780273
    7. ' S' → logprob: -10.418066024780273
    8. ' Q' → logprob: -10.668066024780273
    9. ' ' → logprob: -10.793066024780273
    10. ' r' → logprob: -11.168066024780273

Token 403: ' G' (ID: 499)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004878284875303507
    2. ' if' → logprob: -6.129878520965576
    3. '   ' → logprob: -7.129878520965576
    4. 'return' → logprob: -8.004878044128418
    5. 'global' → logprob: -8.129878044128418
    6. 'R' → logprob: -8.379878044128418
    7. 'r' → logprob: -9.254878044128418
    8. 'visited' → logprob: -9.254878044128418
    9. 'seen' → logprob: -9.504878044128418
    10. '#' → logprob: -9.504878044128418

Token 404: 'DICT' (ID: 175657)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14653070271015167
    2. '=' → logprob: -2.0215306282043457
    3. ',' → logprob: -6.396530628204346
    4. '   ' → logprob: -6.896530628204346
    5. 'E' → logprob: -8.521531105041504
    6. 'f' → logprob: -8.896531105041504
    7. '=[]' → logprob: -9.021531105041504
    8. '=[]
' → logprob: -9.521531105041504
    9. '=[' → logprob: -9.646531105041504
    10. 'G' → logprob: -9.771531105041504

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34899571537971497
    2. '=' → logprob: -1.2239956855773926
    3. '[' → logprob: -8.84899616241455
    4. '   ' → logprob: -8.97399616241455
    5. ',' → logprob: -9.09899616241455
    6. ' ' → logprob: -9.84899616241455
    7. '={}' → logprob: -9.84899616241455
    8. '[E' → logprob: -10.84899616241455
    9. ' ={' → logprob: -11.22399616241455
    10. '={' → logprob: -11.72399616241455

Token 406: ' {}
' (ID: 11421)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.06430234014987946
    2. '{}' → logprob: -2.814302444458008
    3. ' dd' → logprob: -6.189302444458008
    4. '{' → logprob: -8.814302444458008
    5. '   ' → logprob: -10.189302444458008
    6. ' {}' → logprob: -10.314302444458008
    7. '{}
' → logprob: -10.814302444458008
    8. ' ' → logprob: -11.689302444458008
    9. 'default' → logprob: -11.689302444458008
    10. '(dd' → logprob: -11.814302444458008

Token 407: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0051522813737392426
    2. 'def' → logprob: -5.505152225494385
    3. ' def' → logprob: -7.630152225494385
    4. ' if' → logprob: -7.755152225494385
    5. 'if' → logprob: -9.255152702331543
    6. '
' → logprob: -10.505152702331543
    7. '<|end|>' → logprob: -11.255152702331543
    8. ' for' → logprob: -11.755152702331543
    9. '    
' → logprob: -12.130152702331543
    10. 'for' → logprob: -12.755152702331543

Token 408: ' I' (ID: 357)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13243824243545532
    2. 'def' → logprob: -2.3824381828308105
    3. '   ' → logprob: -3.5074381828308105
    4. ' if' → logprob: -6.6324381828308105
    5. '
' → logprob: -8.882438659667969
    6. ' def' → logprob: -9.382438659667969
    7. 'for' → logprob: -9.382438659667969
    8. 'n' → logprob: -9.632438659667969
    9. 'N' → logprob: -10.632438659667969
    10. 'L' → logprob: -12.007438659667969

Token 409: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2952636480331421
    2. 'f' → logprob: -2.1702637672424316
    3. 'n' → logprob: -2.6702637672424316
    4. '=' → logprob: -3.0452637672424316
    5. 'F' → logprob: -5.170263767242432
    6. 'nd' → logprob: -5.545263767242432
    7. ',' → logprob: -5.920263767242432
    8. 'dx' → logprob: -5.920263767242432
    9. 'for' → logprob: -6.545263767242432
    10. 'N' → logprob: -6.545263767242432

Token 410: ' L' (ID: 451)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.5009161233901978
    2. '0' → logprob: -1.0009161233901978
    3. ' E' → logprob: -4.375916004180908
    4. ' ' → logprob: -4.750916004180908
    5. '1' → logprob: -6.375916004180908
    6. '{}' → logprob: -6.625916004180908
    7. 'len' → logprob: -7.000916004180908
    8. '[' → logprob: -8.250916481018066
    9. '{' → logprob: -8.750916481018066
    10. '(E' → logprob: -9.125916481018066

Token 411: 'LL' (ID: 7454)
  Prédit: 'LL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LL' → logprob: -0.3152623772621155
    2. 'L' → logprob: -1.3152623176574707
    3. 'LLLL' → logprob: -7.690262317657471
    4. 'E' → logprob: -8.440262794494629
    5. 'EN' → logprob: -8.565262794494629
    6. '=' → logprob: -9.065262794494629
    7. 'LI' → logprob: -9.065262794494629
    8. '[' → logprob: -9.440262794494629
    9. ' =' → logprob: -9.440262794494629
    10. 'll' → logprob: -9.565262794494629

Token 412: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5506467819213867
    2. ' +' → logprob: -1.5506467819213867
    3. 'def' → logprob: -2.5506467819213867
    4. '
' → logprob: -2.5506467819213867
    5. '   ' → logprob: -3.0506467819213867
    6. ' def' → logprob: -6.425646781921387
    7. '+
' → logprob: -6.675646781921387
    8. '<|end|>' → logprob: -7.050646781921387
    9. '-' → logprob: -7.175646781921387
    10. 'for' → logprob: -7.300646781921387

Token 413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006223689415492117
    2. 'def' → logprob: -8.000622749328613
    3. 'if' → logprob: -9.625622749328613
    4. '
' → logprob: -9.625622749328613
    5. '    
' → logprob: -9.875622749328613
    6. ' if' → logprob: -10.250622749328613
    7. 'for' → logprob: -10.500622749328613
    8. ' for' → logprob: -11.000622749328613
    9. ' def' → logprob: -12.500622749328613
    10. ',' → logprob: -12.500622749328613

Token 414: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.572772204875946
    2. '   ' → logprob: -1.1977722644805908
    3. ' if' → logprob: -2.197772264480591
    4. 'def' → logprob: -4.072772026062012
    5. 'for' → logprob: -5.697772026062012
    6. 'while' (adapté à ' while') → logprob: -7.197772026062012
    7. ' for' → logprob: -7.322772026062012
    8. ' def' → logprob: -8.072772026062012
    9. ' while' → logprob: -8.572772026062012
    10. 'E' → logprob: -8.697772026062012

Token 415: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.4338373839855194
    2. ' I' → logprob: -1.0588374137878418
    3. 'E' → logprob: -5.933837413787842
    4. ' E' → logprob: -6.808837413787842
    5. ' True' → logprob: -7.933837413787842
    6. 'True' → logprob: -8.183836936950684
    7. ' not' → logprob: -8.308836936950684
    8. 'i' → logprob: -8.933836936950684
    9. ' i' → logprob: -9.058836936950684
    10. 'not' → logprob: -9.808836936950684

Token 416: ' >' (ID: 1424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.21004964411258698
    2. '>' → logprob: -1.8350496292114258
    3. ' >=' → logprob: -3.835049629211426
    4. '=' → logprob: -6.085049629211426
    5. '-=' → logprob: -6.210049629211426
    6. ' >' → logprob: -6.835049629211426
    7. 'in' → logprob: -7.585049629211426
    8. ':' → logprob: -7.835049629211426
    9. '>-' → logprob: -7.835049629211426
    10. ' in' → logprob: -8.335049629211426

Token 417: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.049100957810878754
    2. ' ' → logprob: -3.049100875854492
    3. '=' → logprob: -7.924100875854492
    4. '-' → logprob: -9.299100875854492
    5. '1' → logprob: -10.424100875854492
    6. 'I' → logprob: -11.549100875854492
    7. 'E' → logprob: -11.799100875854492
    8. ' -' → logprob: -12.549100875854492
    9. '>' → logprob: -12.799100875854492
    10. '2' → logprob: -13.049100875854492

Token 418: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001883777091279626
    2. '-' → logprob: -6.7518839836120605
    3. ' ' → logprob: -7.6268839836120605
    4. '1' → logprob: -8.501883506774902
    5. '=' → logprob: -12.126883506774902
    6. '2' → logprob: -12.126883506774902
    7. ' -' → logprob: -12.376883506774902
    8. '3' → logprob: -13.376883506774902
    9. 'E' → logprob: -13.751883506774902
    10. '   ' → logprob: -14.189383506774902

Token 419: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3487701714038849
    2. ':' → logprob: -1.2237701416015625
    3. '   ' → logprob: -9.098770141601562
    4. ' and' → logprob: -9.598770141601562
    5. '):
' → logprob: -9.973770141601562
    6. ',' → logprob: -10.223770141601562
    7. '       ' → logprob: -11.098770141601562
    8. ':

' → logprob: -11.223770141601562
    9. ' :
' → logprob: -11.473770141601562
    10. ':
' → logprob: -11.848770141601562

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052203383296728134
    2. '   ' → logprob: -3.052203416824341
    3. ' I' → logprob: -6.927203178405762
    4. ',' → logprob: -7.052203178405762
    5. 'I' → logprob: -7.552203178405762
    6. '<|end|>' → logprob: -8.177203178405762
    7. '
' → logprob: -8.927203178405762
    8. 'E' → logprob: -9.177203178405762
    9. '<|end|>' → logprob: -9.302203178405762
    10. '```' → logprob: -9.427203178405762

Token 421: ' if' (ID: 538)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.1228464841842651
    2. '   ' → logprob: -1.8728464841842651
    3. 'm' → logprob: -2.2478466033935547
    4. 'J' → logprob: -2.6228466033935547
    5. 'S' → logprob: -2.6228466033935547
    6. 'moves' → logprob: -2.9978466033935547
    7. 'N' → logprob: -3.2478466033935547
    8. 's' → logprob: -3.3728466033935547
    9. 'if' (adapté à ' if') → logprob: -3.9978466033935547
    10. 'G' → logprob: -4.122846603393555

Token 422: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.030556796118617058
    2. ' I' → logprob: -4.030556678771973
    3. 'E' → logprob: -4.530556678771973
    4. '(I' → logprob: -7.655556678771973
    5. ' E' → logprob: -7.905556678771973
    6. 'i' → logprob: -8.780556678771973
    7. ' (' → logprob: -9.280556678771973
    8. '   ' → logprob: -9.280556678771973
    9. ' not' → logprob: -9.530556678771973
    10. 'not' → logprob: -9.905556678771973

Token 423: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07431325316429138
    2. ' in' → logprob: -2.699313163757324
    3. '-' → logprob: -6.074313163757324
    4. 'not' → logprob: -6.949313163757324
    5. ' -' → logprob: -7.324313163757324
    6. 'in' → logprob: -8.449313163757324
    7. ' ==' → logprob: -9.824313163757324
    8. '>' → logprob: -10.574313163757324
    9. '+' → logprob: -10.574313163757324
    10. ':' → logprob: -10.699313163757324

Token 424: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06041950359940529
    2. 'in' → logprob: -2.9354195594787598
    3. '<|end|>' → logprob: -5.81041955947876
    4. 'G' → logprob: -6.81041955947876
    5. ' G' → logprob: -7.43541955947876
    6. '<|end|>' → logprob: -8.060419082641602
    7. ' ' → logprob: -8.935419082641602
    8. ')' → logprob: -9.435419082641602
    9. 'g' → logprob: -9.810419082641602
    10. ']' → logprob: -10.310419082641602

Token 425: ' E' (ID: 457)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.4736459888808895e-05
    2. 'E' → logprob: -11.625014305114746
    3. ' G' → logprob: -12.125014305114746
    4. 'J' → logprob: -15.625014305114746
    5. 'g' → logprob: -16.500015258789062
    6. '   ' → logprob: -18.375015258789062
    7. '  ' → logprob: -18.500015258789062
    8. '[G' → logprob: -18.500015258789062
    9. '
' → logprob: -19.125015258789062
    10. ' ' → logprob: -19.125015258789062

Token 426: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0899553894996643
    2. ':' → logprob: -2.5899553298950195
    3. '       ' → logprob: -5.4649553298950195
    4. ' and' → logprob: -5.4649553298950195
    5. ' :
' → logprob: -7.2149553298950195
    6. '):
' → logprob: -7.4649553298950195
    7. '   ' → logprob: -7.5899553298950195
    8. ',' → logprob: -8.08995532989502
    9. ' :' → logprob: -9.21495532989502
    10. 'and' → logprob: -9.71495532989502

Token 427: ' 
' (ID: 793)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23081272840499878
    2. 'G' → logprob: -2.4808127880096436
    3. ' G' → logprob: -2.8558127880096436
    4. '       ' → logprob: -2.9808127880096436
    5. ' return' → logprob: -6.2308125495910645
    6. '   ' → logprob: -6.6058125495910645
    7. 'return' → logprob: -6.8558125495910645
    8. 'E' → logprob: -6.8558125495910645
    9. ',' → logprob: -7.1058125495910645
    10. 'M' → logprob: -7.2308125495910645

Token 428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6141840219497681
    2. 'G' → logprob: -1.364184021949768
    3. '       ' → logprob: -1.739184021949768
    4. ' G' → logprob: -3.9891839027404785
    5. 'return' → logprob: -6.1141839027404785
    6. ',' → logprob: -6.4891839027404785
    7. 'E' → logprob: -6.7391839027404785
    8. '   ' → logprob: -6.8641839027404785
    9. ' return' → logprob: -7.4891839027404785
    10. 'M' → logprob: -8.489184379577637

Token 429: ' I' (ID: 357)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.14429913461208344
    2. ' G' → logprob: -2.144299030303955
    3. '           ' → logprob: -4.519299030303955
    4. '       ' → logprob: -6.394299030303955
    5. '   ' → logprob: -6.769299030303955
    6. ' break' → logprob: -7.269299030303955
    7. '
' → logprob: -7.394299030303955
    8. 'return' → logprob: -7.519299030303955
    9. ' return' → logprob: -7.644299030303955
    10. 'I' (adapté à ' I') → logprob: -8.519299507141113

Token 430: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.1755286157131195
    2. ' -=' → logprob: -1.925528645515442
    3. '-' → logprob: -5.175528526306152
    4. '=' → logprob: -5.175528526306152
    5. ' =' → logprob: -6.175528526306152
    6. '   ' → logprob: -7.300528526306152
    7. '+=' → logprob: -7.800528526306152
    8. ',' → logprob: -8.175528526306152
    9. ' in' → logprob: -9.300528526306152
    10. ' -' → logprob: -9.425528526306152

Token 431: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002997120900545269
    2. ' ' → logprob: -8.125299453735352
    3. '   ' → logprob: -12.750299453735352
    4. '2' → logprob: -15.750299453735352
    5. 's' → logprob: -16.31279945373535
    6. 'def' → logprob: -16.56279945373535
    7. '```' → logprob: -16.75029945373535
    8. '
' → logprob: -16.75029945373535
    9. '  ' → logprob: -16.87529945373535
    10. '<|end|>' → logprob: -17.06279945373535

Token 432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -11.500011444091797
    3. '2' → logprob: -14.000011444091797
    4. 's' → logprob: -16.625011444091797
    5. '   ' → logprob: -16.875011444091797
    6. '3' → logprob: -17.000011444091797
    7. '0' → logprob: -17.187511444091797
    8. '<|end|>' → logprob: -17.937511444091797
    9. '```' → logprob: -18.187511444091797
    10. 'int' → logprob: -18.562511444091797

Token 433: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009884640574455261
    2. '       ' → logprob: -4.759884834289551
    3. '<|end|>' → logprob: -7.634884834289551
    4. 'continue' → logprob: -7.884884834289551
    5. '   ' → logprob: -8.88488483428955
    6. '               ' → logprob: -9.38488483428955
    7. ' continue' → logprob: -9.63488483428955
    8. ',' → logprob: -10.63488483428955
    9. ' ' → logprob: -11.00988483428955
    10. '	       ' → logprob: -11.25988483428955

Token 434: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14065957069396973
    2. '       ' → logprob: -2.2656595706939697
    3. 'continue' → logprob: -4.140659332275391
    4. 'else' → logprob: -4.640659332275391
    5. ' else' → logprob: -7.390659332275391
    6. ' continue' → logprob: -7.390659332275391
    7. '   ' → logprob: -7.640659332275391
    8. 'import' → logprob: -9.76565933227539
    9. 'def' → logprob: -11.14065933227539
    10. '               ' → logprob: -11.26565933227539

Token 435: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3057621419429779
    2. 'continue' (adapté à ' continue') → logprob: -1.5557621717453003
    3. ' continue' → logprob: -3.5557620525360107
    4. '       ' → logprob: -3.8057620525360107
    5. '   ' → logprob: -6.80576229095459
    6. 'contin' → logprob: -9.30576229095459
    7. 'G' → logprob: -9.55576229095459
    8. 'else' → logprob: -9.68076229095459
    9. '	continue' → logprob: -9.93076229095459
    10. 'def' → logprob: -10.30576229095459

Token 436: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031356513500213623
    2. 'G' → logprob: -7.003135681152344
    3. '        
' → logprob: -7.628135681152344
    4. '
' → logprob: -7.753135681152344
    5. 's' → logprob: -8.128135681152344
    6. 'def' → logprob: -8.378135681152344
    7. '<|end|>' → logprob: -8.378135681152344
    8. 'E' → logprob: -9.003135681152344
    9. ',' → logprob: -9.378135681152344
    10. '   ' → logprob: -10.128135681152344

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0904717892408371
    2. '   ' → logprob: -3.0904717445373535
    3. 'M' → logprob: -4.2154717445373535
    4. 'G' → logprob: -4.7154717445373535
    5. 'J' → logprob: -5.7154717445373535
    6. 'E' → logprob: -6.0904717445373535
    7. 's' → logprob: -6.2154717445373535
    8. 'I' → logprob: -6.7154717445373535
    9. 'm' → logprob: -6.7154717445373535
    10. 'next' → logprob: -7.4654717445373535

Token 438: ' ME' (ID: 19811)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3036970794200897
    2. 'M' → logprob: -2.303697109222412
    3. 'moves' → logprob: -3.178697109222412
    4. 'N' → logprob: -3.678697109222412
    5. '       ' → logprob: -4.053697109222412
    6. 'J' → logprob: -4.178697109222412
    7. 'S' → logprob: -4.678697109222412
    8. 'm' → logprob: -5.053697109222412
    9. 'n' → logprob: -5.428697109222412
    10. 's' → logprob: -5.553697109222412

Token 439: 'H' (ID: 39)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3261340856552124
    2. 'X' → logprob: -1.3261340856552124
    3. 'S' → logprob: -1.8261340856552124
    4. 'M' → logprob: -2.576134204864502
    5. ' =' → logprob: -2.576134204864502
    6. 'SET' → logprob: -3.326134204864502
    7. 'R' → logprob: -3.826134204864502
    8. 'D' → logprob: -4.076134204864502
    9. 'EX' → logprob: -4.701134204864502
    10. 'E' → logprob: -5.201134204864502

Token 440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28917035460472107
    2. '_set' → logprob: -2.414170265197754
    3. '=' → logprob: -3.039170265197754
    4. 'set' → logprob: -3.539170265197754
    5. 'S' → logprob: -3.664170265197754
    6. 's' → logprob: -4.164170265197754
    7. '=set' → logprob: -4.664170265197754
    8. 'SET' → logprob: -5.414170265197754
    9. 'X' → logprob: -5.914170265197754
    10. 'Set' → logprob: -6.039170265197754

Token 441: ' M' (ID: 391)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.750068724155426
    2. 'set' → logprob: -0.750068724155426
    3. 'M' → logprob: -3.0000686645507812
    4. 'we' → logprob: -6.125068664550781
    5. '{i' → logprob: -7.500068664550781
    6. 'dd' → logprob: -7.750068664550781
    7. '{
' → logprob: -7.875068664550781
    8. ' set' → logprob: -7.875068664550781
    9. '{}
' → logprob: -8.125068664550781
    10. '(set' → logprob: -8.125068664550781

Token 442: 'EX' (ID: 3922)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.11013360321521759
    2. 'E' → logprob: -2.360133647918701
    3. '{' → logprob: -4.735133647918701
    4. '({' → logprob: -7.110133647918701
    5. '[E' → logprob: -9.485133171081543
    6. 'set' → logprob: -9.860133171081543
    7. '(' → logprob: -10.235133171081543
    8. '(I' → logprob: -10.860133171081543
    9. ' E' → logprob: -10.985133171081543
    10. 'ET' → logprob: -11.235133171081543

Token 443: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.06595183908939362
    2. '(G' → logprob: -3.3159518241882324
    3. '(set' → logprob: -4.690951824188232
    4. '(E' → logprob: -5.065951824188232
    5. '([' → logprob: -5.065951824188232
    6. '{' → logprob: -5.440951824188232
    7. '(' → logprob: -6.940951824188232
    8. 'G' → logprob: -9.56595230102539
    9. '({
' → logprob: -9.56595230102539
    10. '([{' → logprob: -10.06595230102539

Token 444: 'G' (ID: 38)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.008605947718024254
    2. ' weird' → logprob: -5.13360595703125
    3. '   ' → logprob: -6.63360595703125
    4. 'G' → logprob: -7.00860595703125
    5. '       ' → logprob: -9.38360595703125
    6. '(' → logprob: -9.88360595703125
    7. '  ' → logprob: -10.00860595703125
    8. '           ' → logprob: -10.25860595703125
    9. '

' → logprob: -10.75860595703125
    10. '               ' → logprob: -10.75860595703125

Token 445: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.02689184993505478
    2. 'E' → logprob: -4.276891708374023
    3. 'dict' → logprob: -5.526891708374023
    4. '(E' → logprob: -5.651891708374023
    5. 'we' → logprob: -6.401891708374023
    6. 'D' → logprob: -7.151891708374023
    7. 'WE' → logprob: -7.276891708374023
    8. '(' → logprob: -8.526891708374023
    9. 'DI' → logprob: -8.651891708374023
    10. '(D' → logprob: -8.901891708374023

Token 446: '.get' (ID: 775)
  Prédit: '[I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[I' → logprob: -0.22172199189662933
    2. '.get' → logprob: -2.096721887588501
    3. '[E' → logprob: -2.846721887588501
    4. '[i' → logprob: -5.09672212600708
    5. '[x' → logprob: -5.22172212600708
    6. '[' → logprob: -6.47172212600708
    7. '[j' → logprob: -6.72172212600708
    8. '[X' → logprob: -7.34672212600708
    9. '[J' → logprob: -7.59672212600708
    10. '[G' → logprob: -7.72172212600708

Token 447: '(J' (ID: 25268)
  Prédit: '(I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -0.10105276107788086
    2. '(E' → logprob: -2.976052761077881
    3. '(x' → logprob: -3.476052761077881
    4. '(i' → logprob: -5.601052761077881
    5. '(X' → logprob: -6.101052761077881
    6. '(k' → logprob: -6.101052761077881
    7. '(K' → logprob: -6.226052761077881
    8. '((' → logprob: -7.601052761077881
    9. '(' → logprob: -7.726052761077881
    10. '(J' → logprob: -7.851052761077881

Token 448: ',' (ID: 11)
  Prédit: '(I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(I' → logprob: -0.001678271684795618
    2. '(E' → logprob: -6.626678466796875
    3. '(i' → logprob: -9.001678466796875
    4. '(' → logprob: -9.251678466796875
    5. '[I' → logprob: -10.626678466796875
    6. '(K' → logprob: -10.751678466796875
    7. '(J' → logprob: -10.876678466796875
    8. '(x' → logprob: -11.001678466796875
    9. 'I' → logprob: -12.126678466796875
    10. ')' → logprob: -12.626678466796875

Token 449: ' ' (ID: 220)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.29079297184944153
    2. '0' → logprob: -1.5407929420471191
    3. ')' → logprob: -4.415792942047119
    4. 'None' → logprob: -4.915792942047119
    5. 'i' → logprob: -5.040792942047119
    6. 'E' → logprob: -5.415792942047119
    7. '-' → logprob: -6.290792942047119
    8. 'LL' → logprob: -6.915792942047119
    9. '(I' → logprob: -7.290792942047119
    10. '   ' → logprob: -7.290792942047119

Token 450: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003111995756626129
    2. 'I' → logprob: -6.128111839294434
    3. '-' → logprob: -7.753111839294434
    4. ' ' → logprob: -8.753111839294434
    5. 'LL' → logprob: -9.628111839294434
    6. 'None' → logprob: -9.753111839294434
    7. 'i' → logprob: -10.003111839294434
    8. ')' → logprob: -10.003111839294434
    9. 'E' → logprob: -10.628111839294434
    10. 'L' → logprob: -10.878111839294434

Token 451: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6640746593475342
    2. 'for' → logprob: -1.1640746593475342
    3. ')' → logprob: -1.7890746593475342
    4. '   ' → logprob: -6.164074897766113
    5. ' ' → logprob: -6.414074897766113
    6. '()' → logprob: -6.914074897766113
    7. '  ' → logprob: -8.164074897766113
    8. ']' → logprob: -8.664074897766113
    9. '	for' → logprob: -8.664074897766113
    10. '    ' → logprob: -8.789074897766113

Token 452: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5786287188529968
    2. ' for' → logprob: -0.8286287188529968
    3. '       ' → logprob: -6.8286285400390625
    4. '           ' → logprob: -7.7036285400390625
    5. '   ' → logprob: -8.453628540039062
    6. '        ' → logprob: -8.453628540039062
    7. '               ' → logprob: -9.203628540039062
    8. '          ' → logprob: -9.203628540039062
    9. '    ' → logprob: -9.703628540039062
    10. '            ' → logprob: -9.828628540039062

Token 453: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.03839385136961937
    2. ' J' → logprob: -3.28839373588562
    3. 'j' → logprob: -9.1633939743042
    4. ' ' → logprob: -9.4133939743042
    5. 'K' → logprob: -10.1633939743042
    6. '   ' → logprob: -11.5383939743042
    7. ' j' → logprob: -11.5383939743042
    8. '  ' → logprob: -11.5383939743042
    9. 'x' → logprob: -11.6633939743042
    10. 'E' → logprob: -11.9133939743042

Token 454: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3485179543495178
    2. 'in' → logprob: -1.223517894744873
    3. ' ' → logprob: -10.098518371582031
    4. '	in' → logprob: -11.723518371582031
    5. 'IN' → logprob: -12.598518371582031
    6. '<|end|>' → logprob: -12.723518371582031
    7. 'import' → logprob: -13.098518371582031
    8. 'In' → logprob: -13.223518371582031
    9. 'J' → logprob: -13.348518371582031
    10. '
' → logprob: -13.473518371582031

Token 455: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.11524756997823715
    2. ' E' → logprob: -2.8652474880218506
    3. 'range' → logprob: -3.4902474880218506
    4. ' range' → logprob: -3.9902474880218506
    5. '[E' → logprob: -7.11524772644043
    6. 'g' → logprob: -7.61524772644043
    7. '[' → logprob: -8.11524772644043
    8. '(E' → logprob: -8.49024772644043
    9. ' ' → logprob: -8.74024772644043
    10. ' [' → logprob: -9.42774772644043

Token 456: '[I' (ID: 120516)
  Prédit: '[I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[I' → logprob: -0.025287020951509476
    2. ' if' → logprob: -4.15028715133667
    3. '.get' → logprob: -5.52528715133667
    4. '[E' → logprob: -6.15028715133667
    5. '})' → logprob: -6.77528715133667
    6. '[' → logprob: -7.27528715133667
    7. '[i' → logprob: -7.65028715133667
    8. 'if' → logprob: -7.90028715133667
    9. '(I' → logprob: -9.150286674499512
    10. '[(' → logprob: -10.025286674499512

Token 457: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3789922893047333
    2. ' if' → logprob: -1.6289923191070557
    3. '-' → logprob: -2.6289923191070557
    4. 'if' → logprob: -3.5039923191070557
    5. ' -' → logprob: -5.003992080688477
    6. '])' → logprob: -5.128992080688477
    7. ']}' → logprob: -6.378992080688477
    8. ')' → logprob: -7.378992080688477
    9. '   ' → logprob: -7.753992080688477
    10. ']-' → logprob: -8.003992080688477

Token 458: '})
' (ID: 6795)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.1834259033203125
    2. '})
' → logprob: -1.8084259033203125
    3. '       ' → logprob: -6.8084259033203125
    4. ' })' → logprob: -6.8084259033203125
    5. '   ' → logprob: -7.0584259033203125
    6. ')' → logprob: -8.808425903320312
    7. ' })
' → logprob: -9.183425903320312
    8. ' if' → logprob: -9.308425903320312
    9. '}' → logprob: -9.808425903320312
    10. ')}' → logprob: -10.183425903320312

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002016331272898242
    2. 'G' → logprob: -9.375201225280762
    3. '<|end|>' → logprob: -9.375201225280762
    4. ' G' → logprob: -11.500201225280762
    5. '
' → logprob: -12.125201225280762
    6. '   ' → logprob: -12.375201225280762
    7. ',' → logprob: -12.500201225280762
    8. '           ' → logprob: -13.000201225280762
    9. '        
' → logprob: -13.250201225280762
    10. ')' → logprob: -14.000201225280762

Token 460: ' if' (ID: 538)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0002920830447692424
    2. '       ' → logprob: -8.50029182434082
    3. ' G' → logprob: -9.37529182434082
    4. '	G' → logprob: -12.75029182434082
    5. '   ' → logprob: -14.25029182434082
    6. '
' → logprob: -16.12529182434082
    7. '```' → logprob: -17.25029182434082
    8. '           ' → logprob: -18.00029182434082
    9. '_G' → logprob: -18.12529182434082
    10. '	' → logprob: -18.12529182434082

Token 461: ' ME' (ID: 19811)
  Prédit: 'ME'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ME' → logprob: -0.16841863095760345
    2. 'I' → logprob: -2.1684186458587646
    3. ' ME' → logprob: -4.4184184074401855
    4. 'G' → logprob: -4.5434184074401855
    5. 'E' → logprob: -4.6684184074401855
    6. 'not' → logprob: -5.9184184074401855
    7. 'J' → logprob: -6.9184184074401855
    8. '   ' → logprob: -7.5434184074401855
    9. '0' → logprob: -7.6684184074401855
    10. 'i' → logprob: -7.6684184074401855

Token 462: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0019984657410532236
    2. '=' → logprob: -7.001998424530029
    3. ' =' → logprob: -7.876998424530029
    4. 'def' → logprob: -8.751998901367188
    5. '   ' → logprob: -9.501998901367188
    6. '==' → logprob: -10.126998901367188
    7. '[' → logprob: -10.376998901367188
    8. 'h' → logprob: -10.376998901367188
    9. 'DICT' → logprob: -10.376998901367188
    10. 'G' → logprob: -11.001998901367188

Token 463: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4801058769226074
    2. ' not' → logprob: -1.9801058769226074
    3. '==' → logprob: -2.4801058769226074
    4. ' >=' → logprob: -3.3551058769226074
    5. ' >' → logprob: -3.4801058769226074
    6. ' !=' → logprob: -3.6051058769226074
    7. ' in' → logprob: -4.105105876922607
    8. ' is' → logprob: -4.105105876922607
    9. '>' → logprob: -4.980105876922607
    10. ' <=' → logprob: -5.105105876922607

Token 464: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8582669496536255
    2. '       ' → logprob: -1.2332669496536255
    3. ' G' → logprob: -1.4832669496536255
    4. 'G' → logprob: -3.733266830444336
    5. ':' → logprob: -4.358266830444336
    6. ':
' → logprob: -4.733266830444336
    7. '<|end|>' → logprob: -5.358266830444336
    8. '   ' → logprob: -6.108266830444336
    9. '	G' → logprob: -7.233266830444336
    10. '
' → logprob: -7.608266830444336

Token 465: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.18019451200962067
    2. ' G' → logprob: -1.8051944971084595
    3. 'return' → logprob: -8.930194854736328
    4. ' return' → logprob: -9.180194854736328
    5. '           ' → logprob: -10.055194854736328
    6. '   ' → logprob: -10.180194854736328
    7. 'I' → logprob: -10.680194854736328
    8. '
' → logprob: -10.805194854736328
    9. '       ' → logprob: -11.430194854736328
    10. ' break' → logprob: -11.680194854736328

Token 466: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -2.856408536899835e-05
    2. '_DICT' → logprob: -11.625028610229492
    3. ' =' → logprob: -12.250028610229492
    4. '=' → logprob: -12.500028610229492
    5. 'dict' → logprob: -12.750028610229492
    6. 'DIT' → logprob: -13.000028610229492
    7. 'G' → logprob: -13.625028610229492
    8. '
' → logprob: -13.625028610229492
    9. 'DI' → logprob: -14.500028610229492
    10. 'Dict' → logprob: -14.875028610229492

Token 467: '[I' (ID: 120516)
  Prédit: '[I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[I' → logprob: -1.1994775377388578e-05
    2. '[E' → logprob: -11.750012397766113
    3. 'I' → logprob: -13.375012397766113
    4. '[' → logprob: -13.500012397766113
    5. ' [' → logprob: -14.750012397766113
    6. ',I' → logprob: -15.875012397766113
    7. '[i' → logprob: -15.875012397766113
    8. '[J' → logprob: -16.250011444091797
    9. '(I' → logprob: -16.500011444091797
    10. '
' → logprob: -17.125011444091797

Token 468: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5467876195907593
    2. '=' → logprob: -1.5467876195907593
    3. ' =' → logprob: -1.6717876195907593
    4. ']=' → logprob: -3.921787738800049
    5. ' ]' → logprob: -7.921787738800049
    6. ' ' → logprob: -9.29678726196289
    7. ')' → logprob: -9.79678726196289
    8. '-' → logprob: -11.79678726196289
    9. ')=' → logprob: -11.92178726196289
    10. '   ' → logprob: -12.92178726196289

Token 469: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132704198360443
    2. ' =' → logprob: -1.3132704496383667
    3. ' ' → logprob: -11.813270568847656
    4. ',' → logprob: -15.063270568847656
    5. '+=' → logprob: -15.438270568847656
    6. '=A' → logprob: -16.438270568847656
    7. ')' → logprob: -16.688270568847656
    8. '=i' → logprob: -16.688270568847656
    9. '=int' → logprob: -16.813270568847656
    10. '=M' → logprob: -16.938270568847656

Token 470: ' ME' (ID: 19811)
  Prédit: 'ME'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ME' → logprob: -0.0005340866628102958
    2. ' ME' → logprob: -7.7505340576171875
    3. 'M' → logprob: -10.375534057617188
    4. 'WE' → logprob: -10.625534057617188
    5. 'we' → logprob: -10.750534057617188
    6. 'F' → logprob: -11.125534057617188
    7. 'G' → logprob: -12.750534057617188
    8. 'me' → logprob: -13.250534057617188
    9. 'int' → logprob: -13.625534057617188
    10. '_ME' → logprob: -14.000534057617188

Token 471: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -14.56250286102295
    3. '   ' → logprob: -16.000001907348633
    4. '' → logprob: -16.500001907348633
    5. '       ' → logprob: -16.562501907348633
    6. '=' → logprob: -16.562501907348633
    7. '...' → logprob: -16.687501907348633
    8. '```' → logprob: -16.687501907348633
    9. 'HT' → logprob: -16.750001907348633
    10. '+' → logprob: -16.875001907348633

Token 472: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11609558016061783
    2. '
' → logprob: -2.241095542907715
    3. '<|end|>' → logprob: -5.866095542907715
    4. '
' → logprob: -9.116095542907715
    5. '   ' → logprob: -9.741095542907715
    6. ',' → logprob: -9.866095542907715
    7. '<|end|>' → logprob: -9.866095542907715
    8. '        
' → logprob: -9.991095542907715
    9. '           ' → logprob: -10.741095542907715
    10. 'I' → logprob: -11.241095542907715

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00490224314853549
    2. '
' → logprob: -5.754902362823486
    3. '<|end|>' → logprob: -6.629902362823486
    4. '           ' → logprob: -9.129901885986328
    5. '   ' → logprob: -9.254901885986328
    6. ' else' → logprob: -10.004901885986328
    7. 'else' → logprob: -10.379901885986328
    8. ',' → logprob: -10.754901885986328
    9. 'I' → logprob: -10.879901885986328
    10. '```' → logprob: -11.129901885986328

Token 474: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' (adapté à ' I') → logprob: -0.26435479521751404
    2. '       ' → logprob: -1.5143548250198364
    3. '   ' → logprob: -4.889354705810547
    4. 'else' → logprob: -5.764354705810547
    5. ' I' → logprob: -6.764354705810547
    6. ' else' → logprob: -8.139354705810547
    7. '
' → logprob: -8.639354705810547
    8. '           ' → logprob: -10.389354705810547
    9. '        
' → logprob: -12.389354705810547
    10. '	I' → logprob: -12.389354705810547

Token 475: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.04869898408651352
    2. ' -=' → logprob: -3.048698902130127
    3. '-' → logprob: -9.173699378967285
    4. '+=' → logprob: -12.173699378967285
    5. '=' → logprob: -13.173699378967285
    6. '   ' → logprob: -14.423699378967285
    7. ' +=' → logprob: -16.17369842529297
    8. ' -' → logprob: -17.29869842529297
    9. '```' → logprob: -17.29869842529297
    10. ' ' → logprob: -18.17369842529297

Token 476: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.251171112060547
    4. '```' → logprob: -18.626171112060547
    5. 's' → logprob: -19.001171112060547
    6. '	' → logprob: -19.126171112060547
    7. ' ' → logprob: -19.501171112060547
    8. '<|end|>' → logprob: -19.688671112060547
    9. '0' → logprob: -19.938671112060547
    10. '۱' → logprob: -20.063671112060547

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '2' → logprob: -17.937530517578125
    4. '```' → logprob: -17.937530517578125
    5. '0' → logprob: -18.562530517578125
    6. '   ' → logprob: -19.062530517578125
    7. '-' → logprob: -19.312530517578125
    8. '3' → logprob: -19.687530517578125
    9. '10' → logprob: -19.812530517578125
    10. 'int' → logprob: -20.187530517578125

Token 478: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7054134607315063
    2. '<|end|>' → logprob: -1.0804134607315063
    3. '
' → logprob: -1.8304134607315063
    4. '    
' → logprob: -5.955413341522217
    5. '	return' → logprob: -6.580413341522217
    6. 'return' → logprob: -6.705413341522217
    7. '<|end|>' → logprob: -8.080413818359375
    8. ' return' → logprob: -8.080413818359375
    9. '\n' → logprob: -9.330413818359375
    10. '#' → logprob: -9.705413818359375

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010567454155534506
    2. 'return' → logprob: -6.876056671142578
    3. ' return' → logprob: -11.126056671142578
    4. '<|end|>' → logprob: -12.126056671142578
    5. '	return' → logprob: -13.501056671142578
    6. '       ' → logprob: -14.501056671142578
    7. '    
' → logprob: -14.876056671142578
    8. '
' → logprob: -15.126056671142578
    9. '  ' → logprob: -15.501056671142578
    10. 'def' → logprob: -15.501056671142578

Token 480: ' Acc' (ID: 6278)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10084261745214462
    2. 'return' → logprob: -2.3508427143096924
    3. ' return' → logprob: -7.600842475891113
    4. '<|end|>' → logprob: -9.475842475891113
    5. '	return' → logprob: -9.975842475891113
    6. '  ' → logprob: -12.850842475891113
    7. '#' → logprob: -13.350842475891113
    8. ' ' → logprob: -13.475842475891113
    9. '...' → logprob: -13.975842475891113
    10. 'G' → logprob: -14.100842475891113

Token 481: 'Sum' (ID: 17434)
  Prédit: 'umulator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.6379262804985046
    2. '=' → logprob: -1.2629263401031494
    3. 'um' → logprob: -1.7629263401031494
    4. ' =' → logprob: -4.63792610168457
    5. 'umulate' → logprob: -5.51292610168457
    6. 'u' → logprob: -6.26292610168457
    7. 'umul' → logprob: -7.26292610168457
    8. 'umu' → logprob: -8.13792610168457
    9. ',' → logprob: -8.63792610168457
    10. '+=' → logprob: -8.76292610168457

Token 482: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0591268464922905
    2. '=' → logprob: -2.934126853942871
    3. ' +=' → logprob: -5.559126853942871
    4. '+=' → logprob: -8.059126853942871
    5. '   ' → logprob: -9.809126853942871
    6. ' ' → logprob: -12.559126853942871
    7. ' |=' → logprob: -13.309126853942871
    8. '  ' → logprob: -13.309126853942871
    9. ',' → logprob: -14.184126853942871
    10. 'er' → logprob: -14.559126853942871

Token 483: ' dd' (ID: 18636)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.032489974051713943
    2. ' ' → logprob: -3.6574900150299072
    3. 'F' → logprob: -5.407489776611328
    4. 'sum' → logprob: -7.032489776611328
    5. ' sum' → logprob: -8.157489776611328
    6. ' Funk' → logprob: -8.657489776611328
    7. ' F' → logprob: -9.282489776611328
    8. '   ' → logprob: -9.407489776611328
    9. 'G' → logprob: -10.532489776611328
    10. 'K' → logprob: -10.969989776611328

Token 484: 'ict' (ID: 1360)
  Prédit: 'ict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -1.1994775377388578e-05
    2. 'int' → logprob: -11.625012397766113
    3. 'ist' → logprob: -13.375012397766113
    4. 'dict' → logprob: -13.625012397766113
    5. '(int' → logprob: -15.625012397766113
    6. 'ect' → logprob: -17.375011444091797
    7. 'act' → logprob: -17.750011444091797
    8. '(dict' → logprob: -17.875011444091797
    9. 'ic' → logprob: -18.375011444091797
    10. 'uct' → logprob: -18.500011444091797

Token 485: '(F' (ID: 12044)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0037203843239694834
    2. 'int' → logprob: -5.878720283508301
    3. '(lambda' → logprob: -7.378720283508301
    4. '(F' → logprob: -8.7537202835083
    5. 'F' → logprob: -9.3787202835083
    6. 'lambda' → logprob: -10.6287202835083
    7. '<int' → logprob: -11.5037202835083
    8. '[int' → logprob: -12.1287202835083
    9. ':int' → logprob: -13.6287202835083
    10. '=int' → logprob: -13.7537202835083

Token 486: 'unky' (ID: 123990)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6242778301239014
    2. 'int' → logprob: -1.4992778301239014
    3. 'unky' → logprob: -1.9992778301239014
    4. 'lambda' → logprob: -2.4992778301239014
    5. '(lambda' → logprob: -4.2492780685424805
    6. 'F' → logprob: -6.7492780685424805
    7. '=int' → logprob: -6.7492780685424805
    8. 'unk' → logprob: -6.8742780685424805
    9. 'unc' → logprob: -6.9992780685424805
    10. '=lambda' → logprob: -7.4992780685424805

Token 487: 'Mod' (ID: 4721)
  Prédit: 'Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -7.374227425316349e-05
    2. 'int' → logprob: -9.625073432922363
    3. '(int' → logprob: -12.625073432922363
    4. 'mod' → logprob: -13.125073432922363
    5. 'Int' → logprob: -14.000073432922363
    6. '[int' → logprob: -15.000073432922363
    7. '(Mod' → logprob: -15.000073432922363
    8. ')' → logprob: -15.250073432922363
    9. '(' → logprob: -15.875073432922363
    10. ' Mod' → logprob: -16.37507438659668

Token 488: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08797118067741394
    2. ')
' → logprob: -2.5879712104797363
    3. 'int' → logprob: -5.462971210479736
    4. '(int' → logprob: -5.587971210479736
    5. ')

' → logprob: -7.587971210479736
    6. ',int' → logprob: -8.587970733642578
    7. ',' → logprob: -8.962970733642578
    8. ')(' → logprob: -9.837970733642578
    9. 'lambda' → logprob: -10.087970733642578
    10. '(lambda' → logprob: -10.212970733642578

Token 489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002797510474920273
    2. 'for' → logprob: -6.502797603607178
    3. ' for' → logprob: -6.752797603607178
    4. '
' → logprob: -9.75279712677002
    5. 'def' → logprob: -11.12779712677002
    6. '    
' → logprob: -11.12779712677002
    7. '<|end|>' → logprob: -11.37779712677002
    8. '	for' → logprob: -12.50279712677002
    9. 'sum' → logprob: -12.75279712677002
    10. 'Acc' → logprob: -12.75279712677002

Token 490: ' Acc' (ID: 6278)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027494807727634907
    2. ' for' → logprob: -6.377749443054199
    3. '   ' → logprob: -6.877749443054199
    4. 'return' → logprob: -11.6277494430542
    5. '	for' → logprob: -14.1277494430542
    6. '#' → logprob: -14.3777494430542
    7. 'def' → logprob: -14.5027494430542
    8. '  ' → logprob: -14.5027494430542
    9. 'keys' → logprob: -14.7527494430542
    10. 'G' → logprob: -14.8777494430542

Token 491: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.023222530260682106
    2. ' =' → logprob: -3.8982224464416504
    3. '=' → logprob: -6.39822244644165
    4. 'sum' → logprob: -7.77322244644165
    5. '_sum' → logprob: -8.898222923278809
    6. 'S' → logprob: -9.023222923278809
    7. 'um' → logprob: -9.023222923278809
    8. 'SUM' → logprob: -9.773222923278809
    9. '   ' → logprob: -10.023222923278809
    10. 'def' → logprob: -10.523222923278809

Token 492: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40996986627578735
    2. '=' → logprob: -1.2849698066711426
    3. ' =' → logprob: -3.1599698066711426
    4. '=[' → logprob: -4.534969806671143
    5. '[I' → logprob: -5.284969806671143
    6. '[-' → logprob: -8.5349702835083
    7. ',' → logprob: -8.6599702835083
    8. '[int' → logprob: -9.1599702835083
    9. '[L' → logprob: -9.4099702835083
    10. '={' → logprob: -9.5349702835083

Token 493: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038543786853551865
    2. 'LL' → logprob: -3.288543701171875
    3. 'I' → logprob: -9.038543701171875
    4. '1' → logprob: -9.538543701171875
    5. 'L' → logprob: -9.663543701171875
    6. ' ' → logprob: -10.163543701171875
    7. 'lll' → logprob: -10.413543701171875
    8. '   ' → logprob: -10.538543701171875
    9. 'LLLL' → logprob: -10.538543701171875
    10. '(' → logprob: -10.788543701171875

Token 494: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007361313910223544
    2. ']=' → logprob: -7.250736236572266
    3. ' ]' → logprob: -11.000736236572266
    4. ']+=' → logprob: -12.875736236572266
    5. '()]' → logprob: -13.125736236572266
    6. '=' → logprob: -14.125736236572266
    7. '[' → logprob: -14.250736236572266
    8. '0' → logprob: -14.500736236572266
    9. ']
' → logprob: -14.500736236572266
    10. ']=(' → logprob: -14.875736236572266

Token 495: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11289524286985397
    2. ' =' → logprob: -2.2378952503204346
    3. ',' → logprob: -10.237895011901855
    4. ']' → logprob: -11.112895011901855
    5. '+=' → logprob: -11.737895011901855
    6. '[' → logprob: -12.737895011901855
    7. ']=' → logprob: -12.737895011901855
    8. ' +=' → logprob: -12.987895011901855
    9. '0' → logprob: -13.112895011901855
    10. ' ' → logprob: -14.612895011901855

Token 496: ' (' (ID: 350)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.12829415500164032
    2. '0' → logprob: -2.1282942295074463
    3. '1' → logprob: -6.628293991088867
    4. ' ' → logprob: -11.503293991088867
    5. 'K' → logprob: -11.753293991088867
    6. 'funk' → logprob: -11.753293991088867
    7. ' Funk' → logprob: -12.128293991088867
    8. '-' → logprob: -13.503293991088867
    9. 'Z' → logprob: -13.815793991088867
    10. 'G' → logprob: -14.065793991088867

Token 497: 'BBB' (ID: 133504)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.09362538158893585
    2. '0' → logprob: -2.46862530708313
    3. '1' → logprob: -5.593625545501709
    4. 'LL' → logprob: -7.843625545501709
    5. ')' → logprob: -8.84362506866455
    6. 'G' → logprob: -9.59362506866455
    7. ' Funk' → logprob: -9.59362506866455
    8. 'funk' → logprob: -9.71862506866455
    9. ' ' → logprob: -9.96862506866455
    10. 'K' → logprob: -10.34362506866455

Token 498: ' **' (ID: 6240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12708202004432678
    2. ',' → logprob: -2.752082109451294
    3. '+' → logprob: -3.502082109451294
    4. ',)' → logprob: -5.127081871032715
    5. ']' → logprob: -5.752081871032715
    6. '=' → logprob: -6.002081871032715
    7. '-' → logprob: -6.127081871032715
    8. ')
' → logprob: -6.502081871032715
    9. ':=' → logprob: -6.752081871032715
    10. '(' → logprob: -6.877081871032715

Token 499: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47850021719932556
    2. '2' → logprob: -1.728500247001648
    3. 'LL' → logprob: -2.2285001277923584
    4. 'F' → logprob: -3.3535001277923584
    5. '3' → logprob: -3.6035001277923584
    6. '(' → logprob: -5.1035003662109375
    7. 'I' → logprob: -5.6035003662109375
    8. 'L' → logprob: -5.7285003662109375
    9. ' ' → logprob: -5.8535003662109375
    10. 'G' → logprob: -6.2285003662109375

Token 500: 'LL' (ID: 7454)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8213236927986145
    2. 'LL' → logprob: -0.8213236927986145
    3. '2' → logprob: -3.1963236331939697
    4. 'F' → logprob: -3.1963236331939697
    5. '3' → logprob: -4.696323871612549
    6. 'I' → logprob: -4.821323871612549
    7. '1' → logprob: -5.821323871612549
    8. 'III' → logprob: -5.821323871612549
    9. 'L' → logprob: -6.321323871612549
    10. 'K' → logprob: -6.446323871612549

Token 501: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00011009939044015482
    2. 'I' → logprob: -9.750109672546387
    3. '0' → logprob: -12.312609672546387
    4. '
' → logprob: -12.375109672546387
    5. '1' → logprob: -12.437609672546387
    6. '[' → logprob: -12.562609672546387
    7. ')' → logprob: -12.750109672546387
    8. '=' → logprob: -13.062609672546387
    9. 'l' → logprob: -13.125109672546387
    10. '```' → logprob: -13.187609672546387

Token 502: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32732099294662476
    2. '-' → logprob: -1.9523210525512695
    3. '))' → logprob: -2.3273210525512695
    4. '+' → logprob: -4.0773210525512695
    5. ' -' → logprob: -4.9523210525512695
    6. '2' → logprob: -5.9523210525512695
    7. '0' → logprob: -6.2023210525512695
    8. ' )' → logprob: -6.5773210525512695
    9. ')))' → logprob: -6.9523210525512695
    10. '3' → logprob: -6.9523210525512695

Token 503: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.603468120098114
    2. '1' → logprob: -1.3534681797027588
    3. '3' → logprob: -2.228468179702759
    4. '0' → logprob: -3.478468179702759
    5. 'LL' → logprob: -3.728468179702759
    6. 'BBB' → logprob: -4.10346794128418
    7. '-' → logprob: -5.22846794128418
    8. 'I' → logprob: -5.72846794128418
    9. '(' → logprob: -6.85346794128418
    10. 'B' → logprob: -7.10346794128418

Token 504: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15497945249080658
    2. '))' → logprob: -2.0299794673919678
    3. ')-' → logprob: -4.654979228973389
    4. '-' → logprob: -6.779979228973389
    5. '))-' → logprob: -7.154979228973389
    6. ' )' → logprob: -7.779979228973389
    7. ' -' → logprob: -9.029979705810547
    8. ' ))' → logprob: -9.779979705810547
    9. '))
' → logprob: -10.029979705810547
    10. '[' → logprob: -10.529979705810547

Token 505: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031869823578745127
    2. '-' → logprob: -6.75318717956543
    3. ' )' → logprob: -7.00318717956543
    4. ')
' → logprob: -7.75318717956543
    5. ' -' → logprob: -7.75318717956543
    6. ')-' → logprob: -9.75318717956543
    7. '<|end|>' → logprob: -10.00318717956543
    8. '[' → logprob: -10.75318717956543
    9. '-)' → logprob: -10.87818717956543
    10. '+' → logprob: -10.87818717956543

Token 506: ' BBB' (ID: 110035)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01877814531326294
    2. 'F' → logprob: -4.018778324127197
    3. 'BBB' → logprob: -7.893778324127197
    4. 'B' → logprob: -8.643777847290039
    5. '(' → logprob: -10.268777847290039
    6. ' ' → logprob: -10.518777847290039
    7. '   ' → logprob: -12.518777847290039
    8. '0' → logprob: -13.893777847290039
    9. 'BB' → logprob: -13.893777847290039
    10. '2' → logprob: -14.018777847290039

Token 507: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23006422817707062
    2. ' -' → logprob: -1.9800642728805542
    3. '-' → logprob: -2.9800641536712646
    4. ')-' → logprob: -4.605064392089844
    5. '+' → logprob: -5.730064392089844
    6. ' )' → logprob: -6.855064392089844
    7. ')-(' → logprob: -7.230064392089844
    8. ' +' → logprob: -7.355064392089844
    9. '   ' → logprob: -8.730064392089844
    10. '[' → logprob: -8.855064392089844

Token 508: ' //' (ID: 602)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.43911951780319214
    2. ' -' → logprob: -1.314119577407837
    3. '   ' → logprob: -2.814119577407837
    4. '+' → logprob: -4.189119338989258
    5. '<|end|>' → logprob: -5.439119338989258
    6. 'def' → logprob: -6.189119338989258
    7. ')' → logprob: -6.439119338989258
    8. '
' → logprob: -6.814119338989258
    9. ' +' → logprob: -6.939119338989258
    10. ' ' → logprob: -8.064119338989258

Token 509: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.04362954571843147
    2. '(' → logprob: -3.2936296463012695
    3. '(F' → logprob: -5.7936296463012695
    4. '(M' → logprob: -6.5436296463012695
    5. 'F' → logprob: -7.5436296463012695
    6. 'BBB' → logprob: -8.04362964630127
    7. '((' → logprob: -9.41862964630127
    8. 'B' → logprob: -10.41862964630127
    9. ' (' → logprob: -10.54362964630127
    10. '(K' → logprob: -11.04362964630127

Token 510: 'BBB' (ID: 133504)
  Prédit: 'BBB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BBB' → logprob: -0.000903480569832027
    2. '(B' → logprob: -7.875903606414795
    3. '(' → logprob: -8.000903129577637
    4. ' BBB' → logprob: -9.250903129577637
    5. 'BB' → logprob: -10.375903129577637
    6. 'F' → logprob: -10.375903129577637
    7. 'B' → logprob: -11.375903129577637
    8. '(F' → logprob: -11.875903129577637
    9. 'BBBB' → logprob: -12.500903129577637
    10. 'MMM' → logprob: -13.625903129577637

Token 511: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759696960449219
    2. ' -' → logprob: -0.8259696960449219
    3. ' ' → logprob: -11.200969696044922
    4. 'def' → logprob: -12.450969696044922
    5. '   ' → logprob: -12.700969696044922
    6. '  ' → logprob: -13.200969696044922
    7. ')' → logprob: -13.450969696044922
    8. '[' → logprob: -13.575969696044922
    9. '1' → logprob: -13.700969696044922
    10. 'import' → logprob: -13.825969696044922

Token 512: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07439503073692322
    2. 'BBB' → logprob: -2.824394941329956
    3. 'B' → logprob: -4.574395179748535
    4. 'F' → logprob: -6.324395179748535
    5. '(' → logprob: -9.199395179748535
    6. ' ' → logprob: -9.824395179748535
    7. '(B' → logprob: -11.324395179748535
    8. 'bbb' → logprob: -11.574395179748535
    9. 'BB' → logprob: -11.574395179748535
    10. 'K' → logprob: -11.699395179748535

Token 513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002516327193006873
    2. 'F' → logprob: -6.002516269683838
    3. 'B' → logprob: -10.877516746520996
    4. 'BBB' → logprob: -11.127516746520996
    5. ' ' → logprob: -12.752516746520996
    6. 'K' → logprob: -14.377516746520996
    7. '(' → logprob: -14.502516746520996
    8. '0' → logprob: -14.752516746520996
    9. '
' → logprob: -14.752516746520996
    10. '   ' → logprob: -15.127516746520996

Token 514: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003821716527454555
    2. ' )' → logprob: -8.625382423400879
    3. ')
' → logprob: -9.000382423400879
    4. '   ' → logprob: -10.375382423400879
    5. '<|end|>' → logprob: -11.000382423400879
    6. 'def' → logprob: -11.875382423400879
    7. '[' → logprob: -12.500382423400879
    8. ')**' → logprob: -12.750382423400879
    9. '))' → logprob: -13.000382423400879
    10. ')[' → logprob: -13.000382423400879

Token 515: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005517138633877039
    2. '<|end|>' → logprob: -5.88051700592041
    3. ' for' → logprob: -6.38051700592041
    4. 'for' → logprob: -7.00551700592041
    5. '
' → logprob: -10.00551700592041
    6. '<|end|>' → logprob: -11.50551700592041
    7. '	for' → logprob: -11.63051700592041
    8. ')' → logprob: -11.75551700592041
    9. '  ' → logprob: -12.38051700592041
    10. '#' → logprob: -12.38051700592041

Token 516: ' _' (ID: 1175)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038031160831451416
    2. 'for' → logprob: -3.7880311012268066
    3. ' for' → logprob: -4.288031101226807
    4. '<|end|>' → logprob: -7.538031101226807
    5. 'i' → logprob: -9.163031578063965
    6. 'def' → logprob: -10.038031578063965
    7. 'I' → logprob: -10.413031578063965
    8. '  ' → logprob: -10.538031578063965
    9. ' i' → logprob: -10.538031578063965
    10. '    ' → logprob: -10.663031578063965

Token 517: 'v' (ID: 85)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17683421075344086
    2. '=' → logprob: -2.3018341064453125
    3. 'I' → logprob: -3.8018341064453125
    4. 'for' → logprob: -4.4268341064453125
    5. 'L' → logprob: -5.3018341064453125
    6. 'def' → logprob: -5.4268341064453125
    7. 'acc' → logprob: -6.0518341064453125
    8. 'E' → logprob: -6.0518341064453125
    9. 'i' → logprob: -6.3018341064453125
    10. '_' → logprob: -6.6768341064453125

Token 518: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7160427570343018
    2. ' =' → logprob: -1.0910427570343018
    3. 'al' → logprob: -1.9660427570343018
    4. '_' → logprob: -4.591042518615723
    5. 'alue' → logprob: -5.341042518615723
    6. 'ar' → logprob: -5.341042518615723
    7. 'v' → logprob: -5.466042518615723
    8. 'ALUE' → logprob: -5.966042518615723
    9. ',' → logprob: -6.341042518615723
    10. 'a' → logprob: -6.591042518615723

Token 519: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6052109599113464
    2. ' _' → logprob: -2.855211019515991
    3. '_g' → logprob: -2.855211019515991
    4. '_acc' → logprob: -3.355211019515991
    5. '_r' → logprob: -3.730211019515991
    6. '_s' → logprob: -3.980211019515991
    7. 'acc' → logprob: -4.105210781097412
    8. '_x' → logprob: -4.105210781097412
    9. 'G' → logprob: -4.230210781097412
    10. 'res' → logprob: -4.230210781097412

Token 520: 'step' (ID: 17509)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12745139002799988
    2. '=' → logprob: -2.5024514198303223
    3. 'v' → logprob: -3.7524514198303223
    4. 'acc' → logprob: -6.002451419830322
    5. ',' → logprob: -6.127451419830322
    6. 'sum' → logprob: -6.752451419830322
    7. 'L' → logprob: -7.627451419830322
    8. 'G' → logprob: -7.627451419830322
    9. 'x' → logprob: -7.627451419830322
    10. 's' → logprob: -7.627451419830322

Token 521: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47528907656669617
    2. ' =' → logprob: -0.9752891063690186
    3. ',' → logprob: -6.7252888679504395
    4. ' ' → logprob: -12.600289344787598
    5. 's' → logprob: -13.350289344787598
    6. '   ' → logprob: -13.600289344787598
    7. '_' → logprob: -14.225289344787598
    8. 'v' → logprob: -14.475289344787598
    9. '  ' → logprob: -14.725289344787598
    10. '=_' → logprob: -15.225289344787598

Token 522: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7003374695777893
    2. '1' → logprob: -1.3253374099731445
    3. 'LL' → logprob: -1.7003374099731445
    4. 'BBB' → logprob: -3.4503374099731445
    5. '(' → logprob: -4.8253374099731445
    6. ' ' → logprob: -5.2003374099731445
    7. '2' → logprob: -6.0753374099731445
    8. 'B' → logprob: -6.3253374099731445
    9. '[' → logprob: -7.3253374099731445
    10. 'F' → logprob: -7.5753374099731445

Token 523: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7432875633239746
    2. '0' → logprob: -1.2432875633239746
    3. 'LL' → logprob: -1.7432875633239746
    4. 'BBB' → logprob: -3.7432875633239746
    5. '(' → logprob: -4.368287563323975
    6. ' ' → logprob: -4.743287563323975
    7. '2' → logprob: -5.368287563323975
    8. 'B' → logprob: -5.868287563323975
    9. 'L' → logprob: -6.743287563323975
    10. 'F' → logprob: -6.868287563323975

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22310692071914673
    2. ' =' → logprob: -1.723106861114502
    3. '=' → logprob: -3.973106861114502
    4. '   ' → logprob: -6.348106861114502
    5. ' ,' → logprob: -8.22310733795166
    6. '<|end|>' → logprob: -8.22310733795166
    7. ' ' → logprob: -9.72310733795166
    8. '0' → logprob: -10.22310733795166
    9. ',_' → logprob: -10.34810733795166
    10. '+' → logprob: -10.59810733795166

Token 525: ' Funk' (ID: 36107)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02889685146510601
    2. '0' → logprob: -4.028896808624268
    3. 'LL' → logprob: -4.778896808624268
    4. 'BBB' → logprob: -7.403896808624268
    5. ' ' → logprob: -7.528896808624268
    6. '-' → logprob: -8.153897285461426
    7. 'None' → logprob: -8.903897285461426
    8. '2' → logprob: -8.903897285461426
    9. '(' → logprob: -9.028897285461426
    10. 'F' → logprob: -9.403897285461426

Token 526: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.572941179503687e-05
    2. 'Mod' → logprob: -10.000045776367188
    3. '(Mod' → logprob: -15.875045776367188
    4. 'ym' → logprob: -17.000045776367188
    5. '_Mod' → logprob: -17.375045776367188
    6. '```' → logprob: -20.125045776367188
    7. ' y' → logprob: -20.250045776367188
    8. 'MOD' → logprob: -20.250045776367188
    9. 'Y' → logprob: -20.625045776367188
    10. 'Modulo' → logprob: -20.625045776367188

Token 527: 'Mod' (ID: 4721)
  Prédit: 'Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -17.0
    3. 'mod' → logprob: -17.5
    4. '(Mod' → logprob: -17.625
    5. ' Mod' → logprob: -19.0
    6. '1' → logprob: -19.75
    7. '_mod' → logprob: -20.0
    8. '_Mod' → logprob: -20.375
    9. 'M' → logprob: -21.125
    10. '0' → logprob: -21.375

Token 528: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0042057824321091175
    2. '1' → logprob: -6.004205703735352
    3. '(B' → logprob: -6.379205703735352
    4. '0' → logprob: -11.754205703735352
    5. '(-' → logprob: -11.879205703735352
    6. '()' → logprob: -12.004205703735352
    7. '((' → logprob: -12.879205703735352
    8. 'BBB' → logprob: -13.629205703735352
    9. 'B' → logprob: -13.754205703735352
    10. ' (' → logprob: -13.754205703735352

Token 529: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015313460491597652
    2. '0' → logprob: -4.890313625335693
    3. 'BBB' → logprob: -5.390313625335693
    4. '(' → logprob: -6.140313625335693
    5. 'LL' → logprob: -7.890313625335693
    6. 'B' → logprob: -8.890313148498535
    7. '(B' → logprob: -9.015313148498535
    8. '-' → logprob: -9.390313148498535
    9. '2' → logprob: -9.765313148498535
    10. '3' → logprob: -10.765313148498535

Token 530: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31354883313179016
    2. ')
' → logprob: -1.3135488033294678
    3. ')
' → logprob: -8.813549041748047
    4. ',' → logprob: -9.813549041748047
    5. ')

' → logprob: -10.438549041748047
    6. '   ' → logprob: -10.688549041748047
    7. ' )' → logprob: -12.063549041748047
    8. ',)' → logprob: -12.813549041748047
    9. ' )
' → logprob: -13.063549041748047
    10. '0' → logprob: -13.063549041748047

Token 531: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10149680078029633
    2. 'for' → logprob: -2.476496696472168
    3. '<|end|>' → logprob: -5.101496696472168
    4. ' for' → logprob: -5.351496696472168
    5. 'i' → logprob: -7.476496696472168
    6. 'while' → logprob: -7.851496696472168
    7. 'I' → logprob: -8.976496696472168
    8. ',' → logprob: -9.851496696472168
    9. '  ' → logprob: -9.851496696472168
    10. '	for' → logprob: -9.976496696472168

Token 532: ' Rak' (ID: 69387)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25889530777931213
    2. 'for' → logprob: -1.5088952779769897
    3. ' for' → logprob: -5.258895397186279
    4. 'while' → logprob: -6.758895397186279
    5. 'I' → logprob: -7.883895397186279
    6. 'i' → logprob: -9.008894920349121
    7. ' while' → logprob: -10.508894920349121
    8. '	for' → logprob: -11.383894920349121
    9. ' I' → logprob: -12.008894920349121
    10. '  ' → logprob: -12.133894920349121

Token 533: 'ugo' (ID: 29705)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4686816930770874
    2. 'u' → logprob: -1.8436816930770874
    3. 'el' → logprob: -1.9686816930770874
    4. 'et' → logprob: -2.593681812286377
    5. '=' → logprob: -2.968681812286377
    6. 'ut' → logprob: -3.093681812286377
    7. 'i' → logprob: -3.968681812286377
    8. 'esh' → logprob: -4.093681812286377
    9. '_step' → logprob: -4.218681812286377
    10. 'it' → logprob: -4.343681812286377

Token 534: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22625388205051422
    2. ' =' → logprob: -1.726253867149353
    3. ',' → logprob: -3.8512539863586426
    4. '   ' → logprob: -6.726253986358643
    5. 'for' → logprob: -7.101253986358643
    6. 'def' → logprob: -9.226253509521484
    7. 'while' → logprob: -9.288753509521484
    8. '[' → logprob: -9.413753509521484
    9. ' ,' → logprob: -9.413753509521484
    10. ' ' → logprob: -9.413753509521484

Token 535: ' E' (ID: 457)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09628256410360336
    2. 'LL' → logprob: -3.096282482147217
    3. 'F' → logprob: -4.096282482147217
    4. ' ' → logprob: -4.971282482147217
    5. '(' → logprob: -5.471282482147217
    6. '[' → logprob: -5.596282482147217
    7. '1' → logprob: -5.846282482147217
    8. 'L' → logprob: -6.096282482147217
    9. 'dd' → logprob: -6.721282482147217
    10. '[]' → logprob: -7.346282482147217

Token 536: ' #' (ID: 1069)
  Prédit: '[I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[I' → logprob: -1.0078022480010986
    2. '[' → logprob: -1.6328022480010986
    3. '
' → logprob: -2.3828022480010986
    4. 'def' → logprob: -2.5078022480010986
    5. '<|end|>' → logprob: -2.6328022480010986
    6. '   ' → logprob: -2.6328022480010986
    7. 'for' → logprob: -3.8828022480010986
    8. '.keys' → logprob: -4.2578020095825195
    9. ' =' → logprob: -4.3828020095825195
    10. '<|end|>' → logprob: -4.3828020095825195

Token 537: ' unused' (ID: 38192)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025238199159502983
    2. ' for' → logprob: -4.275238037109375
    3. '   ' → logprob: -5.650238037109375
    4. 'while' → logprob: -5.900238037109375
    5. 'items' → logprob: -5.900238037109375
    6. 'keys' → logprob: -8.025238037109375
    7. '_items' → logprob: -8.400238037109375
    8. '.items' → logprob: -8.400238037109375
    9. 'def' → logprob: -8.775238037109375
    10. '<|end|>' → logprob: -8.775238037109375

Token 538: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14076551795005798
    2. 'for' → logprob: -2.890765428543091
    3. '<|end|>' → logprob: -3.265765428543091
    4. '
' → logprob: -4.01576566696167
    5. ' for' → logprob: -4.01576566696167
    6. 'def' → logprob: -7.64076566696167
    7. '<|end|>' → logprob: -8.390765190124512
    8. ',' → logprob: -8.515765190124512
    9. '	for' → logprob: -9.015765190124512
    10. '  ' → logprob: -9.265765190124512

Token 539: ' seem' (ID: 4265)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -1.1484369039535522
    2. '_' → logprob: -1.8984369039535522
    3. 'def' → logprob: -2.523437023162842
    4. 'continue' → logprob: -2.523437023162842
    5. 'return' → logprob: -2.773437023162842
    6. 'for' → logprob: -3.023437023162842
    7. 'E' → logprob: -3.523437023162842
    8. '#' → logprob: -3.773437023162842
    9. '[]' → logprob: -3.898437023162842
    10. '[' → logprob: -4.148437023162842

Token 540: ' id' (ID: 1211)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9774293899536133
    2. 'like' → logprob: -1.3524293899536133
    3. 'E' → logprob: -2.9774293899536133
    4. 'not' → logprob: -3.3524293899536133
    5. 'm' → logprob: -3.7274293899536133
    6. 'unused' → logprob: -3.9774293899536133
    7. '=' → logprob: -4.102429389953613
    8. 'g' → logprob: -4.227429389953613
    9. 'f' → logprob: -4.602429389953613
    10. 's' → logprob: -4.727429389953613

Token 541: 'io' (ID: 726)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5706802010536194
    2. 'a' → logprob: -1.4456801414489746
    3. 'dx' → logprob: -3.4456801414489746
    4. 'n' → logprob: -3.6956801414489746
    5. 'd' → logprob: -3.6956801414489746
    6. '=' → logprob: -3.8206801414489746
    7. 'nt' → logprob: -4.445680141448975
    8. 'z' → logprob: -4.445680141448975
    9. 'ex' → logprob: -4.570680141448975
    10. 'A' → logprob: -4.570680141448975

Token 542: '(t' (ID: 2025)
  Prédit: 'tic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tic' → logprob: -0.4982292354106903
    2. 'syn' → logprob: -1.9982292652130127
    3. 'yn' → logprob: -2.2482292652130127
    4. 't' → logprob: -2.2482292652130127
    5. 'matic' → logprob: -3.4982292652130127
    6. 'm' → logprob: -5.623229026794434
    7. 'sy' → logprob: -5.623229026794434
    8. 'mic' → logprob: -6.373229026794434
    9. 'inc' → logprob: -6.998229026794434
    10. 'y' → logprob: -7.123229026794434

Token 543: ')s' (ID: 35286)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2841777503490448
    2. 'tic' → logprob: -2.159177780151367
    3. ')' → logprob: -3.034177780151367
    4. 'm' → logprob: -3.159177780151367
    5. 's' → logprob: -3.909177780151367
    6. 'syn' → logprob: -5.284177780151367
    7. 'ts' → logprob: -5.534177780151367
    8. 'n' → logprob: -5.659177780151367
    9. 'ss' → logprob: -6.534177780151367
    10. 'ic' → logprob: -7.034177780151367

Token 544: 'yn' (ID: 1276)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015883849933743477
    2. 'for' → logprob: -4.640883922576904
    3. ' for' → logprob: -6.015883922576904
    4. '<|end|>' → logprob: -6.015883922576904
    5. '
' → logprob: -7.640883922576904
    6. 'def' → logprob: -7.890883922576904
    7. 'while' → logprob: -9.890883445739746
    8. '...' → logprob: -10.140883445739746
    9. '    
' → logprob: -10.265883445739746
    10. ',' → logprob: -10.265883445739746

Token 545: 'cr' (ID: 798)
  Prédit: 'yn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yn' → logprob: -0.5095824003219604
    2. 'syn' → logprob: -1.1345824003219604
    3. 'm' → logprob: -3.38458251953125
    4. 'n' → logprob: -4.38458251953125
    5. 'sy' → logprob: -5.25958251953125
    6. 'matic' → logprob: -5.38458251953125
    7. 'y' → logprob: -5.38458251953125
    8. 'ync' → logprob: -5.88458251953125
    9. 's' → logprob: -6.00958251953125
    10. 'mic' → logprob: -6.13458251953125

Token 546: 'atic' (ID: 2351)
  Prédit: 'yn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yn' → logprob: -0.013268816284835339
    2. 'n' → logprob: -5.263268947601318
    3. 'ync' → logprob: -5.513268947601318
    4. 'in' → logprob: -6.763268947601318
    5. 'cr' → logprob: -6.888268947601318
    6. 'y' → logprob: -7.263268947601318
    7. 'syn' → logprob: -8.01326847076416
    8. 'inc' → logprob: -9.13826847076416
    9. 'ynch' → logprob: -9.26326847076416
    10. '#' → logprob: -9.38826847076416

Token 547: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04172057285904884
    2. 'for' → logprob: -3.4167206287384033
    3. ' for' → logprob: -5.666720390319824
    4. '<|end|>' → logprob: -6.291720390319824
    5. '
' → logprob: -6.791720390319824
    6. 'def' → logprob: -7.666720390319824
    7. '	for' → logprob: -8.291720390319824
    8. ')' → logprob: -8.541720390319824
    9. 'while' → logprob: -8.541720390319824
    10. ',' → logprob: -9.541720390319824

Token 548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02783150225877762
    2. 'for' → logprob: -3.652831554412842
    3. ' for' → logprob: -6.652831554412842
    4. '
' → logprob: -9.152831077575684
    5. '<|end|>' → logprob: -9.902831077575684
    6. '	for' → logprob: -10.777831077575684
    7. '    
' → logprob: -11.277831077575684
    8. 'I' → logprob: -11.527831077575684
    9. 'def' → logprob: -11.652831077575684
    10. 'while' → logprob: -11.777831077575684

Token 549: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6518670320510864
    2. '   ' → logprob: -0.7768670320510864
    3. ' for' → logprob: -4.026866912841797
    4. 'while' → logprob: -7.401866912841797
    5. '	for' → logprob: -8.401866912841797
    6. '
' → logprob: -9.401866912841797
    7. 'i' → logprob: -9.776866912841797
    8. 'def' → logprob: -10.026866912841797
    9. 'I' → logprob: -10.151866912841797
    10. '  ' → logprob: -10.901866912841797

Token 550: ' w' (ID: 286)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5239440202713013
    2. ' I' → logprob: -1.6489440202713013
    3. 'I' → logprob: -3.0239439010620117
    4. 'i' → logprob: -3.6489439010620117
    5. ' _' → logprob: -3.8989439010620117
    6. '_i' → logprob: -4.273943901062012
    7. ' K' → logprob: -4.398943901062012
    8. ' k' → logprob: -4.648943901062012
    9. '_' → logprob: -4.711443901062012
    10. ' x' → logprob: -4.898943901062012

Token 551: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011132238432765007
    2. ',' → logprob: -5.13613224029541
    3. 'in' → logprob: -6.13613224029541
    4. 'i' → logprob: -7.13613224029541
    5. 'I' → logprob: -7.51113224029541
    6. ' i' → logprob: -7.88613224029541
    7. '_' → logprob: -8.38613224029541
    8. ' ' → logprob: -8.88613224029541
    9. 'n' → logprob: -9.38613224029541
    10. 't' → logprob: -9.51113224029541

Token 552: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0710182934999466
    2. ' range' → logprob: -2.6960182189941406
    3. 're' → logprob: -7.571018218994141
    4. 'sorted' → logprob: -7.946018218994141
    5. ' reversed' → logprob: -9.44601821899414
    6. 'E' → logprob: -10.32101821899414
    7. 'G' → logprob: -10.32101821899414
    8. '(range' → logprob: -10.94601821899414
    9. 'reverse' → logprob: -11.32101821899414
    10. ' sorted' → logprob: -11.69601821899414

Token 553: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003693013568408787
    2. '(L' → logprob: -8.75036907196045
    3. '1' → logprob: -9.00036907196045
    4. '(ll' → logprob: -10.62536907196045
    5. '(len' → logprob: -10.87536907196045
    6. '((' → logprob: -12.00036907196045
    7. 'LL' → logprob: -12.00036907196045
    8. '(I' → logprob: -12.37536907196045
    9. '(B' → logprob: -12.37536907196045
    10. ' (' → logprob: -12.75036907196045

Token 554: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2855082154273987
    2. 'LL' → logprob: -1.410508155822754
    3. '2' → logprob: -6.035508155822754
    4. '0' → logprob: -6.910508155822754
    5. '(' → logprob: -7.910508155822754
    6. '   ' → logprob: -8.785508155822754
    7. ' ' → logprob: -8.910508155822754
    8. '3' → logprob: -9.785508155822754
    9. 'L' → logprob: -10.160508155822754
    10. 'll' → logprob: -10.160508155822754

Token 555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003473825636319816
    2. ' ,' → logprob: -9.000347137451172
    3. 'LL' → logprob: -9.125347137451172
    4. '(' → logprob: -9.250347137451172
    5. '   ' → logprob: -11.500347137451172
    6. ',
' → logprob: -13.250347137451172
    7. ',(' → logprob: -13.500347137451172
    8. ',ll' → logprob: -13.500347137451172
    9. '(),' → logprob: -13.750347137451172
    10. '(L' → logprob: -14.250347137451172

Token 556: ' L' (ID: 451)
  Prédit: 'LL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LL' → logprob: -0.0008727516396902502
    2. ' L' → logprob: -7.500872611999512
    3. '   ' → logprob: -8.500872611999512
    4. '(' → logprob: -9.750872611999512
    5. 'LLLL' → logprob: -10.625872611999512
    6. 'L' → logprob: -10.750872611999512
    7. '  ' → logprob: -12.875872611999512
    8. ' ' → logprob: -13.000872611999512
    9. '    ' → logprob: -13.125872611999512
    10. ' LL' → logprob: -13.625872611999512

Token 557: 'LL' (ID: 7454)
  Prédit: 'LL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LL' → logprob: -0.00794018991291523
    2. 'L' → logprob: -4.882940292358398
    3. '+' → logprob: -8.507940292358398
    4. '(' → logprob: -10.132940292358398
    5. '[' → logprob: -10.882940292358398
    6. '(L' → logprob: -11.257940292358398
    7. ' +' → logprob: -11.945440292358398
    8. 'LLLL' → logprob: -12.070440292358398
    9. '...' → logprob: -12.507940292358398
    10. '[L' → logprob: -12.945440292358398

Token 558: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009763410314917564
    2. ' +' → logprob: -4.634763240814209
    3. '   ' → logprob: -12.884763717651367
    4. '):
' → logprob: -13.259763717651367
    5. '+
' → logprob: -13.759763717651367
    6. ',' → logprob: -14.634763717651367
    7. '()+' → logprob: -15.259763717651367
    8. '[' → logprob: -15.759763717651367
    9. ')+' → logprob: -15.759763717651367
    10. '
' → logprob: -16.134763717651367

Token 559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014245539903640747
    2. '2' → logprob: -4.264245510101318
    3. '+' → logprob: -9.764245986938477
    4. ' ' → logprob: -11.014245986938477
    5. '   ' → logprob: -12.139245986938477
    6. 'LL' → logprob: -14.139245986938477
    7. '12' → logprob: -15.014245986938477
    8. '
' → logprob: -15.139245986938477
    9. ' +' → logprob: -15.264245986938477
    10. '3' → logprob: -15.514245986938477

Token 560: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007919613271951675
    2. '):' → logprob: -4.882919788360596
    3. '):
' → logprob: -8.632919311523438
    4. '   ' → logprob: -9.757919311523438
    5. ' ):
' → logprob: -10.132919311523438
    6. ':' → logprob: -11.257919311523438
    7. '+' → logprob: -11.257919311523438
    8. ',' → logprob: -12.257919311523438
    9. ':
' → logprob: -12.757919311523438
    10. ')' → logprob: -13.382919311523438

Token 561: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002402647165581584
    2. ' Acc' → logprob: -6.8774027824401855
    3. '_acc' → logprob: -7.5024027824401855
    4. ' _' → logprob: -8.252402305603027
    5. 'Acc' → logprob: -8.377402305603027
    6. '   ' → logprob: -8.377402305603027
    7. '_' → logprob: -10.627402305603027
    8. ',' → logprob: -11.002402305603027
    9. '_ACC' → logprob: -11.752402305603027
    10. ' acc' → logprob: -12.002402305603027

Token 562: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11803443729877472
    2. '_acc' → logprob: -3.1180343627929688
    3. '       ' → logprob: -3.2430343627929688
    4. '_v' → logprob: -4.618034362792969
    5. ' _' → logprob: -4.868034362792969
    6. '_step' → logprob: -5.368034362792969
    7. '_val' → logprob: -5.618034362792969
    8. ' Acc' → logprob: -7.118034362792969
    9. '_s' → logprob: -7.868034362792969
    10. 'Acc' → logprob: -7.993034362792969

Token 563: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005870959721505642
    2. 'G' → logprob: -6.380870819091797
    3. ' w' → logprob: -6.380870819091797
    4. 'E' → logprob: -7.130870819091797
    5. '(w' → logprob: -8.380870819091797
    6. 'LL' → logprob: -8.880870819091797
    7. '_' → logprob: -9.005870819091797
    8. 'not' → logprob: -9.130870819091797
    9. 'I' → logprob: -9.130870819091797
    10. 'Rak' → logprob: -9.318370819091797

Token 564: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4343246519565582
    2. ' not' → logprob: -1.1843246221542358
    3. 'in' → logprob: -3.4343247413635254
    4. 'not' → logprob: -4.309324741363525
    5. ' ' → logprob: -8.434324264526367
    6. '%' → logprob: -9.621824264526367
    7. '<|end|>' → logprob: -9.871824264526367
    8. '   ' → logprob: -10.371824264526367
    9. '>' → logprob: -10.496824264526367
    10. 'w' → logprob: -10.621824264526367

Token 565: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.3649546205997467
    2. 'E' → logprob: -1.2399545907974243
    3. ' G' → logprob: -4.739954471588135
    4. ' E' → logprob: -4.989954471588135
    5. 'Acc' → logprob: -7.239954471588135
    6. ' Acc' → logprob: -10.614954948425293
    7. 'B' → logprob: -11.427454948425293
    8. 'BBB' → logprob: -11.427454948425293
    9. 'acc' → logprob: -12.052454948425293
    10. 'R' → logprob: -12.052454948425293

Token 566: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -2.5776860184123507e-06
    2. '_DICT' → logprob: -13.87500286102295
    3. 'DIST' → logprob: -14.62500286102295
    4. 'dict' → logprob: -14.75000286102295
    5. 'G' → logprob: -15.37500286102295
    6. 'DI' → logprob: -15.62500286102295
    7. 'E' → logprob: -16.375001907348633
    8. 'D' → logprob: -16.875001907348633
    9. 'RICT' → logprob: -16.875001907348633
    10. 'Dict' → logprob: -16.875001907348633

Token 567: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18407762050628662
    2. ':' → logprob: -1.8090776205062866
    3. ' and' → logprob: -5.559077739715576
    4. '):
' → logprob: -8.059077262878418
    5. 'and' → logprob: -9.684077262878418
    6. '       ' → logprob: -10.684077262878418
    7. ' :
' → logprob: -11.309077262878418
    8. ':
' → logprob: -11.559077262878418
    9. '):' → logprob: -11.684077262878418
    10. ',' → logprob: -11.809077262878418

Token 568: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16768746078014374
    2. '       ' → logprob: -1.9176874160766602
    3. ',' → logprob: -5.91768741607666
    4. ':' → logprob: -6.29268741607666
    5. '	       ' → logprob: -7.04268741607666
    6. ' _' → logprob: -7.16768741607666
    7. '<|end|>' → logprob: -8.41768741607666
    8. ':
' → logprob: -9.04268741607666
    9. ' and' → logprob: -9.16768741607666
    10. '	   ' → logprob: -9.29268741607666

Token 569: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.700788676738739
    2. '   ' → logprob: -1.4507887363433838
    3. '_v' → logprob: -2.200788736343384
    4. '       ' → logprob: -2.200788736343384
    5. '_step' → logprob: -3.325788736343384
    6. '_acc' → logprob: -4.950788497924805
    7. '           ' → logprob: -6.325788497924805
    8. '_val' → logprob: -6.575788497924805
    9. ' ' → logprob: -7.575788497924805
    10. '_s' → logprob: -8.200788497924805

Token 570: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.030343100428581238
    2. 'v' → logprob: -3.5303430557250977
    3. '_v' → logprob: -7.655343055725098
    4. '_step' → logprob: -9.530343055725098
    5. 'val' → logprob: -10.155343055725098
    6. '_val' → logprob: -13.780343055725098
    7. 'value' → logprob: -13.905343055725098
    8. ' step' → logprob: -13.905343055725098
    9. '_' → logprob: -14.280343055725098
    10. '=' → logprob: -15.030343055725098

Token 571: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.395053893327713
    2. '=' → logprob: -1.5200538635253906
    3. ' *=' → logprob: -2.5200538635253906
    4. ' =' → logprob: -4.395053863525391
    5. '+=' → logprob: -4.395053863525391
    6. '*' → logprob: -6.395053863525391
    7. ' +=' → logprob: -7.520053863525391
    8. '   ' → logprob: -8.77005386352539
    9. ',' → logprob: -10.02005386352539
    10. ' ' → logprob: -10.64505386352539

Token 572: ' BBB' (ID: 110035)
  Prédit: 'BBB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'BBB' → logprob: -0.05511515960097313
    2. 'F' → logprob: -3.930115222930908
    3. 'B' → logprob: -4.055115222930908
    4. '(' → logprob: -4.805115222930908
    5. 'G' → logprob: -5.805115222930908
    6. '(B' → logprob: -6.305115222930908
    7. 'BB' → logprob: -7.305115222930908
    8. '-' → logprob: -7.430115222930908
    9. '(-' → logprob: -7.555115222930908
    10. 'MMM' → logprob: -8.30511474609375

Token 573: ' **' (ID: 6240)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45453134179115295
    2. '^' → logprob: -1.0795313119888306
    3. '       ' → logprob: -4.329531192779541
    4. ' ^' → logprob: -5.579531192779541
    5. '
' → logprob: -5.954531192779541
    6. '+' → logprob: -6.079531192779541
    7. '*' → logprob: -6.329531192779541
    8. '-' → logprob: -7.579531192779541
    9. '^(' → logprob: -8.3295316696167
    10. '**' → logprob: -8.3295316696167

Token 574: ' (' (ID: 350)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.004349417518824339
    2. '-' → logprob: -7.004349231719971
    3. '(G' → logprob: -7.004349231719971
    4. '(-' → logprob: -7.129349231719971
    5. '-G' → logprob: -7.629349231719971
    6. 'w' → logprob: -7.754349231719971
    7. '(' → logprob: -8.004349708557129
    8. 'L' → logprob: -9.879349708557129
    9. 'LL' → logprob: -9.879349708557129
    10. 'int' → logprob: -9.879349708557129

Token 575: 'w' (ID: 86)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.02167315036058426
    2. 'LL' → logprob: -4.521673202514648
    3. 'w' → logprob: -5.396673202514648
    4. 'L' → logprob: -6.646673202514648
    5. '-' → logprob: -6.646673202514648
    6. '-G' → logprob: -6.771673202514648
    7. '(' → logprob: -8.146673202514648
    8. '-w' → logprob: -8.271673202514648
    9. '(G' → logprob: -8.271673202514648
    10. 'int' → logprob: -8.521673202514648

Token 576: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.46494683623313904
    2. ' -' → logprob: -1.8399468660354614
    3. ')' → logprob: -2.214946746826172
    4. '*' → logprob: -2.714946746826172
    5. '-G' → logprob: -3.589946746826172
    6. ' *' → logprob: -5.464946746826172
    7. '   ' → logprob: -6.714946746826172
    8. 'G' → logprob: -6.839946746826172
    9. '+' → logprob: -7.089946746826172
    10. ')*' → logprob: -7.464946746826172

Token 577: ' _' (ID: 1175)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.38837510347366333
    2. 'w' → logprob: -1.7633750438690186
    3. '(L' → logprob: -3.0133750438690186
    4. '_' → logprob: -3.3883750438690186
    5. '(_' → logprob: -3.8883750438690186
    6. '(' → logprob: -4.138375282287598
    7. '1' → logprob: -4.388375282287598
    8. '_w' → logprob: -5.513375282287598
    9. '(G' → logprob: -5.763375282287598
    10. ' (' → logprob: -6.013375282287598

Token 578: 'v' (ID: 85)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007678175461478531
    2. 'w' → logprob: -7.750767707824707
    3. '_' → logprob: -9.125767707824707
    4. '(w' → logprob: -9.625767707824707
    5. '(' → logprob: -9.750767707824707
    6. ' ' → logprob: -10.000767707824707
    7. '-' → logprob: -11.375767707824707
    8. '_(' → logprob: -11.875767707824707
    9. ' (' → logprob: -11.875767707824707
    10. '_prev' → logprob: -12.250767707824707

Token 579: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2854745388031006
    2. ')
' → logprob: -2.0354745388031006
    3. ')' → logprob: -2.1604745388031006
    4. '
' → logprob: -6.91047477722168
    5. '<|end|>' → logprob: -8.03547477722168
    6. ');' → logprob: -8.41047477722168
    7. '       ' → logprob: -9.03547477722168
    8. '),' → logprob: -9.28547477722168
    9. '):
' → logprob: -9.78547477722168
    10. ',' → logprob: -9.91047477722168

Token 580: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08916553854942322
    2. '_v' → logprob: -2.464165449142456
    3. '       ' → logprob: -9.214165687561035
    4. '   ' → logprob: -9.589165687561035
    5. ' _' → logprob: -10.714165687561035
    6. 'v' → logprob: -11.214165687561035
    7. ',' → logprob: -12.464165687561035
    8. '_b' → logprob: -12.964165687561035
    9. '_s' → logprob: -13.339165687561035
    10. '_x' → logprob: -13.464165687561035

Token 581: ' Acc' (ID: 6278)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.11681590974330902
    2. '_step' → logprob: -2.3668158054351807
    3. '_acc' → logprob: -4.36681604385376
    4. '_w' → logprob: -6.36681604385376
    5. '_' → logprob: -8.116815567016602
    6. '_r' → logprob: -8.241815567016602
    7. 'v' → logprob: -8.241815567016602
    8. '           ' → logprob: -8.616815567016602
    9. 'w' → logprob: -8.991815567016602
    10. '_z' → logprob: -9.116815567016602

Token 582: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -4.36574100604048e-06
    2. '_sum' → logprob: -13.125004768371582
    3. 'um' → logprob: -13.875004768371582
    4. 'Step' → logprob: -14.375004768371582
    5. 'sum' → logprob: -15.125004768371582
    6. '[' → logprob: -15.250004768371582
    7. '_S' → logprob: -17.000003814697266
    8. 'Summ' → logprob: -17.000003814697266
    9. '_SUM' → logprob: -17.500003814697266
    10. 'S' → logprob: -17.500003814697266

Token 583: '[G' (ID: 187982)
  Prédit: '[w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.0008371464791707695
    2. '[F' → logprob: -7.750837326049805
    3. '[' → logprob: -8.125837326049805
    4. '[G' → logprob: -10.375837326049805
    5. '[_' → logprob: -10.500837326049805
    6. '+=' → logprob: -10.875837326049805
    7. 'w' → logprob: -11.875837326049805
    8. ' +=' → logprob: -11.875837326049805
    9. '[...]' → logprob: -12.375837326049805
    10. '=' → logprob: -12.375837326049805

Token 584: 'DICT' (ID: 175657)
  Prédit: 'DICT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DICT' → logprob: -0.007156249135732651
    2. 'w' → logprob: -5.3821563720703125
    3. '_DICT' → logprob: -7.0071563720703125
    4. 'ICT' → logprob: -7.5071563720703125
    5. '_dict' → logprob: -7.6321563720703125
    6. 'RICT' → logprob: -9.257156372070312
    7. 'G' → logprob: -9.757156372070312
    8. 'dict' → logprob: -9.882156372070312
    9. 'IST' → logprob: -10.132156372070312
    10. ' w' → logprob: -10.132156372070312

Token 585: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.03504933416843414
    2. '[I' → logprob: -3.4100494384765625
    3. ']' → logprob: -7.2850494384765625
    4. 'I' → logprob: -8.410049438476562
    5. '[' → logprob: -8.535049438476562
    6. 'w' → logprob: -8.910049438476562
    7. '(w' → logprob: -10.660049438476562
    8. '_w' → logprob: -10.910049438476562
    9. '][' → logprob: -11.285049438476562
    10. '[E' → logprob: -11.285049438476562

Token 586: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03157423436641693
    2. ']]' → logprob: -3.531574249267578
    3. ']+' → logprob: -6.531574249267578
    4. '+' → logprob: -8.906574249267578
    5. ')]' → logprob: -9.531574249267578
    6. ']+=' → logprob: -10.031574249267578
    7. 'w' → logprob: -10.656574249267578
    8. '])' → logprob: -11.156574249267578
    9. ' ]' → logprob: -11.656574249267578
    10. ']]=' → logprob: -11.781574249267578

Token 587: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004269646480679512
    2. ' +=' → logprob: -5.879269599914551
    3. '-=' → logprob: -7.379269599914551
    4. '=' → logprob: -7.629269599914551
    5. '+' → logprob: -8.12926959991455
    6. '   ' → logprob: -11.25426959991455
    7. '-' → logprob: -11.37926959991455
    8. ' -=' → logprob: -11.75426959991455
    9. '+=(' → logprob: -11.87926959991455
    10. '*=' → logprob: -12.12926959991455

Token 588: ' _' (ID: 1175)
  Prédit: '_step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.00042626605136319995
    2. ' _' → logprob: -8.500426292419434
    3. '_' → logprob: -9.375426292419434
    4. '_f' → logprob: -10.750426292419434
    5. '   ' → logprob: -10.875426292419434
    6. 'step' → logprob: -11.125426292419434
    7. '_S' → logprob: -11.125426292419434
    8. 'F' → logprob: -11.500426292419434
    9. '_w' → logprob: -12.000426292419434
    10. ' ' → logprob: -12.250426292419434

Token 589: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.08895408362150192
    2. '_step' → logprob: -2.463953971862793
    3. '(step' → logprob: -12.963953971862793
    4. 'STEP' → logprob: -13.088953971862793
    5. 'v' → logprob: -13.213953971862793
    6. ' step' → logprob: -14.088953971862793
    7. '_v' → logprob: -14.088953971862793
    8. 'Step' → logprob: -14.088953971862793
    9. '-step' → logprob: -14.338953971862793
    10. '   ' → logprob: -14.338953971862793

Token 590: '
' (ID: 198)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.5329526662826538
    2. '       ' → logprob: -1.4079526662826538
    3. '           ' → logprob: -2.1579527854919434
    4. '   ' → logprob: -3.0329527854919434
    5. ' _' → logprob: -6.282952785491943
    6. '
' → logprob: -6.907952785491943
    7. ' ' → logprob: -7.657952785491943
    8. ',' → logprob: -8.907952308654785
    9. '_w' → logprob: -8.907952308654785
    10. '  ' → logprob: -8.907952308654785

Token 591: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03644503280520439
    2. '_v' → logprob: -3.661445140838623
    3. '       ' → logprob: -4.661445140838623
    4. '   ' → logprob: -7.411445140838623
    5. '               ' → logprob: -11.786444664001465
    6. '_w' → logprob: -11.911444664001465
    7. 'v' → logprob: -12.536444664001465
    8. '_u' → logprob: -12.911444664001465
    9. ' _' → logprob: -13.286444664001465
    10. '          ' → logprob: -13.536444664001465

Token 592: ' Acc' (ID: 6278)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.00047654795343987644
    2. '           ' → logprob: -7.750476360321045
    3. ' _' → logprob: -10.500476837158203
    4. '       ' → logprob: -11.750476837158203
    5. '   ' → logprob: -12.125476837158203
    6. '_w' → logprob: -12.375476837158203
    7. '_r' → logprob: -16.625476837158203
    8. '
' → logprob: -16.625476837158203
    9. '_u' → logprob: -16.625476837158203
    10. ' ' → logprob: -16.750476837158203

Token 593: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.010242115706205368
    2. '_v' → logprob: -4.635241985321045
    3. 'Step' → logprob: -8.385242462158203
    4. 'um' → logprob: -9.260242462158203
    5. 'v' → logprob: -9.385242462158203
    6. '_w' → logprob: -11.010242462158203
    7. '_sum' → logprob: -11.010242462158203
    8. '_s' → logprob: -12.010242462158203
    9. 'Val' → logprob: -12.260242462158203
    10. '   ' → logprob: -12.260242462158203

Token 594: '[' (ID: 58)
  Prédit: '[G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[G' → logprob: -0.13807478547096252
    2. '[' → logprob: -2.7630748748779297
    3. '=' → logprob: -3.3880748748779297
    4. ' =' → logprob: -4.63807487487793
    5. 'w' → logprob: -5.26307487487793
    6. '._' → logprob: -5.88807487487793
    7. '[F' → logprob: -5.88807487487793
    8. '[_' → logprob: -6.01307487487793
    9. '[w' → logprob: -7.13807487487793
    10. '[-' → logprob: -7.13807487487793

Token 595: '0' (ID: 15)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.23452366888523102
    2. '0' → logprob: -2.4845237731933594
    3. 'LL' → logprob: -2.4845237731933594
    4. 'w' → logprob: -3.6095237731933594
    5. 'F' → logprob: -5.859523773193359
    6. '_G' → logprob: -5.859523773193359
    7. '(' → logprob: -6.484523773193359
    8. '_w' → logprob: -7.234523773193359
    9. 'BBB' → logprob: -7.359523773193359
    10. '_' → logprob: -7.484523773193359

Token 596: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0770049095153809
    2. '-' → logprob: -1.2020049095153809
    3. ' -=' → logprob: -1.7020049095153809
    4. ' -' → logprob: -3.077004909515381
    5. ')' → logprob: -3.202004909515381
    6. '-=' → logprob: -3.452004909515381
    7. ']+=' → logprob: -3.827004909515381
    8. '+=' → logprob: -4.702004909515381
    9. '=' → logprob: -4.952004909515381
    10. ' +=' → logprob: -5.327004909515381

Token 597: ' -=' (ID: 12583)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8656148910522461
    2. '-=' → logprob: -0.8656148910522461
    3. '-' → logprob: -2.490614891052246
    4. ' -=' → logprob: -3.365614891052246
    5. '=' → logprob: -3.490614891052246
    6. ' +=' → logprob: -5.115614891052246
    7. '*=' → logprob: -5.615614891052246
    8. '+' → logprob: -8.490614891052246
    9. ')' → logprob: -9.490614891052246
    10. ',' → logprob: -9.865614891052246

Token 598: ' _' (ID: 1175)
  Prédit: '_step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.0010677010286599398
    2. '_acc' → logprob: -7.501067638397217
    3. ' _' → logprob: -8.751068115234375
    4. 'step' → logprob: -9.751068115234375
    5. '_' → logprob: -10.501068115234375
    6. 'w' → logprob: -10.501068115234375
    7. 'BBB' → logprob: -10.751068115234375
    8. 'B' → logprob: -10.876068115234375
    9. 'F' → logprob: -11.001068115234375
    10. '_w' → logprob: -11.126068115234375

Token 599: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.007635851390659809
    2. '_step' → logprob: -4.882636070251465
    3. '_v' → logprob: -11.257636070251465
    4. 'v' → logprob: -11.882636070251465
    5. '_acc' → logprob: -12.382636070251465
    6. '_' → logprob: -13.882636070251465
    7. 'Step' → logprob: -13.882636070251465
    8. '(step' → logprob: -14.257636070251465
    9. 'Acc' → logprob: -14.757636070251465
    10. 'F' → logprob: -15.257636070251465

Token 600: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006856743711978197
    2. '_v' → logprob: -5.131856918334961
    3. '       ' → logprob: -7.131856918334961
    4. '   ' → logprob: -9.256856918334961
    5. '               ' → logprob: -11.131856918334961
    6. ' _' → logprob: -12.381856918334961
    7. '          ' → logprob: -12.881856918334961
    8. '_w' → logprob: -13.131856918334961
    9. '         ' → logprob: -13.256856918334961
    10. '                   ' → logprob: -13.506856918334961

Token 601: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24978084862232208
    2. '_v' → logprob: -1.6247808933258057
    3. '       ' → logprob: -3.8747808933258057
    4. '   ' → logprob: -5.749780654907227
    5. '               ' → logprob: -9.999780654907227
    6. ' _' → logprob: -9.999780654907227
    7. '                   ' → logprob: -12.124780654907227
    8. ' ' → logprob: -12.249780654907227
    9. '_w' → logprob: -12.249780654907227
    10. '_u' → logprob: -12.499780654907227

Token 602: ' _' (ID: 1175)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.38902077078819275
    2. '           ' → logprob: -1.1390208005905151
    3. ' _' → logprob: -6.889020919799805
    4. '       ' → logprob: -7.139020919799805
    5. '   ' → logprob: -8.139020919799805
    6. '_w' → logprob: -11.264020919799805
    7. '               ' → logprob: -11.764020919799805
    8. '          ' → logprob: -12.639020919799805
    9. ' ' → logprob: -12.639020919799805
    10. '         ' → logprob: -12.764020919799805

Token 603: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006263881456106901
    2. '_v' → logprob: -5.256263732910156
    3. 'step' → logprob: -6.881263732910156
    4. '_step' → logprob: -13.256263732910156
    5. ' v' → logprob: -15.006263732910156
    6. '   ' → logprob: -16.006263732910156
    7. 'w' → logprob: -16.131263732910156
    8. '	v' → logprob: -16.381263732910156
    9. '_' → logprob: -16.881263732910156
    10. 'val' → logprob: -16.881263732910156

Token 604: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011049113236367702
    2. ' =' → logprob: -4.511049270629883
    3. ',' → logprob: -14.011049270629883
    4. '=w' → logprob: -14.636049270629883
    5. '.=' → logprob: -17.386049270629883
    6. '+=' → logprob: -18.636049270629883
    7. '   ' → logprob: -18.886049270629883
    8. ' ' → logprob: -18.886049270629883
    9. '<|end|>' → logprob: -19.511049270629883
    10. '=v' → logprob: -19.511049270629883

Token 605: ' _' (ID: 1175)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.976922744186595e-05
    2. ' w' → logprob: -10.500040054321289
    3. '_w' → logprob: -11.625040054321289
    4. '_' → logprob: -13.125040054321289
    5. 'v' → logprob: -14.500040054321289
    6. '   ' → logprob: -15.500040054321289
    7. 'Z' → logprob: -15.750040054321289
    8. 'G' → logprob: -16.12504005432129
    9. '    ' → logprob: -16.62504005432129
    10. '_v' → logprob: -16.75004005432129

Token 606: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0003032881941180676
    2. 'w' → logprob: -8.750303268432617
    3. 'v' → logprob: -8.875303268432617
    4. '_step' → logprob: -12.875303268432617
    5. '_v' → logprob: -13.875303268432617
    6. ' step' → logprob: -14.000303268432617
    7. '(step' → logprob: -15.500303268432617
    8. '_w' → logprob: -15.875303268432617
    9. '=' → logprob: -16.625303268432617
    10. '	step' → logprob: -17.000303268432617

Token 607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687729835510254
    2. ' =' → logprob: -1.1368772983551025
    3. '=w' → logprob: -12.636877059936523
    4. ',' → logprob: -13.011877059936523
    5. ' ' → logprob: -15.011877059936523
    6. '.=' → logprob: -16.636877059936523
    7. '   ' → logprob: -16.761877059936523
    8. '=v' → logprob: -16.761877059936523
    9. '＝' → logprob: -17.636877059936523
    10. '    ' → logprob: -17.636877059936523

Token 608: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -7.469590491382405e-05
    2. ' w' → logprob: -9.75007438659668
    3. '(w' → logprob: -11.12507438659668
    4. '   ' → logprob: -13.75007438659668
    5. '	w' → logprob: -16.25007438659668
    6. '(' → logprob: -16.25007438659668
    7. '_w' → logprob: -16.25007438659668
    8. '<w' → logprob: -16.37507438659668
    9. ' (' → logprob: -17.00007438659668
    10. '[w' → logprob: -17.75007438659668

Token 609: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 610: ' _' (ID: 1175)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.03752860426902771
    2. '1' → logprob: -4.2875285148620605
    3. 'Acc' → logprob: -4.6625285148620605
    4. 'BBB' → logprob: -5.9125285148620605
    5. '_f' → logprob: -6.6625285148620605
    6. '_acc' → logprob: -6.7875285148620605
    7. 'B' → logprob: -6.9125285148620605
    8. '_' → logprob: -7.1625285148620605
    9. '_F' → logprob: -7.4125285148620605
    10. 'Fun' → logprob: -7.4125285148620605

Token 611: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.09340260177850723
    2. 'F' → logprob: -2.593402624130249
    3. '_step' → logprob: -5.09340238571167
    4. 'G' → logprob: -6.21840238571167
    5. 'Acc' → logprob: -6.59340238571167
    6. 'v' → logprob: -6.96840238571167
    7. 'BBB' → logprob: -7.09340238571167
    8. '_v' → logprob: -7.34340238571167
    9. 'B' → logprob: -7.84340238571167
    10. 'Z' → logprob: -8.218402862548828

Token 612: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 613: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 614: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011109127663075924
    2. 'return' (adapté à ' return') → logprob: -4.511109352111816
    3. '	return' → logprob: -10.511109352111816
    4. ' return' → logprob: -10.886109352111816
    5. '       ' → logprob: -12.136109352111816
    6. 'def' → logprob: -12.886109352111816
    7. '#' → logprob: -13.761109352111816
    8. '  ' → logprob: -14.011109352111816
    9. 'from' → logprob: -14.136109352111816
    10. 'for' → logprob: -14.261109352111816

Token 615: ' Acc' (ID: 6278)
  Prédit: 'Acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Acc' → logprob: -0.05099288001656532
    2. 'list' → logprob: -4.675992965698242
    3. 'sum' → logprob: -4.675992965698242
    4. 'tuple' → logprob: -5.050992965698242
    5. ' Acc' → logprob: -5.175992965698242
    6. '(' → logprob: -5.175992965698242
    7. '[' → logprob: -5.425992965698242
    8. 'int' → logprob: -5.925992965698242
    9. 'max' → logprob: -6.800992965698242
    10. 'G' → logprob: -6.800992965698242

Token 616: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -1.688212614681106e-05
    2. 'um' → logprob: -11.000017166137695
    3. 'sum' → logprob: -16.375017166137695
    4. 'u' → logprob: -17.625017166137695
    5. 'S' → logprob: -18.125017166137695
    6. 'm' → logprob: -18.625017166137695
    7. '_sum' → logprob: -18.750017166137695
    8. 'Cum' → logprob: -19.125017166137695
    9. ' Sum' → logprob: -19.375017166137695
    10. '[' → logprob: -19.500017166137695

Token 617: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 618: 'def' (ID: 1314)
  Prédit: 'MM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MM' → logprob: -0.27133986353874207
    2. 'BBB' → logprob: -1.7713398933410645
    3. 'MMM' → logprob: -3.0213398933410645
    4. 'LL' → logprob: -4.5213398933410645
    5. '#' → logprob: -5.2713398933410645
    6. 'B' → logprob: -7.8963398933410645
    7. 'g' → logprob: -8.146339416503906
    8. 'AAA' → logprob: -8.146339416503906
    9. 'BB' → logprob: -8.271339416503906
    10. 'EEE' → logprob: -8.396339416503906

Token 619: ' e' (ID: 319)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.49830907583236694
    2. 'main' → logprob: -0.9983090758323669
    3. ' weird' → logprob: -4.373309135437012
    4. ' solve' → logprob: -5.748309135437012
    5. 'solve' → logprob: -5.748309135437012
    6. ' funky' → logprob: -6.998309135437012
    7. 'we' → logprob: -7.623309135437012
    8. ' strange' → logprob: -7.873309135437012
    9. ' run' → logprob: -8.498309135437012
    10. 'funk' → logprob: -8.498309135437012

Token 620: '_reader' (ID: 55777)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3487722873687744
    2. 'val' → logprob: -1.9737722873687744
    3. 'n' → logprob: -2.7237722873687744
    4. 'valuate' → logprob: -3.7237722873687744
    5. 'xp' → logprob: -4.348772048950195
    6. 'main' → logprob: -5.098772048950195
    7. 'def' → logprob: -5.348772048950195
    8. 'q' → logprob: -5.473772048950195
    9. 'xit' → logprob: -5.598772048950195
    10. 'num' → logprob: -5.723772048950195

Token 621: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0065954094752669334
    2. '(g' → logprob: -5.506595611572266
    3. '():
' → logprob: -6.131595611572266
    4. '(s' → logprob: -9.631595611572266
    5. '(line' → logprob: -9.631595611572266
    6. ' ():' → logprob: -10.131595611572266
    7. '(' → logprob: -10.256595611572266
    8. '()' → logprob: -10.381595611572266
    9. '(J' → logprob: -10.756595611572266
    10. '(f' → logprob: -11.131595611572266

Token 622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.368984107510187e-05
    2. 'return' → logprob: -11.625033378601074
    3. '	return' → logprob: -12.125033378601074
    4. ' return' → logprob: -12.250033378601074
    5. 'try' → logprob: -12.750033378601074
    6. '```' → logprob: -13.125033378601074
    7. '   ' → logprob: -13.500033378601074
    8. 'while' → logprob: -13.625033378601074
    9. '	try' → logprob: -13.875033378601074
    10. '       ' → logprob: -14.000033378601074

Token 623: ' xx' (ID: 44242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8921979069709778
    2. 'return' → logprob: -0.8921979069709778
    3. 'n' → logprob: -3.142197847366333
    4. 'try' → logprob: -3.267197847366333
    5. 'l' → logprob: -4.142198085784912
    6. 'L' → logprob: -4.267198085784912
    7. 'for' → logprob: -4.392198085784912
    8. 'while' → logprob: -4.767198085784912
    9. 'import' → logprob: -5.267198085784912
    10. 'g' → logprob: -5.392198085784912

Token 624: 'z' (ID: 89)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2920666038990021
    2. '=' → logprob: -1.4170665740966797
    3. ',' → logprob: -5.29206657409668
    4. 'x' → logprob: -6.79206657409668
    5. '   ' → logprob: -7.41706657409668
    6. '=g' → logprob: -7.79206657409668
    7. '=[]' → logprob: -7.91706657409668
    8. '=input' → logprob: -7.91706657409668
    9. 'f' → logprob: -8.04206657409668
    10. ' ' → logprob: -8.41706657409668

Token 625: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07245927304029465
    2. ' =' → logprob: -2.9474592208862305
    3. '=[]' → logprob: -4.9474592208862305
    4. '()' → logprob: -5.8224592208862305
    5. '():' → logprob: -6.3224592208862305
    6. '=g' → logprob: -6.4474592208862305
    7. '   ' → logprob: -7.1974592208862305
    8. '=int' → logprob: -7.3224592208862305
    9. ',' → logprob: -7.4474592208862305
    10. '=lambda' → logprob: -7.6974592208862305

Token 626: ' int' (ID: 677)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7558107376098633
    2. 'list' → logprob: -1.6308107376098633
    3. 'int' → logprob: -1.8808107376098633
    4. 'dd' → logprob: -3.1308107376098633
    5. '[' → logprob: -3.6308107376098633
    6. 'map' → logprob: -3.8808107376098633
    7. 'lambda' → logprob: -4.005810737609863
    8. '[g' → logprob: -4.005810737609863
    9. '[int' → logprob: -4.630810737609863
    10. '[]' → logprob: -5.005810737609863

Token 627: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.0013336940901353955
    2. 'g' → logprob: -6.751333713531494
    3. '(' → logprob: -9.251333236694336
    4. '(e' → logprob: -10.501333236694336
    5. '(s' → logprob: -11.876333236694336
    6. '(x' → logprob: -12.126333236694336
    7. '(f' → logprob: -12.126333236694336
    8. '()' → logprob: -12.376333236694336
    9. '(
' → logprob: -13.376333236694336
    10. '(input' → logprob: -13.376333236694336

Token 628: '_input' (ID: 12507)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03847334906458855
    2. 'g' → logprob: -4.038473129272461
    3. '()' → logprob: -4.663473129272461
    4. '(g' → logprob: -5.413473129272461
    5. ')' → logprob: -6.788473129272461
    6. 'x' → logprob: -7.038473129272461
    7. 'e' → logprob: -7.413473129272461
    8. '())
' → logprob: -7.538473129272461
    9. 'input' → logprob: -7.663473129272461
    10. '_input' → logprob: -7.913473129272461

Token 629: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00791405513882637
    2. '())
' → logprob: -4.882914066314697
    3. '()' → logprob: -8.757913589477539
    4. '().' → logprob: -9.007913589477539
    5. '())

' → logprob: -11.132913589477539
    6. ')' → logprob: -12.882913589477539
    7. '();)' → logprob: -13.007913589477539
    8. '())
' → logprob: -13.132913589477539
    9. '()
' → logprob: -13.382913589477539
    10. '(' → logprob: -13.507913589477539

Token 630: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8719590306282043
    2. 'return' → logprob: -1.7469589710235596
    3. 'for' → logprob: -1.9969589710235596
    4. '<|end|>' → logprob: -2.7469589710235596
    5. 'E' → logprob: -3.4969589710235596
    6. 'e' → logprob: -3.7469589710235596
    7. 'n' → logprob: -3.9969589710235596
    8. 'def' → logprob: -4.121959209442139
    9. 'global' → logprob: -4.246959209442139
    10. '#' → logprob: -4.621959209442139

Token 631: ' ret' (ID: 2881)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.8701820373535156
    2. 'e' → logprob: -1.8701820373535156
    3. 'return' → logprob: -2.2451820373535156
    4. '   ' → logprob: -2.6201820373535156
    5. 'for' → logprob: -3.3701820373535156
    6. 'EEE' → logprob: -3.6201820373535156
    7. 'res' → logprob: -3.8701820373535156
    8. 'arr' → logprob: -4.120182037353516
    9. 'A' → logprob: -4.620182037353516
    10. 'r' → logprob: -4.995182037353516

Token 632: ' =' (ID: 314)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urn' → logprob: -0.31083887815475464
    2. ' =' → logprob: -1.4358389377593994
    3. '=' → logprob: -3.6858389377593994
    4. 'u' → logprob: -5.93583869934082
    5. 'ur' → logprob: -7.43583869934082
    6. ' ' → logprob: -8.18583869934082
    7. 'urning' → logprob: -8.81083869934082
    8. '=[]' → logprob: -9.56083869934082
    9. '   ' → logprob: -9.93583869934082
    10. '	' → logprob: -10.06083869934082

Token 633: ' dd' (ID: 18636)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.2768472731113434
    2. '[]' → logprob: -2.0268473625183105
    3. 'dd' → logprob: -2.2768473625183105
    4. '[' → logprob: -5.7768473625183105
    5. ' dd' → logprob: -6.1518473625183105
    6. '{' → logprob: -7.4018473625183105
    7. '{}
' → logprob: -7.9018473625183105
    8. ' {}' → logprob: -8.026846885681152
    9. ' []' → logprob: -8.151846885681152
    10. '[]
' → logprob: -8.276846885681152

Token 634: 'ict' (ID: 1360)
  Prédit: 'ict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -0.005265545565634966
    2. 'dict' → logprob: -5.255265712738037
    3. 'ist' → logprob: -10.755265235900879
    4. 'int' → logprob: -13.005265235900879
    5. 'dd' → logprob: -13.130265235900879
    6. '[' → logprob: -14.005265235900879
    7. 'd' → logprob: -14.380265235900879
    8. 'ect' → logprob: -14.380265235900879
    9. '{' → logprob: -14.505265235900879
    10. '(dict' → logprob: -14.880265235900879

Token 635: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.3681347072124481
    2. '(int' → logprob: -1.3681347370147705
    3. '(set' → logprob: -3.2431347370147705
    4. '(lambda' → logprob: -4.993134498596191
    5. '(F' → logprob: -5.118134498596191
    6. 'list' → logprob: -7.368134498596191
    7. 'int' → logprob: -8.118134498596191
    8. 'set' → logprob: -8.618134498596191
    9. '(dict' → logprob: -8.743134498596191
    10. 'F' → logprob: -9.618134498596191

Token 636: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.078949935734272
    2. ')' → logprob: -2.5789499282836914
    3. '())
' → logprob: -10.203949928283691
    4. ')

' → logprob: -11.828949928283691
    5. '   ' → logprob: -12.078949928283691
    6. ')
' → logprob: -12.703949928283691
    7. 'def' → logprob: -12.828949928283691
    8. ')return' → logprob: -14.078949928283691
    9. '())' → logprob: -14.203949928283691
    10. '()' → logprob: -14.453949928283691

Token 637: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051957935094833374
    2. 'for' → logprob: -3.176957845687866
    3. ' for' → logprob: -4.801958084106445
    4. '<|end|>' → logprob: -7.676958084106445
    5. '	for' → logprob: -9.051958084106445
    6. '
' → logprob: -10.176958084106445
    7. ' ' → logprob: -10.676958084106445
    8. 'while' → logprob: -11.301958084106445
    9. '    
' → logprob: -11.551958084106445
    10. '  ' → logprob: -11.551958084106445

Token 638: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008383385138586164
    2. '   ' → logprob: -7.125838279724121
    3. ' for' → logprob: -10.375838279724121
    4. 'while' → logprob: -13.625838279724121
    5. '	for' → logprob: -14.250838279724121
    6. '
' → logprob: -14.500838279724121
    7. '    
' → logprob: -16.000839233398438
    8. 'f' → logprob: -16.625839233398438
    9. '```' → logprob: -17.125839233398438
    10. 'i' → logprob: -17.250839233398438

Token 639: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006510848179459572
    2. '_i' → logprob: -6.0065107345581055
    3. '__' → logprob: -6.6315107345581055
    4. ' _' → logprob: -6.8815107345581055
    5. '___' → logprob: -7.7565107345581055
    6. 'i' → logprob: -7.7565107345581055
    7. '_=' → logprob: -8.506510734558105
    8. '_x' → logprob: -9.006510734558105
    9. '_I' → logprob: -9.756510734558105
    10. '_z' → logprob: -9.881510734558105

Token 640: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22900953888893127
    2. 'in' → logprob: -1.6040095090866089
    3. '_' → logprob: -5.729009628295898
    4. '   ' → logprob: -9.354009628295898
    5. 'n' → logprob: -9.604009628295898
    6. ' ' → logprob: -9.979009628295898
    7. '(' → logprob: -10.729009628295898
    8. '_in' → logprob: -10.979009628295898
    9. '	in' → logprob: -11.104009628295898
    10. ' _' → logprob: -11.229009628295898

Token 641: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02345207892358303
    2. ' range' → logprob: -4.398452281951904
    3. '_' → logprob: -4.523452281951904
    4. 'r' → logprob: -11.148451805114746
    5. 'rang' → logprob: -12.523451805114746
    6. ' _' → logprob: -13.148451805114746
    7. 'rr' → logprob: -13.273451805114746
    8. '_range' → logprob: -13.398451805114746
    9. 'ra' → logprob: -13.523451805114746
    10. 'ran' → logprob: -13.773451805114746

Token 642: '(xx' (ID: 161745)
  Prédit: '(xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xx' → logprob: -0.0622151643037796
    2. 'xx' → logprob: -2.8122150897979736
    3. '(' → logprob: -8.562214851379395
    4. ' xx' → logprob: -10.312214851379395
    5. '(x' → logprob: -11.062214851379395
    6. '   ' → logprob: -12.437214851379395
    7. '1' → logprob: -13.187214851379395
    8. '
' → logprob: -14.437214851379395
    9. ' (' → logprob: -15.562214851379395
    10. '(int' → logprob: -16.18721580505371

Token 643: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.06142154335975647
    2. 'x' → logprob: -3.0614216327667236
    3. '(xx' → logprob: -5.8114213943481445
    4. 'xx' → logprob: -5.9364213943481445
    5. 'zz' → logprob: -6.0614213943481445
    6. '):' → logprob: -6.4364213943481445
    7. '   ' → logprob: -6.5614213943481445
    8. ')' → logprob: -7.3114213943481445
    9. '(' → logprob: -8.186421394348145
    10. '):
' → logprob: -8.811421394348145

Token 644: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09131843596696854
    2. '):' → logprob: -2.466318368911743
    3. '   ' → logprob: -6.591318607330322
    4. '):
' → logprob: -7.591318607330322
    5. '():
' → logprob: -8.466318130493164
    6. '()):
' → logprob: -8.591318130493164
    7. ',' → logprob: -9.841318130493164
    8. '():' → logprob: -11.591318130493164
    9. '       ' → logprob: -11.591318130493164
    10. '()' → logprob: -11.966318130493164

Token 645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009021693258546293
    2. ' x' → logprob: -7.87590217590332
    3. ' line' → logprob: -8.87590217590332
    4. '   ' → logprob: -9.00090217590332
    5. 'n' → logprob: -10.12590217590332
    6. ' A' → logprob: -10.12590217590332
    7. 'x' → logprob: -10.37590217590332
    8. ' l' → logprob: -10.87590217590332
    9. ' lines' → logprob: -10.87590217590332
    10. ' a' → logprob: -11.50090217590332

Token 646: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -1.0354830026626587
    2. 'A' → logprob: -1.1604830026626587
    3. 'x' → logprob: -2.160482883453369
    4. 'u' → logprob: -2.785482883453369
    5. '   ' → logprob: -2.910482883453369
    6. 'l' → logprob: -3.910482883453369
    7. 'X' → logprob: -4.160482883453369
    8. 'k' → logprob: -4.660482883453369
    9. 'U' → logprob: -4.660482883453369
    10. 'L' → logprob: -4.910482883453369

Token 647: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30367210507392883
    2. ',b' → logprob: -1.4286720752716064
    3. ' =' → logprob: -4.3036723136901855
    4. '=' → logprob: -5.0536723136901855
    5. 'b' → logprob: -6.6786723136901855
    6. ' ,' → logprob: -7.6786723136901855
    7. ',s' → logprob: -9.303671836853027
    8. '   ' → logprob: -9.428671836853027
    9. ',v' → logprob: -9.678671836853027
    10. 's' → logprob: -10.178671836853027

Token 648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23876576125621796
    2. ',b' → logprob: -1.6137657165527344
    3. '=' → logprob: -4.738765716552734
    4. ' =' → logprob: -6.363765716552734
    5. ',a' → logprob: -6.488765716552734
    6. 'b' → logprob: -7.738765716552734
    7. ',s' → logprob: -8.738765716552734
    8. ',v' → logprob: -8.863765716552734
    9. ',l' → logprob: -9.238765716552734
    10. ' ,' → logprob: -9.863765716552734

Token 649: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011655640788376331
    2. 'b' → logprob: -4.636655807495117
    3. ' a' → logprob: -6.636655807495117
    4. '*' → logprob: -8.261655807495117
    5. '*a' → logprob: -8.761655807495117
    6. ' b' → logprob: -10.011655807495117
    7. '_=' → logprob: -10.761655807495117
    8. '*b' → logprob: -11.011655807495117
    9. '_' → logprob: -11.011655807495117
    10. '_,' → logprob: -11.511655807495117

Token 650: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10332818329334259
    2. ' =' → logprob: -2.853328227996826
    3. '1' → logprob: -3.228328227996826
    4. ',' → logprob: -7.353328227996826
    5. '2' → logprob: -8.853327751159668
    6. 'z' → logprob: -11.353327751159668
    7. 'a' → logprob: -11.728327751159668
    8. ')' → logprob: -11.853327751159668
    9. '=input' → logprob: -11.853327751159668
    10. '=line' → logprob: -11.853327751159668

Token 651: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0336996428668499
    2. ' =' → logprob: -3.4086997509002686
    3. '=g' → logprob: -9.908699989318848
    4. ',' → logprob: -12.783699989318848
    5. '=s' → logprob: -15.283699989318848
    6. '=line' → logprob: -15.533699989318848
    7. '   ' → logprob: -15.908699989318848
    8. '=int' → logprob: -16.40869903564453
    9. ' ' → logprob: -16.65869903564453
    10. '=a' → logprob: -16.65869903564453

Token 652: ' sorted' (ID: 20099)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.20145133137702942
    2. ' map' → logprob: -1.701451301574707
    3. '   ' → logprob: -10.701451301574707
    4. 'g' → logprob: -12.201451301574707
    5. '	map' → logprob: -12.576451301574707
    6. 'list' → logprob: -12.951451301574707
    7. '[' → logprob: -13.701451301574707
    8. '(map' → logprob: -13.826451301574707
    9. ' g' → logprob: -14.576451301574707
    10. ' ' → logprob: -14.576451301574707

Token 653: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0026617429684847593
    2. '(list' → logprob: -6.00266170501709
    3. '([' → logprob: -9.00266170501709
    4. '(tuple' → logprob: -9.75266170501709
    5. 'map' → logprob: -13.25266170501709
    6. '((' → logprob: -14.00266170501709
    7. '(' → logprob: -14.00266170501709
    8. ' map' → logprob: -14.25266170501709
    9. '(int' → logprob: -15.62766170501709
    10. '	map' → logprob: -15.87766170501709

Token 654: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00034058792516589165
    2. 'int' → logprob: -8.000340461730957
    3. '   ' → logprob: -13.125340461730957
    4. '(' → logprob: -14.000340461730957
    5. '(lambda' → logprob: -14.125340461730957
    6. '[int' → logprob: -14.875340461730957
    7. '(
' → logprob: -15.125340461730957
    8. '
' → logprob: -15.125340461730957
    9. '```' → logprob: -16.000341415405273
    10. ',int' → logprob: -16.500341415405273

Token 655: ',' (ID: 11)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.02238892763853073
    2. ',g' → logprob: -4.397388935089111
    3. 'g' → logprob: -5.147388935089111
    4. ',' → logprob: -5.522388935089111
    5. '=g' → logprob: -12.772388458251953
    6. '(' → logprob: -12.897388458251953
    7. '[g' → logprob: -13.272388458251953
    8. '   ' → logprob: -13.397388458251953
    9. '(
' → logprob: -13.522388458251953
    10. ',(' → logprob: -13.897388458251953

Token 656: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.47626737493556e-05
    2. ' g' → logprob: -10.37503433227539
    3. '   ' → logprob: -12.87503433227539
    4. '           ' → logprob: -15.50003433227539
    5. ')' → logprob: -15.62503433227539
    6. '(g' → logprob: -15.62503433227539
    7. '  ' → logprob: -16.12503433227539
    8. ' ' → logprob: -16.12503433227539
    9. '    ' → logprob: -17.37503433227539
    10. '	g' → logprob: -17.62503433227539

Token 657: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.21351215243339539
    2. '(g' → logprob: -1.9635121822357178
    3. 'input' → logprob: -4.463511943817139
    4. '.readline' → logprob: -4.463511943817139
    5. '=g' → logprob: -5.088511943817139
    6. 'g' → logprob: -5.713511943817139
    7. 'dict' → logprob: -5.838511943817139
    8. '   ' → logprob: -7.088511943817139
    9. 'un' → logprob: -7.088511943817139
    10. ')' → logprob: -7.213511943817139

Token 658: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -15.375
    3. ' ().' → logprob: -16.25
    4. '   ' → logprob: -17.875
    5. '(' → logprob: -19.375
    6. '()
' → logprob: -20.0
    7. 's' → logprob: -20.0
    8. '()))' → logprob: -20.875
    9. ' ' → logprob: -21.0
    10. '("").' → logprob: -21.0

Token 659: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.02915125899016857
    2. '().' → logprob: -3.779151201248169
    3. 'strip' → logprob: -5.154151439666748
    4. '(split' → logprob: -10.15415096282959
    5. ' split' → logprob: -10.40415096282959
    6. 's' → logprob: -10.40415096282959
    7. '   ' → logprob: -12.90415096282959
    8. '.split' → logprob: -13.15415096282959
    9. '('').' → logprob: -13.15415096282959
    10. '()' → logprob: -13.40415096282959

Token 660: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.11571254581212997
    2. '()' → logprob: -2.3657126426696777
    3. '()))
' → logprob: -4.365712642669678
    4. '))' → logprob: -6.740712642669678
    5. '()),' → logprob: -6.990712642669678
    6. '().' → logprob: -8.24071216583252
    7. '()));' → logprob: -9.49071216583252
    8. '(' → logprob: -9.74071216583252
    9. '())))' → logprob: -10.11571216583252
    10. '())' → logprob: -10.11571216583252

Token 661: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010130415903404355
    2. ',' → logprob: -7.626013278961182
    3. '<|end|>' → logprob: -7.876013278961182
    4. '   ' → logprob: -10.126012802124023
    5. ')' → logprob: -10.251012802124023
    6. '	' → logprob: -10.626012802124023
    7. '        
' → logprob: -11.751012802124023
    8. '<|end|>' → logprob: -11.876012802124023
    9. '[' → logprob: -12.001012802124023
    10. 'ret' → logprob: -12.501012802124023

Token 662: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.5659528374671936
    2. ' ret' → logprob: -1.1909527778625488
    3. '       ' → logprob: -2.065952777862549
    4. '	ret' → logprob: -7.815952777862549
    5. ' if' → logprob: -8.065953254699707
    6. '   ' → logprob: -8.190953254699707
    7. '_ret' → logprob: -9.190953254699707
    8. '(ret' → logprob: -9.315953254699707
    9. 'if' → logprob: -9.690953254699707
    10. '$ret' → logprob: -9.690953254699707

Token 663: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.008660778403282166
    2. '[b' → logprob: -4.758660793304443
    3. '[' → logprob: -10.758660316467285
    4. '   ' → logprob: -11.633660316467285
    5. '[(' → logprob: -12.133660316467285
    6. 'a' → logprob: -12.633660316467285
    7. '```' → logprob: -13.008660316467285
    8. '[int' → logprob: -13.633660316467285
    9. '[[' → logprob: -14.383660316467285
    10. '
' → logprob: -14.883660316467285

Token 664: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. ',' → logprob: -13.000021934509277
    3. '[' → logprob: -13.000021934509277
    4. '   ' → logprob: -13.000021934509277
    5. 'a' → logprob: -13.250021934509277
    6. ']' → logprob: -13.375021934509277
    7. '][' → logprob: -13.500021934509277
    8. '(i' → logprob: -13.625021934509277
    9. '(a' → logprob: -13.875021934509277
    10. '[a' → logprob: -13.875021934509277

Token 665: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0004020713677164167
    2. '.append' → logprob: -7.875401973724365
    3. ').' → logprob: -12.375402450561523
    4. '   ' → logprob: -12.625402450561523
    5. 'append' → logprob: -12.625402450561523
    6. ' ].' → logprob: -12.750402450561523
    7. ']' → logprob: -13.625402450561523
    8. ')].' → logprob: -13.625402450561523
    9. '[' → logprob: -13.750402450561523
    10. '()].' → logprob: -14.000402450561523

Token 666: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.153795766294934e-06
    2. '.append' → logprob: -12.500005722045898
    3. ' append' → logprob: -13.375005722045898
    4. '_append' → logprob: -14.625005722045898
    5. 'app' → logprob: -14.875005722045898
    6. '	append' → logprob: -17.2500057220459
    7. 'appen' → logprob: -17.3750057220459
    8. 'add' → logprob: -18.3750057220459
    9. 'Append' → logprob: -19.8750057220459
    10. ' Append' → logprob: -21.8750057220459

Token 667: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.2519644796848297
    2. 'b' → logprob: -1.5019644498825073
    3. ' b' → logprob: -10.376964569091797
    4. '	b' → logprob: -13.001964569091797
    5. '   ' → logprob: -13.876964569091797
    6. '(' → logprob: -14.501964569091797
    7. '(
' → logprob: -15.126964569091797
    8. ')b' → logprob: -16.251964569091797
    9. 'a' → logprob: -16.626964569091797
    10. 'B' → logprob: -16.751964569091797

Token 668: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ')' → logprob: -14.000000953674316
    3. '<|end|>' → logprob: -16.125001907348633
    4. '[' → logprob: -16.375001907348633
    5. '2' → logprob: -16.625001907348633
    6. ' ' → logprob: -16.875001907348633
    7. 'b' → logprob: -17.500001907348633
    8. 'a' → logprob: -17.625001907348633
    9. '_' → logprob: -18.125001907348633
    10. '```' → logprob: -18.375001907348633

Token 669: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007900939672254026
    2. ')
' → logprob: -7.250790119171143
    3. ')return' → logprob: -9.625789642333984
    4. '       ' → logprob: -11.750789642333984
    5. '<|end|>' → logprob: -12.875789642333984
    6. '   ' → logprob: -13.125789642333984
    7. ' )' → logprob: -14.875789642333984
    8. ')

' → logprob: -15.250789642333984
    9. 'return' → logprob: -15.750789642333984
    10. '<|end|>' → logprob: -16.125789642333984

Token 670: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014677455648779869
    2. 'return' → logprob: -4.51467752456665
    3. '<|end|>' → logprob: -5.76467752456665
    4. ' return' → logprob: -8.639677047729492
    5. '	return' → logprob: -9.014677047729492
    6. ' ' → logprob: -9.764677047729492
    7. '       ' → logprob: -10.514677047729492
    8. '```' → logprob: -10.764677047729492
    9. 'ret' → logprob: -10.889677047729492
    10. '    ' → logprob: -11.389677047729492

Token 671: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5284704566001892
    2. 'return' (adapté à ' return') → logprob: -0.9034704566001892
    3. ' return' → logprob: -5.903470516204834
    4. '<|end|>' → logprob: -6.153470516204834
    5. '	return' → logprob: -8.153470039367676
    6. ' ' → logprob: -9.528470039367676
    7. 'ret' → logprob: -10.528470039367676
    8. '       ' → logprob: -10.903470039367676
    9. '{return' → logprob: -11.278470039367676
    10. '    ' → logprob: -11.278470039367676

Token 672: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0024758970830589533
    2. ' ret' → logprob: -6.002475738525391
    3. '(ret' → logprob: -15.25247573852539
    4. '	ret' → logprob: -19.00247573852539
    5. '$ret' → logprob: -19.25247573852539
    6. 're' → logprob: -19.75247573852539
    7. 'return' → logprob: -19.75247573852539
    8. 'rets' → logprob: -20.25247573852539
    9. 'retval' → logprob: -20.25247573852539
    10. 'r' → logprob: -20.75247573852539

Token 673: '

' (ID: 279)
  Prédit: 'MM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MM' → logprob: -0.09319040924310684
    2. 'LL' → logprob: -2.5931904315948486
    3. 'MMM' → logprob: -4.9681901931762695
    4. 'BBB' → logprob: -5.2181901931762695
    5. '#' → logprob: -7.3431901931762695
    6. 'B' → logprob: -8.09319019317627
    7. 'BB' → logprob: -8.71819019317627
    8. 'g' → logprob: -9.34319019317627
    9. 'def' → logprob: -9.46819019317627
    10. 'L' → logprob: -9.59319019317627

Token 674: 'def' (ID: 1314)
  Prédit: 'MM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MM' → logprob: -0.19345882534980774
    2. 'LL' → logprob: -2.3184587955474854
    3. 'if' → logprob: -2.8184587955474854
    4. 'def' → logprob: -5.1934590339660645
    5. 'BBB' → logprob: -5.4434590339660645
    6. 'MMM' → logprob: -5.6934590339660645
    7. '#' → logprob: -6.1934590339660645
    8. 'g' → logprob: -6.4434590339660645
    9. 'BB' → logprob: -8.068458557128906
    10. 'B' → logprob: -9.193458557128906

Token 675: ' S' (ID: 336)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3197297155857086
    2. ' main' → logprob: -1.3197296857833862
    3. 'solve' → logprob: -5.944729804992676
    4. ' solve' → logprob: -6.444729804992676
    5. ' weird' → logprob: -8.444729804992676
    6. 'L' → logprob: -8.944729804992676
    7. 'm' → logprob: -8.944729804992676
    8. 'M' → logprob: -8.944729804992676
    9. '__' → logprob: -9.069729804992676
    10. ' funky' → logprob: -9.444729804992676

Token 676: '0' (ID: 15)
  Prédit: 'olve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.12110745161771774
    2. 'OLVE' → logprob: -2.621107339859009
    3. 'olver' → logprob: -4.746107578277588
    4. 'OL' → logprob: -5.996107578277588
    5. 'olution' → logprob: -5.996107578277588
    6. 't' → logprob: -6.246107578277588
    7. 'ol' → logprob: -6.433607578277588
    8. 'TR' → logprob: -6.496107578277588
    9. 'T' → logprob: -6.496107578277588
    10. 'main' → logprob: -6.683607578277588

Token 677: 'LV' (ID: 50866)
  Prédit: 'olve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.28794780373573303
    2. 'OLVE' → logprob: -2.2879478931427
    3. '():' → logprob: -3.9129478931427
    4. '(L' → logprob: -4.662947654724121
    5. '():
' → logprob: -4.662947654724121
    6. '0' → logprob: -4.787947654724121
    7. 'olver' → logprob: -4.912947654724121
    8. '(' → logprob: -4.912947654724121
    9. '(N' → logprob: -5.037947654724121
    10. '()' → logprob: -5.037947654724121

Token 678: '3' (ID: 18)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.07408812642097473
    2. '(E' → logprob: -2.8240880966186523
    3. 'e' → logprob: -5.449088096618652
    4. '(' → logprob: -5.824088096618652
    5. '():' → logprob: -6.574088096618652
    6. '(e' → logprob: -6.824088096618652
    7. '(A' → logprob: -8.449088096618652
    8. '()' → logprob: -8.449088096618652
    9. 'A' → logprob: -8.699088096618652
    10. '(N' → logprob: -8.699088096618652

Token 679: 'R' (ID: 49)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7548075318336487
    2. '(E' → logprob: -1.129807472229004
    3. '(' → logprob: -2.754807472229004
    4. '(U' → logprob: -3.879807472229004
    5. '(S' → logprob: -4.254807472229004
    6. '(L' → logprob: -4.379807472229004
    7. '(s' → logprob: -4.504807472229004
    8. '(N' → logprob: -4.504807472229004
    9. '(M' → logprob: -4.504807472229004
    10. '(g' → logprob: -4.629807472229004

Token 680: '(' (ID: 7)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.24861106276512146
    2. '(g' → logprob: -1.9986110925674438
    3. '(' → logprob: -3.8736109733581543
    4. '(E' → logprob: -3.9986109733581543
    5. '():
' → logprob: -4.373610973358154
    6. '(L' → logprob: -4.748610973358154
    7. '(U' → logprob: -5.248610973358154
    8. '(J' → logprob: -5.373610973358154
    9. '(G' → logprob: -5.623610973358154
    10. '(M' → logprob: -6.498610973358154

Token 681: 'LL' (ID: 7454)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.5750369429588318
    2. '):
' → logprob: -1.8250370025634766
    3. 'LL' → logprob: -2.3250370025634766
    4. '):' → logprob: -2.8250370025634766
    5. 'N' → logprob: -3.0750370025634766
    6. 'L' → logprob: -3.9500370025634766
    7. 'EEE' → logprob: -4.825037002563477
    8. 'EE' → logprob: -5.575037002563477
    9. 'n' → logprob: -5.825037002563477
    10. 'K' → logprob: -5.950037002563477

Token 682: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.024572037160396576
    2. '):
' → logprob: -4.274571895599365
    3. '):' → logprob: -4.774571895599365
    4. ',' → logprob: -7.149571895599365
    5. 'LL' → logprob: -7.149571895599365
    6. '):

' → logprob: -9.274572372436523
    7. 'l' → logprob: -9.649572372436523
    8. '):
' → logprob: -10.274572372436523
    9. '1' → logprob: -10.774572372436523
    10. '_' → logprob: -11.399572372436523

Token 683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28458401560783386
    2. '):' → logprob: -1.4095840454101562
    3. '):
' → logprob: -5.909584045410156
    4. ')' → logprob: -8.784584045410156
    5. ' ,' → logprob: -9.534584045410156
    6. '   ' → logprob: -9.784584045410156
    7. '=' → logprob: -9.909584045410156
    8. ',
' → logprob: -9.909584045410156
    9. ' ):' → logprob: -10.284584045410156
    10. ':' → logprob: -10.534584045410156

Token 684: ' EDGE' (ID: 165368)
  Prédit: 'BBB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'BBB' → logprob: -0.11460147053003311
    2. ' BBB' → logprob: -3.1146013736724854
    3. 'E' → logprob: -3.2396013736724854
    4. 'BB' → logprob: -4.7396016120910645
    5. 'EEE' → logprob: -4.8646016120910645
    6. ' E' → logprob: -5.8646016120910645
    7. 'B' → logprob: -6.6146016120910645
    8. 'MMM' → logprob: -7.1146016120910645
    9. 'AAA' → logprob: -7.7396016120910645
    10. 'BBBB' → logprob: -7.9896016120910645

Token 685: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033155474811792374
    2. '):
' → logprob: -4.03315544128418
    3. ',' → logprob: -4.28315544128418
    4. ')' → logprob: -7.90815544128418
    5. 's' → logprob: -8.28315544128418
    6. ' ):' → logprob: -9.03315544128418
    7. ':' → logprob: -9.78315544128418
    8. '):

' → logprob: -9.78315544128418
    9. '   ' → logprob: -10.40815544128418
    10. 'E' → logprob: -10.40815544128418

Token 686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003460712905507535
    2. ':' → logprob: -8.750346183776855
    3. ':
' → logprob: -10.500346183776855
    4. '```' → logprob: -11.000346183776855
    5. '<|end|>' → logprob: -11.125346183776855
    6. '    
' → logprob: -11.375346183776855
    7. '       ' → logprob: -11.750346183776855
    8. '
' → logprob: -11.875346183776855
    9. '#' → logprob: -12.125346183776855
    10. ',' → logprob: -12.312846183776855

Token 687: ' S' (ID: 336)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.70671546459198
    2. '   ' → logprob: -1.45671546459198
    3. 'global' → logprob: -2.8317155838012695
    4. 'R' → logprob: -2.8317155838012695
    5. 'RR' → logprob: -3.7067155838012695
    6. 'g' → logprob: -4.2067155838012695
    7. 'MM' → logprob: -4.4567155838012695
    8. 'M' → logprob: -4.5817155838012695
    9. 'LL' → logprob: -4.7067155838012695
    10. 'Q' → logprob: -4.8317155838012695

Token 688: 'ML' (ID: 4123)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22061046957969666
    2. '=' → logprob: -2.4706103801727295
    3. '   ' → logprob: -2.7206103801727295
    4. '0' → logprob: -3.8456103801727295
    5. 'S' → logprob: -5.345610618591309
    6. ',' → logprob: -5.845610618591309
    7. '=S' → logprob: -6.345610618591309
    8. '=[' → logprob: -6.470610618591309
    9. 'um' → logprob: -6.595610618591309
    10. '={}' → logprob: -6.845610618591309

Token 689: 'IST' (ID: 6258)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30764976143836975
    2. '=' → logprob: -2.057649850845337
    3. '   ' → logprob: -2.557649850845337
    4. ',' → logprob: -2.932649850845337
    5. '       ' → logprob: -7.057649612426758
    6. ' ' → logprob: -7.495149612426758
    7. 'S' → logprob: -7.745149612426758
    8. '  ' → logprob: -7.807649612426758
    9. ')' → logprob: -7.932649612426758
    10. '    ' → logprob: -8.120149612426758

Token 690: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5280499458312988
    2. '=' → logprob: -0.9030499458312988
    3. ',' → logprob: -5.903049945831299
    4. '   ' → logprob: -6.653049945831299
    5. '=[]' → logprob: -7.528049945831299
    6. '={}' → logprob: -8.65304946899414
    7. '  ' → logprob: -10.90304946899414
    8. ' ' → logprob: -10.90304946899414
    9. '[' → logprob: -11.02804946899414
    10. '=[]
' → logprob: -11.15304946899414

Token 691: ' list' (ID: 1562)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.35084426403045654
    2. '[' → logprob: -1.8508442640304565
    3. '{}' → logprob: -2.850844383239746
    4. '{' → logprob: -4.100844383239746
    5. 'default' → logprob: -4.350844383239746
    6. 'F' → logprob: -4.350844383239746
    7. '[L' → logprob: -4.850844383239746
    8. ' dd' → logprob: -4.975844383239746
    9. '[]' → logprob: -5.350844383239746
    10. ' [' → logprob: -5.725844383239746

Token 692: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09772180765867233
    2. '(range' → logprob: -2.472721815109253
    3. '()' → logprob: -5.722721576690674
    4. '(edge' → logprob: -5.972721576690674
    5. '(map' → logprob: -6.222721576690674
    6. '(S' → logprob: -8.097722053527832
    7. '(set' → logprob: -9.472722053527832
    8. '(E' → logprob: -9.597722053527832
    9. '(sorted' → logprob: -9.722722053527832
    10. '((' → logprob: -10.097722053527832

Token 693: '(' (ID: 7)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018553145229816437
    2. '(lambda' → logprob: -4.268553256988525
    3. '(' → logprob: -6.143553256988525
    4. '(str' → logprob: -6.768553256988525
    5. '(F' → logprob: -7.393553256988525
    6. '(map' → logprob: -9.393552780151367
    7. 'int' → logprob: -10.018552780151367
    8. '(len' → logprob: -10.018552780151367
    9. '(set' → logprob: -10.268552780151367
    10. '   ' → logprob: -10.268552780151367

Token 694: 'we' (ID: 854)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0279308520257473
    2. '(int' → logprob: -4.027930736541748
    3. 'F' → logprob: -5.152930736541748
    4. 'str' → logprob: -6.527930736541748
    5. 'lambda' → logprob: -7.027930736541748
    6. '   ' → logprob: -7.902930736541748
    7. 'LL' → logprob: -8.277931213378906
    8. 'we' → logprob: -8.777931213378906
    9. ')' → logprob: -9.152931213378906
    10. ' int' → logprob: -9.152931213378906

Token 695: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.0023522183764725924
    2. 'ierd' → logprob: -7.252352237701416
    3. 'int' → logprob: -8.002351760864258
    4. 'ight' → logprob: -8.252351760864258
    5. '(lambda' → logprob: -8.252351760864258
    6. 'lambda' → logprob: -9.002351760864258
    7. 'd' → logprob: -9.002351760864258
    8. 'ak' → logprob: -9.502351760864258
    9. 'irds' → logprob: -9.627351760864258
    10. '   ' → logprob: -10.127351760864258

Token 696: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.431207682704553e-05
    2. 'grund' → logprob: -10.375054359436035
    3. '(' → logprob: -11.500054359436035
    4. '_gr' → logprob: -13.500054359436035
    5. 'we' → logprob: -13.625054359436035
    6. ',' → logprob: -13.750054359436035
    7. '   ' → logprob: -13.875054359436035
    8. 'Grund' → logprob: -14.500054359436035
    9. '_we' → logprob: -14.562554359436035
    10. ' grund' → logprob: -14.625054359436035

Token 697: 'grund' (ID: 27797)
  Prédit: 'grund'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.04888835549354553
    2. '_' → logprob: -3.0488884449005127
    3. ' grund' → logprob: -8.298888206481934
    4. 'grond' → logprob: -11.548888206481934
    5. '_gr' → logprob: -11.673888206481934
    6. 'grunn' → logprob: -12.048888206481934
    7. 'Grund' → logprob: -12.423888206481934
    8. 'gründ' → logprob: -12.423888206481934
    9. 'ground' → logprob: -12.548888206481934
    10. '_ground' → logprob: -13.548888206481934

Token 698: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.9650025428272784e-05
    2. 'ey' → logprob: -11.125040054321289
    3. 'iy' → logprob: -12.000040054321289
    4. 'ny' → logprob: -12.250040054321289
    5. '(y' → logprob: -13.000040054321289
    6. 'ry' → logprob: -13.125040054321289
    7. '(G' → logprob: -13.625040054321289
    8. 'ay' → logprob: -13.625040054321289
    9. 'ly' → logprob: -14.000040054321289
    10. 'uy' → logprob: -14.125040054321289

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007712708320468664
    2. '(' → logprob: -7.6257710456848145
    3. ' ,' → logprob: -8.750771522521973
    4. ',E' → logprob: -9.750771522521973
    5. '   ' → logprob: -10.375771522521973
    6. '(E' → logprob: -12.000771522521973
    7. ',
' → logprob: -12.250771522521973
    8. ',e' → logprob: -12.500771522521973
    9. ',(' → logprob: -12.750771522521973
    10. '))' → logprob: -13.000771522521973

Token 700: ' EDGE' (ID: 165368)
  Prédit: 'EDGE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EDGE' → logprob: -0.7485835552215576
    2. '[' → logprob: -1.1235835552215576
    3. ' EDGE' → logprob: -1.7485835552215576
    4. ' [' → logprob: -4.748583793640137
    5. '   ' → logprob: -4.873583793640137
    6. '(' → logprob: -5.373583793640137
    7. 'ED' → logprob: -5.998583793640137
    8. '([' → logprob: -7.248583793640137
    9. 'edge' → logprob: -7.373583793640137
    10. ' ' → logprob: -7.623583793640137

Token 701: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007103451527655125
    2. '(' → logprob: -5.132103443145752
    3. '))
' → logprob: -8.63210391998291
    4. '.values' → logprob: -8.63210391998291
    5. '(E' → logprob: -8.75710391998291
    6. '(S' → logprob: -8.75710391998291
    7. '()))' → logprob: -9.25710391998291
    8. '([' → logprob: -9.75710391998291
    9. ' ))' → logprob: -9.75710391998291
    10. '[' → logprob: -9.75710391998291

Token 702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08670993894338608
    2. '<|end|>' → logprob: -2.711709976196289
    3. '
' → logprob: -4.836709976196289
    4. ')' → logprob: -4.961709976196289
    5. '    
' → logprob: -7.461709976196289
    6. '<|end|>' → logprob: -8.336709976196289
    7. '...' → logprob: -8.586709976196289
    8. '#' → logprob: -8.711709976196289
    9. ' return' → logprob: -9.461709976196289
    10. '    ' → logprob: -9.961709976196289

Token 703: ' AN' (ID: 3473)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.714889645576477
    2. 'return' → logprob: -1.339889645576477
    3. '   ' → logprob: -2.4648895263671875
    4. 'RR' → logprob: -3.4648895263671875
    5. 'MM' → logprob: -3.8398895263671875
    6. 'S' → logprob: -3.8398895263671875
    7. 'r' → logprob: -4.2148895263671875
    8. 'M' → logprob: -4.3398895263671875
    9. 'res' → logprob: -4.4648895263671875
    10. 'for' → logprob: -5.7148895263671875

Token 704: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0727502778172493
    2. 'N' → logprob: -2.8227503299713135
    3. 'C' → logprob: -5.197750091552734
    4. ' =' → logprob: -6.072750091552734
    5. '=' → logprob: -7.697750091552734
    6. 'L' → logprob: -7.947750091552734
    7. 'SL' → logprob: -7.947750091552734
    8. '0' → logprob: -8.072750091552734
    9. 'SW' → logprob: -8.322750091552734
    10. 'A' → logprob: -8.572750091552734

Token 705: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16035360097885132
    2. '=' → logprob: -1.910353660583496
    3. '   ' → logprob: -9.660353660583496
    4. ',' → logprob: -9.910353660583496
    5. ' ' → logprob: -11.910353660583496
    6. '  ' → logprob: -13.410353660583496
    7. ':' → logprob: -13.660353660583496
    8. ')' → logprob: -14.285353660583496
    9. '=[' → logprob: -14.535353660583496
    10. 's' → logprob: -14.535353660583496

Token 706: ' Funk' (ID: 36107)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.3467237651348114
    2. 'S' → logprob: -2.221723794937134
    3. 'sum' → logprob: -2.721723794937134
    4. '0' → logprob: -3.096723794937134
    5. ' Funk' → logprob: -3.596723794937134
    6. ' sum' → logprob: -3.596723794937134
    7. ' ' → logprob: -5.346723556518555
    8. 'max' → logprob: -5.971723556518555
    9. ' F' → logprob: -6.096723556518555
    10. 'dd' → logprob: -6.221723556518555

Token 707: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001863750658230856
    2. 'Y' → logprob: -8.8751859664917
    3. 'F' → logprob: -10.3751859664917
    4. 'S' → logprob: -11.7501859664917
    5. 'K' → logprob: -12.3751859664917
    6. 'zy' → logprob: -14.1251859664917
    7. 'Z' → logprob: -14.5001859664917
    8. 'ky' → logprob: -15.3751859664917
    9. 'M' → logprob: -15.7501859664917
    10. 'unky' → logprob: -15.8751859664917

Token 708: 'Mod' (ID: 4721)
  Prédit: 'Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -1.9361264946837764e-07
    2. '(Mod' → logprob: -16.5
    3. 'M' → logprob: -17.625
    4. ' Mod' → logprob: -17.875
    5. 'mod' → logprob: -18.125
    6. '(' → logprob: -18.25
    7. '```' → logprob: -18.375
    8. '_Mod' → logprob: -18.875
    9. '_mod' → logprob: -19.125
    10. '[' → logprob: -20.125

Token 709: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07922838628292084
    2. '()' → logprob: -2.579228401184082
    3. '()
' → logprob: -8.704228401184082
    4. '((' → logprob: -9.704228401184082
    5. '(sum' → logprob: -10.079228401184082
    6. '(S' → logprob: -10.704228401184082
    7. '0' → logprob: -11.079228401184082
    8. '()

' → logprob: -12.079228401184082
    9. '(len' → logprob: -12.204228401184082
    10. '();' → logprob: -12.829228401184082

Token 710: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061440035700798035
    2. 'sum' → logprob: -3.0614399909973145
    3. '(' → logprob: -4.5614399909973145
    4. '1' → logprob: -7.0614399909973145
    5. '(sum' → logprob: -7.6864399909973145
    6. 'S' → logprob: -8.061440467834473
    7. 'max' → logprob: -9.061440467834473
    8. 'LL' → logprob: -9.311440467834473
    9. 'int' → logprob: -9.811440467834473
    10. 'MMM' → logprob: -10.186440467834473

Token 711: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02411504089832306
    2. ')' → logprob: -3.7741150856018066
    3. ')
' → logprob: -7.774115085601807
    4. ' )
' → logprob: -7.774115085601807
    5. ')

' → logprob: -11.399114608764648
    6. ' )' → logprob: -11.524114608764648
    7. '
' → logprob: -12.774114608764648
    8. ' ' → logprob: -14.274114608764648
    9. '   ' → logprob: -14.524114608764648
    10. ',' → logprob: -14.899114608764648

Token 712: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007746698334813118
    2. ' for' → logprob: -5.382746696472168
    3. 'for' → logprob: -6.007746696472168
    4. '
' → logprob: -7.507746696472168
    5. '<|end|>' → logprob: -10.132746696472168
    6. '    
' → logprob: -10.507746696472168
    7. '	for' → logprob: -10.757746696472168
    8. ',' → logprob: -12.257746696472168
    9. 'S' → logprob: -12.382746696472168
    10. '```' → logprob: -13.007746696472168

Token 713: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013410773826763034
    2. '   ' → logprob: -6.626340866088867
    3. 'BBB' → logprob: -12.501340866088867
    4. 'MMM' → logprob: -13.001340866088867
    5. '
' → logprob: -13.126340866088867
    6. ' for' → logprob: -13.626340866088867
    7. '_for' → logprob: -13.876340866088867
    8. '```' → logprob: -14.376340866088867
    9. 'MM' → logprob: -14.626340866088867
    10. 'v' → logprob: -14.751340866088867

Token 714: ' crazy' (ID: 21528)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013278577476739883
    2. ' for' → logprob: -4.763278484344482
    3. '   ' → logprob: -5.388278484344482
    4. '_for' → logprob: -10.88827896118164
    5. '	for' → logprob: -11.38827896118164
    6. 'v' → logprob: -11.63827896118164
    7. ' ' → logprob: -11.63827896118164
    8. 'f' → logprob: -11.88827896118164
    9. '_f' → logprob: -12.13827896118164
    10. '_' → logprob: -13.01327896118164

Token 715: ' nesting' (ID: 126051)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6463101506233215
    2. 'for' → logprob: -0.7713101506233215
    3. '   ' → logprob: -4.396310329437256
    4. '	for' → logprob: -7.021310329437256
    5. '<|end|>' → logprob: -8.896309852600098
    6. ' ' → logprob: -9.521309852600098
    7. '  ' → logprob: -9.771309852600098
    8. '
' → logprob: -11.021309852600098
    9. '    ' → logprob: -11.271309852600098
    10. '    
' → logprob: -11.646309852600098

Token 716: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6078276038169861
    2. ' for' → logprob: -1.1078276634216309
    3. 'for' → logprob: -2.107827663421631
    4. '
' → logprob: -7.107827663421631
    5. '    
' → logprob: -7.232827663421631
    6. '	for' → logprob: -7.357827663421631
    7. ' 
' → logprob: -8.232827186584473
    8. ' ' → logprob: -8.482827186584473
    9. ' in' → logprob: -8.482827186584473
    10. '<|end|>' → logprob: -8.482827186584473

Token 717: ' name' (ID: 1308)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012139447964727879
    2. ' for' → logprob: -4.512139320373535
    3. '   ' → logprob: -7.012139320373535
    4. 'S' → logprob: -9.387139320373535
    5. 'range' → logprob: -10.762139320373535
    6. '
' → logprob: -10.887139320373535
    7. '```' → logprob: -11.887139320373535
    8. 'def' → logprob: -12.012139320373535
    9. '       ' → logprob: -12.137139320373535
    10. 'i' → logprob: -12.387139320373535

Token 718: ' choice' (ID: 7158)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14211922883987427
    2. ' for' → logprob: -2.3921191692352295
    3. '   ' → logprob: -3.2671191692352295
    4. 'S' → logprob: -7.767119407653809
    5. ' in' → logprob: -7.892119407653809
    6. 'in' → logprob: -7.892119407653809
    7. '  ' → logprob: -8.392119407653809
    8. 's' → logprob: -8.392119407653809
    9. 'i' → logprob: -8.767119407653809
    10. ' ' → logprob: -9.142119407653809

Token 719: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19071488082408905
    2. 'for' → logprob: -1.9407148361206055
    3. ' for' → logprob: -3.5657148361206055
    4. '    
' → logprob: -6.9407148361206055
    5. '
' → logprob: -7.5657148361206055
    6. '	for' → logprob: -8.940714836120605
    7. '```' → logprob: -10.315714836120605
    8. ',' → logprob: -10.815714836120605
    9. '<|end|>' → logprob: -10.815714836120605
    10. ' ' → logprob: -11.815714836120605

Token 720: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3947831988334656
    2. 'for' → logprob: -1.1447832584381104
    3. ' for' → logprob: -4.894783020019531
    4. '	for' → logprob: -8.144783020019531
    5. '    
' → logprob: -10.269783020019531
    6. '
' → logprob: -10.519783020019531
    7. '<|end|>' → logprob: -11.019783020019531
    8. '  ' → logprob: -12.269783020019531
    9. ' ' → logprob: -12.519783020019531
    10. ',' → logprob: -13.019783020019531

Token 721: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00011224505578866228
    2. '   ' → logprob: -9.125112533569336
    3. '
' → logprob: -13.750112533569336
    4. ' for' → logprob: -14.000112533569336
    5. '_for' → logprob: -14.625112533569336
    6. '```' → logprob: -15.625112533569336
    7. '    
' → logprob: -15.750112533569336
    8. '_' → logprob: -16.125112533569336
    9. '	for' → logprob: -16.125112533569336
    10. 'f' → logprob: -16.625112533569336

Token 722: ' xxx' (ID: 33484)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -2.2180049419403076
    2. 'i' → logprob: -2.3430049419403076
    3. ' s' → logprob: -2.3430049419403076
    4. 's' → logprob: -2.3430049419403076
    5. 'w' → logprob: -2.9680049419403076
    6. 'x' → logprob: -3.0930049419403076
    7. 'S' → logprob: -3.2180049419403076
    8. 'g' → logprob: -3.4680049419403076
    9. 'X' → logprob: -3.6555049419403076
    10. ' S' → logprob: -3.7180049419403076

Token 723: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14434248208999634
    2. 'in' → logprob: -2.0193424224853516
    3. ',' → logprob: -7.019342422485352
    4. '_' → logprob: -8.644342422485352
    5. '_in' → logprob: -9.269342422485352
    6. 'n' → logprob: -9.644342422485352
    7. 'i' → logprob: -9.769342422485352
    8. 'S' → logprob: -9.894342422485352
    9. 's' → logprob: -10.144342422485352
    10. ' ' → logprob: -10.269342422485352

Token 724: ' S' (ID: 336)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -2.2796213626861572
    2. 'sm' → logprob: -2.2796213626861572
    3. 'S' → logprob: -2.4046213626861572
    4. 'g' → logprob: -2.5296213626861572
    5. 'gr' → logprob: -3.0296213626861572
    6. 'G' → logprob: -3.0296213626861572
    7. 'v' → logprob: -3.6546213626861572
    8. 'gg' → logprob: -3.7171213626861572
    9. 'w' → logprob: -3.7796213626861572
    10. 'x' → logprob: -3.8421213626861572

Token 725: 'x' (ID: 87)
  Prédit: 'ML'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ML' → logprob: -0.413680762052536
    2. 'in' → logprob: -1.4136807918548584
    3. ' in' → logprob: -2.5386807918548584
    4. 'M' → logprob: -4.913680553436279
    5. 'i' → logprob: -6.663680553436279
    6. 'L' → logprob: -6.913680553436279
    7. 'list' → logprob: -7.038680553436279
    8. 'n' → logprob: -7.288680553436279
    9. '_in' → logprob: -7.413680553436279
    10. '_list' → logprob: -7.788680553436279

Token 726: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11285573989152908
    2. ' in' → logprob: -2.6128556728363037
    3. 'L' → logprob: -4.237855911254883
    4. 'ML' → logprob: -4.737855911254883
    5. 'x' → logprob: -5.862855911254883
    6. 'list' → logprob: -6.612855911254883
    7. 'LIST' → logprob: -6.862855911254883
    8. 'M' → logprob: -6.987855911254883
    9. '_list' → logprob: -7.487855911254883
    10. 'n' → logprob: -7.987855911254883

Token 727: ' S' (ID: 336)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.15930378437042236
    2. 'zip' → logprob: -2.034303665161133
    3. 'S' → logprob: -4.659303665161133
    4. ' enumerate' → logprob: -5.034303665161133
    5. ' zip' → logprob: -8.034303665161133
    6. 'range' → logprob: -9.659303665161133
    7. 's' → logprob: -10.409303665161133
    8. 'enum' → logprob: -10.909303665161133
    9. ' S' → logprob: -11.409303665161133
    10. 'en' → logprob: -11.909303665161133

Token 728: 'ML' (ID: 4123)
  Prédit: 'ML'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ML' → logprob: -0.00036263695801608264
    2. 'M' → logprob: -9.250362396240234
    3. '(' → logprob: -9.500362396240234
    4. '0' → logprob: -9.750362396240234
    5. 'S' → logprob: -10.250362396240234
    6. ' in' → logprob: -10.375362396240234
    7. '(M' → logprob: -11.250362396240234
    8. 'LIST' → logprob: -11.375362396240234
    9. 'enumer' → logprob: -11.625362396240234
    10. 'MLE' → logprob: -11.750362396240234

Token 729: 'IST' (ID: 6258)
  Prédit: 'ML'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ML' → logprob: -0.011079294607043266
    2. 'LIST' → logprob: -4.51107931137085
    3. 'M' → logprob: -11.511078834533691
    4. 'list' → logprob: -11.886078834533691
    5. 'L' → logprob: -12.511078834533691
    6. '_list' → logprob: -12.886078834533691
    7. 'List' → logprob: -13.636078834533691
    8. '_LIST' → logprob: -13.761078834533691
    9. 'IST' → logprob: -13.886078834533691
    10. '1' → logprob: -14.386078834533691

Token 730: '[' (ID: 58)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10042954236268997
    2. ',' → logprob: -3.1004295349121094
    3. 'in' → logprob: -3.6004295349121094
    4. ':' → logprob: -3.8504295349121094
    5. '   ' → logprob: -6.475429534912109
    6. ':
' → logprob: -8.35042953491211
    7. '[' → logprob: -9.97542953491211
    8. ',in' → logprob: -10.22542953491211
    9. ' ,' → logprob: -11.22542953491211
    10. '_in' → logprob: -11.22542953491211

Token 731: '0' (ID: 15)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.257018506526947
    2. '0' → logprob: -2.507018566131592
    3. '():' → logprob: -3.007018566131592
    4. ':' → logprob: -3.007018566131592
    5. '1' → logprob: -4.257018566131592
    6. '(' → logprob: -5.132018566131592
    7. ']:' → logprob: -5.257018566131592
    8. 'items' → logprob: -5.507018566131592
    9. ':],' → logprob: -6.132018566131592
    10. '():
' → logprob: -6.507018566131592

Token 732: '].' (ID: 1651)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.07386482506990433
    2. ':' → logprob: -3.3238649368286133
    3. '].' → logprob: -4.198864936828613
    4. '):' → logprob: -4.573864936828613
    5. ']):' → logprob: -5.948864936828613
    6. '],' → logprob: -5.948864936828613
    7. ']' → logprob: -6.198864936828613
    8. ':].' → logprob: -7.823864936828613
    9. ']:
' → logprob: -7.948864936828613
    10. '():' → logprob: -7.948864936828613

Token 733: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.001508674118667841
    2. 'keys' → logprob: -6.501508712768555
    3. 'values' → logprob: -12.376508712768555
    4. ' items' → logprob: -14.001508712768555
    5. '.items' → logprob: -14.501508712768555
    6. '```' → logprob: -14.626508712768555
    7. '_items' → logprob: -16.376508712768555
    8. ' keys' → logprob: -16.626508712768555
    9. 'elements' → logprob: -17.251508712768555
    10. ' ' → logprob: -18.501508712768555

Token 734: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0053940764628350735
    2. '():
' → logprob: -5.255393981933594
    3. '()' → logprob: -8.880393981933594
    4. '():
' → logprob: -11.505393981933594
    5. ':' → logprob: -12.755393981933594
    6. '():

' → logprob: -13.005393981933594
    7. '();' → logprob: -13.505393981933594
    8. ' ():' → logprob: -13.880393981933594
    9. '(' → logprob: -14.130393981933594
    10. '(),' → logprob: -14.255393981933594

Token 735: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020306356600485742
    2. ':' → logprob: -9.250203132629395
    3. '<|end|>' → logprob: -9.875203132629395
    4. '   ' → logprob: -11.125203132629395
    5. '<|end|>' → logprob: -11.750203132629395
    6. ':
' → logprob: -12.000203132629395
    7. ',' → logprob: -12.250203132629395
    8. '```' → logprob: -12.625203132629395
    9. '           ' → logprob: -12.875203132629395
    10. '[' → logprob: -13.125203132629395

Token 736: ' for' (ID: 395)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.2684336304664612
    2. '   ' → logprob: -1.7684335708618164
    3. '       ' → logprob: -2.7684335708618164
    4. ' AN' → logprob: -6.393433570861816
    5. '           ' → logprob: -9.018433570861816
    6. 'AN' → logprob: -9.393433570861816
    7. ' ' → logprob: -10.143433570861816
    8. '    ' → logprob: -10.268433570861816
    9. 'AS' → logprob: -10.643433570861816
    10. '	' → logprob: -11.518433570861816

Token 737: ' y' (ID: 342)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.08218090236186981
    2. ' y' → logprob: -3.457180976867676
    3. 'xxx' → logprob: -4.832180976867676
    4. 'kk' → logprob: -5.082180976867676
    5. 'yyyy' → logprob: -5.582180976867676
    6. 'k' → logprob: -5.707180976867676
    7. 'key' → logprob: -5.707180976867676
    8. 'y' → logprob: -6.082180976867676
    9. 'yy' → logprob: -6.082180976867676
    10. 'zzz' → logprob: -6.207180976867676

Token 738: 'yy' (ID: 7496)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8171184062957764
    2. ',' → logprob: -1.1921184062957764
    3. ' in' → logprob: -1.9421184062957764
    4. 'x' → logprob: -3.1921184062957764
    5. 'in' → logprob: -3.8171184062957764
    6. ' S' → logprob: -4.4421186447143555
    7. 'xx' → logprob: -4.8171186447143555
    8. 's' → logprob: -5.6921186447143555
    9. '_s' → logprob: -5.9421186447143555
    10. ' ,' → logprob: -5.9421186447143555

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0580538809299469
    2. ' in' → logprob: -2.933053970336914
    3. 'in' → logprob: -6.308053970336914
    4. ',S' → logprob: -7.808053970336914
    5. '   ' → logprob: -7.933053970336914
    6. ' ,' → logprob: -7.933053970336914
    7. '       ' → logprob: -10.558053970336914
    8. ',Z' → logprob: -10.683053970336914
    9. '```' → logprob: -11.058053970336914
    10. '    ' → logprob: -11.183053970336914

Token 740: ' Sy' (ID: 25254)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3533079922199249
    2. 'Sy' → logprob: -1.4783079624176025
    3. ' S' → logprob: -4.103308200836182
    4. ' Sy' → logprob: -4.728308200836182
    5. 'Sz' → logprob: -4.728308200836182
    6. 'val' → logprob: -5.228308200836182
    7. 'Val' → logprob: -5.478308200836182
    8. 'yyy' → logprob: -5.853308200836182
    9. 'qty' → logprob: -6.478308200836182
    10. ' val' → logprob: -6.478308200836182

Token 741: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06200163811445236
    2. ' in' → logprob: -2.8120017051696777
    3. 'n' → logprob: -11.43700122833252
    4. ' ' → logprob: -11.93700122833252
    5. '   ' → logprob: -12.81200122833252
    6. 's' → logprob: -13.56200122833252
    7. '```' → logprob: -13.56200122833252
    8. 'y' → logprob: -13.68700122833252
    9. ',' → logprob: -13.68700122833252
    10. 'x' → logprob: -13.68700122833252

Token 742: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.018354900181293488
    2. ' S' → logprob: -4.018354892730713
    3. ' in' → logprob: -8.768355369567871
    4. 'in' → logprob: -10.893355369567871
    5. 'Sy' → logprob: -11.393355369567871
    6. '   ' → logprob: -12.268355369567871
    7. ' ' → logprob: -12.393355369567871
    8. 'x' → logprob: -13.018355369567871
    9. '	S' → logprob: -13.768355369567871
    10. '  ' → logprob: -14.018355369567871

Token 743: 'ML' (ID: 4123)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03886742517352104
    2. 'S' → logprob: -3.288867473602295
    3. 'in' → logprob: -7.663867473602295
    4. 'ML' → logprob: -9.413866996765137
    5. ' in' → logprob: -9.413866996765137
    6. 'SM' → logprob: -9.913866996765137
    7. '       ' → logprob: -10.538866996765137
    8. 'M' → logprob: -10.663866996765137
    9. '(S' → logprob: -11.038866996765137
    10. '.items' → logprob: -11.163866996765137

Token 744: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.0005641150055453181
    2. 'ist' → logprob: -7.500564098358154
    3. 'ST' → logprob: -11.750564575195312
    4. 'S' → logprob: -14.250564575195312
    5. '[' → logprob: -14.500564575195312
    6. '   ' → logprob: -14.500564575195312
    7. 'LIST' → logprob: -14.500564575195312
    8. ' IST' → logprob: -15.375564575195312
    9. 'I' → logprob: -15.750564575195312
    10. 'T' → logprob: -15.875564575195312

Token 745: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012403888104017824
    2. 'in' → logprob: -9.500123977661133
    3. '   ' → logprob: -11.375123977661133
    4. '1' → logprob: -11.750123977661133
    5. '0' → logprob: -12.375123977661133
    6. 'x' → logprob: -12.625123977661133
    7. ' in' → logprob: -12.750123977661133
    8. 's' → logprob: -13.125123977661133
    9. '[S' → logprob: -13.125123977661133
    10. 'S' → logprob: -13.250123977661133

Token 746: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034368377178907394
    2. '0' → logprob: -3.5343682765960693
    3. '-' → logprob: -5.409368515014648
    4. '   ' → logprob: -10.034368515014648
    5. '[' → logprob: -10.784368515014648
    6. ' ' → logprob: -11.284368515014648
    7. '```' → logprob: -11.659368515014648
    8. '2' → logprob: -11.909368515014648
    9. '
' → logprob: -12.346868515014648
    10. '(' → logprob: -12.471868515014648

Token 747: '].' (ID: 1651)
  Prédit: '.items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0021089822985231876
    2. 'items' → logprob: -6.252109050750732
    3. '.iteritems' → logprob: -9.502108573913574
    4. '       ' → logprob: -10.502108573913574
    5. '.' → logprob: -10.627108573913574
    6. '   ' → logprob: -10.877108573913574
    7. '```' → logprob: -11.377108573913574
    8. ' .' → logprob: -12.127108573913574
    9. '	items' → logprob: -12.752108573913574
    10. '_items' → logprob: -13.252108573913574

Token 748: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -6.2729995988775045e-06
    2. '.items' → logprob: -12.000006675720215
    3. ' items' → logprob: -16.7500057220459
    4. 'values' → logprob: -17.2500057220459
    5. '```' → logprob: -17.6250057220459
    6. '   ' → logprob: -18.5000057220459
    7. '
' → logprob: -18.7500057220459
    8. '	items' → logprob: -18.8750057220459
    9. 'item' → logprob: -19.1250057220459
    10. 'getitem' → logprob: -19.7500057220459

Token 749: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.3287079334259033
    2. '():' → logprob: -1.3287079334259033
    3. '()' → logprob: -4.328707695007324
    4. '().' → logprob: -6.703707695007324
    5. '(),' → logprob: -8.203707695007324
    6. '()):
' → logprob: -8.703707695007324
    7. '():

' → logprob: -9.203707695007324
    8. '():
' → logprob: -9.453707695007324
    9. '       ' → logprob: -10.078707695007324
    10. '(' → logprob: -10.078707695007324

Token 750: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010413920972496271
    2. '<|end|>' → logprob: -9.875103950500488
    3. '       ' → logprob: -11.125103950500488
    4. '               ' → logprob: -11.250103950500488
    5. '```' → logprob: -12.375103950500488
    6. ':' → logprob: -12.500103950500488
    7. '<|end|>' → logprob: -12.625103950500488
    8. '#' → logprob: -13.125103950500488
    9. '	       ' → logprob: -13.125103950500488
    10. '          ' → logprob: -13.250103950500488

Token 751: ' Z' (ID: 1489)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8130657076835632
    2. '           ' → logprob: -0.8130657076835632
    3. '               ' → logprob: -2.188065767288208
    4. '   ' → logprob: -7.438065528869629
    5. 'ANS' → logprob: -9.313065528869629
    6. '                   ' → logprob: -9.813065528869629
    7. ' ' → logprob: -10.938065528869629
    8. '                       ' → logprob: -11.063065528869629
    9. '```' → logprob: -11.188065528869629
    10. '	       ' → logprob: -11.313065528869629

Token 752: 'ZZ' (ID: 47604)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1554955095052719
    2. '=' → logprob: -2.4054954051971436
    3. 'Z' → logprob: -4.155495643615723
    4. 'zz' → logprob: -4.280495643615723
    5. 'z' → logprob: -4.780495643615723
    6. ' +=' → logprob: -6.280495643615723
    7. 'ZZ' → logprob: -6.405495643615723
    8. 'x' → logprob: -6.655495643615723
    9. '=(' → logprob: -7.030495643615723
    10. '_' → logprob: -7.155495643615723

Token 753: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32505956292152405
    2. ' =' → logprob: -1.3250595331192017
    3. '+=' → logprob: -4.575059413909912
    4. ' +=' → logprob: -6.950059413909912
    5. '+' → logprob: -8.20005989074707
    6. '   ' → logprob: -9.95005989074707
    7. ' ' → logprob: -10.20005989074707
    8. ')' → logprob: -10.82505989074707
    9. '=S' → logprob: -11.07505989074707
    10. '       ' → logprob: -11.20005989074707

Token 754: ' xxx' (ID: 33484)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.763085663318634
    2. 'xxx' → logprob: -0.888085663318634
    3. 'F' → logprob: -2.3880856037139893
    4. ' Funk' → logprob: -4.013085842132568
    5. ' xxx' → logprob: -5.638085842132568
    6. '(S' → logprob: -6.263085842132568
    7. 'yyy' → logprob: -6.888085842132568
    8. ' S' → logprob: -6.888085842132568
    9. 'xx' → logprob: -7.388085842132568
    10. 'Sy' → logprob: -7.388085842132568

Token 755: ' ^' (ID: 7602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18526728451251984
    2. ' +' → logprob: -2.060267210006714
    3. '*' → logprob: -3.685267210006714
    4. '           ' → logprob: -5.185267448425293
    5. ',' → logprob: -5.810267448425293
    6. 'Sy' → logprob: -6.185267448425293
    7. '^' → logprob: -6.310267448425293
    8. ' *' → logprob: -6.435267448425293
    9. '-' → logprob: -8.310267448425293
    10. '=' → logprob: -8.310267448425293

Token 756: ' y' (ID: 342)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.0024773201439529657
    2. ' y' → logprob: -6.002477169036865
    3. 'yy' → logprob: -13.627477645874023
    4. ' ' → logprob: -15.752477645874023
    5. '   ' → logprob: -16.502477645874023
    6. '  ' → logprob: -16.752477645874023
    7. 'YYY' → logprob: -17.252477645874023
    8. 'yyyy' → logprob: -17.627477645874023
    9. 'zzz' → logprob: -17.752477645874023
    10. '```' → logprob: -18.377477645874023

Token 757: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.00025633294717408717
    2. 'yyy' → logprob: -8.625256538391113
    3. 'y' → logprob: -9.500256538391113
    4. '   ' → logprob: -14.500256538391113
    5. '_' → logprob: -15.000256538391113
    6. 'YY' → logprob: -15.250256538391113
    7. ' y' → logprob: -15.500256538391113
    8. '       ' → logprob: -16.000255584716797
    9. 'yp' → logprob: -16.000255584716797
    10. '=' → logprob: -16.500255584716797

Token 758: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001064486219547689
    2. '<|end|>' → logprob: -7.376064300537109
    3. '<|end|>' → logprob: -9.25106430053711
    4. '               ' → logprob: -9.50106430053711
    5. ',' → logprob: -9.87606430053711
    6. '       ' → logprob: -10.00106430053711
    7. '		' → logprob: -10.37606430053711
    8. ')' → logprob: -10.87606430053711
    9. '                   ' → logprob: -11.00106430053711
    10. '
' → logprob: -11.00106430053711

Token 759: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004338877333793789
    2. '               ' → logprob: -8.250433921813965
    3. '                   ' → logprob: -9.875433921813965
    4. '<|end|>' → logprob: -9.875433921813965
    5. ',' → logprob: -10.875433921813965
    6. '		' → logprob: -11.375433921813965
    7. '       ' → logprob: -11.625433921813965
    8. 'ANS' → logprob: -12.250433921813965
    9. '=' → logprob: -12.250433921813965
    10. ' =' → logprob: -12.750433921813965

Token 760: ' Sz' (ID: 42548)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.07052350789308548
    2. '           ' → logprob: -2.695523500442505
    3. '   ' → logprob: -8.445523262023926
    4. ' AN' → logprob: -8.695523262023926
    5. '       ' → logprob: -8.820523262023926
    6. '               ' → logprob: -11.070523262023926
    7. 'ans' → logprob: -12.195523262023926
    8. 'Ans' → logprob: -12.195523262023926
    9. '                   ' → logprob: -12.820523262023926
    10. 'ANSWER' → logprob: -12.820523262023926

Token 761: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04242521524429321
    2. '=' → logprob: -3.2924251556396484
    3. ' +=' → logprob: -6.417425155639648
    4. 'um' → logprob: -7.417425155639648
    5. '   ' → logprob: -7.667425155639648
    6. ',' → logprob: -7.667425155639648
    7. 'm' → logprob: -8.542425155639648
    8. 'S' → logprob: -8.917425155639648
    9. '           ' → logprob: -9.042425155639648
    10. '       ' → logprob: -9.042425155639648

Token 762: ' S' (ID: 336)
  Prédit: 'Sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sy' → logprob: -0.05531167611479759
    2. 'Sz' → logprob: -3.555311679840088
    3. ' Sy' → logprob: -4.430311679840088
    4. 'Z' → logprob: -4.805311679840088
    5. 'F' → logprob: -6.055311679840088
    6. 'S' → logprob: -6.555311679840088
    7. ' Sz' → logprob: -7.930311679840088
    8. 'Ans' → logprob: -8.05531120300293
    9. 'Fun' → logprob: -8.30531120300293
    10. ' Funk' → logprob: -9.68031120300293

Token 763: 'ML' (ID: 4123)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5203516483306885
    2. 'x' → logprob: -2.0203516483306885
    3. ' =' → logprob: -2.0203516483306885
    4. 'ANS' → logprob: -2.6453516483306885
    5. '=' → logprob: -3.2703516483306885
    6. 'Sy' → logprob: -3.8953516483306885
    7. 'z' → logprob: -6.395351409912109
    8. 'Z' → logprob: -6.395351409912109
    9. 'Ans' → logprob: -6.770351409912109
    10. 'zy' → logprob: -6.895351409912109

Token 764: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -0.2482120543718338
    2. 'ist' → logprob: -1.8732120990753174
    3. 'T' → logprob: -3.3732120990753174
    4. 't' → logprob: -4.123211860656738
    5. 'ST' → logprob: -4.623211860656738
    6. 'IT' → logprob: -6.123211860656738
    7. 'List' → logprob: -6.748211860656738
    8. 'it' → logprob: -7.248211860656738
    9. '[' → logprob: -7.248211860656738
    10. 'i' → logprob: -8.373211860656738

Token 765: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006572735728695989
    2. '2' → logprob: -7.625657081604004
    3. '0' → logprob: -9.250657081604004
    4. '```' → logprob: -11.125657081604004
    5. '   ' → logprob: -11.500657081604004
    6. '           ' → logprob: -11.500657081604004
    7. '1' → logprob: -11.625657081604004
    8. ' [' → logprob: -12.000657081604004
    9. ' ' → logprob: -12.625657081604004
    10. '       ' → logprob: -12.750657081604004

Token 766: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14346151053905487
    2. '0' → logprob: -2.0184614658355713
    3. '1' → logprob: -7.76846170425415
    4. '-' → logprob: -9.018461227416992
    5. '[' → logprob: -9.643461227416992
    6. ' ' → logprob: -9.768461227416992
    7. '   ' → logprob: -10.768461227416992
    8. '...' → logprob: -10.893461227416992
    9. ']' → logprob: -11.393461227416992
    10. '3' → logprob: -11.518461227416992

Token 767: '][' (ID: 2696)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.09384116530418396
    2. '].' → logprob: -2.968841075897217
    3. '[' → logprob: -3.593841075897217
    4. ',' → logprob: -4.968841075897217
    5. '][' → logprob: -6.718841075897217
    6. 'get' → logprob: -7.218841075897217
    7. ']' → logprob: -7.968841075897217
    8. '.setdefault' → logprob: -7.968841075897217
    9. ').' → logprob: -8.343841552734375
    10. ',Z' → logprob: -8.968841552734375

Token 768: 'ZZ' (ID: 47604)
  Prédit: 'ZZ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ZZ' → logprob: -0.0034205703996121883
    2. 'zzz' → logprob: -5.753420352935791
    3. 'Z' → logprob: -8.50342082977295
    4. 'zz' → logprob: -10.87842082977295
    5. 'xxx' → logprob: -12.12842082977295
    6. 'XXX' → logprob: -12.25342082977295
    7. 'z' → logprob: -12.62842082977295
    8. 'SZ' → logprob: -13.25342082977295
    9. '           ' → logprob: -13.75342082977295
    10. '```' → logprob: -14.37842082977295

Token 769: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -9.65101717156358e-05
    2. 'ZZ' → logprob: -9.250096321105957
    3. 'z' → logprob: -15.875096321105957
    4. ' Z' → logprob: -16.625097274780273
    5. 'З' → logprob: -17.125097274780273
    6. '
' → logprob: -17.250097274780273
    7. '```' → logprob: -17.750097274780273
    8. '[' → logprob: -17.875097274780273
    9. '_Z' → logprob: -18.250097274780273
    10. 'zz' → logprob: -18.500097274780273

Token 770: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2554360032081604
    2. '*' → logprob: -2.3804359436035156
    3. ']*' → logprob: -2.6304359436035156
    4. '+' → logprob: -3.0054359436035156
    5. ' *' → logprob: -4.755435943603516
    6. ']+' → logprob: -6.880435943603516
    7. ' +' → logprob: -7.505435943603516
    8. ']+=' → logprob: -7.880435943603516
    9. '           ' → logprob: -8.380435943603516
    10. ']
' → logprob: -9.130435943603516

Token 771: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.2723104848410003e-05
    2. '               ' → logprob: -11.625022888183594
    3. '                   ' → logprob: -11.875022888183594
    4. '       ' → logprob: -13.250022888183594
    5. '<|end|>' → logprob: -13.375022888183594
    6. '		' → logprob: -13.750022888183594
    7. '	       ' → logprob: -14.750022888183594
    8. '          ' → logprob: -15.125022888183594
    9. '<|end|>' → logprob: -15.500022888183594
    10. '```' → logprob: -15.625022888183594

Token 772: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18036630749702454
    2. 'ANS' → logprob: -1.8053662776947021
    3. '   ' → logprob: -7.805366516113281
    4. '       ' → logprob: -8.680366516113281
    5. ' AN' → logprob: -11.555366516113281
    6. '               ' → logprob: -11.680366516113281
    7. 'Ans' → logprob: -12.430366516113281
    8. 'ans' → logprob: -12.680366516113281
    9. 'AN' → logprob: -12.680366516113281
    10. '```' → logprob: -12.680366516113281

Token 773: ' Sz' (ID: 42548)
  Prédit: 'Sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sz' → logprob: -0.6391668319702148
    2. 'Sy' → logprob: -1.2641668319702148
    3. 'Z' → logprob: -2.764166831970215
    4. 'S' → logprob: -3.014166831970215
    5. ' Sz' → logprob: -4.139166831970215
    6. 'sz' → logprob: -4.389166831970215
    7. 'not' → logprob: -4.639166831970215
    8. 'ZZ' → logprob: -5.264166831970215
    9. ' Sy' → logprob: -5.264166831970215
    10. 'SZ' → logprob: -5.514166831970215

Token 774: ':
' (ID: 734)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1772996038198471
    2. '+' → logprob: -2.8022994995117188
    3. '+=' → logprob: -2.9272994995117188
    4. ':' → logprob: -3.8022994995117188
    5. ' !=' → logprob: -4.552299499511719
    6. '==' → logprob: -5.052299499511719
    7. '>' → logprob: -5.177299499511719
    8. ' +=' → logprob: -7.052299499511719
    9. '+:' → logprob: -7.177299499511719
    10. ':
' → logprob: -7.677299499511719

Token 775: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01040010154247284
    2. '           ' → logprob: -4.635400295257568
    3. '                   ' → logprob: -7.885400295257568
    4. '<|end|>' → logprob: -8.88539981842041
    5. '                       ' → logprob: -10.26039981842041
    6. '              ' → logprob: -10.88539981842041
    7. '                               ' → logprob: -11.01039981842041
    8. '                           ' → logprob: -11.13539981842041
    9. '<|end|>' → logprob: -11.51039981842041
    10. '       ' → logprob: -11.76039981842041

Token 776: ' AN' (ID: 3473)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7001718282699585
    2. 'ANS' → logprob: -0.7001718282699585
    3. '                   ' → logprob: -5.825171947479248
    4. ' AN' → logprob: -6.325171947479248
    5. '           ' → logprob: -6.450171947479248
    6. '   ' → logprob: -8.45017147064209
    7. '                       ' → logprob: -8.95017147064209
    8. 'AN' (adapté à ' AN') → logprob: -9.07517147064209
    9. '       ' → logprob: -9.32517147064209
    10. '              ' → logprob: -10.57517147064209

Token 777: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.935296834039036e-06
    2. 'SZ' → logprob: -13.62500286102295
    3. '+=' → logprob: -14.75000286102295
    4. '=' → logprob: -15.00000286102295
    5. ' S' → logprob: -15.25000286102295
    6. '```' → logprob: -15.50000286102295
    7. 'Sz' → logprob: -15.62500286102295
    8. '           ' → logprob: -16.125003814697266
    9. 'SOR' → logprob: -16.625003814697266
    10. 'swer' → logprob: -17.250003814697266

Token 778: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47648853063583374
    2. '+=' → logprob: -0.9764885306358337
    3. '=' → logprob: -6.3514885902404785
    4. ' =' → logprob: -7.6014885902404785
    5. '   ' → logprob: -9.72648811340332
    6. ' ^=' → logprob: -10.85148811340332
    7. '```' → logprob: -11.10148811340332
    8. ' ' → logprob: -11.35148811340332
    9. '    ' → logprob: -11.47648811340332
    10. '+' → logprob: -11.60148811340332

Token 779: ' S' (ID: 336)
  Prédit: 'Sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sy' → logprob: -0.07639926671981812
    2. ' Sy' → logprob: -2.951399326324463
    3. 'Sz' → logprob: -4.076399326324463
    4. ' Sz' → logprob: -6.326399326324463
    5. '(S' → logprob: -6.451399326324463
    6. 'S' → logprob: -7.451399326324463
    7. 'Z' → logprob: -9.076398849487305
    8. '(' → logprob: -10.201398849487305
    9. ' ' → logprob: -10.326398849487305
    10. ' (' → logprob: -10.701398849487305

Token 780: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.250771164894104
    2. 'z' → logprob: -1.625771164894104
    3. 'x' → logprob: -3.7507710456848145
    4. 'Sy' → logprob: -6.6257710456848145
    5. 'zy' → logprob: -8.750771522521973
    6. 'yz' → logprob: -11.625771522521973
    7. '(S' → logprob: -11.750771522521973
    8. 'Sz' → logprob: -11.875771522521973
    9. 'Z' → logprob: -12.250771522521973
    10. '[' → logprob: -12.500771522521973

Token 781: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.038042064756155014
    2. ' *' → logprob: -3.2880420684814453
    3. '**' → logprob: -16.163042068481445
    4. '+' → logprob: -16.163042068481445
    5. '*=' → logprob: -16.538042068481445
    6. '           ' → logprob: -16.663042068481445
    7. '*
' → logprob: -16.913042068481445
    8. '   ' → logprob: -16.913042068481445
    9. '*(' → logprob: -17.163042068481445
    10. ' ' → logprob: -17.288042068481445

Token 782: ' Sy' (ID: 25254)
  Prédit: 'Sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sy' → logprob: -0.0001239196863025427
    2. 'Sz' → logprob: -9.000123977661133
    3. ' Sy' → logprob: -14.750123977661133
    4. 'Sym' → logprob: -16.750123977661133
    5. '           ' → logprob: -20.125123977661133
    6. 'sy' → logprob: -20.125123977661133
    7. 'S' → logprob: -20.750123977661133
    8. 'Cy' → logprob: -21.375123977661133
    9. '       ' → logprob: -21.375123977661133
    10. '_sy' → logprob: -21.875123977661133

Token 783: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019465819001197815
    2. '
' → logprob: -4.394465923309326
    3. '    
' → logprob: -5.644465923309326
    4. '<|end|>' → logprob: -6.519465923309326
    5. '<|end|>' → logprob: -7.769465923309326
    6. '           ' → logprob: -8.019465446472168
    7. 'return' → logprob: -8.519465446472168
    8. ' return' → logprob: -8.769465446472168
    9. '  
' → logprob: -8.894465446472168
    10. '       ' → logprob: -9.144465446472168

Token 784: ' Sz' (ID: 42548)
  Prédit: 'Sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sz' → logprob: -2.935296834039036e-06
    2. ' Sz' → logprob: -13.87500286102295
    3. 'Z' → logprob: -14.12500286102295
    4. 'sz' → logprob: -14.37500286102295
    5. 'SZ' → logprob: -14.50000286102295
    6. '_sz' → logprob: -17.500003814697266
    7. 'Sy' → logprob: -18.000003814697266
    8. 'Zn' → logprob: -18.250003814697266
    9. 'Az' → logprob: -18.875003814697266
    10. '```' → logprob: -19.000003814697266

Token 785: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004623087588697672
    2. 'return' → logprob: -6.129622936248779
    3. '
' → logprob: -6.629622936248779
    4. '       ' → logprob: -8.254623413085938
    5. ' return' → logprob: -8.254623413085938
    6. '<|end|>' → logprob: -8.379623413085938
    7. '	return' → logprob: -8.504623413085938
    8. '    
' → logprob: -9.504623413085938
    9. '<|end|>' → logprob: -10.629623413085938
    10. '```' → logprob: -11.004623413085938

Token 786: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016479224432259798
    2. 'return' → logprob: -7.00164794921875
    3. '	return' → logprob: -8.12664794921875
    4. ' return' → logprob: -8.62664794921875
    5. '<|end|>' → logprob: -9.00164794921875
    6. '       ' → logprob: -10.00164794921875
    7. '```' → logprob: -10.37664794921875
    8. '    
' → logprob: -10.87664794921875
    9. '
' → logprob: -10.87664794921875
    10. '<|end|>' → logprob: -12.25164794921875

Token 787: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5766518115997314
    2. '   ' → logprob: -0.8266518115997314
    3. ' return' → logprob: -7.576651573181152
    4. '	return' → logprob: -8.951651573181152
    5. 'def' → logprob: -10.076651573181152
    6. '```' → logprob: -11.451651573181152
    7. '
' → logprob: -11.826651573181152
    8. '    
' → logprob: -13.076651573181152
    9. '<|end|>' → logprob: -13.451651573181152
    10. 'print' → logprob: -13.826651573181152

Token 788: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.0007160080131143332
    2. ' AN' → logprob: -7.250716209411621
    3. 'AN' → logprob: -12.875716209411621
    4. 'Ans' → logprob: -13.375716209411621
    5. 'ANSWER' → logprob: -13.500716209411621
    6. 'int' → logprob: -15.875716209411621
    7. 'str' → logprob: -16.125715255737305
    8. 'ANTS' → logprob: -16.375715255737305
    9. 'ANK' → logprob: -16.750715255737305
    10. 'ans' → logprob: -16.875715255737305

Token 789: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: 0.0
    2. ' S' → logprob: -17.5
    3. '(S' → logprob: -18.125
    4. ''S' → logprob: -18.5
    5. '*S' → logprob: -18.75
    6. '[S' → logprob: -19.375
    7. '[' → logprob: -19.75
    8. 'SOR' → logprob: -19.875
    9. '(' → logprob: -20.0
    10. '```' → logprob: -20.125

Token 790: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23759768903255463
    2. 'MM' → logprob: -1.8625977039337158
    3. '<|end|>' → logprob: -3.987597703933716
    4. 'def' → logprob: -4.487597465515137
    5. 'g' → logprob: -4.987597465515137
    6. 'print' → logprob: -5.737597465515137
    7. 'LL' → logprob: -5.737597465515137
    8. ')' → logprob: -6.362597465515137
    9. 'return' → logprob: -6.487597465515137
    10. '```' → logprob: -6.487597465515137

Token 791: 'MM' (ID: 12365)
  Prédit: 'MM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MM' → logprob: -0.2937445640563965
    2. '#' → logprob: -1.4187445640563965
    3. 'LL' → logprob: -5.2937445640563965
    4. 'MMM' → logprob: -6.2937445640563965
    5. 'g' → logprob: -6.5437445640563965
    6. 'print' → logprob: -6.6687445640563965
    7. 'def' → logprob: -6.9187445640563965
    8. '<|end|>' → logprob: -8.293745040893555
    9. '...' → logprob: -8.543745040893555
    10. '```' → logprob: -9.043745040893555

Token 792: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868813216686249
    2. '=' → logprob: -1.1368813514709473
    3. ',' → logprob: -11.636880874633789
    4. ':' → logprob: -14.136880874633789
    5. ' ' → logprob: -14.886880874633789
    6. '<|end|>' → logprob: -15.636880874633789
    7. '=
' → logprob: -16.26188087463379
    8. '=int' → logprob: -16.88688087463379
    9. ' =)' → logprob: -17.01188087463379
    10. ' =
' → logprob: -17.01188087463379

Token 793: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12956134974956512
    2. '100' → logprob: -2.254561424255371
    3. '998' → logprob: -4.129561424255371
    4. '1' → logprob: -8.379561424255371
    5. 'int' → logprob: -8.629561424255371
    6. '999' → logprob: -10.254561424255371
    7. '2' → logprob: -11.254561424255371
    8. '123' → logprob: -11.379561424255371
    9. '(' → logprob: -11.879561424255371
    10. '101' → logprob: -12.254561424255371

Token 794: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.23304583132266998
    2. '100' → logprob: -1.8580458164215088
    3. '998' → logprob: -2.983045816421509
    4. '1' → logprob: -7.608046054840088
    5. 'int' → logprob: -7.858046054840088
    6. '999' → logprob: -8.85804557800293
    7. '123' → logprob: -10.23304557800293
    8. '(' → logprob: -10.23304557800293
    9. '2' → logprob: -10.60804557800293
    10. '101' → logprob: -11.23304557800293

Token 795: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -3.7385154428193346e-05
    2. '447' → logprob: -11.25003719329834
    3. '444' → logprob: -11.75003719329834
    4. '_' → logprob: -12.00003719329834
    5. '247' → logprob: -12.75003719329834
    6. '457' → logprob: -13.62503719329834
    7. '243' → logprob: -13.87503719329834
    8. '7' → logprob: -14.25003719329834
    9. '727' → logprob: -14.37503719329834
    10. '647' → logprob: -14.50003719329834

Token 796: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -9.043078898685053e-05
    2. '853' → logprob: -9.625090599060059
    3. '357' → logprob: -11.750090599060059
    4. '857' → logprob: -12.500090599060059
    5. '433' → logprob: -12.750090599060059
    6. '533' → logprob: -12.875090599060059
    7. '```' → logprob: -13.000090599060059
    8. '53' → logprob: -13.625090599060059
    9. '553' → logprob: -13.750090599060059
    10. '457' → logprob: -14.000090599060059

Token 797: '
' (ID: 198)
  Prédit: 'BBB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'BBB' → logprob: -0.02133479341864586
    2. '#' → logprob: -4.521334648132324
    3. 'LL' → logprob: -5.396334648132324
    4. '<|end|>' → logprob: -5.521334648132324
    5. 'B' → logprob: -8.021334648132324
    6. ' BBB' → logprob: -8.146334648132324
    7. 'def' → logprob: -8.521334648132324
    8. 'BBBB' → logprob: -8.771334648132324
    9. 'BLL' → logprob: -9.271334648132324
    10. 'AAA' → logprob: -9.396334648132324

Token 798: 'BBB' (ID: 133504)
  Prédit: 'BBB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BBB' → logprob: -0.010889589786529541
    2. 'if' → logprob: -4.885889530181885
    3. 'LL' → logprob: -6.135889530181885
    4. '#' → logprob: -7.760889530181885
    5. 'def' → logprob: -8.260890007019043
    6. 'import' → logprob: -9.635890007019043
    7. ' BBB' → logprob: -9.885890007019043
    8. 'BBBB' → logprob: -10.135890007019043
    9. 'AAA' → logprob: -10.135890007019043
    10. '```' → logprob: -10.260890007019043

Token 799: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42871424555778503
    2. '=' → logprob: -1.0537142753601074
    3. ',' → logprob: -11.30371379852295
    4. ' ' → logprob: -14.17871379852295
    5. '  ' → logprob: -16.053714752197266
    6. ' ' → logprob: -17.178714752197266
    7. '﻿' → logprob: -17.366214752197266
    8. '=int' → logprob: -17.428714752197266
    9. 'b' → logprob: -17.491214752197266
    10. '3' → logprob: -17.491214752197266

Token 800: ' Funk' (ID: 36107)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11324818432331085
    2. '2' → logprob: -2.988248109817505
    3. 'F' → logprob: -3.363248109817505
    4. '233' → logprob: -5.238248348236084
    5. '10' → logprob: -5.863248348236084
    6. '5' → logprob: -6.238248348236084
    7. '7' → logprob: -6.238248348236084
    8. '133' → logprob: -6.488248348236084
    9. '4' → logprob: -6.988248348236084
    10. '100' → logprob: -7.113248348236084

Token 801: 'y' (ID: 88)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00010282796574756503
    2. 'y' → logprob: -9.375102996826172
    3. 'ic' → logprob: -11.500102996826172
    4. '(Mod' → logprob: -13.000102996826172
    5. 'ig' → logprob: -13.750102996826172
    6. '_Mod' → logprob: -13.875102996826172
    7. 'ix' → logprob: -14.500102996826172
    8. 'Mo' → logprob: -14.875102996826172
    9. ' Mod' → logprob: -14.875102996826172
    10. 'igy' → logprob: -15.000102996826172

Token 802: 'Mod' (ID: 4721)
  Prédit: 'Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: 0.0
    2. 'mod' → logprob: -17.125
    3. '(Mod' → logprob: -18.5
    4. ' Mod' → logprob: -18.75
    5. '_mod' → logprob: -19.625
    6. '_Mod' → logprob: -20.0
    7. '```' → logprob: -20.375
    8. 'MOD' → logprob: -21.125
    9. '`' → logprob: -21.875
    10. 'Mods' → logprob: -22.25

Token 803: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006705781444907188
    2. '3' → logprob: -5.1317057609558105
    3. '2' → logprob: -8.131706237792969
    4. '7' → logprob: -8.756706237792969
    5. '31' → logprob: -9.881706237792969
    6. '(B' → logprob: -9.881706237792969
    7. '17' → logprob: -10.381706237792969
    8. '13' → logprob: -10.756706237792969
    9. '33' → logprob: -11.256706237792969
    10. '10' → logprob: -11.381706237792969

Token 804: '10' (ID: 702)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11424891650676727
    2. '2' → logprob: -2.2392489910125732
    3. '233' → logprob: -7.989248752593994
    4. '10' → logprob: -8.364249229431152
    5. '31' → logprob: -8.614249229431152
    6. '998' → logprob: -8.864249229431152
    7. '133' → logprob: -9.114249229431152
    8. '100' → logprob: -9.364249229431152
    9. '7' → logprob: -10.239249229431152
    10. '999' → logprob: -10.489249229431152

Token 805: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08368661999702454
    2. '**' → logprob: -2.583686590194702
    3. '3' → logprob: -5.708686828613281
    4. '7' → logprob: -7.458686828613281
    5. '**)' → logprob: -8.208686828613281
    6. '0' → logprob: -8.708686828613281
    7. ')**' → logprob: -9.458686828613281
    8. '1' → logprob: -9.583686828613281
    9. '5' → logprob: -9.958686828613281
    10. '9' → logprob: -10.333686828613281

Token 806: ' **' (ID: 6240)
  Prédit: 'LL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LL' → logprob: -0.22532068192958832
    2. '#' → logprob: -2.72532057762146
    3. 'if' → logprob: -2.85032057762146
    4. 'L' → logprob: -3.72532057762146
    5. '<|end|>' → logprob: -4.225320816040039
    6. 'E' → logprob: -4.975320816040039
    7. '```' → logprob: -5.225320816040039
    8. 'def' → logprob: -5.475320816040039
    9. 'for' → logprob: -5.475320816040039
    10. 'LLLL' → logprob: -5.725320816040039

Token 807: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.21923716366291046
    2. '6' → logprob: -2.8442370891571045
    3. '18' → logprob: -3.3442370891571045
    4. '12' → logprob: -3.9692370891571045
    5. '7' → logprob: -4.094237327575684
    6. '10' → logprob: -4.219237327575684
    7. '8' → logprob: -4.469237327575684
    8. '15' → logprob: -4.469237327575684
    9. 'LL' → logprob: -4.469237327575684
    10. '(' → logprob: -5.469237327575684

Token 808: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.25836312770843506
    2. '7' → logprob: -3.0083632469177246
    3. '6' → logprob: -3.1333632469177246
    4. '8' → logprob: -3.3833632469177246
    5. '18' → logprob: -3.6333632469177246
    6. '12' → logprob: -3.8833632469177246
    7. '10' → logprob: -4.133363246917725
    8. '11' → logprob: -4.633363246917725
    9. '15' → logprob: -4.883363246917725
    10. '13' → logprob: -5.258363246917725

Token 809: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.265467882156372
    2. 'g' → logprob: -1.890467882156372
    3. 'LL' → logprob: -1.890467882156372
    4. '...' → logprob: -2.515467882156372
    5. 'for' → logprob: -2.515467882156372
    6. 'if' → logprob: -2.890467882156372
    7. '```' → logprob: -3.015467882156372
    8. '<|end|>' → logprob: -3.140467882156372
    9. ')' → logprob: -4.015467643737793
    10. 'print' → logprob: -4.015467643737793

Token 810: 'LL' (ID: 7454)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.809842050075531
    2. 'if' → logprob: -0.934842050075531
    3. 'g' → logprob: -2.934842109680176
    4. '```' → logprob: -3.434842109680176
    5. 'LL' → logprob: -3.684842109680176
    6. 'print' → logprob: -3.934842109680176
    7. '...' → logprob: -4.684842109680176
    8. '<|end|>' → logprob: -4.934842109680176
    9. 'for' → logprob: -5.934842109680176
    10. 'def' → logprob: -6.059842109680176

Token 811: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -4.096126576769166e-05
    2. '=' → logprob: -10.250041007995605
    3. ' =' → logprob: -12.125041007995605
    4. '_' → logprob: -18.50004005432129
    5. '```' → logprob: -19.12504005432129
    6. '1' → logprob: -19.50004005432129
    7. '=L' → logprob: -19.62504005432129
    8. ' L' → logprob: -19.75004005432129
    9. '0' → logprob: -20.12504005432129
    10. ' ' → logprob: -20.25004005432129

Token 812: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519760727882385
    2. '=' → logprob: -1.5019760131835938
    3. ',' → logprob: -10.251976013183594
    4. '<|end|>' → logprob: -11.626976013183594
    5. '0' → logprob: -14.251976013183594
    6. ' ' → logprob: -14.501976013183594
    7. ':' → logprob: -15.001976013183594
    8. ' +=' → logprob: -15.751976013183594
    9. '=int' → logprob: -15.751976013183594
    10. ' =
' → logprob: -16.001976013183594

Token 813: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029479337856173515
    2. ' int' → logprob: -3.7794792652130127
    3. '0' → logprob: -6.529479503631592
    4. '99' → logprob: -7.154479503631592
    5. '100' → logprob: -7.279479503631592
    6. '999' → logprob: -7.904479503631592
    7. '10' → logprob: -7.904479503631592
    8. ' ' → logprob: -7.904479503631592
    9. '20' → logprob: -9.029479026794434
    10. '50' → logprob: -9.029479026794434

Token 814: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.0190158449113369
    2. '(input' → logprob: -4.019015789031982
    3. '()' → logprob: -7.394015789031982
    4. '(s' → logprob: -9.01901626586914
    5. '(' → logprob: -10.01901626586914
    6. 'input' → logprob: -10.14401626586914
    7. 'g' → logprob: -10.39401626586914
    8. '(raw' → logprob: -12.51901626586914
    9. '().' → logprob: -13.39401626586914
    10. '(f' → logprob: -13.76901626586914

Token 815: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.04501601308584213
    2. 'input' → logprob: -4.045015811920166
    3. '())' → logprob: -4.545015811920166
    4. '(g' → logprob: -4.670015811920166
    5. '(input' → logprob: -6.045015811920166
    6. 'g' → logprob: -7.545015811920166
    7. '()' → logprob: -7.670015811920166
    8. '(' → logprob: -7.920015811920166
    9. '().' → logprob: -7.920015811920166
    10. '())
' → logprob: -7.920015811920166

Token 816: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001026258571073413
    2. '()' → logprob: -7.251026153564453
    3. '())
' → logprob: -8.251026153564453
    4. ')' → logprob: -9.876026153564453
    5. ' ())' → logprob: -14.126026153564453
    6. '()
' → logprob: -14.251026153564453
    7. '();)' → logprob: -14.501026153564453
    8. '())

' → logprob: -14.626026153564453
    9. '().' → logprob: -15.001026153564453
    10. '(' → logprob: -15.126026153564453

Token 817: 'ED' (ID: 2252)
  Prédit: 'EDGE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EDGE' → logprob: -0.12251953780651093
    2. 'E' → logprob: -2.3725194931030273
    3. 'ED' → logprob: -4.122519493103027
    4. 'edges' → logprob: -5.747519493103027
    5. 'EEE' → logprob: -7.122519493103027
    6. 'edge' → logprob: -7.747519493103027
    7. 'G' → logprob: -8.497519493103027
    8. 'if' → logprob: -8.497519493103027
    9. 'EG' → logprob: -8.997519493103027
    10. 'EE' → logprob: -8.997519493103027

Token 818: 'GX' (ID: 150388)
  Prédit: 'GE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'GE' → logprob: -4.954393079970032e-05
    2. 'GES' → logprob: -10.625049591064453
    3. 'G' → logprob: -11.000049591064453
    4. ' =' → logprob: -12.875049591064453
    5. 'E' → logprob: -13.250049591064453
    6. '_GE' → logprob: -13.625049591064453
    7. '=' → logprob: -15.000049591064453
    8. 'Ge' → logprob: -15.000049591064453
    9. 'CE' → logprob: -15.250049591064453
    10. 'ge' → logprob: -15.375049591064453

Token 819: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5857048034667969
    2. ' =' → logprob: -0.8357048034667969
    3. 'E' → logprob: -4.710704803466797
    4. ',' → logprob: -8.710704803466797
    5. 's' → logprob: -9.210704803466797
    6. 'S' → logprob: -9.210704803466797
    7. '_' → logprob: -9.335704803466797
    8. 'ES' → logprob: -9.335704803466797
    9. 'T' → logprob: -9.835704803466797
    10. 'e' → logprob: -10.835704803466797

Token 820: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6846964359283447
    2. '[e' → logprob: -1.3096964359283447
    3. 'e' → logprob: -1.5596964359283447
    4. 'dd' → logprob: -4.934696197509766
    5. '[{' → logprob: -6.059696197509766
    6. ' [' → logprob: -6.434696197509766
    7. '{}' → logprob: -6.684696197509766
    8. '{' → logprob: -6.684696197509766
    9. '[]
' → logprob: -7.684696197509766
    10. '[]' → logprob: -7.809696197509766

Token 821: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.23402437567710876
    2. 'dd' → logprob: -2.1090242862701416
    3. '{}' → logprob: -2.4840242862701416
    4. 'default' → logprob: -5.984024524688721
    5. '{' → logprob: -7.359024524688721
    6. 'ed' → logprob: -8.109024047851562
    7. '{},' → logprob: -9.484024047851562
    8. 'dict' → logprob: -9.609024047851562
    9. ' e' → logprob: -9.984024047851562
    10. '{})' → logprob: -10.109024047851562

Token 822: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -0.0008513207430951297
    2. 'dd' → logprob: -7.500851154327393
    3. 'reader' → logprob: -9.37585163116455
    4. 'd' → logprob: -9.62585163116455
    5. 'e' → logprob: -10.50085163116455
    6. 'r' → logprob: -10.50085163116455
    7. 'dict' → logprob: -11.12585163116455
    8. 'eder' → logprob: -11.25085163116455
    9. 'Reader' → logprob: -11.87585163116455
    10. 'ed' → logprob: -11.87585163116455

Token 823: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.567575034452602e-05
    2. '()]' → logprob: -9.50009536743164
    3. '(),' → logprob: -11.12509536743164
    4. '()
' → logprob: -12.87509536743164
    5. '(),
' → logprob: -13.50009536743164
    6. '()]
' → logprob: -14.87509536743164
    7. '()],' → logprob: -15.00009536743164
    8. '())' → logprob: -15.37509536743164
    9. '()"' → logprob: -15.37509536743164
    10. ' ()' → logprob: -15.87509536743164

Token 824: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2801293134689331
    2. 'for' → logprob: -2.0301294326782227
    3. '()' → logprob: -2.9051294326782227
    4. ' for' → logprob: -3.0301294326782227
    5. ']' → logprob: -5.780129432678223
    6. '()]' → logprob: -6.030129432678223
    7. ',
' → logprob: -6.405129432678223
    8. '(),' → logprob: -6.530129432678223
    9. ')' → logprob: -7.655129432678223
    10. '   ' → logprob: -8.155129432678223

Token 825: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00333420280367136
    2. ' range' → logprob: -6.378334045410156
    3. ' _' → logprob: -6.503334045410156
    4. 'range' → logprob: -9.128334045410156
    5. '_range' → logprob: -11.003334045410156
    6. '_i' → logprob: -12.878334045410156
    7. 'i' → logprob: -13.628334045410156
    8. '_=' → logprob: -13.878334045410156
    9. ' in' → logprob: -14.003334045410156
    10. ' i' → logprob: -14.878334045410156

Token 826: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2828782796859741
    2. ' in' → logprob: -1.5328782796859741
    3. '_' → logprob: -3.6578783988952637
    4. 'range' → logprob: -5.407878398895264
    5. ' range' → logprob: -8.657877922058105
    6. '3' → logprob: -11.282877922058105
    7. ' ' → logprob: -12.532877922058105
    8. ' _' → logprob: -12.532877922058105
    9. '
' → logprob: -13.032877922058105
    10. '```' → logprob: -13.157877922058105

Token 827: ' '--' (ID: 40401)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026169343618676066
    2. ' range' → logprob: -8.250261306762695
    3. '_' → logprob: -15.000261306762695
    4. '[' → logprob: -17.250261306762695
    5. '(range' → logprob: -18.000261306762695
    6. '	range' → logprob: -18.375261306762695
    7. '(' → logprob: -19.500261306762695
    8. '_range' → logprob: -19.500261306762695
    9. '___' → logprob: -20.125261306762695
    10. '0' → logprob: -20.250261306762695

Token 828: 'x' (ID: 87)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005526627413928509
    2. 'range' → logprob: -6.505526542663574
    3. '---' → logprob: -7.005526542663574
    4. '___' → logprob: -7.130526542663574
    5. '...' → logprob: -7.880526542663574
    6. '2' → logprob: -8.005526542663574
    7. ' ' → logprob: -8.505526542663574
    8. '123' → logprob: -8.755526542663574
    9. ''''' → logprob: -8.755526542663574
    10. ' range' → logprob: -8.755526542663574

Token 829: '']

' (ID: 36979)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.05243813246488571
    2. '2' → logprob: -3.5524380207061768
    3. '4' → logprob: -5.802438259124756
    4. '--' → logprob: -5.927438259124756
    5. '23' → logprob: -6.052438259124756
    6. ''' → logprob: -6.177438259124756
    7. 'range' → logprob: -6.177438259124756
    8. '_' → logprob: -6.427438259124756
    9. ' ' → logprob: -6.427438259124756
    10. ' range' → logprob: -6.552438259124756

Token 830: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006638633087277412
    2. 'ANS' → logprob: -5.506638526916504
    3. 'RES' → logprob: -7.131638526916504
    4. 'result' → logprob: -7.881638526916504
    5. 'res' → logprob: -8.381638526916504
    6. 'PR' → logprob: -8.631638526916504
    7. 'for' → logprob: -8.631638526916504
    8. 'S' → logprob: -8.881638526916504
    9. 'R' → logprob: -8.881638526916504
    10. 'RR' → logprob: -9.006638526916504

Token 831: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0005601812736131251
    2. '(' → logprob: -7.500560283660889
    3. '((' → logprob: -13.37555980682373
    4. '(f' → logprob: -13.50055980682373
    5. '(
' → logprob: -13.87555980682373
    6. '()' → logprob: -14.25055980682373
    7. '(F' → logprob: -14.37555980682373
    8. '(str' → logprob: -14.50055980682373
    9. '('' → logprob: -14.62555980682373
    10. 'S' → logprob: -15.00055980682373

Token 832: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. 'OL' → logprob: -13.875001907348633
    3. 'O' → logprob: -14.500001907348633
    4. '(' → logprob: -15.375001907348633
    5. 'S' → logprob: -16.750001907348633
    6. '()' → logprob: -17.875001907348633
    7. ')' → logprob: -18.000001907348633
    8. '(S' → logprob: -18.500001907348633
    9. '۰' → logprob: -19.250001907348633
    10. 'OLVE' → logprob: -19.375001907348633

Token 833: 'LV' (ID: 50866)
  Prédit: 'VR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VR' → logprob: -1.0270071029663086
    2. 'LV' → logprob: -1.0270071029663086
    3. 'L' → logprob: -1.7770071029663086
    4. 'V' → logprob: -2.4020071029663086
    5. '3' → logprob: -4.652007102966309
    6. 'LR' → logprob: -5.402007102966309
    7. '(S' → logprob: -6.027007102966309
    8. 'S' → logprob: -6.402007102966309
    9. '(' → logprob: -6.402007102966309
    10. 'SV' → logprob: -6.652007102966309

Token 834: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0005904443096369505
    2. '(' → logprob: -7.5005903244018555
    3. 'R' → logprob: -10.750590324401855
    4. 'S' → logprob: -11.750590324401855
    5. 'ER' → logprob: -12.750590324401855
    6. '(S' → logprob: -13.000590324401855
    7. '(R' → logprob: -14.250590324401855
    8. ''' → logprob: -15.000590324401855
    9. 'V' → logprob: -15.125590324401855
    10. ' (' → logprob: -15.500590324401855

Token 835: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.875075340270996
    3. '(R' → logprob: -11.000075340270996
    4. 'RR' → logprob: -13.375075340270996
    5. 'S' → logprob: -13.500075340270996
    6. '3' → logprob: -13.875075340270996
    7. ' R' → logprob: -14.250075340270996
    8. 'ER' → logprob: -14.750075340270996
    9. 'RS' → logprob: -15.000075340270996
    10. ')' → logprob: -15.500075340270996

Token 836: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3425219549390022e-05
    2. '((' → logprob: -12.12501335144043
    3. ' (' → logprob: -13.12501335144043
    4. '(ll' → logprob: -13.12501335144043
    5. ')(' → logprob: -13.37501335144043
    6. '(L' → logprob: -13.87501335144043
    7. '(*' → logprob: -14.87501335144043
    8. '(
' → logprob: -15.12501335144043
    9. '(ed' → logprob: -15.62501335144043
    10. '([' → logprob: -16.50001335144043

Token 837: 'LL' (ID: 7454)
  Prédit: 'LL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LL' → logprob: -0.0019412499386817217
    2. '(' → logprob: -6.251941204071045
    3. 'LLLL' → logprob: -11.751941680908203
    4. ')' → logprob: -12.501941680908203
    5. '```' → logprob: -14.376941680908203
    6. 'L' → logprob: -15.751941680908203
    7. 'lll' → logprob: -16.251941680908203
    8. ')(' → logprob: -16.501941680908203
    9. ' LL' → logprob: -17.126941680908203
    10. 'll' → logprob: -17.626941680908203

Token 838: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5690289735794067
    2. 'X' → logprob: -1.1940289735794067
    3. '(' → logprob: -2.569028854370117
    4. 'G' → logprob: -3.194028854370117
    5. '3' → logprob: -5.444028854370117
    6. ')' → logprob: -6.569028854370117
    7. 'LX' → logprob: -6.569028854370117
    8. ',' → logprob: -6.944028854370117
    9. ')(' → logprob: -7.069028854370117
    10. 'LL' → logprob: -7.194028854370117

Token 839: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2664456789934775e-06
    2. ' ,' → logprob: -14.250000953674316
    3. '(' → logprob: -14.875000953674316
    4. ',
' → logprob: -16.250001907348633
    5. ',[' → logprob: -17.375001907348633
    6. '(),' → logprob: -18.000001907348633
    7. '，' → logprob: -18.250001907348633
    8. '[' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '',' → logprob: -18.750001907348633

Token 840: ' ED' (ID: 36313)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -1.4021237802808173e-05
    2. ' ED' → logprob: -11.500014305114746
    3. '[' → logprob: -14.000014305114746
    4. 'ed' → logprob: -14.375014305114746
    5. ')' → logprob: -14.625014305114746
    6. '(' → logprob: -15.000014305114746
    7. '   ' → logprob: -15.000014305114746
    8. '_ED' → logprob: -15.375014305114746
    9. 'EDGE' → logprob: -15.750014305114746
    10. '
' → logprob: -16.12501335144043

Token 841: 'GX' (ID: 150388)
  Prédit: 'GX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GX' → logprob: -3.833878508885391e-05
    2. 'X' → logprob: -10.375038146972656
    3. 'G' → logprob: -12.000038146972656
    4. ' GX' → logprob: -15.000038146972656
    5. '
' → logprob: -15.500038146972656
    6. 'SX' → logprob: -15.750038146972656
    7. 'YX' → logprob: -16.750038146972656
    8. 'VX' → logprob: -17.375038146972656
    9. '[' → logprob: -17.500038146972656
    10. '

' → logprob: -17.625038146972656

Token 842: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00043734462815336883
    2. ')' → logprob: -7.750437259674072
    3. ')))' → logprob: -12.25043773651123
    4. '))
' → logprob: -13.62543773651123
    5. '()))' → logprob: -15.37543773651123
    6. '])' → logprob: -15.62543773651123
    7. ',' → logprob: -16.250436782836914
    8. ' ))' → logprob: -16.875436782836914
    9. '})' → logprob: -17.500436782836914
    10. ']))' → logprob: -17.750436782836914


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 840
Tokens correctement prédits (1ère position, stricte): 331
Tokens correctement prédits (1ère position, avec adaptation): 344
Tokens correctement prédits (top 10): 647
Précision stricte (1ère position): 39.40%
Précision adaptée (1ère position): 40.95%
Précision (top 10): 77.02%
================================================================================
