================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import lru_cache

mod = 10**9 + 7

N, K = map(int, input().split())

@lru_cache(maxsize=None)
def dp(i, j, k):
    if k < 0 or k > K or j < 0 or j > N or i > N:
        return 0
    if i == 0 and j == 0 and k == 0:
        return 1
    if i == 0:
        return 0

    res = 0
    # Ouvrir une nouvelle paire
    res += dp(i-1, j-1, k - 2*(j-1) - 2) if j >= 1 and k >= 2*(j-1) + 2 else 0
    # Créer une paire individuelle
    res += dp(i-1, j, k - 2*j) if k >= 2*j else 0
    # Ajouter à une paire existante
    if j + 1 <= N and k >= 2*(j+1):
        res += (j+1) * dp(i-1, j+1, k - 2*(j+1))
        res += (j+1) * dp(i-1, j+1, k - 2*(j+1))
    # Fermer une paire
    if j + 2 <= N and k >= 2*(j+2) - 2:
        res += ((j+2)*(j+2)) * dp(i-1, j+2, k - 2*(j+2) + 2)
    return res % mod

print(dp(N, 0, K))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' l' (ID: 305)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -4.096126576769166e-05
    2. 'ruz' → logprob: -11.375041007995605
    3. 'partial' → logprob: -11.500041007995605
    4. 'wrap' → logprob: -11.875041007995605
    5. 'reduce' → logprob: -12.375041007995605
    6. 'z' → logprob: -12.500041007995605
    7. 'r' → logprob: -13.375041007995605
    8. 'rup' → logprob: -14.750041007995605
    9. 'ambda' → logprob: -15.125041007995605
    10. '```' → logprob: -15.125041007995605

Token 5: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0006982576451264322
    2. 'cache' → logprob: -7.750698089599609
    3. '_c' → logprob: -8.50069808959961
    4. '_' → logprob: -10.75069808959961
    5. 'c' → logprob: -11.37569808959961
    6. '_cached' → logprob: -11.87569808959961
    7. '_ca' → logprob: -12.25069808959961
    8. '\' → logprob: -12.50069808959961
    9. '```' → logprob: -12.62569808959961
    10. '__' → logprob: -13.37569808959961

Token 6: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019150725565850735
    2. '(
' → logprob: -7.376914978027344
    3. '\(' → logprob: -7.501914978027344
    4. '```' → logprob: -7.501914978027344
    5. 'def' → logprob: -9.251914978027344
    6. '\' → logprob: -10.501914978027344
    7. '@' → logprob: -11.001914978027344
    8. '`' → logprob: -11.751914978027344
    9. '.' → logprob: -12.251914978027344
    10. '(
' → logprob: -12.626914978027344

Token 7: 'mod' (ID: 4847)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.025891833007335663
    2. 'def' → logprob: -3.7758917808532715
    3. '```' → logprob: -6.9008917808532715
    4. '\' → logprob: -7.5258917808532715
    5. '(' → logprob: -7.6508917808532715
    6. '@
' → logprob: -8.90089225769043
    7. '@example' → logprob: -9.77589225769043
    8. 'd' → logprob: -10.02589225769043
    9. '\(' → logprob: -10.02589225769043
    10. '@login' → logprob: -10.02589225769043

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1521285772323608
    2. 'ul' → logprob: -1.1521285772323608
    3. 'ule' → logprob: -2.4021286964416504
    4. 'u' → logprob: -2.9021286964416504
    5. 'el' → logprob: -2.9021286964416504
    6. '=' → logprob: -3.0271286964416504
    7. '```' → logprob: -3.0271286964416504
    8. ' =' → logprob: -3.2771286964416504
    9. 'e' → logprob: -4.40212869644165
    10. 'l' → logprob: -5.40212869644165

Token 9: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10573557019233704
    2. '10' → logprob: -2.3557355403900146
    3. '100' → logprob: -5.230735778808594
    4. '998' → logprob: -9.355735778808594
    5. '1' → logprob: -10.230735778808594
    6. '256' → logprob: -11.730735778808594
    7. '123' → logprob: -11.730735778808594
    8. '128' → logprob: -12.230735778808594
    9. '16' → logprob: -13.230735778808594
    10. '32' → logprob: -13.355735778808594

Token 10: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01312258094549179
    2. '100' → logprob: -4.38812255859375
    3. '1' → logprob: -8.13812255859375
    4. '998' → logprob: -8.26312255859375
    5. '```' → logprob: -10.51312255859375
    6. '2' → logprob: -11.63812255859375
    7. '`' → logprob: -11.76312255859375
    8. '123' → logprob: -11.88812255859375
    9. ' ' → logprob: -12.38812255859375
    10. '(' → logprob: -12.88812255859375

Token 11: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.010238933376967907
    2. '0' → logprob: -4.635239124298096
    3. '^' → logprob: -8.510238647460938
    4. '*' → logprob: -9.385238647460938
    5. '7' → logprob: -9.635238647460938
    6. '6' → logprob: -9.760238647460938
    7. ' **' → logprob: -10.010238647460938
    8. '2' → logprob: -11.010238647460938
    9. '9' → logprob: -12.385238647460938
    10. '```' → logprob: -12.635238647460938

Token 12: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.375000953674316
    3. '09' → logprob: -14.625000953674316
    4. ' ' → logprob: -15.750000953674316
    5. '``' → logprob: -17.500001907348633
    6. '+' → logprob: -19.500001907348633
    7. '   ' → logprob: -19.750001907348633
    8. '**' → logprob: -19.875001907348633
    9. '=' → logprob: -20.125001907348633
    10. '`' → logprob: -20.625001907348633

Token 13: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00030114251421764493
    2. ' +' → logprob: -8.125301361083984
    3. '+

' → logprob: -13.000301361083984
    4. '+
' → logprob: -13.500301361083984
    5. '7' → logprob: -13.875301361083984
    6. '```' → logprob: -15.750301361083984
    7. '＋' → logprob: -16.375301361083984
    8. ' plus' → logprob: -16.750301361083984
    9. ' ' → logprob: -17.000301361083984
    10. 'plus' → logprob: -17.000301361083984

Token 14: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.500003814697266
    3. '+' → logprob: -14.875003814697266
    4. '```' → logprob: -16.625003814697266
    5. '07' → logprob: -17.500003814697266
    6. '9' → logprob: -17.625003814697266
    7. '   ' → logprob: -18.500003814697266
    8. '37' → logprob: -19.312503814697266
    9. ' ' → logprob: -19.437503814697266
    10. '  ' → logprob: -19.875003814697266

Token 15: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -16.875
    3. '```' → logprob: -17.0
    4. ' ' → logprob: -17.25
    5. '07' → logprob: -19.25
    6. '   ' → logprob: -19.875
    7. '9' → logprob: -20.5
    8. '

' → logprob: -20.75
    9. '' → logprob: -21.125
    10. '``' → logprob: -21.1875

Token 16: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.7406218647956848
    2. '
' → logprob: -1.36562180519104
    3. '```' → logprob: -2.11562180519104
    4. '

' → logprob: -2.49062180519104
    5. '\' → logprob: -3.61562180519104
    6. '\n' → logprob: -4.240622043609619
    7. 'def' → logprob: -4.865622043609619
    8. '
' → logprob: -4.990622043609619
    9. '' → logprob: -5.240622043609619
    10. '``' → logprob: -7.115622043609619

Token 17: 'N' (ID: 45)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.21933433413505554
    2. '
' → logprob: -2.094334363937378
    3. '```' → logprob: -2.844334363937378
    4. 'def' → logprob: -4.969334125518799
    5. '

' → logprob: -5.219334125518799
    6. '\' → logprob: -6.969334125518799
    7. '@
' → logprob: -7.094334125518799
    8. '\n' → logprob: -7.469334125518799
    9. '``' → logprob: -7.719334125518799
    10. '`' → logprob: -8.844334602355957

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3414522111415863
    2. '=' → logprob: -1.7164522409439087
    3. ' ' → logprob: -2.716452121734619
    4. ',' → logprob: -4.341452121734619
    5. '[' → logprob: -4.466452121734619
    6. '_' → logprob: -4.466452121734619
    7. '.' → logprob: -5.591452121734619
    8. ')' → logprob: -7.216452121734619
    9. '**' → logprob: -7.341452121734619
    10. ' **' → logprob: -7.341452121734619

Token 19: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.6823338270187378
    2. 'K' → logprob: -0.8073338270187378
    3. ' M' → logprob: -3.8073339462280273
    4. 'M' → logprob: -3.8073339462280273
    5. 'k' → logprob: -6.807333946228027
    6. 'a' → logprob: -6.932333946228027
    7. 'Q' → logprob: -7.307333946228027
    8. ' ' → logprob: -7.807333946228027
    9. ' Q' → logprob: -8.807333946228027
    10. ' k' → logprob: -8.932333946228027

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038834162056446075
    2. '=' → logprob: -3.2888340950012207
    3. ',' → logprob: -7.163834095001221
    4. ' ,' → logprob: -12.163834571838379
    5. ')' → logprob: -12.288834571838379
    6. '<|end|>' → logprob: -12.288834571838379
    7. ' =
' → logprob: -14.038834571838379
    8. ' ' → logprob: -14.163834571838379
    9. '=input' → logprob: -14.288834571838379
    10. ' =",' → logprob: -14.663834571838379

Token 21: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0234714075922966
    2. 'map' → logprob: -3.7734713554382324
    3. ' ' → logprob: -8.64847183227539
    4. ' input' → logprob: -10.39847183227539
    5. '0' → logprob: -11.89847183227539
    6. ' int' → logprob: -12.52347183227539
    7. ' list' → logprob: -12.77347183227539
    8. 'input' → logprob: -12.89847183227539
    9. 'int' → logprob: -13.39847183227539
    10. '10' → logprob: -14.27347183227539

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04583341255784035
    2. '(' → logprob: -3.1708333492279053
    3. 'int' → logprob: -7.045833587646484
    4. '(str' → logprob: -7.295833587646484
    5. '(lambda' → logprob: -7.420833587646484
    6. '(input' → logprob: -8.045833587646484
    7. 'input' → logprob: -9.045833587646484
    8. '<|end|>' → logprob: -10.045833587646484
    9. '<int' → logprob: -10.170833587646484
    10. '(
' → logprob: -10.295833587646484

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008867230266332626
    2. ',input' → logprob: -5.383867263793945
    3. '(' → logprob: -6.508867263793945
    4. ' ,' → logprob: -6.633867263793945
    5. ')' → logprob: -7.383867263793945
    6. 'input' → logprob: -8.133867263793945
    7. '(input' → logprob: -8.633867263793945
    8. ',int' → logprob: -8.633867263793945
    9. '```' → logprob: -10.133867263793945
    10. '(int' → logprob: -10.258867263793945

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740926921367645
    2. ' input' → logprob: -0.9740927219390869
    3. 'int' → logprob: -11.599092483520508
    4. ')' → logprob: -13.224092483520508
    5. ' int' → logprob: -13.474092483520508
    6. ' ' → logprob: -13.974092483520508
    7. '(input' → logprob: -14.099092483520508
    8. '=input' → logprob: -14.724092483520508
    9. ' )' → logprob: -14.849092483520508
    10. 'str' → logprob: -14.974092483520508

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.8340580463409424
    2. '())' → logprob: -1.0840580463409424
    3. '()' → logprob: -1.5840580463409424
    4. ')' → logprob: -4.459057807922363
    5. '(' → logprob: -5.334057807922363
    6. '());' → logprob: -6.084057807922363
    7. '(),' → logprob: -7.459057807922363
    8. '('' → logprob: -7.584057807922363
    9. '()))' → logprob: -7.584057807922363
    10. '()`' → logprob: -8.209057807922363

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00321205728687346
    2. 'strip' → logprob: -5.753211975097656
    3. 'rstrip' → logprob: -10.378211975097656
    4. 'read' → logprob: -12.878211975097656
    5. ')' → logprob: -15.128211975097656
    6. ' split' → logprob: -15.628211975097656
    7. 'spl' → logprob: -16.003211975097656
    8. '(split' → logprob: -16.878211975097656
    9. '_split' → logprob: -17.253211975097656
    10. 'isdigit' → logprob: -17.628211975097656

Token 27: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015390269691124558
    2. '))' → logprob: -6.50153923034668
    3. '`)' → logprob: -11.00153923034668
    4. '())' → logprob: -12.12653923034668
    5. '()' → logprob: -12.50153923034668
    6. '),' → logprob: -12.75153923034668
    7. ')`' → logprob: -12.75153923034668
    8. ')))' → logprob: -13.50153923034668
    9. ' )' → logprob: -14.25153923034668
    10. '(' → logprob: -14.37653923034668

Token 28: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0073425304144620895
    2. '
' → logprob: -5.382342338562012
    3. '

' → logprob: -6.257342338562012
    4. '```' → logprob: -8.007342338562012
    5. '
' → logprob: -8.882342338562012
    6. '@
' → logprob: -9.632342338562012
    7. '\n' → logprob: -9.882342338562012
    8. '@

' → logprob: -10.007342338562012
    9. '\' → logprob: -10.382342338562012
    10. 'def' → logprob: -10.507342338562012

Token 29: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. ' l' → logprob: -19.75
    3. '```' → logprob: -20.125
    4. 'staticmethod' → logprob: -20.375
    5. '@' → logprob: -21.0
    6. '	l' → logprob: -21.375
    7. 'classmethod' → logprob: -21.75
    8. '`' → logprob: -22.125
    9. ''l' → logprob: -22.375
    10. '_l' → logprob: -23.0

Token 30: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.3880831301212311
    2. 'r' → logprob: -1.1380831003189087
    3. '_r' → logprob: -7.138082981109619
    4. '_cache' → logprob: -8.513083457946777
    5. '_' → logprob: -9.763083457946777
    6. 'cache' → logprob: -9.763083457946777
    7. '```' → logprob: -10.888083457946777
    8. '_ru' → logprob: -10.888083457946777
    9. '_cached' → logprob: -11.513083457946777
    10. 'ra' → logprob: -11.763083457946777

Token 31: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -9.519893501419574e-05
    2. '_cached' → logprob: -9.37509536743164
    3. '_c' → logprob: -12.62509536743164
    4. 'cache' → logprob: -12.75009536743164
    5. '_' → logprob: -13.62509536743164
    6. ' _' → logprob: -14.37509536743164
    7. 'Cache' → logprob: -14.37509536743164
    8. '```' → logprob: -14.75009536743164
    9. 'cached' → logprob: -15.12509536743164
    10. '_CACHE' → logprob: -16.00009536743164

Token 32: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43109333515167236
    2. 'def' → logprob: -1.5560933351516724
    3. '()' → logprob: -2.431093215942383
    4. '(None' → logprob: -3.806093215942383
    5. '(def' → logprob: -4.306093215942383
    6. '(max' → logprob: -5.306093215942383
    7. '()
' → logprob: -6.306093215942383
    8. '<|end|>' → logprob: -6.431093215942383
    9. '(n' → logprob: -6.556093215942383
    10. '(int' → logprob: -6.681093215942383

Token 33: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.4813903570175171
    2. '_size' → logprob: -1.106390357017517
    3. '=None' → logprob: -3.7313904762268066
    4. '_cache' → logprob: -4.106390476226807
    5. '=' → logprob: -4.856390476226807
    6. '=_' → logprob: -6.231390476226807
    7. ')' → logprob: -8.856389999389648
    8. '_SIZE' → logprob: -8.981389999389648
    9. '_=' → logprob: -9.106389999389648
    10. ')_' → logprob: -9.481389999389648

Token 34: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.5759530067443848
    2. '=' → logprob: -0.8259530067443848
    3. '=

' → logprob: -11.575952529907227
    4. '=
' → logprob: -13.575952529907227
    5. 'None' → logprob: -14.075952529907227
    6. ')=' → logprob: -14.700952529907227
    7. '=}' → logprob: -14.825952529907227
    8. '=`' → logprob: -14.950952529907227
    9. '=-' → logprob: -15.075952529907227
    10. '=A' → logprob: -15.825952529907227

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009842199506238103
    2. ')
' → logprob: -7.375984191894531
    3. 'def' → logprob: -8.000984191894531
    4. '):' → logprob: -11.375984191894531
    5. ')`' → logprob: -12.750984191894531
    6. '`)' → logprob: -13.625984191894531
    7. ')
' → logprob: -13.750984191894531
    8. ' )' → logprob: -14.375984191894531
    9. '))' → logprob: -14.375984191894531
    10. ')return' → logprob: -14.625984191894531

Token 36: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.033849235624074936
    2. '
' → logprob: -3.4088492393493652
    3. ' def' → logprob: -9.658848762512207
    4. '()
' → logprob: -10.158848762512207
    5. '('' → logprob: -10.283848762512207
    6. '\' → logprob: -11.033848762512207
    7. '  
' → logprob: -11.283848762512207
    8. '<|end|>' → logprob: -11.658848762512207
    9. '(def' → logprob: -11.783848762512207
    10. '(
' → logprob: -12.658848762512207

Token 37: ' dp' (ID: 21546)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.6364192962646484
    2. 'comb' → logprob: -1.2614192962646484
    3. ' factorial' → logprob: -2.5114192962646484
    4. ' fact' → logprob: -3.8864192962646484
    5. 'factor' → logprob: -4.636419296264648
    6. 'dp' → logprob: -4.636419296264648
    7. 'f' → logprob: -4.886419296264648
    8. ' combination' → logprob: -5.011419296264648
    9. ' dp' → logprob: -5.261419296264648
    10. 'fact' → logprob: -5.261419296264648

Token 38: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4276663362979889
    2. '(n' → logprob: -1.1776663064956665
    3. '(' → logprob: -3.552666425704956
    4. '(k' → logprob: -4.802666187286377
    5. '(N' → logprob: -7.177666187286377
    6. '(pos' → logprob: -7.427666187286377
    7. '(idx' → logprob: -8.052666664123535
    8. '(depth' → logprob: -8.177666664123535
    9. '(index' → logprob: -8.427666664123535
    10. '(s' → logprob: -8.552666664123535

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011129142512800172
    2. ' ,' → logprob: -9.25011157989502
    3. ',k' → logprob: -11.75011157989502
    4. ')' → logprob: -13.62511157989502
    5. ',b' → logprob: -14.25011157989502
    6. ',n' → logprob: -14.25011157989502
    7. '):' → logprob: -14.25011157989502
    8. ',
' → logprob: -14.50011157989502
    9. ',int' → logprob: -14.50011157989502
    10. ',i' → logprob: -14.75011157989502

Token 40: ' j' (ID: 441)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6646818518638611
    2. 'j' → logprob: -0.7896818518638611
    3. ' j' → logprob: -4.289681911468506
    4. ' k' → logprob: -4.789681911468506
    5. 's' → logprob: -6.414681911468506
    6. 'r' → logprob: -6.789681911468506
    7. 'used' → logprob: -7.039681911468506
    8. 'remaining' → logprob: -7.164681911468506
    9. 'c' → logprob: -7.414681911468506
    10. 't' → logprob: -7.539681911468506

Token 41: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000966487976256758
    2. ')' → logprob: -7.250966548919678
    3. '):
' → logprob: -9.00096607208252
    4. ',' → logprob: -9.50096607208252
    5. ':' → logprob: -9.87596607208252
    6. ' ):' → logprob: -12.75096607208252
    7. '):
' → logprob: -14.25096607208252
    8. '**' → logprob: -14.62596607208252
    9. ''):' → logprob: -14.75096607208252
    10. '   ' → logprob: -15.12596607208252

Token 42: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2700358033180237
    2. ' k' → logprob: -1.895035743713379
    3. 'p' → logprob: -4.520035743713379
    4. 't' → logprob: -4.645035743713379
    5. 'l' → logprob: -4.895035743713379
    6. ' t' → logprob: -5.020035743713379
    7. 'm' → logprob: -5.270035743713379
    8. ' p' → logprob: -5.645035743713379
    9. ' l' → logprob: -5.645035743713379
    10. ' remaining' → logprob: -5.645035743713379

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011951096821576357
    2. ')' → logprob: -6.751194953918457
    3. '):
' → logprob: -11.501194953918457
    4. ':' → logprob: -11.876194953918457
    5. ' ):' → logprob: -12.376194953918457
    6. ',' → logprob: -12.876194953918457
    7. ''):' → logprob: -15.001194953918457
    8. '**' → logprob: -16.626195907592773
    9. ')：' → logprob: -16.751195907592773
    10. ')):' → logprob: -17.001195907592773

Token 44: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009450407698750496
    2. '):' → logprob: -5.134450435638428
    3. '   ' → logprob: -6.009450435638428
    4. '<|end|>' → logprob: -8.50944995880127
    5. ' :' → logprob: -8.63444995880127
    6. ')' → logprob: -8.88444995880127
    7. ':return' → logprob: -8.88444995880127
    8. ' if' → logprob: -9.25944995880127
    9. ':
' → logprob: -9.50944995880127
    10. ' ' → logprob: -9.75944995880127

Token 45: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8268464207649231
    2. ' if' → logprob: -1.3268463611602783
    3. '   ' → logprob: -2.4518463611602783
    4. ')' → logprob: -2.5768463611602783
    5. 'if' (adapté à ' if') → logprob: -2.7018463611602783
    6. '    ' → logprob: -3.4518463611602783
    7. '(' → logprob: -3.9518463611602783
    8. '  ' → logprob: -5.826846599578857
    9. ' (' → logprob: -5.951846599578857
    10. 'i' → logprob: -6.201846599578857

Token 46: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16377729177474976
    2. 'i' → logprob: -2.2887773513793945
    3. ' k' → logprob: -3.4137773513793945
    4. 'k' → logprob: -4.7887773513793945
    5. ' j' → logprob: -4.9137773513793945
    6. 'j' → logprob: -6.9137773513793945
    7. ' ' → logprob: -9.538777351379395
    8. ' (' → logprob: -11.913777351379395
    9. ' not' → logprob: -11.913777351379395
    10. '(i' → logprob: -13.038777351379395

Token 47: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5263293385505676
    2. '==' → logprob: -0.9013293385505676
    3. '<' → logprob: -6.276329517364502
    4. '>' → logprob: -7.651329517364502
    5. ' >' → logprob: -8.401329040527344
    6. ' <' → logprob: -8.651329040527344
    7. '0' → logprob: -8.651329040527344
    8. '=' → logprob: -8.901329040527344
    9. '<=' → logprob: -10.276329040527344
    10. ' <=' → logprob: -10.901329040527344

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025083590298891068
    2. ' ' → logprob: -6.127508163452148
    3. '=' → logprob: -8.627508163452148
    4. '1' → logprob: -9.627508163452148
    5. 'j' → logprob: -10.377508163452148
    6. '-' → logprob: -11.502508163452148
    7. '3' → logprob: -12.065008163452148
    8. '2' → logprob: -12.377508163452148
    9. 'i' → logprob: -12.502508163452148
    10. 'k' → logprob: -13.002508163452148

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020926215802319348
    2. '1' → logprob: -10.125208854675293
    3. 'j' → logprob: -10.125208854675293
    4. ' ' → logprob: -10.250208854675293
    5. '-' → logprob: -10.375208854675293
    6. 'i' → logprob: -10.625208854675293
    7. 'k' → logprob: -11.375208854675293
    8. '3' → logprob: -11.750208854675293
    9. 'N' → logprob: -12.375208854675293
    10. '2' → logprob: -12.750208854675293

Token 50: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033049776684492826
    2. ':return' → logprob: -6.503304958343506
    3. ' or' → logprob: -6.628304958343506
    4. '   ' → logprob: -8.253305435180664
    5. ' :' → logprob: -9.003305435180664
    6. ':
' → logprob: -9.503305435180664
    7. '       ' → logprob: -11.753305435180664
    8. ' and' → logprob: -12.628305435180664
    9. '):' → logprob: -13.128305435180664
    10. '.' → logprob: -13.128305435180664

Token 51: ' k' (ID: 372)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.19821666181087494
    2. 'i' → logprob: -2.073216676712036
    3. 'k' → logprob: -2.948216676712036
    4. ' j' → logprob: -6.823216438293457
    5. ' i' → logprob: -8.073216438293457
    6. ' k' → logprob: -9.323216438293457
    7. '   ' → logprob: -10.198216438293457
    8. 'N' → logprob: -11.198216438293457
    9. '(i' → logprob: -12.198216438293457
    10. ' ' → logprob: -12.323216438293457

Token 52: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4945569336414337
    2. '<' → logprob: -1.1195569038391113
    3. ' >' → logprob: -3.3695569038391113
    4. '==' → logprob: -3.9945569038391113
    5. ' <' → logprob: -5.619556903839111
    6. ' ==' → logprob: -5.869556903839111
    7. '0' → logprob: -6.869556903839111
    8. ' ' → logprob: -7.369556903839111
    9. '>=' → logprob: -7.494556903839111
    10. ':' → logprob: -7.619556903839111

Token 53: ' K' (ID: 658)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5737702250480652
    2. 'i' → logprob: -1.32377028465271
    3. 'N' → logprob: -2.19877028465271
    4. 'K' → logprob: -3.44877028465271
    5. '(i' → logprob: -4.573770046234131
    6. '(N' → logprob: -5.198770046234131
    7. '(' → logprob: -6.073770046234131
    8. '1' → logprob: -6.198770046234131
    9. '(j' → logprob: -6.198770046234131
    10. 'min' → logprob: -6.323770046234131

Token 54: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033754343166947365
    2. ':return' → logprob: -6.12837553024292
    3. ' or' → logprob: -7.50337553024292
    4. ' :' → logprob: -7.75337553024292
    5. ':
' → logprob: -8.753375053405762
    6. '   ' → logprob: -10.378375053405762
    7. '):' → logprob: -11.503375053405762
    8. ' ' → logprob: -12.378375053405762
    9. ')' → logprob: -13.753375053405762
    10. ',' → logprob: -14.003375053405762

Token 55: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3810413181781769
    2. 'j' → logprob: -1.6310412883758545
    3. ' i' → logprob: -2.5060412883758545
    4. ' j' → logprob: -3.5060412883758545
    5. '   ' → logprob: -4.756041526794434
    6. 'N' → logprob: -8.631041526794434
    7. 'k' → logprob: -8.756041526794434
    8. '  ' → logprob: -9.256041526794434
    9. ' ' → logprob: -9.381041526794434
    10. ')' → logprob: -9.506041526794434

Token 56: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5605596303939819
    2. ' >' → logprob: -0.9355596303939819
    3. '==' → logprob: -3.6855597496032715
    4. ' ==' → logprob: -4.9355597496032715
    5. '<' → logprob: -6.6855597496032715
    6. '>=' → logprob: -6.6855597496032715
    7. ' >=' → logprob: -7.1855597496032715
    8. '<=' → logprob: -7.6855597496032715
    9. ' <' → logprob: -8.810559272766113
    10. '0' → logprob: -8.935559272766113

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06412582099437714
    2. ' ' → logprob: -3.0641257762908936
    3. '1' → logprob: -4.439126014709473
    4. 'i' → logprob: -5.814126014709473
    5. ' i' → logprob: -8.564126014709473
    6. '-' → logprob: -8.689126014709473
    7. '=' → logprob: -8.814126014709473
    8. ' -' → logprob: -10.314126014709473
    9. '2' → logprob: -11.439126014709473
    10. 'N' → logprob: -11.564126014709473

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010914000682532787
    2. '1' → logprob: -5.135913848876953
    3. 'i' → logprob: -5.385913848876953
    4. ' ' → logprob: -8.260913848876953
    5. '-' → logprob: -9.510913848876953
    6. 'N' → logprob: -10.760913848876953
    7. '-i' → logprob: -12.010913848876953
    8. 'k' → logprob: -12.135913848876953
    9. '2' → logprob: -12.323413848876953
    10. ' i' → logprob: -12.510913848876953

Token 59: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0006201040814630687
    2. 'or' → logprob: -7.875619888305664
    3. ':' → logprob: -9.125619888305664
    4. ' ' → logprob: -9.625619888305664
    5. '<|end|>' → logprob: -10.375619888305664
    6. '   ' → logprob: -10.875619888305664
    7. ':
' → logprob: -12.375619888305664
    8. '<|end|>' → logprob: -12.625619888305664
    9. ':return' → logprob: -12.875619888305664
    10. ')' → logprob: -13.500619888305664

Token 60: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6420989036560059
    2. 'i' → logprob: -1.0170989036560059
    3. ' j' → logprob: -2.767098903656006
    4. ' i' → logprob: -3.267098903656006
    5. '0' → logprob: -5.392098903656006
    6. 'N' → logprob: -5.642098903656006
    7. ' ' → logprob: -6.642098903656006
    8. ' N' → logprob: -7.017098903656006
    9. 'mod' → logprob: -8.892099380493164
    10. '   ' → logprob: -9.017099380493164

Token 61: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7745028734207153
    2. ' >' → logprob: -0.7745028734207153
    3. ' >=' → logprob: -3.524502754211426
    4. '>=' → logprob: -3.774502754211426
    5. '0' → logprob: -4.149502754211426
    6. ' ' → logprob: -5.399502754211426
    7. '==' → logprob: -6.149502754211426
    8. '<' → logprob: -6.524502754211426
    9. ' <' → logprob: -7.149502754211426
    10. ' ==' → logprob: -7.524502754211426

Token 62: ' N' (ID: 478)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44087162613868713
    2. 'N' → logprob: -1.0658715963363647
    3. 'K' → logprob: -5.065871715545654
    4. '1' → logprob: -5.690871715545654
    5. '9' → logprob: -7.315871715545654
    6. ' i' → logprob: -8.190871238708496
    7. 'j' → logprob: -8.315871238708496
    8. '2' → logprob: -8.565871238708496
    9. ' N' → logprob: -8.815871238708496
    10. 'mod' → logprob: -8.815871238708496

Token 63: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002157518407329917
    2. ':
' → logprob: -6.877157688140869
    3. ':return' → logprob: -7.752157688140869
    4. ' or' → logprob: -7.877157688140869
    5. '   ' → logprob: -8.502157211303711
    6. ' :' → logprob: -9.877157211303711
    7. '):' → logprob: -9.877157211303711
    8. '       ' → logprob: -13.127157211303711
    9. '):
' → logprob: -13.127157211303711
    10. ')' → logprob: -14.002157211303711

Token 64: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03589821606874466
    2. ' i' → logprob: -3.410898208618164
    3. '   ' → logprob: -7.160898208618164
    4. 'k' → logprob: -7.535898208618164
    5. 'j' → logprob: -7.535898208618164
    6. '(i' → logprob: -8.660898208618164
    7. '  ' → logprob: -10.160898208618164
    8. 'N' → logprob: -10.660898208618164
    9. ' j' → logprob: -10.660898208618164
    10. ' k' → logprob: -10.660898208618164

Token 65: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4935458302497864
    2. ' >' → logprob: -1.1185457706451416
    3. '==' → logprob: -3.2435457706451416
    4. ' >=' → logprob: -3.9935457706451416
    5. '>' → logprob: -5.368546009063721
    6. '>=' → logprob: -7.618546009063721
    7. ' ' → logprob: -9.118545532226562
    8. ' <' → logprob: -10.493545532226562
    9. '   ' → logprob: -11.868545532226562
    10. '<|end|>' → logprob: -12.368545532226562

Token 66: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008657119236886501
    2. 'K' → logprob: -4.883656978607178
    3. ' N' → logprob: -7.258656978607178
    4. 'j' → logprob: -8.633657455444336
    5. 'n' → logprob: -9.758657455444336
    6. ' K' → logprob: -10.883657455444336
    7. 'k' → logprob: -11.008657455444336
    8. 'i' → logprob: -11.133657455444336
    9. ' ' → logprob: -11.383657455444336
    10. '3' → logprob: -11.383657455444336

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032361785415560007
    2. ':return' → logprob: -6.253236293792725
    3. ' or' → logprob: -7.253236293792725
    4. ':
' → logprob: -8.253235816955566
    5. ' :' → logprob: -8.503235816955566
    6. '   ' → logprob: -9.628235816955566
    7. '):' → logprob: -9.753235816955566
    8. ' and' → logprob: -12.003235816955566
    9. 'or' → logprob: -13.503235816955566
    10. ' ' → logprob: -14.253235816955566

Token 68: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03615338355302811
    2. ':' → logprob: -4.286153316497803
    3. ':return' → logprob: -4.536153316497803
    4. ' return' → logprob: -5.036153316497803
    5. '       ' → logprob: -5.661153316497803
    6. 'return' → logprob: -7.411153316497803
    7. '```' → logprob: -9.036153793334961
    8. '):' → logprob: -9.411153793334961
    9. ' :' → logprob: -9.661153793334961
    10. ')' → logprob: -10.036153793334961

Token 69: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5219722986221313
    2. '   ' → logprob: -1.0219722986221313
    3. ' return' → logprob: -3.271972179412842
    4. '       ' → logprob: -4.771972179412842
    5. '```' → logprob: -9.14697265625
    6. ' ' → logprob: -9.77197265625
    7. ':return' → logprob: -9.89697265625
    8. '  ' → logprob: -10.02197265625
    9. '0' → logprob: -10.39697265625
    10. '    ' → logprob: -10.52197265625

Token 70: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. 'None' → logprob: -18.125911712646484
    4. '   ' → logprob: -19.125911712646484
    5. ' ' → logprob: -19.125911712646484
    6. '1' → logprob: -19.250911712646484
    7. '۰' → logprob: -19.625911712646484
    8. '```' → logprob: -19.875911712646484
    9. '  ' → logprob: -20.125911712646484
    10. 'int' → logprob: -20.500911712646484

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -19.625001907348633
    4. '۰' → logprob: -19.750001907348633
    5. 'None' → logprob: -19.875001907348633
    6. 'mod' → logprob: -20.125001907348633
    7. '-' → logprob: -20.500001907348633
    8. '1' → logprob: -20.625001907348633
    9. '000' → logprob: -20.750001907348633
    10. 'int' → logprob: -20.750001907348633

Token 72: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08645150810480118
    2. '<|end|>' → logprob: -3.086451530456543
    3. '\n' → logprob: -3.711451530456543
    4. '
' → logprob: -5.086451530456543
    5. ')' → logprob: -5.711451530456543
    6. '    
' → logprob: -6.586451530456543
    7. '```' → logprob: -7.086451530456543
    8. '<|end|>' → logprob: -8.211451530456543
    9. 'newline' → logprob: -8.711451530456543
    10. '\' → logprob: -8.961451530456543

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038475787732750177
    2. '\n' → logprob: -6.503847599029541
    3. '<|end|>' → logprob: -6.878847599029541
    4. '```' → logprob: -7.503847599029541
    5. '    
' → logprob: -7.753847599029541
    6. ')' → logprob: -8.503847122192383
    7. '
' → logprob: -10.628847122192383
    8. '\' → logprob: -10.628847122192383
    9. '  ' → logprob: -11.378847122192383
    10. 'newline' → logprob: -11.503847122192383

Token 74: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7035889029502869
    2. 'if' (adapté à ' if') → logprob: -0.7035889029502869
    3. ' if' → logprob: -4.578588962554932
    4. '<|end|>' → logprob: -9.703588485717773
    5. '```' → logprob: -10.578588485717773
    6. '	if' → logprob: -11.953588485717773
    7. '  ' → logprob: -12.203588485717773
    8. 'If' → logprob: -12.328588485717773
    9. ')' → logprob: -12.453588485717773
    10. ' ' → logprob: -12.578588485717773

Token 75: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37862998247146606
    2. 'k' → logprob: -1.8786299228668213
    3. ' i' → logprob: -2.0036299228668213
    4. 'j' → logprob: -4.1286301612854
    5. ' k' → logprob: -4.7536301612854
    6. ' j' → logprob: -5.8786301612854
    7. '(i' → logprob: -11.753629684448242
    8. ' (' → logprob: -12.378629684448242
    9. '(' → logprob: -12.503629684448242
    10. ' ' → logprob: -12.628629684448242

Token 76: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20142777264118195
    2. '==' → logprob: -1.7014278173446655
    3. ' >' → logprob: -12.201427459716797
    4. '=' → logprob: -13.201427459716797
    5. '>' → logprob: -13.201427459716797
    6. '<|end|>' → logprob: -13.451427459716797
    7. ' ' → logprob: -14.076427459716797
    8. ' ' → logprob: -14.326427459716797
    9. ' >=' → logprob: -14.326427459716797
    10. '==
' → logprob: -14.701427459716797

Token 77: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07498111575841904
    2. ' N' → logprob: -2.824981212615967
    3. '0' → logprob: -4.699981212615967
    4. ' ' → logprob: -5.574981212615967
    5. 'j' → logprob: -10.699980735778809
    6. '1' → logprob: -12.824980735778809
    7. 'K' → logprob: -12.949980735778809
    8. ' j' → logprob: -12.949980735778809
    9. '	N' → logprob: -13.074980735778809
    10. 'n' → logprob: -13.324980735778809

Token 78: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0013624972198158503
    2. '0' → logprob: -6.626362323760986
    3. ' N' → logprob: -10.501362800598145
    4. ' ' → logprob: -12.001362800598145
    5. 'j' → logprob: -14.126362800598145
    6. 'n' → logprob: -14.751362800598145
    7. 'K' → logprob: -14.876362800598145
    8. '	N' → logprob: -15.626362800598145
    9. '_N' → logprob: -15.626362800598145
    10. '>N' → logprob: -15.626362800598145

Token 79: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49618780612945557
    2. ' and' → logprob: -0.9961878061294556
    3. 'and' → logprob: -3.996187686920166
    4. ':
' → logprob: -5.871187686920166
    5. '   ' → logprob: -7.496187686920166
    6. ':return' → logprob: -9.371188163757324
    7. '<|end|>' → logprob: -12.496188163757324
    8. ' ' → logprob: -12.621188163757324
    9. ' :' → logprob: -12.746188163757324
    10. ':
' → logprob: -12.996188163757324

Token 80: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12561044096946716
    2. ' j' → logprob: -2.6256103515625
    3. 'k' → logprob: -3.1256103515625
    4. ' k' → logprob: -6.3756103515625
    5. ' ' → logprob: -10.7506103515625
    6. 'i' → logprob: -13.1881103515625
    7. '0' → logprob: -13.2506103515625
    8. 'not' → logprob: -13.8131103515625
    9. '  ' → logprob: -14.0006103515625
    10. ' ' → logprob: -14.0631103515625

Token 81: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6326321959495544
    2. ' ==' → logprob: -0.7576321959495544
    3. '<|end|>' → logprob: -10.7576322555542
    4. '=' → logprob: -12.8826322555542
    5. '<|end|>' → logprob: -13.2576322555542
    6. '0' → logprob: -13.2576322555542
    7. ' ' → logprob: -13.3826322555542
    8. ' ' → logprob: -14.1326322555542
    9. ' =' → logprob: -14.6326322555542
    10. '===' → logprob: -14.6326322555542

Token 82: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01604410633444786
    2. ' ' → logprob: -4.1410441398620605
    3. 'k' → logprob: -12.141043663024902
    4. '<|end|>' → logprob: -13.891043663024902
    5. '<|end|>' → logprob: -14.391043663024902
    6. 'N' → logprob: -14.391043663024902
    7. ' and' → logprob: -14.516043663024902
    8. 'K' → logprob: -14.766043663024902
    9. 'and' → logprob: -14.766043663024902
    10. ' k' → logprob: -15.016043663024902

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.496052371105179e-05
    2. ' ' → logprob: -9.75009536743164
    3. 'N' → logprob: -10.25009536743164
    4. '<|end|>' → logprob: -14.75009536743164
    5. 'i' → logprob: -15.37509536743164
    6. ' N' → logprob: -15.62509536743164
    7. 'k' → logprob: -15.75009536743164
    8. 'K' → logprob: -15.87509536743164
    9. '<|end|>' → logprob: -17.37509536743164
    10. '1' → logprob: -17.62509536743164

Token 84: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8470567464828491
    2. 'and' → logprob: -1.0970567464828491
    3. ':' → logprob: -1.4720567464828491
    4. '   ' → logprob: -5.097056865692139
    5. ':
' → logprob: -6.472056865692139
    6. ':return' → logprob: -8.09705638885498
    7. ' ' → logprob: -10.59705638885498
    8. ' :' → logprob: -12.22205638885498
    9. '<|end|>' → logprob: -12.34705638885498
    10. '       ' → logprob: -12.47205638885498

Token 85: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0019420842872932553
    2. ' k' → logprob: -6.251942157745361
    3. '0' → logprob: -11.251941680908203
    4. ' ' → logprob: -15.001941680908203
    5. 'K' → logprob: -17.001941680908203
    6. '   ' → logprob: -17.251941680908203
    7. '  ' → logprob: -18.001941680908203
    8. '	k' → logprob: -18.001941680908203
    9. '(k' → logprob: -18.439441680908203
    10. 'kx' → logprob: -19.126941680908203

Token 86: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023252584040164948
    2. '==' → logprob: -3.773252487182617
    3. '<|end|>' → logprob: -12.773252487182617
    4. ' ' → logprob: -13.273252487182617
    5. ' ' → logprob: -14.273252487182617
    6. '<|end|>' → logprob: -14.648252487182617
    7. ' =' → logprob: -15.023252487182617
    8. '0' → logprob: -15.273252487182617
    9. '=' → logprob: -15.273252487182617
    10. ')' → logprob: -16.023252487182617

Token 87: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '1' → logprob: -17.875553131103516
    4. '   ' → logprob: -18.500553131103516
    5. '  ' → logprob: -19.125553131103516
    6. '۰' → logprob: -19.125553131103516
    7. ' ' → logprob: -19.625553131103516
    8. '<|end|>' → logprob: -21.063053131103516
    9. '00' → logprob: -21.500553131103516
    10. '.' → logprob: -21.500553131103516

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.65101717156358e-05
    2. ' ' → logprob: -9.250096321105957
    3. '1' → logprob: -15.875096321105957
    4. 'K' → logprob: -16.250097274780273
    5. 'N' → logprob: -18.062597274780273
    6. '۰' → logprob: -18.187597274780273
    7. '   ' → logprob: -18.312597274780273
    8. '  ' → logprob: -18.375097274780273
    9. 'k' → logprob: -19.125097274780273
    10. ' K' → logprob: -19.562597274780273

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012999961618334055
    2. ':
' → logprob: -7.001299858093262
    3. ':return' → logprob: -7.876299858093262
    4. '   ' → logprob: -11.876299858093262
    5. '):' → logprob: -14.501299858093262
    6. ':
' → logprob: -14.626299858093262
    7. ' :' → logprob: -14.876299858093262
    8. '       ' → logprob: -15.376299858093262
    9. ':

' → logprob: -16.376300811767578
    10. 'return' → logprob: -16.876300811767578

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005221736500971019
    2. '   ' → logprob: -8.62552261352539
    3. ':' → logprob: -8.75052261352539
    4. ' return' → logprob: -9.75052261352539
    5. 'return' → logprob: -9.87552261352539
    6. ':return' → logprob: -9.87552261352539
    7. '<|end|>' → logprob: -10.87552261352539
    8. '```' → logprob: -14.00052261352539
    9. '	return' → logprob: -14.62552261352539
    10. ':
' → logprob: -14.87552261352539

Token 91: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06807870417833328
    2. ' return' → logprob: -2.8180787563323975
    3. '   ' → logprob: -5.193078517913818
    4. '       ' → logprob: -7.693078517913818
    5. '	return' → logprob: -10.193078994750977
    6. '1' → logprob: -11.193078994750977
    7. '
' → logprob: -11.443078994750977
    8. ':return' → logprob: -12.193078994750977
    9. '           ' → logprob: -12.443078994750977
    10. '```' → logprob: -12.693078994750977

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.00009536743164
    4. '0' → logprob: -18.62509536743164
    5. 'int' → logprob: -19.37509536743164
    6. '  ' → logprob: -19.75009536743164
    7. '۱' → logprob: -20.31259536743164
    8. 'True' → logprob: -20.56259536743164
    9. '１' → logprob: -20.81259536743164
    10. '```' → logprob: -20.87509536743164

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -18.25
    4. 'int' → logprob: -19.75
    5. '```' → logprob: -19.8125
    6. '۱' → logprob: -20.125
    7. 'pow' → logprob: -20.1875
    8. '১' → logprob: -20.1875
    9. '0' → logprob: -20.25
    10. '  ' → logprob: -20.25

Token 94: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08814530074596405
    2. '
' → logprob: -3.0881452560424805
    3. '\n' → logprob: -3.7131452560424805
    4. '<|end|>' → logprob: -4.8381452560424805
    5. '    
' → logprob: -5.4631452560424805
    6. '```' → logprob: -7.4631452560424805
    7. '  
' → logprob: -7.9631452560424805
    8. 'n' → logprob: -8.33814525604248
    9. '<|end|>' → logprob: -8.46314525604248
    10. 'newline' → logprob: -8.83814525604248

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025495043955743313
    2. '    
' → logprob: -6.502549648284912
    3. '
' → logprob: -7.127549648284912
    4. 'if' → logprob: -9.627549171447754
    5. '<|end|>' → logprob: -10.002549171447754
    6. '```' → logprob: -10.502549171447754
    7. '  
' → logprob: -10.752549171447754
    8. 'return' → logprob: -10.752549171447754
    9. ' if' → logprob: -11.127549171447754
    10. '\n' → logprob: -11.377549171447754

Token 96: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.32585421204566956
    2. 'if' (adapté à ' if') → logprob: -1.3258541822433472
    3. 'return' → logprob: -4.700854301452637
    4. 'ans' → logprob: -6.450854301452637
    5. ' res' → logprob: -7.200854301452637
    6. 'result' → logprob: -8.325854301452637
    7. 'r' → logprob: -8.325854301452637
    8. ' if' → logprob: -8.450854301452637
    9. 'ret' → logprob: -8.450854301452637
    10. '   ' → logprob: -9.325854301452637

Token 97: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006181306205689907
    2. ' i' → logprob: -5.131181240081787
    3. 'k' → logprob: -9.006181716918945
    4. 'j' → logprob: -9.131181716918945
    5. '   ' → logprob: -12.381181716918945
    6. 'not' → logprob: -12.881181716918945
    7. ' ' → logprob: -12.881181716918945
    8. 'N' → logprob: -12.881181716918945
    9. 'dp' → logprob: -13.131181716918945
    10. ' j' → logprob: -13.506181716918945

Token 98: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2821075916290283
    2. '==' → logprob: -1.4071075916290283
    3. '0' → logprob: -7.907107353210449
    4. '<' → logprob: -8.03210735321045
    5. ' <' → logprob: -8.53210735321045
    6. ' ' → logprob: -10.40710735321045
    7. '<=' → logprob: -11.53210735321045
    8. ' <=' → logprob: -11.78210735321045
    9. '=' → logprob: -12.53210735321045
    10. '==
' → logprob: -12.78210735321045

Token 99: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005938636604696512
    2. ' ' → logprob: -5.130938529968262
    3. 'N' → logprob: -12.005938529968262
    4. '1' → logprob: -13.505938529968262
    5. '-' → logprob: -14.130938529968262
    6. '  ' → logprob: -14.505938529968262
    7. ' N' → logprob: -14.880938529968262
    8. '   ' → logprob: -15.318438529968262
    9. ' -' → logprob: -15.818438529968262
    10. '...' → logprob: -16.568439483642578

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011236425780225545
    2. ' ' → logprob: -9.125112533569336
    3. 'N' → logprob: -13.250112533569336
    4. '1' → logprob: -13.750112533569336
    5. '-' → logprob: -14.750112533569336
    6. '  ' → logprob: -17.125112533569336
    7. '   ' → logprob: -18.000112533569336
    8. 'i' → logprob: -18.437612533569336
    9. ' -' → logprob: -18.562612533569336
    10. '<N' → logprob: -18.750112533569336

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6634448766708374
    2. ':
' → logprob: -1.4134448766708374
    3. ' or' → logprob: -1.5384448766708374
    4. 'or' → logprob: -4.163444995880127
    5. ':return' → logprob: -4.663444995880127
    6. '   ' → logprob: -6.788444995880127
    7. 'and' → logprob: -8.413444519042969
    8. ' and' → logprob: -8.913444519042969
    9. ' ' → logprob: -9.163444519042969
    10. '<|end|>' → logprob: -9.538444519042969

Token 102: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3152340352535248
    2. '       ' → logprob: -1.3152340650558472
    3. 'return' → logprob: -6.815234184265137
    4. ' return' → logprob: -7.065234184265137
    5. '	return' → logprob: -11.940234184265137
    6. ' ' → logprob: -13.190234184265137
    7. '  ' → logprob: -13.315234184265137
    8. ':return' → logprob: -13.315234184265137
    9. '           ' → logprob: -13.440234184265137
    10. '<|end|>' → logprob: -13.815234184265137

Token 103: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07477837055921555
    2. ' return' → logprob: -3.3247783184051514
    3. '   ' → logprob: -3.5747783184051514
    4. '       ' → logprob: -4.8247785568237305
    5. '	return' → logprob: -11.19977855682373
    6. ' ' → logprob: -12.82477855682373
    7. '  ' → logprob: -13.69977855682373
    8. '           ' → logprob: -13.94977855682373
    9. 'eturn' → logprob: -14.44977855682373
    10. '    ' → logprob: -14.82477855682373

Token 104: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. ' ' → logprob: -17.626928329467773
    4. '   ' → logprob: -19.376928329467773
    5. '  ' → logprob: -20.126928329467773
    6. '۰' → logprob: -20.251928329467773
    7. '```' → logprob: -20.751928329467773
    8. '00' → logprob: -20.751928329467773
    9. 'int' → logprob: -21.751928329467773
    10. '
' → logprob: -21.751928329467773

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '۰' → logprob: -17.75001335144043
    4. '```' → logprob: -19.43751335144043
    5. '000' → logprob: -19.62501335144043
    6. '   ' → logprob: -19.62501335144043
    7. '00' → logprob: -19.68751335144043
    8. 'mod' → logprob: -20.12501335144043
    9. '০' → logprob: -20.31251335144043
    10. '０' → logprob: -20.43751335144043

Token 106: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2932153344154358
    2. 'res' → logprob: -2.293215274810791
    3. 'result' → logprob: -2.418215274810791
    4. '    
' → logprob: -4.043215274810791
    5. 'if' → logprob: -5.043215274810791
    6. 'n' → logprob: -5.168215274810791
    7. 'return' → logprob: -5.293215274810791
    8. 'dp' → logprob: -5.418215274810791
    9. '```' → logprob: -5.543215274810791
    10. ' res' → logprob: -5.543215274810791

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49226054549217224
    2. 'result' → logprob: -1.7422605752944946
    3. 'res' → logprob: -1.9922605752944946
    4. 'return' → logprob: -3.492260456085205
    5. ' res' → logprob: -4.117260456085205
    6. ')' → logprob: -5.617260456085205
    7. ' result' → logprob: -5.742260456085205
    8. 'r' → logprob: -5.992260456085205
    9. 's' → logprob: -5.992260456085205
    10. '    
' → logprob: -6.242260456085205

Token 108: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.08415740728378296
    2. 'return' → logprob: -2.5841574668884277
    3. 'ans' → logprob: -6.209157466888428
    4. 'result' → logprob: -6.584157466888428
    5. 's' → logprob: -6.709157466888428
    6. 'total' → logprob: -7.959157466888428
    7. 'r' → logprob: -9.33415699005127
    8. 'ret' → logprob: -9.33415699005127
    9. ' res' → logprob: -9.83415699005127
    10. ' return' → logprob: -10.83415699005127

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022492945194244
    2. '=' → logprob: -1.9102249145507812
    3. ' ' → logprob: -15.285224914550781
    4. ' ' → logprob: -15.910224914550781
    5. ')' → logprob: -16.16022491455078
    6. ' +=' → logprob: -16.41022491455078
    7. ',' → logprob: -16.66022491455078
    8. 's' → logprob: -17.16022491455078
    9. '0' → logprob: -17.53522491455078
    10. '_' → logprob: -17.66022491455078

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21436944603919983
    2. '(dp' → logprob: -2.464369535446167
    3. 'dp' → logprob: -2.589369535446167
    4. '(' → logprob: -3.964369535446167
    5. ' dp' → logprob: -4.964369297027588
    6. ' ' → logprob: -5.464369297027588
    7. ' (' → logprob: -6.464369297027588
    8. '(
' → logprob: -7.464369297027588
    9. 'sum' → logprob: -8.089369773864746
    10. ' sum' → logprob: -10.214369773864746

Token 111: '0' (ID: 15)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8944405317306519
    2. '(dp' → logprob: -1.1444405317306519
    3. '0' → logprob: -1.3944405317306519
    4. '(' → logprob: -3.7694406509399414
    5. '(
' → logprob: -6.894440650939941
    6. 'sum' → logprob: -8.019440650939941
    7. ' dp' → logprob: -8.394440650939941
    8. ' (' → logprob: -10.144440650939941
    9. '(sum' → logprob: -10.644440650939941
    10. '((' → logprob: -11.019440650939941

Token 112: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7535058856010437
    2. '   ' → logprob: -1.3785059452056885
    3. '
' → logprob: -1.8785059452056885
    4. 'for' → logprob: -2.1285059452056885
    5. '<|end|>' → logprob: -5.878505706787109
    6. '    
' → logprob: -6.503505706787109
    7. '	for' → logprob: -7.128505706787109
    8. ' 
' → logprob: -9.00350570678711
    9. '  
' → logprob: -9.12850570678711
    10. ' ' → logprob: -10.00350570678711

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1651279181241989
    2. ' for' → logprob: -2.165127992630005
    3. 'for' → logprob: -3.290127992630005
    4. '
' → logprob: -9.040127754211426
    5. '    
' → logprob: -9.665127754211426
    6. '	for' → logprob: -10.540127754211426
    7. '<|end|>' → logprob: -11.790127754211426
    8. '```' → logprob: -12.290127754211426
    9. ' ' → logprob: -12.665127754211426
    10. '  ' → logprob: -13.040127754211426

Token 114: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005824613617733121
    2. ' for' → logprob: -7.750582695007324
    3. 'res' → logprob: -9.250582695007324
    4. '   ' → logprob: -10.000582695007324
    5. 'step' → logprob: -13.000582695007324
    6. 'max' → logprob: -13.125582695007324
    7. 'if' → logprob: -13.250582695007324
    8. 'return' → logprob: -14.250582695007324
    9. 'dp' → logprob: -14.500582695007324
    10. 't' → logprob: -14.750582695007324

Token 115: ' O' (ID: 532)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07061693072319031
    2. ' for' → logprob: -2.6956169605255127
    3. '   ' → logprob: -7.945616722106934
    4. 'res' → logprob: -8.570616722106934
    5. ' res' → logprob: -9.320616722106934
    6. 'step' → logprob: -12.195616722106934
    7. 'prev' → logprob: -12.445616722106934
    8. 'max' → logprob: -12.445616722106934
    9. 'return' → logprob: -12.945616722106934
    10. 'length' → logprob: -12.945616722106934

Token 116: 'uv' (ID: 6992)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3114361763000488
    2. 'for' → logprob: -1.6864361763000488
    3. 'f' → logprob: -1.8114361763000488
    4. ' for' → logprob: -2.436436176300049
    5. 'ver' → logprob: -2.561436176300049
    6. 'ffset' → logprob: -2.686436176300049
    7. 'pen' → logprob: -3.811436176300049
    8. 'ut' → logprob: -4.186436176300049
    9. 'r' → logprob: -4.311436176300049
    10. '   ' → logprob: -4.436436176300049

Token 117: 'rir' (ID: 16883)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0375486612319946
    2. 'for' → logprob: -1.1625486612319946
    3. 't' → logprob: -1.6625486612319946
    4. 'res' → logprob: -2.537548542022705
    5. '(res' → logprob: -4.162548542022705
    6. '       ' → logprob: -4.412548542022705
    7. 'r' → logprob: -4.912548542022705
    8. '```' → logprob: -5.787548542022705
    9. 'er' → logprob: -5.912548542022705
    10. 'f' → logprob: -6.162548542022705

Token 118: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22967678308486938
    2. ' for' → logprob: -1.6046767234802246
    3. '   ' → logprob: -5.479676723480225
    4. '
' → logprob: -10.979677200317383
    5. 'range' → logprob: -11.229677200317383
    6. ' ' → logprob: -11.854677200317383
    7. 'or' → logprob: -11.854677200317383
    8. ')' → logprob: -11.979677200317383
    9. '```' → logprob: -11.979677200317383
    10. ' range' → logprob: -12.229677200317383

Token 119: ' nouvelle' (ID: 24562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24674874544143677
    2. 'range' → logprob: -1.746748685836792
    3. ' for' → logprob: -3.746748685836792
    4. ' range' → logprob: -4.746748924255371
    5. ' boucle' → logprob: -5.621748924255371
    6. 'parent' → logprob: -6.496748924255371
    7. 'r' → logprob: -6.621748924255371
    8. 'f' → logprob: -6.996748924255371
    9. ' parent' → logprob: -7.621748924255371
    10. ')' → logprob: -7.746748924255371

Token 120: ' paire' (ID: 148856)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.5247726440429688
    2. 'g' → logprob: -2.2747726440429688
    3. 'parent' → logprob: -2.7747726440429688
    4. 's' → logprob: -2.8997726440429688
    5. 'interval' → logprob: -2.8997726440429688
    6. 'brace' → logprob: -2.8997726440429688
    7. 'range' → logprob: -3.1497726440429688
    8. 'bou' → logprob: -3.2747726440429688
    9. 'cl' → logprob: -3.5247726440429688
    10. 'partition' → logprob: -3.5247726440429688

Token 121: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9008879661560059
    2. 'for' → logprob: -0.9008879661560059
    3. 'res' → logprob: -2.025887966156006
    4. ' for' → logprob: -3.150887966156006
    5. ' res' → logprob: -5.400887966156006
    6. '
' → logprob: -5.650887966156006
    7. '    
' → logprob: -6.400887966156006
    8. '(res' → logprob: -7.525887966156006
    9. ' ' → logprob: -8.150888442993164
    10. '=' → logprob: -8.275888442993164

Token 122: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.815036952495575
    2. '   ' → logprob: -1.0650370121002197
    3. 'res' → logprob: -1.9400370121002197
    4. ' for' → logprob: -2.9400370121002197
    5. '=' → logprob: -5.815036773681641
    6. '(
' → logprob: -6.065036773681641
    7. ' res' → logprob: -6.065036773681641
    8. 'if' → logprob: -6.565036773681641
    9. ' =' → logprob: -6.815036773681641
    10. '
' → logprob: -7.440036773681641

Token 123: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.030329803004860878
    2. 'if' → logprob: -3.530329704284668
    3. ' res' → logprob: -8.030329704284668
    4. ' if' → logprob: -8.780329704284668
    5. '   ' → logprob: -9.905329704284668
    6. 'for' → logprob: -10.155329704284668
    7. '+' → logprob: -12.780329704284668
    8. '(res' → logprob: -12.905329704284668
    9. 'return' → logprob: -13.030329704284668
    10. '    
' → logprob: -14.655329704284668

Token 124: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10095923393964767
    2. '+=' → logprob: -2.350959300994873
    3. ' =' → logprob: -7.600959300994873
    4. '=' → logprob: -8.350958824157715
    5. '   ' → logprob: -12.225958824157715
    6. ']+=' → logprob: -12.600958824157715
    7. ' ' → logprob: -13.100958824157715
    8. ' ' → logprob: -13.475958824157715
    9. ' |=' → logprob: -13.850958824157715
    10. '+' → logprob: -14.350958824157715

Token 125: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0009754245402291417
    2. 'j' → logprob: -7.000975608825684
    3. ' dp' → logprob: -11.000975608825684
    4. '(dp' → logprob: -11.250975608825684
    5. '2' → logprob: -11.625975608825684
    6. 'i' → logprob: -11.875975608825684
    7. '(' → logprob: -11.875975608825684
    8. 'k' → logprob: -12.750975608825684
    9. '(j' → logprob: -13.375975608825684
    10. '   ' → logprob: -13.500975608825684

Token 126: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.375001907348633
    3. '(
' → logprob: -19.250001907348633
    4. ' (' → logprob: -19.875001907348633
    5. '(I' → logprob: -20.125001907348633
    6. '((' → logprob: -20.250001907348633
    7. '(ii' → logprob: -22.375001907348633
    8. '[i' → logprob: -22.875001907348633
    9. 'i' → logprob: -22.875001907348633
    10. '```' → logprob: -23.375001907348633

Token 127: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002488618716597557
    2. ' -' → logprob: -6.002488613128662
    3. ' ' → logprob: -11.37748908996582
    4. '1' → logprob: -14.62748908996582
    5. '  ' → logprob: -14.62748908996582
    6. '   ' → logprob: -14.75248908996582
    7. '```' → logprob: -16.12748908996582
    8. '
' → logprob: -16.37748908996582
    9. ',' → logprob: -17.50248908996582
    10. '-
' → logprob: -17.62748908996582

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.742448022123426e-05
    2. ' ' → logprob: -9.625067710876465
    3. '2' → logprob: -14.437567710876465
    4. '   ' → logprob: -16.00006675720215
    5. '
' → logprob: -16.25006675720215
    6. ',' → logprob: -16.81256675720215
    7. '```' → logprob: -16.87506675720215
    8. 'i' → logprob: -17.00006675720215
    9. '3' → logprob: -17.93756675720215
    10. 'j' → logprob: -18.00006675720215

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006887249764986336
    2. ',j' → logprob: -7.375688552856445
    3. ' ,' → logprob: -9.875688552856445
    4. 'j' → logprob: -11.750688552856445
    5. '   ' → logprob: -13.750688552856445
    6. ',
' → logprob: -14.375688552856445
    7. ' ' → logprob: -15.625688552856445
    8. ')' → logprob: -15.875688552856445
    9. '```' → logprob: -16.125688552856445
    10. '0' → logprob: -16.125688552856445

Token 130: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00017183588352054358
    2. ' j' → logprob: -8.750171661376953
    3. '   ' → logprob: -11.875171661376953
    4. ' ' → logprob: -12.500171661376953
    5. '  ' → logprob: -13.875171661376953
    6. ')' → logprob: -14.750171661376953
    7. '	j' → logprob: -14.750171661376953
    8. '0' → logprob: -15.500171661376953
    9. '1' → logprob: -15.500171661376953
    10. '```' → logprob: -15.750171661376953

Token 131: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.087895967066288
    2. '+' → logprob: -2.7128958702087402
    3. ',' → logprob: -4.08789587020874
    4. ' -' → logprob: -7.33789587020874
    5. ' +' → logprob: -8.837896347045898
    6. '   ' → logprob: -9.087896347045898
    7. ' ' → logprob: -9.962896347045898
    8. '1' → logprob: -10.587896347045898
    9. ' ,' → logprob: -10.712896347045898
    10. ',k' → logprob: -11.962896347045898

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5120287066092715e-05
    2. '-' → logprob: -10.625035285949707
    3. ' ' → logprob: -12.250035285949707
    4. '+' → logprob: -12.875035285949707
    5. '   ' → logprob: -14.125035285949707
    6. '```' → logprob: -14.250035285949707
    7. '2' → logprob: -14.687535285949707
    8. '0' → logprob: -14.875035285949707
    9. ',' → logprob: -15.875035285949707
    10. ')' → logprob: -16.18753433227539

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016824401682242751
    2. ',k' → logprob: -6.626682281494141
    3. ' ,' → logprob: -8.00168228149414
    4. 'k' → logprob: -11.12668228149414
    5. ')' → logprob: -12.87668228149414
    6. ' k' → logprob: -13.87668228149414
    7. ',j' → logprob: -14.00168228149414
    8. ' ' → logprob: -14.50168228149414
    9. ',
' → logprob: -15.37668228149414
    10. '   ' → logprob: -15.37668228149414

Token 134: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.088346359931165e-07
    2. ' k' → logprob: -14.250000953674316
    3. ' ' → logprob: -16.75
    4. ')' → logprob: -17.375
    5. '(k' → logprob: -17.625
    6. 'max' → logprob: -17.75
    7. ',k' → logprob: -17.75
    8. '   ' → logprob: -17.75
    9. 'kx' → logprob: -19.5
    10. '  ' → logprob: -19.625

Token 135: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0064210714772343636
    2. '+' → logprob: -5.131421089172363
    3. '-' → logprob: -8.256421089172363
    4. ')%' → logprob: -9.006421089172363
    5. ' )' → logprob: -10.131421089172363
    6. ' +' → logprob: -11.006421089172363
    7. ')
' → logprob: -11.131421089172363
    8. '   ' → logprob: -11.381421089172363
    9. ')+' → logprob: -12.006421089172363
    10. ' -' → logprob: -12.506421089172363

Token 136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4454698860645294
    2. '(i' → logprob: -1.945469856262207
    3. '(j' → logprob: -2.195469856262207
    4. '(' → logprob: -2.445469856262207
    5. ' (' → logprob: -4.945469856262207
    6. 'j' → logprob: -5.695469856262207
    7. 'int' → logprob: -6.320469856262207
    8. '(int' → logprob: -6.320469856262207
    9. '(N' → logprob: -6.820469856262207
    10. ' ' → logprob: -6.945469856262207

Token 137: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5009623765945435
    2. '(i' → logprob: -1.5009623765945435
    3. '(' → logprob: -2.000962257385254
    4. '(j' → logprob: -3.750962257385254
    5. '0' → logprob: -5.875962257385254
    6. 'int' → logprob: -6.250962257385254
    7. '(int' → logprob: -6.375962257385254
    8. '((' → logprob: -6.625962257385254
    9. 'j' → logprob: -6.875962257385254
    10. 'i' → logprob: -7.000962257385254

Token 138: '*(' (ID: 14793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018363336857873946
    2. ' )' → logprob: -9.375184059143066
    3. ')
' → logprob: -10.375184059143066
    4. ')%' → logprob: -10.625184059143066
    5. '+' → logprob: -11.750184059143066
    6. '%' → logprob: -11.750184059143066
    7. ')*' → logprob: -11.750184059143066
    8. '   ' → logprob: -12.125184059143066
    9. 'if' → logprob: -13.000184059143066
    10. ' if' → logprob: -13.250184059143066

Token 139: 'j' (ID: 73)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8867545127868652
    2. 'j' → logprob: -1.5117545127868652
    3. 'i' → logprob: -1.7617545127868652
    4. '(N' → logprob: -2.5117545127868652
    5. '(j' → logprob: -2.5117545127868652
    6. '(' → logprob: -3.7617545127868652
    7. '1' → logprob: -5.386754512786865
    8. 'N' → logprob: -6.386754512786865
    9. ' (' → logprob: -7.511754512786865
    10. 'dp' → logprob: -7.761754512786865

Token 140: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1792815923690796
    2. ')' → logprob: -2.429281711578369
    3. '))' → logprob: -2.804281711578369
    4. ' -' → logprob: -4.804281711578369
    5. '+' → logprob: -5.929281711578369
    6. '>' → logprob: -6.304281711578369
    7. ')+' → logprob: -6.929281711578369
    8. ' )' → logprob: -8.054281234741211
    9. ' >' → logprob: -8.304281234741211
    10. ')))' → logprob: -8.679281234741211

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002835040504578501
    2. ' ' → logprob: -8.750283241271973
    3. '2' → logprob: -9.125283241271973
    4. 'i' → logprob: -12.375283241271973
    5. '0' → logprob: -12.562783241271973
    6. '-' → logprob: -13.437783241271973
    7. '```' → logprob: -14.125283241271973
    8. ')' → logprob: -14.187783241271973
    9. 'j' → logprob: -14.562783241271973
    10. '   ' → logprob: -14.812783241271973

Token 142: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013687043450772762
    2. '))' → logprob: -4.5136871337890625
    3. ' )' → logprob: -6.2636871337890625
    4. '+' → logprob: -8.138687133789062
    5. ')+' → logprob: -9.013687133789062
    6. '   ' → logprob: -9.513687133789062
    7. ' ' → logprob: -9.888687133789062
    8. ')
' → logprob: -9.888687133789062
    9. ')%' → logprob: -10.263687133789062
    10. ')))' → logprob: -10.888687133789062

Token 143: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006752623594366014
    2. ')%' → logprob: -7.625675201416016
    3. ')
' → logprob: -9.375675201416016
    4. ' )' → logprob: -9.500675201416016
    5. '   ' → logprob: -11.375675201416016
    6. '%' → logprob: -11.625675201416016
    7. ')
' → logprob: -13.500675201416016
    8. ' ' → logprob: -13.625675201416016
    9. ')

' → logprob: -14.000675201416016
    10. '```' → logprob: -14.250675201416016

Token 144: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028570592403411865
    2. ' ' → logprob: -6.252857208251953
    3. '2' → logprob: -7.002857208251953
    4. '3' → logprob: -11.252857208251953
    5. 'mod' → logprob: -13.752857208251953
    6. '(' → logprob: -13.815357208251953
    7. '-' → logprob: -13.877857208251953
    8. '4' → logprob: -14.565357208251953
    9. '0' → logprob: -14.815357208251953
    10. 'j' → logprob: -15.440357208251953

Token 145: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0061388881877064705
    2. '2' → logprob: -5.131138801574707
    3. ' ' → logprob: -8.631138801574707
    4. '3' → logprob: -11.506138801574707
    5. '0' → logprob: -12.381138801574707
    6. '(' → logprob: -12.756138801574707
    7. 'i' → logprob: -12.756138801574707
    8. '4' → logprob: -13.568638801574707
    9. 'mod' → logprob: -13.568638801574707
    10. '   ' → logprob: -13.631138801574707

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004096093121916056
    2. ' )' → logprob: -5.879096031188965
    3. '*' → logprob: -8.004096031188965
    4. ')
' → logprob: -8.504096031188965
    5. ' ' → logprob: -8.629096031188965
    6. '))' → logprob: -8.879096031188965
    7. '*j' → logprob: -9.254096031188965
    8. ')*' → logprob: -9.879096031188965
    9. 'j' → logprob: -10.379096031188965
    10. '   ' → logprob: -10.379096031188965

Token 147: ' if' (ID: 538)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5911223888397217
    2. '%' → logprob: -1.0911223888397217
    3. ')' → logprob: -2.4661223888397217
    4. '
' → logprob: -3.7161223888397217
    5. 'res' → logprob: -7.591122627258301
    6. ')%' → logprob: -8.7161226272583
    7. '   ' → logprob: -9.4661226272583
    8. '
' → logprob: -9.4661226272583
    9. '<|end|>' → logprob: -9.7161226272583
    10. ' ' → logprob: -10.0911226272583

Token 148: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.022768177092075348
    2. ' j' → logprob: -3.897768259048462
    3. '(j' → logprob: -6.397768020629883
    4. ' (' → logprob: -8.522768020629883
    5. 'i' → logprob: -8.772768020629883
    6. '(i' → logprob: -9.772768020629883
    7. 'k' → logprob: -9.897768020629883
    8. ' ' → logprob: -10.272768020629883
    9. '(' → logprob: -11.022768020629883
    10. ' i' → logprob: -11.272768020629883

Token 149: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6354278326034546
    2. ' >' → logprob: -0.7604278326034546
    3. '>=' → logprob: -6.260427951812744
    4. ' >=' → logprob: -7.510427951812744
    5. '-' → logprob: -8.510427474975586
    6. ' ' → logprob: -10.510427474975586
    7. '+' → logprob: -10.760427474975586
    8. ' <' → logprob: -11.010427474975586
    9. '<=' → logprob: -11.010427474975586
    10. '<' → logprob: -11.760427474975586

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.739826181321405e-05
    2. ' ' → logprob: -10.25004768371582
    3. '2' → logprob: -11.50004768371582
    4. '0' → logprob: -13.75004768371582
    5. '<|end|>' → logprob: -15.68754768371582
    6. '   ' → logprob: -15.93754768371582
    7. '```' → logprob: -16.18754768371582
    8. 'and' → logprob: -16.93754768371582
    9. '(' → logprob: -17.18754768371582
    10. '>' → logprob: -17.50004768371582

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.500017166137695
    3. '2' → logprob: -12.375017166137695
    4. '0' → logprob: -12.875017166137695
    5. '```' → logprob: -16.437517166137695
    6. '<|end|>' → logprob: -16.500017166137695
    7. '   ' → logprob: -17.312517166137695
    8. '(' → logprob: -17.687517166137695
    9. 'and' → logprob: -18.000017166137695
    10. 'else' → logprob: -18.000017166137695

Token 152: ' and' (ID: 326)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.1799442023038864
    2. 'else' → logprob: -1.8049441576004028
    3. ' ' → logprob: -8.804944038391113
    4. '<|end|>' → logprob: -11.054944038391113
    5. '	else' → logprob: -11.679944038391113
    6. ')' → logprob: -11.679944038391113
    7. '   ' → logprob: -12.554944038391113
    8. '<|end|>' → logprob: -12.804944038391113
    9. ' ' → logprob: -13.429944038391113
    10. '+' → logprob: -13.429944038391113

Token 153: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.007875264622271061
    2. 'j' → logprob: -5.632875442504883
    3. 'i' → logprob: -6.132875442504883
    4. ' k' → logprob: -6.632875442504883
    5. '2' → logprob: -8.007875442504883
    6. '(k' → logprob: -8.257875442504883
    7. '0' → logprob: -9.757875442504883
    8. '(i' → logprob: -10.632875442504883
    9. ' i' → logprob: -10.882875442504883
    10. ' j' → logprob: -10.882875442504883

Token 154: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.14498305320739746
    2. ' >=' → logprob: -2.0199830532073975
    3. '-' → logprob: -6.269983291625977
    4. '>' → logprob: -8.269983291625977
    5. ' -' → logprob: -9.769983291625977
    6. ' ' → logprob: -10.894983291625977
    7. '   ' → logprob: -11.019983291625977
    8. ' >' → logprob: -11.144983291625977
    9. ')>=' → logprob: -11.519983291625977
    10. ']>=' → logprob: -11.769983291625977

Token 155: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2951090633869171
    2. '0' → logprob: -1.5451090335845947
    3. ' ' → logprob: -3.1701090335845947
    4. '4' → logprob: -9.420108795166016
    5. '   ' → logprob: -9.795108795166016
    6. '(' → logprob: -10.045108795166016
    7. '1' → logprob: -10.295108795166016
    8. ' (' → logprob: -11.045108795166016
    9. '  ' → logprob: -11.545108795166016
    10. '-' → logprob: -11.795108795166016

Token 156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.013480070978403091
    2. '0' → logprob: -5.013480186462402
    3. ' ' → logprob: -5.013480186462402
    4. '(' → logprob: -9.763480186462402
    5. '4' → logprob: -11.263480186462402
    6. '-' → logprob: -12.075980186462402
    7. '   ' → logprob: -12.263480186462402
    8. ' (' → logprob: -12.575980186462402
    9. '1' → logprob: -13.013480186462402
    10. '  ' → logprob: -13.200980186462402

Token 157: '*(' (ID: 14793)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4108455181121826
    2. 'else' → logprob: -1.1608455181121826
    3. '*' → logprob: -5.160845756530762
    4. '*(' → logprob: -5.785845756530762
    5. ')' → logprob: -6.160845756530762
    6. '+' → logprob: -6.285845756530762
    7. 'and' → logprob: -6.285845756530762
    8. ' and' → logprob: -6.410845756530762
    9. '   ' → logprob: -6.535845756530762
    10. 'res' → logprob: -6.660845756530762

Token 158: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009834477677941322
    2. '(j' → logprob: -4.634834289550781
    3. ' j' → logprob: -10.009834289550781
    4. '1' → logprob: -11.259834289550781
    5. ' (' → logprob: -11.259834289550781
    6. '	j' → logprob: -13.009834289550781
    7. '(' → logprob: -13.634834289550781
    8. '_j' → logprob: -13.759834289550781
    9. '   ' → logprob: -14.634834289550781
    10. ')' → logprob: -14.759834289550781

Token 159: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006728279870003462
    2. ' -' → logprob: -5.006728172302246
    3. '1' → logprob: -11.881728172302246
    4. ' ' → logprob: -13.006728172302246
    5. ')' → logprob: -13.256728172302246
    6. '   ' → logprob: -14.256728172302246
    7. '```' → logprob: -15.006728172302246
    8. '  ' → logprob: -16.381729125976562
    9. '<|end|>' → logprob: -16.381729125976562
    10. '<|end|>' → logprob: -16.569229125976562

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.76628842484206e-05
    2. ' ' → logprob: -10.375067710876465
    3. '2' → logprob: -10.625067710876465
    4. '<|end|>' → logprob: -12.750067710876465
    5. '<|end|>' → logprob: -12.875067710876465
    6. '```' → logprob: -13.812567710876465
    7. '-' → logprob: -14.687567710876465
    8. '
' → logprob: -14.750067710876465
    9. '+' → logprob: -14.750067710876465
    10. 'from' → logprob: -14.937567710876465

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11787085980176926
    2. ')+' → logprob: -2.242870807647705
    3. '+' → logprob: -5.492870807647705
    4. ' +' → logprob: -7.992870807647705
    5. ' )' → logprob: -8.617871284484863
    6. '   ' → logprob: -8.742871284484863
    7. 'else' → logprob: -9.992871284484863
    8. ' else' → logprob: -9.992871284484863
    9. ')
' → logprob: -10.992871284484863
    10. '```' → logprob: -11.117871284484863

Token 162: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3496180474758148
    2. ' else' → logprob: -1.8496180772781372
    3. ' +' → logprob: -2.3496179580688477
    4. 'else' → logprob: -3.2246179580688477
    5. '-' → logprob: -6.349617958068848
    6. ' -' → logprob: -8.599617958068848
    7. '   ' → logprob: -8.724617958068848
    8. 'and' → logprob: -8.974617958068848
    9. ' and' → logprob: -9.474617958068848
    10. ' ' → logprob: -9.474617958068848

Token 163: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006279678200371563
    2. ' ' → logprob: -7.3756279945373535
    3. '   ' → logprob: -14.875627517700195
    4. '```' → logprob: -15.000627517700195
    5. '1' → logprob: -15.500627517700195
    6. '0' → logprob: -16.000627517700195
    7. '4' → logprob: -16.313127517700195
    8. '  ' → logprob: -16.375627517700195
    9. '<|end|>' → logprob: -17.000627517700195
    10. ' ' → logprob: -17.500627517700195

Token 164: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.64970643306151e-05
    2. ' ' → logprob: -9.375086784362793
    3. '```' → logprob: -14.125086784362793
    4. '   ' → logprob: -15.125086784362793
    5. '<|end|>' → logprob: -15.625086784362793
    6. '  ' → logprob: -16.375085830688477
    7. '0' → logprob: -16.500085830688477
    8. '1' → logprob: -16.750085830688477
    9. '.' → logprob: -17.062585830688477
    10. '
' → logprob: -17.250085830688477

Token 165: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06997133791446686
    2. 'else' → logprob: -2.6949713230133057
    3. ' ' → logprob: -10.694971084594727
    4. '   ' → logprob: -12.444971084594727
    5. '    ' → logprob: -13.319971084594727
    6. '
' → logprob: -13.569971084594727
    7. 'res' → logprob: -13.694971084594727
    8. '+' → logprob: -13.819971084594727
    9. '	else' → logprob: -14.069971084594727
    10. '  ' → logprob: -14.819971084594727

Token 166: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007117166533134878
    2. ' ' → logprob: -7.250711917877197
    3. '   ' → logprob: -13.875711441040039
    4. 'res' → logprob: -14.375711441040039
    5. '  ' → logprob: -16.62571144104004
    6. '    ' → logprob: -17.00071144104004
    7. ' res' → logprob: -17.25071144104004
    8. 'None' → logprob: -17.75071144104004
    9. ' ' → logprob: -17.81321144104004
    10. '     ' → logprob: -18.31321144104004

Token 167: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.607391408877447e-05
    2. ' ' → logprob: -10.250036239624023
    3. 'res' → logprob: -14.500036239624023
    4. '   ' → logprob: -16.375036239624023
    5. '  ' → logprob: -18.875036239624023
    6. '```' → logprob: -18.875036239624023
    7. 'None' → logprob: -19.312536239624023
    8. '
' → logprob: -19.437536239624023
    9. '    ' → logprob: -19.687536239624023
    10. '           ' → logprob: -19.750036239624023

Token 168: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8166841268539429
    2. '   ' → logprob: -1.0666841268539429
    3. '\n' → logprob: -2.1916842460632324
    4. ')' → logprob: -3.6916842460632324
    5. '    
' → logprob: -3.9416842460632324
    6. '<|end|>' → logprob: -4.066684246063232
    7. '  
' → logprob: -4.566684246063232
    8. ' ' → logprob: -4.816684246063232
    9. ' 
' → logprob: -4.941684246063232
    10. '+' → logprob: -5.066684246063232

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035849444568157196
    2. '
' → logprob: -4.410849571228027
    3. '    
' → logprob: -4.910849571228027
    4. '<|end|>' → logprob: -5.160849571228027
    5. '  
' → logprob: -5.535849571228027
    6. 'res' → logprob: -6.160849571228027
    7. ' 
' → logprob: -7.035849571228027
    8. ')' → logprob: -7.160849571228027
    9. '  ' → logprob: -7.285849571228027
    10. '+' → logprob: -7.410849571228027

Token 170: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2546710968017578
    2. '   ' → logprob: -2.254671096801758
    3. '\n' → logprob: -2.629671096801758
    4. '
' → logprob: -3.879671096801758
    5. '    
' → logprob: -4.629671096801758
    6. '  
' → logprob: -5.504671096801758
    7. '\' → logprob: -5.629671096801758
    8. '+' → logprob: -6.004671096801758
    9. ')' → logprob: -6.504671096801758
    10. ' res' → logprob: -6.504671096801758

Token 171: ' Cr' (ID: 5790)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.028469646349549294
    2. ' res' → logprob: -4.153469562530518
    3. '#' → logprob: -4.528469562530518
    4. 'O' → logprob: -6.903469562530518
    5. ' O' → logprob: -9.153470039367676
    6. ' #' → logprob: -9.278470039367676
    7. 'fer' → logprob: -9.528470039367676
    8. 'ouvrir' → logprob: -9.778470039367676
    9. 'Res' → logprob: -10.153470039367676
    10. 'Ajouter' → logprob: -10.403470039367676

Token 172: 'éer' (ID: 83012)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.021959617733955383
    2. 'res' → logprob: -3.8969595432281494
    3. 'és' → logprob: -7.6469597816467285
    4. 'ont' → logprob: -8.27195930480957
    5. 'dp' → logprob: -8.89695930480957
    6. 'ess' → logprob: -9.52195930480957
    7. 'e' → logprob: -9.52195930480957
    8. '=' → logprob: -9.89695930480957
    9. 'eser' → logprob: -10.39695930480957
    10. '+=' → logprob: -10.52195930480957

Token 173: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6031054854393005
    2. 'res' → logprob: -1.9781055450439453
    3. ' res' → logprob: -2.6031055450439453
    4. ' un' → logprob: -2.7281055450439453
    5. ' dp' → logprob: -2.7281055450439453
    6. ' une' → logprob: -3.1031055450439453
    7. '(dp' → logprob: -3.2281055450439453
    8. '(res' → logprob: -4.478105545043945
    9. 'une' → logprob: -5.478105545043945
    10. 'un' → logprob: -6.103105545043945

Token 174: ' paire' (ID: 148856)
  Prédit: ' paire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paire' → logprob: -0.679859459400177
    2. 'pa' → logprob: -1.1798593997955322
    3. 'res' → logprob: -2.8048593997955322
    4. ' nouvelle' → logprob: -3.5548593997955322
    5. 'nou' → logprob: -3.6798593997955322
    6. ' res' → logprob: -4.179859638214111
    7. 'p' → logprob: -4.179859638214111
    8. 'pair' → logprob: -4.554859638214111
    9. 'pause' → logprob: -5.054859638214111
    10. ' ' → logprob: -5.554859638214111

Token 175: ' individuelle' (ID: 88284)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03766442835330963
    2. '   ' → logprob: -3.6626644134521484
    3. ' res' → logprob: -5.287664413452148
    4. '(res' → logprob: -5.537664413452148
    5. '
' → logprob: -7.037664413452148
    6. ' +=' → logprob: -7.912664413452148
    7. '+=' → logprob: -8.287664413452148
    8. '(i' → logprob: -8.287664413452148
    9. '=' → logprob: -8.662664413452148
    10. 'if' → logprob: -9.162664413452148

Token 176: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0008808538550511003
    2. ' res' → logprob: -7.250880718231201
    3. '   ' → logprob: -8.75088119506836
    4. '(res' → logprob: -11.75088119506836
    5. '
' → logprob: -12.37588119506836
    6. '+' → logprob: -16.37588119506836
    7. '_res' → logprob: -16.37588119506836
    8. '	res' → logprob: -16.75088119506836
    9. 'ress' → logprob: -17.62588119506836
    10. ' ' → logprob: -17.62588119506836

Token 177: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.001852131332270801
    2. '   ' → logprob: -6.751852035522461
    3. ' res' → logprob: -7.376852035522461
    4. '
' → logprob: -10.126852035522461
    5. '(res' → logprob: -11.126852035522461
    6. '	res' → logprob: -15.126852035522461
    7. '+' → logprob: -15.251852035522461
    8. 'for' → logprob: -15.626852035522461
    9. '_res' → logprob: -16.25185203552246
    10. 'ress' → logprob: -16.37685203552246

Token 178: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.2014530897140503
    2. ' res' → logprob: -1.7014530897140503
    3. '   ' → logprob: -10.57645320892334
    4. '(res' → logprob: -12.20145320892334
    5. '+' → logprob: -12.82645320892334
    6. 'dp' → logprob: -13.20145320892334
    7. ' dp' → logprob: -13.95145320892334
    8. ' ' → logprob: -14.20145320892334
    9. ' ' → logprob: -14.57645320892334
    10. ' (' → logprob: -14.57645320892334

Token 179: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.57600337266922
    2. ' +=' → logprob: -0.82600337266922
    3. '=' → logprob: -10.326003074645996
    4. '   ' → logprob: -11.201003074645996
    5. '+=(' → logprob: -11.951003074645996
    6. ']+=' → logprob: -12.576003074645996
    7. ' -=' → logprob: -12.701003074645996
    8. '-=' → logprob: -13.451003074645996
    9. ' =' → logprob: -14.451003074645996
    10. '+="' → logprob: -14.576003074645996

Token 180: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20309939980506897
    2. ' dp' → logprob: -1.7030993700027466
    3. '2' → logprob: -7.078099250793457
    4. '(dp' → logprob: -7.953099250793457
    5. 'j' → logprob: -8.828099250793457
    6. ' ' → logprob: -9.328099250793457
    7. '(' → logprob: -10.078099250793457
    8. ' (' → logprob: -10.203099250793457
    9. '   ' → logprob: -10.453099250793457
    10. '1' → logprob: -10.453099250793457

Token 181: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.125
    3. '(I' → logprob: -18.0
    4. ' (' → logprob: -18.875
    5. '(
' → logprob: -20.0
    6. 'i' → logprob: -20.5
    7. '(ii' → logprob: -20.875
    8. '(n' → logprob: -22.125
    9. '[i' → logprob: -22.25
    10. ',i' → logprob: -22.375

Token 182: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.170270353322849e-05
    2. ' -' → logprob: -9.750061988830566
    3. '(i' → logprob: -13.125061988830566
    4. '(' → logprob: -14.250061988830566
    5. 'i' → logprob: -15.625061988830566
    6. '   ' → logprob: -16.00006103515625
    7. '1' → logprob: -16.25006103515625
    8. ',' → logprob: -16.37506103515625
    9. ' ' → logprob: -16.50006103515625
    10. '-i' → logprob: -16.50006103515625

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -15.75000286102295
    4. '-' → logprob: -16.437501907348633
    5. '2' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.312501907348633
    7. 'i' → logprob: -17.937501907348633
    8. '<|end|>' → logprob: -18.062501907348633
    9. 'from' → logprob: -18.687501907348633
    10. '۱' → logprob: -18.750001907348633

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004119616060052067
    2. ' ,' → logprob: -8.500411987304688
    3. ',j' → logprob: -8.500411987304688
    4. '   ' → logprob: -13.250411987304688
    5. ',
' → logprob: -13.500411987304688
    6. 'j' → logprob: -14.000411987304688
    7. ' ' → logprob: -15.125411987304688
    8. ')' → logprob: -15.500411987304688
    9. '```' → logprob: -15.625411987304688
    10. '  ' → logprob: -16.625411987304688

Token 185: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.142741397023201
    2. ' j' → logprob: -2.0177414417266846
    3. '   ' → logprob: -10.267741203308105
    4. ' ' → logprob: -11.392741203308105
    5. ',' → logprob: -11.767741203308105
    6. '	j' → logprob: -12.392741203308105
    7. '  ' → logprob: -12.892741203308105
    8. ',j' → logprob: -13.017741203308105
    9. '    ' → logprob: -13.142741203308105
    10. '_j' → logprob: -15.142741203308105

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008215131238102913
    2. '   ' → logprob: -5.883214950561523
    3. ' ,' → logprob: -6.008214950561523
    4. '-' → logprob: -6.633214950561523
    5. ',j' → logprob: -7.133214950561523
    6. ' ' → logprob: -7.258214950561523
    7. '  ' → logprob: -9.633214950561523
    8. '       ' → logprob: -10.758214950561523
    9. ',k' → logprob: -12.008214950561523
    10. '+' → logprob: -12.133214950561523

Token 187: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0012103531043976545
    2. ' k' → logprob: -6.7512102127075195
    3. '   ' → logprob: -10.37621021270752
    4. ' ' → logprob: -12.50121021270752
    5. '  ' → logprob: -13.00121021270752
    6. ')' → logprob: -14.50121021270752
    7. '    ' → logprob: -14.75121021270752
    8. '           ' → logprob: -15.12621021270752
    9. '               ' → logprob: -15.12621021270752
    10. '	k' → logprob: -15.50121021270752

Token 188: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06123139336705208
    2. '-' → logprob: -3.3112313747406006
    3. ',' → logprob: -3.9362313747406006
    4. ' -' → logprob: -5.93623161315918
    5. ' )' → logprob: -7.68623161315918
    6. ' ,' → logprob: -8.93623161315918
    7. '   ' → logprob: -9.68623161315918
    8. ' ' → logprob: -11.18623161315918
    9. '    ' → logprob: -11.18623161315918
    10. '        ' → logprob: -11.31123161315918

Token 189: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5467782616615295
    2. '1' → logprob: -1.1717782020568848
    3. '0' → logprob: -2.4217782020568848
    4. 'j' → logprob: -4.171778202056885
    5. '(' → logprob: -5.546778202056885
    6. 'i' → logprob: -6.546778202056885
    7. ' ' → logprob: -7.046778202056885
    8. '(i' → logprob: -7.921778202056885
    9. '(j' → logprob: -8.296778678894043
    10. '4' → logprob: -8.921778678894043

Token 190: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5104374289512634
    2. '2' → logprob: -1.2604374885559082
    3. '0' → logprob: -2.260437488555908
    4. 'j' → logprob: -4.760437488555908
    5. '(' → logprob: -6.260437488555908
    6. 'i' → logprob: -7.135437488555908
    7. ' ' → logprob: -8.51043701171875
    8. '(i' → logprob: -8.76043701171875
    9. '(j' → logprob: -8.88543701171875
    10. '4' → logprob: -10.13543701171875

Token 191: '*j' (ID: 138193)
  Prédit: '*j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*j' → logprob: -0.04407382011413574
    2. '*' → logprob: -3.2940738201141357
    3. ')' → logprob: -5.919074058532715
    4. '*(' → logprob: -6.169074058532715
    5. ' *' → logprob: -7.669074058532715
    6. '*i' → logprob: -7.794074058532715
    7. 'j' → logprob: -8.044074058532715
    8. '*k' → logprob: -11.419074058532715
    9. ')*' → logprob: -12.169074058532715
    10. '*)' → logprob: -12.544074058532715

Token 192: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000476786372018978
    2. ' )' → logprob: -8.250476837158203
    3. ' if' → logprob: -8.625476837158203
    4. 'if' → logprob: -10.375476837158203
    5. '   ' → logprob: -12.750476837158203
    6. ' ' → logprob: -14.625476837158203
    7. ',' → logprob: -14.875476837158203
    8. ')
' → logprob: -15.500476837158203
    9. '-' → logprob: -15.875476837158203
    10. '  ' → logprob: -16.375476837158203

Token 193: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.016573619097471237
    2. 'if' → logprob: -4.141573429107666
    3. '   ' → logprob: -8.016573905944824
    4. '<|end|>' → logprob: -9.266573905944824
    5. '%' → logprob: -9.516573905944824
    6. '<|end|>' → logprob: -11.391573905944824
    7. ' %' → logprob: -11.516573905944824
    8. ' ' → logprob: -12.016573905944824
    9. '	if' → logprob: -12.391573905944824
    10. 'mod' → logprob: -12.766573905944824

Token 194: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.020618028938770294
    2. ' k' → logprob: -3.895617961883545
    3. 'j' → logprob: -9.895618438720703
    4. ' ' → logprob: -11.520618438720703
    5. ' j' → logprob: -12.270618438720703
    6. '0' → logprob: -12.270618438720703
    7. '   ' → logprob: -13.020618438720703
    8. '(k' → logprob: -13.395618438720703
    9. '2' → logprob: -14.145618438720703
    10. ' ' → logprob: -14.520618438720703

Token 195: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.38687369227409363
    2. ' >=' → logprob: -1.136873722076416
    3. '   ' → logprob: -13.886873245239258
    4. ' ' → logprob: -14.011873245239258
    5. '>' → logprob: -14.636873245239258
    6. '≥' → logprob: -15.761873245239258
    7. ']>=' → logprob: -16.136873245239258
    8. ')>=' → logprob: -16.511873245239258
    9. '[' → logprob: -17.136873245239258
    10. '-' → logprob: -17.261873245239258

Token 196: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0040793512016534805
    2. ' ' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.504079818725586
    4. '0' → logprob: -15.129079818725586
    5. '  ' → logprob: -16.129079818725586
    6. '(' → logprob: -17.129079818725586
    7. ' ' → logprob: -17.754079818725586
    8. '    ' → logprob: -18.504079818725586
    9. '```' → logprob: -18.629079818725586
    10. '1' → logprob: -18.754079818725586

Token 197: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002619318547658622
    2. ' ' → logprob: -8.250262260437012
    3. '0' → logprob: -14.750262260437012
    4. '(' → logprob: -16.375261306762695
    5. '   ' → logprob: -16.500261306762695
    6. '  ' → logprob: -17.375261306762695
    7. '1' → logprob: -18.125261306762695
    8. '
' → logprob: -18.250261306762695
    9. '```' → logprob: -18.750261306762695
    10. ' ' → logprob: -18.875261306762695

Token 198: '*j' (ID: 138193)
  Prédit: '*j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*j' → logprob: -0.0550319068133831
    2. '*' → logprob: -2.9300320148468018
    3. ' *' → logprob: -8.930031776428223
    4. '*k' → logprob: -12.180031776428223
    5. 'j' → logprob: -12.430031776428223
    6. ' ' → logprob: -13.180031776428223
    7. '*(' → logprob: -13.305031776428223
    8. '*i' → logprob: -13.930031776428223
    9. '   ' → logprob: -14.805031776428223
    10. 'else' → logprob: -14.805031776428223

Token 199: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.02324768900871277
    2. 'else' → logprob: -3.773247718811035
    3. ' ' → logprob: -13.398247718811035
    4. '	else' → logprob: -15.398247718811035
    5. '        ' → logprob: -16.39824676513672
    6. '   ' → logprob: -16.39824676513672
    7. ' ' → logprob: -16.52324676513672
    8. '    ' → logprob: -16.52324676513672
    9. '  ' → logprob: -17.27324676513672
    10. ' and' → logprob: -17.64824676513672

Token 200: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22757013142108917
    2. ' dp' → logprob: -1.8525701761245728
    3. '0' → logprob: -3.102570056915283
    4. 'res' → logprob: -7.102570056915283
    5. ' ' → logprob: -7.727570056915283
    6. '(dp' → logprob: -7.977570056915283
    7. ' res' → logprob: -9.227570533752441
    8. '(' → logprob: -10.852570533752441
    9. ' (' → logprob: -11.227570533752441
    10. '   ' → logprob: -11.727570533752441

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2093590348958969
    2. 'dp' → logprob: -1.709359049797058
    3. 'res' → logprob: -5.209359169006348
    4. ' dp' → logprob: -6.459359169006348
    5. ' ' → logprob: -7.334359169006348
    6. '(dp' → logprob: -8.959359169006348
    7. ' res' → logprob: -10.334359169006348
    8. '(' → logprob: -10.459359169006348
    9. '1' → logprob: -11.584359169006348
    10. '(res' → logprob: -12.084359169006348

Token 202: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018376799300312996
    2. '    
' → logprob: -5.51837682723999
    3. '  
' → logprob: -5.89337682723999
    4. '<|end|>' → logprob: -6.01837682723999
    5. '
' → logprob: -6.39337682723999
    6. '\n' → logprob: -6.89337682723999
    7. 'res' → logprob: -7.14337682723999
    8. ')' → logprob: -7.14337682723999
    9. '  ' → logprob: -7.26837682723999
    10. '\' → logprob: -7.26837682723999

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022027131635695696
    2. 'res' → logprob: -6.25220251083374
    3. 'return' → logprob: -9.502202987670898
    4. '```' → logprob: -9.502202987670898
    5. ' res' → logprob: -9.752202987670898
    6. '
' → logprob: -10.252202987670898
    7. '    
' → logprob: -10.627202987670898
    8. '\n' → logprob: -13.627202987670898
    9. '	res' → logprob: -14.002202987670898
    10. ' return' → logprob: -14.002202987670898

Token 204: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22754183411598206
    2. 'res' → logprob: -1.6025418043136597
    3. 'return' → logprob: -6.727541923522949
    4. ' res' → logprob: -7.727541923522949
    5. '```' → logprob: -8.35254192352295
    6. '    
' → logprob: -9.60254192352295
    7. '  ' → logprob: -10.22754192352295
    8. ' ' → logprob: -10.60254192352295
    9. '\' → logprob: -10.85254192352295
    10. '#' (adapté à ' #') → logprob: -10.97754192352295

Token 205: ' Ajouter' (ID: 165754)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0015489027136936784
    2. 'if' → logprob: -6.626548767089844
    3. ' res' → logprob: -8.626548767089844
    4. '#' → logprob: -10.751548767089844
    5. 'dp' → logprob: -11.876548767089844
    6. ' if' → logprob: -12.751548767089844
    7. '   ' → logprob: -12.751548767089844
    8. 'return' → logprob: -12.751548767089844
    9. '(res' → logprob: -13.501548767089844
    10. 'j' → logprob: -13.876548767089844

Token 206: ' à' (ID: 1221)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0968927145004272
    2. '(dp' → logprob: -1.2218927145004272
    3. ' dp' → logprob: -1.4718927145004272
    4. 'res' → logprob: -2.471892833709717
    5. ' res' → logprob: -3.221892833709717
    6. '(' → logprob: -5.096892833709717
    7. ' (' → logprob: -5.096892833709717
    8. '(res' → logprob: -5.971892833709717
    9. '   ' → logprob: -6.096892833709717
    10. '(
' → logprob: -8.596892356872559

Token 207: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.034309640526771545
    2. 'res' → logprob: -4.0343098640441895
    3. ' dp' → logprob: -4.4093098640441895
    4. '(dp' → logprob: -5.7843098640441895
    5. ' res' → logprob: -7.4093098640441895
    6. '(' → logprob: -10.034309387207031
    7. '(i' → logprob: -10.159309387207031
    8. '(res' → logprob: -10.159309387207031
    9. ' (' → logprob: -10.284309387207031
    10. '   ' → logprob: -11.284309387207031

Token 208: ' paire' (ID: 148856)
  Prédit: ' paire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paire' → logprob: -0.37699177861213684
    2. 'pa' → logprob: -1.7519917488098145
    3. 'pair' → logprob: -2.7519917488098145
    4. 'j' → logprob: -3.6269917488098145
    5. ' j' → logprob: -4.7519917488098145
    6. 'dp' → logprob: -5.0019917488098145
    7. ' pair' → logprob: -5.1269917488098145
    8. ')' → logprob: -5.2519917488098145
    9. 'res' → logprob: -5.6269917488098145
    10. ' ouverte' → logprob: -5.8769917488098145

Token 209: ' exist' (ID: 4310)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.258395791053772
    2. '(i' → logprob: -1.508395791053772
    3. '   ' → logprob: -5.383395671844482
    4. ' res' → logprob: -7.758395671844482
    5. '(j' → logprob: -7.758395671844482
    6. '(' → logprob: -7.883395671844482
    7. '(
' → logprob: -8.25839614868164
    8. '(res' → logprob: -8.75839614868164
    9. ' (' → logprob: -8.88339614868164
    10. '
' → logprob: -10.63339614868164

Token 210: 'ante' (ID: 2116)
  Prédit: 'ente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.22362984716892242
    2. 'ante' → logprob: -1.7236298322677612
    3. 'ent' → logprob: -4.598629951477051
    4. 'u' → logprob: -5.098629951477051
    5. 'e' → logprob: -6.598629951477051
    6. 'ue' → logprob: -7.098629951477051
    7. 'ing' → logprob: -7.098629951477051
    8. '   ' → logprob: -7.098629951477051
    9. 'nte' → logprob: -7.348629951477051
    10. 'entes' → logprob: -7.723629951477051

Token 211: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.045114465057849884
    2. '   ' → logprob: -3.170114517211914
    3. ' res' → logprob: -6.920114517211914
    4. '
' → logprob: -7.420114517211914
    5. '(res' → logprob: -7.670114517211914
    6. '	res' → logprob: -10.420114517211914
    7. '    
' → logprob: -11.670114517211914
    8. '  ' → logprob: -12.670114517211914
    9. '_res' → logprob: -12.795114517211914
    10. ' ' → logprob: -12.795114517211914

Token 212: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.01115428376942873
    2. '   ' → logprob: -4.5111541748046875
    3. ' res' → logprob: -9.761154174804688
    4. '(res' → logprob: -10.511154174804688
    5. '
' → logprob: -11.886154174804688
    6. '(i' → logprob: -12.761154174804688
    7. 'for' → logprob: -12.886154174804688
    8. '[i' → logprob: -13.011154174804688
    9. '```' → logprob: -13.511154174804688
    10. 'i' → logprob: -13.886154174804688

Token 213: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0013516645412892103
    2. ' res' → logprob: -6.626351833343506
    3. 'dp' → logprob: -11.001351356506348
    4. '   ' → logprob: -12.501351356506348
    5. 'if' (adapté à ' if') → logprob: -13.001351356506348
    6. 'j' → logprob: -13.626351356506348
    7. 'for' → logprob: -14.501351356506348
    8. '(res' → logprob: -14.876351356506348
    9. '
' → logprob: -15.376351356506348
    10. ' ' → logprob: -15.876351356506348

Token 214: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004637910984456539
    2. ' j' → logprob: -5.379637718200684
    3. ' ' → logprob: -11.879637718200684
    4. '   ' → logprob: -12.129637718200684
    5. 'k' → logprob: -13.504637718200684
    6. '	j' → logprob: -13.504637718200684
    7. 'i' → logprob: -14.129637718200684
    8. 'res' → logprob: -15.129637718200684
    9. '  ' → logprob: -15.129637718200684
    10. '0' → logprob: -15.254637718200684

Token 215: ' +' (ID: 659)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.28709185123443604
    2. ' >' → logprob: -1.412091851234436
    3. '>=' → logprob: -5.4120917320251465
    4. ' >=' → logprob: -6.7870917320251465
    5. '   ' → logprob: -8.412092208862305
    6. ' ' → logprob: -10.537092208862305
    7. '1' → logprob: -11.037092208862305
    8. '0' → logprob: -11.412092208862305
    9. ' and' → logprob: -11.787092208862305
    10. '  ' → logprob: -11.787092208862305

Token 216: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000500966387335211
    2. ' ' → logprob: -7.6255011558532715
    3. '+' → logprob: -12.125500679016113
    4. '2' → logprob: -13.000500679016113
    5. '   ' → logprob: -13.125500679016113
    6. '>' → logprob: -14.250500679016113
    7. '-' → logprob: -14.375500679016113
    8. '<|end|>' → logprob: -14.625500679016113
    9. '  ' → logprob: -14.875500679016113
    10. '0' → logprob: -15.000500679016113

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.73183855926618e-05
    2. ' ' → logprob: -9.625077247619629
    3. '2' → logprob: -12.500077247619629
    4. '+' → logprob: -12.625077247619629
    5. '   ' → logprob: -13.000077247619629
    6. '  ' → logprob: -14.625077247619629
    7. '-' → logprob: -14.750077247619629
    8. '0' → logprob: -15.250077247619629
    9. '<|end|>' → logprob: -15.375077247619629
    10. '>' → logprob: -16.000078201293945

Token 218: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3868741989135742
    2. ' <=' → logprob: -1.1368741989135742
    3. '<' → logprob: -13.886874198913574
    4. ')<=' → logprob: -14.386874198913574
    5. '>' → logprob: -14.511874198913574
    6. 'le' → logprob: -15.636874198913574
    7. ' ' → logprob: -15.886874198913574
    8. ' <' → logprob: -15.886874198913574
    9. ')' → logprob: -16.26187515258789
    10. '```' → logprob: -16.51187515258789

Token 219: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00038014890742488205
    2. ' N' → logprob: -7.875380039215088
    3. ' ' → logprob: -17.37537956237793
    4. '	N' → logprob: -18.00037956237793
    5. '   ' → logprob: -19.12537956237793
    6. 'n' → logprob: -19.25037956237793
    7. 'K' → logprob: -19.75037956237793
    8. 'M' → logprob: -20.50037956237793
    9. 'mod' → logprob: -20.62537956237793
    10. '_N' → logprob: -20.75037956237793

Token 220: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.02136641927063465
    2. ':' → logprob: -3.8963663578033447
    3. ' and' → logprob: -7.271366596221924
    4. '   ' → logprob: -9.396366119384766
    5. 'and' → logprob: -10.396366119384766
    6. ':
' → logprob: -12.021366119384766
    7. '):
' → logprob: -12.896366119384766
    8. ' :
' → logprob: -13.146366119384766
    9. ':

' → logprob: -13.271366119384766
    10. '       ' → logprob: -13.896366119384766

Token 221: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1435188204050064
    2. ' k' → logprob: -2.0185189247131348
    3. 'i' → logprob: -8.268518447875977
    4. 'j' → logprob: -8.768518447875977
    5. ' i' → logprob: -9.268518447875977
    6. '   ' → logprob: -9.268518447875977
    7. ' j' → logprob: -9.768518447875977
    8. 'res' → logprob: -9.893518447875977
    9. 'dp' → logprob: -10.518518447875977
    10. ' ' → logprob: -10.643518447875977

Token 222: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5377013087272644
    2. '>=' → logprob: -0.9127013087272644
    3. ' -' → logprob: -4.78770112991333
    4. '-' → logprob: -5.16270112991333
    5. '   ' → logprob: -8.537701606750488
    6. ' ' → logprob: -9.912701606750488
    7. '>' → logprob: -10.287701606750488
    8. '+' → logprob: -10.912701606750488
    9. ' -=' → logprob: -11.037701606750488
    10. '    ' → logprob: -11.412701606750488

Token 223: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03851120546460152
    2. ' ' → logprob: -3.288511276245117
    3. '0' → logprob: -8.413511276245117
    4. '(' → logprob: -9.663511276245117
    5. '1' → logprob: -9.788511276245117
    6. '   ' → logprob: -10.288511276245117
    7. ' (' → logprob: -10.538511276245117
    8. 'j' → logprob: -10.788511276245117
    9. '4' → logprob: -10.913511276245117
    10. '  ' → logprob: -11.976011276245117

Token 224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004439016804099083
    2. ' ' → logprob: -5.504438877105713
    3. '0' → logprob: -8.879439353942871
    4. '(' → logprob: -9.004439353942871
    5. '1' → logprob: -10.504439353942871
    6. 'j' → logprob: -10.629439353942871
    7. '   ' → logprob: -11.316939353942871
    8. 'k' → logprob: -11.441939353942871
    9. ' (' → logprob: -12.066939353942871
    10. '  ' → logprob: -12.691939353942871

Token 225: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.42034250497817993
    2. '*j' → logprob: -1.5453424453735352
    3. '*' → logprob: -2.045342445373535
    4. '(j' → logprob: -7.920342445373535
    5. ' *' → logprob: -8.795342445373535
    6. 'j' → logprob: -9.795342445373535
    7. '*((' → logprob: -11.295342445373535
    8. '*i' → logprob: -12.170342445373535
    9. ' *(' → logprob: -13.170342445373535
    10. '   ' → logprob: -13.420342445373535

Token 226: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011173728853464127
    2. '(j' → logprob: -4.511173725128174
    3. ' j' → logprob: -9.261174201965332
    4. ' (' → logprob: -11.636174201965332
    5. '(' → logprob: -11.636174201965332
    6. '   ' → logprob: -12.386174201965332
    7. '	j' → logprob: -13.011174201965332
    8. '[j' → logprob: -13.386174201965332
    9. '_j' → logprob: -13.511174201965332
    10. ' ' → logprob: -14.511174201965332

Token 227: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.028813470155000687
    2. ' +' → logprob: -3.903813362121582
    3. '):' → logprob: -6.028813362121582
    4. ')' → logprob: -6.403813362121582
    5. '   ' → logprob: -6.528813362121582
    6. ')+' → logprob: -6.903813362121582
    7. ':' → logprob: -6.903813362121582
    8. '):
' → logprob: -7.653813362121582
    9. ' ' → logprob: -10.403813362121582
    10. ':
' → logprob: -10.403813362121582

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.263011578586884e-05
    2. ' ' → logprob: -10.625042915344238
    3. '+' → logprob: -11.375042915344238
    4. '   ' → logprob: -12.625042915344238
    5. '2' → logprob: -13.500042915344238
    6. '```' → logprob: -14.375042915344238
    7. ')' → logprob: -15.125042915344238
    8. '(' → logprob: -15.625042915344238
    9. '
' → logprob: -15.625042915344238
    10. '0' → logprob: -15.625042915344238

Token 229: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3058145344257355
    2. '):' → logprob: -1.930814504623413
    3. ')' → logprob: -2.180814504623413
    4. '+' → logprob: -6.430814743041992
    5. ')+' → logprob: -6.430814743041992
    6. '):

' → logprob: -7.680814743041992
    7. '   ' → logprob: -7.930814743041992
    8. ':' → logprob: -8.055814743041992
    9. ' +' → logprob: -8.180814743041992
    10. ' ):
' → logprob: -8.305814743041992

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24308006465435028
    2. '   ' → logprob: -1.6180800199508667
    3. 'res' → logprob: -4.118080139160156
    4. ' res' → logprob: -6.868080139160156
    5. '
' → logprob: -9.368080139160156
    6. ':
' → logprob: -9.993080139160156
    7. '     ' → logprob: -11.618080139160156
    8. '           ' → logprob: -11.618080139160156
    9. '    
' → logprob: -11.868080139160156
    10. ':' → logprob: -11.868080139160156

Token 231: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -2.9160102712921798e-05
    2. ' res' → logprob: -10.500029563903809
    3. '   ' → logprob: -13.375029563903809
    4. '
' → logprob: -17.125028610229492
    5. '	res' → logprob: -17.875028610229492
    6. '       ' → logprob: -18.000028610229492
    7. '  ' → logprob: -19.875028610229492
    8. ' ' → logprob: -20.000028610229492
    9. '           ' → logprob: -20.375028610229492
    10. 'ress' → logprob: -20.875028610229492

Token 232: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25195780396461487
    2. ' +=' → logprob: -1.5019577741622925
    3. '   ' → logprob: -10.876957893371582
    4. ']+=' → logprob: -12.501957893371582
    5. '=' → logprob: -12.876957893371582
    6. '+' → logprob: -13.001957893371582
    7. '+=(' → logprob: -14.626957893371582
    8. '+="' → logprob: -15.126957893371582
    9. '+='' → logprob: -16.001956939697266
    10. '    ' → logprob: -16.376956939697266

Token 233: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001177012687548995
    2. ' dp' → logprob: -6.751176834106445
    3. '2' → logprob: -12.251176834106445
    4. '(dp' → logprob: -14.251176834106445
    5. 'j' → logprob: -14.876176834106445
    6. '	dp' → logprob: -14.876176834106445
    7. '   ' → logprob: -15.126176834106445
    8. ' ' → logprob: -16.251176834106445
    9. 'd' → logprob: -16.751176834106445
    10. 'dj' → logprob: -17.001176834106445

Token 234: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4675034284591675
    2. 'dp' → logprob: -1.2175034284591675
    3. '(j' → logprob: -2.592503547668457
    4. '(dp' → logprob: -6.467503547668457
    5. '(i' → logprob: -7.467503547668457
    6. 'i' → logprob: -8.467503547668457
    7. '(N' → logprob: -9.592503547668457
    8. '(' → logprob: -9.842503547668457
    9. ' j' → logprob: -9.967503547668457
    10. ' (' → logprob: -10.717503547668457

Token 235: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18676169216632843
    2. ' +' → logprob: -1.811761736869812
    3. ')' → logprob: -5.936761856079102
    4. ' *' → logprob: -6.311761856079102
    5. '*' → logprob: -6.436761856079102
    6. ')*' → logprob: -7.686761856079102
    7. '   ' → logprob: -8.311761856079102
    8. '-' → logprob: -8.936761856079102
    9. ' )' → logprob: -10.186761856079102
    10. ' -' → logprob: -10.811761856079102

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016074994346126914
    2. ' ' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.875161170959473
    4. '
' → logprob: -15.312661170959473
    5. ')' → logprob: -15.500161170959473
    6. '```' → logprob: -15.625161170959473
    7. '+' → logprob: -16.000160217285156
    8. '2' → logprob: -16.000160217285156
    9. '

' → logprob: -16.562660217285156
    10. '  ' → logprob: -16.687660217285156

Token 237: ')' (ID: 8)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3821573257446289
    2. '*' → logprob: -1.382157325744629
    3. ')' → logprob: -2.757157325744629
    4. ')*' → logprob: -6.132157325744629
    5. ',' → logprob: -7.632157325744629
    6. '   ' → logprob: -8.382157325744629
    7. ' )' → logprob: -9.757157325744629
    8. '-' → logprob: -10.382157325744629
    9. ' ' → logprob: -10.382157325744629
    10. ' *
' → logprob: -10.507157325744629

Token 238: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6931517124176025
    2. ' *' → logprob: -0.6931517124176025
    3. '*
' → logprob: -13.943151473999023
    4. ' *
' → logprob: -13.943151473999023
    5. ' ' → logprob: -13.943151473999023
    6. '
' → logprob: -14.943151473999023
    7. ' ' → logprob: -15.068151473999023
    8. '```' → logprob: -15.068151473999023
    9. ',' → logprob: -15.318151473999023
    10. '   ' → logprob: -15.568151473999023

Token 239: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001502598519437015
    2. ' dp' → logprob: -6.501502513885498
    3. '(dp' → logprob: -16.126502990722656
    4. '	dp' → logprob: -16.626502990722656
    5. 'd' → logprob: -18.751502990722656
    6. '_dp' → logprob: -19.376502990722656
    7. '.dp' → logprob: -19.501502990722656
    8. ' ' → logprob: -19.626502990722656
    9. '   ' → logprob: -19.626502990722656
    10. '```' → logprob: -20.001502990722656

Token 240: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. 'i' → logprob: -17.000001907348633
    4. '(
' → logprob: -18.125001907348633
    5. ' (' → logprob: -18.625001907348633
    6. ' i' → logprob: -20.625001907348633
    7. '(I' → logprob: -21.125001907348633
    8. ',i' → logprob: -21.625001907348633
    9. '```' → logprob: -22.375001907348633
    10. '[i' → logprob: -22.750001907348633

Token 241: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00021343429398257285
    2. '(i' → logprob: -9.000213623046875
    3. ' -' → logprob: -9.375213623046875
    4. 'i' → logprob: -13.250213623046875
    5. '(' → logprob: -13.500213623046875
    6. '-i' → logprob: -13.500213623046875
    7. '   ' → logprob: -15.375213623046875
    8. '```' → logprob: -16.125213623046875
    9. ' (' → logprob: -16.375213623046875
    10. ' ' → logprob: -17.000213623046875

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -18.75
    4. '   ' → logprob: -18.875
    5. ',' → logprob: -19.75
    6. '-' → logprob: -20.875
    7. '<|end|>' → logprob: -21.75
    8. '  ' → logprob: -22.0
    9. '       ' → logprob: -23.5
    10. '
' → logprob: -23.75

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023383046500384808
    2. '(' → logprob: -6.877338409423828
    3. ',j' → logprob: -7.252338409423828
    4. ' ,' → logprob: -7.627338409423828
    5. '(j' → logprob: -9.377338409423828
    6. ')' → logprob: -11.252338409423828
    7. 'j' → logprob: -12.127338409423828
    8. ' ' → logprob: -13.252338409423828
    9. ' j' → logprob: -13.252338409423828
    10. ' (' → logprob: -13.752338409423828

Token 244: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0380435548722744
    2. ' j' → logprob: -3.28804349899292
    3. '   ' → logprob: -13.663043975830078
    4. '	j' → logprob: -15.038043975830078
    5. ' ' → logprob: -15.413043975830078
    6. ',j' → logprob: -15.788043975830078
    7. '    ' → logprob: -15.913043975830078
    8. ',' → logprob: -16.913043975830078
    9. '  ' → logprob: -16.913043975830078
    10. '     ' → logprob: -17.788043975830078

Token 245: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.044498514384031296
    2. ',' → logprob: -3.1694984436035156
    3. ' +' → logprob: -6.669498443603516
    4. ' ,' → logprob: -8.794498443603516
    5. '   ' → logprob: -10.544498443603516
    6. '+,' → logprob: -11.044498443603516
    7. ',j' → logprob: -11.919498443603516
    8. '-' → logprob: -12.044498443603516
    9. '```' → logprob: -12.419498443603516
    10. ' ' → logprob: -12.544498443603516

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6537622034084052e-05
    2. ' ' → logprob: -10.75002670288086
    3. ',' → logprob: -12.75002670288086
    4. '2' → logprob: -13.62502670288086
    5. '   ' → logprob: -14.87502670288086
    6. '```' → logprob: -15.12502670288086
    7. '0' → logprob: -15.87502670288086
    8. '
' → logprob: -16.31252670288086
    9. ')' → logprob: -17.06252670288086
    10. ' ,' → logprob: -17.56252670288086

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013884471263736486
    2. ',k' → logprob: -6.7513885498046875
    3. ' ,' → logprob: -8.501388549804688
    4. 'k' → logprob: -11.376388549804688
    5. ' k' → logprob: -13.751388549804688
    6. '(k' → logprob: -14.001388549804688
    7. ')' → logprob: -14.501388549804688
    8. '(' → logprob: -14.751388549804688
    9. '```' → logprob: -15.501388549804688
    10. ',
' → logprob: -15.501388549804688

Token 248: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011050059460103512
    2. ' k' → logprob: -4.511050224304199
    3. '   ' → logprob: -14.3860502243042
    4. ' ' → logprob: -14.3860502243042
    5. '    ' → logprob: -15.0110502243042
    6. '  ' → logprob: -15.2610502243042
    7. '           ' → logprob: -16.136049270629883
    8. '          ' → logprob: -16.511049270629883
    9. '	k' → logprob: -16.761049270629883
    10. '              ' → logprob: -17.386049270629883

Token 249: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25202229619026184
    2. ' -' → logprob: -1.5020222663879395
    3. ')' → logprob: -9.502022743225098
    4. ' ' → logprob: -11.627022743225098
    5. '2' → logprob: -12.252022743225098
    6. '   ' → logprob: -12.752022743225098
    7. '  ' → logprob: -15.002022743225098
    8. '-
' → logprob: -15.127022743225098
    9. ' ' → logprob: -15.377022743225098
    10. ',' → logprob: -15.377022743225098

Token 250: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004633164964616299
    2. ' ' → logprob: -5.379632949829102
    3. '   ' → logprob: -12.004632949829102
    4. '(' → logprob: -12.129632949829102
    5. '  ' → logprob: -14.504632949829102
    6. ' (' → logprob: -15.379632949829102
    7. '1' → logprob: -15.879632949829102
    8. '0' → logprob: -16.0046329498291
    9. '    ' → logprob: -16.2546329498291
    10. '           ' → logprob: -16.8171329498291

Token 251: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012535012501757592
    2. ' ' → logprob: -9.00012493133545
    3. '(' → logprob: -13.87512493133545
    4. '   ' → logprob: -14.12512493133545
    5. '1' → logprob: -16.000125885009766
    6. '  ' → logprob: -16.500125885009766
    7. '           ' → logprob: -17.875125885009766
    8. '
' → logprob: -18.125125885009766
    9. '```' → logprob: -18.500125885009766
    10. '       ' → logprob: -18.625125885009766

Token 252: '*(' (ID: 14793)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.25284111499786377
    2. '*(' → logprob: -1.5028411149978638
    3. '*' → logprob: -7.502840995788574
    4. '(i' → logprob: -8.627840995788574
    5. '(' → logprob: -9.627840995788574
    6. '*j' → logprob: -9.877840995788574
    7. ' (' → logprob: -10.002840995788574
    8. '[j' → logprob: -12.752840995788574
    9. ' *' → logprob: -12.752840995788574
    10. '((' → logprob: -13.002840995788574

Token 253: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.1610969454050064
    2. 'j' → logprob: -1.9110969305038452
    3. ' (' → logprob: -7.161097049713135
    4. ' j' → logprob: -9.786096572875977
    5. '(' → logprob: -11.411096572875977
    6. '(i' → logprob: -11.786096572875977
    7. '   ' → logprob: -11.911096572875977
    8. '[j' → logprob: -12.161096572875977
    9. '	j' → logprob: -12.286096572875977
    10. '  ' → logprob: -13.911096572875977

Token 254: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.011373155459296e-05
    2. ' +' → logprob: -10.500030517578125
    3. '1' → logprob: -13.750030517578125
    4. '+
' → logprob: -14.625030517578125
    5. '-' → logprob: -14.750030517578125
    6. ')' → logprob: -15.750030517578125
    7. '(' → logprob: -16.000030517578125
    8. '+)' → logprob: -16.000030517578125
    9. '   ' → logprob: -16.750030517578125
    10. '```' → logprob: -17.000030517578125

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.62501335144043
    3. '+' → logprob: -12.87501335144043
    4. '```' → logprob: -14.50001335144043
    5. ')' → logprob: -15.00001335144043
    6. '
' → logprob: -15.25001335144043
    7. '   ' → logprob: -15.56251335144043
    8. '0' → logprob: -16.06251335144043
    9. '2' → logprob: -16.25001335144043
    10. '(' → logprob: -16.62501335144043

Token 256: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032068457221612334
    2. ' )' → logprob: -8.625320434570312
    3. '))' → logprob: -9.750320434570312
    4. '-' → logprob: -10.125320434570312
    5. ')
' → logprob: -10.875320434570312
    6. '])' → logprob: -12.000320434570312
    7. ' -' → logprob: -12.375320434570312
    8. '   ' → logprob: -12.750320434570312
    9. '-)' → logprob: -12.750320434570312
    10. ' ' → logprob: -13.000320434570312

Token 257: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.168783187866211
    2. '<|end|>' → logprob: -1.168783187866211
    3. '   ' → logprob: -1.793783187866211
    4. '\n' → logprob: -2.418783187866211
    5. ' 
' → logprob: -3.418783187866211
    6. ' return' → logprob: -4.293783187866211
    7. '```' → logprob: -4.293783187866211
    8. ')
' → logprob: -4.418783187866211
    9. 'return' → logprob: -4.793783187866211
    10. '    
' → logprob: -5.043783187866211

Token 258: ' res' (ID: 694)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2362515926361084
    2. 'return' → logprob: -1.7362515926361084
    3. 'res' (adapté à ' res') → logprob: -4.8612518310546875
    4. ')' → logprob: -4.8612518310546875
    5. 'mod' → logprob: -5.4862518310546875
    6. ' return' → logprob: -5.7362518310546875
    7. '   ' → logprob: -5.7362518310546875
    8. ' 
' → logprob: -5.8612518310546875
    9. '\n' → logprob: -6.6112518310546875
    10. '    
' → logprob: -6.7362518310546875

Token 259: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.30352848768234253
    2. '%=' → logprob: -2.1785285472869873
    3. ' %=' → logprob: -2.5535285472869873
    4. '=' → logprob: -3.1785285472869873
    5. ' +=' → logprob: -3.8035285472869873
    6. '%' → logprob: -5.053528308868408
    7. ' %' → logprob: -8.803528785705566
    8. ')' → logprob: -9.428528785705566
    9. ' =' → logprob: -9.553528785705566
    10. ' mod' → logprob: -10.303528785705566

Token 260: ' (' (ID: 350)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2846650779247284
    2. 'j' → logprob: -1.4096651077270508
    3. ' (' → logprob: -6.534665107727051
    4. '(j' → logprob: -6.784665107727051
    5. ' ' → logprob: -7.659665107727051
    6. '(' → logprob: -8.03466510772705
    7. '2' → logprob: -9.90966510772705
    8. '   ' → logprob: -10.28466510772705
    9. '  ' → logprob: -11.90966510772705
    10. '	j' → logprob: -11.90966510772705

Token 261: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00833194050937891
    2. ' j' → logprob: -4.883331775665283
    3. '(j' → logprob: -8.008332252502441
    4. ')' → logprob: -9.258332252502441
    5. ' (' → logprob: -9.883332252502441
    6. '   ' → logprob: -10.008332252502441
    7. '(' → logprob: -10.008332252502441
    8. '2' → logprob: -10.258332252502441
    9. 'N' → logprob: -10.508332252502441
    10. ' ' → logprob: -10.633332252502441

Token 262: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006369778420776129
    2. ')*' → logprob: -5.881369590759277
    3. ' )' → logprob: -6.381369590759277
    4. '   ' → logprob: -7.131369590759277
    5. '*' → logprob: -8.006369590759277
    6. '+' → logprob: -8.256369590759277
    7. '-' → logprob: -8.631369590759277
    8. ' *' → logprob: -8.631369590759277
    9. ' ' → logprob: -9.631369590759277
    10. ')*(' → logprob: -10.881369590759277

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007472136639989913
    2. '0' → logprob: -8.125747680664062
    3. '2' → logprob: -8.250747680664062
    4. ' ' → logprob: -8.625747680664062
    5. '   ' → logprob: -12.375747680664062
    6. '
' → logprob: -13.250747680664062
    7. '           ' → logprob: -14.438247680664062
    8. ')' → logprob: -14.563247680664062
    9. '    ' → logprob: -14.563247680664062
    10. '```' → logprob: -14.688247680664062

Token 264: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05790966749191284
    2. ' *' → logprob: -3.5579097270965576
    3. '-' → logprob: -4.6829094886779785
    4. '*' → logprob: -4.8079094886779785
    5. ' )' → logprob: -5.3079094886779785
    6. ' -' → logprob: -5.3079094886779785
    7. '   ' → logprob: -8.682909965515137
    8. ')*' → logprob: -8.682909965515137
    9. '+' → logprob: -10.432909965515137
    10. '*)' → logprob: -10.807909965515137

Token 265: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3133467435836792
    2. '*' → logprob: -1.3133467435836792
    3. ')' → logprob: -10.313346862792969
    4. ' *
' → logprob: -10.688346862792969
    5. '*
' → logprob: -12.313346862792969
    6. '<|end|>' → logprob: -12.313346862792969
    7. ' ' → logprob: -12.688346862792969
    8. '	' → logprob: -13.188346862792969
    9. '   ' → logprob: -13.313346862792969
    10. ' ' → logprob: -13.438346862792969

Token 266: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0015271214069798589
    2. ' dp' → logprob: -6.501527309417725
    3. '(dp' → logprob: -10.876526832580566
    4. '(' → logprob: -12.626526832580566
    5. '(j' → logprob: -14.251526832580566
    6. ' (' → logprob: -14.376526832580566
    7. 'j' → logprob: -15.376526832580566
    8. '(i' → logprob: -15.501526832580566
    9. '	dp' → logprob: -15.876526832580566
    10. ' ' → logprob: -16.376527786254883

Token 267: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.375005722045898
    3. ' (' → logprob: -14.000005722045898
    4. '(I' → logprob: -15.250005722045898
    5. '(
' → logprob: -16.3750057220459
    6. 'i' → logprob: -17.0000057220459
    7. ',i' → logprob: -17.2500057220459
    8. '```' → logprob: -18.2500057220459
    9. '[i' → logprob: -18.3750057220459
    10. '   ' → logprob: -18.6250057220459

Token 268: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.45848218582978e-06
    2. ' -' → logprob: -13.00000286102295
    3. ',' → logprob: -17.000001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '```' → logprob: -17.625001907348633
    6. '(' → logprob: -17.875001907348633
    7. '1' → logprob: -18.125001907348633
    8. ' ' → logprob: -18.625001907348633
    9. 'i' → logprob: -19.375001907348633
    10. '  ' → logprob: -20.000001907348633

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. '-' → logprob: -12.000007629394531
    3. ' ' → logprob: -13.750007629394531
    4. '```' → logprob: -15.125007629394531
    5. '   ' → logprob: -16.75000762939453
    6. '<|end|>' → logprob: -17.00000762939453
    7. ',' → logprob: -17.37500762939453
    8. 'from' → logprob: -18.75000762939453
    9. '
' → logprob: -18.81250762939453
    10. ')' → logprob: -19.06250762939453

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006065667141228914
    2. ',j' → logprob: -5.381065845489502
    3. ' ,' → logprob: -7.256065845489502
    4. '(' → logprob: -7.881065845489502
    5. '(i' → logprob: -8.881065368652344
    6. '(j' → logprob: -9.131065368652344
    7. '-' → logprob: -10.131065368652344
    8. '   ' → logprob: -10.381065368652344
    9. ',i' → logprob: -10.631065368652344
    10. ' (' → logprob: -12.131065368652344

Token 271: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014171031303703785
    2. ' j' → logprob: -4.264171123504639
    3. '	j' → logprob: -12.13917064666748
    4. '   ' → logprob: -14.13917064666748
    5. ',j' → logprob: -14.13917064666748
    6. ' ' → logprob: -16.264171600341797
    7. '$j' → logprob: -16.264171600341797
    8. '_j' → logprob: -16.514171600341797
    9. ',' → logprob: -16.639171600341797
    10. '[j' → logprob: -16.889171600341797

Token 272: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03439522162079811
    2. '+' → logprob: -3.909395217895508
    3. '-' → logprob: -4.409395217895508
    4. ' ,' → logprob: -7.409395217895508
    5. '   ' → logprob: -7.534395217895508
    6. ',j' → logprob: -7.909395217895508
    7. ' ' → logprob: -10.534395217895508
    8. '```' → logprob: -10.659395217895508
    9. '  ' → logprob: -11.659395217895508
    10. ' +' → logprob: -11.659395217895508

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01821374148130417
    2. '2' → logprob: -4.143213748931885
    3. 'j' → logprob: -6.518213748931885
    4. ',' → logprob: -8.143213272094727
    5. '0' → logprob: -8.768213272094727
    6. ' ' → logprob: -9.018213272094727
    7. '   ' → logprob: -10.018213272094727
    8. 'k' → logprob: -10.893213272094727
    9. '+' → logprob: -11.268213272094727
    10. ',j' → logprob: -11.268213272094727

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016644697170704603
    2. ',k' → logprob: -7.001664638519287
    3. ' ,' → logprob: -7.251664638519287
    4. '-' → logprob: -10.751664161682129
    5. ')' → logprob: -12.126664161682129
    6. ',j' → logprob: -12.251664161682129
    7. '```' → logprob: -12.501664161682129
    8. 'k' → logprob: -13.126664161682129
    9. '(' → logprob: -13.501664161682129
    10. ',
' → logprob: -14.126664161682129

Token 275: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03804412856698036
    2. ' k' → logprob: -3.2880442142486572
    3. ' ' → logprob: -13.538043975830078
    4. '   ' → logprob: -14.913043975830078
    5. '    ' → logprob: -15.288043975830078
    6. '  ' → logprob: -15.663043975830078
    7. '(k' → logprob: -16.038043975830078
    8. '     ' → logprob: -16.538043975830078
    9. '        ' → logprob: -16.663043975830078
    10. '       ' → logprob: -17.038043975830078

Token 276: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11698473989963531
    2. '-' → logprob: -2.2419848442077637
    3. '+' → logprob: -6.241984844207764
    4. ' +' → logprob: -6.616984844207764
    5. ')' → logprob: -7.616984844207764
    6. ' ' → logprob: -8.741984367370605
    7. ',' → logprob: -8.866984367370605
    8. ' ,' → logprob: -10.491984367370605
    9. '   ' → logprob: -10.991984367370605
    10. '```' → logprob: -11.616984367370605

Token 277: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02692830003798008
    2. ' ' → logprob: -3.651928186416626
    3. '1' → logprob: -7.901928424835205
    4. '(' → logprob: -8.526927947998047
    5. ' (' → logprob: -10.151927947998047
    6. '   ' → logprob: -11.651927947998047
    7. '  ' → logprob: -12.901927947998047
    8. '0' → logprob: -13.901927947998047
    9. '           ' → logprob: -14.026927947998047
    10. '    ' → logprob: -14.401927947998047

Token 278: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00072851701406762
    2. '1' → logprob: -7.875728607177734
    3. ' ' → logprob: -8.500728607177734
    4. '(' → logprob: -8.875728607177734
    5. '   ' → logprob: -13.625728607177734
    6. '4' → logprob: -13.750728607177734
    7. ' (' → logprob: -14.500728607177734
    8. '  ' → logprob: -15.313228607177734
    9. '
' → logprob: -15.375728607177734
    10. '0' → logprob: -15.438228607177734

Token 279: '*(' (ID: 14793)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.027963314205408096
    2. '*(' → logprob: -4.027963161468506
    3. '*j' → logprob: -5.402963161468506
    4. 'j' → logprob: -6.027963161468506
    5. '(' → logprob: -6.652963161468506
    6. ' (' → logprob: -6.777963161468506
    7. '*' → logprob: -8.402963638305664
    8. '+' → logprob: -9.527963638305664
    9. '[j' → logprob: -9.902963638305664
    10. '```' → logprob: -11.402963638305664

Token 280: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.01703968085348606
    2. 'j' → logprob: -4.142039775848389
    3. ' (' → logprob: -7.517039775848389
    4. '+' → logprob: -8.26703929901123
    5. '(' → logprob: -9.14203929901123
    6. ' j' → logprob: -10.51703929901123
    7. '[j' → logprob: -10.76703929901123
    8. '(i' → logprob: -12.76703929901123
    9. ',j' → logprob: -12.76703929901123
    10. ')' → logprob: -12.82953929901123

Token 281: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023283565416932106
    2. ')' → logprob: -4.1482834815979
    3. '-' → logprob: -5.1482834815979
    4. ')])' → logprob: -7.6482834815979
    5. '))' → logprob: -7.7732834815979
    6. ' )' → logprob: -9.148283958435059
    7. ')))' → logprob: -9.148283958435059
    8. ')]' → logprob: -9.523283958435059
    9. ' +' → logprob: -9.898283958435059
    10. '1' → logprob: -10.023283958435059

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006928971270099282
    2. '2' → logprob: -7.375692844390869
    3. '0' → logprob: -9.875693321228027
    4. '+' → logprob: -12.000693321228027
    5. ' ' → logprob: -13.188193321228027
    6. ')' → logprob: -13.375693321228027
    7. '```' → logprob: -13.813193321228027
    8. '   ' → logprob: -14.500693321228027
    9. '(' → logprob: -14.500693321228027
    10. '
' → logprob: -14.625693321228027

Token 283: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007544778054580092
    2. ')
' → logprob: -7.375754356384277
    3. ' )' → logprob: -9.375754356384277
    4. '   ' → logprob: -10.750754356384277
    5. '))' → logprob: -11.250754356384277
    6. '       ' → logprob: -12.750754356384277
    7. ' ' → logprob: -13.875754356384277
    8. ')
' → logprob: -13.875754356384277
    9. '-' → logprob: -14.250754356384277
    10. ' )
' → logprob: -14.750754356384277

Token 284: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.030015084892511368
    2. '
' → logprob: -4.155014991760254
    3. ' %' → logprob: -4.655014991760254
    4. '%n' → logprob: -6.655014991760254
    5. '\n' → logprob: -6.780014991760254
    6. ')' → logprob: -7.280014991760254
    7. '   ' → logprob: -7.905014991760254
    8. '%
' → logprob: -8.280014991760254
    9. '```' → logprob: -8.530014991760254
    10. ' mod' → logprob: -9.280014991760254

Token 285: ' #' (ID: 1069)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.668121337890625
    2. '   ' → logprob: -1.668121337890625
    3. 'return' → logprob: -2.043121337890625
    4. '
' → logprob: -3.043121337890625
    5. '    
' → logprob: -3.043121337890625
    6. '  
' → logprob: -3.168121337890625
    7. ' 
' → logprob: -4.418121337890625
    8. '\' → logprob: -5.543121337890625
    9. '   
' → logprob: -5.668121337890625
    10. ' return' → logprob: -5.793121337890625

Token 286: ' Fer' (ID: 24592)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3150956332683563
    2. ' return' → logprob: -1.3150956630706787
    3. 'res' → logprob: -6.9400954246521
    4. '   ' → logprob: -7.1900954246521
    5. ' res' → logprob: -10.065095901489258
    6. 'mod' → logprob: -11.065095901489258
    7. ' ' → logprob: -11.190095901489258
    8. '	return' → logprob: -11.190095901489258
    9. '
' → logprob: -11.565095901489258
    10. ' mod' → logprob: -12.190095901489258

Token 287: 'mer' (ID: 1159)
  Prédit: 'mer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mer' → logprob: -0.03550262749195099
    2. 'm' → logprob: -3.4105026721954346
    3. 'me' → logprob: -7.1605024337768555
    4. 'ma' → logprob: -7.7855024337768555
    5. 'mez' → logprob: -9.410502433776855
    6. 'mera' → logprob: -9.410502433776855
    7. ')' → logprob: -9.535502433776855
    8. '```' → logprob: -9.535502433776855
    9. 'met' → logprob: -9.910502433776855
    10. 'mers' → logprob: -9.910502433776855

Token 288: ' une' (ID: 2463)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.3477897644042969
    2. '(i' → logprob: -2.097789764404297
    3. ' (' → logprob: -2.597789764404297
    4. '(' → logprob: -2.847789764404297
    5. 'res' → logprob: -4.347789764404297
    6. '   ' → logprob: -4.472789764404297
    7. ' une' → logprob: -5.597789764404297
    8. '(res' → logprob: -5.972789764404297
    9. 'a' → logprob: -6.222789764404297
    10. 'une' → logprob: -6.347789764404297

Token 289: ' paire' (ID: 148856)
  Prédit: ' paire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paire' → logprob: -0.8564589619636536
    2. 'pair' → logprob: -0.9814589619636536
    3. 'j' → logprob: -3.231458902359009
    4. ' j' → logprob: -3.481458902359009
    5. 'paren' → logprob: -3.731458902359009
    6. 'parent' → logprob: -3.856458902359009
    7. ' pair' → logprob: -4.106459140777588
    8. 'pa' → logprob: -4.106459140777588
    9. '(j' → logprob: -4.231459140777588
    10. ' (' → logprob: -4.856459140777588

Token 290: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004837603308260441
    2. 'res' → logprob: -5.379837512969971
    3. ' res' → logprob: -8.879837989807129
    4. '```' → logprob: -10.004837989807129
    5. '(res' → logprob: -11.504837989807129
    6. '
' → logprob: -11.504837989807129
    7. '    
' → logprob: -12.004837989807129
    8. '\n' → logprob: -13.379837989807129
    9. '	res' → logprob: -13.629837989807129
    10. '[' → logprob: -14.129837989807129

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018681871006265283
    2. 'res' → logprob: -6.75186824798584
    3. '```' → logprob: -8.25186824798584
    4. '
' → logprob: -8.37686824798584
    5. ' res' → logprob: -9.00186824798584
    6. '    
' → logprob: -11.12686824798584
    7. '<|end|>' → logprob: -11.50186824798584
    8. ' +=' → logprob: -11.62686824798584
    9. '=' → logprob: -11.87686824798584
    10. '       ' → logprob: -12.25186824798584

Token 292: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1584864854812622
    2. '   ' → logprob: -2.1584863662719727
    3. ' res' → logprob: -3.7834863662719727
    4. 'return' → logprob: -5.658486366271973
    5. ' if' → logprob: -6.158486366271973
    6. 'if' (adapté à ' if') → logprob: -6.283486366271973
    7. '```' → logprob: -8.408486366271973
    8. '(res' → logprob: -8.533486366271973
    9. ' +=' → logprob: -9.283486366271973
    10. ' return' → logprob: -9.408486366271973

Token 293: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.523184597492218
    2. ' j' → logprob: -0.898184597492218
    3. 'k' → logprob: -10.773184776306152
    4. '(j' → logprob: -11.898184776306152
    5. '   ' → logprob: -11.898184776306152
    6. ' k' → logprob: -11.898184776306152
    7. ' ' → logprob: -12.023184776306152
    8. 'i' → logprob: -12.898184776306152
    9. ' ' → logprob: -13.273184776306152
    10. '	j' → logprob: -13.273184776306152

Token 294: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09202323108911514
    2. '>' → logprob: -2.9670231342315674
    3. ' +' → logprob: -3.9670231342315674
    4. '+' → logprob: -4.7170233726501465
    5. '-' → logprob: -5.7170233726501465
    6. ' -' → logprob: -6.2170233726501465
    7. ' >=' → logprob: -6.5920233726501465
    8. '   ' → logprob: -6.8420233726501465
    9. ' ==' → logprob: -7.7170233726501465
    10. '```' → logprob: -8.967022895812988

Token 295: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003364158037584275
    2. ' ' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.250336647033691
    4. '+' → logprob: -15.500336647033691
    5. '2' → logprob: -17.125335693359375
    6. '0' → logprob: -17.250335693359375
    7. '  ' → logprob: -17.750335693359375
    8. '```' → logprob: -17.750335693359375
    9. '-' → logprob: -17.875335693359375
    10. '
' → logprob: -18.625335693359375

Token 296: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.875014305114746
    3. '2' → logprob: -12.000014305114746
    4. '0' → logprob: -15.250014305114746
    5. '   ' → logprob: -15.250014305114746
    6. '-' → logprob: -16.00001335144043
    7. '```' → logprob: -16.06251335144043
    8. '+' → logprob: -16.12501335144043
    9. '[' → logprob: -17.56251335144043
    10. '(' → logprob: -18.31251335144043

Token 297: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.005951314233243465
    2. '<=' → logprob: -5.130951404571533
    3. '```' → logprob: -11.630950927734375
    4. '   ' → logprob: -12.130950927734375
    5. ' ' → logprob: -12.880950927734375
    6. ' ≤' → logprob: -13.255950927734375
    7. ' <' → logprob: -13.880950927734375
    8. ':' → logprob: -14.380950927734375
    9. ',' → logprob: -14.755950927734375
    10. ' +' → logprob: -15.005950927734375

Token 298: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005234356038272381
    2. ' N' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.380234718322754
    4. '   ' → logprob: -15.880234718322754
    5. '	N' → logprob: -16.630233764648438
    6. '  ' → logprob: -18.255233764648438
    7. '```' → logprob: -18.880233764648438
    8. ' ' → logprob: -19.005233764648438
    9. '>N' → logprob: -19.255233764648438
    10. 'mod' → logprob: -19.255233764648438

Token 299: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47422489523887634
    2. ':
' → logprob: -1.0992249250411987
    3. '   ' → logprob: -3.474224805831909
    4. '       ' → logprob: -4.849225044250488
    5. '```' → logprob: -5.724225044250488
    6. ' and' → logprob: -6.224225044250488
    7. ',' → logprob: -8.474225044250488
    8. '):
' → logprob: -10.099225044250488
    9. '<|end|>' → logprob: -10.349225044250488
    10. '``' → logprob: -10.849225044250488

Token 300: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5231790542602539
    2. ' k' → logprob: -0.8981790542602539
    3. 'res' → logprob: -10.398179054260254
    4. '   ' → logprob: -11.523179054260254
    5. ' res' → logprob: -12.148179054260254
    6. '    ' → logprob: -12.773179054260254
    7. ' ' → logprob: -12.898179054260254
    8. '  ' → logprob: -14.023179054260254
    9. '       ' → logprob: -14.523179054260254
    10. '	k' → logprob: -14.523179054260254

Token 301: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.11026301234960556
    2. ' +=' → logprob: -2.4852631092071533
    3. '>=' → logprob: -4.360262870788574
    4. ' -=' → logprob: -5.360262870788574
    5. '+=' → logprob: -6.485262870788574
    6. '   ' → logprob: -7.610262870788574
    7. ' <=' → logprob: -8.110262870788574
    8. ' +' → logprob: -8.235262870788574
    9. '+' → logprob: -8.360262870788574
    10. '-' → logprob: -8.485262870788574

Token 302: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004158652853220701
    2. ' ' → logprob: -5.5041584968566895
    3. '4' → logprob: -10.504158973693848
    4. '0' → logprob: -10.504158973693848
    5. '   ' → logprob: -10.879158973693848
    6. '(' → logprob: -13.129158973693848
    7. '  ' → logprob: -13.254158973693848
    8. 'k' → logprob: -14.816658973693848
    9. '    ' → logprob: -14.941658973693848
    10. 'j' → logprob: -15.191658973693848

Token 303: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014966767048463225
    2. ' ' → logprob: -8.875149726867676
    3. '0' → logprob: -12.625149726867676
    4. '(' → logprob: -13.125149726867676
    5. '4' → logprob: -13.375149726867676
    6. '   ' → logprob: -13.750149726867676
    7. 'k' → logprob: -14.250149726867676
    8. 'j' → logprob: -14.750149726867676
    9. '  ' → logprob: -15.500149726867676
    10. '1' → logprob: -16.12514877319336

Token 304: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0067534977570176125
    2. '*' → logprob: -5.006753444671631
    3. '(j' → logprob: -10.506753921508789
    4. '*j' → logprob: -12.006753921508789
    5. ' *' → logprob: -12.381753921508789
    6. '*((' → logprob: -16.00675392150879
    7. ' *(' → logprob: -16.38175392150879
    8. '+' → logprob: -16.50675392150879
    9. '```' → logprob: -16.75675392150879
    10. '(' → logprob: -17.38175392150879

Token 305: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0031822288874536753
    2. 'j' → logprob: -5.753182411193848
    3. ' (' → logprob: -13.128182411193848
    4. '(' → logprob: -13.503182411193848
    5. '[j' → logprob: -14.003182411193848
    6. '
' → logprob: -16.50318145751953
    7. '(
' → logprob: -16.62818145751953
    8. '	j' → logprob: -16.62818145751953
    9. '(J' → logprob: -17.00318145751953
    10. ' j' → logprob: -17.12818145751953

Token 306: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006268949946388602
    2. ' +' → logprob: -7.375627040863037
    3. '+
' → logprob: -16.625627517700195
    4. ')+' → logprob: -17.000627517700195
    5. '()+' → logprob: -17.375627517700195
    6. '＋' → logprob: -17.375627517700195
    7. '+j' → logprob: -17.625627517700195
    8. '2' → logprob: -17.750627517700195
    9. '+)' → logprob: -18.125627517700195
    10. '   ' → logprob: -18.250627517700195

Token 307: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1994775377388578e-05
    2. '+' → logprob: -11.750012397766113
    3. ' ' → logprob: -12.875012397766113
    4. '1' → logprob: -14.000012397766113
    5. '```' → logprob: -15.625012397766113
    6. '   ' → logprob: -16.000011444091797
    7. '3' → logprob: -16.125011444091797
    8. '
' → logprob: -17.062511444091797
    9. ' +' → logprob: -17.562511444091797
    10. '

' → logprob: -17.687511444091797

Token 308: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.013751005753874779
    2. '):' → logprob: -4.763751029968262
    3. '   ' → logprob: -5.763751029968262
    4. ':
' → logprob: -6.388751029968262
    5. ':' → logprob: -9.138751029968262
    6. '       ' → logprob: -9.263751029968262
    7. '):
' → logprob: -10.138751029968262
    8. ')' → logprob: -11.388751029968262
    9. ' ):
' → logprob: -11.388751029968262
    10. '```' → logprob: -11.388751029968262

Token 309: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12787526845932007
    2. ':
' → logprob: -2.127875328063965
    3. '       ' → logprob: -7.627875328063965
    4. '   ' → logprob: -7.752875328063965
    5. '):
' → logprob: -11.502875328063965
    6. '):' → logprob: -12.377875328063965
    7. ' and' → logprob: -12.752875328063965
    8. '```' → logprob: -13.002875328063965
    9. ',' → logprob: -13.127875328063965
    10. ':
' → logprob: -13.252875328063965

Token 310: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09575861692428589
    2. '4' → logprob: -2.5957586765289307
    3. ' ' → logprob: -4.220758438110352
    4. '1' → logprob: -6.470758438110352
    5. '6' → logprob: -8.095758438110352
    6. '   ' → logprob: -9.345758438110352
    7. '3' → logprob: -9.470758438110352
    8. '8' → logprob: -11.720758438110352
    9. '  ' → logprob: -12.783258438110352
    10. '(' → logprob: -13.345758438110352

Token 311: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2669835686683655
    2. '4' → logprob: -1.5169835090637207
    3. '1' → logprob: -4.391983509063721
    4. '3' → logprob: -6.516983509063721
    5. '6' → logprob: -7.016983509063721
    6. ' ' → logprob: -8.766983985900879
    7. '5' → logprob: -11.266983985900879
    8. '8' → logprob: -11.891983985900879
    9. '   ' → logprob: -12.266983985900879
    10. '(' → logprob: -12.516983985900879

Token 312: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10058394074440002
    2. ':' → logprob: -2.350584030151367
    3. '       ' → logprob: -8.475584030151367
    4. '   ' → logprob: -8.850584030151367
    5. '):
' → logprob: -11.100584030151367
    6. ':
' → logprob: -12.850584030151367
    7. ' :
' → logprob: -13.350584030151367
    8. ':

' → logprob: -13.475584030151367
    9. '```' → logprob: -13.725584030151367
    10. ',' → logprob: -14.350584030151367

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018452506512403488
    2. '   ' → logprob: -4.0184526443481445
    3. 'res' → logprob: -8.518452644348145
    4. ' res' → logprob: -9.768452644348145
    5. '```' → logprob: -10.393452644348145
    6. '           ' → logprob: -12.518452644348145
    7. '
' → logprob: -12.643452644348145
    8. '    ' → logprob: -13.143452644348145
    9. '     ' → logprob: -13.268452644348145
    10. '        
' → logprob: -13.518452644348145

Token 314: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -6.980854959692806e-05
    2. ' res' → logprob: -9.875069618225098
    3. '   ' → logprob: -11.000069618225098
    4. '```' → logprob: -13.625069618225098
    5. '       ' → logprob: -15.375069618225098
    6. '``' → logprob: -16.625070571899414
    7. '
' → logprob: -16.750070571899414
    8. '	res' → logprob: -17.125070571899414
    9. '(res' → logprob: -18.750070571899414
    10. 'ress' → logprob: -19.125070571899414

Token 315: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1269782930612564
    2. ' +=' → logprob: -2.1269783973693848
    3. '   ' → logprob: -10.751977920532227
    4. ']+=' → logprob: -11.251977920532227
    5. '+=(' → logprob: -11.751977920532227
    6. '+="' → logprob: -12.501977920532227
    7. '+='' → logprob: -13.626977920532227
    8. '+' → logprob: -14.126977920532227
    9. '```' → logprob: -14.126977920532227
    10. '  ' → logprob: -14.501977920532227

Token 316: ' ((' (ID: 3536)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.07137344032526016
    2. '2' → logprob: -3.446373462677002
    3. 'j' → logprob: -3.571373462677002
    4. '(' → logprob: -5.071373462677002
    5. ' (' → logprob: -6.321373462677002
    6. ' ' → logprob: -7.821373462677002
    7. ' j' → logprob: -8.696372985839844
    8. '(N' → logprob: -9.071372985839844
    9. '   ' → logprob: -9.946372985839844
    10. '((' → logprob: -10.821372985839844

Token 317: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001856888411566615
    2. '(j' → logprob: -6.376856803894043
    3. '2' → logprob: -9.376856803894043
    4. ' j' → logprob: -10.001856803894043
    5. '   ' → logprob: -11.376856803894043
    6. ')' → logprob: -12.626856803894043
    7. ' (' → logprob: -13.376856803894043
    8. '[j' → logprob: -13.501856803894043
    9. '	j' → logprob: -13.751856803894043
    10. '(' → logprob: -14.126856803894043

Token 318: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018151935189962387
    2. ' +' → logprob: -4.018151760101318
    3. '   ' → logprob: -13.768152236938477
    4. '-' → logprob: -15.143152236938477
    5. ' ' → logprob: -15.768152236938477
    6. '+
' → logprob: -16.268152236938477
    7. ' +
' → logprob: -16.393152236938477
    8. ')+' → logprob: -16.768152236938477
    9. '```' → logprob: -16.893152236938477
    10. ' ' → logprob: -17.018152236938477

Token 319: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.297462171758525e-05
    2. ' ' → logprob: -10.500033378601074
    3. '1' → logprob: -13.000033378601074
    4. '   ' → logprob: -13.500033378601074
    5. '
' → logprob: -14.750033378601074
    6. '```' → logprob: -14.750033378601074
    7. '+' → logprob: -15.250033378601074
    8. ')' → logprob: -15.875033378601074
    9. '

' → logprob: -16.125032424926758
    10. '    ' → logprob: -16.437532424926758

Token 320: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002038914244621992
    2. ' )' → logprob: -7.002038955688477
    3. '-' → logprob: -7.627038955688477
    4. ' -' → logprob: -8.127038955688477
    5. '*' → logprob: -9.127038955688477
    6. ' *' → logprob: -9.252038955688477
    7. ')*' → logprob: -9.502038955688477
    8. '   ' → logprob: -9.877038955688477
    9. ' ' → logprob: -12.002038955688477
    10. '+' → logprob: -13.127038955688477

Token 321: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00964205339550972
    2. 'dp' → logprob: -5.009642124176025
    3. '(j' → logprob: -6.509642124176025
    4. ' j' → logprob: -7.634642124176025
    5. '2' → logprob: -7.634642124176025
    6. 'res' → logprob: -8.509641647338867
    7. '(dp' → logprob: -9.884641647338867
    8. 'i' → logprob: -9.884641647338867
    9. '   ' → logprob: -10.384641647338867
    10. 'k' → logprob: -10.759641647338867

Token 322: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010026819072663784
    2. ' +' → logprob: -7.251002788543701
    3. '1' → logprob: -8.751002311706543
    4. '   ' → logprob: -9.751002311706543
    5. '-' → logprob: -9.876002311706543
    6. ')' → logprob: -11.876002311706543
    7. ' ' → logprob: -12.626002311706543
    8. '  ' → logprob: -12.626002311706543
    9. '    ' → logprob: -13.501002311706543
    10. '```' → logprob: -13.501002311706543

Token 323: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027420982951298356
    2. '2' → logprob: -8.375274658203125
    3. '3' → logprob: -10.250274658203125
    4. ' ' → logprob: -12.250274658203125
    5. '-' → logprob: -14.187774658203125
    6. '+' → logprob: -14.437774658203125
    7. '```' → logprob: -14.750274658203125
    8. '
' → logprob: -14.937774658203125
    9. '   ' → logprob: -15.125274658203125
    10. ')' → logprob: -15.312774658203125

Token 324: '))' (ID: 915)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14289557933807373
    2. ' -' → logprob: -2.0178956985473633
    3. ')' → logprob: -8.892895698547363
    4. '   ' → logprob: -10.142895698547363
    5. ' ' → logprob: -10.517895698547363
    6. '))' → logprob: -12.392895698547363
    7. '1' → logprob: -12.392895698547363
    8. ')-' → logprob: -12.642895698547363
    9. '  ' → logprob: -12.767895698547363
    10. '```' → logprob: -14.642895698547363

Token 325: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1602369248867035
    2. '*' → logprob: -1.9102369546890259
    3. '   ' → logprob: -11.535237312316895
    4. ' ' → logprob: -14.285237312316895
    5. 'def' → logprob: -14.285237312316895
    6. '```' → logprob: -14.535237312316895
    7. ')' → logprob: -14.660237312316895
    8. ' ' → logprob: -15.785237312316895
    9. ',' → logprob: -16.410236358642578
    10. '**' → logprob: -16.660236358642578

Token 326: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04859498515725136
    2. ' dp' → logprob: -3.0485949516296387
    3. '(dp' → logprob: -11.923595428466797
    4. '	dp' → logprob: -14.673595428466797
    5. ' ' → logprob: -15.923595428466797
    6. '(' → logprob: -16.423595428466797
    7. ' (' → logprob: -16.798595428466797
    8. '   ' → logprob: -16.923595428466797
    9. '
' → logprob: -17.048595428466797
    10. ' ' → logprob: -17.298595428466797

Token 327: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.875000953674316
    3. '(' → logprob: -15.375000953674316
    4. ' (' → logprob: -15.500000953674316
    5. '   ' → logprob: -18.875
    6. '(I' → logprob: -19.0
    7. ',i' → logprob: -19.125
    8. '```' → logprob: -19.25
    9. '(
' → logprob: -19.375
    10. '[i' → logprob: -20.25

Token 328: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.306760805164231e-05
    2. '(i' → logprob: -11.75001335144043
    3. ' -' → logprob: -12.25001335144043
    4. '(' → logprob: -16.00001335144043
    5. '   ' → logprob: -16.12501335144043
    6. '```' → logprob: -16.50001335144043
    7. '-i' → logprob: -17.50001335144043
    8. '1' → logprob: -17.75001335144043
    9. 'i' → logprob: -18.00001335144043
    10. '(-' → logprob: -18.25001335144043

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '-' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.125001907348633
    4. '```' → logprob: -15.625001907348633
    5. '<|end|>' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '2' → logprob: -17.000001907348633
    8. ',' → logprob: -18.500001907348633
    9. '[' → logprob: -18.625001907348633
    10. '...' → logprob: -18.687501907348633

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005395700572989881
    2. ' ,' → logprob: -7.875539779663086
    3. ',j' → logprob: -8.750539779663086
    4. '   ' → logprob: -14.750539779663086
    5. '(j' → logprob: -15.125539779663086
    6. ' ' → logprob: -16.250539779663086
    7. '(' → logprob: -16.250539779663086
    8. ',
' → logprob: -16.750539779663086
    9. 'j' → logprob: -17.125539779663086
    10. '  ' → logprob: -17.500539779663086

Token 331: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029754776507616043
    2. ' j' → logprob: -3.529754877090454
    3. '   ' → logprob: -13.154754638671875
    4. '    ' → logprob: -13.779754638671875
    5. ' ' → logprob: -14.279754638671875
    6. '  ' → logprob: -15.029754638671875
    7. '	j' → logprob: -15.529754638671875
    8. '     ' → logprob: -16.029754638671875
    9. ',j' → logprob: -16.529754638671875
    10. '       ' → logprob: -16.904754638671875

Token 332: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012593237683176994
    2. '-' → logprob: -4.3875932693481445
    3. ' +' → logprob: -9.762593269348145
    4. ',' → logprob: -11.637593269348145
    5. '+,' → logprob: -11.762593269348145
    6. ' -' → logprob: -12.762593269348145
    7. '   ' → logprob: -12.762593269348145
    8. ',j' → logprob: -14.637593269348145
    9. '           ' → logprob: -14.637593269348145
    10. ' ' → logprob: -14.762593269348145

Token 333: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002501343551557511
    2. '1' → logprob: -8.500249862670898
    3. ' ' → logprob: -10.375249862670898
    4. '3' → logprob: -11.500249862670898
    5. '   ' → logprob: -13.625249862670898
    6. '+' → logprob: -13.875249862670898
    7. 'j' → logprob: -14.062749862670898
    8. '-' → logprob: -14.375249862670898
    9. '```' → logprob: -14.625249862670898
    10. '
' → logprob: -15.375249862670898

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.723973582556937e-05
    2. ' ,' → logprob: -11.125017166137695
    3. ',k' → logprob: -13.375017166137695
    4. ',
' → logprob: -14.750017166137695
    5. '       ' → logprob: -16.000017166137695
    6. '<|end|>' → logprob: -16.125017166137695
    7. '```' → logprob: -16.875017166137695
    8. '‌,' → logprob: -16.875017166137695
    9. '`,' → logprob: -17.000017166137695
    10. '),' → logprob: -17.000017166137695

Token 335: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5759396553039551
    2. 'k' → logprob: -0.8259396553039551
    3. ' ' → logprob: -15.950939178466797
    4. ' ' → logprob: -16.950939178466797
    5. '	k' → logprob: -17.325939178466797
    6. '    ' → logprob: -17.450939178466797
    7. '```' → logprob: -18.200939178466797
    8. '2' → logprob: -18.325939178466797
    9. '(k' → logprob: -18.450939178466797
    10. '        ' → logprob: -18.825939178466797

Token 336: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0024936108384281397
    2. '-' → logprob: -6.002493381500244
    3. ' ' → logprob: -11.127493858337402
    4. '   ' → logprob: -13.502493858337402
    5. ')' → logprob: -15.002493858337402
    6. '  ' → logprob: -15.127493858337402
    7. '       ' → logprob: -15.127493858337402
    8. '    ' → logprob: -15.627493858337402
    9. '        ' → logprob: -15.627493858337402
    10. ' -
' → logprob: -15.627493858337402

Token 337: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0474877804517746
    2. '2' → logprob: -3.297487735748291
    3. ' (' → logprob: -4.797487735748291
    4. ' ' → logprob: -6.797487735748291
    5. '   ' → logprob: -10.67248821258545
    6. '  ' → logprob: -12.04748821258545
    7. '[' → logprob: -12.92248821258545
    8. '1' → logprob: -13.92248821258545
    9. '    ' → logprob: -14.92248821258545
    10. '{' → logprob: -15.04748821258545

Token 338: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20183564722537994
    2. '2' → logprob: -1.7018356323242188
    3. ' (' → logprob: -8.076835632324219
    4. ' ' → logprob: -9.201835632324219
    5. '   ' → logprob: -12.326835632324219
    6. '[' → logprob: -13.076835632324219
    7. '1' → logprob: -13.576835632324219
    8. '  ' → logprob: -14.201835632324219
    9. '((' → logprob: -14.576835632324219
    10. '```' → logprob: -14.826835632324219

Token 339: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.005269803572446108
    2. '(j' → logprob: -5.255270004272461
    3. '*' → logprob: -10.255270004272461
    4. '*j' → logprob: -14.755270004272461
    5. '(' → logprob: -15.130270004272461
    6. '(i' → logprob: -16.88027000427246
    7. ' *' → logprob: -17.63027000427246
    8. ' (' → logprob: -17.63027000427246
    9. '
' → logprob: -18.00527000427246
    10. '[j' → logprob: -18.13027000427246

Token 340: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.2519500255584717
    2. 'j' → logprob: -1.5019500255584717
    3. ' (' → logprob: -11.62695026397705
    4. '[j' → logprob: -11.75195026397705
    5. ' j' → logprob: -12.87695026397705
    6. '	j' → logprob: -14.50195026397705
    7. '   ' → logprob: -15.12695026397705
    8. '
' → logprob: -15.62695026397705
    9. '(' → logprob: -15.75195026397705
    10. '$j' → logprob: -15.87695026397705

Token 341: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.029847231227905e-05
    2. ' +' → logprob: -9.625080108642578
    3. '2' → logprob: -11.250080108642578
    4. '+
' → logprob: -15.000080108642578
    5. '   ' → logprob: -16.000080108642578
    6. '()+' → logprob: -16.125080108642578
    7. '(' → logprob: -16.125080108642578
    8. ')+' → logprob: -16.125080108642578
    9. '+j' → logprob: -16.250080108642578
    10. '+(' → logprob: -16.875080108642578

Token 342: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.815280696377158e-05
    2. '+' → logprob: -9.750078201293945
    3. ' ' → logprob: -10.875078201293945
    4. ' +' → logprob: -15.250078201293945
    5. '   ' → logprob: -15.250078201293945
    6. '(' → logprob: -15.500078201293945
    7. '```' → logprob: -16.375078201293945
    8. '
' → logprob: -17.312578201293945
    9. '-' → logprob: -17.437578201293945
    10. '  ' → logprob: -17.562578201293945

Token 343: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002855040365830064
    2. '))' → logprob: -7.252854824066162
    3. '   ' → logprob: -7.377854824066162
    4. '-' → logprob: -7.502854824066162
    5. ' -' → logprob: -8.37785530090332
    6. ' )' → logprob: -8.87785530090332
    7. ' ' → logprob: -9.00285530090332
    8. ']' → logprob: -9.00285530090332
    9. '+' → logprob: -9.37785530090332
    10. '       ' → logprob: -9.87785530090332

Token 344: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09837274998426437
    2. '-' → logprob: -2.4733726978302
    3. ')
' → logprob: -5.723372936248779
    4. '   ' → logprob: -5.848372936248779
    5. ' -' → logprob: -5.973372936248779
    6. '-)' → logprob: -8.473372459411621
    7. '))' → logprob: -8.598372459411621
    8. ' )' → logprob: -9.098372459411621
    9. '       ' → logprob: -9.598372459411621
    10. ' ' → logprob: -10.598372459411621

Token 345: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.2576454335358e-05
    2. ' ' → logprob: -9.375092506408691
    3. '1' → logprob: -11.875092506408691
    4. '   ' → logprob: -14.250092506408691
    5. '  ' → logprob: -16.375093460083008
    6. ')' → logprob: -18.500093460083008
    7. '    ' → logprob: -19.250093460083008
    8. '0' → logprob: -19.500093460083008
    9. '(' → logprob: -19.625093460083008
    10. '```' → logprob: -19.625093460083008

Token 346: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4881879400927573e-05
    2. ' ' → logprob: -10.375035285949707
    3. '   ' → logprob: -12.875035285949707
    4. '1' → logprob: -14.375035285949707
    5. '           ' → logprob: -16.37503433227539
    6. '       ' → logprob: -16.37503433227539
    7. '
' → logprob: -16.75003433227539
    8. '  ' → logprob: -17.00003433227539
    9. '```' → logprob: -17.00003433227539
    10. '               ' → logprob: -17.62503433227539

Token 347: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001441184664145112
    2. ')
' → logprob: -6.87644100189209
    3. '   ' → logprob: -7.87644100189209
    4. ' )' → logprob: -11.25144100189209
    5. ')
' → logprob: -11.87644100189209
    6. '))' → logprob: -12.50144100189209
    7. ' ' → logprob: -13.25144100189209
    8. '       ' → logprob: -13.87644100189209
    9. ')%' → logprob: -14.25144100189209
    10. ')

' → logprob: -15.37644100189209

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003855297574773431
    2. 'mod' → logprob: -6.628855228424072
    3. '%' → logprob: -6.878855228424072
    4. '```' → logprob: -7.003855228424072
    5. '
' → logprob: -8.37885570526123
    6. 'return' → logprob: -8.50385570526123
    7. '    
' → logprob: -10.12885570526123
    8. ' mod' → logprob: -10.25385570526123
    9. ')' → logprob: -10.50385570526123
    10. '	mod' → logprob: -11.50385570526123

Token 349: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006489411927759647
    2. 'return' (adapté à ' return') → logprob: -5.256489276885986
    3. '```' → logprob: -7.381489276885986
    4. ' return' → logprob: -7.756489276885986
    5. '    
' → logprob: -8.881489753723145
    6. '
' → logprob: -10.131489753723145
    7. '	return' → logprob: -11.881489753723145
    8. 'res' → logprob: -12.256489753723145
    9. '``' → logprob: -12.881489753723145
    10. ' 
' → logprob: -13.131489753723145

Token 350: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1602243334054947
    2. ' res' → logprob: -1.9102243185043335
    3. '(res' → logprob: -15.910223960876465
    4. '	res' → logprob: -17.03522491455078
    5. '$res' → logprob: -19.16022491455078
    6. 're' → logprob: -20.03522491455078
    7. '_res' → logprob: -20.41022491455078
    8. 'Res' → logprob: -20.78522491455078
    9. ' ' → logprob: -20.91022491455078
    10. '   ' → logprob: -21.03522491455078

Token 351: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07889672368764877
    2. '%' → logprob: -2.5788967609405518
    3. ' %=' → logprob: -12.828896522521973
    4. ' ' → logprob: -14.078896522521973
    5. '
' → logprob: -14.203896522521973
    6. '%n' → logprob: -14.328896522521973
    7. '	' → logprob: -14.703896522521973
    8. '%\' → logprob: -14.828896522521973
    9. '```' → logprob: -15.328896522521973
    10. '%
' → logprob: -15.703896522521973

Token 352: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00043102685594931245
    2. ' mod' → logprob: -7.750431060791016
    3. '(mod' → logprob: -15.000431060791016
    4. '	mod' → logprob: -20.625431060791016
    5. '_mod' → logprob: -21.250431060791016
    6. 'MOD' → logprob: -21.375431060791016
    7. '```' → logprob: -22.500431060791016
    8. ' мод' → logprob: -22.750431060791016
    9. '.mod' → logprob: -22.875431060791016
    10. 'Mod' → logprob: -23.125431060791016

Token 353: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006204177159816027
    2. 'result' → logprob: -5.131204128265381
    3. ')' → logprob: -8.631204605102539
    4. '<|end|>' → logprob: -10.131204605102539
    5. 'answer' → logprob: -10.506204605102539
    6. ' print' → logprob: -11.631204605102539
    7. 'for' → logprob: -11.631204605102539
    8. '```' → logprob: -13.131204605102539
    9. 'output' → logprob: -13.256204605102539
    10. '(print' → logprob: -13.756204605102539

Token 355: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.10020947456359863
    2. '(' → logprob: -2.3502094745635986
    3. '(
' → logprob: -13.47520923614502
    4. '()' → logprob: -14.60020923614502
    5. 'dp' → logprob: -15.60020923614502
    6. '(

' → logprob: -15.72520923614502
    7. '(sum' → logprob: -15.85020923614502
    8. ' (' → logprob: -15.85020923614502
    9. '(pow' → logprob: -16.725210189819336
    10. '((' → logprob: -16.850210189819336

Token 356: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -3.166338137816638e-05
    2. 'N' → logprob: -10.750031471252441
    3. '(' → logprob: -11.625031471252441
    4. ')' → logprob: -13.875031471252441
    5. ')(' → logprob: -15.125031471252441
    6. '(n' → logprob: -16.875032424926758
    7. ',N' → logprob: -17.750032424926758
    8. '(
' → logprob: -18.125032424926758
    9. '(len' → logprob: -18.625032424926758
    10. ' (' → logprob: -18.750032424926758

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005022776313126087
    2. ',N' → logprob: -8.125502586364746
    3. ' ,' → logprob: -9.250502586364746
    4. '(N' → logprob: -9.500502586364746
    5. '(' → logprob: -10.375502586364746
    6. '-' → logprob: -12.625502586364746
    7. ')' → logprob: -15.375502586364746
    8. ',K' → logprob: -16.25050163269043
    9. ',n' → logprob: -16.37550163269043
    10. ',
' → logprob: -16.75050163269043

Token 358: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000444850797066465
    2. 'K' → logprob: -7.7504448890686035
    3. ' ' → logprob: -11.625444412231445
    4. 'N' → logprob: -12.625444412231445
    5. '1' → logprob: -13.625444412231445
    6. '   ' → logprob: -15.500444412231445
    7. ' K' → logprob: -16.375444412231445
    8. '```' → logprob: -16.375444412231445
    9. 'j' → logprob: -16.750444412231445
    10. ')' → logprob: -16.875444412231445

Token 359: '0' (ID: 15)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.12700894474983215
    2. '0' → logprob: -2.1270089149475098
    3. 'N' → logprob: -9.502009391784668
    4. ' K' → logprob: -13.252009391784668
    5. 'k' → logprob: -13.252009391784668
    6. ' ' → logprob: -14.127009391784668
    7. '1' → logprob: -14.377009391784668
    8. '2' → logprob: -15.002009391784668
    9. 'M' → logprob: -15.752009391784668
    10. '(K' → logprob: -16.00200843811035

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010151672904612496
    2. ',K' → logprob: -10.000101089477539
    3. ')' → logprob: -10.625101089477539
    4. ' ,' → logprob: -11.000101089477539
    5. ',N' → logprob: -12.125101089477539
    6. '0' → logprob: -12.250101089477539
    7. ',k' → logprob: -13.000101089477539
    8. 'K' → logprob: -14.125101089477539
    9. ',)' → logprob: -14.250101089477539
    10. '))' → logprob: -14.500101089477539

Token 361: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0031797364354133606
    2. '0' → logprob: -5.753179550170898
    3. ' K' → logprob: -13.378179550170898
    4. 'N' → logprob: -15.878179550170898
    5. ' ' → logprob: -16.2531795501709
    6. '2' → logprob: -16.3781795501709
    7. '   ' → logprob: -16.5031795501709
    8. 'k' → logprob: -16.8781795501709
    9. '1' → logprob: -17.2531795501709
    10. 'M' → logprob: -18.2531795501709

Token 362: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04859009385108948
    2. ')' → logprob: -3.0485901832580566
    3. ')))' → logprob: -13.548589706420898
    4. '))
' → logprob: -14.548589706420898
    5. '())' → logprob: -14.798589706420898
    6. '()))' → logprob: -15.298589706420898
    7. '()' → logprob: -15.923589706420898
    8. ')
' → logprob: -16.7985897064209
    9. '})' → logprob: -17.0485897064209
    10. '])' → logprob: -17.0485897064209


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 360
Tokens correctement prédits (1ère position, stricte): 156
Tokens correctement prédits (1ère position, avec adaptation): 164
Tokens correctement prédits (top 10): 322
Précision stricte (1ère position): 43.33%
Précision adaptée (1ère position): 45.56%
Précision (top 10): 89.44%
================================================================================
