================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return map(int, input().split())

def read_list():
    return list(map(int, input().split()))

def get_sorted_list(lst):
    return sorted(lst)

def can_add(s, val, x):
    return s + val <= x

def update_ans(ans):
    return ans + 1

def update_sum(s, val):
    return s + val

def process_elements(n, a, x):
    ans = 0
    s = 0
    for i in range(get_n(n)):
        ans, s = process_single_element(ans, s, a[i], x)
    return ans, s

def process_single_element(ans, s, ai, x):
    if can_add(s, ai, x):
        ans = update_ans(ans)
    s = update_sum(s, ai)
    return ans, s

def get_n(n):
    return n

def output_result(ans, s, x):
    if is_sum_less_than_x(s, x):
        print_result(ans_minus_one(ans))
    else:
        print_result(ans)

def is_sum_less_than_x(s, x):
    return s < x

def ans_minus_one(ans):
    return ans - 1

def print_result(res):
    print(res)

def main():
    n, x = read_input()
    a = read_list()
    a = get_sorted_list(a)
    ans, s = process_elements(n, a, x)
    output_result(ans, s, x)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002494683489203453
    2. '_' → logprob: -6.877494812011719
    3. '():' → logprob: -7.127494812011719
    4. '(:' → logprob: -8.252494812011719
    5. '```' → logprob: -8.877494812011719
    6. '(_:' → logprob: -9.377494812011719
    7. ':' → logprob: -9.752494812011719
    8. ' (' → logprob: -10.002494812011719
    9. '(_' → logprob: -10.877494812011719
    10. '()' → logprob: -12.502494812011719

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9125446677207947
    2. '\' → logprob: -1.2875447273254395
    3. '\n' → logprob: -1.4125447273254395
    4. '   ' → logprob: -3.1625447273254395
    5. '    
' → logprob: -4.9125447273254395
    6. '
' → logprob: -5.1625447273254395
    7. ' 
' → logprob: -5.6625447273254395
    8. '``' → logprob: -5.7875447273254395
    9. ':' → logprob: -6.1625447273254395
    10. ''\' → logprob: -6.6625447273254395

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44253385066986084
    2. '```' → logprob: -2.0675339698791504
    3. 'return' (adapté à ' return') → logprob: -2.6925339698791504
    4. '    ' → logprob: -3.3175339698791504
    5. 'input' → logprob: -3.5675339698791504
    6. 'r' → logprob: -3.5675339698791504
    7. '\' → logprob: -4.19253396987915
    8. 'x' → logprob: -4.31753396987915
    9. '       ' → logprob: -4.69253396987915
    10. '`' → logprob: -5.19253396987915

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21319261193275452
    2. ' input' → logprob: -2.2131927013397217
    3. 'input' → logprob: -3.0881927013397217
    4. '"' → logprob: -3.4631927013397217
    5. ''' → logprob: -5.588192462921143
    6. ' []' → logprob: -7.588192462921143
    7. '  ' → logprob: -7.963192462921143
    8. ' "' → logprob: -8.5881929397583
    9. ' None' → logprob: -9.0881929397583
    10. '(input' → logprob: -9.2131929397583

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029259052127599716
    2. '(lambda' → logprob: -3.779258966445923
    3. ' (' → logprob: -6.404259204864502
    4. '<|end|>' → logprob: -6.529259204864502
    5. '(int' → logprob: -7.154259204864502
    6. '(str' → logprob: -7.654259204864502
    7. '```' → logprob: -8.654258728027344
    8. '(func' → logprob: -8.779258728027344
    9. '(user' → logprob: -9.154258728027344
    10. '(None' → logprob: -9.279258728027344

Token 8: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4694253206253052
    2. '(input' → logprob: -1.5944253206253052
    3. '(' → logprob: -1.8444253206253052
    4. '<|end|>' → logprob: -5.719425201416016
    5. '```' → logprob: -6.969425201416016
    6. 'input' → logprob: -7.219425201416016
    7. '(user' → logprob: -7.344425201416016
    8. '(
' → logprob: -7.469425201416016
    9. ' input' → logprob: -7.594425201416016
    10. '`)' → logprob: -7.719425201416016

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38696375489234924
    2. 'input' → logprob: -1.1369637250900269
    3. '(input' → logprob: -9.511963844299316
    4. ')' → logprob: -11.636963844299316
    5. '=input' → logprob: -13.636963844299316
    6. '	input' → logprob: -13.636963844299316
    7. '[input' → logprob: -13.636963844299316
    8. '<|end|>' → logprob: -13.886963844299316
    9. ' iter' → logprob: -14.011963844299316
    10. ',input' → logprob: -14.261963844299316

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.14697641134262085
    2. '()' → logprob: -2.0219764709472656
    3. ')' → logprob: -6.896976470947266
    4. '()))' → logprob: -6.896976470947266
    5. '(()' → logprob: -7.521976470947266
    6. '(' → logprob: -7.521976470947266
    7. ' ())' → logprob: -7.521976470947266
    8. '`()' → logprob: -8.771976470947266
    9. '());' → logprob: -9.146976470947266
    10. '('' → logprob: -9.771976470947266

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009138475870713592
    2. 'strip' → logprob: -7.000913619995117
    3. 'rstrip' → logprob: -13.500913619995117
    4. ' split' → logprob: -14.125913619995117
    5. '(split' → logprob: -15.875913619995117
    6. 'read' → logprob: -16.500913619995117
    7. ')' → logprob: -18.875913619995117
    8. 'spl' → logprob: -19.125913619995117
    9. '().' → logprob: -19.500913619995117
    10. '```' → logprob: -20.625913619995117

Token 12: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20254619419574738
    2. '()))' → logprob: -1.702546238899231
    3. '()' → logprob: -7.202546119689941
    4. '))' → logprob: -8.702546119689941
    5. ')' → logprob: -8.827546119689941
    6. '(' → logprob: -10.952546119689941
    7. ' ())' → logprob: -11.452546119689941
    8. '())
' → logprob: -11.577546119689941
    9. '()))
' → logprob: -11.702546119689941
    10. '())))' → logprob: -11.702546119689941

Token 13: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7633047103881836
    2. '(' → logprob: -2.5133047103881836
    3. 'def' → logprob: -2.5133047103881836
    4. '\n' → logprob: -2.5133047103881836
    5. '```' → logprob: -2.8883047103881836
    6. '\' → logprob: -3.2633047103881836
    7. 'd' → logprob: -3.2633047103881836
    8. 'x' → logprob: -3.3883047103881836
    9. 'n' → logprob: -3.5133047103881836
    10. ')' → logprob: -4.138304710388184

Token 14: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5326175689697266
    2. ' solve' → logprob: -1.4076175689697266
    3. ' process' → logprob: -2.2826175689697266
    4. ' calculate' → logprob: -3.2826175689697266
    5. ' write' → logprob: -5.282617568969727
    6. ' compute' → logprob: -5.282617568969727
    7. ' sum' → logprob: -5.407617568969727
    8. ' factorial' → logprob: -5.657617568969727
    9. 'solve' → logprob: -6.157617568969727
    10. ' read' → logprob: -6.532617568969727

Token 15: '_list' (ID: 4162)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.41280633211135864
    2. '_input' → logprob: -1.9128062725067139
    3. '_array' → logprob: -2.787806272506714
    4. '_' → logprob: -2.912806272506714
    5. '_int' → logprob: -3.162806272506714
    6. '_output' → logprob: -4.787806510925293
    7. '_list' → logprob: -4.912806510925293
    8. '_value' → logprob: -6.162806510925293
    9. '_string' → logprob: -6.412806510925293
    10. '_integer' → logprob: -6.412806510925293

Token 16: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.656625509262085
    2. '():' → logprob: -0.906625509262085
    3. '()' → logprob: -2.781625509262085
    4. '()(' → logprob: -5.906625747680664
    5. '```' → logprob: -5.906625747680664
    6. '("("' → logprob: -6.156625747680664
    7. '(()' → logprob: -6.156625747680664
    8. '_' → logprob: -7.531625747680664
    9. '()">' → logprob: -7.656625747680664
    10. '<()>' → logprob: -7.781625747680664

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003401094349101186
    2. ' return' → logprob: -6.128401279449463
    3. 'return' → logprob: -7.753401279449463
    4. '[]' → logprob: -7.753401279449463
    5. ' list' → logprob: -8.628400802612305
    6. 'list' → logprob: -10.003400802612305
    7. ' ' → logprob: -10.003400802612305
    8. ' []' → logprob: -10.378400802612305
    9. '()' → logprob: -11.003400802612305
    10. '  ' → logprob: -11.253400802612305

Token 18: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3726081848144531
    2. 'list' → logprob: -1.3726081848144531
    3. ' return' → logprob: -3.247608184814453
    4. 'return' (adapté à ' return') → logprob: -3.997608184814453
    5. ' map' → logprob: -8.497608184814453
    6. '[]' → logprob: -9.872608184814453
    7. '   ' → logprob: -9.872608184814453
    8. 'map' → logprob: -10.122608184814453
    9. ' []' → logprob: -10.747608184814453
    10. 'lst' → logprob: -12.247608184814453

Token 19: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5765820741653442
    2. 'list' → logprob: -0.8265820741653442
    3. '[list' → logprob: -7.451581954956055
    4. ' [' → logprob: -10.576581954956055
    5. '[' → logprob: -11.076581954956055
    6. ' []' → logprob: -11.701581954956055
    7. '[]' → logprob: -11.826581954956055
    8. '[int' → logprob: -13.576581954956055
    9. '=list' → logprob: -14.076581954956055
    10. ' ' → logprob: -14.451581954956055

Token 20: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.02583700232207775
    2. '(read' → logprob: -4.025836944580078
    3. '(' → logprob: -4.900836944580078
    4. '(int' → logprob: -8.525836944580078
    5. '()' → logprob: -12.525836944580078
    6. 'map' → logprob: -13.150836944580078
    7. 'read' → logprob: -13.275836944580078
    8. '(input' → logprob: -13.275836944580078
    9. '_map' → logprob: -13.775836944580078
    10. '(def' → logprob: -13.900836944580078

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.388769103679806e-05
    2. '(' → logprob: -10.000093460083008
    3. 'int' → logprob: -10.375093460083008
    4. '<int' → logprob: -11.625093460083008
    5. '=int' → logprob: -12.625093460083008
    6. ' (' → logprob: -13.625093460083008
    7. ',int' → logprob: -13.750093460083008
    8. '[int' → logprob: -14.125093460083008
    9. ' int' → logprob: -14.375093460083008
    10. ')' → logprob: -14.750093460083008

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08902093023061752
    2. ',input' → logprob: -2.4640209674835205
    3. '(input' → logprob: -9.964020729064941
    4. ' ,' → logprob: -10.839020729064941
    5. '(' → logprob: -12.089020729064941
    6. ',int' → logprob: -12.964020729064941
    7. 'input' → logprob: -13.089020729064941
    8. '(),' → logprob: -13.589020729064941
    9. ',user' → logprob: -14.839020729064941
    10. '`,' → logprob: -14.964020729064941

Token 23: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.17979303002357483
    2. 'input' → logprob: -1.8047930002212524
    3. '(input' → logprob: -10.679793357849121
    4. ' read' → logprob: -11.554793357849121
    5. ')' → logprob: -12.054793357849121
    6. 'read' → logprob: -12.554793357849121
    7. ' ' → logprob: -13.679793357849121
    8. '=input' → logprob: -13.679793357849121
    9. '	input' → logprob: -14.054793357849121
    10. '[input' → logprob: -14.304793357849121

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00043949027894996107
    2. '()))' → logprob: -8.375439643859863
    3. '()' → logprob: -8.625439643859863
    4. '.' → logprob: -11.125439643859863
    5. '()));' → logprob: -12.500439643859863
    6. '))' → logprob: -12.625439643859863
    7. '(' → logprob: -13.125439643859863
    8. '())' → logprob: -14.000439643859863
    9. ' ().' → logprob: -14.000439643859863
    10. '())))' → logprob: -14.000439643859863

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.981667537620524e-06
    2. 'strip' → logprob: -13.500001907348633
    3. ' split' → logprob: -15.000001907348633
    4. 'rstrip' → logprob: -16.000001907348633
    5. 'read' → logprob: -16.875001907348633
    6. 'spl' → logprob: -17.875001907348633
    7. '(split' → logprob: -18.375001907348633
    8. 'plit' → logprob: -19.000001907348633
    9. 's' → logprob: -19.250001907348633
    10. ')' → logprob: -19.875001907348633

Token 26: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.056668009608983994
    2. '))' → logprob: -3.0566680431365967
    3. '()' → logprob: -5.556667804718018
    4. '())' → logprob: -5.556667804718018
    5. ')' → logprob: -8.681668281555176
    6. '(' → logprob: -9.181668281555176
    7. '()))
' → logprob: -11.556668281555176
    8. '())))' → logprob: -11.556668281555176
    9. '()));' → logprob: -11.681668281555176
    10. '   ' → logprob: -11.931668281555176

Token 27: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1615045666694641
    2. 'def' → logprob: -1.9115045070648193
    3. '\' → logprob: -7.411504745483398
    4. 'n' → logprob: -8.536504745483398
    5. 'de' → logprob: -8.661504745483398
    6. '#' → logprob: -8.911504745483398
    7. 'a' → logprob: -10.161504745483398
    8. '```' → logprob: -10.411504745483398
    9. '*' → logprob: -11.661504745483398
    10. '
' → logprob: -11.661504745483398

Token 28: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6142849922180176
    2. ' solve' → logprob: -1.2392849922180176
    3. ' factorial' → logprob: -2.9892849922180176
    4. ' binary' → logprob: -3.8642849922180176
    5. ' sum' → logprob: -3.9892849922180176
    6. ' read' → logprob: -3.9892849922180176
    7. 'solve' → logprob: -4.364284992218018
    8. ' count' → logprob: -5.114284992218018
    9. ' calculate' → logprob: -5.239284992218018
    10. 'binary' → logprob: -5.364284992218018

Token 29: '_sorted' (ID: 104993)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45102745294570923
    2. '_sum' → logprob: -1.7010273933410645
    3. '_max' → logprob: -1.8260273933410645
    4. '_factor' → logprob: -4.8260273933410645
    5. '_user' → logprob: -6.8260273933410645
    6. '_average' → logprob: -6.8260273933410645
    7. '_input' → logprob: -7.0760273933410645
    8. '_min' → logprob: -7.2010273933410645
    9. '_data' → logprob: -7.3260273933410645
    10. '_list' → logprob: -7.4510273933410645

Token 30: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07095766812562943
    2. '(' → logprob: -2.820957660675049
    3. '_list' → logprob: -6.195957660675049
    4. '('_' → logprob: -6.695957660675049
    5. '(_' → logprob: -7.320957660675049
    6. '_s' → logprob: -7.695957660675049
    7. '_(' → logprob: -7.695957660675049
    8. '(_)' → logprob: -7.820957660675049
    9. '```' → logprob: -8.070958137512207
    10. '_user' → logprob: -8.320958137512207

Token 31: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006926358211785555
    2. '("("' → logprob: -5.881926536560059
    3. '_list' → logprob: -7.131926536560059
    4. '_' → logprob: -7.881926536560059
    5. '(_' → logprob: -8.006926536560059
    6. '()' → logprob: -8.631926536560059
    7. '('_' → logprob: -8.631926536560059
    8. 's' → logprob: -8.631926536560059
    9. '(_)' → logprob: -8.631926536560059
    10. '```' → logprob: -8.756926536560059

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004058451857417822
    2. ')' → logprob: -6.004058361053467
    3. '(' → logprob: -8.004058837890625
    4. '[]):' → logprob: -8.754058837890625
    5. '_sorted' → logprob: -8.879058837890625
    6. 's' → logprob: -8.879058837890625
    7. '   ' → logprob: -9.004058837890625
    8. '_' → logprob: -9.129058837890625
    9. ' ):' → logprob: -9.254058837890625
    10. ',' → logprob: -9.254058837890625

Token 33: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13723647594451904
    2. '(sorted' → logprob: -2.2622365951538086
    3. '(lst' → logprob: -4.762236595153809
    4. 'sorted' → logprob: -5.262236595153809
    5. '_sorted' → logprob: -5.262236595153809
    6. '(
' → logprob: -6.387236595153809
    7. ' sorted' → logprob: -6.387236595153809
    8. '   ' → logprob: -7.012236595153809
    9. '_' → logprob: -8.887236595153809
    10. 'lst' → logprob: -9.137236595153809

Token 34: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.39855989813804626
    2. ' sorted' → logprob: -1.3985599279403687
    3. 'return' (adapté à ' return') → logprob: -3.398559808731079
    4. '   ' → logprob: -3.398559808731079
    5. 'sorted' → logprob: -4.273560047149658
    6. ' lst' → logprob: -7.148560047149658
    7. 'lst' → logprob: -9.8985595703125
    8. '```' → logprob: -10.0235595703125
    9. '    
' → logprob: -10.3985595703125
    10. ' ' → logprob: -10.5235595703125

Token 35: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.0028150975704193115
    2. 'sorted' → logprob: -5.877815246582031
    3. ' ' → logprob: -11.627815246582031
    4. '(sorted' → logprob: -14.252815246582031
    5. ' ' → logprob: -15.127815246582031
    6. ' sort' → logprob: -16.12781524658203
    7. '   ' → logprob: -16.75281524658203
    8. '  ' → logprob: -16.87781524658203
    9. ' space' → logprob: -17.12781524658203
    10. '.sorted' → logprob: -17.25281524658203

Token 36: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6933720111846924
    2. '(lst' → logprob: -0.6933720111846924
    3. '(ls' → logprob: -9.193371772766113
    4. '(l' → logprob: -10.193371772766113
    5. '(list' → logprob: -10.318371772766113
    6. '((' → logprob: -11.318371772766113
    7. '(ll' → logprob: -12.068371772766113
    8. '(

' → logprob: -12.568371772766113
    9. '(lhs' → logprob: -12.693371772766113
    10. '(len' → logprob: -12.693371772766113

Token 37: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. '))' → logprob: -11.375016212463379
    3. ' )' → logprob: -13.125016212463379
    4. '   ' → logprob: -14.125016212463379
    5. ')))' → logprob: -14.125016212463379
    6. ')`' → logprob: -14.875016212463379
    7. '())' → logprob: -15.250016212463379
    8. ' ' → logprob: -15.500016212463379
    9. '[' → logprob: -15.625016212463379
    10. '(' → logprob: -16.250017166137695

Token 38: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12735410034656525
    2. '(' → logprob: -2.877354145050049
    3. '<|end|>' → logprob: -3.752354145050049
    4. '\' → logprob: -4.627354145050049
    5. '```' → logprob: -5.127354145050049
    6. '[' → logprob: -5.627354145050049
    7. '\n' → logprob: -5.627354145050049
    8. '(
' → logprob: -5.752354145050049
    9. '#' → logprob: -6.252354145050049
    10. 'a' → logprob: -6.377354145050049

Token 39: ' can' (ID: 665)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08970269560813904
    2. ' get' → logprob: -2.964702606201172
    3. ' calculate' → logprob: -4.964702606201172
    4. ' reverse' → logprob: -5.089702606201172
    5. ' solve' → logprob: -5.089702606201172
    6. ' process' → logprob: -5.214702606201172
    7. ' sort' → logprob: -6.214702606201172
    8. ' find' → logprob: -6.214702606201172
    9. ' factorial' → logprob: -7.214702606201172
    10. ' count' → logprob: -7.339702606201172

Token 40: '_add' (ID: 8390)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8664632439613342
    2. '_buy' → logprob: -1.2414631843566895
    3. '_split' → logprob: -3.1164631843566895
    4. '_div' → logprob: -3.8664631843566895
    5. '_apply' → logprob: -3.8664631843566895
    6. '_accept' → logprob: -3.8664631843566895
    7. '_jump' → logprob: -3.8664631843566895
    8. '_make' → logprob: -3.9914631843566895
    9. '_take' → logprob: -3.9914631843566895
    10. '_use' → logprob: -4.2414631843566895

Token 41: '(s' (ID: 1858)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6007465124130249
    2. '(' → logprob: -1.725746512413025
    3. '_element' → logprob: -1.975746512413025
    4. '(_' → logprob: -3.6007466316223145
    5. '_parent' → logprob: -4.1007466316223145
    6. '_to' → logprob: -4.2257466316223145
    7. '_item' → logprob: -4.2257466316223145
    8. ' ' → logprob: -4.9757466316223145
    9. '(a' → logprob: -4.9757466316223145
    10. ' (' → logprob: -5.2257466316223145

Token 42: ',' (ID: 11)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.014754394069314003
    2. 'um' → logprob: -5.139754295349121
    3. ',' → logprob: -6.264754295349121
    4. 'tr' → logprob: -6.639754295349121
    5. 't' → logprob: -7.014754295349121
    6. 'tring' → logprob: -7.139754295349121
    7. 'ub' → logprob: -7.264754295349121
    8. 'e' → logprob: -8.389754295349121
    9. '_set' → logprob: -8.639754295349121
    10. 'ize' → logprob: -8.889754295349121

Token 43: ' val' (ID: 1459)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7978150844573975
    2. ' t' → logprob: -2.1728150844573975
    3. 'x' → logprob: -2.4228150844573975
    4. ' n' → logprob: -2.6728150844573975
    5. ' a' → logprob: -3.0478150844573975
    6. 'a' → logprob: -3.4228150844573975
    7. ' k' → logprob: -3.6728150844573975
    8. ' new' → logprob: -3.9228150844573975
    9. 'n' → logprob: -4.047815322875977
    10. 't' → logprob: -4.172815322875977

Token 44: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13847260177135468
    2. ')' → logprob: -2.138472557067871
    3. ',' → logprob: -4.888472557067871
    4. 'ect' → logprob: -6.888472557067871
    5. 'u' → logprob: -7.388472557067871
    6. 'uct' → logprob: -8.263472557067871
    7. 'ue' → logprob: -8.763472557067871
    8. ' ):' → logprob: -8.888472557067871
    9. '):
' → logprob: -9.263472557067871
    10. '_' → logprob: -9.263472557067871

Token 45: ' x' (ID: 1215)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.044603943824768
    2. 'k' → logprob: -2.4196038246154785
    3. ' n' → logprob: -3.0446038246154785
    4. ' target' → logprob: -3.1696038246154785
    5. ' max' → logprob: -3.1696038246154785
    6. ' capacity' → logprob: -3.2946038246154785
    7. ' counts' → logprob: -3.4196038246154785
    8. ' val' → logprob: -3.5446038246154785
    9. ' count' → logprob: -3.6696038246154785
    10. ' m' → logprob: -3.6696038246154785

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01195052545517683
    2. ',' → logprob: -5.261950492858887
    3. ')' → logprob: -5.386950492858887
    4. ' ):' → logprob: -7.386950492858887
    5. ')):' → logprob: -8.511950492858887
    6. 's' → logprob: -8.511950492858887
    7. '):
' → logprob: -8.636950492858887
    8. ':' → logprob: -9.011950492858887
    9. '[' → logprob: -9.511950492858887
    10. '[]):' → logprob: -9.761950492858887

Token 47: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4881778061389923
    2. '   ' → logprob: -1.86317777633667
    3. ' :' → logprob: -2.23817777633667
    4. ',' → logprob: -2.86317777633667
    5. '):' → logprob: -2.98817777633667
    6. ')' → logprob: -6.11317777633667
    7. ' ,' → logprob: -6.36317777633667
    8. ' ' → logprob: -6.48817777633667
    9. 's' → logprob: -6.86317777633667
    10. '[' → logprob: -6.98817777633667

Token 48: ' return' (ID: 622)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6375303268432617
    2. ' return' → logprob: -1.6375303268432617
    3. 's' → logprob: -2.5125303268432617
    4. ' ' → logprob: -2.8875303268432617
    5. '   ' → logprob: -3.1375303268432617
    6. ' (' → logprob: -3.8875303268432617
    7. 'return' (adapté à ' return') → logprob: -4.137530326843262
    8. '    ' → logprob: -4.512530326843262
    9. ' if' → logprob: -4.887530326843262
    10. '(s' → logprob: -5.012530326843262

Token 49: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6307414770126343
    2. ' val' → logprob: -1.7557414770126343
    3. 's' → logprob: -2.380741596221924
    4. ' x' → logprob: -2.505741596221924
    5. ' (' → logprob: -2.755741596221924
    6. '(s' → logprob: -4.130741596221924
    7. 'x' → logprob: -4.130741596221924
    8. 'val' → logprob: -4.255741596221924
    9. '(val' → logprob: -5.505741596221924
    10. '(x' → logprob: -6.505741596221924

Token 50: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16133242845535278
    2. ' +' → logprob: -1.911332368850708
    3. '.' → logprob: -8.161332130432129
    4. '+x' → logprob: -8.411332130432129
    5. '<=' → logprob: -9.036332130432129
    6. '[' → logprob: -9.161332130432129
    7. '-' → logprob: -9.536332130432129
    8. '>=' → logprob: -9.786332130432129
    9. '[val' → logprob: -10.411332130432129
    10. '>' → logprob: -10.411332130432129

Token 51: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6936030387878418
    2. ' val' → logprob: -0.6936030387878418
    3. '[val' → logprob: -8.318603515625
    4. ' x' → logprob: -9.443603515625
    5. '(val' → logprob: -9.943603515625
    6. 'x' → logprob: -9.943603515625
    7. ' ' → logprob: -11.318603515625
    8. '	val' → logprob: -11.568603515625
    9. ' (' → logprob: -12.818603515625
    10. '   ' → logprob: -12.943603515625

Token 52: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07780230790376663
    2. '<=' → logprob: -2.7028024196624756
    3. ' <' → logprob: -6.0778021812438965
    4. '+' → logprob: -6.3278021812438965
    5. ' +' → logprob: -6.5778021812438965
    6. '<' → logprob: -6.5778021812438965
    7. '*' → logprob: -8.077802658081055
    8. ' ' → logprob: -8.327802658081055
    9. 'x' → logprob: -9.827802658081055
    10. '==' → logprob: -10.077802658081055

Token 53: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20141646265983582
    2. ' x' → logprob: -1.7014164924621582
    3. '	x' → logprob: -14.076416015625
    4. ' ' → logprob: -14.451416015625
    5. '   ' → logprob: -15.201416015625
    6. ')x' → logprob: -15.576416015625
    7. '>x' → logprob: -15.701416015625
    8. '_x' → logprob: -16.076416015625
    9. '<|end|>' → logprob: -16.076416015625
    10. 's' → logprob: -16.326416015625

Token 54: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4462061822414398
    2. '
' → logprob: -1.4462062120437622
    3. '

' → logprob: -2.9462060928344727
    4. '<|end|>' → logprob: -3.0712060928344727
    5. '\n' → logprob: -4.321206092834473
    6. '\' → logprob: -5.446206092834473
    7. '_' → logprob: -5.696206092834473
    8. '<|end|>' → logprob: -6.696206092834473
    9. '```' → logprob: -7.321206092834473
    10. '
' → logprob: -7.946206092834473

Token 55: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018910301150754094
    2. '
' → logprob: -7.376891136169434
    3. '\' → logprob: -7.626891136169434
    4. '<|end|>' → logprob: -8.251891136169434
    5. '_' → logprob: -8.376891136169434
    6. '

' → logprob: -9.001891136169434
    7. '\n' → logprob: -9.626891136169434
    8. '<|end|>' → logprob: -10.876891136169434
    9. '_

' → logprob: -11.126891136169434
    10. '```' → logprob: -11.126891136169434

Token 56: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5217915773391724
    2. ' max' → logprob: -2.146791458129883
    3. ' add' → logprob: -2.271791458129883
    4. ' solve' → logprob: -2.521791458129883
    5. ' can' → logprob: -2.771791458129883
    6. ' find' → logprob: -4.771791458129883
    7. ' maximize' → logprob: -5.146791458129883
    8. 'max' → logprob: -5.271791458129883
    9. 'main' → logprob: -5.646791458129883
    10. ' process' → logprob: -6.021791458129883

Token 57: '_ans' (ID: 146254)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.6204971671104431
    2. '(s' → logprob: -0.9954971671104431
    3. '_sum' → logprob: -2.870497226715088
    4. '(' → logprob: -4.495497226715088
    5. '_(' → logprob: -5.245497226715088
    6. 's' → logprob: -5.245497226715088
    7. '(_' → logprob: -5.495497226715088
    8. '_' → logprob: -5.620497226715088
    9. '_value' → logprob: -6.995497226715088
    10. '_values' → logprob: -7.370497226715088

Token 58: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42013734579086304
    2. '(s' → logprob: -1.2951374053955078
    3. '(ans' → logprob: -2.795137405395508
    4. '(a' → logprob: -5.920137405395508
    5. ' (' → logprob: -6.420137405395508
    6. '((' → logprob: -7.295137405395508
    7. '(x' → logprob: -7.920137405395508
    8. '(val' → logprob: -8.170137405395508
    9. '(value' → logprob: -8.295137405395508
    10. '(answer' → logprob: -8.670137405395508

Token 59: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007848530076444149
    2. ' ,' → logprob: -4.882848739624023
    3. '):' → logprob: -9.507848739624023
    4. ',val' → logprob: -9.507848739624023
    5. 's' → logprob: -10.757848739624023
    6. ',s' → logprob: -11.007848739624023
    7. ',value' → logprob: -11.007848739624023
    8. ',new' → logprob: -12.382848739624023
    9. '[' → logprob: -12.632848739624023
    10. '   ' → logprob: -12.757848739624023

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09062106907367706
    2. ' return' → logprob: -3.215620994567871
    3. ' ans' → logprob: -4.090620994567871
    4. ' =' → logprob: -4.715620994567871
    5. 'return' → logprob: -5.340620994567871
    6. ' max' → logprob: -6.090620994567871
    7. 'ans' → logprob: -6.465620994567871
    8. 'def' → logprob: -6.590620994567871
    9. 'max' → logprob: -6.715620994567871
    10. ' +=' → logprob: -6.715620994567871

Token 61: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8156903386116028
    2. '   ' → logprob: -1.190690279006958
    3. 'return' (adapté à ' return') → logprob: -1.690690279006958
    4. ' ans' → logprob: -3.315690279006958
    5. 'ans' → logprob: -4.315690517425537
    6. ' max' → logprob: -4.440690517425537
    7. 'max' → logprob: -5.065690517425537
    8. ' if' → logprob: -8.315690040588379
    9. '(ans' → logprob: -8.315690040588379
    10. '    
' → logprob: -8.815690040588379

Token 62: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7228319644927979
    2. 'ans' → logprob: -1.3478319644927979
    3. ' max' → logprob: -1.5978319644927979
    4. 'max' → logprob: -2.972831964492798
    5. '(ans' → logprob: -7.472831726074219
    6. ' ' → logprob: -8.347831726074219
    7. '	ans' → logprob: -8.847831726074219
    8. ' min' → logprob: -9.097831726074219
    9. ' None' → logprob: -10.472831726074219
    10. ' ' → logprob: -10.472831726074219

Token 63: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002485169330611825
    2. ' ' → logprob: -6.002485275268555
    3. '   ' → logprob: -11.877485275268555
    4. '[' → logprob: -14.377485275268555
    5. '  ' → logprob: -15.064985275268555
    6. ' [' → logprob: -15.252485275268555
    7. '`' → logprob: -16.127485275268555
    8. '2' → logprob: -16.189985275268555
    9. '0' → logprob: -16.314985275268555
    10. '+' → logprob: -16.314985275268555

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.456358823925257e-05
    2. '[' → logprob: -10.500064849853516
    3. ' ' → logprob: -10.875064849853516
    4. 'ans' → logprob: -11.625064849853516
    5. 'len' → logprob: -13.125064849853516
    6. '0' → logprob: -14.250064849853516
    7. '"' → logprob: -14.250064849853516
    8. '[]' → logprob: -14.375064849853516
    9. '   ' → logprob: -14.500064849853516
    10. 'val' → logprob: -14.625064849853516

Token 66: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5722159147262573
    2. '<|end|>' → logprob: -0.9472159147262573
    3. '
' → logprob: -3.322216033935547
    4. '

' → logprob: -4.947216033935547
    5. '\n' → logprob: -6.322216033935547
    6. '<|end|>' → logprob: -6.447216033935547
    7. '\' → logprob: -7.697216033935547
    8. '```' → logprob: -8.072216033935547
    9. ' def' → logprob: -8.072216033935547
    10. '(def' → logprob: -10.197216033935547

Token 67: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003900391166098416
    2. '
' → logprob: -8.75039005279541
    3. '<|end|>' → logprob: -8.75039005279541
    4. '

' → logprob: -10.75039005279541
    5. '\n' → logprob: -11.37539005279541
    6. 'ndef' → logprob: -11.62539005279541
    7. '<|end|>' → logprob: -11.87539005279541
    8. '```' → logprob: -12.00039005279541
    9. '\' → logprob: -12.00039005279541
    10. ' def' → logprob: -12.62539005279541

Token 68: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03943703696131706
    2. ' solve' → logprob: -3.4144370555877686
    3. ' process' → logprob: -6.0394368171691895
    4. ' max' → logprob: -6.4144368171691895
    5. ' find' → logprob: -7.7894368171691895
    6. ' solution' → logprob: -8.664437294006348
    7. 'main' → logprob: -8.664437294006348
    8. ' calculate' → logprob: -8.789437294006348
    9. ' check' → logprob: -8.914437294006348
    10. 'solve' → logprob: -9.164437294006348

Token 69: '_sum' (ID: 29859)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.4763593375682831
    2. '_ans' → logprob: -1.4763593673706055
    3. '_val' → logprob: -3.2263593673706055
    4. '_' → logprob: -3.4763593673706055
    5. '(s' → logprob: -3.7263593673706055
    6. '_sum' → logprob: -4.6013593673706055
    7. '_answer' → logprob: -4.9763593673706055
    8. '_max' → logprob: -5.3513593673706055
    9. '(_' → logprob: -5.6013593673706055
    10. '_value' → logprob: -5.6013593673706055

Token 70: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0005342059303075075
    2. '(sum' → logprob: -8.250534057617188
    3. '(' → logprob: -8.750534057617188
    4. ' (' → logprob: -9.625534057617188
    5. '(current' → logprob: -10.750534057617188
    6. '(ans' → logprob: -11.125534057617188
    7. '(a' → logprob: -12.625534057617188
    8. 's' → logprob: -12.750534057617188
    9. ' s' → logprob: -13.750534057617188
    10. '(total' → logprob: -14.000534057617188

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00308430939912796
    2. ',val' → logprob: -5.878084182739258
    3. ' ,' → logprob: -8.878084182739258
    4. ',s' → logprob: -9.128084182739258
    5. ',value' → logprob: -10.628084182739258
    6. ',v' → logprob: -13.878084182739258
    7. ',n' → logprob: -14.128084182739258
    8. 's' → logprob: -14.253084182739258
    9. '):' → logprob: -14.503084182739258
    10. ',y' → logprob: -14.878084182739258

Token 72: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.02632538042962551
    2. 'val' → logprob: -3.6513254642486572
    3. ' value' → logprob: -11.651325225830078
    4. 'value' → logprob: -12.151325225830078
    5. '	val' → logprob: -12.776325225830078
    6. ',val' → logprob: -13.151325225830078
    7. '   ' → logprob: -13.901325225830078
    8. 'v' → logprob: -14.026325225830078
    9. ' add' → logprob: -14.026325225830078
    10. ' v' → logprob: -14.276325225830078

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006884095724672079
    2. '):
' → logprob: -5.0068840980529785
    3. ')' → logprob: -9.63188362121582
    4. ',' → logprob: -10.13188362121582
    5. '   ' → logprob: -10.25688362121582
    6. '):
' → logprob: -11.25688362121582
    7. ' ):' → logprob: -12.00688362121582
    8. ':' → logprob: -12.38188362121582
    9. '):

' → logprob: -13.38188362121582
    10. '+' → logprob: -13.63188362121582

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004267269745469093
    2. ' return' → logprob: -5.75426721572876
    3. ' s' → logprob: -6.87926721572876
    4. 'return' → logprob: -10.504267692565918
    5. 's' → logprob: -10.629267692565918
    6. '    ' → logprob: -11.879267692565918
    7. '  ' → logprob: -14.379267692565918
    8. ' ' → logprob: -15.004267692565918
    9. '	return' → logprob: -15.379267692565918
    10. '       ' → logprob: -16.2542667388916

Token 75: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.17496204376220703
    2. ' s' → logprob: -2.049962043762207
    3. '   ' → logprob: -4.049962043762207
    4. 'return' (adapté à ' return') → logprob: -4.424962043762207
    5. 's' → logprob: -6.049962043762207
    6. '    ' → logprob: -12.299962043762207
    7. '	return' → logprob: -12.549962043762207
    8. ' ' → logprob: -12.674962043762207
    9. '  ' → logprob: -13.799962043762207
    10. 'eturn' → logprob: -13.924962043762207

Token 76: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06993776559829712
    2. 's' → logprob: -2.6949377059936523
    3. '(s' → logprob: -14.319937705993652
    4. ' ' → logprob: -15.069937705993652
    5. ' ' → logprob: -15.194937705993652
    6. '_s' → logprob: -16.81993865966797
    7. '   ' → logprob: -17.06993865966797
    8. '	s' → logprob: -17.19493865966797
    9. '<|end|>' → logprob: -17.69493865966797
    10. '`s' → logprob: -18.38243865966797

Token 77: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022615134716034
    2. '+' → logprob: -1.9102261066436768
    3. ' ' → logprob: -13.785225868225098
    4. ' +
' → logprob: -14.910225868225098
    5. ' ' → logprob: -15.160225868225098
    6. ' plus' → logprob: -15.535225868225098
    7. '＋' → logprob: -16.285226821899414
    8. '<|end|>' → logprob: -17.410226821899414
    9. ' +

' → logprob: -17.660226821899414
    10. '+
' → logprob: -17.910226821899414

Token 78: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.12692926824092865
    2. 'val' → logprob: -2.12692928314209
    3. '	val' → logprob: -14.12692928314209
    4. ' ' → logprob: -16.251928329467773
    5. ' ' → logprob: -16.501928329467773
    6. '_val' → logprob: -16.626928329467773
    7. '   ' → logprob: -16.626928329467773
    8. '    ' → logprob: -17.251928329467773
    9. '(val' → logprob: -17.376928329467773
    10. '[val' → logprob: -17.751928329467773

Token 79: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6634199619293213
    2. '

' → logprob: -0.7884199619293213
    3. '<|end|>' → logprob: -3.7884199619293213
    4. '
' → logprob: -5.038419723510742
    5. ' def' → logprob: -7.788419723510742
    6. '<|end|>' → logprob: -7.913419723510742
    7. '\n' → logprob: -9.163419723510742
    8. '```' → logprob: -9.538419723510742
    9. ' 

' → logprob: -10.038419723510742
    10. '\' → logprob: -10.038419723510742

Token 80: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00614433828741312
    2. '
' → logprob: -5.7561445236206055
    3. '\' → logprob: -7.2561445236206055
    4. 'n' → logprob: -7.5061445236206055
    5. '\n' → logprob: -7.5061445236206055
    6. 'd' → logprob: -7.8811445236206055
    7. '

' → logprob: -8.006144523620605
    8. '<|end|>' → logprob: -8.256144523620605
    9. '```' → logprob: -10.381144523620605
    10. '  
' → logprob: -10.631144523620605

Token 81: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.24064908921718597
    2. ' def' → logprob: -2.6156489849090576
    3. ' solve' → logprob: -2.6156489849090576
    4. ' max' → logprob: -3.7406489849090576
    5. ' find' → logprob: -4.490649223327637
    6. ' process' → logprob: -4.990649223327637
    7. ' get' → logprob: -5.365649223327637
    8. ' maximize' → logprob: -5.615649223327637
    9. ' can' → logprob: -5.990649223327637
    10. ' select' → logprob: -6.240649223327637

Token 82: '_elements' (ID: 53344)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.8591662645339966
    2. '(' → logprob: -1.1091662645339966
    3. '_' → logprob: -1.7341662645339966
    4. '_items' → logprob: -3.609166145324707
    5. '_(' → logprob: -4.484166145324707
    6. '_input' → logprob: -4.609166145324707
    7. '(lst' → logprob: -5.359166145324707
    8. '(_' → logprob: -5.734166145324707
    9. '_lists' → logprob: -5.859166145324707
    10. '_array' → logprob: -6.609166145324707

Token 83: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02586616389453411
    2. '(s' → logprob: -4.5258660316467285
    3. '(lst' → logprob: -5.0258660316467285
    4. '(elements' → logprob: -5.4008660316467285
    5. ' (' → logprob: -5.7758660316467285
    6. '(ls' → logprob: -9.275866508483887
    7. '(l' → logprob: -9.650866508483887
    8. '(list' → logprob: -9.900866508483887
    9. '(items' → logprob: -10.025866508483887
    10. '(n' → logprob: -10.775866508483887

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.196732960641384e-05
    2. ' ,' → logprob: -9.500082015991211
    3. '):' → logprob: -12.625082015991211
    4. ',s' → logprob: -13.500082015991211
    5. ')' → logprob: -14.625082015991211
    6. ',n' → logprob: -14.750082015991211
    7. ',
' → logprob: -15.750082015991211
    8. ',l' → logprob: -16.00008201599121
    9. ',list' → logprob: -16.12508201599121
    10. '‌,' → logprob: -16.25008201599121

Token 85: ' a' (ID: 261)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.9063513278961182
    2. 'lst' → logprob: -1.0313513278961182
    3. 'x' → logprob: -2.031351327896118
    4. ' x' → logprob: -2.531351327896118
    5. 'arr' → logprob: -4.406351089477539
    6. ' arr' → logprob: -4.906351089477539
    7. ' elements' → logprob: -6.531351089477539
    8. 'values' → logprob: -6.781351089477539
    9. 'elements' → logprob: -6.906351089477539
    10. '   ' → logprob: -7.156351089477539

Token 86: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019467808306217194
    2. ',' → logprob: -4.144467830657959
    3. '_list' → logprob: -6.769467830657959
    4. 's' → logprob: -7.269467830657959
    5. '[]):' → logprob: -7.394467830657959
    6. '):
' → logprob: -8.1444673538208
    7. ' ):' → logprob: -8.3944673538208
    8. '[' → logprob: -8.6444673538208
    9. 'rray' → logprob: -9.3944673538208
    10. ']):' → logprob: -11.0194673538208

Token 87: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1440705507993698
    2. ' x' → logprob: -2.019070625305176
    3. 's' → logprob: -7.519070625305176
    4. 'k' → logprob: -8.019070625305176
    5. 'b' → logprob: -9.269070625305176
    6. ' s' → logprob: -9.394070625305176
    7. ' ' → logprob: -9.519070625305176
    8. '   ' → logprob: -9.644070625305176
    9. ' k' → logprob: -9.894070625305176
    10. 'a' → logprob: -10.394070625305176

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01865588314831257
    2. ',' → logprob: -4.018655776977539
    3. ')' → logprob: -7.893655776977539
    4. ' ):' → logprob: -9.768655776977539
    5. '):
' → logprob: -10.143655776977539
    6. ':' → logprob: -10.643655776977539
    7. 's' → logprob: -13.393655776977539
    8. '   ' → logprob: -13.768655776977539
    9. ' ,' → logprob: -13.768655776977539
    10. '_' → logprob: -14.143655776977539

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06946845352649689
    2. '
' → logprob: -2.8194684982299805
    3. '    
' → logprob: -5.6944684982299805
    4. ' s' → logprob: -6.5694684982299805
    5. '<|end|>' → logprob: -7.0694684982299805
    6. ' ' → logprob: -8.19446849822998
    7. '```' → logprob: -8.31946849822998
    8. '  
' → logprob: -8.69446849822998
    9. 's' → logprob: -8.69446849822998
    10. ' 
' → logprob: -8.69446849822998

Token 90: ' ans' (ID: 3345)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.29373425245285034
    2. 's' → logprob: -2.043734312057495
    3. '   ' → logprob: -2.668734312057495
    4. ' ans' → logprob: -3.043734312057495
    5. 'ans' (adapté à ' ans') → logprob: -4.918734073638916
    6. ' ' → logprob: -8.543734550476074
    7. '    
' → logprob: -9.668734550476074
    8. '    ' → logprob: -9.793734550476074
    9. ' sum' → logprob: -9.918734550476074
    10. '```' → logprob: -10.043734550476074

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016373341903090477
    2. '=' → logprob: -4.141373157501221
    3. ',' → logprob: -8.016373634338379
    4. ' ' → logprob: -12.266373634338379
    5. '   ' → logprob: -13.766373634338379
    6. '  ' → logprob: -13.766373634338379
    7. ' ,' → logprob: -14.016373634338379
    8. ' =
' → logprob: -14.141373634338379
    9. ')' → logprob: -15.641373634338379
    10. ' =)' → logprob: -16.141372680664062

Token 92: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017025562701746821
    2. ' ' → logprob: -6.376702785491943
    3. '   ' → logprob: -15.126702308654785
    4. ' ' → logprob: -17.8142032623291
    5. '۰' → logprob: -17.8767032623291
    6. '  ' → logprob: -18.0017032623291
    7. '1' → logprob: -18.0017032623291
    8. 'len' → logprob: -18.0017032623291
    9. 's' → logprob: -18.1892032623291
    10. 'a' → logprob: -18.6267032623291

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001645644661039114
    2. ' ' → logprob: -8.750164985656738
    3. '1' → logprob: -12.625164985656738
    4. '   ' → logprob: -14.812664985656738
    5. 'n' → logprob: -14.937664985656738
    6. 'a' → logprob: -15.375164985656738
    7. '-' → logprob: -15.687664985656738
    8. 'len' → logprob: -15.687664985656738
    9. '۰' → logprob: -15.750164985656738
    10. '000' → logprob: -15.937664985656738

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002597299637272954
    2. '
' → logprob: -7.377597332000732
    3. '    
' → logprob: -7.877597332000732
    4. ' s' → logprob: -8.127596855163574
    5. '   ' → logprob: -8.252596855163574
    6. 's' → logprob: -8.252596855163574
    7. ',s' → logprob: -8.252596855163574
    8. ' 
' → logprob: -9.377596855163574
    9. '	s' → logprob: -9.377596855163574
    10. '<|end|>' → logprob: -9.502596855163574

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7330712080001831
    2. 's' → logprob: -0.8580712080001831
    3. ' s' → logprob: -2.3580713272094727
    4. ',' → logprob: -7.858071327209473
    5. '	s' → logprob: -8.483071327209473
    6. '    
' → logprob: -9.233071327209473
    7. ',s' → logprob: -9.608071327209473
    8. '
' → logprob: -10.233071327209473
    9. 'sum' → logprob: -10.233071327209473
    10. '   ' → logprob: -10.358071327209473

Token 96: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.005013990215957165
    2. ' s' → logprob: -5.380013942718506
    3. '   ' → logprob: -8.255014419555664
    4. 'current' → logprob: -9.505014419555664
    5. 'total' → logprob: -10.880014419555664
    6. 'sum' → logprob: -11.255014419555664
    7. ' current' → logprob: -12.130014419555664
    8. 'for' → logprob: -12.380014419555664
    9. 'curr' → logprob: -12.380014419555664
    10. ' ' → logprob: -13.255014419555664

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008618354797363281
    2. '=' → logprob: -4.758618354797363
    3. ' ' → logprob: -13.133618354797363
    4. '   ' → logprob: -14.008618354797363
    5. '  ' → logprob: -14.758618354797363
    6. ',' → logprob: -14.883618354797363
    7. '<|end|>' → logprob: -16.383617401123047
    8. ' =
' → logprob: -17.133617401123047
    9. ' +=' → logprob: -17.258617401123047
    10. ' =)' → logprob: -17.508617401123047

Token 98: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005542247672565281
    2. ' ' → logprob: -7.500554084777832
    3. '   ' → logprob: -13.750554084777832
    4. '<|end|>' → logprob: -17.00055503845215
    5. '  ' → logprob: -17.50055503845215
    6. '00' → logprob: -19.25055503845215
    7. '۰' → logprob: -19.62555503845215
    8. '    ' → logprob: -20.75055503845215
    9. '000' → logprob: -21.12555503845215
    10. ' ' → logprob: -21.25055503845215

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.50001335144043
    4. '<|end|>' → logprob: -18.12501335144043
    5. '  ' → logprob: -18.25001335144043
    6. '00' → logprob: -18.87501335144043
    7. '۰' → logprob: -19.12501335144043
    8. '-' → logprob: -19.50001335144043
    9. '000' → logprob: -20.25001335144043
    10. '    ' → logprob: -20.50001335144043

Token 100: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003482466796413064
    2. '   ' → logprob: -6.128482341766357
    3. '    
' → logprob: -7.628482341766357
    4. '<|end|>' → logprob: -7.753482341766357
    5. '
' → logprob: -8.628482818603516
    6. '  
' → logprob: -9.253482818603516
    7. '<|end|>' → logprob: -10.503482818603516
    8. ' 
' → logprob: -10.878482818603516
    9. ' for' → logprob: -10.878482818603516
    10. '   
' → logprob: -11.378482818603516

Token 101: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09168101102113724
    2. '   ' → logprob: -2.4666810035705566
    3. '    
' → logprob: -6.341681003570557
    4. '<|end|>' → logprob: -8.091681480407715
    5. ' for' → logprob: -8.841681480407715
    6. 'a' → logprob: -8.841681480407715
    7. '
' → logprob: -9.091681480407715
    8. '  
' → logprob: -9.591681480407715
    9. '   
' → logprob: -10.091681480407715
    10. 'for' → logprob: -10.341681480407715

Token 102: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3002457320690155
    2. '   ' → logprob: -1.800245761871338
    3. ' for' → logprob: -2.550245761871338
    4. 'a' → logprob: -4.175245761871338
    5. ' a' → logprob: -7.425245761871338
    6. 'sorted' → logprob: -10.67524528503418
    7. '    
' → logprob: -10.92524528503418
    8. '  ' → logprob: -11.30024528503418
    9. ' sorted' → logprob: -12.30024528503418
    10. ' ' → logprob: -12.30024528503418

Token 103: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0986253097653389
    2. 'i' → logprob: -2.848625421524048
    3. ' val' → logprob: -3.473625421524048
    4. ' a' → logprob: -6.098625183105469
    5. ' ' → logprob: -6.973625183105469
    6. 'val' → logprob: -7.098625183105469
    7. 'a' → logprob: -8.223625183105469
    8. ' ai' → logprob: -8.848625183105469
    9. '   ' → logprob: -8.973625183105469
    10. ' elem' → logprob: -9.223625183105469

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038954682648181915
    2. 'in' → logprob: -3.288954734802246
    3. ' ' → logprob: -7.288954734802246
    4. 'n' → logprob: -9.038954734802246
    5. ',' → logprob: -10.038954734802246
    6. '	in' → logprob: -11.163954734802246
    7. ' n' → logprob: -11.288954734802246
    8. '  ' → logprob: -11.413954734802246
    9. ' ,' → logprob: -12.163954734802246
    10. '_' → logprob: -12.788954734802246

Token 105: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5788370370864868
    2. ' range' → logprob: -0.8288370370864868
    3. 'a' → logprob: -6.078836917877197
    4. ' a' → logprob: -7.703836917877197
    5. '   ' → logprob: -9.953837394714355
    6. ' ' → logprob: -10.328837394714355
    7. '	range' → logprob: -10.453837394714355
    8. '  ' → logprob: -11.203837394714355
    9. ' xrange' → logprob: -11.828837394714355
    10. '(range' → logprob: -12.203837394714355

Token 106: '(get' (ID: 7119)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02328682132065296
    2. '(' → logprob: -3.773286819458008
    3. 'n' → logprob: -10.773286819458008
    4. ' (' → logprob: -11.398286819458008
    5. ' n' → logprob: -12.648286819458008
    6. '(len' → logprob: -12.773286819458008
    7. '   ' → logprob: -13.148286819458008
    8. ',n' → logprob: -15.648286819458008
    9. ',' → logprob: -15.773286819458008
    10. '	n' → logprob: -15.773286819458008

Token 107: '_n' (ID: 2170)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.0013240495463833213
    2. '_len' → logprob: -7.12632417678833
    3. '(len' → logprob: -8.376323699951172
    4. 'len' → logprob: -9.251323699951172
    5. '_s' → logprob: -10.251323699951172
    6. '(n' → logprob: -10.376323699951172
    7. '_length' → logprob: -10.376323699951172
    8. '_list' → logprob: -10.876323699951172
    9. '   ' → logprob: -11.001323699951172
    10. 'sorted' → logprob: -11.376323699951172

Token 108: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03436585143208504
    2. '(a' → logprob: -3.6593658924102783
    3. '(' → logprob: -4.909365653991699
    4. '(i' → logprob: -8.4093656539917
    5. '(len' → logprob: -8.5343656539917
    6. 'a' → logprob: -9.0343656539917
    7. ')' → logprob: -9.5343656539917
    8. ' (' → logprob: -11.5343656539917
    9. '()' → logprob: -11.9093656539917
    10. '())' → logprob: -12.1593656539917

Token 109: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.1596309393644333
    2. '))' → logprob: -2.0346310138702393
    3. ')):
' → logprob: -4.78463077545166
    4. ')' → logprob: -5.03463077545166
    5. '):' → logprob: -7.15963077545166
    6. ')):
' → logprob: -7.90963077545166
    7. ' ))' → logprob: -8.53463077545166
    8. '   ' → logprob: -8.90963077545166
    9. ' ' → logprob: -9.15963077545166
    10. '()))' → logprob: -9.40963077545166

Token 110: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9614856243133545
    2. '):' → logprob: -1.3364856243133545
    3. '   ' → logprob: -1.5864856243133545
    4. 'a' → logprob: -3.3364856243133545
    5. 'n' → logprob: -3.4614856243133545
    6. '(n' → logprob: -4.461485862731934
    7. '):
' → logprob: -4.711485862731934
    8. '       ' → logprob: -4.836485862731934
    9. '(i' → logprob: -5.086485862731934
    10. 'len' → logprob: -5.086485862731934

Token 111: ' ans' (ID: 3345)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6887995004653931
    2. 'a' → logprob: -1.063799500465393
    3. ' if' → logprob: -2.6887993812561035
    4. ' get' → logprob: -3.9387993812561035
    5. ' n' → logprob: -4.0637993812561035
    6. 'if' → logprob: -4.6887993812561035
    7. 'n' → logprob: -4.6887993812561035
    8. ' i' → logprob: -4.9387993812561035
    9. 'i' → logprob: -5.5637993812561035
    10. '   ' → logprob: -5.5637993812561035

Token 112: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.042634062469005585
    2. ' +=' → logprob: -3.6676340103149414
    3. '=' → logprob: -4.792634010314941
    4. ',' → logprob: -4.917634010314941
    5. ' ,' → logprob: -7.917634010314941
    6. '+=' → logprob: -9.167634010314941
    7. ' +' → logprob: -10.167634010314941
    8. ' ' → logprob: -10.542634010314941
    9. '+' → logprob: -10.917634010314941
    10. '   ' → logprob: -11.042634010314941

Token 113: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.00793617032468319
    2. 's' → logprob: -5.382936000823975
    3. ' ' → logprob: -5.757936000823975
    4. '<|end|>' → logprob: -10.132936477661133
    5. ' val' → logprob: -10.632936477661133
    6. '    ' → logprob: -11.007936477661133
    7. '_s' → logprob: -11.007936477661133
    8. ' _' → logprob: -11.132936477661133
    9. '_' → logprob: -11.632936477661133
    10. 'val' → logprob: -12.882936477661133

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007656677160412073
    2. '=' → logprob: -4.882656574249268
    3. ',' → logprob: -10.382657051086426
    4. ' +=' → logprob: -11.257657051086426
    5. '    ' → logprob: -12.882657051086426
    6. ' ' → logprob: -13.257657051086426
    7. '   ' → logprob: -14.257657051086426
    8. '        ' → logprob: -15.132657051086426
    9. '+=' → logprob: -15.257657051086426
    10. ' ,' → logprob: -15.507657051086426

Token 115: ' process' (ID: 2273)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1976674199104309
    2. ' update' → logprob: -2.322667360305786
    3. ' (' → logprob: -2.947667360305786
    4. ' process' → logprob: -4.697667598724365
    5. 'ans' → logprob: -5.072667598724365
    6. ' ' → logprob: -5.947667598724365
    7. '(ans' → logprob: -6.197667598724365
    8. 'update' → logprob: -6.322667598724365
    9. ' i' → logprob: -6.322667598724365
    10. '0' → logprob: -6.822667598724365

Token 116: '_single' (ID: 46053)
  Prédit: '_elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.03638515621423721
    2. '(i' → logprob: -3.6613850593566895
    3. 'elements' → logprob: -5.5363850593566895
    4. '_element' → logprob: -6.1613850593566895
    5. '_' → logprob: -7.1613850593566895
    6. '(a' → logprob: -7.5363850593566895
    7. '   ' → logprob: -7.9113850593566895
    8. '(s' → logprob: -8.036385536193848
    9. '(ans' → logprob: -8.286385536193848
    10. '(' → logprob: -8.411385536193848

Token 117: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.40946677327156067
    2. '(a' → logprob: -1.4094667434692383
    3. '(i' → logprob: -2.5344667434692383
    4. 'element' → logprob: -5.034466743469238
    5. '(' → logprob: -6.409466743469238
    6. '(s' → logprob: -6.409466743469238
    7. '(n' → logprob: -6.909466743469238
    8. '_elements' → logprob: -8.159466743469238
    9. '_item' → logprob: -8.534466743469238
    10. '(_' → logprob: -8.909466743469238

Token 118: '(ans' (ID: 70054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5434415340423584
    2. '(i' → logprob: -1.1684415340423584
    3. '(n' → logprob: -3.0434415340423584
    4. '(ans' → logprob: -3.0434415340423584
    5. '(s' → logprob: -4.6684417724609375
    6. '(' → logprob: -5.6684417724609375
    7. ' (' → logprob: -9.293441772460938
    8. 'a' → logprob: -10.543441772460938
    9. '```' → logprob: -11.043441772460938
    10. '(
' → logprob: -11.168441772460938

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000639765290543437
    2. ' ,' → logprob: -7.625639915466309
    3. 's' → logprob: -9.500639915466309
    4. ',a' → logprob: -10.750639915466309
    5. ',s' → logprob: -11.125639915466309
    6. '   ' → logprob: -11.250639915466309
    7. 'a' → logprob: -11.875639915466309
    8. ')' → logprob: -12.500639915466309
    9. '<|end|>' → logprob: -12.750639915466309
    10. ',i' → logprob: -12.875639915466309

Token 120: ' s' (ID: 265)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9447396993637085
    2. 's' → logprob: -0.9447396993637085
    3. ' s' → logprob: -1.8197396993637085
    4. ' a' → logprob: -3.069739818572998
    5. 'i' → logprob: -4.569739818572998
    6. ' i' → logprob: -5.944739818572998
    7. '   ' → logprob: -7.694739818572998
    8. ' ' → logprob: -9.06973934173584
    9. 'x' → logprob: -9.69473934173584
    10. '<|end|>' → logprob: -9.69473934173584

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003574768779799342
    2. ' ,' → logprob: -5.753574848175049
    3. ',a' → logprob: -8.12857437133789
    4. '   ' → logprob: -9.87857437133789
    5. 'a' → logprob: -11.00357437133789
    6. '       ' → logprob: -11.75357437133789
    7. '(a' → logprob: -11.75357437133789
    8. ' a' → logprob: -12.37857437133789
    9. ',
' → logprob: -12.75357437133789
    10. ',i' → logprob: -12.87857437133789

Token 122: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.349317729473114
    2. ' a' → logprob: -1.2243177890777588
    3. '   ' → logprob: -7.97431755065918
    4. 'i' → logprob: -9.09931755065918
    5. ' i' → logprob: -9.59931755065918
    6. 'get' → logprob: -9.97431755065918
    7. ' get' → logprob: -10.09931755065918
    8. ')' → logprob: -10.22431755065918
    9. '    ' → logprob: -10.22431755065918
    10. ' ' → logprob: -10.59931755065918

Token 123: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0026962202973663807
    2. '[' → logprob: -6.0026960372924805
    3. ' [' → logprob: -9.12769603729248
    4. ',' → logprob: -10.25269603729248
    5. '[
' → logprob: -10.37769603729248
    6. ',i' → logprob: -11.87769603729248
    7. '[I' → logprob: -12.12769603729248
    8. ' ' → logprob: -12.50269603729248
    9. '```' → logprob: -12.50269603729248
    10. ')[' → logprob: -12.62769603729248

Token 124: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5661494135856628
    2. '])' → logprob: -1.0661494731903076
    3. '),' → logprob: -2.9411494731903076
    4. ')' → logprob: -3.8161494731903076
    5. ',' → logprob: -4.4411492347717285
    6. '))' → logprob: -8.191149711608887
    7. ']' → logprob: -8.566149711608887
    8. ')])' → logprob: -8.691149711608887
    9. '])
' → logprob: -8.941149711608887
    10. '   ' → logprob: -9.191149711608887

Token 125: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5231841206550598
    2. ' x' → logprob: -0.8981841206550598
    3. '   ' → logprob: -11.273183822631836
    4. ',' → logprob: -11.398183822631836
    5. ' ' → logprob: -11.773183822631836
    6. ')' → logprob: -12.273183822631836
    7. '    ' → logprob: -12.273183822631836
    8. '	x' → logprob: -12.398183822631836
    9. '
' → logprob: -12.960683822631836
    10. '  ' → logprob: -13.335683822631836

Token 126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025442740879952908
    2. ')
' → logprob: -6.002544403076172
    3. ')

' → logprob: -9.877544403076172
    4. '   ' → logprob: -11.502544403076172
    5. ' )' → logprob: -12.752544403076172
    6. ')
' → logprob: -13.752544403076172
    7. '))' → logprob: -13.877544403076172
    8. '       ' → logprob: -14.627544403076172
    9. ' ' → logprob: -14.752544403076172
    10. ',' → logprob: -15.127544403076172

Token 127: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1983310431241989
    2. 'def' → logprob: -1.9483309984207153
    3. '

' → logprob: -3.323331117630005
    4. '


' → logprob: -8.573330879211426
    5. '<|end|>' → logprob: -8.573330879211426
    6. '
' → logprob: -8.698330879211426
    7. '\n' → logprob: -8.698330879211426
    8. '  
' → logprob: -9.073330879211426
    9. '    
' → logprob: -9.073330879211426
    10. '   ' → logprob: -9.323330879211426

Token 128: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25768032670021057
    2. '(n' → logprob: -2.3826804161071777
    3. 'n' → logprob: -2.5076804161071777
    4. '
' → logprob: -3.8826804161071777
    5. '(' → logprob: -4.632680416107178
    6. ')' → logprob: -5.507680416107178
    7. '\n' → logprob: -6.382680416107178
    8. '   ' → logprob: -6.632680416107178
    9. '(
' → logprob: -6.632680416107178
    10. ' n' → logprob: -6.632680416107178

Token 129: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.007821086794137955
    2. 'ans' → logprob: -4.882821083068848
    3. '(ans' → logprob: -8.507821083068848
    4. '	ans' → logprob: -12.132821083068848
    5. ' ' → logprob: -13.007821083068848
    6. '_ans' → logprob: -13.507821083068848
    7. ' process' → logprob: -13.757821083068848
    8. ' (' → logprob: -13.757821083068848
    9. 's' → logprob: -14.757821083068848
    10. 'process' → logprob: -15.382821083068848

Token 130: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4322490692138672
    2. '
' → logprob: -1.9322490692138672
    3. '(' → logprob: -2.182249069213867
    4. '(
' → logprob: -3.182249069213867
    5. '

' → logprob: -4.057249069213867
    6. '<|end|>' → logprob: -4.307249069213867
    7. '(n' → logprob: -4.807249069213867
    8. ' def' → logprob: -5.432249069213867
    9. '()' → logprob: -6.182249069213867
    10. '(

' → logprob: -6.307249069213867

Token 131: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.009016092866659164
    2. 's' → logprob: -4.759016036987305
    3. ' ' → logprob: -7.884016036987305
    4. ' 
' → logprob: -12.634016036987305
    5. ' ' → logprob: -12.634016036987305
    6. '(s' → logprob: -12.759016036987305
    7. ' None' → logprob: -12.759016036987305
    8. 'None' → logprob: -13.384016036987305
    9. 'def' → logprob: -13.509016036987305
    10. ' def' → logprob: -13.634016036987305

Token 132: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6694337129592896
    2. '(n' → logprob: -1.6694337129592896
    3. '(' → logprob: -2.04443359375
    4. '(
' → logprob: -2.91943359375
    5. '
' → logprob: -3.66943359375
    6. 'n' → logprob: -3.91943359375
    7. '<|end|>' → logprob: -3.91943359375
    8. '[' → logprob: -4.16943359375
    9. '[
' → logprob: -5.04443359375
    10. '[n' → logprob: -5.16943359375

Token 133: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06963582336902618
    2. '(' → logprob: -3.1946358680725098
    3. '(
' → logprob: -4.31963586807251
    4. 'n' → logprob: -5.19463586807251
    5. '(n' → logprob: -5.44463586807251
    6. '
' → logprob: -7.31963586807251
    7. '()' → logprob: -7.44463586807251
    8. ' def' → logprob: -7.94463586807251
    9. '(

' → logprob: -8.194635391235352
    10. '_' → logprob: -8.194635391235352

Token 134: ' process' (ID: 2273)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.12237188220024109
    2. ' process' → logprob: -2.2473719120025635
    3. '_get' → logprob: -5.747371673583984
    4. 'process' → logprob: -5.997371673583984
    5. 'get' → logprob: -6.122371673583984
    6. '_process' → logprob: -6.997371673583984
    7. '_' → logprob: -7.872371673583984
    8. ' read' → logprob: -8.872371673583984
    9. 'n' → logprob: -9.997371673583984
    10. ' n' → logprob: -10.122371673583984

Token 135: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.02071460708975792
    2. '_elements' → logprob: -3.895714521408081
    3. '_' → logprob: -9.77071475982666
    4. '_n' → logprob: -10.02071475982666
    5. '_element' → logprob: -10.27071475982666
    6. 'single' → logprob: -11.27071475982666
    7. 'elements' → logprob: -11.52071475982666
    8. '_s' → logprob: -12.14571475982666
    9. '_list' → logprob: -13.02071475982666
    10. 'Single' → logprob: -13.64571475982666

Token 136: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.00030400342075154185
    2. '_single' → logprob: -8.250304222106934
    3. '_elements' → logprob: -10.375304222106934
    4. '_' → logprob: -12.000304222106934
    5. 'def' → logprob: -13.500304222106934
    6. '_elem' → logprob: -14.000304222106934
    7. ' _' → logprob: -14.250304222106934
    8. 'element' → logprob: -14.625304222106934
    9. '_line' → logprob: -15.250304222106934
    10. '_function' → logprob: -15.625304222106934

Token 137: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00012868782505393028
    2. ' (' → logprob: -9.125128746032715
    3. '(' → logprob: -10.875128746032715
    4. '(answer' → logprob: -14.250128746032715
    5. 'def' → logprob: -17.6251277923584
    6. '(def' → logprob: -17.6251277923584
    7. '(prev' → logprob: -17.7501277923584
    8. ' ans' → logprob: -17.8751277923584
    9. '(args' → logprob: -18.2501277923584
    10. '(acc' → logprob: -18.3751277923584

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017147827020380646
    2. ' ,' → logprob: -9.000171661376953
    3. ',s' → logprob: -10.125171661376953
    4. 's' → logprob: -11.875171661376953
    5. ' s' → logprob: -15.000171661376953
    6. '‌,' → logprob: -15.000171661376953
    7. ',
' → logprob: -15.625171661376953
    8. '   ' → logprob: -16.625171661376953
    9. '<|end|>' → logprob: -16.875171661376953
    10. '_,' → logprob: -17.375171661376953

Token 139: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1602407842874527
    2. ' s' → logprob: -1.9102407693862915
    3. '<|end|>' → logprob: -11.03524112701416
    4. ' ' → logprob: -15.53524112701416
    5. ',' → logprob: -16.535240173339844
    6. '_s' → logprob: -16.660240173339844
    7. ')' → logprob: -17.535240173339844
    8. '
' → logprob: -17.785240173339844
    9. '  ' → logprob: -17.785240173339844
    10. '	s' → logprob: -18.160240173339844

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3795937522663735e-05
    2. ' ,' → logprob: -10.75002384185791
    3. ',val' → logprob: -13.37502384185791
    4. ',s' → logprob: -15.00002384185791
    5. 's' → logprob: -15.75002384185791
    6. ',
' → logprob: -16.000022888183594
    7. ',a' → logprob: -16.750022888183594
    8. '‌,' → logprob: -16.750022888183594
    9. ',value' → logprob: -17.375022888183594
    10. '   ' → logprob: -17.500022888183594

Token 141: ' ai' (ID: 8440)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.011099227704107761
    2. ' val' → logprob: -4.511099338531494
    3. 'value' → logprob: -10.636098861694336
    4. 'a' → logprob: -11.636098861694336
    5. '   ' → logprob: -12.511098861694336
    6. 'element' → logprob: -12.636098861694336
    7. 'v' → logprob: -13.011098861694336
    8. '	val' → logprob: -13.261098861694336
    9. 'elem' → logprob: -13.511098861694336
    10. '```' → logprob: -13.636098861694336

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012523093027994037
    2. ' ,' → logprob: -10.00012493133545
    3. '):' → logprob: -10.62512493133545
    4. '_,' → logprob: -11.12512493133545
    5. 'x' → logprob: -11.62512493133545
    6. '):
' → logprob: -12.12512493133545
    7. '),' → logprob: -12.25012493133545
    8. ')' → logprob: -12.37512493133545
    9. ',
' → logprob: -12.50012493133545
    10. 'ex' → logprob: -12.75012493133545

Token 143: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3485383987426758
    2. ' x' → logprob: -1.2235383987426758
    3. ' ' → logprob: -9.723538398742676
    4. '   ' → logprob: -10.848538398742676
    5. '  ' → logprob: -12.223538398742676
    6. ')' → logprob: -13.223538398742676
    7. '```' → logprob: -13.848538398742676
    8. 's' → logprob: -14.036038398742676
    9. '	x' → logprob: -14.036038398742676
    10. ',' → logprob: -14.348538398742676

Token 144: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0031825865153223276
    2. '):
' → logprob: -5.753182411193848
    3. ':' → logprob: -13.128182411193848
    4. '):
' → logprob: -13.753182411193848
    5. ')' → logprob: -13.878182411193848
    6. ' ):' → logprob: -14.878182411193848
    7. '   ' → logprob: -15.628182411193848
    8. ',' → logprob: -16.128183364868164
    9. '):

' → logprob: -16.253183364868164
    10. '():' → logprob: -17.628183364868164

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03168592229485512
    2. ' if' → logprob: -3.5316858291625977
    3. 'if' → logprob: -6.281685829162598
    4. '    
' → logprob: -10.656685829162598
    5. '    ' → logprob: -11.281685829162598
    6. '	if' → logprob: -11.781685829162598
    7. '   ' → logprob: -12.031685829162598
    8. ',' → logprob: -12.281685829162598
    9. '<|end|>' → logprob: -13.656685829162598
    10. '  ' → logprob: -13.656685829162598

Token 146: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.030278582125902176
    2. ' if' → logprob: -3.6552786827087402
    3. '   ' → logprob: -5.53027868270874
    4. ' ' → logprob: -13.780278205871582
    5. '	if' → logprob: -14.030278205871582
    6. 'new' → logprob: -14.030278205871582
    7. '  ' → logprob: -14.655278205871582
    8. '    
' → logprob: -14.905278205871582
    9. 'ans' → logprob: -15.155278205871582
    10. '    ' → logprob: -15.280278205871582

Token 147: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.055057406425476074
    2. 'can' → logprob: -2.9300575256347656
    3. ' s' → logprob: -8.930057525634766
    4. 's' → logprob: -11.305057525634766
    5. '(can' → logprob: -11.555057525634766
    6. ' ai' → logprob: -11.680057525634766
    7. ' not' → logprob: -12.680057525634766
    8. '	can' → logprob: -13.055057525634766
    9. ' ' → logprob: -13.805057525634766
    10. 'ai' → logprob: -13.930057525634766

Token 148: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.00026872646412812173
    2. ' _' → logprob: -8.250268936157227
    3. '_' → logprob: -12.250268936157227
    4. ' add' → logprob: -14.750268936157227
    5. '_update' → logprob: -15.250268936157227
    6. ' ' → logprob: -15.250268936157227
    7. 'add' → logprob: -15.375268936157227
    8. '_ADD' → logprob: -15.375268936157227
    9. '_append' → logprob: -15.625268936157227
    10. '_Add' → logprob: -15.750268936157227

Token 149: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.012743073515594006
    2. '(' → logprob: -4.51274299621582
    3. ' (' → logprob: -6.38774299621582
    4. 's' → logprob: -12.51274299621582
    5. '(
' → logprob: -12.63774299621582
    6. ')' → logprob: -12.63774299621582
    7. ' s' → logprob: -13.88774299621582
    8. ',' → logprob: -15.63774299621582
    9. ' ' → logprob: -15.88774299621582
    10. ' (
' → logprob: -16.63774299621582

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008663220214657485
    2. ' ,' → logprob: -7.125866413116455
    3. 'ai' → logprob: -10.625865936279297
    4. ',
' → logprob: -10.625865936279297
    5. ' ai' → logprob: -13.125865936279297
    6. '(ai' → logprob: -13.250865936279297
    7. '_ai' → logprob: -13.375865936279297
    8. ',

' → logprob: -13.750865936279297
    9. '),' → logprob: -13.875865936279297
    10. 's' → logprob: -14.125865936279297

Token 151: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.25195837020874023
    2. ' ai' → logprob: -1.5019583702087402
    3. '(ai' → logprob: -11.626958847045898
    4. 'val' → logprob: -11.751958847045898
    5. '   ' → logprob: -12.376958847045898
    6. '_ai' → logprob: -13.251958847045898
    7. '.ai' → logprob: -13.376958847045898
    8. ' ' → logprob: -13.751958847045898
    9. ',' → logprob: -14.251958847045898
    10. 'a' → logprob: -14.251958847045898

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00179203599691391
    2. ' ,' → logprob: -6.376791954040527
    3. ')' → logprob: -10.251791954040527
    4. ',
' → logprob: -11.251791954040527
    5. '),' → logprob: -11.376791954040527
    6. '   ' → logprob: -12.001791954040527
    7. '+' → logprob: -12.376791954040527
    8. '):
' → logprob: -12.626791954040527
    9. ',val' → logprob: -12.876791954040527
    10. ' ' → logprob: -13.126791954040527

Token 153: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38688844442367554
    2. 'x' → logprob: -1.1368885040283203
    3. ')' → logprob: -11.01188850402832
    4. ')x' → logprob: -14.88688850402832
    5. ' )' → logprob: -16.13688850402832
    6. '(x' → logprob: -16.26188850402832
    7. ' ' → logprob: -16.63688850402832
    8. '	x' → logprob: -16.63688850402832
    9. ' ' → logprob: -16.76188850402832
    10. ',' → logprob: -16.76188850402832

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20151634514331818
    2. '):
' → logprob: -1.7015163898468018
    3. ')' → logprob: -9.951516151428223
    4. '):
' → logprob: -10.576516151428223
    5. '   ' → logprob: -11.201516151428223
    6. ':' → logprob: -11.826516151428223
    7. '):

' → logprob: -12.201516151428223
    8. ' ):' → logprob: -13.201516151428223
    9. ' ):
' → logprob: -14.326516151428223
    10. ''):' → logprob: -15.826516151428223

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017850141739472747
    2. ':
' → logprob: -7.001784801483154
    3. ':' → logprob: -7.376784801483154
    4. '):
' → logprob: -8.876785278320312
    5. ',' → logprob: -10.376785278320312
    6. ' return' → logprob: -10.501785278320312
    7. '   ' → logprob: -11.001785278320312
    8. '):' → logprob: -11.626785278320312
    9. ')' → logprob: -12.751785278320312
    10. '        
' → logprob: -12.876785278320312

Token 156: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12137904763221741
    2. ' ans' → logprob: -2.2463791370391846
    3. 'ans' (adapté à ' ans') → logprob: -5.2463788986206055
    4. ' return' → logprob: -6.1213788986206055
    5. ' s' → logprob: -7.8713788986206055
    6. 'return' → logprob: -8.246378898620605
    7. ' new' → logprob: -8.871378898620605
    8. '   ' → logprob: -9.246378898620605
    9. '	ans' → logprob: -10.121378898620605
    10. '           ' → logprob: -10.246378898620605

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04689829424023628
    2. '=' → logprob: -3.671898365020752
    3. ',' → logprob: -3.921898365020752
    4. ' +=' → logprob: -7.546898365020752
    5. ' ,' → logprob: -10.171897888183594
    6. '+=' → logprob: -12.296897888183594
    7. '   ' → logprob: -12.421897888183594
    8. ' ' → logprob: -12.546897888183594
    9. ')' → logprob: -13.671897888183594
    10. '```' → logprob: -14.546897888183594

Token 158: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.12699781358242035
    2. 'update' → logprob: -2.126997709274292
    3. ' ans' → logprob: -9.751997947692871
    4. 'ans' → logprob: -11.626997947692871
    5. '       ' → logprob: -14.376997947692871
    6. '   ' → logprob: -14.751997947692871
    7. '(update' → logprob: -14.876997947692871
    8. '	update' → logprob: -14.876997947692871
    9. '.update' → logprob: -15.251997947692871
    10. '    ' → logprob: -15.626997947692871

Token 159: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -2.8325677703833207e-05
    2. 'ans' → logprob: -10.500028610229492
    3. '(ans' → logprob: -15.000028610229492
    4. '_answer' → logprob: -15.500028610229492
    5. ' ans' → logprob: -17.000028610229492
    6. '	ans' → logprob: -17.125028610229492
    7. ' _' → logprob: -17.250028610229492
    8. '_ant' → logprob: -17.250028610229492
    9. 'Ans' → logprob: -17.625028610229492
    10. '_sum' → logprob: -17.750028610229492

Token 160: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.250001907348633
    3. '(answer' → logprob: -15.250001907348633
    4. ' (' → logprob: -15.375001907348633
    5. 'ans' → logprob: -17.625001907348633
    6. '(
' → logprob: -17.875001907348633
    7. '	ans' → logprob: -20.000001907348633
    8. '```' → logprob: -20.625001907348633
    9. ' ans' → logprob: -21.000001907348633
    10. '(an' → logprob: -21.125001907348633

Token 161: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001718019717372954
    2. ')
' → logprob: -6.501718044281006
    3. '(ans' → logprob: -8.501717567443848
    4. '   ' → logprob: -12.501717567443848
    5. ')

' → logprob: -12.751717567443848
    6. 'ans' → logprob: -13.126717567443848
    7. '),' → logprob: -14.251717567443848
    8. '       ' → logprob: -14.251717567443848
    9. '(' → logprob: -14.501717567443848
    10. ')
' → logprob: -14.751717567443848

Token 162: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011144968448206782
    2. 's' → logprob: -7.501114368438721
    3. '
' → logprob: -8.251114845275879
    4. ' s' → logprob: -8.626114845275879
    5. '   ' → logprob: -9.501114845275879
    6. ',' → logprob: -10.751114845275879
    7. '        
' → logprob: -11.251114845275879
    8. ',s' → logprob: -12.251114845275879
    9. '	s' → logprob: -13.251114845275879
    10. '           ' → logprob: -13.876114845275879

Token 163: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003258876968175173
    2. 's' (adapté à ' s') → logprob: -6.37825870513916
    3. '   ' → logprob: -6.50325870513916
    4. ' s' → logprob: -9.87825870513916
    5. '           ' → logprob: -13.37825870513916
    6. ',' → logprob: -13.87825870513916
    7. '     ' → logprob: -14.75325870513916
    8. '    ' → logprob: -14.87825870513916
    9. '
' → logprob: -14.87825870513916
    10. ' ' → logprob: -15.37825870513916

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25210830569267273
    2. '=' → logprob: -1.5021083354949951
    3. ' +=' → logprob: -9.377108573913574
    4. ',' → logprob: -9.377108573913574
    5. '+=' → logprob: -11.752108573913574
    6. ' ' → logprob: -14.127108573913574
    7. '   ' → logprob: -14.627108573913574
    8. '+' → logprob: -14.627108573913574
    9. ' ,' → logprob: -16.252107620239258
    10. '  ' → logprob: -16.627107620239258

Token 165: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.12693366408348083
    2. 'update' → logprob: -2.1269335746765137
    3. ' s' → logprob: -13.376934051513672
    4. '   ' → logprob: -13.501934051513672
    5. '	update' → logprob: -14.251934051513672
    6. 's' → logprob: -14.376934051513672
    7. '  ' → logprob: -14.501934051513672
    8. '(update' → logprob: -15.126934051513672
    9. '    ' → logprob: -15.626934051513672
    10. ' ' → logprob: -15.626934051513672

Token 166: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -9.603335638530552e-05
    2. 'sum' → logprob: -9.750096321105957
    3. 's' → logprob: -10.625096321105957
    4. '_s' → logprob: -11.250096321105957
    5. '(s' → logprob: -15.750096321105957
    6. ' sum' → logprob: -16.12509536743164
    7. '_' → logprob: -17.12509536743164
    8. '_SUM' → logprob: -17.25009536743164
    9. '(sum' → logprob: -17.25009536743164
    10. '_ans' → logprob: -17.50009536743164

Token 167: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00023321842309087515
    2. '(' → logprob: -8.37523365020752
    3. 's' → logprob: -13.00023365020752
    4. ' (' → logprob: -15.25023365020752
    5. '(
' → logprob: -15.62523365020752
    6. '```' → logprob: -19.000232696533203
    7. ',' → logprob: -20.375232696533203
    8. ' s' → logprob: -21.000232696533203
    9. '((' → logprob: -21.250232696533203
    10. '(

' → logprob: -21.500232696533203

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018436823738738894
    2. ' ,' → logprob: -6.876843452453613
    3. ',s' → logprob: -7.626843452453613
    4. '(s' → logprob: -8.251843452453613
    5. 's' → logprob: -9.876843452453613
    6. '(' → logprob: -12.001843452453613
    7. ',
' → logprob: -13.376843452453613
    8. ')' → logprob: -13.876843452453613
    9. ' s' → logprob: -14.001843452453613
    10. '   ' → logprob: -14.751843452453613

Token 169: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.06197698414325714
    2. ' ai' → logprob: -2.811976909637451
    3. '(ai' → logprob: -12.56197738647461
    4. '   ' → logprob: -13.18697738647461
    5. '_ai' → logprob: -13.68697738647461
    6. ')' → logprob: -14.06197738647461
    7. '.ai' → logprob: -14.56197738647461
    8. ' ' → logprob: -14.68697738647461
    9. '  ' → logprob: -15.18697738647461
    10. '-ai' → logprob: -15.81197738647461

Token 170: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20142777264118195
    2. ')
' → logprob: -1.7014278173446655
    3. ')

' → logprob: -12.076427459716797
    4. '   ' → logprob: -12.326427459716797
    5. ')
' → logprob: -12.951427459716797
    6. ')return' → logprob: -13.451427459716797
    7. ' )' → logprob: -14.826427459716797
    8. ' )
' → logprob: -15.951427459716797
    9. 'return' → logprob: -17.701427459716797
    10. ')\
' → logprob: -18.201427459716797

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.043078898685053e-05
    2. ' return' → logprob: -9.625090599060059
    3. '	return' → logprob: -11.250090599060059
    4. 'return' → logprob: -11.750090599060059
    5. '
' → logprob: -13.625090599060059
    6. '    
' → logprob: -14.250090599060059
    7. ',' → logprob: -14.375090599060059
    8. '       ' → logprob: -14.625090599060059
    9. '   ' → logprob: -15.000090599060059
    10. ':return' → logprob: -16.750089645385742

Token 172: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2017863541841507
    2. ' return' → logprob: -1.9517863988876343
    3. 'return' (adapté à ' return') → logprob: -3.2017862796783447
    4. '	return' → logprob: -10.951786041259766
    5. ',' → logprob: -13.951786041259766
    6. '    
' → logprob: -14.201786041259766
    7. '
' → logprob: -14.701786041259766
    8. '       ' → logprob: -15.326786041259766
    9. ' ' → logprob: -15.451786041259766
    10. ':return' → logprob: -15.451786041259766

Token 173: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5304023623466492
    2. 'ans' → logprob: -1.030402421951294
    3. '(ans' → logprob: -2.905402421951294
    4. ' (' → logprob: -10.780402183532715
    5. '	ans' → logprob: -11.530402183532715
    6. '(' → logprob: -12.280402183532715
    7. '   ' → logprob: -12.530402183532715
    8. '_ans' → logprob: -13.655402183532715
    9. ' ' → logprob: -14.280402183532715
    10. '  ' → logprob: -15.655402183532715

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006087943911552429
    2. ' ,' → logprob: -8.000608444213867
    3. ' s' → logprob: -8.625608444213867
    4. 's' → logprob: -10.000608444213867
    5. ',s' → logprob: -10.000608444213867
    6. ',
' → logprob: -13.625608444213867
    7. '<|end|>' → logprob: -13.875608444213867
    8. ' ' → logprob: -15.125608444213867
    9. '‌,' → logprob: -15.250608444213867
    10. '```' → logprob: -15.750608444213867

Token 175: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.25193047523498535
    2. 's' → logprob: -1.5019304752349854
    3. ' ' → logprob: -14.001930236816406
    4. ' ' → logprob: -15.126930236816406
    5. '(s' → logprob: -16.376930236816406
    6. '<|end|>' → logprob: -16.376930236816406
    7. '	s' → logprob: -17.251930236816406
    8. '_s' → logprob: -18.251930236816406
    9. '   ' → logprob: -18.251930236816406
    10. 'space' → logprob: -18.626930236816406

Token 176: '

' (ID: 279)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6641829013824463
    2. 'n' → logprob: -1.2891829013824463
    3. '(' → logprob: -1.6641829013824463
    4. '[n' → logprob: -4.789182662963867
    5. '(
' → logprob: -5.414182662963867
    6. '(len' → logprob: -6.539182662963867
    7. '[' → logprob: -6.789182662963867
    8. ')' → logprob: -7.539182662963867
    9. 'len' → logprob: -7.789182662963867
    10. 'i' → logprob: -7.789182662963867

Token 177: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07240427285432816
    2. '(n' → logprob: -3.322404384613037
    3. '(' → logprob: -4.072404384613037
    4. ')' → logprob: -4.572404384613037
    5. '(
' → logprob: -7.197404384613037
    6. '0' → logprob: -7.322404384613037
    7. ' n' → logprob: -7.447404384613037
    8. 'a' → logprob: -7.572404384613037
    9. '   ' → logprob: -7.572404384613037
    10. 'len' → logprob: -7.822404384613037

Token 178: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.062195226550102234
    2. ' main' → logprob: -3.562195301055908
    3. ' process' → logprob: -4.187195301055908
    4. 'get' → logprob: -4.187195301055908
    5. 'process' → logprob: -7.437195301055908
    6. 'main' → logprob: -7.687195301055908
    7. ' read' → logprob: -8.43719482421875
    8. ' range' → logprob: -9.81219482421875
    9. 'n' → logprob: -9.81219482421875
    10. ' n' → logprob: -10.81219482421875

Token 179: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -2.3199920178740285e-05
    2. '_' → logprob: -11.000022888183594
    3. 'n' → logprob: -12.625022888183594
    4. 'def' → logprob: -13.750022888183594
    5. ' _' → logprob: -14.500022888183594
    6. '_s' → logprob: -15.250022888183594
    7. '_a' → logprob: -15.750022888183594
    8. ' ' → logprob: -16.250022888183594
    9. 's' → logprob: -16.375022888183594
    10. '_list' → logprob: -16.500022888183594

Token 180: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001349518890492618
    2. '(' → logprob: -6.626349449157715
    3. 'n' → logprob: -11.376349449157715
    4. '(
' → logprob: -12.251349449157715
    5. 'def' → logprob: -12.376349449157715
    6. ' (' → logprob: -14.626349449157715
    7. '(s' → logprob: -14.626349449157715
    8. '(lst' → logprob: -14.626349449157715
    9. '(x' → logprob: -14.751349449157715
    10. '(lambda' → logprob: -15.751349449157715

Token 181: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06229659169912338
    2. '):
' → logprob: -2.8122966289520264
    3. ')' → logprob: -8.437296867370605
    4. '(n' → logprob: -9.312296867370605
    5. ' ):' → logprob: -11.187296867370605
    6. ')n' → logprob: -13.187296867370605
    7. 'n' → logprob: -13.312296867370605
    8. '):
' → logprob: -13.937296867370605
    9. '():' → logprob: -14.312296867370605
    10. ' ):
' → logprob: -14.312296867370605

Token 182: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.41164007782936096
    2. '   ' → logprob: -1.6616400480270386
    3. 'return' → logprob: -2.411640167236328
    4. ' n' → logprob: -3.161640167236328
    5. 'n' → logprob: -4.161640167236328
    6. '    ' → logprob: -13.536640167236328
    7. ' ' → logprob: -14.036640167236328
    8. '  ' → logprob: -14.411640167236328
    9. '	return' → logprob: -15.161640167236328
    10. '```' → logprob: -15.411640167236328

Token 183: ' return' (ID: 622)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10315519571304321
    2. ' n' → logprob: -2.3531551361083984
    3. 'return' (adapté à ' return') → logprob: -6.353155136108398
    4. ' return' → logprob: -6.728155136108398
    5. '   ' → logprob: -12.103155136108398
    6. 'int' → logprob: -14.228155136108398
    7. '	n' → logprob: -16.9781551361084
    8. ' int' → logprob: -17.3531551361084
    9. ' ' → logprob: -17.7281551361084
    10. '    ' → logprob: -17.9781551361084

Token 184: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07892008125782013
    2. ' n' → logprob: -2.5789201259613037
    3. 'int' → logprob: -10.453920364379883
    4. ' int' → logprob: -13.578920364379883
    5. ' ' → logprob: -16.578920364379883
    6. '	n' → logprob: -16.703920364379883
    7. '   ' → logprob: -17.078920364379883
    8. ' ' → logprob: -18.703920364379883
    9. 'len' → logprob: -18.703920364379883
    10. '_n' → logprob: -18.953920364379883

Token 185: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' output' (ID: 4733)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10112343728542328
    2. 'main' → logprob: -2.351123332977295
    3. ' process' → logprob: -7.476123332977295
    4. 'process' → logprob: -8.601123809814453
    5. ' solve' → logprob: -9.476123809814453
    6. 'solve' → logprob: -10.851123809814453
    7. ' run' → logprob: -10.851123809814453
    8. ' read' → logprob: -11.601123809814453
    9. 'run' → logprob: -11.851123809814453
    10. 'read' → logprob: -11.851123809814453

Token 188: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015093084424734116
    2. '()' → logprob: -5.390092849731445
    3. '(ans' → logprob: -5.515092849731445
    4. '_' → logprob: -5.765092849731445
    5. '(n' → logprob: -6.640092849731445
    6. 'def' → logprob: -7.390092849731445
    7. '(s' → logprob: -8.265092849731445
    8. '("("' → logprob: -9.015092849731445
    9. '_list' → logprob: -9.390092849731445
    10. 's' → logprob: -9.390092849731445

Token 189: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25036707520484924
    2. '(ans' → logprob: -1.8753670454025269
    3. '():' → logprob: -3.0003671646118164
    4. '(n' → logprob: -4.625367164611816
    5. '()' → logprob: -5.875367164611816
    6. '(output' → logprob: -6.375367164611816
    7. '(result' → logprob: -6.625367164611816
    8. '(def' → logprob: -7.750367164611816
    9. ' (' → logprob: -7.875367164611816
    10. '(answer' → logprob: -8.000367164611816

Token 190: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6582193970680237
    2. '):
' → logprob: -1.158219337463379
    3. ')' → logprob: -1.783219337463379
    4. ')
' → logprob: -10.158219337463379
    5. '):

' → logprob: -10.783219337463379
    6. '):
' → logprob: -11.283219337463379
    7. ',' → logprob: -12.033219337463379
    8. ' )' → logprob: -12.658219337463379
    9. ' ):' → logprob: -13.033219337463379
    10. ' ):
' → logprob: -14.533219337463379

Token 191: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16139523684978485
    2. 's' → logprob: -1.9113951921463013
    3. ')' → logprob: -7.161395072937012
    4. 'x' → logprob: -9.286395072937012
    5. ' x' → logprob: -9.536395072937012
    6. ' end' → logprob: -10.036395072937012
    7. ' ' → logprob: -10.411395072937012
    8. '   ' → logprob: -10.536395072937012
    9. ' )' → logprob: -10.536395072937012
    10. 'end' → logprob: -10.536395072937012

Token 192: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018200045451521873
    2. '):
' → logprob: -4.018199920654297
    3. ')' → logprob: -10.018199920654297
    4. '):
' → logprob: -12.393199920654297
    5. ':' → logprob: -14.143199920654297
    6. ' ):' → logprob: -15.643199920654297
    7. '):

' → logprob: -15.643199920654297
    8. '   ' → logprob: -15.768199920654297
    9. ')：' → logprob: -16.643199920654297
    10. '）：' → logprob: -17.268199920654297

Token 193: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6816980838775635
    2. 'x' → logprob: -0.9316980838775635
    3. 'sep' → logprob: -3.3066980838775635
    4. ' sep' → logprob: -3.5566980838775635
    5. ')' → logprob: -4.056697845458984
    6. ' end' → logprob: -6.056697845458984
    7. '")' → logprob: -6.056697845458984
    8. '):' → logprob: -6.181697845458984
    9. 'end' → logprob: -6.306697845458984
    10. 'n' → logprob: -6.306697845458984

Token 194: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03805721178650856
    2. '):
' → logprob: -3.288057327270508
    3. '):
' → logprob: -11.413057327270508
    4. ')' → logprob: -12.538057327270508
    5. '):

' → logprob: -14.913057327270508
    6. ':' → logprob: -15.038057327270508
    7. '   ' → logprob: -15.413057327270508
    8. ' ):' → logprob: -15.663057327270508
    9. ',' → logprob: -16.413057327270508
    10. '():' → logprob: -17.163057327270508

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002865258604288101
    2. ' if' → logprob: -6.002865314483643
    3. ' print' → logprob: -8.252864837646484
    4. 'if' → logprob: -9.627864837646484
    5. 'print' → logprob: -10.127864837646484
    6. '```' → logprob: -11.002864837646484
    7. 'def' → logprob: -12.752864837646484
    8. ' for' → logprob: -13.752864837646484
    9. ' return' → logprob: -14.752864837646484
    10. '   ' → logprob: -15.377864837646484

Token 196: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5184835195541382
    2. 'if' (adapté à ' if') → logprob: -1.1434835195541382
    3. 'print' → logprob: -3.2684836387634277
    4. ' print' → logprob: -3.2684836387634277
    5. '   ' → logprob: -4.643483638763428
    6. 'for' → logprob: -10.39348316192627
    7. ' for' → logprob: -10.39348316192627
    8. '```' → logprob: -10.64348316192627
    9. ' pass' → logprob: -11.51848316192627
    10. 'def' → logprob: -11.64348316192627

Token 197: ' is' (ID: 382)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.265328973531723
    2. 'ans' → logprob: -1.8903290033340454
    3. ' s' → logprob: -3.390328884124756
    4. ' can' → logprob: -3.515328884124756
    5. 's' → logprob: -4.640328884124756
    6. 'can' → logprob: -4.890328884124756
    7. '(ans' → logprob: -7.015328884124756
    8. '   ' → logprob: -9.140329360961914
    9. '	ans' → logprob: -9.640329360961914
    10. ' not' → logprob: -9.765329360961914

Token 198: '_sum' (ID: 29859)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6541357636451721
    2. 's' → logprob: -0.9041357636451721
    3. ' ans' → logprob: -4.154135704040527
    4. '_s' → logprob: -4.529135704040527
    5. '_ans' → logprob: -4.654135704040527
    6. 'ans' → logprob: -5.154135704040527
    7. '_' → logprob: -5.154135704040527
    8. 'x' → logprob: -5.404135704040527
    9. 'can' → logprob: -5.529135704040527
    10. '_add' → logprob: -5.904135704040527

Token 199: '_less' (ID: 154196)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5618603825569153
    2. '<=' → logprob: -1.9368603229522705
    3. '(s' → logprob: -2.4368603229522705
    4. ' +' → logprob: -2.8118603229522705
    5. '+' → logprob: -2.9368603229522705
    6. '_' → logprob: -3.3118603229522705
    7. ' s' → logprob: -3.8118603229522705
    8. ' ' → logprob: -4.68686056137085
    9. 's' → logprob: -5.81186056137085
    10. '_valid' → logprob: -6.18686056137085

Token 200: '_than' (ID: 134758)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.18116387724876404
    2. '_than' → logprob: -1.9311639070510864
    3. '_equal' → logprob: -4.056163787841797
    4. '(ans' → logprob: -6.556163787841797
    5. '(' → logprob: -7.056163787841797
    6. '_or' → logprob: -7.681163787841797
    7. '_' → logprob: -8.056163787841797
    8. 'er' → logprob: -9.181163787841797
    9. 'than' → logprob: -10.181163787841797
    10. '_s' → logprob: -10.431163787841797

Token 201: '_x' (ID: 7054)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004774837754666805
    2. '(' → logprob: -6.004775047302246
    3. ' s' → logprob: -6.879775047302246
    4. 's' → logprob: -7.629775047302246
    5. 'x' → logprob: -7.754775047302246
    6. ' (' → logprob: -8.504775047302246
    7. '(x' → logprob: -10.004775047302246
    8. '_' → logprob: -10.379775047302246
    9. '_s' → logprob: -11.004775047302246
    10. ' x' → logprob: -11.629775047302246

Token 202: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.005600361153483391
    2. '(' → logprob: -6.005600452423096
    3. '(ans' → logprob: -6.005600452423096
    4. ' (' → logprob: -7.380600452423096
    5. '((' → logprob: -11.005599975585938
    6. 's' → logprob: -12.005599975585938
    7. '(
' → logprob: -13.255599975585938
    8. '(sum' → logprob: -13.380599975585938
    9. ',' → logprob: -14.380599975585938
    10. '   ' → logprob: -14.630599975585938

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014613194391131401
    2. ' ,' → logprob: -4.264613151550293
    3. ',x' → logprob: -8.264613151550293
    4. ',
' → logprob: -9.764613151550293
    5. ',s' → logprob: -10.514613151550293
    6. '+' → logprob: -11.389613151550293
    7. '(x' → logprob: -11.639613151550293
    8. '   ' → logprob: -11.639613151550293
    9. ')' → logprob: -11.639613151550293
    10. ' +' → logprob: -11.639613151550293

Token 204: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1269514262676239
    2. 'x' → logprob: -2.1269514560699463
    3. ',' → logprob: -12.251951217651367
    4. '(x' → logprob: -12.626951217651367
    5. 's' → logprob: -12.876951217651367
    6. ')' → logprob: -12.876951217651367
    7. ' ' → logprob: -13.376951217651367
    8. '	x' → logprob: -13.626951217651367
    9. '=x' → logprob: -13.626951217651367
    10. ',x' → logprob: -13.876951217651367

Token 205: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02337254397571087
    2. '):
' → logprob: -3.7733726501464844
    3. ')' → logprob: -9.273372650146484
    4. '   ' → logprob: -11.148372650146484
    5. ':' → logprob: -12.148372650146484
    6. ' ):' → logprob: -12.273372650146484
    7. '):
' → logprob: -12.773372650146484
    8. ',' → logprob: -13.398372650146484
    9. '):

' → logprob: -13.523372650146484
    10. '():' → logprob: -14.023372650146484

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.353843629360199
    2. ':' → logprob: -1.3538436889648438
    3. '   ' → logprob: -3.8538436889648438
    4. ':
' → logprob: -4.603843688964844
    5. '():' → logprob: -4.978843688964844
    6. '():
' → logprob: -7.853843688964844
    7. ' :' → logprob: -8.228843688964844
    8. '(' → logprob: -8.353843688964844
    9. ',' → logprob: -8.853843688964844
    10. '):' → logprob: -8.978843688964844

Token 207: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16100744903087616
    2. ' print' → logprob: -2.1610074043273926
    3. '   ' → logprob: -3.4110074043273926
    4. '       ' → logprob: -8.16100788116455
    5. 'return' → logprob: -9.03600788116455
    6. ' return' → logprob: -10.66100788116455
    7. 'def' → logprob: -11.41100788116455
    8. '    ' → logprob: -11.78600788116455
    9. '  ' → logprob: -12.03600788116455
    10. '```' → logprob: -12.03600788116455

Token 208: '_result' (ID: 11623)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.12553106248378754
    2. '("' → logprob: -2.375530958175659
    3. '(' → logprob: -3.875530958175659
    4. '('' → logprob: -6.000531196594238
    5. 'ans' → logprob: -7.625531196594238
    6. '(-' → logprob: -8.000531196594238
    7. '(f' → logprob: -8.250531196594238
    8. '()' → logprob: -8.375531196594238
    9. '("?' → logprob: -9.125531196594238
    10. '(x' → logprob: -10.000531196594238

Token 209: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00542383873835206
    2. '(' → logprob: -5.3804240226745605
    3. ' (' → logprob: -7.2554240226745605
    4. '(f' → logprob: -10.255423545837402
    5. '((' → logprob: -11.755423545837402
    6. '("' → logprob: -12.005423545837402
    7. '(s' → logprob: -12.130423545837402
    8. '('' → logprob: -12.130423545837402
    9. '(
' → logprob: -12.255423545837402
    10. '   ' → logprob: -12.380423545837402

Token 210: '_minus' (ID: 101055)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.348796010017395
    2. ',' → logprob: -1.223796010017395
    3. ',)' → logprob: -9.098795890808105
    4. ' )' → logprob: -9.348795890808105
    5. ')
' → logprob: -9.473795890808105
    6. ' ,' → logprob: -10.598795890808105
    7. '   ' → logprob: -10.973795890808105
    8. ',
' → logprob: -12.348795890808105
    9. ')

' → logprob: -12.473795890808105
    10. ' ' → logprob: -12.723795890808105

Token 211: '_one' (ID: 26979)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002482434967532754
    2. ' ' → logprob: -6.6274824142456055
    3. 'ans' → logprob: -7.8774824142456055
    4. 't' → logprob: -7.8774824142456055
    5. 's' → logprob: -9.002482414245605
    6. '_' → logprob: -9.252482414245605
    7. '   ' → logprob: -10.127482414245605
    8. ',' → logprob: -10.502482414245605
    9. ' ans' → logprob: -10.752482414245605
    10. '_one' → logprob: -11.127482414245605

Token 212: '(ans' (ID: 70054)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05040057376027107
    2. ')' → logprob: -3.300400495529175
    3. '(ans' → logprob: -4.425400733947754
    4. ' ,' → logprob: -8.925400733947754
    5. 'ans' → logprob: -9.800400733947754
    6. '(' → logprob: -10.175400733947754
    7. '),' → logprob: -10.925400733947754
    8. ' ans' → logprob: -11.175400733947754
    9. '   ' → logprob: -11.300400733947754
    10. ')
' → logprob: -11.550400733947754

Token 213: '))
' (ID: 2210)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6632571816444397
    2. ')' → logprob: -0.7882571816444397
    3. '))' → logprob: -3.913257122039795
    4. '),' → logprob: -4.663257122039795
    5. '(),' → logprob: -8.913257598876953
    6. '   ' → logprob: -9.038257598876953
    7. ' ,' → logprob: -9.163257598876953
    8. '-' → logprob: -9.288257598876953
    9. ')
' → logprob: -9.538257598876953
    10. ',)' → logprob: -9.788257598876953

Token 214: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5421589612960815
    2. 'def' → logprob: -1.0421589612960815
    3. '   ' → logprob: -3.167159080505371
    4. ')
' → logprob: -4.667159080505371
    5. '    
' → logprob: -5.167159080505371
    6. ')' → logprob: -5.917159080505371
    7. '

' → logprob: -6.542159080505371
    8. '(
' → logprob: -7.292159080505371
    9. '  
' → logprob: -7.417159080505371
    10. '()
' → logprob: -7.542159080505371

Token 215: ' else' (ID: 1203)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15807904303073883
    2. '
' → logprob: -2.533079147338867
    3. 'else' (adapté à ' else') → logprob: -3.408079147338867
    4. '   ' → logprob: -3.783079147338867
    5. '    
' → logprob: -5.408079147338867
    6. '

' → logprob: -6.158079147338867
    7. ' else' → logprob: -6.533079147338867
    8. '<|end|>' → logprob: -6.908079147338867
    9. 'elif' → logprob: -7.783079147338867
    10. '  
' → logprob: -7.908079147338867

Token 216: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5765340924263
    2. ':
' → logprob: -0.8265340924263
    3. '   ' → logprob: -8.076534271240234
    4. '       ' → logprob: -8.326534271240234
    5. ' :
' → logprob: -10.951534271240234
    6. '    ' → logprob: -12.451534271240234
    7. ',' → logprob: -12.451534271240234
    8. ':
' → logprob: -12.576534271240234
    9. ':

' → logprob: -12.826534271240234
    10. ' :' → logprob: -12.826534271240234

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010558303445577621
    2. ' print' → logprob: -5.385558128356934
    3. '   ' → logprob: -5.635558128356934
    4. 'print' → logprob: -6.135558128356934
    5. '    ' → logprob: -8.760558128356934
    6. '     ' → logprob: -11.260558128356934
    7. '      ' → logprob: -12.260558128356934
    8. ':' → logprob: -12.510558128356934
    9. '(print' → logprob: -13.635558128356934
    10. '
' → logprob: -13.760558128356934

Token 218: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10027060657739639
    2. ' print' → logprob: -2.3502705097198486
    3. '       ' → logprob: -10.10027027130127
    4. '   ' → logprob: -11.22527027130127
    5. '           ' → logprob: -12.85027027130127
    6. ' ' → logprob: -13.47527027130127
    7. '        ' → logprob: -13.85027027130127
    8. '    ' → logprob: -13.97527027130127
    9. '	print' → logprob: -14.22527027130127
    10. ' ' → logprob: -14.85027027130127

Token 219: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.017390267923474312
    2. '(' → logprob: -4.142390251159668
    3. '(ans' → logprob: -7.267390251159668
    4. '()' → logprob: -8.017390251159668
    5. '(result' → logprob: -8.892390251159668
    6. ' (' → logprob: -9.892390251159668
    7. '("' → logprob: -10.017390251159668
    8. 'result' → logprob: -10.892390251159668
    9. 'Result' → logprob: -11.017390251159668
    10. '(s' → logprob: -11.642390251159668

Token 220: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -9.13388703338569e-06
    2. 'ans' → logprob: -12.250009536743164
    3. '(' → logprob: -12.625009536743164
    4. '(answer' → logprob: -14.875009536743164
    5. '(an' → logprob: -15.250009536743164
    6. '(s' → logprob: -15.875009536743164
    7. ' (' → logprob: -16.125009536743164
    8. ' ans' → logprob: -16.750009536743164
    9. '(abs' → logprob: -17.250009536743164
    10. '((' → logprob: -17.750009536743164

Token 221: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035761918406933546
    2. '-' → logprob: -5.753576278686523
    3. ' -' → logprob: -8.003576278686523
    4. ' )' → logprob: -10.628576278686523
    5. ')
' → logprob: -11.378576278686523
    6. '-)' → logprob: -11.878576278686523
    7. '   ' → logprob: -12.003576278686523
    8. '<|end|>' → logprob: -12.628576278686523
    9. '+' → logprob: -12.878576278686523
    10. '))' → logprob: -13.128576278686523

Token 222: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09083348512649536
    2. '
' → logprob: -2.4658334255218506
    3. ' def' → logprob: -7.59083366394043
    4. '

' → logprob: -7.59083366394043
    5. '(
' → logprob: -8.21583366394043
    6. '(' → logprob: -8.46583366394043
    7. '<|end|>' → logprob: -8.96583366394043
    8. '    
' → logprob: -9.34083366394043
    9. ' 
' → logprob: -10.21583366394043
    10. '  
' → logprob: -10.34083366394043

Token 223: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.06202269345521927
    2. ' is' → logprob: -2.8120226860046387
    3. 'def' → logprob: -9.937023162841797
    4. ' def' → logprob: -13.062023162841797
    5. 'output' → logprob: -14.062023162841797
    6. 'print' → logprob: -14.312023162841797
    7. 'input' → logprob: -14.437023162841797
    8. '_is' → logprob: -14.812023162841797
    9. 'can' → logprob: -15.312023162841797
    10. ' can' → logprob: -15.437023162841797

Token 224: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.2664456789934775e-06
    2. 'sum' → logprob: -14.000000953674316
    3. '_' → logprob: -15.500000953674316
    4. '_s' → logprob: -15.750000953674316
    5. '_less' → logprob: -17.750001907348633
    6. ' sum' → logprob: -18.625001907348633
    7. 's' → logprob: -18.750001907348633
    8. ' _' → logprob: -19.875001907348633
    9. 'def' → logprob: -20.375001907348633
    10. '_sub' → logprob: -20.500001907348633

Token 225: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -4.320199877838604e-07
    2. 'less' → logprob: -14.875
    3. ' less' → logprob: -17.0
    4. '(s' → logprob: -17.875
    5. '_s' → logprob: -19.0
    6. '_' → logprob: -19.125
    7. '_le' → logprob: -19.75
    8. '_l' → logprob: -20.125
    9. 'Less' → logprob: -20.125
    10. '_lower' → logprob: -20.75

Token 226: '_than' (ID: 134758)
  Prédit: '_than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_than' → logprob: -3.531315314830863e-06
    2. '_less' → logprob: -12.625003814697266
    3. '_THAN' → logprob: -16.875003814697266
    4. '_then' → logprob: -17.375003814697266
    5. '_equal' → logprob: -17.375003814697266
    6. '_that' → logprob: -17.750003814697266
    7. 'than' → logprob: -18.375003814697266
    8. '_or' → logprob: -18.875003814697266
    9. '_to' → logprob: -20.250003814697266
    10. '```' → logprob: -20.625003814697266

Token 227: '_x' (ID: 7054)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.10500034689903259
    2. '_x' → logprob: -2.3550002574920654
    3. '_' → logprob: -5.4800004959106445
    4. '_s' → logprob: -8.105000495910645
    5. '(x' → logprob: -8.980000495910645
    6. '_sum' → logprob: -9.730000495910645
    7. '(' → logprob: -9.730000495910645
    8. ' (' → logprob: -10.605000495910645
    9. '_(' → logprob: -10.980000495910645
    10. '```' → logprob: -11.980000495910645

Token 228: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0003872974484693259
    2. '(' → logprob: -7.875387191772461
    3. ' (' → logprob: -12.000387191772461
    4. 's' → logprob: -14.000387191772461
    5. '(
' → logprob: -17.25038719177246
    6. '(a' → logprob: -17.62538719177246
    7. '(x' → logprob: -17.62538719177246
    8. 'def' → logprob: -17.75038719177246
    9. '(S' → logprob: -18.12538719177246
    10. ',' → logprob: -19.00038719177246

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019495772721711546
    2. ' ,' → logprob: -8.750194549560547
    3. ',s' → logprob: -10.375194549560547
    4. 's' → logprob: -12.875194549560547
    5. ',
' → logprob: -13.625194549560547
    6. ' s' → logprob: -14.500194549560547
    7. ',x' → logprob: -14.750194549560547
    8. ',

' → logprob: -15.000194549560547
    9. ')' → logprob: -16.375194549560547
    10. '‌,' → logprob: -16.625194549560547

Token 230: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07890543341636658
    2. ' x' → logprob: -2.5789053440093994
    3. 's' → logprob: -11.45390510559082
    4. ' s' → logprob: -13.45390510559082
    5. '   ' → logprob: -14.20390510559082
    6. ',' → logprob: -14.57890510559082
    7. ' ' → logprob: -14.70390510559082
    8. ')' → logprob: -14.70390510559082
    9. '	x' → logprob: -15.07890510559082
    10. ')x' → logprob: -15.20390510559082

Token 231: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06219611316919327
    2. '):
' → logprob: -2.8121960163116455
    3. ')' → logprob: -8.562195777893066
    4. '):

' → logprob: -11.187195777893066
    5. '   ' → logprob: -12.062195777893066
    6. '):
' → logprob: -12.187195777893066
    7. ' ):' → logprob: -12.187195777893066
    8. ':' → logprob: -12.687195777893066
    9. ',' → logprob: -13.937195777893066
    10. '**' → logprob: -14.687195777893066

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1352424919605255
    2. ' return' → logprob: -2.135242462158203
    3. 'return' → logprob: -4.885242462158203
    4. ' s' → logprob: -7.385242462158203
    5. '    ' → logprob: -9.635242462158203
    6. 's' → logprob: -10.885242462158203
    7. '	return' → logprob: -11.385242462158203
    8. '  ' → logprob: -12.260242462158203
    9. ' ' → logprob: -14.010242462158203
    10. '(s' → logprob: -14.385242462158203

Token 233: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3874354362487793
    2. ' return' → logprob: -1.1374354362487793
    3. 's' → logprob: -7.637435436248779
    4. ' s' → logprob: -9.512435913085938
    5. '   ' → logprob: -11.762435913085938
    6. '	return' → logprob: -15.387435913085938
    7. '(s' → logprob: -16.637435913085938
    8. ' ' → logprob: -17.012435913085938
    9. 'Return' → logprob: -17.387435913085938
    10. '<' → logprob: -17.637435913085938

Token 234: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07889022678136826
    2. 's' → logprob: -2.578890323638916
    3. ' ' → logprob: -14.953889846801758
    4. '   ' → logprob: -16.203889846801758
    5. '	s' → logprob: -17.953889846801758
    6. ' ' → logprob: -18.078889846801758
    7. '(s' → logprob: -18.203889846801758
    8. '_s' → logprob: -18.828889846801758
    9. '<s' → logprob: -19.453889846801758
    10. '  ' → logprob: -20.078889846801758

Token 235: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04867037013173103
    2. '<' → logprob: -3.0486702919006348
    3. '<x' → logprob: -9.548670768737793
    4. ' ' → logprob: -12.048670768737793
    5. ' <=' → logprob: -12.673670768737793
    6. ' >' → logprob: -14.798670768737793
    7. ' x' → logprob: -14.798670768737793
    8. '<=' → logprob: -14.923670768737793
    9. ' ' → logprob: -15.048670768737793
    10. ' >=' → logprob: -15.173670768737793

Token 236: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2014172375202179
    2. 'x' → logprob: -1.7014172077178955
    3. ' ' → logprob: -13.326416969299316
    4. ' ' → logprob: -14.201416969299316
    5. '	x' → logprob: -14.701416969299316
    6. ',' → logprob: -15.451416969299316
    7. '_x' → logprob: -15.701416969299316
    8. '0' → logprob: -16.076417922973633
    9. '```' → logprob: -16.076417922973633
    10. '=x' → logprob: -16.576417922973633

Token 237: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01849604770541191
    2. '
' → logprob: -4.643496036529541
    3. '<|end|>' → logprob: -5.268496036529541
    4. '

' → logprob: -6.018496036529541
    5. ' def' → logprob: -7.893496036529541
    6. '```' → logprob: -8.0184965133667
    7. '    
' → logprob: -8.8934965133667
    8. '<|end|>' → logprob: -9.5184965133667
    9. '  
' → logprob: -9.7684965133667
    10. '   ' → logprob: -9.8934965133667

Token 238: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.750000953674316
    3. ' def' → logprob: -15.500000953674316
    4. '<|end|>' → logprob: -17.875
    5. '
' → logprob: -18.25
    6. 'ndef' → logprob: -19.25
    7. 'ans' → logprob: -19.625
    8. '	def' → logprob: -19.75
    9. '#' → logprob: -20.125
    10. '``' → logprob: -20.375

Token 239: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0009025269537232816
    2. 'print' → logprob: -7.5009026527404785
    3. ' ans' → logprob: -8.62590217590332
    4. 'def' → logprob: -9.12590217590332
    5. 'main' → logprob: -10.50090217590332
    6. '(ans' → logprob: -12.12590217590332
    7. 'output' → logprob: -12.37590217590332
    8. 'update' → logprob: -12.87590217590332
    9. '	ans' → logprob: -13.00090217590332
    10. 'get' → logprob: -13.12590217590332

Token 240: '_minus' (ID: 101055)
  Prédit: '_minus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_minus' → logprob: -0.0004228091274853796
    2. '_' → logprob: -7.875422954559326
    3. '_MINUS' → logprob: -11.000422477722168
    4. '_min' → logprob: -11.875422477722168
    5. '_missing' → logprob: -13.000422477722168
    6. '_-' → logprob: -13.000422477722168
    7. '_m' → logprob: -13.000422477722168
    8. '_less' → logprob: -13.125422477722168
    9. '_plus' → logprob: -13.375422477722168
    10. ' _' → logprob: -13.625422477722168

Token 241: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -2.570319702499546e-05
    2. '_' → logprob: -10.875025749206543
    3. '_minus' → logprob: -12.250025749206543
    4. '_two' → logprob: -13.750025749206543
    5. '_ONE' → logprob: -15.250025749206543
    6. ' _' → logprob: -15.375025749206543
    7. '_three' → logprob: -17.250024795532227
    8. '_none' → logprob: -17.375024795532227
    9. '_plus' → logprob: -17.375024795532227
    10. '_once' → logprob: -17.625024795532227

Token 242: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.03819262236356735
    2. '(' → logprob: -3.2881925106048584
    3. ' (' → logprob: -8.913192749023438
    4. '(answer' → logprob: -11.663192749023438
    5. '(
' → logprob: -12.913192749023438
    6. '(a' → logprob: -13.538192749023438
    7. '(an' → logprob: -13.663192749023438
    8. '(def' → logprob: -15.038192749023438
    9. '(arg' → logprob: -15.163192749023438
    10. '(n' → logprob: -15.413192749023438

Token 243: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2018626183271408
    2. '):
' → logprob: -1.7018625736236572
    3. ')' → logprob: -7.826862812042236
    4. '():
' → logprob: -10.576862335205078
    5. '():' → logprob: -11.451862335205078
    6. '):
' → logprob: -11.951862335205078
    7. '):

' → logprob: -12.701862335205078
    8. '   ' → logprob: -13.201862335205078
    9. ' ):' → logprob: -13.451862335205078
    10. '()):
' → logprob: -15.076862335205078

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.274250328540802
    2. ' return' → logprob: -1.5242502689361572
    3. 'return' → logprob: -4.524250507354736
    4. ' ans' → logprob: -4.524250507354736
    5. 'ans' → logprob: -7.899250507354736
    6. '(ans' → logprob: -12.274250030517578
    7. 'def' → logprob: -12.649250030517578
    8. '	ans' → logprob: -13.024250030517578
    9. '	return' → logprob: -13.149250030517578
    10. '    ' → logprob: -13.899250030517578

Token 245: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0028638429939746857
    2. ' return' → logprob: -6.002863883972168
    3. 'ans' → logprob: -7.877863883972168
    4. '   ' → logprob: -12.002863883972168
    5. ' ans' → logprob: -13.127863883972168
    6. 'max' → logprob: -14.377863883972168
    7. 'if' → logprob: -16.25286293029785
    8. 'def' → logprob: -16.62786293029785
    9. '(ans' → logprob: -17.00286293029785
    10. '```' → logprob: -17.00286293029785

Token 246: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.12696118652820587
    2. 'ans' → logprob: -2.1269612312316895
    3. '(ans' → logprob: -11.126960754394531
    4. ' max' → logprob: -11.376960754394531
    5. '	ans' → logprob: -12.501960754394531
    6. 'max' → logprob: -12.751960754394531
    7. '_ans' → logprob: -15.626960754394531
    8. '0' → logprob: -17.00196075439453
    9. ' ' → logprob: -17.37696075439453
    10. '   ' → logprob: -17.37696075439453

Token 247: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029754074290394783
    2. '-' → logprob: -3.529754161834717
    3. ' ' → logprob: -12.904753684997559
    4. ' ' → logprob: -14.404753684997559
    5. '   ' → logprob: -15.404753684997559
    6. 'def' → logprob: -16.279754638671875
    7. ' -
' → logprob: -16.279754638671875
    8. '```' → logprob: -17.279754638671875
    9. ' –' → logprob: -17.529754638671875
    10. ' if' → logprob: -17.654754638671875

Token 248: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005234356038272381
    2. ' ' → logprob: -5.255234241485596
    3. '   ' → logprob: -14.505234718322754
    4. '```' → logprob: -17.505233764648438
    5. '<|end|>' → logprob: -18.130233764648438
    6. 'def' → logprob: -18.255233764648438
    7. ' one' → logprob: -18.255233764648438
    8. '0' → logprob: -18.880233764648438
    9. ' ' → logprob: -18.880233764648438
    10. '[' → logprob: -19.380233764648438

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.0000057220459
    4. '```' → logprob: -18.2500057220459
    5. 'def' → logprob: -19.5000057220459
    6. '
' → logprob: -20.7500057220459
    7. '<|end|>' → logprob: -20.8750057220459
    8. '  ' → logprob: -21.3750057220459
    9. '[' → logprob: -21.5000057220459
    10. 'one' → logprob: -21.7500057220459

Token 250: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.032467473298311234
    2. '<|end|>' → logprob: -4.157467365264893
    3. 'n' → logprob: -4.782467365264893
    4. 'a' → logprob: -5.907467365264893
    5. '#' → logprob: -5.907467365264893
    6. 'read' → logprob: -6.907467365264893
    7. 'print' → logprob: -7.407467365264893
    8. 'if' → logprob: -8.78246784210205
    9. 'for' → logprob: -9.03246784210205
    10. 'input' → logprob: -9.28246784210205

Token 252: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.35958606004714966
    2. 'read' → logprob: -1.4845860004425049
    3. 'main' → logprob: -2.859586000442505
    4. 'output' → logprob: -4.484586238861084
    5. ' read' → logprob: -6.234586238861084
    6. 'def' → logprob: -6.609586238861084
    7. 'input' → logprob: -6.984586238861084
    8. 'process' → logprob: -7.234586238861084
    9. ' print' → logprob: -7.359586238861084
    10. ' main' → logprob: -7.609586238861084

Token 253: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.39464080333709717
    2. '(' → logprob: -1.2696408033370972
    3. '_' → logprob: -3.1446409225463867
    4. '(_' → logprob: -7.894640922546387
    5. '("_' → logprob: -8.019640922546387
    6. '("("' → logprob: -8.144640922546387
    7. '('_' → logprob: -8.519640922546387
    8. '_(' → logprob: -8.769640922546387
    9. '('' → logprob: -9.019640922546387
    10. '_results' → logprob: -9.519640922546387

Token 254: '(res' (ID: 8331)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.2019283026456833
    2. '(' → logprob: -1.7019282579421997
    3. '(print' → logprob: -8.45192813873291
    4. '(answer' → logprob: -8.95192813873291
    5. ' (' → logprob: -9.07692813873291
    6. '(result' → logprob: -10.32692813873291
    7. '(`' → logprob: -12.70192813873291
    8. '(output' → logprob: -12.82692813873291
    9. '("("' → logprob: -12.82692813873291
    10. '()' → logprob: -13.20192813873291

Token 255: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30564242601394653
    2. '):
' → logprob: -2.0556423664093018
    3. '(res' → logprob: -2.4306423664093018
    4. ')' → logprob: -3.0556423664093018
    5. '(' → logprob: -8.805642127990723
    6. 'res' → logprob: -10.180642127990723
    7. '):

' → logprob: -10.805642127990723
    8. '):
' → logprob: -11.055642127990723
    9. ')
' → logprob: -11.805642127990723
    10. ',' → logprob: -11.805642127990723

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3303515315055847
    2. ' print' → logprob: -1.3303515911102295
    3. 'print' → logprob: -4.08035135269165
    4. '```' → logprob: -10.080351829528809
    5. '	print' → logprob: -14.580351829528809
    6. '(print' → logprob: -15.205351829528809
    7. '    
' → logprob: -15.955351829528809
    8. '   ' → logprob: -15.955351829528809
    9. '
' → logprob: -16.580350875854492
    10. '.print' → logprob: -16.580350875854492

Token 257: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.029807770624756813
    2. ' print' → logprob: -3.5298078060150146
    3. '   ' → logprob: -9.779808044433594
    4. '```' → logprob: -14.154808044433594
    5. 'pr' → logprob: -17.654808044433594
    6. 'prin' → logprob: -18.529808044433594
    7. '	print' → logprob: -18.904808044433594
    8. '(print' → logprob: -20.029808044433594
    9. '    ' → logprob: -20.654808044433594
    10. '.print' → logprob: -20.904808044433594

Token 258: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0007101670489646494
    2. '(' → logprob: -7.2507100105285645
    3. 'res' → logprob: -15.750710487365723
    4. '()' → logprob: -16.875709533691406
    5. ' res' → logprob: -17.250709533691406
    6. '(
' → logprob: -18.000709533691406
    7. '(result' → logprob: -18.375709533691406
    8. '(re' → logprob: -18.500709533691406
    9. ' (' → logprob: -19.250709533691406
    10. '(results' → logprob: -19.375709533691406

Token 259: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ')
' → logprob: -17.75
    3. ' )' → logprob: -18.25
    4. ')`' → logprob: -19.75
    5. '())' → logprob: -20.125
    6. '()' → logprob: -20.5
    7. '))' → logprob: -20.5
    8. ')}' → logprob: -21.25
    9. '),' → logprob: -21.375
    10. '')' → logprob: -21.625

Token 260: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03259648382663727
    2. 'n' → logprob: -4.157596588134766
    3. '#' → logprob: -5.032596588134766
    4. '<|end|>' → logprob: -5.157596588134766
    5. 'if' → logprob: -5.782596588134766
    6. '```' → logprob: -7.782596588134766
    7. 'a' → logprob: -8.407596588134766
    8. 'x' → logprob: -9.157596588134766
    9. 'for' → logprob: -9.282596588134766
    10. 'print' → logprob: -10.282596588134766

Token 261: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.20142367482185364
    2. ' main' → logprob: -1.7014236450195312
    3. 'process' → logprob: -12.451423645019531
    4. '__' → logprob: -12.576423645019531
    5. 'def' → logprob: -13.451423645019531
    6. ' process' → logprob: -14.576423645019531
    7. 'read' → logprob: -15.076423645019531
    8. '_main' → logprob: -15.326423645019531
    9. ' __' → logprob: -15.701423645019531
    10. '	main' → logprob: -16.07642364501953

Token 262: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.630610641877865e-06
    2. '():
' → logprob: -12.125006675720215
    3. ' ():' → logprob: -13.875006675720215
    4. '()' → logprob: -15.625006675720215
    5. '(' → logprob: -16.7500057220459
    6. '():
' → logprob: -17.8750057220459
    7. '():

' → logprob: -19.0000057220459
    8. ':' → logprob: -19.6250057220459
    9. '(":' → logprob: -19.8750057220459
    10. '()>' → logprob: -20.0000057220459

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26937007904052734
    2. ' n' → logprob: -2.0193700790405273
    3. 'n' → logprob: -2.2693700790405273
    4. '	n' → logprob: -11.269370079040527
    5. '(n' → logprob: -11.894370079040527
    6. '```' → logprob: -13.394370079040527
    7. ',n' → logprob: -14.269370079040527
    8. '_n' → logprob: -15.144370079040527
    9. '()' → logprob: -15.144370079040527
    10. ' ' → logprob: -15.269370079040527

Token 264: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00016337241686414927
    2. ' n' → logprob: -8.750163078308105
    3. '   ' → logprob: -12.250163078308105
    4. '	n' → logprob: -18.250164031982422
    5. '```' → logprob: -18.875164031982422
    6. 't' → logprob: -19.750164031982422
    7. '    
' → logprob: -19.875164031982422
    8. '
' → logprob: -20.250164031982422
    9. 'if' → logprob: -20.250164031982422
    10. ' ' → logprob: -20.625164031982422

Token 265: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3067055940628052
    2. ',' → logprob: -1.4317055940628052
    3. '=' → logprob: -3.6817054748535156
    4. '=int' → logprob: -11.056705474853516
    5. ' ,' → logprob: -11.306705474853516
    6. ')' → logprob: -11.306705474853516
    7. ' ' → logprob: -12.931705474853516
    8. '=input' → logprob: -13.556705474853516
    9. '   ' → logprob: -14.056705474853516
    10. 's' → logprob: -14.431705474853516

Token 266: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25246164202690125
    2. ' x' → logprob: -1.5024616718292236
    3. '*' → logprob: -8.377461433410645
    4. ' =' → logprob: -9.127461433410645
    5. '*x' → logprob: -9.377461433410645
    6. ' *' → logprob: -9.877461433410645
    7. '=' → logprob: -10.002461433410645
    8. 'a' → logprob: -12.127461433410645
    9. ' ' → logprob: -12.627461433410645
    10. ',x' → logprob: -14.002461433410645

Token 267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245826363563538
    2. ' =' → logprob: -3.7732458114624023
    3. ',' → logprob: -15.273245811462402
    4. '=input' → logprob: -16.27324676513672
    5. ')' → logprob: -18.02324676513672
    6. '=

' → logprob: -18.89824676513672
    7. ')=' → logprob: -19.02324676513672
    8. '＝' → logprob: -19.14824676513672
    9. '=get' → logprob: -19.27324676513672
    10. '=int' → logprob: -19.52324676513672

Token 268: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.14619077742099762
    2. ' read' → logprob: -2.021190881729126
    3. 'map' → logprob: -6.146190643310547
    4. ' map' → logprob: -6.646190643310547
    5. '   ' → logprob: -10.021190643310547
    6. '  ' → logprob: -11.396190643310547
    7. ' ' → logprob: -12.396190643310547
    8. '    ' → logprob: -12.771190643310547
    9. '	read' → logprob: -12.896190643310547
    10. 'tuple' → logprob: -13.396190643310547

Token 269: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.1019284799695015
    2. '()' → logprob: -2.351928472518921
    3. 'input' → logprob: -7.2269287109375
    4. '_list' → logprob: -7.3519287109375
    5. '(' → logprob: -8.8519287109375
    6. '_map' → logprob: -9.6019287109375
    7. 'int' → logprob: -10.7269287109375
    8. '()
' → logprob: -11.1019287109375
    9. '_int' → logprob: -11.1019287109375
    10. '(int' → logprob: -11.3519287109375

Token 270: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6933398842811584
    2. '()
' → logprob: -0.6933398842811584
    3. '   ' → logprob: -8.693340301513672
    4. '()
' → logprob: -11.693340301513672
    5. '
' → logprob: -12.568340301513672
    6. '()\' → logprob: -12.818340301513672
    7. 'a' → logprob: -12.943340301513672
    8. '()

' → logprob: -13.943340301513672
    9. 'n' → logprob: -13.943340301513672
    10. 'def' → logprob: -14.068340301513672

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18046464025974274
    2. 'a' → logprob: -1.8054646253585815
    3. ' a' → logprob: -7.305464744567871
    4. '	a' → logprob: -11.305464744567871
    5. 'n' → logprob: -11.430464744567871
    6. '    
' → logprob: -11.680464744567871
    7. '
' → logprob: -11.680464744567871
    8. ',a' → logprob: -12.930464744567871
    9. '```' → logprob: -13.180464744567871
    10. '   ' → logprob: -13.930464744567871

Token 272: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -9.088346359931165e-07
    2. ' a' → logprob: -14.375000953674316
    3. '   ' → logprob: -15.000000953674316
    4. 'lst' → logprob: -18.875
    5. 'arr' → logprob: -19.75
    6. '    
' → logprob: -20.875
    7. '	a' → logprob: -21.625
    8. '```' → logprob: -21.75
    9. 'A' → logprob: -23.25
    10. '_a' → logprob: -23.25

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967797577381134
    2. '=' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.811967849731445
    4. ',' → logprob: -17.311967849731445
    5. '   ' → logprob: -17.686967849731445
    6. '=[]' → logprob: -18.311967849731445
    7. 's' → logprob: -19.186967849731445
    8. '=list' → logprob: -19.186967849731445
    9. '[' → logprob: -19.311967849731445
    10. '_list' → logprob: -19.436967849731445

Token 274: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.00861456897109747
    2. ' read' → logprob: -4.758614540100098
    3. '	read' → logprob: -17.383615493774414
    4. '(read' → logprob: -18.383615493774414
    5. '   ' → logprob: -19.758615493774414
    6. 'list' → logprob: -20.133615493774414
    7. '.read' → logprob: -20.758615493774414
    8. '  ' → logprob: -21.383615493774414
    9. '_read' → logprob: -21.508615493774414
    10. ' ' → logprob: -22.508615493774414

Token 275: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. 'list' → logprob: -15.125
    3. '_' → logprob: -18.25
    4. '_input' → logprob: -18.375
    5. '_lists' → logprob: -19.75
    6. '```' → logprob: -19.75
    7. '_line' → logprob: -20.0
    8. 'a' → logprob: -20.0
    9. 'List' → logprob: -20.125
    10. '(_' → logprob: -20.375

Token 276: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2997807562351227
    2. '
' → logprob: -1.9247807264328003
    3. '()
' → logprob: -2.54978084564209
    4. '()' → logprob: -3.54978084564209
    5. 'def' → logprob: -6.17478084564209
    6. '(' → logprob: -6.79978084564209
    7. '(ans' → logprob: -7.42478084564209
    8. '(
' → logprob: -7.92478084564209
    9. '    
' → logprob: -8.17478084564209
    10. '(n' → logprob: -8.42478084564209

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3534056842327118
    2. ' ans' → logprob: -1.3534057140350342
    3. 'ans' → logprob: -3.353405714035034
    4. '	ans' → logprob: -6.603405475616455
    5. 'result' → logprob: -6.728405475616455
    6. '(ans' → logprob: -6.978405475616455
    7. ' result' → logprob: -8.103405952453613
    8. '
' → logprob: -8.728405952453613
    9. '```' → logprob: -9.353405952453613
    10. '_ans' → logprob: -9.478405952453613

Token 278: ' a' (ID: 261)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0011809427523985505
    2. ' ans' → logprob: -6.751181125640869
    3. 'result' → logprob: -12.751180648803711
    4. '(ans' → logprob: -12.751180648803711
    5. 'res' → logprob: -13.251180648803711
    6. '   ' → logprob: -13.876180648803711
    7. 'answer' → logprob: -13.876180648803711
    8. '	ans' → logprob: -14.126180648803711
    9. '_ans' → logprob: -15.876180648803711
    10. '```' → logprob: -16.25118064880371

Token 279: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39385026693344116
    2. ' =' → logprob: -1.268850326538086
    3. '_sorted' → logprob: -3.268850326538086
    4. '.sort' → logprob: -5.143850326538086
    5. 'sorted' → logprob: -8.143850326538086
    6. '_' → logprob: -9.518850326538086
    7. ',' → logprob: -10.518850326538086
    8. '.' → logprob: -10.768850326538086
    9. 'sort' → logprob: -10.893850326538086
    10. 'a' → logprob: -10.893850326538086

Token 280: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0009130131802521646
    2. ' get' → logprob: -7.000913143157959
    3. '   ' → logprob: -14.0009126663208
    4. '(get' → logprob: -15.2509126663208
    5. 'sorted' → logprob: -15.3759126663208
    6. 'a' → logprob: -15.3759126663208
    7. '[get' → logprob: -17.000913619995117
    8. '	get' → logprob: -17.500913619995117
    9. '=get' → logprob: -18.375913619995117
    10. '.get' → logprob: -18.625913619995117

Token 281: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.1472419600977446e-06
    2. 'sorted' → logprob: -14.125000953674316
    3. 'a' → logprob: -15.875000953674316
    4. '_processed' → logprob: -16.625001907348633
    5. '_' → logprob: -17.000001907348633
    6. '_s' → logprob: -17.250001907348633
    7. 'Sorted' → logprob: -17.875001907348633
    8. '_filtered' → logprob: -18.375001907348633
    9. '_list' → logprob: -18.875001907348633
    10. '_a' → logprob: -19.125001907348633

Token 282: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0029635541141033173
    2. '(a' → logprob: -5.877963542938232
    3. '_a' → logprob: -9.37796401977539
    4. '_' → logprob: -9.87796401977539
    5. '(_' → logprob: -11.87796401977539
    6. '```' → logprob: -12.37796401977539
    7. 'a' → logprob: -12.37796401977539
    8. '(' → logprob: -12.87796401977539
    9. '_array' → logprob: -13.75296401977539
    10. '_line' → logprob: -14.00296401977539

Token 283: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: 0.0
    2. '(' → logprob: -18.375
    3. '```' → logprob: -20.0
    4. 'a' → logprob: -20.75
    5. ' (' → logprob: -21.25
    6. '((' → logprob: -21.75
    7. '(lst' → logprob: -22.25
    8. '(list' → logprob: -22.625
    9. '(A' → logprob: -22.75
    10. '(ai' → logprob: -22.875

Token 284: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04401667043566704
    2. '(a' → logprob: -3.1690165996551514
    3. '(' → logprob: -7.4190168380737305
    4. '   ' → logprob: -8.16901683807373
    5. ')a' → logprob: -9.79401683807373
    6. 'a' → logprob: -10.29401683807373
    7. ' )' → logprob: -11.04401683807373
    8. '(n' → logprob: -11.66901683807373
    9. ')
' → logprob: -12.04401683807373
    10. ' ' → logprob: -12.16901683807373

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8523244261741638
    2. 'ans' → logprob: -0.8523244261741638
    3. ' ans' → logprob: -1.9773244857788086
    4. '	ans' → logprob: -5.477324485778809
    5. '(ans' → logprob: -6.102324485778809
    6. '
' → logprob: -7.227324485778809
    7. 'result' → logprob: -7.352324485778809
    8. '_ans' → logprob: -8.477324485778809
    9. '```' → logprob: -8.602324485778809
    10. 'answer' → logprob: -9.102324485778809

Token 286: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00016277639952022582
    2. ' ans' → logprob: -8.750163078308105
    3. '   ' → logprob: -13.000163078308105
    4. '(ans' → logprob: -14.250163078308105
    5. 'result' → logprob: -14.375163078308105
    6. 'res' → logprob: -14.625163078308105
    7. '	ans' → logprob: -15.625163078308105
    8. 'answer' → logprob: -16.00016212463379
    9. '_ans' → logprob: -17.37516212463379
    10. '```' → logprob: -17.37516212463379

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.898723561083898e-05
    2. '=' → logprob: -9.625079154968262
    3. ' =' → logprob: -11.750079154968262
    4. ',s' → logprob: -12.750079154968262
    5. ',a' → logprob: -14.125079154968262
    6. ',result' → logprob: -14.750079154968262
    7. ' ,' → logprob: -14.875079154968262
    8. ',n' → logprob: -16.250078201293945
    9. ',value' → logprob: -16.750078201293945
    10. 's' → logprob: -16.875078201293945

Token 288: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759561657905579
    2. ' s' → logprob: -0.8259561657905579
    3. '_' → logprob: -11.325956344604492
    4. '_s' → logprob: -13.825956344604492
    5. 'a' → logprob: -13.950956344604492
    6. 'result' → logprob: -14.325956344604492
    7. ' ' → logprob: -14.825956344604492
    8. ' =' → logprob: -14.825956344604492
    9. '_=' → logprob: -15.075956344604492
    10. ' a' → logprob: -15.325956344604492

Token 289: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0619683600962162
    2. ' =' → logprob: -2.8119683265686035
    3. ',' → logprob: -14.186968803405762
    4. '=create' → logprob: -19.686967849731445
    5. '=
' → logprob: -19.936967849731445
    6. '＝' → logprob: -20.311967849731445
    7. '=}' → logprob: -20.561967849731445
    8. ' ' → logprob: -20.936967849731445
    9. '=

' → logprob: -21.061967849731445
    10. '=s' → logprob: -21.311967849731445

Token 290: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.0004306692280806601
    2. ' process' → logprob: -7.750430583953857
    3. '(process' → logprob: -21.000431060791016
    4. 'proces' → logprob: -21.125431060791016
    5. 'rocess' → logprob: -21.250431060791016
    6. '	process' → logprob: -21.750431060791016
    7. '   ' → logprob: -21.875431060791016
    8. '_process' → logprob: -22.375431060791016
    9. '.process' → logprob: -22.375431060791016
    10. 'Process' → logprob: -23.875431060791016

Token 291: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -7.941850526549388e-06
    2. 'elements' → logprob: -11.750007629394531
    3. ' elements' → logprob: -19.12500762939453
    4. '_ELEMENTS' → logprob: -19.75000762939453
    5. '(n' → logprob: -20.00000762939453
    6. '(elements' → logprob: -20.12500762939453
    7. '```' → logprob: -20.25000762939453
    8. 'Elements' → logprob: -20.37500762939453
    9. '_element' → logprob: -21.25000762939453
    10. 'a' → logprob: -21.37500762939453

Token 292: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.2233183042553719e-05
    2. '(' → logprob: -12.125012397766113
    3. '(len' → logprob: -12.375012397766113
    4. ' (' → logprob: -13.125012397766113
    5. 'n' → logprob: -14.500012397766113
    6. '(
' → logprob: -18.625011444091797
    7. '((' → logprob: -18.750011444091797
    8. '(N' → logprob: -19.125011444091797
    9. ' n' → logprob: -19.375011444091797
    10. '```' → logprob: -19.500011444091797

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7146746763028204e-05
    2. ',a' → logprob: -10.37503719329834
    3. ' ,' → logprob: -12.12503719329834
    4. 'a' → logprob: -15.00003719329834
    5. ',
' → logprob: -16.625036239624023
    6. '   ' → logprob: -17.000036239624023
    7. '(a' → logprob: -17.875036239624023
    8. '(' → logprob: -18.000036239624023
    9. ' a' → logprob: -18.750036239624023
    10. ')' → logprob: -18.875036239624023

Token 294: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0067161982879042625
    2. ' a' → logprob: -5.006716251373291
    3. '   ' → logprob: -14.256715774536133
    4. '	a' → logprob: -16.131715774536133
    5. ' ' → logprob: -16.756715774536133
    6. '  ' → logprob: -18.131715774536133
    7. '    ' → logprob: -18.256715774536133
    8. '
' → logprob: -18.256715774536133
    9. '[a' → logprob: -18.256715774536133
    10. ',a' → logprob: -18.256715774536133

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1875571544806007e-05
    2. ',x' → logprob: -12.000011444091797
    3. ' ,' → logprob: -12.125011444091797
    4. 'x' → logprob: -16.000011444091797
    5. 's' → logprob: -16.875011444091797
    6. ')' → logprob: -17.125011444091797
    7. ',
' → logprob: -17.750011444091797
    8. '   ' → logprob: -18.375011444091797
    9. '```' → logprob: -18.750011444091797
    10. '(x' → logprob: -19.250011444091797

Token 296: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006715370807796717
    2. ' x' → logprob: -5.006715297698975
    3. '   ' → logprob: -18.756715774536133
    4. '	x' → logprob: -18.756715774536133
    5. ')x' → logprob: -20.006715774536133
    6. ' ' → logprob: -20.631715774536133
    7. '"x' → logprob: -21.131715774536133
    8. '$x' → logprob: -21.256715774536133
    9. '```' → logprob: -22.381715774536133
    10. '<|end|>' → logprob: -22.381715774536133

Token 297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02324605919420719
    2. ')
' → logprob: -3.7732460498809814
    3. ')
' → logprob: -14.898245811462402
    4. ')

' → logprob: -15.773245811462402
    5. '   ' → logprob: -16.77324676513672
    6. ')`' → logprob: -18.14824676513672
    7. ' )' → logprob: -18.52324676513672
    8. '),' → logprob: -19.14824676513672
    9. '))' → logprob: -19.52324676513672
    10. ')#' → logprob: -19.64824676513672

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007072085980325937
    2. 'output' → logprob: -5.0070719718933105
    3. '
' → logprob: -8.007072448730469
    4. ' output' → logprob: -11.382072448730469
    5. '```' → logprob: -12.257072448730469
    6. '    
' → logprob: -12.632072448730469
    7. '(output' → logprob: -13.382072448730469
    8. '	output' → logprob: -14.132072448730469
    9. '_output' → logprob: -14.257072448730469
    10. '<|end|>' → logprob: -14.382072448730469

Token 299: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -3.774276774493046e-05
    2. ' output' → logprob: -10.500038146972656
    3. '   ' → logprob: -11.500038146972656
    4. '
' → logprob: -17.000038146972656
    5. '(output' → logprob: -18.375038146972656
    6. '```' → logprob: -18.875038146972656
    7. '	output' → logprob: -19.125038146972656
    8. ' ' → logprob: -20.000038146972656
    9. '  ' → logprob: -20.375038146972656
    10. '$output' → logprob: -21.125038146972656

Token 300: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -7.896309739408025e-07
    2. '_results' → logprob: -14.375000953674316
    3. '_' → logprob: -16.625
    4. '_output' → logprob: -17.0
    5. '_res' → logprob: -17.625
    6. '```' → logprob: -18.25
    7. '"_' → logprob: -18.75
    8. '_RESULT' → logprob: -19.0
    9. '_final' → logprob: -19.25
    10. ' _' → logprob: -19.375

Token 301: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.9361264946837764e-07
    2. '(answer' → logprob: -16.125
    3. '(' → logprob: -17.0
    4. ' (' → logprob: -17.125
    5. 'ans' → logprob: -17.875
    6. '	ans' → logprob: -21.25
    7. '```' → logprob: -22.0
    8. '_ans' → logprob: -22.25
    9. '(err' → logprob: -22.75
    10. ' ans' → logprob: -23.0

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.465036105713807e-06
    2. ',s' → logprob: -12.500007629394531
    3. ' ,' → logprob: -12.625007629394531
    4. 's' → logprob: -15.000007629394531
    5. ',
' → logprob: -17.87500762939453
    6. '   ' → logprob: -19.25000762939453
    7. '```' → logprob: -19.37500762939453
    8. ')' → logprob: -19.37500762939453
    9. ' s' → logprob: -20.12500762939453
    10. 'a' → logprob: -20.37500762939453

Token 303: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0067154900170862675
    2. ' s' → logprob: -5.006715297698975
    3. '   ' → logprob: -17.006715774536133
    4. '<|end|>' → logprob: -17.881715774536133
    5. '_s' → logprob: -19.256715774536133
    6. '	s' → logprob: -19.631715774536133
    7. '  ' → logprob: -19.756715774536133
    8. ' ' → logprob: -19.881715774536133
    9. ' ' → logprob: -19.881715774536133
    10. '
' → logprob: -20.131715774536133

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.810037742368877e-05
    2. ',x' → logprob: -10.500038146972656
    3. ' ,' → logprob: -11.625038146972656
    4. ')' → logprob: -14.000038146972656
    5. '```' → logprob: -15.875038146972656
    6. '(x' → logprob: -16.000038146972656
    7. ',
' → logprob: -16.000038146972656
    8. 'x' → logprob: -16.125038146972656
    9. '   ' → logprob: -16.125038146972656
    10. ' x' → logprob: -16.250038146972656

Token 305: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2014133334159851
    2. ' x' → logprob: -1.7014133930206299
    3. ')' → logprob: -18.201414108276367
    4. ')x' → logprob: -19.076414108276367
    5. '	x' → logprob: -19.076414108276367
    6. ' ' → logprob: -19.451414108276367
    7. '   ' → logprob: -20.951414108276367
    8. '(x' → logprob: -21.326414108276367
    9. '
' → logprob: -22.701414108276367
    10. '    ' → logprob: -23.076414108276367

Token 306: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -12.250004768371582
    3. ' )' → logprob: -16.0000057220459
    4. ')

' → logprob: -18.1250057220459
    5. ')`' → logprob: -18.7500057220459
    6. '))' → logprob: -19.8750057220459
    7. ')add' → logprob: -19.8750057220459
    8. ')#' → logprob: -20.1250057220459
    9. '),' → logprob: -20.2500057220459
    10. ')}' → logprob: -20.8750057220459

Token 307: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12693609297275543
    2. 'main' → logprob: -2.126936197280884
    3. ' if' → logprob: -12.876935958862305
    4. ' main' → logprob: -13.001935958862305
    5. '```' → logprob: -13.376935958862305
    6. '(main' → logprob: -14.376935958862305
    7. 'print' → logprob: -14.751935958862305
    8. '
' → logprob: -15.251935958862305
    9. '#' → logprob: -15.251935958862305
    10. '\' → logprob: -16.876935958862305

Token 308: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 306
Tokens correctement prédits (1ère position, stricte): 137
Tokens correctement prédits (1ère position, avec adaptation): 149
Tokens correctement prédits (top 10): 254
Précision stricte (1ère position): 44.77%
Précision adaptée (1ère position): 48.69%
Précision (top 10): 83.01%
================================================================================
