================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import itertools
import bisect
from copy import copy as cp_copy
from collections import deque as cl_deque, Counter as cl_counter
from decimal import Decimal as dc_decimal

def input_str(): return input()
def input_int(): return int(input())
def input_str_list(): return input().split()
def input_int_map(): return map(int, input().split())
def input_str_list_as_list(): return list(input().split())
def input_int_list(): return list(map(int, input().split()))
def math_lcm(a, b): return a * b // math.gcd(a, b)

sys.setrecursionlimit(10**9)
CONST_MOD = 10**9 + 7

var_n_value = input_int()
if var_n_value < 1000:
    print('ABC')
else:
    print('ABD')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2752407193183899
    2. '\n' → logprob: -2.775240659713745
    3. 'import' → logprob: -3.025240659713745
    4. '<|end|>' → logprob: -3.275240659713745
    5. '\' → logprob: -3.400240659713745
    6. '
' → logprob: -3.650240659713745
    7. '```' → logprob: -4.400240898132324
    8. '

' → logprob: -5.275240898132324
    9. '<|end|>' → logprob: -5.275240898132324
    10. ',' → logprob: -5.900240898132324

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8152873516082764
    2. '\n' → logprob: -1.5652873516082764
    3. 'import' → logprob: -2.3152873516082764
    4. '
' → logprob: -2.4402873516082764
    5. '```' → logprob: -2.9402873516082764
    6. '\' → logprob: -3.3152873516082764
    7. '

' → logprob: -3.3152873516082764
    8. '<|end|>' → logprob: -4.0652875900268555
    9. ',' → logprob: -5.0652875900268555
    10. '' → logprob: -5.9402875900268555

Token 7: ' itertools' (ID: 103178)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.4993312358856201
    2. ' os' → logprob: -0.9993312358856201
    3. 'random' → logprob: -4.124331474304199
    4. ' random' → logprob: -4.999331474304199
    5. 're' → logprob: -7.249331474304199
    6. ' re' → logprob: -7.749331474304199
    7. ' numpy' → logprob: -9.1243314743042
    8. 'collections' → logprob: -9.2493314743042
    9. 'time' → logprob: -9.3743314743042
    10. 'numpy' → logprob: -9.4993314743042

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.021655652672052383
    2. '\n' → logprob: -5.271655559539795
    3. '<|end|>' → logprob: -5.396655559539795
    4. '\' → logprob: -5.646655559539795
    5. 'import' → logprob: -5.896655559539795
    6. '<|end|>' → logprob: -6.521655559539795
    7. '
' → logprob: -6.646655559539795
    8. '```' → logprob: -6.646655559539795
    9. 'newline' → logprob: -8.396656036376953
    10. '

' → logprob: -8.521656036376953

Token 9: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.025699442252516747
    2. '\' → logprob: -4.775699615478516
    3. 'import' → logprob: -4.900699615478516
    4. '<|end|>' → logprob: -6.525699615478516
    5. '```' → logprob: -6.525699615478516
    6. '\n' → logprob: -6.775699615478516
    7. ',' → logprob: -7.025699615478516
    8. 'def' → logprob: -7.025699615478516
    9. '
' → logprob: -7.025699615478516
    10. '#' → logprob: -7.400699615478516

Token 10: ' bis' (ID: 7204)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.40168747305870056
    2. ' collections' → logprob: -2.0266873836517334
    3. 'os' → logprob: -2.4016873836517334
    4. 'fun' → logprob: -2.7766873836517334
    5. ' functools' → logprob: -3.6516873836517334
    6. 'operator' → logprob: -4.7766876220703125
    7. ' os' → logprob: -5.4016876220703125
    8. ' operator' → logprob: -5.7766876220703125
    9. 'random' → logprob: -6.0266876220703125
    10. 'numpy' → logprob: -7.7766876220703125

Token 11: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.531315314830863e-06
    2. 'ected' → logprob: -13.500003814697266
    3. 'ec' → logprob: -14.375003814697266
    4. 't' → logprob: -14.500003814697266
    5. 'e' → logprob: -14.750003814697266
    6. 'ection' → logprob: -15.375003814697266
    7. 'ector' → logprob: -16.000003814697266
    8. 'ects' → logprob: -16.000003814697266
    9. 'ective' → logprob: -17.500003814697266
    10. 'ectl' → logprob: -17.625003814697266

Token 12: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.699434220790863
    2. '.' → logprob: -1.8244342803955078
    3. '

' → logprob: -2.199434280395508
    4. '<|end|>' → logprob: -2.699434280395508
    5. 'import' → logprob: -2.949434280395508
    6. '\n' → logprob: -3.199434280395508
    7. '\' → logprob: -3.949434280395508
    8. '```' → logprob: -4.324434280395508
    9. '' → logprob: -4.449434280395508
    10. ',' → logprob: -4.574434280395508

Token 13: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6109772324562073
    2. 'import' → logprob: -1.2359771728515625
    3. '
' → logprob: -2.1109771728515625
    4. '```' → logprob: -4.2359771728515625
    5. 'def' → logprob: -5.2359771728515625
    6. '\n' → logprob: -5.2359771728515625
    7. '<|end|>' → logprob: -5.7359771728515625
    8. ',' → logprob: -5.8609771728515625
    9. 'from' → logprob: -5.9859771728515625
    10. '.' → logprob: -6.2359771728515625

Token 14: ' copy' (ID: 5150)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5857275724411011
    2. 'collections' → logprob: -0.8357275724411011
    3. ' typing' → logprob: -5.085727691650391
    4. ' heap' → logprob: -6.710727691650391
    5. 'heap' → logprob: -6.835727691650391
    6. 'typing' → logprob: -7.585727691650391
    7. ' ' → logprob: -8.71072769165039
    8. ' operator' → logprob: -8.83572769165039
    9. ' math' → logprob: -8.96072769165039
    10. ' functools' → logprob: -9.21072769165039

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1270817071199417
    2. 'import' → logprob: -2.1270816326141357
    3. ' ' → logprob: -9.502081871032715
    4. '	import' → logprob: -9.752081871032715
    5. '_import' → logprob: -12.252081871032715
    6. ' im' → logprob: -12.502081871032715
    7. '.' → logprob: -13.377081871032715
    8. ' importar' → logprob: -13.627081871032715
    9. '<|end|>' → logprob: -14.002081871032715
    10. ' Import' → logprob: -14.002081871032715

Token 16: ' copy' (ID: 5150)
  Prédit: ' deepcopy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.0034594216849654913
    2. ' copy' → logprob: -5.753459453582764
    3. 'copy' → logprob: -8.253458976745605
    4. 'deep' → logprob: -11.128458976745605
    5. '.deepcopy' → logprob: -12.128458976745605
    6. ' deep' → logprob: -14.128458976745605
    7. ' import' → logprob: -14.753458976745605
    8. 'import' → logprob: -16.753459930419922
    9. '(copy' → logprob: -17.753459930419922
    10. '	copy' → logprob: -17.878459930419922

Token 17: ' as' (ID: 472)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.09169688820838928
    2. '
' → logprob: -2.8416969776153564
    3. 'import' → logprob: -4.091696739196777
    4. '


' → logprob: -5.091696739196777
    5. ',' → logprob: -6.216696739196777
    6. ' 

' → logprob: -7.216696739196777
    7. '



' → logprob: -7.591696739196777
    8. '\n' → logprob: -7.716696739196777
    9. '' → logprob: -7.841696739196777
    10. '
' → logprob: -7.841696739196777

Token 18: ' cp' (ID: 27776)
  Prédit: 'cpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cpy' → logprob: -0.2608408033847809
    2. 'copy' → logprob: -2.635840892791748
    3. ' copy' → logprob: -2.885840892791748
    4. ' cp' → logprob: -3.010840892791748
    5. ' deepcopy' → logprob: -3.260840892791748
    6. 'cop' → logprob: -4.885840892791748
    7. 'cp' → logprob: -5.135840892791748
    8. 'deep' → logprob: -8.01084041595459
    9. ' cop' → logprob: -8.63584041595459
    10. '_copy' → logprob: -9.01084041595459

Token 19: '_copy' (ID: 37283)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4975461959838867
    2. ',' → logprob: -1.7475461959838867
    3. '
' → logprob: -1.9975461959838867
    4. 'def' → logprob: -3.6225461959838867
    5. 'import' → logprob: -4.372546195983887
    6. '<|end|>' → logprob: -4.872546195983887
    7. ' 

' → logprob: -5.122546195983887
    8. '' → logprob: -5.872546195983887
    9. '


' → logprob: -5.872546195983887
    10. '
' → logprob: -5.997546195983887

Token 20: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5622550845146179
    2. '

' → logprob: -1.9372551441192627
    3. ',' → logprob: -2.3122551441192627
    4. '<|end|>' → logprob: -2.6872551441192627
    5. '_' → logprob: -3.5622551441192627
    6. 'def' → logprob: -4.062254905700684
    7. '
' → logprob: -4.812254905700684
    8. 'import' → logprob: -5.062254905700684
    9. 'newline' → logprob: -5.062254905700684
    10. '' → logprob: -5.062254905700684

Token 21: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.12889353930950165
    2. '
' → logprob: -2.3788936138153076
    3. '


' → logprob: -4.5038933753967285
    4. 'def' → logprob: -5.3788933753967285
    5. 'import' → logprob: -5.5038933753967285
    6. '_

' → logprob: -6.0038933753967285
    7. ',' → logprob: -6.7538933753967285
    8. '<|end|>' → logprob: -7.2538933753967285
    9. '
' → logprob: -7.3788933753967285
    10. '#' → logprob: -7.7538933753967285

Token 22: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.5349047780036926
    2. ' collections' → logprob: -1.0349047183990479
    3. 'copy' → logprob: -4.284904956817627
    4. ' copy' → logprob: -4.409904956817627
    5. ' functools' → logprob: -4.409904956817627
    6. ' typing' → logprob: -5.409904956817627
    7. 'operator' → logprob: -5.909904956817627
    8. ' math' → logprob: -6.034904956817627
    9. 'typing' → logprob: -6.284904956817627
    10. ' operator' → logprob: -6.409904956817627

Token 23: ' import' (ID: 1588)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.39015263319015503
    2. 'import' → logprob: -1.3901526927947998
    3. ' import' → logprob: -3.8901526927948
    4. '.' → logprob: -4.265152454376221
    5. 's' → logprob: -4.640152454376221
    6. 'ion' → logprob: -4.890152454376221
    7. 'from' → logprob: -5.015152454376221
    8. 'ions' → logprob: -6.015152454376221
    9. 'odule' → logprob: -6.140152454376221
    10. '.Counter' → logprob: -6.640152454376221

Token 24: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.943953275680542
    2. 'deque' → logprob: -1.193953275680542
    3. ' defaultdict' → logprob: -1.193953275680542
    4. 'default' → logprob: -6.193953514099121
    5. 'named' → logprob: -6.318953514099121
    6. ' named' → logprob: -7.318953514099121
    7. 'abc' → logprob: -8.568953514099121
    8. 'de' → logprob: -9.693953514099121
    9. ' abc' → logprob: -10.318953514099121
    10. ' Counter' → logprob: -10.568953514099121

Token 25: ' as' (ID: 472)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9225637316703796
    2. ',' → logprob: -1.1725637912750244
    3. '<|end|>' → logprob: -1.6725637912750244
    4. '
' → logprob: -2.7975637912750244
    5. 'from' → logprob: -4.297563552856445
    6. '

' → logprob: -4.672563552856445
    7. ' as' → logprob: -5.297563552856445
    8. '\n' → logprob: -5.672563552856445
    9. '<|end|>' → logprob: -5.922563552856445
    10. ',
' → logprob: -6.297563552856445

Token 26: ' cl' (ID: 567)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.12469501048326492
    2. ' deque' → logprob: -2.999695062637329
    3. 'deque' → logprob: -3.749695062637329
    4. ' _' → logprob: -3.874695062637329
    5. ' dq' → logprob: -4.37469482421875
    6. ' de' → logprob: -5.12469482421875
    7. ' d' → logprob: -6.24969482421875
    8. '_d' → logprob: -6.99969482421875
    9. '_' → logprob: -7.74969482421875
    10. 'dq' → logprob: -7.87469482421875

Token 27: '_de' (ID: 5047)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.09049434214830399
    2. 'q' → logprob: -3.590494394302368
    3. 'e' → logprob: -3.965494394302368
    4. 'de' → logprob: -4.090494155883789
    5. 'eq' → logprob: -5.090494155883789
    6. 'ede' → logprob: -5.340494155883789
    7. '_de' → logprob: -6.715494155883789
    8. 'que' → logprob: -6.840494155883789
    9. 'd' → logprob: -6.840494155883789
    10. 'dq' → logprob: -6.965494155883789

Token 28: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.036439862102270126
    2. 'q' → logprob: -3.536439895629883
    3. 'qu' → logprob: -5.036439895629883
    4. 'uq' → logprob: -9.411439895629883
    5. 'qe' → logprob: -10.161439895629883
    6. 'queue' → logprob: -10.911439895629883
    7. 'c' → logprob: -11.536439895629883
    8. '```' → logprob: -11.911439895629883
    9. 'ue' → logprob: -12.661439895629883
    10. 'ques' → logprob: -13.161439895629883

Token 29: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5009753108024597
    2. 'import' → logprob: -2.0009753704071045
    3. ',' → logprob: -2.5009753704071045
    4. '<|end|>' → logprob: -3.0009753704071045
    5. 'from' → logprob: -3.6259753704071045
    6. ',
' → logprob: -3.7509753704071045
    7. '

' → logprob: -4.250975131988525
    8. '```' → logprob: -4.375975131988525
    9. '\n' → logprob: -4.750975131988525
    10. '' → logprob: -5.125975131988525

Token 30: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.4378378093242645
    2. 'default' → logprob: -1.187837839126587
    3. 'Counter' → logprob: -3.437837839126587
    4. 'named' → logprob: -4.562837600708008
    5. ' Counter' → logprob: -5.812837600708008
    6. ' named' → logprob: -6.312837600708008
    7. 'deque' → logprob: -7.187837600708008
    8. 'Ordered' → logprob: -7.312837600708008
    9. 'Chain' → logprob: -8.437837600708008
    10. 'Default' → logprob: -8.687837600708008

Token 31: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.1130853071808815
    2. 'as' → logprob: -2.9880852699279785
    3. ',' → logprob: -3.1130852699279785
    4. 'from' → logprob: -5.1130852699279785
    5. 'import' → logprob: -6.6130852699279785
    6. '
' → logprob: -6.7380852699279785
    7. '<|end|>' → logprob: -7.1130852699279785
    8. '

' → logprob: -7.2380852699279785
    9. ' from' → logprob: -8.238085746765137
    10. ',
' → logprob: -8.363085746765137

Token 32: ' cl' (ID: 567)
  Prédit: ' cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cl' → logprob: -0.26586660742759705
    2. 'cl' → logprob: -1.7658666372299194
    3. 'Counter' → logprob: -3.26586651802063
    4. ' Counter' → logprob: -4.015866756439209
    5. '_counter' → logprob: -5.765866756439209
    6. '_cl' → logprob: -6.640866756439209
    7. '_' → logprob: -7.265866756439209
    8. 'Cl' → logprob: -8.14086627960205
    9. ' Cl' → logprob: -8.64086627960205
    10. ' counter' → logprob: -8.64086627960205

Token 33: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.011679088696837425
    2. '_C' → logprob: -4.761679172515869
    3. '_' → logprob: -6.511679172515869
    4. '_c' → logprob: -7.136679172515869
    5. 'ounter' → logprob: -8.136678695678711
    6. '_count' → logprob: -9.136678695678711
    7. '_de' → logprob: -9.136678695678711
    8. '_col' → logprob: -9.261678695678711
    9. 'Counter' → logprob: -10.386678695678711
    10. '```' → logprob: -10.636678695678711

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6474052667617798
    2. ',' → logprob: -1.3974052667617798
    3. '<|end|>' → logprob: -2.2724051475524902
    4. 'import' → logprob: -3.1474051475524902
    5. ',
' → logprob: -3.8974051475524902
    6. 'from' → logprob: -4.64740514755249
    7. '\n' → logprob: -4.77240514755249
    8. '

' → logprob: -5.02240514755249
    9. 'newline' → logprob: -5.02240514755249
    10. '<|end|>' → logprob: -5.27240514755249

Token 35: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4588155448436737
    2. '

' → logprob: -1.583815574645996
    3. ',' → logprob: -2.583815574645996
    4. 'import' → logprob: -2.833815574645996
    5. ',
' → logprob: -4.458815574645996
    6. '
' → logprob: -5.958815574645996
    7. '<|end|>' → logprob: -6.208815574645996
    8. 'from' → logprob: -6.333815574645996
    9. ',

' → logprob: -6.333815574645996
    10. '


' → logprob: -6.708815574645996

Token 36: ' decimal' (ID: 26964)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -1.0802463293075562
    2. ' typing' → logprob: -1.3302463293075562
    3. ' collections' → logprob: -1.7052463293075562
    4. ' functools' → logprob: -2.5802464485168457
    5. ' operator' → logprob: -3.4552464485168457
    6. 'collections' → logprob: -3.8302464485168457
    7. ' math' → logprob: -3.8302464485168457
    8. ' threading' → logprob: -4.330246448516846
    9. ' os' → logprob: -4.955246448516846
    10. ' ' → logprob: -5.080246448516846

Token 37: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.006844787858426571
    2. 'import' → logprob: -5.131844997406006
    3. '<|end|>' → logprob: -7.381844997406006
    4. ' ' → logprob: -8.381844520568848
    5. '	import' → logprob: -10.631844520568848
    6. '<|end|>' → logprob: -11.131844520568848
    7. '_import' → logprob: -12.006844520568848
    8. '.' → logprob: -12.381844520568848
    9. ' as' → logprob: -12.756844520568848
    10. '```' → logprob: -12.756844520568848

Token 38: ' Decimal' (ID: 56874)
  Prédit: ' Decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.1137973964214325
    2. 'Decimal' → logprob: -2.238797426223755
    3. '.Decimal' → logprob: -6.988797187805176
    4. ' ' → logprob: -11.238797187805176
    5. '_decimal' → logprob: -11.738797187805176
    6. '```' → logprob: -11.863797187805176
    7. ' decimal' → logprob: -11.863797187805176
    8. 'decimal' → logprob: -11.988797187805176
    9. 'Decimals' → logprob: -12.613797187805176
    10. ' Dec' → logprob: -12.613797187805176

Token 39: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7050592303276062
    2. ' as' → logprob: -1.830059289932251
    3. '
' → logprob: -2.080059289932251
    4. 'from' → logprob: -2.580059289932251
    5. 'import' → logprob: -2.955059289932251
    6. 'as' → logprob: -3.580059289932251
    7. '<|end|>' → logprob: -3.830059289932251
    8. '

' → logprob: -4.455059051513672
    9. ',
' → logprob: -4.455059051513672
    10. '```' → logprob: -5.205059051513672

Token 40: ' dc' (ID: 37843)
  Prédit: ' Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.6838962435722351
    2. 'Decimal' → logprob: -0.8088962435722351
    3. 'Dec' → logprob: -3.80889630317688
    4. ' Dec' → logprob: -3.93389630317688
    5. 'D' → logprob: -6.058896064758301
    6. ' D' → logprob: -6.183896064758301
    7. '_D' → logprob: -6.433896064758301
    8. '.Decimal' → logprob: -8.0588960647583
    9. '_' → logprob: -8.1838960647583
    10. 'decimal' → logprob: -8.4338960647583

Token 41: '_decimal' (ID: 178716)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8736453056335449
    2. ',' → logprob: -1.248645305633545
    3. '<|end|>' → logprob: -2.623645305633545
    4. ' ' → logprob: -3.248645305633545
    5. '' → logprob: -3.623645305633545
    6. '.' → logprob: -3.873645305633545
    7. '_' → logprob: -3.873645305633545
    8. 'import' → logprob: -3.998645305633545
    9. '

' → logprob: -4.123645305633545
    10. ' 
' → logprob: -4.623645305633545

Token 42: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4063721299171448
    2. '<|end|>' → logprob: -1.9063720703125
    3. 'import' → logprob: -3.0313720703125
    4. ',' → logprob: -3.4063720703125
    5. '\n' → logprob: -3.7813720703125
    6. '

' → logprob: -3.9063720703125
    7. '' → logprob: -4.6563720703125
    8. 'from' → logprob: -5.1563720703125
    9. '```' → logprob: -5.4063720703125
    10. 'def' → logprob: -5.4063720703125

Token 43: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9208973050117493
    2. 'def' → logprob: -1.7958972454071045
    3. '#' → logprob: -2.4208972454071045
    4. ',' → logprob: -2.5458972454071045
    5. 'd' → logprob: -2.7958972454071045
    6. 'import' → logprob: -3.0458972454071045
    7. '_' → logprob: -3.5458972454071045
    8. '' → logprob: -4.045897483825684
    9. '

' → logprob: -4.295897483825684
    10. ':' → logprob: -4.545897483825684

Token 44: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18688303232192993
    2. '_' → logprob: -2.936882972717285
    3. ' calculate' → logprob: -3.686882972717285
    4. ' main' → logprob: -3.811882972717285
    5. ' factorial' → logprob: -3.936882972717285
    6. ' space' → logprob: -4.311882972717285
    7. ' _' → logprob: -4.936882972717285
    8. ' my' → logprob: -5.061882972717285
    9. ' add' → logprob: -5.686882972717285
    10. ' compute' → logprob: -5.936882972717285

Token 45: '_str' (ID: 6182)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015811575576663017
    2. '()' → logprob: -4.515811443328857
    3. '_' → logprob: -6.265811443328857
    4. '():' → logprob: -7.515811443328857
    5. '("("' → logprob: -7.765811443328857
    6. '("")' → logprob: -8.140811920166016
    7. '_line' → logprob: -8.140811920166016
    8. '_parent' → logprob: -9.015811920166016
    9. 's' → logprob: -9.015811920166016
    10. '_input' → logprob: -9.140811920166016

Token 46: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00543201994150877
    2. '()' → logprob: -6.13043212890625
    3. ' ():' → logprob: -6.25543212890625
    4. '():
' → logprob: -6.88043212890625
    5. 'ing' → logprob: -8.38043212890625
    6. ' ()' → logprob: -10.25543212890625
    7. '(' → logprob: -10.88043212890625
    8. '():
' → logprob: -12.75543212890625
    9. '):' → logprob: -13.50543212890625
    10. '():

' → logprob: -14.00543212890625

Token 47: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09069914370775223
    2. ' return' → logprob: -3.3406991958618164
    3. '    ' → logprob: -3.8406991958618164
    4. 'return' → logprob: -4.215699195861816
    5. ' ' → logprob: -5.215699195861816
    6. '    
' → logprob: -5.215699195861816
    7. '(' → logprob: -7.340699195861816
    8. '\' → logprob: -7.465699195861816
    9. '	return' → logprob: -7.590699195861816
    10. '()' → logprob: -7.590699195861816

Token 48: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.013969800435006618
    2. 'input' → logprob: -4.763969898223877
    3. ' sys' → logprob: -5.763969898223877
    4. ' ' → logprob: -6.138969898223877
    5. 'sys' → logprob: -11.138969421386719
    6. '  ' → logprob: -11.763969421386719
    7. ' str' → logprob: -11.888969421386719
    8. ' ' → logprob: -12.013969421386719
    9. ' '' → logprob: -14.263969421386719
    10. '(input' → logprob: -14.263969421386719

Token 49: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.053422022610902786
    2. '(' → logprob: -3.053421974182129
    3. '_' → logprob: -6.178421974182129
    4. '()\' → logprob: -6.553421974182129
    5. '()
' → logprob: -7.678421974182129
    6. '(\' → logprob: -8.803421974182129
    7. '().' → logprob: -9.053421974182129
    8. 's' → logprob: -9.178421974182129
    9. '(
' → logprob: -9.303421974182129
    10. '()

' → logprob: -9.428421974182129

Token 50: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.665855348110199
    2. 'def' → logprob: -0.790855348110199
    3. '

' → logprob: -4.540855407714844
    4. '<|end|>' → logprob: -4.540855407714844
    5. '\n' → logprob: -5.290855407714844
    6. '\' → logprob: -6.290855407714844
    7. '<|end|>' → logprob: -7.165855407714844
    8. '  
' → logprob: -7.165855407714844
    9. ' def' → logprob: -7.290855407714844
    10. '
' → logprob: -7.790855407714844

Token 51: ' input' (ID: 3422)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.3447466790676117
    2. 'input' → logprob: -2.2197465896606445
    3. ' input' → logprob: -2.4697465896606445
    4. '_str' → logprob: -2.8447465896606445
    5. '_int' → logprob: -3.3447465896606445
    6. '_' → logprob: -5.5947465896606445
    7. 'int' → logprob: -7.4697465896606445
    8. '_float' → logprob: -8.719746589660645
    9. 's' → logprob: -9.594746589660645
    10. '(input' → logprob: -9.969746589660645

Token 52: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.05336913466453552
    2. '_' → logprob: -3.6783690452575684
    3. '_str' → logprob: -3.6783690452575684
    4. '_line' → logprob: -7.678369045257568
    5. '()' → logprob: -8.053369522094727
    6. '_num' → logprob: -8.303369522094727
    7. '_s' → logprob: -8.678369522094727
    8. '_val' → logprob: -9.928369522094727
    9. '_list' → logprob: -10.428369522094727
    10. '_i' → logprob: -10.678369522094727

Token 53: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.055427055805921555
    2. '()' → logprob: -2.930427074432373
    3. ' ():' → logprob: -8.555426597595215
    4. ' ()' → logprob: -8.930426597595215
    5. '_str' → logprob: -9.430426597595215
    6. 's' → logprob: -10.055426597595215
    7. '():
' → logprob: -11.055426597595215
    8. '()>' → logprob: -11.430426597595215
    9. '_int' → logprob: -11.805426597595215
    10. '`()' → logprob: -11.930426597595215

Token 54: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12224762886762619
    2. ' return' → logprob: -2.2472476959228516
    3. ' int' → logprob: -4.747247695922852
    4. 'return' → logprob: -8.372247695922852
    5. 'int' → logprob: -8.747247695922852
    6. ' ' → logprob: -8.872247695922852
    7. '    ' → logprob: -9.247247695922852
    8. '  ' → logprob: -10.497247695922852
    9. '(int' → logprob: -10.997247695922852
    10. ' ‌' → logprob: -12.122247695922852

Token 55: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.008630638010799885
    2. 'int' → logprob: -4.758630752563477
    3. '(int' → logprob: -11.758630752563477
    4. ' ' → logprob: -12.133630752563477
    5. '	int' → logprob: -13.883630752563477
    6. '<int' → logprob: -14.508630752563477
    7. '  ' → logprob: -14.758630752563477
    8. ' in' → logprob: -15.133630752563477
    9. '=int' → logprob: -15.133630752563477
    10. '[int' → logprob: -15.508630752563477

Token 56: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5806984901428223
    2. '(input' → logprob: -0.8306984901428223
    3. '()' → logprob: -5.455698490142822
    4. 'input' → logprob: -7.955698490142822
    5. '(
' → logprob: -9.705698013305664
    6. ' (' → logprob: -11.080698013305664
    7. '(int' → logprob: -11.080698013305664
    8. '(

' → logprob: -11.830698013305664
    9. '(in' → logprob: -12.205698013305664
    10. ' ' → logprob: -12.830698013305664

Token 57: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0012471356894820929
    2. '()' → logprob: -6.751246929168701
    3. ' ())' → logprob: -10.50124740600586
    4. ')' → logprob: -10.62624740600586
    5. '()))' → logprob: -11.75124740600586
    6. '())
' → logprob: -11.87624740600586
    7. '().' → logprob: -12.12624740600586
    8. '(' → logprob: -13.25124740600586
    9. '()]' → logprob: -13.87624740600586
    10. '()
' → logprob: -14.50124740600586

Token 58: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004519127309322357
    2. '
' → logprob: -5.504518985748291
    3. '()
' → logprob: -8.75451946258545
    4. ' def' → logprob: -8.87951946258545
    5. '\' → logprob: -9.62951946258545
    6. '()' → logprob: -10.50451946258545
    7. '\n' → logprob: -11.25451946258545
    8. '```' → logprob: -11.75451946258545
    9. ' 
' → logprob: -12.25451946258545
    10. '  
' → logprob: -12.37951946258545

Token 59: ' input' (ID: 3422)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.4674234390258789
    2. '_list' → logprob: -1.467423439025879
    3. '_int' → logprob: -2.217423439025879
    4. 'input' → logprob: -4.342423439025879
    5. '_float' → logprob: -4.467423439025879
    6. '_str' → logprob: -5.592423439025879
    7. '_' → logprob: -6.342423439025879
    8. 's' → logprob: -6.467423439025879
    9. '_map' → logprob: -7.092423439025879
    10. 'int' → logprob: -7.842423439025879

Token 60: '_str' (ID: 6182)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.594895601272583
    2. '_' → logprob: -1.344895601272583
    3. '_str' → logprob: -1.844895601272583
    4. '_float' → logprob: -4.594895362854004
    5. '_lst' → logprob: -4.844895362854004
    6. '_array' → logprob: -5.344895362854004
    7. '_int' → logprob: -5.719895362854004
    8. '()' → logprob: -6.719895362854004
    9. '_line' → logprob: -6.719895362854004
    10. '_s' → logprob: -7.844895362854004

Token 61: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.7934636473655701
    2. '()' → logprob: -0.9184636473655701
    3. 's' → logprob: -2.293463706970215
    4. '_line' → logprob: -4.043463706970215
    5. '_array' → logprob: -4.418463706970215
    6. 'list' → logprob: -4.918463706970215
    7. '_str' → logprob: -5.793463706970215
    8. '_lst' → logprob: -6.168463706970215
    9. '_' → logprob: -6.668463706970215
    10. 'line' → logprob: -7.543463706970215

Token 62: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.525097131729126
    2. '()' → logprob: -0.900097131729126
    3. 's' → logprob: -7.150096893310547
    4. '().' → logprob: -7.900096893310547
    5. ' ()' → logprob: -8.900096893310547
    6. '()[' → logprob: -9.400096893310547
    7. '()]' → logprob: -9.525096893310547
    8. '()>' → logprob: -9.775096893310547
    9. '();' → logprob: -9.900096893310547
    10. '(){' → logprob: -10.150096893310547

Token 63: ' return' (ID: 622)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09809742122888565
    2. ' ()' → logprob: -2.473097324371338
    3. '().' → logprob: -4.973097324371338
    4. ' ' → logprob: -7.723097324371338
    5. ' return' → logprob: -7.848097324371338
    6. '()[' → logprob: -8.098097801208496
    7. 'return' → logprob: -8.348097801208496
    8. '(' → logprob: -8.723097801208496
    9. ' (' → logprob: -8.973097801208496
    10. 'def' → logprob: -9.098097801208496

Token 64: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.32959890365600586
    2. ' input' → logprob: -1.3295989036560059
    3. ' list' → logprob: -4.829598903656006
    4. 'list' → logprob: -4.829598903656006
    5. '[input' → logprob: -8.829599380493164
    6. '(input' → logprob: -9.954599380493164
    7. '[' → logprob: -11.704599380493164
    8. ' ' → logprob: -11.829599380493164
    9. ' [' → logprob: -11.954599380493164
    10. '<input' → logprob: -12.829599380493164

Token 65: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004656899254769087
    2. '()' → logprob: -5.379656791687012
    3. '_' → logprob: -10.879656791687012
    4. ' ().' → logprob: -12.254656791687012
    5. '_split' → logprob: -12.754656791687012
    6. '_line' → logprob: -12.879656791687012
    7. '(' → logprob: -13.129656791687012
    8. '_str' → logprob: -13.629656791687012
    9. '().__' → logprob: -13.754656791687012
    10. ' ()' → logprob: -14.129656791687012

Token 66: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011743901995941997
    2. 'strip' → logprob: -6.751174449920654
    3. 'rstrip' → logprob: -12.501173973083496
    4. ' split' → logprob: -15.251173973083496
    5. 'spl' → logprob: -15.501173973083496
    6. '(split' → logprob: -16.626174926757812
    7. '```' → logprob: -19.251174926757812
    8. 's' → logprob: -19.501174926757812
    9. '.split' → logprob: -19.876174926757812
    10. '_split' → logprob: -19.876174926757812

Token 67: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.315936429426074e-05
    2. '(' → logprob: -10.000082969665527
    3. '()
' → logprob: -10.375082969665527
    4. '()]' → logprob: -13.375082969665527
    5. ' ()' → logprob: -13.625082969665527
    6. '()

' → logprob: -13.625082969665527
    7. '()\' → logprob: -14.250082969665527
    8. '())' → logprob: -15.125082969665527
    9. '()
' → logprob: -15.375082969665527
    10. '()<' → logprob: -15.625082969665527

Token 68: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006850115954875946
    2. '()
' → logprob: -5.381850242614746
    3. '()' → logprob: -7.006850242614746
    4. '```' → logprob: -7.631850242614746
    5. '
' → logprob: -8.006850242614746
    6. '\' → logprob: -8.631850242614746
    7. '[]
' → logprob: -9.756850242614746
    8. ' def' → logprob: -9.756850242614746
    9. '``' → logprob: -10.131850242614746
    10. '()\' → logprob: -10.131850242614746

Token 69: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2287295162677765
    2. '_input' → logprob: -1.978729486465454
    3. ' input' → logprob: -2.728729486465454
    4. '_' → logprob: -7.353729724884033
    5. ' _' → logprob: -9.103729248046875
    6. '_int' → logprob: -9.728729248046875
    7. 'int' → logprob: -10.353729248046875
    8. ' ' → logprob: -11.228729248046875
    9. '_list' → logprob: -11.978729248046875
    10. '(input' → logprob: -12.103729248046875

Token 70: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.00015741224342491478
    2. '_list' → logprob: -9.000157356262207
    3. '_' → logprob: -10.625157356262207
    4. '_str' → logprob: -12.750157356262207
    5. '_in' → logprob: -12.875157356262207
    6. '_array' → logprob: -13.875157356262207
    7. '_float' → logprob: -13.875157356262207
    8. 'int' → logprob: -14.125157356262207
    9. '_uint' → logprob: -14.250157356262207
    10. '_INT' → logprob: -15.500157356262207

Token 71: '_map' (ID: 11824)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.017547113820910454
    2. '()' → logprob: -4.392547130584717
    3. 'list' → logprob: -5.892547130584717
    4. 's' → logprob: -6.267547130584717
    5. 'List' → logprob: -8.517546653747559
    6. '_array' → logprob: -9.892546653747559
    7. '_lst' → logprob: -10.392546653747559
    8. '```' → logprob: -11.517546653747559
    9. '_lista' → logprob: -11.767546653747559
    10. '()>' → logprob: -11.892546653747559

Token 72: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00013131031300872564
    2. '()' → logprob: -9.000131607055664
    3. '():
' → logprob: -12.500131607055664
    4. '(lambda' → logprob: -13.500131607055664
    5. ' ():' → logprob: -13.875131607055664
    6. '()>' → logprob: -14.625131607055664
    7. '();' → logprob: -15.250131607055664
    8. 'def' → logprob: -15.375131607055664
    9. '():

' → logprob: -16.250131607055664
    10. '()">' → logprob: -16.250131607055664

Token 73: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.010284007526934147
    2. '()' → logprob: -6.135283946990967
    3. ' map' → logprob: -6.135283946990967
    4. ' ' → logprob: -6.260283946990967
    5. ' lambda' → logprob: -6.260283946990967
    6. 'return' → logprob: -6.385283946990967
    7. ')' → logprob: -8.885284423828125
    8. ' ()' → logprob: -9.760284423828125
    9. ' list' → logprob: -10.760284423828125
    10. ' ' → logprob: -11.010284423828125

Token 74: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5760012269020081
    2. ' map' → logprob: -0.8260012269020081
    3. ' ' → logprob: -10.951001167297363
    4. '(map' → logprob: -11.076001167297363
    5. '	map' → logprob: -11.576001167297363
    6. '   ' → logprob: -11.951001167297363
    7. 'int' → logprob: -12.201001167297363
    8. '  ' → logprob: -12.701001167297363
    9. 'm' → logprob: -13.076001167297363
    10. '    ' → logprob: -13.951001167297363

Token 75: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0021993827540427446
    2. 'int' → logprob: -6.502199172973633
    3. '(' → logprob: -8.252199172973633
    4. '(input' → logprob: -8.502199172973633
    5. '(lambda' → logprob: -8.627199172973633
    6. '<int' → logprob: -10.627199172973633
    7. 'input' → logprob: -11.377199172973633
    8. ' (' → logprob: -12.627199172973633
    9. '=int' → logprob: -13.127199172973633
    10. '[int' → logprob: -13.127199172973633

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37509360909461975
    2. ',input' → logprob: -1.2500935792922974
    3. '(),' → logprob: -3.875093698501587
    4. 'input' → logprob: -5.875093460083008
    5. '(input' → logprob: -6.750093460083008
    6. ' ,' → logprob: -7.625093460083008
    7. ',int' → logprob: -7.750093460083008
    8. '(' → logprob: -8.375093460083008
    9. ')' → logprob: -8.500093460083008
    10. '()' → logprob: -9.500093460083008

Token 77: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22552813589572906
    2. ' input' → logprob: -1.6005281209945679
    3. ' ' → logprob: -9.4755277633667
    4. ')' → logprob: -11.4755277633667
    5. '    ' → logprob: -11.9755277633667
    6. '	input' → logprob: -12.2255277633667
    7. '   ' → logprob: -12.4755277633667
    8. '  ' → logprob: -12.6005277633667
    9. ',input' → logprob: -13.3505277633667
    10. '```' → logprob: -13.3505277633667

Token 78: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008454833878204226
    2. '())' → logprob: -7.500845432281494
    3. '()' → logprob: -8.250845909118652
    4. ')' → logprob: -11.125845909118652
    5. '().__' → logprob: -11.625845909118652
    6. '.' → logprob: -12.625845909118652
    7. ' ().' → logprob: -13.625845909118652
    8. ' ' → logprob: -14.375845909118652
    9. '()
' → logprob: -14.875845909118652
    10. '   ' → logprob: -15.000845909118652

Token 79: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004788128426298499
    2. ')' → logprob: -8.375478744506836
    3. 'strip' → logprob: -8.375478744506836
    4. 'rstrip' → logprob: -12.000478744506836
    5. 'spl' → logprob: -12.000478744506836
    6. 'read' → logprob: -12.875478744506836
    7. '_split' → logprob: -14.125478744506836
    8. ' split' → logprob: -14.250478744506836
    9. 'str' → logprob: -15.125478744506836
    10. '())' → logprob: -15.500478744506836

Token 80: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10050372779369354
    2. ')' → logprob: -2.60050368309021
    3. '()' → logprob: -3.85050368309021
    4. '()))' → logprob: -10.100503921508789
    5. '())
' → logprob: -10.600503921508789
    6. '))' → logprob: -10.725503921508789
    7. '(' → logprob: -11.725503921508789
    8. ' ())' → logprob: -11.850503921508789
    9. '()
' → logprob: -12.850503921508789
    10. '();)' → logprob: -13.350503921508789

Token 81: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.821578860282898
    2. '\' → logprob: -1.071578860282898
    3. '\n' → logprob: -2.5715789794921875
    4. '
' → logprob: -2.8215789794921875
    5. 'd' → logprob: -3.3215789794921875
    6. '```' → logprob: -4.4465789794921875
    7. '_' → logprob: -5.0715789794921875
    8. '(' → logprob: -5.3215789794921875
    9. '' → logprob: -5.8215789794921875
    10. '#' → logprob: -6.1965789794921875

Token 82: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10038598626852036
    2. 'input' → logprob: -2.350385904312134
    3. '_input' → logprob: -8.725385665893555
    4. ' ' → logprob: -11.600385665893555
    5. ' output' → logprob: -13.100385665893555
    6. ' ' → logprob: -13.850385665893555
    7. '(input' → logprob: -14.100385665893555
    8. '_' → logprob: -14.350385665893555
    9. '	input' → logprob: -14.475385665893555
    10. 'output' → logprob: -14.475385665893555

Token 83: '_str' (ID: 6182)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.31280118227005005
    2. '_str' → logprob: -1.4378011226654053
    3. '_list' → logprob: -4.187801361083984
    4. '_' → logprob: -4.312801361083984
    5. '_float' → logprob: -6.312801361083984
    6. '_array' → logprob: -7.937801361083984
    7. '_uint' → logprob: -8.937801361083984
    8. '_in' → logprob: -10.187801361083984
    9. '_string' → logprob: -10.437801361083984
    10. '_raw' → logprob: -10.437801361083984

Token 84: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0048623960465192795
    2. '_map' → logprob: -6.004862308502197
    3. '_' → logprob: -6.379862308502197
    4. '_array' → logprob: -8.504862785339355
    5. 's' → logprob: -8.754862785339355
    6. '_lst' → logprob: -8.879862785339355
    7. '()' → logprob: -9.629862785339355
    8. '_s' → logprob: -9.754862785339355
    9. '_split' → logprob: -11.379862785339355
    10. '```' → logprob: -11.754862785339355

Token 85: '_as' (ID: 25206)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008974037133157253
    2. '():' → logprob: -5.758974075317383
    3. '()>' → logprob: -6.008974075317383
    4. 's' → logprob: -7.258974075317383
    5. '_list' → logprob: -7.633974075317383
    6. '()<<' → logprob: -8.008974075317383
    7. '()">' → logprob: -8.008974075317383
    8. '()<' → logprob: -8.258974075317383
    9. '().' → logprob: -8.758974075317383
    10. '_split' → logprob: -9.008974075317383

Token 86: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.17260552942752838
    2. '_set' → logprob: -2.547605514526367
    3. '_int' → logprob: -3.047605514526367
    4. 'et' → logprob: -4.297605514526367
    5. '_str' → logprob: -5.172605514526367
    6. 't' → logprob: -5.547605514526367
    7. 'list' → logprob: -6.172605514526367
    8. '_' → logprob: -6.297605514526367
    9. 'set' → logprob: -6.297605514526367
    10. 'int' → logprob: -7.672605514526367

Token 87: '():' (ID: 9442)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021993787959218025
    2. '():' → logprob: -4.271993637084961
    3. '()>' → logprob: -6.146993637084961
    4. '()">' → logprob: -6.271993637084961
    5. '(' → logprob: -6.771993637084961
    6. '()?>' → logprob: -7.521993637084961
    7. '()<<' → logprob: -7.646993637084961
    8. '()]' → logprob: -8.521993637084961
    9. '()='' → logprob: -8.771993637084961
    10. '`()' → logprob: -8.896993637084961

Token 88: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.05959741398692131
    2. ' ' → logprob: -3.3095974922180176
    3. 'return' → logprob: -4.809597492218018
    4. ' input' → logprob: -5.059597492218018
    5. ' list' → logprob: -5.434597492218018
    6. ' ' → logprob: -6.809597492218018
    7. ' []' → logprob: -7.059597492218018
    8. 'input' → logprob: -8.30959701538086
    9. 'list' → logprob: -9.80959701538086
    10. '[]' → logprob: -9.93459701538086

Token 89: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.34029048681259155
    2. 'input' → logprob: -1.9652905464172363
    3. ' list' → logprob: -2.0902905464172363
    4. 'list' → logprob: -3.7152905464172363
    5. '[input' → logprob: -8.965290069580078
    6. ' []' → logprob: -9.090290069580078
    7. '[]' → logprob: -10.965290069580078
    8. ' ' → logprob: -10.965290069580078
    9. '(input' → logprob: -11.215290069580078
    10. ' [' → logprob: -11.465290069580078

Token 90: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002563649322837591
    2. '(' → logprob: -6.1275634765625
    3. 'input' → logprob: -8.3775634765625
    4. '(map' → logprob: -9.1275634765625
    5. '(str' → logprob: -10.5025634765625
    6. '<input' → logprob: -12.6275634765625
    7. ',input' → logprob: -12.8775634765625
    8. '()' → logprob: -13.6275634765625
    9. '=input' → logprob: -13.6275634765625
    10. '(int' → logprob: -14.2525634765625

Token 91: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01620480790734291
    2. '_str' → logprob: -4.766204833984375
    3. '()' → logprob: -4.891204833984375
    4. '())' → logprob: -10.391204833984375
    5. '(' → logprob: -12.266204833984375
    6. '().__' → logprob: -12.266204833984375
    7. 'str' → logprob: -13.141204833984375
    8. '_' → logprob: -13.266204833984375
    9. ')' → logprob: -13.891204833984375
    10. ' ().' → logprob: -14.516204833984375

Token 92: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00027933192905038595
    2. 'str' → logprob: -8.625279426574707
    3. 'strip' → logprob: -9.375279426574707
    4. ')' → logprob: -11.250279426574707
    5. ' split' → logprob: -14.375279426574707
    6. 'spl' → logprob: -14.625279426574707
    7. '(split' → logprob: -15.000279426574707
    8. 'rstrip' → logprob: -15.250279426574707
    9. '_split' → logprob: -15.875279426574707
    10. '_str' → logprob: -16.12527847290039

Token 93: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008865810930728912
    2. '()' → logprob: -4.758865833282471
    3. ')' → logprob: -8.383865356445312
    4. ' ())' → logprob: -11.633865356445312
    5. '(' → logprob: -12.258865356445312
    6. '()))' → logprob: -12.883865356445312
    7. '()]' → logprob: -13.133865356445312
    8. '())
' → logprob: -13.508865356445312
    9. '();)' → logprob: -13.758865356445312
    10. '())

' → logprob: -14.258865356445312

Token 94: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06455282121896744
    2. '
' → logprob: -4.0645527839660645
    3. '_' → logprob: -4.1895527839660645
    4. '\' → logprob: -4.5645527839660645
    5. '()' → logprob: -4.6895527839660645
    6. '()
' → logprob: -5.1895527839660645
    7. '\n' → logprob: -6.9395527839660645
    8. ' def' → logprob: -7.0645527839660645
    9. '```' → logprob: -7.3145527839660645
    10. '(' → logprob: -7.5645527839660645

Token 95: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7803695797920227
    2. 'input' → logprob: -1.155369520187378
    3. '_' → logprob: -2.030369520187378
    4. '_input' → logprob: -2.405369520187378
    5. ' _' → logprob: -5.905369758605957
    6. ' ' → logprob: -6.530369758605957
    7. ' ' → logprob: -7.155369758605957
    8. 'import' → logprob: -10.030369758605957
    9. ' def' → logprob: -10.155369758605957
    10. '(input' → logprob: -10.280369758605957

Token 96: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0012855908134952188
    2. '_str' → logprob: -7.251285552978516
    3. '_' → logprob: -7.501285552978516
    4. '_uint' → logprob: -11.626285552978516
    5. '_in' → logprob: -12.626285552978516
    6. 'int' → logprob: -12.626285552978516
    7. '<|end|>' → logprob: -13.251285552978516
    8. '__' → logprob: -14.126285552978516
    9. '_integer' → logprob: -14.251285552978516
    10. '_Int' → logprob: -14.376285552978516

Token 97: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.003596621798351407
    2. '()' → logprob: -5.753596782684326
    3. '_map' → logprob: -8.628596305847168
    4. '_' → logprob: -9.628596305847168
    5. '_array' → logprob: -10.003596305847168
    6. '_lst' → logprob: -10.378596305847168
    7. 's' → logprob: -11.128596305847168
    8. '():' → logprob: -11.378596305847168
    9. '_lista' → logprob: -11.628596305847168
    10. '_lists' → logprob: -11.753596305847168

Token 98: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.44706009957008e-05
    2. '()' → logprob: -9.50008487701416
    3. ' ():' → logprob: -11.87508487701416
    4. '():
' → logprob: -14.12508487701416
    5. '_list' → logprob: -14.87508487701416
    6. '()>' → logprob: -15.25008487701416
    7. 'as' → logprob: -15.75008487701416
    8. '()[' → logprob: -15.75008487701416
    9. '_as' → logprob: -16.000083923339844
    10. '().__' → logprob: -16.375083923339844

Token 99: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8640387058258057
    2. ' []' → logprob: -0.8640387058258057
    3. ' return' → logprob: -2.2390387058258057
    4. ' [' → logprob: -3.6140387058258057
    5. ' ' → logprob: -3.8640387058258057
    6. '[]' → logprob: -6.239038467407227
    7. 'list' → logprob: -8.364038467407227
    8. 'return' → logprob: -8.614038467407227
    9. ' ' → logprob: -9.489038467407227
    10. '[' → logprob: -9.864038467407227

Token 100: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.47408413887023926
    2. ' list' → logprob: -0.9740841388702393
    3. '[list' → logprob: -12.47408390045166
    4. ' [' → logprob: -13.72408390045166
    5. '[' → logprob: -14.34908390045166
    6. ' ' → logprob: -14.84908390045166
    7. '	list' → logprob: -14.97408390045166
    8. '(list' → logprob: -15.59908390045166
    9. '[]' → logprob: -15.59908390045166
    10. '=list' → logprob: -15.84908390045166

Token 101: '(map' (ID: 16946)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008409019559621811
    2. '(' → logprob: -5.133409023284912
    3. '(int' → logprob: -6.133409023284912
    4. '(map' → logprob: -8.133408546447754
    5. '(list' → logprob: -13.133408546447754
    6. '<int' → logprob: -13.258408546447754
    7. '<input' → logprob: -13.383408546447754
    8. 'input' → logprob: -13.508408546447754
    9. '_input' → logprob: -13.508408546447754
    10. '(inp' → logprob: -14.008408546447754

Token 102: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004178025701548904
    2. '(' → logprob: -8.500417709350586
    3. '<int' → logprob: -8.625417709350586
    4. ']int' → logprob: -11.000417709350586
    5. '[int' → logprob: -11.875417709350586
    6. '<|end|>' → logprob: -13.000417709350586
    7. 'int' → logprob: -13.375417709350586
    8. '=int' → logprob: -13.500417709350586
    9. ')(' → logprob: -13.625417709350586
    10. '```' → logprob: -13.625417709350586

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1273753046989441
    2. ',input' → logprob: -2.127375364303589
    3. '(input' → logprob: -7.87737512588501
    4. ',int' → logprob: -10.252375602722168
    5. '(' → logprob: -11.127375602722168
    6. ' ,' → logprob: -11.627375602722168
    7. '(),' → logprob: -12.002375602722168
    8. 'input' → logprob: -14.002375602722168
    9. ',list' → logprob: -14.627375602722168
    10. ',(' → logprob: -14.877375602722168

Token 104: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07892569899559021
    2. 'input' → logprob: -2.578925609588623
    3. '(input' → logprob: -10.328926086425781
    4. ',input' → logprob: -14.078926086425781
    5. ' ' → logprob: -14.453926086425781
    6. ')' → logprob: -14.828926086425781
    7. '=input' → logprob: -15.078926086425781
    8. '	input' → logprob: -15.203926086425781
    9. '[input' → logprob: -15.453926086425781
    10. '_input' → logprob: -15.578926086425781

Token 105: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005749368108808994
    2. '()))' → logprob: -5.755749225616455
    3. '()' → logprob: -6.130749225616455
    4. '())' → logprob: -8.005749702453613
    5. '_list' → logprob: -10.380749702453613
    6. '().__' → logprob: -11.630749702453613
    7. '))' → logprob: -12.005749702453613
    8. '()));' → logprob: -13.130749702453613
    9. '())))' → logprob: -13.380749702453613
    10. ')' → logprob: -13.505749702453613

Token 106: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4140441635390744e-05
    2. ')' → logprob: -12.375014305114746
    3. '(split' → logprob: -12.500014305114746
    4. 'spl' → logprob: -12.875014305114746
    5. ' split' → logprob: -13.000014305114746
    6. 'list' → logprob: -14.500014305114746
    7. 'plit' → logprob: -14.875014305114746
    8. 'strip' → logprob: -15.625014305114746
    9. '_split' → logprob: -15.875014305114746
    10. 'rstrip' → logprob: -16.50001335144043

Token 107: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.004715160466730595
    2. '))' → logprob: -5.8797149658203125
    3. '()' → logprob: -6.6297149658203125
    4. '())' → logprob: -7.6297149658203125
    5. '()))
' → logprob: -9.254714965820312
    6. '()))

' → logprob: -13.254714965820312
    7. ')' → logprob: -13.254714965820312
    8. '()));' → logprob: -14.129714965820312
    9. '()))
' → logprob: -14.754714965820312
    10. '())))' → logprob: -14.754714965820312

Token 108: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22623200714588165
    2. '
' → logprob: -1.8512320518493652
    3. 'd' → logprob: -3.4762320518493652
    4. '\' → logprob: -4.601232051849365
    5. '```' → logprob: -6.851232051849365
    6. '\n' → logprob: -6.976232051849365
    7. '
' → logprob: -7.851232051849365
    8. '' → logprob: -7.976232051849365
    9. '`
' → logprob: -8.101231575012207
    10. ' 
' → logprob: -8.351231575012207

Token 109: ' math' (ID: 13324)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.11137423664331436
    2. 'input' → logprob: -2.3613741397857666
    3. '_input' → logprob: -4.736374378204346
    4. '_' → logprob: -6.611374378204346
    5. ' ' → logprob: -7.236374378204346
    6. '_str' → logprob: -9.111373901367188
    7. '  ' → logprob: -10.611373901367188
    8. ' str' → logprob: -10.736373901367188
    9. ' ' → logprob: -10.861373901367188
    10. ' int' → logprob: -11.111373901367188

Token 110: '_l' (ID: 1478)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2549396753311157
    2. '.sqrt' → logprob: -1.6299396753311157
    3. '.ceil' → logprob: -4.504939556121826
    4. '.pi' → logprob: -5.004939556121826
    5. '.log' → logprob: -5.754939556121826
    6. '_' → logprob: -6.254939556121826
    7. '.factor' → logprob: -6.629939556121826
    8. '.pow' → logprob: -6.629939556121826
    9. '.exp' → logprob: -7.129939556121826
    10. '.isnan' → logprob: -7.129939556121826

Token 111: 'cm' (ID: 7871)
  Prédit: 'og'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'og' → logprob: -0.0017340865451842546
    2. 'cm' → logprob: -7.251734256744385
    3. 'ogar' → logprob: -8.751733779907227
    4. 'ib' → logprob: -9.001733779907227
    5. '```' → logprob: -9.251733779907227
    6. 'ogical' → logprob: -9.376733779907227
    7. '_factor' → logprob: -9.751733779907227
    8. 'n' → logprob: -10.001733779907227
    9. 'ogn' → logprob: -10.126733779907227
    10. 'ogs' → logprob: -10.376733779907227

Token 112: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015087208710610867
    2. '(a' → logprob: -4.265087127685547
    3. ' (' → logprob: -7.265087127685547
    4. '(x' → logprob: -9.640087127685547
    5. '()' → logprob: -10.390087127685547
    6. 'def' → logprob: -10.640087127685547
    7. '_' → logprob: -11.140087127685547
    8. ' ' → logprob: -11.390087127685547
    9. '(n' → logprob: -11.640087127685547
    10. '(
' → logprob: -11.640087127685547

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002192137064412236
    2. ',b' → logprob: -6.25219202041626
    3. ' ,' → logprob: -8.377192497253418
    4. ',a' → logprob: -10.752192497253418
    5. ',n' → logprob: -13.002192497253418
    6. ',k' → logprob: -13.627192497253418
    7. '_,' → logprob: -14.002192497253418
    8. ' ' → logprob: -14.252192497253418
    9. ',j' → logprob: -14.252192497253418
    10. ',m' → logprob: -14.377192497253418

Token 114: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1128472238779068
    2. ' b' → logprob: -2.237847328186035
    3. ' ' → logprob: -11.112847328186035
    4. '	b' → logprob: -12.987847328186035
    5. '  ' → logprob: -13.112847328186035
    6. '   ' → logprob: -13.487847328186035
    7. '    ' → logprob: -13.737847328186035
    8. ' ' → logprob: -13.987847328186035
    9. ',b' → logprob: -14.112847328186035
    10. ')b' → logprob: -15.300347328186035

Token 115: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00011749001714633778
    2. ' ):' → logprob: -10.000117301940918
    3. '):
' → logprob: -10.125117301940918
    4. ')' → logprob: -10.500117301940918
    5. ',' → logprob: -12.875117301940918
    6. '   ' → logprob: -14.875117301940918
    7. ':' → logprob: -15.125117301940918
    8. '):
' → logprob: -15.125117301940918
    9. ' ' → logprob: -15.250117301940918
    10. '=' → logprob: -16.000118255615234

Token 116: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.02219085581600666
    2. ' ' → logprob: -4.022191047668457
    3. '	return' → logprob: -6.397191047668457
    4. 'return' → logprob: -6.522191047668457
    5. '    ' → logprob: -8.272191047668457
    6. ' ' → logprob: -8.397191047668457
    7. '   ' → logprob: -9.272191047668457
    8. ' 
' → logprob: -9.522191047668457
    9. ' math' → logprob: -9.772191047668457
    10. ':return' → logprob: -9.897191047668457

Token 117: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3802005350589752
    2. ' a' → logprob: -2.0052006244659424
    3. ' abs' → logprob: -2.1302006244659424
    4. 'abs' → logprob: -3.1302006244659424
    5. ' (' → logprob: -4.755200386047363
    6. '(a' → logprob: -4.755200386047363
    7. '(abs' → logprob: -6.505200386047363
    8. 'math' → logprob: -8.630200386047363
    9. ' math' → logprob: -9.255200386047363
    10. ' ' → logprob: -9.880200386047363

Token 118: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2679259181022644
    2. ' *' → logprob: -1.6429259777069092
    3. '*b' → logprob: -3.267925977706909
    4. '*l' → logprob: -6.39292573928833
    5. ' if' → logprob: -6.89292573928833
    6. 'if' → logprob: -8.017926216125488
    7. ' ' → logprob: -8.142926216125488
    8. '*a' → logprob: -9.767926216125488
    9. '%b' → logprob: -10.142926216125488
    10. '%' → logprob: -10.267926216125488

Token 119: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015048631466925144
    2. ' b' → logprob: -6.501504898071289
    3. '(b' → logprob: -14.001504898071289
    4. ' (' → logprob: -14.126504898071289
    5. '//' → logprob: -14.501504898071289
    6. ' ' → logprob: -15.626504898071289
    7. '```' → logprob: -16.25150489807129
    8. '(' → logprob: -16.50150489807129
    9. ' //' → logprob: -17.00150489807129
    10. '	b' → logprob: -17.12650489807129

Token 120: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1002550944685936
    2. '//' → logprob: -2.350255012512207
    3. '#' → logprob: -10.225255012512207
    4. ' ' → logprob: -12.350255012512207
    5. ' #' → logprob: -12.475255012512207
    6. ' ' → logprob: -13.600255012512207
    7. '```' → logprob: -13.850255012512207
    8. ' //(' → logprob: -14.475255012512207
    9. ')' → logprob: -15.975255012512207
    10. '/' → logprob: -16.100255966186523

Token 121: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.004078878089785576
    2. ' math' → logprob: -5.5040788650512695
    3. '(math' → logprob: -14.50407886505127
    4. '.math' → logprob: -17.629079818725586
    5. 'Math' → logprob: -19.004079818725586
    6. '_math' → logprob: -19.254079818725586
    7. 'import' → logprob: -19.379079818725586
    8. ' ' → logprob: -20.379079818725586
    9. 'g' → logprob: -20.504079818725586
    10. '/math' → logprob: -20.754079818725586

Token 122: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.002649974776431918
    2. '.' → logprob: -6.502649784088135
    3. '.l' → logprob: -6.877649784088135
    4. 'g' → logprob: -10.252650260925293
    5. '_.' → logprob: -10.752650260925293
    6. '_g' → logprob: -11.377650260925293
    7. '.sqrt' → logprob: -11.627650260925293
    8. '._' → logprob: -11.752650260925293
    9. ' .' → logprob: -11.752650260925293
    10. '.ceil' → logprob: -12.877650260925293

Token 123: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -5.848420551046729e-05
    2. 'math' → logprob: -11.1250581741333
    3. '```' → logprob: -11.3750581741333
    4. 'cm' → logprob: -11.5000581741333
    5. 'g' → logprob: -11.6250581741333
    6. 'c' → logprob: -11.6250581741333
    7. 'cdn' → logprob: -13.8750581741333
    8. 'cf' → logprob: -14.2500581741333
    9. 'cmath' → logprob: -14.3750581741333
    10. 'CD' → logprob: -14.3750581741333

Token 124: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0067208209075033665
    2. '(' → logprob: -5.006721019744873
    3. '(b' → logprob: -12.756720542907715
    4. ' (' → logprob: -13.381720542907715
    5. '(
' → logprob: -14.006720542907715
    6. 'a' → logprob: -15.756720542907715
    7. '(abs' → logprob: -17.25672149658203
    8. '(A' → logprob: -17.88172149658203
    9. '((' → logprob: -17.88172149658203
    10. '<|end|>' → logprob: -17.88172149658203

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015490238554775715
    2. '(a' → logprob: -4.6404900550842285
    3. '(' → logprob: -6.1404900550842285
    4. ',b' → logprob: -6.3904900550842285
    5. 'b' → logprob: -7.2654900550842285
    6. ')' → logprob: -7.8904900550842285
    7. '(b' → logprob: -8.015490531921387
    8. 'a' → logprob: -8.515490531921387
    9. ' ,' → logprob: -8.765490531921387
    10. ',a' → logprob: -9.140490531921387

Token 126: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1602262556552887
    2. ' b' → logprob: -1.9102262258529663
    3. ' ' → logprob: -13.910225868225098
    4. 'a' → logprob: -14.660225868225098
    5. ')b' → logprob: -15.160225868225098
    6. '	b' → logprob: -15.660225868225098
    7. '  ' → logprob: -16.160226821899414
    8. '    ' → logprob: -16.285226821899414
    9. ' a' → logprob: -16.785226821899414
    10. '   ' → logprob: -17.160226821899414

Token 127: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.625000953674316
    4. '))' → logprob: -17.25
    5. '),' → logprob: -18.125
    6. ')a' → logprob: -18.125
    7. ')`' → logprob: -18.25
    8. ')return' → logprob: -18.375
    9. '}' → logprob: -18.625
    10. ')}' → logprob: -18.75

Token 128: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3393450081348419
    2. 'd' → logprob: -1.4643449783325195
    3. '(' → logprob: -3.2143449783325195
    4. '
' → logprob: -5.0893449783325195
    5. '\' → logprob: -5.7143449783325195
    6. '#' → logprob: -6.5893449783325195
    7. 'a' → logprob: -6.7143449783325195
    8. '(
' → logprob: -7.0893449783325195
    9. '_' → logprob: -7.4643449783325195
    10. 'D' → logprob: -7.7143449783325195

Token 129: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11339942365884781
    2. '.exit' → logprob: -2.3633995056152344
    3. '.stdout' → logprob: -4.738399505615234
    4. '.argv' → logprob: -6.238399505615234
    5. '.stdin' → logprob: -6.363399505615234
    6. '.stderr' → logprob: -7.863399505615234
    7. '.setdefault' → logprob: -8.863399505615234
    8. '.path' → logprob: -10.238399505615234
    9. '.ex' → logprob: -10.988399505615234
    10. '.version' → logprob: -10.988399505615234

Token 130: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -5.676981345459353e-06
    2. 're' → logprob: -12.750005722045898
    3. 'set' → logprob: -14.000005722045898
    4. 'limit' → logprob: -14.625005722045898
    5. 'switch' → logprob: -15.250005722045898
    6. '_rec' → logprob: -15.500005722045898
    7. 'stdin' → logprob: -15.750005722045898
    8. 'r' → logprob: -15.875005722045898
    9. 'execution' → logprob: -16.0000057220459
    10. 'e' → logprob: -16.5000057220459

Token 131: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0005317062605172396
    2. 'limit' → logprob: -8.250532150268555
    3. 'ursive' → logprob: -8.500532150268555
    4. 'urs' → logprob: -9.875532150268555
    5. '_limit' → logprob: -11.625532150268555
    6. 'ursor' → logprob: -13.250532150268555
    7. 'ur' → logprob: -13.875532150268555
    8. 'usion' → logprob: -14.000532150268555
    9. 'ursively' → logprob: -14.000532150268555
    10. 'usr' → logprob: -15.250532150268555

Token 132: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.700132997939363e-05
    2. '_limit' → logprob: -11.000017166137695
    3. ' limit' → logprob: -15.875017166137695
    4. 'lim' → logprob: -16.750017166137695
    5. 'depth' → logprob: -17.000017166137695
    6. '-limit' → logprob: -17.250017166137695
    7. '.limit' → logprob: -18.875017166137695
    8. '-' → logprob: -19.750017166137695
    9. 'Limit' → logprob: -19.750017166137695
    10. '(limit' → logprob: -20.000017166137695

Token 133: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. '(
' → logprob: -14.750000953674316
    3. ' (' → logprob: -15.500000953674316
    4. '((' → logprob: -16.125
    5. '100' → logprob: -16.5
    6. '(int' → logprob: -18.25
    7. '()' → logprob: -18.375
    8. '(

' → logprob: -19.0
    9. ' ' → logprob: -19.125
    10. '250' → logprob: -19.375

Token 134: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0562283881008625
    2. '100' → logprob: -2.9312283992767334
    3. '300' → logprob: -7.306228160858154
    4. '200' → logprob: -8.181228637695312
    5. '500' → logprob: -8.556228637695312
    6. '400' → logprob: -9.806228637695312
    7. ' ' → logprob: -10.056228637695312
    8. '999' → logprob: -10.181228637695312
    9. '250' → logprob: -10.431228637695312
    10. '410' → logprob: -12.181228637695312

Token 135: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.39456695318222046
    2. '7' → logprob: -1.1445670127868652
    3. '6' → logprob: -5.269567012786865
    4. '8' → logprob: -6.144567012786865
    5. '9' → logprob: -8.644566535949707
    6. '07' → logprob: -9.519566535949707
    7. '00' → logprob: -10.269566535949707
    8. '000' → logprob: -10.394566535949707
    9. '0' → logprob: -10.769566535949707
    10. '*' → logprob: -10.894566535949707

Token 136: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.01115570031106472
    2. '9' → logprob: -4.511155605316162
    3. '8' → logprob: -9.13615608215332
    4. '**' → logprob: -17.01115608215332
    5. '6' → logprob: -17.26115608215332
    6. '```' → logprob: -17.76115608215332
    7. '+' → logprob: -19.01115608215332
    8. '７' → logprob: -19.88615608215332
    9. '

' → logprob: -20.01115608215332
    10. '​' → logprob: -21.13615608215332

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.125001907348633
    3. ')
' → logprob: -15.750001907348633
    4. ')

' → logprob: -19.250001907348633
    5. '))' → logprob: -19.750001907348633
    6. ')`' → logprob: -19.750001907348633
    7. '),' → logprob: -20.000001907348633
    8. ')#' → logprob: -20.125001907348633
    9. '}' → logprob: -21.000001907348633
    10. ')**' → logprob: -21.125001907348633

Token 138: 'CONST' (ID: 168319)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053881868720054626
    2. '

' → logprob: -3.053881883621216
    3. '
' → logprob: -6.303881645202637
    4. '\n' → logprob: -6.553881645202637
    5. 'def' → logprob: -7.178881645202637
    6. 'class' → logprob: -8.178881645202637
    7. '\' → logprob: -8.303881645202637
    8. '' → logprob: -8.928881645202637
    9. '#' → logprob: -9.303881645202637
    10. '```' → logprob: -9.553881645202637

Token 139: '_MOD' (ID: 45275)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0753858089447021
    2. '_MAX' → logprob: -1.3253858089447021
    3. '_T' → logprob: -2.200385808944702
    4. '_PI' → logprob: -2.700385808944702
    5. 'ANT' → logprob: -2.950385808944702
    6. 'T' → logprob: -3.325385808944702
    7. '_VAL' → logprob: -3.700385808944702
    8. '_A' → logprob: -3.825385808944702
    9. 'ANTS' → logprob: -4.200386047363281
    10. '=' → logprob: -4.575386047363281

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4744860827922821
    2. '=' → logprob: -0.9744861125946045
    3. 'ULO' → logprob: -8.224486351013184
    4. 'UL' → logprob: -10.474486351013184
    5. '_' → logprob: -10.599486351013184
    6. 'ULAR' → logprob: -11.599486351013184
    7. '＝' → logprob: -11.599486351013184
    8. 'ERATOR' → logprob: -11.599486351013184
    9. '10' → logprob: -11.974486351013184
    10. '1' → logprob: -12.099486351013184

Token 141: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5282208323478699
    2. ' ' → logprob: -1.2782208919525146
    3. '100' → logprob: -2.0282208919525146
    4. '998' → logprob: -8.778221130371094
    5. '1' → logprob: -9.403221130371094
    6. 'int' → logprob: -12.903221130371094
    7. '999' → logprob: -13.028221130371094
    8. '(' → logprob: -14.153221130371094
    9. '2' → logprob: -14.403221130371094
    10. '```' → logprob: -14.653221130371094

Token 142: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.16620498895645142
    2. '10' → logprob: -1.9162049293518066
    3. '998' → logprob: -5.166204929351807
    4. '1' → logprob: -8.291205406188965
    5. 'int' → logprob: -13.291205406188965
    6. ' ' → logprob: -13.416205406188965
    7. '999' → logprob: -13.791205406188965
    8. '(' → logprob: -14.166205406188965
    9. '```' → logprob: -14.541205406188965
    10. '123' → logprob: -15.416205406188965

Token 143: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6019694209098816
    2. '9' → logprob: -0.9769694209098816
    3. '09' → logprob: -2.6019694805145264
    4. '000' → logprob: -6.726969242095947
    5. '009' → logprob: -7.851969242095947
    6. '00' → logprob: -9.851969718933105
    7. '```' → logprob: -10.726969718933105
    8. '*' → logprob: -12.226969718933105
    9. '^' → logprob: -12.476969718933105
    10. ' ' → logprob: -12.726969718933105

Token 144: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.696889623621246e-06
    2. '09' → logprob: -12.87500286102295
    3. '+' → logprob: -17.625001907348633
    4. '```' → logprob: -19.625001907348633
    5. '９' → logprob: -19.750001907348633
    6. '10' → logprob: -20.125001907348633
    7. ' ' → logprob: -20.875001907348633
    8. '009' → logprob: -21.125001907348633
    9. '18' → logprob: -21.625001907348633
    10. '19' → logprob: -22.250001907348633

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002558561391197145
    2. ' +' → logprob: -8.500255584716797
    3. '7' → logprob: -9.875255584716797
    4. '+
' → logprob: -14.625255584716797
    5. '＋' → logprob: -14.875255584716797
    6. 'plus' → logprob: -17.625255584716797
    7. ' plus' → logprob: -18.000255584716797
    8. ' ' → logprob: -18.000255584716797
    9. '```' → logprob: -18.875255584716797
    10. '
' → logprob: -19.375255584716797

Token 146: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -16.75
    3. ' ' → logprob: -18.625
    4. '```' → logprob: -19.125
    5. '07' → logprob: -19.875
    6. '

' → logprob: -20.875
    7. '' → logprob: -21.0
    8. '   ' → logprob: -21.0
    9. '７' → logprob: -21.25
    10. '9' → logprob: -21.25

Token 147: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '```' → logprob: -19.75
    3. '07' → logprob: -20.625
    4. '+' → logprob: -20.75
    5. '７' → logprob: -21.125
    6. ' ' → logprob: -21.25
    7. '

' → logprob: -21.875
    8. '   ' → logprob: -22.625
    9. '۷' → logprob: -23.0
    10. '' → logprob: -23.0

Token 148: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18498991429805756
    2. '

' → logprob: -1.8099899291992188
    3. 'def' → logprob: -6.309989929199219
    4. '\n' → logprob: -6.684989929199219
    5. '
' → logprob: -7.184989929199219
    6. '' → logprob: -7.559989929199219
    7. '<|end|>' → logprob: -8.184989929199219
    8. '```' → logprob: -8.309989929199219
    9. ' 
' → logprob: -9.809989929199219
    10. '


' → logprob: -9.934989929199219

Token 149: 'var' (ID: 1465)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10064299404621124
    2. 'd' → logprob: -2.3506429195404053
    3. '#' → logprob: -8.850643157958984
    4. 'n' → logprob: -8.975643157958984
    5. '\' → logprob: -9.350643157958984
    6. 'class' → logprob: -10.725643157958984
    7. 'a' → logprob: -10.975643157958984
    8. '
' → logprob: -11.725643157958984
    9. 'de' → logprob: -11.725643157958984
    10. ' 
' → logprob: -12.600643157958984

Token 150: '_n' (ID: 2170)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13709232211112976
    2. 'iable' → logprob: -3.262092351913452
    3. 's' → logprob: -3.512092351913452
    4. ' =' → logprob: -4.012092113494873
    5. '1' → logprob: -5.012092113494873
    6. '=' → logprob: -5.137092113494873
    7. '_=' → logprob: -5.137092113494873
    8. '_a' → logprob: -5.762092113494873
    9. '_list' → logprob: -5.762092113494873
    10. '_int' → logprob: -5.762092113494873

Token 151: '_value' (ID: 6734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16140587627887726
    2. ' =' → logprob: -1.9114059209823608
    3. ' ' → logprob: -7.91140604019165
    4. ',' → logprob: -8.161405563354492
    5. '_' → logprob: -8.286405563354492
    6. 'ame' → logprob: -9.536405563354492
    7. '=int' → logprob: -9.911405563354492
    8. ')' → logprob: -10.286405563354492
    9. 'x' → logprob: -10.536405563354492
    10. '  ' → logprob: -10.911405563354492

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6365895867347717
    2. ' =' → logprob: -0.7615895867347717
    3. 's' → logprob: -5.636589527130127
    4. '_' → logprob: -8.636590003967285
    5. ',' → logprob: -8.761590003967285
    6. ' ' → logprob: -9.886590003967285
    7. '  ' → logprob: -11.386590003967285
    8. ')' → logprob: -12.761590003967285
    9. '=int' → logprob: -12.886590003967285
    10. 'x' → logprob: -13.011590003967285

Token 153: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06685205549001694
    2. 'int' → logprob: -3.31685209274292
    3. ' input' → logprob: -3.94185209274292
    4. '10' → logprob: -5.06685209274292
    5. '0' → logprob: -6.69185209274292
    6. ' int' → logprob: -7.06685209274292
    7. ' ' → logprob: -8.441851615905762
    8. '42' → logprob: -8.941851615905762
    9. '5' → logprob: -9.566851615905762
    10. '100' → logprob: -10.191851615905762

Token 154: '_int' (ID: 12285)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4832494854927063
    2. '_' → logprob: -1.6082494258880615
    3. '_int' → logprob: -1.7332494258880615
    4. '_str' → logprob: -5.733249664306641
    5. '(' → logprob: -6.358249664306641
    6. 'int' → logprob: -7.483249664306641
    7. '```' → logprob: -8.48324966430664
    8. '()
' → logprob: -9.48324966430664
    9. ' ()' → logprob: -9.85824966430664
    10. ' ' → logprob: -10.23324966430664

Token 155: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0028364919126033783
    2. '(' → logprob: -5.87783670425415
    3. '()
' → logprob: -10.877836227416992
    4. ' ()' → logprob: -12.627836227416992
    5. '()`' → logprob: -13.252836227416992
    6. '()

' → logprob: -13.502836227416992
    7. '())' → logprob: -13.752836227416992
    8. '()]' → logprob: -13.752836227416992
    9. '();' → logprob: -14.127836227416992
    10. '(
' → logprob: -14.502836227416992

Token 156: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: ' var' (ID: 972)
  Prédit: ' var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' var' → logprob: -0.004842103458940983
    2. 'var' → logprob: -5.379842281341553
    3. ' ' → logprob: -9.129841804504395
    4. ' not' → logprob: -9.379841804504395
    5. ' ' → logprob: -11.254841804504395
    6. '_var' → logprob: -12.004841804504395
    7. '  ' → logprob: -13.004841804504395
    8. '_' → logprob: -13.129841804504395
    9. ' _' → logprob: -13.754841804504395
    10. 'not' → logprob: -14.129841804504395

Token 158: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0005633997498080134
    2. '_' → logprob: -7.500563621520996
    3. ' _' → logprob: -13.125563621520996
    4. '__' → logprob: -13.250563621520996
    5. '```' → logprob: -13.500563621520996
    6. '_s' → logprob: -14.625563621520996
    7. '_i' → logprob: -14.875563621520996
    8. '_x' → logprob: -15.125563621520996
    9. '_str' → logprob: -15.375563621520996
    10. '_value' → logprob: -15.500563621520996

Token 159: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4986476004123688
    2. '_value' → logprob: -0.9986475706100464
    3. '>' → logprob: -4.498647689819336
    4. '%' → logprob: -5.373647689819336
    5. ' >' → logprob: -5.748647689819336
    6. '<' → logprob: -6.498647689819336
    7. ' <=' → logprob: -7.373647689819336
    8. ' ==' → logprob: -7.748647689819336
    9. '>=' → logprob: -7.748647689819336
    10. ' <' → logprob: -7.873647689819336

Token 160: ' <' (ID: 464)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.9866260886192322
    2. ' >' → logprob: -1.111626148223877
    3. ' ==' → logprob: -1.986626148223877
    4. '%' → logprob: -2.236626148223877
    5. ' <=' → logprob: -3.861626148223877
    6. ' <' → logprob: -4.361626148223877
    7. '>' → logprob: -4.611626148223877
    8. '==' → logprob: -5.361626148223877
    9. ' >=' → logprob: -5.861626148223877
    10. ' ' → logprob: -6.361626148223877

Token 161: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06499450653791428
    2. '0' → logprob: -3.4399945735931396
    3. '2' → logprob: -4.5649943351745605
    4. '=' → logprob: -4.8149943351745605
    5. '1' → logprob: -5.1899943351745605
    6. '10' → logprob: -6.0649943351745605
    7. '3' → logprob: -6.4399943351745605
    8. '5' → logprob: -7.1899943351745605
    9. 'var' → logprob: -7.9399943351745605
    10. '50' → logprob: -8.064994812011719

Token 162: '100' (ID: 1353)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7130153179168701
    2. '0' → logprob: -1.2130153179168701
    3. '1' → logprob: -2.46301531791687
    4. '10' → logprob: -3.33801531791687
    5. ' ' → logprob: -3.33801531791687
    6. '3' → logprob: -3.46301531791687
    7. '=' → logprob: -5.088015556335449
    8. '5' → logprob: -5.213015556335449
    9. '100' → logprob: -5.463015556335449
    10. 'var' → logprob: -5.588015556335449

Token 163: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012500112876296043
    2. '0' → logprob: -4.762500286102295
    3. ':
' → logprob: -5.637500286102295
    4. ' :' → logprob: -8.512499809265137
    5. '():' → logprob: -10.012499809265137
    6. '):' → logprob: -11.012499809265137
    7. ':return' → logprob: -11.262499809265137
    8. ' or' → logprob: -11.762499809265137
    9. '_:' → logprob: -12.512499809265137
    10. ' :
' → logprob: -12.637499809265137

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020377879263833165
    2. ':
' → logprob: -9.000204086303711
    3. ' :' → logprob: -9.750204086303711
    4. ':return' → logprob: -11.750204086303711
    5. '0' → logprob: -12.000204086303711
    6. '):' → logprob: -13.125204086303711
    7. ' and' → logprob: -14.000204086303711
    8. '():' → logprob: -14.000204086303711
    9. ':def' → logprob: -14.125204086303711
    10. ' or' → logprob: -14.250204086303711

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2320476919412613
    2. ':' → logprob: -1.6070476770401
    3. ' print' → logprob: -6.3570475578308105
    4. ':
' → logprob: -6.4820475578308105
    5. 'print' → logprob: -6.6070475578308105
    6. '    
' → logprob: -7.6070475578308105
    7. ' :' → logprob: -7.8570475578308105
    8. '.' → logprob: -8.357048034667969
    9. '	print' → logprob: -8.357048034667969
    10. ',' → logprob: -8.982048034667969

Token 166: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4893292188644409
    2. 'print' (adapté à ' print') → logprob: -0.9893292188644409
    3. '   ' → logprob: -4.3643293380737305
    4. ' ' → logprob: -6.9893293380737305
    5. ' for' → logprob: -7.8643293380737305
    6. '    ' → logprob: -8.36432933807373
    7. ' var' → logprob: -8.73932933807373
    8. 'var' → logprob: -9.23932933807373
    9. 'pr' → logprob: -9.36432933807373
    10. 'for' → logprob: -9.48932933807373

Token 167: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.32478979229927063
    2. '(' → logprob: -1.8247897624969482
    3. '(var' → logprob: -2.4497897624969482
    4. '('' → logprob: -3.5747897624969482
    5. 'var' → logprob: -7.324790000915527
    6. '()' → logprob: -7.699790000915527
    7. '(f' → logprob: -8.574790000915527
    8. '("")' → logprob: -9.449790000915527
    9. '("("' → logprob: -9.699790000915527
    10. '"' → logprob: -10.074790000915527

Token 168: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.6226410269737244
    2. 'var' → logprob: -1.4976410865783691
    3. 'Yes' → logprob: -2.247641086578369
    4. '"' → logprob: -3.497641086578369
    5. 'No' → logprob: -3.747641086578369
    6. ''' → logprob: -4.122641086578369
    7. 'Hello' → logprob: -4.372641086578369
    8. 'YES' → logprob: -5.122641086578369
    9. '999' → logprob: -5.372641086578369
    10. 'abc' → logprob: -5.622641086578369

Token 169: '')
' (ID: 2515)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8198709487915039
    2. '')' → logprob: -1.819870948791504
    3. '000' → logprob: -2.194870948791504
    4. '999' → logprob: -2.194870948791504
    5. '0' → logprob: -2.819870948791504
    6. '123' → logprob: -4.194870948791504
    7. ''' → logprob: -4.194870948791504
    8. '001' → logprob: -4.194870948791504
    9. ')' → logprob: -4.194870948791504
    10. '<|end|>' → logprob: -4.569870948791504

Token 170: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.22852018475532532
    2. 'elif' → logprob: -1.728520154953003
    3. '_else' → logprob: -4.853520393371582
    4. ' else' → logprob: -4.853520393371582
    5. '_' → logprob: -5.103520393371582
    6. '<|end|>' → logprob: -5.978520393371582
    7. ' elif' → logprob: -6.978520393371582
    8. '_EL' → logprob: -7.603520393371582
    9. '```' → logprob: -8.603520393371582
    10. '123' → logprob: -9.728520393371582

Token 171: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010144412517547607
    2. ':
' → logprob: -4.635144233703613
    3. '   ' → logprob: -8.010144233703613
    4. ' :' → logprob: -10.635144233703613
    5. 'if' → logprob: -11.385144233703613
    6. ' if' → logprob: -12.010144233703613
    7. '    ' → logprob: -12.885144233703613
    8. ' :
' → logprob: -13.010144233703613
    9. '<|end|>' → logprob: -13.760144233703613
    10. ':
' → logprob: -13.885144233703613

Token 172: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09712550044059753
    2. '   ' → logprob: -2.59712553024292
    3. ''D' → logprob: -4.34712553024292
    4. 'print' → logprob: -5.34712553024292
    5. '('' → logprob: -9.097125053405762
    6. '  ' → logprob: -9.222125053405762
    7. ''A' → logprob: -10.222125053405762
    8. '       ' → logprob: -10.847125053405762
    9. ''S' → logprob: -11.222125053405762
    10. 'def' → logprob: -11.222125053405762

Token 173: ' print' (ID: 2123)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05664030835032463
    2. 'print' (adapté à ' print') → logprob: -3.181640386581421
    3. ''D' → logprob: -4.306640148162842
    4. ''d' → logprob: -11.556640625
    5. '   ' → logprob: -11.556640625
    6. '"' → logprob: -11.806640625
    7. ''S' → logprob: -11.931640625
    8. ' print' → logprob: -12.056640625
    9. '('' → logprob: -12.306640625
    10. ''ab' → logprob: -12.556640625

Token 174: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.014547046273946762
    2. '(' → logprob: -4.264546871185303
    3. '("' → logprob: -7.889546871185303
    4. ' ('' → logprob: -12.764547348022461
    5. '(('' → logprob: -13.514547348022461
    6. '("'' → logprob: -14.264547348022461
    7. '('(' → logprob: -14.264547348022461
    8. ''' → logprob: -14.514547348022461
    9. '('"' → logprob: -14.639547348022461
    10. ' (' → logprob: -14.639547348022461

Token 175: 'ABD' (ID: 193992)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0028373266104608774
    2. ''D' → logprob: -6.002837181091309
    3. ''S' → logprob: -8.752837181091309
    4. ''M' → logprob: -9.502837181091309
    5. ''A' → logprob: -9.752837181091309
    6. ''T' → logprob: -11.127837181091309
    7. ''US' → logprob: -11.377837181091309
    8. ''\' → logprob: -11.502837181091309
    9. ''GC' → logprob: -11.877837181091309
    10. '"' → logprob: -12.002837181091309

Token 176: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00012284684635233134
    2. ')' → logprob: -9.125123023986816
    3. '')
' → logprob: -11.375123023986816
    4. ''' → logprob: -13.750123023986816
    5. '")' → logprob: -15.250123023986816
    6. '')

' → logprob: -16.0001220703125
    7. '')
' → logprob: -16.1251220703125
    8. 'C' → logprob: -16.2501220703125
    9. 'D' → logprob: -16.3751220703125
    10. '('' → logprob: -16.3751220703125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 174
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 146
Précision stricte (1ère position): 43.68%
Précision adaptée (1ère position): 43.68%
Précision (top 10): 83.91%
================================================================================
