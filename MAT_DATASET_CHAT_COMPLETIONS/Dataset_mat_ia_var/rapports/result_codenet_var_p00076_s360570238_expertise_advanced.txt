================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import pi, cos, sin, atan2

def compute_final_position(n: int) -> tuple[float, float]:
    ang, x, y = 0.0, 1.0, 0.0
    for _ in range(n-1):
        ang += pi/2
        x, y = x + cos(ang), y + sin(ang)
        ang = atan2(y, x)
    return round(x, 2), round(y, 2)

def main():
    while True:
        if (val := input()) == '-1':
            break
        n = int(val)
        x, y = compute_final_position(n)
        print(f"{x:.2f}\n{y:.2f}")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' pi' (ID: 6404)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6412628889083862
    2. 'sqrt' → logprob: -1.1412628889083862
    3. 'pi' → logprob: -2.016263008117676
    4. 'sin' → logprob: -4.766263008117676
    5. 'cos' → logprob: -5.766263008117676
    6. 'pow' → logprob: -6.141263008117676
    7. '.sqrt' → logprob: -6.516263008117676
    8. '*pi' → logprob: -7.391263008117676
    9. ' sqrt' → logprob: -7.516263008117676
    10. 'prod' → logprob: -7.641263008117676

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6152876615524292
    2. '<|end|>' → logprob: -1.3652876615524292
    3. 'as' → logprob: -2.1152877807617188
    4. 'import' → logprob: -2.8652877807617188
    5. 'print' → logprob: -4.740287780761719
    6. '<|end|>' → logprob: -5.365287780761719
    7. ' as' → logprob: -5.865287780761719
    8. '#' → logprob: -6.240287780761719
    9. '.' → logprob: -6.490287780761719
    10. ';' → logprob: -6.740287780761719

Token 5: ' cos' (ID: 8974)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.030366575345396996
    2. 'sqrt' → logprob: -3.5303666591644287
    3. ' e' → logprob: -8.780366897583008
    4. 'tau' → logprob: -9.155366897583008
    5. 'sin' → logprob: -9.155366897583008
    6. 'exp' → logprob: -9.655366897583008
    7. ' sqrt' → logprob: -10.155366897583008
    8. 'cos' → logprob: -10.155366897583008
    9. 'E' → logprob: -10.655366897583008
    10. 'inf' → logprob: -11.030366897583008

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15705320239067078
    2. 'import' → logprob: -2.157053232192993
    3. 'as' → logprob: -3.657053232192993
    4. 'from' → logprob: -6.157052993774414
    5. 'def' → logprob: -6.532052993774414
    6. 'cos' → logprob: -9.782052993774414
    7. '#' → logprob: -10.032052993774414
    8. 'sin' → logprob: -10.532052993774414
    9. ' as' → logprob: -10.782052993774414
    10. ')' → logprob: -11.532052993774414

Token 7: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -0.00023369524569716305
    2. ' sin' → logprob: -8.37523365020752
    3. 'sqrt' → logprob: -13.00023365020752
    4. 'tan' → logprob: -14.50023365020752
    5. '.sin' → logprob: -15.25023365020752
    6. 'Sin' → logprob: -18.250234603881836
    7. 'SIN' → logprob: -18.500234603881836
    8. 'exp' → logprob: -18.750234603881836
    9. '*sin' → logprob: -18.750234603881836
    10. 'asin' → logprob: -18.875234603881836

Token 8: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5585269927978516
    2. 'import' → logprob: -1.1835269927978516
    3. ',' → logprob: -2.5585269927978516
    4. '#' → logprob: -3.6835269927978516
    5. 'from' → logprob: -4.933526992797852
    6. 'as' → logprob: -5.558526992797852
    7. ':' → logprob: -6.058526992797852
    8. 'class' → logprob: -6.308526992797852
    9. 'print' → logprob: -7.183526992797852
    10. ';' → logprob: -7.683526992797852

Token 9: ' atan' (ID: 70327)
  Prédit: 'tan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tan' → logprob: -0.1642477661371231
    2. ' tan' → logprob: -1.914247751235962
    3. 'sqrt' → logprob: -5.789247989654541
    4. ' sqrt' → logprob: -7.414247989654541
    5. 'log' → logprob: -8.789247512817383
    6. 'exp' → logprob: -9.414247512817383
    7. 'atan' → logprob: -10.039247512817383
    8. 'tau' → logprob: -10.914247512817383
    9. ' exp' → logprob: -11.164247512817383
    10. 't' → logprob: -11.914247512817383

Token 10: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34681057929992676
    2. 'import' → logprob: -1.4718105792999268
    3. 'def' → logprob: -2.9718105792999268
    4. 'from' → logprob: -4.846810340881348
    5. 'as' → logprob: -6.221810340881348
    6. '#' → logprob: -6.221810340881348
    7. 'class' → logprob: -9.096810340881348
    8. 'atan' → logprob: -10.471810340881348
    9. ';' → logprob: -10.721810340881348
    10. ':' → logprob: -10.971810340881348

Token 11: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0525914430618286
    2. 'def' → logprob: -1.0525914430618286
    3. ',' → logprob: -1.9275914430618286
    4. 'as' → logprob: -2.552591323852539
    5. 'from' → logprob: -3.177591323852539
    6. '#' → logprob: -3.427591323852539
    7. 'class' → logprob: -5.802591323852539
    8. '```' → logprob: -7.927591323852539
    9. ' as' → logprob: -8.927591323852539
    10. '<|end|>' → logprob: -9.177591323852539

Token 12: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15331491827964783
    2. 'import' → logprob: -2.5283148288726807
    3. ',' → logprob: -3.5283148288726807
    4. 'from' → logprob: -3.5283148288726807
    5. '#' → logprob: -5.90331506729126
    6. 'class' → logprob: -7.27831506729126
    7. 'as' → logprob: -9.528314590454102
    8. 'print' → logprob: -10.778314590454102
    9. 'sqrt' → logprob: -10.778314590454102
    10. ' def' → logprob: -11.403314590454102

Token 13: ' compute' (ID: 23864)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.530595600605011
    2. ' circle' → logprob: -1.2805955410003662
    3. 'calculate' → logprob: -3.655595541000366
    4. ' get' → logprob: -4.155595779418945
    5. ' my' → logprob: -4.280595779418945
    6. 'circle' → logprob: -4.405595779418945
    7. ' circular' → logprob: -5.030595779418945
    8. ' angle' → logprob: -5.030595779418945
    9. ' compute' → logprob: -5.155595779418945
    10. ' ' → logprob: -5.280595779418945

Token 14: '_final' (ID: 46468)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.049357205629348755
    2. '():
' → logprob: -4.6743574142456055
    3. '_angles' → logprob: -5.0493574142456055
    4. '_angle' → logprob: -5.1743574142456055
    5. '(' → logprob: -5.2993574142456055
    6. '_' → logprob: -5.7993574142456055
    7. '_coordinates' → logprob: -5.9243574142456055
    8. '_circle' → logprob: -6.0493574142456055
    9. '_position' → logprob: -6.1743574142456055
    10. '(x' → logprob: -6.2993574142456055

Token 15: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.060530368238687515
    2. '_angle' → logprob: -3.310530424118042
    3. '():' → logprob: -5.185530185699463
    4. '_' → logprob: -5.310530185699463
    5. '_coordinates' → logprob: -5.810530185699463
    6. '_angles' → logprob: -5.810530185699463
    7. '_pos' → logprob: -6.810530185699463
    8. '_velocity' → logprob: -7.310530185699463
    9. '_theta' → logprob: -7.435530185699463
    10. '_state' → logprob: -7.810530185699463

Token 16: '(n' (ID: 2406)
  Prédit: '(:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(:' → logprob: -0.47674646973609924
    2. '():' → logprob: -0.9767464399337769
    3. '(' → logprob: -6.351746559143066
    4. '(_:' → logprob: -8.351746559143066
    5. '(...' → logprob: -8.976746559143066
    6. '()' → logprob: -8.976746559143066
    7. '(*' → logprob: -9.226746559143066
    8. '(::' → logprob: -10.351746559143066
    9. '(':' → logprob: -10.476746559143066
    10. '(":' → logprob: -10.476746559143066

Token 17: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31894928216934204
    2. ':' → logprob: -1.5689492225646973
    3. '):' → logprob: -2.8189492225646973
    4. '):
' → logprob: -6.068949222564697
    5. '_points' → logprob: -7.443949222564697
    6. ':int' → logprob: -7.943949222564697
    7. '=' → logprob: -8.193949699401855
    8. ')' → logprob: -8.318949699401855
    9. '_angles' → logprob: -8.693949699401855
    10. 'points' → logprob: -9.068949699401855

Token 18: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.7432603272027336e-06
    2. ' int' → logprob: -13.875001907348633
    3. 'float' → logprob: -14.250001907348633
    4. ':int' → logprob: -17.375001907348633
    5. '(int' → logprob: -18.250001907348633
    6. '[int' → logprob: -18.250001907348633
    7. '<int' → logprob: -19.750001907348633
    8. '	int' → logprob: -19.750001907348633
    9. '=int' → logprob: -19.750001907348633
    10. ''int' → logprob: -21.125001907348633

Token 19: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8307585716247559
    2. '):' → logprob: -1.2057585716247559
    3. ',' → logprob: -1.3307585716247559
    4. '):
' → logprob: -8.205759048461914
    5. ':' → logprob: -9.330759048461914
    6. ',)' → logprob: -9.455759048461914
    7. '):

' → logprob: -9.955759048461914
    8. '   ' → logprob: -10.580759048461914
    9. '),' → logprob: -11.705759048461914
    10. ')->' → logprob: -12.080759048461914

Token 20: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019781860464718193
    2. '->' → logprob: -9.375197410583496
    3. '):' → logprob: -9.500197410583496
    4. '::' → logprob: -11.750197410583496
    5. ':
' → logprob: -11.875197410583496
    6. '   ' → logprob: -12.125197410583496
    7. ' ->' → logprob: -12.500197410583496
    8. ':

' → logprob: -12.750197410583496
    9. ':return' → logprob: -13.000197410583496
    10. ':def' → logprob: -13.250197410583496

Token 21: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0029886364936828613
    2. 'Tuple' → logprob: -6.252988815307617
    3. 'None' → logprob: -7.252988815307617
    4. 'float' → logprob: -8.377988815307617
    5. '(tuple' → logprob: -9.627988815307617
    6. 'list' → logprob: -10.502988815307617
    7. ' tuple' → logprob: -10.877988815307617
    8. '(' → logprob: -12.502988815307617
    9. '_tuple' → logprob: -13.127988815307617
    10. 'List' → logprob: -13.377988815307617

Token 22: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013321757433004677
    2. ':return' → logprob: -9.875133514404297
    3. '::' → logprob: -10.375133514404297
    4. ':

' → logprob: -11.750133514404297
    5. '):' → logprob: -11.875133514404297
    6. ':
' → logprob: -11.875133514404297
    7. ':def' → logprob: -12.000133514404297
    8. ':`' → logprob: -12.000133514404297
    9. '   ' → logprob: -12.125133514404297
    10. ':void' → logprob: -12.875133514404297

Token 23: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.1472419600977446e-06
    2. ' float' → logprob: -13.875000953674316
    3. '(float' → logprob: -16.000001907348633
    4. 'int' → logprob: -17.250001907348633
    5. '	float' → logprob: -18.625001907348633
    6. 'flo' → logprob: -18.625001907348633
    7. 'floating' → logprob: -19.500001907348633
    8. '.float' → logprob: -19.500001907348633
    9. '=float' → logprob: -20.625001907348633
    10. '<float' → logprob: -20.875001907348633

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001394161517964676
    2. ':' → logprob: -9.750139236450195
    3. ']:' → logprob: -10.250139236450195
    4. ']' → logprob: -11.000139236450195
    5. ',float' → logprob: -11.000139236450195
    6. '])' → logprob: -12.125139236450195
    7. ']):' → logprob: -13.625139236450195
    8. '],' → logprob: -13.625139236450195
    9. 'float' → logprob: -14.000139236450195
    10. ']:
' → logprob: -14.125139236450195

Token 25: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.0206720617134124e-05
    2. ' float' → logprob: -11.50001049041748
    3. '(float' → logprob: -17.125009536743164
    4. '	float' → logprob: -18.500009536743164
    5. '=float' → logprob: -19.375009536743164
    6. '.float' → logprob: -19.500009536743164
    7. 'flo' → logprob: -19.500009536743164
    8. 'bool' → logprob: -20.875009536743164
    9. '<float' → logprob: -21.000009536743164
    10. ',float' → logprob: -21.000009536743164

Token 26: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24217423796653748
    2. ']:' → logprob: -1.6171742677688599
    3. ':' → logprob: -4.86717414855957
    4. ']):' → logprob: -5.36717414855957
    5. ')]' → logprob: -5.86717414855957
    6. ')' → logprob: -7.74217414855957
    7. '):
' → logprob: -7.99217414855957
    8. ']:
' → logprob: -8.24217414855957
    9. ']' → logprob: -9.11717414855957
    10. ',' → logprob: -10.11717414855957

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.575563020305708e-05
    2. 'pass' → logprob: -10.250065803527832
    3. '  ' → logprob: -11.375065803527832
    4. '```' → logprob: -11.875065803527832
    5. ' pass' → logprob: -12.000065803527832
    6. ' ' → logprob: -13.000065803527832
    7. '    ' → logprob: -13.625065803527832
    8. '	pass' → logprob: -14.375065803527832
    9. '    
' → logprob: -14.875065803527832
    10. '   ' → logprob: -15.375065803527832

Token 28: ' ang' (ID: 2929)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008666796493344009
    2. 'x' → logprob: -7.250866889953613
    3. 'pass' → logprob: -9.000866889953613
    4. '  ' → logprob: -11.250866889953613
    5. ' x' → logprob: -12.375866889953613
    6. ' ' → logprob: -12.625866889953613
    7. 'return' → logprob: -13.250866889953613
    8. '#' → logprob: -13.250866889953613
    9. '(x' → logprob: -13.375866889953613
    10. 'angle' → logprob: -13.500866889953613

Token 29: ',' (ID: 11)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.004095377866178751
    2. 'les' → logprob: -5.504095554351807
    3. 'let' → logprob: -12.379095077514648
    4. ' le' → logprob: -12.879095077514648
    5. 'lep' → logprob: -13.254095077514648
    6. 'ler' → logprob: -13.504095077514648
    7. 'leb' → logprob: -13.504095077514648
    8. 'ле' → logprob: -13.629095077514648
    9. 'led' → logprob: -14.004095077514648
    10. '(le' → logprob: -14.504095077514648

Token 30: ' x' (ID: 1215)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.36366531252861023
    2. 'rad' → logprob: -1.3636653423309326
    3. 'r' → logprob: -4.3636651039123535
    4. 'pos' → logprob: -4.3636651039123535
    5. 'radius' → logprob: -4.4886651039123535
    6. 'distance' → logprob: -5.3636651039123535
    7. 'd' → logprob: -5.9886651039123535
    8. 'x' → logprob: -6.4886651039123535
    9. 'speed' → logprob: -6.9886651039123535
    10. 'step' → logprob: -6.9886651039123535

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.375538163818419e-05
    2. '=' → logprob: -9.500083923339844
    3. ':' → logprob: -12.375083923339844
    4. ' =' → logprob: -13.000083923339844
    5. '_,' → logprob: -14.250083923339844
    6. '`,' → logprob: -15.125083923339844
    7. ',y' → logprob: -15.375083923339844
    8. ' ,' → logprob: -15.500083923339844
    9. '+=' → logprob: -15.500083923339844
    10. '',' → logprob: -16.000083923339844

Token 32: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.128163257315464e-07
    2. ' y' → logprob: -15.25
    3. '   ' → logprob: -19.0
    4. '	y' → logprob: -21.375
    5. 'y's' → logprob: -22.125
    6. ',y' → logprob: -22.75
    7. '_y' → logprob: -22.75
    8. ',' → logprob: -22.75
    9. ''y' → logprob: -23.25
    10. 'yt' → logprob: -23.5

Token 33: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005807209759950638
    2. ' =' → logprob: -5.380807399749756
    3. ':' → logprob: -6.755807399749756
    4. ',' → logprob: -11.130806922912598
    5. '   ' → logprob: -12.255806922912598
    6. '+=' → logprob: -14.505806922912598
    7. 'def' → logprob: -14.880806922912598
    8. '  ' → logprob: -15.005806922912598
    9. ':=' → logprob: -15.005806922912598
    10. ' ' → logprob: -15.005806922912598

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024817234370857477
    2. ' ' → logprob: -6.002481937408447
    3. '   ' → logprob: -12.252481460571289
    4. '  ' → logprob: -14.377481460571289
    5. '(' → logprob: -15.002481460571289
    6. '    ' → logprob: -15.252481460571289
    7. '1' → logprob: -16.75248146057129
    8. ' ' → logprob: -16.87748146057129
    9. '     ' → logprob: -17.62748146057129
    10. '       ' → logprob: -18.12748146057129

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. ' ' → logprob: -17.75
    4. '1' → logprob: -18.5
    5. 'pi' → logprob: -20.0
    6. '2' → logprob: -20.5
    7. '3' → logprob: -22.25
    8. 'float' → logprob: -22.25
    9. '5' → logprob: -23.375
    10. '   ' → logprob: -23.625

Token 36: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018352219834923744
    2. '   ' → logprob: -4.268352031707764
    3. '0' → logprob: -5.643352031707764
    4. '1' → logprob: -8.268352508544922
    5. ':' → logprob: -8.643352508544922
    6. '.' → logprob: -9.893352508544922
    7. ';' → logprob: -10.393352508544922
    8. ' ,' → logprob: -10.643352508544922
    9. '=' → logprob: -10.893352508544922
    10. '.,' → logprob: -11.018352508544922

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019828793592751026
    2. '5' → logprob: -7.251982688903809
    3. 'float' → logprob: -7.376982688903809
    4. '1' → logprob: -8.251982688903809
    5. 'x' → logprob: -8.626982688903809
    6. '(' → logprob: -9.751982688903809
    7. ',' → logprob: -10.126982688903809
    8. 'n' → logprob: -10.751982688903809
    9. '   ' → logprob: -10.876982688903809
    10. '3' → logprob: -11.501982688903809

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012060541659593582
    2. '0' → logprob: -4.637060642242432
    3. '   ' → logprob: -6.137060642242432
    4. '(' → logprob: -10.012060165405273
    5. 'x' → logprob: -10.512060165405273
    6. '1' → logprob: -10.512060165405273
    7. ' ,' → logprob: -11.012060165405273
    8. '(),' → logprob: -12.512060165405273
    9. '```' → logprob: -12.762060165405273
    10. '       ' → logprob: -12.762060165405273

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '1' → logprob: -19.375024795532227
    4. '   ' → logprob: -20.375024795532227
    5. ' ' → logprob: -22.250024795532227
    6. '  ' → logprob: -22.500024795532227
    7. '2' → logprob: -22.875024795532227
    8. '5' → logprob: -23.125024795532227
    9. '3' → logprob: -23.250024795532227
    10. ',' → logprob: -23.375024795532227

Token 40: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.5
    3. '1' → logprob: -20.875
    4. '2' → logprob: -24.75
    5. '00' → logprob: -24.75
    6. '3' → logprob: -25.375
    7. '０' → logprob: -25.375
    8. '   ' → logprob: -25.5
    9. '5' → logprob: -25.625
    10. 'float' → logprob: -25.75

Token 41: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0010180408135056496
    2. '0' → logprob: -7.376018047332764
    3. ',' → logprob: -8.626017570495605
    4. '1' → logprob: -9.001017570495605
    5. '8' → logprob: -10.626017570495605
    6. '   ' → logprob: -11.251017570495605
    7. '.,' → logprob: -11.251017570495605
    8. '9' → logprob: -11.626017570495605
    9. '5' → logprob: -12.376017570495605
    10. ':' → logprob: -12.876017570495605

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12632733583450317
    2. '5' → logprob: -2.2513272762298584
    3. 'cos' → logprob: -4.8763275146484375
    4. '414' → logprob: -6.7513275146484375
    5. 'sin' → logprob: -7.0013275146484375
    6. '4' → logprob: -7.1263275146484375
    7. 'x' → logprob: -7.2513275146484375
    8. '2' → logprob: -7.5013275146484375
    9. '1' → logprob: -7.6263275146484375
    10. '3' → logprob: -8.251327514648438

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019817621796391904
    2. '   ' → logprob: -8.750198364257812
    3. '0' → logprob: -10.250198364257812
    4. ' ,' → logprob: -13.250198364257812
    5. '       ' → logprob: -13.750198364257812
    6. '1' → logprob: -13.875198364257812
    7. ' ' → logprob: -16.375198364257812
    8. '  ' → logprob: -16.625198364257812
    9. '    ' → logprob: -16.875198364257812
    10. ';' → logprob: -17.000198364257812

Token 44: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13052672147750854
    2. '1' → logprob: -2.1305267810821533
    3. ' ' → logprob: -5.630526542663574
    4. '2' → logprob: -12.130526542663574
    5. '3' → logprob: -16.75552749633789
    6. '-' → logprob: -17.50552749633789
    7. ' ' → logprob: -18.63052749633789
    8. '   ' → logprob: -19.00552749633789
    9. '  ' → logprob: -19.13052749633789
    10. '5' → logprob: -19.13052749633789

Token 45: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38687241077423096
    2. '0' → logprob: -1.136872410774231
    3. '2' → logprob: -13.511872291564941
    4. '-' → logprob: -17.511873245239258
    5. ' ' → logprob: -19.011873245239258
    6. '3' → logprob: -19.261873245239258
    7. '4' → logprob: -21.386873245239258
    8. '5' → logprob: -21.511873245239258
    9. '01' → logprob: -22.511873245239258
    10. '10' → logprob: -22.886873245239258

Token 46: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002184284385293722
    2. '   ' → logprob: -6.3771843910217285
    3. '0' → logprob: -8.12718391418457
    4. ',' → logprob: -9.75218391418457
    5. ':' → logprob: -9.75218391418457
    6. '1' → logprob: -10.25218391418457
    7. '       ' → logprob: -11.00218391418457
    8. ' .' → logprob: -12.62718391418457
    9. '.,' → logprob: -12.75218391418457
    10. ';' → logprob: -12.87718391418457

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07322301715612411
    2. '1' → logprob: -2.948223114013672
    3. '5' → logprob: -4.323223114013672
    4. '   ' → logprob: -5.948223114013672
    5. 'float' → logprob: -7.823223114013672
    6. '2' → logprob: -8.073223114013672
    7. '       ' → logprob: -8.323223114013672
    8. 'x' → logprob: -8.573223114013672
    9. '00' → logprob: -8.698223114013672
    10. '  ' → logprob: -8.823223114013672

Token 48: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.756989700486884e-05
    2. 'for' → logprob: -9.62508773803711
    3. '       ' → logprob: -11.87508773803711
    4. '    
' → logprob: -12.00008773803711
    5. '  ' → logprob: -12.25008773803711
    6. ' ' → logprob: -14.12508773803711
    7. '    ' → logprob: -14.37508773803711
    8. '```' → logprob: -14.62508773803711
    9. '	for' → logprob: -14.87508773803711
    10. ' for' → logprob: -15.25008773803711

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021021578868385404
    2. 'for' → logprob: -8.62520980834961
    3. '       ' → logprob: -11.37520980834961
    4. '  ' → logprob: -12.25020980834961
    5. '```' → logprob: -12.25020980834961
    6. '	for' → logprob: -12.50020980834961
    7. ' for' → logprob: -13.62520980834961
    8. ' ' → logprob: -13.87520980834961
    9. '    
' → logprob: -14.12520980834961
    10. '	' → logprob: -14.12520980834961

Token 50: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5760051012039185
    2. '   ' → logprob: -0.8260051012039185
    3. ' for' → logprob: -10.076004981994629
    4. 'while' → logprob: -11.951004981994629
    5. '       ' → logprob: -12.201004981994629
    6. 'return' → logprob: -12.701004981994629
    7. '	for' → logprob: -12.951004981994629
    8. '  ' → logprob: -13.451004981994629
    9. 'angle' → logprob: -13.576004981994629
    10. ' ' → logprob: -13.826004981994629

Token 51: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.162990540266037
    2. ' in' → logprob: -1.9129905700683594
    3. 'i' → logprob: -6.912990570068359
    4. ' range' → logprob: -7.037990570068359
    5. 'in' → logprob: -8.16299057006836
    6. ' _' → logprob: -8.28799057006836
    7. ' ' → logprob: -8.41299057006836
    8. 'range' → logprob: -9.28799057006836
    9. '  ' → logprob: -11.91299057006836
    10. '   ' → logprob: -12.03799057006836

Token 52: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00018744789122138172
    2. ' in' → logprob: -8.875187873840332
    3. ':' → logprob: -10.750187873840332
    4. 'range' → logprob: -10.750187873840332
    5. 'n' → logprob: -13.250187873840332
    6. 'for' → logprob: -13.500187873840332
    7. 'In' → logprob: -15.500187873840332
    8. 'i' → logprob: -15.625187873840332
    9. '   ' → logprob: -15.625187873840332
    10. '_in' → logprob: -15.625187873840332

Token 53: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013301216531544924
    2. ' range' → logprob: -6.6263298988342285
    3. '	range' → logprob: -13.001330375671387
    4. '(range' → logprob: -13.751330375671387
    5. '.range' → logprob: -15.376330375671387
    6. 'in' → logprob: -15.751330375671387
    7. 'rang' → logprob: -16.00132942199707
    8. '_range' → logprob: -16.37632942199707
    9. 'ran' → logprob: -16.75132942199707
    10. '   ' → logprob: -16.87632942199707

Token 54: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03713332116603851
    2. '(range' → logprob: -3.53713321685791
    3. '(n' → logprob: -5.16213321685791
    4. '(len' → logprob: -7.03713321685791
    5. '(:' → logprob: -8.41213321685791
    6. '(`' → logprob: -9.28713321685791
    7. '(int' → logprob: -9.66213321685791
    8. '(in' → logprob: -10.16213321685791
    9. '(_' → logprob: -10.16213321685791
    10. '(num' → logprob: -10.28713321685791

Token 55: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011179976165294647
    2. '):
' → logprob: -4.5111799240112305
    3. '):

' → logprob: -9.51117992401123
    4. ')' → logprob: -10.51117992401123
    5. '):
' → logprob: -11.26117992401123
    6. ':' → logprob: -11.38617992401123
    7. '   ' → logprob: -12.88617992401123
    8. ')):' → logprob: -13.13617992401123
    9. '+' → logprob: -15.01117992401123
    10. ')：' → logprob: -15.26117992401123

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '0' → logprob: -13.500001907348633
    3. '2' → logprob: -15.375001907348633
    4. ' ' → logprob: -15.875001907348633
    5. '１' → logprob: -18.000001907348633
    6. '```' → logprob: -18.500001907348633
    7. ')' → logprob: -18.875001907348633
    8. '   ' → logprob: -19.875001907348633
    9. '`' → logprob: -20.000001907348633
    10. '3' → logprob: -20.250001907348633

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022513647563755512
    2. '):
' → logprob: -6.127251148223877
    3. ')' → logprob: -10.252251625061035
    4. '):

' → logprob: -10.752251625061035
    5. '):
' → logprob: -12.877251625061035
    6. '   ' → logprob: -13.002251625061035
    7. ')):' → logprob: -13.377251625061035
    8. ':' → logprob: -13.627251625061035
    9. '+' → logprob: -13.752251625061035
    10. ')+' → logprob: -15.752251625061035

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7120533811976202e-05
    2. '   ' → logprob: -11.750017166137695
    3. '      ' → logprob: -12.500017166137695
    4. '     ' → logprob: -12.750017166137695
    5. '        ' → logprob: -13.750017166137695
    6. '           ' → logprob: -14.000017166137695
    7. '    ' → logprob: -14.875017166137695
    8. 'x' → logprob: -16.625017166137695
    9. '         ' → logprob: -16.625017166137695
    10. ' ' → logprob: -17.375017166137695

Token 59: ' ang' (ID: 2929)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5776167511940002
    2. 'ang' (adapté à ' ang') → logprob: -0.8276167511940002
    3. '   ' → logprob: -6.5776166915893555
    4. ' ang' → logprob: -8.952616691589355
    5. '           ' → logprob: -9.702616691589355
    6. 'angle' → logprob: -9.952616691589355
    7. 'x' → logprob: -10.202616691589355
    8. '      ' → logprob: -12.952616691589355
    9. '        ' → logprob: -13.327616691589355
    10. '     ' → logprob: -13.327616691589355

Token 60: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38691720366477966
    2. '+=' → logprob: -1.136917233467102
    3. '+' → logprob: -10.136917114257812
    4. ' =' → logprob: -12.886917114257812
    5. ' +' → logprob: -12.886917114257812
    6. ' ' → logprob: -14.511917114257812
    7. '=' → logprob: -15.011917114257812
    8. '   ' → logprob: -15.386917114257812
    9. '  ' → logprob: -15.386917114257812
    10. '+=(' → logprob: -16.511917114257812

Token 61: ' pi' (ID: 6404)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38722899556159973
    2. 'pi' → logprob: -1.1372289657592773
    3. '360' → logprob: -8.512228965759277
    4. '(' → logprob: -9.762228965759277
    5. ' pi' → logprob: -9.762228965759277
    6. ' ' → logprob: -10.762228965759277
    7. 'atan' → logprob: -12.387228965759277
    8. '(pi' → logprob: -12.512228965759277
    9. 'ang' → logprob: -13.262228965759277
    10. '   ' → logprob: -13.387228965759277

Token 62: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.7722578048706055
    2. '       ' → logprob: -0.7722578048706055
    3. '   ' → logprob: -2.8972578048706055
    4. '*' → logprob: -4.1472578048706055
    5. ' /' → logprob: -6.6472578048706055
    6. '           ' → logprob: -7.1472578048706055
    7. ' *' → logprob: -8.147257804870605
    8. '-' → logprob: -8.272257804870605
    9. '    ' → logprob: -8.397257804870605
    10. 'ang' → logprob: -8.397257804870605

Token 63: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06300356239080429
    2. '2' → logprob: -2.8130035400390625
    3. '6' → logprob: -7.6880035400390625
    4. '4' → logprob: -7.6880035400390625
    5. '3' → logprob: -9.688003540039062
    6. '180' → logprob: -10.688003540039062
    7. '8' → logprob: -11.438003540039062
    8. '(n' → logprob: -11.688003540039062
    9. '5' → logprob: -12.188003540039062
    10. '12' → logprob: -12.438003540039062

Token 64: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006725906860083342
    2. '   ' → logprob: -5.006725788116455
    3. '           ' → logprob: -12.506726264953613
    4. '      ' → logprob: -13.006726264953613
    5. '     ' → logprob: -13.131726264953613
    6. '        ' → logprob: -14.381726264953613
    7. 'x' → logprob: -14.631726264953613
    8. '    ' → logprob: -14.756726264953613
    9. '        
' → logprob: -14.756726264953613
    10. '  ' → logprob: -15.131726264953613

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028202086687088013
    2. '   ' → logprob: -5.877820014953613
    3. 'x' → logprob: -12.502820014953613
    4. '      ' → logprob: -12.627820014953613
    5. '     ' → logprob: -13.002820014953613
    6. 'return' → logprob: -13.127820014953613
    7. '           ' → logprob: -13.252820014953613
    8. '    ' → logprob: -14.252820014953613
    9. '        ' → logprob: -14.377820014953613
    10. '  ' → logprob: -14.502820014953613

Token 66: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2520483434200287
    2. 'x' (adapté à ' x') → logprob: -1.502048373222351
    3. '   ' → logprob: -9.25204849243164
    4. '           ' → logprob: -11.12704849243164
    5. ' x' → logprob: -12.12704849243164
    6. '     ' → logprob: -13.62704849243164
    7. '      ' → logprob: -13.75204849243164
    8. '        ' → logprob: -15.00204849243164
    9. ' ' → logprob: -16.12704849243164
    10. '  ' → logprob: -16.25204849243164

Token 67: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22901694476604462
    2. ',' → logprob: -1.979016900062561
    3. '*=' → logprob: -3.6040170192718506
    4. '+=' → logprob: -3.7290170192718506
    5. ' =' → logprob: -4.8540167808532715
    6. ' *=' → logprob: -5.6040167808532715
    7. '*' → logprob: -5.7290167808532715
    8. ' +=' → logprob: -7.9790167808532715
    9. '   ' → logprob: -9.10401725769043
    10. '*,' → logprob: -10.85401725769043

Token 68: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.15795384347438812
    2. '=' → logprob: -3.0329537391662598
    3. ' y' → logprob: -3.0329537391662598
    4. ' =' → logprob: -3.1579537391662598
    5. 'x' → logprob: -5.53295373916626
    6. ' ' → logprob: -6.53295373916626
    7. '   ' → logprob: -7.28295373916626
    8. ',' → logprob: -8.032954216003418
    9. '    ' → logprob: -8.282954216003418
    10. ' x' → logprob: -8.782954216003418

Token 69: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008024984039366245
    2. '+=' → logprob: -5.008025169372559
    3. ' =' → logprob: -6.758025169372559
    4. '*=' → logprob: -9.508025169372559
    5. ' +=' → logprob: -10.633025169372559
    6. '   ' → logprob: -10.633025169372559
    7. ',' → logprob: -11.008025169372559
    8. '*' → logprob: -12.383025169372559
    9. ' *=' → logprob: -13.508025169372559
    10. '  ' → logprob: -14.508025169372559

Token 70: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0010179253295063972
    2. 'cos' → logprob: -7.251018047332764
    3. ' x' → logprob: -8.126017570495605
    4. '   ' → logprob: -11.876017570495605
    5. ' ' → logprob: -12.751017570495605
    6. ' cos' → logprob: -14.126017570495605
    7. '(x' → logprob: -14.251017570495605
    8. '    ' → logprob: -14.876017570495605
    9. '  ' → logprob: -14.876017570495605
    10. 'round' → logprob: -15.876017570495605

Token 71: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7101829051971436
    2. '*cos' → logprob: -0.7101829051971436
    3. ' *' → logprob: -4.085183143615723
    4. '*sin' → logprob: -10.210183143615723
    5. '*c' → logprob: -11.585183143615723
    6. '*np' → logprob: -12.085183143615723
    7. 'cos' → logprob: -12.585183143615723
    8. '*(' → logprob: -12.835183143615723
    9. '\' → logprob: -12.960183143615723
    10. '*t' → logprob: -13.335183143615723

Token 72: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -1.759734732331708e-05
    2. 'sin' → logprob: -11.375017166137695
    3. ' cos' → logprob: -12.625017166137695
    4. 'x' → logprob: -12.875017166137695
    5. '*cos' → logprob: -16.375017166137695
    6. '.cos' → logprob: -16.875017166137695
    7. 'cost' → logprob: -17.875017166137695
    8. '_cos' → logprob: -18.000017166137695
    9. 'co' → logprob: -18.125017166137695
    10. 'Cos' → logprob: -19.750017166137695

Token 73: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(angle' → logprob: -20.0
    3. '(
' → logprob: -24.25
    4. ' (' → logprob: -24.25
    5. '(ans' → logprob: -24.625
    6. '（' → logprob: -24.625
    7. 'ang' → logprob: -25.125
    8. 'Ang' → logprob: -25.5
    9. '(a' → logprob: -25.5
    10. ' ang' → logprob: -25.625

Token 74: 'ang' (ID: 516)
  Prédit: 'ang'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -3.128163257315464e-07
    2. ' ang' → logprob: -15.25
    3. 'angg' → logprob: -19.25
    4. '_ang' → logprob: -20.0
    5. '-ang' → logprob: -20.375
    6. 'angu' → logprob: -20.625
    7. 'angs' → logprob: -20.625
    8. 'angled' → logprob: -21.75
    9. 'angular' → logprob: -21.75
    10. 'angt' → logprob: -21.75

Token 75: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.5690089639974758e-05
    2. ')' → logprob: -11.125015258789062
    3. '),
' → logprob: -15.125015258789062
    4. '()),' → logprob: -15.125015258789062
    5. ')),' → logprob: -16.125015258789062
    6. ')*' → logprob: -16.750015258789062
    7. ')，' → logprob: -17.125015258789062
    8. ''),' → logprob: -17.625015258789062
    9. '"),' → logprob: -17.750015258789062
    10. ').' → logprob: -17.875015258789062

Token 76: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0619712732732296
    2. ' y' → logprob: -2.8119711875915527
    3. ' ' → logprob: -13.311971664428711
    4. '   ' → logprob: -13.436971664428711
    5. '  ' → logprob: -16.06197166442871
    6. ' ' → logprob: -16.31197166442871
    7. '	y' → logprob: -16.31197166442871
    8. '       ' → logprob: -16.56197166442871
    9. '     ' → logprob: -17.81197166442871
    10. '    ' → logprob: -17.93697166442871

Token 77: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13101904094219208
    2. ' +' → logprob: -2.131019115447998
    3. '+y' → logprob: -5.506019115447998
    4. '   ' → logprob: -11.75601863861084
    5. 'y' → logprob: -11.88101863861084
    6. '       ' → logprob: -12.88101863861084
    7. '+x' → logprob: -13.75601863861084
    8. ' ' → logprob: -14.25601863861084
    9. '  ' → logprob: -15.38101863861084
    10. '           ' → logprob: -15.50601863861084

Token 78: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -7.896309739408025e-07
    2. ' sin' → logprob: -14.250000953674316
    3. 'sen' → logprob: -17.125
    4. '.sin' → logprob: -20.0
    5. '*sin' → logprob: -20.875
    6. 'si' → logprob: -22.125
    7. 'Sin' → logprob: -22.625
    8. 'san' → logprob: -23.25
    9. 'sing' → logprob: -23.625
    10. 'sins' → logprob: -23.875

Token 79: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(
' → logprob: -17.625
    3. '()(' → logprob: -18.25
    4. '(`' → logprob: -18.5
    5. ' (' → logprob: -18.75
    6. '(angle' → logprob: -19.4375
    7. '（' → logprob: -19.5625
    8. '   ' → logprob: -19.9375
    9. '(x' → logprob: -20.1875
    10. '((' → logprob: -20.25

Token 80: 'ang' (ID: 516)
  Prédit: 'ang'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -1.9361264946837764e-07
    2. ' ang' → logprob: -15.875
    3. 'angs' → logprob: -20.5
    4. 'angg' → logprob: -20.875
    5. '-ang' → logprob: -21.25
    6. 'angk' → logprob: -21.375
    7. 'angu' → logprob: -21.75
    8. 'angt' → logprob: -21.875
    9. '_ang' → logprob: -22.375
    10. 'анг' → logprob: -22.625

Token 81: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.822646693966817e-06
    2. ')
' → logprob: -11.875007629394531
    3. ')

' → logprob: -14.875007629394531
    4. ')`' → logprob: -15.625007629394531
    5. '))' → logprob: -15.875007629394531
    6. '）' → logprob: -17.12500762939453
    7. ' )' → logprob: -17.25000762939453
    8. ')
' → logprob: -17.50000762939453
    9. '```' → logprob: -17.50000762939453
    10. '),' → logprob: -17.62500762939453

Token 82: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.696889623621246e-06
    2. 'return' → logprob: -13.00000286102295
    3. '       ' → logprob: -15.12500286102295
    4. '  ' → logprob: -16.875001907348633
    5. '    
' → logprob: -17.375001907348633
    6. '   ' → logprob: -18.625001907348633
    7. ' return' → logprob: -18.625001907348633
    8. '```' → logprob: -18.625001907348633
    9. '	return' → logprob: -18.750001907348633
    10. '    ' → logprob: -19.000001907348633

Token 83: ' ang' (ID: 2929)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47507408261299133
    2. '   ' → logprob: -1.225074052810669
    3. '       ' → logprob: -2.475074052810669
    4. 'x' → logprob: -9.10007381439209
    5. 'pass' → logprob: -9.72507381439209
    6. ' return' → logprob: -9.85007381439209
    7. '        
' → logprob: -11.60007381439209
    8. '```' → logprob: -11.97507381439209
    9. '           ' → logprob: -12.72507381439209
    10. '     ' → logprob: -12.72507381439209

Token 84: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.17096200585365295
    2. ' +=' → logprob: -1.9209619760513306
    3. '+' → logprob: -5.170961856842041
    4. ' +' → logprob: -6.045961856842041
    5. '%' → logprob: -6.670961856842041
    6. '-' → logprob: -7.670961856842041
    7. ' =' → logprob: -8.2959623336792
    8. '=' → logprob: -8.4209623336792
    9. ' %=' → logprob: -9.1709623336792
    10. '```' → logprob: -9.1709623336792

Token 85: ' atan' (ID: 70327)
  Prédit: 'ang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -0.04661252349615097
    2. '0' → logprob: -3.421612501144409
    3. 'atan' → logprob: -4.546612739562988
    4. '(' → logprob: -6.671612739562988
    5. ' ang' → logprob: -7.046612739562988
    6. ' ' → logprob: -9.546612739562988
    7. ' atan' → logprob: -11.171612739562988
    8. 'pi' → logprob: -11.796612739562988
    9. '   ' → logprob: -11.796612739562988
    10. 'angle' → logprob: -11.921612739562988

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.999452772201039e-05
    2. '(' → logprob: -10.500029563903809
    3. '   ' → logprob: -13.625029563903809
    4. ' ' → logprob: -14.500029563903809
    5. '２' → logprob: -15.625029563903809
    6. '₂' → logprob: -15.750029563903809
    7. '       ' → logprob: -17.000030517578125
    8. '0' → logprob: -17.125030517578125
    9. '           ' → logprob: -17.250030517578125
    10. '  ' → logprob: -17.250030517578125

Token 87: '(y' (ID: 14684)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03855342045426369
    2. '(x' → logprob: -3.288553476333618
    3. '(y' → logprob: -7.663553237915039
    4. '(angle' → logprob: -10.538553237915039
    5. '2' → logprob: -12.413553237915039
    6. 'ang' → logprob: -12.913553237915039
    7. '(a' → logprob: -13.413553237915039
    8. 'x' → logprob: -13.538553237915039
    9. '((' → logprob: -13.538553237915039
    10. '(pi' → logprob: -13.663553237915039

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.128163257315464e-07
    2. ',x' → logprob: -15.625
    3. ',y' → logprob: -16.625
    4. ' ,' → logprob: -20.25
    5. ',
' → logprob: -20.5
    6. '，' → logprob: -20.75
    7. ',,' → logprob: -23.5
    8. '',' → logprob: -23.875
    9. ',

' → logprob: -24.125
    10. '(),' → logprob: -24.125

Token 89: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. ' x' → logprob: -14.375000953674316
    3. '_x' → logprob: -22.625
    4. '	x' → logprob: -22.625
    5. ')x' → logprob: -23.875
    6. '(x' → logprob: -23.875
    7. '   ' → logprob: -24.5
    8. '-x' → logprob: -24.625
    9. '$x' → logprob: -24.625
    10. '.x' → logprob: -24.875

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. '))' → logprob: -13.12500286102295
    3. ')
' → logprob: -14.25000286102295
    4. ')`' → logprob: -15.12500286102295
    5. ')

' → logprob: -15.62500286102295
    6. '```' → logprob: -16.875003814697266
    7. '       ' → logprob: -17.375003814697266
    8. ' )' → logprob: -17.375003814697266
    9. ').' → logprob: -17.625003814697266
    10. '   ' → logprob: -17.750003814697266

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.60414821645827e-06
    2. '       ' → logprob: -12.625004768371582
    3. 'return' → logprob: -13.625004768371582
    4. '  ' → logprob: -17.375003814697266
    5. ' return' → logprob: -19.375003814697266
    6. '	return' → logprob: -19.500003814697266
    7. '   ' → logprob: -20.250003814697266
    8. '    ' → logprob: -20.625003814697266
    9. ' ' → logprob: -20.750003814697266
    10. '```' → logprob: -21.500003814697266

Token 92: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001097417771234177
    2. 'return' (adapté à ' return') → logprob: -9.125109672546387
    3. '       ' → logprob: -14.250109672546387
    4. ' return' → logprob: -16.750110626220703
    5. '  ' → logprob: -16.875110626220703
    6. '	return' → logprob: -17.375110626220703
    7. ':return' → logprob: -19.625110626220703
    8. 'Return' → logprob: -19.875110626220703
    9. '    ' → logprob: -19.875110626220703
    10. '   ' → logprob: -20.250110626220703

Token 93: ' round' (ID: 7353)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.341094434261322
    2. '(x' → logprob: -1.3410944938659668
    3. 'x' → logprob: -3.716094493865967
    4. ' x' → logprob: -6.091094493865967
    5. '(' → logprob: -7.091094493865967
    6. '(float' → logprob: -11.216094017028809
    7. '   ' → logprob: -13.091094017028809
    8. ' ' → logprob: -13.341094017028809
    9. '(a' → logprob: -13.966094017028809
    10. ' ' → logprob: -14.341094017028809

Token 94: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.052416302263736725
    2. '(x' → logprob: -3.5524163246154785
    3. '((' → logprob: -4.9274163246154785
    4. '(position' → logprob: -5.1774163246154785
    5. '(final' → logprob: -6.3024163246154785
    6. '(float' → logprob: -6.5524163246154785
    7. '(pos' → logprob: -6.5524163246154785
    8. '(np' → logprob: -7.4274163246154785
    9. '(d' → logprob: -7.6774163246154785
    10. '(tuple' → logprob: -7.9274163246154785

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06197608634829521
    2. '),' → logprob: -2.811976194381714
    3. ',),' → logprob: -12.061976432800293
    4. ',y' → logprob: -14.436976432800293
    5. ',
' → logprob: -14.686976432800293
    6. '},' → logprob: -14.811976432800293
    7. '`,' → logprob: -15.061976432800293
    8. ' ,' → logprob: -15.436976432800293
    9. ')' → logprob: -15.811976432800293
    10. '),
' → logprob: -16.061975479125977

Token 96: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2458364963531494
    2. '4' → logprob: -1.2458364963531494
    3. '3' → logprob: -1.4958364963531494
    4. '5' → logprob: -2.2458364963531494
    5. '6' → logprob: -2.3708364963531494
    6. '8' → logprob: -7.37083625793457
    7. '7' → logprob: -8.12083625793457
    8. '10' → logprob: -8.37083625793457
    9. '1' → logprob: -9.37083625793457
    10. '9' → logprob: -10.74583625793457

Token 97: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7707518339157104
    2. '4' → logprob: -1.3957518339157104
    3. '3' → logprob: -2.145751953125
    4. '5' → logprob: -2.395751953125
    5. '6' → logprob: -2.520751953125
    6. '8' → logprob: -7.520751953125
    7. '10' → logprob: -8.020751953125
    8. '7' → logprob: -8.145751953125
    9. '9' → logprob: -10.770751953125
    10. '1' → logprob: -11.395751953125

Token 98: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0006324975984171033
    2. ')' → logprob: -7.375632286071777
    3. ')),' → logprob: -13.125632286071777
    4. '   ' → logprob: -13.750632286071777
    5. ')},' → logprob: -14.375632286071777
    6. ').' → logprob: -14.750632286071777
    7. '}),' → logprob: -15.000632286071777
    8. ')，' → logprob: -15.250632286071777
    9. '},' → logprob: -15.500632286071777
    10. '"),' → logprob: -15.750632286071777

Token 99: ' round' (ID: 7353)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.00012356207298580557
    2. ' round' → logprob: -9.000123977661133
    3. '.round' → logprob: -17.000123977661133
    4. 'rounded' → logprob: -17.250123977661133
    5. '_round' → logprob: -18.375123977661133
    6. '(round' → logprob: -18.875123977661133
    7. '-round' → logprob: -20.750123977661133
    8. 'Round' → logprob: -20.875123977661133
    9. '   ' → logprob: -22.625123977661133
    10. 'around' → logprob: -22.750123977661133

Token 100: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0036140859592705965
    2. '(x' → logprob: -5.6286139488220215
    3. '(' → logprob: -11.62861442565918
    4. '(round' → logprob: -13.37861442565918
    5. '(z' → logprob: -13.87861442565918
    6. '(a' → logprob: -14.50361442565918
    7. '(Y' → logprob: -14.87861442565918
    8. 'y' → logprob: -15.62861442565918
    9. '(angle' → logprob: -15.87861442565918
    10. '(b' → logprob: -16.12861442565918

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0894370973110199
    2. '),' → logprob: -2.4644370079040527
    3. ')' → logprob: -7.839437007904053
    4. 'round' → logprob: -10.339437484741211
    5. '.round' → logprob: -11.464437484741211
    6. ',),' → logprob: -11.589437484741211
    7. '`,' → logprob: -11.839437484741211
    8. ')},' → logprob: -11.964437484741211
    9. ' round' → logprob: -12.089437484741211
    10. '},' → logprob: -12.464437484741211

Token 102: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '1' → logprob: -20.625
    4. '3' → logprob: -20.75
    5. '02' → logprob: -23.75
    6. '0' → logprob: -24.0
    7. '4' → logprob: -24.0
    8. '   ' → logprob: -24.0
    9. '22' → logprob: -25.25
    10. '  ' → logprob: -25.375

Token 103: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -20.375
    3. ' ' → logprob: -21.25
    4. '02' → logprob: -21.375
    5. '3' → logprob: -21.75
    6. '22' → logprob: -22.5
    7. 'two' → logprob: -24.0
    8. '92' → logprob: -24.125
    9. '２' → logprob: -24.25
    10. '21' → logprob: -24.25

Token 104: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.652451464906335e-05
    2. ')
' → logprob: -11.750016212463379
    3. '))' → logprob: -12.625016212463379
    4. ')`' → logprob: -13.125016212463379
    5. ')

' → logprob: -13.500016212463379
    6. '```' → logprob: -14.375016212463379
    7. '）' → logprob: -14.500016212463379
    8. '   ' → logprob: -15.125016212463379
    9. '`)' → logprob: -16.375017166137695
    10. ' )' → logprob: -16.375017166137695

Token 105: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0180741548538208
    2. '```' → logprob: -1.0180741548538208
    3. '   ' → logprob: -1.8930741548538208
    4. '<|end|>' → logprob: -3.3930740356445312
    5. 'return' → logprob: -3.8930740356445312
    6. 'x' → logprob: -4.018074035644531
    7. 'compute' → logprob: -4.393074035644531
    8. '#' → logprob: -4.518074035644531
    9. 'n' → logprob: -4.768074035644531
    10. 'print' → logprob: -5.393074035644531

Token 106: ' main' (ID: 2758)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.42954376339912415
    2. 'compute' → logprob: -1.1795437335968018
    3. ' main' → logprob: -4.929543972015381
    4. ' test' → logprob: -5.054543972015381
    5. ' run' → logprob: -5.554543972015381
    6. ' calculate' → logprob: -5.679543972015381
    7. ' execute' → logprob: -5.804543972015381
    8. 'test' → logprob: -6.304543972015381
    9. ' call' → logprob: -6.554543972015381
    10. 'calculate' → logprob: -6.679543972015381

Token 107: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00031055594445206225
    2. '()' → logprob: -8.125310897827148
    3. '():
' → logprob: -11.625310897827148
    4. ' ():' → logprob: -12.875310897827148
    5. '(:' → logprob: -13.250310897827148
    6. ':' → logprob: -14.500310897827148
    7. '():

' → logprob: -15.125310897827148
    8. '(_:' → logprob: -16.25031089782715
    9. '(' → logprob: -16.50031089782715
    10. '(":' → logprob: -16.75031089782715

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.579495235811919e-05
    2. 'pass' → logprob: -9.62509536743164
    3. 'n' → logprob: -10.62509536743164
    4. '  ' → logprob: -12.50009536743164
    5. 'print' → logprob: -14.37509536743164
    6. 'if' → logprob: -15.50009536743164
    7. 'compute' → logprob: -15.50009536743164
    8. '```' → logprob: -15.50009536743164
    9. 'x' → logprob: -15.62509536743164
    10. '    ' → logprob: -16.00009536743164

Token 109: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7042881846427917
    2. '   ' → logprob: -0.7042881846427917
    3. 'compute' → logprob: -4.579288005828857
    4. 'pass' → logprob: -7.204288005828857
    5. 'if' → logprob: -10.454288482666016
    6. 'print' → logprob: -10.704288482666016
    7. 'num' → logprob: -11.329288482666016
    8. '  ' → logprob: -12.579288482666016
    9. ' n' → logprob: -13.204288482666016
    10. 'calculate' → logprob: -13.704288482666016

Token 110: ' True' (ID: 6432)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10009677708148956
    2. ' True' → logprob: -3.2250967025756836
    3. ' ' → logprob: -4.100096702575684
    4. 'True' → logprob: -4.350096702575684
    5. '   ' → logprob: -4.475096702575684
    6. ' :' → logprob: -5.100096702575684
    7. '<|end|>' → logprob: -5.725096702575684
    8. '```' → logprob: -7.600096702575684
    9. '():' → logprob: -7.725096702575684
    10. ' _:' → logprob: -7.725096702575684

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.746380237629637e-05
    2. ':
' → logprob: -9.500097274780273
    3. '   ' → logprob: -11.500097274780273
    4. ':

' → logprob: -12.625097274780273
    5. '::' → logprob: -12.875097274780273
    6. ':`' → logprob: -13.000097274780273
    7. ':**' → logprob: -13.875097274780273
    8. ':\' → logprob: -14.000097274780273
    9. ':<' → logprob: -14.250097274780273
    10. ':</' → logprob: -14.875097274780273

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.47626737493556e-05
    2. 'pass' → logprob: -10.87503433227539
    3. '   ' → logprob: -12.00003433227539
    4. '      ' → logprob: -12.50003433227539
    5. '        ' → logprob: -12.87503433227539
    6. '     ' → logprob: -13.00003433227539
    7. 'print' → logprob: -15.12503433227539
    8. '           ' → logprob: -15.62503433227539
    9. '    ' → logprob: -15.75003433227539
    10. '         ' → logprob: -16.12503433227539

Token 113: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02089371159672737
    2. '       ' → logprob: -4.395893573760986
    3. 'pass' → logprob: -5.770893573760986
    4. 'user' → logprob: -6.395893573760986
    5. 'input' → logprob: -6.770893573760986
    6. '   ' → logprob: -6.895893573760986
    7. '           ' → logprob: -7.020893573760986
    8. 'try' → logprob: -8.770894050598145
    9. 'num' → logprob: -9.020894050598145
    10. 'x' → logprob: -10.020894050598145

Token 114: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.4551142454147339
    2. 'True' → logprob: -1.5801142454147339
    3. '       ' → logprob: -2.5801143646240234
    4. ' True' → logprob: -2.7051143646240234
    5. '   ' → logprob: -2.8301143646240234
    6. ' ' → logprob: -2.8301143646240234
    7. 'condition' → logprob: -2.8301143646240234
    8. '           ' → logprob: -2.9551143646240234
    9. 'x' → logprob: -3.5801143646240234
    10. 'user' → logprob: -3.7051143646240234

Token 115: 'val' (ID: 1105)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7490935325622559
    2. 'True' → logprob: -1.1240935325622559
    3. 'condition' → logprob: -2.249093532562256
    4. 'False' → logprob: -2.874093532562256
    5. 'user' → logprob: -4.624093532562256
    6. 'n' → logprob: -4.624093532562256
    7. 'x' → logprob: -4.999093532562256
    8. 'not' → logprob: -5.249093532562256
    9. 'len' → logprob: -5.374093532562256
    10. '1' → logprob: -5.999093532562256

Token 116: ' :=' (ID: 3405)
  Prédit: ':='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':=' → logprob: -0.6135450005531311
    2. 'id' → logprob: -0.9885450005531311
    3. 'or' → logprob: -3.3635449409484863
    4. '==' → logprob: -3.9885449409484863
    5. 'ue' → logprob: -4.238544940948486
    6. ' :=' → logprob: -4.363544940948486
    7. 'ide' → logprob: -6.488544940948486
    8. ':' → logprob: -6.613544940948486
    9. 'ido' → logprob: -7.363544940948486
    10. '>=' → logprob: -7.863544940948486

Token 117: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.829823102336377e-05
    2. 'int' → logprob: -9.62509822845459
    3. 'float' → logprob: -10.37509822845459
    4. ' input' → logprob: -13.87509822845459
    5. '_input' → logprob: -17.750099182128906
    6. '.input' → logprob: -18.125099182128906
    7. 'get' → logprob: -18.375099182128906
    8. '	input' → logprob: -18.500099182128906
    9. 'None' → logprob: -18.625099182128906
    10. 'inputs' → logprob: -18.875099182128906

Token 118: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1752474308013916
    2. '().' → logprob: -2.5502474308013916
    3. '()):
' → logprob: -3.5502474308013916
    4. '()).' → logprob: -3.6752474308013916
    5. '()' → logprob: -3.9252474308013916
    6. '("' → logprob: -5.0502471923828125
    7. '('' → logprob: -7.4252471923828125
    8. '():' → logprob: -8.050247192382812
    9. '());' → logprob: -8.175247192382812
    10. '()`' → logprob: -8.800247192382812

Token 119: ' ==' (ID: 951)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.22881628572940826
    2. '==' → logprob: -1.603816270828247
    3. 'strip' → logprob: -6.728816509246826
    4. ' ==' → logprob: -7.103816509246826
    5. '.' → logprob: -7.978816509246826
    6. '.lower' → logprob: -8.103816032409668
    7. '.is' → logprob: -8.353816032409668
    8. 'is' → logprob: -8.353816032409668
    9. ':' → logprob: -9.353816032409668
    10. ':=' → logprob: -9.978816032409668

Token 120: ' '-' (ID: 17489)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04971490427851677
    2. ''' → logprob: -3.4247148036956787
    3. ''ex' → logprob: -4.299715042114258
    4. ''q' → logprob: -7.049715042114258
    5. ''s' → logprob: -7.174715042114258
    6. ''end' → logprob: -8.799715042114258
    7. '"":' → logprob: -9.299715042114258
    8. '""' → logprob: -9.424715042114258
    9. '''' → logprob: -9.674715042114258
    10. ''d' → logprob: -10.049715042114258

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. 'exit' → logprob: -12.750004768371582
    3. ''' → logprob: -14.000004768371582
    4. '-' → logprob: -14.250004768371582
    5. '':' → logprob: -15.375004768371582
    6. '':
' → logprob: -15.875004768371582
    7. 'q' → logprob: -16.5000057220459
    8. 'quit' → logprob: -16.6250057220459
    9. '0' → logprob: -17.3750057220459
    10. 'EXIT' → logprob: -17.5000057220459

Token 122: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -1.0103638172149658
    2. '':
' → logprob: -1.0103638172149658
    3. ':
' → logprob: -2.010363817214966
    4. ':' → logprob: -2.760363817214966
    5. '       ' → logprob: -3.135363817214966
    6. '           ' → logprob: -4.135363578796387
    7. '):
' → logprob: -5.135363578796387
    8. '):' → logprob: -5.885363578796387
    9. '-' → logprob: -6.260363578796387
    10. '   ' → logprob: -6.510363578796387

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.051066520740278e-05
    2. 'break' → logprob: -9.750060081481934
    3. '          ' → logprob: -14.500060081481934
    4. '               ' → logprob: -14.625060081481934
    5. 'return' → logprob: -14.750060081481934
    6. '         ' → logprob: -15.125060081481934
    7. '       ' → logprob: -15.250060081481934
    8. '            ' → logprob: -15.625060081481934
    9. 'print' → logprob: -17.12506103515625
    10. ' break' → logprob: -17.37506103515625

Token 124: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.029777104035019875
    2. '           ' → logprob: -3.5297770500183105
    3. 'return' → logprob: -11.279777526855469
    4. ' break' → logprob: -11.529777526855469
    5. 'print' → logprob: -12.904777526855469
    6. '               ' → logprob: -13.779777526855469
    7. 'Break' → logprob: -15.654777526855469
    8. '            ' → logprob: -16.40477752685547
    9. '             ' → logprob: -16.52977752685547
    10. 'breaking' → logprob: -16.65477752685547

Token 125: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.126968115568161
    2. '   ' → logprob: -2.1269681453704834
    3. '           ' → logprob: -10.376968383789062
    4. '     ' → logprob: -12.876968383789062
    5. '      ' → logprob: -13.001968383789062
    6. '  ' → logprob: -13.626968383789062
    7. '    ' → logprob: -13.751968383789062
    8. '        ' → logprob: -14.376968383789062
    9. '               ' → logprob: -14.376968383789062
    10. 'print' → logprob: -15.376968383789062

Token 126: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31327730417251587
    2. '       ' → logprob: -1.313277244567871
    3. '           ' → logprob: -11.938277244567871
    4. '  ' → logprob: -12.938277244567871
    5. 'print' → logprob: -13.438277244567871
    6. '     ' → logprob: -13.563277244567871
    7. '      ' → logprob: -13.938277244567871
    8. 'main' → logprob: -13.938277244567871
    9. '    ' → logprob: -14.313277244567871
    10. 'compute' → logprob: -14.938277244567871

Token 127: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015384310390800238
    2. 'n' (adapté à ' n') → logprob: -6.876538276672363
    3. 'print' → logprob: -8.001538276672363
    4. '           ' → logprob: -9.501538276672363
    5. 'val' → logprob: -10.001538276672363
    6. '   ' → logprob: -10.126538276672363
    7. 'x' → logprob: -12.751538276672363
    8. '      ' → logprob: -13.126538276672363
    9. '        ' → logprob: -13.751538276672363
    10. 'process' → logprob: -13.876538276672363

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5938966870307922
    2. ' =' → logprob: -0.9688966870307922
    3. '       ' → logprob: -2.9688966274261475
    4. '=int' → logprob: -4.343896865844727
    5. ':' → logprob: -6.343896865844727
    6. '   ' → logprob: -6.468896865844727
    7. ':int' → logprob: -8.593896865844727
    8. '        ' → logprob: -9.218896865844727
    9. '           ' → logprob: -9.218896865844727
    10. '         ' → logprob: -10.218896865844727

Token 129: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.982165698194876e-05
    2. ' int' → logprob: -9.500080108642578
    3. '       ' → logprob: -12.250080108642578
    4. '           ' → logprob: -16.375080108642578
    5. '(int' → logprob: -17.125080108642578
    6. '<int' → logprob: -17.625080108642578
    7. '	int' → logprob: -18.125080108642578
    8. '   ' → logprob: -18.500080108642578
    9. '=int' → logprob: -19.125080108642578
    10. 'intval' → logprob: -19.125080108642578

Token 130: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.31332993507385254
    2. '(input' → logprob: -1.3133299350738525
    3. '(' → logprob: -10.313329696655273
    4. '(value' → logprob: -10.563329696655273
    5. '(inp' → logprob: -13.063329696655273
    6. '(eval' → logprob: -13.438329696655273
    7. '(parse' → logprob: -13.688329696655273
    8. '(var' → logprob: -13.813329696655273
    9. '(valor' → logprob: -14.313329696655273
    10. 'input' → logprob: -14.813329696655273

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14423103630542755
    2. ')
' → logprob: -2.019231081008911
    3. '       ' → logprob: -7.019230842590332
    4. '.strip' → logprob: -7.519230842590332
    5. ')

' → logprob: -10.269230842590332
    6. '   ' → logprob: -10.519230842590332
    7. '           ' → logprob: -10.769230842590332
    8. ')
' → logprob: -11.144230842590332
    9. '.rstrip' → logprob: -12.269230842590332
    10. '))' → logprob: -12.769230842590332

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003361774142831564
    2. '   ' → logprob: -8.000336647033691
    3. '           ' → logprob: -14.875336647033691
    4. '      ' → logprob: -15.500336647033691
    5. '     ' → logprob: -15.500336647033691
    6. '        ' → logprob: -16.875335693359375
    7. '    ' → logprob: -17.750335693359375
    8. '               ' → logprob: -18.125335693359375
    9. '  ' → logprob: -18.625335693359375
    10. 'print' → logprob: -18.750335693359375

Token 133: ' x' (ID: 1215)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09012435376644135
    2. '       ' → logprob: -2.8401243686676025
    3. 'pos' → logprob: -4.590124130249023
    4. 'position' → logprob: -4.590124130249023
    5. 'compute' → logprob: -5.715124130249023
    6. 'result' → logprob: -5.840124130249023
    7. 'final' → logprob: -6.715124130249023
    8. 'x' (adapté à ' x') → logprob: -11.215124130249023
    9. 'output' → logprob: -11.465124130249023
    10. 'positions' → logprob: -12.340124130249023

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5451681974809617e-05
    2. ',y' → logprob: -11.125015258789062
    3. '=' → logprob: -15.500015258789062
    4. ' =' → logprob: -15.750015258789062
    5. '，' → logprob: -16.250015258789062
    6. 'y' → logprob: -16.500015258789062
    7. ' ,' → logprob: -16.875015258789062
    8. '_,' → logprob: -17.125015258789062
    9. ',x' → logprob: -17.750015258789062
    10. ',
' → logprob: -17.875015258789062

Token 135: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.547789674485102e-05
    2. ' y' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.625036239624023
    4. '	y' → logprob: -18.625036239624023
    5. '  ' → logprob: -19.875036239624023
    6. ' ' → logprob: -20.000036239624023
    7. '       ' → logprob: -20.500036239624023
    8. '    ' → logprob: -20.750036239624023
    9. '_y' → logprob: -21.125036239624023
    10. 'x' → logprob: -21.250036239624023

Token 136: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009992250707000494
    2. ' =' → logprob: -7.000999450683594
    3. ',' → logprob: -9.375999450683594
    4. '   ' → logprob: -12.875999450683594
    5. '=`' → logprob: -16.625999450683594
    6. ' ' → logprob: -17.000999450683594
    7. '       ' → logprob: -17.000999450683594
    8. '=
' → logprob: -17.375999450683594
    9. '  ' → logprob: -17.875999450683594
    10. '```' → logprob: -17.875999450683594

Token 137: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -7.941850526549388e-06
    2. ' compute' → logprob: -11.750007629394531
    3. 'comput' → logprob: -18.87500762939453
    4. '.compute' → logprob: -19.37500762939453
    5. 'computed' → logprob: -20.12500762939453
    6. 'com' → logprob: -20.50000762939453
    7. '   ' → logprob: -20.75000762939453
    8. 'calculate' → logprob: -21.00000762939453
    9. '       ' → logprob: -21.25000762939453
    10. 'computer' → logprob: -21.25000762939453

Token 138: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -5.56233171664644e-05
    2. '_Final' → logprob: -11.250055313110352
    3. 'Final' → logprob: -11.625055313110352
    4. 'final' → logprob: -11.875055313110352
    5. '_FINAL' → logprob: -11.875055313110352
    6. '_finalize' → logprob: -12.000055313110352
    7. '_' → logprob: -12.000055313110352
    8. '_f' → logprob: -14.000055313110352
    9. '_t' → logprob: -14.125055313110352
    10. ' final' → logprob: -14.625055313110352

Token 139: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.0002457238151691854
    2. '_pos' → logprob: -8.875246047973633
    3. '_' → logprob: -9.875246047973633
    4. '_POSITION' → logprob: -11.500246047973633
    5. '\' → logprob: -12.500246047973633
    6. '_location' → logprob: -12.500246047973633
    7. '_positions' → logprob: -12.625246047973633
    8. '_post' → logprob: -12.750246047973633
    9. '_Position' → logprob: -13.000246047973633
    10. '_pose' → logprob: -13.375246047973633

Token 140: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.125
    3. '(N' → logprob: -20.375
    4. '(num' → logprob: -21.25
    5. 'n' → logprob: -21.5
    6. '(m' → logprob: -22.125
    7. '(int' → logprob: -22.375
    8. '(v' → logprob: -22.5
    9. '(np' → logprob: -22.75
    10. '(x' → logprob: -22.875

Token 141: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002480412134900689
    2. ')
' → logprob: -6.002480506896973
    3. ')

' → logprob: -13.002480506896973
    4. ')
' → logprob: -13.877480506896973
    5. ')`' → logprob: -14.127480506896973
    6. '```' → logprob: -15.002480506896973
    7. '))' → logprob: -15.252480506896973
    8. ').' → logprob: -17.127479553222656
    9. '())' → logprob: -17.377479553222656
    10. ')`
' → logprob: -17.502479553222656

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.8444881536415778e-05
    2. 'print' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.625028610229492
    4. '           ' → logprob: -15.375028610229492
    5. '      ' → logprob: -16.375028610229492
    6. '     ' → logprob: -17.000028610229492
    7. '        ' → logprob: -17.375028610229492
    8. '               ' → logprob: -17.500028610229492
    9. '         ' → logprob: -18.750028610229492
    10. '                   ' → logprob: -19.750028610229492

Token 143: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.505351095460355e-05
    2. '       ' → logprob: -9.500075340270996
    3. ' print' → logprob: -16.37507438659668
    4. 'printf' → logprob: -18.62507438659668
    5. '.print' → logprob: -19.50007438659668
    6. 'println' → logprob: -19.62507438659668
    7. 'Print' → logprob: -20.00007438659668
    8. '#print' → logprob: -20.25007438659668
    9. '	print' → logprob: -21.50007438659668
    10. 'prints' → logprob: -21.50007438659668

Token 144: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.23023392260074615
    2. '(x' → logprob: -1.605233907699585
    3. '(' → logprob: -5.855234146118164
    4. '()' → logprob: -7.730234146118164
    5. '("' → logprob: -7.855234146118164
    6. '('' → logprob: -7.980234146118164
    7. '("("' → logprob: -8.480234146118164
    8. '()(' → logprob: -9.105234146118164
    9. '((' → logprob: -9.730234146118164
    10. '(n' → logprob: -9.980234146118164

Token 145: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.03229966759681702
    2. '"' → logprob: -4.157299518585205
    3. ''{' → logprob: -4.282299518585205
    4. ''' → logprob: -6.407299518585205
    5. '"\' → logprob: -8.282299995422363
    6. '"(' → logprob: -9.282299995422363
    7. '".' → logprob: -9.407299995422363
    8. '"x' → logprob: -9.657299995422363
    9. '"...' → logprob: -11.032299995422363
    10. ''\' → logprob: -11.032299995422363

Token 146: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.246537173457909e-06
    2. '(x' → logprob: -12.500003814697266
    3. 'round' → logprob: -16.125003814697266
    4. '{x' → logprob: -16.125003814697266
    5. ' x' → logprob: -16.375003814697266
    6. '"x' → logprob: -16.625003814697266
    7. 'n' → logprob: -17.500003814697266
    8. ''x' → logprob: -18.375003814697266
    9. '.x' → logprob: -19.500003814697266
    10. '(' → logprob: -20.250003814697266

Token 147: ':.' (ID: 27474)
  Prédit: '},'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.00010843054042197764
    2. ':.' → logprob: -9.50010871887207
    3. '}' → logprob: -10.62510871887207
    4. '},{' → logprob: -11.87510871887207
    5. ':' → logprob: -13.50010871887207
    6. ':,' → logprob: -15.50010871887207
    7. '}\' → logprob: -15.75010871887207
    8. '}{' → logprob: -16.12510871887207
    9. ',' → logprob: -16.50010871887207
    10. '=' → logprob: -16.75010871887207

Token 148: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 'f' → logprob: -16.125
    3. '{' → logprob: -19.75
    4. '02' → logprob: -20.625
    5. '₂' → logprob: -20.875
    6. 'two' → logprob: -21.625
    7. '<' → logprob: -22.125
    8. '{"' → logprob: -22.25
    9. '3' → logprob: -22.5
    10. ' two' → logprob: -22.75

Token 149: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. ' f' → logprob: -18.0
    3. 'g' → logprob: -18.75
    4. '}' → logprob: -19.0
    5. '(f' → logprob: -20.625
    6. '	f' → logprob: -20.625
    7. '   ' → logprob: -20.75
    8. 'ф' → logprob: -20.875
    9. '<f' → logprob: -21.5
    10. 'fl' → logprob: -21.875

Token 150: '}\' (ID: 21170)
  Prédit: '},'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.0016261448618024588
    2. '}' → logprob: -6.501626014709473
    3. '}{' → logprob: -9.751626014709473
    4. 'f' → logprob: -10.501626014709473
    5. '}",' → logprob: -10.876626014709473
    6. '},{' → logprob: -11.501626014709473
    7. '}\' → logprob: -12.376626014709473
    8. '}"' → logprob: -13.751626014709473
    9. '}.' → logprob: -14.376626014709473
    10. '}|' → logprob: -14.376626014709473

Token 151: 'n' (ID: 77)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3185667395591736
    2. 'f' → logprob: -1.5685667991638184
    3. '{' → logprob: -3.3185667991638184
    4. 'y' → logprob: -3.6935667991638184
    5. 'n' → logprob: -5.943566799163818
    6. ',' → logprob: -8.94356632232666
    7. '}' → logprob: -9.19356632232666
    8. '"{' → logprob: -9.19356632232666
    9. 'g' → logprob: -9.69356632232666
    10. '},' → logprob: -10.06856632232666

Token 152: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -1.3856492842023727e-06
    2. '"{' → logprob: -14.375000953674316
    3. '{x' → logprob: -15.000000953674316
    4. '{o' → logprob: -15.875000953674316
    5. '{k' → logprob: -16.500001907348633
    6. ' {' → logprob: -16.625001907348633
    7. '       ' → logprob: -17.375001907348633
    8. '{s' → logprob: -17.500001907348633
    9. '{i' → logprob: -17.625001907348633
    10. '{name' → logprob: -17.750001907348633

Token 153: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.896309739408025e-07
    2. '}' → logprob: -15.375000953674316
    3. '}{' → logprob: -15.375000953674316
    4. ' y' → logprob: -15.750000953674316
    5. 'y's' → logprob: -16.625
    6. '{' → logprob: -17.0
    7. '.y' → logprob: -18.875
    8. '	y' → logprob: -19.875
    9. '(y' → logprob: -20.625
    10. '_y' → logprob: -20.75

Token 154: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -1.9361264946837764e-07
    2. ':' → logprob: -16.125
    3. '.:' → logprob: -17.625
    4. ' :.' → logprob: -17.75
    5. '}.' → logprob: -18.0
    6. ':.

' → logprob: -18.75
    7. '}".' → logprob: -18.875
    8. '::.' → logprob: -19.5
    9. ':,' → logprob: -20.25
    10. ':f' → logprob: -20.75

Token 155: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'f' → logprob: -18.0
    3. '02' → logprob: -18.875
    4. 'two' → logprob: -21.25
    5. '₂' → logprob: -22.75
    6. '200' → logprob: -22.875
    7. '{' → logprob: -23.5
    8. '２' → logprob: -23.625
    9. '202' → logprob: -23.625
    10. '{"' → logprob: -24.0

Token 156: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. ' f' → logprob: -19.125
    3. 'ф' → logprob: -20.875
    4. '.f' → logprob: -21.0
    5. '(f' → logprob: -21.125
    6. 'F' → logprob: -21.375
    7. 'ふ' → logprob: -21.75
    8. ''f' → logprob: -21.75
    9. ':f' → logprob: -22.0
    10. '-f' → logprob: -22.0

Token 157: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.0004552215104922652
    2. '}\' → logprob: -8.750454902648926
    3. '})' → logprob: -9.250454902648926
    4. '}' → logprob: -9.875454902648926
    5. '}')' → logprob: -9.875454902648926
    6. '}")
' → logprob: -10.625454902648926
    7. '}"' → logprob: -10.750454902648926
    8. '}}' → logprob: -10.875454902648926
    9. '}{' → logprob: -11.250454902648926
    10. '}")

' → logprob: -12.250454902648926

Token 158: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00811817217618227
    2. '```' → logprob: -5.383118152618408
    3. 'main' → logprob: -6.383118152618408
    4. 'def' → logprob: -7.133118152618408
    5. 'print' → logprob: -7.883118152618408
    6. '   ' → logprob: -7.883118152618408
    7. '``' → logprob: -9.633118629455566
    8. '0' → logprob: -10.008118629455566
    9. '#' → logprob: -10.383118629455566
    10. '       ' → logprob: -11.008118629455566

Token 159: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31360429525375366
    2. ' __' → logprob: -1.3136043548583984
    3. 'name' → logprob: -8.063604354858398
    4. ' ' → logprob: -11.938604354858398
    5. '_name' → logprob: -12.438604354858398
    6. '  ' → logprob: -12.563604354858398
    7. ' "__' → logprob: -12.813604354858398
    8. ' '__' → logprob: -12.813604354858398
    9. '   ' → logprob: -13.063604354858398
    10. ' name' → logprob: -13.188604354858398

Token 160: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.07453533262014389
    2. '__' → logprob: -2.949535369873047
    3. '==' → logprob: -3.949535369873047
    4. 'main' → logprob: -9.199535369873047
    5. '=="' → logprob: -10.449535369873047
    6. '_name' → logprob: -11.574535369873047
    7. 'nam' → logprob: -11.574535369873047
    8. '___' → logprob: -11.574535369873047
    9. '"' → logprob: -11.699535369873047
    10. '`' → logprob: -11.824535369873047

Token 161: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00243914732709527
    2. '__:' → logprob: -6.502439022064209
    3. '__('' → logprob: -7.377439022064209
    4. '__.__' → logprob: -9.502439498901367
    5. '__(' → logprob: -9.502439498901367
    6. '__.' → logprob: -11.002439498901367
    7. '__("' → logprob: -11.002439498901367
    8. '__':
' → logprob: -11.127439498901367
    9. '__((' → logprob: -11.127439498901367
    10. '::__' → logprob: -11.127439498901367

Token 162: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03398936241865158
    2. '==' → logprob: -3.408989429473877
    3. '=='' → logprob: -8.283988952636719
    4. '=="' → logprob: -9.783988952636719
    5. '___' → logprob: -11.283988952636719
    6. '==
' → logprob: -12.033988952636719
    7. ' ==' → logprob: -12.533988952636719
    8. '__('' → logprob: -13.158988952636719
    9. '==(' → logprob: -13.533988952636719
    10. '__.__' → logprob: -13.658988952636719

Token 163: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.022802090272307396
    2. ''' → logprob: -4.272801876068115
    3. '__' → logprob: -5.022801876068115
    4. ' "__' → logprob: -6.647801876068115
    5. ' '__' → logprob: -8.022802352905273
    6. '   ' → logprob: -9.272802352905273
    7. '"'' → logprob: -9.522802352905273
    8. '"`' → logprob: -10.022802352905273
    9. '"name' → logprob: -10.397802352905273
    10. '`' → logprob: -10.522802352905273

Token 164: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -8.53050296427682e-05
    2. 'name' → logprob: -9.37508487701416
    3. '_main' → logprob: -16.375085830688477
    4. 'MAIN' → logprob: -16.375085830688477
    5. '__' → logprob: -17.000085830688477
    6. 'nam' → logprob: -17.250085830688477
    7. '-main' → logprob: -17.375085830688477
    8. ' main' → logprob: -17.625085830688477
    9. 'Main' → logprob: -17.625085830688477
    10. 'mai' → logprob: -17.750085830688477

Token 165: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.024365082383155823
    2. '__":
' → logprob: -3.774365186691284
    3. '__("' → logprob: -8.024365425109863
    4. '__:' → logprob: -8.149365425109863
    5. '___' → logprob: -8.774365425109863
    6. '__(' → logprob: -9.024365425109863
    7. '__('' → logprob: -9.524365425109863
    8. '__",' → logprob: -10.649365425109863
    9. '__["' → logprob: -10.899365425109863
    10. '("__' → logprob: -11.024365425109863

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.128163257315464e-07
    2. '  ' → logprob: -15.5
    3. 'main' → logprob: -17.0
    4. '	main' → logprob: -18.375
    5. '   ' → logprob: -19.75
    6. '    ' → logprob: -20.625
    7. '       ' → logprob: -21.0
    8. ' main' → logprob: -21.125
    9. ' ' → logprob: -21.375
    10. '   ' → logprob: -21.5

Token 167: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.005253798794001341
    2. '   ' → logprob: -5.255253791809082
    3. '	main' → logprob: -11.255253791809082
    4. ' main' → logprob: -11.880253791809082
    5. '.main' → logprob: -16.5052547454834
    6. '_main' → logprob: -17.2552547454834
    7. '-main' → logprob: -17.7552547454834
    8. '主' → logprob: -18.0052547454834
    9. 'Main' → logprob: -18.0052547454834
    10. '  ' → logprob: -18.7552547454834

Token 168: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.849109119386412e-06
    2. '()`' → logprob: -11.875009536743164
    3. '()(' → logprob: -14.125009536743164
    4. '(' → logprob: -14.500009536743164
    5. ']()' → logprob: -15.375009536743164
    6. '()
' → logprob: -15.625009536743164
    7. '`()' → logprob: -15.625009536743164
    8. '()"' → logprob: -15.750009536743164
    9. '().' → logprob: -15.750009536743164
    10. ' ()' → logprob: -15.875009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 166
Tokens correctement prédits (1ère position, stricte): 66
Tokens correctement prédits (1ère position, avec adaptation): 70
Tokens correctement prédits (top 10): 142
Précision stricte (1ère position): 39.76%
Précision adaptée (1ère position): 42.17%
Précision (top 10): 85.54%
================================================================================
