================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_inputs():
    return map(int, input().split())

def init_array(n):
    return [0] * n

def outer_loop_range(n):
    return range(n)

def inner_loop_range(i, n):
    return range(i + 1, n)

def compute_distance(i, j, x, y):
    return min(j - i, abs(i - x + 1) + abs(j - y + 1) + 1)

def increment_count(arr, idx):
    arr[idx] += 1

def process_pairs(n, x, y, arr):
    for i in outer_loop_range(n):
        for j in inner_loop_range(i, n):
            d = compute_distance(i, j, x, y)
            increment_count(arr, d)

def output_result(arr):
    for b in arr[1:]:
        print(b)

def main():
    n, x, y = get_inputs()
    a = init_array(n)
    process_pairs(n, x, y, a)
    output_result(a)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_inputs' (ID: 67304)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00875177327543497
    2. '_' → logprob: -5.25875186920166
    3. '():' → logprob: -6.00875186920166
    4. '(_' → logprob: -7.75875186920166
    5. '(:' → logprob: -8.63375186920166
    6. '(_:' → logprob: -9.13375186920166
    7. '```' → logprob: -9.38375186920166
    8. ' (' → logprob: -10.00875186920166
    9. '()' → logprob: -10.38375186920166
    10. '("("' → logprob: -11.00875186920166

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.16963595151901245
    2. ':' → logprob: -3.2946360111236572
    3. '\n' → logprob: -3.4196360111236572
    4. '\' → logprob: -3.6696360111236572
    5. '():' → logprob: -3.9196360111236572
    6. '   ' → logprob: -4.419635772705078
    7. '``' → logprob: -5.044635772705078
    8. '    
' → logprob: -5.419635772705078
    9. '(' → logprob: -5.419635772705078
    10. ''' → logprob: -6.294635772705078

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.376362144947052
    2. '   ' → logprob: -2.2513620853424072
    3. '(' → logprob: -2.7513620853424072
    4. '```' → logprob: -2.7513620853424072
    5. '`' → logprob: -4.251362323760986
    6. 'input' → logprob: -4.626362323760986
    7. '[' → logprob: -4.626362323760986
    8. 'x' → logprob: -4.626362323760986
    9. ' ' → logprob: -5.001362323760986
    10. ' return' → logprob: -5.001362323760986

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4709731638431549
    2. ' []' → logprob: -1.0959731340408325
    3. ' None' → logprob: -3.970973253250122
    4. '"' → logprob: -4.720973014831543
    5. '[]' → logprob: -5.720973014831543
    6. ''' → logprob: -5.845973014831543
    7. 'None' → logprob: -6.345973014831543
    8. '  ' → logprob: -6.345973014831543
    9. ' (' → logprob: -7.220973014831543
    10. ' ()' → logprob: -7.345973014831543

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011384019628167152
    2. '(lambda' → logprob: -4.511384010314941
    3. '(
' → logprob: -9.511384010314941
    4. ' (' → logprob: -9.511384010314941
    5. '(str' → logprob: -10.136384010314941
    6. '(int' → logprob: -10.386384010314941
    7. '(func' → logprob: -10.761384010314941
    8. '(s' → logprob: -11.636384010314941
    9. '(None' → logprob: -11.636384010314941
    10. '(list' → logprob: -12.136384010314941

Token 8: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5789183974266052
    2. ')' → logprob: -0.9539183974266052
    3. '(input' → logprob: -3.32891845703125
    4. '(user' → logprob: -5.70391845703125
    5. '(open' → logprob: -5.95391845703125
    6. '(
' → logprob: -6.20391845703125
    7. '<|end|>' → logprob: -6.32891845703125
    8. '(token' → logprob: -6.70391845703125
    9. '())' → logprob: -7.20391845703125
    10. '()' → logprob: -7.95391845703125

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3578171133995056
    2. ' input' → logprob: -1.2328171730041504
    3. '(input' → logprob: -4.73281717300415
    4. ')' → logprob: -7.98281717300415
    5. '<|end|>' → logprob: -10.357816696166992
    6. ',input' → logprob: -10.607816696166992
    7. '[input' → logprob: -10.732816696166992
    8. ' )' → logprob: -10.857816696166992
    9. ' (' → logprob: -10.982816696166992
    10. '(' → logprob: -10.982816696166992

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06003992632031441
    2. '())' → logprob: -3.18503999710083
    3. '('' → logprob: -4.56003999710083
    4. '(' → logprob: -5.43503999710083
    5. '().' → logprob: -7.43503999710083
    6. '(()' → logprob: -7.68503999710083
    7. ')' → logprob: -7.93503999710083
    8. '());' → logprob: -8.685039520263672
    9. '();)' → logprob: -9.185039520263672
    10. '()))' → logprob: -9.810039520263672

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004338877333793789
    2. 'strip' → logprob: -7.750433921813965
    3. 'rstrip' → logprob: -12.875433921813965
    4. ' split' → logprob: -14.375433921813965
    5. '(split' → logprob: -16.37543296813965
    6. 'spl' → logprob: -18.37543296813965
    7. ')' → logprob: -19.25043296813965
    8. '().' → logprob: -19.25043296813965
    9. 'read' → logprob: -19.50043296813965
    10. '.split' → logprob: -19.75043296813965

Token 12: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1694200038909912
    2. '()))' → logprob: -1.9194200038909912
    3. ')' → logprob: -5.16942024230957
    4. '))' → logprob: -6.29442024230957
    5. '()' → logprob: -6.66942024230957
    6. '(' → logprob: -8.29442024230957
    7. ' ())' → logprob: -9.91942024230957
    8. '()),' → logprob: -11.41942024230957
    9. '())
' → logprob: -11.66942024230957
    10. '`()' → logprob: -12.41942024230957

Token 13: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.307345986366272
    2. 'x' → logprob: -1.932345986366272
    3. 'for' → logprob: -2.0573458671569824
    4. 'def' → logprob: -2.5573458671569824
    5. 'n' → logprob: -2.6823458671569824
    6. 'a' → logprob: -2.6823458671569824
    7. '\n' → logprob: -2.9323458671569824
    8. '(' → logprob: -3.1823458671569824
    9. '\' → logprob: -3.5573458671569824
    10. '```' → logprob: -3.9323458671569824

Token 14: ' init' (ID: 6327)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.2365841567516327
    2. ' calculate' → logprob: -2.111584186553955
    3. ' process' → logprob: -3.236584186553955
    4. ' main' → logprob: -3.736584186553955
    5. ' solve' → logprob: -4.111584186553955
    6. ' compute' → logprob: -5.361584186553955
    7. ' find' → logprob: -6.736584186553955
    8. ' predict' → logprob: -7.111584186553955
    9. ' print' → logprob: -7.736584186553955
    10. ' test' → logprob: -7.986584186553955

Token 15: '_array' (ID: 8766)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03612670674920082
    2. '(' → logprob: -3.6611266136169434
    3. '_params' → logprob: -6.286126613616943
    4. '_parameters' → logprob: -6.786126613616943
    5. ' _' → logprob: -6.911126613616943
    6. '_array' → logprob: -7.036126613616943
    7. '_data' → logprob: -7.161126613616943
    8. '_user' → logprob: -7.661126613616943
    9. '_database' → logprob: -8.161127090454102
    10. '(_' → logprob: -8.411127090454102

Token 16: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05177050083875656
    2. '_' → logprob: -3.0517704486846924
    3. '()' → logprob: -7.5517706871032715
    4. '(size' → logprob: -7.5517706871032715
    5. 's' → logprob: -7.8017706871032715
    6. '[' → logprob: -8.176770210266113
    7. '```' → logprob: -8.676770210266113
    8. '("("' → logprob: -8.801770210266113
    9. '_array' → logprob: -9.051770210266113
    10. ' (' → logprob: -9.426770210266113

Token 17: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2848431468009949
    2. '):' → logprob: -1.4098432064056396
    3. ',' → logprob: -5.7848429679870605
    4. '_' → logprob: -8.909843444824219
    5. ' )' → logprob: -9.034843444824219
    6. ' ):' → logprob: -9.534843444824219
    7. '):
' → logprob: -9.909843444824219
    8. '*' → logprob: -10.284843444824219
    9. '[' → logprob: -10.659843444824219
    10. '))' → logprob: -10.909843444824219

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003680240362882614
    2. ' return' → logprob: -5.753680229187012
    3. 'return' → logprob: -7.878680229187012
    4. '[' → logprob: -9.878680229187012
    5. '[]' → logprob: -11.253680229187012
    6. '   ' → logprob: -11.378680229187012
    7. ' [' → logprob: -11.628680229187012
    8. 'array' → logprob: -11.878680229187012
    9. '```' → logprob: -11.878680229187012
    10. ' array' → logprob: -12.128680229187012

Token 19: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6350792050361633
    2. ' return' → logprob: -1.8850791454315186
    3. '   ' → logprob: -2.1350791454315186
    4. 'return' (adapté à ' return') → logprob: -2.1350791454315186
    5. ' [' → logprob: -2.5100791454315186
    6. '[
' → logprob: -8.010079383850098
    7. '[n' → logprob: -9.885079383850098
    8. '[array' → logprob: -10.385079383850098
    9. '[]' → logprob: -10.510079383850098
    10. '```' → logprob: -10.635079383850098

Token 20: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47586873173713684
    2. ' [' → logprob: -0.9758687019348145
    3. '[n' → logprob: -6.3508687019348145
    4. '[int' → logprob: -10.725869178771973
    5. '[array' → logprob: -12.350869178771973
    6. '[a' → logprob: -12.725869178771973
    7. '[m' → logprob: -13.100869178771973
    8. '[num' → logprob: -13.475869178771973
    9. '[len' → logprob: -13.600869178771973
    10. '[i' → logprob: -13.600869178771973

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.909333023941144e-05
    2. ' ' → logprob: -9.625068664550781
    3. '[' → logprob: -13.125068664550781
    4. ' [' → logprob: -15.125068664550781
    5. '   ' → logprob: -15.625068664550781
    6. '[]' → logprob: -16.25006866455078
    7. 'None' → logprob: -17.18756866455078
    8. '1' → logprob: -17.31256866455078
    9. ']' → logprob: -17.37506866455078
    10. 'int' → logprob: -17.37506866455078

Token 22: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05091562494635582
    2. ' for' → logprob: -3.5509157180786133
    3. ']*' → logprob: -3.9259157180786133
    4. ' ]' → logprob: -6.800915718078613
    5. 'for' → logprob: -9.425915718078613
    6. ')' → logprob: -11.550915718078613
    7. ']*(' → logprob: -11.800915718078613
    8. '   ' → logprob: -12.800915718078613
    9. '}' → logprob: -13.425915718078613
    10. '	for' → logprob: -13.550915718078613

Token 23: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12922850251197815
    2. ' *' → logprob: -2.5042285919189453
    3. '*n' → logprob: -3.5042285919189453
    4. '[n' → logprob: -5.129228591918945
    5. ' for' → logprob: -6.254228591918945
    6. '*[' → logprob: -7.504228591918945
    7. '[' → logprob: -7.504228591918945
    8. ' [' → logprob: -8.754228591918945
    9. ' ' → logprob: -9.379228591918945
    10. ' n' → logprob: -10.379228591918945

Token 24: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.048587486147880554
    2. ' n' → logprob: -3.0485875606536865
    3. '	n' → logprob: -17.548587799072266
    4. '(n' → logprob: -17.798587799072266
    5. ' ' → logprob: -19.048587799072266
    6. ' (' → logprob: -20.548587799072266
    7. ')n' → logprob: -20.798587799072266
    8. '_n' → logprob: -21.923587799072266
    9. ' ' → logprob: -21.923587799072266
    10. '`' → logprob: -22.548587799072266

Token 25: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5065523386001587
    2. '

' → logprob: -1.1315523386001587
    3. '
' → logprob: -2.631552219390869
    4. '<|end|>' → logprob: -6.506552219390869
    5. '```' → logprob: -8.006552696228027
    6. ' def' → logprob: -8.006552696228027
    7. '<|end|>' → logprob: -8.631552696228027
    8. 'n' → logprob: -8.756552696228027
    9. '
' → logprob: -8.881552696228027
    10. '\' → logprob: -10.006552696228027

Token 26: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003986623603850603
    2. 'n' → logprob: -6.378986835479736
    3. '
' → logprob: -6.753986835479736
    4. '

' → logprob: -7.628986835479736
    5. 'd' → logprob: -8.253986358642578
    6. '```' → logprob: -8.753986358642578
    7. '\' → logprob: -9.128986358642578
    8. 'for' → logprob: -9.878986358642578
    9. '\n' → logprob: -10.878986358642578
    10. 'ndef' → logprob: -12.378986358642578

Token 27: ' outer' (ID: 25982)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.7539600133895874
    2. ' main' → logprob: -1.1289600133895874
    3. ' count' → logprob: -2.503960132598877
    4. ' process' → logprob: -3.128960132598877
    5. ' max' → logprob: -3.503960132598877
    6. ' sum' → logprob: -4.628960132598877
    7. ' calculate' → logprob: -4.753960132598877
    8. ' compute' → logprob: -5.253960132598877
    9. ' merge' → logprob: -5.253960132598877
    10. ' binary' → logprob: -5.503960132598877

Token 28: '_loop' (ID: 40621)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9039068222045898
    2. '_loop' → logprob: -1.6539068222045898
    3. '(' → logprob: -2.02890682220459
    4. '_function' → logprob: -2.52890682220459
    5. ' _' → logprob: -3.15390682220459
    6. '()' → logprob: -3.52890682220459
    7. '_layer' → logprob: -3.77890682220459
    8. '_array' → logprob: -3.90390682220459
    9. '():' → logprob: -3.90390682220459
    10. '(_' → logprob: -4.52890682220459

Token 29: '_range' (ID: 22022)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014785397797822952
    2. '():' → logprob: -4.639785289764404
    3. '(n' → logprob: -5.764785289764404
    4. '_' → logprob: -7.764785289764404
    5. ':' → logprob: -7.889785289764404
    6. '_for' → logprob: -8.889785766601562
    7. '()' → logprob: -9.264785766601562
    8. '(s' → logprob: -9.514785766601562
    9. '(:' → logprob: -9.514785766601562
    10. '(_' → logprob: -9.514785766601562

Token 30: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023756083101034164
    2. '(n' → logprob: -3.7737560272216797
    3. ' (' → logprob: -7.77375602722168
    4. '(size' → logprob: -10.64875602722168
    5. '((' → logprob: -10.89875602722168
    6. '(num' → logprob: -11.39875602722168
    7. '(end' → logprob: -12.52375602722168
    8. 's' → logprob: -12.64875602722168
    9. '(max' → logprob: -12.64875602722168
    10. '(:' → logprob: -12.64875602722168

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00482786912471056
    2. ')' → logprob: -5.879827976226807
    3. ' ):' → logprob: -6.379827976226807
    4. '):
' → logprob: -8.379827499389648
    5. '+' → logprob: -10.004827499389648
    6. '-' → logprob: -11.129827499389648
    7. '():' → logprob: -12.129827499389648
    8. ' )' → logprob: -12.129827499389648
    9. ' ' → logprob: -12.254827499389648
    10. ':' → logprob: -12.504827499389648

Token 32: '   ' (ID: 271)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7241173386573792
    2. ' range' → logprob: -0.9741173386573792
    3. 'n' → logprob: -2.4741172790527344
    4. ' n' → logprob: -3.8491172790527344
    5. '   ' → logprob: -3.9741172790527344
    6. ' for' → logprob: -4.724117279052734
    7. 'for' → logprob: -6.474117279052734
    8. 'return' → logprob: -6.724117279052734
    9. ' return' → logprob: -6.724117279052734
    10. '(range' → logprob: -8.849117279052734

Token 33: ' return' (ID: 622)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17201614379882812
    2. ' range' → logprob: -2.172016143798828
    3. 'n' → logprob: -3.297016143798828
    4. ' n' → logprob: -5.797016143798828
    5. 'return' (adapté à ' return') → logprob: -6.547016143798828
    6. '   ' → logprob: -6.797016143798828
    7. 'for' → logprob: -7.172016143798828
    8. ' return' → logprob: -8.422016143798828
    9. ' for' → logprob: -8.422016143798828
    10. '```' → logprob: -9.297016143798828

Token 34: ' range' (ID: 3352)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0236953496932983
    2. 'n' → logprob: -1.1486953496932983
    3. ' range' → logprob: -1.7736953496932983
    4. 'range' → logprob: -1.8986953496932983
    5. '(n' → logprob: -6.023695468902588
    6. ' (' → logprob: -7.148695468902588
    7. ' ' → logprob: -8.02369499206543
    8. '(range' → logprob: -8.52369499206543
    9. '   ' → logprob: -8.89869499206543
    10. ' int' → logprob: -9.52369499206543

Token 35: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38687989115715027
    2. '(n' → logprob: -1.1368799209594727
    3. ' (' → logprob: -12.511879920959473
    4. '((' → logprob: -12.761879920959473
    5. '(s' → logprob: -14.136879920959473
    6. '(
' → logprob: -15.011879920959473
    7. '(int' → logprob: -15.136879920959473
    8. '1' → logprob: -15.136879920959473
    9. '(len' → logprob: -15.761879920959473
    10. '(i' → logprob: -16.386878967285156

Token 36: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051211610436439514
    2. '-' → logprob: -3.0512115955352783
    3. ' -' → logprob: -6.676211833953857
    4. ' )' → logprob: -6.676211833953857
    5. ')
' → logprob: -9.9262113571167
    6. '   ' → logprob: -11.0512113571167
    7. '+' → logprob: -11.1762113571167
    8. ' ' → logprob: -12.0512113571167
    9. '*' → logprob: -12.5512113571167
    10. '))' → logprob: -13.5512113571167

Token 37: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04632280021905899
    2. '(' → logprob: -3.921322822570801
    3. ':' → logprob: -4.671322822570801
    4. 'for' → logprob: -4.921322822570801
    5. '
' → logprob: -6.296322822570801
    6. ' def' → logprob: -6.421322822570801
    7. '```' → logprob: -6.546322822570801
    8. '<|end|>' → logprob: -7.046322822570801
    9. '*' → logprob: -7.921322822570801
    10. ')' → logprob: -7.921322822570801

Token 38: ' inner' (ID: 12694)
  Prédit: ' inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inner' → logprob: -0.010097680613398552
    2. 'inner' → logprob: -4.760097503662109
    3. ' ' → logprob: -7.135097503662109
    4. ' outer' → logprob: -7.635097503662109
    5. '_inner' → logprob: -9.63509750366211
    6. ' nested' → logprob: -10.76009750366211
    7. 'outer' → logprob: -11.01009750366211
    8. 'n' → logprob: -11.13509750366211
    9. ' def' → logprob: -11.26009750366211
    10. ' get' → logprob: -11.88509750366211

Token 39: '_loop' (ID: 40621)
  Prédit: '_loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_loop' → logprob: -0.006089358124881983
    2. '_range' → logprob: -5.131089210510254
    3. '_' → logprob: -9.381089210510254
    4. '_lo' → logprob: -10.506089210510254
    5. ' _' → logprob: -11.131089210510254
    6. '_outer' → logprob: -11.506089210510254
    7. '_space' → logprob: -12.881089210510254
    8. 'range' → logprob: -13.256089210510254
    9. 'for' → logprob: -13.381089210510254
    10. '_array' → logprob: -13.506089210510254

Token 40: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.00017720005416776985
    2. 'range' → logprob: -9.375177383422852
    3. '(n' → logprob: -9.625177383422852
    4. '(' → logprob: -11.625177383422852
    5. '(range' → logprob: -12.625177383422852
    6. '_ranges' → logprob: -13.125177383422852
    7. 's' → logprob: -13.750177383422852
    8. '_' → logprob: -13.750177383422852
    9. '_length' → logprob: -13.875177383422852
    10. 'Range' → logprob: -14.250177383422852

Token 41: '(i' (ID: 3649)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6344001293182373
    2. '(' → logprob: -0.7594001293182373
    3. '(lambda' → logprob: -7.759400367736816
    4. 'outer' → logprob: -8.134400367736816
    5. '(range' → logprob: -8.259400367736816
    6. '((' → logprob: -8.634400367736816
    7. '_outer' → logprob: -9.009400367736816
    8. '(s' → logprob: -9.134400367736816
    9. '(i' → logprob: -9.259400367736816
    10. '(len' → logprob: -9.759400367736816

Token 42: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02585686929523945
    2. ' +' → logprob: -4.025856971740723
    3. ',' → logprob: -5.150856971740723
    4. '):' → logprob: -7.275856971740723
    5. ')' → logprob: -8.150856971740723
    6. ',n' → logprob: -8.400856971740723
    7. '):
' → logprob: -8.650856971740723
    8. '(n' → logprob: -8.775856971740723
    9. '   ' → logprob: -8.900856971740723
    10. '+n' → logprob: -9.650856971740723

Token 43: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1933276653289795
    2. ' n' → logprob: -2.4433276653289795
    3. 'i' → logprob: -2.8183276653289795
    4. ' i' → logprob: -4.568327903747559
    5. ' outer' → logprob: -5.443327903747559
    6. 'outer' → logprob: -5.568327903747559
    7. ')' → logprob: -5.693327903747559
    8. 'lambda' → logprob: -6.318327903747559
    9. ' ' → logprob: -6.568327903747559
    10. '   ' → logprob: -7.568327903747559

Token 44: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05421774834394455
    2. '+' → logprob: -3.17921781539917
    3. '):' → logprob: -5.05421781539917
    4. '):
' → logprob: -6.55421781539917
    5. '   ' → logprob: -6.80421781539917
    6. ' ,' → logprob: -6.92921781539917
    7. '+i' → logprob: -8.429217338562012
    8. '-' → logprob: -8.554217338562012
    9. ',i' → logprob: -8.554217338562012
    10. ' +' → logprob: -8.679217338562012

Token 45: '   ' (ID: 271)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.15347228944301605
    2. ' range' → logprob: -2.0284721851348877
    3. 'return' → logprob: -5.653472423553467
    4. '   ' → logprob: -5.903472423553467
    5. ' return' → logprob: -5.903472423553467
    6. '(range' → logprob: -6.653472423553467
    7. '	range' → logprob: -8.278471946716309
    8. '<|end|>' → logprob: -9.653471946716309
    9. '  ' → logprob: -10.403471946716309
    10. ' ' → logprob: -10.528471946716309

Token 46: ' return' (ID: 622)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1987043172121048
    2. ' range' → logprob: -2.323704242706299
    3. 'return' (adapté à ' return') → logprob: -2.698704242706299
    4. ' return' → logprob: -4.448704242706299
    5. '   ' → logprob: -5.823704242706299
    6. '(range' → logprob: -8.448704719543457
    7. '	range' → logprob: -9.698704719543457
    8. '  ' → logprob: -10.823704719543457
    9. 'eturn' → logprob: -11.073704719543457
    10. ' ' → logprob: -11.073704719543457

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.030401280149817467
    2. ' range' → logprob: -3.5304012298583984
    3. '(range' → logprob: -7.530401229858398
    4. '(i' → logprob: -9.405401229858398
    5. '	range' → logprob: -12.030401229858398
    6. '(' → logprob: -12.030401229858398
    7. 'i' → logprob: -12.155401229858398
    8. '  ' → logprob: -12.530401229858398
    9. ' i' → logprob: -12.780401229858398
    10. '   ' → logprob: -13.155401229858398

Token 48: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0003809833142440766
    2. '(' → logprob: -7.875380992889404
    3. ' (' → logprob: -14.375380516052246
    4. '(n' → logprob: -16.375381469726562
    5. '((' → logprob: -16.750381469726562
    6. '(ii' → logprob: -17.000381469726562
    7. '(int' → logprob: -17.125381469726562
    8. 'i' → logprob: -17.750381469726562
    9. '(I' → logprob: -18.625381469726562
    10. '(in' → logprob: -18.875381469726562

Token 49: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04721308872103691
    2. ',' → logprob: -3.547213077545166
    3. ' +' → logprob: -4.297213077545166
    4. ' ,' → logprob: -6.422213077545166
    5. '+,' → logprob: -7.047213077545166
    6. ',n' → logprob: -7.672213077545166
    7. '+n' → logprob: -7.672213077545166
    8. 'n' → logprob: -9.422213554382324
    9. '   ' → logprob: -9.547213554382324
    10. '1' → logprob: -9.797213554382324

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030948311905376613
    2. ' ' → logprob: -8.125309944152832
    3. '   ' → logprob: -12.000309944152832
    4. '2' → logprob: -12.125309944152832
    5. '  ' → logprob: -13.875309944152832
    6. '+' → logprob: -15.000309944152832
    7. '7' → logprob: -15.812809944152832
    8. '```' → logprob: -16.375308990478516
    9. '<|end|>' → logprob: -16.562808990478516
    10. ',' → logprob: -16.687808990478516

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. ' ' → logprob: -11.375012397766113
    3. '2' → logprob: -14.375012397766113
    4. '   ' → logprob: -16.687511444091797
    5. '<|end|>' → logprob: -17.375011444091797
    6. '0' → logprob: -17.500011444091797
    7. '  ' → logprob: -17.562511444091797
    8. '7' → logprob: -18.437511444091797
    9. '१' → logprob: -18.687511444091797
    10. '```' → logprob: -18.875011444091797

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038108841981738806
    2. ',n' → logprob: -6.003810882568359
    3. ' ,' → logprob: -6.628810882568359
    4. 'n' → logprob: -12.12881088256836
    5. ' ' → logprob: -13.25381088256836
    6. '   ' → logprob: -13.37881088256836
    7. '+' → logprob: -13.75381088256836
    8. ' n' → logprob: -14.00381088256836
    9. ')' → logprob: -14.12881088256836
    10. '1' → logprob: -15.37881088256836

Token 53: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931602954864502
    2. ' n' → logprob: -0.6931602954864502
    3. '	n' → logprob: -12.193160057067871
    4. ')n' → logprob: -12.568160057067871
    5. '   ' → logprob: -13.568160057067871
    6. ')' → logprob: -13.943160057067871
    7. ' ' → logprob: -14.068160057067871
    8. '    ' → logprob: -14.318160057067871
    9. '(n' → logprob: -14.818160057067871
    10. '<n' → logprob: -16.068161010742188

Token 54: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -14.750001907348633
    4. '))' → logprob: -16.125001907348633
    5. '   ' → logprob: -17.000001907348633
    6. ')

' → logprob: -17.250001907348633
    7. ')`' → logprob: -18.000001907348633
    8. '),' → logprob: -18.125001907348633
    9. '<|end|>' → logprob: -18.125001907348633
    10. ' ' → logprob: -18.250001907348633

Token 55: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012825232930481434
    2. 'for' → logprob: -4.637825012207031
    3. 'n' → logprob: -6.637825012207031
    4. '<|end|>' → logprob: -7.012825012207031
    5. '
' → logprob: -7.887825012207031
    6. '```' → logprob: -8.512825012207031
    7. '<|end|>' → logprob: -9.762825012207031
    8. '

' → logprob: -10.012825012207031
    9. '#' → logprob: -10.262825012207031
    10. '\' → logprob: -10.512825012207031

Token 56: ' compute' (ID: 23864)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.1075727939605713
    2. ' main' → logprob: -2.2325727939605713
    3. ' calculate' → logprob: -2.4825727939605713
    4. ' find' → logprob: -2.8575727939605713
    5. ' solve' → logprob: -2.8575727939605713
    6. ' sum' → logprob: -2.8575727939605713
    7. 'count' → logprob: -3.2325727939605713
    8. 'calculate' → logprob: -3.2325727939605713
    9. ' compute' → logprob: -3.3575727939605713
    10. ' process' → logprob: -3.3575727939605713

Token 57: '_distance' (ID: 45537)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.4085863530635834
    2. '(i' → logprob: -1.9085863828659058
    3. '(' → logprob: -3.158586263656616
    4. '_distance' → logprob: -3.283586263656616
    5. '_value' → logprob: -4.158586502075195
    6. '_max' → logprob: -4.158586502075195
    7. '_' → logprob: -4.283586502075195
    8. '_pair' → logprob: -4.908586502075195
    9. '_difference' → logprob: -4.908586502075195
    10. '_similarity' → logprob: -5.158586502075195

Token 58: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3282887041568756
    2. '(a' → logprob: -1.7032886743545532
    3. '(i' → logprob: -2.8282887935638428
    4. '(p' → logprob: -4.328288555145264
    5. '(x' → logprob: -4.453288555145264
    6. '(u' → logprob: -4.953288555145264
    7. '(point' → logprob: -5.703288555145264
    8. ' (' → logprob: -7.078288555145264
    9. '(s' → logprob: -7.578288555145264
    10. '((' → logprob: -8.078289031982422

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00524098752066493
    2. ',j' → logprob: -5.7552409172058105
    3. '+' → logprob: -6.8802409172058105
    4. ' ,' → logprob: -7.3802409172058105
    5. ',n' → logprob: -8.880241394042969
    6. '   ' → logprob: -9.505241394042969
    7. ' +' → logprob: -9.755241394042969
    8. ' ' → logprob: -10.380241394042969
    9. ')' → logprob: -11.380241394042969
    10. '+,' → logprob: -11.380241394042969

Token 60: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10033304244279861
    2. ' j' → logprob: -2.3503329753875732
    3. '   ' → logprob: -9.475333213806152
    4. ' ' → logprob: -11.100333213806152
    5. '<|end|>' → logprob: -11.725333213806152
    6. ')' → logprob: -12.100333213806152
    7. '  ' → logprob: -12.350333213806152
    8. ',j' → logprob: -12.350333213806152
    9. '	j' → logprob: -13.225333213806152
    10. 'n' → logprob: -13.350333213806152

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037012589164078236
    2. '):' → logprob: -5.628701210021973
    3. ' ,' → logprob: -9.378701210021973
    4. ')' → logprob: -12.253701210021973
    5. '):
' → logprob: -12.628701210021973
    6. '   ' → logprob: -13.003701210021973
    7. ',n' → logprob: -13.628701210021973
    8. ' ):' → logprob: -14.378701210021973
    9. ',i' → logprob: -14.378701210021973
    10. ',a' → logprob: -14.753701210021973

Token 62: ' x' (ID: 1215)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.5304234027862549
    2. 'points' → logprob: -1.9054234027862549
    3. ' coordinates' → logprob: -2.905423402786255
    4. 'x' → logprob: -3.655423402786255
    5. ' positions' → logprob: -3.655423402786255
    6. ' x' → logprob: -3.655423402786255
    7. ' arr' → logprob: -3.655423402786255
    8. ' coords' → logprob: -3.655423402786255
    9. 'arr' → logprob: -3.780423402786255
    10. 'coordinates' → logprob: -4.280423164367676

Token 63: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05277835577726364
    2. ',' → logprob: -3.1777782440185547
    3. ')' → logprob: -5.302778244018555
    4. 's' → logprob: -6.427778244018555
    5. '[i' → logprob: -7.052778244018555
    6. '):
' → logprob: -7.052778244018555
    7. ' ):' → logprob: -7.927778244018555
    8. '_list' → logprob: -8.177778244018555
    9. ',i' → logprob: -9.177778244018555
    10. '_values' → logprob: -9.302778244018555

Token 64: ' y' (ID: 342)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6852769255638123
    2. 'y' → logprob: -1.435276985168457
    3. 'j' → logprob: -2.060276985168457
    4. 'x' → logprob: -2.935276985168457
    5. 'i' → logprob: -3.685276985168457
    6. 'a' → logprob: -4.185276985168457
    7. 's' → logprob: -5.060276985168457
    8. '<|end|>' → logprob: -5.060276985168457
    9. '):' → logprob: -5.060276985168457
    10. '):
' → logprob: -5.935276985168457

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019208953017368913
    2. '):
' → logprob: -6.626920700073242
    3. ',' → logprob: -7.626920700073242
    4. ' ):' → logprob: -10.001920700073242
    5. ')' → logprob: -10.251920700073242
    6. '):
' → logprob: -11.501920700073242
    7. '   ' → logprob: -11.876920700073242
    8. '):

' → logprob: -12.626920700073242
    9. '[]):' → logprob: -13.626920700073242
    10. ':' → logprob: -14.501920700073242

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.857849657535553
    2. 'abs' → logprob: -1.2328495979309082
    3. 'return' → logprob: -2.107849597930908
    4. ' return' → logprob: -2.857849597930908
    5. '(abs' → logprob: -3.357849597930908
    6. ' abs' → logprob: -3.482849597930908
    7. '(x' → logprob: -4.732849597930908
    8. '[i' → logprob: -5.107849597930908
    9. '[' → logprob: -5.357849597930908
    10. ' (' → logprob: -5.482849597930908

Token 67: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.526660144329071
    2. '   ' → logprob: -1.4016602039337158
    3. '((' → logprob: -2.901660203933716
    4. ' return' → logprob: -3.401660203933716
    5. '(x' → logprob: -3.401660203933716
    6. 'abs' → logprob: -3.526660203933716
    7. 'import' → logprob: -5.026659965515137
    8. '(abs' → logprob: -5.776659965515137
    9. ' (' → logprob: -7.276659965515137
    10. ' abs' → logprob: -8.026659965515137

Token 68: ' min' (ID: 1349)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.303363561630249
    2. '(abs' → logprob: -2.178363561630249
    3. ' abs' → logprob: -2.803363561630249
    4. '(x' → logprob: -3.178363561630249
    5. '((' → logprob: -3.428363561630249
    6. ' (' → logprob: -4.678363800048828
    7. ' ((' → logprob: -6.428363800048828
    8. '   ' → logprob: -6.928363800048828
    9. '(' → logprob: -7.553363800048828
    10. 'x' → logprob: -7.678363800048828

Token 69: '(j' (ID: 4997)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.011054771952331066
    2. 'abs' → logprob: -5.011054992675781
    3. '(' → logprob: -5.761054992675781
    4. '((' → logprob: -7.136054992675781
    5. '(x' → logprob: -8.386054992675781
    6. ' abs' → logprob: -9.011054992675781
    7. ' (' → logprob: -11.386054992675781
    8. '(
' → logprob: -12.511054992675781
    9. '   ' → logprob: -12.636054992675781
    10. 'x' → logprob: -12.886054992675781

Token 70: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05727158486843109
    2. '-' → logprob: -2.9322714805603027
    3. '-i' → logprob: -6.307271480560303
    4. ' ' → logprob: -8.432271957397461
    5. ',' → logprob: -9.182271957397461
    6. ')' → logprob: -9.432271957397461
    7. '   ' → logprob: -9.932271957397461
    8. '-x' → logprob: -10.182271957397461
    9. '  ' → logprob: -10.807271957397461
    10. 'x' → logprob: -11.182271957397461

Token 71: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003280144650489092
    2. ' i' → logprob: -5.753280162811279
    3. '   ' → logprob: -9.878279685974121
    4. ' ' → logprob: -10.878279685974121
    5. ')' → logprob: -11.628279685974121
    6. '<|end|>' → logprob: -12.128279685974121
    7. '	i' → logprob: -12.253279685974121
    8. '  ' → logprob: -12.503279685974121
    9. ')i' → logprob: -13.003279685974121
    10. '1' → logprob: -13.128279685974121

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055793870240449905
    2. ' ,' → logprob: -2.9307937622070312
    3. ' +' → logprob: -7.930793762207031
    4. ',
' → logprob: -8.555793762207031
    5. ')' → logprob: -9.805793762207031
    6. ',x' → logprob: -9.805793762207031
    7. ' ' → logprob: -10.180793762207031
    8. ' -' → logprob: -10.180793762207031
    9. '),' → logprob: -10.555793762207031
    10. '+' → logprob: -10.930793762207031

Token 73: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6428200006484985
    2. ' abs' → logprob: -1.8928200006484985
    3. ' y' → logprob: -2.017819881439209
    4. 'y' → logprob: -2.767819881439209
    5. ' x' → logprob: -3.517819881439209
    6. ' n' → logprob: -3.642819881439209
    7. 'n' → logprob: -3.892819881439209
    8. 'x' → logprob: -3.892819881439209
    9. ' ' → logprob: -4.642819881439209
    10. ' min' → logprob: -4.642819881439209

Token 74: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.013774989172816277
    2. 'x' → logprob: -4.763774871826172
    3. '(' → logprob: -5.888774871826172
    4. '(y' → logprob: -6.263774871826172
    5. '((' → logprob: -8.388774871826172
    6. 'y' → logprob: -8.513774871826172
    7. ' (' → logprob: -11.513774871826172
    8. '(abs' → logprob: -11.888774871826172
    9. ' x' → logprob: -12.888774871826172
    10. '(s' → logprob: -12.951274871826172

Token 75: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1868756264448166
    2. '-' → logprob: -2.061875581741333
    3. '-j' → logprob: -3.561875581741333
    4. '-x' → logprob: -4.686875820159912
    5. 'x' → logprob: -5.811875820159912
    6. ' ' → logprob: -6.811875820159912
    7. '+' → logprob: -7.436875820159912
    8. 'j' → logprob: -8.311875343322754
    9. ' x' → logprob: -8.686875343322754
    10. '   ' → logprob: -9.061875343322754

Token 76: ' x' (ID: 1215)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08168137073516846
    2. 'n' → logprob: -3.081681251525879
    3. 'x' → logprob: -4.331681251525879
    4. ')' → logprob: -5.331681251525879
    5. '(n' → logprob: -5.456681251525879
    6. ' j' → logprob: -5.581681251525879
    7. 'y' → logprob: -6.706681251525879
    8. ' (' → logprob: -7.081681251525879
    9. '(x' → logprob: -7.331681251525879
    10. ' n' → logprob: -7.581681251525879

Token 77: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.411981999874115
    2. '))' → logprob: -1.1619820594787598
    3. ')+' → logprob: -4.28698205947876
    4. '),' → logprob: -5.16198205947876
    5. '+' → logprob: -6.28698205947876
    6. ' -' → logprob: -7.03698205947876
    7. '-' → logprob: -7.41198205947876
    8. ' +' → logprob: -7.53698205947876
    9. ' )' → logprob: -8.161981582641602
    10. 'y' → logprob: -8.536981582641602

Token 78: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5494173765182495
    2. 'y' → logprob: -1.2994173765182495
    3. 'j' → logprob: -2.174417495727539
    4. '1' → logprob: -3.799417495727539
    5. ' n' → logprob: -5.549417495727539
    6. ' y' → logprob: -5.549417495727539
    7. '(n' → logprob: -7.049417495727539
    8. 'len' → logprob: -7.299417495727539
    9. ' j' → logprob: -7.424417495727539
    10. '10' → logprob: -7.674417495727539

Token 79: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4951569139957428
    2. 'y' → logprob: -1.4951568841934204
    3. 'j' → logprob: -1.9951568841934204
    4. '1' → logprob: -3.74515700340271
    5. ' n' → logprob: -6.745156764984131
    6. ' y' → logprob: -6.745156764984131
    7. '10' → logprob: -7.370156764984131
    8. '(n' → logprob: -7.495156764984131
    9. '24' → logprob: -7.995156764984131
    10. '100' → logprob: -8.245157241821289

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5853084921836853
    2. '))' → logprob: -0.9603084921836853
    3. ')))' → logprob: -3.58530855178833
    4. ')+' → logprob: -4.58530855178833
    5. '+' → logprob: -5.33530855178833
    6. '+j' → logprob: -5.58530855178833
    7. ' +' → logprob: -5.96030855178833
    8. '),' → logprob: -6.08530855178833
    9. ' -' → logprob: -6.58530855178833
    10. ' )' → logprob: -6.71030855178833

Token 81: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1272374391555786
    2. ' +' → logprob: -1.1272374391555786
    3. '))' → logprob: -1.3772374391555786
    4. ')' → logprob: -2.752237319946289
    5. ' -' → logprob: -4.502237319946289
    6. '-' → logprob: -4.752237319946289
    7. '+j' → logprob: -4.752237319946289
    8. '),' → logprob: -6.377237319946289
    9. ' ))' → logprob: -6.502237319946289
    10. ' ' → logprob: -6.502237319946289

Token 82: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.16723452508449554
    2. ' abs' → logprob: -2.417234420776367
    3. 'j' → logprob: -3.292234420776367
    4. 'y' → logprob: -4.167234420776367
    5. ' y' → logprob: -5.042234420776367
    6. ' j' → logprob: -5.792234420776367
    7. 'n' → logprob: -6.667234420776367
    8. '(abs' → logprob: -7.542234420776367
    9. '1' → logprob: -8.042234420776367
    10. ' n' → logprob: -8.917234420776367

Token 83: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.1518990695476532
    2. '(y' → logprob: -2.2768990993499756
    3. '(' → logprob: -4.1518988609313965
    4. '(x' → logprob: -4.2768988609313965
    5. 'j' → logprob: -5.1518988609313965
    6. 'y' → logprob: -6.2768988609313965
    7. '(i' → logprob: -7.7768988609313965
    8. 'x' → logprob: -8.526899337768555
    9. '(n' → logprob: -8.526899337768555
    10. ')' → logprob: -9.651899337768555

Token 84: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.033686500042676926
    2. '-' → logprob: -3.408686399459839
    3. '-x' → logprob: -10.908686637878418
    4. ' ' → logprob: -10.908686637878418
    5. '-y' → logprob: -13.158686637878418
    6. '<|end|>' → logprob: -14.908686637878418
    7. 'x' → logprob: -15.158686637878418
    8. '-i' → logprob: -15.408686637878418
    9. '  ' → logprob: -15.658686637878418
    10. '-user' → logprob: -15.783686637878418

Token 85: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.13719458878040314
    2. 'x' → logprob: -2.6371946334838867
    3. ' y' → logprob: -2.8871946334838867
    4. ' x' → logprob: -7.387194633483887
    5. '1' → logprob: -8.762194633483887
    6. ' ' → logprob: -10.137194633483887
    7. ' -' → logprob: -10.762194633483887
    8. '<|end|>' → logprob: -11.512194633483887
    9. '-' → logprob: -11.762194633483887
    10. 'i' → logprob: -11.762194633483887

Token 86: ' +' (ID: 659)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.9056693315505981
    2. ' +' → logprob: -1.5306693315505981
    3. '+' → logprob: -1.6556693315505981
    4. ')' → logprob: -2.4056692123413086
    5. ' -' → logprob: -2.9056692123413086
    6. '-' → logprob: -3.4056692123413086
    7. ')))' → logprob: -5.405669212341309
    8. '1' → logprob: -5.780669212341309
    9. ' ' → logprob: -7.030669212341309
    10. '()' → logprob: -8.155669212341309

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034714414505288005
    2. ' ' → logprob: -8.000347137451172
    3. '0' → logprob: -12.250347137451172
    4. ')' → logprob: -12.875347137451172
    5. '2' → logprob: -13.500347137451172
    6. '-' → logprob: -13.500347137451172
    7. ' -' → logprob: -15.125347137451172
    8. '+' → logprob: -15.250347137451172
    9. '   ' → logprob: -15.375347137451172
    10. 'j' → logprob: -15.500347137451172

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. '0' → logprob: -12.500007629394531
    3. '2' → logprob: -13.250007629394531
    4. ' ' → logprob: -13.250007629394531
    5. '-' → logprob: -16.12500762939453
    6. 'n' → logprob: -17.12500762939453
    7. '   ' → logprob: -17.12500762939453
    8. '```' → logprob: -17.50000762939453
    9. '3' → logprob: -17.62500762939453
    10. 'j' → logprob: -17.62500762939453

Token 89: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00987378042191267
    2. ')' → logprob: -4.759873867034912
    3. ')))' → logprob: -7.009873867034912
    4. ' ))' → logprob: -8.259873390197754
    5. '))
' → logprob: -10.134873390197754
    6. ' ' → logprob: -11.134873390197754
    7. '))

' → logprob: -11.759873390197754
    8. '),' → logprob: -11.884873390197754
    9. ' )' → logprob: -12.009873390197754
    10. '()))' → logprob: -12.009873390197754

Token 90: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014281622134149075
    2. '))' → logprob: -4.264281749725342
    3. ')))' → logprob: -9.514281272888184
    4. ' )' → logprob: -10.264281272888184
    5. ')
' → logprob: -12.514281272888184
    6. '`)' → logprob: -14.514281272888184
    7. '   ' → logprob: -14.639281272888184
    8. '())' → logprob: -14.639281272888184
    9. ')`' → logprob: -14.639281272888184
    10. ' ))' → logprob: -14.764281272888184

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010041738860309124
    2. ' ' → logprob: -5.0100417137146
    3. 'abs' → logprob: -6.8850417137146
    4. ')' → logprob: -7.2600417137146
    5. ' abs' → logprob: -7.2600417137146
    6. 'min' → logprob: -7.7600417137146
    7. '2' → logprob: -8.510042190551758
    8. ' min' → logprob: -9.135042190551758
    9. 'j' → logprob: -10.760042190551758
    10. '0' → logprob: -11.010042190551758

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011016374919563532
    2. 'min' → logprob: -7.501101493835449
    3. '2' → logprob: -8.25110149383545
    4. 'abs' → logprob: -9.00110149383545
    5. ')' → logprob: -10.00110149383545
    6. ' ' → logprob: -10.00110149383545
    7. 'j' → logprob: -11.37610149383545
    8. 'y' → logprob: -11.75110149383545
    9. '0' → logprob: -11.75110149383545
    10. 'n' → logprob: -12.00110149383545

Token 93: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -16.125
    4. '))' → logprob: -16.625
    5. '')' → logprob: -17.25
    6. ')`' → logprob: -18.125
    7. '*' → logprob: -18.375
    8. '`)' → logprob: -18.75
    9. ')))' → logprob: -18.75
    10. '）' → logprob: -18.875

Token 94: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1878143548965454
    2. 'def' → logprob: -1.5628143548965454
    3. ')' → logprob: -1.9378143548965454
    4. '#' → logprob: -2.437814235687256
    5. ':' → logprob: -2.562814235687256
    6. 'x' → logprob: -3.312814235687256
    7. '[' → logprob: -3.437814235687256
    8. '<|end|>' → logprob: -3.437814235687256
    9. '```' → logprob: -4.437814235687256
    10. 'n' → logprob: -4.687814235687256

Token 95: ' increment' (ID: 24032)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8050118684768677
    2. 'main' → logprob: -1.8050118684768677
    3. ' compute' → logprob: -2.930011749267578
    4. ' solve' → logprob: -3.180011749267578
    5. 'process' → logprob: -3.680011749267578
    6. ' find' → logprob: -3.680011749267578
    7. 'calculate' → logprob: -3.805011749267578
    8. ' min' → logprob: -3.930011749267578
    9. ' max' → logprob: -3.930011749267578
    10. ' process' → logprob: -3.930011749267578

Token 96: '_count' (ID: 7536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09718920290470123
    2. '_array' → logprob: -2.59718918800354
    3. '(array' → logprob: -5.597189426422119
    4. '_count' → logprob: -6.097189426422119
    5. '_value' → logprob: -6.222189426422119
    6. '_counter' → logprob: -6.222189426422119
    7. '_' → logprob: -6.472189426422119
    8. '(arr' → logprob: -6.722189426422119
    9. '(a' → logprob: -7.222189426422119
    10. '(_' → logprob: -7.347189426422119

Token 97: '(arr' (ID: 19646)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40368255972862244
    2. '(count' → logprob: -1.1536825895309448
    3. '(i' → logprob: -5.403682708740234
    4. '(arr' → logprob: -5.778682708740234
    5. '(array' → logprob: -6.028682708740234
    6. '((' → logprob: -6.653682708740234
    7. '(index' → logprob: -7.153682708740234
    8. '(counter' → logprob: -7.403682708740234
    9. '(a' → logprob: -7.653682708740234
    10. '(n' → logprob: -7.778682708740234

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02209652215242386
    2. ')' → logprob: -5.147096633911133
    3. '[' → logprob: -5.147096633911133
    4. '[i' → logprob: -5.147096633911133
    5. '[arr' → logprob: -6.397096633911133
    6. '[j' → logprob: -6.772096633911133
    7. ' ,' → logprob: -7.397096633911133
    8. '   ' → logprob: -8.772096633911133
    9. ',j' → logprob: -8.897096633911133
    10. '):' → logprob: -9.022096633911133

Token 99: ' idx' (ID: 14016)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.5530959367752075
    2. ' index' → logprob: -1.5530959367752075
    3. ' idx' → logprob: -1.6780959367752075
    4. ' i' → logprob: -1.8030959367752075
    5. 'i' → logprob: -1.9280959367752075
    6. 'idx' → logprob: -2.678095817565918
    7. ')' → logprob: -4.928095817565918
    8. 'k' → logprob: -7.303095817565918
    9. ' )' → logprob: -7.428095817565918
    10. ' k' → logprob: -7.553095817565918

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11928379535675049
    2. '):
' → logprob: -2.244283676147461
    3. ',' → logprob: -5.244283676147461
    4. ')' → logprob: -7.369283676147461
    5. '[idx' → logprob: -8.744283676147461
    6. '[' → logprob: -8.994283676147461
    7. '   ' → logprob: -9.369283676147461
    8. '):
' → logprob: -9.619283676147461
    9. 's' → logprob: -10.244283676147461
    10. ']:' → logprob: -11.244283676147461

Token 101: '   ' (ID: 271)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.6216839551925659
    2. '   ' → logprob: -0.8716839551925659
    3. 'arr' → logprob: -3.1216840744018555
    4. '	arr' → logprob: -7.8716840744018555
    5. '[arr' → logprob: -8.621684074401855
    6. '(arr' → logprob: -10.121684074401855
    7. '<arr' → logprob: -12.121684074401855
    8. '_arr' → logprob: -12.246684074401855
    9. '```' → logprob: -12.496684074401855
    10. '    ' → logprob: -13.121684074401855

Token 102: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.08385566622018814
    2. ' arr' → logprob: -2.833855628967285
    3. '   ' → logprob: -3.833855628967285
    4. '	arr' → logprob: -10.708855628967285
    5. '_arr' → logprob: -14.583855628967285
    6. '(arr' → logprob: -14.833855628967285
    7. '[arr' → logprob: -14.958855628967285
    8. '  ' → logprob: -15.458855628967285
    9. ' ' → logprob: -16.0838565826416
    10. '    ' → logprob: -16.2088565826416

Token 103: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00014084660506341606
    2. '[' → logprob: -8.875141143798828
    3. '[index' → logprob: -15.000141143798828
    4. '[arr' → logprob: -15.250141143798828
    5. '```' → logprob: -15.250141143798828
    6. '[int' → logprob: -16.375141143798828
    7. 'idx' → logprob: -16.875141143798828
    8. '[i' → logprob: -17.250141143798828
    9. '[id' → logprob: -17.375141143798828
    10. '	idx' → logprob: -17.625141143798828

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.860340752406046e-05
    2. ']+=' → logprob: -9.8750581741333
    3. ')' → logprob: -12.5000581741333
    4. '[' → logprob: -13.3750581741333
    5. ' ]' → logprob: -13.5000581741333
    6. '   ' → logprob: -15.1250581741333
    7. '1' → logprob: -17.000059127807617
    8. '']' → logprob: -17.250059127807617
    9. '+=' → logprob: -17.625059127807617
    10. '`]' → logprob: -17.750059127807617

Token 105: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0016112701268866658
    2. ' +=' → logprob: -6.501611232757568
    3. ']+=' → logprob: -9.626611709594727
    4. '=' → logprob: -10.126611709594727
    5. '+' → logprob: -13.126611709594727
    6. '[' → logprob: -14.626611709594727
    7. '+='' → logprob: -15.501611709594727
    8. '```' → logprob: -16.126611709594727
    9. '<|end|>' → logprob: -16.751611709594727
    10. '+="' → logprob: -17.126611709594727

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.7500057220459
    4. '2' → logprob: -18.8750057220459
    5. '```' → logprob: -19.8750057220459
    6. '  ' → logprob: -20.5000057220459
    7. '<|end|>' → logprob: -21.0000057220459
    8. '3' → logprob: -21.6250057220459
    9. '+' → logprob: -21.6250057220459
    10. 'def' → logprob: -21.7500057220459

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -19.375
    4. '   ' → logprob: -19.75
    5. '2' → logprob: -20.0
    6. 'count' → logprob: -20.5
    7. '<|end|>' → logprob: -21.125
    8. 'def' → logprob: -21.125
    9. '  ' → logprob: -21.6875
    10. '`' → logprob: -22.0

Token 108: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014214987866580486
    2. '<|end|>' → logprob: -4.889214992523193
    3. '(' → logprob: -5.764214992523193
    4. 'for' → logprob: -7.514214992523193
    5. '[' → logprob: -7.639214992523193
    6. '\n' → logprob: -7.764214992523193
    7. '```' → logprob: -7.764214992523193
    8. '()' → logprob: -8.264214515686035
    9. 'n' → logprob: -8.514214515686035
    10. '\' → logprob: -8.514214515686035

Token 109: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009369985200464725
    2. 'n' → logprob: -5.259369850158691
    3. 'for' → logprob: -5.509369850158691
    4. '#' → logprob: -11.009369850158691
    5. '```' → logprob: -11.134369850158691
    6. 'print' → logprob: -11.259369850158691
    7. 'if' → logprob: -11.759369850158691
    8. '(n' → logprob: -12.634369850158691
    9. 't' → logprob: -12.884369850158691
    10. 'from' → logprob: -12.884369850158691

Token 110: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.41399040818214417
    2. 'main' → logprob: -1.1639903783798218
    3. 'process' → logprob: -4.913990497589111
    4. ' count' → logprob: -5.038990497589111
    5. ' process' → logprob: -5.288990497589111
    6. 'count' → logprob: -5.413990497589111
    7. ' solve' → logprob: -7.538990497589111
    8. 'solve' → logprob: -7.913990497589111
    9. 'calculate' → logprob: -8.288990020751953
    10. ' max' → logprob: -8.663990020751953

Token 111: '_pairs' (ID: 90005)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0406742095947266
    2. '(arr' → logprob: -1.6656742095947266
    3. '_array' → logprob: -1.7906742095947266
    4. '(n' → logprob: -2.0406742095947266
    5. '():' → logprob: -2.9156742095947266
    6. '_arrays' → logprob: -3.1656742095947266
    7. '_inputs' → logprob: -4.290674209594727
    8. '(array' → logprob: -4.790674209594727
    9. '(a' → logprob: -5.040674209594727
    10. '_pairs' → logprob: -5.415674209594727

Token 112: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0025668602902442217
    2. '(' → logprob: -6.127566814422607
    3. ' (' → logprob: -8.002567291259766
    4. '():' → logprob: -10.127567291259766
    5. '(i' → logprob: -12.752567291259766
    6. '(x' → logprob: -14.002567291259766
    7. '(a' → logprob: -14.002567291259766
    8. '(arr' → logprob: -14.252567291259766
    9. '(s' → logprob: -15.127567291259766
    10. '(num' → logprob: -15.377567291259766

Token 113: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47513580322265625
    2. ',' → logprob: -0.9751358032226562
    3. '):
' → logprob: -7.350135803222656
    4. ' ):' → logprob: -8.225135803222656
    5. ')' → logprob: -9.975135803222656
    6. '   ' → logprob: -10.100135803222656
    7. ',x' → logprob: -11.350135803222656
    8. ' ,' → logprob: -11.475135803222656
    9. ' ' → logprob: -12.100135803222656
    10. ':' → logprob: -12.100135803222656

Token 114: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11803994327783585
    2. ' x' → logprob: -2.493039846420288
    3. 'arr' → logprob: -3.743039846420288
    4. ' arr' → logprob: -5.743040084838867
    5. '   ' → logprob: -8.243040084838867
    6. 'pairs' → logprob: -8.243040084838867
    7. ')' → logprob: -8.618040084838867
    8. ' pairs' → logprob: -9.118040084838867
    9. 'n' → logprob: -9.180540084838867
    10. ' ' → logprob: -9.618040084838867

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.816591434879228e-05
    2. ',y' → logprob: -9.75008773803711
    3. ' ,' → logprob: -10.62508773803711
    4. ',
' → logprob: -13.25008773803711
    5. 'y' → logprob: -13.50008773803711
    6. ',n' → logprob: -14.00008773803711
    7. '):' → logprob: -15.00008773803711
    8. '_,' → logprob: -15.37508773803711
    9. ',

' → logprob: -15.62508773803711
    10. ',j' → logprob: -16.12508773803711

Token 116: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0017083751736208797
    2. ' y' → logprob: -6.376708507537842
    3. '   ' → logprob: -12.376708030700684
    4. 'n' → logprob: -14.001708030700684
    5. ' ' → logprob: -14.251708030700684
    6. '  ' → logprob: -15.126708030700684
    7. '    ' → logprob: -16.001708984375
    8. '	y' → logprob: -16.376708984375
    9. '<|end|>' → logprob: -16.626708984375
    10. ')' → logprob: -17.376708984375

Token 117: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00918289739638567
    2. ',' → logprob: -4.759182929992676
    3. '):
' → logprob: -7.509182929992676
    4. ' ):' → logprob: -12.009182929992676
    5. '   ' → logprob: -12.384182929992676
    6. ')' → logprob: -12.384182929992676
    7. ':' → logprob: -12.884182929992676
    8. '):
' → logprob: -14.009182929992676
    9. ',n' → logprob: -14.634182929992676
    10. '}:' → logprob: -15.009182929992676

Token 118: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0038756118156015873
    2. ' arr' → logprob: -5.628875732421875
    3. '   ' → logprob: -9.128875732421875
    4. '):' → logprob: -9.503875732421875
    5. ')' → logprob: -10.503875732421875
    6. 'count' → logprob: -10.753875732421875
    7. '):
' → logprob: -11.503875732421875
    8. ' ' → logprob: -12.128875732421875
    9. '  ' → logprob: -12.378875732421875
    10. '	arr' → logprob: -12.753875732421875

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0486019104719162
    2. '):
' → logprob: -3.0486018657684326
    3. '):
' → logprob: -11.673602104187012
    4. '   ' → logprob: -13.298602104187012
    5. ')' → logprob: -13.423602104187012
    6. ',' → logprob: -13.423602104187012
    7. ' ):' → logprob: -14.548602104187012
    8. ':' → logprob: -14.673602104187012
    9. '):

' → logprob: -15.048602104187012
    10. 'def' → logprob: -16.923601150512695

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0372554212808609
    2. ' for' → logprob: -3.4122555255889893
    3. 'for' → logprob: -5.66225528717041
    4. '
' → logprob: -9.66225528717041
    5. ':
' → logprob: -11.03725528717041
    6. ':' → logprob: -11.28725528717041
    7. '```' → logprob: -11.53725528717041
    8. 'def' → logprob: -11.66225528717041
    9. '    
' → logprob: -11.91225528717041
    10. '	for' → logprob: -12.16225528717041

Token 121: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.019625863060355186
    2. ' for' → logprob: -4.019625663757324
    3. '   ' → logprob: -6.519625663757324
    4. '```' → logprob: -15.019625663757324
    5. '
' → logprob: -15.519625663757324
    6. ' ' → logprob: -16.26962661743164
    7. '  ' → logprob: -16.51962661743164
    8. 'def' → logprob: -16.64462661743164
    9. '	for' → logprob: -16.76962661743164
    10. '    
' → logprob: -18.01962661743164

Token 122: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17975547909736633
    2. ' i' → logprob: -1.804755449295044
    3. ' ' → logprob: -12.429755210876465
    4. '	i' → logprob: -12.679755210876465
    5. '   ' → logprob: -13.679755210876465
    6. '_i' → logprob: -13.929755210876465
    7. '0' → logprob: -15.054755210876465
    8. '  ' → logprob: -15.179755210876465
    9. '(i' → logprob: -15.679755210876465
    10. 'a' → logprob: -15.929755210876465

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048602137714624405
    2. 'in' → logprob: -3.0486021041870117
    3. ' ' → logprob: -11.798602104187012
    4. ',' → logprob: -12.298602104187012
    5. 'n' → logprob: -14.423602104187012
    6. '	in' → logprob: -14.923602104187012
    7. 'import' → logprob: -15.298602104187012
    8. 'In' → logprob: -15.423602104187012
    9. '   ' → logprob: -15.423602104187012
    10. '  ' → logprob: -15.673602104187012

Token 124: ' outer' (ID: 25982)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.006908010225743055
    2. ' outer' → logprob: -5.006907939910889
    3. 'range' → logprob: -8.631908416748047
    4. ' range' → logprob: -11.381908416748047
    5. 'inner' → logprob: -14.131908416748047
    6. '_outer' → logprob: -14.506908416748047
    7. 'Outer' → logprob: -14.756908416748047
    8. ' ' → logprob: -15.256908416748047
    9. '.outer' → logprob: -15.381908416748047
    10. '   ' → logprob: -15.506908416748047

Token 125: '_loop' (ID: 40621)
  Prédit: '_loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_loop' → logprob: -0.00041482248343527317
    2. '_range' → logprob: -7.875414848327637
    3. '_' → logprob: -11.375414848327637
    4. ' _' → logprob: -11.875414848327637
    5. '(n' → logprob: -12.875414848327637
    6. '_lo' → logprob: -13.000414848327637
    7. '(i' → logprob: -13.125414848327637
    8. '(' → logprob: -13.125414848327637
    9. '(_' → logprob: -13.125414848327637
    10. ')_' → logprob: -13.875414848327637

Token 126: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -2.6060808522743173e-05
    2. 'range' → logprob: -10.625025749206543
    3. '(n' → logprob: -14.125025749206543
    4. 'ange' → logprob: -14.625025749206543
    5. '(range' → logprob: -15.250025749206543
    6. '_' → logprob: -16.37502670288086
    7. '_ranges' → logprob: -17.25002670288086
    8. '_loop' → logprob: -17.87502670288086
    9. '   ' → logprob: -18.00002670288086
    10. '(_' → logprob: -18.25002670288086

Token 127: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.3080716346157715e-05
    2. '(' → logprob: -10.875022888183594
    3. 'n' → logprob: -12.500022888183594
    4. ' (' → logprob: -15.500022888183594
    5. '(len' → logprob: -17.000022888183594
    6. '<n' → logprob: -18.625022888183594
    7. ',' → logprob: -18.750022888183594
    8. 'def' → logprob: -19.375022888183594
    9. '```' → logprob: -19.375022888183594
    10. ' n' → logprob: -19.625022888183594

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009207349270582199
    2. '):
' → logprob: -4.759207248687744
    3. '-' → logprob: -7.884207248687744
    4. ' ):' → logprob: -9.134207725524902
    5. ' -' → logprob: -9.884207725524902
    6. ')' → logprob: -10.259207725524902
    7. ':' → logprob: -11.134207725524902
    8. '   ' → logprob: -12.759207725524902
    9. '+' → logprob: -13.884207725524902
    10. '):

' → logprob: -14.134207725524902

Token 129: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19325445592403412
    2. '   ' → logprob: -2.3182544708251953
    3. 'for' → logprob: -3.1932544708251953
    4. '       ' → logprob: -3.3182544708251953
    5. '	for' → logprob: -10.818254470825195
    6. ' ' → logprob: -12.568254470825195
    7. '    ' → logprob: -12.818254470825195
    8. ',' → logprob: -14.443254470825195
    9. '  ' → logprob: -14.943254470825195
    10. '   ' → logprob: -14.943254470825195

Token 130: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5763565301895142
    2. ' for' → logprob: -0.8263565301895142
    3. '   ' → logprob: -7.826356410980225
    4. ' ' → logprob: -11.701356887817383
    5. '    ' → logprob: -12.576356887817383
    6. '	for' → logprob: -12.576356887817383
    7. '       ' → logprob: -13.451356887817383
    8. '  ' → logprob: -13.826356887817383
    9. '           ' → logprob: -16.326356887817383
    10. '
' → logprob: -17.326356887817383

Token 131: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3132646679878235
    2. ' j' → logprob: -1.3132646083831787
    3. '	j' → logprob: -13.438264846801758
    4. '   ' → logprob: -14.438264846801758
    5. '  ' → logprob: -15.063264846801758
    6. ' ' → logprob: -15.313264846801758
    7. '    ' → logprob: -15.688264846801758
    8. '_j' → logprob: -16.813264846801758
    9. '$j' → logprob: -16.813264846801758
    10. ' ' → logprob: -17.813264846801758

Token 132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3869030177593231
    2. 'in' → logprob: -1.1369030475616455
    3. ' ' → logprob: -11.261902809143066
    4. ')' → logprob: -12.636902809143066
    5. 'i' → logprob: -13.261902809143066
    6. '	in' → logprob: -13.386902809143066
    7. 'n' → logprob: -13.636902809143066
    8. 'In' → logprob: -13.761902809143066
    9. 's' → logprob: -14.199402809143066
    10. ',' → logprob: -14.324402809143066

Token 133: ' inner' (ID: 12694)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.06197911128401756
    2. ' inner' → logprob: -2.811979055404663
    3. 'outer' → logprob: -12.061979293823242
    4. '(inner' → logprob: -12.436979293823242
    5. ' ' → logprob: -14.311979293823242
    6. 'range' → logprob: -15.061979293823242
    7. '_inner' → logprob: -15.436979293823242
    8. ' outer' → logprob: -15.561979293823242
    9. '   ' → logprob: -15.686979293823242
    10. 'inners' → logprob: -15.811979293823242

Token 134: '_loop' (ID: 40621)
  Prédit: '_loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_loop' → logprob: -6.098748053773306e-05
    2. 'loop' → logprob: -10.87506103515625
    3. '(i' → logprob: -11.37506103515625
    4. '(' → logprob: -11.87506103515625
    5. '_' → logprob: -11.87506103515625
    6. ' loop' → logprob: -12.00006103515625
    7. ' _' → logprob: -12.87506103515625
    8. '(_' → logprob: -13.12506103515625
    9. '_LOOP' → logprob: -13.62506103515625
    10. '_range' → logprob: -13.87506103515625

Token 135: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.0009171743295155466
    2. 'range' → logprob: -7.000916957855225
    3. '(n' → logprob: -13.250917434692383
    4. 'ange' → logprob: -13.625917434692383
    5. '(i' → logprob: -14.000917434692383
    6. 'Range' → logprob: -14.250917434692383
    7. '_loop' → logprob: -16.000917434692383
    8. '
' → logprob: -16.000917434692383
    9. 'r' → logprob: -16.125917434692383
    10. 'nge' → logprob: -16.125917434692383

Token 136: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.125001907348633
    3. '(j' → logprob: -16.375001907348633
    4. ' (' → logprob: -16.500001907348633
    5. '(
' → logprob: -17.500001907348633
    6. '<|end|>' → logprob: -17.750001907348633
    7. 'i' → logprob: -18.375001907348633
    8. '(ii' → logprob: -19.375001907348633
    9. '(I' → logprob: -19.500001907348633
    10. '[i' → logprob: -20.000001907348633

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0935363695025444
    2. ',n' → logprob: -2.468536376953125
    3. '(n' → logprob: -5.468536376953125
    4. ' ,' → logprob: -8.218536376953125
    5. 'n' → logprob: -9.843536376953125
    6. '(' → logprob: -10.968536376953125
    7. ',
' → logprob: -10.968536376953125
    8. ',j' → logprob: -13.093536376953125
    9. '<n' → logprob: -13.343536376953125
    10. '```' → logprob: -13.968536376953125

Token 138: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006273718317970634
    2. ' n' → logprob: -7.375627517700195
    3. ')n' → logprob: -15.125627517700195
    4. '	n' → logprob: -15.500627517700195
    5. '   ' → logprob: -15.625627517700195
    6. ')' → logprob: -16.625627517700195
    7. ' ' → logprob: -17.000627517700195
    8. ',n' → logprob: -17.625627517700195
    9. '
' → logprob: -17.750627517700195
    10. '(n' → logprob: -17.875627517700195

Token 139: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012210593558847904
    2. '):
' → logprob: -6.751221179962158
    3. ':' → logprob: -10.001220703125
    4. ')' → logprob: -13.501220703125
    5. '       ' → logprob: -13.501220703125
    6. ' ):' → logprob: -13.501220703125
    7. '   ' → logprob: -14.626220703125
    8. '):
' → logprob: -14.751220703125
    9. '():' → logprob: -15.376220703125
    10. '           ' → logprob: -16.126220703125

Token 140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33707118034362793
    2. '       ' → logprob: -1.337071180343628
    3. '               ' → logprob: -5.212071418762207
    4. ',' → logprob: -5.712071418762207
    5. ')' → logprob: -5.962071418762207
    6. ' increment' → logprob: -6.087071418762207
    7. 'increment' → logprob: -6.212071418762207
    8. ' if' → logprob: -6.337071418762207
    9. '):
' → logprob: -7.087071418762207
    10. ':' → logprob: -7.587071418762207

Token 141: ' d' (ID: 272)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.17609566450119019
    2. 'distance' → logprob: -2.676095724105835
    3. 'if' → logprob: -3.426095724105835
    4. '               ' → logprob: -4.301095485687256
    5. 'dist' → logprob: -4.301095485687256
    6. ' increment' → logprob: -4.551095485687256
    7. '           ' → logprob: -4.676095485687256
    8. 'count' → logprob: -5.301095485687256
    9. ' if' → logprob: -5.926095485687256
    10. 'inc' → logprob: -6.426095485687256

Token 142: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5740470290184021
    2. ' =' → logprob: -1.3240470886230469
    3. 'istance' → logprob: -1.9490470886230469
    4. 'ist' → logprob: -3.574047088623047
    5. 'ef' → logprob: -9.199047088623047
    6. 'is' → logprob: -9.824047088623047
    7. '   ' → logprob: -10.824047088623047
    8. '=int' → logprob: -11.449047088623047
    9. '=d' → logprob: -11.449047088623047
    10. '=i' → logprob: -12.074047088623047

Token 143: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.061967797577381134
    2. ' compute' → logprob: -2.8119678497314453
    3. 'process' → logprob: -16.186967849731445
    4. 'calculate' → logprob: -17.436967849731445
    5. '.compute' → logprob: -17.436967849731445
    6. ' ' → logprob: -17.811967849731445
    7. '_compute' → logprob: -17.936967849731445
    8. '
' → logprob: -18.686967849731445
    9. ' process' → logprob: -19.311967849731445
    10. 'computer' → logprob: -19.436967849731445

Token 144: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -3.4121114822482923e-06
    2. 'distance' → logprob: -12.750003814697266
    3. '_dist' → logprob: -14.875003814697266
    4. '_d' → logprob: -17.500003814697266
    5. '_' → logprob: -17.750003814697266
    6. '_difference' → logprob: -17.750003814697266
    7. '_DISTANCE' → logprob: -18.375003814697266
    8. ' distance' → logprob: -18.500003814697266
    9. 'Distance' → logprob: -19.500003814697266
    10. 'd' → logprob: -19.750003814697266

Token 145: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9146995327901095e-05
    2. '(' → logprob: -10.875019073486328
    3. ' (' → logprob: -16.625019073486328
    4. '(
' → logprob: -17.625019073486328
    5. '(j' → logprob: -17.625019073486328
    6. 'i' → logprob: -20.750019073486328
    7. '((' → logprob: -21.875019073486328
    8. ' i' → logprob: -22.000019073486328
    9. '(x' → logprob: -22.125019073486328
    10. '(ii' → logprob: -22.125019073486328

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020260661840438843
    2. ',j' → logprob: -6.252026081085205
    3. 'j' → logprob: -10.002025604248047
    4. ' ,' → logprob: -10.127025604248047
    5. '(j' → logprob: -11.752025604248047
    6. ',
' → logprob: -13.377025604248047
    7. ' j' → logprob: -13.502025604248047
    8. '(' → logprob: -14.252025604248047
    9. '   ' → logprob: -16.127025604248047
    10. '(),' → logprob: -16.627025604248047

Token 147: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004891689168289304
    2. ' j' → logprob: -7.625489234924316
    3. '   ' → logprob: -14.125489234924316
    4. '	j' → logprob: -15.375489234924316
    5. '    ' → logprob: -16.87548828125
    6. '  ' → logprob: -17.25048828125
    7. ' ' → logprob: -17.37548828125
    8. '[j' → logprob: -17.75048828125
    9. '$j' → logprob: -17.87548828125
    10. '           ' → logprob: -18.75048828125

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003103175258729607
    2. ' ,' → logprob: -8.500309944152832
    3. ',x' → logprob: -9.250309944152832
    4. ',n' → logprob: -12.250309944152832
    5. ',
' → logprob: -12.750309944152832
    6. ' ' → logprob: -14.250309944152832
    7. ',j' → logprob: -14.375309944152832
    8. ',i' → logprob: -14.750309944152832
    9. '   ' → logprob: -15.500309944152832
    10. 'x' → logprob: -15.625309944152832

Token 149: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007099286303855479
    2. ' x' → logprob: -7.2507100105285645
    3. '	x' → logprob: -17.500709533691406
    4. '   ' → logprob: -17.625709533691406
    5. ' ' → logprob: -17.875709533691406
    6. '  ' → logprob: -19.500709533691406
    7. '    ' → logprob: -20.250709533691406
    8. '
' → logprob: -20.375709533691406
    9. 'n' → logprob: -20.500709533691406
    10. ')x' → logprob: -20.625709533691406

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1641106903553009
    2. ',y' → logprob: -1.9141106605529785
    3. 'y' → logprob: -5.6641106605529785
    4. ' ,' → logprob: -8.039111137390137
    5. ' y' → logprob: -9.414111137390137
    6. '	y' → logprob: -13.039111137390137
    7. ',j' → logprob: -14.164111137390137
    8. ' ' → logprob: -14.289111137390137
    9. '   ' → logprob: -14.414111137390137
    10. ',
' → logprob: -14.664111137390137

Token 151: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002805940806865692
    2. ' y' → logprob: -5.877805709838867
    3. '	y' → logprob: -15.502805709838867
    4. '   ' → logprob: -15.752805709838867
    5. ' ' → logprob: -16.002805709838867
    6. '    ' → logprob: -16.127805709838867
    7. ')y' → logprob: -16.502805709838867
    8. ')' → logprob: -16.502805709838867
    9. '  ' → logprob: -17.377805709838867
    10. '
' → logprob: -17.440305709838867

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519950568675995
    2. ')
' → logprob: -1.5019950866699219
    3. ')
' → logprob: -10.001995086669922
    4. ')

' → logprob: -11.376995086669922
    5. '           ' → logprob: -11.751995086669922
    6. ' )' → logprob: -14.876995086669922
    7. ' )
' → logprob: -15.126995086669922
    8. '   ' → logprob: -15.876995086669922
    9. ')`
' → logprob: -15.876995086669922
    10. ')`' → logprob: -16.001995086669922

Token 153: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20939819514751434
    2. 'increment' → logprob: -1.7093981504440308
    3. ' increment' → logprob: -5.08439826965332
    4. '
' → logprob: -7.58439826965332
    5. '            
' → logprob: -7.95939826965332
    6. '<|end|>' → logprob: -8.08439826965332
    7. '.increment' → logprob: -9.08439826965332
    8. ')' → logprob: -9.45939826965332
    9. ' if' → logprob: -9.45939826965332
    10. 'if' → logprob: -9.95939826965332

Token 154: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' (adapté à ' increment') → logprob: -2.8325677703833207e-05
    2. '           ' → logprob: -11.000028610229492
    3. ' increment' → logprob: -11.625028610229492
    4. 'if' → logprob: -12.875028610229492
    5. '
' → logprob: -17.250028610229492
    6. '.increment' → logprob: -18.875028610229492
    7. '               ' → logprob: -18.875028610229492
    8. '            
' → logprob: -19.000028610229492
    9. '   ' → logprob: -19.250028610229492
    10. 'increments' → logprob: -19.375028610229492

Token 155: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. '_counts' → logprob: -16.625
    3. '_' → logprob: -17.125
    4. ' _' → logprob: -17.875
    5. '_code' → logprob: -18.375
    6. '_c' → logprob: -18.625
    7. 's' → logprob: -18.75
    8. '```' → logprob: -18.875
    9. 'count' → logprob: -19.125
    10. '
' → logprob: -19.375

Token 156: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -2.47495681833243e-05
    2. 'arr' → logprob: -10.625024795532227
    3. '	arr' → logprob: -15.750024795532227
    4. '<arr' → logprob: -16.000024795532227
    5. '[arr' → logprob: -16.750024795532227
    6. ' arr' → logprob: -17.000024795532227
    7. '(' → logprob: -18.125024795532227
    8. '_arr' → logprob: -18.250024795532227
    9. '(array' → logprob: -18.750024795532227
    10. ' (' → logprob: -19.000024795532227

Token 157: ',' (ID: 11)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.9087718725204468
    2. ',d' → logprob: -1.0337718725204468
    3. ',' → logprob: -1.5337718725204468
    4. '(' → logprob: -4.783771991729736
    5. '(j' → logprob: -4.783771991729736
    6. ',j' → logprob: -5.283771991729736
    7. ' ,' → logprob: -6.283771991729736
    8. ')' → logprob: -7.283771991729736
    9. 'd' → logprob: -7.533771991729736
    10. ' d' → logprob: -8.033771514892578

Token 158: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0003365350130479783
    2. ' d' → logprob: -8.000336647033691
    3. ')d' → logprob: -15.250336647033691
    4. ' ' → logprob: -15.500336647033691
    5. ')' → logprob: -15.750336647033691
    6. '(d' → logprob: -15.875336647033691
    7. 'j' → logprob: -16.125335693359375
    8. '   ' → logprob: -16.375335693359375
    9. '	d' → logprob: -16.375335693359375
    10. 'int' → logprob: -17.000335693359375

Token 159: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7848862373502925e-05
    2. ')
' → logprob: -10.875027656555176
    3. ' )' → logprob: -13.250027656555176
    4. ')

' → logprob: -13.250027656555176
    5. '(' → logprob: -13.625027656555176
    6. ')d' → logprob: -13.750027656555176
    7. '[' → logprob: -14.750027656555176
    8. '())' → logprob: -14.875027656555176
    9. '))' → logprob: -15.000027656555176
    10. '-' → logprob: -15.250027656555176

Token 160: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: ' output' (ID: 4733)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7035542726516724
    2. 'main' → logprob: -0.9535542726516724
    3. 'get' → logprob: -2.703554153442383
    4. 'process' → logprob: -3.953554153442383
    5. ' get' → logprob: -4.078554153442383
    6. 'def' → logprob: -4.703554153442383
    7. ' process' → logprob: -5.078554153442383
    8. ' def' → logprob: -7.078554153442383
    9. 'solve' → logprob: -8.703554153442383
    10. ' solve' → logprob: -9.203554153442383

Token 162: '_result' (ID: 11623)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.12946249544620514
    2. '(' → logprob: -3.129462480545044
    3. '_(' → logprob: -3.879462480545044
    4. '_counts' → logprob: -3.879462480545044
    5. '_count' → logprob: -4.379462718963623
    6. '_array' → logprob: -4.379462718963623
    7. '_' → logprob: -5.004462718963623
    8. '_arr' → logprob: -6.754462718963623
    9. '(_' → logprob: -6.879462718963623
    10. 'arr' → logprob: -7.129462718963623

Token 163: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0002123614540323615
    2. '(' → logprob: -8.500212669372559
    3. '(array' → logprob: -12.625212669372559
    4. '():' → logprob: -12.750212669372559
    5. ' (' → logprob: -13.625212669372559
    6. 'arr' → logprob: -14.625212669372559
    7. '(a' → logprob: -14.875212669372559
    8. '(def' → logprob: -15.875212669372559
    9. '(ar' → logprob: -16.250211715698242
    10. ':' → logprob: -16.625211715698242

Token 164: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25195521116256714
    2. '):
' → logprob: -1.501955270767212
    3. '):
' → logprob: -11.376955032348633
    4. ')' → logprob: -12.126955032348633
    5. '():
' → logprob: -12.626955032348633
    6. '():' → logprob: -13.251955032348633
    7. '[]):' → logprob: -13.251955032348633
    8. '):

' → logprob: -14.251955032348633
    9. ' ):' → logprob: -14.626955032348633
    10. ':' → logprob: -14.876955032348633

Token 165: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3374769389629364
    2. 'print' → logprob: -1.8374769687652588
    3. '   ' → logprob: -2.337476968765259
    4. ' for' → logprob: -3.712476968765259
    5. 'for' → logprob: -5.08747673034668
    6. '```' → logprob: -10.33747673034668
    7. 'def' → logprob: -11.96247673034668
    8. '    
' → logprob: -12.21247673034668
    9. '	print' → logprob: -12.83747673034668
    10. '
' → logprob: -13.33747673034668

Token 166: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01083675492554903
    2. 'print' → logprob: -5.010836601257324
    3. ' for' → logprob: -5.510836601257324
    4. '   ' → logprob: -10.635836601257324
    5. 'def' → logprob: -10.885836601257324
    6. ' print' → logprob: -11.135836601257324
    7. 'import' → logprob: -11.510836601257324
    8. 'from' → logprob: -13.385836601257324
    9. '```' → logprob: -14.385836601257324
    10. '
' → logprob: -14.510836601257324

Token 167: ' b' (ID: 287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4088279604911804
    2. 'count' → logprob: -1.4088280200958252
    3. 'value' → logprob: -3.158828020095825
    4. 'val' → logprob: -3.783828020095825
    5. 'k' → logprob: -4.658827781677246
    6. ' i' → logprob: -5.033827781677246
    7. ' count' → logprob: -5.408827781677246
    8. 'v' → logprob: -7.033827781677246
    9. 'x' → logprob: -7.158827781677246
    10. 'cnt' → logprob: -7.158827781677246

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01890624687075615
    2. 'in' → logprob: -4.018906116485596
    3. 'i' → logprob: -7.268906116485596
    4. 'y' → logprob: -10.518906593322754
    5. ',' → logprob: -11.518906593322754
    6. ' i' → logprob: -12.143906593322754
    7. ' ' → logprob: -13.018906593322754
    8. '_i' → logprob: -13.018906593322754
    9. '1' → logprob: -13.268906593322754
    10. 'count' → logprob: -13.518906593322754

Token 169: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0018896145047619939
    2. 'range' → logprob: -6.501889705657959
    3. ' arr' → logprob: -7.876889705657959
    4. ' range' → logprob: -11.8768892288208
    5. '[' → logprob: -14.7518892288208
    6. '	arr' → logprob: -15.1268892288208
    7. 'array' → logprob: -16.376890182495117
    8. '(arr' → logprob: -16.876890182495117
    9. '1' → logprob: -17.251890182495117
    10. '_arr' → logprob: -17.876890182495117

Token 170: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010679395636543632
    2. ':' → logprob: -7.001068115234375
    3. ':
' → logprob: -9.126068115234375
    4. '1' → logprob: -10.251068115234375
    5. '   ' → logprob: -12.001068115234375
    6. '[:-' → logprob: -13.001068115234375
    7. '2' → logprob: -14.501068115234375
    8. 'def' → logprob: -14.626068115234375
    9. '[:' → logprob: -14.626068115234375
    10. '```' → logprob: -14.626068115234375

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.000001907348633
    3. '   ' → logprob: -15.000001907348633
    4. '
' → logprob: -15.375001907348633
    5. ':' → logprob: -16.250001907348633
    6. '(' → logprob: -16.875001907348633
    7. 'range' → logprob: -18.125001907348633
    8. ':]' → logprob: -18.375001907348633
    9. '```' → logprob: -18.375001907348633
    10. ']' → logprob: -18.625001907348633

Token 172: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.763666947837919e-05
    2. ']:' → logprob: -10.62504768371582
    3. ':]' → logprob: -11.25004768371582
    4. ' :' → logprob: -11.87504768371582
    5. 'len' → logprob: -13.62504768371582
    6. '1' → logprob: -14.37504768371582
    7. ':-' → logprob: -15.37504768371582
    8. ':],' → logprob: -15.37504768371582
    9. ':n' → logprob: -15.50004768371582
    10. ':length' → logprob: -15.75004768371582

Token 173: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.03045561909675598
    2. ']:
' → logprob: -3.5304555892944336
    3. ':' → logprob: -7.280455589294434
    4. ']:
' → logprob: -11.780455589294434
    5. ']' → logprob: -13.030455589294434
    6. ':]' → logprob: -13.530455589294434
    7. '1' → logprob: -13.780455589294434
    8. '():' → logprob: -14.530455589294434
    9. ':
' → logprob: -14.655455589294434
    10. ']:

' → logprob: -14.655455589294434

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28088197112083435
    2. ' print' → logprob: -1.5308820009231567
    3. 'print' → logprob: -4.030881881713867
    4. '   ' → logprob: -4.530881881713867
    5. '	print' → logprob: -12.530881881713867
    6. '```' → logprob: -13.030881881713867
    7. '           ' → logprob: -14.280881881713867
    8. ' ' → logprob: -14.530881881713867
    9. '               ' → logprob: -16.155881881713867
    10. '.print' → logprob: -16.280881881713867

Token 175: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005305619910359383
    2. ' print' → logprob: -5.255305767059326
    3. '       ' → logprob: -9.630305290222168
    4. '           ' → logprob: -12.130305290222168
    5. '   ' → logprob: -14.380305290222168
    6. '	print' → logprob: -16.005306243896484
    7. '               ' → logprob: -17.630306243896484
    8. '```' → logprob: -18.005306243896484
    9. '
' → logprob: -19.630306243896484
    10. '.print' → logprob: -19.880306243896484

Token 176: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0009427884360775352
    2. 'b' → logprob: -7.000942707061768
    3. '(' → logprob: -10.375943183898926
    4. '(
' → logprob: -16.62594223022461
    5. ' (' → logprob: -19.12594223022461
    6. ' b' → logprob: -19.37594223022461
    7. '	b' → logprob: -19.37594223022461
    8. '()' → logprob: -19.50094223022461
    9. '*b' → logprob: -20.00094223022461
    10. ')b' → logprob: -20.75094223022461

Token 177: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ',' → logprob: -13.000006675720215
    3. ' )' → logprob: -13.625006675720215
    4. ',)' → logprob: -13.875006675720215
    5. '())' → logprob: -14.375006675720215
    6. '()' → logprob: -14.625006675720215
    7. ')`' → logprob: -15.125006675720215
    8. '')' → logprob: -15.375006675720215
    9. '")' → logprob: -16.1250057220459
    10. '`)' → logprob: -16.3750057220459

Token 178: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5805747509002686
    2. 'n' → logprob: -0.8305747509002686
    3. '<|end|>' → logprob: -5.830574989318848
    4. '#' → logprob: -7.205574989318848
    5. '(n' → logprob: -8.455574989318848
    6. 'if' → logprob: -8.830574989318848
    7. '(' → logprob: -9.080574989318848
    8. '0' → logprob: -9.205574989318848
    9. '```' → logprob: -9.330574989318848
    10. ' n' → logprob: -10.330574989318848

Token 179: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.02975187823176384
    2. ' main' → logprob: -3.529751777648926
    3. 'process' → logprob: -14.154751777648926
    4. '	main' → logprob: -14.779751777648926
    5. 'solve' → logprob: -15.779751777648926
    6. '_main' → logprob: -16.029752731323242
    7. '__' → logprob: -16.654752731323242
    8. 'run' → logprob: -18.404752731323242
    9. 'solution' → logprob: -18.404752731323242
    10. ' process' → logprob: -18.404752731323242

Token 180: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.981667537620524e-06
    2. '():
' → logprob: -14.000001907348633
    3. ' ():' → logprob: -14.250001907348633
    4. '(' → logprob: -15.000001907348633
    5. '()' → logprob: -16.750001907348633
    6. '(:' → logprob: -18.125001907348633
    7. '():
' → logprob: -18.250001907348633
    8. '(":' → logprob: -18.750001907348633
    9. ':' → logprob: -19.250001907348633
    10. '_' → logprob: -19.500001907348633

Token 181: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7445170283317566
    2. ' n' → logprob: -0.7445170283317566
    3. '   ' → logprob: -2.9945170879364014
    4. '	n' → logprob: -12.11951732635498
    5. '(n' → logprob: -12.74451732635498
    6. '  ' → logprob: -14.11951732635498
    7. ',n' → logprob: -14.36951732635498
    8. ' ' → logprob: -14.61951732635498
    9. '_n' → logprob: -14.86951732635498
    10. ' (' → logprob: -14.86951732635498

Token 182: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.02326003834605217
    2. ' n' → logprob: -3.7732601165771484
    3. '   ' → logprob: -11.398260116577148
    4. '	n' → logprob: -13.648260116577148
    5. ' ' → logprob: -13.773260116577148
    6. 't' → logprob: -15.148260116577148
    7. '    
' → logprob: -15.148260116577148
    8. '
' → logprob: -15.898260116577148
    9. '  ' → logprob: -15.898260116577148
    10. '(n' → logprob: -16.27326011657715

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024751186720095575
    2. ' =' → logprob: -9.000247955322266
    3. '=' → logprob: -9.500247955322266
    4. ' ,' → logprob: -10.000247955322266
    5. ',x' → logprob: -13.125247955322266
    6. ',
' → logprob: -14.125247955322266
    7. ')' → logprob: -15.875247955322266
    8. ',n' → logprob: -16.125247955322266
    9. ' ' → logprob: -16.250247955322266
    10. ',a' → logprob: -16.625247955322266

Token 184: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.043022822588682175
    2. ' x' → logprob: -3.168022871017456
    3. ' ' → logprob: -10.918023109436035
    4. '*x' → logprob: -13.293023109436035
    5. '  ' → logprob: -13.918023109436035
    6. '	x' → logprob: -14.168023109436035
    7. '<|end|>' → logprob: -14.793023109436035
    8. '    ' → logprob: -14.918023109436035
    9. '*' → logprob: -14.918023109436035
    10. '_x' → logprob: -15.543023109436035

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002499675378203392
    2. '=' → logprob: -6.127499580383301
    3. ' =' → logprob: -8.1274995803833
    4. ' ,' → logprob: -11.0024995803833
    5. ',y' → logprob: -13.5024995803833
    6. '<|end|>' → logprob: -15.0024995803833
    7. ' ' → logprob: -15.8774995803833
    8. ',x' → logprob: -16.002500534057617
    9. '‌,' → logprob: -16.252500534057617
    10. ',b' → logprob: -16.377500534057617

Token 186: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006716317031532526
    2. ' y' → logprob: -5.006716251373291
    3. '<|end|>' → logprob: -14.75671672821045
    4. '	y' → logprob: -15.38171672821045
    5. '    ' → logprob: -16.256715774536133
    6. ' ' → logprob: -16.381715774536133
    7. ',y' → logprob: -16.881715774536133
    8. '=' → logprob: -17.006715774536133
    9. '  ' → logprob: -17.131715774536133
    10. '   ' → logprob: -17.256715774536133

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519317865371704
    2. ' =' → logprob: -1.5019317865371704
    3. ',' → logprob: -13.001932144165039
    4. ' ' → logprob: -16.12693214416504
    5. ')' → logprob: -16.50193214416504
    6. '   ' → logprob: -17.00193214416504
    7. '＝' → logprob: -17.62693214416504
    8. '=input' → logprob: -17.62693214416504
    9. '=

' → logprob: -18.00193214416504
    10. ')=' → logprob: -18.25193214416504

Token 188: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.4741155207157135
    2. ' get' → logprob: -0.9741154909133911
    3. 'map' → logprob: -10.724115371704102
    4. ' map' → logprob: -11.099115371704102
    5. '*' → logprob: -14.224115371704102
    6. '   ' → logprob: -15.349115371704102
    7. '	get' → logprob: -15.474115371704102
    8. '(get' → logprob: -16.4741153717041
    9. ' ' → logprob: -16.9741153717041
    10. '=get' → logprob: -17.3491153717041

Token 189: '_inputs' (ID: 67304)
  Prédit: '_inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.750001907348633
    3. 'inputs' → logprob: -14.875001907348633
    4. 's' → logprob: -15.125001907348633
    5. '_outputs' → logprob: -15.875001907348633
    6. '_input' → logprob: -16.000001907348633
    7. '()' → logprob: -16.375001907348633
    8. '(' → logprob: -16.750001907348633
    9. 'Inputs' → logprob: -17.000001907348633
    10. ' inputs' → logprob: -17.125001907348633

Token 190: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.771655115589965e-05
    2. '()
' → logprob: -11.000018119812012
    3. '()

' → logprob: -14.375018119812012
    4. '().' → logprob: -16.750017166137695
    5. '()]' → logprob: -17.000017166137695
    6. '()`' → logprob: -17.000017166137695
    7. '();' → logprob: -17.125017166137695
    8. '(' → logprob: -17.125017166137695
    9. ' ()' → logprob: -17.375017166137695
    10. '()"' → logprob: -17.500017166137695

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4070434868335724
    2. '
' → logprob: -1.78204345703125
    3. 'arr' → logprob: -1.90704345703125
    4. '    
' → logprob: -4.53204345703125
    5. '	arr' → logprob: -5.53204345703125
    6. '```' → logprob: -7.15704345703125
    7. ' arr' → logprob: -7.40704345703125
    8. '	
' → logprob: -7.90704345703125
    9. '<|end|>' → logprob: -8.90704345703125
    10. '  
' → logprob: -8.90704345703125

Token 192: ' a' (ID: 261)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.00015133652777876705
    2. '   ' → logprob: -9.000151634216309
    3. ' arr' → logprob: -11.500151634216309
    4. 'counts' → logprob: -11.750151634216309
    5. 'count' → logprob: -12.875151634216309
    6. 'result' → logprob: -13.250151634216309
    7. 'ans' → logprob: -13.375151634216309
    8. 'a' (adapté à ' a') → logprob: -13.750151634216309
    9. 'array' → logprob: -14.250151634216309
    10. 'results' → logprob: -14.625151634216309

Token 193: ' =' (ID: 314)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.01701553910970688
    2. ' =' → logprob: -4.76701545715332
    3. 'rray' → logprob: -5.51701545715332
    4. 'r' → logprob: -6.01701545715332
    5. '=' → logprob: -6.26701545715332
    6. 'arr' → logprob: -11.39201545715332
    7. '_rr' → logprob: -14.51701545715332
    8. '   ' → logprob: -14.76701545715332
    9. ' ' → logprob: -15.01701545715332
    10. 'RR' → logprob: -15.39201545715332

Token 194: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.000817369669675827
    2. ' init' → logprob: -7.12581729888916
    3. '[' → logprob: -11.37581729888916
    4. 'n' → logprob: -15.12581729888916
    5. ' [' → logprob: -15.12581729888916
    6. '   ' → logprob: -15.37581729888916
    7. 'int' → logprob: -15.50081729888916
    8. '	init' → logprob: -15.62581729888916
    9. '_init' → logprob: -15.87581729888916
    10. '(init' → logprob: -16.625818252563477

Token 195: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -2.696889623621246e-06
    2. 'array' → logprob: -13.25000286102295
    3. '(n' → logprob: -14.50000286102295
    4. '_arr' → logprob: -15.62500286102295
    5. '_a' → logprob: -16.125001907348633
    6. '_' → logprob: -16.500001907348633
    7. 'a' → logprob: -17.000001907348633
    8. '_ARRAY' → logprob: -17.625001907348633
    9. 'Array' → logprob: -17.875001907348633
    10. '_arrays' → logprob: -18.625001907348633

Token 196: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.719917630311102e-05
    2. '(' → logprob: -9.500077247619629
    3. 'n' → logprob: -13.625077247619629
    4. '((' → logprob: -14.000077247619629
    5. ' (' → logprob: -15.125077247619629
    6. '([' → logprob: -18.000076293945312
    7. '[n' → logprob: -18.250076293945312
    8. '(
' → logprob: -19.250076293945312
    9. '   ' → logprob: -20.000076293945312
    10. '(nx' → logprob: -21.250076293945312

Token 197: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003294162917882204
    2. ')
' → logprob: -5.878293991088867
    3. '+' → logprob: -8.878293991088867
    4. '(n' → logprob: -9.128293991088867
    5. '()' → logprob: -9.503293991088867
    6. '(' → logprob: -9.628293991088867
    7. '*' → logprob: -10.753293991088867
    8. ')n' → logprob: -11.003293991088867
    9. ')
' → logprob: -11.128293991088867
    10. 'n' → logprob: -11.628293991088867

Token 198: '   ' (ID: 271)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.7639732956886292
    2. '   ' → logprob: -1.0139732360839844
    3. 'process' → logprob: -1.7639732360839844
    4. '	process' → logprob: -10.263973236083984
    5. ' for' → logprob: -12.388973236083984
    6. '<|end|>' → logprob: -13.013973236083984
    7. '  ' → logprob: -13.513973236083984
    8. ' ' → logprob: -13.513973236083984
    9. '(process' → logprob: -13.638973236083984
    10. '    
' → logprob: -13.763973236083984

Token 199: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.0012245126999914646
    2. ' process' → logprob: -6.751224517822266
    3. '   ' → logprob: -9.876224517822266
    4. 'for' → logprob: -13.001224517822266
    5. '	process' → logprob: -14.626224517822266
    6. '(process' → logprob: -16.001224517822266
    7. ' for' → logprob: -16.626224517822266
    8. '.process' → logprob: -16.751224517822266
    9. 'def' → logprob: -18.376224517822266
    10. ' ' → logprob: -18.376224517822266

Token 200: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -1.2664456789934775e-06
    2. 'pairs' → logprob: -14.000000953674316
    3. ' _' → logprob: -17.000001907348633
    4. '_' → logprob: -17.000001907348633
    5. '```' → logprob: -17.125001907348633
    6. 's' → logprob: -17.375001907348633
    7. '_process' → logprob: -17.500001907348633
    8. '_p' → logprob: -17.875001907348633
    9. '_loop' → logprob: -17.875001907348633
    10. 'a' → logprob: -18.000001907348633

Token 201: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009230116847902536
    2. '(' → logprob: -7.000923156738281
    3. ' (' → logprob: -11.375923156738281
    4. '(
' → logprob: -16.75092315673828
    5. '(noun' → logprob: -17.00092315673828
    6. '(a' → logprob: -17.75092315673828
    7. '```' → logprob: -18.25092315673828
    8. '(len' → logprob: -18.62592315673828
    9. '(

' → logprob: -18.87592315673828
    10. '((' → logprob: -19.12592315673828

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001717166742309928
    2. ',x' → logprob: -8.875171661376953
    3. '(' → logprob: -10.875171661376953
    4. '(x' → logprob: -11.875171661376953
    5. ' ,' → logprob: -12.125171661376953
    6. ',
' → logprob: -16.000171661376953
    7. 'a' → logprob: -16.625171661376953
    8. 'x' → logprob: -16.750171661376953
    9. ')' → logprob: -16.875171661376953
    10. ',n' → logprob: -17.000171661376953

Token 203: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07008226215839386
    2. ' x' → logprob: -2.695082187652588
    3. 'n' → logprob: -9.320082664489746
    4. ' n' → logprob: -10.320082664489746
    5. '   ' → logprob: -12.070082664489746
    6. ' ' → logprob: -12.195082664489746
    7. '0' → logprob: -12.445082664489746
    8. 'a' → logprob: -13.570082664489746
    9. 'y' → logprob: -13.570082664489746
    10. ' y' → logprob: -13.695082664489746

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009431460639461875
    2. ',y' → logprob: -7.000943183898926
    3. ' ,' → logprob: -10.750943183898926
    4. 'y' → logprob: -11.875943183898926
    5. ',
' → logprob: -13.000943183898926
    6. '-' → logprob: -14.750943183898926
    7. ')' → logprob: -15.625943183898926
    8. ' y' → logprob: -15.750943183898926
    9. ',

' → logprob: -16.00094223022461
    10. '```' → logprob: -16.87594223022461

Token 205: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0021859495900571346
    2. ' y' → logprob: -6.127185821533203
    3. '   ' → logprob: -15.002185821533203
    4. '	y' → logprob: -15.252185821533203
    5. ' ' → logprob: -15.877185821533203
    6. '    ' → logprob: -16.002185821533203
    7. '  ' → logprob: -17.127185821533203
    8. ',y' → logprob: -17.502185821533203
    9. ',' → logprob: -18.877185821533203
    10. '     ' → logprob: -19.002185821533203

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.515961285913363e-05
    2. ',a' → logprob: -10.000064849853516
    3. 'a' → logprob: -11.000064849853516
    4. ' ,' → logprob: -13.000064849853516
    5. ' a' → logprob: -15.375064849853516
    6. '   ' → logprob: -15.500064849853516
    7. ',
' → logprob: -15.625064849853516
    8. ')' → logprob: -16.625064849853516
    9. '```' → logprob: -17.500064849853516
    10. '),' → logprob: -19.125064849853516

Token 207: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007100477814674377
    2. ' a' → logprob: -7.2507100105285645
    3. ')a' → logprob: -17.750709533691406
    4. '	a' → logprob: -18.375709533691406
    5. '   ' → logprob: -18.500709533691406
    6. ')' → logprob: -19.125709533691406
    7. '_a' → logprob: -20.500709533691406
    8. '(a' → logprob: -20.625709533691406
    9. 'а' → logprob: -20.750709533691406
    10. '[a' → logprob: -21.500709533691406

Token 208: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07889165729284286
    2. ')
' → logprob: -2.5788917541503906
    3. ')
' → logprob: -13.57889175415039
    4. '   ' → logprob: -15.20389175415039
    5. ')

' → logprob: -15.57889175415039
    6. ')a' → logprob: -16.57889175415039
    7. ' )' → logprob: -17.70389175415039
    8. '),' → logprob: -17.82889175415039
    9. ')`' → logprob: -18.07889175415039
    10. '))' → logprob: -18.82889175415039

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010397866368293762
    2. '
' → logprob: -4.885397911071777
    3. 'output' → logprob: -6.135397911071777
    4. ' output' → logprob: -7.635397911071777
    5. '    
' → logprob: -9.010397911071777
    6. '
' → logprob: -12.010397911071777
    7. '```' → logprob: -12.385397911071777
    8. '  
' → logprob: -13.260397911071777
    9. '	output' → logprob: -13.760397911071777
    10. '\n' → logprob: -14.385397911071777

Token 210: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.0012935701524838805
    2. ' output' → logprob: -6.751293659210205
    3. '   ' → logprob: -9.001293182373047
    4. ' ' → logprob: -17.501293182373047
    5. '	output' → logprob: -17.626293182373047
    6. '  ' → logprob: -17.751293182373047
    7. '
' → logprob: -17.876293182373047
    8. '(output' → logprob: -19.126293182373047
    9. '```' → logprob: -19.626293182373047
    10. 'out' → logprob: -20.251293182373047

Token 211: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: 0.0
    2. 'result' → logprob: -18.125
    3. '_' → logprob: -18.25
    4. '_results' → logprob: -18.875
    5. '_RESULT' → logprob: -19.875
    6. '_output' → logprob: -20.125
    7. '_res' → logprob: -20.75
    8. '_Result' → logprob: -21.125
    9. 's' → logprob: -21.875
    10. 'Result' → logprob: -22.125

Token 212: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00038455575122497976
    2. '(arr' → logprob: -8.500384330749512
    3. '(' → logprob: -8.625384330749512
    4. '(array' → logprob: -13.625384330749512
    5. ' (' → logprob: -15.750384330749512
    6. '(ab' → logprob: -16.500385284423828
    7. '(ans' → logprob: -17.625385284423828
    8. '(an' → logprob: -18.125385284423828
    9. '(
' → logprob: -18.375385284423828
    10. '(n' → logprob: -18.500385284423828

Token 213: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -12.375004768371582
    3. ' )' → logprob: -16.625003814697266
    4. '[' → logprob: -17.000003814697266
    5. '())' → logprob: -17.500003814697266
    6. ')

' → logprob: -17.625003814697266
    7. '()' → logprob: -17.875003814697266
    8. '))' → logprob: -18.125003814697266
    9. ')`' → logprob: -18.250003814697266
    10. '(' → logprob: -19.625003814697266

Token 214: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02912602759897709
    2. 'main' → logprob: -3.904125928878784
    3. '
' → logprob: -5.279126167297363
    4. '\n' → logprob: -6.154126167297363
    5. '_' → logprob: -7.279126167297363
    6. ' if' → logprob: -8.404126167297363
    7. ' main' → logprob: -9.404126167297363
    8. '\' → logprob: -9.529126167297363
    9. '(main' → logprob: -9.904126167297363
    10. '#' → logprob: -10.154126167297363

Token 215: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004274038597941399
    2. '(' → logprob: -5.504273891448975
    3. '()
' → logprob: -8.879274368286133
    4. '#' → logprob: -10.504274368286133
    5. '(
' → logprob: -11.504274368286133
    6. '```' → logprob: -12.379274368286133
    7. '();' → logprob: -12.754274368286133
    8. '()\' → logprob: -13.129274368286133
    9. '<|end|>' → logprob: -13.254274368286133
    10. ' ()' → logprob: -13.254274368286133


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 213
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 84
Tokens correctement prédits (top 10): 188
Précision stricte (1ère position): 34.27%
Précision adaptée (1ère position): 39.44%
Précision (top 10): 88.26%
================================================================================
