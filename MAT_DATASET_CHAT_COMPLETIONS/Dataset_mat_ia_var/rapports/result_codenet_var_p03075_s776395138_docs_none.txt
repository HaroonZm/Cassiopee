================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a = int(input())
b = int(input())
c = int(input())
d = int(input())
e = int(input())
k = int(input())
if e - a <= k:
    print("Yay!")
else:
    print(":(")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006926587666384876
    2. '(a' → logprob: -7.875692844390869
    3. 'a' → logprob: -9.125692367553711
    4. '```' → logprob: -9.625692367553711
    5. ''' → logprob: -9.875692367553711
    6. '`' → logprob: -10.375692367553711
    7. ' (' → logprob: -11.375692367553711
    8. '('' → logprob: -11.500692367553711
    9. ')' → logprob: -11.750692367553711
    10. '\(' → logprob: -12.250692367553711

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11533945053815842
    2. ')' → logprob: -2.240339517593384
    3. '()' → logprob: -6.865339279174805
    4. '())' → logprob: -7.990339279174805
    5. '(
' → logprob: -8.865339279174805
    6. '))' → logprob: -9.115339279174805
    7. '```' → logprob: -9.115339279174805
    8. '(a' → logprob: -9.240339279174805
    9. 'a' → logprob: -9.740339279174805
    10. '`' → logprob: -9.865339279174805

Token 5: 'b' (ID: 65)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03134123980998993
    2. '*' → logprob: -3.656341314315796
    3. '%' → logprob: -6.406341075897217
    4. '\n' → logprob: -6.656341075897217
    5. '#' → logprob: -7.531341075897217
    6. '+
' → logprob: -8.156341552734375
    7. 'a' → logprob: -8.406341552734375
    8. '\' → logprob: -8.531341552734375
    9. '**' → logprob: -8.656341552734375
    10. ')' → logprob: -8.906341552734375

Token 6: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07556533068418503
    2. ' ' → logprob: -3.5755653381347656
    3. ')' → logprob: -4.325565338134766
    4. '=' → logprob: -4.700565338134766
    5. '[' → logprob: -4.825565338134766
    6. ' +' → logprob: -5.075565338134766
    7. '*' → logprob: -5.700565338134766
    8. ' =' → logprob: -6.450565338134766
    9. ''' → logprob: -7.575565338134766
    10. '**' → logprob: -8.075565338134766

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.006054413039237261
    2. 'int' → logprob: -5.131054401397705
    3. ' a' → logprob: -9.256054878234863
    4. ' input' → logprob: -11.256054878234863
    5. 'a' → logprob: -11.381054878234863
    6. ' ' → logprob: -12.631054878234863
    7. '=int' → logprob: -14.006054878234863
    8. 'input' → logprob: -14.381054878234863
    9. '<int' → logprob: -14.631054878234863
    10. '[int' → logprob: -15.381054878234863

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002011075848713517
    2. '()' → logprob: -7.127011299133301
    3. ')' → logprob: -7.377011299133301
    4. '(a' → logprob: -7.877011299133301
    5. ' (' → logprob: -10.2520112991333
    6. 'a' → logprob: -10.3770112991333
    7. ' ' → logprob: -10.5020112991333
    8. '(
' → logprob: -10.7520112991333
    9. '```' → logprob: -10.7520112991333
    10. '(

' → logprob: -11.8770112991333

Token 9: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.21176181733608246
    2. '()' → logprob: -1.7117618322372437
    3. ')' → logprob: -4.586761951446533
    4. '(' → logprob: -10.211761474609375
    5. ' ())' → logprob: -10.211761474609375
    6. '()))' → logprob: -11.711761474609375
    7. '`)' → logprob: -12.086761474609375
    8. '();)' → logprob: -12.211761474609375
    9. '()`' → logprob: -13.211761474609375
    10. '()
' → logprob: -13.336761474609375

Token 10: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7170142531394958
    2. 'if' → logprob: -0.7170142531394958
    3. 's' → logprob: -4.217014312744141
    4. 'print' → logprob: -5.842014312744141
    5. '+' → logprob: -5.967014312744141
    6. 'sum' → logprob: -6.592014312744141
    7. 'result' → logprob: -6.842014312744141
    8. ' if' → logprob: -8.59201431274414
    9. '+
' → logprob: -8.59201431274414
    10. '#' → logprob: -8.71701431274414

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6418255567550659
    2. '=' → logprob: -0.7668255567550659
    3. '+' → logprob: -5.1418256759643555
    4. '_' → logprob: -6.6418256759643555
    5. ')' → logprob: -7.5168256759643555
    6. ' ' → logprob: -7.7668256759643555
    7. ' +=' → logprob: -8.141825675964355
    8. 'a' → logprob: -8.766825675964355
    9. ' +' → logprob: -9.141825675964355
    10. '+=' → logprob: -9.266825675964355

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.0961319208145142
    2. ' a' → logprob: -1.3461319208145142
    3. 'int' → logprob: -1.5961319208145142
    4. 'a' → logprob: -1.5961319208145142
    5. ' input' → logprob: -9.096132278442383
    6. 'input' → logprob: -9.846132278442383
    7. ' ' → logprob: -10.846132278442383
    8. '(int' → logprob: -11.096132278442383
    9. ' max' → logprob: -11.596132278442383
    10. 'max' → logprob: -12.221132278442383

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001927567063830793
    2. ')' → logprob: -7.376927375793457
    3. '()' → logprob: -7.876927375793457
    4. '('' → logprob: -8.751927375793457
    5. 'a' → logprob: -8.876927375793457
    6. '(a' → logprob: -8.876927375793457
    7. ' (' → logprob: -9.626927375793457
    8. '(input' → logprob: -9.626927375793457
    9. '[' → logprob: -9.876927375793457
    10. ' ' → logprob: -9.876927375793457

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.32185065746307373
    2. '()' → logprob: -1.5718506574630737
    3. ')' → logprob: -2.6968507766723633
    4. '(' → logprob: -9.571850776672363
    5. ' ())' → logprob: -11.321850776672363
    6. '`)' → logprob: -11.696850776672363
    7. '()>' → logprob: -11.946850776672363
    8. ' )' → logprob: -12.821850776672363
    9. '()))' → logprob: -13.071850776672363
    10. '()
' → logprob: -13.196850776672363

Token 15: 'd' (ID: 67)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4192640483379364
    2. 'd' → logprob: -1.6692640781402588
    3. 'sum' → logprob: -2.794264078140259
    4. 's' → logprob: -2.919264078140259
    5. 'max' → logprob: -3.669264078140259
    6. 'total' → logprob: -5.29426383972168
    7. 'print' → logprob: -5.54426383972168
    8. 'result' → logprob: -6.54426383972168
    9. 'n' → logprob: -6.79426383972168
    10. 'x' → logprob: -7.41926383972168

Token 16: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.387460470199585
    2. ' =' → logprob: -1.387460470199585
    3. ' ' → logprob: -1.387460470199585
    4. '=' → logprob: -1.762460470199585
    5. ')' → logprob: -3.887460470199585
    6. ' +' → logprob: -3.887460470199585
    7. '*' → logprob: -5.262460708618164
    8. '[' → logprob: -5.512460708618164
    9. '_' → logprob: -5.512460708618164
    10. '>' → logprob: -5.637460708618164

Token 17: ' int' (ID: 677)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.32455405592918396
    2. 'a' → logprob: -1.5745540857315063
    3. ' int' → logprob: -2.824553966522217
    4. 'int' → logprob: -4.574553966522217
    5. ' ' → logprob: -8.574554443359375
    6. ' max' → logprob: -9.199554443359375
    7. 'max' → logprob: -10.699554443359375
    8. '(a' → logprob: -10.824554443359375
    9. ' (' → logprob: -11.074554443359375
    10. '(int' → logprob: -11.699554443359375

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00031425125780515373
    2. ' (' → logprob: -8.625314712524414
    3. 'a' → logprob: -10.875314712524414
    4. ')' → logprob: -11.000314712524414
    5. ''' → logprob: -11.125314712524414
    6. '('' → logprob: -11.250314712524414
    7. '(input' → logprob: -11.500314712524414
    8. '(
' → logprob: -11.625314712524414
    9. '(a' → logprob: -11.750314712524414
    10. '()' → logprob: -11.875314712524414

Token 19: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06059836223721504
    2. '())' → logprob: -3.310598373413086
    3. '()' → logprob: -3.810598373413086
    4. '`)' → logprob: -9.060598373413086
    5. ' )' → logprob: -10.810598373413086
    6. '()
' → logprob: -12.310598373413086
    7. '))' → logprob: -12.435598373413086
    8. '')' → logprob: -12.560598373413086
    9. '(' → logprob: -12.560598373413086
    10. ')
' → logprob: -12.935598373413086

Token 20: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5356164574623108
    2. 'if' → logprob: -1.160616397857666
    3. 'print' → logprob: -3.285616397857666
    4. 'sum' → logprob: -4.285616397857666
    5. 's' → logprob: -4.535616397857666
    6. 'n' → logprob: -4.660616397857666
    7. 'max' → logprob: -4.660616397857666
    8. 'result' → logprob: -5.160616397857666
    9. 'x' → logprob: -5.285616397857666
    10. 'total' → logprob: -5.410616397857666

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09271789342164993
    2. '=' → logprob: -2.4677178859710693
    3. ')' → logprob: -6.842718124389648
    4. '+' → logprob: -7.092718124389648
    5. '_' → logprob: -7.967718124389648
    6. ' ' → logprob: -8.217718124389648
    7. '>' → logprob: -8.842718124389648
    8. '.' → logprob: -9.092718124389648
    9. 'space' → logprob: -9.092718124389648
    10. 'a' → logprob: -9.342718124389648

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.27680504322052
    2. ' a' → logprob: -1.40180504322052
    3. 'a' → logprob: -1.52680504322052
    4. ' ' → logprob: -1.65180504322052
    5. 'int' → logprob: -2.9018049240112305
    6. ' (' → logprob: -5.9018049240112305
    7. 'e' → logprob: -6.1518049240112305
    8. 'd' → logprob: -6.6518049240112305
    9. ' e' → logprob: -7.4018049240112305
    10. 's' → logprob: -7.5268049240112305

Token 23: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037107658572494984
    2. '(input' → logprob: -5.753710746765137
    3. ' (' → logprob: -8.503710746765137
    4. '('' → logprob: -9.628710746765137
    5. '()' → logprob: -9.628710746765137
    6. '(
' → logprob: -9.878710746765137
    7. ')' → logprob: -10.878710746765137
    8. '(a' → logprob: -11.128710746765137
    9. '((' → logprob: -11.503710746765137
    10. '(

' → logprob: -11.503710746765137

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4642115831375122
    2. '()' → logprob: -1.3392115831375122
    3. ')' → logprob: -2.2142114639282227
    4. '`)' → logprob: -10.839211463928223
    5. ' ())' → logprob: -10.964211463928223
    6. '(' → logprob: -11.339211463928223
    7. ' )' → logprob: -11.839211463928223
    8. '()
' → logprob: -12.089211463928223
    9. '();)' → logprob: -13.339211463928223
    10. '())
' → logprob: -13.339211463928223

Token 25: 'k' (ID: 74)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2554052770137787
    2. 's' → logprob: -2.5054051876068115
    3. 'sum' → logprob: -3.3804051876068115
    4. 'if' → logprob: -3.6304051876068115
    5. 'print' → logprob: -3.7554051876068115
    6. 'max' → logprob: -3.8804051876068115
    7. 'total' → logprob: -4.005405426025391
    8. 'x' → logprob: -4.880405426025391
    9. 'result' → logprob: -5.505405426025391
    10. 'n' → logprob: -6.005405426025391

Token 26: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6957076787948608
    2. ' =' → logprob: -0.9457076787948608
    3. '=' → logprob: -2.6957077980041504
    4. ' >' → logprob: -4.57070779800415
    5. '<|end|>' → logprob: -4.82070779800415
    6. ')' → logprob: -5.32070779800415
    7. '>' → logprob: -5.69570779800415
    8. ' )' → logprob: -6.07070779800415
    9. '+' → logprob: -6.32070779800415
    10. '[' → logprob: -6.57070779800415

Token 27: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5725985169410706
    2. ' ' → logprob: -1.1975984573364258
    3. 'int' → logprob: -2.947598457336426
    4. ' a' → logprob: -3.197598457336426
    5. ' abs' → logprob: -4.322598457336426
    6. 'a' → logprob: -4.947598457336426
    7. '10' → logprob: -5.322598457336426
    8. 'abs' → logprob: -5.947598457336426
    9. '5' → logprob: -6.447598457336426
    10. '20' → logprob: -6.822598457336426

Token 28: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004900704603642225
    2. '(input' → logprob: -6.004900932312012
    3. '('' → logprob: -6.754900932312012
    4. ' (' → logprob: -8.004900932312012
    5. '()' → logprob: -8.129900932312012
    6. '(a' → logprob: -9.129900932312012
    7. 'a' → logprob: -9.629900932312012
    8. '(
' → logprob: -9.629900932312012
    9. ' ' → logprob: -9.754900932312012
    10. ''' → logprob: -10.004900932312012

Token 29: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6099531650543213
    2. '())' → logprob: -1.3599531650543213
    3. ')' → logprob: -1.6099531650543213
    4. '(' → logprob: -11.109952926635742
    5. ' ())' → logprob: -11.359952926635742
    6. '`)' → logprob: -11.609952926635742
    7. ' )' → logprob: -12.359952926635742
    8. '()
' → logprob: -12.609952926635742
    9. '')' → logprob: -13.234952926635742
    10. '())
' → logprob: -13.609952926635742

Token 30: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15643487870693207
    2. 'f' → logprob: -3.1564347743988037
    3. 's' → logprob: -3.5314347743988037
    4. 'print' → logprob: -3.7814347743988037
    5. 'sum' → logprob: -4.531435012817383
    6. 'max' → logprob: -4.906435012817383
    7. 'x' → logprob: -5.156435012817383
    8. 'i' → logprob: -5.531435012817383
    9. 'n' → logprob: -5.656435012817383
    10. '\n' → logprob: -5.906435012817383

Token 31: ' e' (ID: 319)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.36352384090423584
    2. ' abs' → logprob: -1.3635238409042358
    3. 'a' → logprob: -3.8635239601135254
    4. ' (' → logprob: -4.363523960113525
    5. 'abs' → logprob: -4.613523960113525
    6. ' ' → logprob: -5.613523960113525
    7. '(' → logprob: -7.113523960113525
    8. '(abs' → logprob: -7.488523960113525
    9. '(a' → logprob: -8.988523483276367
    10. ' k' → logprob: -9.613523483276367

Token 32: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07561938464641571
    2. '-' → logprob: -3.2006194591522217
    3. ' >' → logprob: -4.950619220733643
    4. ' >=' → logprob: -5.200619220733643
    5. ' <=' → logprob: -5.325619220733643
    6. ' <' → logprob: -5.450619220733643
    7. '<' → logprob: -5.825619220733643
    8. '>' → logprob: -5.825619220733643
    9. ' ' → logprob: -6.950619220733643
    10. '+' → logprob: -6.950619220733643

Token 33: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.150223046541214
    2. 'k' → logprob: -3.0252230167388916
    3. ' a' → logprob: -3.1502230167388916
    4. 'd' → logprob: -3.5252230167388916
    5. ' d' → logprob: -5.025223255157471
    6. ' k' → logprob: -5.150223255157471
    7. 'b' → logprob: -5.650223255157471
    8. 'c' → logprob: -6.775223255157471
    9. ' b' → logprob: -8.025222778320312
    10. ' ' → logprob: -8.150222778320312

Token 34: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5742971301078796
    2. ' >' → logprob: -1.0742971897125244
    3. ' >=' → logprob: -2.8242971897125244
    4. '>' → logprob: -3.6992971897125244
    5. '<=' → logprob: -5.324296951293945
    6. ' ' → logprob: -5.574296951293945
    7. ' <' → logprob: -6.699296951293945
    8. '>=' → logprob: -6.824296951293945
    9. '<' → logprob: -8.699296951293945
    10. ' ==' → logprob: -10.324296951293945

Token 35: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023249205201864243
    2. ' k' → logprob: -3.7732491493225098
    3. '	k' → logprob: -12.898249626159668
    4. ' ' → logprob: -13.773249626159668
    5. '   ' → logprob: -16.64824867248535
    6. ' к' → logprob: -17.64824867248535
    7. '  ' → logprob: -18.27324867248535
    8. ' ' → logprob: -18.52324867248535
    9. '9' → logprob: -18.77324867248535
    10. '"k' → logprob: -19.27324867248535

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00680454121902585
    2. ' :' → logprob: -5.006804466247559
    3. ' and' → logprob: -9.756804466247559
    4. ':
' → logprob: -11.756804466247559
    5. ':**' → logprob: -12.256804466247559
    6. '.' → logprob: -12.381804466247559
    7. ' ' → logprob: -12.631804466247559
    8. 'and' → logprob: -13.131804466247559
    9. '>' → logprob: -13.381804466247559
    10. ' or' → logprob: -13.631804466247559

Token 37: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5794724225997925
    2. '   ' → logprob: -1.4544724225997925
    3. 'print' → logprob: -1.9544724225997925
    4. '\n' → logprob: -3.329472541809082
    5. '    ' → logprob: -4.329472541809082
    6. ':' → logprob: -5.204472541809082
    7. ' \' → logprob: -5.954472541809082
    8. '\' → logprob: -6.079472541809082
    9. ' :' → logprob: -6.329472541809082
    10. ' and' → logprob: -7.329472541809082

Token 38: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00041017719195224345
    2. ' print' → logprob: -8.000410079956055
    3. '   ' → logprob: -9.875410079956055
    4. 'Yes' → logprob: -11.875410079956055
    5. 'Print' → logprob: -12.375410079956055
    6. '"' → logprob: -13.125410079956055
    7. '`' → logprob: -13.375410079956055
    8. '	print' → logprob: -13.500410079956055
    9. ''' → logprob: -14.250410079956055
    10. 'YES' → logprob: -14.250410079956055

Token 39: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5439245104789734
    2. '(' → logprob: -0.9189245104789734
    3. '('' → logprob: -4.668924331665039
    4. '(a' → logprob: -5.168924331665039
    5. '("("' → logprob: -5.543924331665039
    6. '(e' → logprob: -7.293924331665039
    7. '()' → logprob: -8.418924331665039
    8. '(":' → logprob: -8.668924331665039
    9. '("(' → logprob: -8.793924331665039
    10. '((' → logprob: -9.043924331665039

Token 40: 'Y' (ID: 56)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.28524306416511536
    2. 'YES' → logprob: -2.035243034362793
    3. 'True' → logprob: -3.535243034362793
    4. '"' → logprob: -4.035243034362793
    5. '0' → logprob: -4.035243034362793
    6. 'П' → logprob: -4.660243034362793
    7. 'Y' → logprob: -4.660243034362793
    8. 'Да' → logprob: -5.535243034362793
    9. 'Easy' → logprob: -5.910243034362793
    10. '```' → logprob: -6.160243034362793

Token 41: 'ay' (ID: 356)
  Prédit: 'ES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ES' → logprob: -0.4589312672615051
    2. 'es' → logprob: -1.2089312076568604
    3. 'e' → logprob: -3.0839312076568604
    4. 'E' → logprob: -4.4589314460754395
    5. 'ou' → logprob: -5.4589314460754395
    6. '``' → logprob: -6.5839314460754395
    7. '```' → logprob: -6.5839314460754395
    8. 'ес' → logprob: -6.8339314460754395
    9. 'a' → logprob: -7.0839314460754395
    10. 'Es' → logprob: -7.2089314460754395

Token 42: '!")
' (ID: 50941)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3320204019546509
    2. '!")' → logprob: -1.5820204019546509
    3. '!' → logprob: -2.5820202827453613
    4. ')' → logprob: -6.832020282745361
    5. '!)' → logprob: -8.83202075958252
    6. '"' → logprob: -9.33202075958252
    7. '')' → logprob: -11.83202075958252
    8. '")
' → logprob: -12.08202075958252
    9. '!")
' → logprob: -12.58202075958252
    10. '""' → logprob: -12.70702075958252

Token 43: 'else' (ID: 2807)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6389140486717224
    2. 'else' → logprob: -0.7639140486717224
    3. ' else' → logprob: -5.638914108276367
    4. ' elif' → logprob: -6.013914108276367
    5. '\n' → logprob: -9.763914108276367
    6. '   ' → logprob: -9.888914108276367
    7. '<|end|>' → logprob: -9.888914108276367
    8. ' ' → logprob: -10.513914108276367
    9. '```' → logprob: -10.638914108276367
    10. 'el' → logprob: -11.138914108276367

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.931863051955588e-05
    2. ':
' → logprob: -10.125059127807617
    3. ' :' → logprob: -11.125059127807617
    4. '   ' → logprob: -12.375059127807617
    5. '):' → logprob: -15.875059127807617
    6. '():' → logprob: -16.875059127807617
    7. '.' → logprob: -17.375059127807617
    8. ' :
' → logprob: -17.375059127807617
    9. ')' → logprob: -17.500059127807617
    10. '  ' → logprob: -18.000059127807617

Token 45: '   ' (ID: 271)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.0005287261446937919
    2. ':(' → logprob: -8.375528335571289
    3. '(":' → logprob: -9.250528335571289
    4. ' ":' → logprob: -9.750528335571289
    5. '':' → logprob: -10.000528335571289
    6. '"' → logprob: -10.500528335571289
    7. '":"' → logprob: -10.625528335571289
    8. ':' → logprob: -11.750528335571289
    9. '"D' → logprob: -12.000528335571289
    10. '":[' → logprob: -12.250528335571289

Token 46: ' print' (ID: 2123)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.0010517460759729147
    2. '':' → logprob: -7.876051902770996
    3. '":"' → logprob: -8.251051902770996
    4. ':(' → logprob: -8.376051902770996
    5. '(":' → logprob: -9.501051902770996
    6. ' ":' → logprob: -9.626051902770996
    7. '`:' → logprob: -11.876051902770996
    8. 'e' → logprob: -12.376051902770996
    9. '":"+' → logprob: -12.376051902770996
    10. '":[' → logprob: -12.376051902770996

Token 47: '(":' (ID: 40387)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3150638937950134
    2. '("' → logprob: -1.3150639533996582
    3. '("("' → logprob: -6.690063953399658
    4. '()' → logprob: -7.940063953399658
    5. '("")' → logprob: -8.6900634765625
    6. '("""' → logprob: -11.9400634765625
    7. '('' → logprob: -12.0650634765625
    8. ' ' → logprob: -12.5650634765625
    9. ' ("' → logprob: -12.9400634765625
    10. '(""' → logprob: -13.3150634765625

Token 48: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09131266921758652
    2. '("' → logprob: -2.4663126468658447
    3. '((' → logprob: -7.341312885284424
    4. '(("' → logprob: -7.341312885284424
    5. ')' → logprob: -7.841312885284424
    6. '-' → logprob: -8.466312408447266
    7. '(":' → logprob: -8.966312408447266
    8. '(""' → logprob: -9.966312408447266
    9. ')")' → logprob: -10.091312408447266
    10. '("""' → logprob: -10.466312408447266

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035830873530358076
    2. '<|end|>' → logprob: -6.503582954406738
    3. '\n' → logprob: -6.628582954406738
    4. '
' → logprob: -7.503582954406738
    5. '```' → logprob: -9.878582954406738
    6. ')
' → logprob: -9.878582954406738
    7. '  
' → logprob: -10.503582954406738
    8. '")' → logprob: -10.878582954406738
    9. ' )' → logprob: -11.753582954406738
    10. '')' → logprob: -12.003582954406738


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 47
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 34
Précision stricte (1ère position): 27.66%
Précision adaptée (1ère position): 29.79%
Précision (top 10): 72.34%
================================================================================
