================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys,math

def f(n,m):
  res=[]
  c=1
  while c*c<=m:
    if m%c==0:
      if m//c>=n:
        res+=[c]
      if c>=n and m//c > c:
        res.append(m//c)
    c+=1
  return sorted(res)

N,M=[int(_) for _ in sys.stdin.readline().split()]
B=f(N,M)
output=None
for y in range(len(B)-1,len(B)):
    output=B[y]
print(output)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: 'math' (ID: 20310)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.002477200934663415
    2. ' os' → logprob: -6.002477169036865
    3. 'io' → logprob: -13.752477645874023
    4. '"os' → logprob: -15.627477645874023
    5. 'math' → logprob: -15.752477645874023
    6. 'json' → logprob: -16.752477645874023
    7. 're' → logprob: -16.752477645874023
    8. '	os' → logprob: -18.502477645874023
    9. 'sub' → logprob: -18.752477645874023
    10. '_os' → logprob: -19.002477645874023

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.60969078540802
    2. '<|end|>' → logprob: -1.60969078540802
    3. ',' → logprob: -2.4846906661987305
    4. '\n' → logprob: -2.6096906661987305
    5. 'import' → logprob: -3.3596906661987305
    6. '
' → logprob: -4.3596906661987305
    7. '\' → logprob: -4.4846906661987305
    8. '<|end|>' → logprob: -4.6096906661987305
    9. 'newline' → logprob: -4.7346906661987305
    10. '

' → logprob: -5.3596906661987305

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4463452100753784
    2. ',' → logprob: -1.9463452100753784
    3. '\n' → logprob: -2.196345329284668
    4. 'import' → logprob: -3.446345329284668
    5. '<|end|>' → logprob: -3.821345329284668
    6. '\' → logprob: -4.071345329284668
    7. '```' → logprob: -4.571345329284668
    8. '
' → logprob: -5.071345329284668
    9. ';' → logprob: -5.196345329284668
    10. '

' → logprob: -5.571345329284668

Token 6: ' f' (ID: 285)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1042836904525757
    2. ' calculate' → logprob: -1.8542836904525757
    3. ' factorial' → logprob: -1.8542836904525757
    4. ' f' → logprob: -2.2292838096618652
    5. '_' → logprob: -2.6042838096618652
    6. ' space' → logprob: -3.2292838096618652
    7. ' e' → logprob: -4.104283809661865
    8. ' ' → logprob: -4.229283809661865
    9. ' math' → logprob: -4.354283809661865
    10. ' sqrt' → logprob: -4.604283809661865

Token 7: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005768326576799154
    2. 'u' → logprob: -5.505768299102783
    3. '_' → logprob: -7.505768299102783
    4. '(u' → logprob: -7.755768299102783
    5. 'a' → logprob: -8.380768775939941
    6. '(a' → logprob: -8.755768775939941
    7. '(x' → logprob: -9.505768775939941
    8. 'unction' → logprob: -9.880768775939941
    9. ' (' → logprob: -10.630768775939941
    10. '(
' → logprob: -10.630768775939941

Token 8: ',m' (ID: 26648)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043123770505189896
    2. ')' → logprob: -3.168123722076416
    3. ':' → logprob: -9.293124198913574
    4. ',' → logprob: -11.418124198913574
    5. ' ):' → logprob: -11.543124198913574
    6. '):
' → logprob: -12.168124198913574
    7. ')>' → logprob: -14.043124198913574
    8. '*' → logprob: -14.293124198913574
    9. ')：' → logprob: -14.543124198913574
    10. ')n' → logprob: -14.543124198913574

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043116576969623566
    2. ')' → logprob: -3.168116569519043
    3. ',' → logprob: -10.043116569519043
    4. ':' → logprob: -10.293116569519043
    5. ' ):' → logprob: -11.293116569519043
    6. '):
' → logprob: -12.293116569519043
    7. '=' → logprob: -12.418116569519043
    8. ')>' → logprob: -12.918116569519043
    9. ')：' → logprob: -13.043116569519043
    10. ''):' → logprob: -13.168116569519043

Token 10: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4648846983909607
    2. '   ' → logprob: -1.2148847579956055
    3. ' ' → logprob: -2.9648847579956055
    4. '\n' → logprob: -5.2148847579956055
    5. '\t' → logprob: -6.0898847579956055
    6. ''' → logprob: -6.4648847579956055
    7. '    ' → logprob: -6.4648847579956055
    8. '\' → logprob: -6.4648847579956055
    9. ':return' → logprob: -6.5898847579956055
    10. ' :' → logprob: -6.7148847579956055

Token 11: ' res' (ID: 694)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13399602472782135
    2. ' ' → logprob: -2.25899600982666
    3. ' :' → logprob: -4.75899600982666
    4. '   ' → logprob: -5.38399600982666
    5. '(' → logprob: -6.00899600982666
    6. ':return' → logprob: -6.88399600982666
    7. '  ' → logprob: -7.50899600982666
    8. ' 
' → logprob: -7.50899600982666
    9. '):' → logprob: -7.75899600982666
    10. ':
' → logprob: -8.00899600982666

Token 12: '=[]
' (ID: 63466)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18667910993099213
    2. '=' → logprob: -1.9366791248321533
    3. ' ' → logprob: -3.6866791248321533
    4. ' +=' → logprob: -7.186678886413574
    5. '  ' → logprob: -9.186678886413574
    6. '.' → logprob: -10.436678886413574
    7. ' |=' → logprob: -10.811678886413574
    8. ')' → logprob: -10.936678886413574
    9. '_' → logprob: -11.436678886413574
    10. '+=' → logprob: -11.436678886413574

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018912794068455696
    2. ' for' → logprob: -4.2689127922058105
    3. 'for' → logprob: -6.0189127922058105
    4. '[' → logprob: -7.3939127922058105
    5. '  
' → logprob: -7.8939127922058105
    6. '  ' → logprob: -8.018913269042969
    7. '   ' → logprob: -8.143913269042969
    8. '\' → logprob: -9.143913269042969
    9. ' 
' → logprob: -9.143913269042969
    10. ',' → logprob: -9.268913269042969

Token 14: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.436537504196167
    2. 'for' → logprob: -1.186537504196167
    3. ' for' → logprob: -3.061537504196167
    4. '```' → logprob: -7.436537742614746
    5. '   ' → logprob: -8.436537742614746
    6. 'i' → logprob: -8.686537742614746
    7. '[' → logprob: -9.061537742614746
    8. '  
' → logprob: -9.311537742614746
    9. 'r' → logprob: -9.436537742614746
    10. '  ' → logprob: -9.561537742614746

Token 15: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.077718585729599
    2. ' =' → logprob: -2.702718496322632
    3. 'u' → logprob: -6.077718734741211
    4. ' ' → logprob: -6.327718734741211
    5. 'ount' → logprob: -6.702718734741211
    6. 'ont' → logprob: -7.327718734741211
    7. 'ur' → logprob: -7.827718734741211
    8. 'ounter' → logprob: -7.952718734741211
    9. '=[]' → logprob: -8.327718734741211
    10. 't' → logprob: -8.952718734741211

Token 16: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20981433987617493
    2. '[' → logprob: -2.3348143100738525
    3. ' ' → logprob: -3.0848143100738525
    4. '1' → logprob: -3.9598143100738525
    5. ' [' → logprob: -4.084814548492432
    6. '[m' → logprob: -5.709814548492432
    7. 'm' → logprob: -6.209814548492432
    8. '[n' → logprob: -6.459814548492432
    9. ' math' → logprob: -6.959814548492432
    10. '[]' → logprob: -7.084814548492432

Token 17: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10612481087446213
    2. '  
' → logprob: -3.9811248779296875
    3. 'for' → logprob: -4.2311248779296875
    4. ',' → logprob: -4.2311248779296875
    5. ' for' → logprob: -4.2311248779296875
    6. ' 
' → logprob: -4.2311248779296875
    7. '
' → logprob: -4.7311248779296875
    8. '  ' → logprob: -5.1061248779296875
    9. '<|end|>' → logprob: -6.3561248779296875
    10. ' ,' → logprob: -6.4811248779296875

Token 18: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0290974248200655
    2. '  ' → logprob: -4.529097557067871
    3. ' for' → logprob: -5.279097557067871
    4. ',' → logprob: -5.529097557067871
    5. '  
' → logprob: -6.029097557067871
    6. ' ,' → logprob: -6.154097557067871
    7. ' 
' → logprob: -6.904097557067871
    8. '   
' → logprob: -7.279097557067871
    9. 'for' → logprob: -7.279097557067871
    10. ' while' → logprob: -7.279097557067871

Token 19: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.186704620718956
    2. ' for' → logprob: -1.9367046356201172
    3. ',' → logprob: -4.061704635620117
    4. 'for' → logprob: -5.561704635620117
    5. '0' → logprob: -6.436704635620117
    6. '  ' → logprob: -7.061704635620117
    7. '+' → logprob: -7.186704635620117
    8. ' while' → logprob: -7.436704635620117
    9. ' ,' → logprob: -8.311704635620117
    10. '  
' → logprob: -9.061704635620117

Token 20: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1882346272468567
    2. ' n' → logprob: -1.938234567642212
    3. ' ' → logprob: -3.688234567642212
    4. 'c' → logprob: -6.313234806060791
    5. ' m' → logprob: -7.688234806060791
    6. 'n' → logprob: -8.188234329223633
    7. '  ' → logprob: -11.063234329223633
    8. ' (' → logprob: -11.438234329223633
    9. '(n' → logprob: -12.063234329223633
    10. ' len' → logprob: -12.188234329223633

Token 21: '*c' (ID: 83421)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6065483093261719
    2. '<=' → logprob: -0.8565483093261719
    3. '<' → logprob: -3.981548309326172
    4. ' <' → logprob: -4.606548309326172
    5. ' ' → logprob: -6.731548309326172
    6. '<n' → logprob: -8.856548309326172
    7. '*' → logprob: -9.731548309326172
    8. '<len' → logprob: -10.356548309326172
    9. '+' → logprob: -11.231548309326172
    10. ' <<=' → logprob: -11.731548309326172

Token 22: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5920830368995667
    2. ' <=' → logprob: -0.8420830368995667
    3. '<' → logprob: -4.967082977294922
    4. '<|end|>' → logprob: -5.342082977294922
    5. ' ' → logprob: -5.967082977294922
    6. ' <' → logprob: -6.592082977294922
    7. '<|end|>' → logprob: -10.092082977294922
    8. '=' → logprob: -10.092082977294922
    9. '```' → logprob: -10.467082977294922
    10. ']<=' → logprob: -10.842082977294922

Token 23: 'm' (ID: 76)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019745498429983854
    2. 'm' → logprob: -6.751974582672119
    3. ' n' → logprob: -7.126974582672119
    4. ' m' → logprob: -14.626974105834961
    5. ' ' → logprob: -15.001974105834961
    6. '	n' → logprob: -16.50197410583496
    7. 'min' → logprob: -17.62697410583496
    8. 'c' → logprob: -17.75197410583496
    9. 'nm' → logprob: -17.87697410583496
    10. '```' → logprob: -18.75197410583496

Token 24: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04267392307519913
    2. ':' → logprob: -3.5426738262176514
    3. 'and' → logprob: -4.4176740646362305
    4. ' ' → logprob: -7.6676740646362305
    5. ' :' → logprob: -8.54267406463623
    6. ':
' → logprob: -9.91767406463623
    7. '<|end|>' → logprob: -10.16767406463623
    8. '	and' → logprob: -11.41767406463623
    9. ' or' → logprob: -11.79267406463623
    10. '<|end|>' → logprob: -12.54267406463623

Token 25: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2543174624443054
    2. '  ' → logprob: -2.25431752204895
    3. '<|end|>' → logprob: -2.75431752204895
    4. '   ' → logprob: -3.37931752204895
    5. '\' → logprob: -5.629317283630371
    6. '    ' → logprob: -5.879317283630371
    7. ':' → logprob: -5.879317283630371
    8. ' and' → logprob: -6.254317283630371
    9. '+' → logprob: -6.629317283630371
    10. ',' → logprob: -6.754317283630371

Token 26: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17337390780448914
    2. ' if' → logprob: -2.1733739376068115
    3. '<|end|>' → logprob: -3.4233739376068115
    4. 'if' (adapté à ' if') → logprob: -5.548373699188232
    5. ' \' → logprob: -5.923373699188232
    6. '  ' → logprob: -6.173373699188232
    7. '<|end|>' → logprob: -6.923373699188232
    8. ' c' → logprob: -7.298373699188232
    9. '\' → logprob: -7.298373699188232
    10. '    ' → logprob: -7.798373699188232

Token 27: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.012545088306069374
    2. 'm' → logprob: -4.387545108795166
    3. ' ' → logprob: -10.762544631958008
    4. ' c' → logprob: -12.012544631958008
    5. ' n' → logprob: -12.387544631958008
    6. ' (' → logprob: -13.387544631958008
    7. '(m' → logprob: -14.012544631958008
    8. ' not' → logprob: -14.262544631958008
    9. 'c' → logprob: -14.637544631958008
    10. '	m' → logprob: -16.012544631958008

Token 28: '%c' (ID: 138941)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5774848461151123
    2. ' %' → logprob: -0.8274848461151123
    3. '%c' → logprob: -6.577485084533691
    4. ' ' → logprob: -9.327485084533691
    5. '%i' → logprob: -10.452485084533691
    6. '%e' → logprob: -11.577485084533691
    7. '%x' → logprob: -11.702485084533691
    8. ' ' → logprob: -12.452485084533691
    9. '%n' → logprob: -13.077485084533691
    10. '%m' → logprob: -13.327485084533691

Token 29: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01428044494241476
    2. ' ==' → logprob: -4.264280319213867
    3. '=' → logprob: -9.389280319213867
    4. ' ' → logprob: -11.139280319213867
    5. '===' → logprob: -12.389280319213867
    6. ')==' → logprob: -12.389280319213867
    7. '0' → logprob: -12.514280319213867
    8. '==
' → logprob: -13.264280319213867
    9. ']==' → logprob: -13.514280319213867
    10. '```' → logprob: -14.389280319213867

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015029559144750237
    2. ' ' → logprob: -6.501502990722656
    3. '  ' → logprob: -15.126502990722656
    4. ' ' → logprob: -16.876502990722656
    5. '```' → logprob: -16.876502990722656
    6. '۰' → logprob: -17.064002990722656
    7. '   ' → logprob: -17.251502990722656
    8. '=' → logprob: -17.626502990722656
    9. ' ' → logprob: -17.939002990722656
    10. '    ' → logprob: -17.939002990722656

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036709945648908615
    2. ' and' → logprob: -3.411710023880005
    3. ':
' → logprob: -6.161709785461426
    4. ' :' → logprob: -7.536709785461426
    5. 'and' → logprob: -8.536709785461426
    6. ' ' → logprob: -9.411709785461426
    7. '):' → logprob: -10.036709785461426
    8. '   ' → logprob: -10.411709785461426
    9. ',' → logprob: -11.036709785461426
    10. ':**' → logprob: -11.911709785461426

Token 32: '     ' (ID: 530)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8597028255462646
    2. '     ' → logprob: -1.7347028255462646
    3. ' ' → logprob: -2.2347028255462646
    4. ' res' → logprob: -2.7347028255462646
    5. 'res' → logprob: -2.7347028255462646
    6. '   ' → logprob: -2.8597028255462646
    7. ' ' → logprob: -2.8597028255462646
    8. '    ' → logprob: -3.4847028255462646
    9. ' 
' → logprob: -5.484703063964844
    10. ' n' → logprob: -6.234703063964844

Token 33: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7738326787948608
    2. ' if' → logprob: -0.8988326787948608
    3. 'res' → logprob: -2.3988327980041504
    4. '   ' → logprob: -4.14883279800415
    5. ' res' → logprob: -4.64883279800415
    6. '       ' → logprob: -5.14883279800415
    7. ' ' → logprob: -5.27383279800415
    8. '     ' → logprob: -5.64883279800415
    9. '    ' → logprob: -7.77383279800415
    10. 'n' → logprob: -8.648832321166992

Token 34: ' m' (ID: 284)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7075093388557434
    2. ' n' → logprob: -0.8325093388557434
    3. 'c' → logprob: -3.3325092792510986
    4. ' m' → logprob: -3.9575092792510986
    5. 'n' → logprob: -4.332509517669678
    6. ' ' → logprob: -5.832509517669678
    7. 'm' → logprob: -6.832509517669678
    8. ' (' → logprob: -9.95750904083252
    9. '  ' → logprob: -10.20750904083252
    10. '    ' → logprob: -10.33250904083252

Token 35: '//' (ID: 393)
  Prédit: '/c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/c' → logprob: -0.25895023345947266
    2. '//' → logprob: -2.0089502334594727
    3. '%c' → logprob: -2.6339502334594727
    4. '/' → logprob: -4.633950233459473
    5. '%' → logprob: -5.383950233459473
    6. 'c' → logprob: -6.258950233459473
    7. '#' → logprob: -6.883950233459473
    8. '/python' → logprob: -7.133950233459473
    9. ' //' → logprob: -7.633950233459473
    10. ' c' → logprob: -7.758950233459473

Token 36: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.88418151892256e-05
    2. ' c' → logprob: -9.750059127807617
    3. ' ' → logprob: -15.125059127807617
    4. '<|end|>' → logprob: -16.000059127807617
    5. '%c' → logprob: -16.250059127807617
    6. '	c' → logprob: -17.750059127807617
    7. '_c' → logprob: -18.375059127807617
    8. ')c' → logprob: -18.500059127807617
    9. '  ' → logprob: -18.625059127807617
    10. '>' → logprob: -18.625059127807617

Token 37: '>=' (ID: 20974)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.4772382974624634
    2. '==' → logprob: -1.6022382974624634
    3. '>=' → logprob: -1.8522382974624634
    4. ' <=' → logprob: -2.352238178253174
    5. ' >=' → logprob: -2.602238178253174
    6. ' ==' → logprob: -2.602238178253174
    7. '%c' → logprob: -2.602238178253174
    8. '%' → logprob: -2.852238178253174
    9. ' %' → logprob: -3.977238178253174
    10. ' ' → logprob: -4.102238178253174

Token 38: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003037650021724403
    2. ' n' → logprob: -8.125304222106934
    3. ' ' → logprob: -12.750304222106934
    4. 'c' → logprob: -13.250304222106934
    5. '1' → logprob: -14.000304222106934
    6. 'max' → logprob: -14.750304222106934
    7. 'm' → logprob: -15.125304222106934
    8. 'f' → logprob: -15.625304222106934
    9. ')n' → logprob: -15.750304222106934
    10. '=n' → logprob: -16.000303268432617

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021363498643040657
    2. ' and' → logprob: -4.271363735198975
    3. 'and' → logprob: -5.021363735198975
    4. ':
' → logprob: -8.646363258361816
    5. '):' → logprob: -8.771363258361816
    6. ' ' → logprob: -9.396363258361816
    7. ' :' → logprob: -9.521363258361816
    8. ':return' → logprob: -10.521363258361816
    9. '-' → logprob: -11.021363258361816
    10. '     ' → logprob: -12.271363258361816

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3162897229194641
    2. ' and' → logprob: -1.3162896633148193
    3. ':' → logprob: -6.691289901733398
    4. '     ' → logprob: -7.566289901733398
    5. ' ' → logprob: -8.316289901733398
    6. '         ' → logprob: -8.441289901733398
    7. ',' → logprob: -8.691289901733398
    8. 'and' → logprob: -8.691289901733398
    9. '      ' → logprob: -9.191289901733398
    10. 'res' → logprob: -10.191289901733398

Token 41: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.535912036895752
    2. 'res' (adapté à ' res') → logprob: -0.910912036895752
    3. '       ' → logprob: -4.410912036895752
    4. '         ' → logprob: -8.035911560058594
    5. ' ' → logprob: -9.410911560058594
    6. '           ' → logprob: -9.785911560058594
    7. '   ' → logprob: -10.410911560058594
    8. '     ' → logprob: -10.660911560058594
    9. ' ' → logprob: -11.035911560058594
    10. '	res' → logprob: -11.410911560058594

Token 42: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023295091465115547
    2. '.' → logprob: -3.7732951641082764
    3. '.extend' → logprob: -10.523295402526855
    4. ' .' → logprob: -11.273295402526855
    5. '.app' → logprob: -12.148295402526855
    6. '.ap' → logprob: -13.648295402526855
    7. '.Append' → logprob: -13.773295402526855
    8. '.add' → logprob: -14.023295402526855
    9. '.py' → logprob: -15.273295402526855
    10. 'append' → logprob: -15.273295402526855

Token 43: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5019973516464233
    2. '=[' → logprob: -1.0019973516464233
    3. '[' → logprob: -3.626997470855713
    4. ' [' → logprob: -7.376997470855713
    5. '.append' → logprob: -8.751996994018555
    6. '[p' → logprob: -9.876996994018555
    7. '=[
' → logprob: -10.251996994018555
    8. '=['' → logprob: -11.376996994018555
    9. '=[]' → logprob: -11.501996994018555
    10. '==' → logprob: -11.626996994018555

Token 44: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008579704910516739
    2. ' c' → logprob: -4.883579730987549
    3. 'm' → logprob: -7.383579730987549
    4. ' ' → logprob: -8.50857925415039
    5. '[c' → logprob: -10.38357925415039
    6. '[' → logprob: -10.50857925415039
    7. ' m' → logprob: -10.75857925415039
    8. '(c' → logprob: -10.75857925415039
    9. '   ' → logprob: -11.63357925415039
    10. '[m' → logprob: -11.75857925415039

Token 45: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09760601073503494
    2. ']
' → logprob: -2.4726059436798096
    3. '     ' → logprob: -5.722606182098389
    4. ']
' → logprob: -6.347606182098389
    5. '       ' → logprob: -6.722606182098389
    6. ',' → logprob: -7.097606182098389
    7. ' ]' → logprob: -7.347606182098389
    8. ' ' → logprob: -7.972606182098389
    9. '   ' → logprob: -8.84760570526123
    10. ']

' → logprob: -8.84760570526123

Token 46: '     ' (ID: 530)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5797128677368164
    2. '   ' → logprob: -1.8297128677368164
    3. '     ' → logprob: -2.0797128677368164
    4. ' ' → logprob: -2.0797128677368164
    5. '  
' → logprob: -2.2047128677368164
    6. ' 
' → logprob: -2.5797128677368164
    7. '      
' → logprob: -2.8297128677368164
    8. '    
' → logprob: -3.0797128677368164
    9. '\n' → logprob: -3.3297128677368164
    10. '     
' → logprob: -3.8297128677368164

Token 47: ' if' (ID: 538)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.3178410232067108
    2. 'if' (adapté à ' if') → logprob: -1.6928410530090332
    3. ' if' → logprob: -2.567841053009033
    4. '   ' → logprob: -4.942841053009033
    5. ' ' → logprob: -5.567841053009033
    6. '       ' → logprob: -8.692840576171875
    7. '    ' → logprob: -8.692840576171875
    8. '+' → logprob: -9.067840576171875
    9. '      
' → logprob: -10.067840576171875
    10. '```' → logprob: -10.067840576171875

Token 48: ' c' (ID: 274)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.355930358171463
    2. 'm' → logprob: -1.4809303283691406
    3. ' c' → logprob: -2.9809303283691406
    4. 'c' → logprob: -3.8559303283691406
    5. ' ' → logprob: -9.23093032836914
    6. ' ' → logprob: -10.85593032836914
    7. ' (' → logprob: -11.48093032836914
    8. '(m' → logprob: -11.60593032836914
    9. '```' → logprob: -11.98093032836914
    10. '  ' → logprob: -12.60593032836914

Token 49: '>=' (ID: 20974)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0035712074022740126
    2. ' !=' → logprob: -6.628571033477783
    3. '*m' → logprob: -7.128571033477783
    4. '*' → logprob: -7.378571033477783
    5. '0' → logprob: -8.253571510314941
    6. '*c' → logprob: -9.253571510314941
    7. '!==' → logprob: -9.378571510314941
    8. ']!=' → logprob: -9.628571510314941
    9. '!=(' → logprob: -9.628571510314941
    10. '```' → logprob: -10.003571510314941

Token 50: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002867225557565689
    2. '1' → logprob: -9.125287055969238
    3. 'max' → logprob: -9.500287055969238
    4. ' n' → logprob: -10.500287055969238
    5. 'math' → logprob: -10.625287055969238
    6. ' ' → logprob: -11.375287055969238
    7. '2' → logprob: -11.375287055969238
    8. '(n' → logprob: -11.375287055969238
    9. 'import' → logprob: -12.250287055969238
    10. '(' → logprob: -12.625287055969238

Token 51: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03031037747859955
    2. 'and' → logprob: -3.5303103923797607
    3. ' ' → logprob: -7.530310153961182
    4. '  ' → logprob: -11.65531063079834
    5. '	and' → logprob: -12.40531063079834
    6. '     ' → logprob: -12.53031063079834
    7. '   ' → logprob: -13.28031063079834
    8. '*' → logprob: -14.03031063079834
    9. '         ' → logprob: -14.03031063079834
    10. ' ' → logprob: -14.53031063079834

Token 52: ' m' (ID: 284)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16377709805965424
    2. ' c' → logprob: -2.2887771129608154
    3. 'm' → logprob: -3.2887771129608154
    4. ' m' → logprob: -4.413776874542236
    5. '     ' → logprob: -8.663777351379395
    6. ' ' → logprob: -9.538777351379395
    7. '   ' → logprob: -11.663777351379395
    8. '       ' → logprob: -12.913777351379395
    9. '	c' → logprob: -13.288777351379395
    10. '%c' → logprob: -13.413777351379395

Token 53: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0023856377229094505
    2. '/c' → logprob: -6.12738561630249
    3. '```' → logprob: -9.627386093139648
    4. ' //' → logprob: -9.877386093139648
    5. '%c' → logprob: -10.252386093139648
    6. '/' → logprob: -10.377386093139648
    7. '   ' → logprob: -12.252386093139648
    8. 'c' → logprob: -13.252386093139648
    9. '//=' → logprob: -13.252386093139648
    10. '`' → logprob: -13.502386093139648

Token 54: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00014656837447546422
    2. ' c' → logprob: -8.875146865844727
    3. '(c' → logprob: -13.625146865844727
    4. '/c' → logprob: -13.750146865844727
    5. ' ' → logprob: -14.125146865844727
    6. '<|end|>' → logprob: -14.375146865844727
    7. '{' → logprob: -14.500146865844727
    8. '_c' → logprob: -14.625146865844727
    9. '```' → logprob: -15.000146865844727
    10. '%c' → logprob: -15.125146865844727

Token 55: ' >' (ID: 1424)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.02386574074625969
    2. ' !=' → logprob: -3.7738656997680664
    3. ' not' → logprob: -7.648865699768066
    4. ']!=' → logprob: -9.523865699768066
    5. '!==' → logprob: -11.023865699768066
    6. 'not' → logprob: -11.398865699768066
    7. ')!=' → logprob: -11.773865699768066
    8. '>=' → logprob: -11.773865699768066
    9. '```' → logprob: -11.773865699768066
    10. ' ' → logprob: -12.148865699768066

Token 56: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2164425104856491
    2. ' c' → logprob: -1.8414424657821655
    3. '=c' → logprob: -4.091442584991455
    4. '=' → logprob: -4.466442584991455
    5. '1' → logprob: -5.591442584991455
    6. ' ' → logprob: -5.716442584991455
    7. '!=' → logprob: -8.091442108154297
    8. '  ' → logprob: -9.341442108154297
    9. '==' → logprob: -9.341442108154297
    10. '>' → logprob: -9.591442108154297

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.723432719707489
    2. ' and' → logprob: -0.973432719707489
    3. ':
' → logprob: -2.098432779312134
    4. ' ' → logprob: -4.973432540893555
    5. 'and' → logprob: -5.348432540893555
    6. '     ' → logprob: -6.848432540893555
    7. '   ' → logprob: -7.598432540893555
    8. '  ' → logprob: -7.973432540893555
    9. ':
' → logprob: -8.223432540893555
    10. ' :' → logprob: -8.973432540893555

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.6457742175552994e-05
    2. ' res' → logprob: -10.125056266784668
    3. '     ' → logprob: -12.000056266784668
    4. '      ' → logprob: -12.375056266784668
    5. 'res' → logprob: -12.500056266784668
    6. '         ' → logprob: -13.875056266784668
    7. ' ' → logprob: -14.875056266784668
    8. '   ' → logprob: -15.250056266784668
    9. '        ' → logprob: -15.250056266784668
    10. '```' → logprob: -16.125057220458984

Token 59: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.31377270817756653
    2. ' res' → logprob: -1.3137726783752441
    3. '       ' → logprob: -8.063773155212402
    4. '     ' → logprob: -9.063773155212402
    5. '   ' → logprob: -10.313773155212402
    6. ' ' → logprob: -10.313773155212402
    7. '         ' → logprob: -12.438773155212402
    8. '      ' → logprob: -12.688773155212402
    9. '    ' → logprob: -12.938773155212402
    10. '  ' → logprob: -13.438773155212402

Token 60: '.append' (ID: 3709)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.827200897736475e-05
    2. '+=' → logprob: -9.500078201293945
    3. '.append' → logprob: -13.125078201293945
    4. ' +=' → logprob: -14.375078201293945
    5. '+=(' → logprob: -15.250078201293945
    6. '+[' → logprob: -15.250078201293945
    7. '+="' → logprob: -15.750078201293945
    8. '+='' → logprob: -16.125078201293945
    9. '+.' → logprob: -17.000078201293945
    10. '.' → logprob: -17.500078201293945

Token 61: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00021057340200059116
    2. '(' → logprob: -8.500210762023926
    3. 'm' → logprob: -12.500210762023926
    4. ' (' → logprob: -13.000210762023926
    5. '((' → logprob: -14.500210762023926
    6. ' m' → logprob: -14.500210762023926
    7. '(
' → logprob: -16.50020980834961
    8. ' ' → logprob: -18.00020980834961
    9. '/m' → logprob: -18.62520980834961
    10. ',m' → logprob: -18.75020980834961

Token 62: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -1.8908587662735954e-05
    2. ' //' → logprob: -11.375019073486328
    3. '/c' → logprob: -11.875019073486328
    4. '//=' → logprob: -15.375019073486328
    5. ' ' → logprob: -16.125019073486328
    6. '//#' → logprob: -17.000019073486328
    7. 'c' → logprob: -17.625019073486328
    8. '#' → logprob: -18.750019073486328
    9. '//'' → logprob: -18.750019073486328
    10. '```' → logprob: -18.875019073486328

Token 63: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2233183042553719e-05
    2. ' c' → logprob: -11.375012397766113
    3. ' ' → logprob: -15.000012397766113
    4. '_c' → logprob: -15.125012397766113
    5. ')c' → logprob: -16.500011444091797
    6. '	c' → logprob: -17.625011444091797
    7. '<|end|>' → logprob: -17.875011444091797
    8. '.c' → logprob: -18.500011444091797
    9. ')' → logprob: -18.875011444091797
    10. '%c' → logprob: -19.125011444091797

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002112886286340654
    2. ')
' → logprob: -8.875211715698242
    3. ' ' → logprob: -10.250211715698242
    4. ' )' → logprob: -10.500211715698242
    5. ')
' → logprob: -12.625211715698242
    6. '   ' → logprob: -13.625211715698242
    7. '）' → logprob: -13.750211715698242
    8. '])' → logprob: -14.125211715698242
    9. '`)' → logprob: -14.375211715698242
    10. ']' → logprob: -14.750211715698242

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008045919239521027
    2. ' ' → logprob: -4.8830461502075195
    3. 'c' → logprob: -8.38304615020752
    4. '
' → logprob: -9.38304615020752
    5. ' c' → logprob: -10.00804615020752
    6. 'return' → logprob: -10.13304615020752
    7. '  ' → logprob: -11.25804615020752
    8. ' return' → logprob: -12.00804615020752
    9. '```' → logprob: -12.00804615020752
    10. '    
' → logprob: -12.25804615020752

Token 66: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.23274634778499603
    2. ' ' → logprob: -1.7327463626861572
    3. ' c' → logprob: -3.7327463626861572
    4. '   ' → logprob: -4.982746124267578
    5. '  ' → logprob: -10.607746124267578
    6. '	c' → logprob: -10.982746124267578
    7. 'return' → logprob: -11.482746124267578
    8. ' return' → logprob: -12.482746124267578
    9. '  
' → logprob: -13.107746124267578
    10. '```' → logprob: -13.482746124267578

Token 67: '+=' (ID: 18287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3877986967563629
    2. '+=' → logprob: -1.1377986669540405
    3. ' +=' → logprob: -7.01279878616333
    4. '++' → logprob: -11.762798309326172
    5. '+="' → logprob: -12.137798309326172
    6. '=' → logprob: -12.262798309326172
    7. '+='' → logprob: -12.637798309326172
    8. '+
' → logprob: -13.137798309326172
    9. '1' → logprob: -13.637798309326172
    10. ' +' → logprob: -14.137798309326172

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -16.000009536743164
    4. '2' → logprob: -17.187509536743164
    5. '１' → logprob: -17.750009536743164
    6. '+' → logprob: -17.875009536743164
    7. '   ' → logprob: -18.187509536743164
    8. '  ' → logprob: -18.187509536743164
    9. '`' → logprob: -19.187509536743164
    10. '۱' → logprob: -19.437509536743164

Token 69: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03673764318227768
    2. '  
' → logprob: -3.6617376804351807
    3. ' return' → logprob: -5.286737442016602
    4. ' 
' → logprob: -6.411737442016602
    5. 'return' → logprob: -6.411737442016602
    6. '
' → logprob: -7.286737442016602
    7. '\n' → logprob: -7.911737442016602
    8. ',' → logprob: -8.411737442016602
    9. '   ' → logprob: -8.911737442016602
    10. '	return' → logprob: -9.286737442016602

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002242558402940631
    2. '  
' → logprob: -7.502242565155029
    3. ' return' → logprob: -8.002242088317871
    4. ' 
' → logprob: -8.127242088317871
    5. '```' → logprob: -8.502242088317871
    6. 'return' → logprob: -8.752242088317871
    7. '\' → logprob: -8.877242088317871
    8. '   ' → logprob: -9.127242088317871
    9. '\n' → logprob: -9.752242088317871
    10. '[' → logprob: -9.752242088317871

Token 71: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12024888396263123
    2. 'return' → logprob: -2.245248794555664
    3. ' return' → logprob: -4.995248794555664
    4. '```' → logprob: -8.745248794555664
    5. 'res' → logprob: -8.870248794555664
    6. 'r' → logprob: -8.870248794555664
    7. '  
' → logprob: -9.995248794555664
    8. ':return' → logprob: -10.120248794555664
    9. '  ' → logprob: -11.120248794555664
    10. 'sort' → logprob: -11.495248794555664

Token 72: ' sorted' (ID: 20099)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5138366222381592
    2. 'sorted' → logprob: -1.0138366222381592
    3. ' sorted' → logprob: -3.888836622238159
    4. ' res' → logprob: -4.013836860656738
    5. ' ' → logprob: -7.888836860656738
    6. '[' → logprob: -10.638836860656738
    7. '(sorted' → logprob: -11.013836860656738
    8. 'list' → logprob: -11.638836860656738
    9. '(res' → logprob: -12.888836860656738
    10. 'sort' → logprob: -13.013836860656738

Token 73: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -7.576873758807778e-05
    2. '(' → logprob: -9.500075340270996
    3. 'res' → logprob: -14.250075340270996
    4. ' (' → logprob: -15.625075340270996
    5. '```' → logprob: -18.000076293945312
    6. '(
' → logprob: -18.125076293945312
    7. '	res' → logprob: -18.125076293945312
    8. '(list' → logprob: -18.125076293945312
    9. ' ' → logprob: -18.125076293945312
    10. ',res' → logprob: -18.625076293945312

Token 74: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ' )' → logprob: -12.750005722045898
    3. '())' → logprob: -14.125005722045898
    4. '))' → logprob: -14.500005722045898
    5. ' ' → logprob: -14.875005722045898
    6. ')
' → logprob: -15.000005722045898
    7. '()' → logprob: -15.625005722045898
    8. '`)' → logprob: -16.6250057220459
    9. ']' → logprob: -17.0000057220459
    10. '）' → logprob: -17.0000057220459

Token 75: 'N' (ID: 45)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22764825820922852
    2. ',M' → logprob: -1.8526482582092285
    3. '=' → logprob: -3.4776482582092285
    4. ' =' → logprob: -5.3526482582092285
    5. ',m' → logprob: -5.7276482582092285
    6. ',N' → logprob: -6.1026482582092285
    7. ',K' → logprob: -6.9776482582092285
    8. ',P' → logprob: -7.1026482582092285
    9. '=int' → logprob: -7.2276482582092285
    10. ',S' → logprob: -7.2276482582092285

Token 77: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01819911040365696
    2. ' =' → logprob: -4.0181989669799805
    3. ' ' → logprob: -11.14319896697998
    4. '=int' → logprob: -11.39319896697998
    5. '=input' → logprob: -11.76819896697998
    6. ',' → logprob: -12.26819896697998
    7. '=n' → logprob: -13.14319896697998
    8. '=N' → logprob: -13.14319896697998
    9. '=sys' → logprob: -13.64319896697998
    10. '=list' → logprob: -13.76819896697998

Token 78: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007624607533216476
    2. ' int' → logprob: -7.250762462615967
    3. 'map' → logprob: -10.125761985778809
    4. ' ' → logprob: -12.250761985778809
    5. '*' → logprob: -12.625761985778809
    6. '10' → logprob: -13.625761985778809
    7. ' map' → logprob: -14.250761985778809
    8. ']int' → logprob: -14.625761985778809
    9. '[int' → logprob: -15.125761985778809
    10. '0' → logprob: -15.250761985778809

Token 79: '(_)' (ID: 108255)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.062483735382556915
    2. '(i' → logprob: -2.812483787536621
    3. '(s' → logprob: -8.437483787536621
    4. '(_)' → logprob: -8.437483787536621
    5. '(' → logprob: -10.437483787536621
    6. 'x' → logprob: -10.687483787536621
    7. '(a' → logprob: -11.312483787536621
    8. '(sys' → logprob: -12.312483787536621
    9. ']' → logprob: -13.062483787536621
    10. '```' → logprob: -13.187483787536621

Token 80: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4113336503505707
    2. '(input' → logprob: -1.786333680152893
    3. '(i' → logprob: -1.911333680152893
    4. 'input' → logprob: -4.4113335609436035
    5. '(sys' → logprob: -5.1613335609436035
    6. '(' → logprob: -6.6613335609436035
    7. 'x' → logprob: -7.0363335609436035
    8. ' input' → logprob: -7.9113335609436035
    9. ')' → logprob: -8.036334037780762
    10. '(s' → logprob: -8.286334037780762

Token 81: ' _' (ID: 1175)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0028243737760931253
    2. 'input' → logprob: -6.002824306488037
    3. ' sys' → logprob: -8.002824783325195
    4. ' ' → logprob: -12.252824783325195
    5. ' in' → logprob: -12.877824783325195
    6. '_' → logprob: -13.127824783325195
    7. ' raw' → logprob: -13.377824783325195
    8. ' open' → logprob: -13.502824783325195
    9. 'sys' → logprob: -14.002824783325195
    10. '_input' → logprob: -15.127824783325195

Token 82: ' in' (ID: 306)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.39145228266716003
    2. ' input' → logprob: -1.5164523124694824
    3. ' in' → logprob: -2.5164523124694824
    4. 'sys' → logprob: -4.891452312469482
    5. ' sys' → logprob: -4.891452312469482
    6. ' ' → logprob: -5.891452312469482
    7. '=input' → logprob: -5.891452312469482
    8. 'in' → logprob: -6.766452312469482
    9. '=sys' → logprob: -7.016452312469482
    10. 'raw' → logprob: -8.016451835632324

Token 83: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7299840450286865
    2. 'sys' → logprob: -0.7299840450286865
    3. ' sys' → logprob: -3.4799840450286865
    4. ' input' → logprob: -5.229984283447266
    5. '(sys' → logprob: -12.479984283447266
    6. '=sys' → logprob: -13.854984283447266
    7. ' ' → logprob: -15.979984283447266
    8. 'stdin' → logprob: -16.229984283447266
    9. '	sys' → logprob: -16.604984283447266
    10. '(input' → logprob: -17.354984283447266

Token 84: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.006741065997630358
    2. '.argv' → logprob: -5.006741046905518
    3. 'stdin' → logprob: -10.756741523742676
    4. '.readline' → logprob: -13.381741523742676
    5. '(stdin' → logprob: -14.006741523742676
    6. '.' → logprob: -14.131741523742676
    7. '.std' → logprob: -14.756741523742676
    8. 'argv' → logprob: -15.006741523742676
    9. '.stdout' → logprob: -15.256741523742676
    10. ' stdin' → logprob: -15.631741523742676

Token 85: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.380904672667384e-05
    2. '.' → logprob: -10.375033378601074
    3. '.readlines' → logprob: -13.625033378601074
    4. '.read' → logprob: -13.750033378601074
    5. ' .' → logprob: -16.37503433227539
    6. 'read' → logprob: -16.87503433227539
    7. ' readline' → logprob: -18.00003433227539
    8. '.stdin' → logprob: -18.87503433227539
    9. '```' → logprob: -19.00003433227539
    10. ' ' → logprob: -19.37503433227539

Token 86: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1322678178548813
    2. '()]' → logprob: -2.132267713546753
    3. '()' → logprob: -5.257267951965332
    4. '())' → logprob: -9.507267951965332
    5. '()].' → logprob: -10.757267951965332
    6. '()][' → logprob: -11.632267951965332
    7. '(' → logprob: -12.757267951965332
    8. '()>' → logprob: -12.882267951965332
    9. '()-' → logprob: -13.757267951965332
    10. '()[' → logprob: -14.257267951965332

Token 87: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0567987859249115
    2. 'split' → logprob: -3.0567986965179443
    3. 'rstrip' → logprob: -4.806798934936523
    4. ' strip' → logprob: -12.806798934936523
    5. 'read' → logprob: -14.556798934936523
    6. ' split' → logprob: -15.056798934936523
    7. 'replace' → logprob: -16.306798934936523
    8. ' ' → logprob: -16.806798934936523
    9. 'decode' → logprob: -16.806798934936523
    10. '.strip' → logprob: -17.056798934936523

Token 88: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.004256831016391516
    2. '()' → logprob: -5.754256725311279
    3. '())' → logprob: -7.004256725311279
    4. '(' → logprob: -8.754257202148438
    5. ')]' → logprob: -12.379257202148438
    6. ']()' → logprob: -13.129257202148438
    7. ']' → logprob: -13.254257202148438
    8. '()][' → logprob: -13.379257202148438
    9. '()],' → logprob: -13.754257202148438
    10. '()]
' → logprob: -14.504257202148438

Token 89: 'B' (ID: 33)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.355485737323761
    2. 'a' → logprob: -2.355485677719116
    3. 'r' → logprob: -2.480485677719116
    4. 'f' → logprob: -3.230485677719116
    5. 'print' → logprob: -3.605485677719116
    6. 'res' → logprob: -3.980485677719116
    7. 'result' → logprob: -4.230485916137695
    8. 'p' → logprob: -5.605485916137695
    9. 'ans' → logprob: -5.855485916137695
    10. 'arr' → logprob: -5.980485916137695

Token 90: '=f' (ID: 40464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26031672954559326
    2. '=[]' → logprob: -1.6353167295455933
    3. ' =' → logprob: -4.510316848754883
    4. '=[' → logprob: -4.760316848754883
    5. '=f' → logprob: -5.135316848754883
    6. '=A' → logprob: -6.010316848754883
    7. '=input' → logprob: -7.260316848754883
    8. '=B' → logprob: -7.385316848754883
    9. '=set' → logprob: -7.510316848754883
    10. '=N' → logprob: -7.635316848754883

Token 91: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.05632079392671585
    2. '(N' → logprob: -2.931320905685425
    3. '(' → logprob: -6.556320667266846
    4. '<|end|>' → logprob: -12.306321144104004
    5. 'M' → logprob: -12.431321144104004
    6. ' (' → logprob: -13.056321144104004
    7. '(
' → logprob: -13.556321144104004
    8. 'N' → logprob: -13.931321144104004
    9. '(B' → logprob: -13.931321144104004
    10. ')(' → logprob: -14.306321144104004

Token 92: ',M' (ID: 54127)
  Prédit: ',M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',M' → logprob: -0.3133164346218109
    2. ',' → logprob: -1.3133164644241333
    3. ',m' → logprob: -10.688316345214844
    4. ' ,' → logprob: -11.313316345214844
    5. 'M' → logprob: -12.563316345214844
    6. ',N' → logprob: -13.063316345214844
    7. ',
' → logprob: -13.063316345214844
    8. ')' → logprob: -13.188316345214844
    9. ' ' → logprob: -13.188316345214844
    10. ',B' → logprob: -13.438316345214844

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4021237802808173e-05
    2. '))' → logprob: -11.750014305114746
    3. ')
' → logprob: -12.625014305114746
    4. ' )' → logprob: -13.375014305114746
    5. ')))' → logprob: -15.500014305114746
    6. '())' → logprob: -15.750014305114746
    7. ')

' → logprob: -16.12501335144043
    8. '()' → logprob: -16.25001335144043
    9. ')}' → logprob: -16.37501335144043
    10. '),' → logprob: -16.50001335144043

Token 94: 'output' (ID: 6130)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08208844065666199
    2. 'for' → logprob: -2.7070884704589844
    3. 'if' → logprob: -4.707088470458984
    4. 'b' → logprob: -6.957088470458984
    5. 'C' → logprob: -7.207088470458984
    6. 'a' → logprob: -8.457088470458984
    7. 'p' → logprob: -8.457088470458984
    8. 'i' → logprob: -8.707088470458984
    9. '```' → logprob: -9.332088470458984
    10. 'n' → logprob: -9.457088470458984

Token 95: '=None' (ID: 12783)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.040047671645879745
    2. ' =' → logprob: -3.4150476455688477
    3. '=[]' → logprob: -5.165047645568848
    4. '=[' → logprob: -8.040047645568848
    5. '=[]
' → logprob: -9.290047645568848
    6. '=B' → logprob: -9.790047645568848
    7. '=list' → logprob: -10.665047645568848
    8. '='' → logprob: -10.790047645568848
    9. '=''' → logprob: -10.790047645568848
    10. '=sys' → logprob: -10.790047645568848

Token 96: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12948478758335114
    2. '=' → logprob: -3.3794848918914795
    3. 'if' → logprob: -4.0044846534729
    4. ' for' → logprob: -4.2544846534729
    5. '[' → logprob: -4.3794846534729
    6. 'f' → logprob: -5.1294846534729
    7. '[
' → logprob: -5.5044846534729
    8. '<|end|>' → logprob: -5.5044846534729
    9. '
' → logprob: -5.7544846534729
    10. 'B' → logprob: -5.7544846534729

Token 97: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15767061710357666
    2. 'if' → logprob: -2.532670497894287
    3. 'i' → logprob: -2.907670497894287
    4. ' for' → logprob: -6.157670497894287
    5. 'c' → logprob: -6.282670497894287
    6. 'b' → logprob: -6.532670497894287
    7. '=' → logprob: -6.532670497894287
    8. 'max' → logprob: -6.907670497894287
    9. 'f' → logprob: -7.282670497894287
    10. 'd' → logprob: -7.657670497894287

Token 98: ' y' (ID: 342)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4835275411605835
    2. 'b' → logprob: -0.9835275411605835
    3. ' i' → logprob: -5.358527660369873
    4. 'i' → logprob: -5.483527660369873
    5. 'x' → logprob: -8.108527183532715
    6. ' x' → logprob: -8.983527183532715
    7. '_' → logprob: -10.233527183532715
    8. 'a' → logprob: -10.233527183532715
    9. ' v' → logprob: -11.733527183532715
    10. ' _' → logprob: -11.733527183532715

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04326944425702095
    2. 'in' → logprob: -3.168269395828247
    3. ' ' → logprob: -8.418269157409668
    4. '	in' → logprob: -11.043269157409668
    5. ' ' → logprob: -12.043269157409668
    6. ',' → logprob: -12.418269157409668
    7. 'range' → logprob: -12.543269157409668
    8. 'y' → logprob: -12.793269157409668
    9. '_' → logprob: -13.230769157409668
    10. 's' → logprob: -13.293269157409668

Token 100: ' range' (ID: 3352)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.28453272581100464
    2. ' B' → logprob: -1.4095327854156494
    3. ' range' → logprob: -6.28453254699707
    4. 'range' → logprob: -6.65953254699707
    5. 'f' → logprob: -9.15953254699707
    6. 'sorted' → logprob: -10.15953254699707
    7. ' ' → logprob: -10.65953254699707
    8. ' sorted' → logprob: -10.78453254699707
    9. ' f' → logprob: -11.03453254699707
    10. '  ' → logprob: -12.40953254699707

Token 101: '(len' (ID: 14990)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.522354006767273
    2. '(' → logprob: -1.147354006767273
    3. '(B' → logprob: -2.7723541259765625
    4. '(M' → logprob: -4.2723541259765625
    5. '(len' → logprob: -4.5223541259765625
    6. ' (' → logprob: -7.1473541259765625
    7. '(min' → logprob: -8.147354125976562
    8. '(-' → logprob: -8.272354125976562
    9. '(max' → logprob: -8.397354125976562
    10. '(n' → logprob: -8.522354125976562

Token 102: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -4.191489642835222e-05
    2. '(' → logprob: -10.375041961669922
    3. 'B' → logprob: -11.750041961669922
    4. '(A' → logprob: -13.625041961669922
    5. ' (' → logprob: -14.250041961669922
    6. ')' → logprob: -15.250041961669922
    7. '(b' → logprob: -16.125041961669922
    8. '(
' → logprob: -16.375041961669922
    9. '(N' → logprob: -16.375041961669922
    10. '(M' → logprob: -16.875041961669922

Token 103: ')-' (ID: 14080)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019969160202890635
    2. ' ):' → logprob: -6.626996994018555
    3. ')):' → logprob: -7.626996994018555
    4. '-' → logprob: -9.376996994018555
    5. ')' → logprob: -9.501996994018555
    6. '):
' → logprob: -11.251996994018555
    7. ' ' → logprob: -12.126996994018555
    8. '+' → logprob: -13.376996994018555
    9. ']):' → logprob: -13.751996994018555
    10. '():' → logprob: -14.001996994018555

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012121411273255944
    2. '2' → logprob: -6.751212120056152
    3. ' ' → logprob: -10.126212120056152
    4. '-' → logprob: -13.751212120056152
    5. '(' → logprob: -15.001212120056152
    6. '3' → logprob: -15.501212120056152
    7. '  ' → logprob: -16.18871307373047
    8. '   ' → logprob: -16.25121307373047
    9. '0' → logprob: -16.81371307373047
    10. '```' → logprob: -17.56371307373047

Token 105: ',len' (ID: 73338)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.041043128818273544
    2. ',-' → logprob: -3.5410430431365967
    3. '-' → logprob: -5.166043281555176
    4. ' ):' → logprob: -6.041043281555176
    5. ',' → logprob: -6.291043281555176
    6. '):
' → logprob: -7.916043281555176
    7. ' -' → logprob: -8.041043281555176
    8. '):-' → logprob: -8.416043281555176
    9. '+' → logprob: -8.791043281555176
    10. ')' → logprob: -9.541043281555176

Token 106: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0004468772385735065
    2. '(-' → logprob: -8.375447273254395
    3. '(' → logprob: -8.625447273254395
    4. '-' → logprob: -11.250447273254395
    5. 'B' → logprob: -12.125447273254395
    6. ')' → logprob: -12.625447273254395
    7. '(A' → logprob: -12.750447273254395
    8. '(range' → logprob: -12.875447273254395
    9. '(output' → logprob: -13.250447273254395
    10. ' (' → logprob: -13.875447273254395

Token 107: ')):
' (ID: 22530)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06114785373210907
    2. ')-' → logprob: -3.686147928237915
    3. ',-' → logprob: -4.561147689819336
    4. '):' → logprob: -5.061147689819336
    5. ')):' → logprob: -5.311147689819336
    6. ' -' → logprob: -5.811147689819336
    7. ')' → logprob: -5.811147689819336
    8. '))' → logprob: -6.186147689819336
    9. '):-' → logprob: -6.311147689819336
    10. ' ' → logprob: -7.061147689819336

Token 108: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6447266340255737
    2. '-' → logprob: -1.6447266340255737
    3. ':' → logprob: -1.7697266340255737
    4. ' :' → logprob: -2.8947267532348633
    5. ' -' → logprob: -3.5197267532348633
    6. ' :
' → logprob: -5.144726753234863
    7. '+' → logprob: -5.269726753234863
    8. '   ' → logprob: -5.644726753234863
    9. '0' → logprob: -6.019726753234863
    10. ':
' → logprob: -6.144726753234863

Token 109: ' output' (ID: 4733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.033997543156147
    2. ' :' → logprob: -4.533997535705566
    3. '   ' → logprob: -4.658997535705566
    4. '    ' → logprob: -5.158997535705566
    5. ':' → logprob: -6.158997535705566
    6. ' output' → logprob: -6.783997535705566
    7. '  ' → logprob: -7.158997535705566
    8. 'output' (adapté à ' output') → logprob: -7.408997535705566
    9. ' if' → logprob: -7.533997535705566
    10. ' :
' → logprob: -8.033997535705566

Token 110: '=B' (ID: 139140)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1288934350013733
    2. ' =' → logprob: -2.1288933753967285
    3. '=B' → logprob: -6.5038933753967285
    4. '+=' → logprob: -9.253893852233887
    5. '=f' → logprob: -9.503893852233887
    6. ' +=' → logprob: -9.878893852233887
    7. ' ' → logprob: -10.503893852233887
    8. ',' → logprob: -10.503893852233887
    9. '=b' → logprob: -10.753893852233887
    10. ')' → logprob: -10.878893852233887

Token 111: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.07342684268951416
    2. '[' → logprob: -2.8234267234802246
    3. '[-' → logprob: -5.448426723480225
    4. '[len' → logprob: -5.823426723480225
    5. '[B' → logprob: -6.073426723480225
    6. 'output' → logprob: -6.823426723480225
    7. '[
' → logprob: -8.948427200317383
    8. 'y' → logprob: -9.823427200317383
    9. '[:]' → logprob: -9.823427200317383
    10. ')' → logprob: -10.073427200317383

Token 112: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5652947425842285
    2. '])' → logprob: -1.4402947425842285
    3. ']' → logprob: -1.8152947425842285
    4. '*' → logprob: -4.6902947425842285
    5. ']+' → logprob: -5.0652947425842285
    6. ')])' → logprob: -5.8152947425842285
    7. '-' → logprob: -6.0652947425842285
    8. ')+' → logprob: -6.3152947425842285
    9. '+' → logprob: -6.4402947425842285
    10. ')]' → logprob: -6.6902947425842285

Token 113: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012499965960159898
    2. ' print' → logprob: -7.50124979019165
    3. '<|end|>' → logprob: -8.126250267028809
    4. '
' → logprob: -8.876250267028809
    5. ')' → logprob: -9.501250267028809
    6. '+' → logprob: -9.626250267028809
    7. ' ' → logprob: -9.751250267028809
    8. 'for' → logprob: -11.376250267028809
    9. '#print' → logprob: -11.751250267028809
    10. '(print' → logprob: -12.001250267028809

Token 114: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.0002624086628202349
    2. '(' → logprob: -8.250262260437012
    3. 'output' → logprob: -13.750262260437012
    4. '(out' → logprob: -17.750263214111328
    5. '(input' → logprob: -18.125263214111328
    6. '(Output' → logprob: -18.875263214111328
    7. '()' → logprob: -19.000263214111328
    8. ' (' → logprob: -19.125263214111328
    9. '(outputs' → logprob: -19.250263214111328
    10. '(object' → logprob: -19.500263214111328

Token 115: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ' )' → logprob: -12.750006675720215
    3. '+' → logprob: -13.000006675720215
    4. '))' → logprob: -14.375006675720215
    5. ')
' → logprob: -15.500006675720215
    6. '+)' → logprob: -16.0000057220459
    7. ')`' → logprob: -16.1250057220459
    8. '`)' → logprob: -16.2500057220459
    9. '')' → logprob: -16.3750057220459
    10. ')#' → logprob: -17.1250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 113
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 90
Précision stricte (1ère position): 34.51%
Précision adaptée (1ère position): 37.17%
Précision (top 10): 79.65%
================================================================================
