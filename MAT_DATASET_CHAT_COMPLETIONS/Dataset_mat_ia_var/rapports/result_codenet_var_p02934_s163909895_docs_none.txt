================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
line = list(map(int, input().split()))
print(1 / sum(1 / i for i in line))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003032881941180676
    2. '(n' → logprob: -9.250303268432617
    3. ''' → logprob: -9.625303268432617
    4. '```' → logprob: -10.375303268432617
    5. '('' → logprob: -10.625303268432617
    6. '`' → logprob: -11.000303268432617
    7. '()' → logprob: -11.000303268432617
    8. '("("' → logprob: -11.125303268432617
    9. ')' → logprob: -12.000303268432617
    10. 'n' → logprob: -12.125303268432617

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 'line' (ID: 1137)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3530617952346802
    2. 'i' → logprob: -1.4780617952346802
    3. 'if' → logprob: -1.8530617952346802
    4. 's' → logprob: -2.2280616760253906
    5. ' ' → logprob: -3.1030616760253906
    6. ''' → logprob: -3.1030616760253906
    7. 'f' → logprob: -3.8530616760253906
    8. '`' → logprob: -3.9780616760253906
    9. 'a' → logprob: -3.9780616760253906
    10. 'x' → logprob: -4.103061676025391

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7301174998283386
    2. 's' → logprob: -0.9801174998283386
    3. '=' → logprob: -1.9801175594329834
    4. '_' → logprob: -5.605117321014404
    5. '.' → logprob: -7.855117321014404
    6. '.strip' → logprob: -8.730117797851562
    7. ' ' → logprob: -9.230117797851562
    8. '_s' → logprob: -9.480117797851562
    9. 'a' → logprob: -9.980117797851562
    10. '=line' → logprob: -9.980117797851562

Token 7: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0017418164061382413
    2. ' input' → logprob: -6.376741886138916
    3. '""' → logprob: -11.001741409301758
    4. '[]' → logprob: -11.876741409301758
    5. '(input' → logprob: -12.251741409301758
    6. '''' → logprob: -12.501741409301758
    7. '"' → logprob: -13.001741409301758
    8. '=input' → logprob: -13.251741409301758
    9. 'n' → logprob: -13.876741409301758
    10. ''' → logprob: -14.751741409301758

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022260257974267006
    2. '(range' → logprob: -6.377225875854492
    3. '(line' → logprob: -8.752225875854492
    4. '(input' → logprob: -9.252225875854492
    5. '(map' → logprob: -9.752225875854492
    6. '("("' → logprob: -9.877225875854492
    7. '(
' → logprob: -10.752225875854492
    8. '()' → logprob: -10.752225875854492
    9. '('' → logprob: -11.252225875854492
    10. ' (' → logprob: -11.252225875854492

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005209567025303841
    2. '(' → logprob: -5.755209445953369
    3. 'int' → logprob: -6.755209445953369
    4. '(str' → logprob: -8.255209922790527
    5. '<int' → logprob: -8.755209922790527
    6. '(input' → logprob: -9.130209922790527
    7. '(lambda' → logprob: -9.255209922790527
    8. '=int' → logprob: -9.505209922790527
    9. '[int' → logprob: -9.880209922790527
    10. ')' → logprob: -10.255209922790527

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.013534756377339363
    2. '(' → logprob: -4.8885345458984375
    3. '))' → logprob: -5.5135345458984375
    4. ')' → logprob: -7.5135345458984375
    5. '(line' → logprob: -7.8885345458984375
    6. ',input' → logprob: -8.513534545898438
    7. 'input' → logprob: -8.888534545898438
    8. '=input' → logprob: -9.138534545898438
    9. '()))' → logprob: -9.513534545898438
    10. '(range' → logprob: -9.638534545898438

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023256074637174606
    2. ' input' → logprob: -3.7732560634613037
    3. '(input' → logprob: -11.523256301879883
    4. ',input' → logprob: -15.023256301879883
    5. ')' → logprob: -15.398256301879883
    6. '	input' → logprob: -16.523256301879883
    7. 'str' → logprob: -16.898256301879883
    8. '=input' → logprob: -17.148256301879883
    9. 'list' → logprob: -17.523256301879883
    10. '[input' → logprob: -17.773256301879883

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.38796281814575195
    2. '()' → logprob: -1.637962818145752
    3. '())' → logprob: -2.137962818145752
    4. '().' → logprob: -5.012962818145752
    5. '()));' → logprob: -6.762962818145752
    6. '(' → logprob: -7.887962818145752
    7. ')' → logprob: -8.262962341308594
    8. '))' → logprob: -8.637962341308594
    9. '()>' → logprob: -8.762962341308594
    10. '())))' → logprob: -8.887962341308594

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001534620183520019
    2. 'strip' → logprob: -6.501534461975098
    3. 'rstrip' → logprob: -10.376534461975098
    4. ' split' → logprob: -14.001534461975098
    5. '(split' → logprob: -15.626534461975098
    6. ')' → logprob: -17.126535415649414
    7. 'spl' → logprob: -17.251535415649414
    8. 's' → logprob: -18.126535415649414
    9. 'read' → logprob: -18.501535415649414
    10. 'replace' → logprob: -19.126535415649414

Token 14: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9704865217208862
    2. '))' → logprob: -0.9704865217208862
    3. '()))' → logprob: -2.095486640930176
    4. '(' → logprob: -2.720486640930176
    5. '())' → logprob: -3.095486640930176
    6. '('' → logprob: -5.845486640930176
    7. '()' → logprob: -5.845486640930176
    8. ')))' → logprob: -6.720486640930176
    9. '(','' → logprob: -8.345486640930176
    10. ''))' → logprob: -8.595486640930176

Token 15: 'print' (ID: 1598)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0303314924240112
    2. 'for' → logprob: -1.6553314924240112
    3. 'line' → logprob: -2.530331611633301
    4. 'count' → logprob: -2.780331611633301
    5. 'c' → logprob: -2.905331611633301
    6. 'sum' → logprob: -3.030331611633301
    7. ')' → logprob: -3.155331611633301
    8. 'max' → logprob: -3.530331611633301
    9. '[' → logprob: -3.655331611633301
    10. 'm' → logprob: -4.030331611633301

Token 16: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.763666947837919e-05
    2. '("("' → logprob: -11.00004768371582
    3. '(line' → logprob: -11.25004768371582
    4. '('' → logprob: -12.25004768371582
    5. '((' → logprob: -12.62504768371582
    6. '(
' → logprob: -12.62504768371582
    7. '()' → logprob: -13.37504768371582
    8. '(len' → logprob: -13.75004768371582
    9. '(

' → logprob: -14.50004768371582
    10. ' (' → logprob: -14.50004768371582

Token 17: '1' (ID: 16)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7394791841506958
    2. 'sum' → logprob: -0.7394791841506958
    3. 'max' → logprob: -3.4894790649414062
    4. 'len' → logprob: -5.114479064941406
    5. 'n' → logprob: -5.864479064941406
    6. 'min' → logprob: -6.489479064941406
    7. ')' → logprob: -6.614479064941406
    8. '*' → logprob: -7.364479064941406
    9. 'sorted' → logprob: -7.739479064941406
    10. '"' → logprob: -7.864479064941406

Token 18: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017308680107817054
    2. '+' → logprob: -6.501730918884277
    3. ',' → logprob: -9.251730918884277
    4. ' )' → logprob: -9.751730918884277
    5. '*' → logprob: -10.501730918884277
    6. '+)' → logprob: -11.001730918884277
    7. ',)' → logprob: -11.376730918884277
    8. '[' → logprob: -12.501730918884277
    9. ' +' → logprob: -12.501730918884277
    10. '))' → logprob: -12.626730918884277

Token 19: ' sum' (ID: 4215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5205045938491821
    2. ' n' → logprob: -1.0205045938491821
    3. 'line' → logprob: -3.3955044746398926
    4. ' line' → logprob: -4.645504474639893
    5. 'len' → logprob: -6.895504474639893
    6. ' len' → logprob: -7.645504474639893
    7. ' ' → logprob: -8.64550495147705
    8. '(' → logprob: -8.77050495147705
    9. '(n' → logprob: -8.89550495147705
    10. ' (' → logprob: -9.39550495147705

Token 20: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2016182839870453
    2. '(line' → logprob: -1.7016183137893677
    3. '()' → logprob: -10.326618194580078
    4. '((' → logprob: -10.576618194580078
    5. '(len' → logprob: -11.076618194580078
    6. '(s' → logprob: -11.076618194580078
    7. '(

' → logprob: -11.201618194580078
    8. '(Line' → logprob: -11.201618194580078
    9. '(()' → logprob: -11.326618194580078
    10. '(`' → logprob: -11.576618194580078

Token 21: '1' (ID: 16)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004863342270255089
    2. ' line' → logprob: -5.629863262176514
    3. '[line' → logprob: -7.129863262176514
    4. '[' → logprob: -9.004863739013672
    5. '(line' → logprob: -9.129863739013672
    6. 'l' → logprob: -9.129863739013672
    7. ')' → logprob: -10.754863739013672
    8. 'n' → logprob: -10.879863739013672
    9. '[i' → logprob: -11.129863739013672
    10. 'li' → logprob: -11.629863739013672

Token 22: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6952193379402161
    2. ' /' → logprob: -0.6952193379402161
    3. '/i' → logprob: -6.69521951675415
    4. ' ' → logprob: -7.44521951675415
    5. '/x' → logprob: -10.070219039916992
    6. ')' → logprob: -10.070219039916992
    7. '-' → logprob: -10.945219039916992
    8. ' line' → logprob: -11.445219039916992
    9. '   ' → logprob: -11.570219039916992
    10. ' ' → logprob: -11.570219039916992

Token 23: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11832413077354431
    2. 'line' → logprob: -2.493324041366577
    3. 'i' → logprob: -4.118324279785156
    4. ' x' → logprob: -5.118324279785156
    5. ' line' → logprob: -5.993324279785156
    6. 'l' → logprob: -7.243324279785156
    7. 'a' → logprob: -7.243324279785156
    8. 'num' → logprob: -7.743324279785156
    9. 'n' → logprob: -7.868324279785156
    10. ' i' → logprob: -8.118324279785156

Token 24: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11912835389375687
    2. ')' → logprob: -2.744128465652466
    3. 'for' → logprob: -3.119128465652466
    4. ' line' → logprob: -6.119128227233887
    5. ' ' → logprob: -6.744128227233887
    6. ' )' → logprob: -8.744128227233887
    7. '))' → logprob: -9.119128227233887
    8. 'line' → logprob: -9.494128227233887
    9. '  ' → logprob: -10.494128227233887
    10. '   ' → logprob: -10.994128227233887

Token 25: ' i' (ID: 575)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6326589584350586
    2. 'line' → logprob: -0.7576589584350586
    3. ' ' → logprob: -10.257658958435059
    4. '	line' → logprob: -11.882658958435059
    5. ' range' → logprob: -12.257658958435059
    6. ' lin' → logprob: -12.507658958435059
    7. 'range' → logprob: -13.132658958435059
    8. '(line' → logprob: -13.257658958435059
    9. '[line' → logprob: -13.632658958435059
    10. '  ' → logprob: -14.132658958435059

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06865095347166061
    2. 'in' → logprob: -3.068650960922241
    3. ' line' → logprob: -4.193650722503662
    4. 'line' → logprob: -5.693650722503662
    5. ' ' → logprob: -7.193650722503662
    6. ')' → logprob: -7.443650722503662
    7. ' )' → logprob: -10.56865119934082
    8. '  ' → logprob: -11.44365119934082
    9. ' range' → logprob: -12.06865119934082
    10. '=line' → logprob: -12.31865119934082

Token 27: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.03365307301282883
    2. ' line' → logprob: -3.4086530208587646
    3. 'range' → logprob: -13.158653259277344
    4. ' ' → logprob: -13.533653259277344
    5. '(line' → logprob: -14.283653259277344
    6. ')' → logprob: -14.283653259277344
    7. '	line' → logprob: -14.283653259277344
    8. '[line' → logprob: -14.783653259277344
    9. '   ' → logprob: -15.283653259277344
    10. 'list' → logprob: -15.283653259277344

Token 28: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25196725130081177
    2. ')' → logprob: -1.501967191696167
    3. ')))' → logprob: -10.376967430114746
    4. ' ))' → logprob: -12.876967430114746
    5. ' )' → logprob: -13.876967430114746
    6. '),' → logprob: -14.126967430114746
    7. '))
' → logprob: -14.251967430114746
    8. ''))' → logprob: -14.626967430114746
    9. ')
' → logprob: -15.126967430114746
    10. ')}' → logprob: -15.376967430114746


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 26
Tokens correctement prédits (1ère position, stricte): 8
Tokens correctement prédits (1ère position, avec adaptation): 8
Tokens correctement prédits (top 10): 14
Précision stricte (1ère position): 30.77%
Précision adaptée (1ère position): 30.77%
Précision (top 10): 53.85%
================================================================================
