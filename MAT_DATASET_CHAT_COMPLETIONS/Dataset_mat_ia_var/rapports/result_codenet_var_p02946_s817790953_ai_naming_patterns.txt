================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
num_range, num_center = map(int, input().split())

for value_current in range(num_center - num_range + 1, num_center + num_range):
    print(value_current)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'num' (ID: 4571)
  → Token d'amorce (pas de prédiction)

Token 1: '_range' (ID: 22022)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' num' (ID: 2269)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3570570945739746
    2. '=' → logprob: -1.2320570945739746
    3. ':' → logprob: -6.482057094573975
    4. '_' → logprob: -6.607057094573975
    5. ',' → logprob: -6.732057094573975
    6. ')' → logprob: -6.732057094573975
    7. ' =' → logprob: -7.107057094573975
    8. '[' → logprob: -7.232057094573975
    9. '.' → logprob: -7.732057094573975
    10. '```' → logprob: -8.107057571411133

Token 4: '_center' (ID: 48737)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.833756685256958
    2. '=' → logprob: -1.083756685256958
    3. '[' → logprob: -1.958756685256958
    4. ')' → logprob: -3.583756685256958
    5. '(' → logprob: -4.208756446838379
    6. '.' → logprob: -4.333756446838379
    7. ' =' → logprob: -4.458756446838379
    8. ',' → logprob: -4.583756446838379
    9. 's' → logprob: -6.208756446838379
    10. ':' → logprob: -6.833756446838379

Token 5: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28672730922698975
    2. '=' → logprob: -2.0367274284362793
    3. '(' → logprob: -2.7867274284362793
    4. ')' → logprob: -3.7867274284362793
    5. '[' → logprob: -4.536727428436279
    6. ' =' → logprob: -4.661727428436279
    7. '```' → logprob: -5.161727428436279
    8. ',' → logprob: -5.411727428436279
    9. '.' → logprob: -6.536727428436279
    10. '`' → logprob: -7.536727428436279

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8986878395080566
    2. ' num' → logprob: -1.0236878395080566
    3. '0' → logprob: -2.5236878395080566
    4. 'num' → logprob: -2.7736878395080566
    5. ' map' → logprob: -3.7736878395080566
    6. ' range' → logprob: -4.148687839508057
    7. 'range' → logprob: -4.898687839508057
    8. 'map' → logprob: -5.148687839508057
    9. '10' → logprob: -5.148687839508057
    10. '1' → logprob: -5.523687839508057

Token 7: '(int' (ID: 2742)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25471821427345276
    2. ')' → logprob: -1.7547181844711304
    3. '(' → logprob: -3.25471830368042
    4. '(user' → logprob: -5.12971830368042
    5. 'input' → logprob: -5.75471830368042
    6. '('' → logprob: -6.62971830368042
    7. '(range' → logprob: -7.87971830368042
    8. '<|end|>' → logprob: -8.129717826843262
    9. '```' → logprob: -8.129717826843262
    10. '(raw' → logprob: -8.504717826843262

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1270292103290558
    2. ' input' → logprob: -2.1270291805267334
    3. '(input' → logprob: -9.502029418945312
    4. 'range' → logprob: -11.002029418945312
    5. ')' → logprob: -12.252029418945312
    6. 'num' → logprob: -13.502029418945312
    7. ' range' → logprob: -13.877029418945312
    8. 'user' → logprob: -14.127029418945312
    9. '=input' → logprob: -14.752029418945312
    10. ',input' → logprob: -15.252029418945312

Token 10: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19022782146930695
    2. '()' → logprob: -2.815227746963501
    3. '())' → logprob: -3.440227746963501
    4. ')' → logprob: -3.690227746963501
    5. '```' → logprob: -4.06522798538208
    6. '('' → logprob: -5.06522798538208
    7. '`()' → logprob: -5.19022798538208
    8. '().' → logprob: -5.31522798538208
    9. '(token' → logprob: -6.06522798538208
    10. '`' → logprob: -6.06522798538208

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00033879990223795176
    2. 'strip' → logprob: -8.000338554382324
    3. 'rstrip' → logprob: -13.000338554382324
    4. ' split' → logprob: -14.125338554382324
    5. 'read' → logprob: -15.125338554382324
    6. '(split' → logprob: -16.12533950805664
    7. 'spl' → logprob: -17.00033950805664
    8. 'replace' → logprob: -17.00033950805664
    9. 'startswith' → logprob: -17.50033950805664
    10. '```' → logprob: -19.00033950805664

Token 12: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.142661914229393
    2. ')' → logprob: -2.1426618099212646
    3. '))' → logprob: -4.642662048339844
    4. '()))' → logprob: -5.767662048339844
    5. '()' → logprob: -6.017662048339844
    6. '(' → logprob: -9.267662048339844
    7. '`)' → logprob: -9.267662048339844
    8. ' ())' → logprob: -10.017662048339844
    9. '('' → logprob: -10.767662048339844
    10. '```' → logprob: -10.892662048339844

Token 13: 'for' (ID: 1938)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7264790534973145
    2. '#' → logprob: -1.4764790534973145
    3. ',' → logprob: -1.8514790534973145
    4. '.' → logprob: -3.3514790534973145
    5. 'if' → logprob: -3.3514790534973145
    6. '+' → logprob: -4.7264790534973145
    7. ' if' → logprob: -5.1014790534973145
    8. ')' → logprob: -5.3514790534973145
    9. ':
' → logprob: -5.4764790534973145
    10. '[' → logprob: -5.6014790534973145

Token 14: ' value' (ID: 1432)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31783097982406616
    2. '_' → logprob: -1.942831039428711
    3. ' _' → logprob: -2.567831039428711
    4. ' ' → logprob: -3.692831039428711
    5. ' num' → logprob: -3.692831039428711
    6. 'i' → logprob: -6.192831039428711
    7. 'num' → logprob: -8.692831039428711
    8. '  ' → logprob: -9.317831039428711
    9. ' range' → logprob: -9.817831039428711
    10. '_i' → logprob: -10.442831039428711

Token 15: '_current' (ID: 23981)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.43065211176872253
    2. ' in' → logprob: -1.055652141571045
    3. '_' → logprob: -7.055652141571045
    4. '_in' → logprob: -7.805652141571045
    5. ' ' → logprob: -8.055651664733887
    6. '(' → logprob: -8.680651664733887
    7. '  ' → logprob: -9.680651664733887
    8. '   ' → logprob: -10.555651664733887
    9. ',' → logprob: -10.805651664733887
    10. '(in' → logprob: -11.555651664733887

Token 16: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5398113131523132
    2. ' in' → logprob: -0.9148113131523132
    3. '_' → logprob: -4.414811134338379
    4. '_in' → logprob: -6.414811134338379
    5. '(' → logprob: -7.164811134338379
    6. ')' → logprob: -7.914811134338379
    7. ' ' → logprob: -8.039811134338379
    8. '```' → logprob: -8.039811134338379
    9. '  ' → logprob: -8.289811134338379
    10. ',' → logprob: -8.289811134338379

Token 17: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6245409846305847
    2. 'range' → logprob: -0.8745409846305847
    3. ' num' → logprob: -3.6245410442352295
    4. 'num' → logprob: -3.8745410442352295
    5. ' ' → logprob: -12.249541282653809
    6. '[num' → logprob: -12.874541282653809
    7. '<num' → logprob: -13.374541282653809
    8. '	range' → logprob: -13.624541282653809
    9. '(range' → logprob: -13.999541282653809
    10. ' ' → logprob: -14.499541282653809

Token 18: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.1002226322889328
    2. '(' → logprob: -2.350222587585449
    3. '((' → logprob: -11.97522258758545
    4. '(
' → logprob: -12.97522258758545
    5. ' (' → logprob: -12.97522258758545
    6. '(len' → logprob: -13.60022258758545
    7. '(value' → logprob: -14.35022258758545
    8. '(n' → logprob: -14.72522258758545
    9. '(int' → logprob: -14.85022258758545
    10. '(start' → logprob: -15.10022258758545

Token 19: '_center' (ID: 48737)
  Prédit: '_range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.013885974884033203
    2. '_center' → logprob: -4.638885974884033
    3. '_' → logprob: -5.638885974884033
    4. '_r' → logprob: -8.513885498046875
    5. '_current' → logprob: -8.888885498046875
    6. ' _' → logprob: -9.013885498046875
    7. '_space' → logprob: -10.513885498046875
    8. '_cent' → logprob: -11.263885498046875
    9. '_ranges' → logprob: -11.388885498046875
    10. '_start' → logprob: -11.763885498046875

Token 20: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04464523866772652
    2. '-' → logprob: -3.294645309448242
    3. '-num' → logprob: -5.169645309448242
    4. ',' → logprob: -7.419645309448242
    5. ' ,' → logprob: -9.169645309448242
    6. ' ' → logprob: -10.169645309448242
    7. '-l' → logprob: -10.669645309448242
    8. '+' → logprob: -10.794645309448242
    9. ' -,' → logprob: -10.794645309448242
    10. ',num' → logprob: -10.794645309448242

Token 21: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.6934294700622559
    2. 'num' → logprob: -0.6934294700622559
    3. ' ' → logprob: -9.318429946899414
    4. '(num' → logprob: -9.443429946899414
    5. '1' → logprob: -10.318429946899414
    6. '	num' → logprob: -10.818429946899414
    7. '10' → logprob: -11.443429946899414
    8. ' (' → logprob: -11.943429946899414
    9. '5' → logprob: -12.193429946899414
    10. '  ' → logprob: -12.318429946899414

Token 22: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -1.0683535037969705e-05
    2. '_center' → logprob: -12.12501049041748
    3. '_r' → logprob: -12.50001049041748
    4. '_' → logprob: -13.75001049041748
    5. 'range' → logprob: -15.75001049041748
    6. '_ranges' → logprob: -16.625011444091797
    7. ' _' → logprob: -16.750011444091797
    8. '_current' → logprob: -17.250011444091797
    9. '_radius' → logprob: -17.625011444091797
    10. '_value' → logprob: -18.500011444091797

Token 23: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010967610869556665
    2. ' ,' → logprob: -6.876096725463867
    3. ',num' → logprob: -9.751096725463867
    4. ' ' → logprob: -13.251096725463867
    5. ',value' → logprob: -13.501096725463867
    6. ' +' → logprob: -15.251096725463867
    7. ',n' → logprob: -15.251096725463867
    8. ' -' → logprob: -15.751096725463867
    9. '‌,' → logprob: -15.751096725463867
    10. ',int' → logprob: -15.876096725463867

Token 24: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07916615903377533
    2. ' ' → logprob: -2.5791661739349365
    3. '0' → logprob: -8.954166412353516
    4. 'value' → logprob: -9.829166412353516
    5. ')' → logprob: -9.954166412353516
    6. ',' → logprob: -11.204166412353516
    7. 'num' → logprob: -11.579166412353516
    8. ' value' → logprob: -11.579166412353516
    9. ' num' → logprob: -12.579166412353516
    10. ' )' → logprob: -13.079166412353516

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022633750922977924
    2. 'value' → logprob: -7.12726354598999
    3. '0' → logprob: -7.50226354598999
    4. ' ' → logprob: -7.62726354598999
    5. 'num' → logprob: -7.87726354598999
    6. ' value' → logprob: -11.627263069152832
    7. '2' → logprob: -11.752263069152832
    8. 'abs' → logprob: -12.127263069152832
    9. ' num' → logprob: -12.752263069152832
    10. '(' → logprob: -12.877263069152832

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031067516654729843
    2. ' ,' → logprob: -3.5310676097869873
    3. ',num' → logprob: -7.156067371368408
    4. '):' → logprob: -7.656067371368408
    5. ')' → logprob: -11.156067848205566
    6. ' ):' → logprob: -11.531067848205566
    7. ',n' → logprob: -11.781067848205566
    8. ',value' → logprob: -12.156067848205566
    9. '):
' → logprob: -12.531067848205566
    10. ',len' → logprob: -12.781067848205566

Token 27: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.6326109170913696
    2. ' num' → logprob: -0.7576109170913696
    3. ',num' → logprob: -12.257611274719238
    4. ',' → logprob: -13.257611274719238
    5. '(num' → logprob: -13.882611274719238
    6. '	num' → logprob: -14.132611274719238
    7. '<num' → logprob: -14.257611274719238
    8. ' ' → logprob: -14.382611274719238
    9. ' ' → logprob: -14.757611274719238
    10. '_num' → logprob: -15.257611274719238

Token 28: '_center' (ID: 48737)
  Prédit: '_center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_center' → logprob: -0.0020240433514118195
    2. '_range' → logprob: -6.377024173736572
    3. '_current' → logprob: -8.252023696899414
    4. '_c' → logprob: -10.377023696899414
    5. '_' → logprob: -11.377023696899414
    6. '_cent' → logprob: -11.502023696899414
    7. '_value' → logprob: -12.752023696899414
    8. 'center' → logprob: -13.377023696899414
    9. '_r' → logprob: -14.627023696899414
    10. ' _' → logprob: -14.877023696899414

Token 29: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20143848657608032
    2. '+' → logprob: -1.7014384269714355
    3. ' ' → logprob: -10.701438903808594
    4. ' ' → logprob: -13.826438903808594
    5. ' plus' → logprob: -14.951438903808594
    6. ')' → logprob: -14.951438903808594
    7. '+n' → logprob: -15.076438903808594
    8. ' +

' → logprob: -16.201438903808594
    9. ' +
' → logprob: -16.701438903808594
    10. '＋' → logprob: -16.826438903808594

Token 30: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.058112483471632004
    2. ' num' → logprob: -3.058112382888794
    3. '1' → logprob: -4.683112621307373
    4. ' ' → logprob: -8.433112144470215
    5. '	num' → logprob: -12.183112144470215
    6. '<num' → logprob: -13.683112144470215
    7. '_num' → logprob: -14.058112144470215
    8. '  ' → logprob: -14.183112144470215
    9. '(num' → logprob: -14.183112144470215
    10. '   ' → logprob: -14.308112144470215

Token 31: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -6.492120155598968e-05
    2. '_center' → logprob: -10.000064849853516
    3. '_' → logprob: -11.875064849853516
    4. 'range' → logprob: -12.000064849853516
    5. '_r' → logprob: -12.625064849853516
    6. '_current' → logprob: -13.125064849853516
    7. ' _' → logprob: -15.000064849853516
    8. '1' → logprob: -15.250064849853516
    9. '_value' → logprob: -16.125064849853516
    10. ' ' → logprob: -16.375064849853516

Token 32: '):
' (ID: 1883)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.582499086856842
    2. '+' → logprob: -0.832499086856842
    3. '):' → logprob: -5.082499027252197
    4. ')' → logprob: -8.457499504089355
    5. ' ):' → logprob: -9.957499504089355
    6. ',' → logprob: -10.707499504089355
    7. '):
' → logprob: -11.207499504089355
    8. '```' → logprob: -11.582499504089355
    9. ')):' → logprob: -11.832499504089355
    10. '2' → logprob: -12.332499504089355

Token 33: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6594118475914001
    2. '   ' → logprob: -1.034411907196045
    3. ' :' → logprob: -2.534411907196045
    4. '    ' → logprob: -3.284411907196045
    5. '):' → logprob: -6.159411907196045
    6. '```' → logprob: -6.284411907196045
    7. ')' → logprob: -6.534411907196045
    8. '+' → logprob: -6.784411907196045
    9. ' if' → logprob: -6.909411907196045
    10. ' print' → logprob: -7.409411907196045

Token 34: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2855624258518219
    2. ' print' → logprob: -1.6605623960494995
    3. 'print' (adapté à ' print') → logprob: -3.035562515258789
    4. '    ' → logprob: -5.410562515258789
    5. ':' → logprob: -5.910562515258789
    6. ' if' → logprob: -6.035562515258789
    7. 'if' → logprob: -8.785562515258789
    8. '       ' → logprob: -9.035562515258789
    9. '```' → logprob: -9.035562515258789
    10. ' :' → logprob: -9.660562515258789

Token 35: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.07907231897115707
    2. '(' → logprob: -2.5790722370147705
    3. '('' → logprob: -9.954071998596191
    4. '(f' → logprob: -9.954071998596191
    5. '(abs' → logprob: -9.954071998596191
    6. '((' → logprob: -10.829071998596191
    7. '("("' → logprob: -12.204071998596191
    8. 'value' → logprob: -12.204071998596191
    9. '(chr' → logprob: -13.204071998596191
    10. ' (' → logprob: -13.579071998596191

Token 36: '_current' (ID: 23981)
  Prédit: '_current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -5.407366916188039e-05
    2. '_curr' → logprob: -11.000054359436035
    3. ')_' → logprob: -11.250054359436035
    4. ')' → logprob: -11.500054359436035
    5. '_)' → logprob: -11.875054359436035
    6. '_cur' → logprob: -12.375054359436035
    7. '_value' → logprob: -13.750054359436035
    8. '_' → logprob: -14.500054359436035
    9. '_c' → logprob: -14.750054359436035
    10. ' _' → logprob: -15.625054359436035

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7146746763028204e-05
    2. '+' → logprob: -10.37503719329834
    3. ' )' → logprob: -13.00003719329834
    4. '   ' → logprob: -13.87503719329834
    5. ',' → logprob: -14.12503719329834
    6. ' +' → logprob: -14.62503719329834
    7. '))' → logprob: -14.62503719329834
    8. ')
' → logprob: -14.75003719329834
    9. '+)' → logprob: -16.000036239624023
    10. '')' → logprob: -16.500036239624023


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 35
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 27
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 77.14%
================================================================================
