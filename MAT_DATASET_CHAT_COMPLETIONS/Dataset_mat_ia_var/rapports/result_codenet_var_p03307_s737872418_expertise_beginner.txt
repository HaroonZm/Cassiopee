================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a = int(input())
if a % 2 == 0:
    print(a)
else:
    print(a * 2)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006926587666384876
    2. '(a' → logprob: -7.875692844390869
    3. 'a' → logprob: -9.125692367553711
    4. '```' → logprob: -9.625692367553711
    5. ''' → logprob: -9.875692367553711
    6. '`' → logprob: -10.375692367553711
    7. ' (' → logprob: -11.375692367553711
    8. '('' → logprob: -11.500692367553711
    9. ')' → logprob: -11.750692367553711
    10. '\(' → logprob: -12.250692367553711

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010478908196091652
    2. ')' → logprob: -5.010478973388672
    3. '()' → logprob: -5.760478973388672
    4. '())' → logprob: -8.510478973388672
    5. '(
' → logprob: -9.635478973388672
    6. '(()' → logprob: -9.760478973388672
    7. '('' → logprob: -10.260478973388672
    8. '```' → logprob: -10.385478973388672
    9. '<|end|>' → logprob: -10.510478973388672
    10. '("("' → logprob: -11.010478973388672

Token 5: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03258252143859863
    2. '*' → logprob: -3.7825825214385986
    3. '\n' → logprob: -5.2825822830200195
    4. '%' → logprob: -6.5325822830200195
    5. '+
' → logprob: -7.2825822830200195
    6. '\' → logprob: -7.7825822830200195
    7. '**' → logprob: -8.28258228302002
    8. 'a' → logprob: -8.28258228302002
    9. 'if' → logprob: -8.28258228302002
    10. '#' → logprob: -8.40758228302002

Token 6: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22713659703731537
    2. ' a' → logprob: -1.6021366119384766
    3. 'a' → logprob: -6.477136611938477
    4. '  ' → logprob: -8.852136611938477
    5. ' ' → logprob: -11.352136611938477
    6. ' )' → logprob: -11.727136611938477
    7. ' (' → logprob: -12.602136611938477
    8. ' not' → logprob: -12.852136611938477
    9. ''' → logprob: -12.977136611938477
    10. ' '' → logprob: -13.477136611938477

Token 7: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.25324225425720215
    2. ' ' → logprob: -1.7532422542572021
    3. ' <' → logprob: -3.753242254257202
    4. '>' → logprob: -4.503242492675781
    5. ' >=' → logprob: -4.878242492675781
    6. ' ==' → logprob: -5.128242492675781
    7. '  ' → logprob: -7.503242492675781
    8. ' <=' → logprob: -7.878242492675781
    9. ' %' → logprob: -8.128242492675781
    10. '<' → logprob: -8.253242492675781

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22546209394931793
    2. '2' → logprob: -1.6004620790481567
    3. '4' → logprob: -10.725461959838867
    4. '3' → logprob: -11.350461959838867
    5. '1' → logprob: -11.600461959838867
    6. '```' → logprob: -13.225461959838867
    7. ')' → logprob: -13.725461959838867
    8. '=' → logprob: -14.475461959838867
    9. ' ' → logprob: -14.725461959838867
    10. '>' → logprob: -14.850461959838867

Token 9: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004827465454582125
    2. ' ' → logprob: -8.000482559204102
    3. '3' → logprob: -9.000482559204102
    4. '4' → logprob: -11.375482559204102
    5. '10' → logprob: -12.250482559204102
    6. '5' → logprob: -12.625482559204102
    7. '1' → logprob: -12.750482559204102
    8. '7' → logprob: -14.250482559204102
    9. '```' → logprob: -15.625482559204102
    10. '100' → logprob: -15.875482559204102

Token 10: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08040036261081696
    2. '==' → logprob: -2.5804004669189453
    3. '=' → logprob: -7.330400466918945
    4. ' !=' → logprob: -7.705400466918945
    5. ' =' → logprob: -8.455400466918945
    6. ')' → logprob: -9.330400466918945
    7. ' ' → logprob: -9.580400466918945
    8. '!=' → logprob: -10.830400466918945
    9. ':' → logprob: -12.330400466918945
    10. '>' → logprob: -13.330400466918945

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0699385479092598
    2. '0' → logprob: -2.6949386596679688
    3. '1' → logprob: -14.319938659667969
    4. ' ' → logprob: -14.444938659667969
    5. ')' → logprob: -14.819938659667969
    6. '<|end|>' → logprob: -14.944938659667969
    7. '2' → logprob: -15.444938659667969
    8. '```' → logprob: -16.69493865966797
    9. '  ' → logprob: -17.75743865966797
    10. '=' → logprob: -18.31993865966797

Token 12: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007609228603541851
    2. ' ' → logprob: -4.8826093673706055
    3. '1' → logprob: -12.757609367370605
    4. '2' → logprob: -15.507609367370605
    5. '```' → logprob: -18.13260841369629
    6. ' ' → logprob: -19.13260841369629
    7. '4' → logprob: -19.75760841369629
    8. '  ' → logprob: -19.88260841369629
    9. ')' → logprob: -20.00760841369629
    10. '==' → logprob: -20.07010841369629

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.173704271830502e-06
    2. ' :' → logprob: -13.62500286102295
    3. ':**' → logprob: -13.87500286102295
    4. '':'' → logprob: -15.25000286102295
    5. '':' → logprob: -15.50000286102295
    6. '):' → logprob: -15.87500286102295
    7. '>:' → logprob: -16.000003814697266
    8. ':
' → logprob: -16.250003814697266
    9. '":"' → logprob: -17.000003814697266
    10. '：' → logprob: -17.125003814697266

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027460085228085518
    2. ' print' → logprob: -3.9024600982666016
    3. 'print' → logprob: -5.027460098266602
    4. '\n' → logprob: -8.402460098266602
    5. '	print' → logprob: -10.652460098266602
    6. '    
' → logprob: -10.777460098266602
    7. '\' → logprob: -10.902460098266602
    8. ''' → logprob: -11.277460098266602
    9. ' ' → logprob: -11.777460098266602
    10. '    ' → logprob: -11.777460098266602

Token 15: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1646886020898819
    2. 'print' (adapté à ' print') → logprob: -1.9146885871887207
    3. '   ' → logprob: -5.414688587188721
    4. '    ' → logprob: -13.789689064025879
    5. '	print' → logprob: -13.914689064025879
    6. ' ' → logprob: -14.039689064025879
    7. ' pass' → logprob: -15.289689064025879
    8. '       ' → logprob: -15.414689064025879
    9. '```' → logprob: -15.539689064025879
    10. '\' → logprob: -16.789688110351562

Token 16: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009447572752833366
    2. '("' → logprob: -4.8844475746154785
    3. '('' → logprob: -6.7594475746154785
    4. '(a' → logprob: -7.6344475746154785
    5. '("("' → logprob: -8.88444709777832
    6. '()' → logprob: -9.88444709777832
    7. '("")' → logprob: -13.50944709777832
    8. '(True' → logprob: -13.50944709777832
    9. 'a' → logprob: -13.75944709777832
    10. '(
' → logprob: -13.75944709777832

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7954958821064793e-05
    2. '*' → logprob: -12.000018119812012
    3. '))' → logprob: -12.000018119812012
    4. ')
' → logprob: -13.500018119812012
    5. '**' → logprob: -14.000018119812012
    6. ' )' → logprob: -14.250018119812012
    7. '+' → logprob: -14.500018119812012
    8. '`)' → logprob: -15.000018119812012
    9. ')`' → logprob: -15.000018119812012
    10. ' ' → logprob: -15.250018119812012

Token 18: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03284371644258499
    2. ' else' → logprob: -3.657843828201294
    3. 'e' → logprob: -5.782843589782715
    4. ')' → logprob: -6.407843589782715
    5. '```' → logprob: -6.907843589782715
    6. '<|end|>' → logprob: -8.407843589782715
    7. ' ' → logprob: -8.657843589782715
    8. 'elif' → logprob: -8.782843589782715
    9. ':' → logprob: -9.532843589782715
    10. '_else' → logprob: -10.657843589782715

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.4987974029500037e-05
    2. ':
' → logprob: -11.000024795532227
    3. '):' → logprob: -12.625024795532227
    4. '():' → logprob: -13.125024795532227
    5. ' :' → logprob: -13.625024795532227
    6. '   ' → logprob: -14.500024795532227
    7. ':**' → logprob: -14.750024795532227
    8. '':' → logprob: -15.250024795532227
    9. '>:' → logprob: -15.875024795532227
    10. '":' → logprob: -16.125024795532227

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04729700833559036
    2. '    ' → logprob: -3.1722970008850098
    3. 'print' → logprob: -7.17229700088501
    4. '```' → logprob: -7.17229700088501
    5. '    
' → logprob: -7.29729700088501
    6. ' print' → logprob: -7.29729700088501
    7. '     
' → logprob: -8.797297477722168
    8. ' ' → logprob: -8.797297477722168
    9. 'a' → logprob: -8.922297477722168
    10. '(' → logprob: -9.047297477722168

Token 21: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4382691979408264
    2. 'print' (adapté à ' print') → logprob: -1.0632691383361816
    3. '   ' → logprob: -4.688269138336182
    4. '    ' → logprob: -8.56326961517334
    5. ' pass' → logprob: -9.43826961517334
    6. '```' → logprob: -10.93826961517334
    7. 'pass' → logprob: -11.31326961517334
    8. ' None' → logprob: -11.68826961517334
    9. ' a' → logprob: -12.56326961517334
    10. ' ' → logprob: -13.68826961517334

Token 22: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.694301187992096
    2. '(a' → logprob: -0.694301187992096
    3. '()' → logprob: -6.819301128387451
    4. '('' → logprob: -10.44430160522461
    5. '("' → logprob: -12.06930160522461
    6. '((' → logprob: -12.19430160522461
    7. '(False' → logprob: -12.44430160522461
    8. '(abs' → logprob: -12.44430160522461
    9. '(None' → logprob: -13.06930160522461
    10. '(-' → logprob: -13.19430160522461

Token 23: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23173324763774872
    2. ' +' → logprob: -2.1067333221435547
    3. ')' → logprob: -2.4817333221435547
    4. '-' → logprob: -6.731733322143555
    5. '+)' → logprob: -9.356733322143555
    6. '%' → logprob: -9.481733322143555
    7. ' -' → logprob: -9.731733322143555
    8. ' )' → logprob: -9.856733322143555
    9. ' ' → logprob: -9.981733322143555
    10. '))' → logprob: -9.981733322143555

Token 24: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42319926619529724
    2. '3' → logprob: -1.2981992959976196
    3. ' ' → logprob: -2.67319917678833
    4. 'a' → logprob: -5.92319917678833
    5. ' a' → logprob: -8.173199653625488
    6. '1' → logprob: -10.798199653625488
    7. '5' → logprob: -11.923199653625488
    8. '   ' → logprob: -12.298199653625488
    9. '  ' → logprob: -13.048199653625488
    10. '4' → logprob: -13.798199653625488

Token 25: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.05707163363695145
    2. '2' → logprob: -2.9320716857910156
    3. 'a' → logprob: -6.182071685791016
    4. ' ' → logprob: -9.182071685791016
    5. '1' → logprob: -11.682071685791016
    6. '5' → logprob: -12.557071685791016
    7. '-' → logprob: -12.807071685791016
    8. ' a' → logprob: -13.682071685791016
    9. '7' → logprob: -15.057071685791016
    10. '4' → logprob: -15.057071685791016

Token 26: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.625000953674316
    3. '))' → logprob: -15.000000953674316
    4. ')
' → logprob: -15.625000953674316
    5. '')' → logprob: -16.625001907348633
    6. '`)' → logprob: -17.375001907348633
    7. '*)' → logprob: -17.875001907348633
    8. '*' → logprob: -18.000001907348633
    9. ')a' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 24
Tokens correctement prédits (1ère position, stricte): 11
Tokens correctement prédits (1ère position, avec adaptation): 11
Tokens correctement prédits (top 10): 21
Précision stricte (1ère position): 45.83%
Précision adaptée (1ère position): 45.83%
Précision (top 10): 87.50%
================================================================================
