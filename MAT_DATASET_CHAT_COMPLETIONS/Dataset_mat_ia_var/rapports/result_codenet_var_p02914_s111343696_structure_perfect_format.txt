================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import numpy as np

N = int(input())
A = np.array(list(map(int, input().split())), dtype=np.int64)

xor = np.bitwise_xor.reduce(A)

odd_digit = [1 << i for i in range(60) if xor & (1 << i)]

for i in odd_digit:
    A = A & (~i)

for i in range(60, -1, -1):
    one_digit = (A & (1 << i) != 0)
    pivot_flag = np.where(one_digit & (A < (1 << (i + 1))))[0]
    if len(pivot_flag) == 0:
        continue
    p = pivot_flag[0]
    pivot = A[p]
    A[one_digit] ^= pivot
    A[p] = pivot

res = sum(odd_digit) + 2 * (np.bitwise_xor.reduce(A))
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0017933472990989685
    2. 'np' → logprob: -6.376793384552002
    3. ' ' → logprob: -9.501792907714844
    4. ' numpy' → logprob: -11.251792907714844
    5. ' ' → logprob: -12.751792907714844
    6. 'numpy' → logprob: -15.501792907714844
    7. '_np' → logprob: -16.126792907714844
    8. ' n' → logprob: -16.626792907714844
    9. '```' → logprob: -17.376792907714844
    10. ' npc' → logprob: -17.626792907714844

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6013081073760986
    2. '\n' → logprob: -1.4763081073760986
    3. 'newline' → logprob: -2.3513081073760986
    4. '\' → logprob: -3.2263081073760986
    5. 'import' → logprob: -3.3513081073760986
    6. '<|end|>' → logprob: -3.8513081073760986
    7. '```' → logprob: -4.4763078689575195
    8. '
' → logprob: -5.4763078689575195
    9. '[' → logprob: -5.7263078689575195
    10. '<|end|>' → logprob: -6.4763078689575195

Token 5: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09447110444307327
    2. 'import' → logprob: -3.3444712162017822
    3. '```' → logprob: -3.7194712162017822
    4. 'as' → logprob: -4.344470977783203
    5. '<|end|>' → logprob: -5.594470977783203
    6. ',' → logprob: -5.719470977783203
    7. '[' → logprob: -5.969470977783203
    8. '#' → logprob: -6.344470977783203
    9. 'a' → logprob: -6.469470977783203
    10. '`' → logprob: -7.094470977783203

Token 6: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.021108264103531837
    2. 'P' → logprob: -4.146108150482178
    3. 'umpy' → logprob: -6.646108150482178
    4. '.' → logprob: -6.771108150482178
    5. '=' → logprob: -6.896108150482178
    6. ' =' → logprob: -7.646108150482178
    7. 'um' → logprob: -7.771108150482178
    8. '_' → logprob: -8.396108627319336
    9. ' ' → logprob: -9.146108627319336
    10. ',' → logprob: -9.771108627319336

Token 7: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0114979837089777
    2. '10' → logprob: -4.761497974395752
    3. '100' → logprob: -6.011497974395752
    4. ' np' → logprob: -8.13649845123291
    5. '50' → logprob: -10.26149845123291
    6. '20' → logprob: -10.26149845123291
    7. '5' → logprob: -10.63649845123291
    8. '1' → logprob: -11.01149845123291
    9. 'np' → logprob: -11.63649845123291
    10. '32' → logprob: -12.26149845123291

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017156045883893967
    2. '('' → logprob: -4.14215612411499
    3. '(np' → logprob: -7.51715612411499
    4. '("' → logprob: -7.89215612411499
    5. ''' → logprob: -9.392155647277832
    6. '("("' → logprob: -10.267155647277832
    7. '(`' → logprob: -10.642155647277832
    8. '(N' → logprob: -11.017155647277832
    9. '()' → logprob: -11.392155647277832
    10. '`' → logprob: -11.892155647277832

Token 9: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11767210811376572
    2. ')' → logprob: -2.6176722049713135
    3. '()' → logprob: -3.4926722049713135
    4. '())' → logprob: -5.242671966552734
    5. '('' → logprob: -7.367671966552734
    6. '(
' → logprob: -7.492671966552734
    7. '))' → logprob: -7.867671966552734
    8. '(

' → logprob: -8.992671966552734
    9. '")' → logprob: -9.117671966552734
    10. '`)' → logprob: -9.492671966552734

Token 10: 'A' (ID: 32)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5761852264404297
    2. 'data' → logprob: -1.8261852264404297
    3. 'a' → logprob: -1.9511852264404297
    4. 'array' → logprob: -2.9511852264404297
    5. 'x' → logprob: -3.0761852264404297
    6. 'A' → logprob: -4.07618522644043
    7. ' A' → logprob: -5.82618522644043
    8. 'for' → logprob: -6.32618522644043
    9. 'matrix' → logprob: -6.32618522644043
    10. ')' → logprob: -6.57618522644043

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0047409068793058395
    2. '.' → logprob: -5.5047407150268555
    3. '[np' → logprob: -8.254740715026855
    4. '[]' → logprob: -8.879740715026855
    5. '[A' → logprob: -9.254740715026855
    6. '[:]' → logprob: -10.254740715026855
    7. ')' → logprob: -10.504740715026855
    8. '\[' → logprob: -10.629740715026855
    9. '[...]' → logprob: -11.004740715026855
    10. '+' → logprob: -11.254740715026855

Token 12: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0021860685665160418
    2. 'np' → logprob: -6.127186298370361
    3. '(np' → logprob: -14.502185821533203
    4. '[np' → logprob: -15.877185821533203
    5. ' ' → logprob: -16.752185821533203
    6. '=np' → logprob: -17.002185821533203
    7. ' A' → logprob: -17.502185821533203
    8. ' numpy' → logprob: -17.752185821533203
    9. ' ' → logprob: -18.002185821533203
    10. '_np' → logprob: -18.502185821533203

Token 13: '.array' (ID: 14557)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2510911524295807
    2. '.array' → logprob: -1.6260911226272583
    3. '.zeros' → logprob: -3.876091241836548
    4. '.arange' → logprob: -6.376091003417969
    5. '.random' → logprob: -7.251091003417969
    6. ' .' → logprob: -8.001091003417969
    7. '.ones' → logprob: -8.126091003417969
    8. '.empty' → logprob: -8.251091003417969
    9. '.full' → logprob: -8.501091003417969
    10. '.linspace' → logprob: -8.501091003417969

Token 14: '(list' (ID: 13116)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014330153353512287
    2. '([' → logprob: -4.6393303871154785
    3. '(np' → logprob: -5.6393303871154785
    4. '((' → logprob: -8.13932991027832
    5. '(input' → logprob: -8.38932991027832
    6. '([]' → logprob: -8.88932991027832
    7. '([(' → logprob: -9.88932991027832
    8. '([...' → logprob: -10.51432991027832
    9. '("("' → logprob: -10.63932991027832
    10. '([[' → logprob: -10.76432991027832

Token 15: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0067756460048258305
    2. '(' → logprob: -5.006775856018066
    3. '(input' → logprob: -9.881775856018066
    4. '(np' → logprob: -12.756775856018066
    5. '(int' → logprob: -13.006775856018066
    6. 'map' → logprob: -13.631775856018066
    7. '(eval' → logprob: -14.131775856018066
    8. '(range' → logprob: -14.381775856018066
    9. ' map' → logprob: -14.631775856018066
    10. '(
' → logprob: -15.256775856018066

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005949064157903194
    2. '(' → logprob: -5.130949020385742
    3. 'int' → logprob: -12.005949020385742
    4. '(float' → logprob: -12.755949020385742
    5. '(
' → logprob: -12.880949020385742
    6. '(eval' → logprob: -13.255949020385742
    7. '(str' → logprob: -13.630949020385742
    8. '<int' → logprob: -13.755949020385742
    9. '(lambda' → logprob: -14.005949020385742
    10. '(input' → logprob: -14.005949020385742

Token 17: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006819685455411673
    2. ',input' → logprob: -5.381819725036621
    3. '(' → logprob: -6.631819725036621
    4. 'input' → logprob: -7.131819725036621
    5. ',' → logprob: -10.381819725036621
    6. ' input' → logprob: -11.256819725036621
    7. '=input' → logprob: -11.756819725036621
    8. ')))' → logprob: -12.131819725036621
    9. ')' → logprob: -12.256819725036621
    10. ' (' → logprob: -12.256819725036621

Token 18: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3133293390274048
    2. ' input' → logprob: -1.3133293390274048
    3. '(input' → logprob: -9.938329696655273
    4. ' ' → logprob: -11.688329696655273
    5. ',input' → logprob: -11.813329696655273
    6. '	input' → logprob: -13.938329696655273
    7. '=input' → logprob: -14.313329696655273
    8. ')' → logprob: -14.938329696655273
    9. '[input' → logprob: -15.188329696655273
    10. '_input' → logprob: -15.563329696655273

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005981888971291482
    2. '()' → logprob: -8.000597953796387
    3. '())))' → logprob: -8.625597953796387
    4. '()))' → logprob: -9.500597953796387
    5. ')))' → logprob: -13.125597953796387
    6. '(' → logprob: -13.250597953796387
    7. '())' → logprob: -13.375597953796387
    8. '()));' → logprob: -14.375597953796387
    9. '.split' → logprob: -14.625597953796387
    10. '()),' → logprob: -15.000597953796387

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00027933192905038595
    2. 'strip' → logprob: -8.250279426574707
    3. 'rstrip' → logprob: -11.000279426574707
    4. ' split' → logprob: -14.125279426574707
    5. '(split' → logprob: -14.500279426574707
    6. 'spl' → logprob: -16.75027847290039
    7. '.split' → logprob: -17.25027847290039
    8. 's' → logprob: -17.87527847290039
    9. 'sp' → logprob: -18.50027847290039
    10. '().' → logprob: -19.75027847290039

Token 21: '()' (ID: 416)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.10198629647493362
    2. ')' → logprob: -2.6019864082336426
    3. '(' → logprob: -4.351986408233643
    4. '))' → logprob: -5.351986408233643
    5. '())))' → logprob: -5.476986408233643
    6. '))))' → logprob: -7.601986408233643
    7. '())' → logprob: -8.601985931396484
    8. '()))' → logprob: -8.976985931396484
    9. '')))' → logprob: -9.476985931396484
    10. '()' → logprob: -9.476985931396484

Token 22: ')),' (ID: 12098)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.004434747621417046
    2. '))' → logprob: -6.129434585571289
    3. ')' → logprob: -6.254434585571289
    4. ')),' → logprob: -8.879434585571289
    5. '))))' → logprob: -8.879434585571289
    6. '),' → logprob: -10.629434585571289
    7. '))),' → logprob: -11.879434585571289
    8. ')))
' → logprob: -12.129434585571289
    9. '')))' → logprob: -12.254434585571289
    10. '))).' → logprob: -13.254434585571289

Token 23: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.06691394001245499
    2. ' dtype' → logprob: -2.8169138431549072
    3. ')' → logprob: -5.566914081573486
    4. 'nd' → logprob: -7.441914081573486
    5. ' nd' → logprob: -8.066913604736328
    6. 'np' → logprob: -9.191913604736328
    7. ' np' → logprob: -10.441913604736328
    8. ' )' → logprob: -10.691913604736328
    9. 'shape' → logprob: -11.191913604736328
    10. 'int' → logprob: -11.441913604736328

Token 24: '=np' (ID: 40593)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12756483256816864
    2. '=np' → logprob: -2.1275649070739746
    3. '=int' → logprob: -7.377564907073975
    4. '=
' → logprob: -12.377564430236816
    5. '=

' → logprob: -12.752564430236816
    6. '=n' → logprob: -13.127564430236816
    7. ')=' → logprob: -13.752564430236816
    8. '=`' → logprob: -14.627564430236816
    9. '=torch' → logprob: -14.752564430236816
    10. '＝' → logprob: -16.502565383911133

Token 25: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.026975298300385475
    2. '.' → logprob: -3.651975393295288
    3. '.ndarray' → logprob: -7.901975154876709
    4. '.uint' → logprob: -9.276975631713867
    5. '.float' → logprob: -9.776975631713867
    6. '.i' → logprob: -10.151975631713867
    7. '.dtype' → logprob: -10.776975631713867
    8. '.INT' → logprob: -10.901975631713867
    9. '.Int' → logprob: -11.026975631713867
    10. ' .' → logprob: -11.151975631713867

Token 26: '64' (ID: 2220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.12694500386714935
    2. '64' → logprob: -2.1269450187683105
    3. '_' → logprob: -11.876944541931152
    4. '3' → logprob: -12.376944541931152
    5. '6' → logprob: -12.626944541931152
    6. '8' → logprob: -14.001944541931152
    7. 'c' → logprob: -14.001944541931152
    8. 'p' → logprob: -15.251944541931152
    9. ')' → logprob: -15.501944541931152
    10. '16' → logprob: -15.876944541931152

Token 27: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.300083648762666e-05
    2. '))' → logprob: -9.875053405761719
    3. ' )' → logprob: -14.125053405761719
    4. '),' → logprob: -15.750053405761719
    5. '`)' → logprob: -15.750053405761719
    6. ')`' → logprob: -16.12505340576172
    7. ')))' → logprob: -16.37505340576172
    8. ')
' → logprob: -16.37505340576172
    9. '[' → logprob: -16.75005340576172
    10. '')' → logprob: -16.75005340576172

Token 28: 'xor' (ID: 114252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.559057593345642
    2. '[' → logprob: -1.809057593345642
    3. 's' → logprob: -1.809057593345642
    4. '+' → logprob: -2.5590577125549316
    5. 'a' → logprob: -2.6840577125549316
    6. '.' → logprob: -3.0590577125549316
    7. 'x' → logprob: -3.1840577125549316
    8. 'A' → logprob: -3.6840577125549316
    9. '*' → logprob: -3.9340577125549316
    10. 'max' → logprob: -3.9340577125549316

Token 29: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3894450068473816
    2. '_sum' → logprob: -1.7644450664520264
    3. '_val' → logprob: -2.1394450664520264
    4. '_result' → logprob: -4.514444828033447
    5. 's' → logprob: -4.639444828033447
    6. '_value' → logprob: -5.264444828033447
    7. '(' → logprob: -5.889444828033447
    8. '_values' → logprob: -7.139444828033447
    9. '_array' → logprob: -7.139444828033447
    10. '_vals' → logprob: -7.514444828033447

Token 30: ' np' (ID: 5374)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33352696895599365
    2. 'A' → logprob: -1.4585269689559937
    3. ' ' → logprob: -3.333527088165283
    4. ' A' → logprob: -4.583527088165283
    5. 'np' → logprob: -5.458527088165283
    6. ' np' → logprob: -7.083527088165283
    7. '	A' → logprob: -12.083526611328125
    8. '(A' → logprob: -12.458526611328125
    9. '`' → logprob: -12.458526611328125
    10. '   ' → logprob: -12.458526611328125

Token 31: '.bit' (ID: 61866)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06602058559656143
    2. '.bit' → logprob: -3.0660204887390137
    3. '.ndarray' → logprob: -4.566020488739014
    4. '.zeros' → logprob: -5.941020488739014
    5. '.array' → logprob: -6.941020488739014
    6. '.concatenate' → logprob: -7.191020488739014
    7. '.empty' → logprob: -7.941020488739014
    8. '.sum' → logprob: -8.066020965576172
    9. '.asarray' → logprob: -8.191020965576172
    10. '.full' → logprob: -8.316020965576172

Token 32: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.0007225605077110231
    2. '_x' → logprob: -7.625722408294678
    3. 'xor' → logprob: -8.375722885131836
    4. 'w' → logprob: -13.125722885131836
    5. 'wis' → logprob: -13.875722885131836
    6. '_' → logprob: -14.875722885131836
    7. 'x' → logprob: -15.375722885131836
    8. '\' → logprob: -15.625722885131836
    9. '_w' → logprob: -15.875722885131836
    10. 's' → logprob: -15.875722885131836

Token 33: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.128163257315464e-07
    2. '_and' → logprob: -16.25
    3. '_or' → logprob: -16.375
    4. 'xor' → logprob: -17.125
    5. '_' → logprob: -20.375
    6. '_^' → logprob: -21.0
    7. '\' → logprob: -21.25
    8. '_op' → logprob: -21.375
    9. '_y' → logprob: -21.375
    10. '_a' → logprob: -21.625

Token 34: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -2.696889623621246e-06
    2. '_or' → logprob: -13.50000286102295
    3. 'OR' → logprob: -15.00000286102295
    4. 'nor' → logprob: -15.75000286102295
    5. 'ors' → logprob: -16.250001907348633
    6. 'ror' → logprob: -16.375001907348633
    7. ' or' → logprob: -16.375001907348633
    8. 'orl' → logprob: -16.750001907348633
    9. '   ' → logprob: -16.875001907348633
    10. '-' → logprob: -16.875001907348633

Token 35: '.reduce' (ID: 49441)
  Prédit: '.reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -0.3266117572784424
    2. '(' → logprob: -1.5766117572784424
    3. '(A' → logprob: -2.7016117572784424
    4. '.' → logprob: -6.326611518859863
    5. '.acc' → logprob: -7.326611518859863
    6. '(np' → logprob: -7.326611518859863
    7. '(x' → logprob: -7.576611518859863
    8. '(a' → logprob: -7.951611518859863
    9. '(N' → logprob: -8.076611518859863
    10. '(.' → logprob: -8.576611518859863

Token 36: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.002488737925887108
    2. '(' → logprob: -6.002488613128662
    3. '(N' → logprob: -11.87748908996582
    4. '(a' → logprob: -12.75248908996582
    5. '(x' → logprob: -14.00248908996582
    6. '(
' → logprob: -14.50248908996582
    7. '((' → logprob: -15.00248908996582
    8. ' (' → logprob: -15.00248908996582
    9. '(array' → logprob: -15.00248908996582
    10. '(np' → logprob: -15.12748908996582

Token 37: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010032468708232045
    2. '))' → logprob: -9.250100135803223
    3. ')
' → logprob: -13.500100135803223
    4. ')`' → logprob: -14.250100135803223
    5. ',' → logprob: -14.875100135803223
    6. ')))' → logprob: -15.000100135803223
    7. ' )' → logprob: -15.250100135803223
    8. '),' → logprob: -15.750100135803223
    9. '`)' → logprob: -16.00010108947754
    10. ')**' → logprob: -16.00010108947754

Token 38: 'odd' (ID: 18303)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46468278765678406
    2. 'print' → logprob: -1.9646828174591064
    3. ')' → logprob: -2.3396828174591064
    4. ' if' → logprob: -2.9646828174591064
    5. '(' → logprob: -3.5896828174591064
    6. ' ' → logprob: -4.214682579040527
    7. 'for' → logprob: -5.089682579040527
    8. '\n' → logprob: -5.464682579040527
    9. '+' → logprob: -5.714682579040527
    10. '*' → logprob: -5.714682579040527

Token 39: '_digit' (ID: 119592)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14989154040813446
    2. '(' → logprob: -2.2748916149139404
    3. 's' → logprob: -4.274891376495361
    4. '_sum' → logprob: -5.274891376495361
    5. '_count' → logprob: -5.774891376495361
    6. ' =' → logprob: -5.899891376495361
    7. '_mask' → logprob: -6.524891376495361
    8. '=' → logprob: -6.649891376495361
    9. '_s' → logprob: -6.899891376495361
    10. '()' → logprob: -7.024891376495361

Token 40: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05158881098031998
    2. '_s' → logprob: -3.926588773727417
    3. '_count' → logprob: -4.301589012145996
    4. '_sum' → logprob: -4.301589012145996
    5. '_counts' → logprob: -6.926589012145996
    6. ' =' → logprob: -7.426589012145996
    7. '_' → logprob: -7.676589012145996
    8. '_mask' → logprob: -7.676589012145996
    9. 'sum' → logprob: -8.301589012145996
    10. '=' → logprob: -8.926589012145996

Token 41: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3068022727966309
    2. 'xor' → logprob: -1.4318022727966309
    3. '[]' → logprob: -2.056802272796631
    4. 'np' → logprob: -2.556802272796631
    5. 'False' → logprob: -2.681802272796631
    6. '[x' → logprob: -3.056802272796631
    7. '[' → logprob: -3.681802272796631
    8. '(x' → logprob: -3.806802272796631
    9. '1' → logprob: -4.306802272796631
    10. 'str' → logprob: -4.431802272796631

Token 42: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8387864232063293
    2. 'i' → logprob: -1.2137863636016846
    3. 'int' → logprob: -2.3387863636016846
    4. 'd' → logprob: -3.2137863636016846
    5. '1' → logprob: -3.3387863636016846
    6. 'str' → logprob: -3.5887863636016846
    7. '0' → logprob: -3.5887863636016846
    8. 'n' → logprob: -4.838786602020264
    9. 'False' → logprob: -4.963786602020264
    10. ']' → logprob: -5.588786602020264

Token 43: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47224530577659607
    2. ']' → logprob: -1.2222453355789185
    3. ')]' → logprob: -3.222245216369629
    4. ')' → logprob: -4.847245216369629
    5. '0' → logprob: -5.097245216369629
    6. '<<' → logprob: -5.472245216369629
    7. '7' → logprob: -5.597245216369629
    8. '3' → logprob: -5.722245216369629
    9. '2' → logprob: -5.972245216369629
    10. '1' → logprob: -6.097245216369629

Token 44: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23810270428657532
    2. ' i' → logprob: -1.613102674484253
    3. '1' → logprob: -6.238102912902832
    4. 'd' → logprob: -6.363102912902832
    5. ' ' → logprob: -6.488102912902832
    6. '9' → logprob: -6.613102912902832
    7. '(' → logprob: -6.738102912902832
    8. '0' → logprob: -6.863102912902832
    9. 'x' → logprob: -7.238102912902832
    10. ' d' → logprob: -7.738102912902832

Token 45: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2052932232618332
    2. ')' → logprob: -1.8302931785583496
    3. 'for' → logprob: -4.20529317855835
    4. ' ' → logprob: -4.83029317855835
    5. ']' → logprob: -6.83029317855835
    6. ' )' → logprob: -7.58029317855835
    7. ')]' → logprob: -8.080293655395508
    8. '<|end|>' → logprob: -8.330293655395508
    9. '	for' → logprob: -9.705293655395508
    10. ' ]' → logprob: -10.580293655395508

Token 46: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0006965887732803822
    2. 'range' → logprob: -7.750696659088135
    3. ' i' → logprob: -8.250696182250977
    4. ' ' → logprob: -13.125696182250977
    5. '	range' → logprob: -13.250696182250977
    6. 'i' → logprob: -14.500696182250977
    7. ' xrange' → logprob: -15.250696182250977
    8. ' in' → logprob: -16.500696182250977
    9. '(range' → logprob: -16.625696182250977
    10. '_range' → logprob: -17.250696182250977

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0189165361225605
    2. 'in' → logprob: -4.018916606903076
    3. ' ' → logprob: -7.643916606903076
    4. ' range' → logprob: -8.643916130065918
    5. 'range' → logprob: -9.143916130065918
    6. 'n' → logprob: -13.893916130065918
    7. ' xrange' → logprob: -14.643916130065918
    8. '<|end|>' → logprob: -14.768916130065918
    9. '  ' → logprob: -15.018916130065918
    10. ' for' → logprob: -15.268916130065918

Token 48: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005236837547272444
    2. ' range' → logprob: -5.255236625671387
    3. 'np' → logprob: -13.505236625671387
    4. 're' → logprob: -14.130236625671387
    5. ' ' → logprob: -15.005236625671387
    6. '	range' → logprob: -15.005236625671387
    7. '[' → logprob: -15.880236625671387
    8. '   ' → logprob: -17.130237579345703
    9. ' np' → logprob: -17.880237579345703
    10. '  ' → logprob: -17.880237579345703

Token 49: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006121824961155653
    2. '64' → logprob: -6.131121635437012
    3. '32' → logprob: -7.006121635437012
    4. ' (' → logprob: -7.006121635437012
    5. '20' → logprob: -7.506121635437012
    6. '40' → logprob: -7.631121635437012
    7. '60' → logprob: -7.756121635437012
    8. '31' → logprob: -9.006121635437012
    9. '16' → logprob: -9.256121635437012
    10. ' ' → logprob: -9.631121635437012

Token 50: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.17070424556732178
    2. '64' → logprob: -2.4207043647766113
    3. '61' → logprob: -3.2957043647766113
    4. '63' → logprob: -4.295704364776611
    5. '6' → logprob: -5.670704364776611
    6. '40' → logprob: -6.295704364776611
    7. '31' → logprob: -6.420704364776611
    8. '62' → logprob: -6.420704364776611
    9. '7' → logprob: -6.545704364776611
    10. '20' → logprob: -6.670704364776611

Token 51: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.35782381892204285
    2. ')' → logprob: -1.2328238487243652
    3. ' )' → logprob: -4.732823848724365
    4. ' if' → logprob: -7.857823848724365
    5. ']' → logprob: -9.607823371887207
    6. ',' → logprob: -10.232823371887207
    7. 'if' → logprob: -10.857823371887207
    8. '+' → logprob: -12.232823371887207
    9. ')][' → logprob: -12.357823371887207
    10. ' ]' → logprob: -13.107823371887207

Token 52: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3675004541873932
    2. ']' → logprob: -1.2425004243850708
    3. ' ]' → logprob: -4.742500305175781
    4. 'if' → logprob: -5.242500305175781
    5. ')]' → logprob: -5.992500305175781
    6. ')' → logprob: -6.242500305175781
    7. ' )' → logprob: -8.242500305175781
    8. '])' → logprob: -9.492500305175781
    9. ' ' → logprob: -10.117500305175781
    10. ' ])' → logprob: -11.492500305175781

Token 53: ' xor' (ID: 106402)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0902116298675537
    2. '(x' → logprob: -1.2152116298675537
    3. ' xor' → logprob: -1.2152116298675537
    4. 'xor' → logprob: -2.7152116298675537
    5. ' ' → logprob: -7.090211868286133
    6. '((' → logprob: -7.215211868286133
    7. ' ((' → logprob: -7.215211868286133
    8. '(' → logprob: -7.715211868286133
    9. 'x' → logprob: -8.590211868286133
    10. ' x' → logprob: -8.715211868286133

Token 54: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.03013099916279316
    2. ' &' → logprob: -3.5301311016082764
    3. '>>' → logprob: -8.405131340026855
    4. '&i' → logprob: -9.905131340026855
    5. '&amp' → logprob: -10.780131340026855
    6. '&(' → logprob: -10.905131340026855
    7. '>' → logprob: -11.280131340026855
    8. '&
' → logprob: -11.280131340026855
    9. '&gt' → logprob: -11.405131340026855
    10. '&r' → logprob: -11.780131340026855

Token 55: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47420716285705566
    2. '(' → logprob: -0.9742071628570557
    3. '1' → logprob: -9.099206924438477
    4. ' ' → logprob: -10.974206924438477
    5. '{' → logprob: -14.724206924438477
    6. '[' → logprob: -15.849206924438477
    7. '   ' → logprob: -16.349206924438477
    8. ')' → logprob: -16.474206924438477
    9. ' {' → logprob: -16.474206924438477
    10. '(Bit' → logprob: -16.599206924438477

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009167305193841457
    2. '(' → logprob: -4.759167194366455
    3. ' ' → logprob: -7.634167194366455
    4. ' (' → logprob: -9.634167671203613
    5. '   ' → logprob: -13.259167671203613
    6. '[' → logprob: -15.259167671203613
    7. '{' → logprob: -15.384167671203613
    8. '2' → logprob: -15.509167671203613
    9. '<' → logprob: -15.509167671203613
    10. '<<' → logprob: -15.759167671203613

Token 57: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.04368649795651436
    2. '<' → logprob: -3.6686863899230957
    3. ' <<' → logprob: -4.293686389923096
    4. '1' → logprob: -5.793686389923096
    5. ' ' → logprob: -7.918686389923096
    6. '>' → logprob: -9.543686866760254
    7. '>>' → logprob: -11.168686866760254
    8. ')' → logprob: -11.293686866760254
    9. '&lt' → logprob: -11.543686866760254
    10. ' <' → logprob: -11.668686866760254

Token 58: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014165629632771015
    2. ' i' → logprob: -4.26416540145874
    3. ' ' → logprob: -14.014165878295898
    4. '	i' → logprob: -14.639165878295898
    5. '(i' → logprob: -15.389165878295898
    6. '   ' → logprob: -15.389165878295898
    7. '1' → logprob: -16.2641658782959
    8. ')i' → logprob: -16.5141658782959
    9. '(' → logprob: -16.8891658782959
    10. ')' → logprob: -17.2641658782959

Token 59: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00417313352227211
    2. ')' → logprob: -5.629173278808594
    3. ' )' → logprob: -7.879173278808594
    4. '!=' → logprob: -9.504173278808594
    5. ']' → logprob: -10.504173278808594
    6. ')!=' → logprob: -10.629173278808594
    7. ')>' → logprob: -10.879173278808594
    8. ' !=' → logprob: -11.129173278808594
    9. '>]' → logprob: -11.504173278808594
    10. ')]
' → logprob: -12.629173278808594

Token 60: 'for' (ID: 1938)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03787311539053917
    2. ']' → logprob: -4.287873268127441
    3. '[' → logprob: -4.537873268127441
    4. ':
' → logprob: -5.037873268127441
    5. 'if' → logprob: -6.537873268127441
    6. ' ' → logprob: -7.037873268127441
    7. '0' → logprob: -7.287873268127441
    8. ')' → logprob: -7.412873268127441
    9. '
' → logprob: -7.537873268127441
    10. '(' → logprob: -8.162873268127441

Token 61: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7601366639137268
    2. ' a' → logprob: -1.760136604309082
    3. ' x' → logprob: -2.135136604309082
    4. ' odd' → logprob: -3.135136604309082
    5. ' num' → logprob: -3.260136604309082
    6. 'i' → logprob: -3.385136604309082
    7. ' bit' → logprob: -3.510136604309082
    8. 'a' → logprob: -3.760136604309082
    9. ' _' → logprob: -4.260136604309082
    10. ' val' → logprob: -4.385136604309082

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2604113519191742
    2. 'in' → logprob: -1.5104113817214966
    3. ',' → logprob: -5.885411262512207
    4. 'n' → logprob: -5.885411262512207
    5. ' ' → logprob: -6.135411262512207
    6. ' n' → logprob: -8.135411262512207
    7. ' ,' → logprob: -9.260411262512207
    8. '	in' → logprob: -9.260411262512207
    9. '  ' → logprob: -9.760411262512207
    10. 's' → logprob: -10.010411262512207

Token 63: ' odd' (ID: 14210)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.019474472850561142
    2. 'range' → logprob: -4.644474506378174
    3. ' odd' → logprob: -4.769474506378174
    4. 'odd' → logprob: -7.894474506378174
    5. ' A' → logprob: -8.269474029541016
    6. ' ' → logprob: -8.394474029541016
    7. ' xrange' → logprob: -8.644474029541016
    8. 'A' → logprob: -9.769474029541016
    9. '  ' → logprob: -10.831974029541016
    10. ' np' → logprob: -10.956974029541016

Token 64: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.0010630595497786999
    2. '_' → logprob: -6.876062870025635
    3. '_digits' → logprob: -11.751063346862793
    4. 'digit' → logprob: -13.001063346862793
    5. 'Digit' → logprob: -13.001063346862793
    6. 's' → logprob: -13.126063346862793
    7. ')' → logprob: -13.376063346862793
    8. '_:' → logprob: -13.501063346862793
    9. '-digit' → logprob: -13.501063346862793
    10. ':' → logprob: -13.876063346862793

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.431207682704553e-05
    2. ' :' → logprob: -10.000054359436035
    3. ':
' → logprob: -12.000054359436035
    4. 's' → logprob: -13.250054359436035
    5. ':**' → logprob: -15.250054359436035
    6. '[:]' → logprob: -15.625054359436035
    7. ':list' → logprob: -15.875054359436035
    8. ':s' → logprob: -16.62505340576172
    9. '):' → logprob: -16.75005340576172
    10. '>' → logprob: -17.00005340576172

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1251486539840698
    2. ' count' → logprob: -1.5001486539840698
    3. ' print' → logprob: -1.6251486539840698
    4. 'print' → logprob: -2.5001487731933594
    5. 'count' → logprob: -2.7501487731933594
    6. ' cnt' → logprob: -3.3751487731933594
    7. ' mask' → logprob: -4.250148773193359
    8. ' if' → logprob: -4.250148773193359
    9. 'cnt' → logprob: -4.750148773193359
    10. ' for' → logprob: -4.875148773193359

Token 67: ' A' (ID: 355)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8752526044845581
    2. 'print' → logprob: -1.625252604484558
    3. 'cnt' → logprob: -2.2502527236938477
    4. 'mask' → logprob: -3.1252527236938477
    5. 'idx' → logprob: -3.2502527236938477
    6. ' count' → logprob: -3.2502527236938477
    7. 'if' → logprob: -3.2502527236938477
    8. '   ' → logprob: -3.7502527236938477
    9. 'A' (adapté à ' A') → logprob: -4.125252723693848
    10. 'for' → logprob: -4.375252723693848

Token 68: ' =' (ID: 314)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.1457872837781906
    2. ' =' → logprob: -3.020787239074707
    3. '=' → logprob: -3.270787239074707
    4. '^' → logprob: -3.645787239074707
    5. ' ^' → logprob: -4.395787239074707
    6. '[' → logprob: -5.270787239074707
    7. '[A' → logprob: -6.395787239074707
    8. ' &=' → logprob: -7.645787239074707
    9. ' ' → logprob: -7.770787239074707
    10. 'A' → logprob: -7.895787239074707

Token 69: ' A' (ID: 355)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.039318300783634186
    2. 'A' → logprob: -3.539318323135376
    3. ' np' → logprob: -4.914318084716797
    4. ' A' → logprob: -7.039318084716797
    5. '(np' → logprob: -7.414318084716797
    6. '(A' → logprob: -7.789318084716797
    7. ' (' → logprob: -9.039318084716797
    8. '(' → logprob: -9.789318084716797
    9. '((' → logprob: -10.414318084716797
    10. '[np' → logprob: -11.289318084716797

Token 70: ' &' (ID: 827)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.2531258463859558
    2. ' ^' → logprob: -2.0031259059906006
    3. '[' → logprob: -3.1281259059906006
    4. '-' → logprob: -4.5031256675720215
    5. '[A' → logprob: -4.6281256675720215
    6. '%' → logprob: -5.0031256675720215
    7. '+' → logprob: -5.3781256675720215
    8. '&' → logprob: -5.8781256675720215
    9. '[np' → logprob: -6.1281256675720215
    10. '*' → logprob: -6.2531256675720215

Token 71: ' (~' (ID: 65176)
  Prédit: '~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -0.7895860075950623
    2. 'i' → logprob: -1.664586067199707
    3. ' (~' → logprob: -2.164586067199707
    4. '(~' → logprob: -2.289586067199707
    5. ' i' → logprob: -2.789586067199707
    6. ' ~' → logprob: -2.789586067199707
    7. ' (' → logprob: -4.664586067199707
    8. '(i' → logprob: -5.039586067199707
    9. '(' → logprob: -7.039586067199707
    10. ' np' → logprob: -8.164586067199707

Token 72: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05491986125707626
    2. ' i' → logprob: -2.929919958114624
    3. '(i' → logprob: -11.429920196533203
    4. '(' → logprob: -11.679920196533203
    5. ' (' → logprob: -11.929920196533203
    6. ' ' → logprob: -12.179920196533203
    7. 'np' → logprob: -13.054920196533203
    8. ' np' → logprob: -13.679920196533203
    9. '	i' → logprob: -14.179920196533203
    10. ')' → logprob: -15.054920196533203

Token 73: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013917774776928127
    2. ' )' → logprob: -9.000139236450195
    3. ')
' → logprob: -11.375139236450195
    4. ')`' → logprob: -14.375139236450195
    5. '))' → logprob: -14.500139236450195
    6. '[' → logprob: -14.875139236450195
    7. ')

' → logprob: -15.250139236450195
    8. ' ' → logprob: -15.375139236450195
    9. '   ' → logprob: -15.375139236450195
    10. '}' → logprob: -15.500139236450195

Token 74: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13675227761268616
    2. '<|end|>' → logprob: -2.5117523670196533
    3. '[' → logprob: -4.386752128601074
    4. '\n' → logprob: -4.761752128601074
    5. '
' → logprob: -5.261752128601074
    6. ' ' → logprob: -6.011752128601074
    7. '#' → logprob: -6.136752128601074
    8. ']' → logprob: -6.136752128601074
    9. '```' → logprob: -6.136752128601074
    10. '^' → logprob: -6.636752128601074

Token 75: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5642074942588806
    2. 'a' → logprob: -2.1892075538635254
    3. ' x' → logprob: -2.4392075538635254
    4. '_' → logprob: -2.8142075538635254
    5. ' A' → logprob: -2.8142075538635254
    6. ' i' → logprob: -3.1892075538635254
    7. 'A' → logprob: -4.314207553863525
    8. ' ' → logprob: -4.314207553863525
    9. 'x' → logprob: -4.564207553863525
    10. 'i' → logprob: -4.564207553863525

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1432272344827652
    2. 'in' → logprob: -2.0182273387908936
    3. ' ' → logprob: -8.393227577209473
    4. ',' → logprob: -8.643227577209473
    5. '  ' → logprob: -10.018227577209473
    6. ':' → logprob: -11.018227577209473
    7. '   ' → logprob: -11.393227577209473
    8. '_' → logprob: -11.643227577209473
    9. 's' → logprob: -11.768227577209473
    10. 'n' → logprob: -12.018227577209473

Token 77: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07823023200035095
    2. 'range' → logprob: -2.953230142593384
    3. ' A' → logprob: -4.203230381011963
    4. 'A' → logprob: -5.328230381011963
    5. ' odd' → logprob: -6.828230381011963
    6. ' np' → logprob: -6.828230381011963
    7. ' ' → logprob: -7.703230381011963
    8. 'odd' → logprob: -8.578229904174805
    9. 'np' → logprob: -8.828229904174805
    10. ' xrange' → logprob: -9.328229904174805

Token 78: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.20684684813022614
    2. '(len' → logprob: -2.2068469524383545
    3. '(' → logprob: -2.5818469524383545
    4. '(n' → logprob: -7.081846714019775
    5. '(A' → logprob: -8.956847190856934
    6. ' (' → logprob: -9.331847190856934
    7. ' ' → logprob: -9.831847190856934
    8. '((' → logprob: -11.956847190856934
    9. '(
' → logprob: -12.206847190856934
    10. '(np' → logprob: -12.456847190856934

Token 79: '60' (ID: 1910)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004049075301736593
    2. 'len' → logprob: -5.754049301147461
    3. ' N' → logprob: -8.379049301147461
    4. '1' → logprob: -8.754049301147461
    5. 'A' → logprob: -9.129049301147461
    6. ' ' → logprob: -9.379049301147461
    7. '3' → logprob: -9.879049301147461
    8. 'n' → logprob: -10.004049301147461
    9. '10' → logprob: -10.129049301147461
    10. ')' → logprob: -11.004049301147461

Token 80: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1439676284790039
    2. '):
' → logprob: -2.018967628479004
    3. ')' → logprob: -7.768967628479004
    4. ' ):' → logprob: -7.893967628479004
    5. '):
' → logprob: -8.643967628479004
    6. ':' → logprob: -8.768967628479004
    7. '   ' → logprob: -9.893967628479004
    8. ' ):
' → logprob: -9.893967628479004
    9. ' ' → logprob: -11.143967628479004
    10. ',' → logprob: -11.393967628479004

Token 81: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23042453825473785
    2. ' -' → logprob: -1.8554245233535767
    3. '0' → logprob: -3.230424642562866
    4. ' ' → logprob: -4.730424404144287
    5. '64' → logprob: -7.980424404144287
    6. ')' → logprob: -8.105424880981445
    7. '  ' → logprob: -8.730424880981445
    8. '1' → logprob: -9.105424880981445
    9. '2' → logprob: -11.105424880981445
    10. '32' → logprob: -11.230424880981445

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.250006675720215
    3. '-' → logprob: -13.375006675720215
    4. ' -' → logprob: -15.750006675720215
    5. '2' → logprob: -16.12500762939453
    6. '```' → logprob: -16.25000762939453
    7. '１' → logprob: -16.81250762939453
    8. '  ' → logprob: -17.12500762939453
    9. '   ' → logprob: -17.56250762939453
    10. '7' → logprob: -18.37500762939453

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02313530445098877
    2. '-' → logprob: -4.523135185241699
    3. ' -' → logprob: -5.273135185241699
    4. ',-' → logprob: -5.523135185241699
    5. ' ,' → logprob: -5.898135185241699
    6. ' ,-' → logprob: -9.6481351852417
    7. '0' → logprob: -10.5231351852417
    8. '):' → logprob: -11.1481351852417
    9. ' ' → logprob: -11.3981351852417
    10. '   ' → logprob: -11.5231351852417

Token 84: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02635452151298523
    2. ' -' → logprob: -3.6513545513153076
    3. '1' → logprob: -10.526354789733887
    4. ' ' → logprob: -11.651354789733887
    5. '0' → logprob: -11.901354789733887
    6. ')' → logprob: -12.651354789733887
    7. '   ' → logprob: -12.651354789733887
    8. '```' → logprob: -13.651354789733887
    9. '-)' → logprob: -13.901354789733887
    10. '	' → logprob: -14.026354789733887

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. ')' → logprob: -16.87504005432129
    4. '   ' → logprob: -17.12504005432129
    5. '-' → logprob: -17.37504005432129
    6. '```' → logprob: -17.75004005432129
    7. '  ' → logprob: -18.12504005432129
    8. '2' → logprob: -18.12504005432129
    9. '):
' → logprob: -18.62504005432129
    10. '0' → logprob: -19.50004005432129

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04850355535745621
    2. '):
' → logprob: -3.2985036373138428
    3. ':' → logprob: -5.548503398895264
    4. ' ):' → logprob: -5.798503398895264
    5. ',' → logprob: -6.548503398895264
    6. ')' → logprob: -6.673503398895264
    7. '-' → logprob: -8.298503875732422
    8. ' ):
' → logprob: -8.673503875732422
    9. '   ' → logprob: -8.923503875732422
    10. '):
' → logprob: -9.548503875732422

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3163277804851532
    2. ' ' → logprob: -1.4413278102874756
    3. '<|end|>' → logprob: -3.8163278102874756
    4. ':' → logprob: -5.8163275718688965
    5. ' 
' → logprob: -6.0663275718688965
    6. ' if' → logprob: -6.3163275718688965
    7. '    ' → logprob: -6.4413275718688965
    8. '  ' → logprob: -6.5663275718688965
    9. '32' → logprob: -7.8163275718688965
    10. ' ' → logprob: -8.191328048706055

Token 88: ' one' (ID: 1001)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04495595768094063
    2. 'if' → logprob: -3.7949559688568115
    3. ' for' → logprob: -5.044955730438232
    4. '   ' → logprob: -5.169955730438232
    5. ' ' → logprob: -5.544955730438232
    6. '    ' → logprob: -6.794955730438232
    7. ' bit' → logprob: -6.794955730438232
    8. ' i' → logprob: -7.294955730438232
    9. ' mask' → logprob: -7.919955730438232
    10. ' print' → logprob: -8.04495620727539

Token 89: '_digit' (ID: 119592)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010103347711265087
    2. '_bit' → logprob: -6.010103225708008
    3. '_bits' → logprob: -6.260103225708008
    4. '_count' → logprob: -6.260103225708008
    5. ' =' → logprob: -6.635103225708008
    6. '_mask' → logprob: -7.260103225708008
    7. 'count' → logprob: -7.635103225708008
    8. 'bit' → logprob: -8.010103225708008
    9. '=' → logprob: -9.010103225708008
    10. 'bits' → logprob: -9.010103225708008

Token 90: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5731236934661865
    2. ' =' → logprob: -0.9481236934661865
    3. '=' → logprob: -3.0731236934661865
    4. '_mask' → logprob: -6.573123931884766
    5. '_count' → logprob: -7.698123931884766
    6. '_bit' → logprob: -8.823123931884766
    7. ' ' → logprob: -8.948123931884766
    8. '_s' → logprob: -9.323123931884766
    9. '_' → logprob: -10.073123931884766
    10. 'count' → logprob: -10.698123931884766

Token 91: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.37525179982185364
    2. ' ' → logprob: -2.3752517700195312
    3. '(' → logprob: -2.5002517700195312
    4. '1' → logprob: -2.5002517700195312
    5. ' A' → logprob: -4.875251770019531
    6. ' np' → logprob: -5.000251770019531
    7. '(i' → logprob: -5.250251770019531
    8. ' i' → logprob: -5.250251770019531
    9. '(A' → logprob: -5.375251770019531
    10. ' xor' → logprob: -5.500251770019531

Token 92: 'A' (ID: 32)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.4482167363166809
    2. 'A' → logprob: -1.4482166767120361
    3. ' xor' → logprob: -2.698216676712036
    4. ' A' → logprob: -3.448216676712036
    5. '1' → logprob: -5.073216915130615
    6. 'np' → logprob: -5.323216915130615
    7. ' ' → logprob: -5.448216915130615
    8. ' (' → logprob: -5.573216915130615
    9. ' np' → logprob: -6.323216915130615
    10. '(A' → logprob: -6.635716915130615

Token 93: ' &' (ID: 827)
  Prédit: ' >>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.7041099667549133
    2. ' &' → logprob: -0.8291099667549133
    3. '>>' → logprob: -2.8291099071502686
    4. ' ' → logprob: -5.829110145568848
    5. '[' → logprob: -6.079110145568848
    6. '&' → logprob: -6.454110145568848
    7. ' >' → logprob: -6.829110145568848
    8. '>' → logprob: -7.454110145568848
    9. ')' → logprob: -7.829110145568848
    10. ' >=' → logprob: -8.329110145568848

Token 94: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31379109621047974
    2. '(' → logprob: -1.313791036605835
    3. ' ' → logprob: -8.313791275024414
    4. ')' → logprob: -9.063791275024414
    5. '1' → logprob: -9.813791275024414
    6. '[' → logprob: -10.063791275024414
    7. '<|end|>' → logprob: -10.188791275024414
    8. '  ' → logprob: -11.813791275024414
    9. ' ' → logprob: -12.813791275024414
    10. ')(' → logprob: -12.938791275024414

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010881568305194378
    2. '(' → logprob: -4.760881423950195
    3. ' ' → logprob: -6.135881423950195
    4. ' (' → logprob: -9.385881423950195
    5. '   ' → logprob: -11.635881423950195
    6. '[' → logprob: -13.010881423950195
    7. '  ' → logprob: -13.385881423950195
    8. ')' → logprob: -13.385881423950195
    9. '0' → logprob: -15.135881423950195
    10. '{' → logprob: -15.198381423950195

Token 96: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.04860304668545723
    2. ' <<' → logprob: -3.048603057861328
    3. '<' → logprob: -12.298603057861328
    4. ' ' → logprob: -12.798603057861328
    5. '   ' → logprob: -13.048603057861328
    6. '>>' → logprob: -13.173603057861328
    7. '<<<' → logprob: -13.673603057861328
    8. '<<(' → logprob: -13.673603057861328
    9. '1' → logprob: -14.048603057861328
    10. '(' → logprob: -15.048603057861328

Token 97: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003382038848940283
    2. ' i' → logprob: -8.000338554382324
    3. '   ' → logprob: -13.000338554382324
    4. ' ' → logprob: -14.750338554382324
    5. '	i' → logprob: -16.250337600708008
    6. '  ' → logprob: -16.750337600708008
    7. ')' → logprob: -18.500337600708008
    8. ')i' → logprob: -19.125337600708008
    9. '    ' → logprob: -19.500337600708008
    10. '(i' → logprob: -19.625337600708008

Token 98: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.262460321187973
    2. ')' → logprob: -1.5124603509902954
    3. ' )' → logprob: -5.387460231781006
    4. ' ))' → logprob: -5.387460231781006
    5. ')!=' → logprob: -6.762460231781006
    6. '!=' → logprob: -9.387460708618164
    7. ')).' → logprob: -10.512460708618164
    8. ')>' → logprob: -10.887460708618164
    9. ' !=' → logprob: -11.387460708618164
    10. '>' → logprob: -11.887460708618164

Token 99: ' !=' (ID: 1666)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07632030546665192
    2. ' )' → logprob: -2.9513204097747803
    3. ')!=' → logprob: -4.076320171356201
    4. ').' → logprob: -5.701320171356201
    5. '!=' → logprob: -7.701320171356201
    6. ' !=' → logprob: -8.45132064819336
    7. ')>' → logprob: -9.20132064819336
    8. ' ).' → logprob: -9.45132064819336
    9. '>' → logprob: -10.70132064819336
    10. ')==' → logprob: -10.82632064819336

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889143377542496
    2. ' ' → logprob: -2.5788915157318115
    3. ')' → logprob: -14.45389175415039
    4. 'np' → logprob: -14.57889175415039
    5. ' np' → logprob: -14.82889175415039
    6. '   ' → logprob: -16.70389175415039
    7. '  ' → logprob: -16.95389175415039
    8. 'False' → logprob: -17.57889175415039
    9. ' ' → logprob: -17.64139175415039
    10. '```' → logprob: -17.70389175415039

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019288709154352546
    2. ' ' → logprob: -6.251928806304932
    3. 'np' → logprob: -15.12692928314209
    4. '   ' → logprob: -18.251928329467773
    5. '  ' → logprob: -18.626928329467773
    6. ' np' → logprob: -18.626928329467773
    7. '０' → logprob: -19.001928329467773
    8. ' ' → logprob: -19.376928329467773
    9. '۰' → logprob: -19.376928329467773
    10. ')' → logprob: -19.376928329467773

Token 102: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000511687423568219
    2. ' )' → logprob: -8.12551212310791
    3. ')
' → logprob: -9.25051212310791
    4. ' and' → logprob: -9.50051212310791
    5. '):' → logprob: -11.12551212310791
    6. '   ' → logprob: -11.50051212310791
    7. '):
' → logprob: -11.62551212310791
    8. 'and' → logprob: -12.87551212310791
    9. ')

' → logprob: -13.50051212310791
    10. '<|end|>' → logprob: -13.87551212310791

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1490306854248047
    2. '<|end|>' → logprob: -1.1490306854248047
    3. '       ' → logprob: -2.0240306854248047
    4. ' if' → logprob: -2.7740306854248047
    5. ':' → logprob: -3.0240306854248047
    6. ' ' → logprob: -3.3990306854248047
    7. '    ' → logprob: -3.7740306854248047
    8. ')' → logprob: -4.024030685424805
    9. ' and' → logprob: -4.149030685424805
    10. '
' → logprob: -4.899030685424805

Token 104: ' pivot' (ID: 44506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5738653540611267
    2. '   ' → logprob: -1.8238654136657715
    3. 'if' → logprob: -1.9488654136657715
    4. '       ' → logprob: -2.3238654136657715
    5. ' ' → logprob: -4.8238654136657715
    6. '    ' → logprob: -4.9488654136657715
    7. ')' → logprob: -5.1988654136657715
    8. ' for' → logprob: -5.6988654136657715
    9. 'count' → logprob: -5.8238654136657715
    10. 'continue' → logprob: -6.5738654136657715

Token 105: '_flag' (ID: 25269)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09138447791337967
    2. '=' → logprob: -2.4663844108581543
    3. 's' → logprob: -6.841384410858154
    4. '_idx' → logprob: -7.716384410858154
    5. '   ' → logprob: -8.716384887695312
    6. '_index' → logprob: -8.841384887695312
    7. '_' → logprob: -8.966384887695312
    8. '_indices' → logprob: -9.341384887695312
    9. ' ' → logprob: -9.716384887695312
    10. ',' → logprob: -9.716384887695312

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194039940834045
    2. '=' → logprob: -1.501940369606018
    3. ' ' → logprob: -11.751940727233887
    4. '=True' → logprob: -14.251940727233887
    5. 's' → logprob: -14.501940727233887
    6. ' |=' → logprob: -14.751940727233887
    7. ' =
' → logprob: -15.126940727233887
    8. ')' → logprob: -15.376940727233887
    9. '=False' → logprob: -15.376940727233887
    10. '   ' → logprob: -15.626940727233887

Token 107: ' np' (ID: 5374)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.3925076723098755
    2. 'False' → logprob: -1.1425076723098755
    3. ' one' → logprob: -6.517507553100586
    4. ' any' → logprob: -6.642507553100586
    5. ' True' → logprob: -6.892507553100586
    6. ' np' → logprob: -7.517507553100586
    7. 'one' → logprob: -7.767507553100586
    8. 'True' → logprob: -8.017507553100586
    9. 'any' → logprob: -8.892507553100586
    10. ' ' → logprob: -9.017507553100586

Token 108: '.where' (ID: 40153)
  Prédit: '.any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.any' → logprob: -0.20171846449375153
    2. 'any' → logprob: -1.7017184495925903
    3. '.count' → logprob: -9.5767183303833
    4. '.sum' → logprob: -9.5767183303833
    5. '_any' → logprob: -9.8267183303833
    6. 'Any' → logprob: -10.7017183303833
    7. '.argmax' → logprob: -10.7017183303833
    8. 'count' → logprob: -10.8267183303833
    9. ' any' → logprob: -11.7017183303833
    10. 'sum' → logprob: -11.9517183303833

Token 109: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -1.5094070477061905e-05
    2. ' (' → logprob: -12.375015258789062
    3. '(' → logprob: -12.750015258789062
    4. '((' → logprob: -12.875015258789062
    5. '(np' → logprob: -13.000015258789062
    6. '(p' → logprob: -13.250015258789062
    7. '(A' → logprob: -14.375015258789062
    8. 'one' → logprob: -14.750015258789062
    9. '(two' → logprob: -15.750015258789062
    10. '(a' → logprob: -16.875015258789062

Token 110: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.35149168968200684
    2. 's' → logprob: -1.2264916896820068
    3. ')' → logprob: -8.101491928100586
    4. '-digit' → logprob: -8.226491928100586
    5. 'digit' → logprob: -8.476491928100586
    6. '   ' → logprob: -8.601491928100586
    7. 'Digit' → logprob: -8.726491928100586
    8. 'a' → logprob: -8.726491928100586
    9. '```' → logprob: -8.726491928100586
    10. '_d' → logprob: -8.851491928100586

Token 111: ' &' (ID: 827)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.059776421636343
    2. ',' → logprob: -3.0597763061523438
    3. '[' → logprob: -4.809776306152344
    4. ' )[' → logprob: -6.559776306152344
    5. ' ,' → logprob: -6.809776306152344
    6. ',[' → logprob: -8.309776306152344
    7. ')' → logprob: -8.809776306152344
    8. ' [' → logprob: -11.184776306152344
    9. '==' → logprob: -11.934776306152344
    10. 'True' → logprob: -12.059776306152344

Token 112: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5144728422164917
    2. '(np' → logprob: -2.7644729614257812
    3. ' np' → logprob: -3.0144729614257812
    4. '(A' → logprob: -3.3894729614257812
    5. '(~' → logprob: -3.3894729614257812
    6. '(i' → logprob: -3.6394729614257812
    7. 'A' → logprob: -3.7644729614257812
    8. '(' → logprob: -3.7644729614257812
    9. '(True' → logprob: -3.7644729614257812
    10. '(one' → logprob: -3.7644729614257812

Token 113: 'A' (ID: 32)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -1.1306771039962769
    2. '(np' → logprob: -1.2556771039962769
    3. '(A' → logprob: -2.0056772232055664
    4. 'A' → logprob: -2.5056772232055664
    5. '(~' → logprob: -2.8806772232055664
    6. '~' → logprob: -2.8806772232055664
    7. '(i' → logprob: -4.005677223205566
    8. ' np' → logprob: -4.255677223205566
    9. ' (' → logprob: -5.005677223205566
    10. '(' → logprob: -5.255677223205566

Token 114: ' <' (ID: 464)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6045873761177063
    2. '!=' → logprob: -1.1045873165130615
    3. '.any' → logprob: -2.6045873165130615
    4. '.sum' → logprob: -3.8545873165130615
    5. '[:,' → logprob: -4.354587554931641
    6. ').' → logprob: -4.979587554931641
    7. '>' → logprob: -6.479587554931641
    8. ')' → logprob: -6.604587554931641
    9. '.argmax' → logprob: -7.354587554931641
    10. '.shape' → logprob: -7.604587554931641

Token 115: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7445828318595886
    2. ' (' → logprob: -1.1195828914642334
    3. 'A' → logprob: -2.6195828914642334
    4. ' A' → logprob: -3.7445828914642334
    5. 'np' → logprob: -3.7445828914642334
    6. '0' → logprob: -4.119582653045654
    7. 'i' → logprob: -4.244582653045654
    8. '(i' → logprob: -4.494582653045654
    9. ' np' → logprob: -4.994582653045654
    10. ' i' → logprob: -5.244582653045654

Token 116: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5719062685966492
    2. 'A' → logprob: -1.446906328201294
    3. '1' → logprob: -1.946906328201294
    4. ' (' → logprob: -3.821906328201294
    5. 'np' → logprob: -4.696906089782715
    6. ' A' → logprob: -5.196906089782715
    7. '(A' → logprob: -5.571906089782715
    8. '(i' → logprob: -5.571906089782715
    9. ' ' → logprob: -5.821906089782715
    10. '>' → logprob: -6.196906089782715

Token 117: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.5779367685317993
    2. ' <<' → logprob: -0.8279367685317993
    3. '>>' → logprob: -6.45293664932251
    4. ' >>' → logprob: -8.577937126159668
    5. '<<(' → logprob: -9.452937126159668
    6. '1' → logprob: -9.827937126159668
    7. '   ' → logprob: -10.827937126159668
    8. ')' → logprob: -11.202937126159668
    9. ' ' → logprob: -11.952937126159668
    10. '>' → logprob: -12.077937126159668

Token 118: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01125401072204113
    2. '(' → logprob: -5.011253833770752
    3. '(i' → logprob: -5.761253833770752
    4. ' i' → logprob: -7.511253833770752
    5. '60' → logprob: -7.886253833770752
    6. '   ' → logprob: -8.88625431060791
    7. ' (' → logprob: -9.01125431060791
    8. '61' → logprob: -9.26125431060791
    9. ' ' → logprob: -10.88625431060791
    10. 'np' → logprob: -11.13625431060791

Token 119: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011876671575009823
    2. '(' → logprob: -5.261876583099365
    3. '(i' → logprob: -5.511876583099365
    4. '60' → logprob: -6.261876583099365
    5. '59' → logprob: -8.511877059936523
    6. ' i' → logprob: -8.761877059936523
    7. '61' → logprob: -8.886877059936523
    8. ' (' → logprob: -9.511877059936523
    9. '   ' → logprob: -9.636877059936523
    10. ' ' → logprob: -11.261877059936523

Token 120: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2119312733411789
    2. ')))' → logprob: -2.7119312286376953
    3. '))' → logprob: -2.7119312286376953
    4. '))))' → logprob: -3.4619312286376953
    5. '))),' → logprob: -4.461931228637695
    6. ')))),' → logprob: -5.711931228637695
    7. ' +' → logprob: -5.836931228637695
    8. ' ' → logprob: -5.961931228637695
    9. '1' → logprob: -6.336931228637695
    10. ' ))' → logprob: -6.461931228637695

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000591278774663806
    2. '0' → logprob: -8.250591278076172
    3. 'i' → logprob: -8.500591278076172
    4. '60' → logprob: -9.250591278076172
    5. '61' → logprob: -11.625591278076172
    6. '(i' → logprob: -12.250591278076172
    7. ' ' → logprob: -12.500591278076172
    8. '59' → logprob: -13.000591278076172
    9. '))' → logprob: -13.250591278076172
    10. '2' → logprob: -13.375591278076172

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000182921823579818
    2. 'i' → logprob: -9.62518310546875
    3. '0' → logprob: -9.87518310546875
    4. '2' → logprob: -10.87518310546875
    5. '))' → logprob: -11.00018310546875
    6. ')))' → logprob: -11.12518310546875
    7. ')' → logprob: -13.00018310546875
    8. '(i' → logprob: -13.25018310546875
    9. ' ' → logprob: -13.37518310546875
    10. '))))' → logprob: -13.62518310546875

Token 123: '))))' (ID: 57459)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.9207965731620789
    2. ')))' → logprob: -0.9207965731620789
    3. '))))' → logprob: -2.2957966327667236
    4. '))),' → logprob: -2.5457966327667236
    5. ')))),' → logprob: -4.7957963943481445
    6. ')),' → logprob: -5.4207963943481445
    7. ' ))' → logprob: -5.6707963943481445
    8. ' ' → logprob: -5.9207963943481445
    9. '   ' → logprob: -6.2957963943481445
    10. ')));' → logprob: -7.0457963943481445

Token 124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28956764936447144
    2. ')[' → logprob: -1.5395677089691162
    3. ',' → logprob: -3.789567708969116
    4. ')' → logprob: -4.664567470550537
    5. '<|end|>' → logprob: -5.664567470550537
    6. ' )[' → logprob: -7.914567470550537
    7. ' ,' → logprob: -8.039567947387695
    8. '][' → logprob: -8.789567947387695
    9. '()[' → logprob: -9.414567947387695
    10. '<|end|>' → logprob: -9.789567947387695

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5451681974809617e-05
    2. '-' → logprob: -12.125015258789062
    3. ' ' → logprob: -12.625015258789062
    4. '1' → logprob: -13.375015258789062
    5. ')' → logprob: -13.750015258789062
    6. ']' → logprob: -14.125015258789062
    7. '
' → logprob: -14.750015258789062
    8. '```' → logprob: -15.000015258789062
    9. '   ' → logprob: -15.062515258789062
    10. '])' → logprob: -15.125015258789062

Token 126: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005178847350180149
    2. '[' → logprob: -6.005178928375244
    3. ':]' → logprob: -6.630178928375244
    4. '0' → logprob: -8.130178451538086
    5. ':' → logprob: -8.380178451538086
    6. ',' → logprob: -8.755178451538086
    7. 'if' → logprob: -8.880178451538086
    8. '][' → logprob: -8.880178451538086
    9. '   ' → logprob: -9.130178451538086
    10. ')' → logprob: -9.880178451538086

Token 127: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.437165766954422
    2. '[' → logprob: -2.1871657371520996
    3. '   ' → logprob: -2.6871657371520996
    4. '<|end|>' → logprob: -2.8121657371520996
    5. ')' → logprob: -2.9371657371520996
    6. ' if' → logprob: -3.4371657371520996
    7. ']' → logprob: -4.6871657371521
    8. 'if' → logprob: -5.4371657371521
    9. ':
' → logprob: -5.9371657371521
    10. '):' → logprob: -5.9371657371521

Token 128: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32971206307411194
    2. 'if' (adapté à ' if') → logprob: -1.7047120332717896
    3. '   ' → logprob: -2.704712152481079
    4. '       ' → logprob: -3.829712152481079
    5. '<|end|>' → logprob: -5.5797119140625
    6. ' ' → logprob: -5.7047119140625
    7. '    ' → logprob: -6.5797119140625
    8. '[' → logprob: -8.3297119140625
    9. '```' → logprob: -8.7047119140625
    10. '	if' → logprob: -8.8297119140625

Token 129: ' len' (ID: 4631)
  Prédit: ' pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pivot' → logprob: -0.5415636897087097
    2. ' len' → logprob: -1.5415637493133545
    3. 'pivot' → logprob: -1.7915637493133545
    4. 'len' → logprob: -3.2915637493133545
    5. ' ' → logprob: -8.791563987731934
    6. '(len' → logprob: -10.666563987731934
    7. ' not' → logprob: -11.166563987731934
    8. '	len' → logprob: -11.416563987731934
    9. ' piv' → logprob: -12.416563987731934
    10. '  ' → logprob: -12.979063987731934

Token 130: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.62501049041748
    3. ' (' → logprob: -14.25001049041748
    4. 'pivot' → logprob: -14.25001049041748
    5. '(x' → logprob: -17.000009536743164
    6. '>' → logprob: -17.000009536743164
    7. '(
' → logprob: -17.875009536743164
    8. 'p' → logprob: -17.875009536743164
    9. '(P' → logprob: -18.500009536743164
    10. '(np' → logprob: -18.750009536743164

Token 131: 'ivot' (ID: 19481)
  Prédit: 'ivot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivot' → logprob: -0.0004959598300047219
    2. 'pivot' → logprob: -7.625495910644531
    3. '>' → logprob: -12.875495910644531
    4. 'iv' → logprob: -13.250495910644531
    5. '[' → logprob: -14.125495910644531
    6. 'i' → logprob: -14.625495910644531
    7. ' pivot' → logprob: -15.000495910644531
    8. '
' → logprob: -15.000495910644531
    9. ')' → logprob: -15.125495910644531
    10. '=' → logprob: -16.00049591064453

Token 132: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -1.981667537620524e-06
    2. 'flag' → logprob: -13.625001907348633
    3. '_' → logprob: -14.875001907348633
    4. '_flags' → logprob: -16.250001907348633
    5. '>' → logprob: -16.500001907348633
    6. '_FLAG' → logprob: -16.625001907348633
    7. ')' → logprob: -16.750001907348633
    8. 'Flag' → logprob: -17.125001907348633
    9. '```' → logprob: -18.750001907348633
    10. '_p' → logprob: -18.875001907348633

Token 133: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6630011200904846
    2. '>' → logprob: -1.7880010604858398
    3. ')' → logprob: -1.9130010604858398
    4. ' ==' → logprob: -2.03800106048584
    5. '==' → logprob: -3.28800106048584
    6. ')>' → logprob: -6.53800106048584
    7. '):' → logprob: -8.53800106048584
    8. ')==' → logprob: -8.78800106048584
    9. ' )' → logprob: -9.03800106048584
    10. ' !=' → logprob: -9.53800106048584

Token 134: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.33950379490852356
    2. ' >' → logprob: -1.5895037651062012
    3. '==' → logprob: -2.964503765106201
    4. ' ==' → logprob: -3.464503765106201
    5. ':' → logprob: -7.089503765106201
    6. '!=' → logprob: -10.58950424194336
    7. ' !=' → logprob: -10.58950424194336
    8. '>=' → logprob: -10.58950424194336
    9. '=' → logprob: -11.21450424194336
    10. ' >=' → logprob: -11.46450424194336

Token 135: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6485493779182434
    2. '1' → logprob: -0.7735493779182434
    3. ' ' → logprob: -4.148549556732178
    4. '2' → logprob: -10.64854907989502
    5. 'N' → logprob: -12.39854907989502
    6. '   ' → logprob: -13.21104907989502
    7. '>' → logprob: -14.14854907989502
    8. '  ' → logprob: -14.33604907989502
    9. '```' → logprob: -14.33604907989502
    10. ' N' → logprob: -14.71104907989502

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0551653653383255
    2. '1' → logprob: -2.9301652908325195
    3. ' ' → logprob: -8.18016529083252
    4. '>' → logprob: -14.43016529083252
    5. '```' → logprob: -14.43016529083252
    6. '2' → logprob: -14.61766529083252
    7. '   ' → logprob: -15.74266529083252
    8. ')' → logprob: -16.430166244506836
    9. '(' → logprob: -16.430166244506836
    10. '<|end|>' → logprob: -16.617666244506836

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026141826529055834
    2. '       ' → logprob: -6.6276140213012695
    3. ':
' → logprob: -6.7526140213012695
    4. '   ' → logprob: -9.25261402130127
    5. '):' → logprob: -12.00261402130127
    6. ' :' → logprob: -12.00261402130127
    7. ',' → logprob: -12.25261402130127
    8. ' or' → logprob: -13.75261402130127
    9. ':return' → logprob: -13.75261402130127
    10. ' and' → logprob: -13.87761402130127

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011340413242578506
    2. ' continue' → logprob: -4.636340618133545
    3. ' break' → logprob: -7.386340618133545
    4. 'continue' → logprob: -7.386340618133545
    5. '   ' → logprob: -8.386340141296387
    6. ':' → logprob: -11.261340141296387
    7. '        
' → logprob: -11.386340141296387
    8. 'break' → logprob: -11.386340141296387
    9. '```' → logprob: -11.386340141296387
    10. ' for' → logprob: -11.386340141296387

Token 139: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6401965618133545
    2. 'continue' (adapté à ' continue') → logprob: -1.1401965618133545
    3. '   ' → logprob: -1.8901965618133545
    4. '       ' → logprob: -6.265196800231934
    5. '	continue' → logprob: -9.890196800231934
    6. ' ' → logprob: -10.390196800231934
    7. ' break' → logprob: -12.015196800231934
    8. '           ' → logprob: -12.265196800231934
    9. '```' → logprob: -12.515196800231934
    10. 'break' → logprob: -12.765196800231934

Token 140: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02088775672018528
    2. ' pivot' → logprob: -5.145887851715088
    3. '    
' → logprob: -5.395887851715088
    4. 'pivot' → logprob: -5.645887851715088
    5. ':' → logprob: -6.270887851715088
    6. ' A' → logprob: -6.645887851715088
    7. ' piv' → logprob: -7.020887851715088
    8. ' for' → logprob: -7.520887851715088
    9. 'A' → logprob: -7.770887851715088
    10. 'for' → logprob: -9.02088737487793

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7999618053436279
    2. 'pivot' → logprob: -0.9249618053436279
    3. ' pivot' → logprob: -2.924961805343628
    4. 'A' → logprob: -3.424961805343628
    5. 'else' → logprob: -3.799961805343628
    6. ' A' → logprob: -4.299962043762207
    7. 'for' → logprob: -4.674962043762207
    8. ' for' → logprob: -5.174962043762207
    9. ' else' → logprob: -5.549962043762207
    10. 'p' → logprob: -6.049962043762207

Token 142: ' p' (ID: 275)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.25413820147514343
    2. ' pivot' → logprob: -1.6291382312774658
    3. 'p' (adapté à ' p') → logprob: -4.754137992858887
    4. '   ' → logprob: -5.254137992858887
    5. 'A' → logprob: -5.879137992858887
    6. 'idx' → logprob: -6.254137992858887
    7. ' A' → logprob: -6.379137992858887
    8. 'for' → logprob: -6.879137992858887
    9. ' for' → logprob: -7.004137992858887
    10. 'i' → logprob: -7.379137992858887

Token 143: ' =' (ID: 314)
  Prédit: 'ivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ivot' → logprob: -0.0005118065746501088
    2. 'pivot' → logprob: -7.875511646270752
    3. 'iv' → logprob: -10.25051212310791
    4. 'i' → logprob: -10.50051212310791
    5. '#' → logprob: -11.50051212310791
    6. '=' → logprob: -11.75051212310791
    7. '   ' → logprob: -12.12551212310791
    8. '[' → logprob: -12.12551212310791
    9. '_index' → logprob: -12.50051212310791
    10. 'ivit' → logprob: -12.62551212310791

Token 144: ' pivot' (ID: 44506)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.026822568848729134
    2. ' pivot' → logprob: -3.651822566986084
    3. 'A' → logprob: -8.151823043823242
    4. 'np' → logprob: -8.651823043823242
    5. ' np' → logprob: -10.901823043823242
    6. 'p' → logprob: -11.026823043823242
    7. ' A' → logprob: -11.651823043823242
    8. 'int' → logprob: -12.026823043823242
    9. ' ' → logprob: -12.526823043823242
    10. '0' → logprob: -13.651823043823242

Token 145: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -6.146429223008454e-05
    2. 'flag' → logprob: -9.75006103515625
    3. '_index' → logprob: -13.37506103515625
    4. ' =' → logprob: -14.87506103515625
    5. '=' → logprob: -15.00006103515625
    6. '_idx' → logprob: -15.00006103515625
    7. '_flags' → logprob: -16.12506103515625
    8. '_FLAG' → logprob: -16.12506103515625
    9. 'Flag' → logprob: -16.12506103515625
    10. '_' → logprob: -16.50006103515625

Token 146: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.811348480870947e-05
    2. '0' → logprob: -10.00004768371582
    3. '[-' → logprob: -13.62504768371582
    4. 's' → logprob: -14.75004768371582
    5. '[
' → logprob: -14.75004768371582
    6. ' ' → logprob: -15.75004768371582
    7. 'import' → logprob: -16.25004768371582
    8. '[np' → logprob: -16.62504768371582
    9. ' [' → logprob: -17.00004768371582
    10. '-' → logprob: -17.37504768371582

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.840432565193623e-05
    2. ' ' → logprob: -9.500088691711426
    3. '[' → logprob: -12.125088691711426
    4. '-' → logprob: -12.125088691711426
    5. '
' → logprob: -13.875088691711426
    6. '```' → logprob: -15.375088691711426
    7. '<|end|>' → logprob: -15.500088691711426
    8. ':' → logprob: -15.812588691711426
    9. ']' → logprob: -16.12508773803711
    10. ')' → logprob: -16.25008773803711

Token 148: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014951707795262337
    2. ')' → logprob: -4.264951705932617
    3. ' ]' → logprob: -7.639951705932617
    4. ']
' → logprob: -9.139951705932617
    5. ')]' → logprob: -9.639951705932617
    6. '<|end|>' → logprob: -10.264951705932617
    7. '   ' → logprob: -10.389951705932617
    8. '}' → logprob: -10.889951705932617
    9. ':' → logprob: -11.764951705932617
    10. ')
' → logprob: -12.014951705932617

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17726144194602966
    2. ' pivot' → logprob: -2.8022613525390625
    3. 'pivot' → logprob: -3.0522613525390625
    4. ' A' → logprob: -4.0522613525390625
    5. ' piv' → logprob: -5.0522613525390625
    6. '    ' → logprob: -5.0522613525390625
    7. '    
' → logprob: -5.0522613525390625
    8. 'A' → logprob: -5.1772613525390625
    9. '<|end|>' → logprob: -5.6772613525390625
    10. ',' → logprob: -6.9272613525390625

Token 150: ' pivot' (ID: 44506)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' (adapté à ' pivot') → logprob: -0.2080325335264206
    2. 'for' → logprob: -2.4580326080322266
    3. 'A' → logprob: -3.2080326080322266
    4. 'mask' → logprob: -4.208032608032227
    5. 'tmp' → logprob: -4.583032608032227
    6. 'v' → logprob: -4.583032608032227
    7. 'temp' → logprob: -6.083032608032227
    8. 'val' → logprob: -6.083032608032227
    9. 'p' → logprob: -6.083032608032227
    10. ' pivot' → logprob: -6.083032608032227

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22930558025836945
    2. ' =' → logprob: -1.604305624961853
    3. '_flag' → logprob: -6.229305744171143
    4. '=A' → logprob: -6.854305744171143
    5. '_mask' → logprob: -8.729305267333984
    6. '_val' → logprob: -8.729305267333984
    7. '=np' → logprob: -9.229305267333984
    8. '_' → logprob: -9.354305267333984
    9. '_vector' → logprob: -9.979305267333984
    10. 'A' → logprob: -10.104305267333984

Token 152: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1602802723646164
    2. ' A' → logprob: -1.9102802276611328
    3. ' (' → logprob: -10.660280227661133
    4. '(A' → logprob: -11.035280227661133
    5. '(' → logprob: -11.785280227661133
    6. '   ' → logprob: -12.410280227661133
    7. ' ' → logprob: -13.285280227661133
    8. '	A' → logprob: -13.285280227661133
    9. ' ' → logprob: -15.285280227661133
    10. '1' → logprob: -15.660280227661133

Token 153: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.500004768371582
    3. 'p' → logprob: -15.250004768371582
    4. '[
' → logprob: -15.375004768371582
    5. '[[' → logprob: -15.500004768371582
    6. '[i' → logprob: -15.750004768371582
    7. '[np' → logprob: -15.875004768371582
    8. ' [' → logprob: -16.3750057220459
    9. '```' → logprob: -16.5000057220459
    10. '   ' → logprob: -17.8750057220459

Token 154: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031718912068754435
    2. '])' → logprob: -6.878171920776367
    3. '].' → logprob: -7.253171920776367
    4. '][' → logprob: -7.628171920776367
    5. '[p' → logprob: -8.128171920776367
    6. ' ]' → logprob: -8.253171920776367
    7. ']
' → logprob: -8.753171920776367
    8. ',' → logprob: -9.878171920776367
    9. '[' → logprob: -9.878171920776367
    10. 'p' → logprob: -9.878171920776367

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014141414314508438
    2. ' for' → logprob: -5.13914155960083
    3. 'for' → logprob: -5.88914155960083
    4. '    ' → logprob: -6.76414155960083
    5. '<|end|>' → logprob: -6.88914155960083
    6. '       ' → logprob: -7.01414155960083
    7. '    
' → logprob: -7.38914155960083
    8. 'A' → logprob: -7.76414155960083
    9. '[' → logprob: -8.139141082763672
    10. '```' → logprob: -8.764141082763672

Token 156: ' A' (ID: 355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2441837042570114
    2. 'A' (adapté à ' A') → logprob: -1.6191836595535278
    3. '   ' → logprob: -4.869183540344238
    4. 'mask' → logprob: -4.869183540344238
    5. ' for' → logprob: -6.619183540344238
    6. 'indices' → logprob: -7.244183540344238
    7. 'rest' → logprob: -7.619183540344238
    8. 'rows' → logprob: -8.244183540344238
    9. 'other' → logprob: -9.744183540344238
    10. 'idx' → logprob: -10.119183540344238

Token 157: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26976630091667175
    2. '[p' → logprob: -1.8947663307189941
    3. '^' → logprob: -2.894766330718994
    4. '[' → logprob: -3.769766330718994
    5. ' ^=' → logprob: -5.644766330718994
    6. '[i' → logprob: -6.644766330718994
    7. '[[' → logprob: -7.019766330718994
    8. '[:' → logprob: -7.144766330718994
    9. ' =' → logprob: -7.644766330718994
    10. '|' → logprob: -9.144765853881836

Token 158: 'one' (ID: 690)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6410413980484009
    2. 'np' → logprob: -1.0160413980484009
    3. 'pivot' → logprob: -3.3910412788391113
    4. '(p' → logprob: -3.5160412788391113
    5. '[p' → logprob: -4.891041278839111
    6. ':]' → logprob: -5.016041278839111
    7. ' np' → logprob: -5.266041278839111
    8. 'A' → logprob: -5.266041278839111
    9. '(np' → logprob: -5.266041278839111
    10. ']' → logprob: -5.641041278839111

Token 159: '_digit' (ID: 119592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3141080141067505
    2. '!=' → logprob: -1.3141080141067505
    3. ' !=' → logprob: -1.5641080141067505
    4. '[p' → logprob: -1.8141080141067505
    5. '[' → logprob: -2.939107894897461
    6. '==' → logprob: -4.814107894897461
    7. 'p' → logprob: -5.314107894897461
    8. ' ==' → logprob: -5.564107894897461
    9. ']!=' → logprob: -5.564107894897461
    10. '_flag' → logprob: -6.064107894897461

Token 160: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00759538821876049
    2. '^' → logprob: -6.257595539093018
    3. ' ]' → logprob: -6.382595539093018
    4. '[' → logprob: -6.882595539093018
    5. '=' → logprob: -7.257595539093018
    6. ' ^' → logprob: -7.632595539093018
    7. '&' → logprob: -7.757595539093018
    8. ' ^=' → logprob: -7.882595539093018
    9. '[p' → logprob: -8.50759506225586
    10. '!=' → logprob: -8.75759506225586

Token 161: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.7895768284797668
    2. '=' → logprob: -1.039576768875122
    3. '^' → logprob: -1.664576768875122
    4. ' =' → logprob: -5.789577007293701
    5. ' ^' → logprob: -11.289576530456543
    6. ' ' → logprob: -12.289576530456543
    7. '-=' → logprob: -13.039576530456543
    8. ')' → logprob: -13.539576530456543
    9. '^^' → logprob: -13.789576530456543
    10. ']' → logprob: -14.289576530456543

Token 162: ' pivot' (ID: 44506)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.1269317865371704
    2. ' pivot' → logprob: -2.126931667327881
    3. 'A' → logprob: -13.376932144165039
    4. 'p' → logprob: -14.001932144165039
    5. ' ' → logprob: -14.626932144165039
    6. 'Pivot' → logprob: -15.501932144165039
    7. 'np' → logprob: -15.876932144165039
    8. '   ' → logprob: -16.12693214416504
    9. '	p' → logprob: -16.37693214416504
    10. ' piv' → logprob: -16.50193214416504

Token 163: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' A' (ID: 355)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.015312052331864834
    2. '[' → logprob: -4.765312194824219
    3. '<|end|>' → logprob: -5.140312194824219
    4. '[i' → logprob: -8.015312194824219
    5. '=' → logprob: -9.015312194824219
    6. ' =' → logprob: -9.765312194824219
    7. '[:]' → logprob: -9.890312194824219
    8. ',' → logprob: -10.265312194824219
    9. '
' → logprob: -10.515312194824219
    10. '[:' → logprob: -10.515312194824219

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00621399749070406
    2. ':]' → logprob: -6.256214141845703
    3. ' ]' → logprob: -6.506214141845703
    4. ')' → logprob: -6.881214141845703
    5. ']=' → logprob: -8.006214141845703
    6. '])' → logprob: -8.006214141845703
    7. '=' → logprob: -8.131214141845703
    8. ')]' → logprob: -8.381214141845703
    9. ':' → logprob: -8.881214141845703
    10. ' :]' → logprob: -9.256214141845703

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03422888368368149
    2. ' =' → logprob: -3.409228801727295
    3. ' ^=' → logprob: -9.159229278564453
    4. ',' → logprob: -9.159229278564453
    5. '<|end|>' → logprob: -9.284229278564453
    6. ')' → logprob: -10.284229278564453
    7. '.' → logprob: -10.534229278564453
    8. '[' → logprob: -10.659229278564453
    9. ']' → logprob: -10.784229278564453
    10. '=
' → logprob: -10.784229278564453

Token 169: ' pivot' (ID: 44506)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.007404299918562174
    2. '(' → logprob: -5.632404327392578
    3. '0' → logprob: -5.882404327392578
    4. '1' → logprob: -7.132404327392578
    5. ' pivot' → logprob: -8.632404327392578
    6. ' (' → logprob: -11.257404327392578
    7. 'np' → logprob: -11.882404327392578
    8. ' ' → logprob: -12.507404327392578
    9. '(p' → logprob: -13.757404327392578
    10. '2' → logprob: -14.382404327392578

Token 170: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: 'res' (ID: 430)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6046046614646912
    2. ')' → logprob: -1.229604721069336
    3. ' ' → logprob: -2.854604721069336
    4. '0' → logprob: -3.979604721069336
    5. '#' → logprob: -4.104604721069336
    6. ' 
' → logprob: -4.604604721069336
    7. ' print' → logprob: -4.854604721069336
    8. '^' → logprob: -5.104604721069336
    9. ' )' → logprob: -5.104604721069336
    10. '<|end|>' → logprob: -5.354604721069336

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2512587308883667
    2. 'ult' → logprob: -1.7512587308883667
    3. 'ults' → logprob: -3.2512588500976562
    4. '=' → logprob: -5.001258850097656
    5. 's' → logprob: -7.001258850097656
    6. ' ' → logprob: -7.001258850097656
    7. 'ULT' → logprob: -8.376258850097656
    8. '_' → logprob: -8.501258850097656
    9. 'ultat' → logprob: -8.626258850097656
    10. '[' → logprob: -9.001258850097656

Token 173: ' sum' (ID: 4215)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.14706356823444366
    2. 'A' → logprob: -2.3970634937286377
    3. 'int' → logprob: -3.3970634937286377
    4. '0' → logprob: -5.147063732147217
    5. 'sum' → logprob: -6.522063732147217
    6. ' np' → logprob: -6.522063732147217
    7. 'xor' → logprob: -7.147063732147217
    8. 'max' → logprob: -7.272063732147217
    9. 'str' → logprob: -7.397063732147217
    10. ' A' → logprob: -8.147063255310059

Token 174: '(' (ID: 7)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0006772888009436429
    2. '(' → logprob: -7.625677108764648
    3. '((' → logprob: -9.125677108764648
    4. '(np' → logprob: -10.125677108764648
    5. 'A' → logprob: -10.875677108764648
    6. '(a' → logprob: -12.250677108764648
    7. '(
' → logprob: -12.750677108764648
    8. '(res' → logprob: -13.000677108764648
    9. '([' → logprob: -13.000677108764648
    10. '(i' → logprob: -13.000677108764648

Token 175: 'odd' (ID: 18303)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.010177336633205414
    2. '(' → logprob: -5.760177135467529
    3. '(A' → logprob: -6.010177135467529
    4. 'np' → logprob: -6.135177135467529
    5. '1' → logprob: -7.260177135467529
    6. 'i' → logprob: -8.010177612304688
    7. 'x' → logprob: -8.135177612304688
    8. 'int' → logprob: -8.510177612304688
    9. '2' → logprob: -8.510177612304688
    10. '[' → logprob: -8.635177612304688

Token 176: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -3.690834273584187e-05
    2. '_' → logprob: -10.87503719329834
    3. 'digit' → logprob: -11.75003719329834
    4. '_bit' → logprob: -11.87503719329834
    5. '_digits' → logprob: -13.75003719329834
    6. 'Digit' → logprob: -14.37503719329834
    7. ')' → logprob: -14.75003719329834
    8. 'A' → logprob: -15.62503719329834
    9. '_d' → logprob: -15.75003719329834
    10. '_res' → logprob: -16.000036239624023

Token 177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027599421446211636
    2. ' )' → logprob: -9.250275611877441
    3. ' -' → logprob: -9.375275611877441
    4. '-' → logprob: -9.625275611877441
    5. ')-' → logprob: -11.000275611877441
    6. '[' → logprob: -12.500275611877441
    7. '+' → logprob: -13.375275611877441
    8. '^' → logprob: -14.375275611877441
    9. ')
' → logprob: -14.375275611877441
    10. ')+' → logprob: -14.500275611877441

Token 178: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1305197477340698
    2. '+' → logprob: -1.3805197477340698
    3. '
' → logprob: -1.5055197477340698
    4. '-' → logprob: -2.8805198669433594
    5. ' +' → logprob: -3.2555198669433594
    6. '^' → logprob: -3.3805198669433594
    7. ' -' → logprob: -3.6305198669433594
    8. ' ^' → logprob: -4.505519866943359
    9. ' if' → logprob: -4.880519866943359
    10. 'res' → logprob: -5.005519866943359

Token 179: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.5738643407821655
    2. ' A' → logprob: -1.9488643407821655
    3. 'np' → logprob: -1.9488643407821655
    4. ' np' → logprob: -2.073864459991455
    5. 'A' → logprob: -2.073864459991455
    6. ' sum' → logprob: -2.323864459991455
    7. 'max' → logprob: -2.573864459991455
    8. ' max' → logprob: -2.948864459991455
    9. 'int' → logprob: -4.073864459991455
    10. ' int' → logprob: -5.573864459991455

Token 180: '2' (ID: 17)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7466129660606384
    2. 'np' → logprob: -1.3716130256652832
    3. 'A' → logprob: -1.9966130256652832
    4. 'max' → logprob: -2.121613025665283
    5. 'int' → logprob: -4.496613025665283
    6. '(A' → logprob: -5.746613025665283
    7. 'res' → logprob: -7.246613025665283
    8. '(np' → logprob: -7.621613025665283
    9. '(sum' → logprob: -8.371612548828125
    10. 'min' → logprob: -8.371612548828125

Token 181: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5555349588394165
    2. '*' → logprob: -1.3055349588394165
    3. ' *' → logprob: -2.305534839630127
    4. '*(' → logprob: -3.430534839630127
    5. ' **' → logprob: -4.180534839630127
    6. '*np' → logprob: -6.305534839630127
    7. 'res' → logprob: -6.305534839630127
    8. '(res' → logprob: -7.555534839630127
    9. '*A' → logprob: -7.555534839630127
    10. ' ' → logprob: -7.805534839630127

Token 182: ' (' (ID: 350)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.209992915391922
    2. 'np' → logprob: -2.0849928855895996
    3. 'res' → logprob: -3.0849928855895996
    4. 'A' → logprob: -4.5849928855896
    5. 'int' → logprob: -5.2099928855896
    6. 'xor' → logprob: -6.5849928855896
    7. 'max' → logprob: -6.7099928855896
    8. '(A' → logprob: -7.7099928855896
    9. 'min' → logprob: -8.334993362426758
    10. ' sum' → logprob: -9.334993362426758

Token 183: 'np' (ID: 12766)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5206515789031982
    2. 'np' → logprob: -1.6456515789031982
    3. 'max' → logprob: -2.5206515789031982
    4. 'A' → logprob: -2.7706515789031982
    5. 'res' → logprob: -3.2706515789031982
    6. 'xor' → logprob: -3.6456515789031982
    7. 'int' → logprob: -6.145651817321777
    8. '(A' → logprob: -6.270651817321777
    9. '(np' → logprob: -8.020651817321777
    10. 'min' → logprob: -8.145651817321777

Token 184: '.bit' (ID: 61866)
  Prédit: '.max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.863603413105011
    2. '.bit' → logprob: -1.1136033535003662
    3. '.sum' → logprob: -1.8636033535003662
    4. '.dot' → logprob: -2.488603353500366
    5. '.am' → logprob: -5.113603591918945
    6. '.argmax' → logprob: -5.488603591918945
    7. 'bit' → logprob: -7.613603591918945
    8. '.linalg' → logprob: -7.988603591918945
    9. '.array' → logprob: -8.988603591918945
    10. '.pt' → logprob: -8.988603591918945

Token 185: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -7.226628895296017e-06
    2. 'xor' → logprob: -12.375007629394531
    3. 'array' → logprob: -14.500007629394531
    4. 'bit' → logprob: -14.625007629394531
    5. 'w' → logprob: -14.875007629394531
    6. 'ize' → logprob: -15.250007629394531
    7. 'value' → logprob: -15.250007629394531
    8. 'weight' → logprob: -16.37500762939453
    9. '_value' → logprob: -16.50000762939453
    10. '_' → logprob: -16.62500762939453

Token 186: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.5332478142227046e-05
    2. '_and' → logprob: -11.125015258789062
    3. 'xor' → logprob: -15.250015258789062
    4. '_or' → logprob: -15.500015258789062
    5. 'and' → logprob: -15.750015258789062
    6. '_a' → logprob: -18.625015258789062
    7. '_y' → logprob: -19.125015258789062
    8. '_ax' → logprob: -20.125015258789062
    9. '_' → logprob: -20.500015258789062
    10. '_bit' → logprob: -20.625015258789062

Token 187: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -2.3915141355246305e-05
    2. '_or' → logprob: -12.12502384185791
    3. 'xor' → logprob: -12.25002384185791
    4. '(or' → logprob: -12.87502384185791
    5. 'ор' → logprob: -13.25002384185791
    6. ' or' → logprob: -13.25002384185791
    7. 'ors' → logprob: -14.00002384185791
    8. '	or' → logprob: -14.56252384185791
    9. '```' → logprob: -14.75002384185791
    10. '   ' → logprob: -15.00002384185791

Token 188: '.reduce' (ID: 49441)
  Prédit: '.reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -0.028192581608891487
    2. 'reduce' → logprob: -4.278192520141602
    3. '(A' → logprob: -4.403192520141602
    4. 'A' → logprob: -7.153192520141602
    5. '(res' → logprob: -8.278192520141602
    6. '(np' → logprob: -8.653192520141602
    7. '.res' → logprob: -8.903192520141602
    8. 'res' → logprob: -8.903192520141602
    9. 'xor' → logprob: -9.528192520141602
    10. ' A' → logprob: -10.278192520141602

Token 189: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00020902375399600714
    2. 'A' → logprob: -8.750208854675293
    3. '((' → logprob: -11.125208854675293
    4. '(' → logprob: -11.125208854675293
    5. '(np' → logprob: -11.875208854675293
    6. ')' → logprob: -12.375208854675293
    7. ' A' → logprob: -12.625208854675293
    8. ' (' → logprob: -12.875208854675293
    9. ')(' → logprob: -13.000208854675293
    10. '(
' → logprob: -14.875208854675293

Token 190: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11426655948162079
    2. '))' → logprob: -2.2392666339874268
    3. '[' → logprob: -6.864266395568848
    4. ')))' → logprob: -8.114266395568848
    5. ' )' → logprob: -10.489266395568848
    6. ')
' → logprob: -10.864266395568848
    7. '))
' → logprob: -11.989266395568848
    8. '[A' → logprob: -12.114266395568848
    9. ' ))' → logprob: -12.239266395568848
    10. '(A' → logprob: -12.614266395568848

Token 191: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017314712749794126
    2. ' print' → logprob: -9.500173568725586
    3. '
' → logprob: -9.625173568725586
    4. '<|end|>' → logprob: -10.750173568725586
    5. ')' → logprob: -11.625173568725586
    6. '```' → logprob: -14.875173568725586
    7. '#' → logprob: -15.500173568725586
    8. '.print' → logprob: -15.500173568725586
    9. '#print' → logprob: -15.875173568725586
    10. '[' → logprob: -15.875173568725586

Token 192: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.039396464824676514
    2. '(' → logprob: -3.2893965244293213
    3. '(sum' → logprob: -7.289396286010742
    4. '()' → logprob: -8.039396286010742
    5. '(x' → logprob: -8.664396286010742
    6. '(np' → logprob: -9.414396286010742
    7. 'res' → logprob: -9.789396286010742
    8. '((' → logprob: -11.414396286010742
    9. '(`' → logprob: -11.789396286010742
    10. '(
' → logprob: -11.914396286010742

Token 193: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. '))' → logprob: -12.750005722045898
    3. '()' → logprob: -13.625005722045898
    4. '())' → logprob: -13.875005722045898
    5. ')`' → logprob: -15.125005722045898
    6. ' )' → logprob: -15.375005722045898
    7. '+' → logprob: -16.3750057220459
    8. '`)' → logprob: -16.6250057220459
    9. '')' → logprob: -17.2500057220459
    10. ')
' → logprob: -17.2500057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 191
Tokens correctement prédits (1ère position, stricte): 72
Tokens correctement prédits (1ère position, avec adaptation): 73
Tokens correctement prédits (top 10): 149
Précision stricte (1ère position): 37.70%
Précision adaptée (1ère position): 38.22%
Précision (top 10): 78.01%
================================================================================
