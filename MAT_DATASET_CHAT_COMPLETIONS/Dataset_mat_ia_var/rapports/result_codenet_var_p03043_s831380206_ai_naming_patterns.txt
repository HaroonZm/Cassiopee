================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

input_integer_total, input_integer_threshold = map(int, input().split())

probability_accumulator = 0.0

for current_integer in range(1, input_integer_total + 1):
    power_exponent = max(0, math.ceil(math.log(input_integer_threshold / current_integer, 2)))
    probability_increment = (1.0 / input_integer_total) * (0.5) ** power_exponent
    probability_accumulator += probability_increment

print(probability_accumulator)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -8.470901229884475e-05
    2. 'import' → logprob: -10.62508487701416
    3. '```' → logprob: -11.00008487701416
    4. '\' → logprob: -11.25008487701416
    5. '.
' → logprob: -12.62508487701416
    6. 'def' → logprob: -12.75008487701416
    7. '.pi' → logprob: -12.87508487701416
    8. '\n' → logprob: -13.00008487701416
    9. '<|end|>' → logprob: -13.12508487701416
    10. '.e' → logprob: -13.25008487701416

Token 4: '_integer' (ID: 82911)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030729053542017937
    2. '.' → logprob: -3.530729055404663
    3. '(
' → logprob: -8.030729293823242
    4. ' (' → logprob: -8.405729293823242
    5. '_' → logprob: -9.530729293823242
    6. ',' → logprob: -9.905729293823242
    7. '```' → logprob: -10.280729293823242
    8. '[' → logprob: -10.655729293823242
    9. ')' → logprob: -10.655729293823242
    10. ''' → logprob: -10.655729293823242

Token 5: '_total' (ID: 23814)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01463316474109888
    2. '_' → logprob: -4.8896331787109375
    3. ')' → logprob: -5.3896331787109375
    4. '[' → logprob: -7.5146331787109375
    5. '.' → logprob: -7.6396331787109375
    6. '=' → logprob: -7.8896331787109375
    7. '```' → logprob: -8.389633178710938
    8. 's' → logprob: -8.889633178710938
    9. '(
' → logprob: -9.014633178710938
    10. ',' → logprob: -9.389633178710938

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7248666882514954
    2. '(' → logprob: -1.3498666286468506
    3. '_' → logprob: -2.3498666286468506
    4. '=' → logprob: -2.5998666286468506
    5. 's' → logprob: -3.3498666286468506
    6. ' =' → logprob: -3.8498666286468506
    7. '_s' → logprob: -4.09986686706543
    8. '[' → logprob: -5.84986686706543
    9. '_space' → logprob: -6.09986686706543
    10. '()' → logprob: -6.59986686706543

Token 7: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6726601719856262
    2. 'input' → logprob: -0.9226601719856262
    3. 'output' → logprob: -3.7976601123809814
    4. 'total' → logprob: -3.9226601123809814
    5. ' output' → logprob: -4.2976603507995605
    6. ' total' → logprob: -4.6726603507995605
    7. ' =' → logprob: -5.4226603507995605
    8. ' ' → logprob: -6.2351603507995605
    9. '<|end|>' → logprob: -6.4226603507995605
    10. '=' → logprob: -6.6101603507995605

Token 8: '_integer' (ID: 82911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.041665464639663696
    2. '_integer' → logprob: -3.916665554046631
    3. '_s' → logprob: -5.166665554046631
    4. '_space' → logprob: -5.791665554046631
    5. '_number' → logprob: -6.166665554046631
    6. '_value' → logprob: -7.041665554046631
    7. '_name' → logprob: -7.291665554046631
    8. '_total' → logprob: -7.541665554046631
    9. '_string' → logprob: -7.541665554046631
    10. '_float' → logprob: -7.666665554046631

Token 9: '_threshold' (ID: 51747)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.6427778601646423
    2. '_' → logprob: -0.8927778601646423
    3. 's' → logprob: -3.892777919769287
    4. ' =' → logprob: -4.142777919769287
    5. '_count' → logprob: -4.892777919769287
    6. '=' → logprob: -5.267777919769287
    7. ',' → logprob: -5.517777919769287
    8. '_s' → logprob: -6.142777919769287
    9. '_sum' → logprob: -6.392777919769287
    10. '_amount' → logprob: -6.517777919769287

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.533216118812561
    2. ' =' → logprob: -0.908216118812561
    3. ',' → logprob: -4.9082159996032715
    4. '_' → logprob: -6.1582159996032715
    5. ')' → logprob: -8.40821647644043
    6. ' ' → logprob: -8.65821647644043
    7. '[' → logprob: -10.40821647644043
    8. '.' → logprob: -10.53321647644043
    9. ' =
' → logprob: -10.78321647644043
    10. '1' → logprob: -11.78321647644043

Token 11: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.294109582901001
    2. ' ' → logprob: -2.044109582901001
    3. 'map' → logprob: -2.419109582901001
    4. '0' → logprob: -3.419109582901001
    5. ' input' → logprob: -6.419109344482422
    6. 'input' → logprob: -7.044109344482422
    7. ' int' → logprob: -7.419109344482422
    8. 'int' → logprob: -8.044109344482422
    9. '5' → logprob: -10.919109344482422
    10. ' [' → logprob: -11.044109344482422

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.41113466024398804
    2. '(' → logprob: -1.1611347198486328
    3. '(str' → logprob: -4.411134719848633
    4. '(lambda' → logprob: -4.536134719848633
    5. 'int' → logprob: -8.036134719848633
    6. '(input' → logprob: -8.661134719848633
    7. '<|end|>' → logprob: -8.911134719848633
    8. '(
' → logprob: -9.786134719848633
    9. '(len' → logprob: -9.786134719848633
    10. '[int' → logprob: -9.911134719848633

Token 13: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.22300982475280762
    2. 'input' → logprob: -2.2230098247528076
    3. ')' → logprob: -2.4730098247528076
    4. ' input' → logprob: -5.598010063171387
    5. '(' → logprob: -6.348010063171387
    6. ',input' → logprob: -6.848010063171387
    7. ',' → logprob: -8.348010063171387
    8. '[input' → logprob: -9.098010063171387
    9. '```' → logprob: -9.223010063171387
    10. '<input' → logprob: -9.848010063171387

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.033667370676994324
    2. ' input' → logprob: -3.4086673259735107
    3. ')' → logprob: -11.28366756439209
    4. '(input' → logprob: -11.90866756439209
    5. ',input' → logprob: -13.90866756439209
    6. '=input' → logprob: -14.90866756439209
    7. '<input' → logprob: -15.65866756439209
    8. '[input' → logprob: -15.65866756439209
    9. '```' → logprob: -15.90866756439209
    10. ' )' → logprob: -16.033666610717773

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0016247143503278494
    2. '()' → logprob: -6.876624584197998
    3. '())' → logprob: -8.126625061035156
    4. ')' → logprob: -8.376625061035156
    5. '(' → logprob: -9.876625061035156
    6. '('').' → logprob: -12.126625061035156
    7. ').' → logprob: -13.251625061035156
    8. '.readline' → logprob: -13.376625061035156
    9. '.' → logprob: -13.501625061035156
    10. '('' → logprob: -13.876625061035156

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.537180211627856e-05
    2. 'strip' → logprob: -10.125045776367188
    3. 'rstrip' → logprob: -12.625045776367188
    4. ' split' → logprob: -13.500045776367188
    5. 'spl' → logprob: -15.375045776367188
    6. '(split' → logprob: -15.500045776367188
    7. 'read' → logprob: -16.375045776367188
    8. ')' → logprob: -17.375045776367188
    9. 'startswith' → logprob: -18.375045776367188
    10. '_split' → logprob: -18.750045776367188

Token 17: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01706991344690323
    2. '))' → logprob: -4.2670698165893555
    3. '())' → logprob: -6.0170698165893555
    4. '(' → logprob: -8.517069816589355
    5. '()' → logprob: -9.267069816589355
    6. '`)' → logprob: -9.767069816589355
    7. '),' → logprob: -10.892069816589355
    8. ')))' → logprob: -11.017069816589355
    9. ')`' → logprob: -11.267069816589355
    10. '()))' → logprob: -11.892069816589355

Token 18: 'prob' (ID: 29823)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09023850411176682
    2. 'result' → logprob: -3.090238571166992
    3. '```' → logprob: -4.090238571166992
    4. ' if' → logprob: -5.215238571166992
    5. '`' → logprob: -5.590238571166992
    6. 'for' → logprob: -5.840238571166992
    7. '``' → logprob: -6.590238571166992
    8. 'count' → logprob: -6.715238571166992
    9. '
' → logprob: -6.715238571166992
    10. 'total' → logprob: -6.965238571166992

Token 19: 'ability' (ID: 3563)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8566069006919861
    2. 'ability' → logprob: -0.9816069006919861
    3. '(' → logprob: -1.7316069602966309
    4. 'abil' → logprob: -4.731606960296631
    5. ')' → logprob: -4.981606960296631
    6. '_space' → logprob: -7.356606960296631
    7. ' =' → logprob: -7.356606960296631
    8. 'ab' → logprob: -7.481606960296631
    9. '_ab' → logprob: -7.481606960296631
    10. '_)' → logprob: -7.731606960296631

Token 20: '_acc' (ID: 35551)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008742451667785645
    2. '_' → logprob: -4.883742332458496
    3. 's' → logprob: -8.383742332458496
    4. '_space' → logprob: -8.508742332458496
    5. ')' → logprob: -8.758742332458496
    6. '=' → logprob: -9.133742332458496
    7. '[' → logprob: -9.633742332458496
    8. '_factor' → logprob: -9.883742332458496
    9. ' =' → logprob: -10.258742332458496
    10. '_s' → logprob: -10.883742332458496

Token 21: 'umulator' (ID: 90989)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.7992886900901794
    2. 'uracy' → logprob: -1.2992887496948242
    3. '_' → logprob: -1.7992887496948242
    4. 'umulate' → logprob: -3.049288749694824
    5. 'umul' → logprob: -3.799288749694824
    6. 'umulator' → logprob: -4.424288749694824
    7. '=' → logprob: -4.674288749694824
    8. 'umulative' → logprob: -4.799288749694824
    9. ' =' → logprob: -4.924288749694824
    10. 'u' → logprob: -6.299288749694824

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04051484540104866
    2. ' +=' → logprob: -3.9155149459838867
    3. '=' → logprob: -4.040514945983887
    4. ' ' → logprob: -6.540514945983887
    5. '_' → logprob: -7.790514945983887
    6. '[' → logprob: -9.290514945983887
    7. ')' → logprob: -9.915514945983887
    8. ',' → logprob: -10.290514945983887
    9. '+=' → logprob: -10.290514945983887
    10. '.' → logprob: -11.040514945983887

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25258687138557434
    2. '0' → logprob: -1.502586841583252
    3. '1' → logprob: -7.752586841583252
    4. ' math' → logprob: -9.00258731842041
    5. ' []' → logprob: -10.37758731842041
    6. 'math' → logprob: -10.50258731842041
    7. ' [' → logprob: -11.12758731842041
    8. '[]' → logprob: -12.12758731842041
    9. '[' → logprob: -12.50258731842041
    10. 'input' → logprob: -13.19008731842041

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008623883477412164
    2. '1' → logprob: -7.7508625984191895
    3. 'math' → logprob: -8.000862121582031
    4. ' ' → logprob: -9.875862121582031
    5. 'sum' → logprob: -11.500862121582031
    6. '[]' → logprob: -11.875862121582031
    7. '+' → logprob: -12.250862121582031
    8. '[' → logprob: -12.750862121582031
    9. 'float' → logprob: -12.750862121582031
    10. '(' → logprob: -12.750862121582031

Token 25: '.' (ID: 13)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47418031096458435
    2. ' for' → logprob: -1.0991803407669067
    3. '
' → logprob: -4.849180221557617
    4. ')' → logprob: -4.974180221557617
    5. '_' → logprob: -5.224180221557617
    6. '=' → logprob: -5.224180221557617
    7. '```' → logprob: -5.349180221557617
    8. ',' → logprob: -5.599180221557617
    9. ' ' → logprob: -5.849180221557617
    10. ':' → logprob: -6.474180221557617

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011742244474589825
    2. ' ' → logprob: -4.886742115020752
    3. '<|end|>' → logprob: -6.011742115020752
    4. '```' → logprob: -6.886742115020752
    5. '1' → logprob: -8.13674259185791
    6. '9' → logprob: -9.63674259185791
    7. '5' → logprob: -10.01174259185791
    8. '.' → logprob: -10.26174259185791
    9. ' 
' → logprob: -10.38674259185791
    10. '2' → logprob: -10.63674259185791

Token 27: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13969291746616364
    2. ' for' → logprob: -2.139693021774292
    3. '
' → logprob: -4.639692783355713
    4. '\n' → logprob: -6.514692783355713
    5. '<|end|>' → logprob: -8.389693260192871
    6. '\' → logprob: -8.764693260192871
    7. '' → logprob: -8.889693260192871
    8. ',' → logprob: -8.889693260192871
    9. '```' → logprob: -9.014693260192871
    10. ')' → logprob: -9.139693260192871

Token 28: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002533528604544699
    2. ' for' → logprob: -8.500253677368164
    3. 'f' → logprob: -10.375253677368164
    4. '```' → logprob: -12.000253677368164
    5. 'i' → logprob: -12.250253677368164
    6. 'if' → logprob: -12.875253677368164
    7. 'n' → logprob: -13.250253677368164
    8. '\n' → logprob: -14.250253677368164
    9. '
' → logprob: -14.875253677368164
    10. '`' → logprob: -15.000253677368164

Token 29: ' current' (ID: 2208)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01690513640642166
    2. ' _' → logprob: -4.141905307769775
    3. 'i' → logprob: -8.516904830932617
    4. ' ' → logprob: -9.016904830932617
    5. ' number' → logprob: -9.266904830932617
    6. '_' → logprob: -9.391904830932617
    7. ' n' → logprob: -9.516904830932617
    8. ' value' → logprob: -9.641904830932617
    9. ' integer' → logprob: -9.891904830932617
    10. ' x' → logprob: -10.266904830932617

Token 30: '_integer' (ID: 82911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2743920385837555
    2. ' ' → logprob: -1.899392008781433
    3. ' _' → logprob: -2.8993921279907227
    4. ' in' → logprob: -3.6493921279907227
    5. ' i' → logprob: -5.524392127990723
    6. '_i' → logprob: -6.649392127990723
    7. '_space' → logprob: -7.149392127990723
    8. '  ' → logprob: -7.149392127990723
    9. '_integer' → logprob: -7.774392127990723
    10. '_value' → logprob: -8.149392127990723

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02356642484664917
    2. 'in' → logprob: -3.773566484451294
    3. '_' → logprob: -8.898566246032715
    4. ' ' → logprob: -9.023566246032715
    5. '_in' → logprob: -10.148566246032715
    6. ' _' → logprob: -12.523566246032715
    7. '	in' → logprob: -13.023566246032715
    8. '```' → logprob: -13.023566246032715
    9. '  ' → logprob: -13.148566246032715
    10. 's' → logprob: -13.273566246032715

Token 32: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.020548781380057335
    2. 'range' → logprob: -3.8955488204956055
    3. ' ' → logprob: -12.270548820495605
    4. '(range' → logprob: -13.645548820495605
    5. '	range' → logprob: -14.270548820495605
    6. '  ' → logprob: -16.27054786682129
    7. ' xrange' → logprob: -17.14554786682129
    8. '1' → logprob: -17.39554786682129
    9. '_range' → logprob: -17.52054786682129
    10. ' ' → logprob: -17.52054786682129

Token 33: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007616560440510511
    2. '(input' → logprob: -4.8826165199279785
    3. ' (' → logprob: -12.507616996765137
    4. '(
' → logprob: -12.632616996765137
    5. '(len' → logprob: -14.007616996765137
    6. '(int' → logprob: -14.632616996765137
    7. '(in' → logprob: -15.257616996765137
    8. '(

' → logprob: -15.382616996765137
    9. '(open' → logprob: -15.382616996765137
    10. '(current' → logprob: -15.382616996765137

Token 34: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5332719087600708
    2. '1' → logprob: -0.9082719087600708
    3. ' input' → logprob: -4.658271789550781
    4. ' ' → logprob: -7.908271789550781
    5. '(input' → logprob: -9.158271789550781
    6. '0' → logprob: -10.158271789550781
    7. ',input' → logprob: -11.033271789550781
    8. ')' → logprob: -11.220771789550781
    9. 'int' → logprob: -11.408271789550781
    10. '(' → logprob: -11.845771789550781

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043734462815336883
    2. ',input' → logprob: -8.37543773651123
    3. ' ,' → logprob: -8.50043773651123
    4. ',

' → logprob: -14.00043773651123
    5. 'input' → logprob: -14.25043773651123
    6. '(input' → logprob: -14.87543773651123
    7. '1' → logprob: -15.00043773651123
    8. ' ' → logprob: -15.25043773651123
    9. ',
' → logprob: -15.50043773651123
    10. '```' → logprob: -15.75043773651123

Token 36: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47409215569496155
    2. ' input' → logprob: -0.9740921258926392
    3. '=input' → logprob: -12.724092483520508
    4. ' ' → logprob: -13.099092483520508
    5. ',input' → logprob: -13.349092483520508
    6. '(input' → logprob: -13.349092483520508
    7. '1' → logprob: -13.599092483520508
    8. ')' → logprob: -13.599092483520508
    9. '<input' → logprob: -13.974092483520508
    10. 'int' → logprob: -14.474092483520508

Token 37: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.875001907348633
    3. '_total' → logprob: -14.625001907348633
    4. '_INTEGER' → logprob: -16.125001907348633
    5. '_int' → logprob: -16.125001907348633
    6. '_in' → logprob: -16.875001907348633
    7. '_Integer' → logprob: -17.125001907348633
    8. ' _' → logprob: -18.125001907348633
    9. '_number' → logprob: -18.375001907348633
    10. 'integer' → logprob: -18.500001907348633

Token 38: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -3.249780638725497e-05
    2. '_' → logprob: -11.375032424926758
    3. 'total' → logprob: -11.750032424926758
    4. '+' → logprob: -12.375032424926758
    5. '_tot' → logprob: -12.375032424926758
    6. '_threshold' → logprob: -12.875032424926758
    7. ' _' → logprob: -14.125032424926758
    8. '_Total' → logprob: -15.375032424926758
    9. ' +' → logprob: -15.500032424926758
    10. '_max' → logprob: -16.000032424926758

Token 39: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14269229769706726
    2. '+' → logprob: -2.0176923274993896
    3. ' ' → logprob: -11.392692565917969
    4. ',' → logprob: -12.767692565917969
    5. '):' → logprob: -14.517692565917969
    6. '```' → logprob: -14.767692565917969
    7. ' ,' → logprob: -15.017692565917969
    8. ' +
' → logprob: -15.142692565917969
    9. ')+' → logprob: -15.892692565917969
    10. '   ' → logprob: -15.955192565917969

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04858918860554695
    2. ' ' → logprob: -3.0485892295837402
    3. '```' → logprob: -13.923588752746582
    4. ')' → logprob: -15.423588752746582
    5. ' ' → logprob: -15.923588752746582
    6. '   ' → logprob: -15.986088752746582
    7. '2' → logprob: -16.6110897064209
    8. '<|end|>' → logprob: -16.6735897064209
    9. ' )' → logprob: -17.3610897064209
    10. ',' → logprob: -17.4235897064209

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '```' → logprob: -16.625158309936523
    4. '   ' → logprob: -17.625158309936523
    5. ')' → logprob: -17.750158309936523
    6. '  ' → logprob: -17.875158309936523
    7. '１' → logprob: -18.750158309936523
    8. '2' → logprob: -19.187658309936523
    9. '۱' → logprob: -19.625158309936523
    10. '(' → logprob: -19.625158309936523

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019080507336184382
    2. ':' → logprob: -6.376907825469971
    3. '):
' → logprob: -9.626908302307129
    4. ')' → logprob: -9.751908302307129
    5. ' ):' → logprob: -9.751908302307129
    6. ',' → logprob: -10.876908302307129
    7. '+' → logprob: -13.751908302307129
    8. '):
' → logprob: -14.751908302307129
    9. ' :' → logprob: -14.876908302307129
    10. '}:' → logprob: -14.876908302307129

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38678500056266785
    2. ' ' → logprob: -1.6367850303649902
    3. ' 
' → logprob: -2.6367850303649902
    4. 'prob' → logprob: -3.8867850303649902
    5. '<|end|>' → logprob: -4.13678503036499
    6. '    ' → logprob: -5.01178503036499
    7. '    
' → logprob: -5.51178503036499
    8. ' probability' → logprob: -5.76178503036499
    9. '```' → logprob: -6.63678503036499
    10. '     
' → logprob: -7.76178503036499

Token 44: ' power' (ID: 3470)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4145490527153015
    2. ' probability' → logprob: -1.9145491123199463
    3. ' ' → logprob: -3.2895491123199463
    4. ' math' → logprob: -3.4145491123199463
    5. '    ' → logprob: -3.5395491123199463
    6. '    
' → logprob: -3.5395491123199463
    7. 'prob' → logprob: -3.7895491123199463
    8. ' 
' → logprob: -5.039548873901367
    9. ' current' → logprob: -5.414548873901367
    10. '```' → logprob: -5.414548873901367

Token 45: '_ex' (ID: 5724)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7413692474365234
    2. '=' → logprob: -1.1163692474365234
    3. '(' → logprob: -1.9913692474365234
    4. '_value' → logprob: -3.4913692474365234
    5. '_' → logprob: -4.991369247436523
    6. 's' → logprob: -5.366369247436523
    7. '   ' → logprob: -5.491369247436523
    8. '_prob' → logprob: -5.991369247436523
    9. '_of' → logprob: -6.491369247436523
    10. '_result' → logprob: -6.616369247436523

Token 46: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.7417243719100952
    2. 'pression' → logprob: -0.8667243719100952
    3. 'p' → logprob: -2.3667244911193848
    4. 'pr' → logprob: -5.491724491119385
    5. 'ponential' → logprob: -5.866724491119385
    6. 'planation' → logprob: -6.991724491119385
    7. '```' → logprob: -8.116724014282227
    8. 'pressions' → logprob: -8.616724014282227
    9. 'pon' → logprob: -8.991724014282227
    10. 'po' → logprob: -9.116724014282227

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07913025468587875
    2. '=' → logprob: -2.579130172729492
    3. '   ' → logprob: -9.329130172729492
    4. ' ' → logprob: -9.829130172729492
    5. '    ' → logprob: -10.204130172729492
    6. '  ' → logprob: -10.954130172729492
    7. ')' → logprob: -11.204130172729492
    8. ',' → logprob: -11.329130172729492
    9. 's' → logprob: -12.329130172729492
    10. '```' → logprob: -12.704130172729492

Token 48: ' max' (ID: 2999)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.661229133605957
    2. 'current' → logprob: -1.286229133605957
    3. ' math' → logprob: -2.661229133605957
    4. ' input' → logprob: -3.536229133605957
    5. 'math' → logprob: -3.661229133605957
    6. ' -' → logprob: -3.911229133605957
    7. 'input' → logprob: -4.161229133605957
    8. '-' → logprob: -4.286229133605957
    9. '2' → logprob: -4.786229133605957
    10. '1' → logprob: -5.286229133605957

Token 49: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009455720894038677
    2. '(current' → logprob: -4.759455680847168
    3. '(input' → logprob: -7.259455680847168
    4. '(
' → logprob: -9.759455680847168
    5. '((' → logprob: -10.384455680847168
    6. '(-' → logprob: -11.509455680847168
    7. '(math' → logprob: -11.634455680847168
    8. '(power' → logprob: -11.634455680847168
    9. '(int' → logprob: -12.634455680847168
    10. 'current' → logprob: -12.634455680847168

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2550159692764282
    2. 'current' → logprob: -2.1300158500671387
    3. 'input' → logprob: -2.8800158500671387
    4. '(' → logprob: -4.255015850067139
    5. ' ' → logprob: -4.380015850067139
    6. ' current' → logprob: -4.380015850067139
    7. ' input' → logprob: -5.755015850067139
    8. '1' → logprob: -6.005015850067139
    9. '(current' → logprob: -6.005015850067139
    10. '(input' → logprob: -6.880015850067139

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010611523175612092
    2. ',current' → logprob: -7.126060962677002
    3. ' ,' → logprob: -9.00106143951416
    4. ',input' → logprob: -9.12606143951416
    5. '   ' → logprob: -11.75106143951416
    6. ',
' → logprob: -12.50106143951416
    7. 'current' → logprob: -12.50106143951416
    8. ')' → logprob: -13.75106143951416
    9. 'input' → logprob: -14.12606143951416
    10. ',int' → logprob: -14.25106143951416

Token 52: ' math' (ID: 13324)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.8986632227897644
    2. 'current' → logprob: -1.3986632823944092
    3. ' input' → logprob: -1.5236632823944092
    4. 'input' → logprob: -2.148663282394409
    5. ' math' → logprob: -5.89866304397583
    6. 'math' → logprob: -6.27366304397583
    7. '(current' → logprob: -7.02366304397583
    8. '   ' → logprob: -7.14866304397583
    9. 'int' → logprob: -7.14866304397583
    10. ' ' → logprob: -7.27366304397583

Token 53: '.ceil' (ID: 60295)
  Prédit: '.log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.log' → logprob: -0.6247369647026062
    2. '.ceil' → logprob: -0.8747369647026062
    3. '.pow' → logprob: -3.374737024307251
    4. '.floor' → logprob: -4.874736785888672
    5. '.' → logprob: -5.624736785888672
    6. '.randint' → logprob: -7.749736785888672
    7. '.factor' → logprob: -7.874736785888672
    8. 'pow' → logprob: -8.874736785888672
    9. '.py' → logprob: -8.999736785888672
    10. '.ex' → logprob: -9.124736785888672

Token 54: '(math' (ID: 86464)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4444275200366974
    2. '(math' → logprob: -1.694427490234375
    3. '(input' → logprob: -2.444427490234375
    4. '(' → logprob: -2.569427490234375
    5. ' (' → logprob: -5.319427490234375
    6. '(-' → logprob: -6.444427490234375
    7. '(log' → logprob: -6.694427490234375
    8. '(
' → logprob: -7.194427490234375
    9. '(((' → logprob: -7.319427490234375
    10. ' ((' → logprob: -7.319427490234375

Token 55: '.log' (ID: 2659)
  Prédit: '.log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.log' → logprob: -0.00024989593657664955
    2. '.pow' → logprob: -10.000249862670898
    3. '(log' → logprob: -10.000249862670898
    4. '.' → logprob: -10.125249862670898
    5. 'log' → logprob: -10.375249862670898
    6. '.ceil' → logprob: -10.750249862670898
    7. '-log' → logprob: -10.875249862670898
    8. '.sqrt' → logprob: -11.000249862670898
    9. '_log' → logprob: -11.750249862670898
    10. '```' → logprob: -12.875249862670898

Token 56: '(input' (ID: 10054)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05464630201458931
    2. '(current' → logprob: -3.8046462535858154
    3. '(' → logprob: -4.1796464920043945
    4. '(input' → logprob: -4.8046464920043945
    5. '10' → logprob: -5.3046464920043945
    6. '((' → logprob: -6.1796464920043945
    7. '(prob' → logprob: -8.929646492004395
    8. '(math' → logprob: -9.679646492004395
    9. '(max' → logprob: -10.804646492004395
    10. '(base' → logprob: -11.179646492004395

Token 57: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.0006153396097943187
    2. '10' → logprob: -7.750615119934082
    3. 'integer' → logprob: -9.875615119934082
    4. ' _' → logprob: -10.625615119934082
    5. 'Integer' → logprob: -10.875615119934082
    6. ' ' → logprob: -10.875615119934082
    7. '_INTEGER' → logprob: -11.125615119934082
    8. '(' → logprob: -11.875615119934082
    9. '_' → logprob: -12.000615119934082
    10. '(integer' → logprob: -12.125615119934082

Token 58: '_threshold' (ID: 51747)
  Prédit: '_threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_threshold' → logprob: -0.25270286202430725
    2. '_total' → logprob: -1.5027028322219849
    3. '_current' → logprob: -7.627702713012695
    4. 'total' → logprob: -9.502702713012695
    5. 'threshold' → logprob: -9.877702713012695
    6. ' ' → logprob: -10.502702713012695
    7. '_' → logprob: -10.752702713012695
    8. '_integer' → logprob: -11.127702713012695
    9. '   ' → logprob: -11.377702713012695
    10. '_thresh' → logprob: -11.502702713012695

Token 59: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6030350923538208
    2. '/' → logprob: -0.8530350923538208
    3. '/current' → logprob: -3.9780349731445312
    4. ')' → logprob: -5.353034973144531
    5. ',' → logprob: -6.728034973144531
    6. '(current' → logprob: -7.728034973144531
    7. ' ' → logprob: -7.978034973144531
    8. 'current' → logprob: -8.103034973144531
    9. ' current' → logprob: -8.728034973144531
    10. '-' → logprob: -8.728034973144531

Token 60: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.225449338555336
    2. ' current' → logprob: -1.6004493236541748
    3. '   ' → logprob: -11.475449562072754
    4. ' ' → logprob: -11.850449562072754
    5. '	current' → logprob: -12.475449562072754
    6. 'max' → logprob: -12.975449562072754
    7. '(current' → logprob: -12.975449562072754
    8. '$current' → logprob: -13.100449562072754
    9. 'cur' → logprob: -13.350449562072754
    10. ' max' → logprob: -13.725449562072754

Token 61: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -4.008129963040119e-06
    2. 'integer' → logprob: -13.125003814697266
    3. '_INTEGER' → logprob: -14.250003814697266
    4. 'Integer' → logprob: -15.000003814697266
    5. '_Integer' → logprob: -15.000003814697266
    6. '_in' → logprob: -15.500003814697266
    7. ' ' → logprob: -15.875003814697266
    8. '   ' → logprob: -16.250003814697266
    9. '```' → logprob: -16.875003814697266
    10. ')' → logprob: -16.875003814697266

Token 62: ',' (ID: 11)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.04962177574634552
    2. '))' → logprob: -3.924621820449829
    3. ',' → logprob: -4.04962158203125
    4. ' ' → logprob: -5.42462158203125
    5. ')' → logprob: -5.67462158203125
    6. ')))
' → logprob: -6.29962158203125
    7. ' ))' → logprob: -7.42462158203125
    8. '))))' → logprob: -8.17462158203125
    9. ' ,' → logprob: -8.42462158203125
    10. ' if' → logprob: -9.04962158203125

Token 63: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2688719630241394
    2. '6' → logprob: -1.6438720226287842
    3. '3' → logprob: -3.893872022628784
    4. ' ' → logprob: -4.143871784210205
    5. '   ' → logprob: -6.268871784210205
    6. '10' → logprob: -6.393871784210205
    7. 'input' → logprob: -6.518871784210205
    8. '4' → logprob: -7.893871784210205
    9. '5' → logprob: -8.393872261047363
    10. '1' → logprob: -8.518872261047363

Token 64: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09644623845815659
    2. '3' → logprob: -3.3464462757110596
    3. '6' → logprob: -3.7214462757110596
    4. 'input' → logprob: -3.8464462757110596
    5. '10' → logprob: -4.8464460372924805
    6. ' ' → logprob: -6.5964460372924805
    7. '4' → logprob: -7.4714460372924805
    8. '5' → logprob: -8.22144603729248
    9. '   ' → logprob: -8.34644603729248
    10. '1' → logprob: -8.47144603729248

Token 65: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.022719474509358406
    2. ')' → logprob: -4.397719383239746
    3. '))' → logprob: -4.647719383239746
    4. '))))' → logprob: -8.272719383239746
    5. ')))
' → logprob: -8.522719383239746
    6. ' ' → logprob: -9.272719383239746
    7. ' ))' → logprob: -12.147719383239746
    8. ')))

' → logprob: -12.147719383239746
    9. ' )' → logprob: -12.522719383239746
    10. ')));' → logprob: -12.522719383239746

Token 66: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47902509570121765
    2. '   ' → logprob: -0.97902512550354
    3. ' )' → logprob: -5.604024887084961
    4. ' *' → logprob: -8.229024887084961
    5. '  ' → logprob: -8.604024887084961
    6. '*' → logprob: -8.979024887084961
    7. ',' → logprob: -9.104024887084961
    8. ' ' → logprob: -9.229024887084961
    9. '    ' → logprob: -9.354024887084961
    10. '):' → logprob: -9.479024887084961

Token 67: ' probability' (ID: 34933)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7363318204879761
    2. 'prob' → logprob: -1.361331820487976
    3. ' probability' → logprob: -1.361331820487976
    4. ')' → logprob: -4.986331939697266
    5. ' )' → logprob: -7.861331939697266
    6. ' prob' → logprob: -7.861331939697266
    7. '  ' → logprob: -8.486331939697266
    8. '    ' → logprob: -8.986331939697266
    9. '_probability' → logprob: -9.111331939697266
    10. ' ' → logprob: -9.611331939697266

Token 68: '_increment' (ID: 132160)
  Prédit: '_acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -13.500005722045898
    3. ' =' → logprob: -13.500005722045898
    4. '_increment' → logprob: -13.625005722045898
    5. '=' → logprob: -14.375005722045898
    6. '_add' → logprob: -16.0000057220459
    7. '_ex' → logprob: -16.2500057220459
    8. '	acc' → logprob: -16.6250057220459
    9. '_ac' → logprob: -17.0000057220459
    10. 'acc' → logprob: -17.1250057220459

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013844948261976242
    2. '=' → logprob: -4.763844966888428
    3. ' +=' → logprob: -5.263844966888428
    4. '+=' → logprob: -10.38884449005127
    5. ' ' → logprob: -12.13884449005127
    6. ' *=' → logprob: -13.38884449005127
    7. ' ' → logprob: -13.88884449005127
    8. '   ' → logprob: -14.51384449005127
    9. ' -=' → logprob: -14.51384449005127
    10. '  ' → logprob: -15.01384449005127

Token 70: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7704588174819946
    2. '1' → logprob: -1.1454588174819946
    3. ' (' → logprob: -1.8954588174819946
    4. '0' → logprob: -3.270458698272705
    5. ' ' → logprob: -3.770458698272705
    6. '2' → logprob: -5.395458698272705
    7. '   ' → logprob: -6.395458698272705
    8. 'prob' → logprob: -8.270459175109863
    9. 'pow' → logprob: -8.520459175109863
    10. 'math' → logprob: -8.645459175109863

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4561578631401062
    2. '0' → logprob: -1.456157922744751
    3. '(' → logprob: -2.206157922744751
    4. ' ' → logprob: -4.581157684326172
    5. ' (' → logprob: -5.081157684326172
    6. 'current' → logprob: -6.081157684326172
    7. '2' → logprob: -6.831157684326172
    8. '   ' → logprob: -7.081157684326172
    9. 'input' → logprob: -7.706157684326172
    10. '(current' → logprob: -8.331157684326172

Token 72: '.' (ID: 13)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.387472003698349
    2. ' /' → logprob: -1.1374720335006714
    3. ' -' → logprob: -8.762472152709961
    4. '-' → logprob: -8.762472152709961
    5. ')' → logprob: -9.262472152709961
    6. ' ' → logprob: -9.887472152709961
    7. ' )' → logprob: -10.762472152709961
    8. '   ' → logprob: -10.762472152709961
    9. '/
' → logprob: -10.887472152709961
    10. '/)' → logprob: -11.387472152709961

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011476772837340832
    2. '-' → logprob: -5.011476993560791
    3. 'power' → logprob: -6.011476993560791
    4. '/' → logprob: -7.511476993560791
    5. '**' → logprob: -7.886476993560791
    6. '5' → logprob: -7.886476993560791
    7. '-p' → logprob: -8.761476516723633
    8. '3' → logprob: -9.011476516723633
    9. 'prob' → logprob: -9.136476516723633
    10. 'pow' → logprob: -9.261476516723633

Token 74: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4453965127468109
    2. '/' → logprob: -1.0703965425491333
    3. ' ' → logprob: -5.070396423339844
    4. ')' → logprob: -5.195396423339844
    5. ' )' → logprob: -6.695396423339844
    6. '   ' → logprob: -6.820396423339844
    7. ' -' → logprob: -6.945396423339844
    8. '-' → logprob: -7.945396423339844
    9. ' *' → logprob: -8.070396423339844
    10. '    ' → logprob: -8.445396423339844

Token 75: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.068155437707901
    2. '2' → logprob: -3.318155527114868
    3. '6' → logprob: -4.568155288696289
    4. ' input' → logprob: -4.818155288696289
    5. 'current' → logprob: -5.443155288696289
    6. '   ' → logprob: -6.068155288696289
    7. ')' → logprob: -6.068155288696289
    8. ' ' → logprob: -7.193155288696289
    9. '  ' → logprob: -8.193155288696289
    10. ' current' → logprob: -8.443155288696289

Token 76: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -4.6087021473795176e-05
    2. 'integer' → logprob: -10.250045776367188
    3. 'Integer' → logprob: -11.750045776367188
    4. '_INTEGER' → logprob: -13.750045776367188
    5. '_Integer' → logprob: -14.500045776367188
    6. '_total' → logprob: -15.625045776367188
    7. '_input' → logprob: -16.000045776367188
    8. ')' → logprob: -16.625045776367188
    9. '_' → logprob: -16.750045776367188
    10. ' integer' → logprob: -16.750045776367188

Token 77: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.0011509364703670144
    2. '_current' → logprob: -7.376151084899902
    3. 'total' → logprob: -7.751151084899902
    4. '_to' → logprob: -10.626151084899902
    5. '_' → logprob: -10.876151084899902
    6. 'current' → logprob: -11.001151084899902
    7. '_integer' → logprob: -11.251151084899902
    8. ')' → logprob: -12.501151084899902
    9. '_tot' → logprob: -13.001151084899902
    10. '

' → logprob: -13.126151084899902

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029044276103377342
    2. '**' → logprob: -4.154044151306152
    3. ')**' → logprob: -4.529044151306152
    4. ' **' → logprob: -6.404044151306152
    5. ' )' → logprob: -8.529044151306152
    6. '**)' → logprob: -8.654044151306152
    7. '*' → logprob: -10.279044151306152
    8. ')*' → logprob: -10.404044151306152
    9. ' **)' → logprob: -11.279044151306152
    10. '   ' → logprob: -11.904044151306152

Token 79: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.8084441423416138
    2. ' *' → logprob: -0.9334441423416138
    3. '*' → logprob: -2.308444023132324
    4. ' **' → logprob: -2.808444023132324
    5. '   ' → logprob: -7.183444023132324
    6. ' /' → logprob: -7.683444023132324
    7. '/' → logprob: -9.308444023132324
    8. '*(' → logprob: -9.558444023132324
    9. ' ' → logprob: -9.933444023132324
    10. '  ' → logprob: -10.808444023132324

Token 80: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.033504147082567215
    2. ' (' → logprob: -3.6585042476654053
    3. '2' → logprob: -5.283504009246826
    4. ' ' → logprob: -7.533504009246826
    5. '((' → logprob: -7.783504009246826
    6. '(math' → logprob: -8.033504486083984
    7. '(prob' → logprob: -9.033504486083984
    8. '0' → logprob: -9.158504486083984
    9. 'pow' → logprob: -9.158504486083984
    10. '   ' → logprob: -9.158504486083984

Token 81: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.293540358543396
    2. '0' → logprob: -1.918540358543396
    3. '2' → logprob: -2.5435404777526855
    4. '1' → logprob: -3.7935404777526855
    5. ' (' → logprob: -5.7935404777526855
    6. ' ' → logprob: -6.1685404777526855
    7. '   ' → logprob: -8.043540000915527
    8. '.' → logprob: -8.543540000915527
    9. 'pow' → logprob: -8.543540000915527
    10. 'math' → logprob: -9.293540000915527

Token 82: '.' (ID: 13)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.1024287939071655
    2. ' /' → logprob: -1.3524287939071655
    3. '/' → logprob: -1.8524287939071655
    4. '.' → logprob: -2.102428913116455
    5. ' **' → logprob: -2.602428913116455
    6. ')' → logprob: -3.227428913116455
    7. '-' → logprob: -5.602428913116455
    8. ' -' → logprob: -5.977428913116455
    9. ' ' → logprob: -6.227428913116455
    10. '2' → logprob: -6.477428913116455

Token 83: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.06210324913263321
    2. 'power' → logprob: -2.937103271484375
    3. '0' → logprob: -5.062103271484375
    4. 'pow' → logprob: -7.437103271484375
    5. 'powers' → logprob: -9.687103271484375
    6. '**' → logprob: -10.312103271484375
    7. 'prob' → logprob: -10.562103271484375
    8. '3' → logprob: -10.812103271484375
    9. ')' → logprob: -10.812103271484375
    10. '6' → logprob: -11.312103271484375

Token 84: ')' (ID: 8)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.01966233365237713
    2. ' **' → logprob: -4.144662380218506
    3. ')**' → logprob: -5.894662380218506
    4. ')' → logprob: -7.144662380218506
    5. '**)' → logprob: -9.644661903381348
    6. '*' → logprob: -11.769661903381348
    7. ' **)' → logprob: -12.519661903381348
    8. '***' → logprob: -14.019661903381348
    9. ')*' → logprob: -14.644661903381348
    10. ' )' → logprob: -14.644661903381348

Token 85: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00019090480054728687
    2. ' **' → logprob: -8.750190734863281
    3. '*' → logprob: -10.375190734863281
    4. ')**' → logprob: -15.125190734863281
    5. '***' → logprob: -15.125190734863281
    6. '**)' → logprob: -16.00019073486328
    7. '```' → logprob: -16.25019073486328
    8. '**

' → logprob: -16.37519073486328
    9. '^' → logprob: -16.50019073486328
    10. '***

' → logprob: -16.62519073486328

Token 86: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.005243833642452955
    2. ' power' → logprob: -5.25524377822876
    3. '(power' → logprob: -11.505244255065918
    4. 'pow' → logprob: -17.0052433013916
    5. '_power' → logprob: -19.7552433013916
    6. 'powers' → logprob: -20.3802433013916
    7. '(' → logprob: -20.5052433013916
    8. '.power' → logprob: -21.8802433013916
    9. 'Power' → logprob: -22.2552433013916
    10. ' (' → logprob: -22.7552433013916

Token 87: '_ex' (ID: 5724)
  Prédit: '_ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -3.368984107510187e-05
    2. 'ex' → logprob: -10.625033378601074
    3. 'Exponent' → logprob: -12.500033378601074
    4. 'Ex' → logprob: -12.750033378601074
    5. '_increment' → logprob: -13.375033378601074
    6. '_' → logprob: -15.125033378601074
    7. 'power' → logprob: -15.500033378601074
    8. '...' → logprob: -16.12503433227539
    9. '-' → logprob: -16.25003433227539
    10. '-ex' → logprob: -16.37503433227539

Token 88: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.00041339205927215517
    2. 'onent' → logprob: -8.500412940979004
    3. 'pon' → logprob: -8.750412940979004
    4. 'pot' → logprob: -11.375412940979004
    5. 'po' → logprob: -11.625412940979004
    6. 'rent' → logprob: -12.250412940979004
    7. 'port' → logprob: -12.375412940979004
    8. 'pent' → logprob: -12.750412940979004
    9. 'ponen' → logprob: -13.250412940979004
    10. 'pr' → logprob: -13.500412940979004

Token 89: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015568777918815613
    2. 'prob' → logprob: -4.515568733215332
    3. ' probability' → logprob: -6.015568733215332
    4. '
' → logprob: -6.640568733215332
    5. '    
' → logprob: -8.140568733215332
    6. ')' → logprob: -8.390568733215332
    7. '<|end|>' → logprob: -9.265568733215332
    8. '_probability' → logprob: -9.765568733215332
    9. ',' → logprob: -11.390568733215332
    10. '(prob' → logprob: -11.390568733215332

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008379586972296238
    2. 'prob' → logprob: -4.8833794593811035
    3. '
' → logprob: -8.508379936218262
    4. '+' → logprob: -8.508379936218262
    5. ' probability' → logprob: -9.258379936218262
    6. '    
' → logprob: -9.508379936218262
    7. '  ' → logprob: -9.508379936218262
    8. '<|end|>' → logprob: -10.008379936218262
    9. '(prob' → logprob: -11.008379936218262
    10. ')' → logprob: -11.133379936218262

Token 91: ' probability' (ID: 34933)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -9.841743303695694e-05
    2. ' probability' → logprob: -9.62509822845459
    3. '   ' → logprob: -10.37509822845459
    4. '```' → logprob: -15.50009822845459
    5. '+' → logprob: -15.62509822845459
    6. '    
' → logprob: -15.87509822845459
    7. '
' → logprob: -15.87509822845459
    8. '(prob' → logprob: -16.000099182128906
    9. '  ' → logprob: -16.125099182128906
    10. '+
' → logprob: -16.500099182128906

Token 92: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -5.9153885558771435e-06
    2. '_increment' → logprob: -12.875005722045898
    3. '_' → logprob: -13.000005722045898
    4. '_ac' → logprob: -14.875005722045898
    5. 'acc' → logprob: -15.000005722045898
    6. '_inc' → logprob: -16.6250057220459
    7. '+=' → logprob: -16.7500057220459
    8. '	acc' → logprob: -17.0000057220459
    9. '_probability' → logprob: -17.6250057220459
    10. 's' → logprob: -17.7500057220459

Token 93: 'umulator' (ID: 90989)
  Prédit: 'umulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.00578539352864027
    2. 'umul' → logprob: -5.2557854652404785
    3. 'umulate' → logprob: -8.00578498840332
    4. 'um' → logprob: -8.50578498840332
    5. 'ulator' → logprob: -11.88078498840332
    6. 'umu' → logprob: -12.25578498840332
    7. 'umulative' → logprob: -13.13078498840332
    8. 'uml' → logprob: -14.25578498840332
    9. 'ulum' → logprob: -14.25578498840332
    10. 'umal' → logprob: -15.13078498840332

Token 94: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6401854753494263
    2. ' +=' → logprob: -0.7651854753494263
    3. '+' → logprob: -4.890185356140137
    4. '+='' → logprob: -11.640185356140137
    5. ']+=' → logprob: -11.890185356140137
    6. '+=(' → logprob: -12.140185356140137
    7. '<|end|>' → logprob: -12.265185356140137
    8. ' +' → logprob: -12.390185356140137
    9. '+="' → logprob: -12.640185356140137
    10. '=' → logprob: -13.890185356140137

Token 95: ' probability' (ID: 34933)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.0788937583565712
    2. ' probability' → logprob: -2.5788936614990234
    3. '(prob' → logprob: -12.453893661499023
    4. '_probability' → logprob: -16.453893661499023
    5. ' ' → logprob: -17.078893661499023
    6. ' probabil' → logprob: -17.453893661499023
    7. ' prob' → logprob: -17.828893661499023
    8. '   ' → logprob: -18.703893661499023
    9. '概率' → logprob: -18.828893661499023
    10. 'Probability' → logprob: -19.453893661499023

Token 96: '_increment' (ID: 132160)
  Prédit: '_increment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_increment' → logprob: -3.173704271830502e-06
    2. '_acc' → logprob: -13.12500286102295
    3. 'increment' → logprob: -15.00000286102295
    4. '_inc' → logprob: -15.62500286102295
    5. 'Increment' → logprob: -16.125003814697266
    6. '_in' → logprob: -16.375003814697266
    7. '_INCREMENT' → logprob: -16.375003814697266
    8. '_' → logprob: -16.625003814697266
    9. '_probability' → logprob: -17.000003814697266
    10. '_indent' → logprob: -17.500003814697266

Token 97: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016311476938426495
    2. '
' → logprob: -7.001631259918213
    3. '<|end|>' → logprob: -8.501630783081055
    4. ' print' → logprob: -8.751630783081055
    5. 'if' → logprob: -9.126630783081055
    6. ')' → logprob: -9.126630783081055
    7. '\n' → logprob: -10.501630783081055
    8. '#' → logprob: -10.751630783081055
    9. ' ' → logprob: -11.126630783081055
    10. '  
' → logprob: -11.376630783081055

Token 98: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2948405128554441e-05
    2. ')' → logprob: -11.75001335144043
    3. ' print' → logprob: -12.75001335144043
    4. '
' → logprob: -14.12501335144043
    5. 'if' → logprob: -15.25001335144043
    6. '```' → logprob: -15.25001335144043
    7. 'pr' → logprob: -15.37501335144043
    8. '(print' → logprob: -15.62501335144043
    9. 'p' → logprob: -16.50001335144043
    10. '.print' → logprob: -16.62501335144043

Token 99: '(prob' (ID: 180876)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016096011968329549
    2. '(prob' → logprob: -7.251609802246094
    3. '("("' → logprob: -7.376609802246094
    4. '('' → logprob: -8.251609802246094
    5. '(
' → logprob: -12.126609802246094
    6. '(pro' → logprob: -13.251609802246094
    7. '((' → logprob: -13.876609802246094
    8. '(

' → logprob: -14.126609802246094
    9. '(`' → logprob: -14.251609802246094
    10. ' (' → logprob: -14.251609802246094

Token 100: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -0.00871207658201456
    2. 'ality' → logprob: -4.758712291717529
    3. 'ility' → logprob: -10.258711814880371
    4. 'abil' → logprob: -10.633711814880371
    5. 'ailability' → logprob: -11.383711814880371
    6. 'ail' → logprob: -11.758711814880371
    7. 'a' → logprob: -12.258711814880371
    8. ' ability' → logprob: -12.633711814880371
    9. '_probability' → logprob: -13.383711814880371
    10. ')' → logprob: -13.633711814880371

Token 101: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -9.710618905955926e-05
    2. ')' → logprob: -9.750097274780273
    3. '_)' → logprob: -10.375097274780273
    4. '_probability' → logprob: -12.750097274780273
    5. 'acc' → logprob: -13.250097274780273
    6. '_ac' → logprob: -13.625097274780273
    7. ')_' → logprob: -13.750097274780273
    8. '_prob' → logprob: -15.125097274780273
    9. '_' → logprob: -16.000097274780273
    10. '_total' → logprob: -16.750097274780273

Token 102: 'umulator' (ID: 90989)
  Prédit: 'umulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.006773988250643015
    2. 'ulator' → logprob: -5.006773948669434
    3. 'umul' → logprob: -10.131773948669434
    4. 'um' → logprob: -11.006773948669434
    5. 'ulum' → logprob: -15.131773948669434
    6. 'ul' → logprob: -15.256773948669434
    7. 'urator' → logprob: -15.381773948669434
    8. 'umerator' → logprob: -15.506773948669434
    9. '```' → logprob: -15.756773948669434
    10. 'uator' → logprob: -15.881773948669434

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.625
    3. '))' → logprob: -16.375
    4. ')`' → logprob: -17.0
    5. ')
' → logprob: -17.5
    6. '`)' → logprob: -18.5
    7. '')' → logprob: -18.75
    8. ')}' → logprob: -18.875
    9. '(' → logprob: -19.5
    10. '）' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 101
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 85
Précision stricte (1ère position): 48.51%
Précision adaptée (1ère position): 48.51%
Précision (top 10): 84.16%
================================================================================
