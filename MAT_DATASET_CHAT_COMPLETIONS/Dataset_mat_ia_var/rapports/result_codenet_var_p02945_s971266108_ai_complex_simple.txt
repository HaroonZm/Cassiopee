================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add, sub, mul

A, B = map(int, input().split())
ops = [add, sub, mul]

res = reduce(lambda x, y: x if x > y else y, map(lambda f: f(A, B), ops))
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01275649480521679
    2. '.' → logprob: -5.51275634765625
    3. ' (' → logprob: -6.26275634765625
    4. '\' → logprob: -6.63775634765625
    5. '(lambda' → logprob: -6.76275634765625
    6. '```' → logprob: -7.01275634765625
    7. ',' → logprob: -7.26275634765625
    8. ' ' → logprob: -7.38775634765625
    9. 'def' → logprob: -7.63775634765625
    10. 'a' → logprob: -8.51275634765625

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02820173278450966
    2. 'def' → logprob: -4.653201580047607
    3. ' ' → logprob: -4.778201580047607
    4. '\' → logprob: -5.153201580047607
    5. '(
' → logprob: -7.278201580047607
    6. ',' → logprob: -7.403201580047607
    7. '```' → logprob: -7.528201580047607
    8. ' (' → logprob: -8.153202056884766
    9. 'r' → logprob: -8.653202056884766
    10. 'd' → logprob: -8.778202056884766

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01871544122695923
    2. 'import' → logprob: -4.1437153816223145
    3. ' ' → logprob: -6.5187153816223145
    4. '.' → logprob: -6.7687153816223145
    5. ' .' → logprob: -10.768715858459473
    6. '	import' → logprob: -11.393715858459473
    7. '.import' → logprob: -12.268715858459473
    8. '<|end|>' → logprob: -12.268715858459473
    9. ' ' → logprob: -13.393715858459473
    10. '_import' → logprob: -13.768715858459473

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1571701467037201
    2. ' import' → logprob: -2.282170057296753
    3. 'add' → logprob: -3.907170057296753
    4. ' mul' → logprob: -4.282170295715332
    5. ' ' → logprob: -5.532170295715332
    6. 'import' → logprob: -5.657170295715332
    7. 'mul' → logprob: -6.907170295715332
    8. ' item' → logprob: -7.407170295715332
    9. ' icon' → logprob: -9.157170295715332
    10. 'item' → logprob: -9.532170295715332

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05271875485777855
    2. '(
' → logprob: -4.052718639373779
    3. ',' → logprob: -4.552718639373779
    4. '\n' → logprob: -4.677718639373779
    5. '\' → logprob: -4.802718639373779
    6. '#' → logprob: -6.677718639373779
    7. '`' → logprob: -6.802718639373779
    8. '
' → logprob: -7.677718639373779
    9. '()' → logprob: -7.802718639373779
    10. ' ' → logprob: -7.927718639373779

Token 10: ' sub' (ID: 1543)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.597747802734375
    2. 'mul' → logprob: -0.847747802734375
    3. ' sub' → logprob: -4.597747802734375
    4. 'sub' → logprob: -4.597747802734375
    5. ' i' → logprob: -7.722747802734375
    6. '```' → logprob: -8.347747802734375
    7. 'getitem' → logprob: -8.472747802734375
    8. 'i' → logprob: -8.472747802734375
    9. ' ' → logprob: -9.597747802734375
    10. 'item' → logprob: -9.972747802734375

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09493859112262726
    2. ',' → logprob: -3.0949385166168213
    3. '(
' → logprob: -3.7199385166168213
    4. '\n' → logprob: -4.9699387550354
    5. '\' → logprob: -5.8449387550354
    6. 'def' → logprob: -6.0949387550354
    7. '#' → logprob: -6.0949387550354
    8. '`' → logprob: -7.0949387550354
    9. ',
' → logprob: -7.0949387550354
    10. '```' → logprob: -7.0949387550354

Token 12: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.011424433439970016
    2. 'mul' → logprob: -4.511424541473389
    3. ' tr' → logprob: -9.13642406463623
    4. ' ' → logprob: -9.51142406463623
    5. ' xor' → logprob: -10.26142406463623
    6. '_mul' → logprob: -10.38642406463623
    7. '```' → logprob: -10.76142406463623
    8. ' import' → logprob: -11.01142406463623
    9. ' mod' → logprob: -11.51142406463623
    10. ' and' → logprob: -11.51142406463623

Token 13: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5664365291595459
    2. '(' → logprob: -2.066436529159546
    3. 'def' → logprob: -2.066436529159546
    4. '\n' → logprob: -3.191436529159546
    5. '\' → logprob: -3.316436529159546
    6. '#' → logprob: -3.691436529159546
    7. '*' → logprob: -4.066436767578125
    8. ',
' → logprob: -4.066436767578125
    9. '(
' → logprob: -4.691436767578125
    10. '`' → logprob: -5.191436767578125

Token 14: 'A' (ID: 32)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47618821263313293
    2. '(' → logprob: -1.7261881828308105
    3. 'def' → logprob: -2.1011881828308105
    4. 'div' → logprob: -3.6011881828308105
    5. '#' → logprob: -4.4761881828308105
    6. 'pow' → logprob: -5.1011881828308105
    7. '```' → logprob: -5.2261881828308105
    8. '(
' → logprob: -5.3511881828308105
    9. ')' → logprob: -5.3511881828308105
    10. '`' → logprob: -5.4761881828308105

Token 15: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10104542225599289
    2. '=' → logprob: -3.1010453701019287
    3. 'dd' → logprob: -3.4760453701019287
    4. '[' → logprob: -4.976045608520508
    5. ' ' → logprob: -5.976045608520508
    6. '.' → logprob: -6.101045608520508
    7. ',' → logprob: -6.226045608520508
    8. '_' → logprob: -6.726045608520508
    9. 'r' → logprob: -6.851045608520508
    10. 'rray' → logprob: -7.351045608520508

Token 16: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.6329845190048218
    2. 'B' → logprob: -0.7579845190048218
    3. '=' → logprob: -8.882984161376953
    4. ' ' → logprob: -9.382984161376953
    5. ' =' → logprob: -9.382984161376953
    6. 'b' → logprob: -11.007984161376953
    7. ',' → logprob: -11.132984161376953
    8. '`' → logprob: -11.882984161376953
    9. '=B' → logprob: -12.132984161376953
    10. ' ' → logprob: -12.945484161376953

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16609828174114227
    2. ',' → logprob: -2.1660983562469482
    3. '=' → logprob: -3.2910983562469482
    4. '<|end|>' → logprob: -7.541098117828369
    5. ' ,' → logprob: -7.916098117828369
    6. ' ' → logprob: -9.166098594665527
    7. ')' → logprob: -9.291098594665527
    8. '[' → logprob: -9.666098594665527
    9. '.' → logprob: -11.541098594665527
    10. '_' → logprob: -12.041098594665527

Token 18: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04853115975856781
    2. '0' → logprob: -3.2985310554504395
    3. '1' → logprob: -5.0485310554504395
    4. '10' → logprob: -6.6735310554504395
    5. ' (' → logprob: -7.2985310554504395
    6. '5' → logprob: -7.5485310554504395
    7. ' [' → logprob: -7.9235310554504395
    8. ' map' → logprob: -7.9235310554504395
    9. '[' → logprob: -8.423531532287598
    10. '2' → logprob: -9.048531532287598

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.23821571469306946
    2. '(' → logprob: -1.738215684890747
    3. '(lambda' → logprob: -3.488215684890747
    4. '(str' → logprob: -5.863215923309326
    5. 'int' → logprob: -6.363215923309326
    6. '<|end|>' → logprob: -8.238215446472168
    7. '(eval' → logprob: -8.863215446472168
    8. '(input' → logprob: -8.988215446472168
    9. '(
' → logprob: -9.488215446472168
    10. '(range' → logprob: -9.863215446472168

Token 20: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09005692601203918
    2. ')' → logprob: -3.090056896209717
    3. '(' → logprob: -3.840056896209717
    4. ',' → logprob: -4.590056896209717
    5. 'input' → logprob: -4.965056896209717
    6. ',input' → logprob: -6.840056896209717
    7. ' input' → logprob: -8.090057373046875
    8. '```' → logprob: -8.965057373046875
    9. '=input' → logprob: -9.590057373046875
    10. ' (' → logprob: -10.090057373046875

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.062060896307229996
    2. ' input' → logprob: -2.812060832977295
    3. ')' → logprob: -9.437061309814453
    4. '(input' → logprob: -11.562061309814453
    5. ' )' → logprob: -13.437061309814453
    6. ',input' → logprob: -14.187061309814453
    7. '=input' → logprob: -14.687061309814453
    8. '	input' → logprob: -15.062061309814453
    9. ' ' → logprob: -15.437061309814453
    10. '```' → logprob: -15.812061309814453

Token 22: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7644988298416138
    2. '(' → logprob: -1.3894988298416138
    3. '())' → logprob: -1.6394988298416138
    4. '(()' → logprob: -3.139498710632324
    5. '('' → logprob: -3.764498710632324
    6. ')' → logprob: -4.389498710632324
    7. '());' → logprob: -6.014498710632324
    8. '(""))' → logprob: -6.264498710632324
    9. '(token' → logprob: -6.514498710632324
    10. '("")' → logprob: -7.014498710632324

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015105740167200565
    2. 'strip' → logprob: -6.5015106201171875
    3. 'rstrip' → logprob: -12.126510620117188
    4. ' split' → logprob: -13.501510620117188
    5. ')' → logprob: -14.501510620117188
    6. 'read' → logprob: -14.876510620117188
    7. 'spl' → logprob: -15.126510620117188
    8. '(split' → logprob: -15.626510620117188
    9. '().' → logprob: -17.501510620117188
    10. '```' → logprob: -17.876510620117188

Token 24: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2029729038476944
    2. '))' → logprob: -1.8279728889465332
    3. '())' → logprob: -3.827972888946533
    4. '()))' → logprob: -7.202972888946533
    5. '()' → logprob: -8.077973365783691
    6. '),' → logprob: -9.702973365783691
    7. '(' → logprob: -10.952973365783691
    8. '`)' → logprob: -11.327973365783691
    9. '('' → logprob: -11.452973365783691
    10. ')))' → logprob: -11.577973365783691

Token 25: 'ops' (ID: 4645)
  Prédit: 'operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operations' → logprob: -1.9231703281402588
    2. '*' → logprob: -2.173170328140259
    3. 'result' → logprob: -2.173170328140259
    4. 'op' → logprob: -2.423170328140259
    5. '+' → logprob: -2.548170328140259
    6. '```' → logprob: -3.173170328140259
    7. 's' → logprob: -3.298170328140259
    8. 'tokens' → logprob: -3.298170328140259
    9. 'operators' → logprob: -3.548170328140259
    10. ' op' → logprob: -3.548170328140259

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10880855470895767
    2. '=' → logprob: -2.3588085174560547
    3. '[' → logprob: -4.858808517456055
    4. 's' → logprob: -8.483808517456055
    5. '[]' → logprob: -8.608808517456055
    6. '[:]' → logprob: -8.858808517456055
    7. '[:' → logprob: -9.733808517456055
    8. ')' → logprob: -10.108808517456055
    9. '=[' → logprob: -10.108808517456055
    10. ']' → logprob: -10.233808517456055

Token 27: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022707466036081314
    2. ' [' → logprob: -3.897707462310791
    3. '[input' → logprob: -7.272707462310791
    4. '[int' → logprob: -7.772707462310791
    5. '[list' → logprob: -8.02270793914795
    6. '[m' → logprob: -8.02270793914795
    7. '[sub' → logprob: -9.77270793914795
    8. '[min' → logprob: -10.14770793914795
    9. '['' → logprob: -10.27270793914795
    10. '[a' → logprob: -10.39770793914795

Token 28: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.010680150240659714
    2. ' add' → logprob: -4.760680198669434
    3. 'mul' → logprob: -6.260680198669434
    4. 'sub' → logprob: -9.385680198669434
    5. ' mul' → logprob: -11.010680198669434
    6. '(add' → logprob: -11.260680198669434
    7. ')add' → logprob: -11.760680198669434
    8. '	add' → logprob: -12.135680198669434
    9. '```' → logprob: -12.385680198669434
    10. '   ' → logprob: -12.510680198669434

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013595209456980228
    2. ' ,' → logprob: -6.626359462738037
    3. '(' → logprob: -11.251359939575195
    4. ',

' → logprob: -12.251359939575195
    5. ',m' → logprob: -12.626359939575195
    6. ',
' → logprob: -13.001359939575195
    7. '(sub' → logprob: -13.251359939575195
    8. ' (' → logprob: -13.626359939575195
    9. 'mul' → logprob: -13.751359939575195
    10. '(),' → logprob: -13.876359939575195

Token 30: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.25909698009490967
    2. 'sub' → logprob: -1.6340969800949097
    3. ' mul' → logprob: -3.759097099304199
    4. 'mul' → logprob: -4.634097099304199
    5. ' ' → logprob: -9.6340970993042
    6. ' add' → logprob: -11.3840970993042
    7. 'add' → logprob: -11.8840970993042
    8. '	sub' → logprob: -12.1340970993042
    9. ',' → logprob: -13.0090970993042
    10. '  ' → logprob: -13.2590970993042

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001992490579141304
    2. ' ,' → logprob: -8.875199317932129
    3. ',m' → logprob: -10.000199317932129
    4. ')' → logprob: -12.125199317932129
    5. 'mul' → logprob: -12.250199317932129
    6. ',
' → logprob: -14.750199317932129
    7. '_mul' → logprob: -14.750199317932129
    8. ']' → logprob: -15.000199317932129
    9. ',

' → logprob: -15.000199317932129
    10. '),' → logprob: -15.000199317932129

Token 32: ' mul' (ID: 9975)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.5232100486755371
    2. ' mul' → logprob: -0.8982100486755371
    3. ' ' → logprob: -9.773210525512695
    4. '_mul' → logprob: -11.648210525512695
    5. '.mul' → logprob: -12.273210525512695
    6. ' mull' → logprob: -12.523210525512695
    7. ',' → logprob: -12.898210525512695
    8. 'm' → logprob: -13.398210525512695
    9. ' muli' → logprob: -13.898210525512695
    10. 'multip' → logprob: -14.023210525512695

Token 33: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.046220939606428146
    2. ',' → logprob: -3.2962210178375244
    3. ')' → logprob: -5.171220779418945
    4. ')]' → logprob: -6.046220779418945
    5. '])' → logprob: -9.671220779418945
    6. ' ]' → logprob: -10.796220779418945
    7. '`]' → logprob: -12.171220779418945
    8. '])]' → logprob: -13.296220779418945
    9. '']' → logprob: -13.546220779418945
    10. ',
' → logprob: -14.046220779418945

Token 34: 'res' (ID: 430)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.19673283398151398
    2. 'res' → logprob: -2.571732759475708
    3. 'results' → logprob: -2.696732759475708
    4. 'for' → logprob: -4.071732997894287
    5. 'total' → logprob: -6.196732997894287
    6. 'print' → logprob: -6.321732997894287
    7. 'answer' → logprob: -6.321732997894287
    8. 'answers' → logprob: -6.321732997894287
    9. 'ans' → logprob: -6.446732997894287
    10. 'ops' → logprob: -6.571732997894287

Token 35: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.573253870010376
    2. '=' → logprob: -1.948253870010376
    3. 's' → logprob: -2.198253870010376
    4. 'ults' → logprob: -2.198253870010376
    5. ' =' → logprob: -2.823253870010376
    6. 'u' → logprob: -4.698253631591797
    7. 'ul' → logprob: -6.448253631591797
    8. 'ULT' → logprob: -6.948253631591797
    9. 'ultat' → logprob: -8.198253631591797
    10. 'ulti' → logprob: -9.073253631591797

Token 36: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.42987796664237976
    2. '[' → logprob: -1.9298779964447021
    3. 'max' → logprob: -2.679877996444702
    4. '0' → logprob: -3.054877996444702
    5. 'ops' → logprob: -3.429877996444702
    6. 'min' → logprob: -4.304877758026123
    7. '[min' → logprob: -4.554877758026123
    8. '[max' → logprob: -4.929877758026123
    9. ' reduce' → logprob: -5.054877758026123
    10. 'list' → logprob: -5.554877758026123

Token 37: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5783559083938599
    2. '(' → logprob: -0.8283559083938599
    3. '(op' → logprob: -6.57835578918457
    4. '(operator' → logprob: -6.95335578918457
    5. '(m' → logprob: -10.82835578918457
    6. '((' → logprob: -11.45335578918457
    7. '(
' → logprob: -11.57835578918457
    8. '(func' → logprob: -12.07835578918457
    9. '```' → logprob: -12.07835578918457
    10. '(add' → logprob: -12.20335578918457

Token 38: ' x' (ID: 1215)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.6253976225852966
    2. ' x' → logprob: -1.0003976821899414
    3. ' op' → logprob: -2.8753976821899414
    4. 'x' → logprob: -4.000397682189941
    5. ' a' → logprob: -4.375397682189941
    6. 'acc' → logprob: -5.250397682189941
    7. 'a' → logprob: -6.875397682189941
    8. ' lambda' → logprob: -7.000397682189941
    9. ' res' → logprob: -7.250397682189941
    10. ' accu' → logprob: -8.000397682189941

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7848862373502925e-05
    2. ' ,' → logprob: -11.500027656555176
    3. ',x' → logprob: -11.500027656555176
    4. ',y' → logprob: -12.750027656555176
    5. 'y' → logprob: -14.250027656555176
    6. '1' → logprob: -14.375027656555176
    7. ',f' → logprob: -14.750027656555176
    8. ',index' → logprob: -15.375027656555176
    9. 's' → logprob: -15.625027656555176
    10. 'x' → logprob: -15.625027656555176

Token 40: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03975534439086914
    2. ' y' → logprob: -3.539755344390869
    3. 'f' → logprob: -4.789755344390869
    4. 'lambda' → logprob: -7.039755344390869
    5. ' f' → logprob: -8.414754867553711
    6. 'x' → logprob: -8.539754867553711
    7. 'ops' → logprob: -9.164754867553711
    8. 'op' → logprob: -9.289754867553711
    9. ' lambda' → logprob: -10.164754867553711
    10. ' op' → logprob: -10.164754867553711

Token 41: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06935524195432663
    2. ',' → logprob: -2.8193552494049072
    3. ' :' → logprob: -4.944355010986328
    4. ' ,' → logprob: -8.819355010986328
    5. ',:' → logprob: -10.694355010986328
    6. '=' → logprob: -11.444355010986328
    7. ',y' → logprob: -11.569355010986328
    8. ',x' → logprob: -12.194355010986328
    9. '):' → logprob: -12.444355010986328
    10. ')' → logprob: -12.944355010986328

Token 42: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5132881999015808
    2. ' y' → logprob: -1.6382882595062256
    3. 'ops' → logprob: -2.2632882595062256
    4. 'x' → logprob: -2.6382882595062256
    5. ' x' → logprob: -4.8882880210876465
    6. 'mul' → logprob: -4.8882880210876465
    7. ' ops' → logprob: -5.1382880210876465
    8. 'lambda' → logprob: -5.7632880210876465
    9. 'op' → logprob: -6.0132880210876465
    10. 'add' → logprob: -6.9507880210876465

Token 43: ' if' (ID: 538)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4823465049266815
    2. '+' → logprob: -1.857346534729004
    3. 'y' → logprob: -2.607346534729004
    4. ' *' → logprob: -3.357346534729004
    5. '*' → logprob: -3.482346534729004
    6. '+y' → logprob: -3.857346534729004
    7. '(y' → logprob: -3.857346534729004
    8. ')' → logprob: -4.357346534729004
    9. ' y' → logprob: -4.982346534729004
    10. '(' → logprob: -5.232346534729004

Token 44: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7501264810562134
    2. 'y' → logprob: -1.1251264810562134
    3. ' y' → logprob: -2.000126361846924
    4. ' x' → logprob: -2.875126361846924
    5. 'abs' → logprob: -6.375126361846924
    6. '(x' → logprob: -6.500126361846924
    7. 'ops' → logprob: -6.625126361846924
    8. 'op' → logprob: -7.000126361846924
    9. ' not' → logprob: -7.125126361846924
    10. 'not' → logprob: -7.375126361846924

Token 45: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20965872704982758
    2. ' >' → logprob: -2.209658622741699
    3. 'y' → logprob: -3.209658622741699
    4. ' y' → logprob: -4.084658622741699
    5. 'else' → logprob: -5.084658622741699
    6. ' ' → logprob: -5.584658622741699
    7. ' else' → logprob: -5.709658622741699
    8. '>x' → logprob: -6.334658622741699
    9. '==' → logprob: -6.459658622741699
    10. '[' → logprob: -7.209658622741699

Token 46: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10022822767496109
    2. ' y' → logprob: -2.3502283096313477
    3. ' ' → logprob: -11.725228309631348
    4. '  ' → logprob: -13.100228309631348
    5. '	y' → logprob: -13.225228309631348
    6. ',' → logprob: -13.350228309631348
    7. ' ' → logprob: -13.350228309631348
    8. 'x' → logprob: -13.475228309631348
    9. ',y' → logprob: -14.600228309631348
    10. '_y' → logprob: -14.662728309631348

Token 47: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.029773982241749763
    2. 'else' → logprob: -3.5297739505767822
    3. ' ' → logprob: -11.279773712158203
    4. '```' → logprob: -13.279773712158203
    5. ' ' → logprob: -13.404773712158203
    6. '	else' → logprob: -13.529773712158203
    7. ',' → logprob: -13.904773712158203
    8. ' els' → logprob: -14.029773712158203
    9. '-' → logprob: -14.592273712158203
    10. '()' → logprob: -14.967273712158203

Token 48: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.012515772134065628
    2. 'y' → logprob: -4.387515544891357
    3. ' ' → logprob: -12.637516021728516
    4. ' ' → logprob: -13.762516021728516
    5. '	y' → logprob: -14.262516021728516
    6. '    ' → logprob: -14.762516021728516
    7. ',' → logprob: -15.387516021728516
    8. ',y' → logprob: -16.325016021728516
    9. '  ' → logprob: -16.887516021728516
    10. ' x' → logprob: -16.950016021728516

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002719402778893709
    2. ' ,' → logprob: -6.127719402313232
    3. '),' → logprob: -8.50271987915039
    4. ')' → logprob: -8.50271987915039
    5. ',[' → logprob: -10.37771987915039
    6. '(' → logprob: -10.50271987915039
    7. ',
' → logprob: -11.25271987915039
    8. 'ops' → logprob: -12.12771987915039
    9. ',map' → logprob: -12.12771987915039
    10. '[' → logprob: -12.25271987915039

Token 50: ' map' (ID: 4014)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15878941118717194
    2. 'map' → logprob: -2.0337893962860107
    3. 'list' → logprob: -5.15878963470459
    4. 'ops' → logprob: -5.40878963470459
    5. '[list' → logprob: -5.90878963470459
    6. '(map' → logprob: -6.53378963470459
    7. ' [' → logprob: -8.15878963470459
    8. '[A' → logprob: -8.28378963470459
    9. ' map' → logprob: -8.65878963470459
    10. '(' → logprob: -8.90878963470459

Token 51: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.09764686971902847
    2. '(' → logprob: -2.722646951675415
    3. '(int' → logprob: -3.972646951675415
    4. '(max' → logprob: -5.597646713256836
    5. '(abs' → logprob: -6.597646713256836
    6. '(op' → logprob: -6.597646713256836
    7. '(operator' → logprob: -6.722646713256836
    8. '(m' → logprob: -7.472646713256836
    9. '((' → logprob: -8.972646713256836
    10. '(eval' → logprob: -10.097646713256836

Token 52: ' f' (ID: 285)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.3677879869937897
    2. 'op' → logprob: -1.2427879571914673
    3. 'lambda' → logprob: -4.617787837982178
    4. ' lambda' → logprob: -5.867787837982178
    5. 'ops' → logprob: -6.617787837982178
    6. 'x' → logprob: -6.992787837982178
    7. ' x' → logprob: -7.242787837982178
    8. ' ops' → logprob: -7.492787837982178
    9. '(op' → logprob: -7.617787837982178
    10. '(lambda' → logprob: -7.742787837982178

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011066683568060398
    2. ' :' → logprob: -6.011066913604736
    3. '(f' → logprob: -6.136066913604736
    4. ',' → logprob: -6.136066913604736
    5. ' f' → logprob: -6.511066913604736
    6. 'f' → logprob: -6.636066913604736
    7. '(' → logprob: -7.761066913604736
    8. ' (' → logprob: -8.261066436767578
    9. ':f' → logprob: -8.511066436767578
    10. '(lambda' → logprob: -9.386066436767578

Token 54: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12708422541618347
    2. ' f' → logprob: -2.127084255218506
    3. 'lambda' → logprob: -9.627083778381348
    4. '(f' → logprob: -10.127083778381348
    5. ' lambda' → logprob: -10.252083778381348
    6. '(lambda' → logprob: -12.002083778381348
    7. '	f' → logprob: -12.877083778381348
    8. ' ' → logprob: -13.002083778381348
    9. ')' → logprob: -14.127083778381348
    10. ' (' → logprob: -14.377083778381348

Token 55: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00030412263004109263
    2. '(' → logprob: -8.500304222106934
    3. ')(' → logprob: -10.125304222106934
    4. '(B' → logprob: -10.875304222106934
    5. ' (' → logprob: -10.875304222106934
    6. ',' → logprob: -12.375304222106934
    7. 'A' → logprob: -12.500304222106934
    8. ')' → logprob: -12.625304222106934
    9. '(a' → logprob: -12.875304222106934
    10. '((' → logprob: -13.250304222106934

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008206379599869251
    2. ',B' → logprob: -5.133206367492676
    3. 'B' → logprob: -6.633206367492676
    4. ' ,' → logprob: -7.008206367492676
    5. ' B' → logprob: -10.758206367492676
    6. '),' → logprob: -11.758206367492676
    7. ')' → logprob: -11.758206367492676
    8. ' ' → logprob: -12.133206367492676
    9. ',b' → logprob: -13.258206367492676
    10. 'b' → logprob: -14.320706367492676

Token 57: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0076401131227612495
    2. ' B' → logprob: -4.8826398849487305
    3. ' ' → logprob: -10.88263988494873
    4. ')' → logprob: -12.13263988494873
    5. '  ' → logprob: -13.13263988494873
    6. '	B' → logprob: -13.25763988494873
    7. '>B' → logprob: -13.88263988494873
    8. '   ' → logprob: -13.88263988494873
    9. '

' → logprob: -14.82013988494873
    10. 'A' → logprob: -14.88263988494873

Token 58: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0019814528059214354
    2. ')' → logprob: -6.251981258392334
    3. ' ),' → logprob: -10.376981735229492
    4. 'ops' → logprob: -11.501981735229492
    5. ',' → logprob: -12.876981735229492
    6. ')))' → logprob: -13.751981735229492
    7. ' ' → logprob: -13.751981735229492
    8. '   ' → logprob: -13.751981735229492
    9. ')
' → logprob: -13.876981735229492
    10. '```' → logprob: -13.876981735229492

Token 59: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0008073674980551004
    2. ' ops' → logprob: -7.125807285308838
    3. '.ops' → logprob: -13.750807762145996
    4. 'op' → logprob: -14.250807762145996
    5. '_ops' → logprob: -15.625807762145996
    6. '[' → logprob: -15.750807762145996
    7. '   ' → logprob: -16.00080680847168
    8. 'aps' → logprob: -16.00080680847168
    9. ' ' → logprob: -16.00080680847168
    10. 'ots' → logprob: -16.37580680847168

Token 60: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008657358586788177
    2. ')' → logprob: -4.758657455444336
    3. ')))' → logprob: -10.508657455444336
    4. '))
' → logprob: -11.758657455444336
    5. '),' → logprob: -11.883657455444336
    6. ' ))' → logprob: -15.133657455444336
    7. ')
' → logprob: -15.633657455444336
    8. '))

' → logprob: -16.008657455444336
    9. '))))' → logprob: -16.883657455444336
    10. '));' → logprob: -17.383657455444336

Token 61: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16427305340766907
    2. 'print' → logprob: -1.9142730236053467
    3. '<|end|>' → logprob: -6.039273262023926
    4. '
' → logprob: -6.789273262023926
    5. ')
' → logprob: -8.664273262023926
    6. '#' → logprob: -9.164273262023926
    7. ' print' → logprob: -9.539273262023926
    8. '```' → logprob: -9.789273262023926
    9. '\n' → logprob: -11.289273262023926
    10. ',' → logprob: -11.414273262023926

Token 62: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.10029368102550507
    2. '(' → logprob: -2.3502936363220215
    3. '(f' → logprob: -9.85029411315918
    4. '('' → logprob: -11.10029411315918
    5. '("("' → logprob: -11.35029411315918
    6. '(`' → logprob: -13.35029411315918
    7. ' (' → logprob: -13.35029411315918
    8. '((' → logprob: -13.72529411315918
    9. '(len' → logprob: -14.85029411315918
    10. '()' → logprob: -14.85029411315918

Token 63: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002624086628202349
    2. '))' → logprob: -8.250262260437012
    3. ' )' → logprob: -14.750262260437012
    4. ')
' → logprob: -15.625262260437012
    5. ')))' → logprob: -15.875262260437012
    6. '`)' → logprob: -15.875262260437012
    7. ')`' → logprob: -16.250263214111328
    8. '})' → logprob: -16.875263214111328
    9. ')}' → logprob: -17.500263214111328
    10. ')")' → logprob: -17.750263214111328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 61
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 50
Précision stricte (1ère position): 42.62%
Précision adaptée (1ère position): 42.62%
Précision (top 10): 81.97%
================================================================================
