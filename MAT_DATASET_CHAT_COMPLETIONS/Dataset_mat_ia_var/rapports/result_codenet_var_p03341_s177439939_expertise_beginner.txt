================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = input()
S = input()

min_num = 300000

for i in range(len(S)):
    left = 0
    right = 0

    for j in range(i):
        if S[j] == 'W':
            left += 1

    for j in range(i + 1, len(S)):
        if S[j] == 'E':
            right += 1

    if left + right < min_num:
        min_num = left + right

print(min_num)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007527243811637163
    2. ''' → logprob: -5.7575273513793945
    3. '[' → logprob: -6.3825273513793945
    4. '.' → logprob: -7.2575273513793945
    5. '"' → logprob: -7.3825273513793945
    6. '('' → logprob: -8.007527351379395
    7. '()' → logprob: -8.257527351379395
    8. '(
' → logprob: -8.757527351379395
    9. '```' → logprob: -9.007527351379395
    10. ')' → logprob: -9.257527351379395

Token 4: 'S' (ID: 50)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19289357960224152
    2. '=' → logprob: -2.1928935050964355
    3. '+' → logprob: -3.3178935050964355
    4. '()' → logprob: -4.8178935050964355
    5. ' =' → logprob: -5.5678935050964355
    6. '.strip' → logprob: -5.8178935050964355
    7. '#' → logprob: -5.9428935050964355
    8. '*' → logprob: -6.3178935050964355
    9. '(' → logprob: -6.5678935050964355
    10. ')' → logprob: -6.5678935050964355

Token 5: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08802402764558792
    2. '[' → logprob: -2.588024139404297
    3. '=' → logprob: -5.213024139404297
    4. ' =' → logprob: -6.463024139404297
    5. '(' → logprob: -7.463024139404297
    6. '+' → logprob: -7.838024139404297
    7. ')' → logprob: -8.338024139404297
    8. '_' → logprob: -9.338024139404297
    9. ' .' → logprob: -9.338024139404297
    10. 'quare' → logprob: -9.588024139404297

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5785387754440308
    2. 'input' → logprob: -0.8285387754440308
    3. 'int' → logprob: -6.70353889465332
    4. ' int' → logprob: -8.20353889465332
    5. ' []' → logprob: -8.32853889465332
    6. ' N' → logprob: -8.45353889465332
    7. 'list' → logprob: -8.95353889465332
    8. ' list' → logprob: -9.20353889465332
    9. 'N' → logprob: -9.32853889465332
    10. '""' → logprob: -9.82853889465332

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5762571692466736
    2. '()' → logprob: -0.8262571692466736
    3. ')' → logprob: -8.95125675201416
    4. '(
' → logprob: -9.70125675201416
    5. '(

' → logprob: -9.82625675201416
    6. '('' → logprob: -11.57625675201416
    7. '```' → logprob: -11.57625675201416
    8. '()
' → logprob: -12.07625675201416
    9. '.' → logprob: -12.20125675201416
    10. ' ()' → logprob: -12.20125675201416

Token 8: 'min' (ID: 1493)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1812852621078491
    2. 'for' → logprob: -1.5562852621078491
    3. 'i' → logprob: -1.8062852621078491
    4. 'count' → logprob: -1.9312852621078491
    5. 'n' → logprob: -3.1812853813171387
    6. '.' → logprob: -4.056285381317139
    7. 'result' → logprob: -4.181285381317139
    8. 'c' → logprob: -4.556285381317139
    9. 'f' → logprob: -4.556285381317139
    10. '[' → logprob: -4.556285381317139

Token 9: '_num' (ID: 9834)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13652963936328888
    2. '_len' → logprob: -2.2615296840667725
    3. '_length' → logprob: -4.261529445648193
    4. '_val' → logprob: -5.511529445648193
    5. '_i' → logprob: -6.761529445648193
    6. '_l' → logprob: -7.386529445648193
    7. '_count' → logprob: -7.886529445648193
    8. '_idx' → logprob: -8.261529922485352
    9. '_space' → logprob: -8.386529922485352
    10. '_index' → logprob: -8.511529922485352

Token 10: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005466405302286148
    2. ' =' → logprob: -5.755466461181641
    3. '=' → logprob: -6.505466461181641
    4. 'ber' → logprob: -8.63046646118164
    5. 's' → logprob: -8.88046646118164
    6. '_=' → logprob: -9.13046646118164
    7. '_val' → logprob: -9.50546646118164
    8. '_len' → logprob: -9.63046646118164
    9. ' _' → logprob: -10.00546646118164
    10. '_length' → logprob: -10.50546646118164

Token 11: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.24403585493564606
    2. 'float' → logprob: -2.2440359592437744
    3. ' min' → logprob: -3.4940359592437744
    4. ' int' → logprob: -3.6190359592437744
    5. ' len' → logprob: -4.244035720825195
    6. 'len' → logprob: -4.619035720825195
    7. 'int' → logprob: -4.619035720825195
    8. ' ' → logprob: -5.119035720825195
    9. ' None' → logprob: -5.369035720825195
    10. 'min' → logprob: -6.244035720825195

Token 12: '300' (ID: 4095)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.08808603137731552
    2. 'int' → logprob: -2.8380861282348633
    3. '10' → logprob: -4.088086128234863
    4. 'len' → logprob: -5.463086128234863
    5. 'min' → logprob: -5.838086128234863
    6. '100' → logprob: -7.588086128234863
    7. 'S' → logprob: -7.713086128234863
    8. 'None' → logprob: -8.088086128234863
    9. '1' → logprob: -8.838086128234863
    10. '0' → logprob: -8.838086128234863

Token 13: '000' (ID: 1302)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9283986687660217
    2. '<|end|>' → logprob: -0.9283986687660217
    3. '0' → logprob: -1.928398609161377
    4. '_' → logprob: -3.553398609161377
    5. '=' → logprob: -4.803398609161377
    6. ' =' → logprob: -5.553398609161377
    7. ',' → logprob: -5.928398609161377
    8. ' 
' → logprob: -6.053398609161377
    9. '\' → logprob: -6.178398609161377
    10. '.' → logprob: -6.178398609161377

Token 14: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4121628999710083
    2. '_' → logprob: -1.5371628999710083
    3. '<|end|>' → logprob: -3.1621627807617188
    4. '0' → logprob: -3.5371627807617188
    5. '\' → logprob: -4.537162780761719
    6. ' 
' → logprob: -4.787162780761719
    7. '+' → logprob: -4.787162780761719
    8. '*' → logprob: -5.787162780761719
    9. '
' → logprob: -5.787162780761719
    10. '=' → logprob: -6.037162780761719

Token 15: 'for' (ID: 1938)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5117337703704834
    2. 'for' → logprob: -1.1367337703704834
    3. ' for' → logprob: -2.7617337703704834
    4. '=' → logprob: -5.0117340087890625
    5. '_' → logprob: -5.1367340087890625
    6. ' =' → logprob: -6.2617340087890625
    7. ' 
' → logprob: -8.136734008789062
    8. ')' → logprob: -8.636734008789062
    9. 'max' → logprob: -9.011734008789062
    10. '<|end|>' → logprob: -9.011734008789062

Token 16: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6963644623756409
    2. ' i' → logprob: -0.6963644623756409
    3. ' _' → logprob: -6.071364402770996
    4. '_' → logprob: -7.696364402770996
    5. 'i' → logprob: -8.196364402770996
    6. '  ' → logprob: -8.821364402770996
    7. ' ‌' → logprob: -11.571364402770996
    8. ' I' → logprob: -12.196364402770996
    9. ' ' → logprob: -12.321364402770996
    10. ' x' → logprob: -13.696364402770996

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010580352507531643
    2. 'in' → logprob: -4.760580539703369
    3. ' ' → logprob: -6.260580539703369
    4. '  ' → logprob: -10.885580062866211
    5. '<|end|>' → logprob: -12.010580062866211
    6. ' i' → logprob: -12.135580062866211
    7. 'range' → logprob: -12.385580062866211
    8. ')' → logprob: -12.760580062866211
    9. '	in' → logprob: -13.010580062866211
    10. 'n' → logprob: -13.385580062866211

Token 18: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16023357212543488
    2. 'range' → logprob: -1.9102336168289185
    3. ' ' → logprob: -11.785233497619629
    4. '	range' → logprob: -14.160233497619629
    5. '(range' → logprob: -15.785233497619629
    6. '  ' → logprob: -15.785233497619629
    7. ')' → logprob: -16.160234451293945
    8. ' ran' → logprob: -16.160234451293945
    9. ' xrange' → logprob: -16.285234451293945
    10. '```' → logprob: -16.285234451293945

Token 19: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2901736795902252
    2. '(len' → logprob: -1.5401736497879028
    3. '(N' → logprob: -3.2901737689971924
    4. '(n' → logprob: -8.790173530578613
    5. '(int' → logprob: -9.790173530578613
    6. ' (' → logprob: -10.165173530578613
    7. '(length' → logprob: -12.165173530578613
    8. '(i' → logprob: -12.415173530578613
    9. '()' → logprob: -12.415173530578613
    10. '(min' → logprob: -13.290173530578613

Token 20: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.024512477219104767
    2. '(' → logprob: -3.774512529373169
    3. '(N' → logprob: -6.77451229095459
    4. '(s' → logprob: -9.27451229095459
    5. 'S' → logprob: -11.39951229095459
    6. ')' → logprob: -12.14951229095459
    7. ' (' → logprob: -12.89951229095459
    8. 's' → logprob: -13.02451229095459
    9. '('' → logprob: -13.52451229095459
    10. '(n' → logprob: -13.89951229095459

Token 21: ')):
' (ID: 22530)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8007438778877258
    2. ')' → logprob: -1.050743818283081
    3. '-' → logprob: -1.675743818283081
    4. ')):' → logprob: -4.80074405670166
    5. ' ' → logprob: -5.55074405670166
    6. '   ' → logprob: -7.67574405670166
    7. ')-' → logprob: -7.80074405670166
    8. '):' → logprob: -7.92574405670166
    9. ')):
' → logprob: -8.67574405670166
    10. ' )' → logprob: -8.80074405670166

Token 22: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7001920938491821
    2. '   ' → logprob: -1.0751920938491821
    3. ' if' → logprob: -2.4501919746398926
    4. '    ' → logprob: -2.7001919746398926
    5. ' for' → logprob: -6.950191974639893
    6. 'if' → logprob: -6.950191974639893
    7. ' i' → logprob: -7.075191974639893
    8. '  ' → logprob: -7.325191974639893
    9. ',' → logprob: -7.450191974639893
    10. '     
' → logprob: -7.450191974639893

Token 23: ' left' (ID: 3561)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36967653036117554
    2. ' for' → logprob: -1.6196765899658203
    3. 'if' → logprob: -3.3696765899658203
    4. ' ' → logprob: -3.6196765899658203
    5. '   ' → logprob: -3.7446765899658203
    6. 'for' → logprob: -4.11967658996582
    7. ' i' → logprob: -5.49467658996582
    8. ' min' → logprob: -6.49467658996582
    9. '    ' → logprob: -6.86967658996582
    10. '  ' → logprob: -7.24467658996582

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7783563137054443
    2. '=' → logprob: -1.5283563137054443
    3. '_' → logprob: -1.7783563137054443
    4. '+' → logprob: -3.1533563137054443
    5. ' ' → logprob: -3.2783563137054443
    6. ')' → logprob: -3.9033563137054443
    7. ',' → logprob: -4.528356552124023
    8. ' i' → logprob: -5.028356552124023
    9. '-' → logprob: -5.278356552124023
    10. 'i' → logprob: -5.528356552124023

Token 25: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5396861433982849
    2. ' i' → logprob: -1.9146862030029297
    3. 'int' → logprob: -2.4146862030029297
    4. 'S' → logprob: -2.7896862030029297
    5. 'max' → logprob: -3.1646862030029297
    6. ' S' → logprob: -3.4146862030029297
    7. ' max' → logprob: -3.9146862030029297
    8. ' int' → logprob: -4.41468620300293
    9. 'min' → logprob: -5.28968620300293
    10. ' min' → logprob: -6.66468620300293

Token 26: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6108110547065735
    2. 'max' → logprob: -1.6108109951019287
    3. 'S' → logprob: -1.8608109951019287
    4. 'int' → logprob: -2.4858109951019287
    5. 'min' → logprob: -4.610811233520508
    6. 'abs' → logprob: -5.610811233520508
    7. 'len' → logprob: -6.735811233520508
    8. ' i' → logprob: -6.860811233520508
    9. ' max' → logprob: -7.235811233520508
    10. '0' → logprob: -7.485811233520508

Token 27: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8221091032028198
    2. '<|end|>' → logprob: -1.1971091032028198
    3. ' if' → logprob: -1.8221091032028198
    4. 'if' → logprob: -2.5721092224121094
    5. '<|end|>' → logprob: -5.697109222412109
    6. ')' → logprob: -5.947109222412109
    7. ',' → logprob: -6.072109222412109
    8. '    ' → logprob: -6.072109222412109
    9. '
' → logprob: -6.197109222412109
    10. '  ' → logprob: -6.322109222412109

Token 28: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9167512655258179
    2. ' if' → logprob: -1.7917512655258179
    3. '<|end|>' → logprob: -1.7917512655258179
    4. ' ' → logprob: -2.0417513847351074
    5. '   ' → logprob: -3.4167513847351074
    6. 'for' → logprob: -4.041751384735107
    7. ',' → logprob: -4.291751384735107
    8. 'i' → logprob: -4.666751384735107
    9. '    ' → logprob: -4.791751384735107
    10. '
' → logprob: -5.041751384735107

Token 29: ' right' (ID: 1849)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9129733443260193
    2. ' if' → logprob: -1.412973403930664
    3. 'for' → logprob: -2.037973403930664
    4. ' for' → logprob: -2.537973403930664
    5. 'i' → logprob: -3.162973403930664
    6. ' i' → logprob: -3.162973403930664
    7. 'min' → logprob: -4.287973403930664
    8. '   ' → logprob: -4.662973403930664
    9. 'max' → logprob: -4.787973403930664
    10. ' ' → logprob: -5.287973403930664

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07884020358324051
    2. '=' → logprob: -2.7038402557373047
    3. ' +' → logprob: -5.078840255737305
    4. '+' → logprob: -7.078840255737305
    5. '   ' → logprob: -7.578840255737305
    6. ' ' → logprob: -7.703840255737305
    7. ',' → logprob: -8.203840255737305
    8. '<|end|>' → logprob: -9.078840255737305
    9. '[i' → logprob: -9.578840255737305
    10. ')' → logprob: -9.578840255737305

Token 31: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8223620057106018
    2. 'len' → logprob: -1.572361946105957
    3. 'min' → logprob: -2.072361946105957
    4. ' i' → logprob: -2.572361946105957
    5. ' min' → logprob: -3.572361946105957
    6. ' len' → logprob: -3.697361946105957
    7. 'N' → logprob: -3.822361946105957
    8. ' ' → logprob: -4.197361946105957
    9. '0' → logprob: -4.197361946105957
    10. ' N' → logprob: -4.697361946105957

Token 32: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.723027765750885
    2. 'len' → logprob: -1.3480277061462402
    3. 'min' → logprob: -1.5980277061462402
    4. 'N' → logprob: -3.8480277061462402
    5. '3' → logprob: -5.22302770614624
    6. '0' → logprob: -5.22302770614624
    7. '9' → logprob: -5.59802770614624
    8. '1' → logprob: -6.09802770614624
    9. '300' → logprob: -6.09802770614624
    10. ' i' → logprob: -6.34802770614624

Token 33: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9835590124130249
    2. 'for' (adapté à ' for') → logprob: -1.358559012413025
    3. ' if' → logprob: -1.733559012413025
    4. '   ' → logprob: -2.1085591316223145
    5. ' for' → logprob: -3.4835591316223145
    6. '<|end|>' → logprob: -3.9835591316223145
    7. ' ' → logprob: -4.7335591316223145
    8. '    ' → logprob: -5.2335591316223145
    9. '       ' → logprob: -5.6085591316223145
    10. '  ' → logprob: -6.9835591316223145

Token 36: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16492415964603424
    2. ' j' → logprob: -1.914924144744873
    3. 'range' → logprob: -6.289924144744873
    4. ' ' → logprob: -7.164924144744873
    5. 'S' → logprob: -7.164924144744873
    6. ' range' → logprob: -7.414924144744873
    7. ' S' → logprob: -8.039924621582031
    8. ')' → logprob: -8.914924621582031
    9. '   ' → logprob: -10.414924621582031
    10. ' in' → logprob: -10.414924621582031

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029946373775601387
    2. 'in' → logprob: -3.5299463272094727
    3. 'range' → logprob: -9.779946327209473
    4. '   ' → logprob: -9.779946327209473
    5. '    ' → logprob: -11.279946327209473
    6. '	in' → logprob: -11.279946327209473
    7. ' ' → logprob: -11.404946327209473
    8. '<|end|>' → logprob: -11.404946327209473
    9. '(range' → logprob: -11.404946327209473
    10. '(' → logprob: -11.654946327209473

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141783356666565
    2. ' range' → logprob: -1.7014178037643433
    3. 'S' → logprob: -13.451417922973633
    4. '(range' → logprob: -13.826417922973633
    5. ' S' → logprob: -14.076417922973633
    6. ' ' → logprob: -14.576417922973633
    7. '	range' → logprob: -14.826417922973633
    8. '  ' → logprob: -15.576417922973633
    9. ')' → logprob: -16.326417922973633
    10. '   ' → logprob: -16.576417922973633

Token 39: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07855824381113052
    2. '(len' → logprob: -2.7035582065582275
    3. '(' → logprob: -4.828558444976807
    4. '(j' → logprob: -7.578558444976807
    5. '(N' → logprob: -10.578557968139648
    6. '(left' → logprob: -10.828557968139648
    7. '(min' → logprob: -11.703557968139648
    8. 'len' → logprob: -12.078557968139648
    9. '(n' → logprob: -12.703557968139648
    10. '()' → logprob: -13.328557968139648

Token 40: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01231714803725481
    2. ',len' → logprob: -5.387317180633545
    3. ' ,' → logprob: -5.887317180633545
    4. '+' → logprob: -5.887317180633545
    5. ',i' → logprob: -6.637317180633545
    6. '   ' → logprob: -8.387316703796387
    7. 'len' → logprob: -8.387316703796387
    8. ' +' → logprob: -8.887316703796387
    9. '+i' → logprob: -9.262316703796387
    10. 'i' → logprob: -10.637316703796387

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06753220409154892
    2. ' if' → logprob: -2.8175323009490967
    3. 'if' → logprob: -5.817532062530518
    4. '<|end|>' → logprob: -6.692532062530518
    5. '   ' → logprob: -7.067532062530518
    6. '    ' → logprob: -8.692532539367676
    7. ' ' → logprob: -10.317532539367676
    8. '[' → logprob: -10.442532539367676
    9. '```' → logprob: -10.692532539367676
    10. '+' → logprob: -10.817532539367676

Token 42: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17311647534370422
    2. ' if' → logprob: -2.173116445541382
    3. 'left' → logprob: -3.423116445541382
    4. 'right' → logprob: -5.048116683959961
    5. '       ' → logprob: -5.548116683959961
    6. ' left' → logprob: -6.548116683959961
    7. '   ' → logprob: -7.923116683959961
    8. '           ' → logprob: -8.548116683959961
    9. ' right' → logprob: -8.798116683959961
    10. '[left' → logprob: -10.798116683959961

Token 43: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.5759637355804443
    2. 'S' → logprob: -0.8259637355804443
    3. '   ' → logprob: -11.950963973999023
    4. ' ' → logprob: -12.450963973999023
    5. '(S' → logprob: -12.575963973999023
    6. 's' → logprob: -12.825963973999023
    7. 'j' → logprob: -13.700963973999023
    8. '    ' → logprob: -13.825963973999023
    9. ' j' → logprob: -13.950963973999023
    10. '>S' → logprob: -13.950963973999023

Token 44: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00024739265791140497
    2. '[' → logprob: -8.62524700164795
    3. '[i' → logprob: -9.62524700164795
    4. '```' → logprob: -14.37524700164795
    5. '[left' → logprob: -15.37524700164795
    6. '[I' → logprob: -15.75024700164795
    7. '[index' → logprob: -16.000247955322266
    8. ' [' → logprob: -16.125247955322266
    9. '[k' → logprob: -16.250247955322266
    10. 'j' → logprob: -16.625247955322266

Token 45: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05415463447570801
    2. ']==' → logprob: -3.179154634475708
    3. '==' → logprob: -4.804154396057129
    4. ' ==' → logprob: -6.304154396057129
    5. ' ]' → logprob: -7.804154396057129
    6. ']=='' → logprob: -7.929154396057129
    7. '']' → logprob: -9.929154396057129
    8. '=' → logprob: -9.929154396057129
    9. ' ' → logprob: -10.554154396057129
    10. ')' → logprob: -10.554154396057129

Token 46: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6409397721290588
    2. '==' → logprob: -0.7659397721290588
    3. '=' → logprob: -5.890939712524414
    4. ' ' → logprob: -6.390939712524414
    5. '>' → logprob: -7.765939712524414
    6. '<' → logprob: -7.890939712524414
    7. '=='' → logprob: -8.015939712524414
    8. ' <' → logprob: -8.140939712524414
    9. '!=' → logprob: -8.140939712524414
    10. ')' → logprob: -8.390939712524414

Token 47: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17945116758346558
    2. ''A' → logprob: -2.3044512271881104
    3. ''O' → logprob: -3.9294512271881104
    4. ''L' → logprob: -4.929450988769531
    5. ''S' → logprob: -5.054450988769531
    6. '"' → logprob: -5.054450988769531
    7. '(' → logprob: -5.679450988769531
    8. 'R' → logprob: -5.929450988769531
    9. 'A' → logprob: -6.179450988769531
    10. ' '('' → logprob: -6.554450988769531

Token 48: 'W' (ID: 54)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -1.367451548576355
    2. ''' → logprob: -1.867451548576355
    3. 'R' → logprob: -1.867451548576355
    4. 'A' → logprob: -2.1174516677856445
    5. '(':' → logprob: -2.3674516677856445
    6. '0' → logprob: -2.6174516677856445
    7. 'a' → logprob: -3.1174516677856445
    8. '(' → logprob: -3.8674516677856445
    9. '<' → logprob: -4.2424516677856445
    10. 'I' → logprob: -4.3674516677856445

Token 49: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.2181089073419571
    2. '':
' → logprob: -1.843108892440796
    3. ''' → logprob: -3.343108892440796
    4. ' '' → logprob: -6.843109130859375
    5. '':
' → logprob: -6.968109130859375
    6. ' ':' → logprob: -8.843109130859375
    7. ':' → logprob: -9.468109130859375
    8. ''t' → logprob: -10.968109130859375
    9. '':

' → logprob: -11.343109130859375
    10. ':
' → logprob: -11.468109130859375

Token 50: '           ' (ID: 352)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7784392833709717
    2. '           ' → logprob: -1.4034392833709717
    3. ' left' → logprob: -1.6534392833709717
    4. 'right' → logprob: -2.4034392833709717
    5. ' right' → logprob: -5.028439521789551
    6. '       ' → logprob: -6.028439521789551
    7. ':left' → logprob: -6.653439521789551
    8. '          ' → logprob: -7.528439521789551
    9. '	left' → logprob: -7.903439521789551
    10. '               ' → logprob: -8.02843952178955

Token 51: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.022180601954460144
    2. ' left' → logprob: -4.147180557250977
    3. 'right' → logprob: -5.147180557250977
    4. '	left' → logprob: -9.147180557250977
    5. ' right' → logprob: -9.397180557250977
    6. '   ' → logprob: -9.772180557250977
    7. '           ' → logprob: -10.772180557250977
    8. '       ' → logprob: -11.022180557250977
    9. ' ' → logprob: -11.897180557250977
    10. ' lef' → logprob: -12.272180557250977

Token 52: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14287637174129486
    2. ' +=' → logprob: -2.017876386642456
    3. '+' → logprob: -9.267876625061035
    4. '=' → logprob: -10.267876625061035
    5. '-=' → logprob: -10.267876625061035
    6. ' -=' → logprob: -11.392876625061035
    7. ']+=' → logprob: -11.517876625061035
    8. '+='' → logprob: -11.892876625061035
    9. '+=(' → logprob: -13.142876625061035
    10. ' =' → logprob: -13.267876625061035

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003433296224102378
    2. ' ' → logprob: -8.000343322753906
    3. 'j' → logprob: -13.000343322753906
    4. '-' → logprob: -13.625343322753906
    5. 'i' → logprob: -13.750343322753906
    6. '0' → logprob: -14.250343322753906
    7. 'W' → logprob: -15.000343322753906
    8. '2' → logprob: -15.125343322753906
    9. 'right' → logprob: -15.125343322753906
    10. 'left' → logprob: -15.250343322753906

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'W' → logprob: -17.000003814697266
    4. '0' → logprob: -17.125003814697266
    5. 'j' → logprob: -17.250003814697266
    6. '-' → logprob: -17.500003814697266
    7. '2' → logprob: -17.500003814697266
    8. 'right' → logprob: -17.750003814697266
    9. 'left' → logprob: -17.812503814697266
    10. 'i' → logprob: -18.750003814697266

Token 55: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7001473903656006
    2. '       ' → logprob: -0.7001473903656006
    3. '<|end|>' → logprob: -5.70014762878418
    4. ')' → logprob: -6.82514762878418
    5. ' else' → logprob: -7.45014762878418
    6. '    ' → logprob: -7.70014762878418
    7. ' ' → logprob: -8.07514762878418
    8. ' elif' → logprob: -8.70014762878418
    9. 'else' → logprob: -9.07514762878418
    10. '  ' → logprob: -9.07514762878418

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13198862969875336
    2. '       ' → logprob: -2.131988525390625
    3. '<|end|>' → logprob: -5.631988525390625
    4. '    ' → logprob: -8.006988525390625
    5. ')' → logprob: -8.131988525390625
    6. ' else' → logprob: -8.506988525390625
    7. ' ' → logprob: -9.381988525390625
    8. '  ' → logprob: -9.506988525390625
    9. 'else' → logprob: -9.631988525390625
    10. '<|end|>' → logprob: -9.881988525390625

Token 57: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8272885680198669
    2. 'for' (adapté à ' for') → logprob: -0.8272885680198669
    3. ' for' → logprob: -2.0772886276245117
    4. 'if' → logprob: -9.452288627624512
    5. '	for' → logprob: -9.452288627624512
    6. ' ' → logprob: -10.827288627624512
    7. ' if' → logprob: -10.952288627624512
    8. '<|end|>' → logprob: -11.077288627624512
    9. '```' → logprob: -11.202288627624512
    10. '  ' → logprob: -11.327288627624512

Token 58: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.48980358242988586
    2. 'j' → logprob: -1.4898035526275635
    3. ' range' → logprob: -2.7398035526275635
    4. 'range' → logprob: -3.1148035526275635
    5. 'k' → logprob: -3.4898035526275635
    6. ' k' → logprob: -3.8648035526275635
    7. ' ' → logprob: -7.864803791046143
    8. ' in' → logprob: -8.114803314208984
    9. '```' → logprob: -9.239803314208984
    10. 'x' → logprob: -10.052303314208984

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004200674593448639
    2. 'in' → logprob: -7.875420093536377
    3. 'range' → logprob: -10.375419616699219
    4. ' range' → logprob: -11.875419616699219
    5. ' i' → logprob: -14.750419616699219
    6. 'i' → logprob: -15.500419616699219
    7. '(range' → logprob: -15.500419616699219
    8. ' ' → logprob: -15.500419616699219
    9. '```' → logprob: -15.500419616699219
    10. 'from' → logprob: -16.12541961669922

Token 60: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02413632534444332
    2. ' range' → logprob: -3.7741363048553467
    3. '(range' → logprob: -7.024136543273926
    4. '	range' → logprob: -15.774136543273926
    5. 'rang' → logprob: -17.27413558959961
    6. '.range' → logprob: -18.77413558959961
    7. '_range' → logprob: -18.77413558959961
    8. '(' → logprob: -19.39913558959961
    9. ' rang' → logprob: -19.52413558959961
    10. '-range' → logprob: -19.77413558959961

Token 61: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006360658910125494
    2. 'range' → logprob: -5.8813605308532715
    3. '(range' → logprob: -6.0063605308532715
    4. '(len' → logprob: -6.8813605308532715
    5. ' range' → logprob: -10.00636100769043
    6. '(' → logprob: -11.38136100769043
    7. 'Range' → logprob: -14.25636100769043
    8. ' (' → logprob: -14.38136100769043
    9. 'i' → logprob: -14.88136100769043
    10. 'len' → logprob: -15.13136100769043

Token 62: ' +' (ID: 659)
  Prédit: ',len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',len' → logprob: -0.47855448722839355
    2. ',' → logprob: -0.9785544872283936
    3. 'len' → logprob: -5.978554725646973
    4. '+' → logprob: -6.853554725646973
    5. 'to' → logprob: -7.853554725646973
    6. '<len' → logprob: -8.103554725646973
    7. ' to' → logprob: -9.478554725646973
    8. ' len' → logprob: -10.603554725646973
    9. '=len' → logprob: -10.603554725646973
    10. ',length' → logprob: -10.728554725646973

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028529210248962045
    2. '3' → logprob: -9.000285148620605
    3. '2' → logprob: -9.500285148620605
    4. ' ' → logprob: -9.500285148620605
    5. 'N' → logprob: -12.000285148620605
    6. '4' → logprob: -13.375285148620605
    7. '0' → logprob: -13.750285148620605
    8. 'len' → logprob: -13.750285148620605
    9. '   ' → logprob: -14.500285148620605
    10. '5' → logprob: -14.875285148620605

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4272752852994017e-05
    2. ' ' → logprob: -11.37502384185791
    3. '2' → logprob: -11.50002384185791
    4. '0' → logprob: -13.87502384185791
    5. '3' → logprob: -14.37502384185791
    6. '   ' → logprob: -15.25002384185791
    7. 'N' → logprob: -15.50002384185791
    8. 'len' → logprob: -15.81252384185791
    9. '```' → logprob: -16.062524795532227
    10. '4' → logprob: -16.750024795532227

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5946992635726929
    2. ',len' → logprob: -1.2196992635726929
    3. 'len' → logprob: -2.3446993827819824
    4. '(len' → logprob: -3.5946993827819824
    5. '):' → logprob: -4.719699382781982
    6. '   ' → logprob: -4.844699382781982
    7. ' len' → logprob: -5.344699382781982
    8. ':' → logprob: -5.969699382781982
    9. '<len' → logprob: -6.094699382781982
    10. ')' → logprob: -7.094699382781982

Token 66: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0039029077161103487
    2. 'N' → logprob: -5.628902912139893
    3. ' len' → logprob: -8.628902435302734
    4. '   ' → logprob: -9.253902435302734
    5. 'n' → logprob: -11.003902435302734
    6. ' N' → logprob: -12.878902435302734
    7. 'i' → logprob: -13.503902435302734
    8. ' ' → logprob: -13.628902435302734
    9. '(len' → logprob: -13.753902435302734
    10. 'le' → logprob: -14.128902435302734

Token 67: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -2.3319124011322856e-05
    2. 'S' → logprob: -10.750022888183594
    3. 's' → logprob: -14.250022888183594
    4. ')' → logprob: -14.500022888183594
    5. '(' → logprob: -14.875022888183594
    6. '(s' → logprob: -15.625022888183594
    7. ' (' → logprob: -17.500022888183594
    8. '[S' → logprob: -17.750022888183594
    9. 'a' → logprob: -18.125022888183594
    10. '   ' → logprob: -18.625022888183594

Token 68: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.055061355233192444
    2. '):' → logprob: -2.9300613403320312
    3. '):
' → logprob: -9.805061340332031
    4. '   ' → logprob: -10.555061340332031
    5. '():
' → logprob: -10.680061340332031
    6. ')' → logprob: -11.180061340332031
    7. ' ):
' → logprob: -11.180061340332031
    8. ''):
' → logprob: -11.555061340332031
    9. ')):
' → logprob: -11.680061340332031
    10. '):

' → logprob: -11.805061340332031

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006104643456637859
    2. 'if' → logprob: -5.256104469299316
    3. '   ' → logprob: -7.256104469299316
    4. ' if' → logprob: -8.756104469299316
    5. '```' → logprob: -12.131104469299316
    6. '           ' → logprob: -14.506104469299316
    7. '      ' → logprob: -15.131104469299316
    8. '     ' → logprob: -15.256104469299316
    9. '    ' → logprob: -15.756104469299316
    10. '	if' → logprob: -15.881104469299316

Token 70: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.028920941054821014
    2. '       ' → logprob: -3.653920888900757
    3. ' if' → logprob: -6.153921127319336
    4. '   ' → logprob: -7.653921127319336
    5. '```' → logprob: -11.278921127319336
    6. '	if' → logprob: -13.403921127319336
    7. '           ' → logprob: -13.903921127319336
    8. 'If' → logprob: -14.028921127319336
    9. '    ' → logprob: -14.278921127319336
    10. ' ' → logprob: -14.653921127319336

Token 71: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03810173645615578
    2. ' S' → logprob: -3.2881016731262207
    3. '   ' → logprob: -10.288102149963379
    4. ' ' → logprob: -10.913102149963379
    5. '  ' → logprob: -12.663102149963379
    6. 's' → logprob: -13.538102149963379
    7. '    ' → logprob: -14.163102149963379
    8. 'j' → logprob: -14.913102149963379
    9. 'not' → logprob: -15.163102149963379
    10. '	S' → logprob: -15.225602149963379

Token 72: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.584239938296378e-06
    2. '[i' → logprob: -12.500007629394531
    3. '[' → logprob: -13.375007629394531
    4. 'j' → logprob: -13.625007629394531
    5. '```' → logprob: -14.500007629394531
    6. '   ' → logprob: -16.00000762939453
    7. '[
' → logprob: -16.75000762939453
    8. ' [' → logprob: -17.25000762939453
    9. '
' → logprob: -17.87500762939453
    10. '[user' → logprob: -18.00000762939453

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00229085236787796
    2. ']==' → logprob: -6.127290725708008
    3. ' ]' → logprob: -10.377290725708008
    4. '==' → logprob: -10.502290725708008
    5. '']' → logprob: -10.877290725708008
    6. ']=='' → logprob: -11.252290725708008
    7. ' ==' → logprob: -11.377290725708008
    8. '   ' → logprob: -13.877290725708008
    9. ''' → logprob: -14.752290725708008
    10. ']=' → logprob: -15.127290725708008

Token 74: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3871839940547943
    2. '==' → logprob: -1.1371840238571167
    3. '=='' → logprob: -8.637184143066406
    4. '=' → logprob: -10.137184143066406
    5. ']==' → logprob: -10.762184143066406
    6. ' =='' → logprob: -10.762184143066406
    7. ' ' → logprob: -11.762184143066406
    8. ')' → logprob: -12.262184143066406
    9. ']' → logprob: -12.262184143066406
    10. '```' → logprob: -12.262184143066406

Token 75: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16290424764156342
    2. ''E' → logprob: -1.9129042625427246
    3. 'R' → logprob: -6.912904262542725
    4. ''O' → logprob: -8.412903785705566
    5. ''S' → logprob: -8.412903785705566
    6. ''L' → logprob: -8.787903785705566
    7. ' '' → logprob: -8.912903785705566
    8. '```' → logprob: -9.162903785705566
    9. ''r' → logprob: -9.287903785705566
    10. '')' → logprob: -9.412903785705566

Token 76: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.25563424825668335
    2. 'R' → logprob: -1.5056343078613281
    3. 'B' → logprob: -6.380634307861328
    4. 'W' → logprob: -6.880634307861328
    5. ''E' → logprob: -7.130634307861328
    6. ''' → logprob: -10.005634307861328
    7. '#' → logprob: -10.505634307861328
    8. ' E' → logprob: -11.005634307861328
    9. 'S' → logprob: -11.130634307861328
    10. ' R' → logprob: -11.380634307861328

Token 77: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7636498808860779
    2. '':
' → logprob: -1.2636499404907227
    3. '':' → logprob: -1.3886499404907227
    4. ''):
' → logprob: -7.263649940490723
    5. 'W' → logprob: -7.888649940490723
    6. '           ' → logprob: -8.263649940490723
    7. '':
' → logprob: -8.513649940490723
    8. ''w' → logprob: -9.138649940490723
    9. '       ' → logprob: -9.263649940490723
    10. ' '' → logprob: -9.888649940490723

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005159870255738497
    2. 'right' → logprob: -5.880159854888916
    3. ' right' → logprob: -7.380159854888916
    4. '               ' → logprob: -7.380159854888916
    5. '       ' → logprob: -7.630159854888916
    6. '          ' → logprob: -8.005160331726074
    7. '+' → logprob: -9.255160331726074
    8. '	right' → logprob: -9.880160331726074
    9. '   ' → logprob: -10.255160331726074
    10. 'left' → logprob: -11.005160331726074

Token 79: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.2018577754497528
    2. ' right' → logprob: -1.7018578052520752
    3. 'left' → logprob: -8.576857566833496
    4. '	right' → logprob: -9.076857566833496
    5. '   ' → logprob: -9.576857566833496
    6. '           ' → logprob: -10.326857566833496
    7. ' left' → logprob: -10.826857566833496
    8. ' ' → logprob: -11.701857566833496
    9. '  ' → logprob: -12.201857566833496
    10. '               ' → logprob: -13.326857566833496

Token 80: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.030027121305465698
    2. '+=' → logprob: -3.530027151107788
    3. '+' → logprob: -8.280027389526367
    4. ' +' → logprob: -10.780027389526367
    5. '           ' → logprob: -14.780027389526367
    6. '   ' → logprob: -14.780027389526367
    7. ' -=' → logprob: -15.155027389526367
    8. '=' → logprob: -15.405027389526367
    9. ']+=' → logprob: -15.405027389526367
    10. '    ' → logprob: -16.280027389526367

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014163628220558167
    2. ' ' → logprob: -4.264163494110107
    3. '<|end|>' → logprob: -16.889163970947266
    4. '0' → logprob: -17.014163970947266
    5. '   ' → logprob: -18.389163970947266
    6. '+' → logprob: -19.014163970947266
    7. '  ' → logprob: -19.389163970947266
    8. '2' → logprob: -20.014163970947266
    9. '-' → logprob: -20.139163970947266
    10. '１' → logprob: -20.264163970947266

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '0' → logprob: -17.875009536743164
    4. '<|end|>' → logprob: -18.000009536743164
    5. '-' → logprob: -18.875009536743164
    6. '+' → logprob: -19.000009536743164
    7. '   ' → logprob: -19.875009536743164
    8. '１' → logprob: -20.000009536743164
    9. '```' → logprob: -20.125009536743164
    10. '>' → logprob: -20.437509536743164

Token 83: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09298578649759293
    2. '
' → logprob: -3.3429858684539795
    3. '<|end|>' → logprob: -4.0929856300354
    4. '    
' → logprob: -4.3429856300354
    5. '```' → logprob: -4.8429856300354
    6. '  
' → logprob: -5.2179856300354
    7. 'min' → logprob: -6.3429856300354
    8. '  ' → logprob: -6.5929856300354
    9. ' min' → logprob: -6.7179856300354
    10. ' ' → logprob: -6.7179856300354

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03199445456266403
    2. '
' → logprob: -4.656994342803955
    3. '    
' → logprob: -5.031994342803955
    4. 'min' → logprob: -5.406994342803955
    5. ' if' → logprob: -5.531994342803955
    6. 'if' → logprob: -6.281994342803955
    7. ' min' → logprob: -6.406994342803955
    8. '```' → logprob: -6.406994342803955
    9. '  
' → logprob: -7.781994342803955
    10. '<|end|>' → logprob: -8.031994819641113

Token 85: ' if' (ID: 538)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08276631683111191
    2. 'if' (adapté à ' if') → logprob: -3.08276629447937
    3. '   ' → logprob: -4.207766532897949
    4. ' min' → logprob: -4.457766532897949
    5. ' if' → logprob: -4.957766532897949
    6. ' ' → logprob: -9.45776653289795
    7. '	min' → logprob: -11.58276653289795
    8. '
' → logprob: -12.20776653289795
    9. 'num' → logprob: -12.33276653289795
    10. '  ' → logprob: -12.95776653289795

Token 86: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.10478460043668747
    2. ' min' → logprob: -2.4797844886779785
    3. 'left' → logprob: -4.3547844886779785
    4. 'min' → logprob: -6.7297844886779785
    5. ' right' → logprob: -7.3547844886779785
    6. ' ' → logprob: -8.104784965515137
    7. ' S' → logprob: -8.604784965515137
    8. ' max' → logprob: -9.104784965515137
    9. ' (' → logprob: -9.229784965515137
    10. '(left' → logprob: -9.229784965515137

Token 87: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5386755466461182
    2. ' +' → logprob: -0.9136755466461182
    3. ' <' → logprob: -4.913675308227539
    4. '<' → logprob: -4.913675308227539
    5. '>' → logprob: -8.038675308227539
    6. ' >' → logprob: -8.038675308227539
    7. ' ' → logprob: -10.163675308227539
    8. '==' → logprob: -10.913675308227539
    9. ' ==' → logprob: -11.788675308227539
    10. '-' → logprob: -12.163675308227539

Token 88: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.033667825162410736
    2. ' right' → logprob: -3.408667802810669
    3. ' ' → logprob: -12.15866756439209
    4. '	right' → logprob: -12.40866756439209
    5. '[right' → logprob: -12.78366756439209
    6. '   ' → logprob: -12.90866756439209
    7. '1' → logprob: -13.03366756439209
    8. '0' → logprob: -13.65866756439209
    9. '(right' → logprob: -14.28366756439209
    10. '  ' → logprob: -14.40866756439209

Token 89: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20145592093467712
    2. '<' → logprob: -1.7014559507369995
    3. ' ' → logprob: -10.451456069946289
    4. ')' → logprob: -13.201456069946289
    5. '<|end|>' → logprob: -13.451456069946289
    6. '<int' → logprob: -13.576456069946289
    7. '<num' → logprob: -14.076456069946289
    8. '```' → logprob: -14.201456069946289
    9. '   ' → logprob: -14.326456069946289
    10. '<m' → logprob: -14.513956069946289

Token 90: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.009757032617926598
    2. 'min' → logprob: -4.634757041931152
    3. '	min' → logprob: -14.259757041931152
    4. ' ' → logprob: -15.384757041931152
    5. ' ' → logprob: -16.009756088256836
    6. '   ' → logprob: -17.259756088256836
    7. '=min' → logprob: -17.634756088256836
    8. ' minlength' → logprob: -17.884756088256836
    9. '(min' → logprob: -18.634756088256836
    10. 'm' → logprob: -18.634756088256836

Token 91: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -2.3319124011322856e-05
    2. '_' → logprob: -10.750022888183594
    3. '_min' → logprob: -14.000022888183594
    4. '_n' → logprob: -14.375022888183594
    5. '__' → logprob: -16.000022888183594
    6. ' _' → logprob: -16.125022888183594
    7. '_um' → logprob: -17.375022888183594
    8. '_m' → logprob: -18.000022888183594
    9. '_sum' → logprob: -18.375022888183594
    10. '_nums' → logprob: -18.625022888183594

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.7385154428193346e-05
    2. ':
' → logprob: -10.50003719329834
    3. ' :' → logprob: -11.87503719329834
    4. '):' → logprob: -13.37503719329834
    5. ':**' → logprob: -14.87503719329834
    6. '():' → logprob: -15.25003719329834
    7. '<|end|>' → logprob: -15.75003719329834
    8. ':
' → logprob: -15.87503719329834
    9. ':return' → logprob: -16.500038146972656
    10. '=' → logprob: -16.625038146972656

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006801460403949022
    2. '   ' → logprob: -7.750679969787598
    3. ' min' → logprob: -9.000679969787598
    4. 'min' → logprob: -10.125679969787598
    5. '<|end|>' → logprob: -10.750679969787598
    6. ':' → logprob: -11.125679969787598
    7. '_min' → logprob: -11.500679969787598
    8. '	min' → logprob: -12.125679969787598
    9. '```' → logprob: -12.250679969787598
    10. '      ' → logprob: -12.375679969787598

Token 94: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.47484394907951355
    2. 'min' (adapté à ' min') → logprob: -0.9748439788818359
    3. '       ' → logprob: -7.599843978881836
    4. '	min' → logprob: -8.849843978881836
    5. '   ' → logprob: -9.599843978881836
    6. '
' → logprob: -10.599843978881836
    7. '_min' → logprob: -11.099843978881836
    8. '           ' → logprob: -12.349843978881836
    9. ' ' → logprob: -13.099843978881836
    10. '```' → logprob: -13.099843978881836

Token 95: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -7.941850526549388e-06
    2. '_' → logprob: -11.875007629394531
    3. '_val' → logprob: -15.500007629394531
    4. '_n' → logprob: -16.00000762939453
    5. ' _' → logprob: -16.00000762939453
    6. '_idx' → logprob: -16.37500762939453
    7. '_token' → logprob: -16.37500762939453
    8. '_index' → logprob: -17.62500762939453
    9. 'num' → logprob: -17.62500762939453
    10. '_cost' → logprob: -17.62500762939453

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006715370807796717
    2. '=' → logprob: -5.006715297698975
    3. '＝' → logprob: -16.881715774536133
    4. ' ' → logprob: -17.506715774536133
    5. ' =
' → logprob: -18.381715774536133
    6. ' =)' → logprob: -19.756715774536133
    7. ',' → logprob: -20.256715774536133
    8. ' +=' → logprob: -20.631715774536133
    9. ' =
' → logprob: -20.881715774536133
    10. 's' → logprob: -21.006715774536133

Token 97: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.5759466886520386
    2. 'left' → logprob: -0.8259466886520386
    3. '	left' → logprob: -12.825946807861328
    4. ' lef' → logprob: -13.450946807861328
    5. ' ' → logprob: -13.700946807861328
    6. '   ' → logprob: -14.200946807861328
    7. '(left' → logprob: -14.450946807861328
    8. '[left' → logprob: -15.450946807861328
    9. ' ' → logprob: -15.575946807861328
    10. '_left' → logprob: -16.450946807861328

Token 98: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38688093423843384
    2. '+' → logprob: -1.136880874633789
    3. '+j' → logprob: -12.511880874633789
    4. ' plus' → logprob: -12.886880874633789
    5. ' ' → logprob: -13.761880874633789
    6. '＋' → logprob: -14.261880874633789
    7. '+r' → logprob: -15.011880874633789
    8. ' +
' → logprob: -15.136880874633789
    9. 'plus' → logprob: -15.136880874633789
    10. ' ' → logprob: -15.261880874633789

Token 99: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.018153922632336617
    2. ' right' → logprob: -4.018154144287109
    3. '1' → logprob: -13.51815414428711
    4. '	right' → logprob: -13.64315414428711
    5. '   ' → logprob: -14.51815414428711
    6. ' ' → logprob: -14.89315414428711
    7. '(right' → logprob: -15.64315414428711
    8. '[right' → logprob: -15.64315414428711
    9. '_right' → logprob: -16.26815414428711
    10. '       ' → logprob: -16.64315414428711

Token 100: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009152670972980559
    2. ')' → logprob: -7.375915050506592
    3. ' print' → logprob: -8.25091552734375
    4. '<|end|>' → logprob: -10.87591552734375
    5. ' )' → logprob: -13.37591552734375
    6. '(print' → logprob: -13.62591552734375
    7. '
' → logprob: -13.87591552734375
    8. '```' → logprob: -14.00091552734375
    9. '#print' → logprob: -14.37591552734375
    10. '\n' → logprob: -14.37591552734375

Token 101: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.423219696851447e-05
    2. ' print' → logprob: -9.750083923339844
    3. ')' → logprob: -10.750083923339844
    4. '<|end|>' → logprob: -12.750083923339844
    5. '```' → logprob: -14.625083923339844
    6. '#' → logprob: -14.875083923339844
    7. '#print' → logprob: -15.250083923339844
    8. '(print' → logprob: -15.625083923339844
    9. '.print' → logprob: -16.750083923339844
    10. '.' → logprob: -17.125083923339844

Token 102: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.008615754544734955
    2. '(' → logprob: -4.758615970611572
    3. 'min' → logprob: -14.133615493774414
    4. '(m' → logprob: -15.758615493774414
    5. '(max' → logprob: -16.008615493774414
    6. '()' → logprob: -16.383615493774414
    7. '('' → logprob: -16.508615493774414
    8. '("("' → logprob: -17.133615493774414
    9. ' (' → logprob: -17.383615493774414
    10. '(
' → logprob: -17.508615493774414

Token 103: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -3.8889261304575484e-06
    2. 'num' → logprob: -13.375003814697266
    3. '_' → logprob: -13.875003814697266
    4. ')' → logprob: -14.250003814697266
    5. '_min' → logprob: -14.750003814697266
    6. '_)' → logprob: -16.500003814697266
    7. ')_' → logprob: -16.625003814697266
    8. '_NUM' → logprob: -17.250003814697266
    9. 'Num' → logprob: -17.500003814697266
    10. '```' → logprob: -17.625003814697266

Token 104: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -12.87500286102295
    3. ')
' → logprob: -15.25000286102295
    4. '))' → logprob: -16.125003814697266
    5. ')`' → logprob: -16.375003814697266
    6. ')}' → logprob: -17.250003814697266
    7. '')' → logprob: -18.500003814697266
    8. '+' → logprob: -18.750003814697266
    9. '}' → logprob: -19.125003814697266
    10. '),' → logprob: -19.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 102
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 48
Tokens correctement prédits (top 10): 82
Précision stricte (1ère position): 43.14%
Précision adaptée (1ère position): 47.06%
Précision (top 10): 80.39%
================================================================================
