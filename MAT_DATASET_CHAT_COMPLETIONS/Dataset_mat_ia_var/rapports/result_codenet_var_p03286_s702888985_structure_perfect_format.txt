================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def solve(n):
    if n == 0:
        return '0'
    ans = ''
    p = 0
    d = 0
    while n + p:
        if (n & 1) ^ p:
            ans += '1'
            if d ^ p:
                p ^= 1
        else:
            ans += '0'
        n >>= 1
        d ^= 1
    return ans[::-1]

n = int(input())
print(solve(n))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' solve' (ID: 17722)
  → Token d'amorce (pas de prédiction)

Token 2: '(n' (ID: 2406)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02028948813676834
    2. ')' → logprob: -4.020289421081543
    3. ',' → logprob: -6.270289421081543
    4. ':' → logprob: -8.770289421081543
    5. '=' → logprob: -10.770289421081543
    6. '```' → logprob: -11.520289421081543
    7. '):
' → logprob: -11.645289421081543
    8. '[' → logprob: -12.270289421081543
    9. ')>' → logprob: -12.270289421081543
    10. '_' → logprob: -12.395289421081543

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19935613870620728
    2. '   ' → logprob: -2.0743560791015625
    3. '\n' → logprob: -3.8243560791015625
    4. '```' → logprob: -3.8243560791015625
    5. '\' → logprob: -4.9493560791015625
    6. ':
' → logprob: -6.5743560791015625
    7. '    
' → logprob: -7.3243560791015625
    8. ':\' → logprob: -7.8243560791015625
    9. '``' → logprob: -8.574356079101562
    10. '  
' → logprob: -8.574356079101562

Token 5: ' if' (ID: 538)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.0752066373825073
    2. '   ' → logprob: -1.2002066373825073
    3. '\n' → logprob: -1.7002066373825073
    4. '```' → logprob: -2.450206756591797
    5. ':' → logprob: -4.200206756591797
    6. ''' → logprob: -4.325206756591797
    7. '`' → logprob: -4.575206756591797
    8. ' ' → logprob: -4.825206756591797
    9. '    ' → logprob: -5.200206756591797
    10. '    
' → logprob: -5.325206756591797

Token 6: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04935663938522339
    2. ' ' → logprob: -3.299356698989868
    3. ' not' → logprob: -4.549356460571289
    4. 'n' → logprob: -7.424356460571289
    5. 'not' → logprob: -10.549356460571289
    6. '  ' → logprob: -10.674356460571289
    7. ' ' → logprob: -12.174356460571289
    8. '<|end|>' → logprob: -12.674356460571289
    9. '(n' → logprob: -12.924356460571289
    10. ' a' → logprob: -13.049356460571289

Token 7: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.43590831756591797
    2. ' ==' → logprob: -1.935908317565918
    3. ' %' → logprob: -2.185908317565918
    4. ' <=' → logprob: -3.435908317565918
    5. '>' → logprob: -3.685908317565918
    6. ' <' → logprob: -4.435908317565918
    7. '%' → logprob: -4.560908317565918
    8. ' ' → logprob: -4.810908317565918
    9. '==' → logprob: -5.060908317565918
    10. ' >=' → logprob: -6.810908317565918

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12698008120059967
    2. '0' → logprob: -2.1269800662994385
    3. '1' → logprob: -10.12697982788086
    4. ' None' → logprob: -12.00197982788086
    5. ' ' → logprob: -13.37697982788086
    6. '2' → logprob: -14.25197982788086
    7. ''' → logprob: -14.50197982788086
    8. 'None' → logprob: -14.62697982788086
    9. '=' → logprob: -14.87697982788086
    10. ' True' → logprob: -15.37697982788086

Token 9: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006320207612589002
    2. ' ' → logprob: -7.375631809234619
    3. '1' → logprob: -12.125632286071777
    4. '42' → logprob: -17.00063133239746
    5. ''' → logprob: -17.75063133239746
    6. '=' → logprob: -17.87563133239746
    7. '2' → logprob: -18.87563133239746
    8. '   ' → logprob: -18.87563133239746
    9. '10' → logprob: -19.00063133239746
    10. '5' → logprob: -19.75063133239746

Token 10: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011105302110081539
    2. ':return' → logprob: -9.375110626220703
    3. ':
' → logprob: -11.125110626220703
    4. ' :' → logprob: -12.250110626220703
    5. '':' → logprob: -12.875110626220703
    6. '):' → logprob: -13.375110626220703
    7. '():' → logprob: -14.625110626220703
    8. ':**' → logprob: -14.750110626220703
    9. '":' → logprob: -14.875110626220703
    10. ':\' → logprob: -15.000110626220703

Token 11: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1227974072098732
    2. '\n' → logprob: -3.1227974891662598
    3. ':' → logprob: -3.7477974891662598
    4. ':return' → logprob: -4.24779748916626
    5. '   ' → logprob: -4.74779748916626
    6. ':
' → logprob: -5.12279748916626
    7. '    ' → logprob: -5.49779748916626
    8. ' return' → logprob: -5.62279748916626
    9. '\' → logprob: -5.62279748916626
    10. 'return' → logprob: -5.99779748916626

Token 12: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2886351943016052
    2. 'return' (adapté à ' return') → logprob: -1.91363525390625
    3. '       ' → logprob: -2.41363525390625
    4. '   ' → logprob: -4.41363525390625
    5. '\n' → logprob: -7.41363525390625
    6. ' ' → logprob: -8.28863525390625
    7. ' \' → logprob: -8.53863525390625
    8. '\' → logprob: -9.16363525390625
    9. '           ' → logprob: -9.66363525390625
    10. '    ' → logprob: -9.66363525390625

Token 13: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.001825213432312
    2. '\n' → logprob: -1.126825213432312
    3. ' 
' → logprob: -2.6268253326416016
    4. ''' → logprob: -2.6268253326416016
    5. '"' → logprob: -3.0018253326416016
    6. '0' → logprob: -3.3768253326416016
    7. ' None' → logprob: -3.7518253326416016
    8. '1' → logprob: -4.626825332641602
    9. 'None' → logprob: -4.626825332641602
    10. ' \' → logprob: -4.751825332641602

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4475516080856323
    2. ''' → logprob: -1.3225516080856323
    3. '\n' → logprob: -2.572551727294922
    4. '1' → logprob: -4.197551727294922
    5. ''\' → logprob: -6.447551727294922
    6. '"' → logprob: -7.447551727294922
    7. 'True' → logprob: -8.197551727294922
    8. 'Yes' → logprob: -9.572551727294922
    9. 'n' → logprob: -9.697551727294922
    10. 'False' → logprob: -10.197551727294922

Token 15: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009571325033903122
    2. '\n' → logprob: -5.259571552276611
    3. '0' → logprob: -6.009571552276611
    4. '')' → logprob: -7.009571552276611
    5. ')' → logprob: -7.634571552276611
    6. ''
' → logprob: -8.259571075439453
    7. '"' → logprob: -9.634571075439453
    8. ''''' → logprob: -10.009571075439453
    9. '1' → logprob: -10.509571075439453
    10. '''' → logprob: -10.884571075439453

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8855891823768616
    2. '\n' → logprob: -1.0105891227722168
    3. '    
' → logprob: -2.385589122772217
    4. '
' → logprob: -2.385589122772217
    5. '```' → logprob: -3.885589122772217
    6. '  
' → logprob: -4.885589122772217
    7. '\' → logprob: -5.760589122772217
    8. ' 
' → logprob: -6.135589122772217
    9. '   
' → logprob: -6.135589122772217
    10. ''\' → logprob: -7.135589122772217

Token 17: ' ans' (ID: 3345)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.145121693611145
    2. '\' → logprob: -1.770121693611145
    3. '\n' → logprob: -1.895121693611145
    4. '   ' → logprob: -2.6451215744018555
    5. '```' → logprob: -2.7701215744018555
    6. '    
' → logprob: -2.8951215744018555
    7. '    ' → logprob: -2.8951215744018555
    8. ''' → logprob: -3.8951215744018555
    9. '     
' → logprob: -4.0201215744018555
    10. ' ' → logprob: -4.0201215744018555

Token 18: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7231385111808777
    2. ' =' → logprob: -1.2231385707855225
    3. ' +=' → logprob: -1.9731385707855225
    4. '=' → logprob: -3.3481385707855225
    5. '[' → logprob: -3.9731385707855225
    6. '  ' → logprob: -4.348138332366943
    7. 'space' → logprob: -6.098138332366943
    8. '+=' → logprob: -6.098138332366943
    9. ')' → logprob: -6.598138332366943
    10. ' space' → logprob: -6.598138332366943

Token 19: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.11321241408586502
    2. ''' → logprob: -2.3632123470306396
    3. '""' → logprob: -4.988212585449219
    4. '[]' → logprob: -5.988212585449219
    5. ' ''' → logprob: -6.113212585449219
    6. '"' → logprob: -6.863212585449219
    7. ' []' → logprob: -8.363212585449219
    8. ' ""' → logprob: -9.863212585449219
    9. ''s' → logprob: -11.238212585449219
    10. ''''' → logprob: -11.238212585449219

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015248429961502552
    2. ' for' → logprob: -5.5152482986450195
    3. ' ' → logprob: -5.7652482986450195
    4. 'i' → logprob: -6.3902482986450195
    5. '    ' → logprob: -6.3902482986450195
    6. ''' → logprob: -6.5152482986450195
    7. 'for' → logprob: -6.7652482986450195
    8. ' i' → logprob: -7.5152482986450195
    9. '```' → logprob: -7.5152482986450195
    10. '  ' → logprob: -8.01524829864502

Token 21: ' p' (ID: 275)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.17329542338848114
    2. 'while' → logprob: -2.173295497894287
    3. '   ' → logprob: -3.423295497894287
    4. '-' → logprob: -5.173295497894287
    5. ' ' → logprob: -5.423295497894287
    6. '    ' → logprob: -6.923295497894287
    7. 'w' → logprob: -8.048295021057129
    8. '  ' → logprob: -8.173295021057129
    9. '1' → logprob: -8.548295021057129
    10. 'b' → logprob: -9.048295021057129

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7332146167755127
    2. 'ow' → logprob: -1.2332146167755127
    3. ' =' → logprob: -2.4832146167755127
    4. 'r' → logprob: -2.9832146167755127
    5. 'ower' → logprob: -3.7332146167755127
    6. ' ' → logprob: -4.108214378356934
    7. 'i' → logprob: -4.608214378356934
    8. '   ' → logprob: -4.733214378356934
    9. 'os' → logprob: -4.858214378356934
    10. '-' → logprob: -5.483214378356934

Token 23: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014154697768390179
    2. ' ' → logprob: -5.13915491104126
    3. 'n' → logprob: -5.88915491104126
    4. '0' → logprob: -6.13915491104126
    5. '2' → logprob: -6.38915491104126
    6. '31' → logprob: -7.76415491104126
    7. '9' → logprob: -8.389154434204102
    8. '32' → logprob: -8.639154434204102
    9. '26' → logprob: -8.889154434204102
    10. ' n' → logprob: -8.889154434204102

Token 24: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03307071328163147
    2. '2' → logprob: -4.4080705642700195
    3. 'n' → logprob: -4.5330705642700195
    4. '0' → logprob: -5.4080705642700195
    5. '5' → logprob: -6.2830705642700195
    6. '3' → logprob: -6.5330705642700195
    7. '10' → logprob: -7.7830705642700195
    8. '31' → logprob: -7.9080705642700195
    9. '7' → logprob: -8.40807056427002
    10. '9' → logprob: -8.53307056427002

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3652964234352112
    2. ' ' → logprob: -1.3652963638305664
    3. ' while' → logprob: -3.9902963638305664
    4. '  ' → logprob: -5.115296363830566
    5. '<|end|>' → logprob: -5.115296363830566
    6. '    ' → logprob: -5.365296363830566
    7. ' 
' → logprob: -5.490296363830566
    8. 'while' → logprob: -5.740296363830566
    9. '    
' → logprob: -5.990296363830566
    10. '  
' → logprob: -6.615296363830566

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10594436526298523
    2. ' ' → logprob: -2.6059443950653076
    3. ' while' → logprob: -4.2309441566467285
    4. '  ' → logprob: -5.6059441566467285
    5. 'while' → logprob: -5.9809441566467285
    6. '<|end|>' → logprob: -6.3559441566467285
    7. '    ' → logprob: -6.4809441566467285
    8. '    
' → logprob: -7.6059441566467285
    9. ' 
' → logprob: -7.7309441566467285
    10. '       ' → logprob: -7.9809441566467285

Token 27: ' d' (ID: 272)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4906511604785919
    2. 'w' → logprob: -1.4906511306762695
    3. ' while' → logprob: -2.1156511306762695
    4. 'wh' → logprob: -3.6156511306762695
    5. '   ' → logprob: -4.7406511306762695
    6. ' ' → logprob: -5.2406511306762695
    7. '  ' → logprob: -8.49065113067627
    8. ' w' → logprob: -8.49065113067627
    9. '	while' → logprob: -8.61565113067627
    10. 'b' → logprob: -9.36565113067627

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4595465660095215
    2. ' =' → logprob: -1.0845465660095215
    3. 'igit' → logprob: -3.9595465660095215
    4. 'ef' → logprob: -5.7095465660095215
    5. 'igits' → logprob: -5.9595465660095215
    6. 'i' → logprob: -6.7095465660095215
    7. 'e' → logprob: -7.2095465660095215
    8. 'ig' → logprob: -7.3345465660095215
    9. '=i' → logprob: -7.3345465660095215
    10. ' ' → logprob: -7.7095465660095215

Token 29: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5332900881767273
    2. ' ' → logprob: -1.033290147781372
    3. '2' → logprob: -3.408290147781372
    4. '9' → logprob: -4.658289909362793
    5. '10' → logprob: -5.283289909362793
    6. ' n' → logprob: -5.533289909362793
    7. 'n' → logprob: -5.783289909362793
    8. '{}' → logprob: -7.908289909362793
    9. '48' → logprob: -8.158289909362793
    10. '5' → logprob: -8.408289909362793

Token 30: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14609457552433014
    2. '2' → logprob: -2.646094560623169
    3. '10' → logprob: -3.896094560623169
    4. '5' → logprob: -4.146094799041748
    5. 'n' → logprob: -4.271094799041748
    6. '0' → logprob: -5.271094799041748
    7. '3' → logprob: -5.896094799041748
    8. '9' → logprob: -6.021094799041748
    9. '7' → logprob: -6.896094799041748
    10. ' ' → logprob: -7.271094799041748

Token 31: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2312408685684204
    2. ' while' → logprob: -1.6062408685684204
    3. '<|end|>' → logprob: -1.6062408685684204
    4. '
' → logprob: -2.231240749359131
    5. ' 
' → logprob: -2.356240749359131
    6. ' ' → logprob: -2.856240749359131
    7. 'while' → logprob: -3.856240749359131
    8. '  
' → logprob: -4.981240749359131
    9. '	while' → logprob: -5.356240749359131
    10. '<|end|>' → logprob: -6.106240749359131

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35524889826774597
    2. ' ' → logprob: -1.7302489280700684
    3. ' while' → logprob: -2.4802489280700684
    4. ' 
' → logprob: -3.9802489280700684
    5. '<|end|>' → logprob: -4.855248928070068
    6. 'while' → logprob: -5.355248928070068
    7. '  ' → logprob: -6.480248928070068
    8. '  
' → logprob: -6.730248928070068
    9. '
' → logprob: -7.230248928070068
    10. '    ' → logprob: -7.355248928070068

Token 33: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4764725863933563
    2. ' ' → logprob: -1.9764726161956787
    3. '   ' → logprob: -2.1014726161956787
    4. 'while' (adapté à ' while') → logprob: -2.3514726161956787
    5. 'w' → logprob: -4.8514723777771
    6. ' 
' → logprob: -5.2264723777771
    7. '
' → logprob: -6.6014723777771
    8. ' w' → logprob: -6.7264723777771
    9. ':' → logprob: -6.8514723777771
    10. '```' → logprob: -6.8514723777771

Token 34: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.005523073021322489
    2. 'n' → logprob: -5.505523204803467
    3. ' ' → logprob: -6.755523204803467
    4. ' p' → logprob: -8.755522727966309
    5. ' (' → logprob: -9.630522727966309
    6. ' abs' → logprob: -10.505522727966309
    7. '(n' → logprob: -12.130522727966309
    8. ' not' → logprob: -12.380522727966309
    9. '(' → logprob: -12.505522727966309
    10. ' ' → logprob: -12.755522727966309

Token 35: ' +' (ID: 659)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5274276733398438
    2. ' >' → logprob: -0.9024276733398438
    3. ':' → logprob: -5.527427673339844
    4. '%' → logprob: -9.027427673339844
    5. ' ' → logprob: -9.652427673339844
    6. '!=' → logprob: -10.527427673339844
    7. ' !=' → logprob: -10.527427673339844
    8. ' >=' → logprob: -11.152427673339844
    9. '>:' → logprob: -11.152427673339844
    10. '">' → logprob: -11.527427673339844

Token 36: ' p' (ID: 275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43496638536453247
    2. ' d' → logprob: -1.5599663257598877
    3. '1' → logprob: -2.8099663257598877
    4. '>' → logprob: -3.4349663257598877
    5. ' p' → logprob: -3.5599663257598877
    6. 'd' → logprob: -4.184966564178467
    7. ' >' → logprob: -6.309966564178467
    8. '0' → logprob: -7.309966564178467
    9. 'p' → logprob: -7.434966564178467
    10. '4' → logprob: -8.059966087341309

Token 37: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7753504514694214
    2. '>=' → logprob: -1.1503504514694214
    3. ' >' → logprob: -2.150350570678711
    4. ' >=' → logprob: -2.275350570678711
    5. '<' → logprob: -6.400350570678711
    6. ' <' → logprob: -6.900350570678711
    7. ' ' → logprob: -8.025350570678711
    8. '-' → logprob: -8.775350570678711
    9. '0' → logprob: -9.150350570678711
    10. '<=' → logprob: -9.775350570678711

Token 38: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2577713429927826
    2. '   ' → logprob: -1.757771372795105
    3. '       ' → logprob: -3.8827712535858154
    4. ' :' → logprob: -4.3827714920043945
    5. '<|end|>' → logprob: -4.6327714920043945
    6. ' ' → logprob: -5.5077714920043945
    7. '    ' → logprob: -6.0077714920043945
    8. '```' → logprob: -6.7577714920043945
    9. ':
' → logprob: -7.3827714920043945
    10. '[' → logprob: -7.7577714920043945

Token 39: ' if' (ID: 538)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.3346308469772339
    2. '       ' → logprob: -1.5846308469772339
    3. '   ' → logprob: -2.0846309661865234
    4. '    ' → logprob: -2.2096309661865234
    5. ' r' → logprob: -2.8346309661865234
    6. ' d' → logprob: -3.3346309661865234
    7. 'n' → logprob: -3.3346309661865234
    8. ' ' → logprob: -3.4596309661865234
    9. ' x' → logprob: -3.9596309661865234
    10. 'd' → logprob: -4.084630966186523

Token 40: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.22232688963413239
    2. ' n' → logprob: -1.9723268747329712
    3. '(n' → logprob: -3.2223269939422607
    4. 'n' → logprob: -4.722326755523682
    5. '(' → logprob: -5.222326755523682
    6. ' ' → logprob: -5.722326755523682
    7. ' ((' → logprob: -6.597326755523682
    8. '((' → logprob: -7.472326755523682
    9. ' not' → logprob: -8.59732723236084
    10. ' d' → logprob: -8.72232723236084

Token 41: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4688442647457123
    2. ' (' → logprob: -1.3438442945480347
    3. 'n' → logprob: -2.593844175338745
    4. '((' → logprob: -3.593844175338745
    5. ' n' → logprob: -4.968844413757324
    6. ' ((' → logprob: -5.968844413757324
    7. '(' → logprob: -6.968844413757324
    8. '   ' → logprob: -8.593844413757324
    9. ' ' → logprob: -9.218844413757324
    10. 'abs' → logprob: -9.468844413757324

Token 42: ' &' (ID: 827)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2312166541814804
    2. '&' → logprob: -2.2312166690826416
    3. ' +' → logprob: -2.7312166690826416
    4. ' &' → logprob: -3.6062166690826416
    5. ' ' → logprob: -6.2312164306640625
    6. '%' → logprob: -6.4812164306640625
    7. '>>' → logprob: -6.9812164306640625
    8. '+p' → logprob: -7.1062164306640625
    9. '>' → logprob: -7.6062164306640625
    10. ')' → logprob: -7.7312164306640625

Token 43: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7446051836013794
    2. '(' → logprob: -0.8696051836013794
    3. '1' → logprob: -2.49460506439209
    4. ' ' → logprob: -4.24460506439209
    5. ' p' → logprob: -5.24460506439209
    6. '(p' → logprob: -6.49460506439209
    7. 'p' → logprob: -6.61960506439209
    8. '(n' → logprob: -8.11960506439209
    9. ' d' → logprob: -8.49460506439209
    10. 'd' → logprob: -8.99460506439209

Token 44: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5652851462364197
    2. '1' → logprob: -0.9402851462364197
    3. '(p' → logprob: -4.0652852058410645
    4. 'p' → logprob: -4.1902852058410645
    5. ' (' → logprob: -5.5652852058410645
    6. '3' → logprob: -6.5652852058410645
    7. ' ' → logprob: -6.8152852058410645
    8. ' p' → logprob: -6.9402852058410645
    9. '((' → logprob: -7.1902852058410645
    10. '(n' → logprob: -7.3152852058410645

Token 45: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010831333696842194
    2. ')==' → logprob: -4.885831356048584
    3. '):' → logprob: -6.260831356048584
    4. ' )' → logprob: -6.885831356048584
    5. '):
' → logprob: -8.635830879211426
    6. ')!=' → logprob: -10.635830879211426
    7. '1' → logprob: -11.260830879211426
    8. ' ):' → logprob: -11.385830879211426
    9. '==' → logprob: -11.635830879211426
    10. '):

' → logprob: -11.885830879211426

Token 46: ' ^' (ID: 7602)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2644879221916199
    2. ')' → logprob: -2.7644879817962646
    3. ' ==' → logprob: -2.7644879817962646
    4. '==' → logprob: -2.8894879817962646
    5. '):' → logprob: -3.7644879817962646
    6. ')==' → logprob: -4.1394877433776855
    7. ' and' → logprob: -5.8894877433776855
    8. '=' → logprob: -6.5144877433776855
    9. ' :' → logprob: -6.6394877433776855
    10. ' ' → logprob: -6.8894877433776855

Token 47: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.537835419178009
    2. ' d' → logprob: -2.0378353595733643
    3. 'p' → logprob: -2.4128353595733643
    4. ' (' → logprob: -2.4128353595733643
    5. '1' → logprob: -3.2878353595733643
    6. '(p' → logprob: -3.4128353595733643
    7. 'd' → logprob: -4.037835597991943
    8. ' ' → logprob: -4.412835597991943
    9. '(' → logprob: -5.412835597991943
    10. '(d' → logprob: -6.537835597991943

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08048065751791
    2. ' :' → logprob: -2.7054805755615234
    3. ' ==' → logprob: -4.830480575561523
    4. ' =' → logprob: -6.955480575561523
    5. '==' → logprob: -7.205480575561523
    6. '=' → logprob: -7.830480575561523
    7. '):' → logprob: -9.080480575561523
    8. ':
' → logprob: -9.455480575561523
    9. ' !=' → logprob: -9.705480575561523
    10. ' ' → logprob: -10.455480575561523

Token 49: '           ' (ID: 352)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.8607238531112671
    2. '       ' → logprob: -0.8607238531112671
    3. ':' → logprob: -2.8607239723205566
    4. ' =' → logprob: -3.3607239723205566
    5. ' :' → logprob: -3.8607239723205566
    6. '    ' → logprob: -4.110723972320557
    7. '   ' → logprob: -5.735723972320557
    8. ' ' → logprob: -5.860723972320557
    9. '           ' → logprob: -5.860723972320557
    10. ' +=' → logprob: -6.360723972320557

Token 50: ' ans' (ID: 3345)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25973689556121826
    2. '1' → logprob: -2.759737014770508
    3. ''' → logprob: -3.259737014770508
    4. ' ' → logprob: -3.509737014770508
    5. 'if' → logprob: -4.009737014770508
    6. ' c' → logprob: -4.384737014770508
    7. ' if' → logprob: -4.509737014770508
    8. ' d' → logprob: -4.634737014770508
    9. 'd' → logprob: -4.884737014770508
    10. '   ' → logprob: -5.259737014770508

Token 51: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5689051747322083
    2. '+=' → logprob: -1.1939051151275635
    3. ' +=' → logprob: -2.4439051151275635
    4. ' =' → logprob: -3.3189051151275635
    5. '+='' → logprob: -5.068905353546143
    6. ' +' → logprob: -7.443905353546143
    7. '+' → logprob: -7.568905353546143
    8. '='' → logprob: -7.943905353546143
    9. ']+=' → logprob: -10.818904876708984
    10. '.append' → logprob: -11.318904876708984

Token 52: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010310791432857513
    2. ' '' → logprob: -5.510310649871826
    3. 'str' → logprob: -6.260310649871826
    4. ''-' → logprob: -6.385310649871826
    5. '"' → logprob: -6.885310649871826
    6. ''s' → logprob: -8.135311126708984
    7. '('' → logprob: -8.510311126708984
    8. ''b' → logprob: -8.635311126708984
    9. '   ' → logprob: -8.885311126708984
    10. ''z' → logprob: -9.260311126708984

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11595471203327179
    2. ''' → logprob: -2.240954637527466
    3. ''-' → logprob: -6.115954875946045
    4. '')' → logprob: -7.865954875946045
    5. '-' → logprob: -8.615954399108887
    6. '('' → logprob: -9.490954399108887
    7. '"' → logprob: -9.990954399108887
    8. '2' → logprob: -10.490954399108887
    9. '(' → logprob: -10.615954399108887
    10. ')' → logprob: -10.865954399108887

Token 54: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25151675939559937
    2. ' ' → logprob: -2.501516819000244
    3. '')' → logprob: -2.626516819000244
    4. '<|end|>' → logprob: -3.376516819000244
    5. '
' → logprob: -5.251516819000244
    6. ' '' → logprob: -5.501516819000244
    7. '  ' → logprob: -6.001516819000244
    8. '           ' → logprob: -6.001516819000244
    9. '0' → logprob: -6.001516819000244
    10. ''s' → logprob: -6.126516819000244

Token 55: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.374102234840393
    2. ' p' → logprob: -1.499102234840393
    3. '       ' → logprob: -2.1241021156311035
    4. '           ' → logprob: -2.3741021156311035
    5. '   ' → logprob: -2.9991021156311035
    6. ' 
' → logprob: -2.9991021156311035
    7. '    ' → logprob: -3.1241021156311035
    8. ' if' → logprob: -3.2491021156311035
    9. '        
' → logprob: -3.2491021156311035
    10. '            
' → logprob: -3.4991021156311035

Token 57: ' d' (ID: 272)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3043181896209717
    2. 'p' → logprob: -1.8043181896209717
    3. ' n' → logprob: -2.8043181896209717
    4. 'n' → logprob: -4.304318428039551
    5. ' d' → logprob: -4.554318428039551
    6. ' (' → logprob: -5.429318428039551
    7. ' not' → logprob: -5.679318428039551
    8. 'd' → logprob: -5.929318428039551
    9. '(p' → logprob: -6.554318428039551
    10. '(' → logprob: -7.929318428039551

Token 58: ' ^' (ID: 7602)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.513420820236206
    2. ' ==' → logprob: -1.013420820236206
    3. ':' → logprob: -3.638420820236206
    4. '>' → logprob: -5.513421058654785
    5. ' ' → logprob: -6.388421058654785
    6. ' >' → logprob: -6.388421058654785
    7. '   ' → logprob: -6.763421058654785
    8. ' else' → logprob: -7.638421058654785
    9. ' or' → logprob: -8.013421058654785
    10. '>=' → logprob: -8.013421058654785

Token 59: ' p' (ID: 275)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7413400411605835
    2. ' ' → logprob: -0.9913400411605835
    3. ' p' → logprob: -1.9913400411605835
    4. 'p' → logprob: -4.866340160369873
    5. '0' → logprob: -4.866340160369873
    6. '2' → logprob: -8.491339683532715
    7. '<|end|>' → logprob: -9.241339683532715
    8. ' (' → logprob: -10.241339683532715
    9. '   ' → logprob: -10.616339683532715
    10. '    ' → logprob: -10.616339683532715

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043759528547525406
    2. ' ==' → logprob: -4.043759346008301
    3. ':
' → logprob: -4.418759346008301
    4. '==' → logprob: -4.918759346008301
    5. '=' → logprob: -5.668759346008301
    6. ' =' → logprob: -6.793759346008301
    7. ' :' → logprob: -7.793759346008301
    8. '<|end|>' → logprob: -8.1687593460083
    9. ' ' → logprob: -8.7937593460083
    10. '<|end|>' → logprob: -9.4187593460083

Token 61: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9298689365386963
    2. '=' → logprob: -1.0548689365386963
    3. ' =' → logprob: -1.5548689365386963
    4. ' ' → logprob: -4.179868698120117
    5. ' p' → logprob: -4.179868698120117
    6. '1' → logprob: -6.054868698120117
    7. ' +=' → logprob: -6.304868698120117
    8. '                ' → logprob: -6.429868698120117
    9. '           ' → logprob: -6.554868698120117
    10. '              ' → logprob: -7.054868698120117

Token 62: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.2934094965457916
    2. ' p' → logprob: -1.4184094667434692
    3. '   ' → logprob: -4.66840934753418
    4. ' ' → logprob: -6.66840934753418
    5. '           ' → logprob: -7.54340934753418
    6. '  ' → logprob: -8.41840934753418
    7. '    ' → logprob: -8.79340934753418
    8. '                   ' → logprob: -8.91840934753418
    9. '               ' → logprob: -8.91840934753418
    10. '       ' → logprob: -9.54340934753418

Token 63: ' ^=' (ID: 79665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871426582336426
    2. '=' → logprob: -1.1371426582336426
    3. ' +=' → logprob: -8.762142181396484
    4. ' ^=' → logprob: -9.387142181396484
    5. '+=' → logprob: -10.887142181396484
    6. ' ' → logprob: -11.637142181396484
    7. ' |=' → logprob: -13.762142181396484
    8. '1' → logprob: -14.012142181396484
    9. '    ' → logprob: -14.762142181396484
    10. '＝' → logprob: -15.137142181396484

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005749551928602159
    2. ' ' → logprob: -7.750575065612793
    3. '2' → logprob: -9.625575065612793
    4. '3' → logprob: -10.125575065612793
    5. '11' → logprob: -10.500575065612793
    6. '10' → logprob: -12.250575065612793
    7. '   ' → logprob: -13.250575065612793
    8. '0' → logprob: -13.500575065612793
    9. '  ' → logprob: -13.750575065612793
    10. '    ' → logprob: -14.500575065612793

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007668639300391078
    2. '2' → logprob: -7.625766754150391
    3. '10' → logprob: -8.50076675415039
    4. '11' → logprob: -10.25076675415039
    5. ' ' → logprob: -10.50076675415039
    6. '3' → logprob: -11.50076675415039
    7. '0' → logprob: -14.00076675415039
    8. '110' → logprob: -14.87576675415039
    9. '  ' → logprob: -15.12576675415039
    10. '   ' → logprob: -15.37576675415039

Token 66: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1321246325969696
    2. '           ' → logprob: -3.007124662399292
    3. ' else' → logprob: -4.007124423980713
    4. 'else' → logprob: -4.132124423980713
    5. '   ' → logprob: -4.257124423980713
    6. ' ' → logprob: -5.132124423980713
    7. '1' → logprob: -5.382124423980713
    8. '        
' → logprob: -5.757124423980713
    9. '
' → logprob: -5.882124423980713
    10. '               ' → logprob: -6.132124423980713

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020480455830693245
    2. '   ' → logprob: -5.145480632781982
    3. '           ' → logprob: -5.145480632781982
    4. 'else' → logprob: -6.270480632781982
    5. ' else' → logprob: -6.270480632781982
    6. '        
' → logprob: -6.520480632781982
    7. ' ' → logprob: -6.770480632781982
    8. '
' → logprob: -7.520480632781982
    9. '    
' → logprob: -8.395480155944824
    10. '```' → logprob: -8.520480155944824

Token 68: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.9585256576538086
    2. '       ' → logprob: -1.2085256576538086
    3. '   ' → logprob: -1.8335256576538086
    4. '    ' → logprob: -2.5835256576538086
    5. 'else' (adapté à ' else') → logprob: -3.0835256576538086
    6. ' ' → logprob: -3.9585256576538086
    7. '        ' → logprob: -5.708525657653809
    8. ' >>=' → logprob: -6.333525657653809
    9. '>>' → logprob: -6.708525657653809
    10. '  ' → logprob: -6.708525657653809

Token 69: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.68299400806427
    2. '       ' → logprob: -1.30799400806427
    3. ' ans' → logprob: -1.80799400806427
    4. '   ' → logprob: -4.0579938888549805
    5. ':' → logprob: -4.1829938888549805
    6. 'ans' → logprob: -4.6829938888549805
    7. '	ans' → logprob: -4.9329938888549805
    8. '        ' → logprob: -5.8079938888549805
    9. '    ' → logprob: -6.1829938888549805
    10. ' ' → logprob: -6.9329938888549805

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5081405639648438
    2. ' ans' → logprob: -1.5081405639648438
    3. 'ans' → logprob: -1.7581405639648438
    4. '       ' → logprob: -6.008140563964844
    5. '	ans' → logprob: -6.383140563964844
    6. '   ' → logprob: -8.258140563964844
    7. '(ans' → logprob: -9.633140563964844
    8. '          ' → logprob: -9.633140563964844
    9. '        ' → logprob: -9.883140563964844
    10. '         ' → logprob: -10.508140563964844

Token 71: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.3871350884437561
    2. ' ans' → logprob: -1.1371350288391113
    3. '	ans' → logprob: -8.51213550567627
    4. ''' → logprob: -10.63713550567627
    5. '(ans' → logprob: -10.88713550567627
    6. '   ' → logprob: -12.01213550567627
    7. '           ' → logprob: -12.63713550567627
    8. '_ans' → logprob: -12.76213550567627
    9. '0' → logprob: -13.01213550567627
    10. ' ' → logprob: -13.51213550567627

Token 72: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1483452469110489
    2. '+=' → logprob: -2.0233452320098877
    3. '+='' → logprob: -5.398345470428467
    4. '+' → logprob: -7.148345470428467
    5. ' +' → logprob: -8.023344993591309
    6. '+="' → logprob: -11.398344993591309
    7. ']+=' → logprob: -12.648344993591309
    8. '=' → logprob: -14.023344993591309
    9. '	' → logprob: -16.148345947265625
    10. ' ' → logprob: -16.148345947265625

Token 73: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0012427325127646327
    2. ' '' → logprob: -6.751242637634277
    3. '"' → logprob: -9.751242637634277
    4. '0' → logprob: -11.376242637634277
    5. ' ' → logprob: -13.376242637634277
    6. '`' → logprob: -13.876242637634277
    7. ' ' → logprob: -16.001243591308594
    8. '('' → logprob: -16.126243591308594
    9. '	' → logprob: -17.251243591308594
    10. '   ' → logprob: -17.376243591308594

Token 74: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47408488392829895
    2. '0' → logprob: -0.9740848541259766
    3. '"' → logprob: -11.849084854125977
    4. ' '' → logprob: -14.599084854125977
    5. ' ' → logprob: -16.599084854125977
    6. '`' → logprob: -16.974084854125977
    7. '['' → logprob: -17.599084854125977
    8. '''' → logprob: -17.599084854125977
    9. '‘' → logprob: -17.974084854125977
    10. ''s' → logprob: -18.224084854125977

Token 75: ''
' (ID: 2207)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3901236653327942
    2. '       ' → logprob: -1.5151236057281494
    3. '<|end|>' → logprob: -2.8901236057281494
    4. ''' → logprob: -4.5151238441467285
    5. ''
' → logprob: -4.5151238441467285
    6. '\n' → logprob: -4.7651238441467285
    7. '')' → logprob: -5.0151238441467285
    8. '<|end|>' → logprob: -6.0151238441467285
    9. '```' → logprob: -6.2651238441467285
    10. '''
' → logprob: -6.7651238441467285

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09025812149047852
    2. 'n' → logprob: -3.3402581214904785
    3. '<|end|>' → logprob: -3.5902581214904785
    4. '```' → logprob: -4.7152581214904785
    5. '        
' → logprob: -4.9652581214904785
    6. '\n' → logprob: -6.2152581214904785
    7. ' n' → logprob: -7.0902581214904785
    8. '(n' → logprob: -7.2152581214904785
    9. '   ' → logprob: -7.4652581214904785
    10. 'd' → logprob: -7.4652581214904785

Token 77: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.22716909646987915
    2. '       ' → logprob: -1.8521690368652344
    3. ' n' → logprob: -3.3521690368652344
    4. '        ' → logprob: -5.602169036865234
    5. '    ' → logprob: -6.227169036865234
    6. 'd' → logprob: -6.227169036865234
    7. '`' → logprob: -7.102169036865234
    8. '```' → logprob: -7.102169036865234
    9. '   ' → logprob: -7.477169036865234
    10. '      ' → logprob: -7.977169036865234

Token 78: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.4614911377429962
    2. ' >>=' → logprob: -1.4614911079406738
    3. '=' → logprob: -2.086491107940674
    4. '>>>' → logprob: -5.211491107940674
    5. ' =' → logprob: -5.461491107940674
    6. '>' → logprob: -5.836491107940674
    7. '    ' → logprob: -8.336491584777832
    8. ' ' → logprob: -8.336491584777832
    9. '   ' → logprob: -8.961491584777832
    10. '  ' → logprob: -9.461491584777832

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '```' → logprob: -15.875261306762695
    4. '`' → logprob: -17.625261306762695
    5. '   ' → logprob: -18.000261306762695
    6. '0' → logprob: -18.187761306762695
    7. '۱' → logprob: -18.562761306762695
    8. '<|end|>' → logprob: -18.625261306762695
    9. '2' → logprob: -18.687761306762695
    10. ' ' → logprob: -19.000261306762695

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '```' → logprob: -18.25
    4. '0' → logprob: -20.25
    5. '<|end|>' → logprob: -20.75
    6. '`' → logprob: -20.875
    7. '۱' → logprob: -21.5
    8. '' → logprob: -22.0
    9. '１' → logprob: -22.0
    10. '   ' → logprob: -22.25

Token 81: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16589763760566711
    2. '\n' → logprob: -3.0408976078033447
    3. '        
' → logprob: -3.4158976078033447
    4. '
' → logprob: -3.7908976078033447
    5. '   ' → logprob: -4.665897846221924
    6. '    
' → logprob: -4.790897846221924
    7. '```' → logprob: -5.040897846221924
    8. '`
' → logprob: -5.290897846221924
    9. ' 
' → logprob: -5.290897846221924
    10. '  
' → logprob: -5.540897846221924

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24637985229492188
    2. '\n' → logprob: -2.496379852294922
    3. '
' → logprob: -3.121379852294922
    4. '`
' → logprob: -3.871379852294922
    5. '   ' → logprob: -3.996379852294922
    6. '        
' → logprob: -4.371379852294922
    7. '```' → logprob: -4.871379852294922
    8. '    
' → logprob: -4.996379852294922
    9. '``' → logprob: -5.621379852294922
    10. '`' → logprob: -5.621379852294922

Token 83: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.00853336974978447
    2. ' d' → logprob: -5.383533477783203
    3. 'p' → logprob: -6.008533477783203
    4. '       ' → logprob: -7.508533477783203
    5. '1' → logprob: -8.008533477783203
    6. ' ' → logprob: -8.133533477783203
    7. ' p' → logprob: -9.008533477783203
    8. '   ' → logprob: -9.383533477783203
    9. '        ' → logprob: -10.758533477783203
    10. '    ' → logprob: -11.133533477783203

Token 84: ' ^=' (ID: 79665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8511185646057129
    2. ' ^=' → logprob: -1.226118564605713
    3. ' =' → logprob: -1.351118564605713
    4. ' <<=' → logprob: -4.101118564605713
    5. ' +=' → logprob: -6.851118564605713
    6. ' ' → logprob: -7.101118564605713
    7. ' >>=' → logprob: -7.226118564605713
    8. '+=' → logprob: -7.601118564605713
    9. '^' → logprob: -7.726118564605713
    10. ',' → logprob: -8.351118087768555

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13655054569244385
    2. 'p' → logprob: -2.2615504264831543
    3. ' p' → logprob: -4.386550426483154
    4. ' ' → logprob: -4.511550426483154
    5. '0' → logprob: -10.886550903320312
    6. 'n' → logprob: -13.761550903320312
    7. '(p' → logprob: -14.386550903320312
    8. ''p' → logprob: -14.386550903320312
    9. '  ' → logprob: -14.511550903320312
    10. '   ' → logprob: -14.699050903320312

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20153427124023438
    2. 'p' → logprob: -1.7015342712402344
    3. ' p' → logprob: -9.826534271240234
    4. ' ' → logprob: -10.076534271240234
    5. '0' → logprob: -10.701534271240234
    6. ''p' → logprob: -14.701534271240234
    7. '   ' → logprob: -14.951534271240234
    8. 'n' → logprob: -15.264034271240234
    9. '  ' → logprob: -15.576534271240234
    10. '(' → logprob: -15.576534271240234

Token 87: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5306062698364258
    2. '\n' → logprob: -1.1556062698364258
    3. '
' → logprob: -3.530606269836426
    4. '    
' → logprob: -3.780606269836426
    5. '  
' → logprob: -4.530606269836426
    6. ' 
' → logprob: -4.655606269836426
    7. ''\' → logprob: -5.280606269836426
    8. '`
' → logprob: -5.655606269836426
    9. 'return' → logprob: -5.655606269836426
    10. ' return' → logprob: -6.155606269836426

Token 88: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8404955863952637
    2. '   ' → logprob: -1.2154955863952637
    3. '```' → logprob: -2.4654955863952637
    4. '
' → logprob: -2.5904955863952637
    5. ' return' → logprob: -3.7154955863952637
    6. ' 
' → logprob: -4.340495586395264
    7. '`
' → logprob: -4.465495586395264
    8. '\' → logprob: -4.590495586395264
    9. '``' → logprob: -4.590495586395264
    10. '`' → logprob: -4.715495586395264

Token 89: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5607398152351379
    2. ' return' → logprob: -1.0607397556304932
    3. '\n' → logprob: -3.185739755630493
    4. ' 
' → logprob: -4.560739994049072
    5. '
' → logprob: -4.685739994049072
    6. '   ' → logprob: -4.935739994049072
    7. 'r' → logprob: -5.685739994049072
    8. '    
' → logprob: -6.185739994049072
    9. ' ' → logprob: -6.560739994049072
    10. ''\' → logprob: -6.685739994049072

Token 90: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.34942567348480225
    2. 'ans' → logprob: -1.2244256734848022
    3. ''' → logprob: -7.224425792694092
    4. '(ans' → logprob: -9.474425315856934
    5. ' '' → logprob: -9.599425315856934
    6. '	ans' → logprob: -10.099425315856934
    7. ' ' → logprob: -10.849425315856934
    8. '"' → logprob: -11.474425315856934
    9. '''.' → logprob: -11.599425315856934
    10. ' ''.' → logprob: -11.724425315856934

Token 91: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.025064410641789436
    2. '[' → logprob: -3.900064468383789
    3. '\n' → logprob: -6.525064468383789
    4. '(' → logprob: -7.275064468383789
    5. '\' → logprob: -7.400064468383789
    6. '[:]' → logprob: -8.275064468383789
    7. '```' → logprob: -8.400064468383789
    8. '<|end|>' → logprob: -8.525064468383789
    9. '.reverse' → logprob: -8.650064468383789
    10. ''' → logprob: -8.775064468383789

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.670369029045105
    2. 's' → logprob: -1.045369029045105
    3. 'se' → logprob: -2.4203691482543945
    4. 'ex' → logprob: -3.6703691482543945
    5. 'str' → logprob: -4.2953691482543945
    6. 'st' → logprob: -6.5453691482543945
    7. 'string' → logprob: -6.7953691482543945
    8. 't' → logprob: -6.9203691482543945
    9. 'list' → logprob: -6.9203691482543945
    10. 'slice' → logprob: -7.5453691482543945

Token 93: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')`' → logprob: -15.375000953674316
    3. '')' → logprob: -15.500000953674316
    4. ' )' → logprob: -15.500000953674316
    5. ')
' → logprob: -16.875
    6. ']' → logprob: -16.875
    7. '`)' → logprob: -17.25
    8. '(' → logprob: -17.25
    9. '）' → logprob: -18.25
    10. '()' → logprob: -18.375

Token 94: 'n' (ID: 77)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3896906077861786
    2. '(' → logprob: -1.889690637588501
    3. '
' → logprob: -2.889690637588501
    4. '\n' → logprob: -3.014690637588501
    5. '\' → logprob: -3.764690637588501
    6. ')' → logprob: -3.764690637588501
    7. '```' → logprob: -4.889690399169922
    8. '[' → logprob: -5.889690399169922
    9. 'n' → logprob: -6.014690399169922
    10. '<|end|>' → logprob: -6.764690399169922

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4351721405982971
    2. '=' → logprob: -1.0601720809936523
    3. '(' → logprob: -6.310172080993652
    4. ')' → logprob: -6.435172080993652
    5. ' ' → logprob: -6.560172080993652
    6. '.' → logprob: -7.685172080993652
    7. '_' → logprob: -7.935172080993652
    8. '[' → logprob: -8.185172080993652
    9. ',' → logprob: -9.185172080993652
    10. ':' → logprob: -9.185172080993652

Token 96: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.579994797706604
    2. '10' → logprob: -1.579994797706604
    3. '5' → logprob: -1.704994797706604
    4. '7' → logprob: -1.829994797706604
    5. 'int' → logprob: -2.0799946784973145
    6. ' int' → logprob: -2.7049946784973145
    7. '0' → logprob: -4.3299946784973145
    8. '4' → logprob: -4.3299946784973145
    9. '15' → logprob: -5.0799946784973145
    10. '123' → logprob: -5.5799946784973145

Token 97: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.030156094580888748
    2. '(' → logprob: -3.530156135559082
    3. 'input' → logprob: -8.530156135559082
    4. '()' → logprob: -8.655156135559082
    5. '('' → logprob: -11.280156135559082
    6. ' (' → logprob: -12.280156135559082
    7. ' ' → logprob: -12.655156135559082
    8. '(
' → logprob: -12.655156135559082
    9. '(raw' → logprob: -12.655156135559082
    10. ' input' → logprob: -13.405156135559082

Token 98: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023282168433070183
    2. '()' → logprob: -3.773282051086426
    3. ')' → logprob: -10.898282051086426
    4. '(' → logprob: -12.023282051086426
    5. '();)' → logprob: -12.773282051086426
    6. ' ())' → logprob: -12.898282051086426
    7. '()))' → logprob: -13.648282051086426
    8. '()>' → logprob: -13.648282051086426
    9. '()]' → logprob: -13.898282051086426
    10. '().' → logprob: -14.023282051086426

Token 99: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -13.875000953674316
    3. ' print' → logprob: -17.125001907348633
    4. '``' → logprob: -18.250001907348633
    5. 'result' → logprob: -19.000001907348633
    6. 'pr' → logprob: -20.000001907348633
    7. 'prints' → logprob: -21.250001907348633
    8. '#print' → logprob: -21.250001907348633
    9. '	print' → logprob: -21.625001907348633
    10. '`' → logprob: -21.625001907348633

Token 100: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6951388120651245
    2. '(s' → logprob: -0.6951388120651245
    3. '('' → logprob: -6.570138931274414
    4. '(f' → logprob: -7.695138931274414
    5. '(sol' → logprob: -10.195138931274414
    6. '(solution' → logprob: -10.820138931274414
    7. '("' → logprob: -10.945138931274414
    8. '("("' → logprob: -10.945138931274414
    9. '((' → logprob: -11.695138931274414
    10. '(
' → logprob: -12.195138931274414

Token 101: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -2.1008713702030946e-06
    2. 'ol' → logprob: -14.500001907348633
    3. 'olv' → logprob: -14.875001907348633
    4. 'ove' → logprob: -15.000001907348633
    5. 'olver' → logprob: -15.875001907348633
    6. 'solve' → logprob: -16.000001907348633
    7. '```' → logprob: -16.250001907348633
    8. 'olved' → logprob: -16.375001907348633
    9. 'erve' → logprob: -16.500001907348633
    10. 'OLVE' → logprob: -16.750001907348633

Token 102: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01815767213702202
    2. '(' → logprob: -4.018157482147217
    3. ' (' → logprob: -12.393157958984375
    4. '((' → logprob: -13.893157958984375
    5. ')' → logprob: -14.268157958984375
    6. '(
' → logprob: -14.393157958984375
    7. ')(' → logprob: -14.518157958984375
    8. '("("' → logprob: -14.768157958984375
    9. '('' → logprob: -16.018157958984375
    10. ' ' → logprob: -16.643157958984375

Token 103: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3868805170059204
    2. ')' → logprob: -1.1368805170059204
    3. '())' → logprob: -11.886880874633789
    4. ')))' → logprob: -14.136880874633789
    5. '()))' → logprob: -14.386880874633789
    6. ' )' → logprob: -14.886880874633789
    7. '(' → logprob: -15.386880874633789
    8. ' ))' → logprob: -15.636880874633789
    9. '()' → logprob: -15.886880874633789
    10. '))
' → logprob: -15.886880874633789


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 101
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 83
Précision stricte (1ère position): 34.65%
Précision adaptée (1ère position): 39.60%
Précision (top 10): 82.18%
================================================================================
