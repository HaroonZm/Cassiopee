================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

readline = sys.stdin.readline
MOD = 10 ** 9 + 7
INF = float('INF')
sys.setrecursionlimit(10 ** 5)

def main():
    N, K = map(int, readline().split())
    H = [0] + list(map(int, readline().split())) + [0]

    dp = [[INF] * (N + 1) for _ in range(N + 1)]

    for i in range(N + 1):
        dp[i][0] = 0

    for i in range(1, N + 1):
        dp[i][1] = H[i]
        for j in range(2, i + 1):
            for k in range(1, i):
                dp[i][j] = min(dp[i][j], dp[k][j - 1] + max(0, H[i] - H[k]))

    ans = INF
    for i in range(1, N + 1):
        ans = min(ans, dp[i][N - K])
    print(ans)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'read' (ID: 1293)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: 'line' (ID: 1137)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10793077945709229
    2. 'line' → logprob: -2.9829306602478027
    3. '_' → logprob: -3.6079306602478027
    4. '()' → logprob: -4.482930660247803
    5. '_line' → logprob: -5.232930660247803
    6. 'er' → logprob: -6.232930660247803
    7. 's' → logprob: -6.607930660247803
    8. 'ing' → logprob: -6.982930660247803
    9. 'lines' → logprob: -7.357930660247803
    10. '_input' → logprob: -8.232931137084961

Token 5: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0890675038099289
    2. '.' → logprob: -2.4640674591064453
    3. '()' → logprob: -9.964067459106445
    4. ' (' → logprob: -10.589067459106445
    5. ')' → logprob: -10.964067459106445
    6. '(.)' → logprob: -11.714067459106445
    7. '(
' → logprob: -11.839067459106445
    8. '('.')' → logprob: -12.464067459106445
    9. '('' → logprob: -12.589067459106445
    10. '```' → logprob: -13.089067459106445

Token 6: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.04859009385108948
    2. ' sys' → logprob: -3.0485901832580566
    3. '	sys' → logprob: -13.798589706420898
    4. 'input' → logprob: -14.548589706420898
    5. 'lambda' → logprob: -14.673589706420898
    6. '(sys' → logprob: -14.798589706420898
    7. '=sys' → logprob: -15.048589706420898
    8. ' lambda' → logprob: -16.9235897064209
    9. '```' → logprob: -17.0485897064209
    10. ' ' → logprob: -18.0485897064209

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.158217653632164
    2. '.readline' → logprob: -2.283217668533325
    3. '.stdin' → logprob: -3.158217668533325
    4. '.stdout' → logprob: -6.658217430114746
    5. ' .' → logprob: -7.908217430114746
    6. '.argv' → logprob: -9.783217430114746
    7. '.next' → logprob: -10.783217430114746
    8. '.stderr' → logprob: -11.033217430114746
    9. '.\' → logprob: -11.158217430114746
    10. '.setdefault' → logprob: -11.408217430114746

Token 8: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0034420802257955074
    2. '.' → logprob: -5.753442287445068
    3. '.read' → logprob: -8.25344181060791
    4. '.readlines' → logprob: -13.12844181060791
    5. '.buffer' → logprob: -13.25344181060791
    6. '.write' → logprob: -17.003442764282227
    7. ' .' → logprob: -17.128442764282227
    8. '.Read' → logprob: -17.878442764282227
    9. 'read' → logprob: -18.253442764282227
    10. '.reader' → logprob: -18.253442764282227

Token 9: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5289546251296997
    2. '(' → logprob: -0.9039546251296997
    3. '(
' → logprob: -5.77895450592041
    4. '()
' → logprob: -7.40395450592041
    5. '
' → logprob: -7.52895450592041
    6. '\n' → logprob: -7.77895450592041
    7. '\' → logprob: -8.27895450592041
    8. ')' → logprob: -8.40395450592041
    9. '()

' → logprob: -8.90395450592041
    10. '\(' → logprob: -9.27895450592041

Token 10: 'MOD' (ID: 52135)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18378324806690216
    2. '(' → logprob: -1.8087832927703857
    3. '(
' → logprob: -6.183783054351807
    4. '()
' → logprob: -7.433783054351807
    5. '()

' → logprob: -7.808783054351807
    6. '(

' → logprob: -8.683783531188965
    7. '\' → logprob: -8.808783531188965
    8. ')' → logprob: -8.933783531188965
    9. 'def' → logprob: -9.183783531188965
    10. '\n' → logprob: -9.308783531188965

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5351824164390564
    2. ' ' → logprob: -1.6601824760437012
    3. '_' → logprob: -2.035182476043701
    4. '=' → logprob: -2.410182476043701
    5. ')' → logprob: -6.410182476043701
    6. ' )' → logprob: -7.535182476043701
    7. ' _' → logprob: -7.535182476043701
    8. '  ' → logprob: -8.160181999206543
    9. '<|end|>' → logprob: -8.660181999206543
    10. '    ' → logprob: -9.660181999206543

Token 12: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4854210317134857
    2. ' ' → logprob: -0.9854210615158081
    3. '100' → logprob: -4.485421180725098
    4. '1' → logprob: -11.985421180725098
    5. 'int' → logprob: -14.110421180725098
    6. ' ' → logprob: -14.985421180725098
    7. ' int' → logprob: -15.860421180725098
    8. '```' → logprob: -16.11042022705078
    9. '`' → logprob: -16.61042022705078
    10. '0' → logprob: -16.61042022705078

Token 13: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014182306826114655
    2. '100' → logprob: -4.264182090759277
    3. ' ' → logprob: -11.264182090759277
    4. '1' → logprob: -12.139182090759277
    5. 'int' → logprob: -14.764182090759277
    6. '998' → logprob: -15.514182090759277
    7. '2' → logprob: -19.139183044433594
    8. '0' → logprob: -19.264183044433594
    9. '(' → logprob: -19.389183044433594
    10. '123' → logprob: -19.764183044433594

Token 14: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009856902994215488
    2. '**' → logprob: -4.884856700897217
    3. '9' → logprob: -6.134856700897217
    4. '6' → logprob: -10.759857177734375
    5. '7' → logprob: -10.884857177734375
    6. ' **' → logprob: -10.884857177734375
    7. '00' → logprob: -11.634857177734375
    8. '000' → logprob: -12.009857177734375
    9. ' ' → logprob: -12.259857177734375
    10. '09' → logprob: -13.634857177734375

Token 15: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.0
    3. ' ' → logprob: -17.0
    4. '```' → logprob: -20.25
    5. '+' → logprob: -21.5
    6. '９' → logprob: -22.0
    7. '   ' → logprob: -22.75
    8. '10' → logprob: -22.875
    9. '4' → logprob: -23.375
    10. '19' → logprob: -24.125

Token 16: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -18.375
    3. '```' → logprob: -19.125
    4. ' ' → logprob: -19.25
    5. '+' → logprob: -20.875
    6. '９' → logprob: -21.5
    7. '10' → logprob: -21.625
    8. '19' → logprob: -22.125
    9. '   ' → logprob: -22.125
    10. '18' → logprob: -22.375

Token 17: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008095942437648773
    2. ' +' → logprob: -4.883095741271973
    3. '7' → logprob: -7.633095741271973
    4. '+
' → logprob: -13.008095741271973
    5. ' ' → logprob: -14.008095741271973
    6. '+

' → logprob: -14.133095741271973
    7. '＋' → logprob: -14.258095741271973
    8. ' +
' → logprob: -15.008095741271973
    9. ' plus' → logprob: -15.883095741271973
    10. '```' → logprob: -16.00809669494629

Token 18: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. ' ' → logprob: -19.125024795532227
    4. '```' → logprob: -19.250024795532227
    5. '+' → logprob: -19.375024795532227
    6. '07' → logprob: -20.375024795532227
    7. '   ' → logprob: -20.625024795532227
    8. '9' → logprob: -21.000024795532227
    9. '７' → logprob: -21.000024795532227
    10. '_' → logprob: -21.437524795532227

Token 19: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -19.5
    3. '```' → logprob: -20.875
    4. '７' → logprob: -21.125
    5. '+' → logprob: -21.375
    6. '   ' → logprob: -21.75
    7. '07' → logprob: -22.0
    8. '

' → logprob: -23.125
    9. '۷' → logprob: -23.25
    10. '``' → logprob: -23.25

Token 20: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9701607823371887
    2. '\n' → logprob: -1.220160722732544
    3. '\' → logprob: -2.220160722732544
    4. '' → logprob: -2.345160722732544
    5. '
' → logprob: -2.720160722732544
    6. 'n' → logprob: -3.845160722732544
    7. 'for' → logprob: -4.845160961151123
    8. '

' → logprob: -5.095160961151123
    9. '```' → logprob: -5.220160961151123
    10. '(' → logprob: -5.845160961151123

Token 21: 'INF' (ID: 64358)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5174855589866638
    2. 'def' → logprob: -1.0174856185913086
    3. '
' → logprob: -3.7674856185913086
    4. '

' → logprob: -5.017485618591309
    5. 'for' → logprob: -5.517485618591309
    6. '' → logprob: -5.642485618591309
    7. '\n' → logprob: -6.517485618591309
    8. 'N' → logprob: -7.017485618591309
    9. '
' → logprob: -7.392485618591309
    10. 'a' → logprob: -7.767485618591309

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013338132994249463
    2. '=' → logprob: -6.626333713531494
    3. ' ' → logprob: -11.876334190368652
    4. ')' → logprob: -15.001334190368652
    5. ',' → logprob: -16.001333236694336
    6. '=int' → logprob: -16.001333236694336
    7. ' =
' → logprob: -16.376333236694336
    8. '_' → logprob: -16.626333236694336
    9. ' ,' → logprob: -16.751333236694336
    10. ' ' → logprob: -17.251333236694336

Token 23: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9824936985969543
    2. 'float' → logprob: -0.9824936985969543
    3. ' ' → logprob: -1.7324936389923096
    4. ' float' → logprob: -2.6074936389923096
    5. 'int' → logprob: -7.982493877410889
    6. '1' → logprob: -8.10749340057373
    7. ' int' → logprob: -10.35749340057373
    8. '100' → logprob: -12.60749340057373
    9. '(float' → logprob: -13.35749340057373
    10. '987' → logprob: -13.85749340057373

Token 24: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.3451433409936726e-05
    2. '("' → logprob: -11.250033378601074
    3. '(' → logprob: -11.500033378601074
    4. ''' → logprob: -11.625033378601074
    5. '"' → logprob: -14.875033378601074
    6. ''in' → logprob: -15.250033378601074
    7. ' ('' → logprob: -15.750033378601074
    8. '32' → logprob: -16.00003433227539
    9. '('-' → logprob: -16.12503433227539
    10. ''s' → logprob: -16.75003433227539

Token 25: 'INF' (ID: 64358)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.21119844913482666
    2. ''' → logprob: -1.8361984491348267
    3. 'inf' → logprob: -3.836198329925537
    4. ''i' → logprob: -5.461198329925537
    5. ''ins' → logprob: -6.961198329925537
    6. ''ex' → logprob: -7.461198329925537
    7. '"' → logprob: -7.586198329925537
    8. ''im' → logprob: -7.836198329925537
    9. ''e' → logprob: -8.461198806762695
    10. ''any' → logprob: -8.461198806762695

Token 26: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.016103584319353104
    2. ')' → logprob: -4.141103744506836
    3. '('' → logprob: -10.891103744506836
    4. '")' → logprob: -11.516103744506836
    5. ''' → logprob: -11.766103744506836
    6. ')'' → logprob: -11.766103744506836
    7. '')"' → logprob: -12.016103744506836
    8. '')
' → logprob: -12.141103744506836
    9. ' ')' → logprob: -12.391103744506836
    10. '');' → logprob: -14.016103744506836

Token 27: 'sys' (ID: 17324)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16058428585529327
    2. '(' → logprob: -3.4105842113494873
    3. '
' → logprob: -3.5355842113494873
    4. '()' → logprob: -3.7855842113494873
    5. '' → logprob: -3.7855842113494873
    6. '\n' → logprob: -3.7855842113494873
    7. '\' → logprob: -5.785584449768066
    8. '=' → logprob: -6.035584449768066
    9. '-' → logprob: -6.410584449768066
    10. ',' → logprob: -6.535584449768066

Token 28: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002168105449527502
    2. '.exit' → logprob: -6.75216817855835
    3. '.stdin' → logprob: -7.25216817855835
    4. '.stdout' → logprob: -8.627167701721191
    5. '.stderr' → logprob: -9.877167701721191
    6. '.argv' → logprob: -10.502167701721191
    7. ' .' → logprob: -11.252167701721191
    8. '.readline' → logprob: -12.627167701721191
    9. '.setdefault' → logprob: -12.877167701721191
    10. '.)' → logprob: -13.627167701721191

Token 29: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0035478046629577875
    2. 'ursion' → logprob: -6.503547668457031
    3. '_rec' → logprob: -7.003547668457031
    4. '_limit' → logprob: -7.503547668457031
    5. 'limit' → logprob: -8.753547668457031
    6. ' recursion' → logprob: -9.503547668457031
    7. '_' → logprob: -9.878547668457031
    8. '_execution' → logprob: -10.378547668457031
    9. '_version' → logprob: -10.628547668457031
    10. 'ault' → logprob: -10.628547668457031

Token 30: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00024643904180265963
    2. 'urs' → logprob: -8.625246047973633
    3. 'limit' → logprob: -10.250246047973633
    4. 'ur' → logprob: -10.875246047973633
    5. 'ursive' → logprob: -11.875246047973633
    6. 'ursor' → logprob: -12.625246047973633
    7. 'urf' → logprob: -14.625246047973633
    8. '_limit' → logprob: -14.625246047973633
    9. 'usr' → logprob: -15.750246047973633
    10. 'ursively' → logprob: -15.750246047973633

Token 31: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0002338144404347986
    2. '_limit' → logprob: -8.37523365020752
    3. ' limit' → logprob: -13.00023365020752
    4. 'depth' → logprob: -15.00023365020752
    5. 'lim' → logprob: -16.000234603881836
    6. '_LIMIT' → logprob: -16.125234603881836
    7. 'Limit' → logprob: -16.125234603881836
    8. 'ursion' → logprob: -16.125234603881836
    9. 'imit' → logprob: -16.375234603881836
    10. '_' → logprob: -16.750234603881836

Token 32: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -15.625
    3. '(
' → logprob: -16.375
    4. '(int' → logprob: -16.875
    5. '((' → logprob: -17.125
    6. '()' → logprob: -17.75
    7. '(

' → logprob: -18.75
    8. '100' → logprob: -19.75
    9. '(max' → logprob: -20.125
    10. ')' → logprob: -20.25

Token 33: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.5649528298527e-05
    2. '100' → logprob: -9.500075340270996
    3. ' ' → logprob: -15.000075340270996
    4. 'pow' → logprob: -16.625076293945312
    5. '300' → logprob: -16.875076293945312
    6. '200' → logprob: -16.875076293945312
    7. '1' → logprob: -17.000076293945312
    8. '410' → logprob: -17.500076293945312
    9. '500' → logprob: -17.750076293945312
    10. '999' → logprob: -17.750076293945312

Token 34: ' **' (ID: 6240)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.062191978096961975
    2. '**' → logprob: -2.812191963195801
    3. '6' → logprob: -9.1871919631958
    4. '8' → logprob: -9.3121919631958
    5. '07' → logprob: -10.4371919631958
    6. '9' → logprob: -13.6871919631958
    7. ' **' → logprob: -14.5621919631958
    8. '```' → logprob: -14.5621919631958
    9. ' ' → logprob: -15.9371919631958
    10. '*' → logprob: -16.812192916870117

Token 35: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.006791513413190842
    2. '9' → logprob: -5.006791591644287
    3. '8' → logprob: -9.506791114807129
    4. '**' → logprob: -13.256791114807129
    5. '```' → logprob: -16.506792068481445
    6. '6' → logprob: -17.881792068481445
    7. ' ' → logprob: -18.256792068481445
    8. '

' → logprob: -18.256792068481445
    9. '+' → logprob: -19.256792068481445
    10. '​' → logprob: -19.506792068481445

Token 36: '5' (ID: 20)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0015606891829520464
    2. '9' → logprob: -6.501560688018799
    3. '8' → logprob: -9.751561164855957
    4. '**' → logprob: -16.12656021118164
    5. ' ' → logprob: -16.37656021118164
    6. '

' → logprob: -17.37656021118164
    7. '```' → logprob: -17.87656021118164
    8. '6' → logprob: -18.75156021118164
    9. '​' → logprob: -18.87656021118164
    10. '７' → logprob: -19.00156021118164

Token 37: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.641841820150148e-05
    2. ' )' → logprob: -10.62502670288086
    3. '+' → logprob: -14.00002670288086
    4. '0' → logprob: -14.75002670288086
    5. '))' → logprob: -15.00002670288086
    6. ')
' → logprob: -15.25002670288086
    7. '6' → logprob: -16.12502670288086
    8. '1' → logprob: -17.37502670288086
    9. '）' → logprob: -17.50002670288086
    10. '4' → logprob: -17.62502670288086

Token 38: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21547475457191467
    2. '

' → logprob: -2.215474843978882
    3. 'def' → logprob: -2.590474843978882
    4. '
' → logprob: -5.715474605560303
    5. '' → logprob: -6.465474605560303
    6. '\n' → logprob: -6.590474605560303
    7. '```' → logprob: -6.840474605560303
    8. 'n' → logprob: -7.090474605560303
    9. 'class' → logprob: -7.465474605560303
    10. '#' → logprob: -7.965474605560303

Token 39: ' main' (ID: 2758)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.5143428444862366
    2. ' ' → logprob: -1.1393427848815918
    3. ' main' → logprob: -2.639342784881592
    4. ' solve' → logprob: -4.764342784881592
    5. ' DFS' → logprob: -7.264342784881592
    6. ' dp' → logprob: -8.26434326171875
    7. ' factorial' → logprob: -8.51434326171875
    8. ' space' → logprob: -8.51434326171875
    9. ' factor' → logprob: -9.51434326171875
    10. ' solver' → logprob: -10.01434326171875

Token 40: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005016815848648548
    2. '(' → logprob: -8.25050163269043
    3. ' ():' → logprob: -9.12550163269043
    4. '()' → logprob: -9.62550163269043
    5. ':' → logprob: -9.75050163269043
    6. '(:' → logprob: -12.00050163269043
    7. '():
' → logprob: -14.37550163269043
    8. '(":' → logprob: -16.25050163269043
    9. ' ()' → logprob: -16.62550163269043
    10. ' (' → logprob: -16.87550163269043

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023971660062670708
    2. ' ' → logprob: -4.8989715576171875
    3. ':' → logprob: -5.2739715576171875
    4. '    ' → logprob: -5.3989715576171875
    5. ')' → logprob: -6.5239715576171875
    6. '    
' → logprob: -6.5239715576171875
    7. 'n' → logprob: -6.7739715576171875
    8. '(' → logprob: -6.7739715576171875
    9. '  ' → logprob: -8.523971557617188
    10. '\' → logprob: -8.773971557617188

Token 42: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04627807065844536
    2. ' n' → logprob: -3.5462779998779297
    3. ' ' → logprob: -4.29627799987793
    4. 'N' (adapté à ' N') → logprob: -6.92127799987793
    5. '   ' → logprob: -7.42127799987793
    6. 'a' → logprob: -8.04627799987793
    7. '    ' → logprob: -8.42127799987793
    8. ' N' → logprob: -8.67127799987793
    9. 't' → logprob: -9.17127799987793
    10. 's' → logprob: -9.42127799987793

Token 43: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09125173091888428
    2. ' ' → logprob: -3.216251850128174
    3. ',' → logprob: -3.341251850128174
    4. '=' → logprob: -4.841251850128174
    5. ' ,' → logprob: -5.591251850128174
    6. '=int' → logprob: -10.841251373291016
    7. '  ' → logprob: -11.091251373291016
    8. '    ' → logprob: -11.466251373291016
    9. ' =
' → logprob: -11.466251373291016
    10. ' )' → logprob: -11.841251373291016

Token 44: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.6216848492622375
    2. 'K' → logprob: -1.6216847896575928
    3. ' M' → logprob: -1.7466847896575928
    4. 'M' → logprob: -2.7466847896575928
    5. ' ' → logprob: -3.8716847896575928
    6. 'Q' → logprob: -6.246685028076172
    7. ' Q' → logprob: -6.746685028076172
    8. 'a' → logprob: -7.496685028076172
    9. 'x' → logprob: -8.246685028076172
    10. 'k' → logprob: -8.371685028076172

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061968810856342316
    2. '=' → logprob: -2.8119688034057617
    3. ',' → logprob: -14.311968803405762
    4. ' ' → logprob: -14.686968803405762
    5. ')' → logprob: -16.561969757080078
    6. '   ' → logprob: -17.186969757080078
    7. '    ' → logprob: -17.561969757080078
    8. '=input' → logprob: -17.561969757080078
    9. '＝' → logprob: -18.061969757080078
    10. ' ,' → logprob: -18.311969757080078

Token 46: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0007143391412682831
    2. 'map' → logprob: -7.250714302062988
    3. ' read' → logprob: -13.000714302062988
    4. ' ' → logprob: -13.625714302062988
    5. ' readline' → logprob: -14.750714302062988
    6. ' list' → logprob: -15.500714302062988
    7. '	map' → logprob: -15.500714302062988
    8. 'read' → logprob: -17.625715255737305
    9. ' ' → logprob: -17.625715255737305
    10. ' input' → logprob: -17.625715255737305

Token 47: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4771925210952759
    2. '(' → logprob: -0.9771925210952759
    3. '(lambda' → logprob: -6.852192401885986
    4. '(input' → logprob: -6.977192401885986
    5. '(str' → logprob: -7.227192401885986
    6. '(list' → logprob: -7.977192401885986
    7. '(in' → logprob: -11.102192878723145
    8. '(sys' → logprob: -11.977192878723145
    9. '(tuple' → logprob: -11.977192878723145
    10. '(line' → logprob: -12.477192878723145

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006074831471778452
    2. ',input' → logprob: -7.625607490539551
    3. ' ,' → logprob: -9.87560749053955
    4. '(' → logprob: -10.00060749053955
    5. '(input' → logprob: -12.37560749053955
    6. '(sys' → logprob: -12.62560749053955
    7. ',int' → logprob: -12.75060749053955
    8. '(read' → logprob: -12.87560749053955
    9. 'input' → logprob: -13.25060749053955
    10. ')' → logprob: -13.50060749053955

Token 49: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.6086287498474121
    2. ' readline' → logprob: -0.8586287498474121
    3. 'input' → logprob: -4.358628749847412
    4. ' input' → logprob: -4.608628749847412
    5. ' read' → logprob: -4.733628749847412
    6. ' ' → logprob: -8.35862922668457
    7. ')' → logprob: -8.98362922668457
    8. 'sys' → logprob: -9.35862922668457
    9. '   ' → logprob: -10.10862922668457
    10. '.readline' → logprob: -10.60862922668457

Token 50: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00544363958761096
    2. '()' → logprob: -5.255443572998047
    3. '())' → logprob: -8.505443572998047
    4. ')' → logprob: -12.380443572998047
    5. ' ().' → logprob: -13.755443572998047
    6. '()
' → logprob: -14.755443572998047
    7. ' ()' → logprob: -14.880443572998047
    8. '(' → logprob: -15.130443572998047
    9. '()))' → logprob: -15.380443572998047
    10. '（）' → logprob: -15.755443572998047

Token 51: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.015279289335012436
    2. 'rstrip' → logprob: -4.765279293060303
    3. 'strip' → logprob: -5.015279293060303
    4. ' split' → logprob: -13.015278816223145
    5. ')' → logprob: -13.265278816223145
    6. '(split' → logprob: -13.890278816223145
    7. 'read' → logprob: -14.015278816223145
    8. 'spl' → logprob: -14.390278816223145
    9. '```' → logprob: -15.515278816223145
    10. '_split' → logprob: -16.26527976989746

Token 52: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008653807453811169
    2. '))' → logprob: -4.75865364074707
    3. '()' → logprob: -10.88365364074707
    4. '())' → logprob: -11.00865364074707
    5. ')
' → logprob: -13.50865364074707
    6. '),' → logprob: -14.13365364074707
    7. ' )' → logprob: -14.50865364074707
    8. ')))' → logprob: -15.00865364074707
    9. ')`' → logprob: -15.00865364074707
    10. '`)' → logprob: -15.38365364074707

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9567819237709045
    2. ')' → logprob: -1.5817818641662598
    3. '
' → logprob: -2.0817818641662598
    4. '    
' → logprob: -2.2067818641662598
    5. ' 
' → logprob: -3.0817818641662598
    6. ' ' → logprob: -3.4567818641662598
    7. '<|end|>' → logprob: -3.8317818641662598
    8. '  
' → logprob: -4.45678186416626
    9. '\' → logprob: -4.58178186416626
    10. ':' → logprob: -4.58178186416626

Token 54: ' H' (ID: 487)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4918184280395508
    2. ' ' → logprob: -1.7418184280395508
    3. 'A' → logprob: -1.9918184280395508
    4. ' A' → logprob: -2.241818428039551
    5. ' dp' → logprob: -2.491818428039551
    6. ')' → logprob: -2.741818428039551
    7. 'dp' → logprob: -2.741818428039551
    8. ' a' → logprob: -3.241818428039551
    9. 'd' → logprob: -3.366818428039551
    10. '   ' → logprob: -4.491818428039551

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02118448168039322
    2. '=' → logprob: -3.8961844444274902
    3. '[' → logprob: -7.64618444442749
    4. ' ' → logprob: -9.146184921264648
    5. '[]' → logprob: -10.771184921264648
    6. ' =[' → logprob: -11.646184921264648
    7. ',' → logprob: -12.521184921264648
    8. '   ' → logprob: -12.646184921264648
    9. '[:]' → logprob: -12.896184921264648
    10. '[i' → logprob: -12.896184921264648

Token 56: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3905259668827057
    2. 'list' → logprob: -1.1405259370803833
    3. '[list' → logprob: -5.890525817871094
    4. ' [' → logprob: -7.265525817871094
    5. '[' → logprob: -8.640525817871094
    6. '[]' → logprob: -13.015525817871094
    7. '[int' → logprob: -13.515525817871094
    8. ' []' → logprob: -13.890525817871094
    9. '=list' → logprob: -14.140525817871094
    10. '[List' → logprob: -14.515525817871094

Token 57: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006718571297824383
    2. ' int' → logprob: -5.006718635559082
    3. ']int' → logprob: -13.256718635559082
    4. '0' → logprob: -15.006718635559082
    5. ' ' → logprob: -15.006718635559082
    6. '	int' → logprob: -15.506718635559082
    7. '(int' → logprob: -15.631718635559082
    8. '<int' → logprob: -15.881718635559082
    9. '  ' → logprob: -16.256717681884766
    10. '[int' → logprob: -16.381717681884766

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012945238268002868
    2. ']*' → logprob: -7.2512946128845215
    3. ']+' → logprob: -7.8762946128845215
    4. ']*(' → logprob: -8.751294136047363
    5. ' ]' → logprob: -10.751294136047363
    6. ' for' → logprob: -11.626294136047363
    7. 'for' → logprob: -11.751294136047363
    8. '()]' → logprob: -12.251294136047363
    9. ',' → logprob: -13.626294136047363
    10. ';' → logprob: -14.251294136047363

Token 59: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2551775276660919
    2. ']+' → logprob: -2.2551774978637695
    3. '+' → logprob: -2.3801774978637695
    4. ')' → logprob: -5.0051774978637695
    5. '*' → logprob: -5.1301774978637695
    6. ']*' → logprob: -5.3801774978637695
    7. ']*(' → logprob: -5.6301774978637695
    8. 'for' → logprob: -6.2551774978637695
    9. ' for' → logprob: -6.3801774978637695
    10. ',' → logprob: -6.8801774978637695

Token 60: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06242271140217781
    2. ' list' → logprob: -2.812422752380371
    3. '[list' → logprob: -7.812422752380371
    4. '[' → logprob: -10.187422752380371
    5. ' [' → logprob: -11.312422752380371
    6. '	list' → logprob: -16.312421798706055
    7. '[l' → logprob: -16.937421798706055
    8. '[List' → logprob: -17.437421798706055
    9. '(list' → logprob: -17.562421798706055
    10. '[*' → logprob: -17.687421798706055

Token 61: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0011726059019565582
    2. '(' → logprob: -6.7511725425720215
    3. '(int' → logprob: -13.12617301940918
    4. 'map' → logprob: -15.87617301940918
    5. '(
' → logprob: -16.12617301940918
    6. '()' → logprob: -17.50117301940918
    7. ' (' → logprob: -17.50117301940918
    8. '(range' → logprob: -17.75117301940918
    9. '(

' → logprob: -17.87617301940918
    10. '	map' → logprob: -18.00117301940918

Token 62: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.4060561776859686e-05
    2. 'int' → logprob: -10.625043869018555
    3. '<int' → logprob: -11.875043869018555
    4. '(' → logprob: -11.875043869018555
    5. ',int' → logprob: -12.750043869018555
    6. '[int' → logprob: -13.750043869018555
    7. ']int' → logprob: -14.000043869018555
    8. ' int' → logprob: -14.625043869018555
    9. '=int' → logprob: -15.875043869018555
    10. ' (' → logprob: -16.250043869018555

Token 63: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.43604621291160583
    2. ',' → logprob: -1.0610462427139282
    3. '(' → logprob: -5.061046123504639
    4. 'read' → logprob: -7.311046123504639
    5. ')' → logprob: -9.811046600341797
    6. ' ,' → logprob: -9.936046600341797
    7. ',(' → logprob: -10.186046600341797
    8. '(
' → logprob: -10.186046600341797
    9. ' readline' → logprob: -10.311046600341797
    10. '.readline' → logprob: -10.936046600341797

Token 64: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.005281426943838596
    2. ' readline' → logprob: -5.255281448364258
    3. ' read' → logprob: -10.505281448364258
    4. '(read' → logprob: -10.880281448364258
    5. '	read' → logprob: -14.130281448364258
    6. '.readline' → logprob: -14.505281448364258
    7. ' ' → logprob: -17.005281448364258
    8. '_read' → logprob: -17.005281448364258
    9. ')' → logprob: -17.130281448364258
    10. '```' → logprob: -17.755281448364258

Token 65: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7835754988482222e-05
    2. '()' → logprob: -11.000018119812012
    3. ')' → logprob: -15.250018119812012
    4. '())' → logprob: -15.500018119812012
    5. '()))' → logprob: -15.750018119812012
    6. ' ().' → logprob: -15.750018119812012
    7. '()
' → logprob: -16.500017166137695
    8. '.' → logprob: -16.750017166137695
    9. '().'' → logprob: -17.125017166137695
    10. '()));' → logprob: -17.125017166137695

Token 66: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5094070477061905e-05
    2. 'strip' → logprob: -11.375015258789062
    3. ' split' → logprob: -12.750015258789062
    4. 'rstrip' → logprob: -14.500015258789062
    5. 'spl' → logprob: -16.125015258789062
    6. '(split' → logprob: -16.500015258789062
    7. ')' → logprob: -18.125015258789062
    8. ' ' → logprob: -19.375015258789062
    9. '.split' → logprob: -19.500015258789062
    10. 'plit' → logprob: -19.625015258789062

Token 67: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02319643832743168
    2. '))' → logprob: -4.148196220397949
    3. '())' → logprob: -5.273196220397949
    4. '()' → logprob: -6.273196220397949
    5. '()))
' → logprob: -9.89819622039795
    6. ')' → logprob: -10.02319622039795
    7. '(' → logprob: -10.89819622039795
    8. '()));' → logprob: -12.52319622039795
    9. '())))' → logprob: -13.39819622039795
    10. '()))

' → logprob: -13.77319622039795

Token 68: ' +' (ID: 659)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3682330250740051
    2. '   ' → logprob: -1.8682329654693604
    3. ' dp' → logprob: -2.3682329654693604
    4. '
' → logprob: -2.9932329654693604
    5. '    
' → logprob: -5.2432332038879395
    6. ' DP' → logprob: -6.6182332038879395
    7. 'DP' → logprob: -6.7432332038879395
    8. '	dp' → logprob: -7.3682332038879395
    9. '  
' → logprob: -8.368232727050781
    10. ' 
' → logprob: -8.368232727050781

Token 69: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10021734237670898
    2. ' [' → logprob: -2.350217342376709
    3. '([' → logprob: -12.100217819213867
    4. ' ' → logprob: -12.850217819213867
    5. ' ' → logprob: -13.600217819213867
    6. '   ' → logprob: -14.850217819213867
    7. ' ([' → logprob: -15.350217819213867
    8. 'H' → logprob: -16.475217819213867
    9. '=[' → logprob: -16.475217819213867
    10. '  ' → logprob: -16.850217819213867

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05991093069314957
    2. ' ' → logprob: -2.934911012649536
    3. 'INF' → logprob: -5.809910774230957
    4. ' INF' → logprob: -6.559910774230957
    5. '100' → logprob: -8.434910774230957
    6. '10' → logprob: -9.059910774230957
    7. 'H' → logprob: -9.622410774230957
    8. ' H' → logprob: -10.059910774230957
    9. ')' → logprob: -10.559910774230957
    10. 'float' → logprob: -10.997410774230957

Token 71: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5096966028213501
    2. ']' → logprob: -1.00969660282135
    3. '])' → logprob: -3.7596964836120605
    4. ')]' → logprob: -5.5096964836120605
    5. ' ]' → logprob: -5.5096964836120605
    6. ' )' → logprob: -5.7596964836120605
    7. ' ])' → logprob: -8.134696960449219
    8. ')])' → logprob: -9.634696960449219
    9. '）' → logprob: -10.509696960449219
    10. '])]' → logprob: -11.509696960449219

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43504798412323
    2. 'dp' → logprob: -1.43504798412323
    3. ' dp' → logprob: -2.9350481033325195
    4. '
' → logprob: -3.3100481033325195
    5. '    
' → logprob: -4.3100481033325195
    6. '<|end|>' → logprob: -5.4350481033325195
    7. '	dp' → logprob: -6.3100481033325195
    8. 'DP' → logprob: -6.4350481033325195
    9. ' DP' → logprob: -7.3100481033325195
    10. '    ' → logprob: -7.4350481033325195

Token 73: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0008576238178648055
    2. ' dp' → logprob: -7.750857830047607
    3. '   ' → logprob: -8.12585735321045
    4. 'DP' → logprob: -9.12585735321045
    5. 'for' → logprob: -12.75085735321045
    6. 'd' → logprob: -12.75085735321045
    7. 'from' → logprob: -12.87585735321045
    8. '	dp' → logprob: -12.87585735321045
    9. 'cost' → logprob: -13.25085735321045
    10. 'import' → logprob: -13.37585735321045

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015175960725173354
    2. '=' → logprob: -6.5015177726745605
    3. ' ' → logprob: -11.751517295837402
    4. '[' → logprob: -12.126517295837402
    5. ' =[' → logprob: -14.251517295837402
    6. ']' → logprob: -15.001517295837402
    7. '=[' → logprob: -15.126517295837402
    8. '  ' → logprob: -15.751517295837402
    9. '```' → logprob: -16.12651824951172
    10. ')' → logprob: -16.12651824951172

Token 75: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014215569011867046
    2. ' [' → logprob: -4.264215469360352
    3. '[N' → logprob: -10.014215469360352
    4. '[n' → logprob: -13.514215469360352
    5. '[I' → logprob: -13.639215469360352
    6. '[len' → logprob: -13.764215469360352
    7. '[int' → logprob: -13.764215469360352
    8. '[-' → logprob: -14.889215469360352
    9. '[i' → logprob: -15.389215469360352
    10. '[min' → logprob: -15.764215469360352

Token 76: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.06233389303088188
    2. 'float' → logprob: -2.937333822250366
    3. '0' → logprob: -4.937334060668945
    4. 'MOD' → logprob: -8.937334060668945
    5. 'inf' → logprob: -9.562334060668945
    6. '10' → logprob: -11.312334060668945
    7. 'False' → logprob: -11.312334060668945
    8. '(float' → logprob: -12.437334060668945
    9. '-' → logprob: -12.812334060668945
    10. ' INF' → logprob: -12.812334060668945

Token 77: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.039515528827905655
    2. ' for' → logprob: -3.414515495300293
    3. ']*' → logprob: -5.914515495300293
    4. ']*(' → logprob: -6.289515495300293
    5. 'for' → logprob: -6.789515495300293
    6. ' ]' → logprob: -9.039515495300293
    7. ',' → logprob: -10.664515495300293
    8. ']+' → logprob: -11.664515495300293
    9. '	for' → logprob: -11.664515495300293
    10. '   ' → logprob: -12.164515495300293

Token 78: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18393538892269135
    2. ']' → logprob: -2.0589354038238525
    3. 'for' → logprob: -3.3089354038238525
    4. ']*' → logprob: -5.808935165405273
    5. ']*(' → logprob: -7.558935165405273
    6. ' ]' → logprob: -8.558935165405273
    7. '   ' → logprob: -9.683935165405273
    8. ' ' → logprob: -10.308935165405273
    9. '	for' → logprob: -10.808935165405273
    10. ',' → logprob: -11.058935165405273

Token 79: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.030685000121593475
    2. '(K' → logprob: -3.9056849479675293
    3. ' (' → logprob: -5.405684947967529
    4. '(' → logprob: -5.405684947967529
    5. '(n' → logprob: -7.530684947967529
    6. '   ' → logprob: -8.155685424804688
    7. '(k' → logprob: -9.405685424804688
    8. '(len' → logprob: -9.780685424804688
    9. '(max' → logprob: -10.530685424804688
    10. ' ' → logprob: -10.530685424804688

Token 80: 'N' (ID: 45)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.11842918395996094
    2. 'N' → logprob: -2.243429183959961
    3. '   ' → logprob: -6.118429183959961
    4. '(K' → logprob: -6.743429183959961
    5. ' K' → logprob: -6.868429183959961
    6. '(N' → logprob: -7.368429183959961
    7. ' ' → logprob: -8.743429183959961
    8. ' (' → logprob: -8.993429183959961
    9. ' N' → logprob: -9.118429183959961
    10. '(' → logprob: -10.368429183959961

Token 81: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25198766589164734
    2. ' +' → logprob: -1.5019876956939697
    3. ')' → logprob: -10.62698745727539
    4. ' ' → logprob: -11.37698745727539
    5. '+
' → logprob: -12.00198745727539
    6. ' +
' → logprob: -12.25198745727539
    7. ' )' → logprob: -12.87698745727539
    8. '   ' → logprob: -13.68948745727539
    9. '```' → logprob: -14.00198745727539
    10. '
' → logprob: -14.06448745727539

Token 82: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.577010452747345
    2. '1' → logprob: -1.0770103931427002
    3. ' ' → logprob: -2.3270103931427
    4. '3' → logprob: -8.702010154724121
    5. '7' → logprob: -11.639510154724121
    6. '  ' → logprob: -11.702010154724121
    7. '   ' → logprob: -12.014510154724121
    8. '5' → logprob: -12.202010154724121
    9. '12' → logprob: -12.639510154724121
    10. '```' → logprob: -12.639510154724121

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11315525323152542
    2. '2' → logprob: -2.2381553649902344
    3. ' ' → logprob: -8.363155364990234
    4. '3' → logprob: -9.488155364990234
    5. '5' → logprob: -11.988155364990234
    6. '   ' → logprob: -12.613155364990234
    7. '10' → logprob: -12.738155364990234
    8. '7' → logprob: -12.988155364990234
    9. '  ' → logprob: -13.300655364990234
    10. '6' → logprob: -13.613155364990234

Token 84: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31879284977912903
    2. ')' → logprob: -1.9437928199768066
    3. 'for' → logprob: -2.0687928199768066
    4. ' ' → logprob: -6.568792819976807
    5. ' )' → logprob: -6.818792819976807
    6. '   ' → logprob: -7.943792819976807
    7. ']' → logprob: -8.318793296813965
    8. ')]' → logprob: -9.193793296813965
    9. '    ' → logprob: -9.443793296813965
    10. ' ]' → logprob: -10.068793296813965

Token 85: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03374551236629486
    2. 'for' → logprob: -3.408745527267456
    3. ' ' → logprob: -9.908745765686035
    4. '   ' → logprob: -10.283745765686035
    5. '    ' → logprob: -12.158745765686035
    6. '	for' → logprob: -12.408745765686035
    7. ']' → logprob: -13.158745765686035
    8. '  ' → logprob: -13.908745765686035
    9. ' ]' → logprob: -13.908745765686035
    10. '[' → logprob: -14.783745765686035

Token 86: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3974228501319885
    2. ' _' → logprob: -1.7724227905273438
    3. ' range' → logprob: -2.2724227905273438
    4. ' ' → logprob: -3.5224227905273438
    5. ' i' → logprob: -4.022422790527344
    6. '<|end|>' → logprob: -5.522422790527344
    7. '_range' → logprob: -6.522422790527344
    8. '<|end|>' → logprob: -7.272422790527344
    9. ' in' → logprob: -8.022422790527344
    10. ' xrange' → logprob: -8.522422790527344

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.505574107170105
    2. ' range' → logprob: -1.255574107170105
    3. 'range' → logprob: -2.2555742263793945
    4. ' ' → logprob: -6.2555742263793945
    5. 'ange' → logprob: -6.5055742263793945
    6. 'in' → logprob: -6.5055742263793945
    7. '(range' → logprob: -7.2555742263793945
    8. ' xrange' → logprob: -8.005574226379395
    9. ' i' → logprob: -8.380574226379395
    10. '	range' → logprob: -8.630574226379395

Token 88: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2017395943403244
    2. ' range' → logprob: -1.7017395496368408
    3. ' ' → logprob: -8.576739311218262
    4. '[' → logprob: -9.576739311218262
    5. '	range' → logprob: -11.201739311218262
    6. '  ' → logprob: -11.326739311218262
    7. '   ' → logprob: -11.451739311218262
    8. '(range' → logprob: -11.701739311218262
    9. ' xrange' → logprob: -12.076739311218262
    10. ']' → logprob: -12.576739311218262

Token 89: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6414890289306641
    2. '(N' → logprob: -0.7664890289306641
    3. ' (' → logprob: -4.766489028930664
    4. ' ' → logprob: -9.141489028930664
    5. ')' → logprob: -9.516489028930664
    6. '((' → logprob: -10.141489028930664
    7. ' )' → logprob: -10.266489028930664
    8. '(K' → logprob: -10.516489028930664
    9. '2' → logprob: -10.766489028930664
    10. '(
' → logprob: -11.016489028930664

Token 90: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04307238757610321
    2. ' +' → logprob: -3.168072462081909
    3. ')]' → logprob: -10.293072700500488
    4. ')' → logprob: -10.418072700500488
    5. '+
' → logprob: -12.543072700500488
    6. ' ' → logprob: -13.668072700500488
    7. '1' → logprob: -14.043072700500488
    8. '   ' → logprob: -14.293072700500488
    9. ' +
' → logprob: -14.293072700500488
    10. '+)' → logprob: -14.543072700500488

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2885468304157257
    2. '2' → logprob: -1.4135468006134033
    3. ' ' → logprob: -4.913547039031982
    4. ')' → logprob: -11.788546562194824
    5. '   ' → logprob: -11.788546562194824
    6. '+' → logprob: -13.601046562194824
    7. '```' → logprob: -13.663546562194824
    8. '  ' → logprob: -14.288546562194824
    9. '
' → logprob: -14.726046562194824
    10. '<|end|>' → logprob: -15.163546562194824

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006163647398352623
    2. '2' → logprob: -5.131163597106934
    3. ' ' → logprob: -8.381163597106934
    4. '0' → logprob: -13.006163597106934
    5. ')' → logprob: -13.506163597106934
    6. ')]' → logprob: -13.943663597106934
    7. '+' → logprob: -15.318663597106934
    8. '１' → logprob: -16.13116455078125
    9. '   ' → logprob: -16.44366455078125
    10. '  ' → logprob: -16.44366455078125

Token 93: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005002124700695276
    2. ')' → logprob: -5.880002021789551
    3. ']' → logprob: -6.130002021789551
    4. ' )' → logprob: -11.50500202178955
    5. ' ]' → logprob: -12.75500202178955
    6. '])' → logprob: -13.13000202178955
    7. '   ' → logprob: -14.00500202178955
    8. ')])' → logprob: -14.38000202178955
    9. ')],' → logprob: -14.63000202178955
    10. '])]' → logprob: -14.75500202178955

Token 94: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.27000120282173157
    2. '   ' → logprob: -2.145001173019409
    3. '
' → logprob: -2.270001173019409
    4. '    
' → logprob: -4.645001411437988
    5. '[' → logprob: -6.395001411437988
    6. '	dp' → logprob: -6.770001411437988
    7. '  
' → logprob: -7.020001411437988
    8. ' dp' → logprob: -7.145001411437988
    9. ' ' → logprob: -7.770001411437988
    10. '(dp' → logprob: -7.895001411437988

Token 95: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005180051666684449
    2. ' dp' → logprob: -7.625517845153809
    3. '   ' → logprob: -11.250517845153809
    4. 'for' (adapté à ' for') → logprob: -11.250517845153809
    5. '	dp' → logprob: -13.625517845153809
    6. ' for' → logprob: -13.750517845153809
    7. '
' → logprob: -14.375517845153809
    8. '0' → logprob: -15.000517845153809
    9. '(dp' → logprob: -15.125517845153809
    10. '    
' → logprob: -15.875517845153809

Token 96: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0027970336377620697
    2. 'i' → logprob: -6.2527971267700195
    3. ' j' → logprob: -8.12779712677002
    4. ' k' → logprob: -8.37779712677002
    5. ' ' → logprob: -8.50279712677002
    6. ' x' → logprob: -10.75279712677002
    7. ' s' → logprob: -10.87779712677002
    8. ' _' → logprob: -11.00279712677002
    9. ' d' → logprob: -11.12779712677002
    10. ' v' → logprob: -11.25279712677002

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01670187897980213
    2. 'in' → logprob: -4.141701698303223
    3. ' ' → logprob: -7.391701698303223
    4. ',' → logprob: -11.016701698303223
    5. '	in' → logprob: -11.766701698303223
    6. ' i' → logprob: -12.391701698303223
    7. 'n' → logprob: -12.391701698303223
    8. '  ' → logprob: -12.641701698303223
    9. ')' → logprob: -13.266701698303223
    10. 'In' → logprob: -13.579201698303223

Token 98: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31332001090049744
    2. ' range' → logprob: -1.3133200407028198
    3. ' ' → logprob: -10.68832015991211
    4. '[' → logprob: -11.43832015991211
    5. '	range' → logprob: -11.43832015991211
    6. '(range' → logprob: -12.31332015991211
    7. '   ' → logprob: -12.68832015991211
    8. '  ' → logprob: -13.31332015991211
    9. '```' → logprob: -14.18832015991211
    10. '`' → logprob: -14.43832015991211

Token 99: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021004963666200638
    2. '(N' → logprob: -3.8960049152374268
    3. ' (' → logprob: -8.021004676818848
    4. '(K' → logprob: -9.771004676818848
    5. '1' → logprob: -10.396004676818848
    6. '(i' → logprob: -10.396004676818848
    7. ' ' → logprob: -12.021004676818848
    8. '(n' → logprob: -12.146004676818848
    9. '(
' → logprob: -13.146004676818848
    10. '((' → logprob: -14.021004676818848

Token 100: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5231502056121826
    2. '+' → logprob: -0.8981502056121826
    3. ' ' → logprob: -11.773150444030762
    4. '   ' → logprob: -12.148150444030762
    5. ' +
' → logprob: -12.273150444030762
    6. '):
' → logprob: -13.023150444030762
    7. '+
' → logprob: -13.148150444030762
    8. '):' → logprob: -13.148150444030762
    9. '
' → logprob: -13.648150444030762
    10. ')' → logprob: -14.398150444030762

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16077128052711487
    2. ' ' → logprob: -1.9107712507247925
    3. '2' → logprob: -7.660771369934082
    4. '+' → logprob: -10.785771369934082
    5. '   ' → logprob: -10.910771369934082
    6. ')' → logprob: -11.848271369934082
    7. '  ' → logprob: -12.285771369934082
    8. ' K' → logprob: -12.598271369934082
    9. '(' → logprob: -12.723271369934082
    10. '```' → logprob: -13.348271369934082

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002329386305063963
    2. ' ' → logprob: -6.502329349517822
    3. '2' → logprob: -7.127329349517822
    4. '+' → logprob: -11.12732982635498
    5. '   ' → logprob: -12.75232982635498
    6. ')' → logprob: -13.31482982635498
    7. '```' → logprob: -14.37732982635498
    8. '-' → logprob: -14.62732982635498
    9. '  ' → logprob: -14.68982982635498
    10. '0' → logprob: -14.68982982635498

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002885471796616912
    2. '):
' → logprob: -6.252885341644287
    3. ' ):' → logprob: -7.502885341644287
    4. ')' → logprob: -7.877885341644287
    5. ':' → logprob: -11.252885818481445
    6. '):
' → logprob: -12.377885818481445
    7. '+' → logprob: -12.877885818481445
    8. '   ' → logprob: -13.502885818481445
    9. ' ):
' → logprob: -14.002885818481445
    10. ']:' → logprob: -14.377885818481445

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060995228588581085
    2. ':' → logprob: -3.81099534034729
    3. '<|end|>' → logprob: -4.310995101928711
    4. '   ' → logprob: -4.685995101928711
    5. '[' → logprob: -4.810995101928711
    6. 'dp' → logprob: -6.310995101928711
    7. '	dp' → logprob: -6.560995101928711
    8. ' dp' → logprob: -7.185995101928711
    9. ' ' → logprob: -7.310995101928711
    10. ':
' → logprob: -7.685995101928711

Token 105: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7194046974182129
    2. 'dp' (adapté à ' dp') → logprob: -0.8444046974182129
    3. '       ' → logprob: -2.594404697418213
    4. '	dp' → logprob: -5.219404697418213
    5. '   ' → logprob: -6.219404697418213
    6. ' for' → logprob: -7.219404697418213
    7. '_dp' → logprob: -9.344404220581055
    8. '(dp' → logprob: -9.844404220581055
    9. 'for' → logprob: -10.094404220581055
    10. ' ' → logprob: -10.219404220581055

Token 106: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019397038267925382
    2. '[' → logprob: -6.25193977355957
    3. '[I' → logprob: -12.12693977355957
    4. '[N' → logprob: -13.37693977355957
    5. ' [' → logprob: -14.37693977355957
    6. '[ii' → logprob: -14.87693977355957
    7. '][' → logprob: -15.25193977355957
    8. '```' → logprob: -15.50193977355957
    9. '[][' → logprob: -15.50193977355957
    10. '[in' → logprob: -15.62693977355957

Token 107: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002390594017924741
    2. '[' → logprob: -8.875239372253418
    3. ']' → logprob: -10.125239372253418
    4. '[i' → logprob: -10.500239372253418
    5. ' ][' → logprob: -10.625239372253418
    6. '   ' → logprob: -12.750239372253418
    7. '][-' → logprob: -14.625239372253418
    8. ' ' → logprob: -14.625239372253418
    9. '"][' → logprob: -14.750239372253418
    10. '	' → logprob: -14.875239372253418

Token 108: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001213210285641253
    2. '0' → logprob: -6.751213073730469
    3. ' i' → logprob: -10.626213073730469
    4. ' ' → logprob: -11.876213073730469
    5. ']' → logprob: -12.001213073730469
    6. '   ' → logprob: -12.626213073730469
    7. '	i' → logprob: -15.126213073730469
    8. '  ' → logprob: -15.251213073730469
    9. ')' → logprob: -15.376213073730469
    10. '1' → logprob: -15.626213073730469

Token 109: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012523093027994037
    2. ']=' → logprob: -9.25012493133545
    3. ' ]' → logprob: -10.50012493133545
    4. '=' → logprob: -14.00012493133545
    5. ' =' → logprob: -14.75012493133545
    6. '[' → logprob: -17.000125885009766
    7. ' ' → logprob: -17.125125885009766
    8. ']
' → logprob: -17.625125885009766
    9. '0' → logprob: -17.875125885009766
    10. '`]' → logprob: -18.250125885009766

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016036363318562508
    2. '=' → logprob: -4.141036510467529
    3. ' ' → logprob: -13.391036033630371
    4. ' ' → logprob: -16.016036987304688
    5. '=i' → logprob: -16.266036987304688
    6. '=int' → logprob: -16.391036987304688
    7. ' =)' → logprob: -16.641036987304688
    8. '＝' → logprob: -17.016036987304688
    9. ',' → logprob: -17.391036987304688
    10. '0' → logprob: -17.641036987304688

Token 111: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001971457852050662
    2. ' ' → logprob: -6.251971244812012
    3. 'INF' → logprob: -10.126971244812012
    4. '1' → logprob: -14.501971244812012
    5. ' ' → logprob: -14.626971244812012
    6. ' INF' → logprob: -15.001971244812012
    7. 'inf' → logprob: -15.314471244812012
    8. 'i' → logprob: -15.376971244812012
    9. 'H' → logprob: -15.439471244812012
    10. '   ' → logprob: -16.064472198486328

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013464801304508
    2. ' ' → logprob: -9.250134468078613
    3. 'INF' → logprob: -10.250134468078613
    4. 'H' → logprob: -13.750134468078613
    5. '1' → logprob: -14.500134468078613
    6. '-' → logprob: -15.500134468078613
    7. 'i' → logprob: -15.500134468078613
    8. 'inf' → logprob: -15.750134468078613
    9. ' ' → logprob: -16.06263542175293
    10. '100' → logprob: -16.43763542175293

Token 113: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02928776480257511
    2. '   ' → logprob: -3.904287815093994
    3. '<|end|>' → logprob: -5.279287815093994
    4. '    
' → logprob: -7.029287815093994
    5. ' 
' → logprob: -7.279287815093994
    6. ' for' → logprob: -7.529287815093994
    7. '	for' → logprob: -8.029287338256836
    8. '  
' → logprob: -8.279287338256836
    9. '
' → logprob: -8.404287338256836
    10. 'for' → logprob: -8.779287338256836

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22149915993213654
    2. '
' → logprob: -1.8464992046356201
    3. ' for' → logprob: -4.221498966217041
    4. '<|end|>' → logprob: -4.721498966217041
    5. '	for' → logprob: -4.971498966217041
    6. '    
' → logprob: -5.221498966217041
    7. 'for' → logprob: -5.846498966217041
    8. '  
' → logprob: -7.346498966217041
    9. '	
' → logprob: -8.2214994430542
    10. ' ' → logprob: -8.2214994430542

Token 115: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07074743509292603
    2. '   ' → logprob: -3.0707473754882812
    3. ' for' → logprob: -3.8207473754882812
    4. '	for' → logprob: -12.695747375488281
    5. ' ' → logprob: -14.320747375488281
    6. '    
' → logprob: -14.695747375488281
    7. '```' → logprob: -15.195747375488281
    8. '  ' → logprob: -15.570747375488281
    9. '
' → logprob: -15.695747375488281
    10. '    ' → logprob: -17.07074737548828

Token 116: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0008509631152264774
    2. ' _' → logprob: -7.875851154327393
    3. ' ' → logprob: -8.125850677490234
    4. 'i' → logprob: -9.500850677490234
    5. '_' → logprob: -9.875850677490234
    6. ' range' → logprob: -10.875850677490234
    7. '	i' → logprob: -12.000850677490234
    8. ' j' → logprob: -12.125850677490234
    9. '   ' → logprob: -12.375850677490234
    10. ' ' → logprob: -12.625850677490234

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0037285841535776854
    2. 'in' → logprob: -5.75372838973999
    3. ' ' → logprob: -7.62872838973999
    4. '1' → logprob: -11.128728866577148
    5. ',' → logprob: -11.378728866577148
    6. '  ' → logprob: -11.503728866577148
    7. '   ' → logprob: -11.753728866577148
    8. '+' → logprob: -12.253728866577148
    9. '	in' → logprob: -12.753728866577148
    10. ' i' → logprob: -13.378728866577148

Token 118: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47409749031066895
    2. 'range' → logprob: -0.974097490310669
    3. ' ' → logprob: -11.47409725189209
    4. '(range' → logprob: -11.84909725189209
    5. '   ' → logprob: -14.22409725189209
    6. '	range' → logprob: -14.22409725189209
    7. '  ' → logprob: -14.47409725189209
    8. '1' → logprob: -15.59909725189209
    9. '```' → logprob: -15.97409725189209
    10. 'rang' → logprob: -16.099098205566406

Token 119: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012640079483389854
    2. '(N' → logprob: -4.387639999389648
    3. '(K' → logprob: -9.637639999389648
    4. ' ' → logprob: -10.512639999389648
    5. '1' → logprob: -10.512639999389648
    6. ' (' → logprob: -12.012639999389648
    7. '(n' → logprob: -13.512639999389648
    8. '(
' → logprob: -14.637639999389648
    9. '   ' → logprob: -15.012639999389648
    10. '(k' → logprob: -15.075139999389648

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0264656413346529
    2. 'N' → logprob: -3.651465654373169
    3. ' ' → logprob: -9.27646541595459
    4. '0' → logprob: -10.77646541595459
    5. ' N' → logprob: -10.90146541595459
    6. 'K' → logprob: -11.40146541595459
    7. '   ' → logprob: -12.40146541595459
    8. '(' → logprob: -12.65146541595459
    9. '2' → logprob: -12.77646541595459
    10. '
' → logprob: -13.02646541595459

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002210681326687336
    2. ' ,' → logprob: -6.12721061706543
    3. ',N' → logprob: -10.87721061706543
    4. '   ' → logprob: -12.87721061706543
    5. ',
' → logprob: -13.37721061706543
    6. ' ' → logprob: -13.62721061706543
    7. ',n' → logprob: -14.75221061706543
    8. 'to' → logprob: -15.37721061706543
    9. ' to' → logprob: -16.37721061706543
    10. 'in' → logprob: -16.37721061706543

Token 122: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0036047017201781273
    2. ' N' → logprob: -5.628604888916016
    3. '   ' → logprob: -12.378604888916016
    4. ' ' → logprob: -15.628604888916016
    5. 'n' → logprob: -15.753604888916016
    6. '	N' → logprob: -16.503604888916016
    7. '  ' → logprob: -16.753604888916016
    8. '(N' → logprob: -18.378604888916016
    9. '1' → logprob: -18.753604888916016
    10. '+' → logprob: -18.878604888916016

Token 123: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868788182735443
    2. '+' → logprob: -1.1368788480758667
    3. '   ' → logprob: -11.886878967285156
    4. ' ' → logprob: -14.636878967285156
    5. '+
' → logprob: -16.136878967285156
    6. ' +
' → logprob: -16.136878967285156
    7. '):
' → logprob: -16.511878967285156
    8. '
' → logprob: -16.636878967285156
    9. ')' → logprob: -16.886878967285156
    10. '＋' → logprob: -17.386878967285156

Token 124: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006296366918832064
    2. ' ' → logprob: -7.375629425048828
    3. '2' → logprob: -13.375629425048828
    4. '   ' → logprob: -14.000629425048828
    5. ')' → logprob: -15.563129425048828
    6. '  ' → logprob: -16.250629425048828
    7. '+' → logprob: -16.625629425048828
    8. '```' → logprob: -17.313129425048828
    9. '
' → logprob: -17.813129425048828
    10. '    ' → logprob: -18.125629425048828

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010998018842656165
    2. ' ' → logprob: -9.125109672546387
    3. '2' → logprob: -14.625109672546387
    4. '   ' → logprob: -15.000109672546387
    5. '
' → logprob: -17.437610626220703
    6. '+' → logprob: -17.500110626220703
    7. '```' → logprob: -17.625110626220703
    8. '  ' → logprob: -17.937610626220703
    9. ')' → logprob: -18.187610626220703
    10. 'K' → logprob: -18.562610626220703

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02343204990029335
    2. ':' → logprob: -3.8984320163726807
    3. '):
' → logprob: -5.89843225479126
    4. ')' → logprob: -9.023431777954102
    5. '   ' → logprob: -12.148431777954102
    6. ' ):' → logprob: -12.148431777954102
    7. ':
' → logprob: -12.648431777954102
    8. ',' → logprob: -12.898431777954102
    9. '):
' → logprob: -13.273431777954102
    10. ' :' → logprob: -14.148431777954102

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004738063144031912
    2. '   ' → logprob: -7.875473976135254
    3. ' for' → logprob: -9.625473976135254
    4. ' ' → logprob: -11.625473976135254
    5. '	   ' → logprob: -11.750473976135254
    6. '<|end|>' → logprob: -12.375473976135254
    7. ',' → logprob: -13.125473976135254
    8. ':' → logprob: -14.125473976135254
    9. '    ' → logprob: -14.250473976135254
    10. '	' → logprob: -14.375473976135254

Token 128: ' dp' (ID: 21546)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22721552848815918
    2. 'for' → logprob: -1.7272155284881592
    3. '   ' → logprob: -3.727215528488159
    4. '       ' → logprob: -6.602215766906738
    5. '	for' → logprob: -10.102215766906738
    6. ' ' → logprob: -11.727215766906738
    7. '    ' → logprob: -12.352215766906738
    8. '  ' → logprob: -14.727215766906738
    9. '	   ' → logprob: -15.727215766906738
    10. ',' → logprob: -15.852215766906738

Token 129: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.022803839296102524
    2. '[' → logprob: -4.022803783416748
    3. 'for' → logprob: -6.272803783416748
    4. ' =' → logprob: -7.647803783416748
    5. '][' → logprob: -7.647803783416748
    6. '[j' → logprob: -7.897803783416748
    7. ' for' → logprob: -8.397804260253906
    8. 'i' → logprob: -8.397804260253906
    9. '0' → logprob: -9.022804260253906
    10. '_i' → logprob: -9.272804260253906

Token 130: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02224961668252945
    2. ']' → logprob: -4.022249698638916
    3. '[' → logprob: -5.772249698638916
    4. ']=' → logprob: -8.272249221801758
    5. ' ][' → logprob: -8.647249221801758
    6. '][:' → logprob: -9.022249221801758
    7. '
' → logprob: -9.397249221801758
    8. 'for' → logprob: -9.647249221801758
    9. '0' → logprob: -10.272249221801758
    10. ')' → logprob: -10.272249221801758

Token 131: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6133886575698853
    2. 'i' → logprob: -1.6133886575698853
    3. '1' → logprob: -1.7383886575698853
    4. 'K' → logprob: -2.6133885383605957
    5. 'N' → logprob: -5.738388538360596
    6. ' ' → logprob: -6.238388538360596
    7. 'min' → logprob: -6.488388538360596
    8. 'range' → logprob: -6.863388538360596
    9. ' i' → logprob: -7.925888538360596
    10. ' K' → logprob: -8.175889015197754

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003421375877223909
    2. ' ]' → logprob: -8.25034236907959
    3. ']=' → logprob: -9.75034236907959
    4. ' =' → logprob: -11.37534236907959
    5. '=' → logprob: -12.37534236907959
    6. '   ' → logprob: -13.00034236907959
    7. ' ' → logprob: -14.12534236907959
    8. '[' → logprob: -14.25034236907959
    9. ')' → logprob: -14.25034236907959
    10. '0' → logprob: -14.50034236907959

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815134845674038
    2. '=' → logprob: -4.01815128326416
    3. '=min' → logprob: -14.51815128326416
    4. ' ' → logprob: -15.26815128326416
    5. ' ' → logprob: -15.51815128326416
    6. ',' → logprob: -16.143152236938477
    7. ' =
' → logprob: -16.518152236938477
    8. ' +=' → logprob: -16.643152236938477
    9. ')' → logprob: -16.893152236938477
    10. '＝' → logprob: -17.143152236938477

Token 134: ' H' (ID: 487)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.06450387090444565
    2. '0' → logprob: -3.0645039081573486
    3. ' abs' → logprob: -4.3145036697387695
    4. 'dp' → logprob: -6.4395036697387695
    5. ' ' → logprob: -8.31450366973877
    6. 'H' → logprob: -8.43950366973877
    7. 'min' → logprob: -9.31450366973877
    8. 'max' → logprob: -9.68950366973877
    9. '(abs' → logprob: -9.68950366973877
    10. '   ' → logprob: -10.43950366973877

Token 135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -12.125005722045898
    3. 'i' → logprob: -15.000005722045898
    4. ' [' → logprob: -15.875005722045898
    5. '   ' → logprob: -16.2500057220459
    6. '```' → logprob: -16.7500057220459
    7. '[I' → logprob: -16.8750057220459
    8. '
' → logprob: -18.0000057220459
    9. '[N' → logprob: -18.5000057220459
    10. '[
' → logprob: -18.7500057220459

Token 136: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2344311624765396
    2. '-' → logprob: -1.8594311475753784
    3. ' -' → logprob: -3.109431266784668
    4. ']-' → logprob: -4.984431266784668
    5. '])' → logprob: -7.484431266784668
    6. ')' → logprob: -8.109431266784668
    7. ' ]' → logprob: -8.109431266784668
    8. '   ' → logprob: -8.734431266784668
    9. '[' → logprob: -9.234431266784668
    10. ']+' → logprob: -9.484431266784668

Token 137: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47929689288139343
    2. 'for' (adapté à ' for') → logprob: -1.3542969226837158
    3. '   ' → logprob: -2.104296922683716
    4. '
' → logprob: -7.854296684265137
    5. '	for' → logprob: -8.854296684265137
    6. '       ' → logprob: -8.979296684265137
    7. '    
' → logprob: -10.479296684265137
    8. ' ' → logprob: -11.354296684265137
    9. '    ' → logprob: -11.979296684265137
    10. '```' → logprob: -12.104296684265137

Token 139: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4104223847389221
    2. 'j' → logprob: -1.1604223251342773
    3. ' k' → logprob: -4.410422325134277
    4. 'k' → logprob: -4.535422325134277
    5. ' ' → logprob: -9.535422325134277
    6. ' step' → logprob: -9.660422325134277
    7. ' d' → logprob: -10.035422325134277
    8. 'step' → logprob: -10.535422325134277
    9. 'd' → logprob: -10.660422325134277
    10. '	j' → logprob: -10.847922325134277

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006414268864318728
    2. 'in' → logprob: -7.500641345977783
    3. ' ' → logprob: -9.375641822814941
    4. '<|end|>' → logprob: -13.750641822814941
    5. '	in' → logprob: -14.625641822814941
    6. 'range' → logprob: -14.875641822814941
    7. '1' → logprob: -15.000641822814941
    8. '<|end|>' → logprob: -15.375641822814941
    9. '    ' → logprob: -15.875641822814941
    10. '2' → logprob: -16.000640869140625

Token 141: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20145513117313385
    2. 'range' → logprob: -1.7014551162719727
    3. ' ' → logprob: -10.951455116271973
    4. '(range' → logprob: -11.451455116271973
    5. '	range' → logprob: -12.451455116271973
    6. ' in' → logprob: -12.576455116271973
    7. '   ' → logprob: -13.201455116271973
    8. '  ' → logprob: -13.326455116271973
    9. 'in' → logprob: -14.826455116271973
    10. '    ' → logprob: -14.826455116271973

Token 142: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.173704271830502e-06
    2. ' (' → logprob: -13.62500286102295
    3. '2' → logprob: -13.87500286102295
    4. '(i' → logprob: -14.50000286102295
    5. ' ' → logprob: -15.50000286102295
    6. '(
' → logprob: -16.625003814697266
    7. '1' → logprob: -16.625003814697266
    8. '(k' → logprob: -17.500003814697266
    9. '(j' → logprob: -17.500003814697266
    10. '(K' → logprob: -18.000003814697266

Token 143: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6593990921974182
    2. '1' → logprob: -0.7843990921974182
    3. ' ' → logprob: -3.6593990325927734
    4. '(' → logprob: -7.909399032592773
    5. '0' → logprob: -9.034399032592773
    6. '   ' → logprob: -9.659399032592773
    7. ' i' → logprob: -9.909399032592773
    8. 'i' → logprob: -10.534399032592773
    9. 'K' → logprob: -11.284399032592773
    10. ' K' → logprob: -11.409399032592773

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.281485836254433e-05
    2. ' ,' → logprob: -9.625092506408691
    3. ',i' → logprob: -10.625092506408691
    4. ',N' → logprob: -14.000092506408691
    5. ',j' → logprob: -14.125092506408691
    6. '   ' → logprob: -15.125092506408691
    7. ',
' → logprob: -15.250092506408691
    8. ',n' → logprob: -16.250093460083008
    9. '    ' → logprob: -16.875093460083008
    10. '‌,' → logprob: -17.500093460083008

Token 145: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8221273422241211
    2. ' min' → logprob: -1.822127342224121
    3. ' i' → logprob: -2.072127342224121
    4. 'K' → logprob: -2.322127342224121
    5. ' K' → logprob: -2.447127342224121
    6. 'min' → logprob: -2.572127342224121
    7. 'N' → logprob: -4.947127342224121
    8. ' N' → logprob: -5.947127342224121
    9. '   ' → logprob: -6.697127342224121
    10. ' ' → logprob: -7.697127342224121

Token 146: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16023549437522888
    2. '+' → logprob: -1.9102355241775513
    3. '   ' → logprob: -12.160235404968262
    4. '):
' → logprob: -12.910235404968262
    5. '):' → logprob: -13.160235404968262
    6. ' ' → logprob: -13.785235404968262
    7. '
' → logprob: -15.535235404968262
    8. '+i' → logprob: -16.285236358642578
    9. ' +
' → logprob: -16.410236358642578
    10. '       ' → logprob: -16.410236358642578

Token 147: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028129592537879944
    2. ' ' → logprob: -5.87781286239624
    3. '2' → logprob: -11.877813339233398
    4. '   ' → logprob: -14.877813339233398
    5. ')' → logprob: -15.002813339233398
    6. '
' → logprob: -15.627813339233398
    7. '):
' → logprob: -16.1903133392334
    8. '```' → logprob: -16.5028133392334
    9. '  ' → logprob: -16.6903133392334
    10. ' ' → logprob: -18.3153133392334

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023274161503650248
    2. ' ' → logprob: -8.375232696533203
    3. '2' → logprob: -13.375232696533203
    4. '   ' → logprob: -15.625232696533203
    5. ')' → logprob: -15.875232696533203
    6. '  ' → logprob: -17.250232696533203
    7. '):
' → logprob: -17.312732696533203
    8. '```' → logprob: -17.312732696533203
    9. '
' → logprob: -17.437732696533203
    10. ' ' → logprob: -17.625232696533203

Token 149: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.26263636350631714
    2. '):' → logprob: -1.512636423110962
    3. ':' → logprob: -4.637636184692383
    4. ':
' → logprob: -7.137636184692383
    5. '):
' → logprob: -9.637636184692383
    6. '       ' → logprob: -9.637636184692383
    7. '   ' → logprob: -11.262636184692383
    8. ')' → logprob: -11.387636184692383
    9. ' ):
' → logprob: -11.387636184692383
    10. ' ):' → logprob: -13.012636184692383

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006645033601671457
    2. ':' → logprob: -5.881645202636719
    3. 'dp' → logprob: -6.381645202636719
    4. ' dp' → logprob: -6.506645202636719
    5. '       ' → logprob: -8.006645202636719
    6. ':
' → logprob: -9.381645202636719
    7. ' for' → logprob: -10.381645202636719
    8. ',' → logprob: -10.631645202636719
    9. ' :' → logprob: -10.631645202636719
    10. ' if' → logprob: -10.881645202636719

Token 151: ' for' (ID: 395)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3154338002204895
    2. 'dp' → logprob: -1.4404337406158447
    3. ' for' → logprob: -3.6904337406158447
    4. '           ' → logprob: -5.565433979034424
    5. 'for' (adapté à ' for') → logprob: -5.815433979034424
    6. '               ' → logprob: -7.190433979034424
    7. ' if' → logprob: -7.440433979034424
    8. ' cost' → logprob: -8.940433502197266
    9. '   ' → logprob: -9.315433502197266
    10. '	dp' → logprob: -9.315433502197266

Token 152: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07487527281045914
    2. ' k' → logprob: -2.6998753547668457
    3. 'x' → logprob: -6.699875354766846
    4. 'l' → logprob: -6.699875354766846
    5. 'p' → logprob: -7.324875354766846
    6. 'm' → logprob: -7.449875354766846
    7. ' l' → logprob: -8.449874877929688
    8. 'v' → logprob: -8.699874877929688
    9. ' x' → logprob: -8.949874877929688
    10. 's' → logprob: -9.074874877929688

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00767122209072113
    2. 'in' → logprob: -4.882671356201172
    3. ' ' → logprob: -10.257671356201172
    4. 'k' → logprob: -12.257671356201172
    5. '<|end|>' → logprob: -12.257671356201172
    6. 'range' → logprob: -12.382671356201172
    7. '1' → logprob: -12.757671356201172
    8. '	in' → logprob: -12.882671356201172
    9. '   ' → logprob: -13.132671356201172
    10. '_in' → logprob: -13.757671356201172

Token 154: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012521898373961449
    2. ' range' → logprob: -4.387521743774414
    3. '   ' → logprob: -12.012521743774414
    4. '	range' → logprob: -12.762521743774414
    5. '(range' → logprob: -13.262521743774414
    6. ' ' → logprob: -14.012521743774414
    7. '  ' → logprob: -15.137521743774414
    8. '    ' → logprob: -15.887521743774414
    9. 'k' → logprob: -16.887521743774414
    10. '
' → logprob: -17.012521743774414

Token 155: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010319766588509083
    2. '1' → logprob: -8.126031875610352
    3. '(max' → logprob: -8.126031875610352
    4. '(i' → logprob: -8.501031875610352
    5. '(j' → logprob: -8.501031875610352
    6. '(k' → logprob: -10.876031875610352
    7. 'max' → logprob: -11.751031875610352
    8. '(K' → logprob: -12.251031875610352
    9. 'j' → logprob: -14.376031875610352
    10. '   ' → logprob: -15.001031875610352

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.641113817691803
    2. '(' → logprob: -0.766113817691803
    3. 'max' → logprob: -5.516113758087158
    4. '(max' → logprob: -5.891113758087158
    5. '(i' → logprob: -7.391113758087158
    6. 'j' → logprob: -8.141114234924316
    7. '(j' → logprob: -8.516114234924316
    8. ' ' → logprob: -8.641114234924316
    9. '(k' → logprob: -9.766114234924316
    10. ' max' → logprob: -9.766114234924316

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010425841173855588
    2. ',j' → logprob: -10.500103950500488
    3. ' ,' → logprob: -10.625103950500488
    4. ',k' → logprob: -10.750103950500488
    5. ',min' → logprob: -10.875103950500488
    6. ',K' → logprob: -11.750103950500488
    7. '   ' → logprob: -13.250103950500488
    8. 'min' → logprob: -13.375103950500488
    9. 'j' → logprob: -15.500103950500488
    10. 'K' → logprob: -16.125104904174805

Token 158: ' i' (ID: 575)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08469512313604355
    2. 'K' → logprob: -2.9596951007843018
    3. 'j' → logprob: -3.7096951007843018
    4. ' min' → logprob: -5.709695339202881
    5. 'i' → logprob: -6.584695339202881
    6. '   ' → logprob: -9.459694862365723
    7. ' K' → logprob: -10.084694862365723
    8. '	min' → logprob: -10.834694862365723
    9. 'k' → logprob: -12.084694862365723
    10. '  ' → logprob: -12.209694862365723

Token 159: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4061364531517029
    2. '):
' → logprob: -1.5311365127563477
    3. '):' → logprob: -2.7811365127563477
    4. 'if' → logprob: -4.406136512756348
    5. ' if' → logprob: -4.531136512756348
    6. 'j' → logprob: -4.531136512756348
    7. '+j' → logprob: -4.781136512756348
    8. '+k' → logprob: -5.406136512756348
    9. ' +' → logprob: -5.906136512756348
    10. '   ' → logprob: -6.781136512756348

Token 160: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02133491076529026
    2. ' if' → logprob: -3.8963348865509033
    3. 'if' → logprob: -7.646335124969482
    4. ' dp' → logprob: -9.146334648132324
    5. 'dp' → logprob: -10.146334648132324
    6. '           ' → logprob: -10.521334648132324
    7. '                ' → logprob: -10.646334648132324
    8. '<|end|>' → logprob: -10.646334648132324
    9. '   ' → logprob: -10.771334648132324
    10. '                       ' → logprob: -11.021334648132324

Token 161: ' dp' (ID: 21546)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34683164954185486
    2. '                   ' → logprob: -1.5968316793441772
    3. 'if' → logprob: -2.4718315601348877
    4. ' dp' → logprob: -6.096831798553467
    5. '               ' → logprob: -6.221831798553467
    6. 'dp' (adapté à ' dp') → logprob: -7.471831798553467
    7. '   ' → logprob: -7.846831798553467
    8. '                ' → logprob: -8.221831321716309
    9. '           ' → logprob: -8.846831321716309
    10. '                    ' → logprob: -8.846831321716309

Token 162: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011081460979767144
    2. '[j' → logprob: -9.125110626220703
    3. '[k' → logprob: -13.750110626220703
    4. '[' → logprob: -14.500110626220703
    5. 'i' → logprob: -15.750110626220703
    6. '```' → logprob: -17.875110626220703
    7. '_i' → logprob: -18.250110626220703
    8. '][' → logprob: -18.500110626220703
    9. '[I' → logprob: -18.500110626220703
    10. 'ij' → logprob: -18.500110626220703

Token 163: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014795738272368908
    2. '[j' → logprob: -4.264795780181885
    3. '[k' → logprob: -8.264795303344727
    4. ']' → logprob: -9.014795303344727
    5. '[i' → logprob: -9.639795303344727
    6. ' ][' → logprob: -9.639795303344727
    7. '[' → logprob: -10.514795303344727
    8. '-' → logprob: -11.014795303344727
    9. ' -' → logprob: -11.389795303344727
    10. '   ' → logprob: -11.889795303344727

Token 164: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013846398796886206
    2. 'k' → logprob: -6.751384735107422
    3. ' j' → logprob: -8.751384735107422
    4. 'i' → logprob: -10.626384735107422
    5. '   ' → logprob: -11.376384735107422
    6. ' ' → logprob: -12.376384735107422
    7. '[j' → logprob: -12.751384735107422
    8. ']' → logprob: -12.876384735107422
    9. '```' → logprob: -13.251384735107422
    10. '][' → logprob: -13.376384735107422

Token 165: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005798388738185167
    2. ']=' → logprob: -7.500579833984375
    3. ' ]' → logprob: -10.750579833984375
    4. ' =' → logprob: -13.375579833984375
    5. '[' → logprob: -14.000579833984375
    6. ']
' → logprob: -14.875579833984375
    7. ']+=' → logprob: -14.875579833984375
    8. '[j' → logprob: -15.000579833984375
    9. '
' → logprob: -15.250579833984375
    10. '[min' → logprob: -15.375579833984375

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31331339478492737
    2. '=' → logprob: -1.313313364982605
    3. '=min' → logprob: -9.938313484191895
    4. 'min' → logprob: -13.438313484191895
    5. '=
' → logprob: -14.563313484191895
    6. '[' → logprob: -15.438313484191895
    7. ']=' → logprob: -15.563313484191895
    8. '   ' → logprob: -15.938313484191895
    9. '[min' → logprob: -15.938313484191895
    10. '=

' → logprob: -15.938313484191895

Token 167: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.023246292024850845
    2. ' min' → logprob: -3.7732462882995605
    3. '	min' → logprob: -14.398246765136719
    4. 'max' → logprob: -15.898246765136719
    5. ' ' → logprob: -17.27324676513672
    6. 'dp' → logprob: -17.64824676513672
    7. ' ' → logprob: -17.89824676513672
    8. '(min' → logprob: -18.14824676513672
    9. 'mi' → logprob: -18.77324676513672
    10. '_min' → logprob: -18.89824676513672

Token 168: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.000912774819880724
    2. '(' → logprob: -7.000912666320801
    3. '(
' → logprob: -13.6259126663208
    4. 'dp' → logprob: -17.875913619995117
    5. '(

' → logprob: -18.250913619995117
    6. '(d' → logprob: -18.625913619995117
    7. '	dp' → logprob: -18.875913619995117
    8. ' (' → logprob: -19.375913619995117
    9. '(df' → logprob: -19.875913619995117
    10. '(dt' → logprob: -20.625913619995117

Token 169: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -16.75
    3. '[j' → logprob: -16.75
    4. 'dp' → logprob: -17.125
    5. '[k' → logprob: -18.625
    6. '```' → logprob: -19.375
    7. '[
' → logprob: -20.0
    8. '   ' → logprob: -20.375
    9. '(i' → logprob: -20.375
    10. ' [' → logprob: -20.625

Token 170: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002441741817165166
    2. '-' → logprob: -8.375244140625
    3. ' -' → logprob: -12.000244140625
    4. ']' → logprob: -12.875244140625
    5. ' ][' → logprob: -13.125244140625
    6. '   ' → logprob: -14.125244140625
    7. '[j' → logprob: -14.750244140625
    8. '[i' → logprob: -14.875244140625
    9. ']][' → logprob: -15.500244140625
    10. '[' → logprob: -15.500244140625

Token 171: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.013013743795454502
    2. 'k' → logprob: -4.38801383972168
    3. '[j' → logprob: -8.63801383972168
    4. '1' → logprob: -9.13801383972168
    5. '][' → logprob: -9.26301383972168
    6. 'jk' → logprob: -10.13801383972168
    7. '   ' → logprob: -10.88801383972168
    8. '[k' → logprob: -11.01301383972168
    9. ' j' → logprob: -11.76301383972168
    10. '```' → logprob: -11.76301383972168

Token 172: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5773939490318298
    2. ',' → logprob: -0.8273939490318298
    3. 'dp' → logprob: -6.702394008636475
    4. ' ,' → logprob: -9.202393531799316
    5. ']' → logprob: -9.702393531799316
    6. '],
' → logprob: -11.202393531799316
    7. ' dp' → logprob: -11.452393531799316
    8. 'k' → logprob: -11.702393531799316
    9. ' ],' → logprob: -11.827393531799316
    10. '(dp' → logprob: -12.452393531799316

Token 173: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01111903041601181
    2. ' dp' → logprob: -4.5111188888549805
    3. '                   ' → logprob: -10.51111888885498
    4. '	dp' → logprob: -11.13611888885498
    5. '               ' → logprob: -11.38611888885498
    6. '   ' → logprob: -11.38611888885498
    7. '(dp' → logprob: -13.51111888885498
    8. ' ' → logprob: -13.63611888885498
    9. '           ' → logprob: -13.88611888885498
    10. '                       ' → logprob: -14.01111888885498

Token 174: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.632689893245697
    2. '[i' → logprob: -0.757689893245697
    3. 'k' → logprob: -9.757689476013184
    4. 'i' → logprob: -10.882689476013184
    5. '[j' → logprob: -12.257689476013184
    6. '[' → logprob: -12.257689476013184
    7. '[
' → logprob: -13.007689476013184
    8. ' [' → logprob: -14.632689476013184
    9. '```' → logprob: -14.882689476013184
    10. '][' → logprob: -15.257689476013184

Token 175: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005260203033685684
    2. '[j' → logprob: -5.255259990692139
    3. 'j' → logprob: -11.130260467529297
    4. '   ' → logprob: -12.755260467529297
    5. ' ][' → logprob: -13.130260467529297
    6. ']' → logprob: -13.505260467529297
    7. '
' → logprob: -14.005260467529297
    8. '[' → logprob: -14.130260467529297
    9. ',j' → logprob: -14.380260467529297
    10. '```' → logprob: -14.630260467529297

Token 176: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.941850526549388e-06
    2. '   ' → logprob: -12.125007629394531
    3. ' j' → logprob: -13.375007629394531
    4. '[j' → logprob: -14.875007629394531
    5. '	j' → logprob: -15.000007629394531
    6. '
' → logprob: -17.00000762939453
    7. '```' → logprob: -17.12500762939453
    8. '  ' → logprob: -17.25000762939453
    9. '       ' → logprob: -17.37500762939453
    10. ' ' → logprob: -17.75000762939453

Token 177: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.718606891809031e-05
    2. ' -' → logprob: -9.625066757202148
    3. '-
' → logprob: -14.250066757202148
    4. '```' → logprob: -15.250066757202148
    5. ']' → logprob: -15.625066757202148
    6. '1' → logprob: -15.625066757202148
    7. '−' → logprob: -17.50006675720215
    8. '   ' → logprob: -18.12506675720215
    9. '
' → logprob: -18.25006675720215
    10. '[' → logprob: -19.50006675720215

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.125017166137695
    3. '   ' → logprob: -13.250017166137695
    4. '```' → logprob: -16.125017166137695
    5. '           ' → logprob: -16.437517166137695
    6. '  ' → logprob: -16.875017166137695
    7. ']' → logprob: -17.125017166137695
    8. '
' → logprob: -17.187517166137695
    9. '    ' → logprob: -17.312517166137695
    10. '       ' → logprob: -17.375017166137695

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.125006675720215
    3. '   ' → logprob: -15.312506675720215
    4. ']' → logprob: -15.937506675720215
    5. '```' → logprob: -16.1250057220459
    6. ')' → logprob: -16.4375057220459
    7. '2' → logprob: -16.6250057220459
    8. '
' → logprob: -16.8125057220459
    9. '11' → logprob: -17.3125057220459
    10. '}' → logprob: -17.3750057220459

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10742522031068802
    2. '+' → logprob: -2.4824252128601074
    3. ' +' → logprob: -4.107425212860107
    4. ']+' → logprob: -6.857425212860107
    5. ')' → logprob: -7.357425212860107
    6. ' ]' → logprob: -9.232425689697266
    7. '   ' → logprob: -10.732425689697266
    8. '])' → logprob: -11.232425689697266
    9. '}' → logprob: -11.732425689697266
    10. '```' → logprob: -12.107425689697266

Token 181: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.313296914100647
    2. ' +' → logprob: -1.313296914100647
    3. ')' → logprob: -11.438297271728516
    4. ' ' → logprob: -11.563297271728516
    5. '   ' → logprob: -12.438297271728516
    6. '+
' → logprob: -12.813297271728516
    7. '```' → logprob: -13.938297271728516
    8. ')+' → logprob: -14.063297271728516
    9. 'abs' → logprob: -14.313297271728516
    10. ' +
' → logprob: -14.563297271728516

Token 182: ' max' (ID: 2999)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -9.007317567011341e-05
    2. ' abs' → logprob: -9.625089645385742
    3. '(abs' → logprob: -11.000089645385742
    4. 'H' → logprob: -12.750089645385742
    5. 'max' → logprob: -13.500089645385742
    6. '   ' → logprob: -14.250089645385742
    7. '
' → logprob: -14.500089645385742
    8. 'K' → logprob: -14.750089645385742
    9. 'pow' → logprob: -15.125089645385742
    10. '(H' → logprob: -15.125089645385742

Token 183: '(' (ID: 7)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.07254330813884735
    2. '(' → logprob: -2.6975433826446533
    3. '(H' → logprob: -6.197543144226074
    4. 'abs' → logprob: -7.697543144226074
    5. '(
' → logprob: -9.572543144226074
    6. '0' → logprob: -10.947543144226074
    7. ' abs' → logprob: -11.572543144226074
    8. '(

' → logprob: -11.697543144226074
    9. '_abs' → logprob: -12.822543144226074
    10. ' (' → logprob: -13.072543144226074

Token 184: '0' (ID: 15)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.38923338055610657
    2. '(H' → logprob: -1.6392333507537842
    3. '(' → logprob: -2.514233350753784
    4. 'abs' → logprob: -3.264233350753784
    5. '0' → logprob: -5.014233589172363
    6. 'H' → logprob: -7.139233589172363
    7. '(max' → logprob: -7.264233589172363
    8. '(
' → logprob: -7.764233589172363
    9. '([' → logprob: -8.389233589172363
    10. ' abs' → logprob: -9.139233589172363

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048644188791513443
    2. ',H' → logprob: -7.750486373901367
    3. ' ,' → logprob: -9.875486373901367
    4. 'H' → logprob: -12.750486373901367
    5. ',
' → logprob: -14.250486373901367
    6. ' H' → logprob: -14.500486373901367
    7. ' if' → logprob: -17.125486373901367
    8. 'abs' → logprob: -17.125486373901367
    9. '

' → logprob: -17.500486373901367
    10. ' ' → logprob: -17.625486373901367

Token 186: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.011069637723267078
    2. ' H' → logprob: -4.5110697746276855
    3. ' ' → logprob: -12.011069297790527
    4. '   ' → logprob: -12.261069297790527
    5. 'abs' → logprob: -12.386069297790527
    6. '(H' → logprob: -12.886069297790527
    7. '  ' → logprob: -13.636069297790527
    8. ')' → logprob: -14.136069297790527
    9. ' abs' → logprob: -14.261069297790527
    10. '	H' → logprob: -14.761069297790527

Token 187: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.888114098226652e-05
    2. '[k' → logprob: -9.375088691711426
    3. 'i' → logprob: -13.250088691711426
    4. '[' → logprob: -13.500088691711426
    5. '[j' → logprob: -14.125088691711426
    6. 'k' → logprob: -16.500089645385742
    7. ' [' → logprob: -17.250089645385742
    8. '[I' → logprob: -17.500089645385742
    9. '(i' → logprob: -18.125089645385742
    10. '```' → logprob: -18.125089645385742

Token 188: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02213488705456257
    2. ']-' → logprob: -3.897134780883789
    3. '-' → logprob: -6.522134780883789
    4. ' -' → logprob: -9.272134780883789
    5. ' ]' → logprob: -11.147134780883789
    6. '[k' → logprob: -12.397134780883789
    7. '[' → logprob: -12.522134780883789
    8. 'k' → logprob: -13.772134780883789
    9. '-k' → logprob: -13.772134780883789
    10. ']
' → logprob: -14.522134780883789

Token 189: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6934014558792114
    2. ' -' → logprob: -0.6934014558792114
    3. '-H' → logprob: -8.443401336669922
    4. ' ' → logprob: -10.818401336669922
    5. ']' → logprob: -11.318401336669922
    6. ')' → logprob: -12.693401336669922
    7. ' ' → logprob: -14.443401336669922
    8. '-
' → logprob: -14.568401336669922
    9. ']-' → logprob: -14.568401336669922
    10. '	' → logprob: -14.818401336669922

Token 190: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0007102862582542002
    2. ' H' → logprob: -7.250710487365723
    3. ' ' → logprob: -15.625710487365723
    4. '	H' → logprob: -16.875709533691406
    5. '   ' → logprob: -17.000709533691406
    6. ')' → logprob: -17.000709533691406
    7. '  ' → logprob: -17.625709533691406
    8. 'h' → logprob: -18.250709533691406
    9. 'max' → logprob: -18.375709533691406
    10. '
' → logprob: -18.500709533691406

Token 191: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.000912774819880724
    2. 'k' → logprob: -7.000912666320801
    3. '[' → logprob: -14.5009126663208
    4. '[i' → logprob: -14.7509126663208
    5. '[j' → logprob: -16.125913619995117
    6. '	k' → logprob: -16.500913619995117
    7. '{k' → logprob: -17.375913619995117
    8. ' [' → logprob: -17.500913619995117
    9. '
' → logprob: -17.625913619995117
    10. '(k' → logprob: -17.750913619995117

Token 192: ']))

' (ID: 92947)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.002028923248872161
    2. '])' → logprob: -6.502028942108154
    3. ']))
' → logprob: -9.002028465270996
    4. ']' → logprob: -9.002028465270996
    5. '))' → logprob: -9.252028465270996
    6. ')))' → logprob: -9.502028465270996
    7. ')])' → logprob: -9.877028465270996
    8. '])))' → logprob: -10.377028465270996
    9. ')' → logprob: -11.502028465270996
    10. ')]' → logprob: -12.002028465270996

Token 193: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9239068031311035
    2. 'answer' → logprob: -1.5489068031311035
    3. 'ans' (adapté à ' ans') → logprob: -1.9239068031311035
    4. 'for' → logprob: -2.2989068031311035
    5. 'result' → logprob: -2.2989068031311035
    6. 'res' → logprob: -3.7989068031311035
    7. '   ' → logprob: -4.2989068031311035
    8. 'if' → logprob: -6.1739068031311035
    9. 'min' → logprob: -6.1739068031311035
    10. 'max' → logprob: -6.5489068031311035

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020810576155781746
    2. '=' → logprob: -3.895810604095459
    3. '[' → logprob: -8.6458101272583
    4. ' ' → logprob: -9.7708101272583
    5. '_' → logprob: -11.0208101272583
    6. ',' → logprob: -12.0208101272583
    7. '.' → logprob: -12.6458101272583
    8. ':' → logprob: -13.2708101272583
    9. ')' → logprob: -13.2708101272583
    10. '  ' → logprob: -13.2708101272583

Token 196: ' INF' (ID: 69196)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2850007712841034
    2. 'min' → logprob: -1.5350008010864258
    3. 'INF' → logprob: -4.160000801086426
    4. ' dp' → logprob: -4.785000801086426
    5. ' min' → logprob: -5.160000801086426
    6. 'max' → logprob: -6.660000801086426
    7. '0' → logprob: -7.910000801086426
    8. 'float' → logprob: -8.035000801086426
    9. ' INF' → logprob: -8.285000801086426
    10. 'inf' → logprob: -8.410000801086426

Token 197: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16674265265464783
    2. 'for' → logprob: -2.5417425632476807
    3. '   ' → logprob: -2.9167425632476807
    4. ' for' → logprob: -4.16674280166626
    5. '    
' → logprob: -5.79174280166626
    6. 'print' → logprob: -7.66674280166626
    7. '\n' → logprob: -7.79174280166626
    8. ' 
' → logprob: -8.041742324829102
    9. '  
' → logprob: -8.541742324829102
    10. '
' → logprob: -9.166742324829102

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05916493386030197
    2. 'for' → logprob: -3.4341650009155273
    3. ' for' → logprob: -3.6841650009155273
    4. '	for' → logprob: -9.934165000915527
    5. '    
' → logprob: -11.184165000915527
    6. '<|end|>' → logprob: -11.559165000915527
    7. '
' → logprob: -12.809165000915527
    8. '```' → logprob: -13.934165000915527
    9. ' ' → logprob: -14.434165000915527
    10. '  ' → logprob: -14.434165000915527

Token 199: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.039174795150756836
    2. '   ' → logprob: -3.289174795150757
    3. ' for' → logprob: -6.789175033569336
    4. '	for' → logprob: -11.914175033569336
    5. '    
' → logprob: -16.164175033569336
    6. ' ' → logprob: -17.914175033569336
    7. '```' → logprob: -18.039175033569336
    8. '  ' → logprob: -18.289175033569336
    9. '       ' → logprob: -18.789175033569336
    10. '
' → logprob: -19.539175033569336

Token 200: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2013792246580124
    2. 'i' → logprob: -1.8263791799545288
    3. ' j' → logprob: -4.076379299163818
    4. ' i' → logprob: -5.451379299163818
    5. 'k' → logprob: -9.45137882232666
    6. 'x' → logprob: -10.95137882232666
    7. 'length' → logprob: -11.45137882232666
    8. ' ' → logprob: -11.82637882232666
    9. '   ' → logprob: -12.32637882232666
    10. ' length' → logprob: -12.45137882232666

Token 201: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4742375910282135
    2. ' in' → logprob: -0.9742375612258911
    3. '   ' → logprob: -9.349237442016602
    4. ' ' → logprob: -10.599237442016602
    5. ',' → logprob: -10.974237442016602
    6. '```' → logprob: -12.099237442016602
    7. 'range' → logprob: -12.224237442016602
    8. '  ' → logprob: -12.224237442016602
    9. 'i' → logprob: -12.974237442016602
    10. '	in' → logprob: -13.099237442016602

Token 202: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0789048820734024
    2. ' range' → logprob: -2.578904867172241
    3. ' ' → logprob: -12.20390510559082
    4. '   ' → logprob: -12.20390510559082
    5. '(range' → logprob: -12.57890510559082
    6. '  ' → logprob: -13.70390510559082
    7. '
' → logprob: -15.95390510559082
    8. '	range' → logprob: -16.07890510559082
    9. '    ' → logprob: -16.45390510559082
    10. '(' → logprob: -16.70390510559082

Token 203: '(' (ID: 7)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.11403004080057144
    2. '(N' → logprob: -2.864030122756958
    3. '(' → logprob: -2.989030122756958
    4. '(k' → logprob: -8.614029884338379
    5. 'K' → logprob: -8.864029884338379
    6. '1' → logprob: -11.114029884338379
    7. ' (' → logprob: -11.489029884338379
    8. '(n' → logprob: -11.864029884338379
    9. '(i' → logprob: -11.989029884338379
    10. 'N' → logprob: -11.989029884338379

Token 204: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.247786745429039
    2. 'N' → logprob: -1.9977867603302002
    3. '1' → logprob: -2.4977867603302
    4. ' K' → logprob: -7.122786521911621
    5. 'max' → logprob: -8.247786521911621
    6. '   ' → logprob: -9.247786521911621
    7. ' N' → logprob: -9.247786521911621
    8. ' ' → logprob: -9.247786521911621
    9. '0' → logprob: -9.997786521911621
    10. '(' → logprob: -10.122786521911621

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005985465249978006
    2. ' ,' → logprob: -7.750598430633545
    3. ',N' → logprob: -8.875598907470703
    4. ',K' → logprob: -11.375598907470703
    5. 'N' → logprob: -11.875598907470703
    6. '   ' → logprob: -12.375598907470703
    7. ' ' → logprob: -13.500598907470703
    8. 'K' → logprob: -13.625598907470703
    9. ' N' → logprob: -14.250598907470703
    10. '(N' → logprob: -14.625598907470703

Token 206: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5239255428314209
    2. 'K' → logprob: -0.8989255428314209
    3. ' K' → logprob: -7.89892578125
    4. ' N' → logprob: -8.02392578125
    5. '   ' → logprob: -9.27392578125
    6. '  ' → logprob: -12.39892578125
    7. ' ' → logprob: -13.02392578125
    8. '    ' → logprob: -14.27392578125
    9. '(N' → logprob: -14.52392578125
    10. 'len' → logprob: -14.77392578125

Token 207: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04871102422475815
    2. ' +' → logprob: -3.048711061477661
    3. ',' → logprob: -9.173710823059082
    4. '   ' → logprob: -11.673710823059082
    5. '-' → logprob: -12.798710823059082
    6. ' -' → logprob: -13.298710823059082
    7. ' ,' → logprob: -13.298710823059082
    8. '
' → logprob: -13.673710823059082
    9. '+
' → logprob: -13.673710823059082
    10. '+,' → logprob: -14.423710823059082

Token 208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018119137967005372
    2. ' ' → logprob: -6.501811981201172
    3. 'K' → logprob: -8.626811981201172
    4. '+' → logprob: -9.501811981201172
    5. ' K' → logprob: -10.251811981201172
    6. '   ' → logprob: -11.751811981201172
    7. 'N' → logprob: -12.126811981201172
    8. '(K' → logprob: -13.001811981201172
    9. '2' → logprob: -13.876811981201172
    10. '(' → logprob: -14.126811981201172

Token 209: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.013188816606998444
    2. 'N' → logprob: -4.51318883895874
    3. '+' → logprob: -6.26318883895874
    4. ' K' → logprob: -9.263188362121582
    5. '1' → logprob: -10.013188362121582
    6. '   ' → logprob: -10.263188362121582
    7. '(N' → logprob: -11.138188362121582
    8. '(K' → logprob: -11.388188362121582
    9. ' +' → logprob: -11.513188362121582
    10. '
' → logprob: -11.763188362121582

Token 210: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.388705313205719
    2. '):
' → logprob: -1.1387052536010742
    3. ':' → logprob: -6.763705253601074
    4. '+' → logprob: -8.263705253601074
    5. ',' → logprob: -8.388705253601074
    6. '   ' → logprob: -8.888705253601074
    7. ':
' → logprob: -10.388705253601074
    8. '):
' → logprob: -11.638705253601074
    9. ')' → logprob: -12.013705253601074
    10. ' ):' → logprob: -13.138705253601074

Token 211: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16077229380607605
    2. '       ' → logprob: -1.9107723236083984
    3. ' if' → logprob: -8.285772323608398
    4. '<|end|>' → logprob: -8.410772323608398
    5. '```' → logprob: -10.910772323608398
    6. '	ans' → logprob: -11.160772323608398
    7. 'if' → logprob: -11.410772323608398
    8. '	if' → logprob: -11.910772323608398
    9. ' ans' → logprob: -12.660772323608398
    10. '<|end|>' → logprob: -12.660772323608398

Token 212: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8682870268821716
    2. 'ans' (adapté à ' ans') → logprob: -0.9932870268821716
    3. '   ' → logprob: -1.7432870864868164
    4. 'for' → logprob: -4.118287086486816
    5. ' ans' → logprob: -4.618287086486816
    6. ' if' → logprob: -4.868287086486816
    7. ' for' → logprob: -7.743287086486816
    8. ' ' → logprob: -8.243287086486816
    9. '	ans' → logprob: -8.368287086486816
    10. 'answer' → logprob: -8.868287086486816

Token 213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04862881079316139
    2. ' =' → logprob: -3.048628807067871
    3. '=min' → logprob: -10.173628807067871
    4. '=
' → logprob: -14.048628807067871
    5. '<' → logprob: -14.423628807067871
    6. '=max' → logprob: -14.798628807067871
    7. '>' → logprob: -14.798628807067871
    8. '<=' → logprob: -15.173628807067871
    9. '.=' → logprob: -15.173628807067871
    10. '   ' → logprob: -16.298629760742188

Token 214: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.12692853808403015
    2. 'min' → logprob: -2.1269285678863525
    3. '=min' → logprob: -16.626928329467773
    4. '	min' → logprob: -16.876928329467773
    5. ' dp' → logprob: -17.001928329467773
    6. ' ' → logprob: -17.001928329467773
    7. 'dp' → logprob: -17.251928329467773
    8. '(min' → logprob: -17.501928329467773
    9. 'max' → logprob: -18.126928329467773
    10. ' max' → logprob: -18.251928329467773

Token 215: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0012367760064080358
    2. '(dp' → logprob: -6.751236915588379
    3. '(' → logprob: -9.626236915588379
    4. '(min' → logprob: -15.626236915588379
    5. '(answer' → logprob: -16.001235961914062
    6. '(an' → logprob: -16.376235961914062
    7. 'ans' → logprob: -16.626235961914062
    8. '(
' → logprob: -17.626235961914062
    9. 'dp' → logprob: -17.626235961914062
    10. '(arr' → logprob: -17.876235961914062

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009296870557591319
    2. '(dp' → logprob: -7.125929832458496
    3. '(ans' → logprob: -9.625929832458496
    4. ' ,' → logprob: -9.875929832458496
    5. '(' → logprob: -12.125929832458496
    6. ')' → logprob: -14.375929832458496
    7. 'dp' → logprob: -14.875929832458496
    8. ' ans' → logprob: -15.250929832458496
    9. 'ans' → logprob: -15.750929832458496
    10. ' (' → logprob: -16.12592887878418

Token 217: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003604105906561017
    2. ' dp' → logprob: -5.628603935241699
    3. '   ' → logprob: -12.7536039352417
    4. '	dp' → logprob: -13.8786039352417
    5. '(dp' → logprob: -16.628604888916016
    6. '       ' → logprob: -17.253604888916016
    7. ' ' → logprob: -17.253604888916016
    8. '    ' → logprob: -17.378604888916016
    9. '  ' → logprob: -18.378604888916016
    10. ')' → logprob: -18.628604888916016

Token 218: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00673218397423625
    2. '[N' → logprob: -5.006731986999512
    3. '[' → logprob: -11.131731986999512
    4. '[n' → logprob: -14.131731986999512
    5. '```' → logprob: -14.631731986999512
    6. 'i' → logprob: -14.756731986999512
    7. '[-' → logprob: -15.631731986999512
    8. ' [' → logprob: -15.756731986999512
    9. '   ' → logprob: -15.881731986999512
    10. '[j' → logprob: -16.006732940673828

Token 219: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007351755630224943
    2. '[K' → logprob: -5.007351875305176
    3. ']' → logprob: -8.632351875305176
    4. '[N' → logprob: -8.882351875305176
    5. '[' → logprob: -9.382351875305176
    6. '   ' → logprob: -10.132351875305176
    7. 'K' → logprob: -10.132351875305176
    8. ' ][' → logprob: -10.132351875305176
    9. ')[' → logprob: -10.507351875305176
    10. '][-' → logprob: -11.007351875305176

Token 220: 'N' (ID: 45)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.652451464906335e-05
    2. '   ' → logprob: -11.125016212463379
    3. ' K' → logprob: -14.375016212463379
    4. ' ' → logprob: -14.625016212463379
    5. 'i' → logprob: -15.000016212463379
    6. '  ' → logprob: -15.500016212463379
    7. 'N' → logprob: -17.125017166137695
    8. '       ' → logprob: -17.250017166137695
    9. '
' → logprob: -17.750017166137695
    10. '    ' → logprob: -18.000017166137695

Token 221: ' -' (ID: 533)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.020005926489830017
    2. '][' → logprob: -4.395005702972412
    3. ']' → logprob: -5.520005702972412
    4. '-' → logprob: -5.895005702972412
    5. '])
' → logprob: -8.64500617980957
    6. ')' → logprob: -9.02000617980957
    7. '-K' → logprob: -9.27000617980957
    8. ' -' → logprob: -9.52000617980957
    9. '],' → logprob: -10.02000617980957
    10. '+' → logprob: -10.14500617980957

Token 222: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.009161989204585552
    2. '1' → logprob: -4.884161949157715
    3. 'i' → logprob: -7.134161949157715
    4. ' K' → logprob: -7.509161949157715
    5. '   ' → logprob: -9.634161949157715
    6. '(' → logprob: -10.259161949157715
    7. '(K' → logprob: -10.509161949157715
    8. '(i' → logprob: -10.759161949157715
    9. 'j' → logprob: -10.884161949157715
    10. ' ' → logprob: -11.259161949157715

Token 223: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.006215893663465977
    2. ']' → logprob: -5.631216049194336
    3. '+' → logprob: -6.256216049194336
    4. ')' → logprob: -7.631216049194336
    5. ')])' → logprob: -9.756216049194336
    6. '])
' → logprob: -10.006216049194336
    7. ']+' → logprob: -10.506216049194336
    8. '-' → logprob: -10.756216049194336
    9. ' ])' → logprob: -11.131216049194336
    10. ' +' → logprob: -11.506216049194336

Token 224: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018413417041301727
    2. '   ' → logprob: -4.268413543701172
    3. ' print' → logprob: -5.643413543701172
    4. '
' → logprob: -7.518413543701172
    5. '```' → logprob: -10.018413543701172
    6. 'return' → logprob: -10.143413543701172
    7. ' 
' → logprob: -10.768413543701172
    8. '    
' → logprob: -11.018413543701172
    9. '	print' → logprob: -11.643413543701172
    10. ')' → logprob: -11.643413543701172

Token 225: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5895190834999084
    2. '   ' → logprob: -0.8395190834999084
    3. '
' → logprob: -4.464519023895264
    4. ' print' → logprob: -7.464519023895264
    5. '    
' → logprob: -7.464519023895264
    6. 'return' → logprob: -7.839519023895264
    7. '```' → logprob: -8.214519500732422
    8. ' 
' → logprob: -10.214519500732422
    9. ')' → logprob: -10.464519500732422
    10. '	print' → logprob: -10.589519500732422

Token 226: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00023846338444855064
    2. '(' → logprob: -8.375238418579102
    3. '(int' → logprob: -12.000238418579102
    4. '(
' → logprob: -14.500238418579102
    5. 'ans' → logprob: -14.625238418579102
    6. ' (' → logprob: -15.375238418579102
    7. '(answer' → logprob: -15.500238418579102
    8. '()' → logprob: -15.750238418579102
    9. '(abs' → logprob: -16.1252384185791
    10. '((' → logprob: -17.5002384185791

Token 227: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.822646693966817e-06
    2. ' )' → logprob: -12.250007629394531
    3. ')
' → logprob: -12.750007629394531
    4. '+' → logprob: -16.87500762939453
    5. ')`' → logprob: -17.00000762939453
    6. '))' → logprob: -18.25000762939453
    7. '()' → logprob: -18.37500762939453
    8. '())' → logprob: -18.62500762939453
    9. '`)' → logprob: -18.75000762939453
    10. '）' → logprob: -18.75000762939453

Token 228: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010005275718867779
    2. 'main' → logprob: -4.635005474090576
    3. '<|end|>' → logprob: -9.385004997253418
    4. '```' → logprob: -9.885004997253418
    5. ' if' → logprob: -10.010004997253418
    6. '
' → logprob: -10.510004997253418
    7. '\n' → logprob: -11.635004997253418
    8. '#' → logprob: -11.760004997253418
    9. '  
' → logprob: -12.385004997253418
    10. ' main' → logprob: -12.510004997253418

Token 229: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005274668801575899
    2. '__' → logprob: -5.255274772644043
    3. ' ' → logprob: -10.255274772644043
    4. '_' → logprob: -12.505274772644043
    5. ' _' → logprob: -14.255274772644043
    6. ' ' → logprob: -15.255274772644043
    7. '_name' → logprob: -15.380274772644043
    8. ' ' → logprob: -15.505274772644043
    9. '___' → logprob: -15.630274772644043
    10. ' ___' → logprob: -15.630274772644043

Token 230: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.24933353066444397
    2. '__' → logprob: -1.7493335008621216
    3. '==' → logprob: -3.374333620071411
    4. ' __' → logprob: -4.749333381652832
    5. '.__' → logprob: -5.999333381652832
    6. ' .' → logprob: -8.249333381652832
    7. '=="' → logprob: -8.249333381652832
    8. 'name' → logprob: -8.499333381652832
    9. '__.__' → logprob: -8.874333381652832
    10. ' =="' → logprob: -9.124333381652832

Token 231: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.282920129597187e-05
    2. '__.__' → logprob: -11.875012397766113
    3. '==' → logprob: -12.500012397766113
    4. '__.' → logprob: -13.625012397766113
    5. '_' → logprob: -14.500012397766113
    6. '___' → logprob: -15.750012397766113
    7. ' ==' → logprob: -16.00001335144043
    8. '__
' → logprob: -16.12501335144043
    9. '____' → logprob: -16.75001335144043
    10. ' __' → logprob: -17.25001335144043

Token 232: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3885694444179535
    2. '==' → logprob: -1.3885694742202759
    3. '__' → logprob: -2.6385693550109863
    4. '=="' → logprob: -7.138569355010986
    5. '=='' → logprob: -9.138569831848145
    6. '=' → logprob: -9.388569831848145
    7. '.__' → logprob: -10.513569831848145
    8. '_' → logprob: -11.263569831848145
    9. ' ' → logprob: -11.388569831848145
    10. '==
' → logprob: -11.513569831848145

Token 233: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31345638632774353
    2. ''' → logprob: -1.313456416130066
    3. ' "__' → logprob: -8.938456535339355
    4. '__' → logprob: -10.063456535339355
    5. ' '__' → logprob: -10.813456535339355
    6. ''"' → logprob: -15.813456535339355
    7. '"user' → logprob: -16.18845558166504
    8. ' ' → logprob: -16.56345558166504
    9. '('__' → logprob: -16.81345558166504
    10. '("__' → logprob: -17.43845558166504

Token 234: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00010783452307805419
    2. '__' → logprob: -9.625107765197754
    3. 'name' → logprob: -10.125107765197754
    4. '_main' → logprob: -14.375107765197754
    5. 'ma' → logprob: -14.500107765197754
    6. 'm' → logprob: -15.250107765197754
    7. ' main' → logprob: -16.12510871887207
    8. '"' → logprob: -16.12510871887207
    9. '-main' → logprob: -17.37510871887207
    10. '   ' → logprob: -17.75010871887207

Token 235: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.005268618930131197
    2. '__' → logprob: -5.255268573760986
    3. '':' → logprob: -11.005269050598145
    4. '__":
' → logprob: -11.755269050598145
    5. '__:' → logprob: -12.005269050598145
    6. ':' → logprob: -13.005269050598145
    7. '_' → logprob: -14.255269050598145
    8. '':
' → logprob: -14.380269050598145
    9. '():
' → logprob: -15.630269050598145
    10. '()' → logprob: -15.755269050598145

Token 236: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05837778002023697
    2. 'main' → logprob: -3.558377742767334
    3. '   ' → logprob: -3.683377742767334
    4. '	main' → logprob: -5.808377742767334
    5. '(main' → logprob: -9.683378219604492
    6. '    
' → logprob: -11.808378219604492
    7. '_main' → logprob: -12.058378219604492
    8. '.main' → logprob: -13.808378219604492
    9. ' ' → logprob: -14.308378219604492
    10. '```' → logprob: -14.308378219604492

Token 237: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.869017852295656e-06
    2. ' main' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.750006675720215
    4. '	main' → logprob: -15.625006675720215
    5. '_main' → logprob: -21.25000762939453
    6. '(main' → logprob: -21.50000762939453
    7. '.main' → logprob: -22.50000762939453
    8. '  ' → logprob: -22.62500762939453
    9. ' ' → logprob: -23.12500762939453
    10. 'Main' → logprob: -24.25000762939453

Token 238: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 236
Tokens correctement prédits (1ère position, stricte): 114
Tokens correctement prédits (1ère position, avec adaptation): 119
Tokens correctement prédits (top 10): 208
Précision stricte (1ère position): 48.31%
Précision adaptée (1ère position): 50.42%
Précision (top 10): 88.14%
================================================================================
