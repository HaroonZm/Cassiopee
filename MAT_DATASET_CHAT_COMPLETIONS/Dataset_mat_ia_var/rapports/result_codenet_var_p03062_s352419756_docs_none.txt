================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = list(map(int, input().split()))
s = 1
for i in A:
    if i < 0:
        s *= -1
Aabs = list(map(abs, A))
if s == 1:
    print(sum(Aabs))
else:
    print(sum(Aabs) - 2 * min(Aabs))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00035786881926469505
    2. '('' → logprob: -8.750357627868652
    3. '(N' → logprob: -9.125357627868652
    4. ''' → logprob: -11.000357627868652
    5. '(input' → logprob: -11.125357627868652
    6. '(
' → logprob: -11.250357627868652
    7. '()' → logprob: -11.375357627868652
    8. '("("' → logprob: -11.375357627868652
    9. '```' → logprob: -12.125357627868652
    10. '(`' → logprob: -12.375357627868652

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4827296733856201
    2. ')' → logprob: -0.9827296733856201
    3. '()' → logprob: -5.107729911804199
    4. '())' → logprob: -6.732729911804199
    5. '(
' → logprob: -7.732729911804199
    6. '```' → logprob: -8.7327299118042
    7. '))' → logprob: -9.1077299118042
    8. '")' → logprob: -9.3577299118042
    9. '')' → logprob: -9.4827299118042
    10. '(

' → logprob: -9.9827299118042

Token 5: 'A' (ID: 32)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8439445495605469
    2. 'for' → logprob: -1.8439445495605469
    3. 'a' → logprob: -2.093944549560547
    4. 's' → logprob: -2.218944549560547
    5. '*' → logprob: -2.593944549560547
    6. ''' → logprob: -2.843944549560547
    7. ')' → logprob: -3.218944549560547
    8. 'x' → logprob: -3.218944549560547
    9. 'i' → logprob: -3.218944549560547
    10. '#' → logprob: -3.218944549560547

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009019309654831886
    2. '\[' → logprob: -8.37590217590332
    3. '[]' → logprob: -8.50090217590332
    4. '.' → logprob: -9.25090217590332
    5. '[i' → logprob: -9.37590217590332
    6. '[A' → logprob: -9.37590217590332
    7. '[:]' → logprob: -10.12590217590332
    8. ')' → logprob: -10.25090217590332
    9. '+' → logprob: -10.75090217590332
    10. '=' → logprob: -11.12590217590332

Token 7: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.45398780703544617
    2. 'list' → logprob: -1.7039878368377686
    3. ' []' → logprob: -1.9539878368377686
    4. '[]' → logprob: -3.5789878368377686
    5. ' [' → logprob: -4.5789875984191895
    6. '[' → logprob: -6.9539875984191895
    7. '[input' → logprob: -7.3289875984191895
    8. '[int' → logprob: -7.7039875984191895
    9. ' input' → logprob: -7.8289875984191895
    10. 'input' → logprob: -7.8289875984191895

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008574268780648708
    2. '(range' → logprob: -5.258574485778809
    3. '[' → logprob: -6.258574485778809
    4. '[(' → logprob: -7.508574485778809
    5. '```' → logprob: -7.758574485778809
    6. ')' → logprob: -8.883574485778809
    7. '[int' → logprob: -9.258574485778809
    8. '(
' → logprob: -10.383574485778809
    9. ' (' → logprob: -10.508574485778809
    10. ''s' → logprob: -10.758574485778809

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.34779542684555054
    2. '(' → logprob: -1.3477954864501953
    3. '(input' → logprob: -4.097795486450195
    4. '(str' → logprob: -4.222795486450195
    5. '(lambda' → logprob: -6.347795486450195
    6. '(
' → logprob: -8.597795486450195
    7. ')' → logprob: -9.097795486450195
    8. '```' → logprob: -9.222795486450195
    9. '<int' → logprob: -9.347795486450195
    10. '(eval' → logprob: -9.347795486450195

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0029558276291936636
    2. '(' → logprob: -6.127955913543701
    3. ',input' → logprob: -8.377955436706543
    4. '))' → logprob: -8.377955436706543
    5. ')' → logprob: -8.752955436706543
    6. 'input' → logprob: -10.252955436706543
    7. '=input' → logprob: -10.377955436706543
    8. '(int' → logprob: -11.252955436706543
    9. '<input' → logprob: -11.377955436706543
    10. ',' → logprob: -11.627955436706543

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014428500086069107
    2. ' input' → logprob: -4.264428615570068
    3. '(input' → logprob: -8.26442813873291
    4. ',input' → logprob: -12.51442813873291
    5. ')' → logprob: -13.01442813873291
    6. '=input' → logprob: -14.38942813873291
    7. '<input' → logprob: -14.76442813873291
    8. '```' → logprob: -15.51442813873291
    9. '(' → logprob: -16.014429092407227
    10. '	input' → logprob: -16.139429092407227

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6675287485122681
    2. '()' → logprob: -0.9175287485122681
    3. '())' → logprob: -2.9175286293029785
    4. '().' → logprob: -3.5425286293029785
    5. '()));' → logprob: -6.1675286293029785
    6. '())))' → logprob: -7.2925286293029785
    7. '()>' → logprob: -7.7925286293029785
    8. '(' → logprob: -7.7925286293029785
    9. '))' → logprob: -8.667529106140137
    10. '()`' → logprob: -8.792529106140137

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00013655527436640114
    2. 'strip' → logprob: -9.000136375427246
    3. 'rstrip' → logprob: -11.375136375427246
    4. ' split' → logprob: -13.500136375427246
    5. '(split' → logprob: -16.000137329101562
    6. 'spl' → logprob: -17.000137329101562
    7. ')' → logprob: -17.375137329101562
    8. '.split' → logprob: -19.750137329101562
    9. 'replace' → logprob: -19.875137329101562
    10. 'startswith' → logprob: -20.125137329101562

Token 14: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.8088805079460144
    2. '))' → logprob: -0.9338805079460144
    3. ')' → logprob: -2.433880567550659
    4. '())' → logprob: -2.808880567550659
    5. '(' → logprob: -4.80888032913208
    6. '()' → logprob: -5.43388032913208
    7. ')))' → logprob: -7.68388032913208
    8. '('' → logprob: -7.93388032913208
    9. '())))' → logprob: -8.808880805969238
    10. ''))' → logprob: -9.683880805969238

Token 15: 's' (ID: 82)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5616421103477478
    2. 's' → logprob: -1.4366421699523926
    3. 'sum' → logprob: -3.6866421699523926
    4. 'count' → logprob: -3.8116421699523926
    5. 'a' → logprob: -4.061642169952393
    6. 'c' → logprob: -4.061642169952393
    7. 'd' → logprob: -4.186642169952393
    8. 'max' → logprob: -4.186642169952393
    9. 'dp' → logprob: -4.186642169952393
    10. 'for' → logprob: -4.561642169952393

Token 16: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.41745179891586304
    2. 'um' → logprob: -1.1674518585205078
    3. '.' → logprob: -4.167451858520508
    4. '=' → logprob: -5.417451858520508
    5. ' =' → logprob: -5.667451858520508
    6. '[u' → logprob: -6.167451858520508
    7. '_u' → logprob: -6.292451858520508
    8. '_' → logprob: -7.667451858520508
    9. '.u' → logprob: -8.042451858520508
    10. '(' → logprob: -8.292451858520508

Token 17: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2795577645301819
    2. ' ' → logprob: -1.779557704925537
    3. 'sum' → logprob: -2.904557704925537
    4. ' sum' → logprob: -3.904557704925537
    5. 'um' → logprob: -9.529558181762695
    6. '"' → logprob: -10.029558181762695
    7. ' A' → logprob: -10.029558181762695
    8. 'A' → logprob: -11.529558181762695
    9. ' set' → logprob: -11.779558181762695
    10. 's' → logprob: -11.779558181762695

Token 18: '1' (ID: 16)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3134002387523651
    2. '0' → logprob: -1.3134002685546875
    3. 'max' → logprob: -10.188400268554688
    4. 'set' → logprob: -10.313400268554688
    5. '[]' → logprob: -11.063400268554688
    6. ' sum' → logprob: -11.688400268554688
    7. '"' → logprob: -11.688400268554688
    8. '1' → logprob: -12.063400268554688
    9. '""' → logprob: -12.438400268554688
    10. '(sum' → logprob: -12.563400268554688

Token 19: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0477217435836792
    2. 'for' → logprob: -1.4227217435836792
    3. '0' → logprob: -1.7977217435836792
    4. ' for' → logprob: -2.0477218627929688
    5. '*' → logprob: -2.9227218627929688
    6. ' ' → logprob: -3.5477218627929688
    7. '
' → logprob: -5.172721862792969
    8. ',' → logprob: -5.297721862792969
    9. '<|end|>' → logprob: -5.672721862792969
    10. ')' → logprob: -6.172721862792969

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005543439765460789
    2. ' for' → logprob: -8.500554084777832
    3. '+' → logprob: -8.625554084777832
    4. '*' → logprob: -9.250554084777832
    5. '```' → logprob: -10.625554084777832
    6. '0' → logprob: -10.750554084777832
    7. '
' → logprob: -11.625554084777832
    8. 'd' → logprob: -12.375554084777832
    9. 'i' → logprob: -12.750554084777832
    10. 'e' → logprob: -13.375554084777832

Token 21: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16942152380943298
    2. ' ' → logprob: -2.044421434402466
    3. ' _' → logprob: -4.044421672821045
    4. '_' → logprob: -4.794421672821045
    5. 'i' → logprob: -8.044421195983887
    6. '  ' → logprob: -9.169421195983887
    7. ' x' → logprob: -9.544421195983887
    8. ' ‌' → logprob: -10.044421195983887
    9. ' ' → logprob: -11.169421195983887
    10. ' a' → logprob: -11.669421195983887

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018858643248677254
    2. 'in' → logprob: -4.018858432769775
    3. ' ' → logprob: -7.518858432769775
    4. '  ' → logprob: -10.268858909606934
    5. 's' → logprob: -10.393858909606934
    6. '+' → logprob: -10.518858909606934
    7. 'n' → logprob: -10.643858909606934
    8. ')' → logprob: -11.768858909606934
    9. ',' → logprob: -12.018858909606934
    10. '_' → logprob: -12.518858909606934

Token 23: ' A' (ID: 355)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16210627555847168
    2. ' A' → logprob: -2.4121062755584717
    3. 'range' → logprob: -3.1621062755584717
    4. 'A' → logprob: -4.037106513977051
    5. ' ' → logprob: -11.16210651397705
    6. '	range' → logprob: -12.16210651397705
    7. '(range' → logprob: -12.41210651397705
    8. ' xrange' → logprob: -13.16210651397705
    9. 's' → logprob: -13.28710651397705
    10. 'Range' → logprob: -13.66210651397705

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011735594598576427
    2. '[' → logprob: -7.251173496246338
    3. ' :' → logprob: -8.126173973083496
    4. ':
' → logprob: -10.126173973083496
    5. ' in' → logprob: -10.376173973083496
    6. '[i' → logprob: -11.001173973083496
    7. '   ' → logprob: -11.251173973083496
    8. '):' → logprob: -11.751173973083496
    9. ':**' → logprob: -11.751173973083496
    10. 's' → logprob: -12.251173973083496

Token 25: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4055345058441162
    2. ' s' → logprob: -1.7805345058441162
    3. '   ' → logprob: -2.155534505844116
    4. ' ' → logprob: -3.780534505844116
    5. '    ' → logprob: -4.655534744262695
    6. ' if' → logprob: -5.405534744262695
    7. ' *' → logprob: -5.780534744262695
    8. ':' → logprob: -6.280534744262695
    9. 'if' → logprob: -6.405534744262695
    10. '  ' → logprob: -7.030534744262695

Token 26: ' if' (ID: 538)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10119713097810745
    2. ' s' → logprob: -2.4761972427368164
    3. 'if' (adapté à ' if') → logprob: -4.726197242736816
    4. ' if' → logprob: -5.726197242736816
    5. '   ' → logprob: -9.851197242736816
    6. ' ' → logprob: -12.351197242736816
    7. ':' → logprob: -13.976197242736816
    8. '_s' → logprob: -13.976197242736816
    9. '```' → logprob: -14.101197242736816
    10. '    ' → logprob: -14.226197242736816

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14290210604667664
    2. 'i' → logprob: -2.017902135848999
    3. ' s' → logprob: -9.017902374267578
    4. ' ' → logprob: -9.892902374267578
    5. 's' → logprob: -10.392902374267578
    6. ' not' → logprob: -11.267902374267578
    7. '  ' → logprob: -13.017902374267578
    8. '   ' → logprob: -13.142902374267578
    9. '(i' → logprob: -13.267902374267578
    10. '0' → logprob: -13.517902374267578

Token 28: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8238459229469299
    2. ' >' → logprob: -1.3238458633422852
    3. ' ==' → logprob: -1.9488458633422852
    4. '==' → logprob: -2.823845863342285
    5. '%' → logprob: -3.323845863342285
    6. ' !=' → logprob: -3.448845863342285
    7. ' %' → logprob: -4.698845863342285
    8. '!=' → logprob: -4.698845863342285
    9. ' >=' → logprob: -6.573845863342285
    10. '<' → logprob: -6.698845863342285

Token 29: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6875781416893005
    2. ' s' → logprob: -1.1875782012939453
    3. ' ' → logprob: -2.1875782012939453
    4. '0' → logprob: -2.5625782012939453
    5. '1' → logprob: -6.562578201293945
    6. '10' → logprob: -7.312578201293945
    7. '100' → logprob: -8.687578201293945
    8. '2' → logprob: -8.812578201293945
    9. '7' → logprob: -9.562578201293945
    10. '6' → logprob: -9.812578201293945

Token 30: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.251625120639801
    2. '0' → logprob: -1.7516250610351562
    3. ' ' → logprob: -3.6266250610351562
    4. ' s' → logprob: -4.751625061035156
    5. '1' → logprob: -5.001625061035156
    6. '10' → logprob: -5.376625061035156
    7. '2' → logprob: -7.251625061035156
    8. 'N' → logprob: -7.876625061035156
    9. '100' → logprob: -8.001625061035156
    10. '20' → logprob: -8.376625061035156

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4214210510253906
    2. ' and' → logprob: -1.1714210510253906
    3. ' or' → logprob: -3.5464210510253906
    4. 'and' → logprob: -5.546421051025391
    5. ' :' → logprob: -7.671421051025391
    6. '):' → logprob: -9.04642105102539
    7. 'or' → logprob: -9.17142105102539
    8. 's' → logprob: -9.42142105102539
    9. ':
' → logprob: -9.42142105102539
    10. ' ' → logprob: -9.67142105102539

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7559129595756531
    2. 's' → logprob: -1.2559130191802979
    3. ' ' → logprob: -2.255913019180298
    4. '    ' → logprob: -2.880913019180298
    5. ' s' → logprob: -2.880913019180298
    6. ':' → logprob: -4.505912780761719
    7. '   ' → logprob: -5.255912780761719
    8. ' or' → logprob: -5.880912780761719
    9. ' and' → logprob: -6.255912780761719
    10. '        ' → logprob: -6.255912780761719

Token 33: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.2557057738304138
    2. ' s' → logprob: -1.5057058334350586
    3. '```' → logprob: -7.005705833435059
    4. ' 
' → logprob: -7.380705833435059
    5. ' ' → logprob: -7.630705833435059
    6. '    ' → logprob: -7.630705833435059
    7. '   ' → logprob: -8.255705833435059
    8. ' ```' → logprob: -8.380705833435059
    9. '`s' → logprob: -8.755705833435059
    10. ''s' → logprob: -8.880705833435059

Token 34: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.13202978670597076
    2. '*' → logprob: -2.1320297718048096
    3. '=' → logprob: -5.757030010223389
    4. ' *=' → logprob: -6.257030010223389
    5. ' *' → logprob: -12.38202953338623
    6. '**' → logprob: -13.38202953338623
    7. ' =' → logprob: -13.38202953338623
    8. '*-' → logprob: -13.63202953338623
    9. '+=' → logprob: -14.38202953338623
    10. '```' → logprob: -14.63202953338623

Token 35: ' -' (ID: 533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1133413165807724
    2. '-' → logprob: -2.2383413314819336
    3. '-i' → logprob: -8.363341331481934
    4. ' i' → logprob: -8.738341331481934
    5. ' -' → logprob: -9.113341331481934
    6. '(-' → logprob: -12.238341331481934
    7. ' ' → logprob: -12.863341331481934
    8. '(' → logprob: -13.863341331481934
    9. '_i' → logprob: -14.113341331481934
    10. '   ' → logprob: -14.113341331481934

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023679454170633107
    2. 'i' → logprob: -8.375236511230469
    3. ' ' → logprob: -12.750236511230469
    4. 's' → logprob: -13.125236511230469
    5. '   ' → logprob: -15.000236511230469
    6. '<|end|>' → logprob: -15.750236511230469
    7. ' i' → logprob: -15.875236511230469
    8. '  ' → logprob: -15.875236511230469
    9. '-' → logprob: -15.875236511230469
    10. '```' → logprob: -16.62523651123047

Token 37: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: 'A' (ID: 32)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6433274745941162
    2. '<|end|>' → logprob: -1.2683274745941162
    3. ' ' → logprob: -2.393327474594116
    4. '
' → logprob: -3.643327474594116
    5. 's' → logprob: -3.643327474594116
    6. ')' → logprob: -4.643327713012695
    7. '\n' → logprob: -4.893327713012695
    8. '#' → logprob: -4.893327713012695
    9. 'elif' → logprob: -5.768327713012695
    10. '.' → logprob: -5.893327713012695

Token 39: 'abs' (ID: 6071)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13884733617305756
    2. '[i' → logprob: -2.1388473510742188
    3. '[A' → logprob: -4.763847351074219
    4. '[]' → logprob: -7.013847351074219
    5. '[s' → logprob: -7.763847351074219
    6. '=' → logprob: -7.888847351074219
    7. '.append' → logprob: -8.138847351074219
    8. 's' → logprob: -8.263847351074219
    9. 'A' → logprob: -8.513847351074219
    10. '\[' → logprob: -8.513847351074219

Token 41: ' list' (ID: 1562)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8740653395652771
    2. '[' → logprob: -1.6240653991699219
    3. ' [' → logprob: -1.6240653991699219
    4. '[list' → logprob: -1.8740653991699219
    5. '[len' → logprob: -3.624065399169922
    6. '[s' → logprob: -5.999065399169922
    7. '[A' → logprob: -6.249065399169922
    8. '[max' → logprob: -6.999065399169922
    9. ' list' → logprob: -7.249065399169922
    10. 'list' → logprob: -7.374065399169922

Token 42: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.04530428722500801
    2. '(' → logprob: -3.795304298400879
    3. '(abs' → logprob: -3.920304298400879
    4. '(A' → logprob: -6.670304298400879
    5. '([' → logprob: -8.295304298400879
    6. '(a' → logprob: -9.045304298400879
    7. '(i' → logprob: -9.295304298400879
    8. '(x' → logprob: -9.795304298400879
    9. '(s' → logprob: -9.920304298400879
    10. '(int' → logprob: -10.420304298400879

Token 43: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.13673928380012512
    2. '(' → logprob: -2.2617392539978027
    3. '(int' → logprob: -4.511739253997803
    4. '(lambda' → logprob: -4.761739253997803
    5. 'abs' → logprob: -5.511739253997803
    6. ' abs' → logprob: -10.636739730834961
    7. '```' → logprob: -11.261739730834961
    8. '(
' → logprob: -12.011739730834961
    9. ' (' → logprob: -12.261739730834961
    10. '<|end|>' → logprob: -12.511739730834961

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00615583173930645
    2. ',A' → logprob: -5.881155967712402
    3. '(' → logprob: -6.131155967712402
    4. '(A' → logprob: -7.381155967712402
    5. ' ,' → logprob: -8.006155967712402
    6. '(i' → logprob: -9.006155967712402
    7. ',i' → logprob: -10.131155967712402
    8. ',
' → logprob: -11.131155967712402
    9. ')' → logprob: -11.381155967712402
    10. ',(' → logprob: -11.631155967712402

Token 45: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5759514570236206
    2. ' A' → logprob: -0.8259514570236206
    3. '(A' → logprob: -11.70095157623291
    4. '	A' → logprob: -13.45095157623291
    5. ' ' → logprob: -13.70095157623291
    6. ',A' → logprob: -15.20095157623291
    7. '[A' → logprob: -15.45095157623291
    8. ')' → logprob: -15.57595157623291
    9. '_A' → logprob: -16.200950622558594
    10. 's' → logprob: -16.575950622558594

Token 46: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002600245934445411
    2. ')' → logprob: -8.625260353088379
    3. '))
' → logprob: -9.750260353088379
    4. ' ))' → logprob: -10.875260353088379
    5. ')))' → logprob: -13.250260353088379
    6. '),' → logprob: -14.750260353088379
    7. '));' → logprob: -15.375260353088379
    8. '()))' → logprob: -15.875260353088379
    9. 's' → logprob: -16.125259399414062
    10. ''))' → logprob: -16.125259399414062

Token 47: 'if' (ID: 366)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.4083434343338013
    2. 's' → logprob: -1.7833434343338013
    3. 'A' → logprob: -2.0333433151245117
    4. 'm' → logprob: -2.5333433151245117
    5. 'print' → logprob: -2.9083433151245117
    6. '*' → logprob: -3.1583433151245117
    7. 'M' → logprob: -3.2833433151245117
    8. 'n' → logprob: -3.2833433151245117
    9. 'for' → logprob: -3.6583433151245117
    10. 'if' → logprob: -3.9083433151245117

Token 48: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.015986502170562744
    2. 's' → logprob: -4.640986442565918
    3. ' ' → logprob: -6.390986442565918
    4. ' all' → logprob: -6.640986442565918
    5. ' max' → logprob: -6.765986442565918
    6. ' min' → logprob: -6.890986442565918
    7. ' len' → logprob: -8.015986442565918
    8. ' sum' → logprob: -8.265986442565918
    9. ' A' → logprob: -9.265986442565918
    10. ' any' → logprob: -9.515986442565918

Token 49: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5464197993278503
    2. ' <' → logprob: -1.7964198589324951
    3. ' >' → logprob: -1.9214198589324951
    4. '==' → logprob: -2.671419858932495
    5. '<' → logprob: -3.796419858932495
    6. '>' → logprob: -4.171419620513916
    7. '==-' → logprob: -7.171419620513916
    8. ' ' → logprob: -7.796419620513916
    9. ' !=' → logprob: -9.421420097351074
    10. '=' → logprob: -9.546420097351074

Token 50: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7268825173377991
    2. '1' → logprob: -1.6018824577331543
    3. ' ' → logprob: -1.6018824577331543
    4. ' -' → logprob: -2.2268824577331543
    5. '0' → logprob: -5.226882457733154
    6. '">' → logprob: -9.726882934570312
    7. ''' → logprob: -10.101882934570312
    8. '  ' → logprob: -10.289382934570312
    9. '"' → logprob: -10.726882934570312
    10. '<|end|>' → logprob: -11.101882934570312

Token 51: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25253215432167053
    2. '1' → logprob: -1.5025321245193481
    3. '0' → logprob: -7.627532005310059
    4. ' ' → logprob: -10.127532005310059
    5. ' -' → logprob: -10.627532005310059
    6. '−' → logprob: -11.627532005310059
    7. ''-' → logprob: -12.127532005310059
    8. '>' → logprob: -12.252532005310059
    9. '```' → logprob: -12.377532005310059
    10. '">' → logprob: -12.627532005310059

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002703953068703413
    2. ':
' → logprob: -8.25027084350586
    3. ' :' → logprob: -12.62527084350586
    4. ' and' → logprob: -13.00027084350586
    5. '   ' → logprob: -13.87527084350586
    6. '.' → logprob: -14.25027084350586
    7. ',' → logprob: -15.12527084350586
    8. '[' → logprob: -15.37527084350586
    9. '):' → logprob: -15.37527084350586
    10. 'print' → logprob: -15.50027084350586

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27460965514183044
    2. 'print' → logprob: -1.7746096849441528
    3. ' print' → logprob: -2.7746095657348633
    4. '
' → logprob: -5.524609565734863
    5. '    
' → logprob: -5.899609565734863
    6. '```' → logprob: -6.774609565734863
    7. '``' → logprob: -9.274609565734863
    8. '       ' → logprob: -9.649609565734863
    9. '`' → logprob: -9.899609565734863
    10. '	print' → logprob: -10.149609565734863

Token 54: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0008631035452708602
    2. ' print' → logprob: -7.750863075256348
    3. '   ' → logprob: -7.875863075256348
    4. 'for' → logprob: -10.875863075256348
    5. '
' → logprob: -11.500863075256348
    6. '```' → logprob: -11.500863075256348
    7. '    
' → logprob: -11.750863075256348
    8. '`' → logprob: -14.250863075256348
    9. 'pr' → logprob: -14.250863075256348
    10. ' ' → logprob: -14.500863075256348

Token 55: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09965338557958603
    2. '(max' → logprob: -3.599653482437134
    3. 'max' → logprob: -4.349653244018555
    4. '(A' → logprob: -4.474653244018555
    5. '('' → logprob: -4.724653244018555
    6. '("' → logprob: -4.724653244018555
    7. '0' → logprob: -4.849653244018555
    8. '1' → logprob: -5.474653244018555
    9. '(sum' → logprob: -5.599653244018555
    10. '(s' → logprob: -5.724653244018555

Token 56: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0036298849154263735
    2. '(' → logprob: -5.628629684448242
    3. ')' → logprob: -10.753629684448242
    4. '([' → logprob: -13.128629684448242
    5. '(i' → logprob: -13.628629684448242
    6. '(abs' → logprob: -13.753629684448242
    7. '(
' → logprob: -13.878629684448242
    8. '(s' → logprob: -14.503629684448242
    9. '(B' → logprob: -14.753629684448242
    10. ' (' → logprob: -15.003629684448242

Token 57: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0002060436672763899
    2. '))' → logprob: -8.500205993652344
    3. '_abs' → logprob: -13.500205993652344
    4. ')' → logprob: -14.375205993652344
    5. 'ab' → logprob: -16.000205993652344
    6. 's' → logprob: -16.125205993652344
    7. ' abs' → logprob: -16.250205993652344
    8. ')))' → logprob: -16.875205993652344
    9. ' ))' → logprob: -17.000205993652344
    10. ' ' → logprob: -17.125205993652344

Token 58: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03828613460063934
    2. ')' → logprob: -3.2882862091064453
    3. '))
' → logprob: -8.413286209106445
    4. ')))' → logprob: -11.663286209106445
    5. '))
' → logprob: -11.913286209106445
    6. ' ))' → logprob: -12.663286209106445
    7. '))

' → logprob: -13.788286209106445
    8. ')
' → logprob: -14.163286209106445
    9. ' )' → logprob: -14.413286209106445
    10. '),' → logprob: -15.163286209106445

Token 59: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00015157493180595338
    2. ' else' → logprob: -8.875151634216309
    3. 'elif' → logprob: -11.500151634216309
    4. '_else' → logprob: -13.625151634216309
    5. 'elser' → logprob: -16.375150680541992
    6. '```' → logprob: -16.625150680541992
    7. 'elses' → logprob: -17.375150680541992
    8. 'e' → logprob: -17.750150680541992
    9. '<|end|>' → logprob: -17.875150680541992
    10. '   ' → logprob: -17.875150680541992

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007604343118146062
    2. ' :' → logprob: -7.250760555267334
    3. ':
' → logprob: -10.375760078430176
    4. '   ' → logprob: -11.375760078430176
    5. '    ' → logprob: -12.375760078430176
    6. ' :
' → logprob: -13.875760078430176
    7. '[' → logprob: -15.000760078430176
    8. ',' → logprob: -15.375760078430176
    9. 'print' → logprob: -15.375760078430176
    10. ':
' → logprob: -15.375760078430176

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7122973203659058
    2. 'min' → logprob: -0.8372973203659058
    3. ' min' → logprob: -3.3372974395751953
    4. 'print' → logprob: -4.837297439575195
    5. '    
' → logprob: -4.962297439575195
    6. 'A' → logprob: -5.087297439575195
    7. '```' → logprob: -5.337297439575195
    8. ' A' → logprob: -6.087297439575195
    9. 's' → logprob: -6.087297439575195
    10. 'sum' → logprob: -6.462297439575195

Token 62: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004520788788795471
    2. 'min' → logprob: -5.754520893096924
    3. ' print' → logprob: -7.254520893096924
    4. 'sum' → logprob: -7.379520893096924
    5. ' min' → logprob: -12.004520416259766
    6. 'pr' → logprob: -13.629520416259766
    7. 'max' → logprob: -13.879520416259766
    8. 'prin' → logprob: -14.254520416259766
    9. ' sum' → logprob: -14.379520416259766
    10. 'printf' → logprob: -14.754520416259766

Token 63: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.0305258110165596
    2. '(' → logprob: -3.5305259227752686
    3. 'sum' → logprob: -7.6555256843566895
    4. '(min' → logprob: -8.530526161193848
    5. '(s' → logprob: -10.030526161193848
    6. '(max' → logprob: -10.405526161193848
    7. ' (' → logprob: -11.155526161193848
    8. ' sum' → logprob: -11.905526161193848
    9. '('' → logprob: -12.405526161193848
    10. '((' → logprob: -13.030526161193848

Token 64: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.125000953674316
    3. '(s' → logprob: -16.5
    4. ')' → logprob: -16.875
    5. '([' → logprob: -17.375
    6. '(a' → logprob: -17.625
    7. 'A' → logprob: -17.625
    8. '   ' → logprob: -18.125
    9. '()' → logprob: -18.25
    10. ' (' → logprob: -18.25

Token 65: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.0280383548888494e-06
    2. ' abs' → logprob: -14.750000953674316
    3. 's' → logprob: -14.875000953674316
    4. 'ab' → logprob: -16.500001907348633
    5. '.abs' → logprob: -16.875001907348633
    6. ')' → logprob: -17.125001907348633
    7. '_abs' → logprob: -17.625001907348633
    8. 'a' → logprob: -17.750001907348633
    9. 'Abs' → logprob: -17.750001907348633
    10. '(abs' → logprob: -17.875001907348633

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005734055885113776
    2. ')-' → logprob: -7.625573635101318
    3. ' )' → logprob: -9.50057315826416
    4. '-' → logprob: -12.62557315826416
    5. '-)' → logprob: -12.87557315826416
    6. ' -' → logprob: -13.25057315826416
    7. '))' → logprob: -14.25057315826416
    8. '`)' → logprob: -14.75057315826416
    9. ')-(' → logprob: -15.12557315826416
    10. '")' → logprob: -15.37557315826416

Token 67: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.26095330715179443
    2. ' -' → logprob: -1.5109533071517944
    3. ')' → logprob: -4.760953426361084
    4. ')-' → logprob: -9.260952949523926
    5. '-min' → logprob: -9.260952949523926
    6. '-)' → logprob: -9.885952949523926
    7. ' ' → logprob: -10.010952949523926
    8. ' )' → logprob: -10.010952949523926
    9. '`' → logprob: -10.260952949523926
    10. '```' → logprob: -11.260952949523926

Token 68: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010218043811619282
    2. ' ' → logprob: -4.760218143463135
    3. 'min' → logprob: -6.510218143463135
    4. ' min' → logprob: -9.635217666625977
    5. '   ' → logprob: -10.510217666625977
    6. ')' → logprob: -12.260217666625977
    7. '  ' → logprob: -12.260217666625977
    8. 'max' → logprob: -12.635217666625977
    9. '```' → logprob: -13.135217666625977
    10. '(min' → logprob: -13.635217666625977

Token 69: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010243412107229233
    2. 'min' → logprob: -4.6352434158325195
    3. ' ' → logprob: -7.7602434158325195
    4. '   ' → logprob: -10.63524341583252
    5. ' min' → logprob: -10.63524341583252
    6. '(min' → logprob: -12.51024341583252
    7. '  ' → logprob: -13.26024341583252
    8. 'max' → logprob: -13.38524341583252
    9. '```' → logprob: -13.51024341583252
    10. '(' → logprob: -14.01024341583252

Token 70: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0001495484757469967
    2. ' *' → logprob: -9.125149726867676
    3. 'min' → logprob: -10.500149726867676
    4. '[min' → logprob: -12.125149726867676
    5. '```' → logprob: -13.250149726867676
    6. ')' → logprob: -13.500149726867676
    7. ' min' → logprob: -13.500149726867676
    8. '`' → logprob: -13.625149726867676
    9. '*(' → logprob: -14.250149726867676
    10. '(min' → logprob: -15.625149726867676

Token 71: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0010453128488734365
    2. ' min' → logprob: -6.876045227050781
    3. '(min' → logprob: -12.001045227050781
    4. '[min' → logprob: -12.751045227050781
    5. '	min' → logprob: -13.376045227050781
    6. 'max' → logprob: -14.501045227050781
    7. 'minimum' → logprob: -14.751045227050781
    8. '   ' → logprob: -15.251045227050781
    9. 'mi' → logprob: -15.751045227050781
    10. 'mini' → logprob: -15.751045227050781

Token 72: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.000916935910936445
    2. '(' → logprob: -7.000916957855225
    3. ')' → logprob: -13.125916481018066
    4. '(abs' → logprob: -13.500916481018066
    5. '(
' → logprob: -14.250916481018066
    6. '(a' → logprob: -14.250916481018066
    7. 'A' → logprob: -15.125916481018066
    8. '(`' → logprob: -15.250916481018066
    9. '((' → logprob: -16.750917434692383
    10. '([' → logprob: -17.125917434692383

Token 73: 'abs' (ID: 6071)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01108625903725624
    2. '(A' → logprob: -4.511086463928223
    3. '[A' → logprob: -11.261086463928223
    4. ')' → logprob: -11.511086463928223
    5. ' A' → logprob: -11.636086463928223
    6. 'abs' → logprob: -12.636086463928223
    7. 'a' → logprob: -13.761086463928223
    8. ',A' → logprob: -14.386086463928223
    9. '(' → logprob: -14.636086463928223
    10. '(abs' → logprob: -14.761086463928223

Token 74: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0016955342143774033
    2. ')' → logprob: -6.50169563293457
    3. ')))' → logprob: -8.87669563293457
    4. '))
' → logprob: -10.62669563293457
    5. ' ))' → logprob: -10.62669563293457
    6. '()))' → logprob: -13.62669563293457
    7. ']))' → logprob: -14.50169563293457
    8. '[' → logprob: -14.50169563293457
    9. '])' → logprob: -14.87669563293457
    10. ' ' → logprob: -15.00169563293457


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 72
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 62
Précision stricte (1ère position): 36.11%
Précision adaptée (1ère position): 40.28%
Précision (top 10): 86.11%
================================================================================
