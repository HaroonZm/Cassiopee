================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

def min_steps_to_goal(N, M, S):
    """
    Calcule le chemin minimal pour atteindre la position N avec des sauts d'au plus M, en évitant les obstacles ('1').
    
    Arguments :
        N (int) : Dernière position à atteindre (0-indexé).
        M (int) : Longueur maximale d'un saut.
        S (str) : Chaîne binaire inversée représentant la trajectoire, où '0' permet de marcher et '1' bloque.
    
    Retourne :
        list : Liste du nombre de pas à chaque saut, dans l'ordre du trajet optimal, ou [-1] s'il n'existe pas de trajectoire valide.
    """
    # Ajoute des '1' fictifs à la fin pour éviter les vérifications de dépassement d'indice lors du parcours
    S = S[::-1] + '1' * M

    # Cas d'arrêt rapide : si M est supérieur ou égal à N, il suffit d'un saut unique
    if M >= N:
        return [N]
    
    # Initialisation d'une deque pour stocker les tailles de pas dans l'ordre inverse
    q = deque([])
    i = 0  # Position actuelle sur la chaîne
    j = 0  # Dernier point d'arrêt
    while i < N:
        f = 0  # Indicateur de possibilité de trouver le prochain pas
        # Recherche du plus grand saut valide allant de la fin du dernier saut (j) vers i+M en arrière
        for k in range(i + M, j, -1):
            if S[k] == '0':  # On a trouvé une case accessible
                f = 1        # Signal que la suite est possible
                break
        # Mettre à jour le dernier point d'arrêt
        j = i + M
        # Ajouter le nombre de pas effectués à la liste
        q.appendleft(k - i)
        i = k  # Se positionner à la nouvelle place atteinte
        if f == 0:
            # Si aucun nouveau saut n'est possible, on retourne -1
            return [-1]
    # Conversion de la deque en liste normale, résultat final : les pas effectués dans l'ordre
    return list(q)

def main():
    """
    Fonction principale. Lit l'entrée standard, effectue le traitement et affiche le résultat.
    """
    # Lecture de l'entrée
    N, M = map(int, input().split())
    S = input()
    # Appel du calcul
    result = min_steps_to_goal(N, M, S)
    if result == [-1]:
        print(-1)
    else:
        print(' '.join(map(str, result)))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.408840298652649
    2. 'abc' → logprob: -1.408840298652649
    3. 'deque' → logprob: -1.408840298652649
    4. 'Counter' → logprob: -2.1588401794433594
    5. ' defaultdict' → logprob: -2.1588401794433594
    6. ' Counter' → logprob: -4.033840179443359
    7. ' abc' → logprob: -4.658840179443359
    8. 'named' → logprob: -5.533840179443359
    9. ' deque' → logprob: -6.283840179443359
    10. '```' → logprob: -6.783840179443359

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010959392413496971
    2. '.' → logprob: -5.385959625244141
    3. '\(' → logprob: -5.760959625244141
    4. '\' → logprob: -6.510959625244141
    5. '```' → logprob: -7.885959625244141
    6. '[' → logprob: -8.51095962524414
    7. '\[' → logprob: -8.51095962524414
    8. ',' → logprob: -8.63595962524414
    9. '\n' → logprob: -9.13595962524414
    10. 'newline' → logprob: -9.13595962524414

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025305623188614845
    2. '\' → logprob: -4.90030574798584
    3. '[' → logprob: -5.77530574798584
    4. '\n' → logprob: -6.15030574798584
    5. 'a' → logprob: -6.27530574798584
    6. ',' → logprob: -6.27530574798584
    7. '\(' → logprob: -6.27530574798584
    8. 'newline' → logprob: -6.90030574798584
    9. ' (' → logprob: -7.15030574798584
    10. '.' → logprob: -7.15030574798584

Token 6: ' min' (ID: 1349)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0009103906922973692
    2. ' bfs' → logprob: -7.62591028213501
    3. ' ' → logprob: -9.125910758972168
    4. ' deque' → logprob: -9.875910758972168
    5. ' space' → logprob: -10.625910758972168
    6. ' ```' → logprob: -10.625910758972168
    7. ' dfs' → logprob: -10.750910758972168
    8. ' a' → logprob: -10.875910758972168
    9. ' de' → logprob: -10.875910758972168
    10. ' queue' → logprob: -11.500910758972168

Token 7: '_steps' (ID: 52120)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35859400033950806
    2. 'imum' → logprob: -1.8585939407348633
    3. '_distance' → logprob: -3.3585939407348633
    4. '_stack' → logprob: -3.4835939407348633
    5. '_depth' → logprob: -3.4835939407348633
    6. '_queue' → logprob: -4.358593940734863
    7. '_path' → logprob: -5.358593940734863
    8. '_space' → logprob: -5.358593940734863
    9. '_length' → logprob: -5.608593940734863
    10. '_window' → logprob: -5.858593940734863

Token 8: '_to' (ID: 5089)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012933142483234406
    2. '_to' → logprob: -4.387933254241943
    3. '_' → logprob: -8.637932777404785
    4. 'to' → logprob: -9.012932777404785
    5. '(to' → logprob: -9.762932777404785
    6. 'To' → logprob: -11.762932777404785
    7. ' (' → logprob: -11.887932777404785
    8. '_t' → logprob: -12.762932777404785
    9. '_for' → logprob: -12.887932777404785
    10. ' to' → logprob: -12.887932777404785

Token 9: '_goal' (ID: 101684)
  Prédit: ' reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reach' → logprob: -0.4386361241340637
    2. '_re' → logprob: -1.438636064529419
    3. '_target' → logprob: -3.563636064529419
    4. '_transform' → logprob: -3.938636064529419
    5. 'reach' → logprob: -4.313636302947998
    6. '_convert' → logprob: -4.438636302947998
    7. '_reduce' → logprob: -5.313636302947998
    8. ' convert' → logprob: -5.438636302947998
    9. '_complete' → logprob: -5.563636302947998
    10. '_collect' → logprob: -5.563636302947998

Token 10: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015979631280060858
    2. ' (' → logprob: -10.375160217285156
    3. '():' → logprob: -10.750160217285156
    4. '_' → logprob: -11.250160217285156
    5. '(user' → logprob: -11.375160217285156
    6. '(x' → logprob: -11.750160217285156
    7. '(:' → logprob: -11.875160217285156
    8. ':' → logprob: -11.875160217285156
    9. ')' → logprob: -12.000160217285156
    10. '(token' → logprob: -12.125160217285156

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014268343336880207
    2. '):' → logprob: -4.389268398284912
    3. ')' → logprob: -6.389268398284912
    4. ':' → logprob: -10.014267921447754
    5. ' ,' → logprob: -11.514267921447754
    6. ',
' → logprob: -12.389267921447754
    7. '=' → logprob: -12.764267921447754
    8. '```' → logprob: -13.514267921447754
    9. ' ):' → logprob: -13.639267921447754
    10. ',n' → logprob: -13.889267921447754

Token 12: ' M' (ID: 391)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -1.1049574613571167
    2. ' M' → logprob: -1.6049574613571167
    3. 'start' → logprob: -1.7299574613571167
    4. 'M' → logprob: -2.7299575805664062
    5. ' goal' → logprob: -2.8549575805664062
    6. ' K' → logprob: -3.1049575805664062
    7. 'goal' → logprob: -3.4799575805664062
    8. 'K' → logprob: -3.9799575805664062
    9. 'target' → logprob: -4.854957580566406
    10. ' target' → logprob: -4.854957580566406

Token 13: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25446537137031555
    2. ',' → logprob: -1.5044653415679932
    3. ')' → logprob: -6.004465579986572
    4. '):
' → logprob: -11.129465103149414
    5. '```' → logprob: -11.504465103149414
    6. ')>' → logprob: -12.254465103149414
    7. '   ' → logprob: -12.504465103149414
    8. '=' → logprob: -12.754465103149414
    9. ':' → logprob: -12.879465103149414
    10. '),' → logprob: -12.879465103149414

Token 14: ' S' (ID: 336)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.664051353931427
    2. ' S' → logprob: -1.9140512943267822
    3. ' grid' → logprob: -2.1640512943267822
    4. 'start' → logprob: -2.4140512943267822
    5. ' K' → logprob: -3.0390512943267822
    6. ' graph' → logprob: -4.539051532745361
    7. ' obstacles' → logprob: -4.539051532745361
    8. ' s' → logprob: -4.789051532745361
    9. 'S' → logprob: -5.039051532745361
    10. 'grid' → logprob: -5.414051532745361

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08222448825836182
    2. ',' → logprob: -2.5822243690490723
    3. ')' → logprob: -5.957224369049072
    4. '):
' → logprob: -8.08222484588623
    5. '=' → logprob: -8.83222484588623
    6. ' ):' → logprob: -9.08222484588623
    7. '):
' → logprob: -10.20722484588623
    8. ':' → logprob: -10.33222484588623
    9. '[' → logprob: -10.95722484588623
    10. '_' → logprob: -11.33222484588623

Token 16: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021914945915341377
    2. '   ' → logprob: -4.521914958953857
    3. ':
' → logprob: -5.146914958953857
    4. ' :' → logprob: -5.646914958953857
    5. '(' → logprob: -7.771914958953857
    6. '```' → logprob: -8.2719144821167
    7. '):' → logprob: -9.0219144821167
    8. ' ' → logprob: -9.3969144821167
    9. ' :
' → logprob: -9.5219144821167
    10. '():' → logprob: -9.6469144821167

Token 17: ' """
' (ID: 7037)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.089522123336792
    2. '   ' → logprob: -1.339522123336792
    3. ' queue' → logprob: -2.214522123336792
    4. 'dp' → logprob: -2.839522123336792
    5. '```' → logprob: -2.839522123336792
    6. ' visited' → logprob: -3.339522123336792
    7. ' dist' → logprob: -3.464522123336792
    8. 'queue' → logprob: -3.714522123336792
    9. ' 
' → logprob: -4.089522361755371
    10. 'dist' → logprob: -4.589522361755371

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3217830955982208
    2. ' """' → logprob: -2.5717830657958984
    3. '"""' → logprob: -3.1967830657958984
    4. ' """
' → logprob: -3.5717830657958984
    5. '\n' → logprob: -3.5717830657958984
    6. 'n' → logprob: -3.9467830657958984
    7. ' 
' → logprob: -4.446783065795898
    8. '#' → logprob: -4.571783065795898
    9. ' ' → logprob: -4.696783065795898
    10. '"""
' → logprob: -5.321783065795898

Token 19: ' Cal' (ID: 4453)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7187943458557129
    2. 'Find' → logprob: -1.093794345855713
    3. 'Calculate' → logprob: -2.343794345855713
    4. '"""
' → logprob: -3.468794345855713
    5. ' Finds' → logprob: -4.468794345855713
    6. 'B' → logprob: -4.968794345855713
    7. ' Find' → logprob: -5.218794345855713
    8. 'Calcul' → logprob: -5.468794345855713
    9. 'Returns' → logprob: -5.593794345855713
    10. ' Calculate' → logprob: -5.843794345855713

Token 20: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.14953725039958954
    2. 'l' → logprob: -2.2745373249053955
    3. 'cul' → logprob: -3.3995373249053955
    4. 'culated' → logprob: -7.024537086486816
    5. 'c' → logprob: -7.524537086486816
    6. 'cula' → logprob: -8.274537086486816
    7. 'culator' → logprob: -8.899537086486816
    8. 'culation' → logprob: -9.149537086486816
    9. 'ulate' → logprob: -9.524537086486816
    10. 'cular' → logprob: -9.524537086486816

Token 21: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0011128316400572658
    2. 'ra' → logprob: -7.626112937927246
    3. 'rate' → logprob: -7.751112937927246
    4. 'brate' → logprob: -9.626112937927246
    5. 's' → logprob: -10.376112937927246
    6. 'z' → logprob: -10.501112937927246
    7. 'te' → logprob: -11.626112937927246
    8. 'ate' → logprob: -11.751112937927246
    9. '```' → logprob: -12.126112937927246
    10. 'ration' → logprob: -12.126112937927246

Token 22: ' chemin' (ID: 45035)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.05283951759338379
    2. 's' → logprob: -3.177839517593384
    3. ' ' → logprob: -5.177839279174805
    4. '   ' → logprob: -6.802839279174805
    5. '  ' → logprob: -7.177839279174805
    6. ' minimum' → logprob: -7.427839279174805
    7. 'nombre' → logprob: -7.427839279174805
    8. ' plus' → logprob: -7.802839279174805
    9. ' ' → logprob: -8.177839279174805
    10. ' nombres' → logprob: -8.302839279174805

Token 23: ' minimal' (ID: 19957)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07764821499586105
    2. ' complet' → logprob: -3.327648162841797
    3. '  ' → logprob: -4.202648162841797
    4. ' le' → logprob: -5.202648162841797
    5. ' optimal' → logprob: -6.077648162841797
    6. ' optimale' → logprob: -6.202648162841797
    7. ' ' → logprob: -6.827648162841797
    8. ' ,' → logprob: -6.952648162841797
    9. ' d' → logprob: -6.952648162841797
    10. ' :' → logprob: -7.202648162841797

Token 24: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18483226001262665
    2. 'e' → logprob: -3.1848323345184326
    3. ''' → logprob: -3.5598323345184326
    4. '```' → logprob: -4.0598320960998535
    5. '  ' → logprob: -4.4348320960998535
    6. '_' → logprob: -4.4348320960998535
    7. ' ,' → logprob: -4.6848320960998535
    8. ' d' → logprob: -5.0598320960998535
    9. ')' → logprob: -5.5598320960998535
    10. ' de' → logprob: -5.6848320960998535

Token 25: ' atteindre' (ID: 95734)
  Prédit: ' atteindre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' atteindre' → logprob: -0.12449903786182404
    2. ' ' → logprob: -3.4994990825653076
    3. ' rejoindre' → logprob: -3.6244990825653076
    4. ' aller' → logprob: -3.7494990825653076
    5. ' arriver' → logprob: -4.3744988441467285
    6. ' se' → logprob: -4.8744988441467285
    7. ' accéder' → logprob: -5.6244988441467285
    8. '   ' → logprob: -6.2494988441467285
    9. ' reaching' → logprob: -6.2494988441467285
    10. 're' → logprob: -6.4994988441467285

Token 26: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6578248739242554
    2. ' ' → logprob: -1.0328248739242554
    3. ' le' → logprob: -2.657824993133545
    4. ' l' → logprob: -3.032824993133545
    5. 'l' → logprob: -5.782824993133545
    6. 'le' → logprob: -6.407824993133545
    7. ' un' → logprob: -6.657824993133545
    8. '```' → logprob: -8.407824516296387
    9. ' ' → logprob: -8.407824516296387
    10. 'la' → logprob: -8.532824516296387

Token 27: ' position' (ID: 4010)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1115196943283081
    2. ' cible' → logprob: -3.3615198135375977
    3. ' goal' → logprob: -3.9865198135375977
    4. ' destination' → logprob: -3.9865198135375977
    5. '_' → logprob: -5.236519813537598
    6. ' c' → logprob: -5.486519813537598
    7. ' but' → logprob: -5.736519813537598
    8. ' case' → logprob: -6.236519813537598
    9. ' position' → logprob: -6.236519813537598
    10. ' ' → logprob: -6.361519813537598

Token 28: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013552282936871052
    2. ' suivante' → logprob: -5.513552188873291
    3. '  ' → logprob: -6.263552188873291
    4. ' de' → logprob: -6.888552188873291
    5. ' d' → logprob: -7.013552188873291
    6. ' target' → logprob: -7.138552188873291
    7. ' cible' → logprob: -7.638552188873291
    8. ' ' → logprob: -7.638552188873291
    9. 's' → logprob: -7.888552188873291
    10. '<|end|>' → logprob: -8.01355266571045

Token 29: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7139315605163574
    2. ' from' → logprob: -1.9639315605163574
    3. ')' → logprob: -2.0889315605163574
    4. ' ' → logprob: -2.2139315605163574
    5. ' en' → logprob: -2.5889315605163574
    6. '.' → logprob: -2.9639315605163574
    7. ' de' → logprob: -3.2139315605163574
    8. ' )' → logprob: -3.3389315605163574
    9. ' à' → logprob: -3.4639315605163574
    10. 'u' → logprob: -3.7139315605163574

Token 30: ' des' (ID: 731)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.2808705270290375
    2. ' ' → logprob: -2.4058704376220703
    3. ' la' → logprob: -3.2808704376220703
    4. ' l' → logprob: -3.4058704376220703
    5. ' une' → logprob: -3.9058704376220703
    6. ' le' → logprob: -4.40587043762207
    7. ' a' → logprob: -4.40587043762207
    8. ' ' → logprob: -5.03087043762207
    9. ' `' → logprob: -5.53087043762207
    10. ' au' → logprob: -5.53087043762207

Token 31: ' sa' (ID: 880)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.25290536880493164
    2. ' steps' → logprob: -3.1279053688049316
    3. ' actions' → logprob: -3.2529053688049316
    4. ' espaces' → logprob: -3.5029053688049316
    5. 'pas' → logprob: -3.5029053688049316
    6. ' déplacements' → logprob: -4.002905368804932
    7. ' opérations' → logprob: -4.502905368804932
    8. ' mouvements' → logprob: -4.627905368804932
    9. ' étapes' → logprob: -5.127905368804932
    10. 'steps' → logprob: -5.252905368804932

Token 32: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -1.306760805164231e-05
    2. 'utions' → logprob: -11.62501335144043
    3. 'ut' → logprob: -13.50001335144043
    4. 'ts' → logprob: -14.00001335144043
    5. 'u' → logprob: -14.62501335144043
    6. 'ctions' → logprob: -14.75001335144043
    7. 'utes' → logprob: -15.12501335144043
    8. 'pts' → logprob: -16.37501335144043
    9. 'mb' → logprob: -16.50001335144043
    10. 'nts' → logprob: -16.50001335144043

Token 33: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.36492154002189636
    2. 's' → logprob: -2.1149215698242188
    3. ' ' → logprob: -2.6149215698242188
    4. '_' → logprob: -4.739921569824219
    5. ' en' → logprob: -4.864921569824219
    6. '"' → logprob: -4.864921569824219
    7. ' entre' → logprob: -4.864921569824219
    8. ''' → logprob: -5.114921569824219
    9. ' ,' → logprob: -5.114921569824219
    10. ' d' → logprob: -5.239921569824219

Token 34: ''au' (ID: 63689)
  Prédit: ''une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.9836888313293457
    2. ''au' → logprob: -1.7336888313293457
    3. 'au' → logprob: -2.1086888313293457
    4. ' ' → logprob: -2.4836888313293457
    5. 'e' → logprob: -2.7336888313293457
    6. '1' → logprob: -3.2336888313293457
    7. ''' → logprob: -3.3586888313293457
    8. ' taille' → logprob: -3.3586888313293457
    9. ''un' → logprob: -3.8586888313293457
    10. 'une' → logprob: -4.983688831329346

Token 35: ' plus' (ID: 2932)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0576510429382324
    2. 'moins' → logprob: -1.4326510429382324
    3. 'size' → logprob: -2.0576510429382324
    4. 'pas' → logprob: -2.5576510429382324
    5. 'max' → logprob: -3.8076510429382324
    6. 'm' → logprob: -3.9326510429382324
    7. 's' → logprob: -4.057651042938232
    8. 't' → logprob: -4.182651042938232
    9. 'p' → logprob: -4.182651042938232
    10. ' ' → logprob: -4.307651042938232

Token 36: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14428479969501495
    2. '1' → logprob: -2.019284725189209
    3. '2' → logprob: -7.769284725189209
    4. ' M' → logprob: -8.019285202026367
    5. ' ' → logprob: -8.519285202026367
    6. '`' → logprob: -9.269285202026367
    7. ' S' → logprob: -9.394285202026367
    8. ' `' → logprob: -9.519285202026367
    9. '3' → logprob: -9.644285202026367
    10. '```' → logprob: -9.644285202026367

Token 37: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5092864632606506
    2. ')' → logprob: -1.5092864036560059
    3. ' )' → logprob: -2.509286403656006
    4. ',' → logprob: -3.009286403656006
    5. ' ,' → logprob: -4.384286403656006
    6. '.' → logprob: -4.634286403656006
    7. ''' → logprob: -5.759286403656006
    8. ' ' → logprob: -6.259286403656006
    9. '```' → logprob: -6.384286403656006
    10. 'u' → logprob: -6.384286403656006

Token 38: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.04913545772433281
    2. ' ' → logprob: -3.674135446548462
    3. ' et' → logprob: -4.299135684967041
    4. ' à' → logprob: -6.424135684967041
    5. '.' → logprob: -6.924135684967041
    6. '```' → logprob: -6.924135684967041
    7. ' tout' → logprob: -7.049135684967041
    8. ' ' → logprob: -7.549135684967041
    9. ' de' → logprob: -7.799135684967041
    10. ',' → logprob: -8.174135208129883

Token 39: ' év' (ID: 23692)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.8279011845588684
    2. ' utilisant' → logprob: -0.9529011845588684
    3. 'part' → logprob: -3.0779011249542236
    4. ' steps' → logprob: -3.5779011249542236
    5. 'util' → logprob: -3.8279011249542236
    6. ' saut' → logprob: -4.327901363372803
    7. ' respect' → logprob: -4.577901363372803
    8. ' suivant' → logprob: -4.952901363372803
    9. ' passant' → logprob: -5.452901363372803
    10. '```' → logprob: -5.577901363372803

Token 40: 'itant' (ID: 61641)
  Prédit: 'itant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itant' → logprob: -0.3433707356452942
    2. 'iter' → logprob: -1.4683706760406494
    3. 'al' → logprob: -3.8433706760406494
    4. 'ite' → logprob: -4.8433709144592285
    5. 'it' → logprob: -4.8433709144592285
    6. 'itent' → logprob: -5.0933709144592285
    7. 'itera' → logprob: -5.8433709144592285
    8. 'alu' → logprob: -5.9683709144592285
    9. 'i' → logprob: -6.0933709144592285
    10. 'er' → logprob: -6.4683709144592285

Token 41: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.14125418663024902
    2. ' des' → logprob: -2.391254186630249
    3. '   ' → logprob: -4.391254425048828
    4. 'les' → logprob: -4.516254425048828
    5. ' ' → logprob: -4.766254425048828
    6. 'des' → logprob: -6.641254425048828
    7. ' l' → logprob: -6.641254425048828
    8. ' un' → logprob: -7.266254425048828
    9. ' la' → logprob: -7.391254425048828
    10. ' une' → logprob: -7.516254425048828

Token 42: ' obstacles' (ID: 46430)
  Prédit: ' obstacles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obstacles' → logprob: -0.01606275886297226
    2. ' ' → logprob: -5.3910627365112305
    3. '0' → logprob: -5.8910627365112305
    4. '_' → logprob: -6.2660627365112305
    5. 'ob' → logprob: -6.3910627365112305
    6. ' positions' → logprob: -6.7660627365112305
    7. ' obstacle' → logprob: -6.8910627365112305
    8. ' obst' → logprob: -7.7660627365112305
    9. 'positions' → logprob: -8.01606273651123
    10. '#' → logprob: -8.01606273651123

Token 43: ' ('' (ID: 9906)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16932138800621033
    2. ':' → logprob: -2.669321298599243
    3. ',' → logprob: -2.919321298599243
    4. ' :' → logprob: -4.544321537017822
    5. ' ' → logprob: -4.919321537017822
    6. ')' → logprob: -5.294321537017822
    7. '   ' → logprob: -5.919321537017822
    8. '"""' → logprob: -6.169321537017822
    9. ' """' → logprob: -7.794321537017822
    10. '```' → logprob: -7.794321537017822

Token 44: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6619077920913696
    2. ''' → logprob: -1.9119077920913696
    3. 'X' → logprob: -2.41190767288208
    4. 'O' → logprob: -2.78690767288208
    5. 'o' → logprob: -3.16190767288208
    6. '')' → logprob: -3.41190767288208
    7. '*' → logprob: -3.53690767288208
    8. ' ')' → logprob: -3.66190767288208
    9. 'x' → logprob: -4.41190767288208
    10. ')' → logprob: -5.03690767288208

Token 45: '').
' (ID: 105328)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.14715443551540375
    2. ''' → logprob: -2.0221543312072754
    3. '').' → logprob: -5.647154331207275
    4. '',' → logprob: -8.147154808044434
    5. ''),' → logprob: -8.897154808044434
    6. ''s' → logprob: -9.022154808044434
    7. ''):' → logprob: -9.022154808044434
    8. '')"' → logprob: -9.897154808044434
    9. ')' → logprob: -10.147154808044434
    10. '")' → logprob: -10.272154808044434

Token 46: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692184954881668
    2. '"' → logprob: -3.366921901702881
    3. '"""
' → logprob: -3.616921901702881
    4. '"""' → logprob: -3.741921901702881
    5. '```' → logprob: -5.241921901702881
    6. '\n' → logprob: -5.366921901702881
    7. '
' → logprob: -5.491921901702881
    8. '`' → logprob: -5.866921901702881
    9. ''' → logprob: -6.116921901702881
    10. '""' → logprob: -6.866921901702881

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07433603703975677
    2. '"""' → logprob: -3.699336051940918
    3. '```' → logprob: -4.199336051940918
    4. '"""
' → logprob: -4.199336051940918
    5. '\n' → logprob: -5.324336051940918
    6. '
' → logprob: -5.324336051940918
    7. '    ' → logprob: -6.324336051940918
    8. ' """
' → logprob: -6.699336051940918
    9. '"' → logprob: -7.449336051940918
    10. ''''
' → logprob: -7.699336051940918

Token 48: ' Arguments' (ID: 63373)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.7922848463058472
    2. '   ' → logprob: -1.5422848463058472
    3. '
' → logprob: -2.1672849655151367
    4. '"""' → logprob: -2.2922849655151367
    5. ' """
' → logprob: -3.0422849655151367
    6. '\n' → logprob: -4.042284965515137
    7. '```' → logprob: -4.292284965515137
    8. 'n' → logprob: -4.292284965515137
    9. ' 
' → logprob: -4.792284965515137
    10. '    
' → logprob: -5.542284965515137

Token 49: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1631307154893875
    2. ' :' → logprob: -1.913130760192871
    3. ',' → logprob: -6.663130760192871
    4. '):' → logprob: -7.788130760192871
    5. ')' → logprob: -8.038130760192871
    6. '<|end|>' → logprob: -8.413130760192871
    7. '```' → logprob: -9.038130760192871
    8. 's' → logprob: -9.038130760192871
    9. '.' → logprob: -9.413130760192871
    10. ':
' → logprob: -9.538130760192871

Token 50: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44484466314315796
    2. ' )' → logprob: -1.8198447227478027
    3. '   ' → logprob: -2.5698447227478027
    4. ' ' → logprob: -3.9448447227478027
    5. '```' → logprob: -4.069844722747803
    6. 'n' → logprob: -4.194844722747803
    7. ',' → logprob: -4.944844722747803
    8. 's' → logprob: -4.944844722747803
    9. ' """' → logprob: -5.194844722747803
    10. '"""' → logprob: -5.319844722747803

Token 51: ' N' (ID: 478)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5163370966911316
    2. '   ' → logprob: -1.5163371562957764
    3. 's' → logprob: -2.3913371562957764
    4. ' S' → logprob: -3.1413371562957764
    5. 'N' (adapté à ' N') → logprob: -3.8913371562957764
    6. ' N' → logprob: -4.766336917877197
    7. '```' → logprob: -5.641336917877197
    8. 'n' → logprob: -6.391336917877197
    9. 'positions' → logprob: -6.641336917877197
    10. ' s' → logprob: -6.891336917877197

Token 52: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18356837332248688
    2. '<|end|>' → logprob: -2.0585684776306152
    3. ' ,' → logprob: -3.8085684776306152
    4. ':' → logprob: -4.683568477630615
    5. '<|end|>' → logprob: -5.933568477630615
    6. ')' → logprob: -5.933568477630615
    7. '   ' → logprob: -7.183568477630615
    8. '):' → logprob: -7.808568477630615
    9. ' (' → logprob: -7.933568477630615
    10. ' :' → logprob: -7.933568477630615

Token 53: 'int' (ID: 491)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5789215564727783
    2. 'int' → logprob: -0.8289215564727783
    3. ')' → logprob: -6.453921318054199
    4. ',' → logprob: -7.578921318054199
    5. ' )' → logprob: -7.828921318054199
    6. '[int' → logprob: -8.9539213180542
    7. ',int' → logprob: -9.0789213180542
    8. ':int' → logprob: -9.7039213180542
    9. '<int' → logprob: -10.2039213180542
    10. '=int' → logprob: -10.4539213180542

Token 54: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19393567740917206
    2. '):' → logprob: -1.8189356327056885
    3. ')' → logprob: -4.318935871124268
    4. '   ' → logprob: -8.44393539428711
    5. ' ):' → logprob: -8.56893539428711
    6. ' ,' → logprob: -8.69393539428711
    7. '),' → logprob: -9.06893539428711
    8. '```' → logprob: -10.69393539428711
    9. '):
' → logprob: -10.94393539428711
    10. ' )' → logprob: -10.94393539428711

Token 55: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0154682956635952
    2. ')' → logprob: -5.015468120574951
    3. ' ,' → logprob: -5.765468120574951
    4. '):' → logprob: -6.015468120574951
    5. '   ' → logprob: -6.765468120574951
    6. ':' → logprob: -7.390468120574951
    7. '<|end|>' → logprob: -7.515468120574951
    8. '```' → logprob: -8.14046859741211
    9. ' :' → logprob: -9.14046859741211
    10. ',int' → logprob: -9.51546859741211

Token 56: ' Dern' (ID: 159363)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8628391027450562
    2. ' la' → logprob: -1.1128391027450562
    3. ' Le' → logprob: -2.6128392219543457
    4. ' l' → logprob: -2.9878392219543457
    5. ' ' → logprob: -3.7378392219543457
    6. ' max' → logprob: -4.237839221954346
    7. ' La' → logprob: -4.487839221954346
    8. ' The' → logprob: -4.487839221954346
    9. ' int' → logprob: -4.487839221954346
    10. ' #' → logprob: -5.112839221954346

Token 57: 'ière' (ID: 12452)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.6680458784103394
    2. 'e' → logprob: -1.0430458784103394
    3. 'ière' → logprob: -3.168045997619629
    4. 'ère' → logprob: -3.168045997619629
    5. 'è' → logprob: -4.043045997619629
    6. '_position' → logprob: -4.668045997619629
    7. 'é' → logprob: -4.793045997619629
    8. 'position' → logprob: -5.543045997619629
    9. 'r' → logprob: -5.918045997619629
    10. '   ' → logprob: -6.793045997619629

Token 58: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.21571218967437744
    2. ' ' → logprob: -1.9657121896743774
    3. 'position' → logprob: -3.215712070465088
    4. ' token' → logprob: -5.215712070465088
    5. '_' → logprob: -6.465712070465088
    6. '_position' → logprob: -6.965712070465088
    7. ' ligne' → logprob: -6.965712070465088
    8. ')' → logprob: -7.340712070465088
    9. ' )' → logprob: -7.465712070465088
    10. '  ' → logprob: -7.590712070465088

Token 59: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8102465271949768
    2. ')' → logprob: -1.810246467590332
    3. '   ' → logprob: -1.810246467590332
    4. ' (' → logprob: -2.935246467590332
    5. ' )' → logprob: -3.310246467590332
    6. '```' → logprob: -3.310246467590332
    7. ' ,' → logprob: -3.810246467590332
    8. '.' → logprob: -3.935246467590332
    9. '
' → logprob: -4.685246467590332
    10. '<|end|>' → logprob: -5.185246467590332

Token 60: ' atteindre' (ID: 95734)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.050714392215013504
    2. ' atteindre' → logprob: -3.0507144927978516
    3. ' atte' → logprob: -7.800714492797852
    4. 'at' → logprob: -7.925714492797852
    5. '   ' → logprob: -8.550714492797852
    6. ' parcour' → logprob: -8.800714492797852
    7. ' at' → logprob: -8.925714492797852
    8. ' rejoindre' → logprob: -9.425714492797852
    9. ' ' → logprob: -9.675714492797852
    10. 'par' → logprob: -9.800714492797852

Token 61: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.021005630493164
    2. '\n' → logprob: -1.396005630493164
    3. ',' → logprob: -1.771005630493164
    4. '
' → logprob: -2.396005630493164
    5. '```' → logprob: -3.021005630493164
    6. '\' → logprob: -3.771005630493164
    7. '    
' → logprob: -4.521005630493164
    8. ',
' → logprob: -5.021005630493164
    9. '.' → logprob: -5.021005630493164
    10. ')' → logprob: -5.271005630493164

Token 62: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10730274766683578
    2. ' )' → logprob: -3.357302665710449
    3. ',' → logprob: -3.482302665710449
    4. ' ' → logprob: -5.107302665710449
    5. ' int' → logprob: -5.482302665710449
    6. 'int' → logprob: -5.857302665710449
    7. ' dans' → logprob: -5.982302665710449
    8. '),' → logprob: -6.107302665710449
    9. ' ,' → logprob: -6.232302665710449
    10. ' index' → logprob: -6.357302665710449

Token 63: '-index' (ID: 45533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13335901498794556
    2. ' à' → logprob: -3.008358955383301
    3. ' )' → logprob: -3.383358955383301
    4. ',' → logprob: -3.633358955383301
    5. '-' → logprob: -5.883358955383301
    6. '+' → logprob: -6.883358955383301
    7. '...' → logprob: -7.133358955383301
    8. ' to' → logprob: -7.258358955383301
    9. '..' → logprob: -7.258358955383301
    10. ' -' → logprob: -7.258358955383301

Token 64: 'é' (ID: 377)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.43406060338020325
    2. 'é' → logprob: -1.0590605735778809
    3. 'e' → logprob: -5.934060573577881
    4. 'ée' → logprob: -6.184060573577881
    5. ')' → logprob: -7.559060573577881
    6. 'éd' → logprob: -10.809061050415039
    7. '```' → logprob: -11.184061050415039
    8. 'è' → logprob: -11.309061050415039
    9. 'ex' → logprob: -11.934061050415039
    10. 'eed' → logprob: -12.059061050415039

Token 65: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009806475136429071
    2. ').' → logprob: -7.750980854034424
    3. ' )' → logprob: -7.750980854034424
    4. ')
' → logprob: -9.500980377197266
    5. ',' → logprob: -11.250980377197266
    6. '),' → logprob: -11.625980377197266
    7. ')
' → logprob: -12.375980377197266
    8. '```' → logprob: -12.750980377197266
    9. ')\' → logprob: -12.875980377197266
    10. '):' → logprob: -13.000980377197266

Token 66: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2759608030319214
    2. '```' → logprob: -1.4009608030319214
    3. ')' → logprob: -1.9009608030319214
    4. ' 
' → logprob: -2.650960922241211
    5. '   ' → logprob: -3.025960922241211
    6. ''' → logprob: -3.025960922241211
    7. '  
' → logprob: -3.275960922241211
    8. '"""
' → logprob: -4.025960922241211
    9. '    
' → logprob: -4.150960922241211
    10. '"""' → logprob: -4.400960922241211

Token 67: ' M' (ID: 391)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6752718687057495
    2. ' S' → logprob: -1.6752718687057495
    3. 'S' → logprob: -1.8002718687057495
    4. '    ' → logprob: -3.550271987915039
    5. '"""' → logprob: -3.550271987915039
    6. '```' → logprob: -3.800271987915039
    7. ' """
' → logprob: -4.425271987915039
    8. ' """' → logprob: -4.800271987915039
    9. '"""
' → logprob: -5.050271987915039
    10. ' M' → logprob: -5.800271987915039

Token 68: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.11225347965955734
    2. '(int' → logprob: -2.862253427505493
    3. ')' → logprob: -3.487253427505493
    4. 'int' → logprob: -5.112253665924072
    5. ':int' → logprob: -5.237253665924072
    6. '=int' → logprob: -6.112253665924072
    7. ' int' → logprob: -6.487253665924072
    8. ':' → logprob: -7.487253665924072
    9. '):' → logprob: -7.612253665924072
    10. ' :' → logprob: -7.737253665924072

Token 69: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00010986098641296849
    2. ')' → logprob: -9.375109672546387
    3. ' int' → logprob: -10.625109672546387
    4. '=int' → logprob: -15.500109672546387
    5. ' )' → logprob: -15.625109672546387
    6. ':int' → logprob: -16.250110626220703
    7. ']int' → logprob: -16.625110626220703
    8. '1' → logprob: -16.875110626220703
    9. '[int' → logprob: -17.125110626220703
    10. '<int' → logprob: -17.625110626220703

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.181038960814476
    2. '):' → logprob: -1.8060389757156372
    3. '):
' → logprob: -7.681038856506348
    4. '```' → logprob: -7.806038856506348
    5. '   ' → logprob: -8.681038856506348
    6. ':' → logprob: -9.181038856506348
    7. ' ):' → logprob: -10.556038856506348
    8. ' ' → logprob: -10.681038856506348
    9. ',' → logprob: -10.931038856506348
    10. ' )' → logprob: -11.056038856506348

Token 71: ' :' (ID: 712)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6272278428077698
    2. ' :' → logprob: -1.752227783203125
    3. '   ' → logprob: -2.127227783203125
    4. ':' → logprob: -2.377227783203125
    5. ' ):' → logprob: -3.252227783203125
    6. ')' → logprob: -4.002227783203125
    7. ',' → logprob: -4.877227783203125
    8. ' ' → logprob: -5.002227783203125
    9. '```' → logprob: -5.752227783203125
    10. ' )' → logprob: -6.127227783203125

Token 72: ' Long' (ID: 7790)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.40027961134910583
    2. ' int' → logprob: -1.6502796411514282
    3. ' maximum' → logprob: -3.1502795219421387
    4. ' la' → logprob: -3.5252795219421387
    5. ' le' → logprob: -4.025279521942139
    6. 'max' → logprob: -4.400279521942139
    7. ' maximal' → logprob: -4.525279521942139
    8. ' maximale' → logprob: -5.025279521942139
    9. 'int' → logprob: -5.150279521942139
    10. ' ' → logprob: -6.150279521942139

Token 73: 'ueur' (ID: 43728)
  Prédit: 'eur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.18029703199863434
    2. 'ueur' → logprob: -1.8052970170974731
    3. 'er' → logprob: -8.180296897888184
    4. 'eurs' → logprob: -9.055296897888184
    5. 'uer' → logprob: -10.055296897888184
    6. ' max' → logprob: -10.180296897888184
    7. 'ue' → logprob: -10.930296897888184
    8. 'e' → logprob: -11.055296897888184
    9. ' eur' → logprob: -11.555296897888184
    10. 'eu' → logprob: -11.680296897888184

Token 74: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.1227542906999588
    2. 'max' → logprob: -3.3727543354034424
    3. ' maximal' → logprob: -3.7477543354034424
    4. ' de' → logprob: -3.9977543354034424
    5. ' maximum' → logprob: -3.9977543354034424
    6. ' max' → logprob: -4.872754096984863
    7. '_max' → logprob: -5.372754096984863
    8. ' des' → logprob: -5.497754096984863
    9. 'maximum' → logprob: -6.372754096984863
    10. ' du' → logprob: -6.497754096984863

Token 75: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5457663536071777
    2. ' du' → logprob: -1.5457663536071777
    3. ' de' → logprob: -1.7957663536071777
    4. ' d' → logprob: -4.420766353607178
    5. ' maximale' → logprob: -4.545766353607178
    6. ' ' → logprob: -5.420766353607178
    7. ')' → logprob: -5.920766353607178
    8. ' )' → logprob: -6.045766353607178
    9. '   ' → logprob: -6.295766353607178
    10. ' à' → logprob: -6.545766353607178

Token 76: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.12337490916252136
    2. 'e' → logprob: -2.9983749389648438
    3. ''' → logprob: -3.3733749389648438
    4. 'u' → logprob: -3.9983749389648438
    5. 'un' → logprob: -5.498374938964844
    6. ' un' → logprob: -5.748374938964844
    7. 'a' → logprob: -6.623374938964844
    8. ' saut' → logprob: -6.998374938964844
    9. ''une' → logprob: -7.748374938964844
    10. ' e' → logprob: -7.748374938964844

Token 77: ' saut' (ID: 111480)
  Prédit: ' saut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saut' → logprob: -0.4404980540275574
    2. 's' → logprob: -1.0654981136322021
    3. ' pas' → logprob: -5.315497875213623
    4. 'pas' → logprob: -6.315497875213623
    5. '_s' → logprob: -6.440497875213623
    6. '_' → logprob: -7.065497875213623
    7. ' ' → logprob: -7.440497875213623
    8. ' sa' → logprob: -7.940497875213623
    9. 'sal' → logprob: -8.565498352050781
    10. ' bond' → logprob: -8.690498352050781

Token 78: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4687134325504303
    2. ' )' → logprob: -1.468713402748108
    3. '   ' → logprob: -2.5937135219573975
    4. '.' → logprob: -4.218713283538818
    5. ').' → logprob: -4.343713283538818
    6. ',' → logprob: -4.468713283538818
    7. ' possible' → logprob: -5.343713283538818
    8. ' ).' → logprob: -5.343713283538818
    9. ' ):
' → logprob: -5.718713283538818
    10. '```' → logprob: -5.843713283538818

Token 79: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5215916633605957
    2. '
' → logprob: -1.8965916633605957
    3. ',' → logprob: -2.8965916633605957
    4. ')' → logprob: -3.0215916633605957
    5. '```' → logprob: -3.0215916633605957
    6. '"""
' → logprob: -3.8965916633605957
    7. '    
' → logprob: -4.021591663360596
    8. ' 
' → logprob: -4.021591663360596
    9. '"""' → logprob: -4.521591663360596
    10. ')
' → logprob: -5.271591663360596

Token 80: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5225120782852173
    2. '
' → logprob: -1.6475120782852173
    3. '"""
' → logprob: -1.7725120782852173
    4. 'S' (adapté à ' S') → logprob: -2.0225119590759277
    5. ' S' → logprob: -2.1475119590759277
    6. '"""' → logprob: -2.6475119590759277
    7. ' """
' → logprob: -3.3975119590759277
    8. '```' → logprob: -3.5225119590759277
    9. '\n' → logprob: -5.397511959075928
    10. ' """' → logprob: -5.647511959075928

Token 81: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42056718468666077
    2. ':' → logprob: -1.6705671548843384
    3. ' :' → logprob: -2.670567274093628
    4. ')' → logprob: -3.295567274093628
    5. '):
' → logprob: -4.420567035675049
    6. ' (' → logprob: -4.545567035675049
    7. '   ' → logprob: -4.670567035675049
    8. '```' → logprob: -5.170567035675049
    9. ' ):' → logprob: -5.420567035675049
    10. ':str' → logprob: -6.545567035675049

Token 82: 'str' (ID: 689)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04921070858836174
    2. '):' → logprob: -3.799210786819458
    3. ':' → logprob: -5.049210548400879
    4. ':str' → logprob: -5.424210548400879
    5. 'str' → logprob: -5.799210548400879
    6. ' str' → logprob: -6.174210548400879
    7. '[str' → logprob: -6.174210548400879
    8. '')' → logprob: -6.424210548400879
    9. '")' → logprob: -6.549210548400879
    10. '[' → logprob: -6.549210548400879

Token 83: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25555115938186646
    2. '):' → logprob: -1.5055510997772217
    3. ''):' → logprob: -7.005551338195801
    4. '):
' → logprob: -7.130551338195801
    5. '   ' → logprob: -7.130551338195801
    6. ':' → logprob: -7.880551338195801
    7. '')' → logprob: -8.1305513381958
    8. '")' → logprob: -9.0055513381958
    9. '"):' → logprob: -9.6305513381958
    10. ' ):' → logprob: -10.0055513381958

Token 84: ' :' (ID: 712)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2309669703245163
    2. ')' → logprob: -1.7309669256210327
    3. '   ' → logprob: -4.730967044830322
    4. ':' → logprob: -4.730967044830322
    5. ' :' → logprob: -5.855967044830322
    6. '):
' → logprob: -5.980967044830322
    7. ' ):' → logprob: -5.980967044830322
    8. ' )' → logprob: -6.480967044830322
    9. '"""' → logprob: -7.730967044830322
    10. '    ' → logprob: -7.980967044830322

Token 85: ' Cha' (ID: 37219)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.7333543300628662
    2. ''' → logprob: -1.4833543300628662
    3. ' ' → logprob: -1.4833543300628662
    4. '"' → logprob: -3.608354330062866
    5. ' str' → logprob: -4.483354568481445
    6. '   ' → logprob: -4.983354568481445
    7. ' "' → logprob: -5.233354568481445
    8. '    ' → logprob: -5.608354568481445
    9. ' une' → logprob: -6.608354568481445
    10. 'str' → logprob: -6.733354568481445

Token 86: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.07666561752557755
    2. 'î' → logprob: -2.8266656398773193
    3. 'r' → logprob: -4.82666540145874
    4. '\' → logprob: -6.20166540145874
    5. '```' → logprob: -6.95166540145874
    6. '   ' → logprob: -7.45166540145874
    7. 'îner' → logprob: -7.82666540145874
    8. 'ïne' → logprob: -7.95166540145874
    9. 'în' → logprob: -8.076665878295898
    10. 'înes' → logprob: -8.201665878295898

Token 87: ' b' (ID: 287)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2919500768184662
    2. 'de' → logprob: -2.666949987411499
    3. ')' → logprob: -3.041949987411499
    4. ' )' → logprob: -4.041950225830078
    5. ' contenant' → logprob: -4.041950225830078
    6. ' representing' → logprob: -4.166950225830078
    7. ' ' → logprob: -4.416950225830078
    8. '<|end|>' → logprob: -4.541950225830078
    9. '"' → logprob: -4.791950225830078
    10. ' containing' → logprob: -4.791950225830078

Token 88: 'inaire' (ID: 41465)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1333007961511612
    2. 'e' → logprob: -2.63330078125
    3. 'inaire' → logprob: -4.13330078125
    4. ' '' → logprob: -5.25830078125
    5. ' contenant' → logprob: -5.88330078125
    6. ')' → logprob: -6.25830078125
    7. 'r' → logprob: -6.25830078125
    8. ' =' → logprob: -6.38330078125
    9. ' de' → logprob: -6.38330078125
    10. '```' → logprob: -6.38330078125

Token 89: ' invers' (ID: 38721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7589579224586487
    2. ''' → logprob: -1.008957862854004
    3. '"' → logprob: -2.633957862854004
    4. ')' → logprob: -2.883957862854004
    5. '')' → logprob: -4.758957862854004
    6. ',' → logprob: -5.383957862854004
    7. '")' → logprob: -5.383957862854004
    8. ' )' → logprob: -5.633957862854004
    9. '):' → logprob: -5.633957862854004
    10. ' '' → logprob: -6.258957862854004

Token 90: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5321640968322754
    2. 'ée' → logprob: -0.9071640968322754
    3. 'e' → logprob: -5.782164096832275
    4. 'ér' → logprob: -6.032164096832275
    5. 'rée' → logprob: -6.782164096832275
    6. 'érée' → logprob: -6.907164096832275
    7. 'és' → logprob: -8.032163619995117
    8. 'ers' → logprob: -9.282163619995117
    9. 'érieure' → logprob: -9.407163619995117
    10. 'ère' → logprob: -9.407163619995117

Token 91: ' représentant' (ID: 136122)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2042558193206787
    2. '):' → logprob: -1.7042558193206787
    3. '"' → logprob: -1.8292558193206787
    4. ''' → logprob: -1.9542558193206787
    5. '   ' → logprob: -3.2042558193206787
    6. ':' → logprob: -3.3292558193206787
    7. '"""' → logprob: -4.079256057739258
    8. '":' → logprob: -4.204256057739258
    9. ' :' → logprob: -4.204256057739258
    10. ',' → logprob: -4.329256057739258

Token 92: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4079955518245697
    2. ' l' → logprob: -1.782995581626892
    3. ' le' → logprob: -2.1579954624176025
    4. ' les' → logprob: -3.2829954624176025
    5. ' une' → logprob: -6.032995700836182
    6. 'le' → logprob: -6.407995700836182
    7. ' un' → logprob: -6.532995700836182
    8. 'l' → logprob: -6.657995700836182
    9. ' '' → logprob: -6.657995700836182
    10. ' ' → logprob: -6.657995700836182

Token 93: ' traject' (ID: 81313)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -1.219897985458374
    2. 'position' → logprob: -1.219897985458374
    3. 's' → logprob: -1.469897985458374
    4. ' chaîne' → logprob: -3.469897985458374
    5. 'positions' → logprob: -3.719897985458374
    6. 'c' → logprob: -3.844897985458374
    7. ' positions' → logprob: -4.094898223876953
    8. ' ' → logprob: -4.719898223876953
    9. 'chaine' → logprob: -4.844898223876953
    10. ' s' → logprob: -4.969898223876953

Token 94: 'oire' (ID: 31141)
  Prédit: 'ction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ction' → logprob: -0.44270724058151245
    2. 'c' → logprob: -1.8177073001861572
    3. 'ct' → logprob: -2.1927073001861572
    4. 'n' → logprob: -3.8177073001861572
    5. 's' → logprob: -4.567707061767578
    6. ')' → logprob: -4.692707061767578
    7. 'u' → logprob: -5.567707061767578
    8. 'e' → logprob: -5.692707061767578
    9. 'l' → logprob: -5.942707061767578
    10. 'd' → logprob: -5.942707061767578

Token 95: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9199583530426025
    2. ')' → logprob: -1.0449583530426025
    3. '   ' → logprob: -1.7949583530426025
    4. ':' → logprob: -3.4199583530426025
    5. '):
' → logprob: -4.419958114624023
    6. '"' → logprob: -4.794958114624023
    7. ',' → logprob: -5.169958114624023
    8. ''' → logprob: -5.544958114624023
    9. ' ' → logprob: -5.669958114624023
    10. ' :' → logprob: -6.169958114624023

Token 96: ' où' (ID: 15113)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3965918719768524
    2. '   ' → logprob: -1.7715919017791748
    3. '"' → logprob: -2.271591901779175
    4. ' ' → logprob: -3.646591901779175
    5. ')' → logprob: -5.146591663360596
    6. ' '' → logprob: -5.771591663360596
    7. '```' → logprob: -6.021591663360596
    8. '    ' → logprob: -6.146591663360596
    9. '"""' → logprob: -6.146591663360596
    10. '  ' → logprob: -6.771591663360596

Token 97: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6957676410675049
    2. ' '' → logprob: -0.8207676410675049
    3. ' la' → logprob: -3.570767641067505
    4. ' le' → logprob: -4.820767402648926
    5. ' les' → logprob: -5.320767402648926
    6. ''on' → logprob: -5.445767402648926
    7. ' on' → logprob: -5.820767402648926
    8. ' l' → logprob: -6.070767402648926
    9. ' chaque' → logprob: -6.320767402648926
    10. ' ' → logprob: -6.820767402648926

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008418825455009937
    2. '1' → logprob: -4.883419036865234
    3. ' ' → logprob: -7.633419036865234
    4. ''' → logprob: -8.383419036865234
    5. '')' → logprob: -9.758419036865234
    6. ' '' → logprob: -11.133419036865234
    7. ' ')' → logprob: -11.258419036865234
    8. ')' → logprob: -13.195919036865234
    9. '.' → logprob: -13.258419036865234
    10. ''s' → logprob: -13.320919036865234

Token 99: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25436413288116455
    2. '')' → logprob: -1.5043641328811646
    3. ' '' → logprob: -7.254364013671875
    4. ' ')' → logprob: -7.504364013671875
    5. ')' → logprob: -8.629364013671875
    6. ''s' → logprob: -8.754364013671875
    7. ')'' → logprob: -8.754364013671875
    8. '',' → logprob: -9.379364013671875
    9. ''):' → logprob: -9.629364013671875
    10. ''):
' → logprob: -9.879364013671875

Token 100: ' permet' (ID: 11798)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5531367063522339
    2. ')' → logprob: -1.8031367063522339
    3. ' est' → logprob: -1.8031367063522339
    4. '')' → logprob: -3.0531368255615234
    5. ' continue' → logprob: -4.553136825561523
    6. '"' → logprob: -5.428136825561523
    7. ' ' → logprob: -5.553136825561523
    8. ' )' → logprob: -5.678136825561523
    9. ' '' → logprob: -6.303136825561523
    10. ''s' → logprob: -6.303136825561523

Token 101: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6318813562393188
    2. ' d' → logprob: -1.0068813562393188
    3. ' le' → logprob: -2.6318812370300293
    4. ' l' → logprob: -4.881881237030029
    5. ' des' → logprob: -5.131881237030029
    6. ' les' → logprob: -5.506881237030029
    7. 'de' → logprob: -5.631881237030029
    8. ' un' → logprob: -5.881881237030029
    9. ' la' → logprob: -6.006881237030029
    10. 'd' → logprob: -6.006881237030029

Token 102: ' marcher' (ID: 171848)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14088201522827148
    2. ' sa' → logprob: -3.5158820152282715
    3. ' avancer' → logprob: -3.7658820152282715
    4. ' at' → logprob: -4.3908820152282715
    5. ' ' → logprob: -4.6408820152282715
    6. 'a' → logprob: -4.7658820152282715
    7. 'sa' → logprob: -5.1408820152282715
    8. ' faire' → logprob: -5.2658820152282715
    9. 'r' → logprob: -5.2658820152282715
    10. 'u' → logprob: -5.6408820152282715

Token 103: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8530027270317078
    2. '   ' → logprob: -1.4780027866363525
    3. ''' → logprob: -1.9780027866363525
    4. '')' → logprob: -2.4780027866363525
    5. '):' → logprob: -3.7280027866363525
    6. ',' → logprob: -3.8530027866363525
    7. ''):' → logprob: -4.103002548217773
    8. '):
' → logprob: -4.228002548217773
    9. '.' → logprob: -4.728002548217773
    10. ''):
' → logprob: -4.978002548217773

Token 104: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.39541399478912354
    2. ' '' → logprob: -1.1454139947891235
    3. ''un' → logprob: -6.020413875579834
    4. ''s' → logprob: -6.770413875579834
    5. '   ' → logprob: -7.020413875579834
    6. ''on' → logprob: -7.770413875579834
    7. ''a' → logprob: -7.770413875579834
    8. ''l' → logprob: -8.270414352416992
    9. ''il' → logprob: -8.395414352416992
    10. '       ' → logprob: -8.395414352416992

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09514661133289337
    2. ''' → logprob: -2.470146656036377
    3. '0' → logprob: -5.720146656036377
    4. ' '' → logprob: -6.845146656036377
    5. '')' → logprob: -6.970146656036377
    6. ' ' → logprob: -7.345146656036377
    7. ''s' → logprob: -8.720146179199219
    8. ' ')' → logprob: -10.470146179199219
    9. 's' → logprob: -11.345146179199219
    10. ')' → logprob: -11.720146179199219

Token 106: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00029613598599098623
    2. '')' → logprob: -8.375296592712402
    3. ''autor' → logprob: -10.250296592712402
    4. ' permet' → logprob: -11.875296592712402
    5. ' '' → logprob: -12.250296592712402
    6. ''ex' → logprob: -13.125296592712402
    7. ''in' → logprob: -13.250296592712402
    8. ''aut' → logprob: -13.500296592712402
    9. ''''' → logprob: -13.500296592712402
    10. ''s' → logprob: -13.750296592712402

Token 107: ' bloque' (ID: 53581)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.09664031863212585
    2. ' interdit' → logprob: -3.0966403484344482
    3. ' autor' → logprob: -3.4716403484344482
    4. ' permettent' → logprob: -4.471640110015869
    5. ' emp' → logprob: -6.471640110015869
    6. 'per' → logprob: -7.471640110015869
    7. ' allow' → logprob: -7.721640110015869
    8. ' bloque' → logprob: -7.846640110015869
    9. ')' → logprob: -8.596640586853027
    10. ' author' → logprob: -8.971640586853027

Token 108: '.
' (ID: 558)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.19273903965950012
    2. ' l' → logprob: -2.3177390098571777
    3. ' le' → logprob: -3.9427390098571777
    4. ')' → logprob: -4.442739009857178
    5. ' )' → logprob: -4.942739009857178
    6. ' ' → logprob: -5.192739009857178
    7. '   ' → logprob: -5.442739009857178
    8. ' d' → logprob: -5.442739009857178
    9. ' les' → logprob: -5.692739009857178
    10. ' '' → logprob: -5.817739009857178

Token 109: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35380104184150696
    2. ')' → logprob: -1.2288010120391846
    3. '"""' → logprob: -6.353801250457764
    4. ')
' → logprob: -6.978801250457764
    5. '"' → logprob: -7.228801250457764
    6. '
' → logprob: -7.478801250457764
    7. ' ' → logprob: -8.478800773620605
    8. '```' → logprob: -8.478800773620605
    9. ' 
' → logprob: -8.728800773620605
    10. ' )' → logprob: -9.103800773620605

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005403796210885048
    2. '"""' → logprob: -5.630403995513916
    3. '```' → logprob: -7.255403995513916
    4. '
' → logprob: -7.880403995513916
    5. '"""
' → logprob: -8.630403518676758
    6. ')' → logprob: -8.630403518676758
    7. '"' → logprob: -9.505403518676758
    8. ' """
' → logprob: -9.630403518676758
    9. ' """' → logprob: -9.755403518676758
    10. '    
' → logprob: -10.255403518676758

Token 111: ' Retour' (ID: 146830)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.7690098881721497
    2. '   ' → logprob: -1.1440098285675049
    3. '"""' → logprob: -2.019009828567505
    4. 'Returns' → logprob: -3.394009828567505
    5. ' """
' → logprob: -3.769009828567505
    6. '```' → logprob: -4.144010066986084
    7. '
' → logprob: -5.394010066986084
    8. 'returns' → logprob: -6.644010066986084
    9. ' """' → logprob: -6.894010066986084
    10. 'def' → logprob: -7.019010066986084

Token 112: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10269469022750854
    2. 'ne' → logprob: -2.3526947498321533
    3. 'e' → logprob: -6.977694511413574
    4. '   ' → logprob: -7.352694511413574
    5. 'ner' → logprob: -8.102694511413574
    6. 'nne' → logprob: -9.352694511413574
    7. ' :' → logprob: -9.602694511413574
    8. 'na' → logprob: -9.602694511413574
    9. 'nera' → logprob: -9.602694511413574
    10. ' n' → logprob: -9.727694511413574

Token 113: ' :
' (ID: 10039)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.46625441312789917
    2. ' ' → logprob: -1.216254472732544
    3. ' la' → logprob: -3.966254472732544
    4. ' le' → logprob: -4.466254234313965
    5. ' True' → logprob: -4.466254234313965
    6. ' ' → logprob: -4.841254234313965
    7. ' len' → logprob: -4.841254234313965
    8. ' a' → logprob: -6.091254234313965
    9. ':' → logprob: -6.216254234313965
    10. ' ```' → logprob: -6.341254234313965

Token 114: '       ' (ID: 309)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.830967366695404
    2. ' []' → logprob: -1.7059674263000488
    3. '   ' → logprob: -1.8309674263000488
    4. ' ' → logprob: -3.080967426300049
    5. ' ' → logprob: -3.455967426300049
    6. '    ' → logprob: -3.580967426300049
    7. 'None' → logprob: -4.580967426300049
    8. '1' → logprob: -4.830967426300049
    9. ' steps' → logprob: -4.830967426300049
    10. 'n' → logprob: -4.955967426300049

Token 115: ' list' (ID: 1562)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05998580902814865
    2. 'int' → logprob: -3.059985876083374
    3. ' tuple' → logprob: -5.434985637664795
    4. ' list' → logprob: -6.059985637664795
    5. ' None' → logprob: -7.059985637664795
    6. ' dict' → logprob: -7.184985637664795
    7. ' (' → logprob: -7.434985637664795
    8. '   ' → logprob: -7.559985637664795
    9. ' la' → logprob: -8.184986114501953
    10. '(int' → logprob: -8.184986114501953

Token 116: ' :' (ID: 712)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.01640395075082779
    2. '[' → logprob: -4.141404151916504
    3. '[
' → logprob: -9.391404151916504
    4. '<|end|>' → logprob: -9.891404151916504
    5. '[List' → logprob: -9.891404151916504
    6. '<int' → logprob: -10.016404151916504
    7. '[Int' → logprob: -10.266404151916504
    8. '[]' → logprob: -10.266404151916504
    9. '[str' → logprob: -11.266404151916504
    10. ' [' → logprob: -11.391404151916504

Token 117: ' Liste' (ID: 61030)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.27910247445106506
    2. ' []' → logprob: -1.7791024446487427
    3. ' [' → logprob: -3.2791025638580322
    4. '[' → logprob: -4.154102325439453
    5. ' None' → logprob: -4.529102325439453
    6. ' La' → logprob: -5.779102325439453
    7. '[int' → logprob: -6.404102325439453
    8. ' la' → logprob: -7.029102325439453
    9. ' A' → logprob: -7.029102325439453
    10. ' The' → logprob: -7.529102325439453

Token 118: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.28326505422592163
    2. '[' → logprob: -1.9082651138305664
    3. '<|end|>' → logprob: -3.0332651138305664
    4. '[int' → logprob: -3.4082651138305664
    5. ' of' → logprob: -5.283265113830566
    6. 'des' → logprob: -5.533265113830566
    7. '[
' → logprob: -6.533265113830566
    8. ' de' → logprob: -7.283265113830566
    9. '(' → logprob: -7.283265113830566
    10. '_des' → logprob: -7.408265113830566

Token 119: ' nombre' (ID: 9733)
  Prédit: ' chemin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chemin' → logprob: -0.10155894607305527
    2. ' parcours' → logprob: -3.3515589237213135
    3. 's' → logprob: -3.6015589237213135
    4. ' des' → logprob: -4.851559162139893
    5. ' trajet' → logprob: -5.101559162139893
    6. 'int' → logprob: -5.976559162139893
    7. 'pas' → logprob: -6.226559162139893
    8. ' int' → logprob: -6.476559162139893
    9. 'che' → logprob: -6.476559162139893
    10. ' plus' → logprob: -6.601559162139893

Token 120: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.05870472267270088
    2. ' de' → logprob: -3.3087046146392822
    3. '_des' → logprob: -4.308704853057861
    4. ' ' → logprob: -6.433704853057861
    5. ' d' → logprob: -6.433704853057861
    6. '[]' → logprob: -7.308704853057861
    7. '_tokens' → logprob: -7.308704853057861
    8. '[' → logprob: -7.558704853057861
    9. 's' → logprob: -8.058704376220703
    10. 'des' → logprob: -8.183704376220703

Token 121: ' pas' (ID: 2173)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.37145963311195374
    2. ' pas' → logprob: -2.121459722518921
    3. 'pas' → logprob: -2.246459722518921
    4. 'steps' → logprob: -2.746459722518921
    5. ' étapes' → logprob: -5.121459484100342
    6. 's' → logprob: -5.371459484100342
    7. ' ' → logprob: -5.996459484100342
    8. '_steps' → logprob: -6.371459484100342
    9. ' pasos' → logprob: -6.496459484100342
    10. ' passos' → logprob: -6.621459484100342

Token 122: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3822748064994812
    2. ' ' → logprob: -1.757274866104126
    3. '[' → logprob: -3.007274866104126
    4. '[]' → logprob: -3.757274866104126
    5. ' []' → logprob: -4.257274627685547
    6. ' [' → logprob: -4.382274627685547
    7. '_' → logprob: -4.882274627685547
    8. '<|end|>' → logprob: -5.007274627685547
    9. '   ' → logprob: -5.507274627685547
    10. '  ' → logprob: -5.757274627685547

Token 123: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.7865334749221802
    2. ' chaque' → logprob: -1.1615334749221802
    3. 'faire' → logprob: -2.1615333557128906
    4. 'atte' → logprob: -3.4115333557128906
    5. 'part' → logprob: -3.9115333557128906
    6. ' ' → logprob: -4.911533355712891
    7. ' atteindre' → logprob: -5.036533355712891
    8. '   ' → logprob: -5.286533355712891
    9. 'l' → logprob: -5.536533355712891
    10. '_' → logprob: -5.661533355712891

Token 124: ' saut' (ID: 111480)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -1.1712725162506104
    2. 'pas' → logprob: -1.5462725162506104
    3. 'index' → logprob: -1.7962725162506104
    4. 'indice' → logprob: -2.2962725162506104
    5. ' index' → logprob: -2.9212725162506104
    6. ' niveau' → logprob: -3.4212725162506104
    7. 'position' → logprob: -3.6712725162506104
    8. 's' → logprob: -3.7962725162506104
    9. 'niveau' → logprob: -3.9212725162506104
    10. 'point' → logprob: -4.421272277832031

Token 125: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27010467648506165
    2. ':
' → logprob: -2.3951046466827393
    3. '   ' → logprob: -2.5201046466827393
    4. '
' → logprob: -4.145104885101318
    5. '\n' → logprob: -4.270104885101318
    6. ')' → logprob: -4.645104885101318
    7. '):' → logprob: -5.270104885101318
    8. ' :' → logprob: -5.645104885101318
    9. ' ' → logprob: -5.770104885101318
    10. ' :
' → logprob: -6.270104885101318

Token 126: ' dans' (ID: 2671)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2740243971347809
    2. ' []' → logprob: -1.8990243673324585
    3. ' None' → logprob: -2.899024486541748
    4. ' ou' → logprob: -4.024024486541748
    5. ' or' → logprob: -5.149024486541748
    6. '   ' → logprob: -5.274024486541748
    7. 'None' → logprob: -5.774024486541748
    8. '[' → logprob: -6.774024486541748
    9. ' [' → logprob: -7.649024486541748
    10. ' ' → logprob: -8.14902400970459

Token 127: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.49830320477485657
    2. ' reverse' → logprob: -2.123303174972534
    3. 'reverse' → logprob: -2.248303174972534
    4. '[]' → logprob: -2.498303174972534
    5. 'l' → logprob: -3.123303174972534
    6. ' le' → logprob: -4.748303413391113
    7. 'ordre' → logprob: -4.998303413391113
    8. '[::-' → logprob: -5.373303413391113
    9. ' la' → logprob: -5.623303413391113
    10. ' order' → logprob: -6.123303413391113

Token 128: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31448522210121155
    2. ''ordre' → logprob: -1.5644851922988892
    3. 'e' → logprob: -4.0644850730896
    4. ''' → logprob: -4.0644850730896
    5. ''espace' → logprob: -4.4394850730896
    6. ''ensemble' → logprob: -5.8144850730896
    7. 'es' → logprob: -6.1894850730896
    8. '[]' → logprob: -6.1894850730896
    9. ''instant' → logprob: -6.5644850730896
    10. ' a' → logprob: -6.8144850730896

Token 129: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2443573474884033
    2. '[' → logprob: -1.7443573474884033
    3. '\n' → logprob: -2.1193573474884033
    4. ':' → logprob: -2.2443573474884033
    5. '   ' → logprob: -2.7443573474884033
    6. ')' → logprob: -2.9943573474884033
    7. '\' → logprob: -3.6193573474884033
    8. ' 
' → logprob: -3.6193573474884033
    9. ',' → logprob: -3.6193573474884033
    10. ' :' → logprob: -4.119357109069824

Token 130: ' trajet' (ID: 110258)
  Prédit: ' départ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' départ' → logprob: -1.0842006206512451
    2. ' retour' → logprob: -2.084200620651245
    3. ' plus' → logprob: -2.334200620651245
    4. 's' → logprob: -2.584200620651245
    5. ' parcours' → logprob: -2.709200620651245
    6. ' chemin' → logprob: -2.709200620651245
    7. 'quel' → logprob: -3.334200620651245
    8. 'ret' → logprob: -3.834200620651245
    9. 'dé' → logprob: -3.834200620651245
    10. ' déplacement' → logprob: -3.959200620651245

Token 131: ' optimal' (ID: 24174)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4548191726207733
    2. ':' → logprob: -1.2048192024230957
    3. '
' → logprob: -3.9548192024230957
    4. '    
' → logprob: -3.9548192024230957
    5. '\n' → logprob: -4.329819202423096
    6. ':
' → logprob: -4.954819202423096
    7. '   
' → logprob: -6.579819202423096
    8. '  
' → logprob: -6.579819202423096
    9. ' 
' → logprob: -7.079819202423096
    10. '```' → logprob: -7.329819202423096

Token 132: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30877354741096497
    2. ':
' → logprob: -1.6837735176086426
    3. '   ' → logprob: -2.9337735176086426
    4. '
' → logprob: -4.433773517608643
    5. ')' → logprob: -5.308773517608643
    6. '\n' → logprob: -5.308773517608643
    7. '):
' → logprob: -6.933773517608643
    8. '    
' → logprob: -6.933773517608643
    9. '):' → logprob: -6.933773517608643
    10. '```' → logprob: -7.683773517608643

Token 133: ' ou' (ID: 2031)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.4897298812866211
    2. ' ou' → logprob: -1.364729881286621
    3. '   ' → logprob: -3.114729881286621
    4. ' []' → logprob: -3.239729881286621
    5. 'None' → logprob: -3.614729881286621
    6. '[]' → logprob: -4.489729881286621
    7. ' or' → logprob: -5.114729881286621
    8. '    ' → logprob: -6.989729881286621
    9. 'ou' → logprob: -7.364729881286621
    10. '       ' → logprob: -7.489729881286621

Token 134: ' [-' (ID: 20191)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.19514872133731842
    2. 'None' → logprob: -2.5701487064361572
    3. ' []' → logprob: -2.8201487064361572
    4. '[]' → logprob: -3.1951487064361572
    5. '   ' → logprob: -9.320148468017578
    6. ' []
' → logprob: -10.320148468017578
    7. ' ' → logprob: -10.820148468017578
    8. ' ' → logprob: -11.820148468017578
    9. '[]
' → logprob: -12.195148468017578
    10. ' False' → logprob: -12.195148468017578

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '2' → logprob: -16.000001907348633
    4. 'inf' → logprob: -16.750001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '

' → logprob: -18.500001907348633
    7. 'N' → logprob: -18.687501907348633
    8. '-' → logprob: -18.687501907348633
    9. ']' → logprob: -18.750001907348633
    10. '۱' → logprob: -18.812501907348633

Token 136: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.583550642360933e-05
    2. ' ]' → logprob: -10.375036239624023
    3. '],' → logprob: -14.125036239624023
    4. '   ' → logprob: -14.375036239624023
    5. '])' → logprob: -14.500036239624023
    6. '0' → logprob: -14.625036239624023
    7. ')' → logprob: -14.875036239624023
    8. '}' → logprob: -15.000036239624023
    9. ']>' → logprob: -15.375036239624023
    10. '[' → logprob: -15.625036239624023

Token 137: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8703737854957581
    2. ':' → logprob: -1.2453737258911133
    3. '
' → logprob: -2.7453737258911133
    4. ' ' → logprob: -2.8703737258911133
    5. '\n' → logprob: -2.8703737258911133
    6. '[' → logprob: -3.3703737258911133
    7. ':
' → logprob: -3.8703737258911133
    8. 'def' → logprob: -4.245373725891113
    9. '```' → logprob: -4.370373725891113
    10. ' 
' → logprob: -5.495373725891113

Token 138: ''il' (ID: 14683)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02056805044412613
    2. ''il' → logprob: -4.020567893981934
    3. 'ans' → logprob: -6.895567893981934
    4. ''i' → logprob: -7.645567893981934
    5. 'u' → logprob: -9.145567893981934
    6. '```' → logprob: -9.145567893981934
    7. ''' → logprob: -9.395567893981934
    8. ''ils' → logprob: -9.645567893981934
    9. '['' → logprob: -9.895567893981934
    10. '[i' → logprob: -9.895567893981934

Token 139: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3284345865249634
    2. 'n' → logprob: -1.4534345865249634
    3. ''' → logprob: -4.203434467315674
    4. ''est' → logprob: -4.203434467315674
    5. ''n' → logprob: -5.078434467315674
    6. 'e' → logprob: -6.078434467315674
    7. ' est' → logprob: -6.203434467315674
    8. ' impossible' → logprob: -6.453434467315674
    9. 'est' → logprob: -6.828434467315674
    10. ''agit' → logprob: -7.203434467315674

Token 140: ''ex' (ID: 23472)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0573610067367554
    2. ''est' → logprob: -1.3073610067367554
    3. ''' → logprob: -1.4323610067367554
    4. 'é' → logprob: -3.057361125946045
    5. ''e' → logprob: -3.932361125946045
    6. 'est' → logprob: -4.182361125946045
    7. ''ex' → logprob: -4.307361125946045
    8. ''y' → logprob: -5.182361125946045
    9. ''arrive' → logprob: -5.432361125946045
    10. 'u' → logprob: -5.432361125946045

Token 141: 'iste' (ID: 4872)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.9762140512466431
    2. 'e' → logprob: -1.101214051246643
    3. 't' → logprob: -2.1012139320373535
    4. 'iste' → logprob: -2.4762139320373535
    5. 'p' → logprob: -3.1012139320373535
    6. ']' → logprob: -5.2262139320373535
    7. 'é' → logprob: -5.7262139320373535
    8. 'u' → logprob: -5.8512139320373535
    9. 'cept' → logprob: -5.9762139320373535
    10. 'it' → logprob: -6.1012139320373535

Token 142: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.05561234429478645
    2. 'pas' → logprob: -3.180612325668335
    3. '])' → logprob: -5.430612564086914
    4. ']' → logprob: -5.555612564086914
    5. '_pas' → logprob: -5.930612564086914
    6. ' ])' → logprob: -7.305612564086914
    7. ' ]' → logprob: -8.305612564086914
    8. ')' → logprob: -8.930612564086914
    9. ' aucun' → logprob: -9.305612564086914
    10. ' ' → logprob: -9.680612564086914

Token 143: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39608845114707947
    2. '   ' → logprob: -1.3960884809494019
    3. ':
' → logprob: -3.2710883617401123
    4. '\n' → logprob: -4.396088600158691
    5. '):' → logprob: -4.521088600158691
    6. ')' → logprob: -4.771088600158691
    7. '
' → logprob: -5.521088600158691
    8. '    
' → logprob: -5.896088600158691
    9. '):
' → logprob: -7.271088600158691
    10. '\' → logprob: -8.021088600158691

Token 144: ' traject' (ID: 81313)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.5209634304046631
    2. 'solution' → logprob: -1.770963430404663
    3. ' trajet' → logprob: -2.270963430404663
    4. ' chemin' → logprob: -2.645963430404663
    5. 'che' → logprob: -3.895963430404663
    6. 's' → logprob: -4.270963668823242
    7. 'possible' → logprob: -5.020963668823242
    8. ' possible' → logprob: -5.770963668823242
    9. ' parcours' → logprob: -5.770963668823242
    10. 'sol' → logprob: -6.395963668823242

Token 145: 'oire' (ID: 31141)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.013230114243924618
    2. 'e' → logprob: -5.263230323791504
    3. 'et' → logprob: -6.013230323791504
    4. 'ée' → logprob: -6.013230323791504
    5. 'ection' → logprob: -7.263230323791504
    6. 'ation' → logprob: -7.513230323791504
    7. 'ion' → logprob: -7.888230323791504
    8. 'ect' → logprob: -8.263230323791504
    9. 'ory' → logprob: -8.763230323791504
    10. ')' → logprob: -9.138230323791504

Token 146: ' valide' (ID: 137323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06983182579278946
    2. ':' → logprob: -3.5698318481445312
    3. ')' → logprob: -4.444831848144531
    4. '\n' → logprob: -4.694831848144531
    5. '):' → logprob: -5.444831848144531
    6. '
' → logprob: -5.444831848144531
    7. '    
' → logprob: -5.694831848144531
    8. ':
' → logprob: -6.444831848144531
    9. '\' → logprob: -7.194831848144531
    10. '"""' → logprob: -7.194831848144531

Token 147: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32556208968162537
    2. ':' → logprob: -1.9505621194839478
    3. ')' → logprob: -2.325562000274658
    4. '"""' → logprob: -4.450562000274658
    5. '):' → logprob: -4.825562000274658
    6. '
' → logprob: -5.450562000274658
    7. '\n' → logprob: -5.575562000274658
    8. ':
' → logprob: -5.700562000274658
    9. '"""
' → logprob: -6.825562000274658
    10. '"' → logprob: -6.950562000274658

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17956481873989105
    2. ')' → logprob: -2.1795647144317627
    3. ':' → logprob: -3.4295647144317627
    4. '
' → logprob: -5.429564952850342
    5. '):' → logprob: -5.429564952850342
    6. '"""' → logprob: -5.804564952850342
    7. '"' → logprob: -6.179564952850342
    8. '\n' → logprob: -6.679564952850342
    9. '```' → logprob: -6.804564952850342
    10. '    
' → logprob: -7.179564952850342

Token 149: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21642042696475983
    2. ':' → logprob: -2.5914204120635986
    3. '
' → logprob: -2.5914204120635986
    4. '\n' → logprob: -4.216420650482178
    5. '"""' → logprob: -4.841420650482178
    6. '    
' → logprob: -4.966420650482178
    7. ':
' → logprob: -5.591420650482178
    8. '```' → logprob: -6.091420650482178
    9. ' 
' → logprob: -6.216420650482178
    10. ')' → logprob: -6.341420650482178

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010407903464511037
    2. '    
' → logprob: -7.626040935516357
    3. ' visited' → logprob: -9.1260404586792
    4. 'n' → logprob: -9.2510404586792
    5. 'visited' → logprob: -9.5010404586792
    6. '    ' → logprob: -10.0010404586792
    7. 'def' → logprob: -10.0010404586792
    8. ' queue' → logprob: -10.1260404586792
    9. '
' → logprob: -10.3760404586792
    10. 'queue' → logprob: -10.5010404586792

Token 151: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6081305146217346
    2. 'visited' → logprob: -1.2331304550170898
    3. 'dist' → logprob: -2.60813045501709
    4. ' visited' → logprob: -3.35813045501709
    5. 'dp' → logprob: -3.73313045501709
    6. ' queue' → logprob: -4.35813045501709
    7. '   ' → logprob: -4.48313045501709
    8. 'steps' → logprob: -5.98313045501709
    9. 'distance' → logprob: -6.10813045501709
    10. ' dist' → logprob: -7.48313045501709

Token 152: ' Aj' (ID: 28294)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6890370845794678
    2. 'queue' → logprob: -1.1890370845794678
    3. ' visited' → logprob: -2.0640370845794678
    4. ' queue' → logprob: -3.1890370845794678
    5. 'dp' → logprob: -4.689037322998047
    6. 'if' → logprob: -6.064037322998047
    7. 'dist' → logprob: -6.064037322998047
    8. '   ' → logprob: -6.189037322998047
    9. 'steps' → logprob: -6.814037322998047
    10. ' if' → logprob: -6.814037322998047

Token 153: 'oute' (ID: 3509)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.1588243842124939
    2. 'outer' → logprob: -2.1588244438171387
    3. 'oute' → logprob: -3.5338244438171387
    4. 'outez' → logprob: -6.658824443817139
    5. 'outes' → logprob: -7.408824443817139
    6. 'outs' → logprob: -9.53382396697998
    7. '   ' → logprob: -9.90882396697998
    8. 'o' → logprob: -10.15882396697998
    9. 'ou' → logprob: -10.65882396697998
    10. 'ust' → logprob: -10.78382396697998

Token 154: ' des' (ID: 731)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7796767354011536
    2. ' une' → logprob: -0.7796767354011536
    3. '_' → logprob: -4.029676914215088
    4. '   ' → logprob: -4.404676914215088
    5. 'e' → logprob: -4.779676914215088
    6. 'er' → logprob: -5.029676914215088
    7. ' a' → logprob: -5.154676914215088
    8. 'ed' → logprob: -5.654676914215088
    9. ' visited' → logprob: -5.654676914215088
    10. 'es' → logprob: -6.029676914215088

Token 155: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4150069952011108
    2. ' espaces' → logprob: -1.9150069952011108
    3. ' zeros' → logprob: -2.0400071144104004
    4. '0' → logprob: -2.0400071144104004
    5. ' '' → logprob: -3.0400071144104004
    6. ' z' → logprob: -3.1650071144104004
    7. ' steps' → logprob: -3.2900071144104004
    8. ' positions' → logprob: -3.4150071144104004
    9. ' [' → logprob: -4.0400071144104
    10. '[' → logprob: -4.0400071144104

Token 156: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006813050713390112
    2. ' ' → logprob: -5.381813049316406
    3. '1' → logprob: -6.381813049316406
    4. ''' → logprob: -8.381813049316406
    5. ' '' → logprob: -9.631813049316406
    6. '000' → logprob: -9.756813049316406
    7. '00' → logprob: -10.256813049316406
    8. ''s' → logprob: -11.069313049316406
    9. '001' → logprob: -11.631813049316406
    10. '01' → logprob: -11.694313049316406

Token 157: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00014656837447546422
    2. '')' → logprob: -9.625146865844727
    3. ''s' → logprob: -10.125146865844727
    4. '"' → logprob: -11.375146865844727
    5. 's' → logprob: -11.625146865844727
    6. ''*' → logprob: -12.250146865844727
    7. ''S' → logprob: -12.625146865844727
    8. ' '' → logprob: -13.000146865844727
    9. ''''' → logprob: -13.125146865844727
    10. '0' → logprob: -13.375146865844727

Token 158: ' fict' (ID: 109044)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7297142148017883
    2. 's' → logprob: -1.7297141551971436
    3. '*' → logprob: -2.8547141551971436
    4. ' =' → logprob: -2.8547141551971436
    5. ' *' → logprob: -3.1047141551971436
    6. '_' → logprob: -3.1047141551971436
    7. ' ' → logprob: -3.7297141551971436
    8. 'S' → logprob: -3.7297141551971436
    9. ')' → logprob: -4.604714393615723
    10. '[' → logprob: -4.729714393615723

Token 159: 'ifs' (ID: 14119)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.3308999538421631
    2. 'ées' → logprob: -1.455899953842163
    3. 'é' → logprob: -3.705899953842163
    4. 'es' → logprob: -4.705900192260742
    5. 'e' → logprob: -5.205900192260742
    6. 'ices' → logprob: -5.205900192260742
    7. 'ures' → logprob: -6.830900192260742
    8. 'ée' → logprob: -7.455900192260742
    9. 'aux' → logprob: -7.705900192260742
    10. 's' → logprob: -8.205900192260742

Token 160: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09693465381860733
    2. 's' → logprob: -3.0969345569610596
    3. ' S' → logprob: -4.596934795379639
    4. ' à' → logprob: -4.721934795379639
    5. ',' → logprob: -4.846934795379639
    6. 'S' → logprob: -5.471934795379639
    7. ' =' → logprob: -5.721934795379639
    8. '    ' → logprob: -6.221934795379639
    9. ' au' → logprob: -6.721934795379639
    10. ' ' → logprob: -6.846934795379639

Token 161: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5017785429954529
    2. 'la' → logprob: -1.1267786026000977
    3. ' S' → logprob: -3.6267786026000977
    4. ' la' → logprob: -3.7517786026000977
    5. 'l' → logprob: -4.751778602600098
    6. 'both' → logprob: -5.501778602600098
    7. 's' → logprob: -6.626778602600098
    8. '   ' → logprob: -6.876778602600098
    9. ' chaque' → logprob: -7.001778602600098
    10. ' both' → logprob: -7.126778602600098

Token 162: ' fin' (ID: 2131)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6943459510803223
    2. 'dé' → logprob: -1.5693459510803223
    3. 'fin' → logprob: -2.3193459510803223
    4. 's' → logprob: -2.8193459510803223
    5. ' S' → logprob: -3.0693459510803223
    6. 'dro' → logprob: -4.194345951080322
    7. 'g' → logprob: -4.319345951080322
    8. 'b' → logprob: -4.444345951080322
    9. 'both' → logprob: -4.569345951080322
    10. '   ' → logprob: -4.944345951080322

Token 163: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029085610061883926
    2. ' S' → logprob: -4.779085636138916
    3. 'S' → logprob: -4.904085636138916
    4. ',' → logprob: -5.029085636138916
    5. '    
' → logprob: -5.779085636138916
    6. 's' → logprob: -6.529085636138916
    7. ':' → logprob: -8.404085159301758
    8. '_' → logprob: -8.904085159301758
    9. ' 
' → logprob: -9.029085159301758
    10. ' s' → logprob: -9.029085159301758

Token 164: ' éviter' (ID: 64013)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.9745529890060425
    2. ' S' → logprob: -1.0995529890060425
    3. ' faciliter' → logprob: -2.224553108215332
    4. ' éviter' → logprob: -2.349553108215332
    5. 'fac' → logprob: -4.349553108215332
    6. 's' → logprob: -4.474553108215332
    7. 'simpl' → logprob: -4.474553108215332
    8. ' simpl' → logprob: -4.724553108215332
    9. 'év' → logprob: -5.099553108215332
    10. ' garantir' → logprob: -5.224553108215332

Token 165: ' les' (ID: 1341)
  Prédit: 'Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -1.383781909942627
    2. ' des' → logprob: -1.633781909942627
    3. ' l' → logprob: -2.008781909942627
    4. '   ' → logprob: -2.258781909942627
    5. ' Index' → logprob: -2.258781909942627
    6. ' les' → logprob: -2.633781909942627
    7. ' d' → logprob: -2.883781909942627
    8. ' index' → logprob: -4.008781909942627
    9. 'index' → logprob: -4.258781909942627
    10. 'l' → logprob: -4.508781909942627

Token 166: ' vér' (ID: 42524)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.25471803545951843
    2. 'index' → logprob: -2.129718065261841
    3. ' Index' → logprob: -2.879718065261841
    4. 'Index' → logprob: -3.379718065261841
    5. ' out' → logprob: -5.004717826843262
    6. ' erreurs' → logprob: -6.129717826843262
    7. ' dépasse' → logprob: -6.504717826843262
    8. 'd' → logprob: -6.754717826843262
    9. 'out' → logprob: -7.254717826843262
    10. ' problèmes' → logprob: -7.254717826843262

Token 167: 'ifications' (ID: 9110)
  Prédit: 'ifications'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifications' → logprob: -0.8935996294021606
    2. 'ification' → logprob: -1.3935996294021606
    3. 'if' → logprob: -1.8935996294021606
    4. 'ifier' → logprob: -2.018599510192871
    5. 'ifi' → logprob: -3.143599510192871
    6. 'ifie' → logprob: -4.768599510192871
    7. 'ifiez' → logprob: -6.393599510192871
    8. 'i' → logprob: -7.018599510192871
    9. 'ifiés' → logprob: -7.018599510192871
    10. '```' → logprob: -7.518599510192871

Token 168: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3086714744567871
    2. ' S' → logprob: -1.683671474456787
    3. 'S' → logprob: -3.058671474456787
    4. 's' → logprob: -3.808671474456787
    5. ' s' → logprob: -5.933671474456787
    6. ' ' → logprob: -6.058671474456787
    7. ' de' → logprob: -6.308671474456787
    8. ',' → logprob: -6.808671474456787
    9. '  ' → logprob: -7.183671474456787
    10. '    ' → logprob: -7.933671474456787

Token 169: ' dépasse' (ID: 165701)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.1315141916275024
    2. ' index' → logprob: -1.6315141916275024
    3. 'index' → logprob: -2.256514072418213
    4. ' hors' → logprob: -2.381514072418213
    5. ' bord' → logprob: -2.881514072418213
    6. ' dépasse' → logprob: -3.006514072418213
    7. 'l' → logprob: -3.256514072418213
    8. 'Index' → logprob: -3.631514072418213
    9. 'bord' → logprob: -4.006514072418213
    10. ' limites' → logprob: -4.256514072418213

Token 170: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.007947172038257122
    2. 'ments' → logprob: -5.132946968078613
    3. 'm' → logprob: -6.632946968078613
    4. 'r' → logprob: -7.382946968078613
    5. 'mentation' → logprob: -11.132946968078613
    6. '   ' → logprob: -11.382946968078613
    7. 'pas' → logprob: -12.132946968078613
    8. 'nt' → logprob: -12.257946968078613
    9. 'mant' → logprob: -12.507946968078613
    10. 'rement' → logprob: -12.507946968078613

Token 171: ' d' (ID: 272)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3682995140552521
    2. ' S' → logprob: -1.3682994842529297
    3. '   ' → logprob: -3.3682994842529297
    4. 's' → logprob: -4.36829948425293
    5. ' ' → logprob: -5.61829948425293
    6. ',' → logprob: -6.61829948425293
    7. ' s' → logprob: -7.49329948425293
    8. '.' → logprob: -8.36829948425293
    9. ' de' → logprob: -8.99329948425293
    10. ' ,' → logprob: -9.36829948425293

Token 172: ''ind' (ID: 82245)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.0495507717132568
    2. 'indice' → logprob: -1.2995507717132568
    3. 'l' → logprob: -2.174550771713257
    4. ' index' → logprob: -3.049550771713257
    5. 'indices' → logprob: -3.424550771713257
    6. ' ' → logprob: -3.424550771713257
    7. 'la' → logprob: -3.549550771713257
    8. 's' → logprob: -4.049551010131836
    9. 'liste' → logprob: -4.424551010131836
    10. ' indices' → logprob: -4.549551010131836

Token 173: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.021514832973480225
    2. 'ice' → logprob: -3.896514892578125
    3. 'ices' → logprob: -7.521514892578125
    4. 'e' → logprob: -9.271514892578125
    5. 'exe' → logprob: -9.271514892578125
    6. 'ces' → logprob: -9.396514892578125
    7. 'ce' → logprob: -10.646514892578125
    8. 'exc' → logprob: -10.771514892578125
    9. 'ent' → logprob: -10.896514892578125
    10. 'x' → logprob: -11.271514892578125

Token 174: ' lors' (ID: 15456)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.7796977162361145
    2. '   ' → logprob: -0.7796977162361145
    3. ' S' → logprob: -2.9046976566314697
    4. 's' → logprob: -3.7796976566314697
    5. ',' → logprob: -6.404697895050049
    6. ' s' → logprob: -7.404697895050049
    7. ' ' → logprob: -7.404697895050049
    8. '0' → logprob: -8.02969741821289
    9. ' ,' → logprob: -8.27969741821289
    10. '.' → logprob: -8.27969741821289

Token 175: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6540138721466064
    2. ' des' → logprob: -0.7790138721466064
    3. ' de' → logprob: -4.654013633728027
    4. 'de' → logprob: -5.904013633728027
    5. 'des' → logprob: -6.154013633728027
    6. ' les' → logprob: -6.279013633728027
    7. ' la' → logprob: -6.529013633728027
    8. ' du' → logprob: -7.029013633728027
    9. 'la' → logprob: -8.029013633728027
    10. '    ' → logprob: -8.279013633728027

Token 176: ' parcours' (ID: 62625)
  Prédit: ' parcours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parcours' → logprob: -0.5623878836631775
    2. ' saut' → logprob: -1.0623879432678223
    3. 's' → logprob: -2.6873879432678223
    4. 'for' → logprob: -5.562387943267822
    5. ' sa' → logprob: -5.937387943267822
    6. ' déplacement' → logprob: -6.437387943267822
    7. ' for' → logprob: -6.812387943267822
    8. 'b' → logprob: -6.812387943267822
    9. 'sa' → logprob: -7.187387943267822
    10. '   ' → logprob: -7.562387943267822

Token 177: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1307588517665863
    2. 'S' → logprob: -2.380758762359619
    3. ' S' → logprob: -3.755758762359619
    4. 's' → logprob: -5.505758762359619
    5. ',' → logprob: -7.380758762359619
    6. '    
' → logprob: -7.380758762359619
    7. ' ' → logprob: -8.255759239196777
    8. '    ' → logprob: -8.255759239196777
    9. ' s' → logprob: -9.005759239196777
    10. '.' → logprob: -9.005759239196777

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06202862784266472
    2. '    
' → logprob: -3.812028646469116
    3. ' 
' → logprob: -4.187028408050537
    4. 'S' → logprob: -4.437028408050537
    5. ' S' → logprob: -5.687028408050537
    6. '
' → logprob: -6.312028408050537
    7. '\' → logprob: -7.062028408050537
    8. 's' → logprob: -7.062028408050537
    9. 'n' → logprob: -7.437028408050537
    10. ' \' → logprob: -7.562028408050537

Token 179: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.42530557513237
    2. ' S' → logprob: -1.1753056049346924
    3. '   ' → logprob: -3.4253056049346924
    4. 's' → logprob: -7.175305366516113
    5. ' extended' → logprob: -7.550305366516113
    6. ' padded' → logprob: -7.550305366516113
    7. 'extended' → logprob: -7.675305366516113
    8. ' while' → logprob: -7.675305366516113
    9. 'while' → logprob: -8.550305366516113
    10. ' obstacles' → logprob: -8.550305366516113

Token 180: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.22890353202819824
    2. '+=' → logprob: -1.9789035320281982
    3. '=' → logprob: -3.2289035320281982
    4. ' =' → logprob: -3.8539035320281982
    5. '+' → logprob: -5.353903770446777
    6. ' +' → logprob: -7.228903770446777
    7. '+="' → logprob: -9.728903770446777
    8. '.extend' → logprob: -10.478903770446777
    9. '+='' → logprob: -10.728903770446777
    10. '+=(' → logprob: -12.978903770446777

Token 181: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.34849926829338074
    2. 'S' → logprob: -1.2234992980957031
    3. ' ' → logprob: -11.223499298095703
    4. ''S' → logprob: -11.348499298095703
    5. '   ' → logprob: -12.223499298095703
    6. ' '' → logprob: -12.223499298095703
    7. '"S' → logprob: -12.598499298095703
    8. ' (' → logprob: -12.848499298095703
    9. '(S' → logprob: -13.098499298095703
    10. ' list' → logprob: -13.285999298095703

Token 182: '[::-' (ID: 159890)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026399457827210426
    2. ' +' → logprob: -3.6513993740081787
    3. '[::-' → logprob: -10.151399612426758
    4. '+'' → logprob: -10.276399612426758
    5. '+l' → logprob: -11.276399612426758
    6. '+"' → logprob: -12.026399612426758
    7. '.rstrip' → logprob: -13.526399612426758
    8. '[:-' → logprob: -13.651399612426758
    9. '.l' → logprob: -13.651399612426758
    10. '+[' → logprob: -14.276399612426758

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026710189413279295
    2. '-' → logprob: -6.002671241760254
    3. '::-' → logprob: -9.877671241760254
    4. ':' → logprob: -10.940171241760254
    5. '+' → logprob: -11.440171241760254
    6. '``' → logprob: -11.690171241760254
    7. ':-' → logprob: -12.065171241760254
    8. 'r' → logprob: -12.127671241760254
    9. 'step' → logprob: -12.627671241760254
    10. 'er' → logprob: -12.627671241760254

Token 184: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10538235306739807
    2. ')' → logprob: -2.3553824424743652
    3. ']+' → logprob: -6.105382442474365
    4. '+' → logprob: -6.605382442474365
    5. '']' → logprob: -7.605382442474365
    6. ')+' → logprob: -8.605381965637207
    7. ' ]' → logprob: -8.730381965637207
    8. '   ' → logprob: -8.855381965637207
    9. '].' → logprob: -8.855381965637207
    10. '')' → logprob: -9.605381965637207

Token 185: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22571904957294464
    2. ' +' → logprob: -1.6007190942764282
    3. '+'' → logprob: -8.725719451904297
    4. '+"' → logprob: -9.975719451904297
    5. '+
' → logprob: -10.975719451904297
    6. '+'\' → logprob: -11.225719451904297
    7. ' +'' → logprob: -11.350719451904297
    8. '+[' → logprob: -11.850719451904297
    9. '0' → logprob: -11.975719451904297
    10. '   ' → logprob: -12.225719451904297

Token 186: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.022287966683506966
    2. '"' → logprob: -3.8972880840301514
    3. ' '' → logprob: -6.397287845611572
    4. ' "' → logprob: -10.14728832244873
    5. '('' → logprob: -10.52228832244873
    6. ''A' → logprob: -12.89728832244873
    7. '   ' → logprob: -13.02228832244873
    8. ''I' → logprob: -13.52228832244873
    9. ''M' → logprob: -14.39728832244873
    10. ''C' → logprob: -14.39728832244873

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01422027125954628
    2. ''' → logprob: -4.264220237731934
    3. ' '' → logprob: -10.764220237731934
    4. ' ' → logprob: -11.639220237731934
    5. '0' → logprob: -11.889220237731934
    6. '11' → logprob: -12.264220237731934
    7. '111' → logprob: -12.264220237731934
    8. '"' → logprob: -12.389220237731934
    9. '10' → logprob: -12.639220237731934
    10. ''s' → logprob: -14.514220237731934

Token 188: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011353490874171257
    2. '1' → logprob: -4.761353492736816
    3. ''*' → logprob: -6.136353492736816
    4. '0' → logprob: -7.511353492736816
    5. '"' → logprob: -10.886353492736816
    6. ''M' → logprob: -12.761353492736816
    7. '*' → logprob: -13.386353492736816
    8. '000' → logprob: -14.386353492736816
    9. '111' → logprob: -14.886353492736816
    10. ''''' → logprob: -15.136353492736816

Token 189: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5556395649909973
    2. '0' → logprob: -1.6806395053863525
    3. '   ' → logprob: -2.0556395053863525
    4. '*' → logprob: -2.3056395053863525
    5. '*(' → logprob: -5.430639743804932
    6. '*N' → logprob: -6.055639743804932
    7. '
' → logprob: -6.430639743804932
    8. '    
' → logprob: -6.930639743804932
    9. '000' → logprob: -7.430639743804932
    10. 'def' → logprob: -7.555639743804932

Token 190: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.011148394085466862
    2. '(M' → logprob: -4.886148452758789
    3. ' M' → logprob: -5.761148452758789
    4. ' (' → logprob: -8.011148452758789
    5. '(' → logprob: -10.386148452758789
    6. '10' → logprob: -11.761148452758789
    7. '   ' → logprob: -12.261148452758789
    8. '100' → logprob: -12.886148452758789
    9. '20' → logprob: -13.136148452758789
    10. 'm' → logprob: -13.136148452758789

Token 191: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01656857505440712
    2. '   ' → logprob: -5.016568660736084
    3. '    
' → logprob: -5.016568660736084
    4. '  
' → logprob: -6.641568660736084
    5. ' 
' → logprob: -7.516568660736084
    6. '   
' → logprob: -7.766568660736084
    7. '\n' → logprob: -8.016568183898926
    8. '<|end|>' → logprob: -8.641568183898926
    9. '
' → logprob: -9.641568183898926
    10. ',' → logprob: -9.766568183898926

Token 192: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3425907492637634
    2. '   ' → logprob: -1.4675908088684082
    3. '    
' → logprob: -2.967590808868408
    4. 'queue' → logprob: -5.842590808868408
    5. '  
' → logprob: -6.217590808868408
    6. '   
' → logprob: -6.342590808868408
    7. ' 
' → logprob: -7.592590808868408
    8. 'steps' → logprob: -7.967590808868408
    9. 'visited' → logprob: -9.09259033203125
    10. ' queue' → logprob: -9.34259033203125

Token 193: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.1661817729473114
    2. 'visited' → logprob: -2.541181802749634
    3. 'dist' → logprob: -2.916181802749634
    4. '   ' → logprob: -5.041181564331055
    5. 'steps' → logprob: -5.291181564331055
    6. 'distance' → logprob: -5.916181564331055
    7. 'dp' → logprob: -6.041181564331055
    8. 'start' → logprob: -6.666181564331055
    9. ' queue' → logprob: -7.041181564331055
    10. ' visited' → logprob: -7.791181564331055

Token 194: ' Cas' (ID: 8066)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.36625292897224426
    2. 'queue' → logprob: -1.4912528991699219
    3. 'dist' → logprob: -3.491252899169922
    4. 'dp' → logprob: -3.741252899169922
    5. 'distance' → logprob: -4.866252899169922
    6. ' visited' → logprob: -4.866252899169922
    7. 'steps' → logprob: -5.491252899169922
    8. ' queue' → logprob: -6.491252899169922
    9. 'start' → logprob: -6.616252899169922
    10. 'deque' → logprob: -6.741252899169922

Token 195: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4357396364212036
    2. ' where' → logprob: -2.060739517211914
    3. ' où' → logprob: -2.560739517211914
    4. ' if' → logprob: -2.685739517211914
    5. ' ' → logprob: -3.685739517211914
    6. ' de' → logprob: -4.310739517211914
    7. '  ' → logprob: -4.810739517211914
    8. 'où' → logprob: -4.935739517211914
    9. 'if' → logprob: -5.685739517211914
    10. '    ' → logprob: -5.685739517211914

Token 196: ''arrêt' (ID: 186362)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03487493842840195
    2. ''utilisation' → logprob: -5.28487491607666
    3. ''entrée' → logprob: -5.40987491607666
    4. 'é' → logprob: -5.78487491607666
    5. 'u' → logprob: -5.90987491607666
    6. ''' → logprob: -5.90987491607666
    7. ''une' → logprob: -6.03487491607666
    8. 'où' → logprob: -6.15987491607666
    9. 'es' → logprob: -6.40987491607666
    10. ''un' → logprob: -6.65987491607666

Token 197: ' rapide' (ID: 44887)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6300683617591858
    2. ' if' → logprob: -0.8800683617591858
    3. 'if' → logprob: -3.005068302154541
    4. ':' → logprob: -6.005068302154541
    5. ' :' → logprob: -8.0050687789917
    6. '    
' → logprob: -9.3800687789917
    7. '  ' → logprob: -10.1300687789917
    8. '    ' → logprob: -10.2550687789917
    9. ' for' → logprob: -10.3800687789917
    10. ' 
' → logprob: -10.6300687789917

Token 198: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2252703607082367
    2. ' if' → logprob: -2.2252702713012695
    3. ':' → logprob: -3.3502702713012695
    4. 'if' → logprob: -3.4752702713012695
    5. '    
' → logprob: -3.8502702713012695
    6. ' :' → logprob: -5.8502702713012695
    7. ' 
' → logprob: -6.8502702713012695
    8. '
' → logprob: -7.1002702713012695
    9. ':
' → logprob: -7.6002702713012695
    10. '   
' → logprob: -7.8502702713012695

Token 199: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03820155933499336
    2. ' if' → logprob: -3.2882015705108643
    3. '   ' → logprob: -8.788201332092285
    4. '
' → logprob: -12.288201332092285
    5. 'si' → logprob: -13.788201332092285
    6. ' si' → logprob: -14.538201332092285
    7. 'for' → logprob: -15.038201332092285
    8. '    
' → logprob: -15.163201332092285
    9. 's' → logprob: -15.163201332092285
    10. '```' → logprob: -15.538201332092285

Token 200: ' M' (ID: 391)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.14971193671226501
    2. ' S' → logprob: -2.149711847305298
    3. 'N' → logprob: -3.899711847305298
    4. ' N' → logprob: -6.149712085723877
    5. 'M' → logprob: -9.649711608886719
    6. ' M' → logprob: -10.649711608886719
    7. 'len' → logprob: -11.024711608886719
    8. ' ' → logprob: -11.399711608886719
    9. ' not' → logprob: -12.274711608886719
    10. '0' → logprob: -12.649711608886719

Token 201: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3313642740249634
    2. ' ==' → logprob: -2.081364154815674
    3. '>=' → logprob: -2.331364154815674
    4. '==' → logprob: -2.956364154815674
    5. ' >' → logprob: -5.831364154815674
    6. ' <=' → logprob: -5.831364154815674
    7. '>' → logprob: -6.706364154815674
    8. '<=' → logprob: -7.331364154815674
    9. '=' → logprob: -8.831364631652832
    10. ' ' → logprob: -9.706364631652832

Token 202: ' supérieur' (ID: 98491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07004547119140625
    2. '>=' → logprob: -3.1950454711914062
    3. ' >=' → logprob: -3.8200454711914062
    4. '==' → logprob: -6.070045471191406
    5. '=' → logprob: -6.945045471191406
    6. '   ' → logprob: -7.695045471191406
    7. ' ' → logprob: -7.945045471191406
    8. '1' → logprob: -8.820045471191406
    9. ' ==' → logprob: -9.195045471191406
    10. '>' → logprob: -9.195045471191406

Token 203: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.05728588625788689
    2. ' au' → logprob: -4.182285785675049
    3. ' à' → logprob: -4.182285785675049
    4. 'au' → logprob: -4.432285785675049
    5. '=' → logprob: -4.682285785675049
    6. '   ' → logprob: -6.932285785675049
    7. ' =' → logprob: -7.057285785675049
    8. ' ' → logprob: -7.682285785675049
    9. ' or' → logprob: -7.682285785675049
    10. 'à' → logprob: -7.807285785675049

Token 204: ' égal' (ID: 15059)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.19108946621418
    2. 'N' → logprob: -2.066089391708374
    3. 'à' → logprob: -3.816089391708374
    4. 'égal' → logprob: -4.441089630126953
    5. 'au' → logprob: -5.066089630126953
    6. ' ou' → logprob: -6.191089630126953
    7. 'equal' → logprob: -6.691089630126953
    8. '=' → logprob: -7.316089630126953
    9. ' égal' → logprob: -7.441089630126953
    10. 'ég' → logprob: -7.441089630126953

Token 205: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6947392821311951
    2. 'N' → logprob: -0.8197392821311951
    3. '   ' → logprob: -3.44473934173584
    4. 'à' → logprob: -4.19473934173584
    5. ' to' → logprob: -5.81973934173584
    6. ' N' → logprob: -6.06973934173584
    7. 'au' → logprob: -6.31973934173584
    8. ' au' → logprob: -6.44473934173584
    9. 'to' → logprob: -6.94473934173584
    10. ' ' → logprob: -7.19473934173584

Token 206: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0016282867873087525
    2. 'len' → logprob: -7.001628398895264
    3. ' N' → logprob: -7.251628398895264
    4. ' len' → logprob: -11.876627922058105
    5. 'n' → logprob: -14.501627922058105
    6. '>N' → logprob: -16.751628875732422
    7. ' ' → logprob: -17.626628875732422
    8. '	N' → logprob: -17.751628875732422
    9. '(len' → logprob: -18.126628875732422
    10. '=N' → logprob: -18.251628875732422

Token 207: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5994842052459717
    2. ' or' → logprob: -1.5994842052459717
    3. ':' → logprob: -1.8494842052459717
    4. ' and' → logprob: -2.4744842052459717
    5. ',' → logprob: -5.849484443664551
    6. 'and' → logprob: -6.349484443664551
    7. ':
' → logprob: -7.474484443664551
    8. ' if' → logprob: -7.724484443664551
    9. ' :' → logprob: -7.849484443664551
    10. ':return' → logprob: -7.849484443664551

Token 208: ' il' (ID: 1793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47040754556655884
    2. ' return' → logprob: -1.095407485961914
    3. 'return' → logprob: -3.220407485961914
    4. '   ' → logprob: -8.470407485961914
    5. ' ' → logprob: -8.845407485961914
    6. '	return' → logprob: -8.845407485961914
    7. ' retourner' → logprob: -9.220407485961914
    8. '    ' → logprob: -9.470407485961914
    9. '       ' → logprob: -9.720407485961914
    10. '   ' → logprob: -9.970407485961914

Token 209: ' suffit' (ID: 67383)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7814605832099915
    2. ' suffit' → logprob: -1.2814605236053467
    3. ' return' → logprob: -2.0314605236053467
    4. ' n' → logprob: -2.6564605236053467
    5. ' suff' → logprob: -4.031460762023926
    6. 'return' → logprob: -4.156460762023926
    7. 's' → logprob: -5.156460762023926
    8. ' faut' → logprob: -5.281460762023926
    9. ' est' → logprob: -5.656460762023926
    10. 'n' → logprob: -5.656460762023926

Token 210: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9635120034217834
    2. 'de' → logprob: -1.0885119438171387
    3. 'd' → logprob: -1.7135119438171387
    4. ' d' → logprob: -2.3385119438171387
    5. '   ' → logprob: -5.963511943817139
    6. 'def' → logprob: -7.713511943817139
    7. ' ' → logprob: -7.838511943817139
    8. '_' → logprob: -7.963511943817139
    9. '_de' → logprob: -8.463512420654297
    10. 's' → logprob: -9.088512420654297

Token 211: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8503516316413879
    2. ''' → logprob: -1.4753515720367432
    3. ''effect' → logprob: -1.8503515720367432
    4. 'u' → logprob: -3.850351572036743
    5. ' N' → logprob: -3.850351572036743
    6. ''un' → logprob: -3.850351572036743
    7. ' faire' → logprob: -3.975351572036743
    8. '1' → logprob: -4.100351810455322
    9. ' de' → logprob: -4.225351810455322
    10. ' S' → logprob: -4.475351810455322

Token 212: ' saut' (ID: 111480)
  Prédit: ' saut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saut' → logprob: -0.27688702940940857
    2. ' ' → logprob: -2.2768869400024414
    3. ' seul' → logprob: -2.5268869400024414
    4. ' pas' → logprob: -3.4018869400024414
    5. ' salto' → logprob: -4.276886940002441
    6. '_' → logprob: -5.776886940002441
    7. 's' → logprob: -6.026886940002441
    8. ' unique' → logprob: -6.776886940002441
    9. 'pas' → logprob: -7.151886940002441
    10. 'se' → logprob: -7.401886940002441

Token 213: ' unique' (ID: 5746)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2593231201171875
    2. '.' → logprob: -1.6343231201171875
    3. '1' → logprob: -2.3843231201171875
    4. '_' → logprob: -2.7593231201171875
    5. '   ' → logprob: -2.7593231201171875
    6. ',' → logprob: -2.7593231201171875
    7. ' ' → logprob: -3.1343231201171875
    8. ' pour' → logprob: -3.3843231201171875
    9. '=' → logprob: -3.5093231201171875
    10. ' =' → logprob: -3.6343231201171875

Token 214: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3764532804489136
    2. ',' → logprob: -1.7514532804489136
    3. ':' → logprob: -2.251453399658203
    4. ' :' → logprob: -4.751453399658203
    5. ' return' → logprob: -4.751453399658203
    6. 'return' → logprob: -6.001453399658203
    7. ':return' → logprob: -6.251453399658203
    8. '    ' → logprob: -6.376453399658203
    9. '       ' → logprob: -6.376453399658203
    10. ' et' → logprob: -6.626453399658203

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002888086950406432
    2. ' if' → logprob: -6.252888202667236
    3. 'if' → logprob: -7.877888202667236
    4. ':' → logprob: -8.127887725830078
    5. '    
' → logprob: -8.627887725830078
    6. ',' → logprob: -10.002887725830078
    7. '    ' → logprob: -11.752887725830078
    8. '\t' → logprob: -11.877887725830078
    9. ' :' → logprob: -12.127887725830078
    10. '	if' → logprob: -12.252887725830078

Token 216: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7919449806213379
    2. ' if' → logprob: -0.9169449806213379
    3. '   ' → logprob: -1.916944980621338
    4. 'return' → logprob: -8.91694450378418
    5. ' return' → logprob: -9.41694450378418
    6. '	if' → logprob: -12.16694450378418
    7. '    
' → logprob: -12.29194450378418
    8. ' ' → logprob: -12.41694450378418
    9. '    ' → logprob: -12.66694450378418
    10. '  ' → logprob: -13.29194450378418

Token 217: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.10050878673791885
    2. 'M' → logprob: -2.350508689880371
    3. ' N' → logprob: -8.475508689880371
    4. 'N' → logprob: -9.600508689880371
    5. ' ' → logprob: -11.225508689880371
    6. '   ' → logprob: -11.725508689880371
    7. ' ' → logprob: -13.100508689880371
    8. '    ' → logprob: -14.225508689880371
    9. '	M' → logprob: -14.725508689880371
    10. ' S' → logprob: -15.413008689880371

Token 218: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.20148515701293945
    2. '>=' → logprob: -1.7014851570129395
    3. '   ' → logprob: -10.451484680175781
    4. '>' → logprob: -10.951484680175781
    5. ' ' → logprob: -11.451484680175781
    6. ' >' → logprob: -12.076484680175781
    7. ']>=' → logprob: -13.201484680175781
    8. '    ' → logprob: -13.576484680175781
    9. ')>=' → logprob: -13.576484680175781
    10. '==' → logprob: -13.826484680175781

Token 219: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.31326553225517273
    2. 'N' → logprob: -1.3132655620574951
    3. ' ' → logprob: -13.063265800476074
    4. 'n' → logprob: -14.063265800476074
    5. ' ' → logprob: -14.938265800476074
    6. '	N' → logprob: -14.938265800476074
    7. '   ' → logprob: -16.438264846801758
    8. ' n' → logprob: -16.938264846801758
    9. '
' → logprob: -18.063264846801758
    10. ' (' → logprob: -18.375764846801758

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.056399550288915634
    2. ':
' → logprob: -3.0563995838165283
    3. ':return' → logprob: -4.931399345397949
    4. '   ' → logprob: -8.05639934539795
    5. ' :' → logprob: -8.55639934539795
    6. ' :
' → logprob: -10.93139934539795
    7. '       ' → logprob: -11.05639934539795
    8. ':
' → logprob: -11.30639934539795
    9. ' or' → logprob: -12.30639934539795
    10. ' and' → logprob: -13.18139934539795

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020788824185729027
    2. ' return' → logprob: -6.877079010009766
    3. '   ' → logprob: -7.002079010009766
    4. 'return' → logprob: -9.252079010009766
    5. '
' → logprob: -12.002079010009766
    6. '	return' → logprob: -12.127079010009766
    7. ':' → logprob: -12.377079010009766
    8. ',' → logprob: -12.502079010009766
    9. '[' → logprob: -12.752079010009766
    10. ':return' → logprob: -12.877079010009766

Token 222: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3010784089565277
    2. ' return' → logprob: -1.55107843875885
    3. '   ' → logprob: -3.4260783195495605
    4. '       ' → logprob: -4.1760783195495605
    5. 'if' → logprob: -10.301078796386719
    6. ' if' → logprob: -10.301078796386719
    7. '    ' → logprob: -11.551078796386719
    8. '	return' → logprob: -12.551078796386719
    9. '
' → logprob: -13.426078796386719
    10. '           ' → logprob: -13.551078796386719

Token 223: ' [' (ID: 723)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.32731539011001587
    2. '[' → logprob: -1.327315330505371
    3. ' [' → logprob: -4.327315330505371
    4. '[S' → logprob: -7.577315330505371
    5. '[n' → logprob: -8.952315330505371
    6. '   ' → logprob: -10.077315330505371
    7. '[next' → logprob: -10.952315330505371
    8. '[M' → logprob: -10.952315330505371
    9. '[min' → logprob: -11.702315330505371
    10. '[int' → logprob: -11.827315330505371

Token 224: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.896309739408025e-07
    2. '1' → logprob: -14.625000953674316
    3. ' N' → logprob: -15.500000953674316
    4. '   ' → logprob: -17.625
    5. 'S' → logprob: -19.75
    6. 'n' → logprob: -20.0
    7. '0' → logprob: -20.625
    8. '	N' → logprob: -20.75
    9. '(N' → logprob: -21.0
    10. ']' → logprob: -21.75

Token 225: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022281676065176725
    2. ' ]' → logprob: -6.127228260040283
    3. ']
' → logprob: -10.377227783203125
    4. ']

' → logprob: -12.127227783203125
    5. ')' → logprob: -12.877227783203125
    6. '']' → logprob: -14.002227783203125
    7. '   ' → logprob: -14.252227783203125
    8. ')]' → logprob: -14.377227783203125
    9. '])' → logprob: -15.127227783203125
    10. ']
' → logprob: -15.127227783203125

Token 226: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.405033677816391
    2. '   ' → logprob: -1.2800337076187134
    3. '    
' → logprob: -3.155033588409424
    4. '\n' → logprob: -5.405033588409424
    5. '  
' → logprob: -6.030033588409424
    6. 'n' → logprob: -6.155033588409424
    7. '   
' → logprob: -7.655033588409424
    8. ' 
' → logprob: -7.905033588409424
    9. 'step' → logprob: -8.280034065246582
    10. 'steps' → logprob: -8.405034065246582

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015262868255376816
    2. '    
' → logprob: -4.640263080596924
    3. '
' → logprob: -6.140263080596924
    4. ' visited' → logprob: -6.765263080596924
    5. 'visited' → logprob: -7.015263080596924
    6. 'queue' → logprob: -7.515263080596924
    7. ' queue' → logprob: -7.890263080596924
    8. 'dp' → logprob: -9.015262603759766
    9. 'steps' → logprob: -10.015262603759766
    10. ' steps' → logprob: -10.640262603759766

Token 228: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6784974336624146
    2. 'dist' → logprob: -1.5534974336624146
    3. 'dp' → logprob: -1.9284974336624146
    4. 'visited' → logprob: -2.178497314453125
    5. '#' (adapté à ' #') → logprob: -4.803497314453125
    6. 'steps' → logprob: -5.053497314453125
    7. 'distance' → logprob: -6.678497314453125
    8. 'q' → logprob: -6.678497314453125
    9. 'from' → logprob: -7.178497314453125
    10. 'deque' → logprob: -7.428497314453125

Token 229: ' Initial' (ID: 9209)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1998841762542725
    2. 'queue' → logprob: -1.4498841762542725
    3. 'visited' → logprob: -1.4498841762542725
    4. 'dist' → logprob: -2.0748841762542725
    5. ' visited' → logprob: -3.1998841762542725
    6. ' queue' → logprob: -3.9498841762542725
    7. ' dist' → logprob: -4.074884414672852
    8. '#' → logprob: -5.199884414672852
    9. 'steps' → logprob: -5.324884414672852
    10. 'distance' → logprob: -5.324884414672852

Token 230: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.03307463601231575
    2. 'izer' → logprob: -4.783074855804443
    3. 'ization' → logprob: -5.158074855804443
    4. 'ized' → logprob: -5.408074855804443
    5. 'iser' → logprob: -5.783074855804443
    6. 'queue' → logprob: -6.283074855804443
    7. 'ise' → logprob: -6.283074855804443
    8. 'isation' → logprob: -6.408074855804443
    9. '_queue' → logprob: -7.158074855804443
    10. 'e' → logprob: -7.533074855804443

Token 231: ' d' (ID: 272)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' steps' → logprob: -1.3304730653762817
    2. ' queue' → logprob: -1.5804730653762817
    3. '   ' → logprob: -1.9554730653762817
    4. ' visited' → logprob: -2.205472946166992
    5. 'steps' → logprob: -2.830472946166992
    6. 'visited' → logprob: -3.205472946166992
    7. 'queue' → logprob: -3.330472946166992
    8. ' dist' → logprob: -3.455472946166992
    9. 'distance' → logprob: -3.705472946166992
    10. ' distance' → logprob: -3.955472946166992

Token 232: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.016014890745282173
    2. 'istance' → logprob: -5.14101505279541
    3. ' e' → logprob: -5.64101505279541
    4. ' la' → logprob: -6.14101505279541
    5. ' queue' → logprob: -6.39101505279541
    6. 'ist' → logprob: -7.14101505279541
    7. ' deque' → logprob: -7.89101505279541
    8. '   ' → logprob: -7.89101505279541
    9. ' une' → logprob: -8.39101505279541
    10. 'u' → logprob: -8.51601505279541

Token 233: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.1263754516839981
    2. 'queue' → logprob: -2.251375436782837
    3. ' queue' → logprob: -4.876375675201416
    4. ' deque' → logprob: -5.376375675201416
    5. 'dist' → logprob: -7.626375675201416
    6. 'file' → logprob: -8.626375198364258
    7. 'distance' → logprob: -9.001375198364258
    8. 'list' → logprob: -9.376375198364258
    9. 'de' → logprob: -9.751375198364258
    10. 'dp' → logprob: -10.126375198364258

Token 234: ' pour' (ID: 1930)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.34618717432022095
    2. '()' → logprob: -2.471187114715576
    3. '(' → logprob: -2.846187114715576
    4. ' queue' → logprob: -3.221187114715576
    5. 'queue' → logprob: -3.346187114715576
    6. '()
' → logprob: -3.846187114715576
    7. ' =' → logprob: -3.971187114715576
    8. ',' → logprob: -4.846187114715576
    9. '   ' → logprob: -5.471187114715576
    10. 'q' → logprob: -5.721187114715576

Token 235: ' stock' (ID: 6546)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.04777204990386963
    2. ' deque' → logprob: -3.42277193069458
    3. 'queue' → logprob: -4.67277193069458
    4. ' queue' → logprob: -5.54777193069458
    5. 'de' → logprob: -8.547772407531738
    6. 'que' → logprob: -8.797772407531738
    7. 'q' → logprob: -9.047772407531738
    8. ' ' → logprob: -9.297772407531738
    9. ' bfs' → logprob: -9.547772407531738
    10. 'Q' → logprob: -10.422772407531738

Token 236: 'er' (ID: 259)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.6541454792022705
    2. 'er' → logprob: -0.9041454792022705
    3. 'uer' → logprob: -3.1541454792022705
    4. 'uler' → logprob: -4.029145240783691
    5. '   ' → logprob: -4.654145240783691
    6. 'urer' → logprob: -5.779145240783691
    7. 'u' → logprob: -7.154145240783691
    8. 'erer' → logprob: -8.029145240783691
    9. 'ue' → logprob: -8.654145240783691
    10. 'uter' → logprob: -9.529145240783691

Token 237: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.21059903502464294
    2. ' (' → logprob: -2.835598945617676
    3. ' des' → logprob: -2.960598945617676
    4. '(' → logprob: -3.710598945617676
    5. ' indices' → logprob: -4.210598945617676
    6. 'les' → logprob: -4.585598945617676
    7. ' la' → logprob: -5.460598945617676
    8. 'indices' → logprob: -5.460598945617676
    9. ' pairs' → logprob: -5.835598945617676
    10. 'positions' → logprob: -5.960598945617676

Token 238: ' tailles' (ID: 169460)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7018164992332458
    2. ' positions' → logprob: -1.9518165588378906
    3. ' indices' → logprob: -2.0768165588378906
    4. ' (' → logprob: -2.2018165588378906
    5. 'indices' → logprob: -3.0768165588378906
    6. '(' → logprob: -4.076816558837891
    7. ' états' → logprob: -4.951816558837891
    8. ' tuples' → logprob: -5.201816558837891
    9. ' distances' → logprob: -5.201816558837891
    10. ' étapes' → logprob: -5.201816558837891

Token 239: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9459959268569946
    2. ' de' → logprob: -1.3209959268569946
    3. ' ' → logprob: -2.195995807647705
    4. 'deque' → logprob: -3.570995807647705
    5. '_des' → logprob: -3.945995807647705
    6. 'de' → logprob: -3.945995807647705
    7. 's' → logprob: -4.070995807647705
    8. 'des' → logprob: -4.195995807647705
    9. ' of' → logprob: -4.320995807647705
    10. '  ' → logprob: -4.320995807647705

Token 240: ' pas' (ID: 2173)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10428605228662491
    2. 'pas' → logprob: -2.604285955429077
    3. ' saut' → logprob: -4.229286193847656
    4. ' pas' → logprob: -5.229286193847656
    5. ' sa' → logprob: -6.604286193847656
    6. 'les' → logprob: -7.354286193847656
    7. 'sa' → logprob: -7.479286193847656
    8. 'steps' → logprob: -7.604286193847656
    9. '_' → logprob: -8.229286193847656
    10. 'jump' → logprob: -8.354286193847656

Token 241: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5585615038871765
    2. 'steps' → logprob: -1.1835615634918213
    3. ',' → logprob: -2.9335615634918213
    4. ' steps' → logprob: -4.183561325073242
    5. 's' → logprob: -4.558561325073242
    6. ' des' → logprob: -5.058561325073242
    7. ' ' → logprob: -5.808561325073242
    8. '(' → logprob: -6.058561325073242
    9. 'step' → logprob: -6.058561325073242
    10. 'de' → logprob: -6.183561325073242

Token 242: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5868654847145081
    2. 'la' → logprob: -1.7118654251098633
    3. ' le' → logprob: -1.8368654251098633
    4. 'le' → logprob: -2.3368654251098633
    5. 'les' → logprob: -6.586865425109863
    6. ' les' → logprob: -6.586865425109863
    7. 'l' → logprob: -6.836865425109863
    8. ' chaque' → logprob: -7.711865425109863
    9. 'deque' → logprob: -7.961865425109863
    10. ' ' → logprob: -8.211865425109863

Token 243: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.013304576277732849
    2. 'e' → logprob: -4.638304710388184
    3. 'queue' → logprob: -6.888304710388184
    4. ''ordre' → logprob: -8.138304710388184
    5. 'min' → logprob: -8.388304710388184
    6. 'S' → logprob: -8.763304710388184
    7. 'deque' → logprob: -8.888304710388184
    8. ''' → logprob: -9.013304710388184
    9. 'es' → logprob: -9.263304710388184
    10. 'A' → logprob: -9.513304710388184

Token 244: ' inverse' (ID: 53743)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.7234947681427002
    2. 'path' → logprob: -1.8484947681427002
    3. '   ' → logprob: -2.4734947681427
    4. 'q' → logprob: -2.9734947681427
    5. ' path' → logprob: -3.0984947681427
    6. ' des' → logprob: -3.2234947681427
    7. ' steps' → logprob: -3.3484947681427
    8. 'queue' → logprob: -4.223494529724121
    9. ',' → logprob: -4.223494529724121
    10. ' q' → logprob: -4.223494529724121

Token 245: '
' (ID: 198)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5444740653038025
    2. ' path' → logprob: -2.0444741249084473
    3. 'steps' → logprob: -2.0444741249084473
    4. '   ' → logprob: -3.4194741249084473
    5. ',' → logprob: -3.7944741249084473
    6. 'q' → logprob: -4.294474124908447
    7. 'pas' → logprob: -4.544474124908447
    8. 'queue' → logprob: -4.794474124908447
    9. 'b' → logprob: -5.169474124908447
    10. 'paths' → logprob: -5.169474124908447

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7898543477058411
    2. 'path' → logprob: -1.0398542881011963
    3. 'steps' → logprob: -2.2898542881011963
    4. ' path' → logprob: -2.9148542881011963
    5. 'queue' → logprob: -5.414854526519775
    6. ' steps' → logprob: -5.414854526519775
    7. 'paths' → logprob: -5.664854526519775
    8. 'stack' → logprob: -5.789854526519775
    9. 'step' → logprob: -5.914854526519775
    10. 'jump' → logprob: -5.914854526519775

Token 247: ' q' (ID: 2335)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.6419527530670166
    2. 'path' → logprob: -1.5169527530670166
    3. 'q' (adapté à ' q') → logprob: -2.6419527530670166
    4. 'pas' → logprob: -3.0169527530670166
    5. 'queue' → logprob: -3.0169527530670166
    6. 'j' → logprob: -3.1419527530670166
    7. 'dq' → logprob: -4.6419525146484375
    8. 'step' → logprob: -5.3919525146484375
    9. 'jump' → logprob: -5.5169525146484375
    10. ' steps' → logprob: -5.6419525146484375

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17604859173297882
    2. '=' → logprob: -2.551048517227173
    3. 'ue' → logprob: -2.551048517227173
    4. 'u' → logprob: -5.301048755645752
    5. 'steps' → logprob: -8.801048278808594
    6. '_steps' → logprob: -9.051048278808594
    7. 'ues' → logprob: -10.301048278808594
    8. 'uer' → logprob: -10.301048278808594
    9. ',' → logprob: -11.051048278808594
    10. ':' → logprob: -11.676048278808594

Token 249: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.00038074489566497505
    2. ' deque' → logprob: -7.875380516052246
    3. '   ' → logprob: -14.875380516052246
    4. '[]' → logprob: -15.750380516052246
    5. 'collections' → logprob: -16.375381469726562
    6. ' ' → logprob: -16.750381469726562
    7. '  ' → logprob: -18.375381469726562
    8. 'de' → logprob: -18.625381469726562
    9. 'Deque' → logprob: -18.875381469726562
    10. 'dq' → logprob: -19.250381469726562

Token 250: '([])
' (ID: 91082)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021157052367925644
    2. '([' → logprob: -4.521157264709473
    3. '([]' → logprob: -4.896157264709473
    4. '([(' → logprob: -6.271157264709473
    5. '()
' → logprob: -7.646157264709473
    6. '(' → logprob: -8.896157264709473
    7. '[]' → logprob: -10.521157264709473
    8. '([])
' → logprob: -10.896157264709473
    9. '()

' → logprob: -11.271157264709473
    10. '([
' → logprob: -13.146157264709473

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015895579010248184
    2. '    
' → logprob: -5.265895366668701
    3. '
' → logprob: -5.890895366668701
    4. ',' → logprob: -6.515895366668701
    5. ')' → logprob: -6.515895366668701
    6. 'current' → logprob: -7.140895366668701
    7. '  
' → logprob: -7.140895366668701
    8. 'steps' → logprob: -7.640895366668701
    9. ' steps' → logprob: -7.890895366668701
    10. 'pos' → logprob: -8.26589584350586

Token 252: ' i' (ID: 575)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3489775061607361
    2. 'current' → logprob: -2.723977565765381
    3. 'steps' → logprob: -2.973977565765381
    4. 'position' → logprob: -2.973977565765381
    5. 'for' → logprob: -3.473977565765381
    6. '   ' → logprob: -3.473977565765381
    7. 'i' (adapté à ' i') → logprob: -4.723977565765381
    8. 'queue' → logprob: -4.848977565765381
    9. 'positions' → logprob: -4.973977565765381
    10. 'distance' → logprob: -4.973977565765381

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231546759605408
    2. '=' → logprob: -0.8981546759605408
    3. ' ' → logprob: -11.398154258728027
    4. '0' → logprob: -11.523154258728027
    5. ',' → logprob: -12.023154258728027
    6. 's' → logprob: -13.898154258728027
    7. ')' → logprob: -14.023154258728027
    8. '1' → logprob: -14.273154258728027
    9. 'n' → logprob: -15.023154258728027
    10. ' ,' → logprob: -15.148154258728027

Token 254: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033475093077868223
    2. 'N' → logprob: -6.253347396850586
    3. ' ' → logprob: -7.003347396850586
    4. '1' → logprob: -7.628347396850586
    5. ' N' → logprob: -11.628347396850586
    6. 'M' → logprob: -12.128347396850586
    7. '-' → logprob: -12.940847396850586
    8. '2' → logprob: -14.378347396850586
    9. 'S' → logprob: -14.503347396850586
    10. '   ' → logprob: -14.565847396850586

Token 255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004771276377141476
    2. 'N' → logprob: -5.5047712326049805
    3. '1' → logprob: -7.3797712326049805
    4. ' ' → logprob: -9.87977123260498
    5. '-' → logprob: -12.00477123260498
    6. 'M' → logprob: -12.12977123260498
    7. ' N' → logprob: -13.25477123260498
    8. 'S' → logprob: -13.81727123260498
    9. '[' → logprob: -14.50477123260498
    10. '2' → logprob: -14.75477123260498

Token 256: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15687866508960724
    2. '   ' → logprob: -2.531878709793091
    3. ',' → logprob: -4.406878471374512
    4. ' 
' → logprob: -4.531878471374512
    5. '<|end|>' → logprob: -4.906878471374512
    6. '    
' → logprob: -5.156878471374512
    7. '  
' → logprob: -5.281878471374512
    8. ':' → logprob: -5.531878471374512
    9. '+' → logprob: -5.531878471374512
    10. '\n' → logprob: -5.781878471374512

Token 257: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8613489270210266
    2. '+' → logprob: -1.3613488674163818
    3. 'while' → logprob: -1.4863488674163818
    4. ' while' → logprob: -3.236348867416382
    5. ',' → logprob: -3.611348867416382
    6. ')' → logprob: -5.111349105834961
    7. ' ' → logprob: -5.361349105834961
    8. ' 
' → logprob: -5.861349105834961
    9. '<|end|>' → logprob: -5.861349105834961
    10. ';' → logprob: -5.986349105834961

Token 258: ' Position' (ID: 21829)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0689570903778076
    2. 'N' → logprob: -1.1939570903778076
    3. 'i' → logprob: -2.0689570903778076
    4. ' i' → logprob: -2.5689570903778076
    5. ' N' → logprob: -2.9439570903778076
    6. ' ' → logprob: -3.3189570903778076
    7. '1' → logprob: -4.068957328796387
    8. ' while' → logprob: -4.693957328796387
    9. 'while' → logprob: -4.943957328796387
    10. ' current' → logprob: -5.068957328796387

Token 259: ' actuelle' (ID: 104951)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: ' sur' (ID: 1512)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21665342152118683
    2. ',' → logprob: -3.341653347015381
    3. '<|end|>' → logprob: -3.341653347015381
    4. ' while' → logprob: -3.716653347015381
    5. 'while' → logprob: -3.841653347015381
    6. '   ' → logprob: -4.091653347015381
    7. '<|end|>' → logprob: -4.091653347015381
    8. ' 
' → logprob: -4.466653347015381
    9. '    
' → logprob: -4.591653347015381
    10. '  
' → logprob: -5.341653347015381

Token 261: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8200119137763977
    2. ' S' → logprob: -0.9450119137763977
    3. ' la' → logprob: -1.945011854171753
    4. ' le' → logprob: -4.820012092590332
    5. 'la' → logprob: -4.945012092590332
    6. 'the' → logprob: -5.320012092590332
    7. ' the' → logprob: -6.070012092590332
    8. 'l' → logprob: -6.570012092590332
    9. 'le' → logprob: -6.945012092590332
    10. 's' → logprob: -7.195012092590332

Token 262: ' chaîne' (ID: 89288)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.740692675113678
    2. 'ligne' → logprob: -1.4906926155090332
    3. 'traj' → logprob: -1.4906926155090332
    4. 'trajectory' → logprob: -4.240692615509033
    5. 'chaine' → logprob: -4.490692615509033
    6. 'tra' → logprob: -4.490692615509033
    7. 's' → logprob: -4.615692615509033
    8. ' traject' → logprob: -4.740692615509033
    9. ' S' → logprob: -5.615692615509033
    10. 'terrain' → logprob: -5.990692615509033

Token 263: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.745661199092865
    2. '
' → logprob: -1.2456612586975098
    3. ':' → logprob: -2.1206612586975098
    4. '<|end|>' → logprob: -3.9956612586975098
    5. ' ' → logprob: -4.24566125869751
    6. ')' → logprob: -4.49566125869751
    7. '   ' → logprob: -4.49566125869751
    8. ' while' → logprob: -4.87066125869751
    9. ' ,' → logprob: -4.99566125869751
    10. ' 
' → logprob: -5.24566125869751

Token 264: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.207764983177185
    2. ' 
' → logprob: -1.707764983177185
    3. '\n' → logprob: -1.832764983177185
    4. '   ' → logprob: -1.957764983177185
    5. '    
' → logprob: -2.9577651023864746
    6. ',' → logprob: -3.2077651023864746
    7. ' while' → logprob: -3.4577651023864746
    8. '\' → logprob: -4.207765102386475
    9. '```' → logprob: -4.332765102386475
    10. 'while' → logprob: -4.457765102386475

Token 265: ' j' (ID: 441)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.47773608565330505
    2. ' while' → logprob: -0.9777361154556274
    3. 'steps' → logprob: -6.977735996246338
    4. ',' → logprob: -7.352735996246338
    5. '   ' → logprob: -7.852735996246338
    6. ':' → logprob: -8.227736473083496
    7. 'step' → logprob: -8.227736473083496
    8. 'next' → logprob: -8.727736473083496
    9. ' steps' → logprob: -8.977736473083496
    10. 'j' (adapté à ' j') → logprob: -9.352736473083496

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021886229515076
    2. '=' → logprob: -2.3502187728881836
    3. '=i' → logprob: -12.225218772888184
    4. ' ' → logprob: -12.600218772888184
    5. 'i' → logprob: -13.975218772888184
    6. ' i' → logprob: -14.225218772888184
    7. ',' → logprob: -14.475218772888184
    8. ')' → logprob: -14.600218772888184
    9. '1' → logprob: -15.100218772888184
    10. '=int' → logprob: -15.475218772888184

Token 267: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2814755141735077
    2. '1' → logprob: -1.90647554397583
    3. 'M' → logprob: -3.53147554397583
    4. 'i' → logprob: -3.65647554397583
    5. ' ' → logprob: -3.78147554397583
    6. ' M' → logprob: -5.03147554397583
    7. ' i' → logprob: -5.28147554397583
    8. 'N' → logprob: -5.40647554397583
    9. '-' → logprob: -6.65647554397583
    10. ' -' → logprob: -7.53147554397583

Token 268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31384167075157166
    2. '1' → logprob: -1.688841700553894
    3. 'M' → logprob: -3.3138415813446045
    4. 'i' → logprob: -3.5638415813446045
    5. 'N' → logprob: -4.188841819763184
    6. '-' → logprob: -5.688841819763184
    7. ' ' → logprob: -7.313841819763184
    8. ' M' → logprob: -8.813841819763184
    9. 'j' → logprob: -9.188841819763184
    10. 'min' → logprob: -9.438841819763184

Token 269: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.541006863117218
    2. ' ' → logprob: -1.4160068035125732
    3. ' +' → logprob: -1.9160068035125732
    4. '<|end|>' → logprob: -4.416007041931152
    5. '   ' → logprob: -5.291007041931152
    6. '
' → logprob: -6.041007041931152
    7. '  ' → logprob: -6.166007041931152
    8. '<|end|>' → logprob: -6.416007041931152
    9. '#' → logprob: -6.541007041931152
    10. ' #' → logprob: -7.291007041931152

Token 270: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5255004167556763
    2. '#' → logprob: -1.9005004167556763
    3. ' ' → logprob: -2.0255002975463867
    4. ' #' → logprob: -2.4005002975463867
    5. ' +' → logprob: -4.150500297546387
    6. '
' → logprob: -4.650500297546387
    7. '=' → logprob: -5.900500297546387
    8. '   ' → logprob: -5.900500297546387
    9. '  ' → logprob: -6.150500297546387
    10. '0' → logprob: -7.525500297546387

Token 271: ' Dern' (ID: 159363)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9126338958740234
    2. 'i' → logprob: -1.9126338958740234
    3. ' ' → logprob: -2.5376338958740234
    4. 'j' → logprob: -2.6626338958740234
    5. ' i' → logprob: -2.7876338958740234
    6. '1' → logprob: -2.9126338958740234
    7. 'len' → logprob: -2.9126338958740234
    8. 'M' → logprob: -3.2876338958740234
    9. 'N' → logprob: -3.4126338958740234
    10. ' M' → logprob: -3.6626338958740234

Token 272: 'ier' (ID: 905)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2946149110794067
    2. '_steps' → logprob: -1.5446149110794067
    3. '_positions' → logprob: -2.294614791870117
    4. '   ' → logprob: -3.044614791870117
    5. '_token' → logprob: -3.169614791870117
    6. '_pos' → logprob: -3.419614791870117
    7. '_position' → logprob: -3.544614791870117
    8. '_tokens' → logprob: -3.544614791870117
    9. '_points' → logprob: -3.919614791870117
    10. 'iques' → logprob: -3.919614791870117

Token 273: ' point' (ID: 2438)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.3573397397994995
    2. 's' → logprob: -1.7323397397994995
    3. ' saut' → logprob: -1.9823397397994995
    4. '_' → logprob: -2.107339859008789
    5. ' ' → logprob: -2.482339859008789
    6. 'j' → logprob: -2.857339859008789
    7. '_j' → logprob: -3.482339859008789
    8. '_jump' → logprob: -3.732339859008789
    9. ' j' → logprob: -3.857339859008789
    10. ' _' → logprob: -4.857339859008789

Token 274: ' d' (ID: 272)
  Prédit: ' atteint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' atteint' → logprob: -0.8566019535064697
    2. ' d' → logprob: -1.6066019535064697
    3. ' de' → logprob: -2.7316019535064697
    4. ' reached' → logprob: -3.2316019535064697
    5. 'reachable' → logprob: -3.3566019535064697
    6. 'd' → logprob: -3.3566019535064697
    7. 'de' → logprob: -3.8566019535064697
    8. ' ' → logprob: -3.9816019535064697
    9. ' reachable' → logprob: -4.106601715087891
    10. ' valid' → logprob: -4.356601715087891

Token 275: ''arrêt' (ID: 186362)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.77923184633255
    2. 'i' → logprob: -1.7792317867279053
    3. 'vue' → logprob: -2.2792317867279053
    4. 'arr' → logprob: -2.6542317867279053
    5. 'istance' → logprob: -3.0292317867279053
    6. 'éc' → logprob: -3.2792317867279053
    7. ' vue' → logprob: -4.654232025146484
    8. 'ép' → logprob: -4.904232025146484
    9. ' i' → logprob: -5.154232025146484
    10. 'j' → logprob: -5.154232025146484

Token 276: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9422646164894104
    2. ' ' → logprob: -1.3172645568847656
    3. '<|end|>' → logprob: -2.4422645568847656
    4. '
' → logprob: -2.5672645568847656
    5. '    ' → logprob: -3.0672645568847656
    6. '    
' → logprob: -3.9422645568847656
    7. ' 
' → logprob: -3.9422645568847656
    8. '+' → logprob: -4.067264556884766
    9. '<|end|>' → logprob: -4.192264556884766
    10. ',' → logprob: -4.192264556884766

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09206704795360565
    2. ' 
' → logprob: -3.967067003250122
    3. ' while' → logprob: -4.217067241668701
    4. '    
' → logprob: -4.342067241668701
    5. ',' → logprob: -4.842067241668701
    6. '
' → logprob: -4.967067241668701
    7. ' ' → logprob: -5.717067241668701
    8. '\t' → logprob: -5.842067241668701
    9. '	while' → logprob: -5.842067241668701
    10. '\n' → logprob: -5.967067241668701

Token 278: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5003023743629456
    2. 'while' (adapté à ' while') → logprob: -1.0003023147583008
    3. '   ' → logprob: -4.000302314758301
    4. '    
' → logprob: -7.125302314758301
    5. ',' → logprob: -7.250302314758301
    6. '```' → logprob: -7.250302314758301
    7. '
' → logprob: -7.500302314758301
    8. ' 
' → logprob: -7.500302314758301
    9. ' ' → logprob: -7.625302314758301
    10. ')' → logprob: -7.750302314758301

Token 279: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24670013785362244
    2. ' i' → logprob: -1.7467001676559448
    3. 'j' → logprob: -3.2467000484466553
    4. ' j' → logprob: -5.496700286865234
    5. 'True' → logprob: -7.246700286865234
    6. ' True' → logprob: -7.996700286865234
    7. '(i' → logprob: -9.246700286865234
    8. ' ' → logprob: -10.371700286865234
    9. 'S' → logprob: -10.621700286865234
    10. '   ' → logprob: -10.871700286865234

Token 280: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9265403747558594
    2. '+' → logprob: -1.1765403747558594
    3. ' <=' → logprob: -1.4265403747558594
    4. ' +' → logprob: -3.4265403747558594
    5. '<=' → logprob: -4.676540374755859
    6. '<' → logprob: -4.926540374755859
    7. ' +=' → logprob: -6.051540374755859
    8. ' !=' → logprob: -6.051540374755859
    9. ' ' → logprob: -7.051540374755859
    10. '+=' → logprob: -7.426540374755859

Token 281: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005044196150265634
    2. 'len' → logprob: -7.625504493713379
    3. ' N' → logprob: -11.500504493713379
    4. '   ' → logprob: -12.500504493713379
    5. ' len' → logprob: -14.750504493713379
    6. 'n' → logprob: -14.750504493713379
    7. 'S' → logprob: -15.250504493713379
    8. ' ' → logprob: -15.250504493713379
    9. '	N' → logprob: -15.250504493713379
    10. '
' → logprob: -15.750504493713379

Token 282: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16341765224933624
    2. ':
' → logprob: -1.9134176969528198
    3. ' and' → logprob: -5.913417816162109
    4. '   ' → logprob: -8.16341781616211
    5. 'and' → logprob: -9.53841781616211
    6. '       ' → logprob: -9.66341781616211
    7. '+' → logprob: -11.41341781616211
    8. ':
' → logprob: -11.41341781616211
    9. ' :' → logprob: -11.66341781616211
    10. '):
' → logprob: -12.03841781616211

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09735609591007233
    2. ' if' → logprob: -2.847356081008911
    3. 'if' → logprob: -3.972356081008911
    4. '   ' → logprob: -4.84735631942749
    5. '    ' → logprob: -5.59735631942749
    6. ' for' → logprob: -6.84735631942749
    7. 'i' → logprob: -7.22235631942749
    8. ' i' → logprob: -7.22235631942749
    9. ' while' → logprob: -7.84735631942749
    10. '```' → logprob: -8.597355842590332

Token 284: ' f' (ID: 285)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3509653806686401
    2. 'if' → logprob: -1.8509653806686401
    3. 'step' → logprob: -1.8509653806686401
    4. 'found' → logprob: -1.9759653806686401
    5. 'k' → logprob: -2.2259654998779297
    6. ' for' → logprob: -2.9759654998779297
    7. '   ' → logprob: -3.6009654998779297
    8. ' if' → logprob: -3.8509654998779297
    9. 'i' → logprob: -3.9759654998779297
    10. ' found' → logprob: -4.35096549987793

Token 285: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.015811339020729065
    2. ' =' → logprob: -4.890811443328857
    3. '=' → logprob: -5.640811443328857
    4. 'rom' → logprob: -6.140811443328857
    5. 'ound' → logprob: -6.640811443328857
    6. 'i' → logprob: -7.390811443328857
    7. 'for' → logprob: -9.0158109664917
    8. 'o' → logprob: -9.3908109664917
    9. '_' → logprob: -9.7658109664917
    10. 'orget' → logprob: -9.8908109664917

Token 286: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.37223222851753235
    2. 'i' → logprob: -1.49723219871521
    3. 'M' → logprob: -3.62223219871521
    4. '-' → logprob: -3.74723219871521
    5. 'j' → logprob: -4.247232437133789
    6. '0' → logprob: -4.497232437133789
    7. 'None' → logprob: -5.747232437133789
    8. 'min' → logprob: -6.247232437133789
    9. '1' → logprob: -6.497232437133789
    10. 'float' → logprob: -6.622232437133789

Token 287: '0' (ID: 15)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.9995431900024414
    2. 'i' → logprob: -0.9995431900024414
    3. 'False' → logprob: -1.8745431900024414
    4. 'j' → logprob: -3.6245431900024414
    5. '0' → logprob: -3.6245431900024414
    6. 'N' → logprob: -3.8745431900024414
    7. '-' → logprob: -4.249543190002441
    8. 'min' → logprob: -4.249543190002441
    9. 'None' → logprob: -6.124543190002441
    10. 'S' → logprob: -6.499543190002441

Token 288: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7625737190246582
    2. '
' → logprob: -1.1375737190246582
    3. '<|end|>' → logprob: -1.7625737190246582
    4. '<|end|>' → logprob: -4.387573719024658
    5. 'for' → logprob: -4.637573719024658
    6. '   ' → logprob: -5.012573719024658
    7. ' for' → logprob: -5.637573719024658
    8. ')' → logprob: -6.637573719024658
    9. '        
' → logprob: -7.137573719024658
    10. 'while' → logprob: -7.137573719024658

Token 289: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40695032477378845
    2. '
' → logprob: -1.1569503545761108
    3. ' for' → logprob: -4.2819504737854
    4. '       ' → logprob: -6.0319504737854
    5. 'while' → logprob: -6.5319504737854
    6. '   ' → logprob: -7.0319504737854
    7. '<|end|>' → logprob: -7.7819504737854
    8. 'j' → logprob: -8.906949996948242
    9. 'found' → logprob: -9.156949996948242
    10. 'x' → logprob: -9.531949996948242

Token 290: ' Ind' (ID: 2761)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.18785494565963745
    2. 'for' → logprob: -2.0628550052642822
    3. 'f' → logprob: -4.062854766845703
    4. ' found' → logprob: -4.187854766845703
    5. ' for' → logprob: -4.937854766845703
    6. 'i' → logprob: -7.312854766845703
    7. 'step' → logprob: -7.437854766845703
    8. 'pas' → logprob: -7.562854766845703
    9. 'flag' → logprob: -7.937854766845703
    10. 'Found' → logprob: -8.312854766845703

Token 291: 'icate' (ID: 8091)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.07103084027767181
    2. 'ice' → logprob: -3.196030855178833
    3. 'ent' → logprob: -3.946030855178833
    4. 'ic' → logprob: -6.571030616760254
    5. 'x' → logprob: -6.821030616760254
    6. 'e' → logprob: -7.196030616760254
    7. 'f' → logprob: -7.196030616760254
    8. 'é' → logprob: -7.446030616760254
    9. 'ices' → logprob: -7.446030616760254
    10. '=' → logprob: -7.571030616760254

Token 292: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.13561874628067017
    2. 'ion' → logprob: -2.2606186866760254
    3. 'i' → logprob: -4.510618686676025
    4. 'f' → logprob: -5.385618686676025
    5. 'r' → logprob: -5.885618686676025
    6. 'u' → logprob: -6.010618686676025
    7. ' i' → logprob: -7.510618686676025
    8. 'if' → logprob: -8.260619163513184
    9. 'eur' → logprob: -8.260619163513184
    10. ' ' → logprob: -8.760619163513184

Token 293: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: ' possibilité' (ID: 58463)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3669045865535736
    2. 'found' → logprob: -2.1169044971466064
    3. ' False' → logprob: -2.7419044971466064
    4. 'f' → logprob: -3.6169044971466064
    5. 's' → logprob: -3.8669044971466064
    6. 'pas' → logprob: -4.3669047355651855
    7. 'True' → logprob: -4.3669047355651855
    8. 'avance' → logprob: -4.9919047355651855
    9. '0' → logprob: -5.3669047355651855
    10. 'tr' → logprob: -5.4919047355651855

Token 295: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.34008461236953735
    2. 'de' → logprob: -2.9650845527648926
    3. '       ' → logprob: -2.9650845527648926
    4. ' =' → logprob: -3.4650845527648926
    5. '=' → logprob: -3.7150845527648926
    6. ' d' → logprob: -3.7150845527648926
    7. ',' → logprob: -3.9650845527648926
    8. 'd' → logprob: -4.715084552764893
    9. '        
' → logprob: -4.715084552764893
    10. ' for' → logprob: -4.965084552764893

Token 296: ' trouver' (ID: 23195)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.060846954584121704
    2. ' saut' → logprob: -3.560847043991089
    3. 'faire' → logprob: -4.93584680557251
    4. 'f' → logprob: -5.18584680557251
    5. 'pas' → logprob: -5.81084680557251
    6. 'sa' → logprob: -6.18584680557251
    7. 'bond' → logprob: -6.56084680557251
    8. 'avance' → logprob: -6.56084680557251
    9. ' déplacement' → logprob: -7.06084680557251
    10. 'fait' → logprob: -7.18584680557251

Token 297: ' le' (ID: 505)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.4533624053001404
    2. ' un' → logprob: -1.0783624649047852
    3. 'le' → logprob: -5.203362464904785
    4. 's' → logprob: -5.578362464904785
    5. ' une' → logprob: -5.703362464904785
    6. 'a' → logprob: -6.203362464904785
    7. 'f' → logprob: -6.328362464904785
    8. 'une' → logprob: -6.328362464904785
    9. ' le' → logprob: -6.828362464904785
    10. '_un' → logprob: -7.703362464904785

Token 298: ' prochain' (ID: 52413)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.646328866481781
    2. 's' → logprob: -1.0213289260864258
    3. '1' → logprob: -3.146328926086426
    4. '0' → logprob: -3.521328926086426
    5. ''s' → logprob: -5.021328926086426
    6. 'pro' → logprob: -5.146328926086426
    7. 'i' → logprob: -5.396328926086426
    8. 'next' → logprob: -5.521328926086426
    9. 'pass' → logprob: -5.896328926086426
    10. ''' → logprob: -6.271328926086426

Token 299: ' pas' (ID: 2173)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2748146057128906
    2. '_' → logprob: -2.3998146057128906
    3. 'pas' → logprob: -3.1498146057128906
    4. '_s' → logprob: -3.3998146057128906
    5. ' ' → logprob: -3.5248146057128906
    6. ' saut' → logprob: -4.524814605712891
    7. 'i' → logprob: -4.649814605712891
    8. '0' → logprob: -4.899814605712891
    9. ' pas' → logprob: -5.774814605712891
    10. 'pos' → logprob: -6.399814605712891

Token 300: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036276284605264664
    2. ' for' → logprob: -4.786276340484619
    3. '
' → logprob: -5.286276340484619
    4. '        
' → logprob: -5.411276340484619
    5. '<|end|>' → logprob: -5.536276340484619
    6. ',' → logprob: -5.661276340484619
    7. 'for' → logprob: -6.411276340484619
    8. ' 
' → logprob: -6.536276340484619
    9. '   ' → logprob: -6.786276340484619
    10. ')' → logprob: -7.286276340484619

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3419184386730194
    2. ' 
' → logprob: -2.091918468475342
    3. '
' → logprob: -2.591918468475342
    4. ' for' → logprob: -3.591918468475342
    5. '        
' → logprob: -4.466918468475342
    6. '  
' → logprob: -4.841918468475342
    7. ',' → logprob: -5.091918468475342
    8. '   ' → logprob: -5.341918468475342
    9. '    
' → logprob: -5.466918468475342
    10. '<|end|>' → logprob: -5.466918468475342

Token 302: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14399448037147522
    2. ' for' → logprob: -2.0189945697784424
    3. '       ' → logprob: -7.893994331359863
    4. 'i' → logprob: -8.018994331359863
    5. 'k' → logprob: -8.143994331359863
    6. '   ' → logprob: -8.768994331359863
    7. '
' → logprob: -9.393994331359863
    8. 'j' → logprob: -11.143994331359863
    9. 'step' → logprob: -11.268994331359863
    10. 'range' → logprob: -11.643994331359863

Token 303: ' Recherche' (ID: 114815)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010884242365136743
    2. ' for' → logprob: -7.376088619232178
    3. '       ' → logprob: -8.00108814239502
    4. 'found' → logprob: -9.87608814239502
    5. 'while' → logprob: -10.37608814239502
    6. 'step' → logprob: -11.00108814239502
    7. 'k' → logprob: -12.37608814239502
    8. 'next' → logprob: -12.37608814239502
    9. '   ' → logprob: -12.37608814239502
    10. 'possible' → logprob: -12.50108814239502

Token 304: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3330128192901611
    2. ' d' → logprob: -1.5830128192901611
    3. 'd' → logprob: -1.9580128192901611
    4. ' for' → logprob: -2.083012819290161
    5. '       ' → logprob: -2.708012819290161
    6. ' j' → logprob: -3.333012819290161
    7. 'for' → logprob: -3.333012819290161
    8. '    ' → logprob: -3.833012819290161
    9. 'j' → logprob: -3.833012819290161
    10. 'de' → logprob: -4.083012580871582

Token 305: ' plus' (ID: 2932)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.14985120296478271
    2. 'k' → logprob: -3.5248513221740723
    3. 'step' → logprob: -3.6498513221740723
    4. 'next' → logprob: -3.6498513221740723
    5. 's' → logprob: -4.524851322174072
    6. 'i' → logprob: -4.774851322174072
    7. 'max' → logprob: -5.149851322174072
    8. 'for' → logprob: -5.274851322174072
    9. 'plus' → logprob: -5.399851322174072
    10. 'p' → logprob: -5.524851322174072

Token 306: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.5001429915428162
    2. 'long' → logprob: -1.000143051147461
    3. ' long' → logprob: -4.375143051147461
    4. ' grand' → logprob: -4.625143051147461
    5. 'loin' → logprob: -6.875143051147461
    6. 'lo' → logprob: -7.000143051147461
    7. 'large' → logprob: -7.625143051147461
    8. '```' → logprob: -8.125143051147461
    9. 'g' → logprob: -9.250143051147461
    10. 'l' → logprob: -9.500143051147461

Token 307: ' saut' (ID: 111480)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.1993321180343628
    2. 's' → logprob: -2.4493322372436523
    3. ' pas' → logprob: -2.8243322372436523
    4. ' saut' → logprob: -3.9493322372436523
    5. 'i' → logprob: -5.074332237243652
    6. 'possible' → logprob: -5.824332237243652
    7. 'k' → logprob: -6.949332237243652
    8. 'p' → logprob: -7.199332237243652
    9. 'jump' → logprob: -7.199332237243652
    10. 'j' → logprob: -7.324332237243652

Token 308: ' valide' (ID: 137323)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.20688456296920776
    2. 'possible' → logprob: -2.3318846225738525
    3. ' in' → logprob: -3.5818846225738525
    4. ' for' → logprob: -4.456884384155273
    5. '       ' → logprob: -4.706884384155273
    6. ' dans' → logprob: -5.456884384155273
    7. ',' → logprob: -5.581884384155273
    8. ' s' → logprob: -5.956884384155273
    9. ' from' → logprob: -5.956884384155273
    10. ' k' → logprob: -5.956884384155273

Token 309: ' allant' (ID: 122150)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3050203323364258
    2. '       ' → logprob: -2.430020332336426
    3. 'for' → logprob: -2.930020332336426
    4. ' from' → logprob: -3.180020332336426
    5. 'from' → logprob: -3.555020332336426
    6. ',' → logprob: -4.305020332336426
    7. ' in' → logprob: -4.430020332336426
    8. ' range' → logprob: -5.680020332336426
    9. 'range' → logprob: -5.930020332336426
    10. '        ' → logprob: -6.055020332336426

Token 310: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.3434723913669586
    2. ' de' → logprob: -1.3434723615646362
    3. 'from' → logprob: -3.843472480773926
    4. 'jus' → logprob: -5.718472480773926
    5. ' from' → logprob: -6.718472480773926
    6. ' jusqu' → logprob: -7.218472480773926
    7. 'dans' → logprob: -7.218472480773926
    8. '   ' → logprob: -7.718472480773926
    9. '       ' → logprob: -8.093472480773926
    10. 'j' → logprob: -8.093472480773926

Token 311: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.550613522529602
    2. 'i' → logprob: -1.050613522529602
    3. ' j' → logprob: -3.3006134033203125
    4. ' i' → logprob: -3.5506134033203125
    5. 'M' → logprob: -5.3006134033203125
    6. ' M' → logprob: -6.9256134033203125
    7. '1' → logprob: -6.9256134033203125
    8. 'min' → logprob: -7.5506134033203125
    9. '   ' → logprob: -8.800613403320312
    10. ' min' → logprob: -8.925613403320312

Token 312: ' fin' (ID: 2131)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5186470746994019
    2. 'j' → logprob: -1.1436470746994019
    3. 'M' → logprob: -3.0186471939086914
    4. ' i' → logprob: -3.8936471939086914
    5. ' j' → logprob: -4.768647193908691
    6. ' M' → logprob: -5.768647193908691
    7. '1' → logprob: -6.143647193908691
    8. 'min' → logprob: -6.268647193908691
    9. '(i' → logprob: -8.268647193908691
    10. ' min' → logprob: -8.518647193908691

Token 313: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8562608957290649
    2. 'de' → logprob: -1.481260895729065
    3. ' à' → logprob: -2.2312607765197754
    4. ' du' → logprob: -2.4812607765197754
    5. 'j' → logprob: -2.7312607765197754
    6. 'i' → logprob: -3.9812607765197754
    7. ' j' → logprob: -4.106260776519775
    8. 'à' → logprob: -4.231260776519775
    9. ' dans' → logprob: -4.731260776519775
    10. ' i' → logprob: -4.856260776519775

Token 314: ' dernier' (ID: 27982)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3470347821712494
    2. ' range' → logprob: -1.7220348119735718
    3. 'i' → logprob: -3.7220346927642822
    4. 'j' → logprob: -3.9720346927642822
    5. 'q' → logprob: -4.222034931182861
    6. ' i' → logprob: -4.972034931182861
    7. 'current' → logprob: -5.097034931182861
    8. 'interval' → logprob: -5.222034931182861
    9. ' q' → logprob: -5.347034931182861
    10. ' j' → logprob: -5.597034931182861

Token 315: ' saut' (ID: 111480)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2000771760940552
    2. 's' → logprob: -1.5750771760940552
    3. 'pas' → logprob: -1.5750771760940552
    4. ' saut' → logprob: -2.3250770568847656
    5. ' q' → logprob: -3.0750770568847656
    6. ' pas' → logprob: -3.3250770568847656
    7. '_' → logprob: -4.325077056884766
    8. ' ' → logprob: -4.700077056884766
    9. 'interval' → logprob: -4.825077056884766
    10. 'j' → logprob: -5.325077056884766

Token 316: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9136636257171631
    2. '+' → logprob: -1.538663625717163
    3. ' j' → logprob: -2.038663625717163
    4. ' à' → logprob: -2.413663625717163
    5. ' +' → logprob: -2.913663625717163
    6. '       ' → logprob: -3.413663625717163
    7. ' jusqu' → logprob: -3.663663625717163
    8. '+j' → logprob: -4.038663864135742
    9. 'à' → logprob: -5.288663864135742
    10. ',' → logprob: -5.413663864135742

Token 317: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.21745164692401886
    2. '+' → logprob: -1.8424516916275024
    3. ' +' → logprob: -3.842451572418213
    4. 'i' → logprob: -5.467451572418213
    5. ' j' → logprob: -5.467451572418213
    6. '+j' → logprob: -5.717451572418213
    7. ')' → logprob: -6.717451572418213
    8. '   ' → logprob: -6.967451572418213
    9. ' i' → logprob: -8.592452049255371
    10. '       ' → logprob: -8.967452049255371

Token 318: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04974474012851715
    2. ' +' → logprob: -3.0497448444366455
    3. ')' → logprob: -7.549744606018066
    4. '+j' → logprob: -7.799744606018066
    5. '+)' → logprob: -9.674744606018066
    6. ')+' → logprob: -10.174744606018066
    7. '   ' → logprob: -10.674744606018066
    8. '+
' → logprob: -11.299744606018066
    9. '+i' → logprob: -11.299744606018066
    10. ',' → logprob: -11.674744606018066

Token 319: ' vers' (ID: 3640)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23410597443580627
    2. ' +' → logprob: -1.6091059446334839
    3. '       ' → logprob: -5.734106063842773
    4. ' à' → logprob: -6.734106063842773
    5. '+j' → logprob: -6.734106063842773
    6. ' jusqu' → logprob: -7.109106063842773
    7. '        ' → logprob: -7.609106063842773
    8. ' au' → logprob: -7.609106063842773
    9. 'j' → logprob: -8.609106063842773
    10. ' ' → logprob: -8.859106063842773

Token 320: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3029196858406067
    2. ' j' → logprob: -1.677919626235962
    3. ' min' → logprob: -3.302919626235962
    4. 'min' → logprob: -3.552919626235962
    5. 'i' → logprob: -5.427919864654541
    6. ' i' → logprob: -6.052919864654541
    7. '   ' → logprob: -6.302919864654541
    8. '```' → logprob: -8.677919387817383
    9. ' la' → logprob: -9.677919387817383
    10. '`' → logprob: -9.677919387817383

Token 321: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5659816861152649
    2. ',' → logprob: -1.6909816265106201
    3. ' +' → logprob: -2.31598162651062
    4. '=' → logprob: -3.31598162651062
    5. ' =' → logprob: -3.31598162651062
    6. '   ' → logprob: -3.81598162651062
    7. '       ' → logprob: -4.065981864929199
    8. ' ,' → logprob: -4.815981864929199
    9. 'j' → logprob: -5.440981864929199
    10. ' in' → logprob: -5.690981864929199

Token 322: 'M' (ID: 44)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1117931678891182
    2. 'M' → logprob: -2.361793279647827
    3. ' M' → logprob: -4.736793041229248
    4. ' ' → logprob: -6.361793041229248
    5. '+' → logprob: -7.611793041229248
    6. 'j' → logprob: -8.486793518066406
    7. '   ' → logprob: -9.736793518066406
    8. ' +' → logprob: -9.736793518066406
    9. 'i' → logprob: -10.361793518066406
    10. '
' → logprob: -10.924293518066406

Token 323: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3520379662513733
    2. '+' → logprob: -1.4770379066467285
    3. ',' → logprob: -3.4770379066467285
    4. ' +' → logprob: -3.6020379066467285
    5. '   ' → logprob: -6.6020379066467285
    6. '=' → logprob: -6.9770379066467285
    7. ' for' → logprob: -7.1020379066467285
    8. '-' → logprob: -7.3520379066467285
    9. ':' → logprob: -7.6020379066467285
    10. ' =' → logprob: -7.8520379066467285

Token 324: ' arrière' (ID: 100451)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.41437214612960815
    2. ' range' → logprob: -1.164372205734253
    3. '   ' → logprob: -4.539371967315674
    4. 'reverse' → logprob: -5.414371967315674
    5. 're' → logprob: -5.539371967315674
    6. ' reversed' → logprob: -5.914371967315674
    7. ' reverse' → logprob: -6.664371967315674
    8. 'j' → logprob: -6.914371967315674
    9. ',' → logprob: -7.414371967315674
    10. ' j' → logprob: -7.789371967315674

Token 325: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.819823682308197
    2. '       ' → logprob: -0.944823682308197
    3. ' for' → logprob: -3.319823741912842
    4. ':' → logprob: -3.819823741912842
    5. '   ' → logprob: -3.944823741912842
    6. '+' → logprob: -4.444823741912842
    7. 'for' → logprob: -4.819823741912842
    8. '-' → logprob: -5.194823741912842
    9. '=' → logprob: -5.319823741912842
    10. '.' → logprob: -5.444823741912842

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04634157940745354
    2. ',' → logprob: -4.921341419219971
    3. '        
' → logprob: -5.046341419219971
    4. '[' → logprob: -5.796341419219971
    5. '	' → logprob: -5.921341419219971
    6. '        ' → logprob: -6.046341419219971
    7. ' ' → logprob: -6.046341419219971
    8. '<|end|>' → logprob: -6.296341419219971
    9. ':' → logprob: -6.421341419219971
    10. '   ' → logprob: -6.546341419219971

Token 327: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5329943299293518
    2. ' for' → logprob: -0.9079943299293518
    3. '       ' → logprob: -4.657994270324707
    4. 'k' → logprob: -9.157994270324707
    5. '   ' → logprob: -9.282994270324707
    6. 'i' → logprob: -10.532994270324707
    7. '	for' → logprob: -10.532994270324707
    8. 'r' → logprob: -11.782994270324707
    9. 'x' → logprob: -11.782994270324707
    10. '
' → logprob: -11.782994270324707

Token 328: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16646765172481537
    2. 'step' → logprob: -3.2914676666259766
    3. 'p' → logprob: -3.6664676666259766
    4. ' k' → logprob: -3.9164676666259766
    5. 'l' → logprob: -4.041467666625977
    6. 'x' → logprob: -4.291467666625977
    7. 'd' → logprob: -4.666467666625977
    8. 'pos' → logprob: -4.916467666625977
    9. 't' → logprob: -5.416467666625977
    10. 's' → logprob: -5.666467666625977

Token 329: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011164306662976742
    2. 'in' → logprob: -4.51116418838501
    3. 'k' → logprob: -9.511164665222168
    4. 'range' → logprob: -10.386164665222168
    5. 's' → logprob: -13.261164665222168
    6. ' ' → logprob: -13.386164665222168
    7. 'd' → logprob: -13.511164665222168
    8. 'n' → logprob: -13.761164665222168
    9. 'from' → logprob: -14.886164665222168
    10. 'ine' → logprob: -14.886164665222168

Token 330: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1426916867494583
    2. ' range' → logprob: -2.0176916122436523
    3. '   ' → logprob: -12.142691612243652
    4. ' reversed' → logprob: -12.392691612243652
    5. '(range' → logprob: -13.142691612243652
    6. ' ' → logprob: -13.267691612243652
    7. '	range' → logprob: -14.017691612243652
    8. 'reverse' → logprob: -14.142691612243652
    9. '  ' → logprob: -14.517691612243652
    10. 're' → logprob: -14.767691612243652

Token 331: '(i' (ID: 3649)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.5879788398742676
    2. '(i' → logprob: -0.8379788398742676
    3. '(min' → logprob: -4.462978839874268
    4. '(' → logprob: -8.08797836303711
    5. '(N' → logprob: -10.33797836303711
    6. '(M' → logprob: -10.46297836303711
    7. 'min' → logprob: -10.71297836303711
    8. '((' → logprob: -11.83797836303711
    9. ' (' → logprob: -11.83797836303711
    10. '(n' → logprob: -11.96297836303711

Token 332: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04448482766747475
    2. ' +' → logprob: -3.419484853744507
    3. ',' → logprob: -4.669484615325928
    4. '+i' → logprob: -7.669484615325928
    5. '+j' → logprob: -7.919484615325928
    6. ' ,' → logprob: -8.169485092163086
    7. '+,' → logprob: -8.794485092163086
    8. '+k' → logprob: -9.794485092163086
    9. ' ' → logprob: -10.794485092163086
    10. '-' → logprob: -10.794485092163086

Token 333: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.007276617921888828
    2. '1' → logprob: -5.13227653503418
    3. ' M' → logprob: -6.63227653503418
    4. ' ' → logprob: -11.13227653503418
    5. 'm' → logprob: -12.50727653503418
    6. '0' → logprob: -12.63227653503418
    7. '(M' → logprob: -12.75727653503418
    8. 'k' → logprob: -12.88227653503418
    9. '   ' → logprob: -14.00727653503418
    10. '	M' → logprob: -14.75727653503418

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007073098095133901
    2. ' ,' → logprob: -7.625707149505615
    3. ',k' → logprob: -9.000707626342773
    4. ',j' → logprob: -9.875707626342773
    5. '+' → logprob: -11.625707626342773
    6. ',i' → logprob: -11.625707626342773
    7. 'k' → logprob: -12.000707626342773
    8. ',
' → logprob: -12.500707626342773
    9. '-' → logprob: -12.500707626342773
    10. '   ' → logprob: -12.750707626342773

Token 335: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002202593954280019
    2. ' j' → logprob: -6.12720251083374
    3. '   ' → logprob: -12.127202987670898
    4. 'i' → logprob: -12.127202987670898
    5. ' ' → logprob: -13.252202987670898
    6. '	j' → logprob: -13.252202987670898
    7. 'k' → logprob: -14.377202987670898
    8. '  ' → logprob: -14.502202987670898
    9. '    ' → logprob: -14.627202987670898
    10. '
' → logprob: -14.877202987670898

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03373652324080467
    2. '-' → logprob: -4.033736705780029
    3. ',-' → logprob: -4.283736705780029
    4. ' ,' → logprob: -6.783736705780029
    5. ' -' → logprob: -8.283736228942871
    6. ',
' → logprob: -9.783736228942871
    7. '   ' → logprob: -10.158736228942871
    8. '    ' → logprob: -10.533736228942871
    9. '	' → logprob: -10.908736228942871
    10. '     ' → logprob: -11.033736228942871

Token 337: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02981541119515896
    2. ' -' → logprob: -3.529815435409546
    3. '-i' → logprob: -10.404815673828125
    4. '-j' → logprob: -10.904815673828125
    5. '-k' → logprob: -11.904815673828125
    6. '-step' → logprob: -12.779815673828125
    7. ' ' → logprob: -13.404815673828125
    8. 'k' → logprob: -13.904815673828125
    9. '-M' → logprob: -14.529815673828125
    10. '   ' → logprob: -15.154815673828125

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. ')' → logprob: -15.12500286102295
    4. 'k' → logprob: -16.875001907348633
    5. ' -' → logprob: -17.937501907348633
    6. '```' → logprob: -17.937501907348633
    7. '-' → logprob: -18.000001907348633
    8. '):
' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.062501907348633
    10. '
' → logprob: -18.062501907348633

Token 339: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1060074120759964
    2. '-' → logprob: -2.4810073375701904
    3. '):
' → logprob: -4.7310075759887695
    4. ',' → logprob: -5.8560075759887695
    5. ' -' → logprob: -6.2310075759887695
    6. ' ):' → logprob: -6.3560075759887695
    7. ',-' → logprob: -7.1060075759887695
    8. '1' → logprob: -8.10600757598877
    9. ')' → logprob: -8.48100757598877
    10. '):-' → logprob: -8.98100757598877

Token 340: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.203158438205719
    2. ':' → logprob: -2.078158378601074
    3. '           ' → logprob: -3.703158378601074
    4. '<|end|>' → logprob: -3.953158378601074
    5. ':
' → logprob: -5.578158378601074
    6. '):
' → logprob: -5.953158378601074
    7. '   ' → logprob: -6.703158378601074
    8. '):' → logprob: -6.703158378601074
    9. ' :' → logprob: -6.703158378601074
    10. ' if' → logprob: -7.203158378601074

Token 341: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.056706659495830536
    2. 'if' (adapté à ' if') → logprob: -2.931706666946411
    3. '           ' → logprob: -7.056706428527832
    4. ' ' → logprob: -7.681706428527832
    5. '0' → logprob: -8.681706428527832
    6. '               ' → logprob: -9.181706428527832
    7. ' k' → logprob: -10.056706428527832
    8. '       ' → logprob: -10.181706428527832
    9. ' ' → logprob: -10.431706428527832
    10. '<|end|>' → logprob: -11.056706428527832

Token 342: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.026317020878195763
    2. ' S' → logprob: -3.6513171195983887
    3. 'k' → logprob: -11.27631664276123
    4. ' ' → logprob: -13.65131664276123
    5. '   ' → logprob: -14.27631664276123
    6. 's' → logprob: -14.40131664276123
    7. ' ' → logprob: -15.02631664276123
    8. '	S' → logprob: -15.02631664276123
    9. ' k' → logprob: -15.27631664276123
    10. '(S' → logprob: -15.27631664276123

Token 343: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -9.364928700961173e-05
    2. '[' → logprob: -10.000093460083008
    3. 'k' → logprob: -10.875093460083008
    4. '[f' → logprob: -11.000093460083008
    5. '[i' → logprob: -12.375093460083008
    6. '[j' → logprob: -12.500093460083008
    7. ' [' → logprob: -13.375093460083008
    8. '{k' → logprob: -14.875093460083008
    9. '[
' → logprob: -15.125093460083008
    10. '[s' → logprob: -15.125093460083008

Token 344: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0072340089827775955
    2. ']==' → logprob: -5.3822340965271
    3. ']=='' → logprob: -6.6322340965271
    4. '']' → logprob: -7.6322340965271
    5. ' ]' → logprob: -7.7572340965271
    6. 'k' → logprob: -8.757233619689941
    7. '==' → logprob: -9.507233619689941
    8. ' ==' → logprob: -9.757233619689941
    9. '=='' → logprob: -10.757233619689941
    10. ''' → logprob: -11.132233619689941

Token 345: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.13430988788604736
    2. ' ==' → logprob: -2.134309768676758
    3. '=='' → logprob: -5.009309768676758
    4. ''' → logprob: -8.634309768676758
    5. ']==' → logprob: -8.634309768676758
    6. ']' → logprob: -8.884309768676758
    7. '==
' → logprob: -9.884309768676758
    8. '0' → logprob: -10.134309768676758
    9. '[' → logprob: -11.009309768676758
    10. ']=='' → logprob: -11.384309768676758

Token 346: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00026383911608718336
    2. '"' → logprob: -8.875264167785645
    3. ' '' → logprob: -9.000264167785645
    4. '0' → logprob: -15.750264167785645
    5. ''o' → logprob: -16.500263214111328
    6. '`' → logprob: -16.875263214111328
    7. '('' → logprob: -17.125263214111328
    8. '   ' → logprob: -17.500263214111328
    9. ''a' → logprob: -18.125263214111328
    10. '‘' → logprob: -18.250263214111328

Token 347: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.464347173576243e-05
    2. ''' → logprob: -10.37503433227539
    3. '1' → logprob: -13.00003433227539
    4. ' ' → logprob: -14.00003433227539
    5. '')' → logprob: -16.25003433227539
    6. ''s' → logprob: -16.43753433227539
    7. '"' → logprob: -16.93753433227539
    8. '۰' → logprob: -17.12503433227539
    9. '০' → logprob: -17.50003433227539
    10. 'o' → logprob: -17.56253433227539

Token 348: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.22741077840328217
    2. '':
' → logprob: -1.7274107933044434
    3. ''' → logprob: -3.7274107933044434
    4. ':' → logprob: -6.852410793304443
    5. ' '' → logprob: -8.227410316467285
    6. '':
' → logprob: -8.852410316467285
    7. ' ':' → logprob: -9.727410316467285
    8. ':
' → logprob: -10.227410316467285
    9. '':

' → logprob: -10.602410316467285
    10. ' and' → logprob: -12.102410316467285

Token 349: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22016820311546326
    2. ' f' → logprob: -2.345168113708496
    3. '           ' → logprob: -2.845168113708496
    4. '
' → logprob: -3.970168113708496
    5. ' 
' → logprob: -4.845168113708496
    6. '                
' → logprob: -5.845168113708496
    7. ':
' → logprob: -6.095168113708496
    8. 'f' → logprob: -6.220168113708496
    9. ' ' → logprob: -6.845168113708496
    10. 'n' → logprob: -7.345168113708496

Token 350: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8612136840820312
    2. 'f' → logprob: -1.6112136840820312
    3. '               ' → logprob: -1.6112136840820312
    4. ' f' → logprob: -1.8612136840820312
    5. '
' → logprob: -4.486213684082031
    6. '            
' → logprob: -5.861213684082031
    7. '                
' → logprob: -6.111213684082031
    8. '       ' → logprob: -6.486213684082031
    9. ':
' → logprob: -6.486213684082031
    10. ' 
' → logprob: -7.736213684082031

Token 351: ' On' (ID: 2160)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2637752890586853
    2. ' f' → logprob: -1.51377534866333
    3. '           ' → logprob: -4.51377534866333
    4. '   ' → logprob: -8.513774871826172
    5. '
' → logprob: -8.638774871826172
    6. 'i' → logprob: -9.138774871826172
    7. '       ' → logprob: -9.263774871826172
    8. '               ' → logprob: -9.513774871826172
    9. '    ' → logprob: -10.888774871826172
    10. ' ' → logprob: -11.013774871826172

Token 352: ' a' (ID: 261)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47172799706459045
    2. ' peut' → logprob: -1.846727967262268
    3. '       ' → logprob: -2.9717280864715576
    4. ' peux' → logprob: -3.7217280864715576
    5. ' can' → logprob: -3.9717280864715576
    6. '               ' → logprob: -4.0967278480529785
    7. 's' → logprob: -4.3467278480529785
    8. ')' → logprob: -4.5967278480529785
    9. '#' → logprob: -5.0967278480529785
    10. ' a' → logprob: -5.2217278480529785

Token 353: ' trouvé' (ID: 60081)
  Prédit: ' trouvé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouvé' → logprob: -0.34639814496040344
    2. ' found' → logprob: -1.596398115158081
    3. 'found' → logprob: -2.596398115158081
    4. ' encontrado' → logprob: -5.59639835357666
    5. ' ' → logprob: -5.97139835357666
    6. ' trouve' → logprob: -6.59639835357666
    7. ' un' → logprob: -6.84639835357666
    8. 'f' → logprob: -6.97139835357666
    9. 'pu' → logprob: -7.34639835357666
    10. ' trouv' → logprob: -7.47139835357666

Token 354: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.02533629909157753
    2. ' une' → logprob: -4.900336265563965
    3. 'un' → logprob: -4.900336265563965
    4. ' le' → logprob: -5.025336265563965
    5. '<|end|>' → logprob: -6.525336265563965
    6. ' a' → logprob: -7.775336265563965
    7. 'le' → logprob: -7.775336265563965
    8. ' la' → logprob: -8.275336265563965
    9. ' ' → logprob: -8.525336265563965
    10. ' f' → logprob: -8.650336265563965

Token 355: ' case' (ID: 1890)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6410551071166992
    2. 'position' → logprob: -1.7660551071166992
    3. 's' → logprob: -2.016055107116699
    4. 'possible' → logprob: -2.766055107116699
    5. 'pos' → logprob: -3.516055107116699
    6. 'poss' → logprob: -4.266055107116699
    7. 'solution' → logprob: -4.891055107116699
    8. 'case' → logprob: -5.016055107116699
    9. 'token' → logprob: -5.016055107116699
    10. 'valid' → logprob: -5.516055107116699

Token 356: ' accessible' (ID: 18240)
  Prédit: ' valide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valide' → logprob: -0.32876962423324585
    2. 'possible' → logprob: -2.8287696838378906
    3. 'qui' → logprob: -3.4537696838378906
    4. 'valid' → logprob: -3.4537696838378906
    5. 'val' → logprob: -3.5787696838378906
    6. 'safe' → logprob: -3.9537696838378906
    7. 's' → logprob: -4.578769683837891
    8. 'reachable' → logprob: -4.703769683837891
    9. ' valable' → logprob: -4.703769683837891
    10. ' viable' → logprob: -4.703769683837891

Token 357: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5571599006652832
    2. ':
' → logprob: -1.1821599006652832
    3. ':' → logprob: -2.307159900665283
    4. '           ' → logprob: -4.307159900665283
    5. ' and' → logprob: -6.057159900665283
    6. ',' → logprob: -6.682159900665283
    7. ' :
' → logprob: -7.307159900665283
    8. ' f' → logprob: -7.432159900665283
    9. '                   ' → logprob: -7.682159900665283
    10. '):
' → logprob: -7.932159900665283

Token 358: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0957074910402298
    2. '           ' → logprob: -2.720707416534424
    3. ' f' → logprob: -3.970707416534424
    4. '                
' → logprob: -6.720707416534424
    5. '            
' → logprob: -7.345707416534424
    6. '
' → logprob: -7.345707416534424
    7. ',' → logprob: -7.845707416534424
    8. 'f' → logprob: -7.970707416534424
    9. ' 
' → logprob: -8.095707893371582
    10. '                   ' → logprob: -8.220707893371582

Token 359: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.45684823393821716
    2. 'f' (adapté à ' f') → logprob: -1.0818482637405396
    3. 'i' → logprob: -5.08184814453125
    4. 'q' → logprob: -5.20684814453125
    5. ' i' → logprob: -5.20684814453125
    6. ' q' → logprob: -5.45684814453125
    7. ' step' → logprob: -6.08184814453125
    8. '           ' → logprob: -6.45684814453125
    9. 'step' → logprob: -7.58184814453125
    10. '
' → logprob: -7.70684814453125

Token 360: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231745839118958
    2. '=' → logprob: -0.8981745839118958
    3. '   ' → logprob: -11.273174285888672
    4. ' ' → logprob: -11.523174285888672
    5. ' +=' → logprob: -12.148174285888672
    6. '  ' → logprob: -12.273174285888672
    7. '    ' → logprob: -12.523174285888672
    8. ',' → logprob: -12.523174285888672
    9. '+=' → logprob: -12.648174285888672
    10. 'f' → logprob: -13.273174285888672

Token 361: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2814677655696869
    2. 'k' → logprob: -1.4064677953720093
    3. 'True' → logprob: -8.53146743774414
    4. ' ' → logprob: -9.90646743774414
    5. ' k' → logprob: -10.65646743774414
    6. 'i' → logprob: -11.28146743774414
    7. '   ' → logprob: -11.40646743774414
    8. '(k' → logprob: -12.78146743774414
    9. 'S' → logprob: -12.90646743774414
    10. 'j' → logprob: -13.53146743774414

Token 362: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47457990050315857
    2. 'k' → logprob: -0.974579930305481
    3. 'True' → logprob: -7.849579811096191
    4. 'i' → logprob: -9.724579811096191
    5. ' k' → logprob: -11.099579811096191
    6. ' ' → logprob: -11.599579811096191
    7. 'j' → logprob: -12.474579811096191
    8. '(k' → logprob: -12.787079811096191
    9. '   ' → logprob: -13.287079811096191
    10. 'true' → logprob: -13.474579811096191

Token 363: '       ' (ID: 309)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24422776699066162
    2. '
' → logprob: -1.6192277669906616
    3. '                
' → logprob: -4.244227886199951
    4. '<|end|>' → logprob: -6.244227886199951
    5. ',' → logprob: -7.744227886199951
    6. '
' → logprob: -7.994227886199951
    7. ',
' → logprob: -8.619227409362793
    8. '            
' → logprob: -8.744227409362793
    9. '               
' → logprob: -8.994227409362793
    10. '  
' → logprob: -8.994227409362793

Token 364: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14887656271457672
    2. '
' → logprob: -2.148876667022705
    3. '                
' → logprob: -4.273876667022705
    4. '<|end|>' → logprob: -5.273876667022705
    5. ',' → logprob: -7.648876667022705
    6. '               
' → logprob: -8.398876190185547
    7. '  
' → logprob: -8.523876190185547
    8. '            
' → logprob: -8.648876190185547
    9. '                ' → logprob: -8.898876190185547
    10. '<|end|>' → logprob: -8.898876190185547

Token 365: ' Signal' (ID: 47466)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.8807828426361084
    2. 'step' → logprob: -1.3807828426361084
    3. 'q' → logprob: -2.6307828426361084
    4. 'next' → logprob: -2.6307828426361084
    5. '               ' → logprob: -3.0057828426361084
    6. 'jump' → logprob: -3.7557828426361084
    7. ' step' → logprob: -3.7557828426361084
    8. 'i' → logprob: -4.1307830810546875
    9. 'break' → logprob: -4.2557830810546875
    10. ' q' → logprob: -4.5057830810546875

Token 366: ' que' (ID: 661)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.18351726233959198
    2. ' que' → logprob: -1.9335172176361084
    3. ' that' → logprob: -4.4335174560546875
    4. ' qu' → logprob: -5.0585174560546875
    5. '               ' → logprob: -6.9335174560546875
    6. 'que' → logprob: -7.0585174560546875
    7. ' found' → logprob: -7.3085174560546875
    8. ' de' → logprob: -8.183517456054688
    9. 'qu' → logprob: -8.183517456054688
    10. ' du' → logprob: -8.308517456054688

Token 367: ' la' (ID: 557)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.3387320041656494
    2. 'un' → logprob: -1.8387320041656494
    3. ' True' → logprob: -1.9637320041656494
    4. ' on' → logprob: -2.2137320041656494
    5. ' un' → logprob: -2.7137320041656494
    6. 'le' → logprob: -2.7137320041656494
    7. ' le' → logprob: -3.0887320041656494
    8. 'True' → logprob: -3.0887320041656494
    9. 'possible' → logprob: -3.8387320041656494
    10. 'une' → logprob: -4.21373176574707

Token 368: ' suite' (ID: 13800)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.4203886985778809
    2. 's' → logprob: -1.5453886985778809
    3. 'plus' → logprob: -2.420388698577881
    4. 'next' → logprob: -2.420388698577881
    5. 'pro' → logprob: -3.045388698577881
    6. 'pass' → logprob: -3.045388698577881
    7. 'position' → logprob: -3.170388698577881
    8. 'break' → logprob: -3.295388698577881
    9. 'suite' → logprob: -3.420388698577881
    10. 'su' → logprob: -4.045388698577881

Token 369: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.16193677484989166
    2. 'est' → logprob: -2.4119367599487305
    3. ' possible' → logprob: -4.0369367599487305
    4. 'possible' → logprob: -4.0369367599487305
    5. ' existe' → logprob: -4.4119367599487305
    6. ' a' → logprob: -5.6619367599487305
    7. 'a' → logprob: -6.5369367599487305
    8. 'pe' → logprob: -6.6619367599487305
    9. ' du' → logprob: -6.6619367599487305
    10. ' is' → logprob: -6.9119367599487305

Token 370: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.02051432617008686
    2. ' possible' → logprob: -4.020514488220215
    3. 'tr' → logprob: -6.770514488220215
    4. 'accessible' → logprob: -7.770514488220215
    5. 'poss' → logprob: -8.020514488220215
    6. '_possible' → logprob: -8.895514488220215
    7. 'valid' → logprob: -9.395514488220215
    8. ' trouv' → logprob: -9.520514488220215
    9. 'Possible' → logprob: -10.645514488220215
    10. ' Possible' → logprob: -10.770514488220215

Token 371: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002703589154407382
    2. '
' → logprob: -6.752703666687012
    3. '<|end|>' → logprob: -7.127703666687012
    4. '                
' → logprob: -8.002703666687012
    5. ',' → logprob: -8.752703666687012
    6. ',
' → logprob: -9.252703666687012
    7. '<|end|>' → logprob: -10.627703666687012
    8. '			' → logprob: -10.752703666687012
    9. '                ' → logprob: -10.877703666687012
    10. 'n' → logprob: -11.127703666687012

Token 372: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005190743831917644
    2. '                
' → logprob: -8.500518798828125
    3. ',' → logprob: -8.875518798828125
    4. 'n' → logprob: -9.875518798828125
    5. '                ' → logprob: -10.875518798828125
    6. '           ' → logprob: -11.750518798828125
    7. '              ' → logprob: -11.750518798828125
    8. '       ' → logprob: -12.000518798828125
    9. ' q' → logprob: -12.000518798828125
    10. 'i' → logprob: -12.000518798828125

Token 373: ' break' (ID: 2338)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.35276728868484497
    2. 'step' → logprob: -2.2277672290802
    3. 'i' → logprob: -2.3527672290802
    4. ' q' → logprob: -3.3527672290802
    5. 'pas' → logprob: -3.6027672290802
    6. ' step' → logprob: -4.727767467498779
    7. ' i' → logprob: -5.477767467498779
    8. '   ' → logprob: -5.602767467498779
    9. 'next' → logprob: -5.977767467498779
    10. 'jump' → logprob: -6.227767467498779

Token 374: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05116415396332741
    2. ' 
' → logprob: -3.801164150238037
    3. '  
' → logprob: -4.676164150238037
    4. '        
' → logprob: -4.926164150238037
    5. '       ' → logprob: -5.301164150238037
    6. '
' → logprob: -6.676164150238037
    7. '    
' → logprob: -6.926164150238037
    8. '<|end|>' → logprob: -6.926164150238037
    9. '\n' → logprob: -7.301164150238037
    10. '   
' → logprob: -7.926164150238037

Token 375: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.100242018699646
    2. '
' → logprob: -1.350242018699646
    3. '       ' → logprob: -1.475242018699646
    4. '        
' → logprob: -3.3502421379089355
    5. '  
' → logprob: -3.6002421379089355
    6. '[' → logprob: -3.8502421379089355
    7. ')' → logprob: -3.8502421379089355
    8. '<|end|>' → logprob: -3.8502421379089355
    9. '    
' → logprob: -5.1002421379089355
    10. '               ' → logprob: -5.2252421379089355

Token 376: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7130468487739563
    2. '       ' → logprob: -1.0880467891693115
    3. ' k' → logprob: -2.3380467891693115
    4. '
' → logprob: -3.4630467891693115
    5. '        
' → logprob: -3.9630467891693115
    6. ' ' → logprob: -5.463047027587891
    7. '  
' → logprob: -5.588047027587891
    8. 'k' → logprob: -6.213047027587891
    9. ' i' → logprob: -6.463047027587891
    10. ' s' → logprob: -6.463047027587891

Token 377: ' Met' (ID: 7227)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20316068828105927
    2. ' if' → logprob: -1.7031606435775757
    3. 'i' → logprob: -7.453160762786865
    4. '       ' → logprob: -7.453160762786865
    5. '   ' → logprob: -8.453160285949707
    6. ' i' → logprob: -9.328160285949707
    7. 'j' → logprob: -9.453160285949707
    8. 'q' → logprob: -9.578160285949707
    9. 'k' → logprob: -9.953160285949707
    10. ' j' → logprob: -10.953160285949707

Token 378: 'tre' (ID: 4086)
  Prédit: 'tre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -1.2474786043167114
    2. 'q' → logprob: -1.9974786043167114
    3. '   ' → logprob: -1.9974786043167114
    4. '       ' → logprob: -2.122478485107422
    5. 'ode' → logprob: -2.997478485107422
    6. ' q' → logprob: -2.997478485107422
    7. 'a' → logprob: -3.497478485107422
    8. 'odes' → logprob: -3.747478485107422
    9. 'i' → logprob: -4.122478485107422
    10. '           ' → logprob: -4.122478485107422

Token 379: ' à' (ID: 1221)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.0360651016235352
    2. ' if' → logprob: -1.5360651016235352
    3. ' i' → logprob: -1.5360651016235352
    4. ' k' → logprob: -2.286065101623535
    5. 'i' → logprob: -3.536065101623535
    6. ' q' → logprob: -3.661065101623535
    7. 'if' → logprob: -3.911065101623535
    8. 'j' → logprob: -4.286065101623535
    9. 'k' → logprob: -5.036065101623535
    10. ' f' → logprob: -5.161065101623535

Token 380: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.015951432287693024
    2. 'q' → logprob: -4.515951633453369
    3. 'i' → logprob: -6.390951633453369
    4. 'j' → logprob: -6.890951633453369
    5. ' jour' → logprob: -7.265951633453369
    6. 'jours' → logprob: -7.640951633453369
    7. '```' → logprob: -8.015951156616211
    8. 'jou' → logprob: -9.015951156616211
    9. 'k' → logprob: -9.140951156616211
    10. 'la' → logprob: -9.390951156616211

Token 381: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3902209401130676
    2. 'j' → logprob: -1.7652208805084229
    3. ' i' → logprob: -2.515220880508423
    4. 'q' → logprob: -3.265220880508423
    5. ' j' → logprob: -4.390221118927002
    6. ' if' → logprob: -4.640221118927002
    7. 'if' → logprob: -5.015221118927002
    8. ' q' → logprob: -6.015221118927002
    9. '       ' → logprob: -7.015221118927002
    10. '   ' → logprob: -8.015220642089844

Token 382: ' dernier' (ID: 27982)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2910284996032715
    2. 'j' → logprob: -1.4160284996032715
    3. 'q' → logprob: -4.9160284996032715
    4. ' i' → logprob: -6.4160284996032715
    5. 'f' → logprob: -8.04102897644043
    6. 'if' → logprob: -8.41602897644043
    7. ' j' → logprob: -8.54102897644043
    8. 'k' → logprob: -10.41602897644043
    9. 'S' → logprob: -10.79102897644043
    10. '   ' → logprob: -11.04102897644043

Token 383: ' point' (ID: 2438)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4145510196685791
    2. 'arr' → logprob: -2.039551019668579
    3. 'point' → logprob: -2.789551019668579
    4. 's' → logprob: -2.789551019668579
    5. 'k' → logprob: -3.414551019668579
    6. 'stop' → logprob: -4.16455078125
    7. '_j' → logprob: -4.28955078125
    8. '_stop' → logprob: -6.03955078125
    9. '_s' → logprob: -6.16455078125
    10. 'ar' → logprob: -6.16455078125

Token 384: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05222069472074509
    2. ' d' → logprob: -3.427220582962036
    3. '_d' → logprob: -4.552220821380615
    4. 'arr' → logprob: -5.552220821380615
    5. 'j' → logprob: -6.927220821380615
    6. '_arr' → logprob: -6.927220821380615
    7. '_stop' → logprob: -7.677220821380615
    8. '_j' → logprob: -8.052220344543457
    9. 'stop' → logprob: -8.052220344543457
    10. '_' → logprob: -8.427220344543457

Token 385: ''arrêt' (ID: 186362)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.39647015929222107
    2. ''arrêt' → logprob: -1.1464701890945435
    3. '_arr' → logprob: -5.271470069885254
    4. 'ar' → logprob: -5.896470069885254
    5. ''arr' → logprob: -7.521470069885254
    6. '’arrêt' → logprob: -7.771470069885254
    7. ' arrêt' → logprob: -8.896470069885254
    8. 'i' → logprob: -8.896470069885254
    9. 'k' → logprob: -9.146470069885254
    10. 'j' → logprob: -9.521470069885254

Token 386: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006015775725245476
    2. ' if' → logprob: -6.381015777587891
    3. '<|end|>' → logprob: -6.506015777587891
    4. 'j' → logprob: -6.881015777587891
    5. ',' → logprob: -7.256015777587891
    6. '[j' → logprob: -8.50601577758789
    7. ' j' → logprob: -8.75601577758789
    8. '        
' → logprob: -9.13101577758789
    9. 's' → logprob: -9.38101577758789
    10. '<|end|>' → logprob: -9.38101577758789

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3181624710559845
    2. '<|end|>' → logprob: -2.318162441253662
    3. '```' → logprob: -2.943162441253662
    4. 'j' → logprob: -3.693162441253662
    5. ',' → logprob: -4.068162441253662
    6. ' if' → logprob: -4.193162441253662
    7. '        
' → logprob: -4.318162441253662
    8. ' =' → logprob: -4.693162441253662
    9. '
' → logprob: -4.693162441253662
    10. '=' → logprob: -5.443162441253662

Token 388: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.021240390837192535
    2. 'q' → logprob: -4.896240234375
    3. 'if' → logprob: -5.271240234375
    4. 'i' → logprob: -5.521240234375
    5. '       ' → logprob: -6.021240234375
    6. ' j' → logprob: -6.771240234375
    7. ' if' → logprob: -7.771240234375
    8. '   ' → logprob: -8.146240234375
    9. ' i' → logprob: -10.771240234375
    10. ' q' → logprob: -11.021240234375

Token 389: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47414371371269226
    2. ' =' → logprob: -0.9741437435150146
    3. '=k' → logprob: -9.724143981933594
    4. ' +=' → logprob: -12.849143981933594
    5. '+=' → logprob: -13.099143981933594
    6. '=i' → logprob: -13.974143981933594
    7. '=j' → logprob: -14.599143981933594
    8. ',' → logprob: -14.849143981933594
    9. 'k' → logprob: -15.224143981933594
    10. '.=' → logprob: -16.599143981933594

Token 390: ' i' (ID: 575)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0076065086759626865
    2. ' k' → logprob: -4.882606506347656
    3. '	k' → logprob: -15.757606506347656
    4. 'i' → logprob: -16.007606506347656
    5. 'j' → logprob: -16.507606506347656
    6. '{k' → logprob: -17.632606506347656
    7. '=k' → logprob: -19.007606506347656
    8. '_k' → logprob: -19.632606506347656
    9. ',k' → logprob: -19.882606506347656
    10. 'K' → logprob: -19.882606506347656

Token 391: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.059028636664152145
    2. ' +' → logprob: -2.9340286254882812
    3. '+k' → logprob: -5.934028625488281
    4. '=' → logprob: -7.184028625488281
    5. ' =' → logprob: -8.309028625488281
    6. '+
' → logprob: -8.934028625488281
    7. '
' → logprob: -9.684028625488281
    8. '+=' → logprob: -9.809028625488281
    9. ' +=' → logprob: -10.309028625488281
    10. ' if' → logprob: -10.309028625488281

Token 392: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.17101804912090302
    2. ' M' → logprob: -2.546018123626709
    3. 'k' → logprob: -2.796018123626709
    4. 'f' → logprob: -4.421018123626709
    5. ' k' → logprob: -5.796018123626709
    6. ' f' → logprob: -6.046018123626709
    7. '1' → logprob: -8.42101764678955
    8. ' ' → logprob: -9.67101764678955
    9. 'm' → logprob: -11.42101764678955
    10. 's' → logprob: -12.67101764678955

Token 393: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012682225555181503
    2. '<|end|>' → logprob: -4.8876824378967285
    3. ' 
' → logprob: -6.2626824378967285
    4. '  
' → logprob: -6.8876824378967285
    5. '
' → logprob: -7.5126824378967285
    6. '<|end|>' → logprob: -7.6376824378967285
    7. '       ' → logprob: -8.01268196105957
    8. ' if' → logprob: -8.01268196105957
    9. '        
' → logprob: -8.88768196105957
    10. '    
' → logprob: -9.01268196105957

Token 394: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06916525959968567
    2. '       ' → logprob: -3.1941652297973633
    3. ' 
' → logprob: -3.9441652297973633
    4. '  
' → logprob: -6.569165229797363
    5. '<|end|>' → logprob: -6.694165229797363
    6. '
' → logprob: -6.944165229797363
    7. '        
' → logprob: -7.444165229797363
    8. 'i' → logprob: -7.944165229797363
    9. ' if' → logprob: -8.069165229797363
    10. ',' → logprob: -8.694165229797363

Token 395: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7743552327156067
    2. 'if' → logprob: -0.7743552327156067
    3. ' if' → logprob: -3.149355173110962
    4. 'i' → logprob: -3.649355173110962
    5. 'q' → logprob: -4.899355411529541
    6. ' i' → logprob: -7.399355411529541
    7. '   ' → logprob: -7.774355411529541
    8. ' q' → logprob: -8.024354934692383
    9. '	if' → logprob: -9.524354934692383
    10. '        
' → logprob: -9.899354934692383

Token 396: ' Ajouter' (ID: 165754)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0023336668964475393
    2. ' if' → logprob: -6.252333641052246
    3. 'i' → logprob: -7.877333641052246
    4. 'q' → logprob: -11.252333641052246
    5. '       ' → logprob: -12.252333641052246
    6. '   ' → logprob: -12.377333641052246
    7. ' i' → logprob: -13.127333641052246
    8. 'If' → logprob: -14.502333641052246
    9. '
' → logprob: -15.252333641052246
    10. 'k' → logprob: -15.877333641052246

Token 397: ' le' (ID: 505)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -1.2527238130569458
    2. ' k' → logprob: -1.3777238130569458
    3. 'k' → logprob: -1.5027238130569458
    4. 'q' → logprob: -1.5027238130569458
    5. ' i' → logprob: -5.127723693847656
    6. ' (' → logprob: -5.627723693847656
    7. 'i' → logprob: -5.877723693847656
    8. '(k' → logprob: -6.127723693847656
    9. ' S' → logprob: -7.127723693847656
    10. 'S' → logprob: -7.502723693847656

Token 398: ' nombre' (ID: 9733)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.27966877818107605
    2. 'q' → logprob: -1.7796688079833984
    3. ' k' → logprob: -3.4046688079833984
    4. ' q' → logprob: -4.029668807983398
    5. 'i' → logprob: -4.404668807983398
    6. 'M' → logprob: -5.529668807983398
    7. '(k' → logprob: -6.529668807983398
    8. 'N' → logprob: -6.779668807983398
    9. ' i' → logprob: -6.779668807983398
    10. 'j' → logprob: -7.154668807983398

Token 399: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.17860685288906097
    2. ' k' → logprob: -3.0536067485809326
    3. '(k' → logprob: -3.1786067485809326
    4. 'k' → logprob: -4.178606986999512
    5. '=k' → logprob: -4.303606986999512
    6. ' of' → logprob: -4.303606986999512
    7. ' i' → logprob: -4.553606986999512
    8. 'i' → logprob: -5.428606986999512
    9. '[k' → logprob: -5.678606986999512
    10. ' (' → logprob: -6.178606986999512

Token 400: ' pas' (ID: 2173)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2652237117290497
    2. 'pas' → logprob: -1.640223741531372
    3. 'steps' → logprob: -3.765223741531372
    4. ' k' → logprob: -4.890223503112793
    5. ' pas' → logprob: -6.140223503112793
    6. ' steps' → logprob: -6.265223503112793
    7. '(k' → logprob: -6.640223503112793
    8. 's' → logprob: -7.015223503112793
    9. ' pasos' → logprob: -7.640223503112793
    10. 'q' → logprob: -8.515223503112793

Token 401: ' effectu' (ID: 100880)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.11168879270553589
    2. '       ' → logprob: -3.3616888523101807
    3. ' to' → logprob: -3.9866888523101807
    4. 'q' → logprob: -4.486688613891602
    5. ' =' → logprob: -4.736688613891602
    6. ',' → logprob: -4.736688613891602
    7. '.append' → logprob: -5.486688613891602
    8. ' ,' → logprob: -5.736688613891602
    9. ' deque' → logprob: -5.736688613891602
    10. '   ' → logprob: -6.486688613891602

Token 402: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.14525063335895538
    2. 'é' → logprob: -2.1452505588531494
    3. 'u' → logprob: -4.8952507972717285
    4. 's' → logprob: -5.8952507972717285
    5. 'es' → logprob: -6.1452507972717285
    6. 'aux' → logprob: -6.8952507972717285
    7. '=' → logprob: -7.2702507972717285
    8. '(' → logprob: -7.2702507972717285
    9. '(i' → logprob: -7.6452507972717285
    10. '+' → logprob: -7.7702507972717285

Token 403: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022040201351046562
    2. ' q' → logprob: -5.022040367126465
    3. '
' → logprob: -5.397040367126465
    4. ' to' → logprob: -6.022040367126465
    5. 'q' → logprob: -6.147040367126465
    6. ',' → logprob: -6.897040367126465
    7. '   ' → logprob: -6.897040367126465
    8. '        
' → logprob: -7.522040367126465
    9. '           ' → logprob: -7.772040367126465
    10. '=' → logprob: -7.772040367126465

Token 404: ' la' (ID: 557)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0008929980103857815
    2. ' q' → logprob: -7.2508931159973145
    3. 'la' → logprob: -8.875892639160156
    4. ' la' → logprob: -10.875892639160156
    5. 'l' → logprob: -11.875892639160156
    6. 'deque' → logprob: -12.125892639160156
    7. '	q' → logprob: -12.625892639160156
    8. '[q' → logprob: -12.750892639160156
    9. '`' → logprob: -14.000892639160156
    10. 'k' → logprob: -14.250892639160156

Token 405: ' liste' (ID: 31719)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10645420104265213
    2. 'deque' → logprob: -2.6064541339874268
    3. 'g' → logprob: -3.9814541339874268
    4. 'left' → logprob: -5.231454372406006
    5. ' gauche' → logprob: -7.106454372406006
    6. 'dé' → logprob: -7.731454372406006
    7. 'queue' → logprob: -7.731454372406006
    8. ' q' → logprob: -8.106453895568848
    9. 'de' → logprob: -8.356453895568848
    10. 'dq' → logprob: -8.981453895568848

Token 406: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005193670745939016
    2. ',' → logprob: -6.130193710327148
    3. '
' → logprob: -7.755193710327148
    4. ' if' → logprob: -7.755193710327148
    5. ' q' → logprob: -7.880193710327148
    6. '<|end|>' → logprob: -8.130193710327148
    7. 'q' → logprob: -8.255193710327148
    8. '        
' → logprob: -8.255193710327148
    9. '   ' → logprob: -8.630193710327148
    10. ',q' → logprob: -8.755193710327148

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014292863197624683
    2. '
' → logprob: -7.876429080963135
    3. ',' → logprob: -8.501429557800293
    4. '   ' → logprob: -8.626429557800293
    5. ' q' → logprob: -8.626429557800293
    6. '	' → logprob: -9.001429557800293
    7. 'q' → logprob: -9.126429557800293
    8. ' if' → logprob: -9.376429557800293
    9. '           ' → logprob: -10.626429557800293
    10. ',q' → logprob: -11.001429557800293

Token 408: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.023789726197719574
    2. ' q' → logprob: -3.773789644241333
    3. 'if' → logprob: -8.523789405822754
    4. '   ' → logprob: -9.148789405822754
    5. ' if' → logprob: -9.398789405822754
    6. 'step' → logprob: -9.773789405822754
    7. '       ' → logprob: -10.273789405822754
    8. '
' → logprob: -11.023789405822754
    9. ' step' → logprob: -11.148789405822754
    10. 'steps' → logprob: -11.523789405822754

Token 409: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011765359668061137
    2. '.' → logprob: -6.751176357269287
    3. 'append' → logprob: -12.376176834106445
    4. '.app' → logprob: -14.126176834106445
    5. '.extend' → logprob: -14.126176834106445
    6. '.ap' → logprob: -15.626176834106445
    7. '.Append' → logprob: -16.501176834106445
    8. ' .' → logprob: -16.501176834106445
    9. '].' → logprob: -16.626176834106445
    10. ').' → logprob: -17.126176834106445

Token 410: 'left' (ID: 4530)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.030824000015854836
    2. '(i' → logprob: -3.5308239459991455
    3. 'left' → logprob: -6.905824184417725
    4. '((' → logprob: -9.780823707580566
    5. '(' → logprob: -11.780823707580566
    6. '(f' → logprob: -13.280823707580566
    7. '(left' → logprob: -14.405823707580566
    8. 'k' → logprob: -14.405823707580566
    9. '(j' → logprob: -14.655823707580566
    10. '(abs' → logprob: -14.655823707580566

Token 411: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.020773107185959816
    2. '(i' → logprob: -3.89577317237854
    3. 'k' → logprob: -9.145772933959961
    4. '((' → logprob: -9.270772933959961
    5. '(' → logprob: -10.770772933959961
    6. 'i' → logprob: -12.645772933959961
    7. '(N' → logprob: -13.020772933959961
    8. '(j' → logprob: -14.145772933959961
    9. '(n' → logprob: -14.395772933959961
    10. '(abs' → logprob: -14.645772933959961

Token 412: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16027794778347015
    2. '-' → logprob: -1.9102779626846313
    3. ')' → logprob: -10.7852783203125
    4. '-i' → logprob: -11.1602783203125
    5. '-j' → logprob: -11.2852783203125
    6. ' ' → logprob: -12.1602783203125
    7. ' ' → logprob: -15.4102783203125
    8. '   ' → logprob: -15.6602783203125
    9. ' )' → logprob: -15.7852783203125
    10. ')-' → logprob: -16.2852783203125

Token 413: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0016201919643208385
    2. ' i' → logprob: -6.626620292663574
    3. 'j' → logprob: -8.501620292663574
    4. '_i' → logprob: -10.126620292663574
    5. ')' → logprob: -11.126620292663574
    6. ')i' → logprob: -11.251620292663574
    7. '   ' → logprob: -11.751620292663574
    8. '(i' → logprob: -12.251620292663574
    9. ',i' → logprob: -13.001620292663574
    10. '	i' → logprob: -13.126620292663574

Token 414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020091719925403595
    2. ' )' → logprob: -6.252009391784668
    3. ')
' → logprob: -9.502009391784668
    4. '))' → logprob: -13.252009391784668
    5. ')`' → logprob: -13.877009391784668
    6. ' )
' → logprob: -14.252009391784668
    7. '+' → logprob: -15.002009391784668
    8. '`)' → logprob: -15.002009391784668
    9. '')' → logprob: -15.377009391784668
    10. ')}' → logprob: -15.377009391784668

Token 415: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8078739047050476
    2. ' 
' → logprob: -1.3078739643096924
    3. ' i' → logprob: -1.9328739643096924
    4. ' if' → logprob: -3.1828739643096924
    5. '
' → logprob: -3.6828739643096924
    6. '\n' → logprob: -3.6828739643096924
    7. 'if' → logprob: -3.9328739643096924
    8. '   ' → logprob: -4.432873725891113
    9. '    
' → logprob: -5.182873725891113
    10. '       ' → logprob: -6.307873725891113

Token 416: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0013121402589604259
    2. 'if' → logprob: -7.376312255859375
    3. ' i' → logprob: -7.376312255859375
    4. '       ' → logprob: -11.126312255859375
    5. ' if' → logprob: -11.126312255859375
    6. '
' → logprob: -11.126312255859375
    7. '        
' → logprob: -11.751312255859375
    8. '   ' → logprob: -12.751312255859375
    9. '    
' → logprob: -13.001312255859375
    10. ' 
' → logprob: -13.501312255859375

Token 417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06920485943555832
    2. ' =' → logprob: -2.819204807281494
    3. '+=' → logprob: -5.319204807281494
    4. ' +=' → logprob: -6.069204807281494
    5. '=k' → logprob: -14.194205284118652
    6. '.=' → logprob: -15.319205284118652
    7. '+' → logprob: -16.319204330444336
    8. 'k' → logprob: -16.569204330444336
    9. '＝' → logprob: -16.569204330444336
    10. ' ' → logprob: -16.694204330444336

Token 418: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -8.506661833962426e-05
    2. ' k' → logprob: -9.37508487701416
    3. '	k' → logprob: -15.75008487701416
    4. '   ' → logprob: -19.125085830688477
    5. '<|end|>' → logprob: -20.125085830688477
    6. '+k' → logprob: -20.375085830688477
    7. ' ' → logprob: -20.625085830688477
    8. '=k' → logprob: -20.625085830688477
    9. '{k' → logprob: -20.875085830688477
    10. '(k' → logprob: -20.875085830688477

Token 419: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13497380912303925
    2. '<|end|>' → logprob: -2.5099737644195557
    3. '
' → logprob: -3.6349737644195557
    4. 'if' → logprob: -5.134974002838135
    5. ' 
' → logprob: -5.134974002838135
    6. ' ' → logprob: -5.384974002838135
    7. '<|end|>' → logprob: -7.259974002838135
    8. '  
' → logprob: -7.759974002838135
    9. '    
' → logprob: -8.384973526000977
    10. '   ' → logprob: -8.509973526000977

Token 420: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 421: ' Se' (ID: 1550)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: ' position' (ID: 4010)
  Prédit: ' déplacer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' déplacer' → logprob: -0.15538418292999268
    2. 'placer' → logprob: -3.780384063720703
    3. 'dé' → logprob: -3.780384063720703
    4. 're' → logprob: -3.905384063720703
    5. 'r' → logprob: -4.280384063720703
    6. 'move' → logprob: -4.405384063720703
    7. ' déplac' → logprob: -4.655384063720703
    8. ' dé' → logprob: -5.155384063720703
    9. '+=' → logprob: -5.405384063720703
    10. '=' → logprob: -5.655384063720703

Token 423: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.08396890014410019
    2. '=' → logprob: -2.5839688777923584
    3. 'n' → logprob: -6.2089691162109375
    4. 'er' → logprob: -6.7089691162109375
    5. 'ne' → logprob: -7.2089691162109375
    6. 'nement' → logprob: -7.8339691162109375
    7. 'nner' → logprob: -8.333969116210938
    8. 'né' → logprob: -8.458969116210938
    9. 'nent' → logprob: -9.458969116210938
    10. ' =' → logprob: -9.958969116210938

Token 424: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00017553119687363505
    2. ' k' → logprob: -9.250175476074219
    3. 'i' → logprob: -9.625175476074219
    4. 'la' → logprob: -11.750175476074219
    5. 'l' → logprob: -12.625175476074219
    6. ' i' → logprob: -14.500175476074219
    7. ' la' → logprob: -14.625175476074219
    8. '```' → logprob: -14.625175476074219
    9. 'next' → logprob: -15.125175476074219
    10. '	k' → logprob: -16.00017547607422

Token 426: ' nouvelle' (ID: 24562)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3795096278190613
    2. 'nou' → logprob: -1.629509687423706
    3. 'pro' → logprob: -2.879509687423706
    4. 'next' → logprob: -3.754509687423706
    5. 'position' → logprob: -3.879509687423706
    6. 'place' → logprob: -5.004509449005127
    7. 'new' → logprob: -5.879509449005127
    8. 'fin' → logprob: -6.379509449005127
    9. 'token' → logprob: -6.379509449005127
    10. ' prochaine' → logprob: -6.754509449005127

Token 427: ' place' (ID: 2475)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.017923161387443542
    2. 'i' → logprob: -4.767923355102539
    3. ' position' → logprob: -5.517923355102539
    4. 'pos' → logprob: -6.392923355102539
    5. 'place' → logprob: -6.517923355102539
    6. 'case' → logprob: -7.517923355102539
    7. ' i' → logprob: -7.892923355102539
    8. ' ' → logprob: -8.017923355102539
    9. 'token' → logprob: -8.267923355102539
    10. 'destination' → logprob: -8.517923355102539

Token 428: ' atte' (ID: 43312)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02031424455344677
    2. '<|end|>' → logprob: -4.2703142166137695
    3. ' 
' → logprob: -5.7703142166137695
    4. '  
' → logprob: -7.3953142166137695
    5. '    
' → logprob: -7.6453142166137695
    6. '   ' → logprob: -7.7703142166137695
    7. '\n' → logprob: -7.8953142166137695
    8. ' if' → logprob: -8.02031421661377
    9. '       ' → logprob: -8.52031421661377
    10. 'if' → logprob: -9.02031421661377

Token 429: 'inte' (ID: 18750)
  Prédit: 'inte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.05708874762058258
    2. 'indre' → logprob: -3.182088851928711
    3. 'int' → logprob: -4.557088851928711
    4. 'i' → logprob: -6.057088851928711
    5. 'ind' → logprob: -7.057088851928711
    6. 'in' → logprob: -8.557088851928711
    7. 'inde' → logprob: -10.682088851928711
    8. 'nte' → logprob: -10.682088851928711
    9. 'ign' → logprob: -11.432088851928711
    10. 'intel' → logprob: -11.932088851928711

Token 430: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006599321495741606
    2. ' 
' → logprob: -6.131599426269531
    3. '<|end|>' → logprob: -6.506599426269531
    4. '    
' → logprob: -7.006599426269531
    5. '   ' → logprob: -7.756599426269531
    6. '\n' → logprob: -7.881599426269531
    7. '  
' → logprob: -8.006599426269531
    8. ' if' → logprob: -8.006599426269531
    9. 'if' → logprob: -8.756599426269531
    10. '       ' → logprob: -9.256599426269531

Token 431: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07143403589725494
    2. ' 
' → logprob: -3.3214340209960938
    3. ' if' → logprob: -5.071434020996094
    4. '   ' → logprob: -5.196434020996094
    5. '  
' → logprob: -5.321434020996094
    6. '    
' → logprob: -5.571434020996094
    7. '\n' → logprob: -5.571434020996094
    8. 'if' → logprob: -5.821434020996094
    9. '       ' → logprob: -5.946434020996094
    10. '        
' → logprob: -6.946434020996094

Token 432: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6141313910484314
    2. '
' → logprob: -1.6141314506530762
    3. ' if' → logprob: -1.6141314506530762
    4. ' 
' → logprob: -3.364131450653076
    5. '       ' → logprob: -4.489131450653076
    6. '   ' → logprob: -5.864131450653076
    7. '        
' → logprob: -6.114131450653076
    8. '    
' → logprob: -6.114131450653076
    9. '<|end|>' → logprob: -6.239131450653076
    10. '\n' → logprob: -6.614131450653076

Token 433: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.49702855944633484
    2. 'i' → logprob: -1.8720285892486572
    3. ' not' → logprob: -2.3720285892486572
    4. 'not' → logprob: -2.4970285892486572
    5. ' f' → logprob: -3.1220285892486572
    6. ' i' → logprob: -4.372028350830078
    7. 'S' → logprob: -5.622028350830078
    8. 'k' → logprob: -7.622028350830078
    9. 'j' → logprob: -7.622028350830078
    10. ' S' → logprob: -7.997028350830078

Token 434: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0788998156785965
    2. '==' → logprob: -2.57889986038208
    3. ' ' → logprob: -12.578899383544922
    4. ')' → logprob: -13.328899383544922
    5. '0' → logprob: -13.578899383544922
    6. '=' → logprob: -13.828899383544922
    7. ')==' → logprob: -14.203899383544922
    8. ' !=' → logprob: -14.703899383544922
    9. ':' → logprob: -14.828899383544922
    10. '==
' → logprob: -15.453899383544922

Token 435: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004621187690645456
    2. ' ' → logprob: -5.3796210289001465
    3. '   ' → logprob: -14.379621505737305
    4. '1' → logprob: -15.379621505737305
    5. '  ' → logprob: -16.379621505737305
    6. '۰' → logprob: -17.192121505737305
    7. '=' → logprob: -17.567121505737305
    8. ' ' → logprob: -17.754621505737305
    9. '    ' → logprob: -18.004621505737305
    10. '	' → logprob: -18.692121505737305

Token 436: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.566264295950532e-05
    2. ' ' → logprob: -9.375085830688477
    3. '1' → logprob: -14.500085830688477
    4. '   ' → logprob: -16.000085830688477
    5. '۰' → logprob: -16.500085830688477
    6. '=' → logprob: -17.187585830688477
    7. '  ' → logprob: -18.250085830688477
    8. '০' → logprob: -18.625085830688477
    9. '０' → logprob: -19.187585830688477
    10. '    ' → logprob: -19.187585830688477

Token 437: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16976934671401978
    2. ':
' → logprob: -2.044769287109375
    3. ':return' → logprob: -3.669769287109375
    4. '   ' → logprob: -7.794769287109375
    5. ' :' → logprob: -8.169769287109375
    6. '       ' → logprob: -8.294769287109375
    7. ' :
' → logprob: -9.169769287109375
    8. '           ' → logprob: -9.294769287109375
    9. ':
' → logprob: -10.044769287109375
    10. 'return' → logprob: -11.419769287109375

Token 438: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05668377876281738
    2. '           ' → logprob: -3.0566837787628174
    3. '   ' → logprob: -5.431683540344238
    4. 'return' → logprob: -6.306683540344238
    5. ' return' → logprob: -6.431683540344238
    6. ':return' → logprob: -9.556683540344238
    7. ':
' → logprob: -10.181683540344238
    8. '	return' → logprob: -10.306683540344238
    9. '
' → logprob: -10.681683540344238
    10. '    
' → logprob: -10.931683540344238

Token 439: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0013505916576832533
    2. ' return' → logprob: -7.001350402832031
    3. '           ' → logprob: -8.501350402832031
    4. '   ' → logprob: -8.626350402832031
    5. 'break' → logprob: -10.251350402832031
    6. '       ' → logprob: -10.876350402832031
    7. '	return' → logprob: -13.626350402832031
    8. ' ' → logprob: -14.626350402832031
    9. '
' → logprob: -15.001350402832031
    10. '  ' → logprob: -17.00135040283203

Token 440: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0006646605907008052
    2. ' return' → logprob: -7.750664710998535
    3. '   ' → logprob: -8.750664710998535
    4. '       ' → logprob: -9.875664710998535
    5. 'break' → logprob: -10.875664710998535
    6. '           ' → logprob: -12.625664710998535
    7. '```' → logprob: -13.625664710998535
    8. '	return' → logprob: -15.250664710998535
    9. ' ' → logprob: -15.375664710998535
    10. '
' → logprob: -16.50066375732422

Token 441: ' aucun' (ID: 41678)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.13116469979286194
    2. ' i' → logprob: -3.506164789199829
    3. ' q' → logprob: -3.756164789199829
    4. 'True' → logprob: -3.881164789199829
    5. '    ' → logprob: -4.63116455078125
    6. ' ' → logprob: -4.75616455078125
    7. '   ' → logprob: -5.00616455078125
    8. ' False' → logprob: -5.13116455078125
    9. ' j' → logprob: -5.50616455078125
    10. '       ' → logprob: -5.88116455078125

Token 442: ' nouveau' (ID: 23184)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24086040258407593
    2. 'pas' → logprob: -1.9908604621887207
    3. 'che' → logprob: -3.3658604621887207
    4. ' saut' → logprob: -3.8658604621887207
    5. 'm' → logprob: -4.990860462188721
    6. 'pass' → logprob: -5.365860462188721
    7. 'sa' → logprob: -5.990860462188721
    8. 'possible' → logprob: -6.240860462188721
    9. 'plus' → logprob: -7.240860462188721
    10. ' chemin' → logprob: -7.490860462188721

Token 443: ' saut' (ID: 111480)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6462824940681458
    2. 's' → logprob: -0.7712824940681458
    3. ' saut' → logprob: -5.39628267288208
    4. 'bond' → logprob: -6.77128267288208
    5. 'point' → logprob: -6.77128267288208
    6. '```' → logprob: -6.89628267288208
    7. 'sa' → logprob: -7.39628267288208
    8. 'k' → logprob: -7.39628267288208
    9. 'pos' → logprob: -7.52128267288208
    10. 'm' → logprob: -7.52128267288208

Token 444: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6900609135627747
    2. 'possible' → logprob: -0.9400609135627747
    3. ' possible' → logprob: -2.81506085395813
    4. ' n' → logprob: -3.06506085395813
    5. 'val' → logprob: -7.815061092376709
    6. '   ' → logprob: -8.31506061553955
    7. '_possible' → logprob: -8.31506061553955
    8. 'poss' → logprob: -8.56506061553955
    9. 'valid' → logprob: -10.31506061553955
    10. 'Possible' → logprob: -10.44006061553955

Token 445: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.11330267786979675
    2. 'a' → logprob: -2.863302707672119
    3. ''a' → logprob: -3.113302707672119
    4. 'est' → logprob: -6.113302707672119
    5. ''était' → logprob: -6.488302707672119
    6. '’est' → logprob: -7.613302707672119
    7. '_possible' → logprob: -7.613302707672119
    8. 'possible' → logprob: -8.363302230834961
    9. ' possible' → logprob: -9.488302230834961
    10. ''ont' → logprob: -9.613302230834961

Token 446: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.01756116934120655
    2. 'tr' → logprob: -4.767560958862305
    3. ' possible' → logprob: -4.767560958862305
    4. ' trouvé' → logprob: -8.142560958862305
    5. 'poss' → logprob: -9.517560958862305
    6. '_possible' → logprob: -11.767560958862305
    7. ' trouv' → logprob: -12.017560958862305
    8. ' ' → logprob: -12.267560958862305
    9. '```' → logprob: -12.767560958862305
    10. 'pas' → logprob: -12.892560958862305

Token 447: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0945175290107727
    2. '               ' → logprob: -2.594517469406128
    3. ',' → logprob: -4.719517707824707
    4. ':' → logprob: -5.969517707824707
    5. '       ' → logprob: -6.719517707824707
    6. ':
' → logprob: -6.844517707824707
    7. 'return' → logprob: -6.969517707824707
    8. ':return' → logprob: -7.719517707824707
    9. ' return' → logprob: -8.344517707824707
    10. '   ' → logprob: -9.719517707824707

Token 448: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.27311164140701294
    2. ' return' → logprob: -1.6481115818023682
    3. '           ' → logprob: -3.148111581802368
    4. '       ' → logprob: -6.023111820220947
    5. '   ' → logprob: -7.273111820220947
    6. 'break' → logprob: -8.148111343383789
    7. '               ' → logprob: -9.148111343383789
    8. ' break' → logprob: -9.523111343383789
    9. '	return' → logprob: -10.148111343383789
    10. '
' → logprob: -12.523111343383789

Token 449: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4173327386379242
    2. '           ' → logprob: -1.7923327684402466
    3. ' return' → logprob: -1.9173327684402466
    4. '       ' → logprob: -3.792332649230957
    5. 'break' → logprob: -6.042332649230957
    6. '   ' → logprob: -7.292332649230957
    7. '{return' → logprob: -8.042332649230957
    8. ' retourne' → logprob: -8.042332649230957
    9. ' break' → logprob: -8.292332649230957
    10. '```' → logprob: -8.667332649230957

Token 450: ' -' (ID: 533)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.01815708540380001
    2. ' [-' → logprob: -4.018157005310059
    3. '   ' → logprob: -12.018157005310059
    4. '       ' → logprob: -15.018157005310059
    5. ' ' → logprob: -15.143157005310059
    6. '  ' → logprob: -15.268157005310059
    7. '    ' → logprob: -16.393157958984375
    8. '([-' → logprob: -16.393157958984375
    9. '[' → logprob: -16.768157958984375
    10. '     ' → logprob: -17.143157958984375

Token 451: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47416597604751587
    2. '[' → logprob: -0.9741659760475159
    3. ' [' → logprob: -9.849165916442871
    4. '[-' → logprob: -10.349165916442871
    5. '```' → logprob: -13.099165916442871
    6. '   ' → logprob: -13.974165916442871
    7. '[
' → logprob: -14.224165916442871
    8. ' ' → logprob: -15.599165916442871
    9. '``' → logprob: -16.724166870117188
    10. '`' → logprob: -16.724166870117188

Token 452: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6940611600875854
    2. '
' → logprob: -0.8190611600875854
    3. '           ' → logprob: -3.194061279296875
    4. ':
' → logprob: -4.569061279296875
    5. '   ' → logprob: -5.319061279296875
    6. 'return' → logprob: -6.819061279296875
    7. '[' → logprob: -6.944061279296875
    8. '               ' → logprob: -8.319061279296875
    9. '\n' → logprob: -8.694061279296875
    10. '
' → logprob: -8.819061279296875

Token 453: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10277385264635086
    2. '
' → logprob: -2.602773904800415
    3. '           ' → logprob: -4.102773666381836
    4. '   ' → logprob: -5.352773666381836
    5. '[' → logprob: -6.727773666381836
    6. '[-' → logprob: -8.477773666381836
    7. '[]
' → logprob: -8.852773666381836
    8. 'return' → logprob: -9.102773666381836
    9. ' return' → logprob: -9.477773666381836
    10. '```' → logprob: -9.477773666381836

Token 454: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014790797606110573
    2. ' return' → logprob: -4.264791011810303
    3. '[-' → logprob: -7.764791011810303
    4. '   ' → logprob: -8.889790534973145
    5. '       ' → logprob: -10.389790534973145
    6. '           ' → logprob: -10.514790534973145
    7. '
' → logprob: -12.639790534973145
    8. '	return' → logprob: -13.389790534973145
    9. '[' → logprob: -14.014790534973145
    10. '```' → logprob: -14.764790534973145

Token 455: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.1008713702030946e-06
    2. ' [-' → logprob: -13.125001907348633
    3. '[' → logprob: -17.375001907348633
    4. '-' → logprob: -20.000001907348633
    5. '([-' → logprob: -20.375001907348633
    6. ' ' → logprob: -20.750001907348633
    7. '```' → logprob: -21.125001907348633
    8. '   ' → logprob: -21.375001907348633
    9. '[
' → logprob: -21.500001907348633
    10. '[:-' → logprob: -22.500001907348633

Token 456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -17.25
    4. '
' → logprob: -18.375
    5. ']' → logprob: -18.875
    6. ',' → logprob: -19.3125
    7. '۱' → logprob: -19.3125
    8. '１' → logprob: -19.3125
    9. '   ' → logprob: -19.4375
    10. '}' → logprob: -19.9375

Token 457: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008316631428897381
    2. ']
' → logprob: -7.125831604003906
    3. ' ]' → logprob: -11.000831604003906
    4. '   ' → logprob: -12.625831604003906
    5. ')' → logprob: -12.875831604003906
    6. '])' → logprob: -13.000831604003906
    7. '       ' → logprob: -14.375831604003906
    8. ']
' → logprob: -14.500831604003906
    9. ')]' → logprob: -14.625831604003906
    10. ']

' → logprob: -14.875831604003906

Token 458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12586306035518646
    2. '<|end|>' → logprob: -2.2508630752563477
    3. '
' → logprob: -5.250863075256348
    4. 'return' → logprob: -5.375863075256348
    5. '    
' → logprob: -6.375863075256348
    6. ')' → logprob: -8.625863075256348
    7. '    ' → logprob: -8.625863075256348
    8. ' return' → logprob: -8.625863075256348
    9. '       ' → logprob: -8.875863075256348
    10. '	return' → logprob: -9.000863075256348

Token 459: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5784319639205933
    2. 'return' → logprob: -0.8284319639205933
    3. '[]' → logprob: -7.578432083129883
    4. '    
' → logprob: -7.828432083129883
    5. '[' → logprob: -8.203432083129883
    6. ' return' → logprob: -8.328432083129883
    7. '```' → logprob: -8.328432083129883
    8. '
' → logprob: -8.578432083129883
    9. '	return' → logprob: -8.953432083129883
    10. ')' → logprob: -9.078432083129883

Token 460: ' Conversion' (ID: 74433)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0015542630571871996
    2. ' return' → logprob: -6.751554489135742
    3. '   ' → logprob: -7.876554489135742
    4. '
' → logprob: -13.001554489135742
    5. '    
' → logprob: -14.376554489135742
    6. '#' → logprob: -15.001554489135742
    7. 'ret' → logprob: -15.251554489135742
    8. ' ' → logprob: -15.376554489135742
    9. '```' → logprob: -15.626554489135742
    10. 'result' → logprob: -16.126554489135742

Token 461: ' de' (ID: 334)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8893380165100098
    2. '   ' → logprob: -1.1393380165100098
    3. 'return' → logprob: -2.0143380165100098
    4. ' list' → logprob: -2.1393380165100098
    5. ' return' → logprob: -4.51433801651001
    6. '(list' → logprob: -5.51433801651001
    7. 'q' → logprob: -6.51433801651001
    8. ' q' → logprob: -7.63933801651001
    9. 'deque' → logprob: -8.264337539672852
    10. ' de' → logprob: -9.264337539672852

Token 462: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03961453214287758
    2. 'q' → logprob: -3.28961443901062
    3. ' list' → logprob: -6.789614677429199
    4. ' q' → logprob: -7.789614677429199
    5. 'deque' → logprob: -10.4146146774292
    6. '[q' → logprob: -14.0396146774292
    7. '   ' → logprob: -14.6646146774292
    8. 'de' → logprob: -15.2896146774292
    9. 'dq' → logprob: -15.2896146774292
    10. ' ' → logprob: -15.5396146774292

Token 463: ' deque' (ID: 90347)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.002658773912116885
    2. 'q' → logprob: -6.127658843994141
    3. ' list' → logprob: -7.752658843994141
    4. ' q' → logprob: -10.62765884399414
    5. 'deque' → logprob: -11.25265884399414
    6. 'return' → logprob: -12.37765884399414
    7. '   ' → logprob: -14.62765884399414
    8. '```' → logprob: -15.00265884399414
    9. '
' → logprob: -15.25265884399414
    10. 'liste' → logprob: -15.62765884399414

Token 464: ' en' (ID: 469)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.983766496181488
    2. '(q' → logprob: -1.3587665557861328
    3. 'list' → logprob: -1.7337665557861328
    4. 'to' → logprob: -2.608766555786133
    5. 'return' → logprob: -2.608766555786133
    6. '(' → logprob: -4.233766555786133
    7. 'q' → logprob: -4.358766555786133
    8. 'tolist' → logprob: -4.358766555786133
    9. '([]' → logprob: -7.233766555786133
    10. '   ' → logprob: -7.858766555786133

Token 465: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014168446883559227
    2. ' list' → logprob: -4.2641682624816895
    3. 'liste' → logprob: -12.889168739318848
    4. '[]' → logprob: -13.639168739318848
    5. 'List' → logprob: -15.264168739318848
    6. 'a' → logprob: -15.514168739318848
    7. '```' → logprob: -15.889168739318848
    8. 'q' → logprob: -15.889168739318848
    9. ' a' → logprob: -16.13916778564453
    10. '   ' → logprob: -16.26416778564453

Token 466: ' normale' (ID: 57494)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023541973903775215
    2. '   ' → logprob: -4.0235419273376465
    3. ' return' → logprob: -5.3985419273376465
    4. '
' → logprob: -7.1485419273376465
    5. '    
' → logprob: -10.398542404174805
    6. '	return' → logprob: -11.398542404174805
    7. '[]
' → logprob: -11.648542404174805
    8. '```' → logprob: -12.273542404174805
    9. '  
' → logprob: -13.023542404174805
    10. 'q' → logprob: -13.273542404174805

Token 467: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2722187340259552
    2. '   ' → logprob: -1.5222187042236328
    3. '
' → logprob: -4.272218704223633
    4. ' return' → logprob: -5.147218704223633
    5. '    
' → logprob: -8.397218704223633
    6. '```' → logprob: -9.772218704223633
    7. '  
' → logprob: -11.272218704223633
    8. '	return' → logprob: -12.022218704223633
    9. '   
' → logprob: -12.397218704223633
    10. '  ' → logprob: -12.647218704223633

Token 468: ' résultat' (ID: 62556)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08904470503330231
    2. ' return' → logprob: -2.5890448093414307
    3. ' list' → logprob: -5.339044570922852
    4. '   ' → logprob: -5.589044570922852
    5. 'list' → logprob: -6.464044570922852
    6. '
' → logprob: -13.089044570922852
    7. ' ' → logprob: -14.089044570922852
    8. ':return' → logprob: -14.714044570922852
    9. '  ' → logprob: -14.839044570922852
    10. 'q' → logprob: -14.964044570922852

Token 469: ' final' (ID: 1721)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01901385374367237
    2. '   ' → logprob: -4.89401388168335
    3. '(list' → logprob: -5.76901388168335
    4. '[::-' → logprob: -6.01901388168335
    5. ' return' → logprob: -6.14401388168335
    6. '(return' → logprob: -6.76901388168335
    7. '
' → logprob: -7.51901388168335
    8. 'list' → logprob: -7.89401388168335
    9. 'def' → logprob: -8.144013404846191
    10. '(q' → logprob: -8.269013404846191

Token 470: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6190620064735413
    2. 'return' → logprob: -0.8690620064735413
    3. '
' → logprob: -3.2440619468688965
    4. ' return' → logprob: -5.9940619468688965
    5. '    
' → logprob: -7.4940619468688965
    6. '  
' → logprob: -9.494062423706055
    7. '	return' → logprob: -10.869062423706055
    8. '   
' → logprob: -10.994062423706055
    9. '  ' → logprob: -11.369062423706055
    10. '[]
' → logprob: -12.119062423706055

Token 471: ' les' (ID: 1341)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7477976679801941
    2. 'list' → logprob: -0.7477976679801941
    3. ' list' → logprob: -3.247797727584839
    4. ' return' → logprob: -4.24779748916626
    5. '   ' → logprob: -10.497797966003418
    6. '```' → logprob: -14.497797966003418
    7. 'q' → logprob: -15.747797966003418
    8. 'List' → logprob: -16.7477970123291
    9. 're' → logprob: -16.8727970123291
    10. '(list' → logprob: -17.3727970123291

Token 472: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.891220211982727
    2. 'q' → logprob: -1.141220211982727
    3. 'list' → logprob: -2.5162200927734375
    4. ' q' → logprob: -2.6412200927734375
    5. 'steps' → logprob: -3.0162200927734375
    6. 'return' → logprob: -3.5162200927734375
    7. ' pas' → logprob: -4.2662200927734375
    8. ' list' → logprob: -5.1412200927734375
    9. 's' → logprob: -5.5162200927734375
    10. ' steps' → logprob: -5.6412200927734375

Token 473: ' effectu' (ID: 100880)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14860893785953522
    2. '   ' → logprob: -2.148608922958374
    3. ' return' → logprob: -4.273609161376953
    4. '
' → logprob: -5.773609161376953
    5. ' =' → logprob: -5.773609161376953
    6. '[::-' → logprob: -7.273609161376953
    7. '()
' → logprob: -9.023609161376953
    8. '=' → logprob: -9.273609161376953
    9. '	return' → logprob: -9.773609161376953
    10. '[:]' → logprob: -10.273609161376953

Token 474: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.00024596223374828696
    2. 'es' → logprob: -8.875246047973633
    3. 'ées' → logprob: -9.500246047973633
    4. 'é' → logprob: -10.625246047973633
    5. 'ès' → logprob: -12.750246047973633
    6. 's' → logprob: -13.125246047973633
    7. '[' → logprob: -13.750246047973633
    8. '   ' → logprob: -15.500246047973633
    9. '```' → logprob: -15.750246047973633
    10. '['' → logprob: -16.000246047973633

Token 475: ' dans' (ID: 2671)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10758250206708908
    2. '   ' → logprob: -2.3575825691223145
    3. '
' → logprob: -5.2325825691223145
    4. ' return' → logprob: -6.2325825691223145
    5. '    
' → logprob: -10.732582092285156
    6. '	return' → logprob: -11.357582092285156
    7. '  
' → logprob: -12.857582092285156
    8. '
' → logprob: -13.107582092285156
    9. '  ' → logprob: -13.482582092285156
    10. '(return' → logprob: -14.232582092285156

Token 476: ' l' (ID: 305)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.002753522479906678
    2. ' list' → logprob: -6.252753734588623
    3. 'q' → logprob: -7.127753734588623
    4. ' q' → logprob: -11.502753257751465
    5. '[q' → logprob: -12.752753257751465
    6. '   ' → logprob: -13.002753257751465
    7. 're' → logprob: -13.377753257751465
    8. '[::-' → logprob: -13.502753257751465
    9. '[list' → logprob: -13.627753257751465
    10. 'reverse' → logprob: -14.252753257751465

Token 477: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.1094236895442009
    2. 'ordre' → logprob: -2.3594236373901367
    3. '’ordre' → logprob: -4.984423637390137
    4. '[' → logprob: -7.109423637390137
    5. '[]' → logprob: -7.984423637390137
    6. 'e' → logprob: -7.984423637390137
    7. '[::-' → logprob: -8.734423637390137
    8. 'order' → logprob: -8.859423637390137
    9. '[]
' → logprob: -9.109423637390137
    10. 'ord' → logprob: -9.609423637390137

Token 478: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12760931253433228
    2. 'return' → logprob: -2.1276092529296875
    3. '
' → logprob: -7.7526092529296875
    4. ' return' → logprob: -8.377609252929688
    5. '    
' → logprob: -11.502609252929688
    6. '	return' → logprob: -13.002609252929688
    7. '[' → logprob: -13.627609252929688
    8. '[]
' → logprob: -13.627609252929688
    9. '(return' → logprob: -13.752609252929688
    10. '[]' → logprob: -14.252609252929688

Token 479: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08374033868312836
    2. '   ' → logprob: -2.583740234375
    3. ' return' → logprob: -5.333740234375
    4. '```' → logprob: -12.083740234375
    5. '	return' → logprob: -12.583740234375
    6. '
' → logprob: -13.458740234375
    7. '  ' → logprob: -14.083740234375
    8. '    
' → logprob: -14.333740234375
    9. ' ' → logprob: -14.958740234375
    10. '    ' → logprob: -15.458740234375

Token 480: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.031626440584659576
    2. ' return' → logprob: -3.5316264629364014
    3. '   ' → logprob: -6.281626224517822
    4. '
' → logprob: -12.90662670135498
    5. '	return' → logprob: -14.28162670135498
    6. '```' → logprob: -14.53162670135498
    7. '    
' → logprob: -16.406625747680664
    8. ' ' → logprob: -16.781625747680664
    9. '  ' → logprob: -16.781625747680664
    10. 'eturn' → logprob: -17.531625747680664

Token 481: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -6.2729995988775045e-06
    2. ' list' → logprob: -12.000006675720215
    3. 'q' → logprob: -17.5000057220459
    4. '[list' → logprob: -19.7500057220459
    5. '(list' → logprob: -20.0000057220459
    6. '[q' → logprob: -23.1250057220459
    7. 'List' → logprob: -23.2500057220459
    8. ' q' → logprob: -23.6250057220459
    9. '=list' → logprob: -24.2500057220459
    10. '	list' → logprob: -25.0000057220459

Token 482: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.00000286102295
    3. 'q' → logprob: -15.87500286102295
    4. ' (' → logprob: -17.125001907348633
    5. '(
' → logprob: -18.750001907348633
    6. '(s' → logprob: -19.125001907348633
    7. '[q' → logprob: -20.000001907348633
    8. '(qu' → logprob: -20.000001907348633
    9. '()' → logprob: -20.125001907348633
    10. '```' → logprob: -20.125001907348633

Token 483: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.23917081207037e-05
    2. '())' → logprob: -10.125041961669922
    3. '()' → logprob: -13.875041961669922
    4. ' )' → logprob: -14.125041961669922
    5. '))' → logprob: -15.625041961669922
    6. ')
' → logprob: -16.250041961669922
    7. '[])' → logprob: -16.375041961669922
    8. '])' → logprob: -17.250041961669922
    9. ')`' → logprob: -17.250041961669922
    10. '）' → logprob: -17.375041961669922

Token 484: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10177958756685257
    2. '<|end|>' → logprob: -2.9767796993255615
    3. '[' → logprob: -3.6017796993255615
    4. ':' → logprob: -5.101779460906982
    5. '```' → logprob: -5.726779460906982
    6. '#' → logprob: -5.851779460906982
    7. ',' → logprob: -6.226779460906982
    8. ' ' → logprob: -7.601779460906982
    9. ']' → logprob: -7.601779460906982
    10. '.' → logprob: -7.851779460906982

Token 485: ' main' (ID: 2758)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.31289640069007874
    2. ' main' → logprob: -1.4378963708877563
    3. ' max' → logprob: -4.062896251678467
    4. ' test' → logprob: -5.312896251678467
    5. 'min' → logprob: -5.937896251678467
    6. ' shortest' → logprob: -6.062896251678467
    7. ' bfs' → logprob: -6.437896251678467
    8. ' reverse' → logprob: -6.937896251678467
    9. '_' → logprob: -8.562896728515625
    10. ' dfs' → logprob: -8.937896728515625

Token 486: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003898418275639415
    2. '_' → logprob: -6.503898620605469
    3. '()' → logprob: -6.628898620605469
    4. '(' → logprob: -7.128898620605469
    5. '():
' → logprob: -8.878898620605469
    6. ' ():' → logprob: -10.003898620605469
    7. '()>' → logprob: -10.128898620605469
    8. '()">' → logprob: -11.378898620605469
    9. ' (' → logprob: -12.253898620605469
    10. ' ()' → logprob: -12.628898620605469

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02008059248328209
    2. '():' → logprob: -4.27008056640625
    3. '()' → logprob: -6.14508056640625
    4. '():
' → logprob: -6.52008056640625
    5. '```' → logprob: -6.89508056640625
    6. ':' → logprob: -8.14508056640625
    7. 'n' → logprob: -9.02008056640625
    8. 'import' → logprob: -9.52008056640625
    9. ' input' → logprob: -9.52008056640625
    10. 'input' → logprob: -9.64508056640625

Token 488: ' """
' (ID: 7037)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6448478102684021
    2. 'N' → logprob: -2.019847869873047
    3. 'n' → logprob: -2.144847869873047
    4. '   ' → logprob: -2.519847869873047
    5. ' n' → logprob: -2.519847869873047
    6. ' import' → logprob: -3.144847869873047
    7. 'import' → logprob: -4.144847869873047
    8. ' input' → logprob: -6.019847869873047
    9. ' T' → logprob: -7.519847869873047
    10. 't' → logprob: -7.894847869873047

Token 489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08507084846496582
    2. 'import' → logprob: -4.085070610046387
    3. 'int' → logprob: -4.085070610046387
    4. ')' → logprob: -4.335070610046387
    5. 'input' → logprob: -4.460070610046387
    6. '=int' → logprob: -5.835070610046387
    7. 'n' → logprob: -5.960070610046387
    8. '#' → logprob: -6.085070610046387
    9. 'N' → logprob: -6.085070610046387
    10. '=' → logprob: -6.460070610046387

Token 490: ' Fonction' (ID: 189149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05995292216539383
    2. ' test' → logprob: -3.434952974319458
    3. ' code' → logprob: -4.309952735900879
    4. ' user' → logprob: -5.809952735900879
    5. ' lines' → logprob: -6.684952735900879
    6. ' input' → logprob: -7.059952735900879
    7. ' for' → logprob: -7.059952735900879
    8. '#' → logprob: -7.309952735900879
    9. ' print' → logprob: -7.434952735900879
    10. ' pass' → logprob: -7.809952735900879

Token 491: ' principale' (ID: 68926)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.9070659279823303
    2. ' principale' → logprob: -1.1570658683776855
    3. ' main' → logprob: -1.4070658683776855
    4. ' de' → logprob: -4.4070658683776855
    5. ' principal' → logprob: -4.5320658683776855
    6. ' d' → logprob: -4.6570658683776855
    7. ' ' → logprob: -7.0320658683776855
    8. ' ' → logprob: -7.6570658683776855
    9. ' _' → logprob: -7.7820658683776855
    10. '   ' → logprob: -8.032066345214844

Token 492: '.' (ID: 13)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.31566786766052246
    2. '():' → logprob: -1.3156678676605225
    3. '   ' → logprob: -6.565668106079102
    4. 'def' → logprob: -7.815668106079102
    5. ':' → logprob: -8.315668106079102
    6. '()' → logprob: -8.690668106079102
    7. ':
' → logprob: -9.565668106079102
    8. '
' → logprob: -10.315668106079102
    9. '():
' → logprob: -10.565668106079102
    10. '```' → logprob: -10.940668106079102

Token 493: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011666493955999613
    2. '
' → logprob: -8.001166343688965
    3. '```' → logprob: -8.251166343688965
    4. 'def' → logprob: -8.751166343688965
    5. 'import' → logprob: -9.001166343688965
    6. '    
' → logprob: -9.001166343688965
    7. '    ' → logprob: -9.626166343688965
    8. ' ' → logprob: -11.126166343688965
    9. '#' → logprob: -11.126166343688965
    10. '"""' → logprob: -11.751166343688965

Token 494: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.046353306621313095
    2. '():' → logprob: -3.296353340148926
    3. '   ' → logprob: -5.421353340148926
    4. '():
' → logprob: -6.421353340148926
    5. ' la' → logprob: -7.796353340148926
    6. ' des' → logprob: -7.921353340148926
    7. ' l' → logprob: -8.296353340148926
    8. ' les' → logprob: -8.546353340148926
    9. ' input' → logprob: -8.921353340148926
    10. ':' → logprob: -8.921353340148926

Token 495: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.1672188937664032
    2. 'a' → logprob: -2.4172189235687256
    3. 'e' → logprob: -3.4172189235687256
    4. ''' → logprob: -4.0422186851501465
    5. 'es' → logprob: -5.4172186851501465
    6. 'input' → logprob: -5.7922186851501465
    7. ''ent' → logprob: -6.5422186851501465
    8. ''import' → logprob: -6.7922186851501465
    9. ''a' → logprob: -6.9172186851501465
    10. ''ex' → logprob: -7.2922186851501465

Token 496: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07129362225532532
    2. '   ' → logprob: -2.821293592453003
    3. ',' → logprob: -5.321293830871582
    4. '.' → logprob: -6.821293830871582
    5. '().' → logprob: -7.196293830871582
    6. '```' → logprob: -7.446293830871582
    7. 'import' → logprob: -7.571293830871582
    8. '(),' → logprob: -7.821293830871582
    9. '():' → logprob: -8.946293830871582
    10. ' ' → logprob: -9.571293830871582

Token 497: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49807336926460266
    2. '()' → logprob: -0.9980733394622803
    3. '():' → logprob: -4.248073577880859
    4. ',' → logprob: -5.248073577880859
    5. ':' → logprob: -6.748073577880859
    6. '.' → logprob: -7.123073577880859
    7. '().' → logprob: -7.873073577880859
    8. ' ' → logprob: -8.37307357788086
    9. ')' → logprob: -8.37307357788086
    10. ' ()' → logprob: -8.62307357788086

Token 498: ' effect' (ID: 3159)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04219953343272209
    2. ' traite' → logprob: -4.542199611663818
    3. ' récup' → logprob: -5.292199611663818
    4. '    
' → logprob: -5.542199611663818
    5. '```' → logprob: -5.917199611663818
    6. '    ' → logprob: -6.167199611663818
    7. ' parse' → logprob: -6.667199611663818
    8. ' ' → logprob: -6.792199611663818
    9. ' puis' → logprob: -7.167199611663818
    10. ' recue' → logprob: -7.167199611663818

Token 499: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -1.3782830137643032e-05
    2. 'u' → logprob: -11.25001335144043
    3. 'uer' → logprob: -15.50001335144043
    4. 'uera' → logprob: -15.62501335144043
    5. 'ues' → logprob: -16.12501335144043
    6. 'uate' → logprob: -16.50001335144043
    7. 'uez' → logprob: -16.50001335144043
    8. 'uent' → logprob: -16.62501335144043
    9. 'uée' → logprob: -18.25001335144043
    10. 'ure' → logprob: -18.62501335144043

Token 500: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25434768199920654
    2. ' les' → logprob: -2.254347801208496
    3. ' la' → logprob: -2.629347801208496
    4. ' l' → logprob: -3.504347801208496
    5. ' des' → logprob: -4.879347801208496
    6. '```' → logprob: -5.629347801208496
    7. '()' → logprob: -5.754347801208496
    8. 'l' → logprob: -7.504347801208496
    9. ' le' → logprob: -7.754347801208496
    10. ' une' → logprob: -7.754347801208496

Token 501: ' traitement' (ID: 42434)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.05728329345583916
    2. 'par' → logprob: -3.557283401489258
    3. ' calcul' → logprob: -4.307283401489258
    4. ' traitement' → logprob: -5.682283401489258
    5. 'cal' → logprob: -5.807283401489258
    6. 'parse' → logprob: -6.182283401489258
    7. 'min' → logprob: -6.682283401489258
    8. ' parsing' → logprob: -6.807283401489258
    9. 'processing' → logprob: -7.182283401489258
    10. 'nombre' → logprob: -8.432283401489258

Token 502: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09433834254741669
    2. ',' → logprob: -2.4693384170532227
    3. ' et' → logprob: -5.594338417053223
    4. '```' → logprob: -7.719338417053223
    5. ' ,' → logprob: -8.344338417053223
    6. '()' → logprob: -8.344338417053223
    7. ':' → logprob: -9.219338417053223
    8. '.' → logprob: -9.219338417053223
    9. ' des' → logprob: -9.219338417053223
    10. ' ' → logprob: -9.469338417053223

Token 503: ' affiche' (ID: 127479)
  Prédit: ' affiche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.09389770776033401
    2. '   ' → logprob: -3.593897819519043
    3. 'aff' → logprob: -3.593897819519043
    4. ' imprime' → logprob: -3.593897819519043
    5. 'print' → logprob: -5.968897819519043
    6. ' print' → logprob: -6.218897819519043
    7. ' écrit' → logprob: -6.343897819519043
    8. '    ' → logprob: -8.593897819519043
    9. 'é' → logprob: -9.343897819519043
    10. ' produit' → logprob: -9.718897819519043

Token 504: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006947430316358805
    2. '   ' → logprob: -5.2569475173950195
    3. '(' → logprob: -7.2569475173950195
    4. ' la' → logprob: -8.00694751739502
    5. '("")' → logprob: -8.50694751739502
    6. '()
' → logprob: -9.25694751739502
    7. '```' → logprob: -9.25694751739502
    8. ')' → logprob: -9.88194751739502
    9. ' les' → logprob: -10.00694751739502
    10. ' le' → logprob: -10.75694751739502

Token 505: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.3900391161441803
    2. 'rés' → logprob: -1.390039086341858
    3. 'result' → logprob: -3.0150392055511475
    4. ' resultat' → logprob: -4.765038967132568
    5. '()' → logprob: -5.265038967132568
    6. ' result' → logprob: -5.265038967132568
    7. 'r' → logprob: -6.515038967132568
    8. '   ' → logprob: -6.765038967132568
    9. ' résultats' → logprob: -7.390038967132568
    10. 'Rés' → logprob: -7.390038967132568

Token 506: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057332370430231094
    2. '():' → logprob: -3.1823322772979736
    3. '():
' → logprob: -4.807332515716553
    4. '):' → logprob: -5.807332515716553
    5. ':' → logprob: -7.057332515716553
    6. '()' → logprob: -7.557332515716553
    7. '):
' → logprob: -7.807332515716553
    8. '```' → logprob: -7.807332515716553
    9. ')' → logprob: -7.932332515716553
    10. '.' → logprob: -8.057332038879395

Token 507: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002622894535306841
    2. '
' → logprob: -8.750262260437012
    3. '    
' → logprob: -9.750262260437012
    4. '```' → logprob: -10.250262260437012
    5. 'import' → logprob: -12.750262260437012
    6. '<|end|>' → logprob: -12.875262260437012
    7. ')' → logprob: -14.250262260437012
    8. 'def' → logprob: -14.500262260437012
    9. ':' → logprob: -14.625262260437012
    10. '       ' → logprob: -15.125262260437012

Token 508: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008579814457334578
    2. '```' → logprob: -7.250857830047607
    3. '
' → logprob: -9.375858306884766
    4. '    
' → logprob: -10.750858306884766
    5. '"""' → logprob: -11.250858306884766
    6. 'import' → logprob: -12.000858306884766
    7. '    ' → logprob: -12.750858306884766
    8. 'input' → logprob: -12.750858306884766
    9. ' ' → logprob: -13.125858306884766
    10. ')' → logprob: -13.250858306884766

Token 509: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002843384863808751
    2. 'import' → logprob: -8.875284194946289
    3. '```' → logprob: -9.750284194946289
    4. ' import' → logprob: -10.375284194946289
    5. 'n' → logprob: -11.000284194946289
    6. ' n' → logprob: -11.375284194946289
    7. ' input' → logprob: -11.750284194946289
    8. ' lines' → logprob: -11.750284194946289
    9. 'input' → logprob: -12.000284194946289
    10. ' N' → logprob: -13.875284194946289

Token 510: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.48860403895378113
    2. 'n' → logprob: -1.2386040687561035
    3. '   ' → logprob: -2.8636040687561035
    4. ' N' → logprob: -4.1136040687561035
    5. 'import' → logprob: -4.3636040687561035
    6. ' n' → logprob: -4.6136040687561035
    7. ' import' → logprob: -7.4886040687561035
    8. ' ' → logprob: -10.113603591918945
    9. 't' → logprob: -10.988603591918945
    10. 'T' → logprob: -11.613603591918945

Token 511: ' Lecture' (ID: 106534)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4310095012187958
    2. 'import' → logprob: -1.5560095310211182
    3. 'n' → logprob: -2.056009531021118
    4. ' import' → logprob: -5.056009292602539
    5. ' N' → logprob: -5.806009292602539
    6. ' n' → logprob: -6.556009292602539
    7. 'input' → logprob: -8.681009292602539
    8. '   ' → logprob: -8.806009292602539
    9. '#' → logprob: -10.556009292602539
    10. 'from' → logprob: -10.681009292602539

Token 512: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001613292726688087
    2. '   ' → logprob: -6.751613140106201
    3. 'import' → logprob: -8.37661361694336
    4. '()
' → logprob: -9.25161361694336
    5. '():' → logprob: -10.37661361694336
    6. '().' → logprob: -11.37661361694336
    7. ' =' → logprob: -11.75161361694336
    8. ':' → logprob: -11.75161361694336
    9. ' des' → logprob: -12.12661361694336
    10. 'des' → logprob: -12.12661361694336

Token 513: ' l' (ID: 305)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.13563601672649384
    2. 'n' → logprob: -2.1356360912323
    3. 'int' → logprob: -5.635635852813721
    4. ' N' → logprob: -6.260635852813721
    5. 'l' → logprob: -6.760635852813721
    6. 'import' → logprob: -7.135635852813721
    7. 'input' → logprob: -7.260635852813721
    8. ' n' → logprob: -7.885635852813721
    9. 't' → logprob: -10.385636329650879
    10. 'la' → logprob: -10.635636329650879

Token 514: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6949328780174255
    2. ''entrée' → logprob: -0.9449328780174255
    3. 'a' → logprob: -3.1949329376220703
    4. 'entrée' → logprob: -3.4449329376220703
    5. 'import' → logprob: -4.31993293762207
    6. ' input' → logprob: -4.69493293762207
    7. '=input' → logprob: -5.19493293762207
    8. 'n' → logprob: -5.69493293762207
    9. 'e' → logprob: -6.19493293762207
    10. '   ' → logprob: -6.94493293762207

Token 515: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7227702736854553
    2. '()' → logprob: -0.7227702736854553
    3. '```' → logprob: -4.3477702140808105
    4. 'import' → logprob: -4.8477702140808105
    5. 'n' → logprob: -5.9727702140808105
    6. '()
' → logprob: -6.7227702140808105
    7. '():' → logprob: -6.7227702140808105
    8. ':' → logprob: -7.5977702140808105
    9. '();' → logprob: -7.7227702140808105
    10. ' =' → logprob: -7.8477702140808105

Token 516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0072653708048164845
    2. 'n' → logprob: -5.632265567779541
    3. '()' → logprob: -6.632265567779541
    4. '```' → logprob: -6.632265567779541
    5. 'import' → logprob: -8.007265090942383
    6. 'N' → logprob: -8.632265090942383
    7. '(N' → logprob: -9.007265090942383
    8. ' N' → logprob: -9.132265090942383
    9. '()
' → logprob: -9.382265090942383
    10. '    
' → logprob: -10.132265090942383

Token 517: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.08404310792684555
    2. ' N' → logprob: -3.084043025970459
    3. 'n' → logprob: -3.834043025970459
    4. '   ' → logprob: -4.584043025970459
    5. ' n' → logprob: -6.334043025970459
    6. 'import' → logprob: -6.959043025970459
    7. ' import' → logprob: -8.584043502807617
    8. '```' → logprob: -9.584043502807617
    9. ' ' → logprob: -11.959043502807617
    10. '	N' → logprob: -12.334043502807617

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022356293629854918
    2. ',M' → logprob: -8.750223159790039
    3. '=' → logprob: -9.875223159790039
    4. ' ,' → logprob: -11.875223159790039
    5. ' =' → logprob: -12.125223159790039
    6. 'M' → logprob: -14.250223159790039
    7. '=int' → logprob: -15.500223159790039
    8. '=M' → logprob: -16.25022315979004
    9. ',N' → logprob: -16.37522315979004
    10. ',
' → logprob: -16.75022315979004

Token 519: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.02975187823176384
    2. ' M' → logprob: -3.529751777648926
    3. ' ' → logprob: -14.029751777648926
    4. '=' → logprob: -16.279752731323242
    5. 'm' → logprob: -16.404752731323242
    6. '  ' → logprob: -17.029752731323242
    7. '   ' → logprob: -17.154752731323242
    8. '*M' → logprob: -17.279752731323242
    9. ',M' → logprob: -17.279752731323242
    10. ',' → logprob: -17.404752731323242

Token 520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012566749937832355
    2. ' =' → logprob: -4.387566566467285
    3. '=input' → logprob: -10.012566566467285
    4. ',' → logprob: -11.387566566467285
    5. '=int' → logprob: -15.262566566467285
    6. '   ' → logprob: -15.762566566467285
    7. '=list' → logprob: -16.3875675201416
    8. ' ' → logprob: -16.5125675201416
    9. '=line' → logprob: -16.6375675201416
    10. ')=' → logprob: -16.8875675201416

Token 521: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.018150178715586662
    2. 'map' → logprob: -4.018150329589844
    3. '	map' → logprob: -15.518150329589844
    4. ' ' → logprob: -17.268150329589844
    5. ' ' → logprob: -17.518150329589844
    6. '[' → logprob: -17.768150329589844
    7. '(map' → logprob: -18.518150329589844
    8. ' list' → logprob: -18.893150329589844
    9. '   ' → logprob: -19.268150329589844
    10. ' [' → logprob: -19.393150329589844

Token 522: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.531813702778891e-05
    2. '(' → logprob: -9.50009536743164
    3. '(input' → logprob: -11.00009536743164
    4. 'int' → logprob: -12.62509536743164
    5. '(str' → logprob: -15.62509536743164
    6. '=int' → logprob: -16.12509536743164
    7. '<int' → logprob: -17.37509536743164
    8. ' int' → logprob: -17.62509536743164
    9. '[int' → logprob: -17.62509536743164
    10. '(
' → logprob: -17.87509536743164

Token 523: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.14796286821365356
    2. 'input' → logprob: -2.022962808609009
    3. '(' → logprob: -6.022963047027588
    4. ',input' → logprob: -6.647963047027588
    5. ')' → logprob: -6.772963047027588
    6. ' input' → logprob: -8.02296257019043
    7. '=input' → logprob: -10.02296257019043
    8. ',' → logprob: -11.64796257019043
    9. '	input' → logprob: -11.77296257019043
    10. '   ' → logprob: -11.89796257019043

Token 524: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011047814972698689
    2. ' input' → logprob: -4.511047840118408
    3. '(input' → logprob: -17.76104736328125
    4. '=input' → logprob: -18.38604736328125
    5. ',input' → logprob: -19.01104736328125
    6. '   ' → logprob: -19.51104736328125
    7. ')' → logprob: -20.01104736328125
    8. '<input' → logprob: -20.01104736328125
    9. '	input' → logprob: -20.13604736328125
    10. ' ' → logprob: -20.13604736328125

Token 525: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5048530030981055e-06
    2. '()' → logprob: -13.625001907348633
    3. '())' → logprob: -15.500001907348633
    4. '(' → logprob: -18.250001907348633
    5. ' ().' → logprob: -18.500001907348633
    6. '()
' → logprob: -19.125001907348633
    7. '()[' → logprob: -19.375001907348633
    8. '("").' → logprob: -20.375001907348633
    9. ')' → logprob: -21.125001907348633
    10. '()?.' → logprob: -21.375001907348633

Token 526: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.5491004129871726e-05
    2. 'strip' → logprob: -10.000045776367188
    3. ' split' → logprob: -16.750045776367188
    4. 'rstrip' → logprob: -17.875045776367188
    5. '(split' → logprob: -18.625045776367188
    6. 'spl' → logprob: -19.625045776367188
    7. 'read' → logprob: -20.375045776367188
    8. '().' → logprob: -20.750045776367188
    9. '_split' → logprob: -21.500045776367188
    10. '()' → logprob: -22.000045776367188

Token 527: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0005389740690588951
    2. ')' → logprob: -8.12553882598877
    3. '()' → logprob: -8.37553882598877
    4. '()))' → logprob: -12.00053882598877
    5. '(' → logprob: -12.50053882598877
    6. '())
' → logprob: -14.00053882598877
    7. '('' → logprob: -14.12553882598877
    8. ' ())' → logprob: -14.50053882598877
    9. '))' → logprob: -16.000539779663086
    10. '().' → logprob: -16.000539779663086

Token 528: '   ' (ID: 271)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.30707240104675293
    2. ' S' → logprob: -1.557072401046753
    3. '   ' → logprob: -3.307072401046753
    4. '
' → logprob: -4.307072639465332
    5. '    
' → logprob: -6.432072639465332
    6. ' 
' → logprob: -6.557072639465332
    7. '  
' → logprob: -8.807072639465332
    8. 's' → logprob: -9.432072639465332
    9. '<|end|>' → logprob: -9.557072639465332
    10. '	S' → logprob: -10.182072639465332

Token 529: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.0007099286303855479
    2. ' S' → logprob: -7.7507100105285645
    3. '   ' → logprob: -8.625709533691406
    4. '
' → logprob: -9.625709533691406
    5. '    
' → logprob: -10.750709533691406
    6. 's' → logprob: -12.375709533691406
    7. '```' → logprob: -12.750709533691406
    8. ' 
' → logprob: -14.000709533691406
    9. 'A' → logprob: -14.000709533691406
    10. '
' → logprob: -15.125709533691406

Token 530: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007607100997120142
    2. ' =' → logprob: -4.8826069831848145
    3. '=input' → logprob: -13.882607460021973
    4. ')' → logprob: -17.632606506347656
    5. '＝' → logprob: -18.007606506347656
    6. 'input' → logprob: -18.007606506347656
    7. ' ' → logprob: -18.007606506347656
    8. 's' → logprob: -18.632606506347656
    9. '_' → logprob: -18.757606506347656
    10. '   ' → logprob: -19.007606506347656

Token 531: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001234428636962548
    2. ' input' → logprob: -9.000123023986816
    3. '(input' → logprob: -19.125123977661133
    4. '<input' → logprob: -19.625123977661133
    5. '=input' → logprob: -19.625123977661133
    6. '   ' → logprob: -19.750123977661133
    7. '	input' → logprob: -20.500123977661133
    8. ' ' → logprob: -21.375123977661133
    9. 'str' → logprob: -21.500123977661133
    10. 'int' → logprob: -21.750123977661133

Token 532: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005711443373002112
    2. '().' → logprob: -7.500571250915527
    3. '(' → logprob: -11.375571250915527
    4. '()
' → logprob: -12.750571250915527
    5. ')' → logprob: -13.750571250915527
    6. ' ()' → logprob: -14.000571250915527
    7. '.strip' → logprob: -14.250571250915527
    8. '())' → logprob: -14.375571250915527
    9. '()

' → logprob: -15.625571250915527
    10. '()`' → logprob: -16.50057029724121

Token 533: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059401530772447586
    2. 'result' → logprob: -2.934401512145996
    3. '    
' → logprob: -5.934401512145996
    4. 'steps' → logprob: -7.059401512145996
    5. '```' → logprob: -8.059401512145996
    6. '
' → logprob: -8.434401512145996
    7. 'res' → logprob: -8.684401512145996
    8. 'tokens' → logprob: -9.684401512145996
    9. 'results' → logprob: -9.684401512145996
    10. 'next' → logprob: -9.809401512145996

Token 534: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.18803226947784424
    2. '   ' → logprob: -2.5630321502685547
    3. 'steps' → logprob: -2.8130321502685547
    4. 'res' → logprob: -3.4380321502685547
    5. ' result' → logprob: -6.563032150268555
    6. 'results' → logprob: -8.188032150268555
    7. ' steps' → logprob: -8.563032150268555
    8. ' res' → logprob: -8.938032150268555
    9. 'r' → logprob: -10.313032150268555
    10. 'rés' → logprob: -10.938032150268555

Token 535: ' App' (ID: 2583)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4656496047973633
    2. 'steps' → logprob: -1.2156496047973633
    3. 'res' → logprob: -2.5906496047973633
    4. 'pas' → logprob: -8.340649604797363
    5. ' res' → logprob: -8.590649604797363
    6. ' result' → logprob: -9.340649604797363
    7. ' steps' → logprob: -9.590649604797363
    8. 'results' → logprob: -9.715649604797363
    9. 'rés' → logprob: -9.715649604797363
    10. 'r' → logprob: -10.840649604797363

Token 536: 'el' (ID: 296)
  Prédit: 'eler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eler' → logprob: -0.05557196959853172
    2. 'el' → logprob: -2.930572032928467
    3. 'eller' → logprob: -7.680572032928467
    4. 'ler' → logprob: -9.430571556091309
    5. '   ' → logprob: -10.055571556091309
    6. 'uyer' → logprob: -10.680571556091309
    7. 'er' → logprob: -10.805571556091309
    8. 'elle' → logprob: -10.805571556091309
    9. 'l' → logprob: -11.680571556091309
    10. '
' → logprob: -12.430571556091309

Token 537: ' du' (ID: 1462)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8242372274398804
    2. '   ' → logprob: -0.9492372274398804
    3. '_result' → logprob: -1.8242372274398804
    4. '=' → logprob: -5.69923734664917
    5. ' =' → logprob: -5.94923734664917
    6. ' result' → logprob: -5.94923734664917
    7. '(' → logprob: -6.32423734664917
    8. ' de' → logprob: -7.82423734664917
    9. ' to' → logprob: -7.94923734664917
    10. 'to' → logprob: -8.449236869812012

Token 538: ' calcul' (ID: 7559)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.24491460621356964
    2. 'print' → logprob: -2.1199145317077637
    3. 'result' → logprob: -2.3699145317077637
    4. 'steps' → logprob: -5.744914531707764
    5. 'res' → logprob: -8.369915008544922
    6. ' min' → logprob: -8.994915008544922
    7. 'results' → logprob: -10.244915008544922
    8. ' result' → logprob: -10.994915008544922
    9. 'answer' → logprob: -11.119915008544922
    10. 'solution' → logprob: -11.244915008544922

Token 539: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5256558060646057
    2. 'result' → logprob: -0.9006558060646057
    3. '_result' → logprob: -6.775655746459961
    4. ' result' → logprob: -7.400655746459961
    5. 'results' → logprob: -8.025655746459961
    6. 'print' → logprob: -9.275655746459961
    7. 'res' → logprob: -9.275655746459961
    8. '_results' → logprob: -10.275655746459961
    9. 'steps' → logprob: -10.400655746459961
    10. 'de' → logprob: -10.400655746459961

Token 540: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3156096935272217
    2. 'result' → logprob: -1.3156096935272217
    3. ' result' → logprob: -6.440609931945801
    4. 'results' → logprob: -8.3156099319458
    5. '_result' → logprob: -8.4406099319458
    6. 'res' → logprob: -9.1906099319458
    7. '```' → logprob: -9.9406099319458
    8. 'steps' → logprob: -10.1906099319458
    9. 'print' → logprob: -11.0656099319458
    10. '    
' → logprob: -11.1906099319458

Token 541: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.5776376724243164
    2. 'steps' → logprob: -1.0776376724243164
    3. 'res' → logprob: -2.3276376724243164
    4. ' res' → logprob: -8.202637672424316
    5. 'pas' → logprob: -8.577637672424316
    6. ' steps' → logprob: -9.202637672424316
    7. 'path' → logprob: -9.452637672424316
    8. ' result' → logprob: -9.452637672424316
    9. 'results' → logprob: -10.202637672424316
    10. 'ans' → logprob: -10.952637672424316

Token 542: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048599183559417725
    2. '=' → logprob: -3.0485992431640625
    3. '_' → logprob: -11.423599243164062
    4. '_=' → logprob: -15.048599243164062
    5. ')' → logprob: -15.798599243164062
    6. '   ' → logprob: -16.048599243164062
    7. 's' → logprob: -16.673599243164062
    8. '＝' → logprob: -16.673599243164062
    9. ' ' → logprob: -17.048599243164062
    10. ' =
' → logprob: -18.423599243164062

Token 543: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0206720617134124e-05
    2. ' min' → logprob: -11.50001049041748
    3. '   ' → logprob: -22.875009536743164
    4. '(min' → logprob: -23.000009536743164
    5. '	min' → logprob: -23.125009536743164
    6. 'max' → logprob: -23.625009536743164
    7. 'minimum' → logprob: -24.875009536743164
    8. '[min' → logprob: -24.875009536743164
    9. '=min' → logprob: -25.625009536743164
    10. 'minimal' → logprob: -25.625009536743164

Token 544: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -3.128163257315464e-07
    2. 'steps' → logprob: -15.25
    3. '_' → logprob: -16.75
    4. '```' → logprob: -19.0
    5. 'Steps' → logprob: -20.0
    6. '_
' → logprob: -20.0
    7. '_step' → logprob: -20.0
    8. '\' → logprob: -21.0
    9. '_s' → logprob: -21.375
    10. '_results' → logprob: -21.625

Token 545: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. '_' → logprob: -17.625
    3. 'to' → logprob: -19.25
    4. '_t' → logprob: -19.875
    5. ' _' → logprob: -20.0
    6. '_TO' → logprob: -20.375
    7. 'To' → logprob: -21.0
    8. ' to' → logprob: -21.625
    9. '```' → logprob: -21.625
    10. ')_' → logprob: -22.125

Token 546: '_goal' (ID: 101684)
  Prédit: '_goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_goal' → logprob: -0.47407984733581543
    2. 'goal' → logprob: -0.9740798473358154
    3. ' goal' → logprob: -14.224080085754395
    4. 'go' → logprob: -14.349080085754395
    5. '(goal' → logprob: -14.599080085754395
    6. 'Goal' → logprob: -14.724080085754395
    7. '_go' → logprob: -14.849080085754395
    8. 'g' → logprob: -16.474079132080078
    9. '.goal' → logprob: -16.974079132080078
    10. '```' → logprob: -17.349079132080078

Token 547: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00027480217977426946
    2. '_to' → logprob: -8.750274658203125
    3. 'to' → logprob: -9.250274658203125
    4. 'To' → logprob: -11.625274658203125
    5. 'o' → logprob: -12.500274658203125
    6. ' (' → logprob: -12.750274658203125
    7. '```' → logprob: -13.625274658203125
    8. '(' → logprob: -13.875274658203125
    9. 's' → logprob: -14.000274658203125
    10. 'def' → logprob: -15.125274658203125

Token 548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ',M' → logprob: -12.750006675720215
    3. ' ,' → logprob: -13.125006675720215
    4. ',
' → logprob: -14.500006675720215
    5. ',S' → logprob: -14.500006675720215
    6. ',N' → logprob: -14.625006675720215
    7. '   ' → logprob: -14.875006675720215
    8. ')' → logprob: -15.125006675720215
    9. '```' → logprob: -16.62500762939453
    10. '(' → logprob: -17.25000762939453

Token 549: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0021861877758055925
    2. ' M' → logprob: -6.127186298370361
    3. 'S' → logprob: -13.877185821533203
    4. '   ' → logprob: -16.377185821533203
    5. ')' → logprob: -16.752185821533203
    6. ' ' → logprob: -17.752185821533203
    7. 'len' → logprob: -18.627185821533203
    8. '```' → logprob: -18.877185821533203
    9. '    ' → logprob: -19.127185821533203
    10. '  ' → logprob: -19.814685821533203

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007393499254249036
    2. ',S' → logprob: -7.250739574432373
    3. '   ' → logprob: -11.000739097595215
    4. ')' → logprob: -12.000739097595215
    5. ',
' → logprob: -12.625739097595215
    6. '(S' → logprob: -13.500739097595215
    7. ' ,' → logprob: -13.500739097595215
    8. '(' → logprob: -15.625739097595215
    9. ')
' → logprob: -16.25074005126953
    10. 'S' → logprob: -16.37574005126953

Token 551: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00029625516617670655
    2. ' S' → logprob: -8.125296592712402
    3. ')' → logprob: -16.000295639038086
    4. 's' → logprob: -18.375295639038086
    5. '   ' → logprob: -18.625295639038086
    6. ' ' → logprob: -19.125295639038086
    7. 'M' → logprob: -19.375295639038086
    8. '<S' → logprob: -19.625295639038086
    9. '(S' → logprob: -19.625295639038086
    10. '>S' → logprob: -19.750295639038086

Token 552: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003921847674064338
    2. ')
' → logprob: -7.875391960144043
    3. '   ' → logprob: -11.375391960144043
    4. ')
' → logprob: -15.125391960144043
    5. ' )' → logprob: -15.125391960144043
    6. '))' → logprob: -17.87539291381836
    7. ')`' → logprob: -18.12539291381836
    8. '  ' → logprob: -18.37539291381836
    9. ')

' → logprob: -18.37539291381836
    10. '()' → logprob: -18.62539291381836

Token 553: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006997865624725819
    2. '    
' → logprob: -5.881998062133789
    3. 'for' → logprob: -6.381998062133789
    4. 'print' → logprob: -6.631998062133789
    5. '
' → logprob: -7.131998062133789
    6. '```' → logprob: -8.256998062133789
    7. ' for' → logprob: -10.131998062133789
    8. '  
' → logprob: -10.506998062133789
    9. '<|end|>' → logprob: -10.631998062133789
    10. '[' → logprob: -11.756998062133789

Token 554: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14667493104934692
    2. 'print' → logprob: -2.146674871444702
    3. ' for' → logprob: -4.396675109863281
    4. '   ' → logprob: -5.271675109863281
    5. '```' → logprob: -6.771675109863281
    6. '
' → logprob: -7.146675109863281
    7. ' print' → logprob: -9.396675109863281
    8. 'if' (adapté à ' if') → logprob: -9.521675109863281
    9. '    
' → logprob: -12.021675109863281
    10. '``' → logprob: -13.271675109863281

Token 555: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.5759463906288147
    2. 'result' → logprob: -0.8259463906288147
    3. ' len' → logprob: -12.450946807861328
    4. 'len' → logprob: -13.200946807861328
    5. '(result' → logprob: -14.950946807861328
    6. ' all' → logprob: -15.700946807861328
    7. '   ' → logprob: -16.075946807861328
    8. ' ' → logprob: -16.075946807861328
    9. '	result' → logprob: -16.325946807861328
    10. 'res' → logprob: -16.700946807861328

Token 556: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6780266165733337
    2. ' ==' → logprob: -0.8030266165733337
    3. '!=' → logprob: -4.1780266761779785
    4. ' !=' → logprob: -4.3030266761779785
    5. '[' → logprob: -4.4280266761779785
    6. ' is' → logprob: -5.8030266761779785
    7. '```' → logprob: -8.17802619934082
    8. 'is' → logprob: -9.42802619934082
    9. '[]' → logprob: -10.05302619934082
    10. ')' → logprob: -10.05302619934082

Token 557: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.8889261304575484e-06
    2. ' [-' → logprob: -12.500003814697266
    3. '[' → logprob: -16.375003814697266
    4. '   ' → logprob: -17.375003814697266
    5. ' ' → logprob: -21.125003814697266
    6. '([-' → logprob: -21.875003814697266
    7. '[]' → logprob: -22.375003814697266
    8. '  ' → logprob: -22.500003814697266
    9. '-' → logprob: -23.250003814697266
    10. '[:-' → logprob: -23.500003814697266

Token 558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -14.75
    3. '```' → logprob: -19.5
    4. ' ' → logprob: -20.0
    5. '<|end|>' → logprob: -20.25
    6. ' -' → logprob: -21.375
    7. '{' → logprob: -21.875
    8. '`' → logprob: -22.125
    9. '१' → logprob: -22.125
    10. '۱' → logprob: -22.375

Token 559: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.03390005603432655
    2. ']:' → logprob: -3.658900022506714
    3. ']' → logprob: -4.908900260925293
    4. '):
' → logprob: -9.408900260925293
    5. ']:
' → logprob: -9.783900260925293
    6. ']):
' → logprob: -10.158900260925293
    7. '   ' → logprob: -12.408900260925293
    8. ']:

' → logprob: -13.283900260925293
    9. '])' → logprob: -13.408900260925293
    10. ':
' → logprob: -13.533900260925293

Token 560: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005078765680082142
    2. '   ' → logprob: -7.750507831573486
    3. 'print' → logprob: -9.875508308410645
    4. ' print' → logprob: -11.625508308410645
    5. '
' → logprob: -11.750508308410645
    6. '```' → logprob: -12.500508308410645
    7. ':
' → logprob: -12.625508308410645
    8. '           ' → logprob: -15.125508308410645
    9. '<|end|>' → logprob: -15.125508308410645
    10. ':' → logprob: -15.250508308410645

Token 561: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005806732806377113
    2. '   ' → logprob: -7.500580787658691
    3. ' print' → logprob: -11.000580787658691
    4. '```' → logprob: -11.500580787658691
    5. '       ' → logprob: -14.125580787658691
    6. '	print' → logprob: -15.875580787658691
    7. '``' → logprob: -16.750579833984375
    8. '`' → logprob: -19.875579833984375
    9. '    ' → logprob: -20.250579833984375
    10. 'for' → logprob: -20.625579833984375

Token 562: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0001593195047462359
    2. '-' → logprob: -8.75015926361084
    3. '("-' → logprob: -14.50015926361084
    4. '(' → logprob: -15.12515926361084
    5. '('-' → logprob: -18.625160217285156
    6. '(
' → logprob: -19.250160217285156
    7. '()-' → logprob: -20.000160217285156
    8. ' -' → logprob: -20.000160217285156
    9. '[-' → logprob: -20.625160217285156
    10. '("' → logprob: -21.375160217285156

Token 563: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -19.4375
    5. '१' → logprob: -20.1875
    6. '１' → logprob: -20.1875
    7. '১' → logprob: -20.25
    8. '۱' → logprob: -20.3125
    9. '  ' → logprob: -20.6875
    10. '``' → logprob: -21.0625

Token 564: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741022288799286
    2. ')
' → logprob: -0.974102258682251
    3. '   ' → logprob: -11.224102020263672
    4. ')
' → logprob: -11.474102020263672
    5. ')`
' → logprob: -14.224102020263672
    6. ' )' → logprob: -14.849102020263672
    7. ' )
' → logprob: -15.224102020263672
    8. '),' → logprob: -16.599102020263672
    9. ')')
' → logprob: -16.974102020263672
    10. ')

' → logprob: -17.099102020263672

Token 565: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02333294413983822
    2. 'else' → logprob: -3.7733328342437744
    3. ' else' → logprob: -9.898332595825195
    4. '```' → logprob: -10.523332595825195
    5. '       ' → logprob: -11.523332595825195
    6. 'elif' → logprob: -15.398332595825195
    7. '	else' → logprob: -16.898332595825195
    8. '``' → logprob: -17.023332595825195
    9. 'return' → logprob: -17.273332595825195
    10. '
' → logprob: -17.648332595825195

Token 566: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.022155754268169403
    2. '   ' → logprob: -4.02215576171875
    3. ' else' → logprob: -5.52215576171875
    4. '```' → logprob: -15.14715576171875
    5. '	else' → logprob: -15.89715576171875
    6. 'elif' → logprob: -16.14715576171875
    7. '       ' → logprob: -17.02215576171875
    8. ' ' → logprob: -17.77215576171875
    9. '_else' → logprob: -18.89715576171875
    10. '  ' → logprob: -19.64715576171875

Token 567: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20343327522277832
    2. ':' → logprob: -1.7034332752227783
    3. ':
' → logprob: -6.578433036804199
    4. '   ' → logprob: -8.3284330368042
    5. ' :' → logprob: -9.4534330368042
    6. '[' → logprob: -9.4534330368042
    7. '():' → logprob: -9.7034330368042
    8. '    ' → logprob: -10.3284330368042
    9. ' for' → logprob: -10.8284330368042
    10. '):' → logprob: -11.0784330368042

Token 568: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14094683527946472
    2. '       ' → logprob: -2.265946865081787
    3. ' print' → logprob: -3.765946865081787
    4. '   ' → logprob: -5.515946865081787
    5. 'for' → logprob: -8.265946388244629
    6. ''' → logprob: -9.265946388244629
    7. '```' → logprob: -9.265946388244629
    8. ' for' → logprob: -10.265946388244629
    9. '*' → logprob: -10.515946388244629
    10. '`' → logprob: -11.515946388244629

Token 569: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000273971410933882
    2. ' print' → logprob: -8.250273704528809
    3. 'for' → logprob: -11.375273704528809
    4. '       ' → logprob: -14.375273704528809
    5. '   ' → logprob: -14.625273704528809
    6. '```' → logprob: -17.000274658203125
    7. ' for' → logprob: -17.250274658203125
    8. '*' → logprob: -17.375274658203125
    9. '    ' → logprob: -18.375274658203125
    10. ''' → logprob: -18.500274658203125

Token 570: '('' (ID: 706)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.06266335397958755
    2. '('' → logprob: -2.8126633167266846
    3. '("' → logprob: -7.312663555145264
    4. '(' → logprob: -10.562663078308105
    5. '(len' → logprob: -13.562663078308105
    6. '(*)' → logprob: -14.437663078308105
    7. '(*(' → logprob: -15.312663078308105
    8. ''' → logprob: -15.312663078308105
    9. '*' → logprob: -15.562663078308105
    10. ' (*' → logprob: -16.187664031982422

Token 571: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00036715567694045603
    2. '"' → logprob: -8.000367164611816
    3. ''end' → logprob: -11.125367164611816
    4. '*' → logprob: -11.875367164611816
    5. ' '' → logprob: -12.875367164611816
    6. 'len' → logprob: -13.625367164611816
    7. ''s' → logprob: -13.875367164611816
    8. '('' → logprob: -14.250367164611816
    9. ''.' → logprob: -14.250367164611816
    10. ''en' → logprob: -14.625367164611816

Token 572: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.9623810658231378e-05
    2. 'print' → logprob: -10.875020027160645
    3. '.join' → logprob: -15.375020027160645
    4. 'jo' → logprob: -16.000019073486328
    5. '.' → logprob: -16.125019073486328
    6. ''.' → logprob: -16.750019073486328
    7. ' join' → logprob: -17.125019073486328
    8. 'j' → logprob: -17.750019073486328
    9. 'start' → logprob: -19.000019073486328
    10. '```' → logprob: -19.000019073486328

Token 573: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.006919850129634142
    2. 'map' → logprob: -5.006919860839844
    3. '(str' → logprob: -8.506919860839844
    4. ' map' → logprob: -13.506919860839844
    5. 'str' → logprob: -14.006919860839844
    6. '	map' → logprob: -15.881919860839844
    7. '.map' → logprob: -16.756919860839844
    8. '[str' → logprob: -17.131919860839844
    9. ',map' → logprob: -17.881919860839844
    10. 'Map' → logprob: -18.256919860839844

Token 574: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00043353010551072657
    2. 'str' → logprob: -7.750433444976807
    3. ' str' → logprob: -13.500433921813965
    4. '[str' → logprob: -14.625433921813965
    5. '(int' → logprob: -14.875433921813965
    6. '=str' → logprob: -15.375433921813965
    7. '(' → logprob: -15.500433921813965
    8. '```' → logprob: -15.500433921813965
    9. ',str' → logprob: -17.25043296813965
    10. '	str' → logprob: -18.12543296813965

Token 575: ',' (ID: 11)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0030289290007203817
    2. 'result' → logprob: -6.503028869628906
    3. ',result' → logprob: -6.503028869628906
    4. ',' → logprob: -11.003028869628906
    5. '(' → logprob: -12.378028869628906
    6. ' result' → logprob: -12.878028869628906
    7. ' (' → logprob: -13.128028869628906
    8. '=result' → logprob: -14.878028869628906
    9. '[result' → logprob: -15.378028869628906
    10. '	result' → logprob: -15.628028869628906

Token 576: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -9.615255839889869e-05
    2. ' result' → logprob: -9.250096321105957
    3. '(result' → logprob: -20.25009536743164
    4. '[result' → logprob: -23.37509536743164
    5. '	result' → logprob: -23.87509536743164
    6. '   ' → logprob: -24.12509536743164
    7. '$result' → logprob: -24.50009536743164
    8. ',result' → logprob: -25.25009536743164
    9. 're' → logprob: -25.62509536743164
    10. 'reverse' → logprob: -25.87509536743164

Token 577: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006719520781189203
    2. ')))' → logprob: -5.006719589233398
    3. ' ))' → logprob: -13.131719589233398
    4. '()))' → logprob: -14.006719589233398
    5. '))
' → logprob: -14.256719589233398
    6. '   ' → logprob: -14.756719589233398
    7. '))))' → logprob: -16.0067195892334
    8. ')' → logprob: -16.2567195892334
    9. '}))' → logprob: -16.5067195892334
    10. ' ' → logprob: -16.5067195892334

Token 578: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.73446003627032e-05
    2. '
' → logprob: -10.000097274780273
    3. ' if' → logprob: -10.625097274780273
    4. 'main' → logprob: -11.000097274780273
    5. '```' → logprob: -11.750097274780273
    6. '<|end|>' → logprob: -13.875097274780273
    7. '\n' → logprob: -14.500097274780273
    8. '\' → logprob: -15.000097274780273
    9. '  
' → logprob: -15.250097274780273
    10. '    
' → logprob: -15.375097274780273

Token 579: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10148624330759048
    2. ' __' → logprob: -2.3514862060546875
    3. '_' → logprob: -7.1014862060546875
    4. 'name' → logprob: -8.601486206054688
    5. '_name' → logprob: -8.976486206054688
    6. '___' → logprob: -9.351486206054688
    7. ' ' → logprob: -10.351486206054688
    8. 'Name' → logprob: -12.101486206054688
    9. '​' → logprob: -12.476486206054688
    10. '﻿' → logprob: -12.601486206054688

Token 580: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01818377524614334
    2. '==' → logprob: -4.518183708190918
    3. ' ==' → logprob: -5.268183708190918
    4. '__.__' → logprob: -7.393183708190918
    5. 'name' → logprob: -7.643183708190918
    6. '.__' → logprob: -7.893183708190918
    7. '=="' → logprob: -8.643183708190918
    8. ' __' → logprob: -9.143183708190918
    9. '__.' → logprob: -9.768183708190918
    10. '.name' → logprob: -10.393183708190918

Token 581: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.4021237802808173e-05
    2. '__.__' → logprob: -11.250014305114746
    3. '__.' → logprob: -15.000014305114746
    4. '__('' → logprob: -15.625014305114746
    5. '==' → logprob: -16.00001335144043
    6. '___' → logprob: -16.12501335144043
    7. '____' → logprob: -16.25001335144043
    8. '__["' → logprob: -16.37501335144043
    9. '__
' → logprob: -17.25001335144043
    10. '__
' → logprob: -17.37501335144043

Token 582: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00040874676778912544
    2. '==' → logprob: -8.000409126281738
    3. ' ==' → logprob: -10.000409126281738
    4. '=="' → logprob: -10.750409126281738
    5. '__.__' → logprob: -12.500409126281738
    6. '___' → logprob: -13.500409126281738
    7. '=='' → logprob: -14.000409126281738
    8. '__["' → logprob: -16.250408172607422
    9. '____' → logprob: -16.250408172607422
    10. '__,' → logprob: -16.625408172607422

Token 583: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10021205991506577
    2. ''' → logprob: -2.3502120971679688
    3. '__' → logprob: -12.600212097167969
    4. ' "__' → logprob: -13.225212097167969
    5. ' '__' → logprob: -16.22521209716797
    6. '"name' → logprob: -17.72521209716797
    7. ''"' → logprob: -17.97521209716797
    8. '"user' → logprob: -18.10021209716797
    9. '('__' → logprob: -18.22521209716797
    10. '("__' → logprob: -18.35021209716797

Token 584: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.7491250875755213e-05
    2. '__' → logprob: -10.875027656555176
    3. 'name' → logprob: -11.750027656555176
    4. '"' → logprob: -15.250027656555176
    5. '_main' → logprob: -16.00002670288086
    6. 'built' → logprob: -16.50002670288086
    7. ' main' → logprob: -16.62502670288086
    8. 'python' → logprob: -17.50002670288086
    9. 'm' → logprob: -18.37502670288086
    10. '-main' → logprob: -18.87502670288086

Token 585: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03014603815972805
    2. '__' → logprob: -3.5301461219787598
    3. '__':
' → logprob: -7.90514612197876
    4. '__.' → logprob: -11.530145645141602
    5. '__.__' → logprob: -11.780145645141602
    6. '__["' → logprob: -11.905145645141602
    7. '__:' → logprob: -13.655145645141602
    8. '__("' → logprob: -15.030145645141602
    9. '__",' → logprob: -15.155145645141602
    10. '__[' → logprob: -15.905145645141602

Token 586: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08498456329107285
    2. '   ' → logprob: -2.709984540939331
    3. '__' → logprob: -4.33498477935791
    4. ' main' → logprob: -6.45998477935791
    5. '	main' → logprob: -8.45998477935791
    6. '    
' → logprob: -10.83498477935791
    7. '_main' → logprob: -11.08498477935791
    8. ' __' → logprob: -12.58498477935791
    9. 'run' → logprob: -12.70998477935791
    10. '```' → logprob: -12.83498477935791

Token 587: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.00020616286201402545
    2. ' main' → logprob: -8.500205993652344
    3. '   ' → logprob: -13.250205993652344
    4. '	main' → logprob: -14.000205993652344
    5. '_main' → logprob: -20.875205993652344
    6. '(main' → logprob: -22.000205993652344
    7. '.main' → logprob: -22.125205993652344
    8. ' ' → logprob: -22.750205993652344
    9. '  ' → logprob: -24.375205993652344
    10. 'import' → logprob: -24.625205993652344

Token 588: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 586
Tokens correctement prédits (1ère position, stricte): 148
Tokens correctement prédits (1ère position, avec adaptation): 165
Tokens correctement prédits (top 10): 371
Précision stricte (1ère position): 25.26%
Précision adaptée (1ère position): 28.16%
Précision (top 10): 63.31%
================================================================================
