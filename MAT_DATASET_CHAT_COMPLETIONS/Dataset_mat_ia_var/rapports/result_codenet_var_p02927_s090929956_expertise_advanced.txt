================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import isqrt

def count_valid_pairs(M: int, D: int) -> int:
    return sum(
        1
        for j in range(22, D + 1)
        if (tens := j // 10) >= 2 and (units := j % 10) >= 2
        and (prod := tens * units) <= M and prod == (i := prod)
    )

if __name__ == "__main__":
    M, D = map(int, input().split())
    print(count_valid_pairs(M, D))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' is' (ID: 382)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.17044492065906525
    2. ' sqrt' → logprob: -2.045444965362549
    3. 'pow' → logprob: -4.545444965362549
    4. 'sin' → logprob: -4.795444965362549
    5. 'pi' → logprob: -5.545444965362549
    6. ' pi' → logprob: -6.045444965362549
    7. ' sin' → logprob: -7.420444965362549
    8. 'ceil' → logprob: -7.420444965362549
    9. 'cos' → logprob: -8.67044448852539
    10. ' ceil' → logprob: -8.67044448852539

Token 4: 'qrt' (ID: 17629)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0354560613632202
    2. 'p' → logprob: -1.4104560613632202
    3. 'qrt' → logprob: -1.9104560613632202
    4. 's' → logprob: -2.4104561805725098
    5. 'q' → logprob: -2.6604561805725098
    6. 'pi' → logprob: -3.7854561805725098
    7. '```' → logprob: -4.53545618057251
    8. 'a' → logprob: -4.66045618057251
    9. 'i' → logprob: -4.91045618057251
    10. 'in' → logprob: -5.03545618057251

Token 5: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001410708879120648
    2. '\(' → logprob: -7.251410484313965
    3. '(
' → logprob: -7.376410484313965
    4. '\n' → logprob: -11.001410484313965
    5. ',' → logprob: -11.376410484313965
    6. '```' → logprob: -12.001410484313965
    7. ' (' → logprob: -12.001410484313965
    8. '\' → logprob: -12.126410484313965
    9. '.' → logprob: -12.126410484313965
    10. '#' → logprob: -12.626410484313965

Token 6: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002124684164300561
    2. '\(' → logprob: -6.627124786376953
    3. '(
' → logprob: -7.377124786376953
    4. '```' → logprob: -9.627124786376953
    5. '\' → logprob: -10.377124786376953
    6. ',' → logprob: -10.752124786376953
    7. '\n' → logprob: -11.127124786376953
    8. '.' → logprob: -12.252124786376953
    9. ' (' → logprob: -12.377124786376953
    10. '(

' → logprob: -12.377124786376953

Token 7: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0009601775673218071
    2. '_' → logprob: -7.500960350036621
    3. ' factorial' → logprob: -9.250960350036621
    4. ' ' → logprob: -9.375960350036621
    5. ' calculate' → logprob: -10.000960350036621
    6. ' factor' → logprob: -10.250960350036621
    7. ' space' → logprob: -10.625960350036621
    8. ' f' → logprob: -10.750960350036621
    9. '_factor' → logprob: -11.125960350036621
    10. ' add' → logprob: -11.500960350036621

Token 8: '_valid' (ID: 23321)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2294146716594696
    2. '(' → logprob: -2.854414701461792
    3. '_div' → logprob: -3.354414701461792
    4. '_occ' → logprob: -4.104414463043213
    5. '_words' → logprob: -4.229414463043213
    6. '_s' → logprob: -4.604414463043213
    7. '_tokens' → logprob: -4.729414463043213
    8. '_pairs' → logprob: -4.729414463043213
    9. '_elements' → logprob: -5.104414463043213
    10. '_f' → logprob: -5.104414463043213

Token 9: '_pairs' (ID: 90005)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1143939420580864
    2. '_parent' → logprob: -3.239393949508667
    3. '_numbers' → logprob: -3.489393949508667
    4. '_s' → logprob: -4.114393711090088
    5. '_digits' → logprob: -5.864393711090088
    6. '_values' → logprob: -6.114393711090088
    7. '_tokens' → logprob: -6.239393711090088
    8. '_valid' → logprob: -6.489393711090088
    9. '_div' → logprob: -6.489393711090088
    10. '(' → logprob: -6.864393711090088

Token 10: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000508591765537858
    2. '```' → logprob: -9.375508308410645
    3. '(user' → logprob: -9.625508308410645
    4. ' (' → logprob: -10.000508308410645
    5. '_' → logprob: -10.000508308410645
    6. '(
' → logprob: -10.500508308410645
    7. '("("' → logprob: -10.875508308410645
    8. '(token' → logprob: -11.125508308410645
    9. '[' → logprob: -11.250508308410645
    10. ':' → logprob: -11.500508308410645

Token 11: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005604630336165428
    2. ')' → logprob: -5.5056047439575195
    3. '):' → logprob: -6.6306047439575195
    4. ':' → logprob: -8.75560474395752
    5. ' ,' → logprob: -10.88060474395752
    6. ',n' → logprob: -11.50560474395752
    7. 'a' → logprob: -12.75560474395752
    8. ' ' → logprob: -13.13060474395752
    9. ',int' → logprob: -13.38060474395752
    10. 'n' → logprob: -13.50560474395752

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1798049658536911
    2. 'int' → logprob: -1.8048049211502075
    3. ')' → logprob: -10.429804801940918
    4. ':int' → logprob: -11.429804801940918
    5. ' )' → logprob: -11.929804801940918
    6. ' ' → logprob: -11.929804801940918
    7. '[int' → logprob: -13.429804801940918
    8. '=int' → logprob: -13.929804801940918
    9. ' List' → logprob: -14.179804801940918
    10. '(int' → logprob: -14.554804801940918

Token 13: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7337637543678284
    2. ',' → logprob: -0.7337637543678284
    3. '):' → logprob: -3.2337636947631836
    4. '```' → logprob: -9.733763694763184
    5. ')>' → logprob: -9.858763694763184
    6. ':' → logprob: -10.233763694763184
    7. ',)' → logprob: -10.358763694763184
    8. '`)' → logprob: -10.483763694763184
    9. '<|end|>' → logprob: -10.858763694763184
    10. '):
' → logprob: -10.983763694763184

Token 14: ' D' (ID: 415)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.21283884346485138
    2. 'N' → logprob: -1.712838888168335
    3. ' K' → logprob: -4.837838649749756
    4. ' n' → logprob: -6.712838649749756
    5. 'K' → logprob: -7.337838649749756
    6. 'n' → logprob: -8.212839126586914
    7. ' D' → logprob: -8.587839126586914
    8. ' L' → logprob: -9.087839126586914
    9. ' ' → logprob: -9.087839126586914
    10. ' k' → logprob: -9.462839126586914

Token 15: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12195684760808945
    2. ')' → logprob: -2.7469568252563477
    3. '):' → logprob: -2.9969568252563477
    4. ':' → logprob: -8.496956825256348
    5. '```' → logprob: -8.871956825256348
    6. '):
' → logprob: -9.371956825256348
    7. ',)' → logprob: -9.871956825256348
    8. ',
' → logprob: -10.246956825256348
    9. '`,' → logprob: -10.496956825256348
    10. '),' → logprob: -10.621956825256348

Token 16: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2811858057975769
    2. ' int' → logprob: -1.4061858654022217
    3. ')' → logprob: -10.9061861038208
    4. ' ' → logprob: -11.9061861038208
    5. '	int' → logprob: -13.0311861038208
    6. ' str' → logprob: -13.6561861038208
    7. '   ' → logprob: -13.7811861038208
    8. '[int' → logprob: -14.0311861038208
    9. ':int' → logprob: -14.1561861038208
    10. '=int' → logprob: -14.4061861038208

Token 17: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017057500779628754
    2. '):' → logprob: -4.142057418823242
    3. ',' → logprob: -6.892057418823242
    4. ')->' → logprob: -12.642057418823242
    5. ':' → logprob: -14.142057418823242
    6. '):
' → logprob: -14.767057418823242
    7. '`)' → logprob: -14.892057418823242
    8. '   ' → logprob: -15.017057418823242
    9. '```' → logprob: -15.017057418823242
    10. ',)' → logprob: -15.142057418823242

Token 18: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019042797794099897
    2. ':return' → logprob: -10.000190734863281
    3. '):' → logprob: -10.500190734863281
    4. '():' → logprob: -10.625190734863281
    5. ':**' → logprob: -10.625190734863281
    6. '```' → logprob: -11.125190734863281
    7. '`:' → logprob: -11.750190734863281
    8. ':void' → logprob: -11.875190734863281
    9. '<|end|>' → logprob: -11.875190734863281
    10. ':def' → logprob: -12.250190734863281

Token 19: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759918093681335
    2. ' int' → logprob: -0.8259918093681335
    3. ' list' → logprob: -10.7009916305542
    4. 'list' → logprob: -12.3259916305542
    5. '[int' → logprob: -12.3259916305542
    6. ' ' → logprob: -12.4509916305542
    7. '   ' → logprob: -12.5759916305542
    8. ' None' → logprob: -12.8259916305542
    9. '(int' → logprob: -13.2009916305542
    10. '	int' → logprob: -13.3259916305542

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.166338137816638e-05
    2. '():' → logprob: -11.625031471252441
    3. ':return' → logprob: -12.250031471252441
    4. '':' → logprob: -12.375031471252441
    5. ':
' → logprob: -12.500031471252441
    6. '):' → logprob: -12.875031471252441
    7. ':**' → logprob: -13.000031471252441
    8. '   ' → logprob: -13.375031471252441
    9. '```' → logprob: -14.000031471252441
    10. '`:' → logprob: -14.625031471252441

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10847587883472443
    2. ' 
' → logprob: -3.358475923538208
    3. '```' → logprob: -3.733475923538208
    4. '    
' → logprob: -4.108475685119629
    5. '\n' → logprob: -4.733475685119629
    6. '
' → logprob: -5.608475685119629
    7. '    ' → logprob: -5.983475685119629
    8. '     
' → logprob: -6.108475685119629
    9. '\' → logprob: -6.108475685119629
    10. ' ' → logprob: -6.233475685119629

Token 22: ' return' (ID: 622)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3185477554798126
    2. '```' → logprob: -1.6935477256774902
    3. ' result' → logprob: -4.19354772567749
    4. 'n' → logprob: -4.19354772567749
    5. 'result' → logprob: -4.69354772567749
    6. ' n' → logprob: -5.06854772567749
    7. '\n' → logprob: -5.19354772567749
    8. ' \' → logprob: -5.31854772567749
    9. '\' → logprob: -5.56854772567749
    10. ' total' → logprob: -5.69354772567749

Token 23: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19367356598377228
    2. ' ' → logprob: -1.8186736106872559
    3. ' (' → logprob: -5.193673610687256
    4. ' M' → logprob: -5.943673610687256
    5. ' sum' → logprob: -6.693673610687256
    6. ' max' → logprob: -6.818673610687256
    7. ' min' → logprob: -7.193673610687256
    8. 'sum' → logprob: -7.443673610687256
    9. '1' → logprob: -8.068673133850098
    10. '(' → logprob: -8.318673133850098

Token 24: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09414240717887878
    2. '((' → logprob: -2.844142436981201
    3. '(i' → logprob: -3.969142436981201
    4. '(is' → logprob: -4.844142436981201
    5. '(
' → logprob: -6.719142436981201
    6. '(x' → logprob: -7.094142436981201
    7. '(d' → logprob: -7.344142436981201
    8. '(((' → logprob: -7.344142436981201
    9. '(M' → logprob: -7.844142436981201
    10. '(n' → logprob: -8.344141960144043

Token 25: '       ' (ID: 309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017034411430358887
    2. '   ' → logprob: -5.017034530639648
    3. '(' → logprob: -5.142034530639648
    4. '(i' → logprob: -6.892034530639648
    5. ' ' → logprob: -7.392034530639648
    6. 'd' → logprob: -7.517034530639648
    7. 'i' → logprob: -7.517034530639648
    8. 'is' → logprob: -7.642034530639648
    9. '(
' → logprob: -7.767034530639648
    10. 'n' → logprob: -9.142034530639648

Token 26: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009669913910329342
    2. '(' → logprob: -5.384669780731201
    3. 'd' → logprob: -6.759669780731201
    4. '   ' → logprob: -6.884669780731201
    5. '(i' → logprob: -7.384669780731201
    6. 'i' → logprob: -7.384669780731201
    7. '(
' → logprob: -7.759669780731201
    8. '(d' → logprob: -8.00967025756836
    9. ' ' → logprob: -8.75967025756836
    10. '       ' → logprob: -9.50967025756836

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0248812735080719
    2. '(' → logprob: -4.774881362915039
    3. '   ' → logprob: -5.274881362915039
    4. 'i' → logprob: -5.524881362915039
    5. 'd' → logprob: -6.274881362915039
    6. '(i' → logprob: -6.274881362915039
    7. 'is' → logprob: -7.149881362915039
    8. ' ' → logprob: -7.149881362915039
    9. 'n' → logprob: -8.399881362915039
    10. '(
' → logprob: -8.524881362915039

Token 28: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05506766960024834
    2. 'for' → logprob: -2.930067777633667
    3. ' ' → logprob: -9.055068016052246
    4. '+' → logprob: -10.430068016052246
    5. '   ' → logprob: -11.680068016052246
    6. '    ' → logprob: -11.805068016052246
    7. ' +' → logprob: -12.555068016052246
    8. '        ' → logprob: -12.680068016052246
    9. '       ' → logprob: -12.805068016052246
    10. '  ' → logprob: -12.805068016052246

Token 29: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28141868114471436
    2. 'for' → logprob: -1.4064186811447144
    3. '       ' → logprob: -8.656418800354004
    4. '           ' → logprob: -10.031418800354004
    5. '   ' → logprob: -10.656418800354004
    6. ' ' → logprob: -11.781418800354004
    7. '        ' → logprob: -12.156418800354004
    8. '
' → logprob: -12.531418800354004
    9. ' if' → logprob: -13.031418800354004
    10. '    ' → logprob: -13.156418800354004

Token 30: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38704153895378113
    2. 'for' (adapté à ' for') → logprob: -1.1370415687561035
    3. '       ' → logprob: -9.137041091918945
    4. '           ' → logprob: -10.137041091918945
    5. '   ' → logprob: -12.262041091918945
    6. '        ' → logprob: -12.262041091918945
    7. ' ' → logprob: -12.262041091918945
    8. '+' → logprob: -12.762041091918945
    9. '
' → logprob: -13.262041091918945
    10. '               ' → logprob: -13.887041091918945

Token 31: ' j' (ID: 441)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9626433253288269
    2. 'm' → logprob: -1.3376433849334717
    3. 'x' → logprob: -1.9626433849334717
    4. 'D' → logprob: -3.0876433849334717
    5. 'a' → logprob: -3.5876433849334717
    6. 'i' → logprob: -3.5876433849334717
    7. 'M' → logprob: -3.5876433849334717
    8. 'n' → logprob: -4.212643146514893
    9. '_' → logprob: -4.462643146514893
    10. ' m' → logprob: -4.587643146514893

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01764410175383091
    2. 'in' → logprob: -4.267643928527832
    3. 'range' → logprob: -5.767643928527832
    4. 'n' → logprob: -8.892643928527832
    5. ' range' → logprob: -9.517643928527832
    6. ' ' → logprob: -10.142643928527832
    7. '   ' → logprob: -10.642643928527832
    8. 'd' → logprob: -11.142643928527832
    9. '  ' → logprob: -11.392643928527832
    10. ',' → logprob: -11.392643928527832

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5760117769241333
    2. 'range' → logprob: -0.8260117769241333
    3. '   ' → logprob: -10.076011657714844
    4. ' ' → logprob: -11.451011657714844
    5. '  ' → logprob: -11.826011657714844
    6. '	range' → logprob: -11.951011657714844
    7. '    ' → logprob: -13.701011657714844
    8. '(range' → logprob: -14.076011657714844
    9. ')' → logprob: -14.576011657714844
    10. '[' → logprob: -14.701011657714844

Token 34: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016966033726930618
    2. '(D' → logprob: -6.876696586608887
    3. '(M' → logprob: -7.376696586608887
    4. '(is' → logprob: -11.501696586608887
    5. ')' → logprob: -11.626696586608887
    6. ' (' → logprob: -12.626696586608887
    7. '((' → logprob: -13.126696586608887
    8. '(
' → logprob: -13.251696586608887
    9. '1' → logprob: -13.251696586608887
    10. '(max' → logprob: -13.501696586608887

Token 35: '22' (ID: 1709)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.596365213394165
    2. '1' → logprob: -0.846365213394165
    3. '10' → logprob: -4.471364974975586
    4. '11' → logprob: -6.221364974975586
    5. 'M' → logprob: -6.346364974975586
    6. '3' → logprob: -6.596364974975586
    7. 'D' → logprob: -6.721364974975586
    8. '(' → logprob: -6.846364974975586
    9. '4' → logprob: -7.846364974975586
    10. ' ' → logprob: -8.471364974975586

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7731097340583801
    2. ')' → logprob: -0.8981097340583801
    3. ' ,' → logprob: -3.1481096744537354
    4. '):
' → logprob: -3.7731096744537354
    5. ' )' → logprob: -3.7731096744537354
    6. '   ' → logprob: -5.0231099128723145
    7. '1' → logprob: -5.0231099128723145
    8. ')
' → logprob: -5.2731099128723145
    9. '):' → logprob: -5.2731099128723145
    10. '0' → logprob: -6.0231099128723145

Token 37: ' D' (ID: 415)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.8130918741226196
    2. ' M' → logprob: -1.1880918741226196
    3. '100' → logprob: -2.93809175491333
    4. ' ' → logprob: -3.06309175491333
    5. 'D' → logprob: -3.31309175491333
    6. '101' → logprob: -3.43809175491333
    7. ' D' → logprob: -4.43809175491333
    8. 'is' → logprob: -4.56309175491333
    9. '31' → logprob: -4.81309175491333
    10. 'min' → logprob: -4.93809175491333

Token 38: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5730847716331482
    2. ' +' → logprob: -1.448084831237793
    3. ')' → logprob: -1.698084831237793
    4. '-' → logprob: -5.323084831237793
    5. ' -' → logprob: -5.948084831237793
    6. ' )' → logprob: -6.073084831237793
    7. '):
' → logprob: -6.198084831237793
    8. '):' → logprob: -6.448084831237793
    9. '0' → logprob: -6.948084831237793
    10. ',' → logprob: -7.323084831237793

Token 39: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006332091288641095
    2. ' ' → logprob: -7.375633239746094
    3. '2' → logprob: -12.125633239746094
    4. '22' → logprob: -15.000633239746094
    5. '   ' → logprob: -15.750633239746094
    6. '3' → logprob: -16.000633239746094
    7. ' ' → logprob: -16.188133239746094
    8. '  ' → logprob: -16.250633239746094
    9. '11' → logprob: -16.375633239746094
    10. '21' → logprob: -17.250633239746094

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011200665176147595
    2. ' ' → logprob: -9.12511157989502
    3. '2' → logprob: -13.12511157989502
    4. '   ' → logprob: -14.75011157989502
    5. '0' → logprob: -15.37511157989502
    6. '  ' → logprob: -16.000112533569336
    7. ' ' → logprob: -17.500112533569336
    8. '3' → logprob: -17.562612533569336
    9. '11' → logprob: -17.562612533569336
    10. ')' → logprob: -17.562612533569336

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011135069653391838
    2. ')
' → logprob: -4.761135101318359
    3. '   ' → logprob: -7.136135101318359
    4. '):' → logprob: -7.511135101318359
    5. '):
' → logprob: -7.511135101318359
    6. '       ' → logprob: -8.01113510131836
    7. ' )' → logprob: -9.26113510131836
    8. ' if' → logprob: -9.51113510131836
    9. 'if' → logprob: -10.38613510131836
    10. ',' → logprob: -10.51113510131836

Token 42: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4775241017341614
    2. '   ' → logprob: -1.2275240421295166
    3. ':' → logprob: -2.8525240421295166
    4. '       ' → logprob: -5.102524280548096
    5. ',' → logprob: -5.227524280548096
    6. ')
' → logprob: -5.227524280548096
    7. ' if' → logprob: -6.227524280548096
    8. '):
' → logprob: -6.227524280548096
    9. 'if' → logprob: -6.727524280548096
    10. ':
' → logprob: -6.977524280548096

Token 43: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13005425035953522
    2. '   ' → logprob: -3.505054235458374
    3. ')
' → logprob: -3.755054235458374
    4. 'if' (adapté à ' if') → logprob: -3.880054235458374
    5. 'for' → logprob: -4.255054473876953
    6. ' for' → logprob: -4.505054473876953
    7. ' if' → logprob: -5.255054473876953
    8. '       ' → logprob: -5.505054473876953
    9. ':' → logprob: -5.755054473876953
    10. '
' → logprob: -6.380054473876953

Token 44: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6689504981040955
    2. ' j' → logprob: -0.9189504981040955
    3. ' M' → logprob: -3.9189505577087402
    4. ' (' → logprob: -3.9189505577087402
    5. 'M' → logprob: -4.16895055770874
    6. 'D' → logprob: -5.04395055770874
    7. ' ' → logprob: -5.04395055770874
    8. ' D' → logprob: -5.16895055770874
    9. '(j' → logprob: -5.16895055770874
    10. '(' → logprob: -5.91895055770874

Token 45: 't' (ID: 83)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.30068230628967285
    2. 'M' → logprob: -1.8006823062896729
    3. ' j' → logprob: -3.675682306289673
    4. '(j' → logprob: -3.925682306289673
    5. ' M' → logprob: -4.050682067871094
    6. 'D' → logprob: -4.425682067871094
    7. ' (' → logprob: -4.925682067871094
    8. '   ' → logprob: -5.550682067871094
    9. '(M' → logprob: -5.675682067871094
    10. '(' → logprob: -6.925682067871094

Token 46: 'ens' (ID: 696)
  Prédit: ' :='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :=' → logprob: -0.7998213171958923
    2. ':=' → logprob: -1.049821376800537
    3. 'r' → logprob: -2.299821376800537
    4. '%' → logprob: -4.049821376800537
    5. 'j' → logprob: -4.799821376800537
    6. 'ry' → logprob: -4.799821376800537
    7. 'mp' → logprob: -4.924821376800537
    8. '(j' → logprob: -5.549821376800537
    9. '[j' → logprob: -5.799821376800537
    10. 'he' → logprob: -5.862321376800537

Token 47: ' :=' (ID: 3405)
  Prédit: ' :='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :=' → logprob: -0.4158673882484436
    2. ':=' → logprob: -1.1658673286437988
    3. '_digit' → logprob: -4.290867328643799
    4. '_j' → logprob: -6.290867328643799
    5. ' ==' → logprob: -6.415867328643799
    6. ' -' → logprob: -6.540867328643799
    7. 'digit' → logprob: -6.665867328643799
    8. ' ' → logprob: -6.665867328643799
    9. '==' → logprob: -6.915867328643799
    10. '   ' → logprob: -7.415867328643799

Token 48: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.43065670132637024
    2. ' j' → logprob: -1.4306566715240479
    3. ' M' → logprob: -3.055656671524048
    4. 'M' → logprob: -3.055656671524048
    5. 'D' → logprob: -5.055656909942627
    6. ' (' → logprob: -5.555656909942627
    7. ' D' → logprob: -5.680656909942627
    8. '(j' → logprob: -6.555656909942627
    9. ' ' → logprob: -7.680656909942627
    10. '(' → logprob: -8.430656433105469

Token 49: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.17850764095783234
    2. ' %' → logprob: -2.0535075664520264
    3. '//' → logprob: -3.8035075664520264
    4. '%' → logprob: -5.0535078048706055
    5. ')' → logprob: -5.4285078048706055
    6. '   ' → logprob: -7.0535078048706055
    7. ' ' → logprob: -7.1785078048706055
    8. ' )' → logprob: -8.303507804870605
    9. '  ' → logprob: -9.928507804870605
    10. ' -' → logprob: -10.428507804870605

Token 50: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004086116328835487
    2. ' ' → logprob: -5.504086017608643
    3. '  ' → logprob: -12.7540864944458
    4. '   ' → logprob: -13.3790864944458
    5. '11' → logprob: -13.5040864944458
    6. ')' → logprob: -14.2540864944458
    7. '100' → logprob: -15.2540864944458
    8. '12' → logprob: -15.3790864944458
    9. '1' → logprob: -15.8790864944458
    10. '22' → logprob: -16.004085540771484

Token 51: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0003035266126971692
    2. ' ' → logprob: -8.125303268432617
    3. '  ' → logprob: -12.625303268432617
    4. '   ' → logprob: -13.125303268432617
    5. '1' → logprob: -14.125303268432617
    6. '11' → logprob: -14.625303268432617
    7. '100' → logprob: -15.375303268432617
    8. ')' → logprob: -16.125303268432617
    9. '2' → logprob: -16.375303268432617
    10. '
' → logprob: -16.562803268432617

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004056552425026894
    2. ' )' → logprob: -6.254056453704834
    3. '   ' → logprob: -7.754056453704834
    4. '1' → logprob: -8.504056930541992
    5. '       ' → logprob: -8.629056930541992
    6. '2' → logprob: -8.629056930541992
    7. ')>' → logprob: -8.754056930541992
    8. ')!=' → logprob: -8.754056930541992
    9. ')>=' → logprob: -9.129056930541992
    10. '    ' → logprob: -9.504056930541992

Token 53: ' >=' (ID: 5064)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6922902464866638
    2. ' and' → logprob: -0.9422902464866638
    3. 'and' → logprob: -2.5672903060913086
    4. '>' → logprob: -4.567290306091309
    5. ')>' → logprob: -5.317290306091309
    6. ' !=' → logprob: -5.567290306091309
    7. ' >' → logprob: -5.692290306091309
    8. ' )' → logprob: -5.817290306091309
    9. '!=' → logprob: -5.942290306091309
    10. '>=' → logprob: -6.567290306091309

Token 54: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.183501293184236e-05
    2. ' ' → logprob: -10.50007152557373
    3. '1' → logprob: -10.75007152557373
    4. '   ' → logprob: -11.62507152557373
    5. '3' → logprob: -11.75007152557373
    6. '  ' → logprob: -13.75007152557373
    7. '```' → logprob: -14.00007152557373
    8. '(' → logprob: -15.00007152557373
    9. '``' → logprob: -15.25007152557373
    10. '`' → logprob: -15.25007152557373

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00030697984038852155
    2. ' ' → logprob: -8.375307083129883
    3. '1' → logprob: -10.500307083129883
    4. '   ' → logprob: -10.750307083129883
    5. '3' → logprob: -12.062807083129883
    6. '  ' → logprob: -12.312807083129883
    7. '```' → logprob: -12.687807083129883
    8. '
' → logprob: -13.312807083129883
    9. '

' → logprob: -13.687807083129883
    10. '10' → logprob: -14.000307083129883

Token 56: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17814040184020996
    2. 'and' → logprob: -1.92814040184021
    3. '       ' → logprob: -4.053140640258789
    4. '<|end|>' → logprob: -8.678140640258789
    5. '   ' → logprob: -9.928140640258789
    6. ')' → logprob: -10.303140640258789
    7. ' ' → logprob: -10.428140640258789
    8. '      ' → logprob: -10.428140640258789
    9. ',' → logprob: -10.678140640258789
    10. '  ' → logprob: -11.678140640258789

Token 57: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.9346611499786377
    2. 't' → logprob: -1.1846611499786377
    3. 'j' → logprob: -2.3096611499786377
    4. ' (' → logprob: -2.8096611499786377
    5. '(j' → logprob: -2.8096611499786377
    6. '(' → logprob: -3.3096611499786377
    7. '       ' → logprob: -3.6846611499786377
    8. '   ' → logprob: -5.434660911560059
    9. ' tens' → logprob: -5.684660911560059
    10. ' j' → logprob: -5.684660911560059

Token 58: 'units' (ID: 54065)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7355565428733826
    2. 't' → logprob: -0.9855565428733826
    3. 'units' → logprob: -2.9855566024780273
    4. '(j' → logprob: -3.6105566024780273
    5. '(t' → logprob: -4.235556602478027
    6. '   ' → logprob: -4.235556602478027
    7. 'ones' → logprob: -4.485556602478027
    8. '(' → logprob: -4.985556602478027
    9. ' j' → logprob: -5.360556602478027
    10. 'is' → logprob: -5.985556602478027

Token 59: ' :=' (ID: 3405)
  Prédit: ' :='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :=' → logprob: -0.026394464075565338
    2. ':=' → logprob: -3.6513943672180176
    3. ' ' → logprob: -10.026394844055176
    4. ' =' → logprob: -11.276394844055176
    5. ' :=
' → logprob: -11.776394844055176
    6. '=' → logprob: -11.776394844055176
    7. ' :' → logprob: -12.151394844055176
    8. '   ' → logprob: -12.526394844055176
    9. ' ==' → logprob: -12.651394844055176
    10. ')' → logprob: -12.776394844055176

Token 60: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5260411500930786
    2. ' j' → logprob: -0.9010411500930786
    3. '   ' → logprob: -7.026041030883789
    4. ' ' → logprob: -7.276041030883789
    5. '       ' → logprob: -7.651041030883789
    6. '    ' → logprob: -8.651041030883789
    7. '	j' → logprob: -9.026041030883789
    8. '0' → logprob: -9.526041030883789
    9. 't' → logprob: -9.901041030883789
    10. '1' → logprob: -9.901041030883789

Token 61: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.029907844960689545
    2. '%' → logprob: -3.5299079418182373
    3. ' ' → logprob: -8.904908180236816
    4. '   ' → logprob: -12.154908180236816
    5. ')' → logprob: -12.279908180236816
    6. ' %)' → logprob: -12.654908180236816
    7. '  ' → logprob: -13.404908180236816
    8. ' %=' → logprob: -13.529908180236816
    9. '10' → logprob: -13.779908180236816
    10. ' ' → logprob: -14.529908180236816

Token 62: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018184710294008255
    2. ' ' → logprob: -4.018184661865234
    3. '20' → logprob: -11.143184661865234
    4. '22' → logprob: -12.018184661865234
    5. '100' → logprob: -12.518184661865234
    6. '  ' → logprob: -13.018184661865234
    7. '11' → logprob: -13.518184661865234
    8. '```' → logprob: -13.518184661865234
    9. '   ' → logprob: -13.768184661865234
    10. '19' → logprob: -14.018184661865234

Token 63: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0012212978908792138
    2. ' ' → logprob: -6.751221179962158
    3. '100' → logprob: -11.001221656799316
    4. '20' → logprob: -11.126221656799316
    5. '22' → logprob: -11.251221656799316
    6. '11' → logprob: -13.126221656799316
    7. '  ' → logprob: -13.813721656799316
    8. '1' → logprob: -14.563721656799316
    9. '```' → logprob: -14.563721656799316
    10. 't' → logprob: -14.751221656799316

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04593281075358391
    2. ' )' → logprob: -3.1709327697753906
    3. ')!=' → logprob: -7.545932769775391
    4. '   ' → logprob: -7.670932769775391
    5. '9' → logprob: -7.920932769775391
    6. '1' → logprob: -8.17093276977539
    7. ' ' → logprob: -8.42093276977539
    8. '0' → logprob: -8.42093276977539
    9. '       ' → logprob: -8.67093276977539
    10. ' and' → logprob: -9.42093276977539

Token 65: ' >=' (ID: 5064)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7036301493644714
    2. '!=' → logprob: -1.8286302089691162
    3. ' !=' → logprob: -2.203630208969116
    4. '>=' → logprob: -2.703630208969116
    5. 'and' → logprob: -2.828630208969116
    6. '==' → logprob: -3.453630208969116
    7. '<=' → logprob: -4.078629970550537
    8. ' ==' → logprob: -4.453629970550537
    9. ' >=' → logprob: -4.453629970550537
    10. '>' → logprob: -4.578629970550537

Token 66: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014859484508633614
    2. ' ' → logprob: -9.50014877319336
    3. '1' → logprob: -9.75014877319336
    4. '0' → logprob: -11.62514877319336
    5. '   ' → logprob: -12.37514877319336
    6. '3' → logprob: -14.37514877319336
    7. '  ' → logprob: -14.75014877319336
    8. '
' → logprob: -15.12514877319336
    9. '```' → logprob: -15.25014877319336
    10. 't' → logprob: -15.75014877319336

Token 67: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023131117632146925
    2. '1' → logprob: -8.500231742858887
    3. ' ' → logprob: -11.250231742858887
    4. '0' → logprob: -11.625231742858887
    5. '3' → logprob: -13.125231742858887
    6. '   ' → logprob: -13.500231742858887
    7. '	' → logprob: -15.125231742858887
    8. '  ' → logprob: -15.187731742858887
    9. '```' → logprob: -15.250231742858887
    10. '``' → logprob: -15.437731742858887

Token 68: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06157981604337692
    2. '       ' → logprob: -2.936579704284668
    3. 'and' → logprob: -5.311579704284668
    4. ')' → logprob: -7.561579704284668
    5. '           ' → logprob: -7.686579704284668
    6. '        ' → logprob: -8.311579704284668
    7. '          ' → logprob: -9.061579704284668
    8. '      ' → logprob: -9.186579704284668
    9. '   ' → logprob: -9.561579704284668
    10. ' if' → logprob: -9.936579704284668

Token 69: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0897006168961525
    2. '       ' → logprob: -2.589700698852539
    3. 'and' → logprob: -4.589700698852539
    4. '<|end|>' → logprob: -8.964700698852539
    5. '        ' → logprob: -9.464700698852539
    6. ')' → logprob: -9.464700698852539
    7. '   ' → logprob: -9.589700698852539
    8. '      ' → logprob: -9.589700698852539
    9. '           ' → logprob: -9.714700698852539
    10. '          ' → logprob: -10.214700698852539

Token 70: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11544927954673767
    2. '       ' → logprob: -2.7404491901397705
    3. 'and' (adapté à ' and') → logprob: -3.1154491901397705
    4. ' if' → logprob: -10.240448951721191
    5. '      ' → logprob: -10.865448951721191
    6. '           ' → logprob: -11.115448951721191
    7. '   ' → logprob: -11.240448951721191
    8. 'if' → logprob: -11.365448951721191
    9. ' ' → logprob: -11.865448951721191
    10. '          ' → logprob: -11.990448951721191

Token 71: ' (' (ID: 350)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.7830434441566467
    2. '(t' → logprob: -1.158043384552002
    3. '(un' → logprob: -3.158043384552002
    4. '(M' → logprob: -3.283043384552002
    5. 't' → logprob: -3.408043384552002
    6. ' M' → logprob: -3.658043384552002
    7. '(' → logprob: -3.908043384552002
    8. ' (' → logprob: -3.908043384552002
    9. 'j' → logprob: -4.033043384552002
    10. '(j' → logprob: -4.408043384552002

Token 72: 'prod' (ID: 36781)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.4060487449169159
    2. '(M' → logprob: -2.5310487747192383
    3. 't' → logprob: -2.9060487747192383
    4. 'j' → logprob: -3.1560487747192383
    5. '(t' → logprob: -3.1560487747192383
    6. '(j' → logprob: -3.2810487747192383
    7. ' M' → logprob: -3.6560487747192383
    8. ' (' → logprob: -4.531048774719238
    9. '   ' → logprob: -4.531048774719238
    10. 'units' → logprob: -4.906048774719238

Token 73: ' :=' (ID: 3405)
  Prédit: ' :='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :=' → logprob: -0.17263522744178772
    2. ':=' → logprob: -1.9226351976394653
    3. 'uct' → logprob: -4.672635078430176
    4. ':' → logprob: -6.547635078430176
    5. '   ' → logprob: -7.922635078430176
    6. 's' → logprob: -7.922635078430176
    7. 'ct' → logprob: -7.922635078430176
    8. 'ut' → logprob: -9.297635078430176
    9. ' =' → logprob: -9.797635078430176
    10. ')' → logprob: -10.297635078430176

Token 74: ' tens' (ID: 28965)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10655214637517929
    2. 'M' → logprob: -3.1065521240234375
    3. ' tens' → logprob: -3.3565521240234375
    4. '   ' → logprob: -4.6065521240234375
    5. '(t' → logprob: -5.7315521240234375
    6. 'units' → logprob: -6.4815521240234375
    7. ' M' → logprob: -6.6065521240234375
    8. '(M' → logprob: -6.9815521240234375
    9. 'j' → logprob: -7.2315521240234375
    10. ' ' → logprob: -7.4815521240234375

Token 75: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12751267850399017
    2. '*' → logprob: -2.1275126934051514
    3. '*j' → logprob: -8.12751293182373
    4. '   ' → logprob: -9.37751293182373
    5. ')' → logprob: -9.50251293182373
    6. ' ' → logprob: -9.62751293182373
    7. '%' → logprob: -10.75251293182373
    8. ' %' → logprob: -11.25251293182373
    9. '  ' → logprob: -12.12751293182373
    10. '*t' → logprob: -13.06501293182373

Token 76: ' units' (ID: 13306)
  Prédit: 'units'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'units' → logprob: -0.010265479795634747
    2. ' units' → logprob: -4.635265350341797
    3. '   ' → logprob: -7.885265350341797
    4. '       ' → logprob: -10.635265350341797
    5. 'unit' → logprob: -10.947765350341797
    6. ' ' → logprob: -10.947765350341797
    7. '  ' → logprob: -11.760265350341797
    8. '           ' → logprob: -11.760265350341797
    9. 'j' → logprob: -12.010265350341797
    10. 'un' → logprob: -12.072765350341797

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03137889504432678
    2. ' )' → logprob: -3.531378984451294
    3. ')==' → logprob: -7.531378746032715
    4. ' <=' → logprob: -8.031378746032715
    5. ')<=' → logprob: -8.531378746032715
    6. ' ==' → logprob: -8.906378746032715
    7. '==' → logprob: -9.406378746032715
    8. '       ' → logprob: -9.531378746032715
    9. '   ' → logprob: -9.906378746032715
    10. ')%' → logprob: -10.031378746032715

Token 78: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4401576817035675
    2. ' ==' → logprob: -1.9401576519012451
    3. '<=' → logprob: -1.9401576519012451
    4. '==' → logprob: -2.815157651901245
    5. ')' → logprob: -5.565157890319824
    6. ' %' → logprob: -6.315157890319824
    7. '%' → logprob: -6.815157890319824
    8. ' <' → logprob: -8.065157890319824
    9. '   ' → logprob: -8.440157890319824
    10. ' >=' → logprob: -8.565157890319824

Token 79: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.004638980142772198
    2. ' M' → logprob: -5.379639148712158
    3. '   ' → logprob: -12.254638671875
    4. 'D' → logprob: -13.004638671875
    5. ' ' → logprob: -13.379638671875
    6. '22' → logprob: -13.629638671875
    7. 'is' → logprob: -14.379638671875
    8. '<|end|>' → logprob: -14.442138671875
    9. '  ' → logprob: -14.692138671875
    10. ' ' → logprob: -14.754638671875

Token 80: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.122934989631176
    2. '   ' → logprob: -2.3729350566864014
    3. '       ' → logprob: -4.122934818267822
    4. ' and' → logprob: -5.247934818267822
    5. 'and' → logprob: -7.497934818267822
    6. ')
' → logprob: -8.49793529510498
    7. '),' → logprob: -10.49793529510498
    8. ' )' → logprob: -10.49793529510498
    9. '           ' → logprob: -10.62293529510498
    10. '):' → logprob: -10.62293529510498

Token 81: ' prod' (ID: 10207)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2121826708316803
    2. 'prod' → logprob: -2.3371827602386475
    3. 'M' → logprob: -3.0871827602386475
    4. 'is' → logprob: -4.087182521820068
    5. ' prod' → logprob: -4.962182521820068
    6. 'D' → logprob: -5.087182521820068
    7. '(prod' → logprob: -5.462182521820068
    8. 't' → logprob: -5.712182521820068
    9. '22' → logprob: -5.712182521820068
    10. ' j' → logprob: -5.837182521820068

Token 82: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9712823033332825
    2. ' %' → logprob: -1.5962822437286377
    3. '==' → logprob: -1.7212822437286377
    4. '%' → logprob: -2.4712822437286377
    5. ' >=' → logprob: -2.5962822437286377
    6. '>=' → logprob: -3.5962822437286377
    7. ' <=' → logprob: -3.9712822437286377
    8. '<|end|>' → logprob: -4.846282482147217
    9. '<=' → logprob: -5.471282482147217
    10. ' ' → logprob: -5.471282482147217

Token 83: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006658180616796017
    2. 'is' → logprob: -5.50665807723999
    3. 'M' → logprob: -6.88165807723999
    4. 't' → logprob: -7.88165807723999
    5. '   ' → logprob: -8.131658554077148
    6. ' j' → logprob: -8.256658554077148
    7. 'i' → logprob: -9.756658554077148
    8. '22' → logprob: -9.756658554077148
    9. 'int' → logprob: -10.006658554077148
    10. 'D' → logprob: -10.131658554077148

Token 84: 'i' (ID: 72)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.21103917062282562
    2. 'is' → logprob: -1.7110391855239868
    3. 't' → logprob: -5.961039066314697
    4. '   ' → logprob: -6.336039066314697
    5. 'M' → logprob: -6.711039066314697
    6. 'i' → logprob: -7.211039066314697
    7. 'int' → logprob: -7.586039066314697
    8. ' is' → logprob: -7.836039066314697
    9. ' j' → logprob: -8.211039543151855
    10. ')' → logprob: -8.711039543151855

Token 85: ' :=' (ID: 3405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3159242868423462
    2. 'nt' → logprob: -2.5659241676330566
    3. '**' → logprob: -3.1909241676330566
    4. ' **' → logprob: -3.4409241676330566
    5. ' ' → logprob: -4.315924167633057
    6. 'n' → logprob: -4.440924167633057
    7. '<|end|>' → logprob: -4.565924167633057
    8. ' *' → logprob: -4.690924167633057
    9. '*j' → logprob: -4.940924167633057
    10. ')**' → logprob: -4.940924167633057

Token 86: ' prod' (ID: 10207)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.835397481918335
    2. 'is' → logprob: -1.835397481918335
    3. 'M' → logprob: -1.960397481918335
    4. 'prod' → logprob: -1.960397481918335
    5. 't' → logprob: -2.585397481918335
    6. 'i' → logprob: -4.835397720336914
    7. 'int' → logprob: -4.835397720336914
    8. 'D' → logprob: -5.085397720336914
    9. '10' → logprob: -5.710397720336914
    10. '(prod' → logprob: -5.960397720336914

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8085559010505676
    2. ' //' → logprob: -1.5585558414459229
    3. '**' → logprob: -1.8085558414459229
    4. '<|end|>' → logprob: -2.808555841445923
    5. '//' → logprob: -3.558555841445923
    6. ' **' → logprob: -3.808555841445923
    7. ' %' → logprob: -4.433556079864502
    8. ' ' → logprob: -4.433556079864502
    9. ' +' → logprob: -5.058556079864502
    10. '<|end|>' → logprob: -5.183556079864502

Token 88: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3028045892715454
    2. '+' → logprob: -2.552804470062256
    3. ' and' → logprob: -2.552804470062256
    4. '   ' → logprob: -3.677804470062256
    5. '       ' → logprob: -3.802804470062256
    6. '<|end|>' → logprob: -4.052804470062256
    7. ' )' → logprob: -4.802804470062256
    8. '):' → logprob: -4.927804470062256
    9. '
' → logprob: -5.302804470062256
    10. ' +' → logprob: -5.677804470062256

Token 89: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02747330628335476
    2. ' )' → logprob: -3.902473211288452
    3. '   ' → logprob: -6.277473449707031
    4. '
' → logprob: -6.527473449707031
    5. ' ' → logprob: -7.277473449707031
    6. '):' → logprob: -7.402473449707031
    7. ' for' → logprob: -7.777473449707031
    8. ')
' → logprob: -7.902473449707031
    9. ' and' → logprob: -8.277473449707031
    10. '  ' → logprob: -8.402473449707031

Token 90: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6388458013534546
    2. '<|end|>' → logprob: -0.7638458013534546
    3. '<|end|>' → logprob: -6.388845920562744
    4. ' ' → logprob: -6.638845920562744
    5. '+' → logprob: -6.888845920562744
    6. ':' → logprob: -7.013845920562744
    7. ' )' → logprob: -7.388845920562744
    8. '```' → logprob: -9.013845443725586
    9. '):' → logprob: -9.513845443725586
    10. '),' → logprob: -10.013845443725586

Token 91: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011125635355710983
    2. '__' → logprob: -4.511125564575195
    3. ' True' → logprob: -10.386125564575195
    4. ' ' → logprob: -10.886125564575195
    5. ' ' → logprob: -11.511125564575195
    6. 'True' → logprob: -12.011125564575195
    7. 'name' → logprob: -12.136125564575195
    8. ' `' → logprob: -13.386125564575195
    9. '_name' → logprob: -13.761125564575195
    10. ' name' → logprob: -13.886125564575195

Token 92: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13742299377918243
    2. '<|end|>' → logprob: -2.637423038482666
    3. '==' → logprob: -3.512423038482666
    4. ' ==' → logprob: -4.012423038482666
    5. '<|end|>' → logprob: -5.887423038482666
    6. '[' → logprob: -6.012423038482666
    7. '_' → logprob: -7.262423038482666
    8. ' ' → logprob: -8.137422561645508
    9. '=="' → logprob: -8.262422561645508
    10. '```' → logprob: -8.262422561645508

Token 93: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00030269217677414417
    2. '==' → logprob: -9.7503023147583
    3. ' ==' → logprob: -10.1253023147583
    4. '_' → logprob: -10.1253023147583
    5. '__.__' → logprob: -10.1253023147583
    6. '___' → logprob: -10.3753023147583
    7. '__":
' → logprob: -11.2503023147583
    8. '```' → logprob: -11.2503023147583
    9. '__':
' → logprob: -11.7503023147583
    10. '__('' → logprob: -11.8753023147583

Token 94: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07601288706064224
    2. '==' → logprob: -2.8260128498077393
    3. '__' → logprob: -4.701013088226318
    4. '<|end|>' → logprob: -5.576013088226318
    5. '=="' → logprob: -8.57601261138916
    6. '=='' → logprob: -8.95101261138916
    7. ''' → logprob: -9.20101261138916
    8. '"' → logprob: -9.45101261138916
    9. '[' → logprob: -9.70101261138916
    10. '_' → logprob: -10.07601261138916

Token 95: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002536067273467779
    2. ''' → logprob: -6.002536296844482
    3. ' "__' → logprob: -9.752535820007324
    4. '__' → logprob: -13.377535820007324
    5. ' '__' → logprob: -15.627535820007324
    6. '"name' → logprob: -15.877535820007324
    7. ' "' → logprob: -16.00253677368164
    8. '"user' → logprob: -16.37753677368164
    9. '"_' → logprob: -17.62753677368164
    10. '"class' → logprob: -17.62753677368164

Token 96: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00013405199570115656
    2. '__' → logprob: -9.375134468078613
    3. 'name' → logprob: -10.750134468078613
    4. '"' → logprob: -10.875134468078613
    5. 'py' → logprob: -12.500134468078613
    6. '_main' → logprob: -13.500134468078613
    7. '__":
' → logprob: -14.125134468078613
    8. ' main' → logprob: -14.250134468078613
    9. 'ma' → logprob: -14.375134468078613
    10. 'm' → logprob: -14.625134468078613

Token 97: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.04876745492219925
    2. '__' → logprob: -3.048767566680908
    3. '__':
' → logprob: -8.67376708984375
    4. '__:' → logprob: -11.67376708984375
    5. '__["' → logprob: -15.92376708984375
    6. '__("' → logprob: -16.17376708984375
    7. '__
' → logprob: -16.17376708984375
    8. '__
' → logprob: -16.54876708984375
    9. '__.' → logprob: -17.04876708984375
    10. '__",' → logprob: -17.29876708984375

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6629794239997864
    2. '<|end|>' → logprob: -0.9129794239997864
    3. '    
' → logprob: -3.1629793643951416
    4. ' 
' → logprob: -4.162979602813721
    5. '
' → logprob: -4.787979602813721
    6. '\n' → logprob: -5.412979602813721
    7. '```' → logprob: -6.287979602813721
    8. '<|end|>' → logprob: -6.412979602813721
    9. '\' → logprob: -6.912979602813721
    10. '  
' → logprob: -7.037979602813721

Token 99: ' M' (ID: 391)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14337165653705597
    2. 'for' → logprob: -2.89337158203125
    3. ' M' → logprob: -2.89337158203125
    4. ' n' → logprob: -4.51837158203125
    5. 'M' (adapté à ' M') → logprob: -5.39337158203125
    6. 'n' → logprob: -6.26837158203125
    7. '   ' → logprob: -6.64337158203125
    8. ' print' → logprob: -6.89337158203125
    9. 'import' → logprob: -7.39337158203125
    10. ' import' → logprob: -7.51837158203125

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049922119826078415
    2. ' =' → logprob: -3.299922227859497
    3. ' ,' → logprob: -4.924921989440918
    4. ' ' → logprob: -6.049921989440918
    5. '=' → logprob: -6.674921989440918
    6. '<|end|>' → logprob: -7.799921989440918
    7. '  ' → logprob: -8.049921989440918
    8. '   ' → logprob: -9.549921989440918
    9. ')' → logprob: -10.424921989440918
    10. ' ==' → logprob: -10.549921989440918

Token 101: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.42888760566711426
    2. 'D' → logprob: -1.0538876056671143
    3. ' ' → logprob: -8.803887367248535
    4. '    ' → logprob: -10.803887367248535
    5. ' ' → logprob: -12.178887367248535
    6. '   ' → logprob: -12.303887367248535
    7. '  ' → logprob: -12.678887367248535
    8. '<|end|>' → logprob: -13.803887367248535
    9. ' 
' → logprob: -14.428887367248535
    10. ' =' → logprob: -15.303887367248535

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365238755941391
    2. '=' → logprob: -3.4086523056030273
    3. ',' → logprob: -12.408652305603027
    4. '<|end|>' → logprob: -14.158652305603027
    5. ' ' → logprob: -14.283652305603027
    6. '=input' → logprob: -14.783652305603027
    7. '   ' → logprob: -15.408652305603027
    8. ')' → logprob: -15.658652305603027
    9. '=int' → logprob: -15.783652305603027
    10. ' ' → logprob: -16.783653259277344

Token 103: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.06995967030525208
    2. 'map' → logprob: -2.6949596405029297
    3. '   ' → logprob: -11.06995964050293
    4. ' ' → logprob: -12.69495964050293
    5. '	map' → logprob: -13.06995964050293
    6. 'int' → logprob: -14.81995964050293
    7. '(map' → logprob: -14.94495964050293
    8. ' [' → logprob: -15.44495964050293
    9. '  ' → logprob: -15.44495964050293
    10. '[' → logprob: -15.44495964050293

Token 104: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0016724453307688236
    2. 'int' → logprob: -6.751672267913818
    3. '(' → logprob: -7.751672267913818
    4. '(input' → logprob: -9.876672744750977
    5. 'input' → logprob: -11.751672744750977
    6. '<int' → logprob: -12.001672744750977
    7. '[int' → logprob: -13.126672744750977
    8. '```' → logprob: -13.501672744750977
    9. '(map' → logprob: -14.001672744750977
    10. '(
' → logprob: -14.001672744750977

Token 105: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.13106337189674377
    2. '(input' → logprob: -2.506063461303711
    3. ',input' → logprob: -3.631063461303711
    4. ')' → logprob: -5.381063461303711
    5. ',' → logprob: -5.756063461303711
    6. ' input' → logprob: -5.881063461303711
    7. '```' → logprob: -6.756063461303711
    8. '=input' → logprob: -7.006063461303711
    9. '(' → logprob: -7.131063461303711
    10. '<input' → logprob: -8.006063461303711

Token 106: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0619698166847229
    2. ' input' → logprob: -2.811969757080078
    3. '   ' → logprob: -13.436969757080078
    4. ')' → logprob: -15.186969757080078
    5. '=input' → logprob: -15.561969757080078
    6. ',input' → logprob: -15.936969757080078
    7. '	input' → logprob: -16.436969757080078
    8. '(input' → logprob: -17.811969757080078
    9. ' ' → logprob: -18.311969757080078
    10. '<input' → logprob: -18.436969757080078

Token 107: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.3954463510308415e-05
    2. '()' → logprob: -9.875054359436035
    3. '())' → logprob: -13.625054359436035
    4. ')' → logprob: -14.625054359436035
    5. '(' → logprob: -14.750054359436035
    6. ' ().' → logprob: -15.250054359436035
    7. '("").' → logprob: -16.50005340576172
    8. '()
' → logprob: -17.62505340576172
    9. '().__' → logprob: -18.12505340576172
    10. '("' → logprob: -18.12505340576172

Token 108: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002043748099822551
    2. 'strip' → logprob: -8.500204086303711
    3. '(split' → logprob: -15.000204086303711
    4. 'rstrip' → logprob: -15.375204086303711
    5. ' split' → logprob: -15.750204086303711
    6. ')' → logprob: -17.12520408630371
    7. '```' → logprob: -17.12520408630371
    8. 'read' → logprob: -18.25020408630371
    9. 'spl' → logprob: -19.00020408630371
    10. '().' → logprob: -19.12520408630371

Token 109: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04113785922527313
    2. '()' → logprob: -3.416137933731079
    3. ')' → logprob: -4.9161376953125
    4. '())
' → logprob: -9.9161376953125
    5. '(' → logprob: -10.2911376953125
    6. '("' → logprob: -10.7911376953125
    7. '('' → logprob: -11.2911376953125
    8. '()))' → logprob: -11.7911376953125
    9. '))' → logprob: -12.9161376953125
    10. ' ())' → logprob: -13.2911376953125

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2598799467086792
    2. 'print' → logprob: -1.6348799467086792
    3. '<|end|>' → logprob: -4.009880065917969
    4. '
' → logprob: -5.009880065917969
    5. '\n' → logprob: -6.009880065917969
    6. '    
' → logprob: -6.134880065917969
    7. '[' → logprob: -6.634880065917969
    8. '```' → logprob: -7.509880065917969
    9. ' print' → logprob: -7.634880065917969
    10. '  
' → logprob: -8.009880065917969

Token 111: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005047913640737534
    2. 'result' → logprob: -5.880047798156738
    3. '   ' → logprob: -6.380047798156738
    4. 'count' → logprob: -7.630047798156738
    5. 'answer' → logprob: -10.630047798156738
    6. 'valid' → logprob: -11.505047798156738
    7. ' print' → logprob: -11.630047798156738
    8. 'for' → logprob: -12.130047798156738
    9. 'total' → logprob: -12.630047798156738
    10. 'res' → logprob: -12.755047798156738

Token 112: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0005668530357070267
    2. '(' → logprob: -7.5005669593811035
    3. '(
' → logprob: -11.375566482543945
    4. 'count' → logprob: -13.375566482543945
    5. '()' → logprob: -15.125566482543945
    6. '((' → logprob: -15.250566482543945
    7. '(

' → logprob: -16.375566482543945
    8. '(print' → logprob: -17.000566482543945
    9. '=count' → logprob: -17.000566482543945
    10. '(sum' → logprob: -17.250566482543945

Token 113: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -5.512236498361744e-07
    2. ')_' → logprob: -15.750000953674316
    3. '_invalid' → logprob: -16.125
    4. 'valid' → logprob: -17.125
    5. '_' → logprob: -17.5
    6. '```' → logprob: -17.625
    7. '_VALID' → logprob: -18.125
    8. '_val' → logprob: -18.5
    9. ')' → logprob: -19.0
    10. ' _' → logprob: -19.375

Token 114: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -3.4121114822482923e-06
    2. '_valid' → logprob: -13.125003814697266
    3. 'pairs' → logprob: -13.875003814697266
    4. ')_' → logprob: -15.750003814697266
    5. '_pair' → logprob: -16.750003814697266
    6. '_' → logprob: -16.875003814697266
    7. ')' → logprob: -17.250003814697266
    8. '_parts' → logprob: -17.500003814697266
    9. ' _' → logprob: -17.500003814697266
    10. '```' → logprob: -18.250003814697266

Token 115: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.002474231878295541
    2. '(' → logprob: -6.127474308013916
    3. ')' → logprob: -8.377473831176758
    4. '((' → logprob: -10.502473831176758
    5. ' (' → logprob: -11.627473831176758
    6. '(
' → logprob: -11.627473831176758
    7. '(m' → logprob: -12.502473831176758
    8. '   ' → logprob: -12.752473831176758
    9. ' ' → logprob: -13.752473831176758
    10. '))' → logprob: -13.752473831176758

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.946405094116926e-05
    2. ',D' → logprob: -9.875079154968262
    3. ' ,' → logprob: -10.625079154968262
    4. ')' → logprob: -13.500079154968262
    5. '   ' → logprob: -13.750079154968262
    6. ',
' → logprob: -15.125079154968262
    7. ',d' → logprob: -15.250079154968262
    8. ' ' → logprob: -15.625079154968262
    9. 'D' → logprob: -16.625080108642578
    10. '))' → logprob: -16.750080108642578

Token 117: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.001173917087726295
    2. ' D' → logprob: -6.751173973083496
    3. '   ' → logprob: -12.626173973083496
    4. ' ' → logprob: -15.626173973083496
    5. '  ' → logprob: -15.876173973083496
    6. 'd' → logprob: -16.62617301940918
    7. '       ' → logprob: -17.50117301940918
    8. '    ' → logprob: -17.75117301940918
    9. '	D' → logprob: -18.50117301940918
    10. '           ' → logprob: -19.37617301940918

Token 118: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3132757246494293
    2. '))' → logprob: -1.313275694847107
    3. ')
' → logprob: -12.313275337219238
    4. ')))' → logprob: -12.313275337219238
    5. '))
' → logprob: -12.813275337219238
    6. ')}' → logprob: -14.313275337219238
    7. '())' → logprob: -14.813275337219238
    8. ' )' → logprob: -15.313275337219238
    9. '()' → logprob: -15.688275337219238
    10. '   ' → logprob: -15.813275337219238


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 116
Tokens correctement prédits (1ère position, stricte): 46
Tokens correctement prédits (1ère position, avec adaptation): 47
Tokens correctement prédits (top 10): 91
Précision stricte (1ère position): 39.66%
Précision adaptée (1ère position): 40.52%
Précision (top 10): 78.45%
================================================================================
