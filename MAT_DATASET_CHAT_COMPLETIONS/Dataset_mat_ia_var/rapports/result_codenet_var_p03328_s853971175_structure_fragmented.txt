================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return input()

def parse_input(input_str):
    return map(int, input_str.split())

def compute_diff(e, w):
    return e - w

def init_true_height():
    return 0

def get_range_end(diff):
    return diff + 1

def sum_heights(diff):
    total = init_true_height()
    for h in get_height_range(diff):
        total = add_height(total, h)
    return total

def get_height_range(diff):
    return range(1, get_range_end(diff))

def add_height(current, h):
    return current + h

def compute_result(true_height, e):
    return true_height - e

def print_result(result):
    print(result)

def main():
    input_str = get_input()
    w, e = parse_input(input_str)
    diff = compute_diff(e, w)
    true_height = sum_heights(diff)
    result = compute_result(true_height, e)
    print_result(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002158825984224677
    2. '_' → logprob: -6.2521586418151855
    3. '():' → logprob: -9.252159118652344
    4. ' (' → logprob: -10.252159118652344
    5. '()' → logprob: -10.627159118652344
    6. '```' → logprob: -10.627159118652344
    7. '(_' → logprob: -11.502159118652344
    8. '(:' → logprob: -11.627159118652344
    9. '(_:' → logprob: -12.127159118652344
    10. ':' → logprob: -12.502159118652344

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5172414183616638
    2. '\' → logprob: -1.3922414779663086
    3. '\n' → logprob: -3.3922414779663086
    4. '   ' → logprob: -3.5172414779663086
    5. '(' → logprob: -3.7672414779663086
    6. '    
' → logprob: -4.517241477966309
    7. ':' → logprob: -4.642241477966309
    8. ''' → logprob: -5.392241477966309
    9. '()' → logprob: -5.392241477966309
    10. ''\' → logprob: -5.517241477966309

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3594469130039215
    2. 'user' → logprob: -2.4844470024108887
    3. 'input' → logprob: -2.8594470024108887
    4. 'x' → logprob: -2.9844470024108887
    5. 'i' → logprob: -3.2344470024108887
    6. '   ' → logprob: -3.9844470024108887
    7. 'r' → logprob: -3.9844470024108887
    8. ' ' → logprob: -4.234447002410889
    9. 'u' → logprob: -5.359447002410889
    10. 'a' → logprob: -5.734447002410889

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5513375401496887
    2. ' input' → logprob: -1.051337480545044
    3. 'input' → logprob: -2.926337480545044
    4. '"' → logprob: -4.301337718963623
    5. ''' → logprob: -5.801337718963623
    6. ' "' → logprob: -6.426337718963623
    7. '  ' → logprob: -6.926337718963623
    8. ' '' → logprob: -7.676337718963623
    9. ' None' → logprob: -8.301337242126465
    10. '(input' → logprob: -8.551337242126465

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017278953455388546
    2. '()' → logprob: -6.751728057861328
    3. '('' → logprob: -8.126728057861328
    4. '("("' → logprob: -9.126728057861328
    5. ' (' → logprob: -10.126728057861328
    6. '(
' → logprob: -10.501728057861328
    7. ''' → logprob: -10.501728057861328
    8. ' ' → logprob: -11.126728057861328
    9. '("")' → logprob: -11.251728057861328
    10. '"' → logprob: -11.876728057861328

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11275766044855118
    2. '.' → logprob: -3.362757682800293
    3. '(
' → logprob: -4.237757682800293
    4. '()' → logprob: -4.487757682800293
    5. '\n' → logprob: -4.612757682800293
    6. '#' → logprob: -4.737757682800293
    7. ':' → logprob: -5.112757682800293
    8. ')' → logprob: -5.737757682800293
    9. 'def' → logprob: -5.737757682800293
    10. '\' → logprob: -5.862757682800293

Token 9: ' parse' (ID: 8420)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.19965864717960358
    2. ' calculate' → logprob: -2.1996586322784424
    3. ' process' → logprob: -4.0746588706970215
    4. ' add' → logprob: -4.4496588706970215
    5. ' user' → logprob: -4.6996588706970215
    6. ' ' → logprob: -4.8246588706970215
    7. ' space' → logprob: -5.0746588706970215
    8. ' read' → logprob: -6.0746588706970215
    9. ' compute' → logprob: -6.1996588706970215
    10. ' my' → logprob: -6.1996588706970215

Token 10: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3267502188682556
    2. '(' → logprob: -1.3267502784729004
    3. '_input' → logprob: -4.4517502784729
    4. '_line' → logprob: -7.8267502784729
    5. '_token' → logprob: -8.451749801635742
    6. '(_)' → logprob: -8.576749801635742
    7. '(_' → logprob: -8.826749801635742
    8. '_user' → logprob: -9.201749801635742
    9. '_text' → logprob: -9.826749801635742
    10. '_(' → logprob: -9.826749801635742

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011460978537797928
    2. '("("' → logprob: -4.886460781097412
    3. '_input' → logprob: -7.511460781097412
    4. '_' → logprob: -7.511460781097412
    5. '(input' → logprob: -7.886460781097412
    6. '(_)' → logprob: -7.886460781097412
    7. '```' → logprob: -8.13646125793457
    8. '(_' → logprob: -8.38646125793457
    9. '('_' → logprob: -8.51146125793457
    10. '()' → logprob: -8.88646125793457

Token 12: '_str' (ID: 6182)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7968908548355103
    2. '):' → logprob: -0.7968908548355103
    3. '_' → logprob: -2.4218907356262207
    4. ')_' → logprob: -6.171890735626221
    5. '_)' → logprob: -6.296890735626221
    6. '_string' → logprob: -6.296890735626221
    7. '_data' → logprob: -7.046890735626221
    8. '(' → logprob: -7.421890735626221
    9. '_line' → logprob: -7.546890735626221
    10. '_text' → logprob: -7.796890735626221

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020136944949626923
    2. ')' → logprob: -6.502013683319092
    3. ':' → logprob: -8.25201416015625
    4. '):
' → logprob: -8.75201416015625
    5. ',' → logprob: -10.50201416015625
    6. ' ):' → logprob: -11.00201416015625
    7. '   ' → logprob: -11.75201416015625
    8. '[' → logprob: -12.37701416015625
    9. '(' → logprob: -12.62701416015625
    10. '=' → logprob: -12.75201416015625

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024815112352371216
    2. '(' → logprob: -4.149815082550049
    3. '    ' → logprob: -5.274815082550049
    4. ' return' → logprob: -6.774815082550049
    5. ' input' → logprob: -7.399815082550049
    6. ')' → logprob: -8.274815559387207
    7. ' ' → logprob: -8.524815559387207
    8. 'input' → logprob: -8.774815559387207
    9. ' token' → logprob: -8.774815559387207
    10. '[' → logprob: -8.774815559387207

Token 15: ' return' (ID: 622)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06761398911476135
    2. '   ' → logprob: -3.0676140785217285
    3. 'input' → logprob: -4.6926140785217285
    4. ' return' → logprob: -4.8176140785217285
    5. ' tokens' → logprob: -7.6926140785217285
    6. ' int' → logprob: -8.31761360168457
    7. ' if' → logprob: -8.56761360168457
    8. ' token' → logprob: -8.81761360168457
    9. 'return' (adapté à ' return') → logprob: -9.19261360168457
    10. 'int' → logprob: -9.69261360168457

Token 16: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03332706168293953
    2. 'input' → logprob: -3.658327102661133
    3. ' int' → logprob: -5.158327102661133
    4. ' list' → logprob: -7.158327102661133
    5. 'int' → logprob: -8.033327102661133
    6. 'list' → logprob: -9.658327102661133
    7. '[input' → logprob: -10.408327102661133
    8. ' ' → logprob: -10.533327102661133
    9. '[int' → logprob: -11.908327102661133
    10. ' [' → logprob: -11.908327102661133

Token 17: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05799392983317375
    2. '(int' → logprob: -3.5579938888549805
    3. '(str' → logprob: -3.6829938888549805
    4. '(lambda' → logprob: -5.9329938888549805
    5. 'str' → logprob: -11.18299388885498
    6. ' (' → logprob: -11.43299388885498
    7. '(
' → logprob: -12.30799388885498
    8. 'int' → logprob: -12.55799388885498
    9. '(input' → logprob: -13.05799388885498
    10. '(float' → logprob: -13.18299388885498

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.056793611496686935
    2. '(' → logprob: -2.931793689727783
    3. ')' → logprob: -7.431793689727783
    4. ',input' → logprob: -7.431793689727783
    5. ',' → logprob: -7.806793689727783
    6. 'input' → logprob: -8.931793212890625
    7. ' (' → logprob: -9.306793212890625
    8. ' input' → logprob: -10.681793212890625
    9. '(split' → logprob: -11.056793212890625
    10. '(
' → logprob: -11.056793212890625

Token 19: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1427479088306427
    2. 'input' → logprob: -2.0177478790283203
    3. ')' → logprob: -9.89274787902832
    4. '(input' → logprob: -11.14274787902832
    5. '   ' → logprob: -12.64274787902832
    6. ',input' → logprob: -13.64274787902832
    7. ' ' → logprob: -14.26774787902832
    8. ' )' → logprob: -14.26774787902832
    9. '	input' → logprob: -14.26774787902832
    10. '_input' → logprob: -15.26774787902832

Token 20: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.000158842682139948
    2. '(' → logprob: -9.00015926361084
    3. '_s' → logprob: -11.25015926361084
    4. '(_' → logprob: -11.87515926361084
    5. ')' → logprob: -12.62515926361084
    6. 'str' → logprob: -13.25015926361084
    7. '_split' → logprob: -13.37515926361084
    8. '_string' → logprob: -14.00015926361084
    9. '_STR' → logprob: -14.00015926361084
    10. '   ' → logprob: -14.12515926361084

Token 21: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.5535564422607422
    2. '.' → logprob: -1.0535564422607422
    3. '().' → logprob: -2.928556442260742
    4. '.strip' → logprob: -4.428556442260742
    5. ' .' → logprob: -4.553556442260742
    6. '   ' → logprob: -8.178556442260742
    7. 'split' → logprob: -9.553556442260742
    8. ').' → logprob: -10.178556442260742
    9. ')' → logprob: -11.053556442260742
    10. '()' → logprob: -11.178556442260742

Token 22: '())

' (ID: 27654)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.014209111221134663
    2. '())' → logprob: -4.514209270477295
    3. '()' → logprob: -6.514209270477295
    4. '(' → logprob: -6.764209270477295
    5. '("("' → logprob: -8.264208793640137
    6. '("' → logprob: -8.389208793640137
    7. '(','' → logprob: -11.264208793640137
    8. '()))' → logprob: -11.389208793640137
    9. ')' → logprob: -12.389208793640137
    10. '(()' → logprob: -13.389208793640137

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020134810358285904
    2. '\' → logprob: -4.645134925842285
    3. '
' → logprob: -5.520134925842285
    4. '

' → logprob: -6.270134925842285
    5. '\n' → logprob: -6.770134925842285
    6. '<|end|>' → logprob: -7.270134925842285
    7. 'd' → logprob: -7.395134925842285
    8. '```' → logprob: -8.020134925842285
    9. 'for' → logprob: -8.270134925842285
    10. 'n' → logprob: -8.395134925842285

Token 24: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06530958414077759
    2. ' solve' → logprob: -2.940309524536133
    3. ' calculate' → logprob: -5.190309524536133
    4. ' process' → logprob: -5.815309524536133
    5. 'main' → logprob: -7.690309524536133
    6. ' compute' → logprob: -7.815309524536133
    7. ' sum' → logprob: -8.190309524536133
    8. ' get' → logprob: -8.440309524536133
    9. ' count' → logprob: -8.940309524536133
    10. 'solve' → logprob: -8.940309524536133

Token 25: '_diff' (ID: 41047)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.1316845715045929
    2. '_' → logprob: -2.3816845417022705
    3. '_result' → logprob: -4.63168478012085
    4. '_total' → logprob: -5.00668478012085
    5. '_value' → logprob: -5.75668478012085
    6. '_max' → logprob: -6.00668478012085
    7. '_factor' → logprob: -6.13168478012085
    8. '_score' → logprob: -6.88168478012085
    9. '_output' → logprob: -7.38168478012085
    10. '_count' → logprob: -7.50668478012085

Token 26: '(e' (ID: 3454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15973235666751862
    2. '(a' → logprob: -3.4097323417663574
    3. 'er' → logprob: -3.7847323417663574
    4. 's' → logprob: -3.9097323417663574
    5. '_' → logprob: -4.159732341766357
    6. 'ere' → logprob: -5.034732341766357
    7. '(s' → logprob: -5.034732341766357
    8. '(x' → logprob: -5.409732341766357
    9. '(_' → logprob: -5.534732341766357
    10. 'eren' → logprob: -5.534732341766357

Token 27: ',' (ID: 11)
  Prédit: 'lements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lements' → logprob: -0.24793782830238342
    2. 'lement' → logprob: -1.997937798500061
    3. 'lems' → logprob: -2.9979379177093506
    4. 'n' → logprob: -5.3729376792907715
    5. 'le' → logprob: -5.3729376792907715
    6. 'lem' → logprob: -5.4979376792907715
    7. 'l' → logprob: -5.4979376792907715
    8. 'ach' → logprob: -5.8729376792907715
    9. 'nt' → logprob: -6.4979376792907715
    10. 'x' → logprob: -6.4979376792907715

Token 28: ' w' (ID: 286)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -1.2925736904144287
    2. 'f' → logprob: -2.2925736904144287
    3. ' s' → logprob: -2.4175736904144287
    4. ' l' → logprob: -2.7925736904144287
    5. ' d' → logprob: -3.0425736904144287
    6. ' o' → logprob: -3.1675736904144287
    7. ' a' → logprob: -3.4175736904144287
    8. ' t' → logprob: -3.5425736904144287
    9. 's' → logprob: -3.7925736904144287
    10. ' n' → logprob: -3.7925736904144287

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011080714873969555
    2. 'e' → logprob: -5.636080741882324
    3. ',' → logprob: -6.136080741882324
    4. '):
' → logprob: -6.261080741882324
    5. ')' → logprob: -6.511080741882324
    6. ' ):' → logprob: -7.136080741882324
    7. 'u' → logprob: -8.386080741882324
    8. '-' → logprob: -8.886080741882324
    9. ' ' → logprob: -9.386080741882324
    10. '_' → logprob: -9.511080741882324

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006570079363882542
    2. 'return' → logprob: -5.631569862365723
    3. ' return' → logprob: -6.006569862365723
    4. 'e' → logprob: -8.006569862365723
    5. ' e' → logprob: -9.006569862365723
    6. 'abs' → logprob: -11.256569862365723
    7. ')' → logprob: -11.881569862365723
    8. ' abs' → logprob: -12.256569862365723
    9. '  ' → logprob: -12.381569862365723
    10. '```' → logprob: -12.381569862365723

Token 31: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06140012666583061
    2. '   ' → logprob: -3.3114001750946045
    3. ' return' → logprob: -3.8114001750946045
    4. 'e' → logprob: -7.061399936676025
    5. 'abs' → logprob: -9.686400413513184
    6. ' e' → logprob: -10.436400413513184
    7. '```' → logprob: -11.936400413513184
    8. ' ' → logprob: -12.311400413513184
    9. 'eturn' → logprob: -12.686400413513184
    10. ' abs' → logprob: -13.311400413513184

Token 32: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4730590283870697
    2. 'abs' → logprob: -1.598059058189392
    3. ' e' → logprob: -2.2230589389801025
    4. ' abs' → logprob: -2.7230589389801025
    5. '   ' → logprob: -7.973059177398682
    6. '(abs' → logprob: -9.723058700561523
    7. 'max' → logprob: -9.848058700561523
    8. ' ' → logprob: -10.098058700561523
    9. ' max' → logprob: -10.223058700561523
    10. 'int' → logprob: -10.348058700561523

Token 33: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.34863126277923584
    2. '-' → logprob: -1.2236312627792358
    3. ' ' → logprob: -8.848630905151367
    4. '[' → logprob: -11.348630905151367
    5. '+' → logprob: -11.723630905151367
    6. '_' → logprob: -12.598630905151367
    7. '-w' → logprob: -12.848630905151367
    8. ' -
' → logprob: -12.848630905151367
    9. '>' → logprob: -13.223630905151367
    10. ' ' → logprob: -13.223630905151367

Token 34: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005233763717114925
    2. ' w' → logprob: -5.2552337646484375
    3. '	w' → logprob: -18.130233764648438
    4. ' ' → logprob: -19.630233764648438
    5. '   ' → logprob: -20.880233764648438
    6. '_w' → logprob: -21.005233764648438
    7. '<|end|>' → logprob: -22.255233764648438
    8. '    ' → logprob: -22.630233764648438
    9. '1' → logprob: -23.005233764648438
    10. '  ' → logprob: -23.255233764648438

Token 35: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0803629532456398
    2. '<|end|>' → logprob: -2.9553630352020264
    3. '

' → logprob: -3.9553630352020264
    4. '
' → logprob: -5.830362796783447
    5. '<|end|>' → logprob: -6.955362796783447
    6. '\n' → logprob: -7.330362796783447
    7. '```' → logprob: -7.580362796783447
    8. '\' → logprob: -7.830362796783447
    9. ' def' → logprob: -8.330363273620605
    10. '()

' → logprob: -9.830363273620605

Token 36: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01121534127742052
    2. '
' → logprob: -5.2612152099609375
    3. '

' → logprob: -5.6362152099609375
    4. '<|end|>' → logprob: -6.6362152099609375
    5. '\' → logprob: -7.3862152099609375
    6. '\n' → logprob: -8.761215209960938
    7. '```' → logprob: -9.386215209960938
    8. 'e' → logprob: -9.386215209960938
    9. '<|end|>' → logprob: -9.761215209960938
    10. 'newline' → logprob: -11.386215209960938

Token 37: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.010408719070255756
    2. ' compute' → logprob: -5.135408878326416
    3. ' calculate' → logprob: -6.135408878326416
    4. ' solve' → logprob: -6.635408878326416
    5. ' process' → logprob: -7.885408878326416
    6. 'main' → logprob: -8.635408401489258
    7. ' find' → logprob: -8.885408401489258
    8. ' get' → logprob: -9.010408401489258
    9. ' solution' → logprob: -10.385408401489258
    10. ' max' → logprob: -10.635408401489258

Token 38: '_true' (ID: 37108)
  Prédit: 'ialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ialize' → logprob: -0.8899312019348145
    2. '_data' → logprob: -1.1399312019348145
    3. '_' → logprob: -2.7649312019348145
    4. '_array' → logprob: -2.8899312019348145
    5. '_values' → logprob: -3.6399312019348145
    6. 'ial' → logprob: -4.0149312019348145
    7. '_vector' → logprob: -4.5149312019348145
    8. '_params' → logprob: -4.6399312019348145
    9. '_counter' → logprob: -4.8899312019348145
    10. '_weights' → logprob: -5.0149312019348145

Token 39: '_height' (ID: 21576)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8622367978096008
    2. '_values' → logprob: -0.9872367978096008
    3. '_false' → logprob: -2.987236738204956
    4. '_value' → logprob: -3.237236738204956
    5. '_set' → logprob: -3.487236738204956
    6. '_states' → logprob: -3.737236738204956
    7. '_state' → logprob: -4.362236976623535
    8. '_counts' → logprob: -5.362236976623535
    9. '_count' → logprob: -5.612236976623535
    10. '_vals' → logprob: -5.737236976623535

Token 40: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002754949266090989
    2. '(' → logprob: -6.002755165100098
    3. 's' → logprob: -9.627755165100098
    4. '()' → logprob: -9.627755165100098
    5. ' ():' → logprob: -9.877755165100098
    6. '_' → logprob: -10.752755165100098
    7. '():
' → logprob: -11.127755165100098
    8. '()(' → logprob: -11.252755165100098
    9. '(s' → logprob: -12.127755165100098
    10. '(height' → logprob: -12.252755165100098

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16544006764888763
    2. '0' → logprob: -2.790440082550049
    3. ' ' → logprob: -3.415440082550049
    4. '    ' → logprob: -3.790440082550049
    5. ' return' → logprob: -5.165440082550049
    6. ' []' → logprob: -5.290440082550049
    7. '[]' → logprob: -5.290440082550049
    8. '100' → logprob: -5.415440082550049
    9. '20' → logprob: -5.540440082550049
    10. 'return' → logprob: -6.415440082550049

Token 42: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08592326939105988
    2. '[]' → logprob: -3.335923194885254
    3. 'return' (adapté à ' return') → logprob: -3.710923194885254
    4. '   ' → logprob: -4.835923194885254
    5. 'True' → logprob: -5.835923194885254
    6. ' ' → logprob: -5.960923194885254
    7. '100' → logprob: -6.335923194885254
    8. ' return' → logprob: -6.960923194885254
    9. '{}' → logprob: -6.960923194885254
    10. 'height' → logprob: -7.085923194885254

Token 43: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21745480597019196
    2. ' ' → logprob: -2.0924549102783203
    3. '[]' → logprob: -3.0924549102783203
    4. ' []' → logprob: -4.71745491027832
    5. '{}' → logprob: -5.34245491027832
    6. '[' → logprob: -6.21745491027832
    7. ' [' → logprob: -6.34245491027832
    8. '100' → logprob: -6.59245491027832
    9. '1' → logprob: -6.71745491027832
    10. '42' → logprob: -6.84245491027832

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1325378566980362
    2. '[]' → logprob: -2.882537841796875
    3. '{}' → logprob: -3.382537841796875
    4. '[' → logprob: -4.882537841796875
    5. '1' → logprob: -5.257537841796875
    6. 'int' → logprob: -5.632537841796875
    7. 'float' → logprob: -6.007537841796875
    8. 'True' → logprob: -6.132537841796875
    9. '100' → logprob: -6.257537841796875
    10. '10' → logprob: -6.507537841796875

Token 45: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26557350158691406
    2. '<|end|>' → logprob: -1.515573501586914
    3. '
' → logprob: -5.140573501586914
    4. '<|end|>' → logprob: -5.390573501586914
    5. '

' → logprob: -6.265573501586914
    6. '\' → logprob: -7.515573501586914
    7. '\n' → logprob: -8.015573501586914
    8. ' def' → logprob: -8.640573501586914
    9. '```' → logprob: -9.515573501586914
    10. '#' → logprob: -10.765573501586914

Token 46: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003579753451049328
    2. '
' → logprob: -6.503579616546631
    3. '

' → logprob: -6.503579616546631
    4. '<|end|>' → logprob: -9.003580093383789
    5. '\' → logprob: -9.253580093383789
    6. '<|end|>' → logprob: -10.003580093383789
    7. '\n' → logprob: -10.128580093383789
    8. '#' → logprob: -10.128580093383789
    9. 'd' → logprob: -10.503580093383789
    10. 'height' → logprob: -10.628580093383789

Token 47: ' get' (ID: 717)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.6373656988143921
    2. ' main' → logprob: -1.637365698814392
    3. ' get' → logprob: -2.2623658180236816
    4. ' calculate' → logprob: -2.5123658180236816
    5. ' init' → logprob: -2.8873658180236816
    6. ' true' → logprob: -4.637365818023682
    7. '_init' → logprob: -5.887365818023682
    8. ' process' → logprob: -6.137365818023682
    9. ' calc' → logprob: -6.262365818023682
    10. '_compute' → logprob: -6.262365818023682

Token 48: '_range' (ID: 22022)
  Prédit: '_true'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_true' → logprob: -0.060006361454725266
    2. '_height' → logprob: -3.3100063800811768
    3. '_max' → logprob: -5.185006141662598
    4. '_input' → logprob: -5.435006141662598
    5. '_' → logprob: -6.185006141662598
    6. '_current' → logprob: -6.935006141662598
    7. '_false' → logprob: -7.310006141662598
    8. '_total' → logprob: -7.560006141662598
    9. '_diff' → logprob: -7.560006141662598
    10. '_value' → logprob: -7.685006141662598

Token 49: '_end' (ID: 13707)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31225863099098206
    2. 's' → logprob: -2.187258720397949
    3. '()' → logprob: -2.812258720397949
    4. '_range' → logprob: -2.937258720397949
    5. '():' → logprob: -4.437258720397949
    6. '_' → logprob: -4.812258720397949
    7. ' (' → logprob: -5.187258720397949
    8. '(s' → logprob: -5.437258720397949
    9. ' ()' → logprob: -6.187258720397949
    10. '(range' → logprob: -6.562258720397949

Token 50: '(diff' (ID: 84195)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07489938288927078
    2. '(' → logprob: -3.449899435043335
    3. '()' → logprob: -3.574899435043335
    4. 's' → logprob: -5.574899196624756
    5. '(s' → logprob: -5.824899196624756
    6. '_' → logprob: -6.074899196624756
    7. ' ():' → logprob: -6.574899196624756
    8. '(range' → logprob: -7.949899196624756
    9. '():
' → logprob: -8.074899673461914
    10. ' ()' → logprob: -8.074899673461914

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0391581729054451
    2. ')' → logprob: -3.9141581058502197
    3. ',' → logprob: -4.414158344268799
    4. '):
' → logprob: -5.289158344268799
    5. ' ):' → logprob: -7.289158344268799
    6. 's' → logprob: -8.66415786743164
    7. ' ' → logprob: -9.91415786743164
    8. '_' → logprob: -10.03915786743164
    9. '=' → logprob: -10.16415786743164
    10. '(' → logprob: -10.28915786743164

Token 52: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19072483479976654
    2. '   ' → logprob: -1.8157248497009277
    3. '(' → logprob: -5.690724849700928
    4. ':
' → logprob: -5.815724849700928
    5. ' :' → logprob: -6.315724849700928
    6. '):' → logprob: -7.315724849700928
    7. '():' → logprob: -8.06572437286377
    8. ' return' → logprob: -8.19072437286377
    9. '=' → logprob: -8.44072437286377
    10. ':return' → logprob: -8.44072437286377

Token 53: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5228332877159119
    2. '   ' → logprob: -1.2728333473205566
    3. ' if' → logprob: -3.0228333473205566
    4. 'return' (adapté à ' return') → logprob: -3.2728333473205566
    5. '20' → logprob: -4.772833347320557
    6. ' diff' → logprob: -5.397833347320557
    7. '10' → logprob: -5.772833347320557
    8. ' max' → logprob: -5.897833347320557
    9. 'diff' → logprob: -6.147833347320557
    10. ' ' → logprob: -6.397833347320557

Token 54: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.16072681546211243
    2. 'diff' → logprob: -2.78572678565979
    3. ' max' → logprob: -3.41072678565979
    4. ' abs' → logprob: -3.78572678565979
    5. ' ' → logprob: -4.160727024078369
    6. 'abs' → logprob: -5.285727024078369
    7. '10' → logprob: -5.785727024078369
    8. ' int' → logprob: -6.660727024078369
    9. '0' → logprob: -6.785727024078369
    10. 'max' → logprob: -7.035727024078369

Token 55: ' +' (ID: 659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16331073641777039
    2. '+' → logprob: -3.0383107662200928
    3. '<|end|>' → logprob: -3.1633107662200928
    4. '()' → logprob: -4.288310527801514
    5. '(' → logprob: -4.413310527801514
    6. '*' → logprob: -4.663310527801514
    7. '

' → logprob: -5.038310527801514
    8. '
' → logprob: -5.288310527801514
    9. '<|end|>' → logprob: -5.538310527801514
    10. '```' → logprob: -5.788310527801514

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43900853395462036
    2. '1' → logprob: -1.5640084743499756
    3. '10' → logprob: -2.6890084743499756
    4. '5' → logprob: -3.5640084743499756
    5. '3' → logprob: -4.564008712768555
    6. '2' → logprob: -4.814008712768555
    7. '20' → logprob: -5.189008712768555
    8. '4' → logprob: -5.564008712768555
    9. '100' → logprob: -5.564008712768555
    10. '7' → logprob: -5.689008712768555

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20305386185646057
    2. '10' → logprob: -2.5780539512634277
    3. '5' → logprob: -3.3280539512634277
    4. '2' → logprob: -3.7030539512634277
    5. '3' → logprob: -4.328053951263428
    6. '100' → logprob: -4.828053951263428
    7. '20' → logprob: -5.203053951263428
    8. '4' → logprob: -5.578053951263428
    9. '7' → logprob: -5.953053951263428
    10. ' ' → logprob: -6.203053951263428

Token 58: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005404045223258436
    2. '<|end|>' → logprob: -8.125540733337402
    3. '
' → logprob: -9.125540733337402
    4. 'for' → logprob: -10.375540733337402
    5. '<|end|>' → logprob: -10.750540733337402
    6. '#' → logprob: -11.000540733337402
    7. 'd' → logprob: -11.250540733337402
    8. '\' → logprob: -11.375540733337402
    9. '```' → logprob: -11.375540733337402
    10. 'de' → logprob: -12.125540733337402

Token 60: ' sum' (ID: 4215)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.5947583317756653
    2. ' get' → logprob: -1.4697582721710205
    3. ' main' → logprob: -2.3447582721710205
    4. ' calculate' → logprob: -2.4697582721710205
    5. ' process' → logprob: -4.0947585105896
    6. '_' → logprob: -5.9697585105896
    7. ' ' → logprob: -6.2197585105896
    8. ' _' → logprob: -6.3447585105896
    9. ' solve' → logprob: -6.5947585105896
    10. ' def' → logprob: -6.5947585105896

Token 61: '_he' (ID: 94257)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5095770359039307
    2. '_' → logprob: -1.3845770359039307
    3. '(range' → logprob: -2.5095770359039307
    4. '_range' → logprob: -3.3845770359039307
    5. '(a' → logprob: -5.009576797485352
    6. '(_' → logprob: -5.634576797485352
    7. ' (' → logprob: -6.134576797485352
    8. 'range' → logprob: -6.134576797485352
    9. 'def' → logprob: -6.384576797485352
    10. '(s' → logprob: -6.509576797485352

Token 62: 'ights' (ID: 3635)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.014200765639543533
    2. 'ights' → logprob: -4.264200687408447
    3. 'ig' → logprob: -12.139201164245605
    4. 'ighted' → logprob: -12.139201164245605
    5. 'igh' → logprob: -12.264201164245605
    6. '_' → logprob: -12.764201164245605
    7. 'ght' → logprob: -12.764201164245605
    8. 'igth' → logprob: -12.889201164245605
    9. '```' → logprob: -12.889201164245605
    10. 'ap' → logprob: -13.389201164245605

Token 63: '(diff' (ID: 84195)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02633664570748806
    2. '(n' → logprob: -5.276336669921875
    3. '(range' → logprob: -5.401336669921875
    4. '(s' → logprob: -6.151336669921875
    5. '(a' → logprob: -6.151336669921875
    6. '(h' → logprob: -6.151336669921875
    7. ' (' → logprob: -6.151336669921875
    8. '(height' → logprob: -6.651336669921875
    9. '(start' → logprob: -6.776336669921875
    10. '(l' → logprob: -7.401336669921875

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3241015374660492
    2. ',' → logprob: -1.3241015672683716
    3. '):
' → logprob: -4.824101448059082
    4. ')' → logprob: -6.574101448059082
    5. ' ):' → logprob: -7.574101448059082
    6. ':' → logprob: -8.574101448059082
    7. ' ,' → logprob: -8.699101448059082
    8. '   ' → logprob: -8.824101448059082
    9. '+' → logprob: -9.699101448059082
    10. '):
' → logprob: -10.199101448059082

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039503272622823715
    2. ' return' → logprob: -4.16450309753418
    3. '0' → logprob: -4.28950309753418
    4. ' ' → logprob: -6.41450309753418
    5. ' heights' → logprob: -6.41450309753418
    6. ' sum' → logprob: -6.66450309753418
    7. ':' → logprob: -6.78950309753418
    8. ' =' → logprob: -6.91450309753418
    9. ' range' → logprob: -7.41450309753418
    10. '    ' → logprob: -7.91450309753418

Token 66: ' total' (ID: 3609)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4996058940887451
    2. '   ' → logprob: -2.249605894088745
    3. 'return' → logprob: -2.249605894088745
    4. ' sum' → logprob: -2.499605894088745
    5. 'sum' → logprob: -2.874605894088745
    6. ' total' → logprob: -3.499605894088745
    7. 'total' (adapté à ' total') → logprob: -5.624606132507324
    8. ' range' → logprob: -5.999606132507324
    9. ' result' → logprob: -6.499606132507324
    10. 'result' → logprob: -6.624606132507324

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01112009584903717
    2. '=' → logprob: -4.511120319366455
    3. ' +=' → logprob: -10.761119842529297
    4. ' ' → logprob: -10.886119842529297
    5. '_' → logprob: -11.511119842529297
    6. 's' → logprob: -11.636119842529297
    7. ',' → logprob: -12.011119842529297
    8. ')' → logprob: -13.261119842529297
    9. '  ' → logprob: -13.386119842529297
    10. '   ' → logprob: -14.261119842529297

Token 68: ' init' (ID: 6327)
  Prédit: ' diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.8828029036521912
    2. ' (' → logprob: -1.632802963256836
    3. '0' → logprob: -1.757802963256836
    4. ' ' → logprob: -2.257802963256836
    5. ' sum' → logprob: -2.632802963256836
    6. 'diff' → logprob: -3.757802963256836
    7. '(diff' → logprob: -4.882802963256836
    8. 'sum' → logprob: -5.257802963256836
    9. '(' → logprob: -6.132802963256836
    10. '(sum' → logprob: -6.507802963256836

Token 69: '_true' (ID: 37108)
  Prédit: '_true'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_true' → logprob: -6.034592388459714e-06
    2. '_false' → logprob: -13.125005722045898
    3. 'true' → logprob: -13.500005722045898
    4. '_total' → logprob: -14.250005722045898
    5. '_height' → logprob: -14.375005722045898
    6. '_TRUE' → logprob: -14.750005722045898
    7. 'True' → logprob: -15.000005722045898
    8. '_' → logprob: -15.000005722045898
    9. '_he' → logprob: -15.625005722045898
    10. '_truth' → logprob: -16.8750057220459

Token 70: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -6.869017852295656e-06
    2. '_he' → logprob: -12.000006675720215
    3. '_' → logprob: -15.000006675720215
    4. 'height' → logprob: -15.500006675720215
    5. '_depth' → logprob: -16.62500762939453
    6. '_length' → logprob: -17.00000762939453
    7. '_HEIGHT' → logprob: -17.00000762939453
    8. ' _' → logprob: -17.25000762939453
    9. '_total' → logprob: -18.25000762939453
    10. '_width' → logprob: -18.25000762939453

Token 71: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004734495654702187
    2. '()
' → logprob: -5.879734516143799
    3. '()+' → logprob: -6.504734516143799
    4. '+' → logprob: -8.25473403930664
    5. ')' → logprob: -9.75473403930664
    6. '(' → logprob: -10.12973403930664
    7. ' ()' → logprob: -10.75473403930664
    8. '()

' → logprob: -10.75473403930664
    9. '()
' → logprob: -12.00473403930664
    10. 's' → logprob: -12.12973403930664

Token 72: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0035159720573574305
    2. ' +' → logprob: -6.87851619720459
    3. '+' → logprob: -7.37851619720459
    4. '   ' → logprob: -7.50351619720459
    5. ' for' → logprob: -8.00351619720459
    6. '<|end|>' → logprob: -8.00351619720459
    7. '
' → logprob: -8.87851619720459
    8. '    
' → logprob: -9.12851619720459
    9. '+
' → logprob: -9.37851619720459
    10. '

' → logprob: -9.37851619720459

Token 73: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06531795859336853
    2. '
' → logprob: -3.5653178691864014
    3. 'for' (adapté à ' for') → logprob: -3.5653178691864014
    4. ' ' → logprob: -5.6903181076049805
    5. ' 
' → logprob: -6.4403181076049805
    6. '	for' → logprob: -8.06531810760498
    7. '   ' → logprob: -8.06531810760498
    8. '<|end|>' → logprob: -8.19031810760498
    9. ' +' → logprob: -8.44031810760498
    10. '  
' → logprob: -8.81531810760498

Token 74: ' h' (ID: 312)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08370810002088547
    2. ' h' → logprob: -3.5837080478668213
    3. ' _' → logprob: -3.7087080478668213
    4. ' d' → logprob: -4.5837082862854
    5. ' ' → logprob: -4.7087082862854
    6. ' height' → logprob: -5.5837082862854
    7. ' diff' → logprob: -6.0837082862854
    8. '_' → logprob: -6.5837082862854
    9. 'i' → logprob: -7.5837082862854
    10. ' x' → logprob: -8.333707809448242

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005845481529831886
    2. 'in' → logprob: -5.630845546722412
    3. ' ' → logprob: -6.505845546722412
    4. ',' → logprob: -7.380845546722412
    5. ' ,' → logprob: -10.255845069885254
    6. '  ' → logprob: -11.005845069885254
    7. '_' → logprob: -11.630845069885254
    8. '<|end|>' → logprob: -11.630845069885254
    9. '_in' → logprob: -12.130845069885254
    10. '   ' → logprob: -12.130845069885254

Token 76: ' get' (ID: 717)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20188961923122406
    2. ' range' → logprob: -1.7018896341323853
    3. 'diff' → logprob: -7.826889514923096
    4. ' diff' → logprob: -10.201889991760254
    5. '	range' → logprob: -11.326889991760254
    6. ' ' → logprob: -11.701889991760254
    7. '   ' → logprob: -11.951889991760254
    8. '(range' → logprob: -12.451889991760254
    9. '  ' → logprob: -13.076889991760254
    10. 'get' → logprob: -13.326889991760254

Token 77: '_height' (ID: 21576)
  Prédit: '_range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.0011926100123673677
    2. 'range' → logprob: -7.126192569732666
    3. '_' → logprob: -9.251193046569824
    4. ' range' → logprob: -9.251193046569824
    5. '(range' → logprob: -9.751193046569824
    6. '   ' → logprob: -11.251193046569824
    7. 'Range' → logprob: -11.251193046569824
    8. '_height' → logprob: -11.376193046569824
    9. '	range' → logprob: -11.376193046569824
    10. 's' → logprob: -11.438693046569824

Token 78: '_range' (ID: 22022)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05030206963419914
    2. '_range' → logprob: -3.050302028656006
    3. '_s' → logprob: -7.050302028656006
    4. '_list' → logprob: -8.175302505493164
    5. '(range' → logprob: -8.550302505493164
    6. '_ranges' → logprob: -9.550302505493164
    7. '(s' → logprob: -9.800302505493164
    8. '(' → logprob: -10.300302505493164
    9. '_values' → logprob: -10.550302505493164
    10. '_' → logprob: -10.675302505493164

Token 79: '(diff' (ID: 84195)
  Prédit: '(get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.06897435337305069
    2. '(range' → logprob: -3.318974256515503
    3. '(' → logprob: -3.568974256515503
    4. ' (' → logprob: -6.318974494934082
    5. '(diff' → logprob: -8.318974494934082
    6. '(s' → logprob: -8.818974494934082
    7. '(r' → logprob: -10.818974494934082
    8. '(generate' → logprob: -10.818974494934082
    9. '((' → logprob: -11.443974494934082
    10. 's' → logprob: -12.318974494934082

Token 80: '):
' (ID: 1883)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4161488711833954
    2. '():' → logprob: -1.1661489009857178
    3. '):' → logprob: -3.6661489009857178
    4. '()):
' → logprob: -6.666148662567139
    5. '(' → logprob: -7.166148662567139
    6. '())' → logprob: -7.916148662567139
    7. '():
' → logprob: -8.041149139404297
    8. ')' → logprob: -8.916149139404297
    9. ':' → logprob: -9.041149139404297
    10. ' ):' → logprob: -9.291149139404297

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09792178869247437
    2. ':' → logprob: -2.472921848297119
    3. '   ' → logprob: -6.097921848297119
    4. ' ' → logprob: -6.597921848297119
    5. '    ' → logprob: -7.222921848297119
    6. ' total' → logprob: -7.347921848297119
    7. ':
' → logprob: -7.347921848297119
    8. 'total' → logprob: -7.472921848297119
    9. '
' → logprob: -7.722921848297119
    10. '<|end|>' → logprob: -7.847921848297119

Token 82: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.5955027937889099
    2. 'total' (adapté à ' total') → logprob: -1.0955028533935547
    3. '       ' → logprob: -2.2205028533935547
    4. '           ' → logprob: -6.220502853393555
    5. ' ' → logprob: -6.720502853393555
    6. '
' → logprob: -6.970502853393555
    7. '   ' → logprob: -7.720502853393555
    8. '        ' → logprob: -8.095502853393555
    9. ' 
' → logprob: -8.220502853393555
    10. '_total' → logprob: -9.220502853393555

Token 83: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02642952837049961
    2. '+=' → logprob: -3.6514294147491455
    3. '+' → logprob: -9.651429176330566
    4. '=' → logprob: -10.651429176330566
    5. ' +' → logprob: -11.151429176330566
    6. ' =' → logprob: -11.526429176330566
    7. '    ' → logprob: -12.026429176330566
    8. ' ' → logprob: -12.151429176330566
    9. '   ' → logprob: -13.276429176330566
    10. ']+=' → logprob: -13.901429176330566

Token 84: ' add' (ID: 1147)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.011764398775994778
    2. 'total' → logprob: -4.5117645263671875
    3. ' ' → logprob: -7.6367645263671875
    4. ' max' → logprob: -9.136764526367188
    5. ' h' → logprob: -10.261764526367188
    6. '+' → logprob: -10.386764526367188
    7. ' ' → logprob: -11.511764526367188
    8. ' sum' → logprob: -11.511764526367188
    9. '(total' → logprob: -11.761764526367188
    10. '	total' → logprob: -12.136764526367188

Token 85: '_height' (ID: 21576)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.016201291233301163
    2. '(' → logprob: -4.141201496124268
    3. '_total' → logprob: -9.76620101928711
    4. 'total' → logprob: -9.76620101928711
    5. ' (' → logprob: -11.51620101928711
    6. '(t' → logprob: -12.26620101928711
    7. 's' → logprob: -12.39120101928711
    8. ' ' → logprob: -12.39120101928711
    9. '_(' → logprob: -12.76620101928711
    10. '(s' → logprob: -13.01620101928711

Token 86: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0042220475152134895
    2. '(' → logprob: -5.5042219161987305
    3. ' (' → logprob: -9.25422191619873
    4. 's' → logprob: -10.25422191619873
    5. 'total' → logprob: -12.50422191619873
    6. '(
' → logprob: -12.50422191619873
    7. '(t' → logprob: -13.87922191619873
    8. '(s' → logprob: -14.37922191619873
    9. ' ' → logprob: -14.62922191619873
    10. '```' → logprob: -14.62922191619873

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009138483554124832
    2. ',h' → logprob: -4.759138584136963
    3. ' ,' → logprob: -8.634138107299805
    4. '(h' → logprob: -8.634138107299805
    5. ' h' → logprob: -10.259138107299805
    6. '+h' → logprob: -10.384138107299805
    7. '+' → logprob: -10.509138107299805
    8. ' +' → logprob: -11.134138107299805
    9. '   ' → logprob: -11.134138107299805
    10. '<|end|>' → logprob: -11.259138107299805

Token 88: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.1427006870508194
    2. 'h' → logprob: -2.017700672149658
    3. ')' → logprob: -11.642701148986816
    4. ' ' → logprob: -11.892701148986816
    5. ' ' → logprob: -13.142701148986816
    6. ' 
' → logprob: -13.267701148986816
    7. '<|end|>' → logprob: -13.517701148986816
    8. '	h' → logprob: -13.892701148986816
    9. '    ' → logprob: -14.267701148986816
    10. ' )' → logprob: -14.830201148986816

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47637519240379333
    2. ')
' → logprob: -0.9763752222061157
    3. '   ' → logprob: -6.351375102996826
    4. ')

' → logprob: -8.476375579833984
    5. '
' → logprob: -8.976375579833984
    6. ')return' → logprob: -9.351375579833984
    7. ')
' → logprob: -9.476375579833984
    8. ' )
' → logprob: -10.976375579833984
    9. '       ' → logprob: -11.351375579833984
    10. ' )' → logprob: -12.226375579833984

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015560208819806576
    2. '
' → logprob: -4.390560150146484
    3. '<|end|>' → logprob: -7.015560150146484
    4. 'return' → logprob: -7.140560150146484
    5. '    
' → logprob: -7.640560150146484
    6. ' return' → logprob: -8.140560150146484
    7. '	return' → logprob: -8.265560150146484
    8. ' ' → logprob: -9.515560150146484
    9. '  
' → logprob: -10.015560150146484
    10. '
' → logprob: -10.140560150146484

Token 91: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09814681112766266
    2. '
' → logprob: -3.598146915435791
    3. ' return' → logprob: -3.723146915435791
    4. 'return' (adapté à ' return') → logprob: -3.723146915435791
    5. ' ' → logprob: -4.973146915435791
    6. '<|end|>' → logprob: -4.973146915435791
    7. '	return' → logprob: -6.598146915435791
    8. '    
' → logprob: -7.348146915435791
    9. '  ' → logprob: -7.848146915435791
    10. '  
' → logprob: -8.223146438598633

Token 92: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.011115029454231262
    2. 'total' → logprob: -4.511115074157715
    3. ' ' → logprob: -9.886115074157715
    4. ' ' → logprob: -12.136115074157715
    5. '(total' → logprob: -12.261115074157715
    6. '	total' → logprob: -12.886115074157715
    7. ' t' → logprob: -14.136115074157715
    8. '_total' → logprob: -14.136115074157715
    9. ' totals' → logprob: -14.386115074157715
    10. ' tot' → logprob: -14.511115074157715

Token 93: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17724677920341492
    2. 'def' → logprob: -2.9272468090057373
    3. '<|end|>' → logprob: -3.0522468090057373
    4. '(
' → logprob: -3.4272468090057373
    5. '(

' → logprob: -4.802246570587158
    6. '

' → logprob: -4.927246570587158
    7. '
' → logprob: -4.927246570587158
    8. '()' → logprob: -5.927246570587158
    9. '\' → logprob: -7.177246570587158
    10. '<|end|>' → logprob: -7.177246570587158

Token 94: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028491316363215446
    2. '
' → logprob: -3.903491258621216
    3. '

' → logprob: -5.028491497039795
    4. '<|end|>' → logprob: -7.653491497039795
    5. '(' → logprob: -8.153491020202637
    6. ' def' → logprob: -8.403491020202637
    7. '\' → logprob: -9.028491020202637
    8. '_' → logprob: -10.278491020202637
    9. '(
' → logprob: -10.278491020202637
    10. '[' → logprob: -10.778491020202637

Token 95: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.0008887103176675737
    2. ' add' → logprob: -7.250888824462891
    3. 'get' → logprob: -10.00088882446289
    4. '_' → logprob: -10.12588882446289
    5. '_get' → logprob: -10.12588882446289
    6. ' _' → logprob: -11.12588882446289
    7. ' sum' → logprob: -11.25088882446289
    8. ' compute' → logprob: -11.75088882446289
    9. ' def' → logprob: -12.37588882446289
    10. ' calculate' → logprob: -12.62588882446289

Token 96: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -8.41866585687967e-06
    2. 'height' → logprob: -12.250008583068848
    3. '_range' → logprob: -13.500008583068848
    4. '_' → logprob: -13.625008583068848
    5. '_he' → logprob: -14.250008583068848
    6. '_length' → logprob: -15.750008583068848
    7. '_width' → logprob: -17.37500762939453
    8. '_true' → logprob: -17.50000762939453
    9. '_input' → logprob: -17.62500762939453
    10. ' _' → logprob: -17.62500762939453

Token 97: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -2.935296834039036e-06
    2. '_ranges' → logprob: -12.87500286102295
    3. 'range' → logprob: -15.75000286102295
    4. '_r' → logprob: -16.875003814697266
    5. ' _' → logprob: -17.000003814697266
    6. ' range' → logprob: -18.625003814697266
    7. 's' → logprob: -18.625003814697266
    8. '_' → logprob: -18.750003814697266
    9. '_value' → logprob: -18.875003814697266
    10. '_ratio' → logprob: -19.000003814697266

Token 98: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.0003884894831571728
    2. '(' → logprob: -7.8753886222839355
    3. '(d' → logprob: -12.375388145446777
    4. '(def' → logprob: -12.625388145446777
    5. ' (' → logprob: -14.625388145446777
    6. 'diff' → logprob: -15.625388145446777
    7. '(
' → logprob: -16.750389099121094
    8. '():' → logprob: -17.000389099121094
    9. '	diff' → logprob: -17.500389099121094
    10. '_diff' → logprob: -17.750389099121094

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022403046023100615
    2. '):
' → logprob: -6.252240180969238
    3. ' ):' → logprob: -8.627240180969238
    4. ')' → logprob: -9.002240180969238
    5. '   ' → logprob: -12.877240180969238
    6. ':' → logprob: -13.252240180969238
    7. '):
' → logprob: -13.627240180969238
    8. '):

' → logprob: -13.877240180969238
    9. ' ' → logprob: -14.002240180969238
    10. '=' → logprob: -14.752240180969238

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01686997525393963
    2. 'return' → logprob: -5.141870021820068
    3. ' range' → logprob: -5.391870021820068
    4. 'range' → logprob: -5.641870021820068
    5. ' return' → logprob: -5.891870021820068
    6. '	range' → logprob: -12.14186954498291
    7. '	return' → logprob: -12.26686954498291
    8. '(range' → logprob: -12.89186954498291
    9. ' ' → logprob: -12.89186954498291
    10. '```' → logprob: -13.76686954498291

Token 101: ' return' (ID: 622)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2972685992717743
    2. 'return' (adapté à ' return') → logprob: -2.1722686290740967
    3. ' range' → logprob: -2.6722686290740967
    4. '   ' → logprob: -2.6722686290740967
    5. ' return' → logprob: -5.297268390655518
    6. ' ' → logprob: -10.797268867492676
    7. '(range' → logprob: -12.047268867492676
    8. '  ' → logprob: -12.172268867492676
    9. '	range' → logprob: -12.547268867492676
    10. 'for' → logprob: -13.047268867492676

Token 102: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0336734801530838
    2. ' range' → logprob: -3.4086735248565674
    3. '(range' → logprob: -11.158673286437988
    4. '	range' → logprob: -12.408673286437988
    5. '   ' → logprob: -12.658673286437988
    6. 'list' → logprob: -13.033673286437988
    7. ' ' → logprob: -13.283673286437988
    8. '[' → logprob: -13.783673286437988
    9. ' xrange' → logprob: -15.283673286437988
    10. ' list' → logprob: -15.533673286437988

Token 103: '(' (ID: 7)
  Prédit: '(get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.7824677228927612
    2. '(diff' → logprob: -0.7824677228927612
    3. '(' → logprob: -2.532467842102051
    4. '(-' → logprob: -5.157467842102051
    5. '(abs' → logprob: -9.15746784210205
    6. '(-(' → logprob: -10.40746784210205
    7. '((' → logprob: -10.53246784210205
    8. 'diff' → logprob: -10.65746784210205
    9. 'get' → logprob: -11.28246784210205
    10. '(max' → logprob: -11.78246784210205

Token 104: '1' (ID: 16)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.008791954256594181
    2. '-get' → logprob: -5.883791923522949
    3. ' get' → logprob: -6.008791923522949
    4. '(get' → logprob: -6.883791923522949
    5. '0' → logprob: -7.008791923522949
    6. 'diff' → logprob: -7.258791923522949
    7. '-d' → logprob: -7.508791923522949
    8. '-' → logprob: -8.25879192352295
    9. ' -' → logprob: -10.75879192352295
    10. '(-' → logprob: -11.38379192352295

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024631983251310885
    2. ',get' → logprob: -8.375246047973633
    3. ' ,' → logprob: -11.250246047973633
    4. 'get' → logprob: -13.000246047973633
    5. ' get' → logprob: -15.625246047973633
    6. '(get' → logprob: -16.500246047973633
    7. 'diff' → logprob: -16.500246047973633
    8. ',int' → logprob: -17.500246047973633
    9. ',
' → logprob: -18.000246047973633
    10. ',end' → logprob: -18.375246047973633

Token 106: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.32109546661376953
    2. ' get' → logprob: -1.3210954666137695
    3. 'diff' → logprob: -4.9460954666137695
    4. ' diff' → logprob: -7.3210954666137695
    5. '(get' → logprob: -10.69609546661377
    6. ')get' → logprob: -12.94609546661377
    7. '	get' → logprob: -13.44609546661377
    8. ')' → logprob: -13.82109546661377
    9. '   ' → logprob: -14.07109546661377
    10. '(diff' → logprob: -14.69609546661377

Token 107: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: 0.0
    2. 'range' → logprob: -17.125
    3. '_' → logprob: -18.625
    4. '_height' → logprob: -18.625
    5. 'ange' → logprob: -19.25
    6. '_r' → logprob: -19.375
    7. ' range' → logprob: -19.625
    8. '_value' → logprob: -20.625
    9. '_RANGE' → logprob: -20.875
    10. 'Range' → logprob: -21.125

Token 108: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -5.512236498361744e-07
    2. 'end' → logprob: -15.000000953674316
    3. '_END' → logprob: -16.5
    4. 'End' → logprob: -18.75
    5. '(end' → logprob: -18.75
    6. '_' → logprob: -19.375
    7. '_End' → logprob: -19.625
    8. ' end' → logprob: -20.0
    9. ')' → logprob: -20.5
    10. '```' → logprob: -20.625

Token 109: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.500000953674316
    3. ' (' → logprob: -16.0
    4. ')(' → logprob: -17.5
    5. ')' → logprob: -19.5
    6. 'diff' → logprob: -19.875
    7. '(def' → logprob: -20.0
    8. '	diff' → logprob: -20.0
    9. '(div' → logprob: -20.375
    10. '(abs' → logprob: -21.0

Token 110: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004535980988293886
    2. '()))' → logprob: -5.754536151885986
    3. ')' → logprob: -6.629536151885986
    4. '())' → logprob: -10.879535675048828
    5. ')))' → logprob: -12.379535675048828
    6. '(' → logprob: -12.629535675048828
    7. ' ))' → logprob: -12.754535675048828
    8. '()' → logprob: -12.879535675048828
    9. '(diff' → logprob: -13.129535675048828
    10. '))
' → logprob: -13.754535675048828

Token 111: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006469102227129042
    2. '<|end|>' → logprob: -7.875647068023682
    3. '+' → logprob: -8.375646591186523
    4. ' def' → logprob: -10.375646591186523
    5. '```' → logprob: -13.250646591186523
    6. '<|end|>' → logprob: -14.125646591186523
    7. '+
' → logprob: -14.500646591186523
    8. ')' → logprob: -14.750646591186523
    9. '[' → logprob: -15.125646591186523
    10. '(defun' → logprob: -15.250646591186523

Token 112: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.002135390415787697
    2. 'add' → logprob: -6.252135276794434
    3. ' def' → logprob: -9.127135276794434
    4. 'def' → logprob: -10.127135276794434
    5. '_add' → logprob: -10.377135276794434
    6. ' get' → logprob: -11.502135276794434
    7. '_' → logprob: -13.252135276794434
    8. '(add' → logprob: -13.377135276794434
    9. ')add' → logprob: -13.502135276794434
    10. ' sum' → logprob: -13.814635276794434

Token 113: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.00015693542081862688
    2. '_' → logprob: -8.875157356262207
    3. '_he' → logprob: -12.375157356262207
    4. ' _' → logprob: -13.125157356262207
    5. ')_' → logprob: -13.125157356262207
    6. '_length' → logprob: -13.375157356262207
    7. '_total' → logprob: -13.750157356262207
    8. '```' → logprob: -14.000157356262207
    9. '_depth' → logprob: -14.625157356262207
    10. '_width' → logprob: -14.625157356262207

Token 114: '(current' (ID: 15023)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.19644305109977722
    2. '(a' → logprob: -1.9464430809020996
    3. '(' → logprob: -3.5714430809020996
    4. '(h' → logprob: -5.6964430809021
    5. ' (' → logprob: -6.4464430809021
    6. '(height' → logprob: -6.8214430809021
    7. '(t' → logprob: -7.6964430809021
    8. '(prev' → logprob: -8.196442604064941
    9. '(old' → logprob: -8.571442604064941
    10. '(current' → logprob: -8.821442604064941

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011427151912357658
    2. ' ,' → logprob: -9.125114440917969
    3. ',total' → logprob: -12.375114440917969
    4. '_,' → logprob: -15.000114440917969
    5. ',height' → logprob: -15.500114440917969
    6. '_height' → logprob: -15.875114440917969
    7. ',current' → logprob: -16.12511444091797
    8. '_total' → logprob: -16.37511444091797
    9. ',_' → logprob: -16.62511444091797
    10. ',
' → logprob: -17.62511444091797

Token 116: ' h' (ID: 312)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.42620962858200073
    2. ' addition' → logprob: -1.8012096881866455
    3. ' added' → logprob: -2.9262096881866455
    4. ' to' → logprob: -3.1762096881866455
    5. ' add' → logprob: -3.3012096881866455
    6. ' value' → logprob: -3.8012096881866455
    7. ' height' → logprob: -4.926209449768066
    8. ' h' → logprob: -5.676209449768066
    9. 'to' → logprob: -5.676209449768066
    10. ' additional' → logprob: -5.801209449768066

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036098056007176638
    2. '):
' → logprob: -5.628609657287598
    3. ' ):' → logprob: -12.628609657287598
    4. ':' → logprob: -12.753609657287598
    5. '):
' → logprob: -13.378609657287598
    6. ')' → logprob: -13.878609657287598
    7. '   ' → logprob: -14.503609657287598
    8. '):

' → logprob: -14.878609657287598
    9. '}:' → logprob: -15.878609657287598
    10. ' ' → logprob: -16.753610610961914

Token 118: '   ' (ID: 271)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.0036055364180356264
    2. 'current' → logprob: -5.628605365753174
    3. '   ' → logprob: -13.003605842590332
    4. '(current' → logprob: -13.378605842590332
    5. '	current' → logprob: -14.253605842590332
    6. 'urrent' → logprob: -14.878605842590332
    7. '.current' → logprob: -16.253604888916016
    8. ' return' → logprob: -16.378604888916016
    9. '<|end|>' → logprob: -16.503604888916016
    10. ' ' → logprob: -16.628604888916016

Token 119: ' return' (ID: 622)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.4740806519985199
    2. 'current' → logprob: -0.9740806818008423
    3. '   ' → logprob: -12.724081039428711
    4. 'return' (adapté à ' return') → logprob: -15.349081039428711
    5. ' return' → logprob: -15.849081039428711
    6. '(current' → logprob: -16.22408103942871
    7. '	current' → logprob: -16.34908103942871
    8. '$current' → logprob: -17.09908103942871
    9. 'urrent' → logprob: -17.59908103942871
    10. 'Current' → logprob: -17.72408103942871

Token 120: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.10020937025547028
    2. 'current' → logprob: -2.3502094745635986
    3. '(current' → logprob: -13.60020923614502
    4. 'urrent' → logprob: -14.35020923614502
    5. '$current' → logprob: -15.22520923614502
    6. '	current' → logprob: -15.97520923614502
    7. ' ' → logprob: -16.100210189819336
    8. '0' → logprob: -16.850210189819336
    9. 'Current' → logprob: -16.975210189819336
    10. '   ' → logprob: -16.975210189819336

Token 121: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5761069059371948
    2. '+' → logprob: -0.8261069059371948
    3. '+h' → logprob: -8.701107025146484
    4. ' plus' → logprob: -15.326107025146484
    5. '+
' → logprob: -15.576107025146484
    6. ' +
' → logprob: -15.701107025146484
    7. '<|end|>' → logprob: -15.826107025146484
    8. ' ' → logprob: -15.951107025146484
    9. ' ' → logprob: -15.951107025146484
    10. ' +=' → logprob: -17.576107025146484

Token 122: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.693148672580719
    2. ' h' → logprob: -0.693148672580719
    3. ' ' → logprob: -13.943148612976074
    4. '1' → logprob: -14.818148612976074
    5. '   ' → logprob: -16.06814956665039
    6. ' ' → logprob: -16.44314956665039
    7. '	h' → logprob: -16.94314956665039
    8. '  ' → logprob: -18.94314956665039
    9. '    ' → logprob: -19.06814956665039
    10. '```' → logprob: -19.50564956665039

Token 123: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04016231372952461
    2. '<|end|>' → logprob: -3.4151623249053955
    3. '#' → logprob: -5.540162086486816
    4. '```' → logprob: -6.790162086486816
    5. 'print' → logprob: -7.790162086486816
    6. '<|end|>' → logprob: -8.040162086486816
    7. '
' → logprob: -9.040162086486816
    8. 'n' → logprob: -9.290162086486816
    9. 'diff' → logprob: -9.415162086486816
    10. 'input' → logprob: -10.040162086486816

Token 125: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04888676851987839
    2. 'main' → logprob: -3.048886775970459
    3. ' calculate' → logprob: -9.5488862991333
    4. ' compute' → logprob: -9.7988862991333
    5. ' get' → logprob: -10.5488862991333
    6. ' max' → logprob: -10.9238862991333
    7. 'calculate' → logprob: -10.9238862991333
    8. ' process' → logprob: -11.0488862991333
    9. 'compute' → logprob: -11.2988862991333
    10. '__' → logprob: -11.5488862991333

Token 126: '_result' (ID: 11623)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.11089325696229935
    2. '_max' → logprob: -3.2358932495117188
    3. '_height' → logprob: -3.6108932495117188
    4. '_total' → logprob: -4.360893249511719
    5. '_difference' → logprob: -5.110893249511719
    6. '_sum' → logprob: -5.360893249511719
    7. '_he' → logprob: -5.985893249511719
    8. '_true' → logprob: -6.235893249511719
    9. '_range' → logprob: -6.985893249511719
    10. '_' → logprob: -7.110893249511719

Token 127: '(true' (ID: 6338)
  Prédit: '(diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.01627306453883648
    2. '():' → logprob: -4.391273021697998
    3. '(' → logprob: -6.516273021697998
    4. '(input' → logprob: -7.391273021697998
    5. ' (' → logprob: -7.391273021697998
    6. '(d' → logprob: -7.766273021697998
    7. '(e' → logprob: -8.016273498535156
    8. '(def' → logprob: -9.141273498535156
    9. ' ():' → logprob: -9.391273498535156
    10. '(s' → logprob: -11.516273498535156

Token 128: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.011776290833950043
    2. '_diff' → logprob: -4.761776447296143
    3. '_he' → logprob: -7.136776447296143
    4. '_' → logprob: -7.261776447296143
    5. ')' → logprob: -8.011775970458984
    6. 'height' → logprob: -8.636775970458984
    7. '):' → logprob: -8.761775970458984
    8. ',' → logprob: -8.761775970458984
    9. 'diff' → logprob: -9.261775970458984
    10. ' height' → logprob: -9.261775970458984

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045815419405698776
    2. '):' → logprob: -3.1708154678344727
    3. ' ,' → logprob: -6.295815467834473
    4. '):
' → logprob: -7.545815467834473
    5. ' ):' → logprob: -8.420815467834473
    6. 's' → logprob: -10.295815467834473
    7. '_diff' → logprob: -10.295815467834473
    8. ')' → logprob: -10.545815467834473
    9. ',d' → logprob: -10.670815467834473
    10. 'diff' → logprob: -11.545815467834473

Token 130: ' e' (ID: 319)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.31220629811286926
    2. ' diff' → logprob: -1.4372062683105469
    3. 'w' → logprob: -5.562206268310547
    4. 'false' → logprob: -5.749706268310547
    5. 'height' → logprob: -6.312206268310547
    6. ' false' → logprob: -6.812206268310547
    7. 'difference' → logprob: -6.874706268310547
    8. ' w' → logprob: -6.999706268310547
    9. 'e' → logprob: -6.999706268310547
    10. 'west' → logprob: -7.312206268310547

Token 131: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020212726667523384
    2. '):' → logprob: -5.145212650299072
    3. ' ,' → logprob: -5.395212650299072
    4. 'w' → logprob: -5.395212650299072
    5. '_w' → logprob: -6.520212650299072
    6. '):
' → logprob: -6.770212650299072
    7. '_height' → logprob: -7.270212650299072
    8. ')' → logprob: -7.895212650299072
    9. 'ight' → logprob: -8.39521312713623
    10. 's' → logprob: -9.02021312713623

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23238354921340942
    2. ':' → logprob: -1.7323834896087646
    3. ':
' → logprob: -3.6073834896087646
    4. ' :' → logprob: -6.732383728027344
    5. ' :
' → logprob: -7.482383728027344
    6. ',' → logprob: -7.857383728027344
    7. ' return' → logprob: -7.982383728027344
    8. '):
' → logprob: -8.107383728027344
    9. ' def' → logprob: -9.232383728027344
    10. ':return' → logprob: -9.482383728027344

Token 133: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31957924365997314
    2. 'return' (adapté à ' return') → logprob: -1.3195792436599731
    3. '   ' → logprob: -5.444579124450684
    4. ' if' → logprob: -6.694579124450684
    5. 'if' → logprob: -7.819579124450684
    6. ' true' → logprob: -8.944579124450684
    7. 'true' → logprob: -9.444579124450684
    8. 'diff' → logprob: -10.819579124450684
    9. ' ' → logprob: -10.944579124450684
    10. 'def' → logprob: -11.319579124450684

Token 134: ' true' (ID: 1343)
  Prédit: ' true'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' true' → logprob: -0.3511917293071747
    2. 'true' → logprob: -1.226191759109497
    3. ' max' → logprob: -6.726191520690918
    4. ' e' → logprob: -7.351191520690918
    5. 'e' → logprob: -7.851191520690918
    6. 'max' → logprob: -8.601191520690918
    7. 'abs' → logprob: -9.476191520690918
    8. ' abs' → logprob: -9.476191520690918
    9. ' compute' → logprob: -9.851191520690918
    10. 'compute' → logprob: -10.351191520690918

Token 135: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.0013463040813803673
    2. '_' → logprob: -6.626346111297607
    3. ' _' → logprob: -11.126346588134766
    4. '_he' → logprob: -12.501346588134766
    5. '_depth' → logprob: -14.376346588134766
    6. '_
' → logprob: -14.876346588134766
    7. 'e' → logprob: -15.251346588134766
    8. '_width' → logprob: -16.126346588134766
    9. 'height' → logprob: -16.376346588134766
    10. '_

' → logprob: -16.501346588134766

Token 136: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8349404335021973
    2. '+' → logprob: -0.9599404335021973
    3. ' -' → logprob: -2.3349404335021973
    4. '-' → logprob: -2.7099404335021973
    5. ' *' → logprob: -4.459940433502197
    6. '*' → logprob: -4.834940433502197
    7. '>' → logprob: -9.709939956665039
    8. ',' → logprob: -9.834939956665039
    9. ' ' → logprob: -9.834939956665039
    10. '%' → logprob: -10.709939956665039

Token 137: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6345229148864746
    2. ' e' → logprob: -0.7595229148864746
    3. 'w' → logprob: -7.134522914886475
    4. ' (' → logprob: -7.509522914886475
    5. ' w' → logprob: -8.259523391723633
    6. '(e' → logprob: -9.634523391723633
    7. '(' → logprob: -9.634523391723633
    8. '1' → logprob: -9.634523391723633
    9. 'compute' → logprob: -9.884523391723633
    10. ' ' → logprob: -10.509523391723633

Token 138: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04735089838504791
    2. '<|end|>' → logprob: -3.1723508834838867
    3. '
' → logprob: -5.797350883483887
    4. '#' → logprob: -7.797350883483887
    5. '<|end|>' → logprob: -7.922350883483887
    6. '```' → logprob: -8.797350883483887
    7. 'if' → logprob: -9.422350883483887
    8. '\n' → logprob: -9.797350883483887
    9. '

' → logprob: -9.797350883483887
    10. '()' → logprob: -10.672350883483887

Token 139: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007937470450997353
    2. '
' → logprob: -4.882937431335449
    3. '

' → logprob: -9.13293743133545
    4. '<|end|>' → logprob: -9.38293743133545
    5. '```' → logprob: -10.13293743133545
    6. '\' → logprob: -10.13293743133545
    7. ' def' → logprob: -10.88293743133545
    8. '\n' → logprob: -11.00793743133545
    9. '#' → logprob: -12.00793743133545
    10. '  
' → logprob: -12.38293743133545

Token 140: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.348810613155365
    2. ' main' → logprob: -1.2238106727600098
    3. 'def' → logprob: -9.098810195922852
    4. 'process' → logprob: -9.348810195922852
    5. 'calculate' → logprob: -9.973810195922852
    6. 'solve' → logprob: -10.598810195922852
    7. ' solve' → logprob: -10.973810195922852
    8. 'compute' → logprob: -11.223810195922852
    9. ' process' → logprob: -11.223810195922852
    10. ' def' → logprob: -11.348810195922852

Token 141: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.062033675611019135
    2. '_result' → logprob: -2.9370336532592773
    3. '(result' → logprob: -5.562033653259277
    4. '()' → logprob: -6.937033653259277
    5. '_' → logprob: -7.312033653259277
    6. '_results' → logprob: -7.812033653259277
    7. '("("' → logprob: -7.812033653259277
    8. 'result' → logprob: -7.937033653259277
    9. '('' → logprob: -9.062033653259277
    10. '_output' → logprob: -9.812033653259277

Token 142: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09633398056030273
    2. '(result' → logprob: -2.7213339805603027
    3. '()' → logprob: -4.471333980560303
    4. '(print' → logprob: -4.721333980560303
    5. '(com' → logprob: -6.221333980560303
    6. ' (' → logprob: -6.221333980560303
    7. '(true' → logprob: -7.596333980560303
    8. '(def' → logprob: -8.096334457397461
    9. '(results' → logprob: -8.346334457397461
    10. '(True' → logprob: -9.471334457397461

Token 143: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018443262204527855
    2. ')' → logprob: -4.0184431076049805
    3. '):
' → logprob: -8.14344310760498
    4. '):
' → logprob: -14.26844310760498
    5. ' ):' → logprob: -14.51844310760498
    6. ':' → logprob: -14.76844310760498
    7. '):

' → logprob: -14.89344310760498
    8. '(result' → logprob: -15.64344310760498
    9. '(' → logprob: -15.89344310760498
    10. ',' → logprob: -16.018444061279297

Token 144: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.763936460018158
    2. '   ' → logprob: -1.0139365196228027
    3. 'print' → logprob: -1.7639365196228027
    4. '```' → logprob: -11.763936042785645
    5. 'def' → logprob: -12.763936042785645
    6. '    ' → logprob: -13.013936042785645
    7. ' def' → logprob: -15.138936042785645
    8. '(print' → logprob: -15.263936042785645
    9. '	print' → logprob: -15.388936042785645
    10. '    
' → logprob: -16.51393699645996

Token 145: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02325083687901497
    2. ' print' → logprob: -3.7732508182525635
    3. '   ' → logprob: -12.148250579833984
    4. '```' → logprob: -16.023250579833984
    5. '	print' → logprob: -19.773250579833984
    6. '.print' → logprob: -20.898250579833984
    7. 'def' → logprob: -21.148250579833984
    8. '(print' → logprob: -21.523250579833984
    9. '    
' → logprob: -22.023250579833984
    10. '`' → logprob: -22.398250579833984

Token 146: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0009132515988312662
    2. '(' → logprob: -7.000913143157959
    3. '()' → logprob: -14.125913619995117
    4. 'result' → logprob: -14.625913619995117
    5. '(f' → logprob: -14.875913619995117
    6. '(results' → logprob: -16.625913619995117
    7. ' (' → logprob: -17.375913619995117
    8. '(res' → logprob: -17.625913619995117
    9. '=result' → logprob: -18.000913619995117
    10. '(resultado' → logprob: -18.000913619995117

Token 147: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.75
    3. '))' → logprob: -16.625
    4. ')
' → logprob: -17.125
    5. ')`' → logprob: -17.125
    6. '()' → logprob: -17.25
    7. '())' → logprob: -18.125
    8. ')}' → logprob: -19.125
    9. '(' → logprob: -19.25
    10. '')' → logprob: -19.875

Token 148: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.7848862373502925e-05
    2. 'if' → logprob: -10.500027656555176
    3. 'for' → logprob: -15.125027656555176
    4. ' def' → logprob: -17.125028610229492
    5. '```' → logprob: -18.125028610229492
    6. 'while' → logprob: -20.125028610229492
    7. '#' → logprob: -20.125028610229492
    8. '    
' → logprob: -21.625028610229492
    9. '
' → logprob: -21.875028610229492
    10. ' if' → logprob: -23.000028610229492

Token 149: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12701262533664703
    2. 'main' → logprob: -2.1270127296447754
    3. 'def' → logprob: -10.252012252807617
    4. ' process' → logprob: -10.752012252807617
    5. ' def' → logprob: -11.502012252807617
    6. 'process' → logprob: -11.627012252807617
    7. ' run' → logprob: -12.502012252807617
    8. '_main' → logprob: -13.252012252807617
    9. 'run' → logprob: -13.627012252807617
    10. ' solve' → logprob: -14.627012252807617

Token 150: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.451116051815916e-05
    2. ' ():' → logprob: -10.875024795532227
    3. '():
' → logprob: -12.750024795532227
    4. '()' → logprob: -13.750024795532227
    5. '(' → logprob: -14.125024795532227
    6. '_' → logprob: -14.250024795532227
    7. '(:' → logprob: -17.000024795532227
    8. '(":' → logprob: -17.125024795532227
    9. '():
' → logprob: -17.875024795532227
    10. ':' → logprob: -17.875024795532227

Token 151: '   ' (ID: 271)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3165205419063568
    2. '   ' → logprob: -1.6915205717086792
    3. 'input' → logprob: -2.4415204524993896
    4. '_input' → logprob: -11.316520690917969
    5. ' inputs' → logprob: -11.566520690917969
    6. ' raw' → logprob: -12.316520690917969
    7. '	input' → logprob: -12.566520690917969
    8. 'Input' → logprob: -12.816520690917969
    9. ' inp' → logprob: -12.816520690917969
    10. ' user' → logprob: -13.066520690917969

Token 152: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.05563274770975113
    2. ' input' → logprob: -2.9306328296661377
    3. '   ' → logprob: -7.680632591247559
    4. 'inputs' → logprob: -9.305632591247559
    5. 'inp' → logprob: -10.305632591247559
    6. 'user' → logprob: -10.430632591247559
    7. 'e' → logprob: -10.680632591247559
    8. 'raw' → logprob: -10.805632591247559
    9. '```' → logprob: -11.305632591247559
    10. '_input' → logprob: -11.430632591247559

Token 153: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0005579164135269821
    2. '_' → logprob: -7.500557899475098
    3. '_string' → logprob: -13.125557899475098
    4. '_s' → logprob: -13.625557899475098
    5. '()' → logprob: -14.250557899475098
    6. '_line' → logprob: -14.375557899475098
    7. '_input' → logprob: -15.625557899475098
    8. '_data' → logprob: -16.375558853149414
    9. 'str' → logprob: -16.750558853149414
    10. '_text' → logprob: -17.500558853149414

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020752996206284
    2. '=' → logprob: -2.350207567214966
    3. '()' → logprob: -14.975207328796387
    4. ' ' → logprob: -15.350207328796387
    5. '=input' → logprob: -16.475208282470703
    6. '	' → logprob: -16.725208282470703
    7. '   ' → logprob: -16.850208282470703
    8. ' ' → logprob: -16.975208282470703
    9. ')' → logprob: -17.100208282470703
    10. ' =)' → logprob: -17.225208282470703

Token 155: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.31328853964805603
    2. ' get' → logprob: -1.3132885694503784
    3. ' input' → logprob: -11.188288688659668
    4. 'input' → logprob: -11.313288688659668
    5. '(get' → logprob: -14.938288688659668
    6. '	get' → logprob: -15.438288688659668
    7. ' ' → logprob: -15.563288688659668
    8. '_get' → logprob: -17.43828773498535
    9. '=get' → logprob: -17.56328773498535
    10. '   ' → logprob: -17.56328773498535

Token 156: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.625000953674316
    3. 'input' → logprob: -16.000001907348633
    4. ' _' → logprob: -16.000001907348633
    5. '_line' → logprob: -16.500001907348633
    6. '_output' → logprob: -17.000001907348633
    7. '_string' → logprob: -17.875001907348633
    8. '_str' → logprob: -18.500001907348633
    9. '_user' → logprob: -18.875001907348633
    10. '_inputs' → logprob: -18.875001907348633

Token 157: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.438573680294212e-06
    2. '()
' → logprob: -12.625005722045898
    3. '())' → logprob: -14.000005722045898
    4. '()

' → logprob: -14.625005722045898
    5. '()]' → logprob: -16.1250057220459
    6. '_' → logprob: -16.1250057220459
    7. '().' → logprob: -16.2500057220459
    8. ' ()' → logprob: -16.5000057220459
    9. '()`' → logprob: -16.5000057220459
    10. '(' → logprob: -16.6250057220459

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04414921998977661
    2. 'e' → logprob: -3.419149160385132
    3. ' e' → logprob: -4.669149398803711
    4. '
' → logprob: -7.794149398803711
    5. '    
' → logprob: -8.044149398803711
    6. ' parts' → logprob: -9.919149398803711
    7. 'input' → logprob: -10.419149398803711
    8. 'w' → logprob: -10.419149398803711
    9. 'elements' → logprob: -10.419149398803711
    10. ' elements' → logprob: -10.544149398803711

Token 159: ' w' (ID: 286)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0043625906109809875
    2. ' e' → logprob: -5.5043625831604
    3. 'elements' → logprob: -9.504363059997559
    4. 'values' → logprob: -10.379363059997559
    5. 'w' (adapté à ' w') → logprob: -11.004363059997559
    6. '   ' → logprob: -11.004363059997559
    7. 'parsed' → logprob: -11.004363059997559
    8. 'east' → logprob: -11.004363059997559
    9. 'inputs' → logprob: -11.129363059997559
    10. 'E' → logprob: -11.254363059997559

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11858852952718735
    2. '_str' → logprob: -2.243588447570801
    3. ' =' → logprob: -6.243588447570801
    4. ' ,' → logprob: -6.618588447570801
    5. '=' → logprob: -7.118588447570801
    6. '_,' → logprob: -7.368588447570801
    7. '_' → logprob: -7.743588447570801
    8. '_e' → logprob: -8.7435884475708
    9. 'e' → logprob: -8.9935884475708
    10. ',e' → logprob: -9.4935884475708

Token 161: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.008615161292254925
    2. 'e' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.633615493774414
    4. '   ' → logprob: -16.008615493774414
    5. ' w' → logprob: -16.133615493774414
    6. '    ' → logprob: -16.383615493774414
    7. ' =' → logprob: -17.133615493774414
    8. '=' → logprob: -18.383615493774414
    9. '  ' → logprob: -18.383615493774414
    10. '	e' → logprob: -18.508615493774414

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0486019104719162
    2. '=' → logprob: -3.0486018657684326
    3. ',' → logprob: -11.173602104187012
    4. '=parse' → logprob: -15.548602104187012
    5. 'w' → logprob: -15.798602104187012
    6. ' ' → logprob: -16.548601150512695
    7. ' ,' → logprob: -17.548601150512695
    8. '＝' → logprob: -17.798601150512695
    9. ' =
' → logprob: -17.923601150512695
    10. '   ' → logprob: -17.923601150512695

Token 163: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.008853754960000515
    2. 'parse' → logprob: -4.758853912353516
    3. ' next' → logprob: -8.633853912353516
    4. ' map' → logprob: -9.883853912353516
    5. ' tuple' → logprob: -12.633853912353516
    6. '=parse' → logprob: -12.883853912353516
    7. ' list' → logprob: -13.258853912353516
    8. 'next' → logprob: -14.008853912353516
    9. '	parse' → logprob: -14.383853912353516
    10. ' parsed' → logprob: -15.008853912353516

Token 164: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.043454598635435104
    2. '(input' → logprob: -3.168454647064209
    3. 'input' → logprob: -7.918454647064209
    4. '_' → logprob: -10.79345417022705
    5. '_str' → logprob: -10.79345417022705
    6. ' input' → logprob: -11.04345417022705
    7. '_(' → logprob: -11.41845417022705
    8. '(str' → logprob: -12.16845417022705
    9. '(' → logprob: -12.29345417022705
    10. '_w' → logprob: -13.16845417022705

Token 165: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. ' (' → logprob: -15.625000953674316
    4. ',input' → logprob: -17.250001907348633
    5. 'input' → logprob: -17.750001907348633
    6. '=input' → logprob: -18.000001907348633
    7. '[input' → logprob: -19.500001907348633
    8. '(output' → logprob: -19.875001907348633
    9. '(inputs' → logprob: -20.625001907348633
    10. '(
' → logprob: -20.750001907348633

Token 166: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -3.8889261304575484e-06
    2. 'str' → logprob: -12.500003814697266
    3. '_' → logprob: -16.375003814697266
    4. ')' → logprob: -17.000003814697266
    5. 'Str' → logprob: -18.500003814697266
    6. '_STR' → logprob: -18.875003814697266
    7. '_string' → logprob: -19.125003814697266
    8. '```' → logprob: -19.500003814697266
    9. '_s' → logprob: -19.875003814697266
    10. '(str' → logprob: -20.125003814697266

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.953082341467962e-05
    2. '())' → logprob: -10.750039100646973
    3. '()' → logprob: -11.000039100646973
    4. ')
' → logprob: -14.000039100646973
    5. ' )' → logprob: -15.000039100646973
    6. '))' → logprob: -16.75004005432129
    7. '   ' → logprob: -17.25004005432129
    8. ')`' → logprob: -18.37504005432129
    9. ')#' → logprob: -18.75004005432129
    10. ')

' → logprob: -19.00004005432129

Token 168: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37842801213264465
    2. '   ' → logprob: -1.3784279823303223
    3. ' true' → logprob: -3.1284279823303223
    4. 'true' → logprob: -4.003427982330322
    5. '    
' → logprob: -8.12842845916748
    6. '
' → logprob: -8.50342845916748
    7. 'diff' → logprob: -9.00342845916748
    8. '```' → logprob: -9.37842845916748
    9. '_true' → logprob: -9.75342845916748
    10. '	true' → logprob: -9.87842845916748

Token 169: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.06792056560516357
    2. 'true' → logprob: -3.067920684814453
    3. ' diff' → logprob: -4.067920684814453
    4. ' true' → logprob: -6.567920684814453
    5. '   ' → logprob: -7.567920684814453
    6. '
' → logprob: -9.942920684814453
    7. '	diff' → logprob: -11.067920684814453
    8. '```' → logprob: -11.317920684814453
    9. 'difference' → logprob: -11.817920684814453
    10. 'w' → logprob: -12.192920684814453

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004078997299075127
    2. '=' → logprob: -5.5040788650512695
    3. ')' → logprob: -15.25407886505127
    4. ' ' → logprob: -16.004079818725586
    5. '_' → logprob: -16.504079818725586
    6. ',' → logprob: -16.629079818725586
    7. 's' → logprob: -17.254079818725586
    8. '  ' → logprob: -18.504079818725586
    9. '   ' → logprob: -18.879079818725586
    10. ' ' → logprob: -19.004079818725586

Token 171: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0619967095553875
    2. ' compute' → logprob: -2.8119966983795166
    3. '   ' → logprob: -10.561996459960938
    4. '.compute' → logprob: -13.561996459960938
    5. 'e' → logprob: -13.811996459960938
    6. '_compute' → logprob: -14.561996459960938
    7. '```' → logprob: -16.811996459960938
    8. ' e' → logprob: -16.936996459960938
    9. 'computer' → logprob: -16.936996459960938
    10. 'computed' → logprob: -17.436996459960938

Token 172: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -5.512236498361744e-07
    2. 'diff' → logprob: -15.000000953674316
    3. '_' → logprob: -16.625
    4. '_d' → logprob: -17.625
    5. '_difference' → logprob: -18.75
    6. '_DIFF' → logprob: -18.875
    7. 'Diff' → logprob: -19.625
    8. ' _' → logprob: -19.75
    9. ' diff' → logprob: -19.75
    10. '	diff' → logprob: -20.125

Token 173: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -5.2524021157296374e-05
    2. '(' → logprob: -9.875052452087402
    3. '(w' → logprob: -14.375052452087402
    4. ' (' → logprob: -15.000052452087402
    5. '((' → logprob: -19.00005340576172
    6. '(
' → logprob: -19.25005340576172
    7. 'e' → logprob: -19.25005340576172
    8. 'w' → logprob: -20.37505340576172
    9. '(s' → logprob: -21.00005340576172
    10. '(E' → logprob: -21.12505340576172

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012833021173719317
    2. ' ,' → logprob: -9.500128746032715
    3. ',w' → logprob: -9.875128746032715
    4. 'w' → logprob: -13.500128746032715
    5. '   ' → logprob: -15.250128746032715
    6. ',
' → logprob: -16.5001277923584
    7. ',e' → logprob: -17.0001277923584
    8. ')' → logprob: -17.6251277923584
    9. ' ' → logprob: -17.8751277923584
    10. 'e' → logprob: -18.0001277923584

Token 175: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.3868735730648041
    2. 'w' → logprob: -1.1368736028671265
    3. '    ' → logprob: -13.761873245239258
    4. ')' → logprob: -14.886873245239258
    5. '   ' → logprob: -15.011873245239258
    6. '	w' → logprob: -15.011873245239258
    7. ' ' → logprob: -15.386873245239258
    8. ' ' → logprob: -16.011873245239258
    9. '(w' → logprob: -17.136873245239258
    10. 'e' → logprob: -17.136873245239258

Token 176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00523719098418951
    2. ')
' → logprob: -5.255237102508545
    3. '   ' → logprob: -13.505237579345703
    4. ')

' → logprob: -13.880237579345703
    5. ')
' → logprob: -14.005237579345703
    6. ' )' → logprob: -16.255237579345703
    7. ')e' → logprob: -17.505237579345703
    8. ')\' → logprob: -17.630237579345703
    9. '),' → logprob: -17.880237579345703
    10. ' ' → logprob: -18.505237579345703

Token 177: '   ' (ID: 271)
  Prédit: ' true'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' true' → logprob: -0.46506431698799133
    2. '   ' → logprob: -1.465064287185669
    3. 'true' → logprob: -1.965064287185669
    4. '
' → logprob: -7.465064525604248
    5. '_true' → logprob: -10.59006404876709
    6. '    ' → logprob: -10.84006404876709
    7. ' ' → logprob: -11.09006404876709
    8. '  ' → logprob: -11.46506404876709
    9. '	true' → logprob: -11.59006404876709
    10. '```' → logprob: -11.84006404876709

Token 178: ' true' (ID: 1343)
  Prédit: ' true'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' true' → logprob: -0.22870172560214996
    2. 'true' (adapté à ' true') → logprob: -1.6037017107009888
    3. '   ' → logprob: -5.728701591491699
    4. '
' → logprob: -11.3537015914917
    5. 'True' → logprob: -12.4787015914917
    6. '_true' → logprob: -12.7287015914917
    7. ' total' → logprob: -13.1037015914917
    8. 'total' → logprob: -13.4787015914917
    9. ' True' → logprob: -13.4787015914917
    10. ' ' → logprob: -13.7287015914917

Token 179: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -3.106736039626412e-05
    2. '_he' → logprob: -10.500031471252441
    3. '_' → logprob: -12.750031471252441
    4. ' _' → logprob: -15.125031471252441
    5. '_length' → logprob: -15.750031471252441
    6. 'height' → logprob: -17.000030517578125
    7. '   ' → logprob: -17.250030517578125
    8. '_depth' → logprob: -17.250030517578125
    9. '_width' → logprob: -17.625030517578125
    10. '_total' → logprob: -17.625030517578125

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048589304089546204
    2. '=' → logprob: -3.0485892295837402
    3. '   ' → logprob: -14.173589706420898
    4. ' ' → logprob: -14.673589706420898
    5. '_' → logprob: -14.673589706420898
    6. ' ' → logprob: -15.673589706420898
    7. 's' → logprob: -16.0485897064209
    8. ',' → logprob: -16.9235897064209
    9. ')' → logprob: -17.1735897064209
    10. '(' → logprob: -17.5485897064209

Token 181: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.10021184384822845
    2. 'sum' → logprob: -2.3502118587493896
    3. '   ' → logprob: -12.475212097167969
    4. '(sum' → logprob: -14.850212097167969
    5. '	sum' → logprob: -14.850212097167969
    6. ' ' → logprob: -15.225212097167969
    7. ' diff' → logprob: -15.850212097167969
    8. '.sum' → logprob: -16.97521209716797
    9. 'diff' → logprob: -16.97521209716797
    10. '  ' → logprob: -17.22521209716797

Token 182: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -1.3856492842023727e-06
    2. '_height' → logprob: -13.875000953674316
    3. 'he' → logprob: -14.875000953674316
    4. 's' → logprob: -17.375001907348633
    5. '_diff' → logprob: -18.500001907348633
    6. 'He' → logprob: -18.750001907348633
    7. '(_' → logprob: -19.250001907348633
    8. '(' → logprob: -19.750001907348633
    9. '```' → logprob: -19.875001907348633
    10. '_' → logprob: -20.250001907348633

Token 183: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -0.0009168167016468942
    2. 'ight' → logprob: -7.000916957855225
    3. 'ig' → logprob: -12.375916481018066
    4. 'igh' → logprob: -14.750916481018066
    5. 'i' → logprob: -15.250916481018066
    6. '   ' → logprob: -16.250917434692383
    7. 'ght' → logprob: -16.500917434692383
    8. '_' → logprob: -16.750917434692383
    9. 'IGHTS' → logprob: -16.875917434692383
    10. '```' → logprob: -17.375917434692383

Token 184: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.625001907348633
    3. ' (' → logprob: -14.500001907348633
    4. 'diff' → logprob: -19.625001907348633
    5. '	diff' → logprob: -19.875001907348633
    6. '(div' → logprob: -21.000001907348633
    7. ' diff' → logprob: -21.250001907348633
    8. '(def' → logprob: -21.250001907348633
    9. '(d' → logprob: -21.625001907348633
    10. '(dist' → logprob: -22.000001907348633

Token 185: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06253547221422195
    2. ')' → logprob: -2.812535524368286
    3. ',e' → logprob: -7.812535285949707
    4. ')
' → logprob: -9.562535285949707
    5. '   ' → logprob: -10.187535285949707
    6. ' ,' → logprob: -10.437535285949707
    7. ',
' → logprob: -11.187535285949707
    8. ',)' → logprob: -12.562535285949707
    9. ')e' → logprob: -12.937535285949707
    10. ' )' → logprob: -13.312535285949707

Token 186: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6694136261940002
    2. '   ' → logprob: -0.9194136261940002
    3. ' result' → logprob: -2.4194135665893555
    4. '
' → logprob: -8.794413566589355
    5. '	result' → logprob: -10.419413566589355
    6. 'print' → logprob: -10.419413566589355
    7. '```' → logprob: -10.544413566589355
    8. '_result' → logprob: -11.544413566589355
    9. '    
' → logprob: -12.669413566589355
    10. '  ' → logprob: -12.794413566589355

Token 187: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -5.2762428822461516e-05
    2. ' result' → logprob: -10.000052452087402
    3. '   ' → logprob: -11.875052452087402
    4. 'print' → logprob: -15.250052452087402
    5. 'res' → logprob: -17.00005340576172
    6. '	result' → logprob: -17.87505340576172
    7. '_result' → logprob: -17.87505340576172
    8. '
' → logprob: -18.87505340576172
    9. 'resultado' → logprob: -19.50005340576172
    10. '(result' → logprob: -19.75005340576172

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015079588629305363
    2. '=' → logprob: -6.501507759094238
    3. ' ' → logprob: -12.376507759094238
    4. ')' → logprob: -14.751507759094238
    5. '_' → logprob: -15.251507759094238
    6. '   ' → logprob: -15.376507759094238
    7. ' ' → logprob: -15.751507759094238
    8. '  ' → logprob: -15.876507759094238
    9. '(' → logprob: -16.001508712768555
    10. '	' → logprob: -16.626508712768555

Token 189: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.4740793704986572
    2. ' compute' → logprob: -0.9740793704986572
    3. '   ' → logprob: -13.099079132080078
    4. '.compute' → logprob: -15.099079132080078
    5. '_compute' → logprob: -16.599079132080078
    6. 'computer' → logprob: -18.349079132080078
    7. ' ' → logprob: -18.474079132080078
    8. '    ' → logprob: -18.974079132080078
    9. '  ' → logprob: -19.099079132080078
    10. ' computer' → logprob: -19.724079132080078

Token 190: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.128163257315464e-07
    2. 'result' → logprob: -15.125
    3. '_res' → logprob: -19.0
    4. '_results' → logprob: -19.25
    5. '_RESULT' → logprob: -20.25
    6. '__' → logprob: -21.875
    7. '_' → logprob: -22.0
    8. 'Result' → logprob: -22.0
    9. '_Result' → logprob: -22.25
    10. ' _' → logprob: -22.625

Token 191: '(true' (ID: 6338)
  Prédit: '(true'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(true' → logprob: -1.8624639324116288e-06
    2. 'true' → logprob: -13.750001907348633
    3. '(True' → logprob: -14.875001907348633
    4. '(' → logprob: -15.250001907348633
    5. ' true' → logprob: -16.125001907348633
    6. ',true' → logprob: -17.750001907348633
    7. '	true' → logprob: -17.750001907348633
    8. ' (' → logprob: -17.875001907348633
    9. '(false' → logprob: -18.625001907348633
    10. '(
' → logprob: -20.625001907348633

Token 192: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -6.704273118884885e-07
    2. 'height' → logprob: -14.375000953674316
    3. '_he' → logprob: -17.625
    4. 't' → logprob: -18.75
    5. '_true' → logprob: -19.375
    6. '_HEIGHT' → logprob: -19.5
    7. '(height' → logprob: -20.5
    8. 'Height' → logprob: -20.875
    9. '_width' → logprob: -21.125
    10. '\' → logprob: -21.125

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015538577281404287
    2. ' ,' → logprob: -9.000155448913574
    3. ',e' → logprob: -10.375155448913574
    4. ')' → logprob: -15.125155448913574
    5. ',
' → logprob: -15.875155448913574
    6. 'e' → logprob: -16.250154495239258
    7. '   ' → logprob: -16.250154495239258
    8. ',w' → logprob: -17.500154495239258
    9. ' e' → logprob: -17.875154495239258
    10. ' ' → logprob: -18.250154495239258

Token 194: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.20142073929309845
    2. 'e' → logprob: -1.701420783996582
    3. '	e' → logprob: -12.701420783996582
    4. '   ' → logprob: -12.826420783996582
    5. ' ' → logprob: -13.951420783996582
    6. '    ' → logprob: -15.451420783996582
    7. ')e' → logprob: -15.826420783996582
    8. ')' → logprob: -15.951420783996582
    9. ' ' → logprob: -16.701419830322266
    10. '  ' → logprob: -16.826419830322266

Token 195: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024762547109276056
    2. ')
' → logprob: -6.002476215362549
    3. ')
' → logprob: -15.377476692199707
    4. '   ' → logprob: -16.00247573852539
    5. ')

' → logprob: -16.00247573852539
    6. ' )' → logprob: -16.62747573852539
    7. ')`' → logprob: -18.25247573852539
    8. ')\
' → logprob: -19.25247573852539
    9. '),' → logprob: -19.50247573852539
    10. ')`
' → logprob: -19.75247573852539

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007982061244547367
    2. 'print' → logprob: -4.88298225402832
    3. '
' → logprob: -8.50798225402832
    4. ' print' → logprob: -9.13298225402832
    5. '    
' → logprob: -9.88298225402832
    6. '(print' → logprob: -12.88298225402832
    7. '  ' → logprob: -12.88298225402832
    8. '	print' → logprob: -13.25798225402832
    9. '```' → logprob: -13.25798225402832
    10. '  
' → logprob: -13.50798225402832

Token 197: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00019889144459739327
    2. ' print' → logprob: -9.000199317932129
    3. '   ' → logprob: -9.500199317932129
    4. '(print' → logprob: -15.375199317932129
    5. ')' → logprob: -15.500199317932129
    6. '
' → logprob: -15.625199317932129
    7. ' ' → logprob: -17.375198364257812
    8. '_print' → logprob: -17.750198364257812
    9. '```' → logprob: -17.875198364257812
    10. '.print' → logprob: -17.875198364257812

Token 198: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.625000953674316
    3. '(result' → logprob: -16.375
    4. 'result' → logprob: -16.5
    5. ' _' → logprob: -17.25
    6. '(_' → logprob: -17.375
    7. '(' → logprob: -18.875
    8. '_results' → logprob: -19.5
    9. '_RESULT' → logprob: -19.5
    10. '_res' → logprob: -19.75

Token 199: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -7.226628895296017e-06
    2. '(' → logprob: -12.125007629394531
    3. ' (' → logprob: -13.500007629394531
    4. '(results' → logprob: -15.625007629394531
    5. 'result' → logprob: -16.00000762939453
    6. '(res' → logprob: -18.37500762939453
    7. '(resultado' → logprob: -18.37500762939453
    8. ' result' → logprob: -19.25000762939453
    9. ',result' → logprob: -19.37500762939453
    10. '(response' → logprob: -19.50000762939453

Token 200: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ')
' → logprob: -12.375005722045898
    3. '()' → logprob: -14.000005722045898
    4. '())' → logprob: -14.500005722045898
    5. ' )' → logprob: -16.5000057220459
    6. ')`' → logprob: -16.5000057220459
    7. '))' → logprob: -16.8750057220459
    8. ')

' → logprob: -17.5000057220459
    9. ')**' → logprob: -18.5000057220459
    10. '(' → logprob: -18.7500057220459

Token 201: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03933148458600044
    2. 'main' → logprob: -3.5393314361572266
    3. '
' → logprob: -4.914331436157227
    4. '\n' → logprob: -6.289331436157227
    5. '\' → logprob: -8.914331436157227
    6. '(main' → logprob: -9.789331436157227
    7. ' if' → logprob: -9.914331436157227
    8. ' main' → logprob: -10.914331436157227
    9. '_
' → logprob: -10.914331436157227
    10. '_' → logprob: -11.164331436157227

Token 202: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 200
Tokens correctement prédits (1ère position, stricte): 88
Tokens correctement prédits (1ère position, avec adaptation): 95
Tokens correctement prédits (top 10): 165
Précision stricte (1ère position): 44.00%
Précision adaptée (1ère position): 47.50%
Précision (top 10): 82.50%
================================================================================
