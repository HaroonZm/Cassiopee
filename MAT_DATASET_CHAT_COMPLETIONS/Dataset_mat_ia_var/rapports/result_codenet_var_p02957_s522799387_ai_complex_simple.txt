================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add, mod, floordiv

s = list(map(lambda x: int(x), input().split()))
parity_check = lambda lst: reduce(mod, [reduce(add, lst), 2])
means = lambda lst: reduce(floordiv, [reduce(add, lst), 2])
print([means(s), 'IMPOSSIBLE'][parity_check(s)])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010288605466485023
    2. '(lambda' → logprob: -4.760288715362549
    3. ' (' → logprob: -7.385288715362549
    4. ',' → logprob: -7.885288715362549
    5. 'def' → logprob: -8.13528823852539
    6. '.' → logprob: -8.76028823852539
    7. '```' → logprob: -10.13528823852539
    8. '(
' → logprob: -10.51028823852539
    9. 'lambda' → logprob: -10.63528823852539
    10. 'a' → logprob: -10.76028823852539

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.042372774332761765
    2. 'def' → logprob: -3.667372703552246
    3. '\' → logprob: -4.542372703552246
    4. ',' → logprob: -6.417372703552246
    5. '(
' → logprob: -7.292372703552246
    6. '```' → logprob: -7.542372703552246
    7. '(lambda' → logprob: -7.667372703552246
    8. '\(' → logprob: -7.917372703552246
    9. ' ' → logprob: -8.792372703552246
    10. '\n' → logprob: -8.792372703552246

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.5336539149284363
    2. ' math' → logprob: -1.158653974533081
    3. ' itertools' → logprob: -2.658653974533081
    4. ' collections' → logprob: -3.783653974533081
    5. 'operator' → logprob: -5.408653736114502
    6. ' os' → logprob: -7.033653736114502
    7. 'math' → logprob: -7.033653736114502
    8. ' ' → logprob: -8.28365421295166
    9. ' typing' → logprob: -8.78365421295166
    10. 'collections' → logprob: -9.15865421295166

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.036756373941898346
    2. 'import' → logprob: -3.4117562770843506
    3. ' ' → logprob: -6.28675651550293
    4. '.' → logprob: -6.78675651550293
    5. ' .' → logprob: -10.16175651550293
    6. '.import' → logprob: -10.16175651550293
    7. '	import' → logprob: -11.41175651550293
    8. '_import' → logprob: -11.91175651550293
    9. '<|end|>' → logprob: -12.53675651550293
    10. ',' → logprob: -12.91175651550293

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.30121177434921265
    2. ' import' → logprob: -1.8012118339538574
    3. ' mul' → logprob: -3.0512118339538574
    4. 'add' → logprob: -3.8012118339538574
    5. ' ' → logprob: -4.051211833953857
    6. 'import' → logprob: -5.426211833953857
    7. 'mul' → logprob: -6.301211833953857
    8. ' item' → logprob: -7.051211833953857
    9. ' icon' → logprob: -8.4262113571167
    10. '```' → logprob: -9.3012113571167

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05271875485777855
    2. '(
' → logprob: -4.052718639373779
    3. ',' → logprob: -4.552718639373779
    4. '\n' → logprob: -4.677718639373779
    5. '\' → logprob: -4.802718639373779
    6. '#' → logprob: -6.677718639373779
    7. '`' → logprob: -6.802718639373779
    8. '
' → logprob: -7.677718639373779
    9. '()' → logprob: -7.802718639373779
    10. ' ' → logprob: -7.927718639373779

Token 10: ' mod' (ID: 1812)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.5010895729064941
    2. ' mul' → logprob: -1.0010895729064941
    3. 'sub' → logprob: -4.001089572906494
    4. ' sub' → logprob: -5.001089572906494
    5. 'i' → logprob: -7.876089572906494
    6. ' i' → logprob: -8.001089096069336
    7. '```' → logprob: -8.001089096069336
    8. 'getitem' → logprob: -8.501089096069336
    9. 'item' → logprob: -9.501089096069336
    10. ' ' → logprob: -9.501089096069336

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13852792978286743
    2. '(
' → logprob: -2.6385278701782227
    3. '\' → logprob: -3.3885278701782227
    4. ',' → logprob: -4.763527870178223
    5. 'def' → logprob: -5.138527870178223
    6. '\n' → logprob: -6.138527870178223
    7. '`' → logprob: -6.388527870178223
    8. '```' → logprob: -6.888527870178223
    9. '\(' → logprob: -7.263527870178223
    10. '(

' → logprob: -7.513527870178223

Token 12: ' flo' (ID: 15037)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.05200649052858353
    2. 'mul' → logprob: -3.427006483078003
    3. ' pow' → logprob: -4.677006721496582
    4. 'pow' → logprob: -4.802006721496582
    5. ' xor' → logprob: -8.177006721496582
    6. ' ' → logprob: -8.927006721496582
    7. ' sub' → logprob: -9.802006721496582
    8. 'xor' → logprob: -10.677006721496582
    9. '1' → logprob: -10.927006721496582
    10. ' tr' → logprob: -11.052006721496582

Token 13: 'ord' (ID: 604)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6938838958740234
    2. 'ord' → logprob: -0.6938838958740234
    3. 'o' → logprob: -8.193883895874023
    4. 'od' → logprob: -8.443883895874023
    5. 'orm' → logprob: -8.443883895874023
    6. 'r' → logprob: -11.068883895874023
    7. '```' → logprob: -12.193883895874023
    8. '``' → logprob: -13.318883895874023
    9. '

' → logprob: -14.068883895874023
    10. '(or' → logprob: -14.193883895874023

Token 14: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -5.438573680294212e-06
    2. 'vision' → logprob: -12.750005722045898
    3. 'v' → logprob: -13.375005722045898
    4. 'i' → logprob: -14.375005722045898
    5. 'vi' → logprob: -16.6250057220459
    6. 'div' → logprob: -17.0000057220459
    7. 'ivid' → logprob: -17.1250057220459
    8. 'vide' → logprob: -17.1250057220459
    9. 'or' → logprob: -17.3750057220459
    10. '```' → logprob: -17.3750057220459

Token 15: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.817565381526947
    2. 'def' → logprob: -1.6925654411315918
    3. '#' → logprob: -1.9425654411315918
    4. '\' → logprob: -2.692565441131592
    5. '\n' → logprob: -3.067565441131592
    6. ',' → logprob: -3.442565441131592
    7. 'a' → logprob: -4.067565441131592
    8. '(
' → logprob: -4.067565441131592
    9. '`' → logprob: -4.692565441131592
    10. '*' → logprob: -4.692565441131592

Token 16: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2790625989437103
    2. 'def' → logprob: -2.654062509536743
    3. '#' → logprob: -2.904062509536743
    4. ',' → logprob: -3.904062509536743
    5. '[' → logprob: -3.904062509536743
    6. '`' → logprob: -4.404062747955322
    7. ')' → logprob: -4.529062747955322
    8. 'a' → logprob: -4.779062747955322
    9. '(
' → logprob: -5.279062747955322
    10. '_' → logprob: -5.404062747955322

Token 17: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3378223478794098
    2. 'um' → logprob: -1.7128223180770874
    3. 'e' → logprob: -3.087822437286377
    4. 'q' → logprob: -4.337822437286377
    5. 't' → logprob: -4.462822437286377
    6. '(' → logprob: -4.837822437286377
    7. 'et' → logprob: -4.837822437286377
    8. '=' → logprob: -5.587822437286377
    9. 'tr' → logprob: -5.837822437286377
    10. ' =' → logprob: -5.962822437286377

Token 18: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6163673400878906
    2. '[' → logprob: -1.9913673400878906
    3. ' '' → logprob: -2.7413673400878906
    4. ' "' → logprob: -2.8663673400878906
    5. ' ' → logprob: -3.1163673400878906
    6. ''' → logprob: -3.3663673400878906
    7. '"' → logprob: -3.4913673400878906
    8. ' lambda' → logprob: -3.8663673400878906
    9. ' []' → logprob: -4.491367340087891
    10. 'range' → logprob: -4.866367340087891

Token 19: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04454844817519188
    2. '(range' → logprob: -3.669548511505127
    3. '(s' → logprob: -4.419548511505127
    4. 's' → logprob: -5.919548511505127
    5. '(lambda' → logprob: -7.044548511505127
    6. '(map' → logprob: -7.919548511505127
    7. '(filter' → logprob: -8.169548034667969
    8. '(str' → logprob: -8.169548034667969
    9. '(int' → logprob: -8.419548034667969
    10. '((' → logprob: -8.794548034667969

Token 20: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.802076518535614
    2. '(' → logprob: -1.4270765781402588
    3. '(str' → logprob: -1.4270765781402588
    4. '(int' → logprob: -2.927076578140259
    5. '(abs' → logprob: -4.67707633972168
    6. '(f' → logprob: -5.42707633972168
    7. '(add' → logprob: -6.42707633972168
    8. ')' → logprob: -7.42707633972168
    9. '(
' → logprob: -8.05207633972168
    10. '(eval' → logprob: -8.05207633972168

Token 21: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06523407995700836
    2. 'x' → logprob: -2.8152341842651367
    3. ' n' → logprob: -6.065234184265137
    4. ' a' → logprob: -8.315234184265137
    5. ' ' → logprob: -8.565234184265137
    6. ' i' → logprob: -8.940234184265137
    7. 'n' → logprob: -9.440234184265137
    8. ' s' → logprob: -9.565234184265137
    9. 'a' → logprob: -9.815234184265137
    10. ' lambda' → logprob: -10.565234184265137

Token 22: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021224871277809143
    2. ' :' → logprob: -3.8962249755859375
    3. ',' → logprob: -7.6462249755859375
    4. ' x' → logprob: -9.896224975585938
    5. ':x' → logprob: -10.021224975585938
    6. 's' → logprob: -10.146224975585938
    7. ' ,' → logprob: -10.271224975585938
    8. 'x' → logprob: -11.146224975585938
    9. ':int' → logprob: -12.771224975585938
    10. ':
' → logprob: -13.021224975585938

Token 23: ' int' (ID: 677)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.6312084794044495
    2. ' add' → logprob: -1.8812084197998047
    3. 'mod' → logprob: -2.5062084197998047
    4. 'flo' → logprob: -2.5062084197998047
    5. 'add' → logprob: -3.1312084197998047
    6. ' x' → logprob: -3.1312084197998047
    7. 'x' → logprob: -3.5062084197998047
    8. ' flo' → logprob: -4.381208419799805
    9. '(x' → logprob: -5.006208419799805
    10. '(add' → logprob: -6.006208419799805

Token 24: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.34929633140563965
    2. '(' → logprob: -1.2242963314056396
    3. '(s' → logprob: -8.099296569824219
    4. ')' → logprob: -8.349296569824219
    5. ',' → logprob: -9.349296569824219
    6. 'x' → logprob: -9.474296569824219
    7. ' ' → logprob: -9.724296569824219
    8. '(`' → logprob: -11.349296569824219
    9. ' (' → logprob: -11.724296569824219
    10. '(token' → logprob: -11.974296569824219

Token 25: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.10406532138586044
    2. ')' → logprob: -2.479065418243408
    3. '**' → logprob: -5.354065418243408
    4. ',' → logprob: -6.229065418243408
    5. ')))' → logprob: -6.229065418243408
    6. '*' → logprob: -6.354065418243408
    7. ' ),' → logprob: -7.229065418243408
    8. ' ' → logprob: -7.354065418243408
    9. '+' → logprob: -7.604065418243408
    10. ''),' → logprob: -7.729065418243408

Token 26: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5931355357170105
    2. 'input' → logprob: -0.8431355357170105
    3. ''' → logprob: -4.968135356903076
    4. ' '' → logprob: -4.968135356903076
    5. ''s' → logprob: -7.468135356903076
    6. '"' → logprob: -8.093135833740234
    7. '['' → logprob: -8.093135833740234
    8. '[' → logprob: -8.218135833740234
    9. ' s' → logprob: -8.218135833740234
    10. ' ['' → logprob: -8.343135833740234

Token 27: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -1.1121746301651
    2. '(' → logprob: -1.2371746301651
    3. '()' → logprob: -1.6121746301651
    4. '()))' → logprob: -1.8621746301651
    5. '('' → logprob: -4.8621745109558105
    6. '()));' → logprob: -5.3621745109558105
    7. '())))' → logprob: -5.6121745109558105
    8. '(()' → logprob: -5.8621745109558105
    9. '(""))' → logprob: -5.8621745109558105
    10. '());' → logprob: -6.6121745109558105

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.023412950336933136
    2. 'strip' → logprob: -3.7734129428863525
    3. 'rstrip' → logprob: -9.023412704467773
    4. ' split' → logprob: -10.148412704467773
    5. 'read' → logprob: -12.523412704467773
    6. ')' → logprob: -13.398412704467773
    7. ' strip' → logprob: -13.648412704467773
    8. '(split' → logprob: -14.648412704467773
    9. 'replace' → logprob: -15.023412704467773
    10. 'spl' → logprob: -15.148412704467773

Token 29: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2746291160583496
    2. '())' → logprob: -1.2746291160583496
    3. '()))' → logprob: -1.5246291160583496
    4. '))' → logprob: -1.6496291160583496
    5. '(' → logprob: -4.39962911605835
    6. ')))' → logprob: -4.52462911605835
    7. '()' → logprob: -5.27462911605835
    8. '())))' → logprob: -6.02462911605835
    9. '('' → logprob: -8.774629592895508
    10. '),' → logprob: -10.024629592895508

Token 30: 'par' (ID: 796)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6596509218215942
    2. '[' → logprob: -1.7846509218215942
    3. 'result' → logprob: -1.7846509218215942
    4. 'a' → logprob: -2.9096508026123047
    5. 'n' → logprob: -3.0346508026123047
    6. '\n' → logprob: -3.2846508026123047
    7. ')' → logprob: -3.4096508026123047
    8. '#' → logprob: -3.4096508026123047
    9. 'for' → logprob: -3.6596508026123047
    10. '+
' → logprob: -3.6596508026123047

Token 31: 'ity' (ID: 536)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4179292619228363
    2. 'ity' → logprob: -1.7929292917251587
    3. 'ty' → logprob: -2.042929172515869
    4. 'ent' → logprob: -3.917929172515869
    5. 'am' → logprob: -5.167929172515869
    6. 'ts' → logprob: -5.292929172515869
    7. 'e' → logprob: -5.542929172515869
    8. 'ams' → logprob: -6.042929172515869
    9. 's' → logprob: -6.292929172515869
    10. 'sum' → logprob: -6.542929172515869

Token 32: '_check' (ID: 15847)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7853469252586365
    2. '_' → logprob: -1.1603469848632812
    3. '=' → logprob: -2.1603469848632812
    4. ' =' → logprob: -2.6603469848632812
    5. '(' → logprob: -3.4103469848632812
    6. ')' → logprob: -5.160346984863281
    7. '(s' → logprob: -6.160346984863281
    8. '[' → logprob: -6.660346984863281
    9. '()' → logprob: -7.035346984863281
    10. ' ' → logprob: -7.285346984863281

Token 33: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23164048790931702
    2. ' =' → logprob: -2.606640577316284
    3. '=' → logprob: -3.106640577316284
    4. '_' → logprob: -3.106640577316284
    5. 's' → logprob: -3.481640577316284
    6. '(s' → logprob: -4.606640338897705
    7. '_s' → logprob: -7.106640338897705
    8. ')' → logprob: -8.106640815734863
    9. ' ' → logprob: -8.231640815734863
    10. '()' → logprob: -9.356640815734863

Token 34: ' lambda' (ID: 27871)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.6970150470733643
    2. ' reduce' → logprob: -1.6970150470733643
    3. ' lambda' → logprob: -2.1970150470733643
    4. 'lambda' → logprob: -2.6970150470733643
    5. '(lambda' → logprob: -3.0720150470733643
    6. 'mod' → logprob: -3.3220150470733643
    7. ' mod' → logprob: -3.4470150470733643
    8. '[' → logprob: -5.322014808654785
    9. 'list' → logprob: -5.572014808654785
    10. 'flo' → logprob: -6.197014808654785

Token 35: ' lst' (ID: 33384)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.28153058886528015
    2. 'x' → logprob: -1.4065306186676025
    3. ' s' → logprob: -9.031530380249023
    4. ' n' → logprob: -9.406530380249023
    5. 's' → logprob: -9.906530380249023
    6. ' lst' → logprob: -10.156530380249023
    7. 'n' → logprob: -10.281530380249023
    8. ' a' → logprob: -11.156530380249023
    9. 'a' → logprob: -11.281530380249023
    10. ' ' → logprob: -12.031530380249023

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006914991419762373
    2. ' :' → logprob: -5.006915092468262
    3. ':list' → logprob: -9.006915092468262
    4. '[' → logprob: -10.881915092468262
    5. 's' → logprob: -11.006915092468262
    6. ',' → logprob: -11.506915092468262
    7. ' lst' → logprob: -11.631915092468262
    8. '[:' → logprob: -12.381915092468262
    9. 'lst' → logprob: -12.506915092468262
    10. '[:]' → logprob: -12.756915092468262

Token 37: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -1.0031461715698242
    2. 'reduce' → logprob: -1.1281461715698242
    3. ' all' → logprob: -1.5031461715698242
    4. 'all' → logprob: -2.628146171569824
    5. ' sum' → logprob: -5.753146171569824
    6. ' list' → logprob: -6.128146171569824
    7. 'sum' → logprob: -6.128146171569824
    8. 'list' → logprob: -6.128146171569824
    9. '[' → logprob: -7.003146171569824
    10. ' not' → logprob: -7.878146171569824

Token 38: '(mod' (ID: 45051)
  Prédit: '(add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.4778478741645813
    2. '(lambda' → logprob: -1.2278478145599365
    3. '(mod' → logprob: -2.7278478145599365
    4. '(' → logprob: -3.8528478145599365
    5. '(f' → logprob: -7.977848052978516
    6. '(operator' → logprob: -11.227848052978516
    7. '(par' → logprob: -12.102848052978516
    8. '(
' → logprob: -12.352848052978516
    9. 'add' → logprob: -12.602848052978516
    10. 'mod' → logprob: -12.852848052978516

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005767141934484243
    2. ' ,' → logprob: -5.880767345428467
    3. '(add' → logprob: -6.130767345428467
    4. '(' → logprob: -8.130766868591309
    5. 'add' → logprob: -8.255766868591309
    6. ')' → logprob: -9.755766868591309
    7. ' (' → logprob: -10.130766868591309
    8. '),' → logprob: -10.630766868591309
    9. ',
' → logprob: -10.630766868591309
    10. ',(' → logprob: -11.130766868591309

Token 40: ' [' (ID: 723)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.6311278939247131
    2. 'map' → logprob: -1.1311278343200684
    3. 'list' → logprob: -2.7561278343200684
    4. '[' → logprob: -3.8811278343200684
    5. ' map' → logprob: -4.006127834320068
    6. ' lst' → logprob: -4.006127834320068
    7. 's' → logprob: -4.631127834320068
    8. '[s' → logprob: -5.756127834320068
    9. '[l' → logprob: -5.881127834320068
    10. ' [' → logprob: -5.881127834320068

Token 41: 'reduce' (ID: 49119)
  Prédit: 'reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.2936309278011322
    2. 'x' → logprob: -2.293630838394165
    3. 'add' → logprob: -3.043630838394165
    4. ' reduce' → logprob: -3.543630838394165
    5. 'elem' → logprob: -3.543630838394165
    6. ' x' → logprob: -4.918631076812744
    7. 'sum' → logprob: -5.293631076812744
    8. '   ' → logprob: -5.668631076812744
    9. 'flo' → logprob: -5.668631076812744
    10. 'el' → logprob: -5.918631076812744

Token 42: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.11110439151525497
    2. '(mod' → logprob: -2.7361044883728027
    3. '(f' → logprob: -4.236104488372803
    4. '(' → logprob: -4.236104488372803
    5. '(lambda' → logprob: -4.611104488372803
    6. ' (' → logprob: -6.986104488372803
    7. '(par' → logprob: -9.111104011535645
    8. 'add' → logprob: -9.611104011535645
    9. ' mod' → logprob: -9.736104011535645
    10. ' add' → logprob: -9.861104011535645

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0698765218257904
    2. ',(' → logprob: -3.0698764324188232
    3. '(' → logprob: -4.694876670837402
    4. '(lst' → logprob: -5.069876670837402
    5. ',l' → logprob: -6.819876670837402
    6. ' ,' → logprob: -7.319876670837402
    7. '(x' → logprob: -7.569876670837402
    8. ')(' → logprob: -7.569876670837402
    9. '),' → logprob: -7.569876670837402
    10. '(l' → logprob: -7.694876670837402

Token 44: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.5924457907676697
    2. 'lst' → logprob: -0.8424457907676697
    3. 's' → logprob: -4.8424458503723145
    4. ' s' → logprob: -5.0924458503723145
    5. '(lst' → logprob: -7.8424458503723145
    6. '[' → logprob: -8.092445373535156
    7. ' [' → logprob: -8.217445373535156
    8. 'x' → logprob: -8.404945373535156
    9. ' x' → logprob: -8.654945373535156
    10. ' ' → logprob: -8.842445373535156

Token 45: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7348420023918152
    2. '),' → logprob: -0.7348420023918152
    3. ')%' → logprob: -4.109841823577881
    4. ')])' → logprob: -4.109841823577881
    5. ')]' → logprob: -5.734841823577881
    6. ')],' → logprob: -6.234841823577881
    7. ',' → logprob: -6.609841823577881
    8. ' ),' → logprob: -7.359841823577881
    9. ' )' → logprob: -7.859841823577881
    10. '%' → logprob: -9.234842300415039

Token 46: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.060970209538936615
    2. ' ' → logprob: -2.9359703063964844
    3. 'len' → logprob: -6.310970306396484
    4. ' len' → logprob: -6.810970306396484
    5. '10' → logprob: -7.435970306396484
    6. 'reduce' → logprob: -8.060970306396484
    7. '   ' → logprob: -8.185970306396484
    8. '    ' → logprob: -8.560970306396484
    9. '3' → logprob: -8.685970306396484
    10. '  ' → logprob: -8.873470306396484

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05828646942973137
    2. ' ' → logprob: -3.308286428451538
    3. 'len' → logprob: -4.683286666870117
    4. ' len' → logprob: -5.683286666870117
    5. '10' → logprob: -6.433286666870117
    6. 'reduce' → logprob: -6.558286666870117
    7. '1' → logprob: -7.183286666870117
    8. '   ' → logprob: -7.558286666870117
    9. ' reduce' → logprob: -8.058286666870117
    10. '  ' → logprob: -8.183286666870117

Token 48: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.014301254414021969
    2. '],' → logprob: -5.139301300048828
    3. ')])' → logprob: -5.639301300048828
    4. ')' → logprob: -6.264301300048828
    5. ']' → logprob: -6.264301300048828
    6. ']))' → logprob: -7.889301300048828
    7. ' ])' → logprob: -8.514301300048828
    8. ')]' → logprob: -8.889301300048828
    9. '),' → logprob: -9.639301300048828
    10. '])]' → logprob: -9.764301300048828

Token 49: 'means' (ID: 100359)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01240393053740263
    2. '(' → logprob: -4.512403964996338
    3. '()' → logprob: -7.637403964996338
    4. '())' → logprob: -8.13740348815918
    5. ')
' → logprob: -8.63740348815918
    6. '(
' → logprob: -9.38740348815918
    7. ',' → logprob: -9.51240348815918
    8. '(s' → logprob: -10.13740348815918
    9. '
' → logprob: -10.13740348815918
    10. '))' → logprob: -10.51240348815918

Token 50: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013787695206701756
    2. '(' → logprob: -4.388787746429443
    3. ' )' → logprob: -7.763787746429443
    4. '(s' → logprob: -8.263787269592285
    5. ' ' → logprob: -8.763787269592285
    6. ',' → logprob: -9.763787269592285
    7. '=' → logprob: -9.888787269592285
    8. ')

' → logprob: -10.138787269592285
    9. 's' → logprob: -10.388787269592285
    10. '(
' → logprob: -10.388787269592285

Token 51: ' lambda' (ID: 27871)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.2320599555969238
    2. ' [' → logprob: -1.9820599555969238
    3. 'list' → logprob: -2.107059955596924
    4. '[' → logprob: -2.857059955596924
    5. '[s' → logprob: -2.857059955596924
    6. ' lambda' → logprob: -3.107059955596924
    7. 'flo' → logprob: -3.107059955596924
    8. '[f' → logprob: -3.232059955596924
    9. 'lambda' → logprob: -3.357059955596924
    10. '(lambda' → logprob: -3.482059955596924

Token 52: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.2508735656738281
    2. 'lst' → logprob: -1.6258735656738281
    3. ' lambda' → logprob: -5.125873565673828
    4. 'x' → logprob: -5.250873565673828
    5. ' x' → logprob: -5.250873565673828
    6. 'lambda' → logprob: -5.500873565673828
    7. 's' → logprob: -5.875873565673828
    8. ' s' → logprob: -7.125873565673828
    9. 'l' → logprob: -8.750873565673828
    10. ' l' → logprob: -9.000873565673828

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034145597368478775
    2. ' :' → logprob: -3.4091455936431885
    3. ':list' → logprob: -8.65914535522461
    4. '[' → logprob: -9.40914535522461
    5. '=' → logprob: -10.03414535522461
    6. ' sum' → logprob: -10.15914535522461
    7. '[:' → logprob: -10.78414535522461
    8. ',' → logprob: -11.03414535522461
    9. 'flo' → logprob: -11.15914535522461
    10. 'sum' → logprob: -11.15914535522461

Token 54: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.9838516712188721
    2. ' sum' → logprob: -1.108851671218872
    3. 'reduce' → logprob: -2.108851671218872
    4. 'sum' → logprob: -2.733851671218872
    5. 'flo' → logprob: -2.733851671218872
    6. ' flo' → logprob: -3.358851671218872
    7. ' int' → logprob: -6.483851432800293
    8. ' float' → logprob: -6.608851432800293
    9. ' [' → logprob: -6.858851432800293
    10. '[' → logprob: -6.983851432800293

Token 55: '(f' (ID: 1526)
  Prédit: '(add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.11787986755371094
    2. '(f' → logprob: -2.242879867553711
    3. '(lambda' → logprob: -5.742879867553711
    4. '(' → logprob: -6.742879867553711
    5. 'add' → logprob: -7.492879867553711
    6. 'flo' → logprob: -10.492879867553711
    7. '(operator' → logprob: -10.742879867553711
    8. '(div' → logprob: -11.367879867553711
    9. '(mod' → logprob: -11.492879867553711
    10. '```' → logprob: -11.617879867553711

Token 56: 'lo' (ID: 746)
  Prédit: 'lo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -6.704273118884885e-07
    2. 'l' → logprob: -15.250000953674316
    3. '(lo' → logprob: -15.625000953674316
    4. 'o' → logprob: -15.750000953674316
    5. 'le' → logprob: -16.5
    6. 'ro' → logprob: -17.75
    7. ' lo' → logprob: -18.125
    8. 'loat' → logprob: -19.0
    9. 'add' → logprob: -19.5
    10. 'la' → logprob: -19.625

Token 57: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.0042577809654176235
    2. 'r' → logprob: -6.254257678985596
    3. 'div' → logprob: -7.379257678985596
    4. 'ird' → logprob: -7.379257678985596
    5. 'rd' → logprob: -7.379257678985596
    6. 'ld' → logprob: -8.379258155822754
    7. 'or' → logprob: -9.129258155822754
    8. 'iv' → logprob: -10.004258155822754
    9. 'ard' → logprob: -10.754258155822754
    10. '#' → logprob: -11.879258155822754

Token 58: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.0009130131802521646
    2. 'div' → logprob: -7.000913143157959
    3. ' div' → logprob: -14.2509126663208
    4. 'vis' → logprob: -15.0009126663208
    5. 'v' → logprob: -15.5009126663208
    6. 'Div' → logprob: -15.6259126663208
    7. '_div' → logprob: -16.375913619995117
    8. '<div' → logprob: -18.250913619995117
    9. ' iv' → logprob: -18.250913619995117
    10. 'vid' → logprob: -18.375913619995117

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005850458517670631
    2. ' ,' → logprob: -6.255850315093994
    3. 'add' → logprob: -6.255850315093994
    4. '(add' → logprob: -7.005850315093994
    5. ' add' → logprob: -7.005850315093994
    6. ',sum' → logprob: -9.880850791931152
    7. ')add' → logprob: -10.755850791931152
    8. ',(' → logprob: -10.880850791931152
    9. ')' → logprob: -11.130850791931152
    10. '),' → logprob: -11.380850791931152

Token 60: ' [' (ID: 723)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.9108762145042419
    2. ' [' → logprob: -1.1608762741088867
    3. '[' → logprob: -1.5358762741088867
    4. '[
' → logprob: -4.035876274108887
    5. 's' → logprob: -4.160876274108887
    6. '[len' → logprob: -5.035876274108887
    7. ' lst' → logprob: -5.410876274108887
    8. ' s' → logprob: -5.535876274108887
    9. 'lst' → logprob: -5.535876274108887
    10. ' [
' → logprob: -5.660876274108887

Token 61: 'reduce' (ID: 49119)
  Prédit: 'reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.6674110889434814
    2. 'sum' → logprob: -0.7924110889434814
    3. ' sum' → logprob: -3.6674110889434814
    4. ' reduce' → logprob: -5.042410850524902
    5. '   ' → logprob: -6.917410850524902
    6. '    ' → logprob: -8.042410850524902
    7. ' ' → logprob: -8.667410850524902
    8. 're' → logprob: -8.792410850524902
    9. '(sum' → logprob: -8.917410850524902
    10. '  ' → logprob: -8.917410850524902

Token 62: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.0011796315666288137
    2. 'add' → logprob: -6.8761796951293945
    3. '(' → logprob: -9.251179695129395
    4. ' (' → logprob: -11.126179695129395
    5. '(lambda' → logprob: -11.501179695129395
    6. ' add' → logprob: -11.751179695129395
    7. '(ad' → logprob: -12.251179695129395
    8. '(sum' → logprob: -12.626179695129395
    9. ')add' → logprob: -13.126179695129395
    10. '   ' → logprob: -13.376179695129395

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006010498036630452
    2. ' ,' → logprob: -8.500600814819336
    3. '(lst' → logprob: -8.625600814819336
    4. ',l' → logprob: -9.625600814819336
    5. '(' → logprob: -10.000600814819336
    6. ',s' → logprob: -10.250600814819336
    7. 's' → logprob: -10.375600814819336
    8. ')' → logprob: -12.250600814819336
    9. '(s' → logprob: -12.500600814819336
    10. ' lst' → logprob: -12.500600814819336

Token 64: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.14230991899967194
    2. ' lst' → logprob: -2.1423099040985107
    3. 's' → logprob: -4.39231014251709
    4. '    ' → logprob: -7.39231014251709
    5. '(lst' → logprob: -7.64231014251709
    6. ',' → logprob: -7.76731014251709
    7. '[' → logprob: -7.89231014251709
    8. ' s' → logprob: -8.01731014251709
    9. '   ' → logprob: -8.76731014251709
    10. '[l' → logprob: -9.51731014251709

Token 65: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022052090615034103
    2. ',len' → logprob: -3.897052049636841
    3. ' ,' → logprob: -6.64705228805542
    4. '),' → logprob: -9.772051811218262
    5. 'len' → logprob: -10.397051811218262
    6. '(len' → logprob: -10.397051811218262
    7. '‌,' → logprob: -11.522051811218262
    8. ',n' → logprob: -11.522051811218262
    9. ',num' → logprob: -11.647051811218262
    10. ' len' → logprob: -11.772051811218262

Token 66: ' ' (ID: 220)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3133316934108734
    2. 'len' → logprob: -1.3133317232131958
    3. '	len' → logprob: -10.563331604003906
    4. ' ' → logprob: -10.938331604003906
    5. '    ' → logprob: -11.313331604003906
    6. '(len' → logprob: -11.563331604003906
    7. '[len' → logprob: -13.438331604003906
    8. ',len' → logprob: -13.938331604003906
    9. '   ' → logprob: -14.313331604003906
    10. '=len' → logprob: -15.438331604003906

Token 67: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.012551801279187202
    2. ' len' → logprob: -4.387551784515381
    3. ' ' → logprob: -10.887552261352539
    4. '    ' → logprob: -11.512552261352539
    5. '(len' → logprob: -12.512552261352539
    6. '   ' → logprob: -12.887552261352539
    7. '  ' → logprob: -12.887552261352539
    8. '	len' → logprob: -13.512552261352539
    9. '[len' → logprob: -14.387552261352539
    10. '2' → logprob: -14.762552261352539

Token 68: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.01456572487950325
    2. ')])' → logprob: -5.389565944671631
    3. ')' → logprob: -5.514565944671631
    4. ' ])' → logprob: -6.139565944671631
    5. ']' → logprob: -6.639565944671631
    6. ',' → logprob: -7.014565944671631
    7. '],' → logprob: -7.889565944671631
    8. '])
' → logprob: -8.389565467834473
    9. ')]' → logprob: -8.639565467834473
    10. ']))' → logprob: -8.889565467834473

Token 69: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004802126437425613
    2. '(' → logprob: -6.129802227020264
    3. ':' → logprob: -6.754802227020264
    4. '[' → logprob: -7.629802227020264
    5. ')
' → logprob: -8.129801750183105
    6. ' ' → logprob: -8.629801750183105
    7. ',' → logprob: -9.129801750183105
    8. '(
' → logprob: -10.129801750183105
    9. 's' → logprob: -10.379801750183105
    10. '*' → logprob: -10.379801750183105

Token 70: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002024758607149124
    2. '(s' → logprob: -7.5020246505737305
    3. '(print' → logprob: -7.6270246505737305
    4. '('' → logprob: -8.00202465057373
    5. '(paren' → logprob: -8.87702465057373
    6. '("("' → logprob: -9.37702465057373
    7. '((' → logprob: -9.50202465057373
    8. '(par' → logprob: -9.62702465057373
    9. ' (' → logprob: -9.87702465057373
    10. '(len' → logprob: -10.25202465057373

Token 71: 'means' (ID: 100359)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.22455094754695892
    2. 'means' → logprob: -2.34955096244812
    3. 's' → logprob: -3.09955096244812
    4. 'x' → logprob: -3.34955096244812
    5. 'int' → logprob: -5.099550724029541
    6. '1' → logprob: -5.474550724029541
    7. '(par' → logprob: -5.849550724029541
    8. ' parity' → logprob: -6.599550724029541
    9. 'max' → logprob: -6.849550724029541
    10. 'mean' → logprob: -7.099550724029541

Token 72: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00862521305680275
    2. '(' → logprob: -5.133625030517578
    3. ',' → logprob: -7.008625030517578
    4. 's' → logprob: -7.258625030517578
    5. '(lst' → logprob: -7.633625030517578
    6. ' (' → logprob: -7.758625030517578
    7. '(l' → logprob: -9.883625030517578
    8. '(x' → logprob: -10.758625030517578
    9. '(par' → logprob: -11.133625030517578
    10. '(n' → logprob: -11.508625030517578

Token 73: '),' (ID: 936)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.1042298823595047
    2. ')' → logprob: -2.8542299270629883
    3. '),' → logprob: -3.3542299270629883
    4. ',' → logprob: -5.604229927062988
    5. ')]' → logprob: -7.104229927062988
    6. ')],' → logprob: -7.104229927062988
    7. ')])
' → logprob: -7.229229927062988
    8. ' )' → logprob: -9.104229927062988
    9. ')])

' → logprob: -9.479229927062988
    10. ')s' → logprob: -9.729229927062988

Token 74: ' '' (ID: 461)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.08163116872310638
    2. ' parity' → logprob: -2.5816311836242676
    3. ' par' → logprob: -5.956631183624268
    4. '	par' → logprob: -9.70663070678711
    5. '(par' → logprob: -9.83163070678711
    6. ' ' → logprob: -11.58163070678711
    7. ' ' → logprob: -12.33163070678711
    8. '0' → logprob: -12.70663070678711
    9. 'Parity' → logprob: -12.95663070678711
    10. '1' → logprob: -12.95663070678711

Token 75: 'IMP' (ID: 67171)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.20747265219688416
    2. ' ',' → logprob: -2.457472562789917
    3. '',' → logprob: -2.457472562789917
    4. ' parity' → logprob: -5.332472801208496
    5. ''' → logprob: -5.832472801208496
    6. ' '' → logprob: -5.957472801208496
    7. '(par' → logprob: -7.207472801208496
    8. ',' → logprob: -7.332472801208496
    9. ' par' → logprob: -7.582472801208496
    10. ' ']' → logprob: -8.019972801208496

Token 76: 'OSS' (ID: 26496)
  Prédit: 'OSS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OSS' → logprob: -0.23475171625614166
    2. 'AR' → logprob: -1.7347517013549805
    3. 'OS' → logprob: -3.8597517013549805
    4. 'O' → logprob: -6.1097517013549805
    5. '']' → logprob: -6.6097517013549805
    6. '')' → logprob: -6.7347517013549805
    7. ''' → logprob: -7.1097517013549805
    8. 'ORT' → logprob: -7.1097517013549805
    9. 'ARA' → logprob: -7.1097517013549805
    10. 'AIR' → logprob: -7.6097517013549805

Token 77: 'IBLE' (ID: 22408)
  Prédit: 'IBLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IBLE' → logprob: -0.0016147232381626964
    2. 'LE' → logprob: -7.251614570617676
    3. 'IB' → logprob: -7.626614570617676
    4. 'I' → logprob: -9.126614570617676
    5. 'ILE' → logprob: -9.376614570617676
    6. 'IPLE' → logprob: -10.751614570617676
    7. 'IABLE' → logprob: -11.001614570617676
    8. 'IBE' → logprob: -11.126614570617676
    9. '1' → logprob: -11.251614570617676
    10. 'IBILITY' → logprob: -11.251614570617676

Token 78: ''][' (ID: 22110)
  Prédit: ''])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.007081668358296156
    2. '])' → logprob: -5.007081508636475
    3. '']' → logprob: -8.757081985473633
    4. '"])' → logprob: -9.007081985473633
    5. ''' → logprob: -10.382081985473633
    6. '')' → logprob: -10.507081985473633
    7. '',' → logprob: -11.757081985473633
    8. ']' → logprob: -12.507081985473633
    9. '']);' → logprob: -12.757081985473633
    10. ''])
' → logprob: -12.882081985473633

Token 79: 'par' (ID: 796)
  Prédit: 'par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.40113410353660583
    2. ' parity' → logprob: -1.7761341333389282
    3. ' not' → logprob: -2.1511340141296387
    4. 'not' → logprob: -3.5261340141296387
    5. ' par' → logprob: -4.401134014129639
    6. '(par' → logprob: -6.651134014129639
    7. ',' → logprob: -7.401134014129639
    8. ' ' → logprob: -8.401134490966797
    9. '[' → logprob: -8.401134490966797
    10. '(not' → logprob: -9.026134490966797

Token 80: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.5308278203010559
    2. 's' → logprob: -0.9058278203010559
    3. 'par' → logprob: -5.65582799911499
    4. 'ty' → logprob: -7.15582799911499
    5. ' s' → logprob: -7.65582799911499
    6. '[' → logprob: -8.030827522277832
    7. 'it' → logprob: -8.030827522277832
    8. '(par' → logprob: -8.405827522277832
    9. 'itty' → logprob: -8.405827522277832
    10. '(s' → logprob: -8.530827522277832

Token 81: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -0.00011081460979767144
    2. 'check' → logprob: -9.500110626220703
    3. 'y' → logprob: -11.625110626220703
    4. '_' → logprob: -12.875110626220703
    5. 'ity' → logprob: -12.875110626220703
    6. 'Check' → logprob: -12.875110626220703
    7. '(check' → logprob: -13.125110626220703
    8. '-check' → logprob: -13.375110626220703
    9. 's' → logprob: -13.500110626220703
    10. '

' → logprob: -13.625110626220703

Token 82: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00017278951418120414
    2. '(' → logprob: -9.25017261505127
    3. ')' → logprob: -10.25017261505127
    4. ' (' → logprob: -11.12517261505127
    5. '](' → logprob: -11.37517261505127
    6. ']' → logprob: -12.62517261505127
    7. ')(' → logprob: -12.75017261505127
    8. 's' → logprob: -13.25017261505127
    9. '(
' → logprob: -13.50017261505127
    10. '((' → logprob: -13.62517261505127

Token 83: ')])' (ID: 99066)
  Prédit: ')])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.19512420892715454
    2. ')' → logprob: -1.8201241493225098
    3. ')==' → logprob: -4.82012414932251
    4. ')]' → logprob: -5.32012414932251
    5. ')!=' → logprob: -6.82012414932251
    6. ')>' → logprob: -7.07012414932251
    7. ')])

' → logprob: -9.320124626159668
    8. ')])
' → logprob: -9.820124626159668
    9. ' )' → logprob: -10.195124626159668
    10. ')<' → logprob: -10.570124626159668


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 81
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 60
Précision stricte (1ère position): 45.68%
Précision adaptée (1ère position): 45.68%
Précision (top 10): 74.07%
================================================================================
