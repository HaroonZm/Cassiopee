================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools

def read_bingo_card():
    """
    Lit du clavier 3 lignes représentant la carte de bingo 3x3.
    Chaque ligne contient 3 entiers séparés par des espaces.

    Returns:
        list: une liste 2D (3x3) d'entiers représentant la carte de bingo.
    """
    bingo_card = []
    for _ in range(3):
        # Lire une ligne d'entrée, la diviser et convertir chaque élément en entier
        row = [int(i) for i in input().split()]
        bingo_card.append(row)
    return bingo_card

def read_called_numbers():
    """
    Lit la liste des nombres appelés.

    L'utilisateur saisit d'abord un entier N (le nombre de lignes de saisie).
    Ensuite, N lignes d'entrées sont lues, chacune pouvant contenir plusieurs entiers,
    tous les nombres sont collectés dans une simple liste d'entiers.

    Returns:
        list: une liste d'entiers représentant les numéros appelés.
    """
    N = int(input())
    called_numbers = []
    # Lire N lignes, chaque ligne peut contenir plusieurs entiers
    for _ in range(N):
        numbers = input().split()
        called_numbers.extend(numbers)
    # Conversion en entiers
    called_numbers = list(map(int, called_numbers))
    return called_numbers

def mark_bingo_card(bingo_card, called_numbers):
    """
    Marque les numéros appelés sur la carte de bingo.

    Args:
        bingo_card (list): carte de bingo 3x3 comme liste de listes d'entiers.
        called_numbers (list): liste des numéros qui ont été appelés.

    Returns:
        list: une matrice 3x3 (liste de listes) contenant 1 si la case a été marquée, sinon 0.
    """
    marks = [[0] * 3 for _ in range(3)]
    for i in range(3):
        for j in range(3):
            if bingo_card[i][j] in called_numbers:
                marks[i][j] = 1
    return marks

def has_bingo(marks):
    """
    Vérifie s'il y a une ligne, colonne ou diagonale complètement marquée (Bingo).

    Args:
        marks (list): une matrice 3x3 indiquant les cases marquées (1) ou non (0).

    Returns:
        bool: True si un Bingo est détecté, sinon False.
    """
    # Vérifier chaque ligne
    for i in range(3):
        if sum(marks[i]) == 3:
            return True
    # Vérifier chaque colonne
    for j in range(3):
        if marks[0][j] + marks[1][j] + marks[2][j] == 3:
            return True
    # Vérifier la diagonale principale
    if marks[0][0] + marks[1][1] + marks[2][2] == 3:
        return True
    # Vérifier la diagonale secondaire
    if marks[0][2] + marks[1][1] + marks[2][0] == 3:
        return True
    return False

def main():
    """
    Fonction principale qui orchestre la saisie des données, le marquage et la détection du bingo.
    Affiche "Yes" si un Bingo est réalisé, "No" sinon.
    """
    # Lire la carte de bingo
    bingo_card = read_bingo_card()
    # Lire les numéros appelés
    called_numbers = read_called_numbers()
    # Marquer la carte selon les numéros appelés
    marks = mark_bingo_card(bingo_card, called_numbers)
    # Vérifier s'il y a un Bingo
    if has_bingo(marks):
        print("Yes")
    else:
        print("No")

# Exécution du programme principal
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.5941604690160602e-05
    2. '```' → logprob: -12.375025749206543
    3. 'import' → logprob: -12.500025749206543
    4. '\' → logprob: -12.750025749206543
    5. '.`' → logprob: -13.125025749206543
    6. '(' → logprob: -13.250025749206543
    7. '\.' → logprob: -13.625025749206543
    8. '.import' → logprob: -13.875025749206543
    9. '.​' → logprob: -14.250025749206543
    10. 'as' → logprob: -14.375025749206543

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16822047531604767
    2. ' itertools' → logprob: -1.9182205200195312
    3. ' factorial' → logprob: -6.043220520019531
    4. ' map' → logprob: -6.918220520019531
    5. ' space' → logprob: -6.918220520019531
    6. ' filter' → logprob: -7.418220520019531
    7. '  ' → logprob: -7.918220520019531
    8. ' ' → logprob: -8.043220520019531
    9. ' process' → logprob: -8.293220520019531
    10. ' is' → logprob: -8.793220520019531

Token 5: '_b' (ID: 1535)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6349528431892395
    2. '(' → logprob: -0.7599528431892395
    3. ' (' → logprob: -7.259953022003174
    4. '_line' → logprob: -7.759953022003174
    5. '_file' → logprob: -8.009952545166016
    6. '_csv' → logprob: -9.259952545166016
    7. ' ' → logprob: -9.259952545166016
    8. '_data' → logprob: -9.384952545166016
    9. 's' → logprob: -9.759952545166016
    10. '```' → logprob: -9.759952545166016

Token 6: 'ingo' (ID: 14878)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.3510239124298096
    2. 'a' → logprob: -1.6010239124298096
    3. 'uffer' → logprob: -2.1010239124298096
    4. 'y' → logprob: -2.3510239124298096
    5. '_' → logprob: -2.6010239124298096
    6. 'lock' → logprob: -2.7260239124298096
    7. 'uf' → logprob: -3.1010239124298096
    8. 'e' → logprob: -3.4760239124298096
    9. 'i' → logprob: -3.7260239124298096
    10. 'locks' → logprob: -3.7260239124298096

Token 7: '_card' (ID: 37760)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3252437710762024
    2. '(' → logprob: -1.3252437114715576
    3. '(_' → logprob: -5.825243949890137
    4. '_line' → logprob: -6.075243949890137
    5. '_card' → logprob: -6.450243949890137
    6. '_cards' → logprob: -6.450243949890137
    7. '_game' → logprob: -7.950243949890137
    8. '_s' → logprob: -8.075243949890137
    9. '```' → logprob: -8.575243949890137
    10. '_board' → logprob: -8.700243949890137

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019519951194524765
    2. '_' → logprob: -4.019519805908203
    3. '```' → logprob: -7.644519805908203
    4. '():' → logprob: -8.769519805908203
    5. '_:' → logprob: -8.769519805908203
    6. ':' → logprob: -8.894519805908203
    7. '(:' → logprob: -9.519519805908203
    8. '(_:' → logprob: -9.644519805908203
    9. '(_' → logprob: -9.769519805908203
    10. 's' → logprob: -10.519519805908203

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2783139944076538
    2. '(' → logprob: -1.9033139944076538
    3. ':' → logprob: -3.2783141136169434
    4. '```' → logprob: -3.9033141136169434
    5. '    ' → logprob: -4.403314113616943
    6. '\' → logprob: -5.403314113616943
    7. ' ' → logprob: -6.153314113616943
    8. ' (' → logprob: -6.153314113616943
    9. ''' → logprob: -6.153314113616943
    10. '    
' → logprob: -6.278314113616943

Token 10: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09335688501596451
    2. 'return' → logprob: -2.9683568477630615
    3. 'rows' → logprob: -4.968357086181641
    4. ' ' → logprob: -5.093357086181641
    5. 'row' → logprob: -5.468357086181641
    6. '    ' → logprob: -5.593357086181641
    7. 'b' → logprob: -5.968357086181641
    8. 'card' → logprob: -6.093357086181641
    9. '```' → logprob: -6.218357086181641
    10. ' return' → logprob: -6.468357086181641

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1235700398683548
    2. '"""' → logprob: -2.623569965362549
    3. 'Reads' → logprob: -3.498569965362549
    4. ' reads' → logprob: -5.873569965362549
    5. ' Reads' → logprob: -5.998569965362549
    6. 'Returns' → logprob: -6.123569965362549
    7. 'Read' → logprob: -6.748569965362549
    8. '"""
' → logprob: -7.123569965362549
    9. ' """' → logprob: -7.373569965362549
    10. 'Return' → logprob: -7.623569965362549

Token 12: ' Lit' (ID: 45595)
  Prédit: 'Reads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Reads' → logprob: -0.1569076031446457
    2. 'Read' → logprob: -2.531907558441162
    3. '"""' → logprob: -3.781907558441162
    4. '   ' → logprob: -3.781907558441162
    5. ' Reads' → logprob: -5.406907558441162
    6. 'Returns' → logprob: -5.531907558441162
    7. '"""
' → logprob: -5.781907558441162
    8. 'reads' → logprob: -5.781907558441162
    9. ' reads' → logprob: -6.281907558441162
    10. '#' → logprob: -7.531907558441162

Token 13: ' du' (ID: 1462)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.18810921907424927
    2. 'er' → logprob: -1.9381091594696045
    3. 'ère' → logprob: -4.063109397888184
    4. 'é' → logprob: -5.563109397888184
    5. 'érer' → logprob: -7.188109397888184
    6. 'eral' → logprob: -7.188109397888184
    7. 'ér' → logprob: -7.563109397888184
    8. 'éral' → logprob: -7.813109397888184
    9. 'tle' → logprob: -8.063109397888184
    10. 'érale' → logprob: -8.313109397888184

Token 14: ' clavier' (ID: 187878)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9999061822891235
    2. 'texte' → logprob: -1.7499061822891235
    3. ' texte' → logprob: -1.7499061822891235
    4. 'n' → logprob: -2.374906063079834
    5. 'tex' → logprob: -3.874906063079834
    6. 'es' → logprob: -3.999906063079834
    7. 'x' → logprob: -4.124906063079834
    8. 'ne' → logprob: -4.124906063079834
    9. 'f' → logprob: -4.624906063079834
    10. 's' → logprob: -4.624906063079834

Token 15: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39834368228912354
    2. ' une' → logprob: -2.023343563079834
    3. ' la' → logprob: -2.523343563079834
    4. '    ' → logprob: -3.773343563079834
    5. ' les' → logprob: -4.023343563079834
    6. ' un' → logprob: -4.148343563079834
    7. ' return' → logprob: -4.523343563079834
    8. ' le' → logprob: -4.773343563079834
    9. '```' → logprob: -5.023343563079834
    10. ' ' → logprob: -5.398343563079834

Token 16: '3' (ID: 18)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.521476149559021
    2. ' une' → logprob: -1.896476149559021
    3. ' un' → logprob: -3.0214762687683105
    4. '   ' → logprob: -3.2714762687683105
    5. ' la' → logprob: -3.2714762687683105
    6. 'le' → logprob: -3.2714762687683105
    7. 'un' → logprob: -3.8964762687683105
    8. 'la' → logprob: -3.8964762687683105
    9. 'l' → logprob: -4.1464762687683105
    10. 'les' → logprob: -4.5214762687683105

Token 17: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.25568124651908875
    2. 'l' → logprob: -2.255681276321411
    3. ' ' → logprob: -2.880681276321411
    4. ' ligne' → logprob: -3.880681276321411
    5. ' lign' → logprob: -4.130681037902832
    6. ' lines' → logprob: -4.255681037902832
    7. 'x' → logprob: -5.255681037902832
    8. ' line' → logprob: -6.130681037902832
    9. ' x' → logprob: -6.755681037902832
    10. ' L' → logprob: -6.880681037902832

Token 18: ' représentant' (ID: 136122)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01609513722360134
    2. ' de' → logprob: -4.391095161437988
    3. '\n' → logprob: -6.641095161437988
    4. ',' → logprob: -8.141095161437988
    5. '    ' → logprob: -8.141095161437988
    6. '  ' → logprob: -8.266095161437988
    7. ' et' → logprob: -8.641095161437988
    8. ' ' → logprob: -8.766095161437988
    9. '```' → logprob: -9.016095161437988
    10. ' of' → logprob: -9.141095161437988

Token 19: ' la' (ID: 557)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.001840591430664
    2. ' une' → logprob: -1.376840591430664
    3. '   ' → logprob: -1.876840591430664
    4. 'une' → logprob: -2.751840591430664
    5. 'le' → logprob: -3.126840591430664
    6. 'un' → logprob: -3.751840591430664
    7. ' les' → logprob: -3.876840591430664
    8. ' la' → logprob: -4.001840591430664
    9. ' des' → logprob: -4.001840591430664
    10. ' le' → logprob: -4.501840591430664

Token 20: ' carte' (ID: 30276)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.8458808660507202
    2. ' carte' → logprob: -0.9708808660507202
    3. 'gr' → logprob: -2.7208809852600098
    4. ' grille' → logprob: -2.9708809852600098
    5. 'b' → logprob: -3.8458809852600098
    6. 'card' → logprob: -4.09588098526001
    7. 'cart' → logprob: -4.22088098526001
    8. 'ligne' → logprob: -5.34588098526001
    9. '   ' → logprob: -5.47088098526001
    10. 'c' → logprob: -6.09588098526001

Token 21: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0487254373729229
    2. '   ' → logprob: -3.4237253665924072
    3. 'de' → logprob: -5.048725605010986
    4. 'b' → logprob: -6.173725605010986
    5. ',' → logprob: -6.423725605010986
    6. ' bingo' → logprob: -6.548725605010986
    7. ' Bingo' → logprob: -6.923725605010986
    8. ' ,' → logprob: -7.298725605010986
    9. '"""' → logprob: -8.173725128173828
    10. ' complète' → logprob: -8.548725128173828

Token 22: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6343177556991577
    2. ' bingo' → logprob: -0.7593177556991577
    3. ' b' → logprob: -7.634317874908447
    4. 'B' → logprob: -8.384317398071289
    5. ' la' → logprob: -8.384317398071289
    6. ' bing' → logprob: -8.384317398071289
    7. ' jeu' → logprob: -8.884317398071289
    8. ' Bingo' → logprob: -8.884317398071289
    9. 'bing' → logprob: -9.509317398071289
    10. ' ' → logprob: -9.759317398071289

Token 23: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11127718538045883
    2. ',' → logprob: -2.4862771034240723
    3. '.' → logprob: -5.111277103424072
    4. ' et' → logprob: -5.861277103424072
    5. ' en' → logprob: -5.861277103424072
    6. ' (' → logprob: -6.111277103424072
    7. ' ,' → logprob: -6.111277103424072
    8. ' avec' → logprob: -6.861277103424072
    9. '\n' → logprob: -6.986277103424072
    10. ' ' → logprob: -7.111277103424072

Token 24: '3' (ID: 18)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6063728332519531
    2. ',' → logprob: -1.8563728332519531
    3. '"""' → logprob: -1.8563728332519531
    4. '.' → logprob: -3.106372833251953
    5. ' ' → logprob: -3.981372833251953
    6. '"""
' → logprob: -4.481372833251953
    7. '\n' → logprob: -4.856372833251953
    8. ' ,' → logprob: -4.856372833251953
    9. ' en' → logprob: -5.106372833251953
    10. ' """' → logprob: -5.231372833251953

Token 25: 'x' (ID: 87)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.34829026460647583
    2. ' ' → logprob: -1.473290205001831
    3. ' lines' → logprob: -3.598290205001831
    4. 'l' → logprob: -3.848290205001831
    5. ' """' → logprob: -5.72329044342041
    6. 'x' → logprob: -6.34829044342041
    7. '   ' → logprob: -6.72329044342041
    8. ' x' → logprob: -6.97329044342041
    9. ' ligne' → logprob: -7.22329044342041
    10. 'n' → logprob: -7.22329044342041

Token 26: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0006892018136568367
    2. ' ' → logprob: -7.3756890296936035
    3. '```' → logprob: -10.500689506530762
    4. 'par' → logprob: -11.875689506530762
    5. '4' → logprob: -12.125689506530762
    6. ' ' → logprob: -12.625689506530762
    7. '   ' → logprob: -13.250689506530762
    8. ')' → logprob: -13.375689506530762
    9. '  ' → logprob: -13.375689506530762
    10. 'n' → logprob: -13.500689506530762

Token 27: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014207577332854271
    2. '\n' → logprob: -5.139207363128662
    3. ' ' → logprob: -6.389207363128662
    4. '
' → logprob: -7.014207363128662
    5. ',' → logprob: -7.139207363128662
    6. '\' → logprob: -7.139207363128662
    7. '    
' → logprob: -7.389207363128662
    8. '    ' → logprob: -7.639207363128662
    9. '.' → logprob: -8.01420783996582
    10. '   
' → logprob: -8.13920783996582

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017408665735274553
    2. '"""' → logprob: -6.6267409324646
    3. '    ' → logprob: -8.626740455627441
    4. '```' → logprob: -9.626740455627441
    5. '\n' → logprob: -10.001740455627441
    6. '  ' → logprob: -10.376740455627441
    7. ' ' → logprob: -10.876740455627441
    8. '
' → logprob: -11.251740455627441
    9. ' """' → logprob: -11.501740455627441
    10. '"""
' → logprob: -11.626740455627441

Token 29: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011959441471844912
    2. '"""' → logprob: -7.126195907592773
    3. ' lines' → logprob: -9.251195907592773
    4. '    ' → logprob: -9.501195907592773
    5. '```' → logprob: -9.501195907592773
    6. ' ' → logprob: -10.626195907592773
    7. 'return' → logprob: -10.626195907592773
    8. 'lines' → logprob: -10.876195907592773
    9. '  ' → logprob: -11.126195907592773
    10. '       ' → logprob: -11.626195907592773

Token 30: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.6296116709709167
    2. ' ligne' → logprob: -0.8796116709709167
    3. ' ' → logprob: -3.3796117305755615
    4. 'l' → logprob: -4.629611492156982
    5. 'line' → logprob: -5.629611492156982
    6. '   ' → logprob: -6.254611492156982
    7. '  ' → logprob: -6.879611492156982
    8. ' line' → logprob: -7.004611492156982
    9. 'n' → logprob: -8.12961196899414
    10. 's' → logprob: -8.75461196899414

Token 31: ' contient' (ID: 89067)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5132291316986084
    2. ' contient' → logprob: -1.2632291316986084
    3. ' doit' → logprob: -3.5132291316986084
    4. '   ' → logprob: -4.1382293701171875
    5. ' cont' → logprob: -4.3882293701171875
    6. 'est' → logprob: -4.6382293701171875
    7. 'cont' → logprob: -4.8882293701171875
    8. ' comporte' → logprob: -5.0132293701171875
    9. ' a' → logprob: -5.1382293701171875
    10. ' de' → logprob: -5.5132293701171875

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35594648122787476
    2. ' neuf' → logprob: -2.1059465408325195
    3. '9' → logprob: -2.8559465408325195
    4. ' trois' → logprob: -2.9809465408325195
    5. ' une' → logprob: -4.3559465408325195
    6. '3' → logprob: -4.4809465408325195
    7. ' des' → logprob: -4.6059465408325195
    8. ' nine' → logprob: -4.8559465408325195
    9. 'au' → logprob: -4.9809465408325195
    10. ' un' → logprob: -5.3559465408325195

Token 33: '3' (ID: 18)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5636809468269348
    2. '3' → logprob: -1.06368088722229
    3. ' ' → logprob: -3.56368088722229
    4. 'une' → logprob: -3.56368088722229
    5. ' neuf' → logprob: -4.188681125640869
    6. ' trois' → logprob: -5.438681125640869
    7. ' une' → logprob: -6.063681125640869
    8. 'tro' → logprob: -6.438681125640869
    9. 'des' → logprob: -6.563681125640869
    10. 'ne' → logprob: -6.563681125640869

Token 34: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7548287510871887
    2. ' ' → logprob: -1.879828691482544
    3. ' ent' → logprob: -1.879828691482544
    4. ' nombres' → logprob: -1.879828691482544
    5. 'n' → logprob: -4.129828929901123
    6. ' chiffres' → logprob: -4.254828929901123
    7. 'val' → logprob: -4.629828929901123
    8. 'ch' → logprob: -5.004828929901123
    9. ' espaces' → logprob: -5.129828929901123
    10. ' integers' → logprob: -5.379828929901123

Token 35: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0022313790395855904
    2. 'ières' → logprob: -6.502231597900391
    3. 'i' → logprob: -7.877231597900391
    4. 'ier' → logprob: -8.00223159790039
    5. 'ires' → logprob: -12.37723159790039
    6. '   ' → logprob: -13.00223159790039
    7. 'êtes' → logprob: -13.25223159790039
    8. '```' → logprob: -13.50223159790039
    9. 'ieres' → logprob: -13.75223159790039
    10. 'ié' → logprob: -14.00223159790039

Token 36: ' sépar' (ID: 97160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05484900251030922
    2. ',' → logprob: -3.4298489093780518
    3. '    
' → logprob: -5.304849147796631
    4. '\n' → logprob: -5.679849147796631
    5. ' ,' → logprob: -6.304849147796631
    6. '.' → logprob: -6.554849147796631
    7. '     
' → logprob: -6.554849147796631
    8. '   
' → logprob: -6.679849147796631
    9. ' (' → logprob: -6.804849147796631
    10. ' ' → logprob: -6.929849147796631

Token 37: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0036646833177655935
    2. 'é' → logprob: -5.753664493560791
    3. 'is' → logprob: -8.87866497039795
    4. 'es' → logprob: -9.12866497039795
    5. 'ées' → logprob: -9.37866497039795
    6. '```' → logprob: -10.25366497039795
    7. 'ès' → logprob: -10.62866497039795
    8. 'ée' → logprob: -10.75366497039795
    9. ' par' → logprob: -10.87866497039795
    10. ' by' → logprob: -12.00366497039795

Token 38: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.18070168793201447
    2. 'par' → logprob: -1.805701732635498
    3. 'es' → logprob: -8.30570125579834
    4. ' ' → logprob: -8.93070125579834
    5. ' by' → logprob: -9.05570125579834
    6. '_par' → logprob: -9.18070125579834
    7. '```' → logprob: -9.55570125579834
    8. 'és' → logprob: -9.68070125579834
    9. '  ' → logprob: -9.93070125579834
    10. '   ' → logprob: -10.43070125579834

Token 39: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.8762461543083191
    2. 'un' → logprob: -1.0012462139129639
    3. ' des' → logprob: -2.251246213912964
    4. ' un' → logprob: -3.001246213912964
    5. ''un' → logprob: -3.251246213912964
    6. ''' → logprob: -4.626245975494385
    7. ' ' → logprob: -5.626245975494385
    8. 'esp' → logprob: -5.626245975494385
    9. 'es' → logprob: -6.751245975494385
    10. 'une' → logprob: -7.126245975494385

Token 40: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.3980847895145416
    2. ' espaces' → logprob: -1.1480847597122192
    3. 'spaces' → logprob: -5.27308464050293
    4. 'es' → logprob: -5.39808464050293
    5. ''esp' → logprob: -7.52308464050293
    6. ' spaces' → logprob: -8.02308464050293
    7. ' ' → logprob: -8.14808464050293
    8. ' espace' → logprob: -9.27308464050293
    9. ''espace' → logprob: -9.77308464050293
    10. 'space' → logprob: -10.02308464050293

Token 41: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28086861968040466
    2. '\n' → logprob: -1.530868649482727
    3. '    
' → logprob: -4.6558685302734375
    4. '\' → logprob: -5.7808685302734375
    5. '
' → logprob: -6.1558685302734375
    6. '   
' → logprob: -6.2808685302734375
    7. ')' → logprob: -6.4058685302734375
    8. '  
' → logprob: -6.4058685302734375
    9. ' 
' → logprob: -6.5308685302734375
    10. ' ' → logprob: -6.5308685302734375

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034809779026545584
    2. '"""' → logprob: -8.250348091125488
    3. '    ' → logprob: -10.750348091125488
    4. '  ' → logprob: -10.750348091125488
    5. ' ' → logprob: -11.625348091125488
    6. '    
' → logprob: -12.000348091125488
    7. '"""
' → logprob: -12.125348091125488
    8. '```' → logprob: -12.125348091125488
    9. ' """' → logprob: -12.625348091125488
    10. ')' → logprob: -12.875348091125488

Token 43: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46204131841659546
    2. 'lines' → logprob: -1.0870413780212402
    3. 'l' → logprob: -4.33704137802124
    4. 'card' → logprob: -5.08704137802124
    5. 'ligne' → logprob: -5.96204137802124
    6. ' lines' → logprob: -6.08704137802124
    7. 'b' → logprob: -6.21204137802124
    8. 'line' → logprob: -6.96204137802124
    9. 'cards' → logprob: -6.96204137802124
    10. 'return' → logprob: -7.33704137802124

Token 44: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.4477190971374512
    2. '[' → logprob: -1.5727190971374512
    3. '    ' → logprob: -2.197719097137451
    4. ':' → logprob: -2.197719097137451
    5. '   ' → logprob: -2.197719097137451
    6. ' ' → logprob: -2.322719097137451
    7. '```' → logprob: -3.947719097137451
    8. ' la' → logprob: -4.197719097137451
    9. ' )' → logprob: -4.572719097137451
    10. ' a' → logprob: -4.572719097137451

Token 45: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0346555709838867
    2. ' [' → logprob: -1.9096555709838867
    3. ' list' → logprob: -2.1596555709838867
    4. ' []' → logprob: -2.2846555709838867
    5. ' [
' → logprob: -2.5346555709838867
    6. ' a' → logprob: -2.7846555709838867
    7. '[' → logprob: -2.9096555709838867
    8. '    ' → logprob: -3.2846555709838867
    9. ' [[' → logprob: -4.659655570983887
    10. ' List' → logprob: -5.284655570983887

Token 46: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.5241751074790955
    2. 'List' → logprob: -1.2741751670837402
    3. ' List' → logprob: -3.0241751670837402
    4. ' list' → logprob: -3.2741751670837402
    5. '   ' → logprob: -3.8991751670837402
    6. '[' → logprob: -5.77417516708374
    7. 'b' → logprob: -5.89917516708374
    8. '[List' → logprob: -5.89917516708374
    9. 'return' → logprob: -6.14917516708374
    10. 'card' → logprob: -6.64917516708374

Token 47: ':' (ID: 25)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.7670809030532837
    2. '[int' → logprob: -1.2670809030532837
    3. ' of' → logprob: -2.017080783843994
    4. '[list' → logprob: -2.767080783843994
    5. '[' → logprob: -3.142080783843994
    6. '   ' → logprob: -6.017080783843994
    7. '[]' → logprob: -6.017080783843994
    8. '<|end|>' → logprob: -6.267080783843994
    9. '[str' → logprob: -6.392080783843994
    10. ':' → logprob: -6.892080783843994

Token 48: ' une' (ID: 2463)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.2812317609786987
    2. ' []' → logprob: -1.4062317609786987
    3. '[' → logprob: -2.0312318801879883
    4. '[List' → logprob: -2.6562318801879883
    5. '[int' → logprob: -2.6562318801879883
    6. '   ' → logprob: -2.9062318801879883
    7. '[]' → logprob: -3.0312318801879883
    8. ' [
' → logprob: -3.6562318801879883
    9. '  ' → logprob: -4.031231880187988
    10. ' ' → logprob: -4.656231880187988

Token 49: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.6600863933563232
    2. ' des' → logprob: -1.7850863933563232
    3. ' list' → logprob: -1.7850863933563232
    4. ' [' → logprob: -3.4100863933563232
    5. ' de' → logprob: -3.4100863933563232
    6. ' ' → logprob: -3.5350863933563232
    7. '[' → logprob: -4.160086631774902
    8. '   ' → logprob: -4.660086631774902
    9. ' [
' → logprob: -5.535086631774902
    10. '[][]' → logprob: -5.660086631774902

Token 50: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31021398305892944
    2. ' des' → logprob: -2.060214042663574
    3. ' de' → logprob: -2.435214042663574
    4. ' of' → logprob: -3.810214042663574
    5. '[int' → logprob: -5.060214042663574
    6. '<|end|>' → logprob: -5.435214042663574
    7. '[str' → logprob: -5.685214042663574
    8. '[]' → logprob: -5.935214042663574
    9. '   ' → logprob: -5.935214042663574
    10. ' [' → logprob: -6.310214042663574

Token 51: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07769665122032166
    2. 'des' → logprob: -3.3276965618133545
    3. 'de' → logprob: -4.202696800231934
    4. ' de' → logprob: -4.827696800231934
    5. '[str' → logprob: -4.952696800231934
    6. ' des' → logprob: -5.452696800231934
    7. '[]' → logprob: -6.827696800231934
    8. '[int' → logprob: -6.827696800231934
    9. ' of' → logprob: -6.952696800231934
    10. 'd' → logprob: -7.952696800231934

Token 52: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.8531797528266907
    2. 'd' → logprob: -0.8531797528266907
    3. ' de' → logprob: -2.603179693222046
    4. '[' → logprob: -3.478179693222046
    5. '-d' → logprob: -4.728179931640625
    6. 'de' → logprob: -5.103179931640625
    7. '[]' → logprob: -5.228179931640625
    8. '   ' → logprob: -5.353179931640625
    9. ' [' → logprob: -5.353179931640625
    10. ' d' → logprob: -5.853179931640625

Token 53: ' (' (ID: 350)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8364381790161133
    2. '[' → logprob: -1.3364381790161133
    3. ' de' → logprob: -2.0864381790161133
    4. ' of' → logprob: -2.5864381790161133
    5. ' [' → logprob: -3.3364381790161133
    6. '   ' → logprob: -4.086438179016113
    7. '[]' → logprob: -4.336438179016113
    8. ' [
' → logprob: -4.836438179016113
    9. '[
' → logprob: -5.086438179016113
    10. ' d' → logprob: -5.336438179016113

Token 54: '3' (ID: 18)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2969229221343994
    2. ' list' → logprob: -2.1719229221343994
    3. 'int' → logprob: -3.1719229221343994
    4. '[int' → logprob: -3.6719229221343994
    5. '[list' → logprob: -4.17192268371582
    6. '[[' → logprob: -4.29692268371582
    7. '   ' → logprob: -4.54692268371582
    8. ')' → logprob: -4.54692268371582
    9. '[List' → logprob: -5.17192268371582
    10. ' of' → logprob: -5.29692268371582

Token 55: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5228998064994812
    2. ' x' → logprob: -1.772899866104126
    3. '[' → logprob: -2.522899866104126
    4. ')' → logprob: -3.147899866104126
    5. 'D' → logprob: -3.397899866104126
    6. ' ' → logprob: -3.647899866104126
    7. 'd' → logprob: -4.147899627685547
    8. ',' → logprob: -4.522899627685547
    9. ']' → logprob: -5.022899627685547
    10. ')x' → logprob: -5.772899627685547

Token 56: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00026383911608718336
    2. ' ' → logprob: -8.625264167785645
    3. '   ' → logprob: -9.500264167785645
    4. ')' → logprob: -12.875264167785645
    5. '```' → logprob: -13.125264167785645
    6. '  ' → logprob: -13.250264167785645
    7. ',' → logprob: -13.750264167785645
    8. ' ' → logprob: -14.625264167785645
    9. '    ' → logprob: -15.000264167785645
    10. '1' → logprob: -15.812764167785645

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07132459431886673
    2. ' integers' → logprob: -2.946324586868286
    3. ' )' → logprob: -5.071324825286865
    4. ']' → logprob: -5.446324825286865
    5. ' des' → logprob: -5.946324825286865
    6. 'inte' → logprob: -6.946324825286865
    7. ' ' → logprob: -8.071324348449707
    8. ' ]' → logprob: -8.071324348449707
    9. ' de' → logprob: -8.071324348449707
    10. '[int' → logprob: -8.321324348449707

Token 58: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12120915204286575
    2. ' de' → logprob: -3.246209144592285
    3. '[' → logprob: -3.996209144592285
    4. '```' → logprob: -4.371209144592285
    5. '[
' → logprob: -4.746209144592285
    6. '    ' → logprob: -4.746209144592285
    7. ' des' → logprob: -4.871209144592285
    8. '[]' → logprob: -5.746209144592285
    9. ' of' → logprob: -5.746209144592285
    10. ' ' → logprob: -6.121209144592285

Token 59: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.23802697658538818
    2. ' integers' → logprob: -2.9880270957946777
    3. ' des' → logprob: -3.2380270957946777
    4. 'e' → logprob: -3.3630270957946777
    5. ' lists' → logprob: -3.9880270957946777
    6. 'ent' → logprob: -4.113027095794678
    7. ' ent' → logprob: -4.363027095794678
    8. '[int' → logprob: -4.613027095794678
    9. ' int' → logprob: -4.613027095794678
    10. '’ent' → logprob: -5.738027095794678

Token 60: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.5912532210350037
    2. 'i' → logprob: -0.8412532210350037
    3. 'ières' → logprob: -4.591253280639648
    4. '   ' → logprob: -6.341253280639648
    5. '```' → logprob: -6.841253280639648
    6. 'ié' → logprob: -7.091253280639648
    7. ' i' → logprob: -7.216253280639648
    8. 'ier' → logprob: -9.091253280639648
    9. '  ' → logprob: -9.341253280639648
    10. 'ti' → logprob: -9.341253280639648

Token 61: ' représentant' (ID: 136122)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027106277644634247
    2. '```' → logprob: -4.277106285095215
    3. '    ' → logprob: -6.277106285095215
    4. ')' → logprob: -6.527106285095215
    5. '    
' → logprob: -6.527106285095215
    6. '
' → logprob: -6.527106285095215
    7. ']' → logprob: -6.777106285095215
    8. '[' → logprob: -7.027106285095215
    9. '"""' → logprob: -7.527106285095215
    10. ',' → logprob: -7.777106285095215

Token 62: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.005235291086137295
    2. '   ' → logprob: -5.630235195159912
    3. '    ' → logprob: -7.505235195159912
    4. ' ' → logprob: -8.13023567199707
    5. ' les' → logprob: -8.50523567199707
    6. ' the' → logprob: -8.88023567199707
    7. 'the' → logprob: -9.25523567199707
    8. 'la' → logprob: -9.38023567199707
    9. '  ' → logprob: -9.50523567199707
    10. ' le' → logprob: -9.63023567199707

Token 63: ' carte' (ID: 30276)
  Prédit: ' carte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carte' → logprob: -0.08540735393762589
    2. ' card' → logprob: -3.585407257080078
    3. ' bingo' → logprob: -3.710407257080078
    4. 'b' → logprob: -4.710407257080078
    5. ' grille' → logprob: -5.210407257080078
    6. ' ' → logprob: -5.585407257080078
    7. ' cartes' → logprob: -5.585407257080078
    8. 'car' → logprob: -5.835407257080078
    9. 'card' → logprob: -6.960407257080078
    10. '   ' → logprob: -7.210407257080078

Token 64: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.249967560172081
    2. '_b' → logprob: -2.249967575073242
    3. '   ' → logprob: -2.499967575073242
    4. ' bingo' → logprob: -4.874967575073242
    5. 'b' → logprob: -4.999967575073242
    6. 'de' → logprob: -5.749967575073242
    7. '```' → logprob: -5.874967575073242
    8. 'B' → logprob: -5.999967575073242
    9. ' ' → logprob: -6.374967575073242
    10. '    
' → logprob: -6.624967575073242

Token 65: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009093005210161209
    2. ' bingo' → logprob: -4.759092807769775
    3. 'la' → logprob: -8.509093284606934
    4. 'bing' → logprob: -9.259093284606934
    5. ' la' → logprob: -9.384093284606934
    6. '```' → logprob: -10.259093284606934
    7. 'jeu' → logprob: -11.259093284606934
    8. 'B' → logprob: -11.259093284606934
    9. ' b' → logprob: -11.759093284606934
    10. 'le' → logprob: -12.134093284606934

Token 66: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019295239821076393
    2. '```' → logprob: -4.5192952156066895
    3. ')' → logprob: -6.1442952156066895
    4. '.' → logprob: -7.0192952156066895
    5. ' ' → logprob: -7.3942952156066895
    6. ':' → logprob: -7.5192952156066895
    7. '[' → logprob: -7.5192952156066895
    8. '  ' → logprob: -7.5192952156066895
    9. ',' → logprob: -7.8942952156066895
    10. '\n' → logprob: -8.019295692443848

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022816075012087822
    2. '"""' → logprob: -4.022816181182861
    3. '```' → logprob: -5.772816181182861
    4. ')' → logprob: -7.272816181182861
    5. '"""
' → logprob: -8.147815704345703
    6. '\n' → logprob: -8.647815704345703
    7. '
' → logprob: -9.147815704345703
    8. '"' → logprob: -9.772815704345703
    9. '    
' → logprob: -10.022815704345703
    10. '""' → logprob: -10.147815704345703

Token 68: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03884012624621391
    2. '"""' → logprob: -3.5388400554656982
    3. '```' → logprob: -4.788840293884277
    4. '"""
' (adapté à ' """
') → logprob: -7.788840293884277
    5. ')' → logprob: -8.663840293884277
    6. '""' → logprob: -9.538840293884277
    7. '``' → logprob: -11.413840293884277
    8. ' """' → logprob: -11.663840293884277
    9. '`' → logprob: -11.913840293884277
    10. '  ' → logprob: -11.913840293884277

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.3795937522663735e-05
    2. '```' → logprob: -12.00002384185791
    3. ' lines' → logprob: -12.50002384185791
    4. 'lines' → logprob: -12.75002384185791
    5. '    
' → logprob: -13.12502384185791
    6. 'return' → logprob: -13.50002384185791
    7. '    ' → logprob: -13.62502384185791
    8. '  ' → logprob: -13.75002384185791
    9. 'line' → logprob: -14.12502384185791
    10. 'b' → logprob: -14.25002384185791

Token 70: ' bingo' (ID: 65141)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.23392701148986816
    2. ' card' → logprob: -2.358927011489868
    3. 'b' → logprob: -2.983927011489868
    4. '   ' → logprob: -3.233927011489868
    5. 'lines' → logprob: -4.358926773071289
    6. 'cards' → logprob: -5.358926773071289
    7. ' lines' → logprob: -5.358926773071289
    8. ' bingo' → logprob: -8.108926773071289
    9. 'return' → logprob: -8.233926773071289
    10. 'cart' → logprob: -8.608926773071289

Token 71: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.01300598680973053
    2. '_cards' → logprob: -4.638006210327148
    3. '_' → logprob: -6.263006210327148
    4. '_line' → logprob: -7.513006210327148
    5. '_lines' → logprob: -8.638006210327148
    6. '_car' → logprob: -8.763006210327148
    7. ' =' → logprob: -8.888006210327148
    8. '_data' → logprob: -9.513006210327148
    9. '_cart' → logprob: -9.888006210327148
    10. '_input' → logprob: -10.388006210327148

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014846821315586567
    2. '=' → logprob: -4.2648468017578125
    3. '=[]' → logprob: -8.014846801757812
    4. '_lines' → logprob: -8.639846801757812
    5. '[:]' → logprob: -10.264846801757812
    6. '   ' → logprob: -10.264846801757812
    7. '=[]
' → logprob: -10.764846801757812
    8. ' ' → logprob: -10.889846801757812
    9. '.append' → logprob: -11.139846801757812
    10. '_' → logprob: -11.639846801757812

Token 73: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.25472337007522583
    2. ' []' → logprob: -1.504723310470581
    3. '[' → logprob: -6.12972354888916
    4. ' [' → logprob: -7.50472354888916
    5. '[]
' → logprob: -10.12972354888916
    6. ' []
' → logprob: -12.00472354888916
    7. '[int' → logprob: -12.50472354888916
    8. '[user' → logprob: -13.37972354888916
    9. '[n' → logprob: -13.50472354888916
    10. '   ' → logprob: -13.62972354888916

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011055675568059087
    2. ' for' → logprob: -7.251105785369873
    3. 'for' → logprob: -7.876105785369873
    4. '    
' → logprob: -12.001105308532715
    5. '
' → logprob: -12.251105308532715
    6. '	for' → logprob: -13.126105308532715
    7. '  ' → logprob: -13.751105308532715
    8. '    ' → logprob: -14.001105308532715
    9. ' ' → logprob: -14.376105308532715
    10. '```' → logprob: -16.12610626220703

Token 75: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4984378516674042
    2. ' for' → logprob: -1.2484378814697266
    3. '   ' → logprob: -2.2484378814697266
    4. '	for' → logprob: -13.123437881469727
    5. ' ' → logprob: -14.123437881469727
    6. '    
' → logprob: -14.248437881469727
    7. '  ' → logprob: -14.498437881469727
    8. '
' → logprob: -15.748437881469727
    9. '    ' → logprob: -15.873437881469727
    10. 'while' → logprob: -16.748437881469727

Token 76: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0019197179935872555
    2. '_' → logprob: -6.751919746398926
    3. ' ' → logprob: -7.251919746398926
    4. ' i' → logprob: -10.126919746398926
    5. ' ' → logprob: -15.501919746398926
    6. '  ' → logprob: -17.25191879272461
    7. '_i' → logprob: -17.25191879272461
    8. ' line' → logprob: -17.25191879272461
    9. ' ‌' → logprob: -17.25191879272461
    10. ' range' → logprob: -18.25191879272461

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001706367009319365
    2. 'in' → logprob: -6.501706600189209
    3. ' ' → logprob: -8.62670612335205
    4. '  ' → logprob: -11.12670612335205
    5. '_' → logprob: -12.75170612335205
    6. ',' → logprob: -13.37670612335205
    7. 'import' → logprob: -14.00170612335205
    8. '    ' → logprob: -14.12670612335205
    9. ' ,' → logprob: -14.12670612335205
    10. 'range' → logprob: -14.37670612335205

Token 78: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519432604312897
    2. 'range' → logprob: -1.5019432306289673
    3. 'rang' → logprob: -12.626943588256836
    4. ' ' → logprob: -12.626943588256836
    5. '	range' → logprob: -13.251943588256836
    6. ' rang' → logprob: -13.626943588256836
    7. '   ' → logprob: -13.876943588256836
    8. '(range' → logprob: -14.376943588256836
    9. ' xrange' → logprob: -14.501943588256836
    10. '```' → logprob: -14.501943588256836

Token 79: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009645807440392673
    2. ' ' → logprob: -7.625964641571045
    3. '3' → logprob: -8.000964164733887
    4. ' (' → logprob: -8.875964164733887
    5. ')' → logprob: -13.750964164733887
    6. ' )' → logprob: -15.500964164733887
    7. '   ' → logprob: -16.000965118408203
    8. '6' → logprob: -16.250965118408203
    9. '  ' → logprob: -16.500965118408203
    10. '```' → logprob: -17.375965118408203

Token 80: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02324547804892063
    2. ' ' → logprob: -3.7732455730438232
    3. '   ' → logprob: -17.273244857788086
    4. ')' → logprob: -18.648244857788086
    5. '  ' → logprob: -19.023244857788086
    6. ' ' → logprob: -20.648244857788086
    7. '9' → logprob: -20.648244857788086
    8. '```' → logprob: -20.773244857788086
    9. ' )' → logprob: -21.273244857788086
    10. '1' → logprob: -21.398244857788086

Token 81: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027653291821479797
    2. ')' → logprob: -3.652653217315674
    3. ':' → logprob: -7.027653217315674
    4. ' ):' → logprob: -7.902653217315674
    5. '   ' → logprob: -10.402653694152832
    6. ' )' → logprob: -10.402653694152832
    7. '):
' → logprob: -10.527653694152832
    8. ',' → logprob: -12.652653694152832
    9. ' :' → logprob: -13.777653694152832
    10. '():' → logprob: -14.152653694152832

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023369524569716305
    2. '   ' → logprob: -9.75023365020752
    3. '        
' → logprob: -9.87523365020752
    4. '    ' → logprob: -10.25023365020752
    5. '        ' → logprob: -10.25023365020752
    6. '      ' → logprob: -11.00023365020752
    7. ' readline' → logprob: -11.75023365020752
    8. ' ' → logprob: -12.75023365020752
    9. '[' → logprob: -12.75023365020752
    10. '     ' → logprob: -13.12523365020752

Token 83: ' #' (ID: 1069)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0552690327167511
    2. 'line' → logprob: -3.4302690029144287
    3. ' ligne' → logprob: -4.555269241333008
    4. '   ' → logprob: -5.180269241333008
    5. ' row' → logprob: -5.555269241333008
    6. 'ligne' → logprob: -7.555269241333008
    7. '    ' → logprob: -7.805269241333008
    8. ' bingo' → logprob: -8.805269241333008
    9. 'row' → logprob: -9.180269241333008
    10. ' lines' → logprob: -9.555269241333008

Token 84: ' Lire' (ID: 57624)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.11963678896427155
    2. 'line' → logprob: -2.6196367740631104
    3. ' ligne' → logprob: -3.8696367740631104
    4. '   ' → logprob: -4.8696370124816895
    5. ' row' → logprob: -5.2446370124816895
    6. 'ligne' → logprob: -5.8696370124816895
    7. '    ' → logprob: -6.7446370124816895
    8. '       ' → logprob: -6.9946370124816895
    9. 'row' → logprob: -7.7446370124816895
    10. ' lines' → logprob: -8.619636535644531

Token 85: ' une' (ID: 2463)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6784459352493286
    2. ' ' → logprob: -1.3034459352493286
    3. '   ' → logprob: -2.553445816040039
    4. ' la' → logprob: -3.053445816040039
    5. ' readline' → logprob: -4.178445816040039
    6. ' un' → logprob: -4.303445816040039
    7. '       ' → logprob: -4.428445816040039
    8. ' input' → logprob: -4.428445816040039
    9. 'input' → logprob: -4.928445816040039
    10. ' une' → logprob: -5.178445816040039

Token 86: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.18620632588863373
    2. 'ligne' → logprob: -2.311206340789795
    3. ' ' → logprob: -3.061206340789795
    4. '   ' → logprob: -4.186206340789795
    5. ' line' → logprob: -5.686206340789795
    6. 'l' → logprob: -5.936206340789795
    7. 'line' → logprob: -6.686206340789795
    8. 's' → logprob: -8.311205863952637
    9. '    ' → logprob: -8.561205863952637
    10. '_' → logprob: -8.936205863952637

Token 87: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002372439019382
    2. '        ' → logprob: -6.2523722648620605
    3. 'line' → logprob: -9.627372741699219
    4. ' line' → logprob: -9.752372741699219
    5. '      ' → logprob: -9.752372741699219
    6. ' ligne' → logprob: -9.877372741699219
    7. '   ' → logprob: -10.002372741699219
    8. '        
' → logprob: -11.002372741699219
    9. 'ligne' → logprob: -11.002372741699219
    10. 'input' → logprob: -11.127372741699219

Token 88: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.05816073715686798
    2. 'e' → logprob: -3.3081607818603516
    3. 'entrée' → logprob: -4.433160781860352
    4. 'es' → logprob: -5.558160781860352
    5. ''ent' → logprob: -6.683160781860352
    6. ''' → logprob: -7.558160781860352
    7. ' input' → logprob: -7.683160781860352
    8. ''ex' → logprob: -8.058160781860352
    9. 'input' → logprob: -8.058160781860352
    10. ''utilisateur' → logprob: -8.183160781860352

Token 89: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003659746435005218
    2. '        ' → logprob: -9.1253662109375
    3. '   ' → logprob: -9.3753662109375
    4. ' line' → logprob: -10.1253662109375
    5. ',' → logprob: -10.7503662109375
    6. '        
' → logprob: -10.7503662109375
    7. '      ' → logprob: -10.8753662109375
    8. ' ligne' → logprob: -11.7503662109375
    9. '    ' → logprob: -11.8753662109375
    10. '           ' → logprob: -12.1253662109375

Token 90: ' la' (ID: 557)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.05934177339076996
    2. ' ligne' → logprob: -3.0593416690826416
    3. ' row' → logprob: -5.684341907501221
    4. 'line' → logprob: -5.809341907501221
    5. ' split' → logprob: -6.809341907501221
    6. '        ' → logprob: -7.059341907501221
    7. ' input' → logprob: -7.684341907501221
    8. 'ligne' → logprob: -8.059341430664062
    9. ' lignes' → logprob: -8.184341430664062
    10. 'split' → logprob: -8.434341430664062

Token 91: ' div' (ID: 4223)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5692775249481201
    2. ' split' → logprob: -1.0692775249481201
    3. 'strip' → logprob: -2.44427752494812
    4. ' strip' → logprob: -6.069277763366699
    5. 'rstrip' → logprob: -7.819277763366699
    6. ' splitter' → logprob: -8.3192777633667
    7. 'spl' → logprob: -8.4442777633667
    8. '.strip' → logprob: -8.5692777633667
    9. 'plit' → logprob: -9.3192777633667
    10. '.split' → logprob: -9.3192777633667

Token 92: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.2029663771390915
    2. 'ise' → logprob: -1.702966332435608
    3. 'is' → logprob: -8.827966690063477
    4. 'er' → logprob: -8.952966690063477
    5. 'isez' → logprob: -8.952966690063477
    6. '   ' → logprob: -9.327966690063477
    7. 'erse' → logprob: -9.452966690063477
    8. 'isé' → logprob: -9.452966690063477
    9. 'ider' → logprob: -9.702966690063477
    10. '#' → logprob: -9.827966690063477

Token 93: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15221086144447327
    2. '   ' → logprob: -3.4022109508514404
    3. '    ' → logprob: -4.152210712432861
    4. ',' → logprob: -4.402210712432861
    5. '('' → logprob: -4.402210712432861
    6. ' par' → logprob: -4.902210712432861
    7. ' ' → logprob: -5.152210712432861
    8. '(' → logprob: -5.152210712432861
    9. ')' → logprob: -5.277210712432861
    10. 'par' → logprob: -5.527210712432861

Token 94: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.006450085435062647
    2. ' convert' → logprob: -5.256450176239014
    3. 'convert' → logprob: -7.256450176239014
    4. ' map' → logprob: -8.131449699401855
    5. 'con' → logprob: -9.631449699401855
    6. ' transformer' → logprob: -9.881449699401855
    7. ' cast' → logprob: -11.381449699401855
    8. 'map' → logprob: -11.506449699401855
    9. ' ajouter' → logprob: -11.881449699401855
    10. ' continuer' → logprob: -11.881449699401855

Token 95: ' chaque' (ID: 21194)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.7199336886405945
    2. '   ' → logprob: -1.9699337482452393
    3. ' la' → logprob: -2.8449337482452393
    4. '    ' → logprob: -2.9699337482452393
    5. ' ' → logprob: -3.3449337482452393
    6. '(' → logprob: -3.4699337482452393
    7. ' les' → logprob: -3.7199337482452393
    8. '_' → logprob: -3.8449337482452393
    9. '()' → logprob: -3.9699337482452393
    10. ' to' → logprob: -4.21993350982666

Token 96: ' élément' (ID: 99627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35715803503990173
    2. ' élément' → logprob: -2.2321579456329346
    3. ' element' → logprob: -2.4821579456329346
    4. 'élé' → logprob: -2.7321579456329346
    5. '   ' → logprob: -4.857158184051514
    6. ' int' → logprob: -4.982158184051514
    7. 'int' → logprob: -5.107158184051514
    8. 'element' → logprob: -5.607158184051514
    9. ' morceau' → logprob: -5.607158184051514
    10. ' token' → logprob: -6.107158184051514

Token 97: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.03167078644037247
    2. ' ' → logprob: -4.281670570373535
    3. ' into' → logprob: -5.031670570373535
    4. '    ' → logprob: -5.906670570373535
    5. '   ' → logprob: -6.281670570373535
    6. ' in' → logprob: -6.406670570373535
    7. ' to' → logprob: -6.906670570373535
    8. ' ,' → logprob: -7.406670570373535
    9. ' )' → logprob: -7.656670570373535
    10. '       ' → logprob: -8.031670570373535

Token 98: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2402064949274063
    2. ' int' → logprob: -2.115206480026245
    3. 'ent' → logprob: -2.865206480026245
    4. ' entier' → logprob: -3.490206480026245
    5. ' ent' → logprob: -5.240206718444824
    6. ' integer' → logprob: -9.865206718444824
    7. ' ' → logprob: -10.490206718444824
    8. '   ' → logprob: -10.615206718444824
    9. '_ent' → logprob: -11.365206718444824
    10. '```' → logprob: -11.740206718444824

Token 99: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01644006371498108
    2. ',' → logprob: -4.766439914703369
    3. '        ' → logprob: -6.266439914703369
    4. ' ,' → logprob: -6.516439914703369
    5. '   ' → logprob: -6.516439914703369
    6. '    ' → logprob: -6.891439914703369
    7. '        
' → logprob: -8.016440391540527
    8. '      ' → logprob: -8.516440391540527
    9. ')' → logprob: -8.641440391540527
    10. ' ' → logprob: -8.766440391540527

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006027388386428356
    2. ',' → logprob: -5.7560272216796875
    3. '   ' → logprob: -6.1310272216796875
    4. ')' → logprob: -9.131027221679688
    5. '    ' → logprob: -9.131027221679688
    6. ' ,' → logprob: -9.506027221679688
    7. '        ' → logprob: -9.506027221679688
    8. '      ' → logprob: -9.881027221679688
    9. '        
' → logprob: -10.131027221679688
    10. ' =' → logprob: -10.256027221679688

Token 101: ' row' (ID: 5225)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.19848774373531342
    2. 'line' → logprob: -2.0734877586364746
    3. ' ligne' → logprob: -3.5734877586364746
    4. ' row' → logprob: -4.448487758636475
    5. '   ' → logprob: -5.073487758636475
    6. 'ligne' → logprob: -5.323487758636475
    7. 'row' (adapté à ' row') → logprob: -6.323487758636475
    8. '       ' → logprob: -6.948487758636475
    9. ' lines' → logprob: -8.698487281799316
    10. ' lignes' → logprob: -9.198487281799316

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019329203059896827
    2. '=' → logprob: -6.2519330978393555
    3. '_' → logprob: -13.501933097839355
    4. 's' → logprob: -13.501933097839355
    5. ' ' → logprob: -15.001933097839355
    6. ')' → logprob: -15.376933097839355
    7. ' =[' → logprob: -15.376933097839355
    8. ' ' → logprob: -15.876933097839355
    9. ' =
' → logprob: -16.25193214416504
    10. ',' → logprob: -16.25193214416504

Token 103: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3868749439716339
    2. ' list' → logprob: -1.1368749141693115
    3. '[list' → logprob: -13.13687515258789
    4. '[' → logprob: -13.38687515258789
    5. ' [' → logprob: -14.88687515258789
    6. 'map' → logprob: -17.26187515258789
    7. '	list' → logprob: -17.51187515258789
    8. ' ' → logprob: -17.76187515258789
    9. 'input' → logprob: -17.76187515258789
    10. '=list' → logprob: -18.13687515258789

Token 104: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.615255839889869e-05
    2. ' int' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.00009536743164
    4. '```' → logprob: -18.62509536743164
    5. '(int' → logprob: -19.37509536743164
    6. ' ' → logprob: -19.50009536743164
    7. '  ' → logprob: -20.00009536743164
    8. '	int' → logprob: -20.00009536743164
    9. '<int' → logprob: -20.37509536743164
    10. 'in' → logprob: -21.37509536743164

Token 105: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.029221542179584503
    2. '(i' → logprob: -4.404221534729004
    3. '(token' → logprob: -5.029221534729004
    4. '(part' → logprob: -6.154221534729004
    5. '(' → logprob: -6.404221534729004
    6. '(value' → logprob: -6.529221534729004
    7. '(s' → logprob: -6.779221534729004
    8. '(num' → logprob: -6.779221534729004
    9. '(input' → logprob: -7.779221534729004
    10. '(cell' → logprob: -8.154221534729004

Token 106: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022392053506337106
    2. '(x' → logprob: -9.375224113464355
    3. 'input' → logprob: -10.000224113464355
    4. ' )' → logprob: -10.375224113464355
    5. 'x' → logprob: -10.875224113464355
    6. 'for' → logprob: -11.250224113464355
    7. '(s' → logprob: -11.875224113464355
    8. '()' → logprob: -12.250224113464355
    9. '(input' → logprob: -12.500224113464355
    10. 's' → logprob: -12.750224113464355

Token 107: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7014541029930115
    2. ' for' → logprob: -1.0764541625976562
    3. '(input' → logprob: -2.0764541625976562
    4. '(x' → logprob: -3.9514541625976562
    5. '(line' → logprob: -4.826454162597656
    6. '(s' → logprob: -5.451454162597656
    7. 'input' → logprob: -6.576454162597656
    8. '(i' → logprob: -6.701454162597656
    9. '(token' → logprob: -6.951454162597656
    10. '(' → logprob: -7.701454162597656

Token 108: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1602243334054947
    2. 'input' → logprob: -1.9102243185043335
    3. '(input' → logprob: -16.66022491455078
    4. '=input' → logprob: -18.16022491455078
    5. '_input' → logprob: -18.41022491455078
    6. '	input' → logprob: -18.41022491455078
    7. ' ' → logprob: -19.91022491455078
    8. ',input' → logprob: -20.03522491455078
    9. '<input' → logprob: -20.28522491455078
    10. '.input' → logprob: -20.78522491455078

Token 109: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.27044838666915894
    2. ' in' → logprob: -1.6454484462738037
    3. 'input' → logprob: -3.1454484462738037
    4. 'in' → logprob: -7.520448207855225
    5. '(input' → logprob: -9.145448684692383
    6. '<|end|>' → logprob: -9.520448684692383
    7. '=input' → logprob: -9.520448684692383
    8. ' on' → logprob: -10.020448684692383
    9. ' range' → logprob: -10.770448684692383
    10. ' raw' → logprob: -11.020448684692383

Token 110: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38687217235565186
    2. ' input' → logprob: -1.1368721723556519
    3. '(input' → logprob: -14.136872291564941
    4. '<input' → logprob: -16.011871337890625
    5. '=input' → logprob: -16.386871337890625
    6. '.input' → logprob: -16.761871337890625
    7. '	input' → logprob: -16.761871337890625
    8. ' ' → logprob: -17.136871337890625
    9. '[input' → logprob: -17.636871337890625
    10. '_input' → logprob: -18.011871337890625

Token 111: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002661039761733264
    2. '()' → logprob: -8.250266075134277
    3. '()]' → logprob: -12.625266075134277
    4. ' ().' → logprob: -14.375266075134277
    5. '())' → logprob: -14.500266075134277
    6. '(' → logprob: -15.625266075134277
    7. '()].' → logprob: -16.125267028808594
    8. '()
' → logprob: -16.500267028808594
    9. '.split' → logprob: -17.625267028808594
    10. 'split' → logprob: -18.625267028808594

Token 112: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01815134845674038
    2. 'strip' → logprob: -4.01815128326416
    3. 'rstrip' → logprob: -13.51815128326416
    4. '(split' → logprob: -16.768152236938477
    5. ' split' → logprob: -17.018152236938477
    6. 'spl' → logprob: -18.268152236938477
    7. '.split' → logprob: -19.018152236938477
    8. ' strip' → logprob: -20.268152236938477
    9. 'replace' → logprob: -21.018152236938477
    10. 'plit' → logprob: -21.143152236938477

Token 113: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.03170474246144295
    2. '()' → logprob: -3.7817046642303467
    3. '())' → logprob: -4.781704902648926
    4. '(' → logprob: -10.906704902648926
    5. '('' → logprob: -11.656704902648926
    6. '()]
' → logprob: -11.781704902648926
    7. ')]' → logprob: -12.406704902648926
    8. '()][' → logprob: -14.156704902648926
    9. ']' → logprob: -14.281704902648926
    10. '()))' → logprob: -14.531704902648926

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001817297888919711
    2. '   ' → logprob: -9.250182151794434
    3. ')' → logprob: -9.750182151794434
    4. '<|end|>' → logprob: -11.625182151794434
    5. '      ' → logprob: -12.500182151794434
    6. '        
' → logprob: -12.625182151794434
    7. '        ' → logprob: -13.375182151794434
    8. '           ' → logprob: -13.500182151794434
    9. '	' → logprob: -13.625182151794434
    10. 'b' → logprob: -13.750182151794434

Token 115: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3014097809791565
    2. '   ' → logprob: -1.4264097213745117
    3. '       ' → logprob: -3.9264097213745117
    4. ' bingo' → logprob: -8.301409721374512
    5. '    ' → logprob: -10.551409721374512
    6. '  ' → logprob: -11.051409721374512
    7. ' ' → logprob: -11.176409721374512
    8. ' b' → logprob: -11.301409721374512
    9. '	b' → logprob: -11.801409721374512
    10. '      ' → logprob: -12.551409721374512

Token 116: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -3.531315314830863e-06
    2. '_cards' → logprob: -13.250003814697266
    3. '_car' → logprob: -14.250003814697266
    4. '_CARD' → logprob: -15.375003814697266
    5. 'Card' → logprob: -15.500003814697266
    6. 'card' → logprob: -15.500003814697266
    7. '_' → logprob: -15.500003814697266
    8. '_cart' → logprob: -16.125003814697266
    9. '_code' → logprob: -17.250003814697266
    10. '	card' → logprob: -17.750003814697266

Token 117: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008618827909231186
    2. '.' → logprob: -4.7586188316345215
    3. 'append' → logprob: -13.258618354797363
    4. '.Append' → logprob: -14.008618354797363
    5. '.app' → logprob: -14.383618354797363
    6. '.extend' → logprob: -14.383618354797363
    7. '_append' → logprob: -15.883618354797363
    8. '.ap' → logprob: -16.13361930847168
    9. ' .' → logprob: -16.38361930847168
    10. '.setdefault' → logprob: -16.75861930847168

Token 118: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -5.88418151892256e-05
    2. '(' → logprob: -9.750059127807617
    3. '(line' → logprob: -15.125059127807617
    4. ' (' → logprob: -15.875059127807617
    5. 'row' → logprob: -17.000059127807617
    6. '(rows' → logprob: -17.375059127807617
    7. '(
' → logprob: -18.000059127807617
    8. '(Row' → logprob: -19.125059127807617
    9. ' row' → logprob: -19.750059127807617
    10. ',row' → logprob: -20.500059127807617

Token 119: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038682064041495323
    2. '   ' → logprob: -7.875386714935303
    3. ')
' → logprob: -12.125387191772461
    4. ')return' → logprob: -14.625387191772461
    5. ' )' → logprob: -14.625387191772461
    6. '       ' → logprob: -15.000387191772461
    7. '))' → logprob: -17.62538719177246
    8. ' ' → logprob: -18.25038719177246
    9. '`)' → logprob: -18.25038719177246
    10. '}' → logprob: -18.37538719177246

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12948594987392426
    2. 'return' → logprob: -2.379485845565796
    3. '
' → logprob: -3.879485845565796
    4. ' return' → logprob: -5.129486083984375
    5. '    
' → logprob: -6.254486083984375
    6. ' ' → logprob: -9.254486083984375
    7. '  
' → logprob: -9.629486083984375
    8. '	return' → logprob: -9.754486083984375
    9. '\n' → logprob: -10.879486083984375
    10. ':return' → logprob: -10.879486083984375

Token 121: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.450992226600647
    2. 'return' (adapté à ' return') → logprob: -1.075992226600647
    3. ' return' → logprob: -4.200992107391357
    4. '
' → logprob: -5.325992107391357
    5. '	return' → logprob: -6.825992107391357
    6. ' ' → logprob: -7.825992107391357
    7. '    
' → logprob: -8.325992584228516
    8. ':return' → logprob: -9.075992584228516
    9. '<|end|>' → logprob: -9.450992584228516
    10. '\n' → logprob: -9.450992584228516

Token 122: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12693166732788086
    2. ' bingo' → logprob: -2.126931667327881
    3. 'bing' → logprob: -14.001932144165039
    4. ' b' → logprob: -14.376932144165039
    5. '	b' → logprob: -14.376932144165039
    6. '_b' → logprob: -14.626932144165039
    7. '(b' → logprob: -14.876932144165039
    8. ' ' → logprob: -15.626932144165039
    9. ' bing' → logprob: -15.626932144165039
    10. ' Bingo' → logprob: -15.876932144165039

Token 123: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -1.7120533811976202e-05
    2. '_' → logprob: -11.125017166137695
    3. '_c' → logprob: -14.125017166137695
    4. '_car' → logprob: -14.250017166137695
    5. '_cards' → logprob: -15.250017166137695
    6. 'card' → logprob: -15.500017166137695
    7. '_cart' → logprob: -15.500017166137695
    8. '_code' → logprob: -16.500017166137695
    9. ' _' → logprob: -16.625017166137695
    10. '_CARD' → logprob: -17.000017166137695

Token 124: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.040663085877895355
    2. '

' → logprob: -3.915663003921509
    3. 'def' → logprob: -4.165663242340088
    4. '\n' → logprob: -6.415663242340088
    5. '```' → logprob: -7.165663242340088
    6. '<|end|>' → logprob: -7.415663242340088
    7. '[' → logprob: -7.915663242340088
    8. '#' → logprob: -7.915663242340088
    9. 'newline' → logprob: -9.04066276550293
    10. '\' → logprob: -9.16566276550293

Token 125: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007400038186460733
    2. '
' → logprob: -5.257400035858154
    3. '

' → logprob: -7.007400035858154
    4. '#' → logprob: -7.632400035858154
    5. '```' → logprob: -8.007400512695312
    6. 'b' → logprob: -8.632400512695312
    7. '\' → logprob: -9.257400512695312
    8. '\n' → logprob: -10.007400512695312
    9. 'import' → logprob: -10.382400512695312
    10. 'for' → logprob: -11.257400512695312

Token 126: ' read' (ID: 1729)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.30904969573020935
    2. ' is' → logprob: -1.6840497255325317
    3. ' find' → logprob: -2.934049606323242
    4. ' generate' → logprob: -4.809049606323242
    5. 'check' → logprob: -4.809049606323242
    6. ' has' → logprob: -5.934049606323242
    7. 'is' → logprob: -6.059049606323242
    8. ' main' → logprob: -6.309049606323242
    9. ' play' → logprob: -7.434049606323242
    10. ' count' → logprob: -7.684049606323242

Token 127: '_called' (ID: 70949)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0029642691370099783
    2. '_' → logprob: -6.877964496612549
    3. '_input' → logprob: -8.37796401977539
    4. '_cards' → logprob: -8.87796401977539
    5. '_numbers' → logprob: -8.87796401977539
    6. '_moves' → logprob: -9.62796401977539
    7. '_results' → logprob: -9.62796401977539
    8. '_number' → logprob: -9.62796401977539
    9. '_card' → logprob: -9.75296401977539
    10. '_s' → logprob: -9.87796401977539

Token 128: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0010581758106127381
    2. '_' → logprob: -7.501058101654053
    3. '_cards' → logprob: -8.376058578491211
    4. '_b' → logprob: -9.376058578491211
    5. '_n' → logprob: -10.376058578491211
    6. '_number' → logprob: -10.376058578491211
    7. '_nums' → logprob: -10.751058578491211
    8. '_words' → logprob: -10.876058578491211
    9. '_tokens' → logprob: -11.001058578491211
    10. '_names' → logprob: -11.001058578491211

Token 129: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00015693542081862688
    2. ' ():' → logprob: -8.875157356262207
    3. '():
' → logprob: -11.125157356262207
    4. '()' → logprob: -13.125157356262207
    5. '():
' → logprob: -15.625157356262207
    6. ' ()' → logprob: -16.87515640258789
    7. '():

' → logprob: -17.12515640258789
    8. '(' → logprob: -18.25015640258789
    9. 'def' → logprob: -19.25015640258789
    10. '   ' → logprob: -19.50015640258789

Token 130: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.056140486150979996
    2. '   ' → logprob: -3.556140422821045
    3. '()' → logprob: -4.181140422821045
    4. '():
' → logprob: -4.556140422821045
    5. ':' → logprob: -9.181140899658203
    6. ' ():' → logprob: -9.806140899658203
    7. '(' → logprob: -9.931140899658203
    8. ' ()' → logprob: -11.181140899658203
    9. 'def' → logprob: -11.306140899658203
    10. '():
' → logprob: -12.556140899658203

Token 131: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06085805222392082
    2. '"""
' (adapté à ' """
') → logprob: -3.5608580112457275
    3. ' called' → logprob: -4.310858249664307
    4. 'called' → logprob: -4.435858249664307
    5. '
' → logprob: -6.685858249664307
    6. '"""' → logprob: -6.935858249664307
    7. 'n' → logprob: -7.310858249664307
    8. ' """
' → logprob: -7.435858249664307
    9. 'numbers' → logprob: -7.810858249664307
    10. 'num' → logprob: -8.185857772827148

Token 132: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.10244874656200409
    2. '   ' → logprob: -2.4774487018585205
    3. '"""' → logprob: -4.3524489402771
    4. '"' → logprob: -8.727448463439941
    5. '""' → logprob: -8.977448463439941
    6. 'def' → logprob: -9.352448463439941
    7. '"
' → logprob: -9.727448463439941
    8. '#' → logprob: -9.977448463439941
    9. ' """
' → logprob: -10.477448463439941
    10. '"""
' → logprob: -11.727448463439941

Token 133: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21322913467884064
    2. 'called' → logprob: -2.713229179382324
    3. 'Called' → logprob: -3.338229179382324
    4. 'def' → logprob: -3.588229179382324
    5. ' called' → logprob: -3.713229179382324
    6. '"""
' → logprob: -3.963229179382324
    7. ' Called' → logprob: -4.463229179382324
    8. '"""' → logprob: -6.463229179382324
    9. 'return' → logprob: -6.588229179382324
    10. 'appel' → logprob: -6.963229179382324

Token 134: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1879071146249771
    2. ' une' → logprob: -2.1879072189331055
    3. 'une' → logprob: -4.0629072189331055
    4. '():' → logprob: -4.3129072189331055
    5. ' la' → logprob: -4.5629072189331055
    6. '   ' → logprob: -5.5629072189331055
    7. ' ' → logprob: -5.5629072189331055
    8. ' un' → logprob: -6.0629072189331055
    9. ' des' → logprob: -6.3129072189331055
    10. 'des' → logprob: -7.0629072189331055

Token 135: ' liste' (ID: 31719)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.7545025944709778
    2. ' ligne' → logprob: -1.129502534866333
    3. 'liste' → logprob: -2.504502534866333
    4. ' liste' → logprob: -3.379502534866333
    5. 'input' → logprob: -3.879502534866333
    6. 'l' → logprob: -4.129502773284912
    7. 'entrée' → logprob: -4.504502773284912
    8. ' input' → logprob: -5.004502773284912
    9. 'line' → logprob: -5.254502773284912
    10. 's' → logprob: -5.504502773284912

Token 136: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.04779193177819252
    2. '_des' → logprob: -3.9227919578552246
    3. 'des' → logprob: -3.9227919578552246
    4. '()' → logprob: -5.922791957855225
    5. ' complète' → logprob: -6.422791957855225
    6. '<|end|>' → logprob: -6.547791957855225
    7. '_' → logprob: -8.172791481018066
    8. 'd' → logprob: -8.547791481018066
    9. ' d' → logprob: -8.922791481018066
    10. ' ' → logprob: -9.172791481018066

Token 137: ' nombres' (ID: 76205)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.6691253781318665
    2. ' num' → logprob: -0.9191253781318665
    3. ' nombres' → logprob: -2.5441253185272217
    4. 'ent' → logprob: -6.044125556945801
    5. 'numbers' → logprob: -6.169125556945801
    6. ' appels' → logprob: -6.669125556945801
    7. 'nums' → logprob: -6.919125556945801
    8. 'n' → logprob: -7.044125556945801
    9. ' numbers' → logprob: -7.294125556945801
    10. ' ent' → logprob: -8.0441255569458

Token 138: ' appel' (ID: 34642)
  Prédit: 'appel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appel' → logprob: -0.07625193148851395
    2. ' appel' → logprob: -3.201251983642578
    3. 'app' → logprob: -3.576251983642578
    4. '_' → logprob: -6.951251983642578
    5. ''appel' → logprob: -6.951251983642578
    6. ' appels' → logprob: -7.451251983642578
    7. ' appelée' → logprob: -7.576251983642578
    8. '_app' → logprob: -7.826251983642578
    9. 's' → logprob: -8.576251983642578
    10. ' appelé' → logprob: -8.576251983642578

Token 139: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -1.8074162653647363e-05
    2. 's' → logprob: -11.625018119812012
    3. 'é' → logprob: -12.125018119812012
    4. 'es' → logprob: -13.000018119812012
    5. 'ÉS' → logprob: -14.250018119812012
    6. 'ées' → logprob: -14.500018119812012
    7. 'ès' → logprob: -16.125017166137695
    8. 'ée' → logprob: -16.750017166137695
    9. 'És' → logprob: -17.250017166137695
    10. 'ės' → logprob: -17.625017166137695

Token 140: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013982375152409077
    2. ' ()' → logprob: -5.13898229598999
    3. '():' → logprob: -5.26398229598999
    4. '   ' → logprob: -7.01398229598999
    5. 'def' → logprob: -7.51398229598999
    6. ',' → logprob: -8.388982772827148
    7. 'appel' → logprob: -8.513982772827148
    8. ' called' → logprob: -8.763982772827148
    9. ' appelée' → logprob: -8.888982772827148
    10. 'called' → logprob: -9.138982772827148

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003914779983460903
    2. 'def' → logprob: -5.753914833068848
    3. ' called' → logprob: -8.503914833068848
    4. ' ' → logprob: -9.253914833068848
    5. 'called' → logprob: -9.628914833068848
    6. '()' → logprob: -9.753914833068848
    7. 'n' → logprob: -9.753914833068848
    8. '  ' → logprob: -10.253914833068848
    9. '    ' → logprob: -10.253914833068848
    10. 'Called' → logprob: -10.753914833068848

Token 142: ' L' (ID: 451)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.8951772451400757
    2. '   ' → logprob: -1.0201772451400757
    3. ' called' → logprob: -1.5201772451400757
    4. 'def' → logprob: -6.145177364349365
    5. 'n' → logprob: -6.145177364349365
    6. 'numbers' → logprob: -6.145177364349365
    7. 'Called' → logprob: -6.895177364349365
    8. '"""
' → logprob: -7.145177364349365
    9. ' Called' → logprob: -7.520177364349365
    10. 'lines' → logprob: -7.645177364349365

Token 143: ''utilisateur' (ID: 140803)
  Prédit: 'ignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ignes' → logprob: -0.8765933513641357
    2. 'a' → logprob: -2.3765933513641357
    3. 'i' → logprob: -2.3765933513641357
    4. 'es' → logprob: -2.3765933513641357
    5. 'igne' → logprob: -2.6265933513641357
    6. 'ine' → logprob: -2.7515933513641357
    7. 'e' → logprob: -2.7515933513641357
    8. 'ines' → logprob: -2.8765933513641357
    9. 'n' → logprob: -4.501593589782715
    10. 'input' → logprob: -5.251593589782715

Token 144: ' sais' (ID: 30010)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0632966756820679
    2. '():' → logprob: -1.5632966756820679
    3. '   ' → logprob: -2.6882967948913574
    4. ' ()' → logprob: -2.8132967948913574
    5. ' doit' → logprob: -3.0632967948913574
    6. ' input' → logprob: -3.1882967948913574
    7. ' def' → logprob: -3.4382967948913574
    8. ' a' → logprob: -3.5632967948913574
    9. ' ' → logprob: -3.6882967948913574
    10. ':' → logprob: -3.8132967948913574

Token 145: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0017378974007442594
    2. 't' → logprob: -6.62673807144165
    3. 'era' → logprob: -8.876737594604492
    4. 'e' → logprob: -9.626737594604492
    5. 'ira' → logprob: -9.751737594604492
    6. 'sit' → logprob: -10.001737594604492
    7. 'er' → logprob: -10.376737594604492
    8. 'is' → logprob: -11.501737594604492
    9. 'a' → logprob: -11.626737594604492
    10. 'ra' → logprob: -11.751737594604492

Token 146: ' d' (ID: 272)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.004720137920230627
    2. ' un' → logprob: -6.129720211029053
    3. 'une' → logprob: -6.379720211029053
    4. ' la' → logprob: -8.129719734191895
    5. ' ' → logprob: -8.254719734191895
    6. ' les' → logprob: -9.754719734191895
    7. '()' → logprob: -9.754719734191895
    8. ' a' → logprob: -10.004719734191895
    9. 'un' → logprob: -10.629719734191895
    10. '   ' → logprob: -11.254719734191895

Token 147: ''abord' (ID: 89989)
  Prédit: ''une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.6371265649795532
    2. 'e' → logprob: -1.7621265649795532
    3. 'une' → logprob: -1.8871265649795532
    4. 'es' → logprob: -2.2621264457702637
    5. 'input' → logprob: -4.512126445770264
    6. ''un' → logprob: -4.512126445770264
    7. ' input' → logprob: -4.887126445770264
    8. ''' → logprob: -6.137126445770264
    9. ''abord' → logprob: -6.387126445770264
    10. ''entrée' → logprob: -6.512126445770264

Token 148: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.000641107559204
    2. ' un' → logprob: -1.125641107559204
    3. ' le' → logprob: -2.125641107559204
    4. ' la' → logprob: -2.125641107559204
    5. ' ' → logprob: -3.375641107559204
    6. 'une' → logprob: -3.875641107559204
    7. 'un' → logprob: -5.500640869140625
    8. 'le' → logprob: -5.500640869140625
    9. ' a' → logprob: -6.625640869140625
    10. ' n' → logprob: -7.250640869140625

Token 149: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16927076876163483
    2. ' entier' → logprob: -2.6692707538604736
    3. 'ent' → logprob: -2.9192707538604736
    4. ' nombre' → logprob: -4.294270992279053
    5. 'nombre' → logprob: -4.419270992279053
    6. ' ' → logprob: -5.669270992279053
    7. ' ent' → logprob: -6.544270992279053
    8. 'int' → logprob: -7.669270992279053
    9. ' e' → logprob: -7.669270992279053
    10. 'n' → logprob: -7.794270992279053

Token 150: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9625742435455322
    2. ',' → logprob: -1.3375742435455322
    3. ' (' → logprob: -2.0875742435455322
    4. ' )' → logprob: -2.5875742435455322
    5. ' ,' → logprob: -3.3375742435455322
    6. '()' → logprob: -3.5875742435455322
    7. ')' → logprob: -3.9625742435455322
    8. '  ' → logprob: -4.087574005126953
    9. ' n' → logprob: -4.587574005126953
    10. '(' → logprob: -4.712574005126953

Token 151: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27973225712776184
    2. ')' → logprob: -2.2797322273254395
    3. '<|end|>' → logprob: -2.5297322273254395
    4. '   ' → logprob: -3.9047322273254395
    5. ' ' → logprob: -4.4047322273254395
    6. ' ,' → logprob: -4.7797322273254395
    7. ' (' → logprob: -4.9047322273254395
    8. '<|end|>' → logprob: -5.5297322273254395
    9. '()' → logprob: -6.0297322273254395
    10. ' )' → logprob: -6.1547322273254395

Token 152: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026337342336773872
    2. '),' → logprob: -4.026337146759033
    3. ' )' → logprob: -4.901337146759033
    4. ' ),' → logprob: -8.276337623596191
    5. '   ' → logprob: -8.901337623596191
    6. 'int' → logprob: -9.026337623596191
    7. 'n' → logprob: -10.401337623596191
    8. ' ' → logprob: -10.776337623596191
    9. '):' → logprob: -10.901337623596191
    10. ' la' → logprob: -11.276337623596191

Token 153: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.693688154220581
    2. 'nombre' → logprob: -0.693688154220581
    3. ' nombres' → logprob: -9.19368839263916
    4. 'number' → logprob: -9.19368839263916
    5. '_nombre' → logprob: -9.19368839263916
    6. ')' → logprob: -9.69368839263916
    7. ' number' → logprob: -9.69368839263916
    8. 'n' → logprob: -9.69368839263916
    9. ' ' → logprob: -11.06868839263916
    10. 'Nombre' → logprob: -11.44368839263916

Token 154: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ' lignes' (ID: 81687)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6654229164123535
    2. ' nombres' → logprob: -0.9154229164123535
    3. 'num' → logprob: -3.1654229164123535
    4. 'numbers' → logprob: -3.9154229164123535
    5. ' num' → logprob: -4.5404229164123535
    6. 'nombre' → logprob: -6.1654229164123535
    7. 'appel' → logprob: -6.1654229164123535
    8. ' appels' → logprob: -6.4154229164123535
    9. ' numbers' → logprob: -6.7904229164123535
    10. 'called' → logprob: -6.7904229164123535

Token 156: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040643393993377686
    2. '),' → logprob: -4.040643215179443
    3. ' )' → logprob: -4.540643215179443
    4. 'appel' → logprob: -4.915643215179443
    5. ' ),' → logprob: -7.290643215179443
    6. 'called' → logprob: -7.540643215179443
    7. '_called' → logprob: -7.540643215179443
    8. ' appel' → logprob: -7.665643215179443
    9. ' called' → logprob: -7.915643215179443
    10. ' appelée' → logprob: -7.915643215179443

Token 157: ' sais' (ID: 30010)
  Prédit: 'appel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'appel' → logprob: -0.5928144454956055
    2. ' appel' → logprob: -2.0928144454956055
    3. ' called' → logprob: -3.0928144454956055
    4. 'called' → logprob: -3.0928144454956055
    5. 'app' → logprob: -3.2178144454956055
    6. 'l' → logprob: -3.3428144454956055
    7. ''appel' → logprob: -3.4678144454956055
    8. ' input' → logprob: -3.7178144454956055
    9. 'n' → logprob: -4.0928144454956055
    10. 'input' → logprob: -4.0928144454956055

Token 158: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008500993251800537
    2. 'es' → logprob: -5.883501052856445
    3. 's' → logprob: -6.133501052856445
    4. 'sie' → logprob: -6.258501052856445
    5. 'ie' → logprob: -7.133501052856445
    6. 'ée' → logprob: -7.758501052856445
    7. '```' → logprob: -9.883501052856445
    8. 'ss' → logprob: -9.883501052856445
    9. 'rie' → logprob: -10.133501052856445
    10. 'se' → logprob: -11.133501052856445

Token 159: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005140658002346754
    2. '),' → logprob: -5.630140781402588
    3. ' )' → logprob: -6.755140781402588
    4. ').' → logprob: -9.25514030456543
    5. 's' → logprob: -10.13014030456543
    6. '")' → logprob: -11.00514030456543
    7. ',' → logprob: -11.00514030456543
    8. 'appel' → logprob: -11.00514030456543
    9. '"""' → logprob: -11.13014030456543
    10. '):' → logprob: -11.25514030456543

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43744316697120667
    2. '\n' → logprob: -1.6874431371688843
    3. '
' → logprob: -2.062443256378174
    4. 'n' → logprob: -4.187443256378174
    5. ' 
' → logprob: -4.687443256378174
    6. '  
' → logprob: -4.812443256378174
    7. '    
' → logprob: -5.187443256378174
    8. 'def' → logprob: -7.062443256378174
    9. ' ' → logprob: -7.437443256378174
    10. '   
' → logprob: -7.562443256378174

Token 161: ' Ensuite' (ID: 113884)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025195383932441473
    2. '    
' → logprob: -7.002519607543945
    3. 'def' → logprob: -7.252519607543945
    4. '
' → logprob: -7.752519607543945
    5. 'n' → logprob: -8.752519607543945
    6. '  
' → logprob: -9.377519607543945
    7. ' 
' → logprob: -9.377519607543945
    8. '\n' → logprob: -9.877519607543945
    9. '    ' → logprob: -11.127519607543945
    10. '   
' → logprob: -11.127519607543945

Token 162: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3326367139816284
    2. ',' → logprob: -1.3326367139816284
    3. ':' → logprob: -5.082636833190918
    4. ' for' → logprob: -5.457636833190918
    5. '  ' → logprob: -5.457636833190918
    6. ' ' → logprob: -6.957636833190918
    7. ' un' → logprob: -7.332636833190918
    8. 'for' → logprob: -7.457636833190918
    9. 'N' → logprob: -8.332636833190918
    10. ' N' → logprob: -8.332636833190918

Token 163: ' N' (ID: 478)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4754703640937805
    2. 'for' → logprob: -0.9754703640937805
    3. 'range' → logprob: -8.100470542907715
    4. '
' → logprob: -8.475470542907715
    5. ' N' → logprob: -8.850470542907715
    6. 'n' → logprob: -8.850470542907715
    7. ' range' → logprob: -9.225470542907715
    8. '   ' → logprob: -9.350470542907715
    9. ' la' → logprob: -9.850470542907715
    10. ' pour' → logprob: -9.975470542907715

Token 164: ' lignes' (ID: 81687)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: ''' (ID: 6)
  Prédit: ''entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.0674605593085289
    2. ''ent' → logprob: -3.567460536956787
    3. 'e' → logprob: -4.192460536956787
    4. 'entrée' → logprob: -4.442460536956787
    5. ''appel' → logprob: -5.692460536956787
    6. 'ent' → logprob: -5.942460536956787
    7. ' input' → logprob: -6.942460536956787
    8. ''app' → logprob: -7.317460536956787
    9. '’entrée' → logprob: -7.817460536956787
    10. 'input' → logprob: -7.942460536956787

Token 167: 'entr' (ID: 12792)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.4268505871295929
    2. 'ent' → logprob: -2.0518505573272705
    3. ''entrée' → logprob: -2.1768505573272705
    4. 'input' → logprob: -2.9268505573272705
    5. 'appel' → logprob: -4.55185079574585
    6. 'entr' → logprob: -4.67685079574585
    7. ' input' → logprob: -5.30185079574585
    8. 'app' → logprob: -5.42685079574585
    9. ''appel' → logprob: -5.67685079574585
    10. 'e' → logprob: -5.80185079574585

Token 168: 'ées' (ID: 5161)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.000500966387335211
    2. 'ées' → logprob: -7.7505011558532715
    3. 'e' → logprob: -10.000500679016113
    4. 'rée' → logprob: -11.500500679016113
    5. 'ee' → logprob: -12.000500679016113
    6. 'é' → logprob: -12.125500679016113
    7. 'er' → logprob: -14.000500679016113
    8. '```' → logprob: -15.000500679016113
    9. 'lée' → logprob: -15.125500679016113
    10. 'éer' → logprob: -15.500500679016113

Token 169: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.6902769804000854
    2. '   ' → logprob: -1.9402769804000854
    3. ' are' → logprob: -2.065277099609375
    4. ' supplémentaires' → logprob: -2.565277099609375
    5. 's' → logprob: -3.440277099609375
    6. ',' → logprob: -3.565277099609375
    7. '       ' → logprob: -3.690277099609375
    8. '<|end|>' → logprob: -3.815277099609375
    9. ' ' → logprob: -4.565277099609375
    10. 'are' → logprob: -5.065277099609375

Token 170: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.17068304121494293
    2. ' l' → logprob: -2.4206831455230713
    3. 'lus' → logprob: -3.6706831455230713
    4. ' lus' → logprob: -3.7956831455230713
    5. 'lu' → logprob: -4.670682907104492
    6. ' lu' → logprob: -6.045682907104492
    7. 'lut' → logprob: -6.295682907104492
    8. '   ' → logprob: -6.545682907104492
    9. ' ' → logprob: -6.545682907104492
    10. 's' → logprob: -7.545682907104492

Token 171: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.00173337128944695
    2. 'u' → logprob: -6.501733303070068
    3. 'ue' → logprob: -9.751733779907227
    4. 'is' → logprob: -9.751733779907227
    5. 'us' → logprob: -10.376733779907227
    6. '```' → logprob: -11.251733779907227
    7. '
' → logprob: -11.501733779907227
    8. 'isées' → logprob: -11.751733779907227
    9. '"""' → logprob: -11.876733779907227
    10. '#' → logprob: -11.876733779907227

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23044374585151672
    2. '.' → logprob: -2.3554437160491943
    3. ' ,' → logprob: -2.4804437160491943
    4. ' (' → logprob: -4.730443954467773
    5. '   ' → logprob: -5.230443954467773
    6. '()' → logprob: -5.730443954467773
    7. '(' → logprob: -5.855443954467773
    8. ':' → logprob: -6.230443954467773
    9. 'def' → logprob: -7.730443954467773
    10. ' .' → logprob: -7.730443954467773

Token 173: ' chacune' (ID: 127465)
  Prédit: ' chacune'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chacune' → logprob: -0.5092891454696655
    2. ' each' → logprob: -1.2592891454696655
    3. ' chaque' → logprob: -3.009289264678955
    4. 'each' → logprob: -3.134289264678955
    5. ' contenant' → logprob: -4.759289264678955
    6. ' et' → logprob: -4.884289264678955
    7. ' avec' → logprob: -7.009289264678955
    8. ' puis' → logprob: -7.384289264678955
    9. ' chacun' → logprob: -7.384289264678955
    10. '   ' → logprob: -7.384289264678955

Token 174: ' pouvant' (ID: 104840)
  Prédit: ' contenant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contenant' → logprob: -1.3817172050476074
    2. '<|end|>' → logprob: -1.3817172050476074
    3. '   ' → logprob: -1.7567172050476074
    4. ' containing' → logprob: -2.7567172050476074
    5. 'cont' → logprob: -2.7567172050476074
    6. ' avec' → logprob: -3.0067172050476074
    7. ' with' → logprob: -3.7567172050476074
    8. ' consisting' → logprob: -4.381717205047607
    9. ' des' → logprob: -4.506717205047607
    10. ':' → logprob: -4.756717205047607

Token 175: ' conten' (ID: 23523)
  Prédit: ' conten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conten' → logprob: -0.2302543818950653
    2. 'con' → logprob: -2.2302544116973877
    3. 'conten' → logprob: -2.4802544116973877
    4. 'cont' → logprob: -5.230254173278809
    5. 'être' → logprob: -5.855254173278809
    6. ' comport' → logprob: -5.980254173278809
    7. ' être' → logprob: -6.730254173278809
    8. 'contin' → logprob: -7.355254173278809
    9. 'contain' → logprob: -7.605254173278809
    10. ' contain' → logprob: -7.730254173278809

Token 176: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.017096983268857002
    2. 'ir' → logprob: -4.142096996307373
    3. 't' → logprob: -7.642096996307373
    4. 'ter' → logprob: -8.517096519470215
    5. 'ent' → logprob: -8.767096519470215
    6. 'r' → logprob: -9.017096519470215
    7. 'e' → logprob: -10.017096519470215
    8. 'ar' → logprob: -11.517096519470215
    9. 'ier' → logprob: -12.017096519470215
    10. 'eer' → logprob: -12.267096519470215

Token 177: ' plusieurs' (ID: 20875)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7196946740150452
    2. ' plusieurs' → logprob: -1.0946946144104004
    3. 'des' → logprob: -2.3446946144104004
    4. ' un' → logprob: -3.3446946144104004
    5. ' multiple' → logprob: -3.8446946144104004
    6. ' une' → logprob: -5.2196946144104
    7. 'multiple' → logprob: -5.4696946144104
    8. ' ' → logprob: -5.4696946144104
    9. 'une' → logprob: -6.2196946144104
    10. '0' → logprob: -6.3446946144104

Token 178: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.4516776502132416
    2. ' numbers' → logprob: -2.0766775608062744
    3. 'n' → logprob: -2.2016775608062744
    4. 'numbers' → logprob: -2.8266775608062744
    5. ' ent' → logprob: -4.0766777992248535
    6. ' called' → logprob: -4.4516777992248535
    7. 'ent' → logprob: -4.5766777992248535
    8. ' appels' → logprob: -5.3266777992248535
    9. 'called' → logprob: -5.9516777992248535
    10. 'num' → logprob: -6.0766777992248535

Token 179: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0002016331272898242
    2. 'ers' → logprob: -9.125201225280762
    3. 'ier' → logprob: -9.750201225280762
    4. 'er' → logprob: -11.000201225280762
    5. 'i' → logprob: -12.250201225280762
    6. 'ières' → logprob: -12.500201225280762
    7. 'e' → logprob: -13.000201225280762
    8. 'es' → logprob: -13.750201225280762
    9. 'eurs' → logprob: -13.750201225280762
    10. 'ieres' → logprob: -13.875201225280762

Token 180: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6580036878585815
    2. ' separated' → logprob: -1.6580036878585815
    3. '.' → logprob: -2.283003807067871
    4. ' sépar' → logprob: -2.908003807067871
    5. '   ' → logprob: -3.033003807067871
    6. ' ,' → logprob: -3.408003807067871
    7. 'import' → logprob: -4.533003807067871
    8. 'def' → logprob: -4.533003807067871
    9. '       ' → logprob: -5.033003807067871
    10. 's' → logprob: -5.158003807067871

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33592328429222107
    2. ' separated' → logprob: -1.8359233140945435
    3. '#' → logprob: -3.335923194885254
    4. '       ' → logprob: -3.710923194885254
    5. ' et' → logprob: -3.710923194885254
    6. ' sépar' → logprob: -3.960923194885254
    7. 'import' → logprob: -5.210923194885254
    8. 'def' → logprob: -6.460923194885254
    9. ' jusqu' → logprob: -6.460923194885254
    10. '    ' → logprob: -6.585923194885254

Token 182: ' tous' (ID: 10688)
  Prédit: ' separated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' separated' → logprob: -0.874786913394928
    2. ' sépar' → logprob: -1.8747868537902832
    3. '#' → logprob: -2.499786853790283
    4. '   ' → logprob: -2.999786853790283
    5. ' jusqu' → logprob: -2.999786853790283
    6. ' et' → logprob: -3.124786853790283
    7. 'jus' → logprob: -3.999786853790283
    8. 'se' → logprob: -4.124786853790283
    9. ' all' → logprob: -4.124786853790283
    10. ' qui' → logprob: -4.374786853790283

Token 183: ' les' (ID: 1341)
  Prédit: ' sépar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.0588616319000721
    2. ' separated' → logprob: -3.93386173248291
    3. ' appel' → logprob: -4.55886173248291
    4. ' sur' → logprob: -4.68386173248291
    5. 'sé' → logprob: -5.43386173248291
    6. ' separ' → logprob: -6.05886173248291
    7. ' mis' → logprob: -6.30886173248291
    8. ' espac' → logprob: -6.30886173248291
    9. ' lus' → logprob: -6.55886173248291
    10. 's' → logprob: -6.55886173248291

Token 184: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.7215833067893982
    2. 'appel' → logprob: -2.096583366394043
    3. ' appel' → logprob: -2.221583366394043
    4. 'n' → logprob: -3.096583366394043
    5. 'ent' → logprob: -3.221583366394043
    6. ' numbers' → logprob: -3.346583366394043
    7. ' sépar' → logprob: -3.346583366394043
    8. 'sé' → logprob: -4.346583366394043
    9. 'numbers' → logprob: -4.346583366394043
    10. 'nombre' → logprob: -4.471583366394043

Token 185: ' sont' (ID: 5242)
  Prédit: ' appel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appel' → logprob: -0.4328615963459015
    2. 'appel' → logprob: -1.182861566543579
    3. 's' → logprob: -4.307861804962158
    4. ' étant' → logprob: -4.807861804962158
    5. ' sont' → logprob: -5.307861804962158
    6. ' n' → logprob: -6.057861804962158
    7. ' appelé' → logprob: -6.057861804962158
    8. ' sépar' → logprob: -6.182861804962158
    9. ' appels' → logprob: -6.307861804962158
    10. 'sé' → logprob: -6.807861804962158

Token 186: ' collect' (ID: 7916)
  Prédit: ' lus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lus' → logprob: -0.7368730902671814
    2. ' sépar' → logprob: -1.2368731498718262
    3. ' mis' → logprob: -2.861873149871826
    4. ' stock' → logprob: -3.361873149871826
    5. 'sé' → logprob: -3.486873149871826
    6. ' list' → logprob: -4.611873149871826
    7. ' lis' → logprob: -4.986873149871826
    8. ' collect' → logprob: -4.986873149871826
    9. 's' → logprob: -4.986873149871826
    10. ' ' → logprob: -5.111873149871826

Token 187: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0007030184497125447
    2. 'es' → logprob: -7.375702857971191
    3. 'ed' → logprob: -9.875702857971191
    4. 'é' → logprob: -11.000702857971191
    5. 'ées' → logprob: -12.375702857971191
    6. 'e' → logprob: -13.750702857971191
    7. 'ès' → logprob: -13.875702857971191
    8. 'ės' → logprob: -14.125702857971191
    9. 'er' → logprob: -15.250702857971191
    10. 'nés' → logprob: -16.000703811645508

Token 188: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.244549959897995
    2. ' et' → logprob: -2.7445499897003174
    3. 'dans' → logprob: -2.9945499897003174
    4. '   ' → logprob: -3.4945499897003174
    5. ',' → logprob: -3.6195499897003174
    6. ' en' → logprob: -4.244549751281738
    7. ' ' → logprob: -4.619549751281738
    8. ' into' → logprob: -5.494549751281738
    9. '    ' → logprob: -5.619549751281738
    10. ' ,' → logprob: -5.744549751281738

Token 189: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.047041941434144974
    2. ' a' → logprob: -3.547041893005371
    3. 'une' → logprob: -4.172041893005371
    4. 'a' → logprob: -7.047041893005371
    5. ' la' → logprob: -8.297041893005371
    6. '[]' → logprob: -8.672041893005371
    7. ' ' → logprob: -8.797041893005371
    8. ' un' → logprob: -8.922041893005371
    9. ''une' → logprob: -9.297041893005371
    10. 'la' → logprob: -11.047041893005371

Token 190: ' simple' (ID: 4705)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.6465809941291809
    2. 'liste' → logprob: -0.7715809941291809
    3. ' seule' → logprob: -5.146581172943115
    4. ' list' → logprob: -5.646581172943115
    5. 'list' → logprob: -6.146581172943115
    6. ' unique' → logprob: -6.521581172943115
    7. 'unique' → logprob: -8.021580696105957
    8. ' single' → logprob: -8.646580696105957
    9. ' ' → logprob: -9.271580696105957
    10. 'single' → logprob: -10.021580696105957

Token 191: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.2514311969280243
    2. 'liste' → logprob: -2.1264312267303467
    3. ' list' → logprob: -2.5014312267303467
    4. 'list' → logprob: -3.8764312267303467
    5. ' ' → logprob: -9.626431465148926
    6. 'l' → logprob: -9.626431465148926
    7. ' lista' → logprob: -10.251431465148926
    8. '   ' → logprob: -11.126431465148926
    9. '_list' → logprob: -11.126431465148926
    10. '[]' → logprob: -11.126431465148926

Token 192: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1979466676712036
    2. 'def' → logprob: -1.8229466676712036
    3. '.' → logprob: -4.572946548461914
    4. '
' → logprob: -6.447946548461914
    5. ',' → logprob: -6.947946548461914
    6. '       ' → logprob: -7.072946548461914
    7. '.
' → logprob: -7.197946548461914
    8. '()' → logprob: -7.322946548461914
    9. ' def' → logprob: -7.697946548461914
    10. '    
' → logprob: -8.072946548461914

Token 193: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.9197565913200378
    2. 'ent' → logprob: -2.0447566509246826
    3. 'ints' → logprob: -2.4197566509246826
    4. 'e' → logprob: -2.5447566509246826
    5. 'int' → logprob: -2.5447566509246826
    6. ''appel' → logprob: -2.5447566509246826
    7. '```' → logprob: -3.4197566509246826
    8. ''app' → logprob: -4.0447564125061035
    9. 'inte' → logprob: -4.2947564125061035
    10. ''int' → logprob: -4.2947564125061035

Token 194: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0007453064317815006
    2. 'ier' → logprob: -7.3757452964782715
    3. 'i' → logprob: -9.37574577331543
    4. 'ières' → logprob: -11.12574577331543
    5. '```' → logprob: -12.00074577331543
    6. 'er' → logprob: -12.87574577331543
    7. 'ers' → logprob: -13.00074577331543
    8. 'ié' → logprob: -13.62574577331543
    9. 'eurs' → logprob: -14.37574577331543
    10. 'ieres' → logprob: -14.37574577331543

Token 195: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3206603229045868
    2. 'def' → logprob: -1.4456603527069092
    3. '.' → logprob: -3.570660352706909
    4. ',' → logprob: -4.82066011428833
    5. '.
' → logprob: -7.57066011428833
    6. ' def' → logprob: -7.82066011428833
    7. 'import' → logprob: -8.195660591125488
    8. ',
' → logprob: -8.195660591125488
    9. '    
' → logprob: -8.195660591125488
    10. ':' → logprob: -8.945660591125488

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0912652239203453
    2. 'def' → logprob: -2.4662652015686035
    3. '
' → logprob: -6.5912652015686035
    4. ' def' → logprob: -7.5912652015686035
    5. ')' → logprob: -8.716265678405762
    6. '```' → logprob: -9.216265678405762
    7. '    
' → logprob: -9.341265678405762
    8. '"""' → logprob: -11.091265678405762
    9. ' 
' → logprob: -11.216265678405762
    10. ' ' → logprob: -11.341265678405762

Token 197: ' Returns' (ID: 9609)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020354660227894783
    2. '   ' → logprob: -4.020354747772217
    3. '
' → logprob: -6.395354747772217
    4. '"""
' → logprob: -8.270354270935059
    5. ' def' → logprob: -8.395354270935059
    6. '```' → logprob: -10.520354270935059
    7. '"""' → logprob: -11.395354270935059
    8. '    
' → logprob: -12.520354270935059
    9. 'n' → logprob: -13.020354270935059
    10. '\n' → logprob: -14.020354270935059

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2898157835006714
    2. ' :' → logprob: -1.4148157835006714
    3. ':list' → logprob: -5.289815902709961
    4. '   ' → logprob: -6.164815902709961
    5. ' :
' → logprob: -7.914815902709961
    6. ':
' → logprob: -8.164815902709961
    7. 'List' → logprob: -8.789815902709961
    8. ' list' → logprob: -8.789815902709961
    9. '_list' → logprob: -8.914815902709961
    10. '[' → logprob: -9.414815902709961

Token 199: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1843268722295761
    2. ' list' → logprob: -1.8093268871307373
    3. 'list' → logprob: -5.934326648712158
    4. ' List' → logprob: -7.184326648712158
    5. ' []' → logprob: -7.684326648712158
    6. 'List' → logprob: -7.809326648712158
    7. '    ' → logprob: -8.684327125549316
    8. '[]' → logprob: -9.809327125549316
    9. '       ' → logprob: -10.559327125549316
    10. '  ' → logprob: -11.684327125549316

Token 200: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.0031817557755857706
    2. ' list' → logprob: -5.7531819343566895
    3. '   ' → logprob: -12.753181457519531
    4. 'List' → logprob: -13.878181457519531
    5. '       ' → logprob: -15.378181457519531
    6. '	list' → logprob: -18.12818145751953
    7. '(list' → logprob: -18.50318145751953
    8. 'liste' → logprob: -18.62818145751953
    9. '```' → logprob: -18.87818145751953
    10. '[list' → logprob: -19.00318145751953

Token 201: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10375530272722244
    2. '[int' → logprob: -2.353755235671997
    3. ' :' → logprob: -6.728755474090576
    4. '[' → logprob: -6.978755474090576
    5. '<|end|>' → logprob: -7.603755474090576
    6. '<int' → logprob: -7.853755474090576
    7. ' des' → logprob: -9.228754997253418
    8. ':int' → logprob: -9.353754997253418
    9. '<|end|>' → logprob: -9.853754997253418
    10. ' of' → logprob: -9.853754997253418

Token 202: ' une' (ID: 2463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5359511971473694
    2. ' une' → logprob: -1.9109511375427246
    3. ' []' → logprob: -2.0359511375427246
    4. ' des' → logprob: -3.5359511375427246
    5. ' la' → logprob: -3.6609511375427246
    6. ' un' → logprob: -3.9109511375427246
    7. '[int' → logprob: -3.9109511375427246
    8. ' list' → logprob: -4.535951137542725
    9. 'int' → logprob: -4.785951137542725
    10. ' int' → logprob: -5.410951137542725

Token 203: ' liste' (ID: 31719)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7587245106697083
    2. 'list' → logprob: -1.1337244510650635
    3. 'int' → logprob: -2.2587244510650635
    4. ' liste' → logprob: -4.008724689483643
    5. 's' → logprob: -4.133724689483643
    6. 'liste' → logprob: -4.258724689483643
    7. ' des' → logprob: -4.508724689483643
    8. '[]' → logprob: -5.008724689483643
    9. '[int' → logprob: -5.008724689483643
    10. 'space' → logprob: -5.133724689483643

Token 204: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8220300078392029
    2. '<|end|>' → logprob: -1.4470300674438477
    3. 'd' → logprob: -1.9470300674438477
    4. '[int' → logprob: -2.4470300674438477
    5. ' des' → logprob: -3.1970300674438477
    6. ' of' → logprob: -3.6970300674438477
    7. '[' → logprob: -4.697030067443848
    8. 'des' → logprob: -5.072030067443848
    9. '<int' → logprob: -5.197030067443848
    10. '<|end|>' → logprob: -5.947030067443848

Token 205: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6687436699867249
    2. 'ent' → logprob: -1.04374361038208
    3. '<int' → logprob: -2.41874361038208
    4. ''ent' → logprob: -4.04374361038208
    5. '[int' → logprob: -4.41874361038208
    6. ' ent' → logprob: -5.16874361038208
    7. ' int' → logprob: -5.29374361038208
    8. 'inte' → logprob: -5.66874361038208
    9. ''int' → logprob: -7.16874361038208
    10. 'ints' → logprob: -7.29374361038208

Token 206: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0036950893700122833
    2. 't' → logprob: -5.628695011138916
    3. 'tiers' → logprob: -10.753695487976074
    4. 'ti' → logprob: -10.878695487976074
    5. 'ier' → logprob: -11.503695487976074
    6. ' ints' → logprob: -11.753695487976074
    7. 'ts' → logprob: -12.003695487976074
    8. 'i' → logprob: -12.003695487976074
    9. 'ints' → logprob: -12.378695487976074
    10. '```' → logprob: -12.503695487976074

Token 207: ' représentant' (ID: 136122)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6128827333450317
    2. '   ' → logprob: -1.2378827333450317
    3. ' appelée' → logprob: -2.862882614135742
    4. '<|end|>' → logprob: -3.112882614135742
    5. ' called' → logprob: -4.237882614135742
    6. '_called' → logprob: -4.487882614135742
    7. 'def' → logprob: -4.862882614135742
    8. 'called' → logprob: -4.862882614135742
    9. '()' → logprob: -5.612882614135742
    10. 'des' → logprob: -5.737882614135742

Token 208: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.032829295843839645
    2. 'les' → logprob: -3.5328292846679688
    3. ' tous' → logprob: -6.532829284667969
    4. ' la' → logprob: -7.282829284667969
    5. 't' → logprob: -8.032829284667969
    6. ' ' → logprob: -8.157829284667969
    7. ' the' → logprob: -10.157829284667969
    8. ' l' → logprob: -10.532829284667969
    9. ' all' → logprob: -10.657829284667969
    10. 'la' → logprob: -10.657829284667969

Token 209: ' num' (ID: 2269)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.1959591805934906
    2. ' num' → logprob: -2.8209590911865234
    3. 'num' → logprob: -2.9459590911865234
    4. 'n' → logprob: -2.9459590911865234
    5. ' numbers' → logprob: -5.195959091186523
    6. 'numbers' → logprob: -5.695959091186523
    7. ' ' → logprob: -6.570959091186523
    8. 'nums' → logprob: -7.195959091186523
    9. 'nombre' → logprob: -7.820959091186523
    10. ' n' → logprob: -8.195959091186523

Token 210: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.06427395343780518
    2. 'ros' → logprob: -2.8142738342285156
    3. 'é' → logprob: -6.689273834228516
    4. 'bres' → logprob: -7.564273834228516
    5. 'ro' → logprob: -9.064273834228516
    6. 'rés' → logprob: -9.314273834228516
    7. 'eros' → logprob: -9.439273834228516
    8. 'r' → logprob: -10.314273834228516
    9. 'b' → logprob: -10.689273834228516
    10. 'bros' → logprob: -11.064273834228516

Token 211: ' appel' (ID: 34642)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6327479481697083
    2. 'appel' → logprob: -1.3827478885650635
    3. ' appel' → logprob: -1.8827478885650635
    4. '_app' → logprob: -3.5077478885650635
    5. '_called' → logprob: -4.257748126983643
    6. ' appelé' → logprob: -5.757748126983643
    7. 's' → logprob: -6.007748126983643
    8. ' _' → logprob: -6.132748126983643
    9. ''appel' → logprob: -6.257748126983643
    10. 'app' → logprob: -6.507748126983643

Token 212: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0001696902181720361
    2. 's' → logprob: -9.00016975402832
    3. 'es' → logprob: -10.62516975402832
    4. 'é' → logprob: -11.25016975402832
    5. '   ' → logprob: -12.12516975402832
    6. 'ès' → logprob: -14.00016975402832
    7. '```' → logprob: -14.37516975402832
    8. 'ées' → logprob: -14.62516975402832
    9. 'ÉS' → logprob: -14.62516975402832
    10. 'rés' → logprob: -15.37516975402832

Token 213: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24616879224777222
    2. '   ' → logprob: -1.746168851852417
    3. '()' → logprob: -3.371168851852417
    4. ')' → logprob: -5.996168613433838
    5. ',' → logprob: -6.496168613433838
    6. ' def' → logprob: -7.121168613433838
    7. '.' → logprob: -7.496168613433838
    8. '```' → logprob: -7.621168613433838
    9. '[]' → logprob: -7.746168613433838
    10. ':' → logprob: -7.746168613433838

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15011931955814362
    2. 'def' → logprob: -2.1501193046569824
    3. '
' → logprob: -4.400119304656982
    4. '"""' → logprob: -5.275119304656982
    5. '"""
' → logprob: -6.275119304656982
    6. ')' → logprob: -6.400119304656982
    7. '```' → logprob: -6.400119304656982
    8. ' def' → logprob: -8.90011978149414
    9. '    
' → logprob: -10.02511978149414
    10. ')
' → logprob: -10.65011978149414

Token 215: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13070498406887054
    2. 'def' → logprob: -2.505704879760742
    3. '"""
' (adapté à ' """
') → logprob: -3.755704879760742
    4. '"""' → logprob: -4.130704879760742
    5. '```' → logprob: -7.130704879760742
    6. ')' → logprob: -8.505704879760742
    7. ' def' → logprob: -8.880704879760742
    8. ' """
' → logprob: -9.380704879760742
    9. '
' → logprob: -9.380704879760742
    10. '""' → logprob: -10.630704879760742

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00735803646966815
    2. 'def' → logprob: -5.257358074188232
    3. 'called' → logprob: -6.382358074188232
    4. 'n' → logprob: -8.007357597351074
    5. ' called' → logprob: -10.382357597351074
    6. 'N' → logprob: -10.632357597351074
    7. 'numbers' → logprob: -11.257357597351074
    8. 'num' → logprob: -12.132357597351074
    9. '
' → logprob: -12.757357597351074
    10. 'calls' → logprob: -12.757357597351074

Token 217: ' N' (ID: 478)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.5515390038490295
    2. 'n' → logprob: -1.3015389442443848
    3. '   ' → logprob: -2.4265389442443848
    4. 'N' (adapté à ' N') → logprob: -3.3015389442443848
    5. 'count' → logprob: -4.426538944244385
    6. 'num' → logprob: -4.551538944244385
    7. 'numbers' → logprob: -6.176538944244385
    8. ' called' → logprob: -7.176538944244385
    9. 'nums' → logprob: -8.051539421081543
    10. ' n' → logprob: -8.551539421081543

Token 218: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02336648665368557
    2. '=' → logprob: -3.7733664512634277
    3. '=int' → logprob: -9.023366928100586
    4. ' ' → logprob: -15.773366928100586
    5. '=input' → logprob: -15.773366928100586
    6. ' =
' → logprob: -16.023366928100586
    7. ' ' → logprob: -16.898366928100586
    8. 'int' → logprob: -17.648366928100586
    9. '   ' → logprob: -18.148366928100586
    10. '＝' → logprob: -18.398366928100586

Token 219: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519291639328003
    2. ' int' → logprob: -1.5019291639328003
    3. '   ' → logprob: -17.626928329467773
    4. '=int' → logprob: -17.876928329467773
    5. '[int' → logprob: -18.251928329467773
    6. ' ' → logprob: -18.501928329467773
    7. '(int' → logprob: -19.251928329467773
    8. '	int' → logprob: -19.501928329467773
    9. '  ' → logprob: -19.751928329467773
    10. '<int' → logprob: -20.751928329467773

Token 220: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -7.517272024415433e-05
    2. 'input' → logprob: -9.750075340270996
    3. '(' → logprob: -11.000075340270996
    4. ' input' → logprob: -16.50007438659668
    5. '=input' → logprob: -17.00007438659668
    6. ' (' → logprob: -18.50007438659668
    7. '()' → logprob: -18.87507438659668
    8. ',input' → logprob: -20.25007438659668
    9. '	input' → logprob: -20.37507438659668
    10. '<input' → logprob: -20.62507438659668

Token 221: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005259014666080475
    2. '()' → logprob: -5.255259037017822
    3. ')' → logprob: -11.505258560180664
    4. '())
' → logprob: -11.755258560180664
    5. ' ())' → logprob: -12.630258560180664
    6. '().' → logprob: -12.880258560180664
    7. '(' → logprob: -14.255258560180664
    8. '())

' → logprob: -15.505258560180664
    9. '()))' → logprob: -15.755258560180664
    10. '()
' → logprob: -15.880258560180664

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03576008602976799
    2. 'called' → logprob: -3.4107601642608643
    3. ' called' → logprob: -6.410759925842285
    4. 'numbers' → logprob: -8.410759925842285
    5. '    
' → logprob: -9.785759925842285
    6. '_called' → logprob: -10.285759925842285
    7. ' numbers' → logprob: -10.285759925842285
    8. 'all' → logprob: -10.285759925842285
    9. 'calls' → logprob: -10.660759925842285
    10. '.called' → logprob: -11.285759925842285

Token 223: ' called' (ID: 4358)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' (adapté à ' called') → logprob: -0.043631259351968765
    2. '   ' → logprob: -3.1686313152313232
    3. 'numbers' → logprob: -8.293631553649902
    4. 'all' → logprob: -8.668631553649902
    5. ' called' → logprob: -8.918631553649902
    6. '    
' → logprob: -11.168631553649902
    7. 'calls' → logprob: -11.168631553649902
    8. 'appel' → logprob: -11.918631553649902
    9. 'cal' → logprob: -12.043631553649902
    10. '.called' → logprob: -12.293631553649902

Token 224: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0013134514447301626
    2. '_' → logprob: -6.75131368637085
    3. '_n' → logprob: -9.126313209533691
    4. '_nums' → logprob: -11.001313209533691
    5. '_num' → logprob: -11.876313209533691
    6. ' _' → logprob: -12.751313209533691
    7. '_names' → logprob: -14.126313209533691
    8. '_number' → logprob: -14.126313209533691
    9. '_lines' → logprob: -14.376313209533691
    10. '_tokens' → logprob: -14.501313209533691

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859191179275513
    2. '=' → logprob: -3.0485918521881104
    3. '=[]' → logprob: -13.423591613769531
    4. ' ' → logprob: -13.548591613769531
    5. '=[]
' → logprob: -14.173591613769531
    6. '.extend' → logprob: -14.798591613769531
    7. '   ' → logprob: -16.04859161376953
    8. ' =
' → logprob: -16.29859161376953
    9. '_' → logprob: -16.42359161376953
    10. '.' → logprob: -16.67359161376953

Token 226: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06216520071029663
    2. '[]
' → logprob: -2.8121652603149414
    3. 'list' → logprob: -8.937165260314941
    4. ' []' → logprob: -9.937165260314941
    5. ' []
' → logprob: -11.812165260314941
    6. '[]

' → logprob: -11.937165260314941
    7. '[' → logprob: -12.937165260314941
    8. ' list' → logprob: -14.312165260314941
    9. 'it' → logprob: -15.687165260314941
    10. '[]"' → logprob: -15.937165260314941

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01971948891878128
    2. 'for' → logprob: -4.01971960067749
    3. ' for' → logprob: -6.51971960067749
    4. '
' → logprob: -9.519719123840332
    5. '	for' → logprob: -11.019719123840332
    6. '    
' → logprob: -12.394719123840332
    7. '  ' → logprob: -16.01972007751465
    8. '  
' → logprob: -16.39472007751465
    9. ' ' → logprob: -16.64472007751465
    10. '    ' → logprob: -16.76972007751465

Token 228: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06255955249071121
    2. '   ' → logprob: -2.8125596046447754
    3. ' for' → logprob: -7.437559604644775
    4. '	for' → logprob: -13.437559127807617
    5. '
' → logprob: -14.062559127807617
    6. '    
' → logprob: -14.812559127807617
    7. '  ' → logprob: -15.562559127807617
    8. ' ' → logprob: -15.562559127807617
    9. 'while' → logprob: -18.312559127807617
    10. '       ' → logprob: -18.562559127807617

Token 229: ' Lire' (ID: 57624)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009148012613877654
    2. ' for' → logprob: -7.000914573669434
    3. '   ' → logprob: -12.625914573669434
    4. '	for' → logprob: -17.12591552734375
    5. '
' → logprob: -17.87591552734375
    6. 'while' → logprob: -19.00091552734375
    7. 'For' → logprob: -19.87591552734375
    8. ' ' → logprob: -19.87591552734375
    9. 'from' → logprob: -20.00091552734375
    10. 'import' → logprob: -20.25091552734375

Token 230: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6223923563957214
    2. 'N' → logprob: -1.6223924160003662
    3. ' range' → logprob: -2.247392416000366
    4. '_' → logprob: -2.872392416000366
    5. ' for' → logprob: -3.122392416000366
    6. 'for' → logprob: -3.372392416000366
    7. 'range' → logprob: -4.622392177581787
    8. ' _' → logprob: -4.747392177581787
    9. '_N' → logprob: -5.747392177581787
    10. '   ' → logprob: -6.497392177581787

Token 231: ' lignes' (ID: 81687)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.049836836755275726
    2. 'for' → logprob: -3.4248368740081787
    3. ' times' → logprob: -4.5498366355896
    4. ' lines' → logprob: -6.0498366355896
    5. ' _' → logprob: -6.9248366355896
    6. ' fois' → logprob: -7.0498366355896
    7. ' lignes' → logprob: -7.6748366355896
    8. '_lines' → logprob: -8.799837112426758
    9. '_for' → logprob: -8.924837112426758
    10. ' range' → logprob: -9.424837112426758

Token 232: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04234718158841133
    2. 'for' → logprob: -3.6673471927642822
    3. ' for' → logprob: -4.167346954345703
    4. '
' → logprob: -9.292346954345703
    5. ' pour' → logprob: -9.417346954345703
    6. '	for' → logprob: -9.542346954345703
    7. '    
' → logprob: -9.542346954345703
    8. 'pour' → logprob: -10.292346954345703
    9. ',' → logprob: -11.042346954345703
    10. '    ' → logprob: -11.167346954345703

Token 233: ' chaque' (ID: 21194)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13170966506004333
    2. 'for' → logprob: -2.631709575653076
    3. ' for' → logprob: -3.006709575653076
    4. '       ' → logprob: -6.756709575653076
    5. '    ' → logprob: -8.131710052490234
    6. ' pour' → logprob: -8.881710052490234
    7. '    
' → logprob: -9.131710052490234
    8. ' ' → logprob: -9.381710052490234
    9. '	for' → logprob: -9.881710052490234
    10. 'pour' → logprob: -10.381710052490234

Token 234: ' ligne' (ID: 19583)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3854902386665344
    2. ' ligne' → logprob: -1.7604901790618896
    3. 'ligne' → logprob: -2.7604901790618896
    4. '   ' → logprob: -3.2604901790618896
    5. 'line' → logprob: -3.6354901790618896
    6. ' ' → logprob: -5.385490417480469
    7. '    ' → logprob: -5.635490417480469
    8. '_' → logprob: -5.760490417480469
    9. 'for' → logprob: -5.885490417480469
    10. ' for' → logprob: -6.135490417480469

Token 235: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6357547640800476
    2. ' for' → logprob: -1.7607548236846924
    3. '   ' → logprob: -2.1357548236846924
    4. '=' → logprob: -3.1357548236846924
    5. ' =' → logprob: -3.1357548236846924
    6. 'pour' → logprob: -4.135754585266113
    7. ':' → logprob: -4.635754585266113
    8. '       ' → logprob: -4.760754585266113
    9. 'split' → logprob: -4.885754585266113
    10. ' contenant' → logprob: -5.010754585266113

Token 236: ' conten' (ID: 23523)
  Prédit: ' conten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conten' → logprob: -0.03107837773859501
    2. 'con' → logprob: -5.156078338623047
    3. 'conten' → logprob: -5.156078338623047
    4. ' avoir' → logprob: -5.406078338623047
    5. ' comport' → logprob: -5.531078338623047
    6. ' contain' → logprob: -5.656078338623047
    7. 'cont' → logprob: -5.781078338623047
    8. ' cont' → logprob: -6.406078338623047
    9. 'avoir' → logprob: -7.031078338623047
    10. 'contain' → logprob: -7.781078338623047

Token 237: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.00520719401538372
    2. 'r' → logprob: -6.880207061767578
    3. 'voir' → logprob: -7.130207061767578
    4. 'contain' → logprob: -7.380207061767578
    5. 're' → logprob: -7.630207061767578
    6. 'enir' → logprob: -8.005207061767578
    7. 't' → logprob: -8.255207061767578
    8. 'er' → logprob: -8.255207061767578
    9. 'vir' → logprob: -8.255207061767578
    10. 'rir' → logprob: -8.380207061767578

Token 238: ' plusieurs' (ID: 20875)
  Prédit: ' plusieurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plusieurs' → logprob: -0.026171403005719185
    2. ' plus' → logprob: -4.6511712074279785
    3. 'plus' → logprob: -4.6511712074279785
    4. ' multiple' → logprob: -5.4011712074279785
    5. ' des' → logprob: -6.4011712074279785
    6. 'multiple' → logprob: -8.026171684265137
    7. 'des' → logprob: -9.651171684265137
    8. ' several' → logprob: -10.026171684265137
    9. ' multiples' → logprob: -10.151171684265137
    10. '   ' → logprob: -10.901171684265137

Token 239: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.8817785382270813
    2. ' numbers' → logprob: -1.7567784786224365
    3. ' nombres' → logprob: -1.7567784786224365
    4. 'ent' → logprob: -2.0067784786224365
    5. ' integers' → logprob: -3.5067784786224365
    6. 'numbers' → logprob: -3.8817784786224365
    7. 'inte' → logprob: -4.006778717041016
    8. 'int' → logprob: -4.131778717041016
    9. 'ints' → logprob: -5.131778717041016
    10. ' int' → logprob: -5.381778717041016

Token 240: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.013185410760343075
    2. 't' → logprob: -4.388185501098633
    3. 'tiers' → logprob: -8.763185501098633
    4. 'ti' → logprob: -9.013185501098633
    5. 'ier' → logprob: -9.263185501098633
    6. '   ' → logprob: -10.013185501098633
    7. 'tiens' → logprob: -10.138185501098633
    8. 'ents' → logprob: -10.138185501098633
    9. 'i' → logprob: -10.388185501098633
    10. 'te' → logprob: -10.513185501098633

Token 241: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008866838761605322
    2. 'for' → logprob: -7.500886917114258
    3. ' for' → logprob: -8.125886917114258
    4. '
' → logprob: -10.875886917114258
    5. '    
' → logprob: -11.625886917114258
    6. '       ' → logprob: -12.625886917114258
    7. ',' → logprob: -12.750886917114258
    8. '	for' → logprob: -13.750886917114258
    9. '<|end|>' → logprob: -13.750886917114258
    10. '<|end|>' → logprob: -13.875886917114258

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012368128227535635
    2. 'for' → logprob: -9.250123977661133
    3. ' for' → logprob: -10.875123977661133
    4. '
' → logprob: -12.250123977661133
    5. '    
' → logprob: -12.625123977661133
    6. '	for' → logprob: -15.250123977661133
    7. '<|end|>' → logprob: -16.250123977661133
    8. ',' → logprob: -16.375123977661133
    9. '       ' → logprob: -17.000123977661133
    10. '   ' → logprob: -18.000123977661133

Token 243: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06294132024049759
    2. '   ' → logprob: -2.812941312789917
    3. ' for' → logprob: -6.937941551208496
    4. '	for' → logprob: -13.687941551208496
    5. '
' → logprob: -13.812941551208496
    6. '    
' → logprob: -15.062941551208496
    7. ' ' → logprob: -15.437941551208496
    8. '       ' → logprob: -16.06294059753418
    9. '  ' → logprob: -16.18794059753418
    10. '    ' → logprob: -17.56294059753418

Token 244: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3132685720920563
    2. '_' → logprob: -1.3132685422897339
    3. ' ' → logprob: -12.438268661499023
    4. ' i' → logprob: -13.438268661499023
    5. ' range' → logprob: -14.563268661499023
    6. ' in' → logprob: -14.563268661499023
    7. '_i' → logprob: -15.563268661499023
    8. ' line' → logprob: -16.563268661499023
    9. ' ' → logprob: -16.688268661499023
    10. '_line' → logprob: -17.563268661499023

Token 245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1129283607006073
    2. 'in' → logprob: -2.2379283905029297
    3. ' ' → logprob: -9.61292839050293
    4. 'range' → logprob: -10.36292839050293
    5. 'import' → logprob: -12.48792839050293
    6. ' range' → logprob: -13.98792839050293
    7. ' _' → logprob: -14.48792839050293
    8. '  ' → logprob: -14.61292839050293
    9. '    ' → logprob: -15.48792839050293
    10. '	in' → logprob: -15.61292839050293

Token 246: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031784253660589457
    2. ' range' → logprob: -5.753178596496582
    3. ' ' → logprob: -15.503178596496582
    4. '(range' → logprob: -15.503178596496582
    5. '	range' → logprob: -16.753177642822266
    6. 'rang' → logprob: -16.878177642822266
    7. '    ' → logprob: -17.003177642822266
    8. '  ' → logprob: -17.128177642822266
    9. '   ' → logprob: -17.628177642822266
    10. 'input' → logprob: -18.003177642822266

Token 247: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.017911452800035477
    2. 'N' → logprob: -4.142911434173584
    3. ' N' → logprob: -6.517911434173584
    4. '(' → logprob: -8.267911911010742
    5. ' (' → logprob: -9.517911911010742
    6. '   ' → logprob: -9.892911911010742
    7. ' ' → logprob: -11.642911911010742
    8. ')' → logprob: -12.142911911010742
    9. 'range' → logprob: -14.142911911010742
    10. ' range' → logprob: -14.392911911010742

Token 248: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5235274434089661
    2. '):
' → logprob: -0.8985274434089661
    3. '):
' → logprob: -8.898527145385742
    4. ')' → logprob: -9.023527145385742
    5. '   ' → logprob: -9.148527145385742
    6. ':' → logprob: -10.648527145385742
    7. ' ):' → logprob: -11.773527145385742
    8. ' ):
' → logprob: -12.523527145385742
    9. '):

' → logprob: -13.273527145385742
    10. ':
' → logprob: -13.398527145385742

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002685990883037448
    2. ' numbers' → logprob: -6.877686023712158
    3. ' line' → logprob: -7.377686023712158
    4. 'numbers' → logprob: -7.877686023712158
    5. ' lines' → logprob: -8.002685546875
    6. '   ' → logprob: -8.502685546875
    7. ' called' → logprob: -10.877685546875
    8. 'line' → logprob: -11.127685546875
    9. '
' → logprob: -11.627685546875
    10. 'nums' → logprob: -11.752685546875

Token 250: ' numbers' (ID: 8663)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.23477208614349365
    2. 'numbers' (adapté à ' numbers') → logprob: -1.9847720861434937
    3. 'nums' → logprob: -3.859772205352783
    4. ' called' → logprob: -3.984772205352783
    5. '   ' → logprob: -4.234772205352783
    6. ' numbers' → logprob: -4.484772205352783
    7. 'line' → logprob: -5.359772205352783
    8. '       ' → logprob: -7.234772205352783
    9. ' line' → logprob: -7.859772205352783
    10. ' nums' → logprob: -8.234771728515625

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07110157608985901
    2. '=' → logprob: -2.696101665496826
    3. '.extend' → logprob: -6.946101665496826
    4. ' +=' → logprob: -9.446101188659668
    5. '_line' → logprob: -9.696101188659668
    6. ' ' → logprob: -10.821101188659668
    7. '+=' → logprob: -11.321101188659668
    8. '_' → logprob: -11.946101188659668
    9. '.' → logprob: -12.196101188659668
    10. '   ' → logprob: -12.696101188659668

Token 252: ' input' (ID: 3422)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.7784085869789124
    2. '[input' → logprob: -1.0284085273742676
    3. ' [' → logprob: -2.2784085273742676
    4. '[' → logprob: -2.7784085273742676
    5. '[list' → logprob: -4.403408527374268
    6. 'list' → logprob: -5.903408527374268
    7. ' list' → logprob: -6.403408527374268
    8. '[i' → logprob: -6.653408527374268
    9. 'map' → logprob: -8.403409004211426
    10. '[str' → logprob: -9.028409004211426

Token 253: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9862216504407115e-05
    2. '()' → logprob: -10.875020027160645
    3. ' ().' → logprob: -14.125020027160645
    4. '.' → logprob: -17.375019073486328
    5. '.split' → logprob: -17.500019073486328
    6. '(' → logprob: -17.750019073486328
    7. '()).' → logprob: -18.875019073486328
    8. ' .' → logprob: -19.250019073486328
    9. '   ' → logprob: -19.625019073486328
    10. ').' → logprob: -19.750019073486328

Token 254: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.7729658540920354e-05
    2. 'strip' → logprob: -10.500027656555176
    3. ' split' → logprob: -16.500028610229492
    4. '(split' → logprob: -20.000028610229492
    5. '.split' → logprob: -20.625028610229492
    6. 'rstrip' → logprob: -21.125028610229492
    7. 'spl' → logprob: -21.375028610229492
    8. '```' → logprob: -24.000028610229492
    9. '_split' → logprob: -24.250028610229492
    10. ' strip' → logprob: -25.625028610229492

Token 255: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010632978519424796
    2. '()
' → logprob: -7.126063346862793
    3. '())' → logprob: -9.251063346862793
    4. ')' → logprob: -9.376063346862793
    5. '()]' → logprob: -10.376063346862793
    6. '       ' → logprob: -10.751063346862793
    7. ' ()' → logprob: -12.001063346862793
    8. '(' → logprob: -12.001063346862793
    9. '   ' → logprob: -12.376063346862793
    10. '()
' → logprob: -13.376063346862793

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006354377605021
    2. '   ' → logprob: -5.631354331970215
    3. ' called' → logprob: -6.631354331970215
    4. 'called' → logprob: -7.631354331970215
    5. ' for' → logprob: -7.756354331970215
    6. 'for' → logprob: -8.756354331970215
    7. ')' → logprob: -9.506354331970215
    8. '           ' → logprob: -9.631354331970215
    9. 'numbers' → logprob: -10.256354331970215
    10. ' numbers' → logprob: -10.381354331970215

Token 257: ' called' (ID: 4358)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' (adapté à ' called') → logprob: -0.05745798721909523
    2. ' called' → logprob: -2.93245792388916
    3. 'for' → logprob: -6.43245792388916
    4. '   ' → logprob: -7.55745792388916
    5. ' for' → logprob: -8.18245792388916
    6. '       ' → logprob: -8.80745792388916
    7. 'numbers' → logprob: -12.93245792388916
    8. '_called' → logprob: -13.05745792388916
    9. '           ' → logprob: -13.43245792388916
    10. ' numbers' → logprob: -13.43245792388916

Token 258: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.00011725161311915144
    2. '_' → logprob: -9.250117301940918
    3. ')_' → logprob: -12.125117301940918
    4. '_number' → logprob: -12.500117301940918
    5. '_n' → logprob: -12.625117301940918
    6. ' _' → logprob: -12.625117301940918
    7. '_num' → logprob: -14.000117301940918
    8. '_strings' → logprob: -14.875117301940918
    9. '_names' → logprob: -15.000117301940918
    10. '_s' → logprob: -15.125117301940918

Token 259: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.0005557744298130274
    2. '.' → logprob: -7.500555992126465
    3. 'extend' → logprob: -13.375555992126465
    4. ' .' → logprob: -14.000555992126465
    5. ' +=' → logprob: -15.750555992126465
    6. '.ext' → logprob: -15.875555992126465
    7. '+=' → logprob: -16.50055503845215
    8. '   ' → logprob: -17.12555503845215
    9. '.=' → logprob: -18.62555503845215
    10. ' extend' → logprob: -19.00055503845215

Token 260: '(numbers' (ID: 98592)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.39356255531311035
    2. '(int' → logprob: -1.1435625553131104
    3. '(map' → logprob: -5.143562316894531
    4. '[int' → logprob: -7.268562316894531
    5. '(' → logprob: -9.268562316894531
    6. '(list' → logprob: -10.143562316894531
    7. '[' → logprob: -14.518562316894531
    8. 'map' → logprob: -14.893562316894531
    9. 'int' → logprob: -16.01856231689453
    10. '(
' → logprob: -16.01856231689453

Token 261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008980777114629745
    2. ' )' → logprob: -4.758980751037598
    3. '   ' → logprob: -8.508980751037598
    4. '       ' → logprob: -9.758980751037598
    5. ')
' → logprob: -9.883980751037598
    6. '))' → logprob: -11.758980751037598
    7. ')}' → logprob: -11.883980751037598
    8. '           ' → logprob: -12.508980751037598
    9. 'int' → logprob: -12.508980751037598
    10. ',' → logprob: -12.883980751037598

Token 262: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7141026258468628
    2. '   ' → logprob: -1.4641026258468628
    3. ')' → logprob: -2.0891027450561523
    4. ' =' → logprob: -2.4641027450561523
    5. '<|end|>' → logprob: -3.5891027450561523
    6. '=' → logprob: -3.7141027450561523
    7. '<|end|>' → logprob: -6.089102745056152
    8. '
' → logprob: -6.214102745056152
    9. '[:]' → logprob: -6.339102745056152
    10. '    ' → logprob: -6.589102745056152

Token 263: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1601981222629547
    2. ' called' → logprob: -2.035198211669922
    3. 'called' → logprob: -5.035198211669922
    4. '       ' → logprob: -5.910198211669922
    5. '_called' → logprob: -6.535198211669922
    6. ' ' → logprob: -6.660198211669922
    7. 'return' → logprob: -6.910198211669922
    8. '<|end|>' → logprob: -7.035198211669922
    9. ')' → logprob: -7.535198211669922
    10. '    
' → logprob: -8.035198211669922

Token 264: ' Conversion' (ID: 74433)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.506773829460144
    2. ' called' → logprob: -1.381773829460144
    3. 'return' → logprob: -2.0067739486694336
    4. '   ' → logprob: -4.881773948669434
    5. ' return' → logprob: -5.506773948669434
    6. '#' → logprob: -8.256773948669434
    7. ' ' → logprob: -10.756773948669434
    8. ' #' → logprob: -10.756773948669434
    9. 'Called' → logprob: -11.256773948669434
    10. '
' → logprob: -11.631773948669434

Token 265: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9900757074356079
    2. '[' → logprob: -1.365075707435608
    3. ' called' → logprob: -2.1150755882263184
    4. '[int' → logprob: -2.3650755882263184
    5. ' to' → logprob: -2.9900755882263184
    6. '_called' → logprob: -3.6150755882263184
    7. 'called' → logprob: -3.8650755882263184
    8. ' [' → logprob: -3.9900755882263184
    9. 'to' → logprob: -4.365075588226318
    10. ' =' → logprob: -4.990075588226318

Token 266: ' ent' (ID: 1121)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.014475973322987556
    2. 'int' → logprob: -4.2644758224487305
    3. ' int' → logprob: -8.88947582244873
    4. '[' → logprob: -9.26447582244873
    5. 'inte' → logprob: -10.38947582244873
    6. 'ints' → logprob: -11.01447582244873
    7. 'list' → logprob: -11.38947582244873
    8. ' [' → logprob: -11.63947582244873
    9. ' integers' → logprob: -12.76447582244873
    10. 'ent' → logprob: -13.26447582244873

Token 267: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7046419382095337
    2. '[int' → logprob: -1.2046419382095337
    3. 'int' → logprob: -2.079641819000244
    4. '[' → logprob: -2.954641819000244
    5. 'ints' → logprob: -4.079641819000244
    6. 'inte' → logprob: -5.329641819000244
    7. ' integers' → logprob: -6.204641819000244
    8. 'ist' → logprob: -6.704641819000244
    9. 'ents' → logprob: -7.704641819000244
    10. '_list' → logprob: -7.704641819000244

Token 268: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1477874517440796
    2. ' called' → logprob: -2.272787570953369
    3. 'called' → logprob: -3.522787570953369
    4. '_called' → logprob: -6.022787570953369
    5. ' =' → logprob: -7.022787570953369
    6. '[:]' → logprob: -7.272787570953369
    7. '=' → logprob: -8.147787094116211
    8. '-called' → logprob: -9.022787094116211
    9. '.called' → logprob: -9.022787094116211
    10. '       ' → logprob: -9.397787094116211

Token 269: '   ' (ID: 271)
  Prédit: ' called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' called' → logprob: -0.6005800366401672
    2. '   ' → logprob: -1.2255799770355225
    3. 'called' → logprob: -1.8505799770355225
    4. '_called' → logprob: -7.600580215454102
    5. '.called' → logprob: -9.975580215454102
    6. ' =' → logprob: -10.100580215454102
    7. '
' → logprob: -10.100580215454102
    8. 'return' → logprob: -10.350580215454102
    9. '-called' → logprob: -10.725580215454102
    10. 'call' → logprob: -11.100580215454102

Token 270: ' called' (ID: 4358)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' (adapté à ' called') → logprob: -0.3893450200557709
    2. ' called' → logprob: -1.1393450498580933
    3. '   ' → logprob: -6.514345169067383
    4. 'return' → logprob: -7.139345169067383
    5. ' return' → logprob: -9.389345169067383
    6. '[' → logprob: -9.514345169067383
    7. ' [' → logprob: -12.014345169067383
    8. '_called' → logprob: -12.389345169067383
    9. '-called' → logprob: -12.639345169067383
    10. 'numbers' → logprob: -12.639345169067383

Token 271: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0006118826568126678
    2. '_' → logprob: -7.500611782073975
    3. ')_' → logprob: -10.625612258911133
    4. '_n' → logprob: -11.500612258911133
    5. '_number' → logprob: -11.750612258911133
    6. '_num' → logprob: -12.625612258911133
    7. 's' → logprob: -13.125612258911133
    8. ' _' → logprob: -13.375612258911133
    9. '_tokens' → logprob: -13.500612258911133
    10. '_nums' → logprob: -13.500612258911133

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132627606391907
    2. '=' → logprob: -1.313262701034546
    3. '=[' → logprob: -14.938262939453125
    4. '=list' → logprob: -15.188262939453125
    5. '[:]' → logprob: -15.688262939453125
    6. ' =[' → logprob: -16.313262939453125
    7. '＝' → logprob: -16.313262939453125
    8. '[' → logprob: -17.313262939453125
    9. '   ' → logprob: -17.313262939453125
    10. ' ' → logprob: -17.813262939453125

Token 273: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.08796114474534988
    2. 'list' → logprob: -3.587961196899414
    3. ' list' → logprob: -4.087961196899414
    4. ' [' → logprob: -4.087961196899414
    5. '[int' → logprob: -4.087961196899414
    6. '[' → logprob: -5.087961196899414
    7. '[List' → logprob: -9.962961196899414
    8. '[i' → logprob: -12.587961196899414
    9. '[Int' → logprob: -13.837961196899414
    10. '[type' → logprob: -13.837961196899414

Token 274: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.7968066206085496e-05
    2. '(' → logprob: -10.500027656555176
    3. 'map' → logprob: -15.375027656555176
    4. '(int' → logprob: -16.625028610229492
    5. ' map' → logprob: -18.375028610229492
    6. '(
' → logprob: -18.750028610229492
    7. '	map' → logprob: -19.375028610229492
    8. '.map' → logprob: -19.875028610229492
    9. ',map' → logprob: -20.375028610229492
    10. '   ' → logprob: -20.500028610229492

Token 275: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2520633339881897
    2. 'int' → logprob: -1.502063274383545
    3. ' int' → logprob: -9.002063751220703
    4. '   ' → logprob: -12.627063751220703
    5. ',int' → logprob: -13.127063751220703
    6. '=int' → logprob: -13.252063751220703
    7. '[int' → logprob: -13.377063751220703
    8. '<int' → logprob: -13.877063751220703
    9. ')' → logprob: -14.502063751220703
    10. ' (' → logprob: -15.127063751220703

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5816068053245544
    2. ',c' → logprob: -1.2066068649291992
    3. '(c' → logprob: -1.9566068649291992
    4. ' ,' → logprob: -7.956606864929199
    5. '(' → logprob: -9.8316068649292
    6. 'called' → logprob: -11.3316068649292
    7. '))' → logprob: -11.5816068649292
    8. ',(' → logprob: -12.0816068649292
    9. '```' → logprob: -12.9566068649292
    10. ' (' → logprob: -12.9566068649292

Token 277: ' called' (ID: 4358)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.07889111340045929
    2. ' called' → logprob: -2.5788910388946533
    3. '   ' → logprob: -14.578890800476074
    4. '.called' → logprob: -15.078890800476074
    5. '-called' → logprob: -15.328890800476074
    6. '_called' → logprob: -15.578890800476074
    7. ' ' → logprob: -16.32889175415039
    8. ')' → logprob: -16.70389175415039
    9. '  ' → logprob: -17.95389175415039
    10. 'call' → logprob: -18.20389175415039

Token 278: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.000399091251892969
    2. '_called' → logprob: -8.000398635864258
    3. 'numbers' → logprob: -10.750398635864258
    4. 'called' → logprob: -11.000398635864258
    5. '_calls' → logprob: -11.500398635864258
    6. '_n' → logprob: -12.500398635864258
    7. '_number' → logprob: -12.875398635864258
    8. 'umbers' → logprob: -13.000398635864258
    9. 's' → logprob: -13.125398635864258
    10. '_' → logprob: -13.750398635864258

Token 279: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.3782830137643032e-05
    2. ' ))' → logprob: -11.62501335144043
    3. '))
' → logprob: -12.37501335144043
    4. ')))' → logprob: -16.00001335144043
    5. '   ' → logprob: -16.12501335144043
    6. ')' → logprob: -16.12501335144043
    7. '));' → logprob: -16.25001335144043
    8. ' ' → logprob: -17.00001335144043
    9. '))

' → logprob: -17.12501335144043
    10. '()))' → logprob: -17.75001335144043

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004023664630949497
    2. 'return' → logprob: -6.129023551940918
    3. '
' → logprob: -6.504023551940918
    4. ' return' → logprob: -8.254023551940918
    5. '    
' → logprob: -9.629023551940918
    6. '	return' → logprob: -11.504023551940918
    7. ':return' → logprob: -14.254023551940918
    8. '<|end|>' → logprob: -14.254023551940918
    9. '
' → logprob: -14.379023551940918
    10. 'eturn' → logprob: -15.129023551940918

Token 281: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1653437614440918
    2. 'return' (adapté à ' return') → logprob: -1.9153437614440918
    3. ' return' → logprob: -5.290343761444092
    4. '
' → logprob: -9.91534423828125
    5. '    
' → logprob: -11.66534423828125
    6. '	return' → logprob: -11.91534423828125
    7. 'eturn' → logprob: -14.91534423828125
    8. ' ' → logprob: -15.04034423828125
    9. ':return' → logprob: -15.16534423828125
    10. '       ' → logprob: -15.54034423828125

Token 282: ' called' (ID: 4358)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.03804286941885948
    2. ' called' → logprob: -3.2880427837371826
    3. '_called' → logprob: -14.538043022155762
    4. '   ' → logprob: -14.663043022155762
    5. '.called' → logprob: -15.913043022155762
    6. '-called' → logprob: -16.288042068481445
    7. 'call' → logprob: -16.663042068481445
    8. ' ' → logprob: -17.163042068481445
    9. 'Called' → logprob: -17.163042068481445
    10. '(c' → logprob: -17.288042068481445

Token 283: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -1.3544423381972592e-05
    2. '_called' → logprob: -11.50001335144043
    3. '_' → logprob: -13.25001335144043
    4. 'numbers' → logprob: -13.75001335144043
    5. '_number' → logprob: -14.87501335144043
    6. 'called' → logprob: -17.12501335144043
    7. '_calls' → logprob: -17.12501335144043
    8. 's' → logprob: -18.00001335144043
    9. '_n' → logprob: -18.12501335144043
    10. '```' → logprob: -18.25001335144043

Token 284: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6029672622680664
    2. '

' → logprob: -1.2279672622680664
    3. 'def' → logprob: -2.2279672622680664
    4. '<|end|>' → logprob: -2.9779672622680664
    5. '<|end|>' → logprob: -7.227967262268066
    6. '```' → logprob: -8.977967262268066
    7. '\n' → logprob: -9.352967262268066
    8. '  
' → logprob: -9.727967262268066
    9. '


' → logprob: -9.977967262268066
    10. '    
' → logprob: -10.352967262268066

Token 285: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00018661346985027194
    2. '
' → logprob: -8.750186920166016
    3. 'import' → logprob: -10.750186920166016
    4. '

' → logprob: -12.500186920166016
    5. 'from' → logprob: -14.000186920166016
    6. '```' → logprob: -14.375186920166016
    7. '  
' → logprob: -14.500186920166016
    8. '#' → logprob: -15.125186920166016
    9. ' def' → logprob: -15.250186920166016
    10. 'b' → logprob: -15.625186920166016

Token 286: ' mark' (ID: 1983)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.13232390582561493
    2. ' is' → logprob: -2.632323980331421
    3. 'check' → logprob: -3.882323980331421
    4. ' has' → logprob: -4.132323741912842
    5. ' find' → logprob: -5.632323741912842
    6. ' main' → logprob: -5.757323741912842
    7. 'is' → logprob: -6.007323741912842
    8. ' bingo' → logprob: -6.382323741912842
    9. ' generate' → logprob: -6.882323741912842
    10. ' mark' → logprob: -7.132323741912842

Token 287: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.004988254979252815
    2. '_' → logprob: -5.379988193511963
    3. '_card' → logprob: -8.504988670349121
    4. '_numbers' → logprob: -9.629988670349121
    5. '_called' → logprob: -10.004988670349121
    6. '_number' → logprob: -10.504988670349121
    7. '_cell' → logprob: -12.254988670349121
    8. '_cards' → logprob: -12.504988670349121
    9. '_square' → logprob: -13.129988670349121
    10. '_a' → logprob: -13.254988670349121

Token 288: 'ingo' (ID: 14878)
  Prédit: 'ingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingo' → logprob: -4.084206375409849e-05
    2. 'ing' → logprob: -10.500041007995605
    3. '_' → logprob: -12.625041007995605
    4. 'i' → logprob: -12.750041007995605
    5. 'card' → logprob: -13.500041007995605
    6. '   ' → logprob: -14.125041007995605
    7. '_ing' → logprob: -14.250041007995605
    8. '```' → logprob: -14.375041007995605
    9. 'ING' → logprob: -14.625041007995605
    10. 'in' → logprob: -14.875041007995605

Token 289: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.0010915198363363743
    2. '_' → logprob: -7.126091480255127
    3. '_cell' → logprob: -8.751091957092285
    4. '_cards' → logprob: -9.376091957092285
    5. '_line' → logprob: -11.001091957092285
    6. '_tile' → logprob: -11.626091957092285
    7. '_square' → logprob: -13.001091957092285
    8. '_row' → logprob: -13.251091957092285
    9. '_cart' → logprob: -13.501091957092285
    10. '_board' → logprob: -13.751091957092285

Token 290: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.501356303691864
    2. '(card' → logprob: -1.0013563632965088
    3. '(' → logprob: -3.626356363296509
    4. '(c' → logprob: -8.75135612487793
    5. '(cards' → logprob: -10.00135612487793
    6. '(board' → logprob: -10.25135612487793
    7. '_card' → logprob: -10.87635612487793
    8. ' (' → logprob: -11.12635612487793
    9. '(cart' → logprob: -11.87635612487793
    10. '(cell' → logprob: -13.12635612487793

Token 291: 'ingo' (ID: 14878)
  Prédit: 'ingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingo' → logprob: -0.0638241246342659
    2. '_' → logprob: -2.81382417678833
    3. '_i' → logprob: -6.93882417678833
    4. 'ing' → logprob: -7.81382417678833
    5. 'i' → logprob: -8.313823699951172
    6. 'in' → logprob: -9.688823699951172
    7. '_ing' → logprob: -10.063823699951172
    8. '_in' → logprob: -10.688823699951172
    9. ')_' → logprob: -11.063823699951172
    10. '   ' → logprob: -11.063823699951172

Token 292: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -8.172891830326989e-05
    2. '_' → logprob: -9.750082015991211
    3. '_car' → logprob: -11.500082015991211
    4. ')_' → logprob: -12.125082015991211
    5. '_cards' → logprob: -12.500082015991211
    6. '_cart' → logprob: -14.000082015991211
    7. '_c' → logprob: -14.375082015991211
    8. ')' → logprob: -14.500082015991211
    9. '_code' → logprob: -14.750082015991211
    10. '_b' → logprob: -14.875082015991211

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028278882382437587
    2. ' ,' → logprob: -8.750283241271973
    3. ',n' → logprob: -9.125283241271973
    4. ',b' → logprob: -11.875283241271973
    5. ',
' → logprob: -12.750283241271973
    6. ',num' → logprob: -13.250283241271973
    7. ',c' → logprob: -13.375283241271973
    8. '   ' → logprob: -14.375283241271973
    9. ',current' → logprob: -15.250283241271973
    10. ')' → logprob: -15.750283241271973

Token 294: ' called' (ID: 4358)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.10030846297740936
    2. ' called' → logprob: -2.350308418273926
    3. 'marked' → logprob: -9.725308418273926
    4. 'numbers' → logprob: -11.475308418273926
    5. '   ' → logprob: -11.600308418273926
    6. ' numbers' → logprob: -12.100308418273926
    7. ' marked' → logprob: -12.100308418273926
    8. '_called' → logprob: -13.100308418273926
    9. '.called' → logprob: -13.725308418273926
    10. '-called' → logprob: -13.725308418273926

Token 295: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0004427051462698728
    2. '_' → logprob: -7.7504425048828125
    3. ')_' → logprob: -12.500442504882812
    4. '_nums' → logprob: -12.875442504882812
    5. ' _' → logprob: -13.750442504882812
    6. '_n' → logprob: -14.000442504882812
    7. '_number' → logprob: -14.125442504882812
    8. ')' → logprob: -14.125442504882812
    9. '_num' → logprob: -14.375442504882812
    10. '_tokens' → logprob: -14.750442504882812

Token 296: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026791063137352467
    2. '):
' → logprob: -6.377678871154785
    3. ',' → logprob: -7.002678871154785
    4. ')' → logprob: -9.877678871154785
    5. '   ' → logprob: -12.127678871154785
    6. ' ):' → logprob: -12.127678871154785
    7. '):
' → logprob: -13.002678871154785
    8. ':' → logprob: -14.127678871154785
    9. ' ,' → logprob: -15.002678871154785
    10. '):

' → logprob: -15.252678871154785

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00042768914136104286
    2. '
' → logprob: -8.50042724609375
    3. ':' → logprob: -9.12542724609375
    4. '    
' → logprob: -10.50042724609375
    5. ':
' → logprob: -10.62542724609375
    6. '    ' → logprob: -11.12542724609375
    7. '```' → logprob: -11.50042724609375
    8. ' for' → logprob: -11.75042724609375
    9. ' marked' → logprob: -11.75042724609375
    10. 'for' → logprob: -12.50042724609375

Token 298: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03787771239876747
    2. ' for' → logprob: -4.037877559661865
    3. '
' → logprob: -4.287877559661865
    4. '    
' → logprob: -6.037877559661865
    5. ' marked' → logprob: -6.412877559661865
    6. ' 
' → logprob: -7.412877559661865
    7. 'for' → logprob: -8.037878036499023
    8. '  
' → logprob: -8.162878036499023
    9. '   
' → logprob: -8.287878036499023
    10. '    ' → logprob: -9.412878036499023

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01762489229440689
    2. '"' → logprob: -4.767624855041504
    3. ' """
' → logprob: -5.142624855041504
    4. '"""
' → logprob: -6.642624855041504
    5. '"""' → logprob: -7.517624855041504
    6. '    ' → logprob: -7.892624855041504
    7. ' for' → logprob: -8.267624855041504
    8. 'def' → logprob: -8.267624855041504
    9. ' """' → logprob: -8.642624855041504
    10. 'for' → logprob: -9.517624855041504

Token 300: ' Mar' (ID: 3145)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39344996213912964
    2. 'for' → logprob: -1.6434500217437744
    3. '   ' → logprob: -2.8934500217437744
    4. ' marked' → logprob: -3.1434500217437744
    5. 'def' → logprob: -4.393449783325195
    6. ' """
' → logprob: -4.643449783325195
    7. 'marked' → logprob: -5.643449783325195
    8. ' """' → logprob: -6.768449783325195
    9. '#' → logprob: -6.768449783325195
    10. ' def' → logprob: -6.768449783325195

Token 301: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.17129641771316528
    2. 'quer' → logprob: -2.0462963581085205
    3. 'r' → logprob: -4.4212965965271
    4. 'k' → logprob: -4.6712965965271
    5. 'qu' → logprob: -5.7962965965271
    6. 'q' → logprob: -6.0462965965271
    7. 'quez' → logprob: -7.2962965965271
    8. '
' → logprob: -9.046296119689941
    9. '#' → logprob: -9.046296119689941
    10. 'ker' → logprob: -9.421296119689941

Token 302: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38837122917175293
    2. ' the' → logprob: -1.513371229171753
    3. '   ' → logprob: -3.513371229171753
    4. '<|end|>' → logprob: -4.388371467590332
    5. ' les' → logprob: -4.763371467590332
    6. ' la' → logprob: -4.888371467590332
    7. '_' → logprob: -5.513371467590332
    8. 'the' → logprob: -5.638371467590332
    9. ' bingo' → logprob: -5.638371467590332
    10. ' (' → logprob: -5.763371467590332

Token 303: ' num' (ID: 2269)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6396265625953674
    2. ' bingo' → logprob: -1.7646265029907227
    3. ' for' → logprob: -2.2646265029907227
    4. 'for' → logprob: -2.5146265029907227
    5. 'def' → logprob: -3.7646265029907227
    6. '   ' → logprob: -3.8896265029907227
    7. 'b' → logprob: -4.014626502990723
    8. '_b' → logprob: -4.889626502990723
    9. 'positions' → logprob: -5.139626502990723
    10. ' rows' → logprob: -5.389626502990723

Token 304: 'éros' (ID: 120888)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.04936094954609871
    2. '_' → logprob: -3.299360990524292
    3. 'éros' → logprob: -4.799360752105713
    4. 'bres' → logprob: -7.174360752105713
    5. 'éro' → logprob: -7.549360752105713
    6. ' bingo' → logprob: -7.674360752105713
    7. 'bre' → logprob: -8.299361228942871
    8. 'er' → logprob: -9.174361228942871
    9. 'eros' → logprob: -9.299361228942871
    10. 'b' → logprob: -9.424361228942871

Token 305: ' appel' (ID: 34642)
  Prédit: ' présents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' présents' → logprob: -0.01615777052938938
    2. ' sur' → logprob: -5.391157627105713
    3. '   ' → logprob: -6.141157627105713
    4. ' mar' → logprob: -6.391157627105713
    5. '_' → logprob: -6.766157627105713
    6. ' ' → logprob: -7.016157627105713
    7. ' présent' → logprob: -7.266157627105713
    8. ' present' → logprob: -7.391157627105713
    9. ' présentes' → logprob: -7.516157627105713
    10. ' de' → logprob: -7.891157627105713

Token 306: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.00010366239439463243
    2. 'é' → logprob: -9.375103950500488
    3. 'es' → logprob: -11.000103950500488
    4. 's' → logprob: -14.250103950500488
    5. 'ès' → logprob: -14.500103950500488
    6. 'ÉS' → logprob: -15.375103950500488
    7. '```' → logprob: -15.625103950500488
    8. '#' → logprob: -15.875103950500488
    9. '   ' → logprob: -16.625102996826172
    10. 'ées' → logprob: -17.125102996826172

Token 307: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.33010736107826233
    2. '   ' → logprob: -1.83010733127594
    3. ' on' → logprob: -3.5801074504852295
    4. ' dans' → logprob: -3.7051074504852295
    5. 'sur' → logprob: -4.08010721206665
    6. ' ' → logprob: -4.20510721206665
    7. ',' → logprob: -4.20510721206665
    8. ' avec' → logprob: -5.70510721206665
    9. 'dans' → logprob: -5.70510721206665
    10. ' (' → logprob: -6.20510721206665

Token 308: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.17791251838207245
    2. ' the' → logprob: -2.552912473678589
    3. 'b' → logprob: -2.802912473678589
    4. ' bingo' → logprob: -4.427912712097168
    5. ' le' → logprob: -5.552912712097168
    6. 'the' → logprob: -5.677912712097168
    7. ' ' → logprob: -5.677912712097168
    8. ' b' → logprob: -6.802912712097168
    9. ' les' → logprob: -8.552912712097168
    10. '   ' → logprob: -9.052912712097168

Token 309: ' carte' (ID: 30276)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.013426797464489937
    2. ' ' → logprob: -5.388426780700684
    3. 'card' → logprob: -5.638426780700684
    4. ' bingo' → logprob: -6.138426780700684
    5. '   ' → logprob: -6.638426780700684
    6. '_b' → logprob: -7.638426780700684
    7. 'for' → logprob: -8.013426780700684
    8. ' card' → logprob: -8.388426780700684
    9. ' for' → logprob: -8.888426780700684
    10. ' b' → logprob: -8.888426780700684

Token 310: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7294259667396545
    2. '_b' → logprob: -1.3544259071350098
    3. 'b' → logprob: -2.4794259071350098
    4. '   ' → logprob: -2.4794259071350098
    5. '_' → logprob: -3.4794259071350098
    6. ',' → logprob: -3.7294259071350098
    7. '<|end|>' → logprob: -4.85442590713501
    8. ')' → logprob: -5.10442590713501
    9. 'de' → logprob: -5.47942590713501
    10. ' bingo' → logprob: -5.60442590713501

Token 311: ' bingo' (ID: 65141)
  Prédit: ' bingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bingo' → logprob: -0.252116322517395
    2. 'b' → logprob: -1.502116322517395
    3. ' b' → logprob: -9.627116203308105
    4. '_b' → logprob: -10.002116203308105
    5. ' bing' → logprob: -10.502116203308105
    6. '```' → logprob: -11.627116203308105
    7. ' ' → logprob: -11.877116203308105
    8. ' Bingo' → logprob: -11.877116203308105
    9. 'bing' → logprob: -12.627116203308105
    10. ' blackjack' → logprob: -12.752116203308105

Token 312: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052328288555145264
    2. ',' → logprob: -3.42732834815979
    3. '.' → logprob: -4.302328109741211
    4. ' ' → logprob: -7.052328109741211
    5. ' by' → logprob: -7.052328109741211
    6. ')' → logprob: -7.552328109741211
    7. 'def' → logprob: -7.677328109741211
    8. ' en' → logprob: -8.177328109741211
    9. '    
' → logprob: -8.427328109741211
    10. '  ' → logprob: -8.677328109741211

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027588699012994766
    2. '
' → logprob: -4.527588844299316
    3. '    
' → logprob: -4.902588844299316
    4. ' 
' → logprob: -5.027588844299316
    5. '   
' → logprob: -6.902588844299316
    6. '  
' → logprob: -7.027588844299316
    7. ' for' → logprob: -8.652588844299316
    8. ' ' → logprob: -8.902588844299316
    9. '\n' → logprob: -9.402588844299316
    10. '     
' → logprob: -10.152588844299316

Token 314: ' Args' (ID: 39185)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1286323517560959
    2. '   ' → logprob: -2.7536323070526123
    3. 'for' → logprob: -2.8786323070526123
    4. '
' → logprob: -7.878632545471191
    5. ' 
' → logprob: -8.753632545471191
    6. '    
' → logprob: -9.128632545471191
    7. ' marked' → logprob: -9.378632545471191
    8. ' ' → logprob: -10.878632545471191
    9. '   
' → logprob: -11.003632545471191
    10. ' ' → logprob: -12.503632545471191

Token 315: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11562292277812958
    2. '   ' → logprob: -3.1156229972839355
    3. ':' → logprob: -3.3656229972839355
    4. '=' → logprob: -4.2406229972839355
    5. ',b' → logprob: -4.9906229972839355
    6. '):' → logprob: -5.7406229972839355
    7. '(b' → logprob: -6.3656229972839355
    8. '[' → logprob: -7.1156229972839355
    9. ' :' → logprob: -7.2406229972839355
    10. '=b' → logprob: -7.3656229972839355

Token 316: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8670603036880493
    2. ' bingo' → logprob: -1.1170603036880493
    3. '   ' → logprob: -1.8670603036880493
    4. ' b' → logprob: -2.4920601844787598
    5. '    ' → logprob: -4.99206018447876
    6. '	b' → logprob: -5.24206018447876
    7. ' ' → logprob: -6.36706018447876
    8. ')' → logprob: -8.242060661315918
    9. ' ' → logprob: -8.617060661315918
    10. '```' → logprob: -8.742060661315918

Token 317: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0023863529786467552
    2. ' bingo' → logprob: -6.627386569976807
    3. '   ' → logprob: -6.877386569976807
    4. ' b' → logprob: -11.127386093139648
    5. '	b' → logprob: -11.752386093139648
    6. '```' → logprob: -13.252386093139648
    7. ' ' → logprob: -13.502386093139648
    8. '  ' → logprob: -14.127386093139648
    9. ')' → logprob: -14.752386093139648
    10. 'bing' → logprob: -15.127386093139648

Token 318: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -6.921253225300461e-05
    2. '_car' → logprob: -10.500069618225098
    3. '_' → logprob: -10.750069618225098
    4. '_cards' → logprob: -11.250069618225098
    5. '_cart' → logprob: -12.500069618225098
    6. '_code' → logprob: -13.375069618225098
    7. ',' → logprob: -15.125069618225098
    8. ',_' → logprob: -15.250069618225098
    9. ' _' → logprob: -15.750069618225098
    10. '_b' → logprob: -15.875069618225098

Token 319: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015560438623651862
    2. ' ,' → logprob: -6.501555919647217
    3. '   ' → logprob: -10.126556396484375
    4. ':' → logprob: -12.126556396484375
    5. ',
' → logprob: -13.251556396484375
    6. '[' → logprob: -13.626556396484375
    7. ',b' → logprob: -14.001556396484375
    8. '<|end|>' → logprob: -14.251556396484375
    9. '):' → logprob: -14.376556396484375
    10. ')' → logprob: -14.501556396484375

Token 320: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0024936108384281397
    2. ' list' → logprob: -6.002493381500244
    3. '   ' → logprob: -11.877493858337402
    4. 'List' → logprob: -11.877493858337402
    5. ')' → logprob: -12.752493858337402
    6. 'b' → logprob: -14.752493858337402
    7. '[list' → logprob: -15.877493858337402
    8. ',' → logprob: -16.377492904663086
    9. ',list' → logprob: -16.627492904663086
    10. ':list' → logprob: -16.627492904663086

Token 321: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1171601265668869
    2. ',' → logprob: -2.4921600818634033
    3. '[list' → logprob: -4.242160320281982
    4. ')' → logprob: -5.367160320281982
    5. '):
' → logprob: -5.492160320281982
    6. ':' → logprob: -6.617160320281982
    7. '[List' → logprob: -6.992160320281982
    8. '   ' → logprob: -7.117160320281982
    9. '[' → logprob: -7.367160320281982
    10. ' ):' → logprob: -8.992159843444824

Token 322: ' carte' (ID: 30276)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.18416982889175415
    2. 'list' → logprob: -1.8091697692871094
    3. ' ' → logprob: -5.934169769287109
    4. '   ' → logprob: -7.184169769287109
    5. 'List' → logprob: -7.934169769287109
    6. '[list' → logprob: -8.05916976928711
    7. '    ' → logprob: -9.55916976928711
    8. ')' → logprob: -9.55916976928711
    9. 'A' → logprob: -10.05916976928711
    10. ' List' → logprob: -10.30916976928711

Token 323: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7939762473106384
    2. '_b' → logprob: -1.5439763069152832
    3. ' ' → logprob: -2.418976306915283
    4. '_' → logprob: -2.668976306915283
    5. '[' → logprob: -2.918976306915283
    6. '   ' → logprob: -3.168976306915283
    7. ' of' → logprob: -3.793976306915283
    8. ' des' → logprob: -4.293976306915283
    9. ' =' → logprob: -4.543976306915283
    10. '<|end|>' → logprob: -4.918976306915283

Token 324: ' bingo' (ID: 65141)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10021119564771652
    2. ' list' → logprob: -2.4752111434936523
    3. 'b' → logprob: -5.225211143493652
    4. 'lists' → logprob: -5.600211143493652
    5. ' lists' → logprob: -6.725211143493652
    6. 'liste' → logprob: -7.725211143493652
    7. '[list' → logprob: -8.850211143493652
    8. ' liste' → logprob: -9.100211143493652
    9. ' listes' → logprob: -9.600211143493652
    10. ' ' → logprob: -9.850211143493652

Token 325: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46636074781417847
    2. ' ' → logprob: -1.3413608074188232
    3. ':' → logprob: -3.7163608074188232
    4. '   ' → logprob: -3.8413608074188232
    5. ' ,' → logprob: -3.9663608074188232
    6. '[' → logprob: -4.591360569000244
    7. ')' → logprob: -5.091360569000244
    8. ' (' → logprob: -5.091360569000244
    9. ',
' → logprob: -5.341360569000244
    10. '2' → logprob: -5.591360569000244

Token 326: '3' (ID: 18)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23903003334999084
    2. ' ' → logprob: -2.989030122756958
    3. ':' → logprob: -3.114030122756958
    4. '2' → logprob: -3.489030122756958
    5. '[' → logprob: -3.614030122756958
    6. ')' → logprob: -4.114029884338379
    7. '   ' → logprob: -4.739029884338379
    8. '[list' → logprob: -5.114029884338379
    9. ' of' → logprob: -5.489029884338379
    10. ',
' → logprob: -5.489029884338379

Token 327: 'x' (ID: 87)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6774765253067017
    2. '[' → logprob: -1.5524765253067017
    3. ' [
' → logprob: -2.427476406097412
    4. '[][]' → logprob: -3.052476406097412
    5. ' [' → logprob: -3.552476406097412
    6. '   ' → logprob: -3.552476406097412
    7. ' [][]' → logprob: -3.677476406097412
    8. 'x' → logprob: -4.052476406097412
    9. ')' → logprob: -4.302476406097412
    10. '[]' → logprob: -4.677476406097412

Token 328: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0004123192047700286
    2. '[' → logprob: -8.750411987304688
    3. ' ' → logprob: -8.875411987304688
    4. '*' → logprob: -9.875411987304688
    5. '   ' → logprob: -10.625411987304688
    6. '_' → logprob: -11.375411987304688
    7. 'x' → logprob: -11.750411987304688
    8. '-' → logprob: -11.750411987304688
    9. '```' → logprob: -12.500411987304688
    10. '  ' → logprob: -13.875411987304688

Token 329: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5879530906677246
    2. ',' → logprob: -1.0879530906677246
    3. '
' → logprob: -2.8379530906677246
    4. ' (' → logprob: -4.462953090667725
    5. ' with' → logprob: -5.087953090667725
    6. ' ' → logprob: -5.462953090667725
    7. '       ' → logprob: -5.587953090667725
    8. ' avec' → logprob: -5.587953090667725
    9. ',
' → logprob: -5.962953090667725
    10. ' de' → logprob: -6.087953090667725

Token 330: ' liste' (ID: 31719)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.37174463272094727
    2. ' list' → logprob: -1.3717446327209473
    3. 'list' → logprob: -3.4967446327209473
    4. ' des' → logprob: -4.371744632720947
    5. 'une' → logprob: -4.621744632720947
    6. ' liste' → logprob: -6.246744632720947
    7. ' la' → logprob: -7.996744632720947
    8. 'liste' → logprob: -8.121744155883789
    9. '[]' → logprob: -8.246744155883789
    10. 'des' → logprob: -8.496744155883789

Token 331: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9541894793510437
    2. ' de' → logprob: -0.9541894793510437
    3. '[' → logprob: -2.3291895389556885
    4. ' des' → logprob: -3.5791895389556885
    5. '   ' → logprob: -3.9541895389556885
    6. ')' → logprob: -4.579189300537109
    7. '.deepcopy' → logprob: -4.579189300537109
    8. '_' → logprob: -4.704189300537109
    9. 'de' → logprob: -4.704189300537109
    10. '_de' → logprob: -4.829189300537109

Token 332: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0002889874158427119
    2. 'lists' → logprob: -8.500288963317871
    3. ' list' → logprob: -9.500288963317871
    4. 'liste' → logprob: -11.625288963317871
    5. ' lists' → logprob: -14.000288963317871
    6. '[list' → logprob: -14.875288963317871
    7. ' listes' → logprob: -15.125288963317871
    8. '   ' → logprob: -15.625288963317871
    9. ' liste' → logprob: -17.375289916992188
    10. 'listas' → logprob: -17.625289916992188

Token 333: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.041577696800232
    2. '   ' → logprob: -1.541577696800232
    3. '<|end|>' → logprob: -2.0415778160095215
    4. ' de' → logprob: -2.4165778160095215
    5. '[int' → logprob: -2.4165778160095215
    6. ' of' → logprob: -3.2915778160095215
    7. ',' → logprob: -3.4165778160095215
    8. '[' → logprob: -3.9165778160095215
    9. ' d' → logprob: -5.4165778160095215
    10. ' ' → logprob: -5.5415778160095215

Token 334: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10677748173475266
    2. ' int' → logprob: -2.9817774295806885
    3. 'ent' → logprob: -3.6067774295806885
    4. 'ints' → logprob: -4.731777667999268
    5. ' ent' → logprob: -4.981777667999268
    6. ' integers' → logprob: -5.606777667999268
    7. 'inte' → logprob: -5.856777667999268
    8. '[int' → logprob: -7.731777667999268
    9. '<int' → logprob: -8.10677719116211
    10. ''ent' → logprob: -8.23177719116211

Token 335: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -1.723973582556937e-05
    2. 'ier' → logprob: -12.500017166137695
    3. 'ints' → logprob: -12.750017166137695
    4. 'ières' → logprob: -13.000017166137695
    5. '   ' → logprob: -13.375017166137695
    6. ' ints' → logprob: -13.500017166137695
    7. 't' → logprob: -13.625017166137695
    8. 'i' → logprob: -14.250017166137695
    9. 'ires' → logprob: -14.375017166137695
    10. 'ers' → logprob: -14.500017166137695

Token 336: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26337769627571106
    2. ',' → logprob: -2.2633776664733887
    3. ')' → logprob: -2.5133776664733887
    4. '):
' → logprob: -3.7633776664733887
    5. '):' → logprob: -3.8883776664733887
    6. ' ,' → logprob: -7.388377666473389
    7. ',
' → logprob: -7.888377666473389
    8. '
' → logprob: -8.388378143310547
    9. '[' → logprob: -8.388378143310547
    10. '.' → logprob: -8.513378143310547

Token 337: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015779774636030197
    2. ')' → logprob: -5.640779972076416
    3. '    
' → logprob: -6.015779972076416
    4. '
' → logprob: -6.265779972076416
    5. '```' → logprob: -6.390779972076416
    6. 'def' → logprob: -6.515779972076416
    7. '       ' → logprob: -6.640779972076416
    8. ' 
' → logprob: -6.890779972076416
    9. '  
' → logprob: -7.140779972076416
    10. ' ' → logprob: -7.390779972076416

Token 338: ' called' (ID: 4358)
  Prédit: ' called'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' called' → logprob: -0.2589409351348877
    2. 'called' (adapté à ' called') → logprob: -1.5089409351348877
    3. '   ' → logprob: -5.258940696716309
    4. ' marked' → logprob: -6.758940696716309
    5. 'marked' → logprob: -7.508940696716309
    6. '    
' → logprob: -10.258940696716309
    7. '
' → logprob: -11.883940696716309
    8. '```' → logprob: -12.008940696716309
    9. ' ' → logprob: -12.258940696716309
    10. '    ' → logprob: -12.633940696716309

Token 339: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.020829029381275177
    2. '_' → logprob: -3.89582896232605
    3. ')_' → logprob: -9.645829200744629
    4. '_n' → logprob: -10.520829200744629
    5. '_b' → logprob: -10.520829200744629
    6. '_num' → logprob: -10.520829200744629
    7. '_s' → logprob: -10.645829200744629
    8. ' _' → logprob: -10.770829200744629
    9. ')' → logprob: -10.770829200744629
    10. 's' → logprob: -10.895829200744629

Token 340: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006810996565036476
    2. ',' → logprob: -8.000680923461914
    3. '):
' → logprob: -8.625680923461914
    4. ' ):' → logprob: -9.375680923461914
    5. ')' → logprob: -10.625680923461914
    6. ':' → logprob: -10.750680923461914
    7. '   ' → logprob: -10.750680923461914
    8. '=' → logprob: -12.375680923461914
    9. '):
' → logprob: -13.000680923461914
    10. ')):' → logprob: -13.000680923461914

Token 341: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10242947936058044
    2. 'set' → logprob: -2.3524293899536133
    3. ' list' → logprob: -6.477429389953613
    4. ')' → logprob: -7.852429389953613
    5. ' set' → logprob: -8.727429389953613
    6. '):' → logprob: -10.102429389953613
    7. 'int' → logprob: -10.102429389953613
    8. ')set' → logprob: -10.227429389953613
    9. '):
' → logprob: -12.227429389953613
    10. '),' → logprob: -13.477429389953613

Token 342: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017810913268476725
    2. ':' → logprob: -7.126780986785889
    3. '   ' → logprob: -7.626780986785889
    4. '):
' → logprob: -8.251781463623047
    5. ')' → logprob: -9.626781463623047
    6. '=' → logprob: -9.876781463623047
    7. ' ):' → logprob: -10.376781463623047
    8. '[int' → logprob: -10.501781463623047
    9. ':list' → logprob: -11.751781463623047
    10. ',' → logprob: -12.251781463623047

Token 343: ' liste' (ID: 31719)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.5310752987861633
    2. ' list' → logprob: -1.1560752391815186
    3. 'set' → logprob: -3.2810752391815186
    4. ' int' → logprob: -3.9060752391815186
    5. 'int' → logprob: -4.031075477600098
    6. 'list' → logprob: -4.281075477600098
    7. '[int' → logprob: -5.031075477600098
    8. ' ' → logprob: -7.156075477600098
    9. '<|end|>' → logprob: -8.656075477600098
    10. ')' → logprob: -9.031075477600098

Token 344: ' des' (ID: 731)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1821790933609009
    2. ' de' → logprob: -1.6821790933609009
    3. ')' → logprob: -1.8071790933609009
    4. ' des' → logprob: -2.0571789741516113
    5. '<|end|>' → logprob: -2.9321789741516113
    6. '[' → logprob: -3.1821789741516113
    7. '_' → logprob: -3.6821789741516113
    8. '_called' → logprob: -4.307178974151611
    9. ' called' → logprob: -4.682178974151611
    10. '   ' → logprob: -4.682178974151611

Token 345: ' num' (ID: 2269)
  Prédit: ' called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' called' → logprob: -0.5462597608566284
    2. 'called' → logprob: -1.6712597608566284
    3. ' numbers' → logprob: -2.171259880065918
    4. ' int' → logprob: -3.421259880065918
    5. 'int' → logprob: -3.671259880065918
    6. ' integers' → logprob: -4.546259880065918
    7. ' appel' → logprob: -4.796259880065918
    8. ')' → logprob: -5.296259880065918
    9. ' marked' → logprob: -5.296259880065918
    10. ' appelé' → logprob: -5.671259880065918

Token 346: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.02191075310111046
    2. 'érés' → logprob: -4.146910667419434
    3. 'é' → logprob: -6.771910667419434
    4. 'és' → logprob: -7.021910667419434
    5. '_called' → logprob: -7.521910667419434
    6. 'eros' → logprob: -7.771910667419434
    7. '   ' → logprob: -8.021910667419434
    8. 'um' → logprob: -8.146910667419434
    9. 's' → logprob: -8.271910667419434
    10. 'bres' → logprob: -8.521910667419434

Token 347: ' qui' (ID: 2780)
  Prédit: 'appel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'appel' → logprob: -0.3112548291683197
    2. ' appel' → logprob: -1.436254858970642
    3. 'app' → logprob: -4.311254978179932
    4. ' app' → logprob: -5.436254978179932
    5. '_app' → logprob: -5.936254978179932
    6. '_' → logprob: -6.061254978179932
    7. ' appelé' → logprob: -6.936254978179932
    8. ' mar' → logprob: -6.936254978179932
    9. ' appell' → logprob: -7.186254978179932
    10. ',' → logprob: -7.311254978179932

Token 348: ' ont' (ID: 4930)
  Prédit: ' ont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ont' → logprob: -0.6604798436164856
    2. 'ont' → logprob: -1.5354797840118408
    3. 's' → logprob: -1.7854797840118408
    4. ')' → logprob: -3.410479784011841
    5. ' sont' → logprob: -4.28548002243042
    6. ' have' → logprob: -4.28548002243042
    7. ' been' → logprob: -4.66048002243042
    8. ''ont' → logprob: -4.78548002243042
    9. '_' → logprob: -5.16048002243042
    10. ' été' → logprob: -5.66048002243042

Token 349: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.007329032756388187
    2. ' été' → logprob: -5.007328987121582
    3. '_' → logprob: -7.507328987121582
    4. 'dé' → logprob: -11.132328987121582
    5. 'ét' → logprob: -11.507328987121582
    6. 'être' → logprob: -11.632328987121582
    7. 'ete' → logprob: -11.757328987121582
    8. 'é' → logprob: -12.132328987121582
    9. ' déjà' → logprob: -13.007328987121582
    10. 'been' → logprob: -13.132328987121582

Token 350: ' appel' (ID: 34642)
  Prédit: 'appel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appel' → logprob: -0.017447661608457565
    2. ' appel' → logprob: -4.892447471618652
    3. 'app' → logprob: -5.142447471618652
    4. ' app' → logprob: -6.517447471618652
    5. ' called' → logprob: -7.267447471618652
    6. 'called' → logprob: -7.517447471618652
    7. ' appelé' → logprob: -8.017447471618652
    8. 'call' → logprob: -8.392447471618652
    9. '_called' → logprob: -9.142447471618652
    10. ' mar' → logprob: -9.392447471618652

Token 351: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.00028398085851222277
    2. 'é' → logprob: -8.250284194946289
    3. 'es' → logprob: -11.500284194946289
    4. 's' → logprob: -11.625284194946289
    5. 'ÉS' → logprob: -12.875284194946289
    6. 'ées' → logprob: -14.750284194946289
    7. 'ès' → logprob: -15.250284194946289
    8. '(' → logprob: -15.625284194946289
    9. 'É' → logprob: -16.87528419494629
    10. ')' → logprob: -17.00028419494629

Token 352: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8385042548179626
    2. '):
' → logprob: -1.3385043144226074
    3. ')' → logprob: -1.5885043144226074
    4. '):' → logprob: -2.3385043144226074
    5. ').' → logprob: -6.713504314422607
    6. ')
' → logprob: -7.213504314422607
    7. '
' → logprob: -7.338504314422607
    8. '.' → logprob: -7.463504314422607
    9. ',' → logprob: -7.463504314422607
    10. ' ):
' → logprob: -8.33850383758545

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06043948233127594
    2. '
' → logprob: -2.9354395866394043
    3. '    
' → logprob: -6.060439586639404
    4. ' 
' → logprob: -6.810439586639404
    5. '  
' → logprob: -7.060439586639404
    6. '   
' → logprob: -7.560439586639404
    7. ')' → logprob: -8.310439109802246
    8. '\n' → logprob: -9.185439109802246
    9. '```' → logprob: -9.310439109802246
    10. ' ' → logprob: -9.435439109802246

Token 354: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06987040489912033
    2. ' marked' → logprob: -3.1948704719543457
    3. 'marked' → logprob: -4.569870471954346
    4. '
' → logprob: -4.944870471954346
    5. ' for' → logprob: -6.194870471954346
    6. '    
' → logprob: -6.194870471954346
    7. 'for' → logprob: -6.319870471954346
    8. '"""
' → logprob: -7.194870471954346
    9. 'result' → logprob: -7.444870471954346
    10. ' 
' → logprob: -7.944870471954346

Token 355: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1417689323425293
    2. '_b' → logprob: -1.1417689323425293
    3. ' None' → logprob: -2.5167689323425293
    4. '[' → logprob: -3.0167689323425293
    5. ' [' → logprob: -3.3917689323425293
    6. ' []' → logprob: -3.5167689323425293
    7. '_' → logprob: -3.6417689323425293
    8. ' [
' → logprob: -3.8917689323425293
    9. '[:]' → logprob: -4.016768932342529
    10. '   ' → logprob: -4.141768932342529

Token 356: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11951537430286407
    2. ' None' → logprob: -2.4945154190063477
    3. 'None' → logprob: -4.244515419006348
    4. '    ' → logprob: -4.994515419006348
    5. ' list' → logprob: -4.994515419006348
    6. ' marked' → logprob: -7.119515419006348
    7. ' bool' → logprob: -8.494515419006348
    8. 'list' → logprob: -8.619515419006348
    9. '       ' → logprob: -8.994515419006348
    10. '
' → logprob: -9.244515419006348

Token 357: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.08845598995685577
    2. ' list' → logprob: -2.58845591545105
    3. 'None' → logprob: -4.963456153869629
    4. ' None' → logprob: -6.338456153869629
    5. '   ' → logprob: -7.713456153869629
    6. 'bool' → logprob: -9.088456153869629
    7. '[list' → logprob: -10.213456153869629
    8. 'set' → logprob: -10.463456153869629
    9. 'b' → logprob: -10.713456153869629
    10. 'List' → logprob: -10.963456153869629

Token 358: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017610944341868162
    2. '[' → logprob: -7.251760959625244
    3. '):' → logprob: -8.751761436462402
    4. '[list' → logprob: -8.876761436462402
    5. '_b' → logprob: -9.251761436462402
    6. ' of' → logprob: -9.251761436462402
    7. ':
' → logprob: -9.626761436462402
    8. ' :' → logprob: -9.876761436462402
    9. '[int' → logprob: -10.001761436462402
    10. 'def' → logprob: -10.001761436462402

Token 359: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2517256736755371
    2. ' list' → logprob: -2.501725673675537
    3. 'A' → logprob: -3.001725673675537
    4. '   ' → logprob: -3.751725673675537
    5. '[list' → logprob: -4.126725673675537
    6. '[[' → logprob: -4.251725673675537
    7. 'marked' → logprob: -4.376725673675537
    8. 'b' → logprob: -5.501725673675537
    9. 'La' → logprob: -5.751725673675537
    10. ' A' → logprob: -6.251725673675537

Token 360: ' matr' (ID: 25095)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8429979085922241
    2. '[' → logprob: -1.8429979085922241
    3. '[
' → logprob: -1.8429979085922241
    4. '[[' → logprob: -2.9679980278015137
    5. ' [[' → logprob: -3.9679980278015137
    6. ' [' → logprob: -4.092998027801514
    7. ' [
' → logprob: -4.217998027801514
    8. '[]' → logprob: -4.342998027801514
    9. 'def' → logprob: -4.342998027801514
    10. '[][]' → logprob: -4.467998027801514

Token 361: 'ice' (ID: 603)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3725707232952118
    2. ' [
' → logprob: -2.747570753097534
    3. '   ' → logprob: -3.122570753097534
    4. '[
' → logprob: -3.497570753097534
    5. ' de' → logprob: -3.747570753097534
    6. '[]' → logprob: -3.747570753097534
    7. ' of' → logprob: -3.747570753097534
    8. 'ix' → logprob: -4.247570514678955
    9. 'arked' → logprob: -4.372570514678955
    10. ' [' → logprob: -4.622570514678955

Token 362: ' ' (ID: 220)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7159278988838196
    2. ' de' → logprob: -1.8409278392791748
    3. '[' → logprob: -2.215927839279175
    4. ' ' → logprob: -2.340927839279175
    5. ' [' → logprob: -3.715927839279175
    6. ' deepcopy' → logprob: -3.965927839279175
    7. '[][]' → logprob: -4.215928077697754
    8. ' [[' → logprob: -4.590928077697754
    9. ' [
' → logprob: -4.590928077697754
    10. ' bool' → logprob: -4.840928077697754

Token 363: '3' (ID: 18)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3368922472000122
    2. ' of' → logprob: -1.7118922472000122
    3. ' de' → logprob: -1.7118922472000122
    4. 'bool' → logprob: -1.8368922472000122
    5. ' [[' → logprob: -2.8368921279907227
    6. ' bool' → logprob: -3.0868921279907227
    7. '[[' → logprob: -3.2118921279907227
    8. 'of' → logprob: -3.5868921279907227
    9. 'de' → logprob: -3.9618921279907227
    10. '<bool' → logprob: -4.836892127990723

Token 364: 'x' (ID: 87)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12549573183059692
    2. ' [' → logprob: -2.750495672225952
    3. ' of' → logprob: -3.375495672225952
    4. ' [[' → logprob: -5.000495910644531
    5. ' [
' → logprob: -5.375495910644531
    6. ' de' → logprob: -6.250495910644531
    7. 'x' → logprob: -6.375495910644531
    8. '   ' → logprob: -6.625495910644531
    9. '[
' → logprob: -6.625495910644531
    10. '<bool' → logprob: -7.375495910644531

Token 365: '3' (ID: 18)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19596928358078003
    2. '3' → logprob: -2.445969343185425
    3. 'x' → logprob: -3.070969343185425
    4. ' ' → logprob: -4.820969104766846
    5. ' [' → logprob: -4.945969104766846
    6. ' bool' → logprob: -5.320969104766846
    7. ' of' → logprob: -5.320969104766846
    8. '   ' → logprob: -5.445969104766846
    9. ' [
' → logprob: -5.820969104766846
    10. ' de' → logprob: -6.195969104766846

Token 366: ' (' (ID: 350)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.20873016119003296
    2. ' de' → logprob: -2.0837302207946777
    3. '[' → logprob: -3.2087302207946777
    4. ' with' → logprob: -5.208730220794678
    5. '[
' → logprob: -5.208730220794678
    6. ' [' → logprob: -5.958730220794678
    7. ' [[' → logprob: -6.333730220794678
    8. '<bool' → logprob: -6.333730220794678
    9. '[[' → logprob: -6.708730220794678
    10. 'of' → logprob: -6.833730220794678

Token 367: 'liste' (ID: 69656)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.10868740826845169
    2. '[[' → logprob: -2.358687400817871
    3. ' bool' → logprob: -5.858687400817871
    4. 'list' → logprob: -6.108687400817871
    5. '[' → logprob: -6.233687400817871
    6. ' [[' → logprob: -8.108687400817871
    7. ')' → logprob: -8.108687400817871
    8. 'int' → logprob: -8.358687400817871
    9. ' of' → logprob: -8.858687400817871
    10. 'of' → logprob: -8.983687400817871

Token 368: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5795390009880066
    2. '[' → logprob: -1.5795390605926514
    3. ' de' → logprob: -1.8295390605926514
    4. 'de' → logprob: -3.4545390605926514
    5. 'of' → logprob: -3.5795390605926514
    6. '<bool' → logprob: -5.454538822174072
    7. '[list' → logprob: -5.829538822174072
    8. ' des' → logprob: -6.704538822174072
    9. 'des' → logprob: -6.704538822174072
    10. '   ' → logprob: -7.454538822174072

Token 369: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.016974754631519318
    2. 'bool' → logprob: -4.266974925994873
    3. 'lists' → logprob: -6.016974925994873
    4. '[' → logprob: -8.641974449157715
    5. 'liste' → logprob: -9.391974449157715
    6. '[list' → logprob: -9.766974449157715
    7. '[
' → logprob: -11.016974449157715
    8. ' list' → logprob: -11.141974449157715
    9. '[[' → logprob: -11.391974449157715
    10. 'listas' → logprob: -13.141974449157715

Token 370: ')' (ID: 8)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.27993518114089966
    2. ')' → logprob: -2.029935121536255
    3. ' de' → logprob: -2.654935121536255
    4. '[int' → logprob: -3.779935121536255
    5. '[' → logprob: -4.279935359954834
    6. 'of' → logprob: -5.779935359954834
    7. '<bool' → logprob: -7.154935359954834
    8. ' d' → logprob: -7.779935359954834
    9. 'de' → logprob: -8.154934883117676
    10. ' bool' → logprob: -8.529934883117676

Token 371: ' contenant' (ID: 131049)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.20325757563114166
    2. ' de' → logprob: -2.3282575607299805
    3. ' with' → logprob: -3.0782575607299805
    4. '   ' → logprob: -4.9532575607299805
    5. '[' → logprob: -5.3282575607299805
    6. ' des' → logprob: -5.3282575607299805
    7. ' marking' → logprob: -5.5782575607299805
    8. '[
' → logprob: -5.7032575607299805
    9. '<bool' → logprob: -5.9532575607299805
    10. ' representing' → logprob: -6.3282575607299805

Token 372: ' ' (ID: 220)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.4933582842350006
    2. '[' → logprob: -1.3683582544326782
    3. ' des' → logprob: -2.6183583736419678
    4. ' True' → logprob: -2.9933583736419678
    5. '[[' → logprob: -5.743358135223389
    6. 'bool' → logprob: -5.868358135223389
    7. '[
' → logprob: -5.868358135223389
    8. 'des' → logprob: -6.243358135223389
    9. '   ' → logprob: -8.118358612060547
    10. ' [' → logprob: -8.743358612060547

Token 373: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.19877703487873077
    2. '[' → logprob: -2.573776960372925
    3. '[[' → logprob: -2.573776960372925
    4. ' True' → logprob: -4.323777198791504
    5. '[
' → logprob: -4.323777198791504
    6. 'bool' → logprob: -6.823777198791504
    7. ' [[' → logprob: -9.573777198791504
    8. '   ' → logprob: -10.198777198791504
    9. '[i' → logprob: -10.573777198791504
    10. ' [' → logprob: -11.323777198791504

Token 374: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 375: ' la' (ID: 557)
  Prédit: ' bingo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bingo' → logprob: -0.07663337141275406
    2. ' le' → logprob: -2.8266334533691406
    3. ' b' → logprob: -5.326633453369141
    4. 'b' → logprob: -5.701633453369141
    5. ' la' → logprob: -5.701633453369141
    6. ' mark' → logprob: -7.076633453369141
    7. ' num' → logprob: -8.07663345336914
    8. ' marked' → logprob: -8.45163345336914
    9. ' les' → logprob: -8.45163345336914
    10. ' the' → logprob: -8.70163345336914

Token 376: ' case' (ID: 1890)
  Prédit: ' bingo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bingo' → logprob: -0.10370694100856781
    2. 'b' → logprob: -2.3537068367004395
    3. ' b' → logprob: -6.1037068367004395
    4. ' ' → logprob: -7.6037068367004395
    5. 'num' → logprob: -9.353707313537598
    6. 'cell' → logprob: -9.478707313537598
    7. ' cell' → logprob: -9.853707313537598
    8. 'marked' → logprob: -9.978707313537598
    9. ' element' → logprob: -10.228707313537598
    10. 'row' → logprob: -10.228707313537598

Token 377: ' a' (ID: 261)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.18696719408035278
    2. ' mar' → logprob: -2.436967134475708
    3. ' a' → logprob: -2.811967134475708
    4. ' is' → logprob: -4.436967372894287
    5. ' vaut' → logprob: -5.436967372894287
    6. ' marqué' → logprob: -6.561967372894287
    7. 'est' → logprob: -6.936967372894287
    8. ' marcada' → logprob: -7.061967372894287
    9. 'a' → logprob: -7.186967372894287
    10. 'mar' → logprob: -7.311967372894287

Token 378: ' été' (ID: 9799)
  Prédit: ' été'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.006824774201959372
    2. ' ' → logprob: -6.506824970245361
    3. 'été' → logprob: -6.631824970245361
    4. ' been' → logprob: -6.631824970245361
    5. ' marqué' → logprob: -6.756824970245361
    6. '1' → logprob: -8.256824493408203
    7. ')' → logprob: -8.381824493408203
    8. '=' → logprob: -8.381824493408203
    9. 'been' → logprob: -9.006824493408203
    10. '<|end|>' → logprob: -9.631824493408203

Token 379: ' mar' (ID: 2674)
  Prédit: ' mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.21030738949775696
    2. 'mar' → logprob: -1.7103073596954346
    3. 'mark' → logprob: -5.585307598114014
    4. 'marked' → logprob: -6.085307598114014
    5. ' marqué' → logprob: -6.460307598114014
    6. ' mark' → logprob: -7.710307598114014
    7. ' marked' → logprob: -8.460307121276855
    8. ' marcada' → logprob: -8.960307121276855
    9. 'm' → logprob: -9.210307121276855
    10. 'co' → logprob: -9.710307121276855

Token 380: 'quée' (ID: 63772)
  Prédit: 'quée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quée' → logprob: -0.01578693278133869
    2. 'qu' → logprob: -4.265787124633789
    3. 'quee' → logprob: -7.515787124633789
    4. 'q' → logprob: -7.640787124633789
    5. 'k' → logprob: -7.765787124633789
    6. 'qué' → logprob: -9.390787124633789
    7. 'quées' → logprob: -9.890787124633789
    8. 'que' → logprob: -11.515787124633789
    9. ' qu' → logprob: -12.640787124633789
    10. '[' → logprob: -12.765787124633789

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023606636095792055
    2. ' ,' → logprob: -6.252360820770264
    3. ',
' → logprob: -8.502360343933105
    4. '   ' → logprob: -8.752360343933105
    5. ' et' → logprob: -10.627360343933105
    6. '<|end|>' → logprob: -11.252360343933105
    7. ' ' → logprob: -11.377360343933105
    8. ' else' → logprob: -11.752360343933105
    9. '    ' → logprob: -12.752360343933105
    10. '[' → logprob: -13.127360343933105

Token 382: ' sinon' (ID: 52915)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2990914285182953
    2. ' ' → logprob: -1.4240914583206177
    3. '   ' → logprob: -4.549091339111328
    4. ' else' → logprob: -5.924091339111328
    5. '3' → logprob: -6.799091339111328
    6. '2' → logprob: -7.549091339111328
    7. '
' → logprob: -7.799091339111328
    8. '    ' → logprob: -7.799091339111328
    9. 'else' → logprob: -8.174091339111328
    10. ' 
' → logprob: -8.299091339111328

Token 383: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25193509459495544
    2. ' ' → logprob: -1.5019351243972778
    3. ' ' → logprob: -12.126935005187988
    4. '  ' → logprob: -16.376935958862305
    5. '   ' → logprob: -16.376935958862305
    6. '```' → logprob: -16.376935958862305
    7. '_' → logprob: -16.751935958862305
    8. ' un' → logprob: -16.876935958862305
    9. '[' → logprob: -17.001935958862305
    10. '`' → logprob: -17.251935958862305

Token 384: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06196802109479904
    2. ' ' → logprob: -2.8119680881500244
    3. '   ' → logprob: -15.936967849731445
    4. '  ' → logprob: -16.436967849731445
    5. ' ' → logprob: -16.686967849731445
    6. '    ' → logprob: -17.686967849731445
    7. 'space' → logprob: -19.311967849731445
    8. '_' → logprob: -19.436967849731445
    9. 's' → logprob: -20.061967849731445
    10. '```' → logprob: -20.061967849731445

Token 385: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4785524010658264
    2. ',' → logprob: -1.7285523414611816
    3. ')' → logprob: -2.8535523414611816
    4. ']' → logprob: -3.1035523414611816
    5. '   ' → logprob: -3.1035523414611816
    6. '[' → logprob: -4.478552341461182
    7. ',
' → logprob: -4.478552341461182
    8. '.
' → logprob: -4.728552341461182
    9. '```' → logprob: -4.728552341461182
    10. '
' → logprob: -4.853552341461182

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5119542479515076
    2. '
' → logprob: -1.0119543075561523
    3. '\n' → logprob: -4.011954307556152
    4. '    
' → logprob: -5.011954307556152
    5. 'def' → logprob: -5.511954307556152
    6. '  
' → logprob: -5.511954307556152
    7. '```' → logprob: -6.261954307556152
    8. '   
' → logprob: -6.761954307556152
    9. ' 
' → logprob: -7.386954307556152
    10. '\' → logprob: -8.761954307556152

Token 387: ' """
' (ID: 7037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3713591694831848
    2. '   ' → logprob: -1.37135910987854
    3. 'def' → logprob: -3.49635910987854
    4. '\n' → logprob: -4.621359348297119
    5. '```' → logprob: -4.621359348297119
    6. '    
' → logprob: -5.871359348297119
    7. '  
' → logprob: -6.621359348297119
    8. '   
' → logprob: -7.246359348297119
    9. ')' → logprob: -7.496359348297119
    10. ' 
' → logprob: -8.371358871459961

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04406788945198059
    2. ' marked' → logprob: -3.669067859649658
    3. 'marked' → logprob: -4.919067859649658
    4. ' mark' → logprob: -5.794067859649658
    5. ' marks' → logprob: -6.294067859649658
    6. 'marks' → logprob: -6.419067859649658
    7. 'mark' → logprob: -7.169067859649658
    8. '
' → logprob: -7.169067859649658
    9. '    
' → logprob: -7.544067859649658
    10. ' ' → logprob: -7.669067859649658

Token 389: ' marks' (ID: 22891)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.5064331889152527
    2. 'marks' (adapté à ' marks') → logprob: -1.0064332485198975
    3. 'mark' → logprob: -3.5064332485198975
    4. ' marks' → logprob: -6.756433010101318
    5. ' marked' → logprob: -7.881433010101318
    6. '   ' → logprob: -8.506433486938477
    7. 'mar' → logprob: -10.131433486938477
    8. 'marker' → logprob: -10.881433486938477
    9. 'markers' → logprob: -11.256433486938477
    10. ' mark' → logprob: -11.256433486938477

Token 390: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011049470864236355
    2. '=' → logprob: -4.511049270629883
    3. '   ' → logprob: -14.636049270629883
    4. ' =[' → logprob: -14.761049270629883
    5. '_' → logprob: -15.261049270629883
    6. ' ' → logprob: -15.511049270629883
    7. '[' → logprob: -15.761049270629883
    8. '=[' → logprob: -16.386049270629883
    9. ' =
' → logprob: -16.761049270629883
    10. '=[]' → logprob: -16.886049270629883

Token 391: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.4741537570953369
    2. ' [[' → logprob: -0.9741537570953369
    3. ' [' → logprob: -9.724153518676758
    4. '[' → logprob: -11.224153518676758
    5. '[]' → logprob: -13.224153518676758
    6. '[]
' → logprob: -13.599153518676758
    7. ' []
' → logprob: -15.599153518676758
    8. '[
' → logprob: -15.599153518676758
    9. ' []' → logprob: -16.224153518676758
    10. ' [
' → logprob: -18.224153518676758

Token 392: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.7500057220459
    4. 'False' → logprob: -19.1250057220459
    5. 'int' → logprob: -19.5000057220459
    6. '1' → logprob: -20.3750057220459
    7. '           ' → logprob: -21.3125057220459
    8. '۰' → logprob: -21.3750057220459
    9. '  ' → logprob: -21.4375057220459
    10. '       ' → logprob: -21.5000057220459

Token 393: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011671427637338638
    2. 'for' → logprob: -4.511671543121338
    3. ']' → logprob: -7.886671543121338
    4. '   ' → logprob: -9.01167106628418
    5. ',' → logprob: -10.51167106628418
    6. '][' → logprob: -11.01167106628418
    7. '	for' → logprob: -11.38667106628418
    8. ' ' → logprob: -11.51167106628418
    9. ']*' → logprob: -11.51167106628418
    10. '[' → logprob: -11.51167106628418

Token 394: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.016117772087454796
    2. 'for' → logprob: -4.141117572784424
    3. '   ' → logprob: -10.141118049621582
    4. ']' → logprob: -11.016118049621582
    5. '    ' → logprob: -11.766118049621582
    6. '	for' → logprob: -12.766118049621582
    7. '[' → logprob: -12.766118049621582
    8. ',' → logprob: -12.891118049621582
    9. ' ' → logprob: -12.891118049621582
    10. ']*' → logprob: -13.266118049621582

Token 395: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.000003814697266
    4. '9' → logprob: -21.500003814697266
    5. 'len' → logprob: -21.750003814697266
    6. '```' → logprob: -22.375003814697266
    7. '
' → logprob: -23.125003814697266
    8. '  ' → logprob: -23.250003814697266
    9. '۳' → logprob: -24.250003814697266
    10. '    ' → logprob: -24.375003814697266

Token 396: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.125001907348633
    4. 'len' → logprob: -18.500001907348633
    5. '
' → logprob: -20.500001907348633
    6. '```' → logprob: -20.500001907348633
    7. '۳' → logprob: -21.500001907348633
    8. '9' → logprob: -21.750001907348633
    9. '３' → logprob: -21.750001907348633
    10. '  ' → logprob: -22.625001907348633

Token 397: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0032753876876085997
    2. 'for' → logprob: -5.753275394439697
    3. '   ' → logprob: -9.503274917602539
    4. ']' → logprob: -11.128274917602539
    5. '	for' → logprob: -12.378274917602539
    6. ' ' → logprob: -13.253274917602539
    7. '    ' → logprob: -13.878274917602539
    8. ')' → logprob: -14.253274917602539
    9. ' ]' → logprob: -14.378274917602539
    10. '  ' → logprob: -16.25327491760254

Token 398: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00762745039537549
    2. '_range' → logprob: -5.757627487182617
    3. ' _' → logprob: -6.132627487182617
    4. ' range' → logprob: -6.257627487182617
    5. 'range' → logprob: -8.132627487182617
    6. '_b' → logprob: -10.507627487182617
    7. '_i' → logprob: -10.757627487182617
    8. '_in' → logprob: -12.507627487182617
    9. '_row' → logprob: -13.382627487182617
    10. ' i' → logprob: -14.007627487182617

Token 399: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003361774142831564
    2. ' range' → logprob: -8.000336647033691
    3. '_range' → logprob: -15.250336647033691
    4. '_' → logprob: -15.375336647033691
    5. '(range' → logprob: -16.125335693359375
    6. 'rang' → logprob: -16.875335693359375
    7. '3' → logprob: -17.375335693359375
    8. ' ' → logprob: -17.625335693359375
    9. ']' → logprob: -17.750335693359375
    10. '   ' → logprob: -17.875335693359375

Token 400: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '_' → logprob: -18.000431060791016
    4. '[' → logprob: -18.625431060791016
    5. '(range' → logprob: -19.125431060791016
    6. '_range' → logprob: -19.250431060791016
    7. '3' → logprob: -19.875431060791016
    8. '	range' → logprob: -20.500431060791016
    9. '(' → logprob: -20.750431060791016
    10. 'rang' → logprob: -22.250431060791016

Token 401: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.399378566537052e-05
    2. 'range' → logprob: -9.500083923339844
    3. ' range' → logprob: -11.875083923339844
    4. ' (' → logprob: -14.250083923339844
    5. '(range' → logprob: -14.250083923339844
    6. '3' → logprob: -14.750083923339844
    7. ' ' → logprob: -15.375083923339844
    8. '(
' → logprob: -15.500083923339844
    9. ')' → logprob: -18.125083923339844
    10. ']' → logprob: -18.250083923339844

Token 402: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.500001907348633
    4. 'range' → logprob: -17.250001907348633
    5. ')' → logprob: -18.500001907348633
    6. '(' → logprob: -20.125001907348633
    7. ' range' → logprob: -20.750001907348633
    8. '
' → logprob: -21.000001907348633
    9. '  ' → logprob: -21.375001907348633
    10. '۳' → logprob: -21.500001907348633

Token 403: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.27099974633893e-05
    2. '   ' → logprob: -11.625012397766113
    3. ')' → logprob: -13.250012397766113
    4. ']' → logprob: -13.875012397766113
    5. ')]
' → logprob: -14.625012397766113
    6. ' )' → logprob: -16.12501335144043
    7. ')],' → logprob: -16.37501335144043
    8. ')][' → logprob: -16.50001335144043
    9. ')].' → logprob: -17.00001335144043
    10. ' ' → logprob: -17.62501335144043

Token 404: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.577460765838623
    2. '   ' → logprob: -0.827460765838623
    3. '    
' → logprob: -6.827460765838623
    4. ' for' → logprob: -8.077461242675781
    5. '
' → logprob: -9.702461242675781
    6. 'for' → logprob: -9.952461242675781
    7. ' 
' → logprob: -12.702461242675781
    8. '\n' → logprob: -12.702461242675781
    9. '  
' → logprob: -12.827461242675781
    10. '   
' → logprob: -13.077461242675781

Token 405: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26974862813949585
    2. 'for' (adapté à ' for') → logprob: -2.0197486877441406
    3. ' for' → logprob: -2.2697486877441406
    4. '
' → logprob: -7.894748687744141
    5. '    
' → logprob: -11.26974868774414
    6. '	for' → logprob: -11.39474868774414
    7. '  ' → logprob: -13.51974868774414
    8. ' ' → logprob: -13.89474868774414
    9. '```' → logprob: -13.89474868774414
    10. '  
' → logprob: -14.64474868774414

Token 406: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25259751081466675
    2. 'i' → logprob: -1.5025975704193115
    3. 'r' → logprob: -8.25259780883789
    4. ' r' → logprob: -8.37759780883789
    5. ' row' → logprob: -8.87759780883789
    6. 'row' → logprob: -10.50259780883789
    7. ' y' → logprob: -12.37759780883789
    8. '	i' → logprob: -12.62759780883789
    9. '   ' → logprob: -14.25259780883789
    10. '_i' → logprob: -14.50259780883789

Token 407: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004090508911758661
    2. 'in' → logprob: -5.504090309143066
    3. ',' → logprob: -12.129090309143066
    4. ' ' → logprob: -12.254090309143066
    5. '   ' → logprob: -14.754090309143066
    6. ' ,' → logprob: -15.004090309143066
    7. 'import' → logprob: -15.129090309143066
    8. '[' → logprob: -15.629090309143066
    9. 'range' → logprob: -15.629090309143066
    10. '_' → logprob: -15.754090309143066

Token 408: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861468818038702
    2. ' range' → logprob: -4.758614540100098
    3. '	range' → logprob: -17.258615493774414
    4. '(range' → logprob: -17.758615493774414
    5. 'rang' → logprob: -18.508615493774414
    6. ' ' → logprob: -18.633615493774414
    7. '   ' → logprob: -18.633615493774414
    8. '
' → logprob: -18.883615493774414
    9. '```' → logprob: -18.883615493774414
    10. '[' → logprob: -19.633615493774414

Token 409: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000919796759262681
    2. '3' → logprob: -7.000919818878174
    3. ' ' → logprob: -12.375919342041016
    4. ' (' → logprob: -13.000919342041016
    5. '   ' → logprob: -13.750919342041016
    6. '(
' → logprob: -14.500919342041016
    7. '(len' → logprob: -15.500919342041016
    8. 'def' → logprob: -18.250919342041016
    9. '	' → logprob: -18.750919342041016
    10. ')' → logprob: -18.750919342041016

Token 410: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.0
    4. 'len' → logprob: -19.375
    5. ')' → logprob: -21.375
    6. '```' → logprob: -21.75
    7. '0' → logprob: -22.625
    8. '۳' → logprob: -22.75
    9. '9' → logprob: -23.0
    10. '３' → logprob: -23.125

Token 411: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023405609652400017
    2. '):
' → logprob: -3.7734055519104004
    3. ')' → logprob: -9.398406028747559
    4. '   ' → logprob: -9.648406028747559
    5. ':' → logprob: -11.898406028747559
    6. '):
' → logprob: -13.023406028747559
    7. ' ):' → logprob: -13.523406028747559
    8. '):

' → logprob: -14.648406028747559
    9. ']:' → logprob: -14.648406028747559
    10. ' ' → logprob: -15.023406028747559

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048075899481773376
    2. '   ' → logprob: -3.2980759143829346
    3. ' for' → logprob: -4.6730756759643555
    4. '    ' → logprob: -8.048075675964355
    5. 'for' → logprob: -9.298075675964355
    6. ' ' → logprob: -9.548075675964355
    7. '	   ' → logprob: -9.923075675964355
    8. '     ' → logprob: -10.798075675964355
    9. '    
' → logprob: -11.048075675964355
    10. '	for' → logprob: -11.173075675964355

Token 413: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.32657256722450256
    2. ' for' → logprob: -1.3265725374221802
    3. '   ' → logprob: -4.326572418212891
    4. '	for' → logprob: -12.20157241821289
    5. 'j' → logprob: -13.07657241821289
    6. ' j' → logprob: -13.32657241821289
    7. ' ' → logprob: -13.95157241821289
    8. '       ' → logprob: -16.07657241821289
    9. '    ' → logprob: -16.20157241821289
    10. '  ' → logprob: -17.82657241821289

Token 414: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16022443771362305
    2. ' j' → logprob: -1.910224437713623
    3. '	j' → logprob: -15.910224914550781
    4. '   ' → logprob: -16.28522491455078
    5. '_j' → logprob: -16.91022491455078
    6. ' ' → logprob: -16.91022491455078
    7. '3' → logprob: -18.16022491455078
    8. '    ' → logprob: -18.41022491455078
    9. '$j' → logprob: -18.66022491455078
    10. '```' → logprob: -18.91022491455078

Token 415: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006744496989995241
    2. 'in' → logprob: -5.006744384765625
    3. ' ' → logprob: -10.881744384765625
    4. '    ' → logprob: -12.006744384765625
    5. '   ' → logprob: -13.381744384765625
    6. ')' → logprob: -14.881744384765625
    7. '<|end|>' → logprob: -15.256744384765625
    8. ' i' → logprob: -15.506744384765625
    9. '[' → logprob: -15.506744384765625
    10. '  ' → logprob: -15.631744384765625

Token 416: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2084786742925644
    2. ' range' → logprob: -1.7084786891937256
    3. '3' → logprob: -4.9584784507751465
    4. ' ' → logprob: -11.083478927612305
    5. '(range' → logprob: -13.708478927612305
    6. '(' → logprob: -15.458478927612305
    7. '[' → logprob: -17.583478927612305
    8. '   ' → logprob: -18.208478927612305
    9. '	range' → logprob: -19.583478927612305
    10. '    ' → logprob: -20.333478927612305

Token 417: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.600714161526412e-05
    2. '3' → logprob: -9.500076293945312
    3. ' (' → logprob: -13.875076293945312
    4. ' ' → logprob: -15.750076293945312
    5. '(
' → logprob: -17.125076293945312
    6. '   ' → logprob: -17.875076293945312
    7. '```' → logprob: -20.000076293945312
    8. ')' → logprob: -20.250076293945312
    9. '
' → logprob: -21.375076293945312
    10. '[' → logprob: -21.375076293945312

Token 418: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.500007629394531
    4. '       ' → logprob: -18.25000762939453
    5. '           ' → logprob: -18.50000762939453
    6. ')' → logprob: -18.87500762939453
    7. '
' → logprob: -19.25000762939453
    8. '۳' → logprob: -19.75000762939453
    9. '３' → logprob: -19.93750762939453
    10. '    ' → logprob: -20.00000762939453

Token 419: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47541314363479614
    2. '):
' → logprob: -0.9754131436347961
    3. '   ' → logprob: -7.1004133224487305
    4. ':' → logprob: -8.47541332244873
    5. '       ' → logprob: -9.47541332244873
    6. ')' → logprob: -9.60041332244873
    7. '+' → logprob: -9.60041332244873
    8. '):
' → logprob: -10.22541332244873
    9. '):

' → logprob: -11.35041332244873
    10. ']:' → logprob: -11.47541332244873

Token 420: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022213248303160071
    2. ' if' → logprob: -8.500222206115723
    3. '       ' → logprob: -12.375222206115723
    4. '            ' → logprob: -12.500222206115723
    5. '               ' → logprob: -12.625222206115723
    6. ',' → logprob: -13.250222206115723
    7. '<|end|>' → logprob: -13.500222206115723
    8. 'if' → logprob: -13.750222206115723
    9. '          ' → logprob: -14.000222206115723
    10. '            
' → logprob: -14.500222206115723

Token 421: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0808621495962143
    2. '           ' → logprob: -3.205862045288086
    3. 'if' (adapté à ' if') → logprob: -3.455862045288086
    4. ' marks' → logprob: -5.455862045288086
    5. '               ' → logprob: -6.705862045288086
    6. 'marks' → logprob: -9.330862045288086
    7. '       ' → logprob: -12.330862045288086
    8. '_marks' → logprob: -13.205862045288086
    9. '   ' → logprob: -13.580862045288086
    10. '            ' → logprob: -14.580862045288086

Token 422: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07890377938747406
    2. ' bingo' → logprob: -2.5789036750793457
    3. '   ' → logprob: -11.828904151916504
    4. ' b' → logprob: -12.578904151916504
    5. '	b' → logprob: -13.078904151916504
    6. 'bing' → logprob: -15.078904151916504
    7. '(b' → logprob: -15.328904151916504
    8. ' bing' → logprob: -15.453904151916504
    9. '```' → logprob: -16.578903198242188
    10. ' ' → logprob: -16.703903198242188

Token 423: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -14.125001907348633
    3. 'card' → logprob: -14.125001907348633
    4. '_cards' → logprob: -16.250001907348633
    5. '_car' → logprob: -16.750001907348633
    6. 'Card' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '
' → logprob: -17.625001907348633
    9. '```' → logprob: -17.625001907348633
    10. '_CARD' → logprob: -18.125001907348633

Token 424: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. ' [' → logprob: -12.000007629394531
    3. '[j' → logprob: -14.000007629394531
    4. '[' → logprob: -15.500007629394531
    5. '   ' → logprob: -18.75000762939453
    6. ')[' → logprob: -18.87500762939453
    7. ' ' → logprob: -19.12500762939453
    8. 'i' → logprob: -19.25000762939453
    9. '[
' → logprob: -19.75000762939453
    10. '[I' → logprob: -19.75000762939453

Token 425: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.7056308388710022
    2. '[j' → logprob: -0.7056308388710022
    3. '[i' → logprob: -4.455630779266357
    4. '[' → logprob: -7.705630779266357
    5. ']' → logprob: -8.955631256103516
    6. ' ][' → logprob: -9.455631256103516
    7. ' [' → logprob: -9.830631256103516
    8. ')[' → logprob: -10.955631256103516
    9. '   ' → logprob: -11.205631256103516
    10. '[
' → logprob: -11.830631256103516

Token 426: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8624639324116288e-06
    2. ' j' → logprob: -13.250001907348633
    3. '	j' → logprob: -18.000001907348633
    4. '[j' → logprob: -18.125001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '_j' → logprob: -20.250001907348633
    7. ',j' → logprob: -20.375001907348633
    8. '
' → logprob: -21.125001907348633
    9. ':j' → logprob: -21.125001907348633
    10. ' ' → logprob: -21.500001907348633

Token 427: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09748046100139618
    2. ')' → logprob: -3.097480535507202
    3. 'in' → logprob: -3.097480535507202
    4. ']' → logprob: -6.097480297088623
    5. ' )' → logprob: -8.472480773925781
    6. ' ' → logprob: -10.097480773925781
    7. ' ]' → logprob: -10.097480773925781
    8. '）' → logprob: -13.347480773925781
    9. '   ' → logprob: -13.722480773925781
    10. '	in' → logprob: -13.972480773925781

Token 428: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11284136772155762
    2. 'in' → logprob: -2.2378413677215576
    3. ')' → logprob: -11.487841606140137
    4. ' ' → logprob: -12.237841606140137
    5. ' ' → logprob: -13.737841606140137
    6. ' )' → logprob: -13.862841606140137
    7. '	in' → logprob: -15.237841606140137
    8. ' i' → logprob: -15.612841606140137
    9. 'space' → logprob: -15.612841606140137
    10. 'In' → logprob: -15.612841606140137

Token 429: ' called' (ID: 4358)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.12692883610725403
    2. ' called' → logprob: -2.1269288063049316
    3. '_called' → logprob: -14.75192928314209
    4. '.called' → logprob: -15.50192928314209
    5. '   ' → logprob: -16.126928329467773
    6. 'cal' → logprob: -16.876928329467773
    7. '-called' → logprob: -17.126928329467773
    8. 'call' → logprob: -17.876928329467773
    9. 'Called' → logprob: -18.001928329467773
    10. ' ' → logprob: -18.626928329467773

Token 430: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0003809833142440766
    2. '_' → logprob: -7.875380992889404
    3. 'numbers' → logprob: -14.750380516052246
    4. ' _' → logprob: -15.500380516052246
    5. '_number' → logprob: -16.750381469726562
    6. 's' → logprob: -17.000381469726562
    7. ')_' → logprob: -17.250381469726562
    8. '_num' → logprob: -18.000381469726562
    9. '_n' → logprob: -18.125381469726562
    10. '_
' → logprob: -18.125381469726562

Token 431: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02411562390625477
    2. ':
' → logprob: -4.274115562438965
    3. '           ' → logprob: -5.149115562438965
    4. '               ' → logprob: -5.649115562438965
    5. '):' → logprob: -8.274115562438965
    6. '):
' → logprob: -8.399115562438965
    7. '                   ' → logprob: -10.774115562438965
    8. ' :' → logprob: -11.024115562438965
    9. ' and' → logprob: -11.149115562438965
    10. ']:' → logprob: -12.024115562438965

Token 432: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002858881198335439
    2. ' marks' → logprob: -8.250286102294922
    3. '           ' → logprob: -11.375286102294922
    4. '1' → logprob: -11.875286102294922
    5. '                   ' → logprob: -13.000286102294922
    6. ' mark' → logprob: -13.625286102294922
    7. '_marks' → logprob: -14.625286102294922
    8. 'marks' → logprob: -14.875286102294922
    9. '              ' → logprob: -14.875286102294922
    10. '                
' → logprob: -15.000286102294922

Token 433: ' marks' (ID: 22891)
  Prédit: ' marks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marks' → logprob: -0.4404871463775635
    2. 'marks' (adapté à ' marks') → logprob: -1.0654871463775635
    3. '               ' → logprob: -4.565486907958984
    4. '                   ' → logprob: -6.815486907958984
    5. '           ' → logprob: -9.190486907958984
    6. '_marks' → logprob: -9.690486907958984
    7. '1' → logprob: -10.815486907958984
    8. '                       ' → logprob: -11.440486907958984
    9. 'mark' → logprob: -11.940486907958984
    10. 'Marks' → logprob: -12.940486907958984

Token 434: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.625
    3. '[I' → logprob: -16.875
    4. ' [' → logprob: -17.0
    5. '[j' → logprob: -17.25
    6. '\[' → logprob: -19.875
    7. '   ' → logprob: -20.5
    8. '][' → logprob: -20.75
    9. '```' → logprob: -20.75
    10. ')[' → logprob: -21.25

Token 435: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -7.76759916334413e-05
    2. ']' → logprob: -9.750077247619629
    3. ' ][' → logprob: -11.625077247619629
    4. '[j' → logprob: -11.750077247619629
    5. '[' → logprob: -13.625077247619629
    6. ']][' → logprob: -14.625077247619629
    7. '   ' → logprob: -15.250077247619629
    8. '[i' → logprob: -15.375077247619629
    9. '"][' → logprob: -15.750077247619629
    10. ')][' → logprob: -16.875078201293945

Token 436: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1472419600977446e-06
    2. ' j' → logprob: -13.750000953674316
    3. '[j' → logprob: -17.750001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '	j' → logprob: -19.000001907348633
    6. '1' → logprob: -20.125001907348633
    7. ' ' → logprob: -20.375001907348633
    8. '$j' → logprob: -20.500001907348633
    9. '][' → logprob: -20.625001907348633
    10. ']' → logprob: -20.625001907348633

Token 437: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011979389004409313
    2. '=' → logprob: -4.511979579925537
    3. ']=' → logprob: -7.011979579925537
    4. ' =' → logprob: -10.511979103088379
    5. ' ]' → logprob: -12.886979103088379
    6. ')' → logprob: -14.886979103088379
    7. '   ' → logprob: -18.011980056762695
    8. ']+=' → logprob: -18.136980056762695
    9. '           ' → logprob: -18.386980056762695
    10. '[' → logprob: -18.636980056762695

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. ']' → logprob: -17.76104736328125
    4. ']=' → logprob: -18.01104736328125
    5. '               ' → logprob: -19.51104736328125
    6. '           ' → logprob: -19.63604736328125
    7. '[' → logprob: -19.88604736328125
    8. '=
' → logprob: -20.13604736328125
    9. '                   ' → logprob: -20.63604736328125
    10. '   ' → logprob: -21.38604736328125

Token 439: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -21.12506675720215
    4. ' ' → logprob: -23.00006675720215
    5. '１' → logprob: -23.37506675720215
    6. '```' → logprob: -23.37506675720215
    7. '`' → logprob: -24.12506675720215
    8. '' → logprob: -24.25006675720215
    9. '
' → logprob: -24.31256675720215
    10. '0' → logprob: -24.56256675720215

Token 440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '   ' → logprob: -23.375
    4. '```' → logprob: -24.125
    5. '`' → logprob: -25.125
    6. '１' → logprob: -26.25
    7. '' → logprob: -26.875
    8. '
' → logprob: -27.125
    9. '0' → logprob: -27.125
    10. '  ' → logprob: -27.25

Token 441: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 442: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.643990159034729
    2. '<|end|>' → logprob: -1.268990159034729
    3. 'return' → logprob: -2.7689900398254395
    4. ' return' → logprob: -3.1439900398254395
    5. '   ' → logprob: -3.6439900398254395
    6. '    
' → logprob: -3.8939900398254395
    7. '	return' → logprob: -4.2689900398254395
    8. '  
' → logprob: -4.5189900398254395
    9. ' 
' → logprob: -4.8939900398254395
    10. '\n' → logprob: -5.6439900398254395

Token 443: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3717647194862366
    2. 'return' (adapté à ' return') → logprob: -1.8717646598815918
    3. '
' → logprob: -2.121764659881592
    4. ' return' → logprob: -3.496764659881592
    5. '	return' → logprob: -5.371764659881592
    6. '    
' → logprob: -6.621764659881592
    7. ':return' → logprob: -9.24676513671875
    8. ' ' → logprob: -9.37176513671875
    9. ' 
' → logprob: -9.49676513671875
    10. '\n' → logprob: -9.49676513671875

Token 444: ' marks' (ID: 22891)
  Prédit: 'marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marks' → logprob: -0.04858759790658951
    2. ' marks' → logprob: -3.0485875606536865
    3. 'mark' → logprob: -15.673587799072266
    4. 'm' → logprob: -16.298587799072266
    5. '_marks' → logprob: -17.423587799072266
    6. '   ' → logprob: -17.923587799072266
    7. 'mar' → logprob: -18.173587799072266
    8. 'marked' → logprob: -18.173587799072266
    9. ' ' → logprob: -19.173587799072266
    10. '	m' → logprob: -19.798587799072266

Token 445: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01136480551213026
    2. '
' → logprob: -4.511364936828613
    3. '

' → logprob: -8.136364936828613
    4. '<|end|>' → logprob: -11.011364936828613
    5. '```' → logprob: -12.386364936828613
    6. ' def' → logprob: -13.636364936828613
    7. '  
' → logprob: -14.011364936828613
    8. '    
' → logprob: -15.011364936828613
    9. '
' → logprob: -15.136364936828613
    10. '<|end|>' → logprob: -15.261364936828613

Token 446: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5048530030981055e-06
    2. 'import' → logprob: -14.125001907348633
    3. '
' → logprob: -15.125001907348633
    4. '```' → logprob: -15.750001907348633
    5. ' def' → logprob: -16.000001907348633
    6. '<|end|>' → logprob: -16.250001907348633
    7. '#' → logprob: -16.750001907348633
    8. 'from' → logprob: -17.500001907348633
    9. '    
' → logprob: -18.125001907348633
    10. '  
' → logprob: -18.375001907348633

Token 447: ' has' (ID: 853)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.48902398347854614
    2. ' check' → logprob: -1.7390239238739014
    3. 'is' → logprob: -1.8640239238739014
    4. ' is' → logprob: -3.4890239238739014
    5. 'has' → logprob: -4.1140241622924805
    6. ' has' → logprob: -4.8640241622924805
    7. 'def' → logprob: -7.6140241622924805
    8. ' bingo' → logprob: -7.7390241622924805
    9. 'b' → logprob: -8.98902416229248
    10. 'all' → logprob: -9.11402416229248

Token 448: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0009018116979859769
    2. '_w' → logprob: -7.625901699066162
    3. '_line' → logprob: -8.87590217590332
    4. '_complete' → logprob: -9.37590217590332
    5. '_three' → logprob: -9.75090217590332
    6. '_completed' → logprob: -9.87590217590332
    7. 'b' → logprob: -10.00090217590332
    8. '_horizontal' → logprob: -11.87590217590332
    9. '_full' → logprob: -12.50090217590332
    10. ' bingo' → logprob: -12.75090217590332

Token 449: 'ingo' (ID: 14878)
  Prédit: 'ingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingo' → logprob: -0.0006354739889502525
    2. 'ing' → logprob: -7.375635623931885
    3. 'in' → logprob: -12.625635147094727
    4. 'ingos' → logprob: -13.000635147094727
    5. 'i' → logprob: -13.750635147094727
    6. 'ING' → logprob: -14.000635147094727
    7. '_' → logprob: -15.500635147094727
    8. '(' → logprob: -15.875635147094727
    9. 'inga' → logprob: -16.000635147094727
    10. '   ' → logprob: -16.375635147094727

Token 450: '(m' (ID: 2145)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.7200669646263123
    2. '(' → logprob: -1.095067024230957
    3. '_card' → logprob: -2.720067024230957
    4. '(m' → logprob: -2.970067024230957
    5. '_(' → logprob: -3.970067024230957
    6. '(card' → logprob: -4.095067024230957
    7. '_' → logprob: -4.470067024230957
    8. '_line' → logprob: -4.845067024230957
    9. '(mark' → logprob: -6.595067024230957
    10. '_b' → logprob: -6.845067024230957

Token 451: 'arks' (ID: 13455)
  Prédit: 'arks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arks' → logprob: -0.20324824750423431
    2. 'ark' → logprob: -1.7032482624053955
    3. 'ar' → logprob: -6.453248023986816
    4. 'arked' → logprob: -8.828248023986816
    5. 'a' → logprob: -9.828248023986816
    6. 'arking' → logprob: -10.453248023986816
    7. 'atrix' → logprob: -11.703248023986816
    8. 'arke' → logprob: -11.953248023986816
    9. 'arken' → logprob: -12.953248023986816
    10. 'arc' → logprob: -13.453248023986816

Token 452: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04884703457355499
    2. '):
' → logprob: -3.048846960067749
    3. ')' → logprob: -8.298847198486328
    4. '):
' → logprob: -12.298847198486328
    5. ' ):' → logprob: -12.798847198486328
    6. '):

' → logprob: -13.048847198486328
    7. '   ' → logprob: -13.923847198486328
    8. ' ' → logprob: -15.798847198486328
    9. ',' → logprob: -16.048847198486328
    10. ')：' → logprob: -16.673847198486328

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022642381372861564
    2. '(' → logprob: -9.625226020812988
    3. ':' → logprob: -9.750226020812988
    4. 'for' → logprob: -10.375226020812988
    5. 'def' → logprob: -10.625226020812988
    6. ':
' → logprob: -11.500226020812988
    7. '
' → logprob: -11.500226020812988
    8. '    
' → logprob: -11.625226020812988
    9. '():' → logprob: -12.250226020812988
    10. '```' → logprob: -12.875226020812988

Token 454: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007947356207296252
    2. 'for' → logprob: -7.375794887542725
    3. 'def' → logprob: -9.375794410705566
    4. ' for' → logprob: -9.625794410705566
    5. '
' → logprob: -11.750794410705566
    6. '```' → logprob: -12.375794410705566
    7. '    
' → logprob: -12.625794410705566
    8. 'rows' → logprob: -14.625794410705566
    9. '	for' → logprob: -14.750794410705566
    10. '``' → logprob: -15.500794410705566

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004074959084391594
    2. '"""' → logprob: -6.129075050354004
    3. '"""
' → logprob: -7.004075050354004
    4. 'def' → logprob: -7.504075050354004
    5. '    ' → logprob: -7.879075050354004
    6. ' """
' → logprob: -11.004075050354004
    7. '"' → logprob: -11.629075050354004
    8. ' def' → logprob: -12.254075050354004
    9. ' """' → logprob: -12.254075050354004
    10. '```' → logprob: -12.379075050354004

Token 456: ' Vér' (ID: 159169)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19557514786720276
    2. 'def' → logprob: -2.57057523727417
    3. '#' → logprob: -3.19557523727417
    4. ' for' → logprob: -3.32057523727417
    5. 'for' → logprob: -4.44557523727417
    6. ' def' → logprob: -5.07057523727417
    7. ' #' → logprob: -5.32057523727417
    8. '
' → logprob: -8.320574760437012
    9. 'Checks' → logprob: -8.820574760437012
    10. ' lines' → logprob: -9.070574760437012

Token 457: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -9.13388703338569e-06
    2. 'if' → logprob: -11.750009536743164
    3. 'ifi' → logprob: -14.250009536743164
    4. 'ifiez' → logprob: -15.500009536743164
    5. 'ifié' → logprob: -16.000009536743164
    6. 'i' → logprob: -16.125009536743164
    7. 'ifier' → logprob: -16.500009536743164
    8. '   ' → logprob: -16.875009536743164
    9. 'ife' → logprob: -17.250009536743164
    10. 'ifies' → logprob: -18.125009536743164

Token 458: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6000773310661316
    2. '   ' → logprob: -1.2250773906707764
    3. ' si' → logprob: -2.3500773906707764
    4. ' les' → logprob: -3.3500773906707764
    5. 'if' → logprob: -4.975077152252197
    6. ' toutes' → logprob: -5.600077152252197
    7. 'def' → logprob: -5.975077152252197
    8. 'si' → logprob: -6.100077152252197
    9. '(
' → logprob: -6.225077152252197
    10. ' ' → logprob: -6.350077152252197

Token 459: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.004837718792259693
    2. 'u' → logprob: -5.879837512969971
    3. '’il' → logprob: -7.379837512969971
    4. '   ' → logprob: -7.754837512969971
    5. 'il' → logprob: -7.754837512969971
    6. 'i' → logprob: -7.879837512969971
    7. 'ur' → logprob: -9.129837989807129
    8. ' il' → logprob: -10.754837989807129
    9. '    ' → logprob: -12.379837989807129
    10. '_il' → logprob: -12.504837989807129

Token 460: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5920623540878296
    2. ' y' → logprob: -0.8420623540878296
    3. ' existe' → logprob: -4.217062473297119
    4. 'ex' → logprob: -7.467062473297119
    5. 'ya' → logprob: -8.217061996459961
    6. ''y' → logprob: -8.717061996459961
    7. 'exists' → logprob: -9.092061996459961
    8. 'exist' → logprob: -10.717061996459961
    9. '_y' → logprob: -10.842061996459961
    10. '   ' → logprob: -10.967061996459961

Token 461: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0030459275003522635
    2. ' a' → logprob: -5.878046035766602
    3. ''a' → logprob: -8.378046035766602
    4. '```' → logprob: -13.003046035766602
    5. 'ex' → logprob: -13.253046035766602
    6. '[a' → logprob: -13.378046035766602
    7. '#a' → logprob: -14.128046035766602
    8. 'une' → logprob: -14.753046035766602
    9. 'has' → logprob: -14.878046035766602
    10. 'avait' → logprob: -15.003046035766602

Token 462: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.09158811718225479
    2. ' une' → logprob: -2.716588020324707
    3. 'au' → logprob: -4.591588020324707
    4. ' au' → logprob: -5.466588020324707
    5. ' un' → logprob: -5.841588020324707
    6. 'un' → logprob: -6.341588020324707
    7. ' bingo' → logprob: -7.216588020324707
    8. 'b' → logprob: -7.716588020324707
    9. ' ' → logprob: -7.966588020324707
    10. '```' → logprob: -8.091588020324707

Token 463: ' ligne' (ID: 19583)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4358382523059845
    2. 'ligne' → logprob: -1.060838222503662
    3. ' ligne' → logprob: -5.935838222503662
    4. ' bingo' → logprob: -6.560838222503662
    5. 'bing' → logprob: -7.060838222503662
    6. ' b' → logprob: -7.185838222503662
    7. 'line' → logprob: -7.685838222503662
    8. 'l' → logprob: -8.43583869934082
    9. '```' → logprob: -8.43583869934082
    10. 'align' → logprob: -9.18583869934082

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1933933049440384
    2. ' ou' → logprob: -2.6933932304382324
    3. ' or' → logprob: -3.1933932304382324
    4. ' complète' → logprob: -3.5683932304382324
    5. 'ou' → logprob: -4.193393230438232
    6. '   ' → logprob: -4.318393230438232
    7. 'or' → logprob: -5.943393230438232
    8. ' ' → logprob: -7.068393230438232
    9. '_' → logprob: -7.193393230438232
    10. 'complete' → logprob: -7.193393230438232

Token 465: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.42818114161491394
    2. 'une' → logprob: -1.6781811714172363
    3. ' une' → logprob: -2.6781811714172363
    4. ' colonne' → logprob: -2.8031811714172363
    5. 'column' → logprob: -4.053181171417236
    6. ' col' → logprob: -4.928181171417236
    7. '   ' → logprob: -5.678181171417236
    8. ' column' → logprob: -7.178181171417236
    9. 'ou' → logprob: -7.303181171417236
    10. 'a' → logprob: -7.803181171417236

Token 466: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.6820242404937744
    2. 'ou' → logprob: -1.1820242404937744
    3. ',' → logprob: -1.6820242404937744
    4. ' or' → logprob: -6.682024002075195
    5. 'or' → logprob: -8.557024002075195
    6. 's' → logprob: -9.057024002075195
    7. '   ' → logprob: -9.807024002075195
    8. ' ' → logprob: -10.557024002075195
    9. 'au' → logprob: -10.682024002075195
    10. '```' → logprob: -10.932024002075195

Token 467: ' diagon' (ID: 146014)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.005628581158816814
    2. 'une' → logprob: -6.25562858581543
    3. 'diag' → logprob: -6.50562858581543
    4. ' diagon' → logprob: -6.50562858581543
    5. ' diagonal' → logprob: -7.63062858581543
    6. ' une' → logprob: -8.63062858581543
    7. '   ' → logprob: -11.38062858581543
    8. '#' → logprob: -11.50562858581543
    9. ' diag' → logprob: -12.50562858581543
    10. '(di' → logprob: -12.63062858581543

Token 468: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -1.306760805164231e-05
    2. 'al' → logprob: -11.50001335144043
    3. 'a' → logprob: -13.25001335144043
    4. '
' → logprob: -14.75001335144043
    5. 'e' → logprob: -15.12501335144043
    6. 'але' → logprob: -15.37501335144043
    7. 'le' → logprob: -16.75001335144043
    8. 'alle' → logprob: -16.75001335144043
    9. '```' → logprob: -17.62501335144043
    10. '[' → logprob: -17.75001335144043

Token 469: ' complètement' (ID: 81766)
  Prédit: ' complète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complète' → logprob: -0.40829482674598694
    2. 'compl' → logprob: -1.4082947969436646
    3. ' compl' → logprob: -2.783294916152954
    4. 'com' → logprob: -4.283294677734375
    5. 'complete' → logprob: -4.783294677734375
    6. ' complete' → logprob: -5.283294677734375
    7. ' complètement' → logprob: -7.533294677734375
    8. ' entièrement' → logprob: -7.908294677734375
    9. '_complete' → logprob: -8.908294677734375
    10. '1' → logprob: -9.658294677734375

Token 470: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.06048078462481499
    2. 'co' → logprob: -3.060480833053589
    3. 'rem' → logprob: -5.18548059463501
    4. ' mar' → logprob: -5.68548059463501
    5. '1' → logprob: -6.43548059463501
    6. ' rempl' → logprob: -8.185481071472168
    7. 'mark' → logprob: -8.560481071472168
    8. 'c' → logprob: -8.685481071472168
    9. 'marked' → logprob: -8.810481071472168
    10. 'm' → logprob: -9.185481071472168

Token 471: 'quée' (ID: 63772)
  Prédit: 'quée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quée' → logprob: -0.0017890633316710591
    2. 'qu' → logprob: -6.751789093017578
    3. 'quee' → logprob: -7.626789093017578
    4. 'q' → logprob: -9.376789093017578
    5. 'quées' → logprob: -11.001789093017578
    6. 'k' → logprob: -11.376789093017578
    7. 'qué' → logprob: -11.751789093017578
    8. 'que' → logprob: -12.876789093017578
    9. 'ch' → logprob: -13.001789093017578
    10. 'ée' → logprob: -13.501789093017578

Token 472: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049177803099155426
    2. '.' → logprob: -3.799177885055542
    3. ':' → logprob: -4.674177646636963
    4. ',' → logprob: -5.549177646636963
    5. 'def' → logprob: -5.674177646636963
    6. '(
' → logprob: -5.674177646636963
    7. '(' → logprob: -5.799177646636963
    8. ':
' → logprob: -6.799177646636963
    9. '.
' → logprob: -7.174177646636963
    10. ' (' → logprob: -8.799178123474121

Token 473: 'B' (ID: 33)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08052201569080353
    2. ')
' → logprob: -3.330522060394287
    3. '):
' → logprob: -4.205522060394287
    4. ').' → logprob: -4.330522060394287
    5. 'marks' → logprob: -5.955522060394287
    6. '   ' → logprob: -6.205522060394287
    7. '1' → logprob: -6.455522060394287
    8. ').
' → logprob: -6.455522060394287
    9. ' marks' → logprob: -6.455522060394287
    10. ' )' → logprob: -7.205522060394287

Token 474: 'ingo' (ID: 14878)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031116455793380737
    2. 'ingo' → logprob: -6.128111839294434
    3. '_i' → logprob: -8.003111839294434
    4. 'I' → logprob: -8.503111839294434
    5. 'ing' → logprob: -9.253111839294434
    6. '```' → logprob: -9.753111839294434
    7. '``' → logprob: -10.253111839294434
    8. 'in' → logprob: -10.753111839294434
    9. '[i' → logprob: -10.753111839294434
    10. ''i' → logprob: -10.753111839294434

Token 475: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2174493372440338
    2. ').' → logprob: -2.217449426651001
    3. '):
' → logprob: -3.217449426651001
    4. ')
' → logprob: -3.842449426651001
    5. '):' → logprob: -4.092449188232422
    6. ').
' → logprob: -5.217449188232422
    7. 'def' → logprob: -6.342449188232422
    8. '   ' → logprob: -7.717449188232422
    9. '):

' → logprob: -8.092449188232422
    10. '"""
' → logprob: -9.217449188232422

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014310706174001098
    2. 'def' → logprob: -7.001430988311768
    3. '
' → logprob: -8.001431465148926
    4. ')' → logprob: -9.501431465148926
    5. '    
' → logprob: -10.126431465148926
    6. '```' → logprob: -10.626431465148926
    7. ' 
' → logprob: -11.126431465148926
    8. '\n' → logprob: -11.501431465148926
    9. ' def' → logprob: -12.251431465148926
    10. '  
' → logprob: -12.751431465148926

Token 477: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008121838793158531
    2. 'def' → logprob: -4.883121967315674
    3. ' for' → logprob: -8.133121490478516
    4. '
' → logprob: -8.883121490478516
    5. 'for' → logprob: -9.758121490478516
    6. ' def' → logprob: -11.008121490478516
    7. '    
' → logprob: -12.633121490478516
    8. '    ' → logprob: -13.633121490478516
    9. '```' → logprob: -13.633121490478516
    10. '  ' → logprob: -14.008121490478516

Token 478: ':
' (ID: 734)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4121507406234741
    2. '):' → logprob: -1.6621507406234741
    3. '   ' → logprob: -2.4121508598327637
    4. '(m' → logprob: -3.6621508598327637
    5. ':' → logprob: -4.537150859832764
    6. 'def' → logprob: -4.662150859832764
    7. ')' → logprob: -5.037150859832764
    8. ':
' → logprob: -5.912150859832764
    9. '```' → logprob: -6.787150859832764
    10. '
' → logprob: -8.037150382995605

Token 479: '       ' (ID: 309)
  Prédit: ' marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' marks' → logprob: -0.19356845319271088
    2. '   ' → logprob: -1.818568468093872
    3. ' def' → logprob: -4.693568229675293
    4. 'marks' → logprob: -5.943568229675293
    5. 'def' → logprob: -6.693568229675293
    6. ' self' → logprob: -7.943568229675293
    7. 'm' → logprob: -9.318568229675293
    8. 'self' → logprob: -9.443568229675293
    9. ' list' → logprob: -9.818568229675293
    10. ' lines' → logprob: -10.568568229675293

Token 480: ' marks' (ID: 22891)
  Prédit: 'marks'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marks' (adapté à ' marks') → logprob: -0.023598913103342056
    2. 'list' → logprob: -3.7735989093780518
    3. ' marks' → logprob: -8.148598670959473
    4. 'lists' → logprob: -10.398598670959473
    5. '   ' → logprob: -10.898598670959473
    6. 'm' → logprob: -13.023598670959473
    7. ' list' → logprob: -13.148598670959473
    8. 'liste' → logprob: -13.148598670959473
    9. '
' → logprob: -13.523598670959473
    10. 'mark' → logprob: -14.023598670959473

Token 481: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.096326231956482
    2. ':' → logprob: -1.221326231956482
    3. ' (' → logprob: -1.346326231956482
    4. '):
' → logprob: -3.2213263511657715
    5. ')' → logprob: -3.9713263511657715
    6. ':list' → logprob: -3.9713263511657715
    7. ' :' → logprob: -4.2213263511657715
    8. '   ' → logprob: -5.2213263511657715
    9. ' ):' → logprob: -5.2213263511657715
    10. '<|end|>' → logprob: -5.5963263511657715

Token 482: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.0280383548888494e-06
    2. ' list' → logprob: -14.000000953674316
    3. '[list' → logprob: -15.750000953674316
    4. ')' → logprob: -16.875001907348633
    5. 'List' → logprob: -18.000001907348633
    6. '$list' → logprob: -20.500001907348633
    7. '(list' → logprob: -20.750001907348633
    8. '   ' → logprob: -20.875001907348633
    9. 'lista' → logprob: -21.000001907348633
    10. 'lists' → logprob: -21.000001907348633

Token 483: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011418843641877174
    2. '):
' → logprob: -7.1261420249938965
    3. ')' → logprob: -8.626141548156738
    4. ':' → logprob: -9.376141548156738
    5. '[' → logprob: -10.376141548156738
    6. '   ' → logprob: -11.001141548156738
    7. '[list' → logprob: -11.751141548156738
    8. ' ):' → logprob: -12.251141548156738
    9. '[List' → logprob: -12.376141548156738
    10. ':list' → logprob: -12.751141548156738

Token 484: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.633648157119751
    2. ' list' → logprob: -0.758648157119751
    3. '   ' → logprob: -6.883647918701172
    4. '[list' → logprob: -12.258647918701172
    5. ' ' → logprob: -12.633647918701172
    6. 'List' → logprob: -12.758647918701172
    7. ' liste' → logprob: -12.758647918701172
    8. '[[' → logprob: -13.508647918701172
    9. '(list' → logprob: -13.758647918701172
    10. ')' → logprob: -13.758647918701172

Token 485: ' matr' (ID: 25095)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8911016583442688
    2. ' list' → logprob: -1.016101598739624
    3. ' liste' → logprob: -1.766101598739624
    4. 'liste' → logprob: -3.391101598739624
    5. ' ' → logprob: -4.516101837158203
    6. '2' → logprob: -5.266101837158203
    7. '3' → logprob: -5.391101837158203
    8. '```' → logprob: -7.516101837158203
    9. 'matrix' → logprob: -7.641101837158203
    10. '[' → logprob: -8.266101837158203

Token 486: 'ice' (ID: 603)
  Prédit: 'iste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.6258924007415771
    2. 'ix' → logprob: -1.7508924007415771
    3. 'ice' → logprob: -2.625892400741577
    4. 'ce' → logprob: -3.250892400741577
    5. 'ist' → logprob: -3.500892400741577
    6. '2' → logprob: -3.625892400741577
    7. 'x' → logprob: -3.625892400741577
    8. '[' → logprob: -3.875892400741577
    9. '[[' → logprob: -3.875892400741577
    10. 'e' → logprob: -4.500892639160156

Token 487: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.40070074796676636
    2. ' ' → logprob: -1.1507008075714111
    3. '   ' → logprob: -4.900700569152832
    4. '[' → logprob: -5.775700569152832
    5. ' of' → logprob: -6.650700569152832
    6. '2' → logprob: -7.275700569152832
    7. ' de' → logprob: -7.400700569152832
    8. ' (' → logprob: -8.400700569152832
    9. '```' → logprob: -10.150700569152832
    10. '
' → logprob: -10.275700569152832

Token 488: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0016739914426580071
    2. ' ' → logprob: -6.876674175262451
    3. '2' → logprob: -8.126673698425293
    4. '[list' → logprob: -8.876673698425293
    5. '   ' → logprob: -9.626673698425293
    6. 'list' → logprob: -10.126673698425293
    7. '[[' → logprob: -10.626673698425293
    8. ' of' → logprob: -10.626673698425293
    9. ' list' → logprob: -11.376673698425293
    10. 'of' → logprob: -11.501673698425293

Token 489: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18842916190624237
    2. '   ' → logprob: -2.063429117202759
    3. '[' → logprob: -3.813429117202759
    4. '][' → logprob: -3.938429117202759
    5. ']' → logprob: -7.063429355621338
    6. ' ' → logprob: -7.313429355621338
    7. '*' → logprob: -8.43842887878418
    8. '2' → logprob: -9.06342887878418
    9. '       ' → logprob: -9.06342887878418
    10. '[][]' → logprob: -9.06342887878418

Token 490: '3' (ID: 18)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5853853821754456
    2. '3' → logprob: -0.8353853821754456
    3. '[
' → logprob: -4.710385322570801
    4. ']' → logprob: -9.0853853225708
    5. '   ' → logprob: -9.2103853225708
    6. '```' → logprob: -9.5853853225708
    7. '][' → logprob: -10.0853853225708
    8. ' [' → logprob: -10.4603853225708
    9. '[[' → logprob: -11.2103853225708
    10. '*' → logprob: -11.8353853225708

Token 491: ' indiqu' (ID: 100773)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08585534244775772
    2. '):
' → logprob: -3.21085524559021
    3. '):' → logprob: -3.33585524559021
    4. ')' → logprob: -6.335855484008789
    5. '[' → logprob: -6.335855484008789
    6. '```' → logprob: -6.835855484008789
    7. ':' → logprob: -7.335855484008789
    8. '[List' → logprob: -8.585855484008789
    9. ':
' → logprob: -8.835855484008789
    10. '
' → logprob: -9.085855484008789

Token 492: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00014740281039848924
    2. '[' → logprob: -8.875147819519043
    3. 'ée' → logprob: -12.500147819519043
    4. 'e' → logprob: -13.125147819519043
    5. 'ent' → logprob: -14.375147819519043
    6. 'ante' → logprob: -14.625147819519043
    7. '[]' → logprob: -15.250147819519043
    8. '   ' → logprob: -15.750147819519043
    9. '[[' → logprob: -16.625146865844727
    10. 'é' → logprob: -16.875146865844727

Token 493: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6942828297615051
    2. ' les' → logprob: -0.8192828297615051
    3. ' quelles' → logprob: -3.3192827701568604
    4. ' la' → logprob: -5.5692830085754395
    5. 'l' → logprob: -5.8192830085754395
    6. ' lesquelles' → logprob: -5.8192830085754395
    7. 'où' → logprob: -5.8192830085754395
    8. 'la' → logprob: -6.4442830085754395
    9. ' où' → logprob: -6.5692830085754395
    10. '```' → logprob: -6.6942830085754395

Token 494: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.4314754903316498
    2. 'mar' → logprob: -1.8064755201339722
    3. ' cases' → logprob: -2.4314754009246826
    4. ' mar' → logprob: -3.3064754009246826
    5. '1' → logprob: -3.5564754009246826
    6. '0' → logprob: -4.306475639343262
    7. ' ' → logprob: -4.931475639343262
    8. ' marques' → logprob: -5.181475639343262
    9. 'marks' → logprob: -5.556475639343262
    10. 'positions' → logprob: -7.681475639343262

Token 495: ' mar' (ID: 2674)
  Prédit: ' mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.47709858417510986
    2. 'mar' → logprob: -0.9770985841751099
    3. '   ' → logprob: -6.22709846496582
    4. ' marqué' → logprob: -7.97709846496582
    5. '```' → logprob: -8.10209846496582
    6. 'marked' → logprob: -9.60209846496582
    7. 'mark' → logprob: -9.72709846496582
    8. '[' → logprob: -9.85209846496582
    9. ' ' → logprob: -9.85209846496582
    10. ' marc' → logprob: -10.10209846496582

Token 496: 'quées' (ID: 111264)
  Prédit: 'quées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quées' → logprob: -0.007842617109417915
    2. 'qu' → logprob: -4.882842540740967
    3. 'quée' → logprob: -9.007843017578125
    4. 'q' → logprob: -9.257843017578125
    5. 'qués' → logprob: -12.007843017578125
    6. 'qué' → logprob: -12.882843017578125
    7. 'k' → logprob: -12.882843017578125
    8. '[' → logprob: -13.632843017578125
    9. '
' → logprob: -14.382843017578125
    10. '```' → logprob: -14.507843017578125

Token 497: ' (' (ID: 350)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.0050303936004639
    2. '):' → logprob: -1.1300303936004639
    3. '   ' → logprob: -1.7550303936004639
    4. ')' → logprob: -2.005030393600464
    5. ')
' → logprob: -5.755030632019043
    6. '):

' → logprob: -9.880030632019043
    7. '):
' → logprob: -10.380030632019043
    8. '  ' → logprob: -11.005030632019043
    9. ',' → logprob: -11.005030632019043
    10. ' ' → logprob: -11.380030632019043

Token 498: '1' (ID: 16)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3941013514995575
    2. 'int' → logprob: -1.1441013813018799
    3. ')' → logprob: -5.269101142883301
    4. ' list' → logprob: -6.769101142883301
    5. '   ' → logprob: -7.394101142883301
    6. '[int' → logprob: -9.7691011428833
    7. ' int' → logprob: -10.1441011428833
    8. ')]' → logprob: -10.3941011428833
    9. 'List' → logprob: -10.3941011428833
    10. ' ' → logprob: -10.6441011428833

Token 499: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48608264327049255
    2. '   ' → logprob: -1.986082673072815
    3. '):
' → logprob: -2.2360825538635254
    4. ']' → logprob: -3.2360825538635254
    5. ')
' → logprob: -3.4860825538635254
    6. '```' → logprob: -3.6110825538635254
    7. '])' → logprob: -4.861082553863525
    8. ',' → logprob: -5.111082553863525
    9. 'for' → logprob: -5.486082553863525
    10. '):' → logprob: -5.861082553863525

Token 500: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028394220396876335
    2. '):
' → logprob: -4.2783942222595215
    3. ')' → logprob: -4.5283942222595215
    4. ')
' → logprob: -6.6533942222595215
    5. '):' → logprob: -7.0283942222595215
    6. ',' → logprob: -7.6533942222595215
    7. '
' → logprob: -8.403393745422363
    8. 'def' → logprob: -9.028393745422363
    9. '):

' → logprob: -9.653393745422363
    10. '  ' → logprob: -9.778393745422363

Token 501: ' non' (ID: 2893)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04086370766162872
    2. 'non' → logprob: -4.040863513946533
    3. ' ' → logprob: -4.290863513946533
    4. ' non' → logprob: -4.915863513946533
    5. 'not' → logprob: -6.665863513946533
    6. ' not' → logprob: -9.415863990783691
    7. 'mar' → logprob: -11.040863990783691
    8. 'pas' → logprob: -11.290863990783691
    9. ' mar' → logprob: -11.790863990783691
    10. 'un' → logprob: -11.915863990783691

Token 502: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2711197137832642
    2. '   ' → logprob: -1.6461197137832642
    3. '):
' → logprob: -1.7711197137832642
    4. '.' → logprob: -2.2711195945739746
    5. ').' → logprob: -2.3961195945739746
    6. ',' → logprob: -2.6461195945739746
    7. ')
' → logprob: -3.2711195945739746
    8. '):' → logprob: -3.7711195945739746
    9. ').
' → logprob: -4.646119594573975
    10. '```' → logprob: -5.521119594573975

Token 503: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007108822464942932
    2. ' ' → logprob: -7.250710964202881
    3. '   ' → logprob: -14.000710487365723
    4. '  ' → logprob: -16.87571144104004
    5. '1' → logprob: -17.50071144104004
    6. ')' → logprob: -18.37571144104004
    7. '    ' → logprob: -18.75071144104004
    8. ',' → logprob: -18.75071144104004
    9. '       ' → logprob: -20.62571144104004
    10. '```' → logprob: -20.87571144104004

Token 504: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36023515462875366
    2. '):
' → logprob: -1.3602352142333984
    3. '):' → logprob: -3.3602352142333984
    4. ')
' → logprob: -4.610235214233398
    5. '   ' → logprob: -7.235235214233398
    6. ').' → logprob: -8.110235214233398
    7. '):

' → logprob: -9.235235214233398
    8. '):
' → logprob: -10.735235214233398
    9. ')]' → logprob: -11.485235214233398
    10. ').
' → logprob: -11.485235214233398

Token 505: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014966767048463225
    2. ')' → logprob: -9.250149726867676
    3. '```' → logprob: -10.375149726867676
    4. '
' → logprob: -11.250149726867676
    5. '    
' → logprob: -12.250149726867676
    6. 'def' → logprob: -13.625149726867676
    7. '    ' → logprob: -13.750149726867676
    8. '       ' → logprob: -14.375149726867676
    9. ')
' → logprob: -15.250149726867676
    10. '  ' → logprob: -15.375149726867676

Token 506: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030252903699874878
    2. 'for' → logprob: -3.6552529335021973
    3. '
' → logprob: -6.530252933502197
    4. ' for' → logprob: -6.655252933502197
    5. 'def' → logprob: -7.030252933502197
    6. '```' → logprob: -9.405252456665039
    7. '"""
' → logprob: -9.530252456665039
    8. '#' → logprob: -9.905252456665039
    9. 'Returns' (adapté à ' Returns') → logprob: -10.280252456665039
    10. 'if' → logprob: -11.030252456665039

Token 507: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.2705814242362976
    2. ':' → logprob: -1.5205814838409424
    3. ' True' → logprob: -4.895581245422363
    4. ' =' → logprob: -5.520581245422363
    5. ' ' → logprob: -6.895581245422363
    6. '    ' → logprob: -7.145581245422363
    7. ' :
' → logprob: -7.270581245422363
    8. '   ' → logprob: -7.520581245422363
    9. ' ):' → logprob: -7.520581245422363
    10. ' bool' → logprob: -7.895581245422363

Token 508: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.869891345500946
    2. ' True' → logprob: -0.869891345500946
    3. ' bool' → logprob: -1.8698914051055908
    4. 'True' → logprob: -5.119891166687012
    5. 'bool' → logprob: -6.619891166687012
    6. '    ' → logprob: -7.744891166687012
    7. ' False' → logprob: -9.244891166687012
    8. 'False' → logprob: -11.119891166687012
    9. '(bool' → logprob: -13.369891166687012
    10. ' true' → logprob: -13.744891166687012

Token 509: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' (adapté à ' bool') → logprob: -0.0003532198315951973
    2. ' bool' → logprob: -8.00035285949707
    3. 'True' → logprob: -11.12535285949707
    4. '   ' → logprob: -12.75035285949707
    5. ' True' → logprob: -16.62535285949707
    6. '
' → logprob: -18.12535285949707
    7. '	bool' → logprob: -18.25035285949707
    8. '  ' → logprob: -18.50035285949707
    9. '```' → logprob: -19.00035285949707
    10. '(bool' → logprob: -19.25035285949707

Token 510: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016498296754434705
    2. ' :' → logprob: -7.376649856567383
    3. '   ' → logprob: -7.376649856567383
    4. ':
' → logprob: -8.376649856567383
    5. '):' → logprob: -9.626649856567383
    6. '<|end|>' → logprob: -10.001649856567383
    7. '=True' → logprob: -11.376649856567383
    8. '```' → logprob: -11.626649856567383
    9. ':return' → logprob: -12.001649856567383
    10. 'True' → logprob: -12.251649856567383

Token 511: ' True' (ID: 6432)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.026970768347382545
    2. 'any' → logprob: -3.901970863342285
    3. '   ' → logprob: -5.276970863342285
    4. ' for' → logprob: -7.276970863342285
    5. ' return' → logprob: -7.901970863342285
    6. ' True' → logprob: -9.151970863342285
    7. 'for' → logprob: -9.651970863342285
    8. 'True' → logprob: -10.151970863342285
    9. 'return' → logprob: -10.901970863342285
    10. ' all' → logprob: -11.651970863342285

Token 512: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41812774538993835
    2. ' or' → logprob: -2.2931277751922607
    3. ' any' → logprob: -2.2931277751922607
    4. '   ' → logprob: -2.5431277751922607
    5. ',' → logprob: -3.6681277751922607
    6. ' for' → logprob: -5.168127536773682
    7. ' in' → logprob: -5.293127536773682
    8. ')' → logprob: -5.418127536773682
    9. '<|end|>' → logprob: -5.418127536773682
    10. ':' → logprob: -5.793127536773682

Token 513: ' un' (ID: 537)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.039441272616386414
    2. 'any' → logprob: -3.7894413471221924
    3. ' True' → logprob: -4.789441108703613
    4. ' il' → logprob: -5.289441108703613
    5. 'True' → logprob: -6.414441108703613
    6. ' une' → logprob: -8.039441108703613
    7. ' there' → logprob: -8.539441108703613
    8. ' toute' → logprob: -8.539441108703613
    9. 'il' → logprob: -8.914441108703613
    10. ' n' → logprob: -8.914441108703613

Token 514: ' Bingo' (ID: 83316)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.9276158213615417
    2. 'e' → logprob: -1.3026158809661865
    3. 'any' → logprob: -1.3026158809661865
    4. ' True' → logprob: -3.8026158809661865
    5. 'b' → logprob: -4.427615642547607
    6. ' bingo' → logprob: -4.552615642547607
    7. ' b' → logprob: -5.302615642547607
    8. 'True' → logprob: -5.552615642547607
    9. 'a' → logprob: -5.927615642547607
    10. ' e' → logprob: -7.427615642547607

Token 515: ' est' (ID: 893)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2176792025566101
    2. ' est' → logprob: -2.092679262161255
    3. 'True' → logprob: -2.967679262161255
    4. '=True' → logprob: -4.842679023742676
    5. ' any' → logprob: -4.967679023742676
    6. ',' → logprob: -6.092679023742676
    7. '   ' → logprob: -6.717679023742676
    8. ' existe' → logprob: -7.217679023742676
    9. '(True' → logprob: -7.842679023742676
    10. ' a' → logprob: -8.717679023742676

Token 516: ' détect' (ID: 118715)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.39209431409835815
    2. 'True' → logprob: -1.142094373703003
    3. ' trouvé' → logprob: -5.767094135284424
    4. 'found' → logprob: -8.142094612121582
    5. 'prés' → logprob: -8.267094612121582
    6. ' détect' → logprob: -8.642094612121582
    7. ' obtenu' → logprob: -8.767094612121582
    8. 'v' → logprob: -8.892094612121582
    9. ' found' → logprob: -8.892094612121582
    10. ' atteint' → logprob: -8.892094612121582

Token 517: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.002223649062216282
    2. 'ed' → logprob: -6.752223491668701
    3. 'e' → logprob: -6.877223491668701
    4. 'ée' → logprob: -11.12722396850586
    5. 'ected' → logprob: -12.75222396850586
    6. 'éd' → logprob: -13.50222396850586
    7. '   ' → logprob: -14.25222396850586
    8. 'd' → logprob: -14.25222396850586
    9. 'er' → logprob: -14.62722396850586
    10. 'è' → logprob: -14.87722396850586

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015955770388245583
    2. '   ' → logprob: -4.515955924987793
    3. ',
' → logprob: -6.265955924987793
    4. ' ,' → logprob: -6.515955924987793
    5. 'True' → logprob: -7.015955924987793
    6. ' True' → logprob: -8.390955924987793
    7. '
' → logprob: -8.515955924987793
    8. '.' → logprob: -10.140955924987793
    9. '\n' → logprob: -10.390955924987793
    10. '```' → logprob: -10.640955924987793

Token 519: ' sinon' (ID: 52915)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5612801313400269
    2. 'False' → logprob: -1.0612801313400269
    3. '   ' → logprob: -2.9362802505493164
    4. ' True' → logprob: -3.9362802505493164
    5. 'True' → logprob: -4.561280250549316
    6. ' else' → logprob: -8.811280250549316
    7. '    ' → logprob: -9.186280250549316
    8. '       ' → logprob: -9.811280250549316
    9. 'else' → logprob: -9.936280250549316
    10. '```' → logprob: -10.311280250549316

Token 520: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.038065701723098755
    2. 'False' → logprob: -3.2880656719207764
    3. ' True' → logprob: -10.663065910339355
    4. 'True' → logprob: -14.163065910339355
    5. ' ' → logprob: -16.03806495666504
    6. '   ' → logprob: -17.16306495666504
    7. ' false' → logprob: -18.91306495666504
    8. '(False' → logprob: -19.03806495666504
    9. '=False' → logprob: -19.03806495666504
    10. ' ' → logprob: -20.03806495666504

Token 521: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04020043835043907
    2. '
' → logprob: -3.6652004718780518
    3. ')' → logprob: -5.165200233459473
    4. '):
' → logprob: -5.790200233459473
    5. '):' → logprob: -6.415200233459473
    6. ':' → logprob: -6.540200233459473
    7. ',' → logprob: -7.415200233459473
    8. ':
' → logprob: -7.915200233459473
    9. '```' → logprob: -8.290200233459473
    10. '    
' → logprob: -8.415200233459473

Token 522: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021595412399619818
    2. '
' → logprob: -6.502159595489502
    3. '    
' → logprob: -7.502159595489502
    4. ')' → logprob: -10.252159118652344
    5. '\n' → logprob: -11.002159118652344
    6. ' 
' → logprob: -11.002159118652344
    7. '```' → logprob: -11.127159118652344
    8. '   
' → logprob: -12.252159118652344
    9. '    ' → logprob: -12.627159118652344
    10. '     
' → logprob: -12.752159118652344

Token 523: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003836778923869133
    2. '
' → logprob: -5.878836631774902
    3. '    
' → logprob: -7.253836631774902
    4. ')' → logprob: -8.378836631774902
    5. '```' → logprob: -10.753836631774902
    6. ')
' → logprob: -11.003836631774902
    7. '\n' → logprob: -11.128836631774902
    8. ' 
' → logprob: -11.378836631774902
    9. '   
' → logprob: -11.878836631774902
    10. '    ' → logprob: -12.253836631774902

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003083593910560012
    2. ' for' → logprob: -6.1280837059021
    3. 'for' → logprob: -7.1280837059021
    4. '
' → logprob: -9.378083229064941
    5. '    
' → logprob: -12.378083229064941
    6. 'def' → logprob: -12.378083229064941
    7. '#' → logprob: -14.128083229064941
    8. '    ' → logprob: -14.753083229064941
    9. ' lines' → logprob: -14.753083229064941
    10. '	for' → logprob: -14.878083229064941

Token 525: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13515429198741913
    2. '   ' → logprob: -2.1351542472839355
    3. '#' (adapté à ' #') → logprob: -4.8851542472839355
    4. ' for' → logprob: -7.3851542472839355
    5. '
' → logprob: -12.135154724121094
    6. '	for' → logprob: -12.385154724121094
    7. 'def' → logprob: -13.635154724121094
    8. 'rows' → logprob: -14.135154724121094
    9. 'lines' → logprob: -14.135154724121094
    10. '    
' → logprob: -14.135154724121094

Token 526: ' Vér' (ID: 159169)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3141271770000458
    2. '#' → logprob: -1.3141272068023682
    3. '   ' → logprob: -7.689126968383789
    4. 'def' → logprob: -8.689126968383789
    5. 'lines' → logprob: -8.689126968383789
    6. ' for' → logprob: -10.314126968383789
    7. 'rows' → logprob: -11.189126968383789
    8. 'n' → logprob: -11.689126968383789
    9. 'size' → logprob: -12.189126968383789
    10. ' #' → logprob: -12.814126968383789

Token 527: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.10663583874702454
    2. 'ifie' → logprob: -2.606635808944702
    3. '   ' → logprob: -4.231636047363281
    4. 'if' → logprob: -4.481636047363281
    5. 'ify' → logprob: -6.981636047363281
    6. 'ifiez' → logprob: -7.731636047363281
    7. 'ifer' → logprob: -9.606636047363281
    8. '#' → logprob: -10.981636047363281
    9. 'ification' → logprob: -11.106636047363281
    10. 'ifié' → logprob: -11.106636047363281

Token 528: ' chaque' (ID: 21194)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.4168936312198639
    2. ' any' → logprob: -1.5418936014175415
    3. 'for' → logprob: -2.166893720626831
    4. ' for' → logprob: -5.291893482208252
    5. 'i' → logprob: -5.791893482208252
    6. 'all' → logprob: -6.291893482208252
    7. 'rows' → logprob: -6.916893482208252
    8. ' all' → logprob: -7.541893482208252
    9. ' i' → logprob: -8.04189395904541
    10. '#' → logprob: -8.04189395904541

Token 529: ' ligne' (ID: 19583)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5954728722572327
    2. 'i' → logprob: -0.8454728722572327
    3. ' range' → logprob: -4.720472812652588
    4. 'row' → logprob: -5.095472812652588
    5. ' i' → logprob: -5.720472812652588
    6. 'line' → logprob: -7.595472812652588
    7. 'ligne' → logprob: -8.470473289489746
    8. ' row' → logprob: -9.470473289489746
    9. 'for' → logprob: -9.470473289489746
    10. '   ' → logprob: -10.220473289489746

Token 530: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06405146420001984
    2. 'for' → logprob: -3.064051389694214
    3. ' for' → logprob: -4.189051628112793
    4. ':' → logprob: -9.189051628112793
    5. '	for' → logprob: -10.064051628112793
    6. '    
' → logprob: -11.439051628112793
    7. '
' → logprob: -11.689051628112793
    8. ',' → logprob: -12.564051628112793
    9. '```' → logprob: -12.564051628112793
    10. '\n' → logprob: -12.689051628112793

Token 531: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012536965310573578
    2. 'for' → logprob: -4.512537002563477
    3. ' for' → logprob: -6.512537002563477
    4. ':' → logprob: -13.512537002563477
    5. '	for' → logprob: -13.887537002563477
    6. '```' → logprob: -15.012537002563477
    7. '  ' → logprob: -15.637537002563477
    8. ',' → logprob: -15.762537002563477
    9. ' ' → logprob: -15.762537002563477
    10. '   ' → logprob: -16.637537002563477

Token 532: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.029794683679938316
    2. '   ' → logprob: -3.529794692993164
    3. ' for' → logprob: -10.029794692993164
    4. '```' → logprob: -16.154794692993164
    5. '	for' → logprob: -17.279794692993164
    6. ' ' → logprob: -18.654794692993164
    7. '  ' → logprob: -19.029794692993164
    8. '
' → logprob: -20.779794692993164
    9. 'if' → logprob: -21.279794692993164
    10. '``' → logprob: -21.904794692993164

Token 533: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5096346139907837
    2. 'row' → logprob: -1.0096346139907837
    3. ' row' → logprob: -4.009634494781494
    4. ' i' → logprob: -4.384634494781494
    5. 'line' → logprob: -6.009634494781494
    6. 'marks' → logprob: -6.634634494781494
    7. ' marks' → logprob: -8.009634971618652
    8. 'mark' → logprob: -8.634634971618652
    9. ' line' → logprob: -10.509634971618652
    10. ' mark' → logprob: -11.509634971618652

Token 534: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06998845189809799
    2. 'in' → logprob: -2.694988489151001
    3. '   ' → logprob: -10.444988250732422
    4. 'range' → logprob: -12.194988250732422
    5. ' ' → logprob: -12.319988250732422
    6. ',' → logprob: -12.944988250732422
    7. '  ' → logprob: -13.319988250732422
    8. '[' → logprob: -13.444988250732422
    9. 'import' → logprob: -13.694988250732422
    10. ')' → logprob: -13.819988250732422

Token 535: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009117019944824278
    2. ' range' → logprob: -7.000911712646484
    3. '[' → logprob: -15.875911712646484
    4. '```' → logprob: -16.875911712646484
    5. '	range' → logprob: -17.125911712646484
    6. '   ' → logprob: -17.500911712646484
    7. '(range' → logprob: -17.625911712646484
    8. '
' → logprob: -18.125911712646484
    9. ' ' → logprob: -18.875911712646484
    10. '0' → logprob: -18.875911712646484

Token 536: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024783893022686243
    2. '3' → logprob: -6.00247859954834
    3. '   ' → logprob: -13.37747859954834
    4. ' ' → logprob: -13.87747859954834
    5. ' (' → logprob: -15.37747859954834
    6. '(
' → logprob: -17.377477645874023
    7. '(len' → logprob: -19.502477645874023
    8. 'def' → logprob: -20.627477645874023
    9. '  ' → logprob: -20.752477645874023
    10. ')' → logprob: -21.002477645874023

Token 537: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -20.0
    4. '```' → logprob: -21.5
    5. '۳' → logprob: -21.75
    6. '３' → logprob: -22.75
    7. ')' → logprob: -22.875
    8. '³' → logprob: -23.5
    9. '0' → logprob: -23.875
    10. '1' → logprob: -23.875

Token 538: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4745783507823944
    2. '):' → logprob: -0.9745783805847168
    3. '   ' → logprob: -7.849578380584717
    4. ')' → logprob: -9.224577903747559
    5. '):
' → logprob: -11.849577903747559
    6. ':' → logprob: -13.099577903747559
    7. ' ):
' → logprob: -13.974577903747559
    8. '):

' → logprob: -14.099577903747559
    9. ' ):' → logprob: -14.224577903747559
    10. '       ' → logprob: -14.599577903747559

Token 539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035570044070482254
    2. '   ' → logprob: -3.6605701446533203
    3. ' if' → logprob: -5.16057014465332
    4. 'if' → logprob: -5.66057014465332
    5. '    ' → logprob: -13.03557014465332
    6. '           ' → logprob: -13.16057014465332
    7. '	   ' → logprob: -13.66057014465332
    8. '	if' → logprob: -14.41057014465332
    9. '[' → logprob: -14.78557014465332
    10. ' ' → logprob: -14.91057014465332

Token 540: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0030776485800743103
    2. '   ' → logprob: -6.503077507019043
    3. ' if' → logprob: -6.503077507019043
    4. '       ' → logprob: -9.503077507019043
    5. '    ' → logprob: -15.003077507019043
    6. '	if' → logprob: -15.378077507019043
    7. ' ' → logprob: -16.25307846069336
    8. '  ' → logprob: -16.75307846069336
    9. '           ' → logprob: -17.75307846069336
    10. 'If' → logprob: -18.37807846069336

Token 541: ' sum' (ID: 4215)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.017386049032211304
    2. ' all' → logprob: -4.642385959625244
    3. 'sum' → logprob: -4.892385959625244
    4. ' sum' → logprob: -9.267386436462402
    5. '   ' → logprob: -13.642386436462402
    6. ' ' → logprob: -14.517386436462402
    7. 'marks' → logprob: -14.642386436462402
    8. '	all' → logprob: -14.892386436462402
    9. 'alls' → logprob: -15.767386436462402
    10. 'All' → logprob: -16.392385482788086

Token 542: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00020926215802319348
    2. '(' → logprob: -8.500208854675293
    3. ' (' → logprob: -12.250208854675293
    4. '(
' → logprob: -15.250208854675293
    5. '	m' → logprob: -15.375208854675293
    6. ')' → logprob: -15.750208854675293
    7. '(mark' → logprob: -15.875208854675293
    8. ' marks' → logprob: -16.25020980834961
    9. 'marks' → logprob: -17.37520980834961
    10. '```' → logprob: -17.50020980834961

Token 543: 'arks' (ID: 13455)
  Prédit: 'arks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arks' → logprob: -9.17420256882906e-05
    2. 'marks' → logprob: -10.000091552734375
    3. '[' → logprob: -11.000091552734375
    4. 'ark' → logprob: -11.500091552734375
    5. 'ar' → logprob: -11.625091552734375
    6. '[i' → logprob: -12.375091552734375
    7. 'arts' → logprob: -13.875091552734375
    8. '```' → logprob: -14.375091552734375
    9. 'a' → logprob: -14.625091552734375
    10. '=' → logprob: -14.875091552734375

Token 544: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.130576806142926e-05
    2. ')[' → logprob: -11.125031471252441
    3. '[' → logprob: -11.375031471252441
    4. ')' → logprob: -13.750031471252441
    5. '[
' → logprob: -14.000031471252441
    6. 'i' → logprob: -14.125031471252441
    7. '[I' → logprob: -14.250031471252441
    8. ' [' → logprob: -14.875031471252441
    9. '][' → logprob: -15.250031471252441
    10. '```' → logprob: -15.625031471252441

Token 545: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -2.081584716506768e-05
    2. ' ])' → logprob: -11.500020980834961
    3. ')' → logprob: -12.125020980834961
    4. '[j' → logprob: -13.750020980834961
    5. '[i' → logprob: -13.875020980834961
    6. ']==' → logprob: -14.250020980834961
    7. '   ' → logprob: -14.625020980834961
    8. ']' → logprob: -15.125020980834961
    9. ' ' → logprob: -15.375020980834961
    10. '==' → logprob: -15.625020980834961

Token 546: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5238237977027893
    2. '==' → logprob: -0.8988237977027893
    3. ')' → logprob: -7.5238237380981445
    4. ')==' → logprob: -9.398823738098145
    5. '   ' → logprob: -10.648823738098145
    6. ' ' → logprob: -11.523823738098145
    7. '```' → logprob: -11.898823738098145
    8. '=' → logprob: -12.023823738098145
    9. '===' → logprob: -12.023823738098145
    10. '    ' → logprob: -12.273823738098145

Token 547: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.12501335144043
    4. '  ' → logprob: -18.87501335144043
    5. '```' → logprob: -19.37501335144043
    6. '۳' → logprob: -20.12501335144043
    7. '    ' → logprob: -20.87501335144043
    8. '       ' → logprob: -21.25001335144043
    9. '
' → logprob: -21.62501335144043
    10. '３' → logprob: -21.87501335144043

Token 548: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.000003814697266
    4. '```' → logprob: -19.000003814697266
    5. '۳' → logprob: -19.125003814697266
    6. '  ' → logprob: -20.000003814697266
    7. '৩' → logprob: -20.750003814697266
    8. '３' → logprob: -20.875003814697266
    9. '٣' → logprob: -21.062503814697266
    10. '' → logprob: -21.187503814697266

Token 549: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024971507489681244
    2. ':
' → logprob: -3.7749714851379395
    3. '       ' → logprob: -7.2749714851379395
    4. ':return' → logprob: -7.8999714851379395
    5. '           ' → logprob: -8.274971961975098
    6. '   ' → logprob: -8.649971961975098
    7. ' or' → logprob: -8.649971961975098
    8. '):' → logprob: -11.024971961975098
    9. ' and' → logprob: -11.274971961975098
    10. '):
' → logprob: -12.274971961975098

Token 550: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028035297989845276
    2. ':' → logprob: -4.6530351638793945
    3. '           ' → logprob: -4.9030351638793945
    4. ':
' → logprob: -5.4030351638793945
    5. '\n' → logprob: -5.9030351638793945
    6. ':return' → logprob: -6.5280351638793945
    7. '
' → logprob: -7.2780351638793945
    8. 'return' → logprob: -7.7780351638793945
    9. ' return' → logprob: -7.9030351638793945
    10. '   ' → logprob: -8.403035163879395

Token 551: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.043694935739040375
    2. '       ' → logprob: -3.5436949729919434
    3. ' return' → logprob: -4.668694972991943
    4. '           ' → logprob: -5.668694972991943
    5. '               ' → logprob: -7.043694972991943
    6. '	return' → logprob: -9.418694496154785
    7. '   ' → logprob: -10.418694496154785
    8. '
' → logprob: -11.418694496154785
    9. '	' → logprob: -12.418694496154785
    10. ':return' → logprob: -12.418694496154785

Token 552: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.128163257315464e-07
    2. ' True' → logprob: -15.25
    3. 'true' → logprob: -23.125
    4. '   ' → logprob: -24.5
    5. '(True' → logprob: -24.875
    6. '=True' → logprob: -26.125
    7. 'TRUE' → logprob: -26.125
    8. '
' → logprob: -26.125
    9. 'Tr' → logprob: -26.875
    10. 'False' → logprob: -27.25

Token 553: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4989459216594696
    2. '   ' → logprob: -0.998945951461792
    3. '    
' → logprob: -4.373945713043213
    4. '  
' → logprob: -5.248945713043213
    5. ' 
' → logprob: -5.998945713043213
    6. '\n' → logprob: -6.248945713043213
    7. '   
' → logprob: -6.498945713043213
    8. 'newline' → logprob: -8.998946189880371
    9. '' → logprob: -9.123946189880371
    10. '  ' → logprob: -9.623946189880371

Token 554: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007146967691369355
    2. '
' → logprob: -7.2507147789001465
    3. '    
' → logprob: -12.875714302062988
    4. '#' → logprob: -13.875714302062988
    5. '       ' → logprob: -14.750714302062988
    6. ' for' → logprob: -15.500714302062988
    7. 'for' → logprob: -15.500714302062988
    8. '```' → logprob: -15.750714302062988
    9. '   ' → logprob: -15.875714302062988
    10. '  
' → logprob: -16.125715255737305

Token 555: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004271784797310829
    2. '
' → logprob: -6.004271984100342
    3. 'for' → logprob: -6.879271984100342
    4. '#' (adapté à ' #') → logprob: -7.504271984100342
    5. '    
' → logprob: -9.379271507263184
    6. ' for' → logprob: -9.379271507263184
    7. '  ' → logprob: -11.379271507263184
    8. '  
' → logprob: -11.754271507263184
    9. '```' → logprob: -11.754271507263184
    10. ' ' → logprob: -11.879271507263184

Token 556: ' Vér' (ID: 159169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.061603307723999
    2. '   ' → logprob: -1.061603307723999
    3. 'for' → logprob: -1.186603307723999
    4. ' for' → logprob: -5.936603546142578
    5. ' #' → logprob: -8.311603546142578
    6. '```' → logprob: -10.561603546142578
    7. '
' → logprob: -10.936603546142578
    8. ' ' → logprob: -12.561603546142578
    9. '  ' → logprob: -13.311603546142578
    10. '	for' → logprob: -13.436603546142578

Token 557: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.2368052452802658
    2. 'er' → logprob: -1.6118052005767822
    3. 'érer' → logprob: -5.236805438995361
    4. 'ér' → logprob: -6.361805438995361
    5. '#' → logprob: -6.736805438995361
    6. 'if' → logprob: -6.861805438995361
    7. ' vérifier' → logprob: -6.861805438995361
    8. 'ifer' → logprob: -8.111804962158203
    9. 'f' → logprob: -9.111804962158203
    10. 'ifiez' → logprob: -9.236804962158203

Token 558: ' chaque' (ID: 21194)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.7095019817352295
    2. ' each' → logprob: -0.8345019817352295
    3. 'for' → logprob: -3.2095019817352295
    4. ' for' → logprob: -3.9595019817352295
    5. ' chaque' → logprob: -4.584502220153809
    6. ' ' → logprob: -6.209502220153809
    7. '   ' → logprob: -7.334502220153809
    8. ' range' → logprob: -7.334502220153809
    9. 'range' → logprob: -8.209502220153809
    10. ' j' → logprob: -8.334502220153809

Token 559: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.08087269216775894
    2. ' col' → logprob: -2.9558727741241455
    3. ' colonne' → logprob: -4.205872535705566
    4. 'range' → logprob: -5.830872535705566
    5. ' j' → logprob: -5.955872535705566
    6. ' range' → logprob: -5.955872535705566
    7. 'j' → logprob: -6.455872535705566
    8. 'column' → logprob: -7.205872535705566
    9. ' column' → logprob: -9.330872535705566
    10. 'i' → logprob: -9.455872535705566

Token 560: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005530327325686812
    2. ' for' → logprob: -8.250553131103516
    3. 'for' → logprob: -8.875553131103516
    4. '
' → logprob: -9.625553131103516
    5. '    
' → logprob: -10.000553131103516
    6. '```' → logprob: -10.750553131103516
    7. '<|end|>' → logprob: -11.500553131103516
    8. '       ' → logprob: -13.125553131103516
    9. '	for' → logprob: -13.375553131103516
    10. '  
' → logprob: -13.500553131103516

Token 561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014897463843226433
    2. '
' → logprob: -6.626489639282227
    3. 'for' → logprob: -8.876489639282227
    4. ' for' → logprob: -11.126489639282227
    5. '    
' → logprob: -12.126489639282227
    6. '```' → logprob: -12.751489639282227
    7. '  
' → logprob: -14.501489639282227
    8. '       ' → logprob: -15.251489639282227
    9. '	for' → logprob: -16.501489639282227
    10. '   
' → logprob: -16.876489639282227

Token 562: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13052336871623993
    2. ' for' → logprob: -2.130523443222046
    3. '   ' → logprob: -5.630523204803467
    4. '	for' → logprob: -13.380523681640625
    5. '
' → logprob: -14.380523681640625
    6. ' ' → logprob: -16.755523681640625
    7. '```' → logprob: -17.755523681640625
    8. '    
' → logprob: -17.880523681640625
    9. 'range' → logprob: -18.255523681640625
    10. '  ' → logprob: -18.880523681640625

Token 563: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008795143105089664
    2. ' j' → logprob: -4.758795261383057
    3. 'i' → logprob: -8.633794784545898
    4. ' i' → logprob: -13.008794784545898
    5. '   ' → logprob: -15.883794784545898
    6. ' ' → logprob: -16.3837947845459
    7. '	j' → logprob: -16.3837947845459
    8. '_j' → logprob: -17.5087947845459
    9. '```' → logprob: -18.0087947845459
    10. 'col' → logprob: -18.1337947845459

Token 564: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0046316226944327354
    2. 'in' → logprob: -5.379631519317627
    3. ' ' → logprob: -12.129631996154785
    4. 'range' → logprob: -12.504631996154785
    5. '   ' → logprob: -13.629631996154785
    6. '```' → logprob: -15.879631996154785
    7. ' range' → logprob: -16.00463104248047
    8. '  ' → logprob: -16.00463104248047
    9. '    ' → logprob: -16.12963104248047
    10. ')' → logprob: -16.62963104248047

Token 565: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002475777640938759
    2. ' range' → logprob: -6.002475738525391
    3. '3' → logprob: -17.00247573852539
    4. ' ' → logprob: -18.37747573852539
    5. '[' → logprob: -18.62747573852539
    6. '(range' → logprob: -18.87747573852539
    7. '   ' → logprob: -19.87747573852539
    8. '0' → logprob: -20.12747573852539
    9. '	range' → logprob: -20.75247573852539
    10. '```' → logprob: -21.25247573852539

Token 566: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002864900976419449
    2. '3' → logprob: -5.877864837646484
    3. 'range' → logprob: -9.752864837646484
    4. ' range' → logprob: -13.752864837646484
    5. ' ' → logprob: -14.752864837646484
    6. '(range' → logprob: -15.377864837646484
    7. '   ' → logprob: -15.627864837646484
    8. ' (' → logprob: -16.502864837646484
    9. '```' → logprob: -16.877864837646484
    10. '(
' → logprob: -18.127864837646484

Token 567: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -19.375
    4. 'range' → logprob: -20.0
    5. '0' → logprob: -21.25
    6. '
' → logprob: -21.875
    7. '```' → logprob: -22.375
    8. '۳' → logprob: -23.0
    9. '(' → logprob: -23.25
    10. ' range' → logprob: -23.5

Token 568: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09897542744874954
    2. '):' → logprob: -2.723975419998169
    3. '   ' → logprob: -3.848975419998169
    4. '3' → logprob: -5.223975658416748
    5. ')' → logprob: -7.223975658416748
    6. ':' → logprob: -7.223975658416748
    7. ':
' → logprob: -8.22397518157959
    8. ' ' → logprob: -9.47397518157959
    9. ',' → logprob: -9.97397518157959
    10. '       ' → logprob: -10.97397518157959

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006194814573973417
    2. ' if' → logprob: -5.131194591522217
    3. 'if' → logprob: -8.381195068359375
    4. '   ' → logprob: -10.256195068359375
    5. '           ' → logprob: -14.631195068359375
    6. ' for' → logprob: -14.756195068359375
    7. '      ' → logprob: -15.756195068359375
    8. '    ' → logprob: -15.881195068359375
    9. '	   ' → logprob: -15.881195068359375
    10. '[' → logprob: -16.006195068359375

Token 570: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014278567396104336
    2. ' if' → logprob: -4.264278411865234
    3. '   ' → logprob: -9.389278411865234
    4. '       ' → logprob: -10.389278411865234
    5. ' ' → logprob: -15.639278411865234
    6. '           ' → logprob: -16.264278411865234
    7. 'column' → logprob: -16.264278411865234
    8. 'col' → logprob: -16.639278411865234
    9. '    ' → logprob: -16.639278411865234
    10. '```' → logprob: -17.014278411865234

Token 571: ' marks' (ID: 22891)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.25556379556655884
    2. ' sum' → logprob: -1.505563735961914
    3. 'all' → logprob: -6.255563735961914
    4. ' all' → logprob: -6.380563735961914
    5. '   ' → logprob: -12.005563735961914
    6. '(sum' → logprob: -12.130563735961914
    7. ' ' → logprob: -13.880563735961914
    8. ' sums' → logprob: -14.630563735961914
    9. '    ' → logprob: -15.130563735961914
    10. '	sum' → logprob: -15.880563735961914

Token 572: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017401513177901506
    2. '0' → logprob: -6.376739978790283
    3. ' ' → logprob: -12.001740455627441
    4. '   ' → logprob: -12.126740455627441
    5. '1' → logprob: -12.626740455627441
    6. 'sum' → logprob: -12.626740455627441
    7. '[
' → logprob: -12.751740455627441
    8. '[i' → logprob: -13.126740455627441
    9. 'def' → logprob: -13.251740455627441
    10. '00' → logprob: -13.251740455627441

Token 573: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.968312951968983e-06
    2. 'i' → logprob: -12.500009536743164
    3. ' ' → logprob: -12.625009536743164
    4. '[' → logprob: -13.625009536743164
    5. '   ' → logprob: -13.625009536743164
    6. 'sum' → logprob: -15.875009536743164
    7. '
' → logprob: -16.250009536743164
    8. '  ' → logprob: -17.125009536743164
    9. '00' → logprob: -17.125009536743164
    10. '```' → logprob: -17.437509536743164

Token 574: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006898658815771341
    2. '[j' → logprob: -5.006898880004883
    3. '[' → logprob: -9.006898880004883
    4. '[i' → logprob: -10.506898880004883
    5. ' ][' → logprob: -11.631898880004883
    6. ']' → logprob: -11.756898880004883
    7. '   ' → logprob: -12.006898880004883
    8. '```' → logprob: -13.381898880004883
    9. ')[' → logprob: -14.006898880004883
    10. 'j' → logprob: -14.006898880004883

Token 575: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.531315314830863e-06
    2. ' j' → logprob: -12.625003814697266
    3. '[j' → logprob: -16.375003814697266
    4. '   ' → logprob: -17.500003814697266
    5. '	j' → logprob: -17.875003814697266
    6. ' ' → logprob: -20.125003814697266
    7. '```' → logprob: -20.250003814697266
    8. '
' → logprob: -20.750003814697266
    9. ',j' → logprob: -20.875003814697266
    10. ':j' → logprob: -20.875003814697266

Token 576: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003464651992544532
    2. ']+' → logprob: -5.753464698791504
    3. ']==' → logprob: -8.253464698791504
    4. ' ]' → logprob: -10.878464698791504
    5. '+' → logprob: -12.753464698791504
    6. '   ' → logprob: -13.253464698791504
    7. '==' → logprob: -14.003464698791504
    8. ']
' → logprob: -14.628464698791504
    9. ')' → logprob: -15.128464698791504
    10. '']' → logprob: -15.378464698791504

Token 577: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3970632553100586
    2. ' +' → logprob: -1.6470632553100586
    3. '==' → logprob: -2.0220632553100586
    4. ' ==' → logprob: -6.022063255310059
    5. 'and' → logprob: -8.397063255310059
    6. '=' → logprob: -11.022063255310059
    7. '   ' → logprob: -11.272063255310059
    8. ' and' → logprob: -11.522063255310059
    9. '===' → logprob: -12.147063255310059
    10. '```' → logprob: -12.897063255310059

Token 578: ' marks' (ID: 22891)
  Prédit: 'marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marks' → logprob: -0.251943439245224
    2. ' marks' → logprob: -1.5019434690475464
    3. 'mark' → logprob: -11.501943588256836
    4. '   ' → logprob: -13.001943588256836
    5. '_marks' → logprob: -14.126943588256836
    6. 'marked' → logprob: -15.126943588256836
    7. '    ' → logprob: -15.501943588256836
    8. ' ' → logprob: -15.751943588256836
    9. '	m' → logprob: -15.876943588256836
    10. 'm' → logprob: -16.251943588256836

Token 579: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02054702304303646
    2. '1' → logprob: -3.8955469131469727
    3. ' [' → logprob: -13.145546913146973
    4. '[
' → logprob: -13.895546913146973
    5. '   ' → logprob: -14.645546913146973
    6. ' ' → logprob: -14.645546913146973
    7. 'def' → logprob: -14.770546913146973
    8. '
' → logprob: -15.270546913146973
    9. '```' → logprob: -15.270546913146973
    10. '=' → logprob: -15.770546913146973

Token 580: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '   ' → logprob: -18.5
    4. '
' → logprob: -19.75
    5. '```' → logprob: -21.625
    6. '[' → logprob: -21.875
    7. '１' → logprob: -22.625
    8. '  ' → logprob: -22.75
    9. '۱' → logprob: -23.125
    10. '	' → logprob: -23.625

Token 581: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0032163304276764393
    2. '[j' → logprob: -5.75321626663208
    3. ' ][' → logprob: -11.128216743469238
    4. '[' → logprob: -11.503216743469238
    5. ']' → logprob: -12.503216743469238
    6. 'j' → logprob: -13.128216743469238
    7. '   ' → logprob: -13.128216743469238
    8. '```' → logprob: -13.878216743469238
    9. '>[' → logprob: -14.003216743469238
    10. '1' → logprob: -14.128216743469238

Token 582: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.512236498361744e-07
    2. ' j' → logprob: -14.750000953674316
    3. '[j' → logprob: -16.5
    4. '	j' → logprob: -19.5
    5. '```' → logprob: -21.125
    6. '$j' → logprob: -21.25
    7. '
' → logprob: -21.625
    8. ',j' → logprob: -21.75
    9. '0' → logprob: -21.875
    10. '   ' → logprob: -22.0

Token 583: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.387970894575119
    2. ' +' → logprob: -1.1379709243774414
    3. ']' → logprob: -7.137970924377441
    4. '[' → logprob: -8.887970924377441
    5. ']+' → logprob: -9.262970924377441
    6. '][' → logprob: -9.887970924377441
    7. '+j' → logprob: -11.637970924377441
    8. '[j' → logprob: -13.012970924377441
    9. ' ]' → logprob: -13.262970924377441
    10. '>' → logprob: -13.637970924377441

Token 584: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868752717971802
    2. '+' → logprob: -1.1368752717971802
    3. '==' → logprob: -13.13687515258789
    4. ' ==' → logprob: -14.13687515258789
    5. '```' → logprob: -15.01187515258789
    6. '        ' → logprob: -15.13687515258789
    7. ' ' → logprob: -15.63687515258789
    8. ' +
' → logprob: -15.63687515258789
    9. '[' → logprob: -16.01187515258789
    10. '+
' → logprob: -16.26187515258789

Token 585: ' marks' (ID: 22891)
  Prédit: 'marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marks' → logprob: -0.34845200181007385
    2. ' marks' → logprob: -1.2234519720077515
    3. 'mark' → logprob: -12.598451614379883
    4. '   ' → logprob: -13.723451614379883
    5. '_marks' → logprob: -13.973451614379883
    6. 'marked' → logprob: -14.973451614379883
    7. '```' → logprob: -15.473451614379883
    8. 'Marks' → logprob: -15.473451614379883
    9. ' ' → logprob: -15.598451614379883
    10. '
' → logprob: -15.723451614379883

Token 586: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.306760805164231e-05
    2. '2' → logprob: -11.50001335144043
    3. ' [' → logprob: -12.87501335144043
    4. '][' → logprob: -16.25001335144043
    5. '```' → logprob: -16.50001335144043
    6. '[
' → logprob: -16.75001335144043
    7. '{' → logprob: -17.12501335144043
    8. '
' → logprob: -17.75001335144043
    9. ' ' → logprob: -17.87501335144043
    10. '[j' → logprob: -18.25001335144043

Token 587: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -16.00000762939453
    4. '[' → logprob: -16.25000762939453
    5. '```' → logprob: -16.75000762939453
    6. 'j' → logprob: -17.25000762939453
    7. '
' → logprob: -18.25000762939453
    8. '  ' → logprob: -19.12500762939453
    9. '２' → logprob: -19.12500762939453
    10. '``' → logprob: -19.37500762939453

Token 588: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0037474639248102903
    2. '[j' → logprob: -5.628747463226318
    3. '[' → logprob: -9.503747940063477
    4. ']' → logprob: -10.378747940063477
    5. ' ][' → logprob: -10.878747940063477
    6. '   ' → logprob: -11.878747940063477
    7. '}[' → logprob: -12.128747940063477
    8. '```' → logprob: -12.378747940063477
    9. ')[' → logprob: -13.878747940063477
    10. '>[' → logprob: -14.003747940063477

Token 589: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00010521204239921644
    2. '[j' → logprob: -9.250104904174805
    3. ' j' → logprob: -11.625104904174805
    4. '```' → logprob: -16.000104904174805
    5. '   ' → logprob: -17.875104904174805
    6. '	j' → logprob: -18.000104904174805
    7. '][' → logprob: -18.875104904174805
    8. ']' → logprob: -19.000104904174805
    9. '$j' → logprob: -19.125104904174805
    10. '[' → logprob: -19.500104904174805

Token 590: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029175723902881145
    2. ']==' → logprob: -5.877917766571045
    3. ' ]' → logprob: -9.127917289733887
    4. '==' → logprob: -13.252917289733887
    5. '```' → logprob: -13.752917289733887
    6. '']' → logprob: -15.502917289733887
    7. '   ' → logprob: -15.627917289733887
    8. '[' → logprob: -15.877917289733887
    9. ']
' → logprob: -16.002918243408203
    10. ')' → logprob: -16.377918243408203

Token 591: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12697240710258484
    2. '==' → logprob: -2.1269724369049072
    3. ')' → logprob: -11.251972198486328
    4. ' ' → logprob: -11.501972198486328
    5. ')==' → logprob: -11.751972198486328
    6. ']==' → logprob: -11.876972198486328
    7. '```' → logprob: -12.751972198486328
    8. '=' → logprob: -14.001972198486328
    9. ']' → logprob: -14.501972198486328
    10. ' ' → logprob: -14.751972198486328

Token 592: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.1250057220459
    4. '۳' → logprob: -20.3750057220459
    5. '  ' → logprob: -20.5000057220459
    6. '```' → logprob: -21.6250057220459
    7. '３' → logprob: -22.2500057220459
    8. '    ' → logprob: -22.6250057220459
    9. '       ' → logprob: -23.1250057220459
    10. '٣' → logprob: -23.8750057220459

Token 593: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '۳' → logprob: -21.25
    4. '   ' → logprob: -21.875
    5. '```' → logprob: -22.0
    6. '３' → logprob: -22.875
    7. '٣' → logprob: -23.625
    8. '৩' → logprob: -23.625
    9. '' → logprob: -23.875
    10. '३' → logprob: -24.25

Token 594: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010290613397955894
    2. ':
' → logprob: -4.635290622711182
    3. ':return' → logprob: -8.260290145874023
    4. '       ' → logprob: -8.385290145874023
    5. '   ' → logprob: -10.635290145874023
    6. '           ' → logprob: -10.885290145874023
    7. '):' → logprob: -13.010290145874023
    8. '):
' → logprob: -14.510290145874023
    9. ':
' → logprob: -15.010290145874023
    10. '.' → logprob: -15.010290145874023

Token 595: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0487273745238781
    2. '           ' → logprob: -3.04872727394104
    3. '   ' → logprob: -9.673727035522461
    4. '
' → logprob: -10.798727035522461
    5. 'return' → logprob: -10.798727035522461
    6. ' return' → logprob: -10.923727035522461
    7. '               ' → logprob: -11.548727035522461
    8. '	' → logprob: -13.298727035522461
    9. '		' → logprob: -13.548727035522461
    10. '	return' → logprob: -13.673727035522461

Token 596: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.924998939037323
    2. ' return' → logprob: -1.1749989986419678
    3. '           ' → logprob: -1.4249989986419678
    4. '               ' → logprob: -3.1749989986419678
    5. '       ' → logprob: -4.424998760223389
    6. '	return' → logprob: -8.424999237060547
    7. '   ' → logprob: -8.924999237060547
    8. '	       ' → logprob: -12.174999237060547
    9. '		' → logprob: -12.424999237060547
    10. '```' → logprob: -12.799999237060547

Token 597: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020354038861114532
    2. ' True' → logprob: -8.500203132629395
    3. '=True' → logprob: -22.62520408630371
    4. 'False' → logprob: -23.00020408630371
    5. 'Tr' → logprob: -23.12520408630371
    6. '(True' → logprob: -23.62520408630371
    7. ' ' → logprob: -24.87520408630371
    8. 'true' → logprob: -25.75020408630371
    9. '   ' → logprob: -25.87520408630371
    10. '
' → logprob: -26.00020408630371

Token 598: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022382817696779966
    2. '
' → logprob: -6.1272382736206055
    3. '#' → logprob: -10.002238273620605
    4. '```' → logprob: -12.377238273620605
    5. '    
' → logprob: -13.127238273620605
    6. '  ' → logprob: -14.627238273620605
    7. '       ' → logprob: -14.877238273620605
    8. ',' → logprob: -15.252238273620605
    9. '  
' → logprob: -15.627238273620605
    10. ')' → logprob: -16.252239227294922

Token 599: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009979173773899674
    2. '#' → logprob: -7.000998020172119
    3. '
' → logprob: -9.625997543334961
    4. '```' → logprob: -10.875997543334961
    5. '    
' → logprob: -14.625997543334961
    6. 'for' → logprob: -15.375997543334961
    7. '       ' → logprob: -15.375997543334961
    8. '  ' → logprob: -15.625997543334961
    9. '	' → logprob: -16.00099754333496
    10. '\' → logprob: -16.87599754333496

Token 600: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07892228662967682
    2. '#' (adapté à ' #') → logprob: -2.5789222717285156
    3. '
' → logprob: -10.703922271728516
    4. '```' → logprob: -11.828922271728516
    5. ' #' → logprob: -12.953922271728516
    6. '	' → logprob: -15.578922271728516
    7. '    
' → logprob: -16.078922271728516
    8. '       ' → logprob: -17.078922271728516
    9. '``' → logprob: -17.453922271728516
    10. '  ' → logprob: -17.453922271728516

Token 601: ' Vér' (ID: 159169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2647229731082916
    2. 'if' → logprob: -1.5147229433059692
    3. '   ' → logprob: -4.63972282409668
    4. 'di' → logprob: -6.26472282409668
    5. 'for' → logprob: -7.26472282409668
    6. ' if' → logprob: -8.26472282409668
    7. 'diag' → logprob: -9.01472282409668
    8. ' #' → logprob: -9.88972282409668
    9. ' diagonal' → logprob: -12.26472282409668
    10. '
' → logprob: -12.88972282409668

Token 602: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.7293015718460083
    2. 'er' → logprob: -1.7293015718460083
    3. 'if' → logprob: -1.9793015718460083
    4. 'érer' → logprob: -2.4793014526367188
    5. 'ér' → logprob: -2.4793014526367188
    6. '#' → logprob: -3.9793014526367188
    7. 'ifiez' → logprob: -4.729301452636719
    8. '   ' → logprob: -6.104301452636719
    9. ' vérifier' → logprob: -6.479301452636719
    10. 'IFIER' → logprob: -7.354301452636719

Token 603: ' la' (ID: 557)
  Prédit: ' marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' marks' → logprob: -0.09033632278442383
    2. 'marks' → logprob: -2.465336322784424
    3. '#' → logprob: -7.340336322784424
    4. '   ' → logprob: -7.715336322784424
    5. ' #' → logprob: -9.215335845947266
    6. ' les' → logprob: -9.965335845947266
    7. '(m' → logprob: -10.215335845947266
    8. ' if' → logprob: -10.965335845947266
    9. ' diagon' → logprob: -11.090335845947266
    10. ' (' → logprob: -11.215335845947266

Token 604: ' diagon' (ID: 146014)
  Prédit: 'marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'marks' → logprob: -0.7644731998443604
    2. 'di' → logprob: -1.2644731998443604
    3. '0' → logprob: -1.5144731998443604
    4. 'main' → logprob: -4.264472961425781
    5. 'sum' → logprob: -5.514472961425781
    6. '[' → logprob: -5.889472961425781
    7. ' marks' → logprob: -5.889472961425781
    8. 'diag' → logprob: -6.014472961425781
    9. 'if' → logprob: -6.139472961425781
    10. 's' → logprob: -6.889472961425781

Token 605: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.00015979631280060858
    2. 'al' → logprob: -9.000160217285156
    3. 'ales' → logprob: -11.250160217285156
    4. 'але' → logprob: -12.375160217285156
    5. '[' → logprob: -12.750160217285156
    6. 'a' → logprob: -13.000160217285156
    7. 'alle' → logprob: -13.250160217285156
    8. '
' → logprob: -13.375160217285156
    9. 'le' → logprob: -13.500160217285156
    10. '```' → logprob: -13.875160217285156

Token 606: ' principale' (ID: 68926)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0995984748005867
    2. '0' → logprob: -2.4745984077453613
    3. '   ' → logprob: -4.849598407745361
    4. '[
' → logprob: -6.599598407745361
    5. '(' → logprob: -8.22459888458252
    6. 'if' → logprob: -8.22459888458252
    7. ' [' → logprob: -8.72459888458252
    8. '\' → logprob: -8.72459888458252
    9. ' ' → logprob: -9.22459888458252
    10. '\[' → logprob: -9.47459888458252

Token 607: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0040076421573758125
    2. 'if' → logprob: -6.254007816314697
    3. ' and' → logprob: -7.254007816314697
    4. ' if' → logprob: -7.754007816314697
    5. 'and' → logprob: -8.254007339477539
    6. '(' → logprob: -8.504007339477539
    7. '
' → logprob: -8.629007339477539
    8. '[' → logprob: -8.879007339477539
    9. ' (' → logprob: -10.629007339477539
    10. 'for' → logprob: -10.879007339477539

Token 608: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008581362664699554
    2. 'if' → logprob: -5.008581161499023
    3. ' if' → logprob: -6.383581161499023
    4. 'for' → logprob: -9.508581161499023
    5. '[' → logprob: -10.633581161499023
    6. '(' → logprob: -10.758581161499023
    7. 'and' → logprob: -11.008581161499023
    8. ' and' → logprob: -11.258581161499023
    9. ' for' → logprob: -11.383581161499023
    10. '
' → logprob: -12.633581161499023

Token 609: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5377005934715271
    2. ' if' → logprob: -1.0377006530761719
    3. '   ' → logprob: -2.787700653076172
    4. 'for' → logprob: -9.912700653076172
    5. ' for' → logprob: -11.037700653076172
    6. 'return' → logprob: -11.787700653076172
    7. ' return' → logprob: -12.537700653076172
    8. ' ' → logprob: -14.287700653076172
    9. 'sum' → logprob: -14.537700653076172
    10. '
' → logprob: -14.662700653076172

Token 610: ' marks' (ID: 22891)
  Prédit: 'marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marks' → logprob: -0.11289503425359726
    2. ' marks' → logprob: -2.2378950119018555
    3. 'sum' → logprob: -10.237895011901855
    4. '   ' → logprob: -11.987895011901855
    5. 'mark' → logprob: -12.237895011901855
    6. 'm' → logprob: -12.237895011901855
    7. '(m' → logprob: -12.362895011901855
    8. ' sum' → logprob: -12.612895011901855
    9. 'marked' → logprob: -12.862895011901855
    10. ' (' → logprob: -12.862895011901855

Token 611: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. '0' → logprob: -12.87500286102295
    3. ' [' → logprob: -15.37500286102295
    4. '1' → logprob: -16.375003814697266
    5. '[
' → logprob: -17.000003814697266
    6. '=' → logprob: -17.750003814697266
    7. '```' → logprob: -17.750003814697266
    8. '2' → logprob: -18.250003814697266
    9. '   ' → logprob: -18.250003814697266
    10. '[i' → logprob: -18.500003814697266

Token 612: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '```' → logprob: -17.875001907348633
    5. '
' → logprob: -18.250001907348633
    6. '۰' → logprob: -18.250001907348633
    7. '00' → logprob: -18.500001907348633
    8. '   ' → logprob: -19.125001907348633
    9. 'i' → logprob: -19.875001907348633
    10. '1' → logprob: -19.937501907348633

Token 613: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008061755215749145
    2. '[' → logprob: -7.1258063316345215
    3. ' ][' → logprob: -14.125805854797363
    4. '0' → logprob: -14.500805854797363
    5. ']' → logprob: -15.250805854797363
    6. ']][' → logprob: -16.62580680847168
    7. '```' → logprob: -17.50080680847168
    8. ''][' → logprob: -17.75080680847168
    9. '"][' → logprob: -17.87580680847168
    10. '   ' → logprob: -18.12580680847168

Token 614: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.25
    3. '
' → logprob: -16.625
    4. '[' → logprob: -17.875
    5. '][' → logprob: -18.5
    6. '۰' → logprob: -18.625
    7. '```' → logprob: -18.75
    8. '1' → logprob: -19.25
    9. ']' → logprob: -19.25
    10. '   ' → logprob: -19.625

Token 615: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006058142753317952
    2. ']+' → logprob: -8.125605583190918
    3. ']==' → logprob: -8.125605583190918
    4. ' ]' → logprob: -11.750605583190918
    5. '==' → logprob: -13.375605583190918
    6. '   ' → logprob: -13.500605583190918
    7. '+' → logprob: -13.875605583190918
    8. 'and' → logprob: -14.375605583190918
    9. ' ==' → logprob: -14.750605583190918
    10. '[' → logprob: -14.750605583190918

Token 616: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38759955763816833
    2. '+' → logprob: -1.1375995874404907
    3. '==' → logprob: -7.387599468231201
    4. ' ==' → logprob: -9.38759994506836
    5. ' and' → logprob: -12.01259994506836
    6. '[' → logprob: -12.01259994506836
    7. 'and' → logprob: -12.13759994506836
    8. '   ' → logprob: -13.38759994506836
    9. ' +
' → logprob: -14.01259994506836
    10. ',' → logprob: -14.13759994506836

Token 617: ' marks' (ID: 22891)
  Prédit: 'marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marks' → logprob: -0.06196948140859604
    2. ' marks' → logprob: -2.811969518661499
    3. 'mark' → logprob: -13.811969757080078
    4. 'marked' → logprob: -15.311969757080078
    5. '_marks' → logprob: -15.436969757080078
    6. '1' → logprob: -16.186969757080078
    7. 'markers' → logprob: -16.561969757080078
    8. 'm' → logprob: -16.936969757080078
    9. ' ' → logprob: -17.311969757080078
    10. '```' → logprob: -17.311969757080078

Token 618: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.246537173457909e-06
    2. '][' → logprob: -13.125003814697266
    3. '```' → logprob: -14.125003814697266
    4. ' [' → logprob: -14.625003814697266
    5. '1' → logprob: -14.750003814697266
    6. '>[' → logprob: -15.500003814697266
    7. '[[' → logprob: -15.875003814697266
    8. '}[' → logprob: -16.000003814697266
    9. '[
' → logprob: -16.500003814697266
    10. ')[' → logprob: -17.500003814697266

Token 619: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '0' → logprob: -17.375
    4. '   ' → logprob: -17.625
    5. '```' → logprob: -17.75
    6. '[' → logprob: -18.375
    7. '
' → logprob: -19.0
    8. '۱' → logprob: -19.5
    9. '2' → logprob: -19.9375
    10. '１' → logprob: -20.0625

Token 620: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.048671282827854156
    2. '[' → logprob: -3.048671245574951
    3. '>[' → logprob: -10.29867172241211
    4. '}[' → logprob: -10.29867172241211
    5. '```' → logprob: -12.17367172241211
    6. '1' → logprob: -12.79867172241211
    7. ')[' → logprob: -12.79867172241211
    8. ']' → logprob: -13.29867172241211
    9. ''][' → logprob: -14.04867172241211
    10. '"][' → logprob: -14.54867172241211

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.500004768371582
    3. '
' → logprob: -14.375004768371582
    4. '```' → logprob: -15.875004768371582
    5. '[' → logprob: -16.0000057220459
    6. '   ' → logprob: -16.2500057220459
    7. '

' → logprob: -17.0625057220459
    8. '۱' → logprob: -17.1250057220459
    9. '...' → logprob: -17.3125057220459
    10. '0' → logprob: -17.6250057220459

Token 622: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007632770109921694
    2. '+' → logprob: -5.007632732391357
    3. ']+' → logprob: -7.632632732391357
    4. ' +' → logprob: -7.882632732391357
    5. '[' → logprob: -10.632633209228516
    6. ' ]' → logprob: -11.507633209228516
    7. ')' → logprob: -11.632633209228516
    8. '```' → logprob: -12.507633209228516
    9. '+]' → logprob: -13.257633209228516
    10. '0' → logprob: -13.507633209228516

Token 623: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931540966033936
    2. ' +' → logprob: -0.6931540966033936
    3. '[' → logprob: -12.193154335021973
    4. '==' → logprob: -13.943154335021973
    5. '```' → logprob: -15.068154335021973
    6. '+
' → logprob: -16.068153381347656
    7. '+[' → logprob: -16.068153381347656
    8. ' ' → logprob: -16.193153381347656
    9. ' ==' → logprob: -16.318153381347656
    10. '3' → logprob: -16.568153381347656

Token 624: ' marks' (ID: 22891)
  Prédit: 'marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marks' → logprob: -0.02630157396197319
    2. ' marks' → logprob: -3.651301622390747
    3. 'mark' → logprob: -14.526301383972168
    4. '_marks' → logprob: -15.276301383972168
    5. 'marked' → logprob: -15.526301383972168
    6. '```' → logprob: -16.151302337646484
    7. 'Marks' → logprob: -16.776302337646484
    8. '1' → logprob: -16.901302337646484
    9. 'markers' → logprob: -17.276302337646484
    10. '
' → logprob: -17.401302337646484

Token 625: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.889424836728722e-05
    2. '2' → logprob: -9.250099182128906
    3. '0' → logprob: -14.000099182128906
    4. '```' → logprob: -14.500099182128906
    5. ' [' → logprob: -14.625099182128906
    6. '[[' → logprob: -15.375099182128906
    7. '[
' → logprob: -15.875099182128906
    8. ' ' → logprob: -16.000099182128906
    9. '][' → logprob: -16.375099182128906
    10. '   ' → logprob: -16.750099182128906

Token 626: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6166903151315637e-05
    2. ' ' → logprob: -11.125016212463379
    3. '[' → logprob: -14.250016212463379
    4. '```' → logprob: -15.125016212463379
    5. '   ' → logprob: -15.750016212463379
    6. '۲' → logprob: -16.000015258789062
    7. '
' → logprob: -16.437515258789062
    8. '``' → logprob: -17.250015258789062
    9. '  ' → logprob: -17.562515258789062
    10. '-' → logprob: -17.625015258789062

Token 627: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.016064399853348732
    2. '[' → logprob: -4.141064167022705
    3. ']' → logprob: -11.516064643859863
    4. '}[' → logprob: -11.891064643859863
    5. '>[' → logprob: -12.516064643859863
    6. '2' → logprob: -12.641064643859863
    7. '```' → logprob: -12.641064643859863
    8. ' ][' → logprob: -13.891064643859863
    9. ''][' → logprob: -15.141064643859863
    10. '"][' → logprob: -15.141064643859863

Token 628: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -15.250000953674316
    4. '[' → logprob: -15.375000953674316
    5. '0' → logprob: -16.625001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '
' → logprob: -17.875001907348633
    8. '۲' → logprob: -18.250001907348633
    9. '  ' → logprob: -20.000001907348633
    10. '3' → logprob: -20.125001907348633

Token 629: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002353640884393826
    2. ']==' → logprob: -9.250235557556152
    3. ' ]' → logprob: -9.500235557556152
    4. ')' → logprob: -9.750235557556152
    5. ' ==' → logprob: -13.000235557556152
    6. '==' → logprob: -13.375235557556152
    7. '}' → logprob: -14.125235557556152
    8. '']' → logprob: -14.250235557556152
    9. '```' → logprob: -14.750235557556152
    10. '
' → logprob: -16.000234603881836

Token 630: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.043024081736803055
    2. '==' → logprob: -3.1680240631103516
    3. ' ' → logprob: -11.168024063110352
    4. ')' → logprob: -12.418024063110352
    5. ')==' → logprob: -12.668024063110352
    6. '```' → logprob: -13.668024063110352
    7. ' ' → logprob: -14.293024063110352
    8. ']==' → logprob: -14.793024063110352
    9. '   ' → logprob: -14.793024063110352
    10. '=' → logprob: -15.043024063110352

Token 631: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.625024795532227
    4. '```' → logprob: -18.000024795532227
    5. '9' → logprob: -18.750024795532227
    6. '  ' → logprob: -20.000024795532227
    7. '۳' → logprob: -20.500024795532227
    8. '
' → logprob: -21.375024795532227
    9. '３' → logprob: -21.875024795532227
    10. '`' → logprob: -22.125024795532227

Token 632: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -17.375001907348633
    4. '۳' → logprob: -18.500001907348633
    5. '   ' → logprob: -19.375001907348633
    6. '３' → logprob: -19.875001907348633
    7. '৩' → logprob: -20.062501907348633
    8. '३' → logprob: -20.625001907348633
    9. '
' → logprob: -20.750001907348633
    10. '9' → logprob: -20.750001907348633

Token 633: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02098383754491806
    2. ':
' → logprob: -4.145983695983887
    3. '   ' → logprob: -5.520983695983887
    4. ' or' → logprob: -7.770983695983887
    5. ':return' → logprob: -8.270983695983887
    6. ' and' → logprob: -8.645983695983887
    7. '       ' → logprob: -10.395983695983887
    8. ' :' → logprob: -10.770983695983887
    9. 'and' → logprob: -11.270983695983887
    10. 'or' → logprob: -12.770983695983887

Token 634: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2526547312736511
    2. '       ' → logprob: -1.502654790878296
    3. '
' → logprob: -8.252655029296875
    4. ' return' → logprob: -8.377655029296875
    5. ':
' → logprob: -9.752655029296875
    6. ':return' → logprob: -9.877655029296875
    7. '\n' → logprob: -10.502655029296875
    8. ':' → logprob: -10.752655029296875
    9. 'return' → logprob: -10.752655029296875
    10. '	return' → logprob: -11.127655029296875

Token 635: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6412853598594666
    2. 'return' (adapté à ' return') → logprob: -0.8912853598594666
    3. '   ' → logprob: -2.8912854194641113
    4. '       ' → logprob: -4.891285419464111
    5. '	return' → logprob: -8.391284942626953
    6. '           ' → logprob: -11.891284942626953
    7. ':return' → logprob: -13.141284942626953
    8. ' ' → logprob: -13.766284942626953
    9. ' ' → logprob: -13.891284942626953
    10. '
' → logprob: -14.141284942626953

Token 636: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01814994215965271
    2. ' True' → logprob: -4.0181498527526855
    3. '(True' → logprob: -19.893150329589844
    4. '=True' → logprob: -21.643150329589844
    5. 'False' → logprob: -22.518150329589844
    6. ' ' → logprob: -22.893150329589844
    7. ' ' → logprob: -22.893150329589844
    8. 'Tr' → logprob: -23.143150329589844
    9. '   ' → logprob: -23.893150329589844
    10. 'true' → logprob: -24.143150329589844

Token 637: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003273600013926625
    2. '
' → logprob: -8.625327110290527
    3. '    
' → logprob: -8.875327110290527
    4. '  
' → logprob: -12.875327110290527
    5. '   
' → logprob: -13.125327110290527
    6. '  ' → logprob: -13.250327110290527
    7. ' 
' → logprob: -14.375327110290527
    8. 'if' → logprob: -15.250327110290527
    9. '    ' → logprob: -15.625327110290527
    10. ' ' → logprob: -16.000328063964844

Token 638: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.4060561776859686e-05
    2. 'if' → logprob: -10.375043869018555
    3. '
' → logprob: -11.875043869018555
    4. '    
' → logprob: -13.000043869018555
    5. ' if' → logprob: -13.000043869018555
    6. '  ' → logprob: -14.000043869018555
    7. '	if' → logprob: -16.000043869018555
    8. ' ' → logprob: -16.250043869018555
    9. '	' → logprob: -16.750043869018555
    10. '    ' → logprob: -17.000043869018555

Token 639: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017927512526512146
    2. 'if' → logprob: -6.376792907714844
    3. ' if' → logprob: -9.751792907714844
    4. '
' → logprob: -10.876792907714844
    5. '#' (adapté à ' #') → logprob: -12.001792907714844
    6. '    
' → logprob: -12.876792907714844
    7. ' ' → logprob: -13.126792907714844
    8. '  ' → logprob: -13.751792907714844
    9. '```' → logprob: -14.751792907714844
    10. '\' → logprob: -15.001792907714844

Token 640: ' Vér' (ID: 159169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16134966909885406
    2. 'if' → logprob: -2.1613497734069824
    3. '   ' → logprob: -3.4113497734069824
    4. ' #' → logprob: -7.786349773406982
    5. ' if' → logprob: -7.786349773406982
    6. '
' → logprob: -12.536349296569824
    7. ' ' → logprob: -13.536349296569824
    8. '  ' → logprob: -14.036349296569824
    9. 'def' → logprob: -14.411349296569824
    10. 'return' → logprob: -14.536349296569824

Token 641: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.00016766376211307943
    2. 'ifer' → logprob: -9.250167846679688
    3. 'IFIER' → logprob: -10.125167846679688
    4. 'if' → logprob: -10.750167846679688
    5. 'ifie' → logprob: -12.375167846679688
    6. 'ifiez' → logprob: -12.750167846679688
    7. '#' → logprob: -14.375167846679688
    8. 'f' → logprob: -14.500167846679688
    9. 'ifi' → logprob: -14.750167846679688
    10. 'ier' → logprob: -15.000167846679688

Token 642: ' la' (ID: 557)
  Prédit: ' marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marks' → logprob: -0.4557614326477051
    2. '   ' → logprob: -1.580761432647705
    3. ' la' → logprob: -2.205761432647705
    4. 'marks' → logprob: -3.205761432647705
    5. ' les' → logprob: -5.205761432647705
    6. ' the' → logprob: -6.830761432647705
    7. ' if' → logprob: -7.205761432647705
    8. '#' → logprob: -7.330761432647705
    9. 'la' → logprob: -7.830761432647705
    10. '[' → logprob: -7.830761432647705

Token 643: ' diagon' (ID: 146014)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6591633558273315
    2. '0' → logprob: -0.7841633558273315
    3. 'marks' → logprob: -4.284163475036621
    4. 'di' → logprob: -5.409163475036621
    5. ' ' → logprob: -5.659163475036621
    6. ' marks' → logprob: -5.909163475036621
    7. ' diagon' → logprob: -8.284163475036621
    8. 'secondary' → logprob: -8.534163475036621
    9. ' [' → logprob: -8.659163475036621
    10. '(' → logprob: -8.784163475036621

Token 644: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.001035787514410913
    2. '[' → logprob: -7.001035690307617
    3. 'al' → logprob: -9.001035690307617
    4. '0' → logprob: -15.001035690307617
    5. '1' → logprob: -16.001035690307617
    6. '[
' → logprob: -16.001035690307617
    7. '(' → logprob: -16.126035690307617
    8. '{' → logprob: -16.251035690307617
    9. '[(' → logprob: -16.626035690307617
    10. 'ales' → logprob: -16.751035690307617

Token 645: ' secondaire' (ID: 166050)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022493133321404457
    2. '0' → logprob: -4.022493362426758
    3. '2' → logprob: -5.522493362426758
    4. '1' → logprob: -9.022493362426758
    5. 'principal' → logprob: -9.397493362426758
    6. '   ' → logprob: -9.647493362426758
    7. ' ' → logprob: -10.147493362426758
    8. ' [' → logprob: -10.897493362426758
    9. '
' → logprob: -12.647493362426758
    10. '#' → logprob: -12.772493362426758

Token 646: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0172562338411808
    2. 'if' → logprob: -4.517256259918213
    3. ' if' → logprob: -5.267256259918213
    4. '[' → logprob: -7.517256259918213
    5. '(' → logprob: -7.892256259918213
    6. '
' → logprob: -10.267255783081055
    7. ':
' → logprob: -11.392255783081055
    8. '```' → logprob: -11.392255783081055
    9. '0' → logprob: -11.642255783081055
    10. ',' → logprob: -11.892255783081055

Token 647: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08928599208593369
    2. 'if' → logprob: -2.8392860889434814
    3. '[' → logprob: -4.089285850524902
    4. ' if' → logprob: -4.589285850524902
    5. '
' → logprob: -11.589285850524902
    6. '(' → logprob: -11.964285850524902
    7. '```' → logprob: -12.214285850524902
    8. ',' → logprob: -12.589285850524902
    9. ' [' → logprob: -13.089285850524902
    10. '	if' → logprob: -13.464285850524902

Token 648: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6947373151779175
    2. ' if' → logprob: -0.6947373151779175
    3. '   ' → logprob: -6.444737434387207
    4. '	if' → logprob: -16.56973648071289
    5. ' ' → logprob: -17.19473648071289
    6. 'If' → logprob: -19.31973648071289
    7. '
' → logprob: -19.56973648071289
    8. '(' → logprob: -19.56973648071289
    9. '```' → logprob: -19.56973648071289
    10. '[' → logprob: -20.56973648071289

Token 649: ' marks' (ID: 22891)
  Prédit: ' marks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marks' → logprob: -0.07889220863580704
    2. 'marks' → logprob: -2.578892230987549
    3. 'm' → logprob: -14.20389175415039
    4. '_marks' → logprob: -14.32889175415039
    5. 'mark' → logprob: -14.70389175415039
    6. '   ' → logprob: -16.32889175415039
    7. 'marked' → logprob: -16.45389175415039
    8. ' (' → logprob: -16.57889175415039
    9. 'Marks' → logprob: -16.57889175415039
    10. '	m' → logprob: -16.70389175415039

Token 650: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. '   ' → logprob: -14.750000953674316
    3. ' [' → logprob: -15.375000953674316
    4. '0' → logprob: -15.750000953674316
    5. '```' → logprob: -16.875
    6. '[
' → logprob: -17.125
    7. ' ' → logprob: -17.375
    8. '==' → logprob: -17.625
    9. '[[' → logprob: -17.875
    10. '
' → logprob: -18.875

Token 651: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.250003814697266
    3. '2' → logprob: -13.375003814697266
    4. ' ' → logprob: -16.250003814697266
    5. '```' → logprob: -16.250003814697266
    6. '
' → logprob: -17.500003814697266
    7. '۰' → logprob: -18.375003814697266
    8. '1' → logprob: -18.812503814697266
    9. '``' → logprob: -19.187503814697266
    10. '   ' → logprob: -20.250003814697266

Token 652: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004080658778548241
    2. '[' → logprob: -5.504080772399902
    3. ']' → logprob: -14.254080772399902
    4. '}[' → logprob: -14.504080772399902
    5. ' ][' → logprob: -14.879080772399902
    6. '>[' → logprob: -15.254080772399902
    7. '0' → logprob: -16.004079818725586
    8. '```' → logprob: -16.129079818725586
    9. ']][' → logprob: -16.504079818725586
    10. ')[' → logprob: -17.254079818725586

Token 653: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '
' → logprob: -18.25
    4. '```' → logprob: -18.375
    5. '۲' → logprob: -19.5
    6. '２' → logprob: -19.75
    7. '२' → logprob: -21.125
    8. '' → logprob: -21.25
    9. '২' → logprob: -22.0
    10. '[' → logprob: -22.125

Token 654: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018411019118502736
    2. ']+' → logprob: -8.750184059143066
    3. ' ]' → logprob: -10.625184059143066
    4. '[' → logprob: -14.000184059143066
    5. ']
' → logprob: -15.250184059143066
    6. '+' → logprob: -16.875185012817383
    7. '']' → logprob: -17.125185012817383
    8. '][' → logprob: -17.250185012817383
    9. ')' → logprob: -17.625185012817383
    10. '"]' → logprob: -17.875185012817383

Token 655: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2014203518629074
    2. '+' → logprob: -1.7014203071594238
    3. ']' → logprob: -12.576420783996582
    4. '[' → logprob: -13.201420783996582
    5. ']+' → logprob: -13.701420783996582
    6. '```' → logprob: -15.451420783996582
    7. ' ' → logprob: -15.951420783996582
    8. '>' → logprob: -16.451419830322266
    9. '+
' → logprob: -17.076419830322266
    10. ')' → logprob: -17.076419830322266

Token 656: ' marks' (ID: 22891)
  Prédit: ' marks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marks' → logprob: -0.11282368004322052
    2. 'marks' → logprob: -2.237823724746704
    3. '_marks' → logprob: -14.737823486328125
    4. 'mark' → logprob: -15.487823486328125
    5. ' ' → logprob: -15.612823486328125
    6. 'm' → logprob: -16.112823486328125
    7. '1' → logprob: -16.862823486328125
    8. '0' → logprob: -16.987823486328125
    9. 'Marks' → logprob: -17.112823486328125
    10. '```' → logprob: -17.362823486328125

Token 657: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '][' → logprob: -14.000000953674316
    3. '1' → logprob: -15.250000953674316
    4. '```' → logprob: -16.250001907348633
    5. ' [' → logprob: -16.500001907348633
    6. '0' → logprob: -17.500001907348633
    7. '>[' → logprob: -17.625001907348633
    8. '[
' → logprob: -18.000001907348633
    9. '[[' → logprob: -18.500001907348633
    10. '...[' → logprob: -18.750001907348633

Token 658: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.25
    3. ' ' → logprob: -17.875
    4. '```' → logprob: -18.625
    5. '
' → logprob: -19.25
    6. '   ' → logprob: -20.0
    7. '۱' → logprob: -20.125
    8. '2' → logprob: -20.375
    9. '0' → logprob: -20.875
    10. '১' → logprob: -21.6875

Token 659: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3488326370716095
    2. '[' → logprob: -1.223832607269287
    3. '1' → logprob: -8.723833084106445
    4. '}[' → logprob: -8.848833084106445
    5. '>[' → logprob: -10.098833084106445
    6. ']' → logprob: -11.473833084106445
    7. ')[' → logprob: -11.473833084106445
    8. '"][' → logprob: -12.223833084106445
    9. '```' → logprob: -12.223833084106445
    10. ''][' → logprob: -12.223833084106445

Token 660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '
' → logprob: -18.125
    3. '۱' → logprob: -19.25
    4. '```' → logprob: -19.5
    5. ' ' → logprob: -20.875
    6. '১' → logprob: -21.25
    7. '१' → logprob: -21.375
    8. '' → logprob: -21.625
    9. '１' → logprob: -21.625
    10. '[' → logprob: -22.0

Token 661: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00030185774085111916
    2. ']+' → logprob: -8.5003023147583
    3. '+' → logprob: -9.3753023147583
    4. '[' → logprob: -11.3753023147583
    5. '][' → logprob: -14.2503023147583
    6. '0' → logprob: -15.0003023147583
    7. ' +' → logprob: -15.0003023147583
    8. ' ]' → logprob: -15.3753023147583
    9. '```' → logprob: -15.7503023147583
    10. '>' → logprob: -16.125301361083984

Token 662: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5763940811157227
    2. ' +' → logprob: -0.8263940811157227
    3. '[' → logprob: -7.701394081115723
    4. '+[' → logprob: -13.201394081115723
    5. '```' → logprob: -15.576394081115723
    6. ' [' → logprob: -16.201393127441406
    7. '+
' → logprob: -17.076393127441406
    8. ' ' → logprob: -17.201393127441406
    9. ']' → logprob: -17.451393127441406
    10. '＋' → logprob: -17.451393127441406

Token 663: ' marks' (ID: 22891)
  Prédit: 'marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marks' → logprob: -0.25193020701408386
    2. ' marks' → logprob: -1.5019302368164062
    3. 'mark' → logprob: -14.376930236816406
    4. '_marks' → logprob: -14.876930236816406
    5. 'marked' → logprob: -17.126930236816406
    6. 'Marks' → logprob: -17.126930236816406
    7. '```' → logprob: -17.751930236816406
    8. 'm' → logprob: -17.876930236816406
    9. '   ' → logprob: -18.251930236816406
    10. '	m' → logprob: -19.126930236816406

Token 664: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.758300438988954e-05
    2. '][' → logprob: -9.250097274780273
    3. '>[' → logprob: -14.625097274780273
    4. '}[' → logprob: -15.250097274780273
    5. ' [' → logprob: -15.500097274780273
    6. '_[' → logprob: -15.500097274780273
    7. '```' → logprob: -15.875097274780273
    8. '0' → logprob: -16.500097274780273
    9. '![' → logprob: -17.125097274780273
    10. '2' → logprob: -17.375097274780273

Token 665: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25202441215515137
    2. '0' → logprob: -1.5020244121551514
    3. '[' → logprob: -9.50202465057373
    4. '1' → logprob: -11.12702465057373
    5. ' ' → logprob: -12.75202465057373
    6. '```' → logprob: -13.25202465057373
    7. '3' → logprob: -15.00202465057373
    8. '7' → logprob: -15.37702465057373
    9. '5' → logprob: -15.62702465057373
    10. '][' → logprob: -16.002023696899414

Token 666: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12695373594760895
    2. '[' → logprob: -2.1269538402557373
    3. '}[' → logprob: -11.251954078674316
    4. '```' → logprob: -12.626954078674316
    5. '>[' → logprob: -12.751954078674316
    6. ']' → logprob: -12.751954078674316
    7. '"][' → logprob: -13.626954078674316
    8. '   ' → logprob: -14.501954078674316
    9. ''][' → logprob: -14.751954078674316
    10. '0' → logprob: -14.876954078674316

Token 667: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '2' → logprob: -18.75
    3. '```' → logprob: -19.0
    4. '۰' → logprob: -19.125
    5. '[' → logprob: -19.5
    6. ' ' → logprob: -20.75
    7. '
' → logprob: -21.25
    8. '０' → logprob: -21.875
    9. '1' → logprob: -22.25
    10. '   ' → logprob: -22.25

Token 668: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.069664333248511e-05
    2. ']==' → logprob: -10.875020980834961
    3. ' ]' → logprob: -13.500020980834961
    4. '']' → logprob: -16.00002098083496
    5. ']
' → logprob: -17.62502098083496
    6. '==' → logprob: -17.62502098083496
    7. '```' → logprob: -17.62502098083496
    8. ')' → logprob: -18.37502098083496
    9. '"]' → logprob: -18.62502098083496
    10. '[' → logprob: -18.75002098083496

Token 669: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07911736518144608
    2. '==' → logprob: -2.5791172981262207
    3. ']==' → logprob: -9.454117774963379
    4. ']' → logprob: -9.704117774963379
    5. ' ' → logprob: -9.704117774963379
    6. ')' → logprob: -11.079117774963379
    7. ')==' → logprob: -12.204117774963379
    8. '```' → logprob: -12.954117774963379
    9. '[' → logprob: -13.579117774963379
    10. '=' → logprob: -14.329117774963379

Token 670: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00038038729690015316
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.375380516052246
    4. '```' → logprob: -17.25037956237793
    5. '  ' → logprob: -17.87537956237793
    6. '۳' → logprob: -18.50037956237793
    7. '2' → logprob: -18.75037956237793
    8. '
' → logprob: -18.93787956237793
    9. '[' → logprob: -19.00037956237793
    10. '３' → logprob: -19.00037956237793

Token 671: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.625001907348633
    4. '۳' → logprob: -18.625001907348633
    5. '```' → logprob: -19.375001907348633
    6. '３' → logprob: -19.625001907348633
    7. '  ' → logprob: -20.500001907348633
    8. ' three' → logprob: -20.500001907348633
    9. '৩' → logprob: -20.687501907348633
    10. '[' → logprob: -21.062501907348633

Token 672: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.300284206867218
    2. ':
' → logprob: -1.4252841472625732
    3. ':return' → logprob: -4.800284385681152
    4. '       ' → logprob: -5.175284385681152
    5. '   ' → logprob: -5.300284385681152
    6. 'return' → logprob: -10.800284385681152
    7. ' return' → logprob: -11.050284385681152
    8. '==' → logprob: -11.550284385681152
    9. '  ' → logprob: -11.925284385681152
    10. ' :' → logprob: -12.050284385681152

Token 673: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007584078120999038
    2. '   ' → logprob: -7.250758171081543
    3. ' return' → logprob: -10.375758171081543
    4. 'return' → logprob: -11.375758171081543
    5. '
' → logprob: -12.375758171081543
    6. ':
' → logprob: -14.375758171081543
    7. ':return' → logprob: -14.750758171081543
    8. ':' → logprob: -15.750758171081543
    9. '	return' → logprob: -15.875758171081543
    10. '           ' → logprob: -15.875758171081543

Token 674: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16031531989574432
    2. ' return' → logprob: -1.9103152751922607
    3. '   ' → logprob: -9.66031551361084
    4. '       ' → logprob: -10.78531551361084
    5. 'True' → logprob: -13.03531551361084
    6. '           ' → logprob: -13.66031551361084
    7. ' True' → logprob: -13.66031551361084
    8. '
' → logprob: -13.91031551361084
    9. '	return' → logprob: -14.41031551361084
    10. ' ' → logprob: -15.16031551361084

Token 675: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0024756586644798517
    2. ' True' → logprob: -6.002475738525391
    3. '(True' → logprob: -20.25247573852539
    4. 'False' → logprob: -20.87747573852539
    5. '=True' → logprob: -21.87747573852539
    6. 'true' → logprob: -23.87747573852539
    7. '1' → logprob: -24.37747573852539
    8. 'Yes' → logprob: -24.62747573852539
    9. 'Tr' → logprob: -25.25247573852539
    10. '_true' → logprob: -25.25247573852539

Token 676: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02367866039276123
    2. '
' → logprob: -3.773678779602051
    3. '    
' → logprob: -7.773678779602051
    4. 'return' → logprob: -11.89867877960205
    5. ' return' → logprob: -13.77367877960205
    6. '  
' → logprob: -14.02367877960205
    7. '	return' → logprob: -14.14867877960205
    8. '```' → logprob: -14.14867877960205
    9. '        
' → logprob: -14.52367877960205
    10. '
' → logprob: -14.52367877960205

Token 677: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001577698567416519
    2. 'return' → logprob: -9.500157356262207
    3. '
' → logprob: -10.000157356262207
    4. ' return' → logprob: -10.750157356262207
    5. '    
' → logprob: -11.500157356262207
    6. '	return' → logprob: -12.500157356262207
    7. '```' → logprob: -13.375157356262207
    8. 'False' → logprob: -15.500157356262207
    9. '       ' → logprob: -15.750157356262207
    10. '  ' → logprob: -16.000158309936523

Token 678: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4742775559425354
    2. '   ' → logprob: -0.9742775559425354
    3. ' return' → logprob: -8.97427749633789
    4. 'False' → logprob: -9.84927749633789
    5. '
' → logprob: -11.22427749633789
    6. '```' → logprob: -12.72427749633789
    7. '    
' → logprob: -12.97427749633789
    8. '	return' → logprob: -13.22427749633789
    9. 'false' → logprob: -14.84927749633789
    10. '  ' → logprob: -15.97427749633789

Token 679: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12692810595035553
    2. ' False' → logprob: -2.1269280910491943
    3. '(False' → logprob: -21.501928329467773
    4. '_false' → logprob: -23.001928329467773
    5. 'True' → logprob: -23.376928329467773
    6. ' false' → logprob: -23.876928329467773
    7. 'false' → logprob: -24.001928329467773
    8. '=False' → logprob: -24.001928329467773
    9. ' True' → logprob: -25.376928329467773
    10. '.False' → logprob: -26.126928329467773

Token 680: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.3822154111694545e-05
    2. 'if' → logprob: -11.000043869018555
    3. '
' → logprob: -11.125043869018555
    4. '```' → logprob: -11.500043869018555
    5. '  
' → logprob: -14.125043869018555
    6. '<|end|>' → logprob: -14.375043869018555
    7. '

' → logprob: -15.250043869018555
    8. '\' → logprob: -15.500043869018555
    9. '    
' → logprob: -15.750043869018555
    10. '#' → logprob: -16.375043869018555

Token 681: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003179975086823106
    2. 'if' → logprob: -5.753180027008057
    3. '#' → logprob: -13.628179550170898
    4. '```' → logprob: -13.878179550170898
    5. ' def' → logprob: -17.0031795501709
    6. '
' → logprob: -17.1281795501709
    7. '  
' → logprob: -17.6281795501709
    8. ' if' → logprob: -17.8781795501709
    9. 'print' → logprob: -18.2531795501709
    10. 'import' → logprob: -18.5031795501709

Token 682: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5768635869026184
    2. ' main' → logprob: -0.8268635869026184
    3. 'def' → logprob: -7.076863765716553
    4. ' check' → logprob: -10.826863288879395
    5. 'check' → logprob: -11.076863288879395
    6. ' def' → logprob: -11.201863288879395
    7. 'simulate' → logprob: -11.576863288879395
    8. ' play' → logprob: -11.826863288879395
    9. 'play' → logprob: -11.826863288879395
    10. 'b' → logprob: -12.576863288879395

Token 683: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.558399319241289e-05
    2. '():
' → logprob: -11.375025749206543
    3. ' ():' → logprob: -11.375025749206543
    4. '_' → logprob: -13.375025749206543
    5. '()' → logprob: -14.000025749206543
    6. '():
' → logprob: -16.500024795532227
    7. '(' → logprob: -16.625024795532227
    8. '():

' → logprob: -17.875024795532227
    9. '().' → logprob: -18.625024795532227
    10. 'def' → logprob: -18.750024795532227

Token 684: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002491807099431753
    2. 'b' → logprob: -8.375248908996582
    3. '    
' → logprob: -11.875248908996582
    4. '
' → logprob: -12.375248908996582
    5. '```' → logprob: -12.750248908996582
    6. '(b' → logprob: -13.375248908996582
    7. '	b' → logprob: -13.500248908996582
    8. '   ' → logprob: -15.000248908996582
    9. 'import' → logprob: -15.500248908996582
    10. '       ' → logprob: -15.750248908996582

Token 685: ' """
' (ID: 7037)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09922784566879272
    2. '   ' → logprob: -2.4742279052734375
    3. ' bingo' → logprob: -4.5992279052734375
    4. '```' → logprob: -9.224227905273438
    5. ' b' → logprob: -10.224227905273438
    6. '	b' → logprob: -11.099227905273438
    7. '    
' → logprob: -11.599227905273438
    8. '
' → logprob: -12.349227905273438
    9. '#' → logprob: -12.724227905273438
    10. 'bing' → logprob: -13.349227905273438

Token 686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5266370177268982
    2. 'b' → logprob: -0.9016370177268982
    3. '#' → logprob: -6.401637077331543
    4. '"""
' → logprob: -6.776637077331543
    5. 'card' → logprob: -8.276637077331543
    6. '"""' → logprob: -8.526637077331543
    7. '"' → logprob: -9.901637077331543
    8. 'def' → logprob: -10.401637077331543
    9. '  ' → logprob: -10.651637077331543
    10. '    
' → logprob: -10.776637077331543

Token 687: ' Fonction' (ID: 189149)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18884071707725525
    2. '   ' → logprob: -2.313840627670288
    3. ' bingo' → logprob: -3.188840627670288
    4. '#' → logprob: -4.063840866088867
    5. 'card' → logprob: -5.563840866088867
    6. ' b' → logprob: -5.938840866088867
    7. ' card' → logprob: -6.063840866088867
    8. 'print' → logprob: -6.813840866088867
    9. 'Lire' → logprob: -6.938840866088867
    10. 'def' → logprob: -7.313840866088867

Token 688: ' principale' (ID: 68926)
  Prédit: ' principale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' principale' → logprob: -0.46913644671440125
    2. ' main' → logprob: -1.9691364765167236
    3. '():
' → logprob: -1.9691364765167236
    4. '()' → logprob: -2.8441364765167236
    5. '():' → logprob: -3.8441364765167236
    6. ' de' → logprob: -5.5941362380981445
    7. 'def' → logprob: -6.0941362380981445
    8. ' principal' → logprob: -6.2191362380981445
    9. 'main' → logprob: -6.3441362380981445
    10. '_main' → logprob: -6.5941362380981445

Token 689: ' qui' (ID: 2780)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5243215560913086
    2. '():' → logprob: -0.8993215560913086
    3. 'def' → logprob: -7.899321556091309
    4. '   ' → logprob: -8.024321556091309
    5. '()' → logprob: -8.149321556091309
    6. ':' → logprob: -8.649321556091309
    7. ':
' → logprob: -11.149321556091309
    8. '():
' → logprob: -11.399321556091309
    9. '():

' → logprob: -12.649321556091309
    10. '();' → logprob: -13.899321556091309

Token 690: ' orch' (ID: 64344)
  Prédit: ' lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lit' → logprob: -0.4363272786140442
    2. '   ' → logprob: -2.0613272190093994
    3. 'def' → logprob: -2.3113272190093994
    4. ' appelle' → logprob: -3.1863272190093994
    5. ' lance' → logprob: -3.9363272190093994
    6. ' démar' → logprob: -4.6863274574279785
    7. 'import' → logprob: -5.1863274574279785
    8. ' bingo' → logprob: -5.3113274574279785
    9. ':' → logprob: -5.4363274574279785
    10. ' importe' → logprob: -5.6863274574279785

Token 691: 'estre' (ID: 39655)
  Prédit: 'estre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'estre' → logprob: -1.0206720617134124e-05
    2. 'estra' → logprob: -11.87501049041748
    3. 'estr' → logprob: -12.75001049041748
    4. 'es' → logprob: -15.87501049041748
    5. 'este' → logprob: -16.000009536743164
    6. 'est' → logprob: -17.000009536743164
    7. 'e' → logprob: -17.625009536743164
    8. 'estres' → logprob: -18.125009536743164
    9. 'è' → logprob: -18.500009536743164
    10. 'é' → logprob: -18.875009536743164

Token 692: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3532424867153168
    2. ' l' → logprob: -1.8532425165176392
    3. ' le' → logprob: -2.1032423973083496
    4. ' the' → logprob: -4.35324239730835
    5. 'l' → logprob: -5.97824239730835
    6. '   ' → logprob: -6.47824239730835
    7. ' les' → logprob: -7.10324239730835
    8. 'the' → logprob: -7.85324239730835
    9. 'le' → logprob: -8.103242874145508
    10. '()' → logprob: -9.353242874145508

Token 693: ' sais' (ID: 30010)
  Prédit: 'lecture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lecture' → logprob: -0.030415967106819153
    2. ' lecture' → logprob: -3.6554160118103027
    3. 'suite' → logprob: -6.030416011810303
    4. 'lect' → logprob: -7.280416011810303
    5. 'import' → logprob: -8.655415534973145
    6. 'ex' → logprob: -8.655415534973145
    7. 'execution' → logprob: -9.030415534973145
    8. 'log' → logprob: -9.780415534973145
    9. 'jeu' → logprob: -9.780415534973145
    10. 'sé' → logprob: -9.905415534973145

Token 694: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.2858370840549469
    2. 'is' → logprob: -1.9108370542526245
    3. 'sie' → logprob: -2.660837173461914
    4. 'isie' → logprob: -3.535837173461914
    5. 'nie' → logprob: -7.910837173461914
    6. 'ise' → logprob: -8.660837173461914
    7. 'issie' → logprob: -9.035837173461914
    8. 'rie' → logprob: -9.160837173461914
    9. '```' → logprob: -9.160837173461914
    10. 'le' → logprob: -9.410837173461914

Token 695: ' des' (ID: 731)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.646873950958252
    2. '   ' → logprob: -0.771873950958252
    3. ' et' → logprob: -5.271873950958252
    4. ' de' → logprob: -5.646873950958252
    5. ' des' → logprob: -6.271873950958252
    6. ',
' → logprob: -6.396873950958252
    7. ' ,' → logprob: -7.646873950958252
    8. ' du' → logprob: -7.771873950958252
    9. ' ' → logprob: -7.896873950958252
    10. 'de' → logprob: -8.396873474121094

Token 696: ' données' (ID: 30580)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023387335240840912
    2. 'cart' → logprob: -5.148387432098389
    3. ' bingo' → logprob: -5.398387432098389
    4. ' cartes' → logprob: -5.523387432098389
    5. ' données' → logprob: -5.773387432098389
    6. '_' → logprob: -6.273387432098389
    7. '_b' → logprob: -6.523387432098389
    8. 'd' → logprob: -6.898387432098389
    9. 'inputs' → logprob: -7.773387432098389
    10. 'don' → logprob: -8.64838695526123

Token 697: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11573197692632675
    2. '   ' → logprob: -2.240731954574585
    3. ' et' → logprob: -6.365732192993164
    4. ' ,' → logprob: -7.365732192993164
    5. ',
' → logprob: -8.115732192993164
    6. ' ' → logprob: -9.365732192993164
    7. ' de' → logprob: -10.115732192993164
    8. '.' → logprob: -10.240732192993164
    9. '    
' → logprob: -10.865732192993164
    10. '  ' → logprob: -11.740732192993164

Token 698: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05873215198516846
    2. ' bingo' → logprob: -3.183732032775879
    3. ' la' → logprob: -4.933732032775879
    4. 'b' → logprob: -5.183732032775879
    5. '```' → logprob: -6.808732032775879
    6. '    
' → logprob: -7.558732032775879
    7. ' card' → logprob: -8.683732032775879
    8. ' le' → logprob: -9.058732032775879
    9. ' b' → logprob: -9.058732032775879
    10. 'def' → logprob: -9.308732032775879

Token 699: ' mar' (ID: 2674)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0012433248339220881
    2. ' bingo' → logprob: -7.0012431144714355
    3. '   ' → logprob: -9.501243591308594
    4. '#' → logprob: -9.626243591308594
    5. ' b' → logprob: -10.126243591308594
    6. 'card' → logprob: -10.251243591308594
    7. '```' → logprob: -10.251243591308594
    8. '"""
' → logprob: -10.626243591308594
    9. 'import' → logprob: -11.501243591308594
    10. 'mark' → logprob: -11.501243591308594

Token 700: 'qu' (ID: 351)
  Prédit: 'qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.0006651374278590083
    2. 'q' → logprob: -8.000664710998535
    3. 'que' → logprob: -8.125664710998535
    4. 'k' → logprob: -10.625664710998535
    5. 'quer' → logprob: -12.250664710998535
    6. 'qua' → logprob: -13.500664710998535
    7. '```' → logprob: -13.500664710998535
    8. '   ' → logprob: -15.000664710998535
    9. 'quait' → logprob: -15.375664710998535
    10. '#' → logprob: -15.500664710998535

Token 701: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.023607997223734856
    2. 'e' → logprob: -3.7736079692840576
    3. 'u' → logprob: -8.023608207702637
    4. 'ue' → logprob: -11.148608207702637
    5. 'ing' → logprob: -11.398608207702637
    6. 'er' → logprob: -13.148608207702637
    7. ' age' → logprob: -13.273608207702637
    8. 'ement' → logprob: -13.773608207702637
    9. '```' → logprob: -14.023608207702637
    10. 'eur' → logprob: -14.273608207702637

Token 702: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5332908630371094
    2. ',' → logprob: -1.6582908630371094
    3. ' des' → logprob: -2.5332908630371094
    4. ' de' → logprob: -2.7832908630371094
    5. ' et' → logprob: -2.7832908630371094
    6. 'de' → logprob: -5.283290863037109
    7. ' ' → logprob: -6.033290863037109
    8. 'et' → logprob: -6.033290863037109
    9. 'des' → logprob: -6.158290863037109
    10. 'b' → logprob: -6.408290863037109

Token 703: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.11636291444301605
    2. ' l' → logprob: -2.8663628101348877
    3. 'la' → logprob: -3.3663628101348877
    4. 'l' → logprob: -4.116363048553467
    5. ' le' → logprob: -6.741363048553467
    6. 'le' → logprob: -7.866363048553467
    7. 'v' → logprob: -8.116362571716309
    8. '   ' → logprob: -9.366362571716309
    9. ' the' → logprob: -10.366362571716309
    10. ' vér' → logprob: -10.366362571716309

Token 704: ' dé' (ID: 2393)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.05849797651171684
    2. 'dé' → logprob: -3.683497905731201
    3. 'validation' → logprob: -3.933497905731201
    4. 'verification' → logprob: -4.683497905731201
    5. 'print' → logprob: -6.808497905731201
    6. ' vér' → logprob: -7.933497905731201
    7. 'vé' → logprob: -8.05849838256836
    8. 'rés' → logprob: -8.18349838256836
    9. 'b' → logprob: -9.05849838256836
    10. 'ver' → logprob: -9.18349838256836

Token 705: 'tection' (ID: 90592)
  Prédit: 'tection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tection' → logprob: -0.001085566938854754
    2. 'termination' → logprob: -7.0010857582092285
    3. 'cision' → logprob: -9.50108528137207
    4. '
' → logprob: -10.87608528137207
    5. 'tect' → logprob: -11.25108528137207
    6. 'claration' → logprob: -11.50108528137207
    7. '``' → logprob: -11.62608528137207
    8. 'duction' → logprob: -11.75108528137207
    9. 'c' → logprob: -12.12608528137207
    10. 'tention' → logprob: -12.25108528137207

Token 706: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.39713752269744873
    2. '   ' → logprob: -1.6471375226974487
    3. ' de' → logprob: -2.5221376419067383
    4. ' des' → logprob: -3.6471376419067383
    5. 'du' → logprob: -4.647137641906738
    6. ' d' → logprob: -5.022137641906738
    7. ' ' → logprob: -5.772137641906738
    8. 'de' → logprob: -5.897137641906738
    9. '<|end|>' → logprob: -6.397137641906738
    10. 'd' → logprob: -6.772137641906738

Token 707: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009476040489971638
    2. ' bingo' → logprob: -4.759476184844971
    3. 'B' → logprob: -7.259476184844971
    4. ' b' → logprob: -9.259475708007812
    5. ' Bingo' → logprob: -10.384475708007812
    6. 'bing' → logprob: -11.384475708007812
    7. ' B' → logprob: -12.009475708007812
    8. '```' → logprob: -12.009475708007812
    9. '
' → logprob: -13.259475708007812
    10. 'result' → logprob: -13.884475708007812

Token 708: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7743518352508545
    2. '():' → logprob: -0.7743518352508545
    3. ':' → logprob: -2.7743518352508545
    4. '.' → logprob: -4.774352073669434
    5. '():
' → logprob: -5.899352073669434
    6. '()' → logprob: -6.024352073669434
    7. '):' → logprob: -6.774352073669434
    8. ',' → logprob: -7.524352073669434
    9. ':
' → logprob: -9.399352073669434
    10. '```' → logprob: -10.399352073669434

Token 709: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0161068607121706
    2. '
' → logprob: -4.266107082366943
    3. '    
' → logprob: -6.516107082366943
    4. 'b' → logprob: -8.766106605529785
    5. '  
' → logprob: -9.641106605529785
    6. '```' → logprob: -9.766106605529785
    7. '\' → logprob: -9.891106605529785
    8. ' 
' → logprob: -11.016106605529785
    9. '    ' → logprob: -11.141106605529785
    10. 'newline' → logprob: -11.141106605529785

Token 710: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001995489466935396
    2. '
' → logprob: -6.50199556350708
    3. '    
' → logprob: -8.001995086669922
    4. 'b' → logprob: -9.126995086669922
    5. '```' → logprob: -10.126995086669922
    6. '  
' → logprob: -12.376995086669922
    7. '    ' → logprob: -13.751995086669922
    8. '   
' → logprob: -13.876995086669922
    9. ' 
' → logprob: -14.001995086669922
    10. '  ' → logprob: -15.251995086669922

Token 711: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0022438697051256895
    2. 'ic' → logprob: -6.127243995666504
    3. 'fic' → logprob: -11.127243995666504
    4. '   ' → logprob: -11.377243995666504
    5. 'ich' → logprob: -12.002243995666504
    6. '
' → logprob: -12.002243995666504
    7. '#' → logprob: -12.502243995666504
    8. 'ichage' → logprob: -12.627243995666504
    9. '```' → logprob: -13.252243995666504
    10. 'che' → logprob: -13.252243995666504

Token 712: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.47645947337150574
    2. '(' → logprob: -0.9764595031738281
    3. '(
' → logprob: -6.476459503173828
    4. '('' → logprob: -7.226459503173828
    5. '(""' → logprob: -10.601459503173828
    6. '()' → logprob: -10.976459503173828
    7. '"' → logprob: -10.976459503173828
    8. '(True' → logprob: -11.101459503173828
    9. '("""' → logprob: -11.101459503173828
    10. '("")' → logprob: -11.226459503173828

Token 713: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.01282558310776949
    2. 'B' → logprob: -4.7628254890441895
    3. 'YES' → logprob: -5.7628254890441895
    4. 'Oui' → logprob: -7.1378254890441895
    5. '有' → logprob: -9.012825965881348
    6. 'yes' → logprob: -10.012825965881348
    7. ' Yes' → logprob: -10.512825965881348
    8. 'OK' → logprob: -11.262825965881348
    9. '"' → logprob: -11.387825965881348
    10. 'P' → logprob: -11.637825965881348

Token 714: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.5451681974809617e-05
    2. '\n' → logprob: -12.125015258789062
    3. '```' → logprob: -12.625015258789062
    4. ' "' → logprob: -13.625015258789062
    5. '"""' → logprob: -13.625015258789062
    6. '")' → logprob: -14.000015258789062
    7. '   ' → logprob: -14.250015258789062
    8. 'Yes' → logprob: -14.375015258789062
    9. '"B' → logprob: -15.000015258789062
    10. ' ou' → logprob: -15.125015258789062

Token 715: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36152058839797974
    2. 'if' → logprob: -1.736520528793335
    3. ' if' → logprob: -2.361520528793335
    4. '
' → logprob: -3.986520528793335
    5. '```' → logprob: -5.111520767211914
    6. '<|end|>' → logprob: -5.361520767211914
    7. ' or' → logprob: -7.111520767211914
    8. '"""' → logprob: -7.111520767211914
    9. 'def' → logprob: -7.861520767211914
    10. ' ' → logprob: -7.986520767211914

Token 716: ' un' (ID: 537)
  Prédit: ' bingo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bingo' → logprob: -0.6384597420692444
    2. ' un' → logprob: -0.8884597420692444
    3. ' has' → logprob: -4.0134596824646
    4. ' a' → logprob: -4.3884596824646
    5. ' le' → logprob: -4.6384596824646
    6. ' il' → logprob: -5.1384596824646
    7. ' Bingo' → logprob: -5.6384596824646
    8. ' there' → logprob: -5.7634596824646
    9. ' une' → logprob: -5.8884596824646
    10. 'b' → logprob: -7.0134596824646

Token 717: ' Bingo' (ID: 83316)
  Prédit: ' bingo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bingo' → logprob: -0.3211366832256317
    2. ' Bingo' → logprob: -1.696136713027954
    3. 'B' → logprob: -2.821136713027954
    4. 'b' → logprob: -3.946136713027954
    5. ' B' → logprob: -4.821136474609375
    6. ' b' → logprob: -5.571136474609375
    7. ' ' → logprob: -8.571136474609375
    8. '_b' → logprob: -8.821136474609375
    9. ' ' → logprob: -9.696136474609375
    10. '```' → logprob: -10.321136474609375

Token 718: ' est' (ID: 893)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7169005274772644
    2. ' est' → logprob: -1.2169005870819092
    3. ' a' → logprob: -1.5919005870819092
    4. ' has' → logprob: -4.96690034866333
    5. 'a' → logprob: -6.84190034866333
    6. '"' → logprob: -7.09190034866333
    7. '!' → logprob: -7.59190034866333
    8. ' existe' → logprob: -7.71690034866333
    9. ' was' → logprob: -8.091900825500488
    10. ' ' → logprob: -8.091900825500488

Token 719: ' réalisé' (ID: 75085)
  Prédit: ' détect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' détect' → logprob: -0.671819269657135
    2. ' detected' → logprob: -1.2968192100524902
    3. 'det' → logprob: -2.2968192100524902
    4. 'detect' → logprob: -2.2968192100524902
    5. ' detect' → logprob: -5.04681921005249
    6. '_detect' → logprob: -5.54681921005249
    7. 'dé' → logprob: -5.92181921005249
    8. ' trouvé' → logprob: -7.04681921005249
    9. ' found' → logprob: -7.79681921005249
    10. ' obtenu' → logprob: -9.671819686889648

Token 720: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000157293034135364
    2. '   ' → logprob: -9.125157356262207
    3. ';' → logprob: -11.250157356262207
    4. '
' → logprob: -11.875157356262207
    5. '",' → logprob: -11.875157356262207
    6. ',
' → logprob: -12.000157356262207
    7. '"' → logprob: -12.375157356262207
    8. ' ,' → logprob: -12.375157356262207
    9. '\n' → logprob: -13.250157356262207
    10. '.' → logprob: -13.625157356262207

Token 721: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3234354257583618
    2. ' sinon' → logprob: -1.8234354257583618
    3. '   ' → logprob: -2.1984353065490723
    4. ' "' → logprob: -5.823435306549072
    5. '"\' → logprob: -8.32343578338623
    6. ',' → logprob: -9.07343578338623
    7. ' Sinon' → logprob: -9.07343578338623
    8. ' autrement' → logprob: -9.57343578338623
    9. '    ' → logprob: -9.94843578338623
    10. ' ' → logprob: -10.19843578338623

Token 722: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.014310882426798344
    2. ' No' → logprob: -4.264310836791992
    3. '"No' → logprob: -9.264310836791992
    4. 'Non' → logprob: -10.264310836791992
    5. '"' → logprob: -11.264310836791992
    6. ' ' → logprob: -13.139310836791992
    7. 'Yes' → logprob: -14.139310836791992
    8. 'NO' → logprob: -14.639310836791992
    9. ' "' → logprob: -15.014310836791992
    10. 'N' → logprob: -15.139310836791992

Token 723: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -7.465036105713807e-06
    2. '```' → logprob: -12.125007629394531
    3. '")' → logprob: -13.500007629394531
    4. '"""' → logprob: -15.125007629394531
    5. 'e' → logprob: -16.37500762939453
    6. '   ' → logprob: -16.62500762939453
    7. '"
' → logprob: -16.87500762939453
    8. '"No' → logprob: -17.00000762939453
    9. ' "' → logprob: -17.12500762939453
    10. ''' → logprob: -18.12500762939453

Token 724: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022938063368201256
    2. ' sinon' → logprob: -4.272938251495361
    3. '"' → logprob: -5.647938251495361
    4. '```' → logprob: -5.897938251495361
    5. ' autrement' → logprob: -7.397938251495361
    6. ' ' → logprob: -7.397938251495361
    7. ' otherwise' → logprob: -7.897938251495361
    8. 'else' → logprob: -8.772937774658203
    9. ' else' → logprob: -9.022937774658203
    10. '  ' → logprob: -9.272937774658203

Token 725: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.175506129860878
    2. '
' → logprob: -1.9255061149597168
    3. '.' → logprob: -5.050506114959717
    4. '    
' → logprob: -5.175506114959717
    5. ':' → logprob: -6.175506114959717
    6. '```' → logprob: -8.300506591796875
    7. 'def' → logprob: -8.800506591796875
    8. '<|end|>' → logprob: -9.050506591796875
    9. ')' → logprob: -9.300506591796875
    10. '  
' → logprob: -9.300506591796875

Token 726: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020408859476447105
    2. '
' → logprob: -4.020408630371094
    3. '    
' → logprob: -6.270408630371094
    4. '```' → logprob: -8.145408630371094
    5. '<|end|>' → logprob: -10.770408630371094
    6. '  
' → logprob: -11.020408630371094
    7. ')' → logprob: -11.645408630371094
    8. 'def' → logprob: -11.770408630371094
    9. ':' → logprob: -12.895408630371094
    10. '\n' → logprob: -13.020408630371094

Token 727: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00836941972374916
    2. 'b' → logprob: -4.883369445800781
    3. '
' → logprob: -7.508369445800781
    4. '    
' → logprob: -8.508369445800781
    5. '```' → logprob: -12.008369445800781
    6. '	b' → logprob: -13.383369445800781
    7. ' bingo' → logprob: -13.508369445800781
    8. '  
' → logprob: -14.383369445800781
    9. '   
' → logprob: -14.508369445800781
    10. '   ' → logprob: -15.008369445800781

Token 728: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008619185537099838
    2. 'b' → logprob: -4.75861930847168
    3. '```' → logprob: -13.25861930847168
    4. '	b' → logprob: -13.88361930847168
    5. ' bingo' → logprob: -14.00861930847168
    6. '   ' → logprob: -14.13361930847168
    7. '    
' → logprob: -15.88361930847168
    8. ' b' → logprob: -16.38361930847168
    9. '
' → logprob: -16.50861930847168
    10. '       ' → logprob: -17.63361930847168

Token 729: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008420837111771107
    2. '   ' → logprob: -4.883420944213867
    3. ' bingo' → logprob: -7.133420944213867
    4. ' b' → logprob: -12.008420944213867
    5. '```' → logprob: -12.758420944213867
    6. '	b' → logprob: -13.008420944213867
    7. '    
' → logprob: -13.758420944213867
    8. 'bing' → logprob: -13.883420944213867
    9. 'card' → logprob: -14.008420944213867
    10. '  ' → logprob: -14.383420944213867

Token 730: ' Lire' (ID: 57624)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0037617282941937447
    2. ' bingo' → logprob: -5.6287617683410645
    3. 'card' → logprob: -9.503761291503906
    4. '#' → logprob: -10.003761291503906
    5. '   ' → logprob: -11.253761291503906
    6. ' b' → logprob: -11.628761291503906
    7. 'bing' → logprob: -12.253761291503906
    8. '```' → logprob: -13.003761291503906
    9. 'def' → logprob: -13.128761291503906
    10. 'import' → logprob: -13.128761291503906

Token 731: ' la' (ID: 557)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09459366649389267
    2. ' bingo' → logprob: -2.7195937633514404
    3. '   ' → logprob: -3.7195937633514404
    4. ' b' → logprob: -9.71959400177002
    5. ' the' → logprob: -11.59459400177002
    6. ' bing' → logprob: -11.71959400177002
    7. '	b' → logprob: -11.84459400177002
    8. ' ' → logprob: -12.34459400177002
    9. '  ' → logprob: -12.34459400177002
    10. '```' → logprob: -12.34459400177002

Token 732: ' carte' (ID: 30276)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00030424181022681296
    2. ' bingo' → logprob: -8.125304222106934
    3. 'card' → logprob: -12.250304222106934
    4. '```' → logprob: -13.625304222106934
    5. ' b' → logprob: -14.000304222106934
    6. '   ' → logprob: -14.750304222106934
    7. 'bing' → logprob: -15.750304222106934
    8. 'import' → logprob: -16.00030517578125
    9. '#' → logprob: -16.00030517578125
    10. ' ' → logprob: -16.87530517578125

Token 733: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08958370983600616
    2. 'b' → logprob: -2.9645836353302
    3. '_b' → logprob: -4.089583873748779
    4. ' de' → logprob: -4.714583873748779
    5. ' bingo' → logprob: -4.964583873748779
    6. 'de' → logprob: -7.464583873748779
    7. '    
' → logprob: -8.714583396911621
    8. '	b' → logprob: -8.714583396911621
    9. '_' → logprob: -8.964583396911621
    10. ' b' → logprob: -9.464583396911621

Token 734: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.22544506192207336
    2. ' bingo' → logprob: -1.600445032119751
    3. ' b' → logprob: -10.850444793701172
    4. '```' → logprob: -12.975444793701172
    5. ' ' → logprob: -13.100444793701172
    6. '_b' → logprob: -13.225444793701172
    7. ' bing' → logprob: -13.350444793701172
    8. 'bing' → logprob: -13.600444793701172
    9. ' Bingo' → logprob: -13.600444793701172
    10. '_' → logprob: -14.975444793701172

Token 735: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04316749423742294
    2. 'b' → logprob: -3.1681675910949707
    3. ' bingo' → logprob: -8.793167114257812
    4. '```' → logprob: -11.918167114257812
    5. ' b' → logprob: -12.793167114257812
    6. '	b' → logprob: -13.043167114257812
    7. '    
' → logprob: -13.543167114257812
    8. '   ' → logprob: -13.543167114257812
    9. '
' → logprob: -14.543167114257812
    10. 'bing' → logprob: -15.293167114257812

Token 736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20161420106887817
    2. 'b' → logprob: -1.7016141414642334
    3. ' bingo' → logprob: -8.576614379882812
    4. ' b' → logprob: -12.326614379882812
    5. '	b' → logprob: -12.576614379882812
    6. '```' → logprob: -12.826614379882812
    7. '  ' → logprob: -14.201614379882812
    8. '   ' → logprob: -15.076614379882812
    9. ' ' → logprob: -15.326614379882812
    10. 'bing' → logprob: -15.826614379882812

Token 737: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006498866132460535
    2. ' bingo' → logprob: -7.625649929046631
    3. '   ' → logprob: -8.750649452209473
    4. 'card' → logprob: -12.875649452209473
    5. ' b' → logprob: -14.750649452209473
    6. 'bing' → logprob: -15.750649452209473
    7. '	b' → logprob: -16.50065040588379
    8. 'B' → logprob: -16.62565040588379
    9. '```' → logprob: -16.62565040588379
    10. '  ' → logprob: -16.75065040588379

Token 738: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -2.558399319241289e-05
    2. '_' → logprob: -10.750025749206543
    3. '_car' → logprob: -13.125025749206543
    4. '   ' → logprob: -13.625025749206543
    5. '_cart' → logprob: -15.250025749206543
    6. '_c' → logprob: -15.500025749206543
    7. 'card' → logprob: -15.500025749206543
    8. '_cards' → logprob: -16.000024795532227
    9. '_b' → logprob: -16.625024795532227
    10. ' _' → logprob: -16.750024795532227

Token 739: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004090274218469858
    2. '=' → logprob: -5.504090309143066
    3. '   ' → logprob: -11.379090309143066
    4. '()' → logprob: -16.00408935546875
    5. ' =
' → logprob: -16.00408935546875
    6. ' ' → logprob: -16.12908935546875
    7. ')' → logprob: -17.25408935546875
    8. '=b' → logprob: -17.62908935546875
    9. '	' → logprob: -17.87908935546875
    10. '  ' → logprob: -18.12908935546875

Token 740: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0031777136027812958
    2. ' read' → logprob: -5.753177642822266
    3. '	read' → logprob: -22.003177642822266
    4. '(read' → logprob: -23.378177642822266
    5. '.read' → logprob: -24.503177642822266
    6. '_read' → logprob: -25.878177642822266
    7. 'reading' → logprob: -26.128177642822266
    8. 'Read' → logprob: -26.378177642822266
    9. 'write' → logprob: -27.503177642822266
    10. 'reader' → logprob: -27.503177642822266

Token 741: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -8.864272967912257e-05
    2. '_' → logprob: -9.375088691711426
    3. 'b' → logprob: -12.500088691711426
    4. '_B' → logprob: -17.75008773803711
    5. ' _' → logprob: -18.37508773803711
    6. 'B' → logprob: -18.75008773803711
    7. ' ' → logprob: -18.75008773803711
    8. '_
' → logprob: -18.87508773803711
    9. ')_' → logprob: -19.00008773803711
    10. '(' → logprob: -19.37508773803711

Token 742: 'ingo' (ID: 14878)
  Prédit: 'ingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingo' → logprob: -4.203409844194539e-05
    2. '_b' → logprob: -11.000041961669922
    3. '_' → logprob: -11.125041961669922
    4. 'ing' → logprob: -12.375041961669922
    5. 'b' → logprob: -12.500041961669922
    6. 'inko' → logprob: -14.750041961669922
    7. 'i' → logprob: -15.000041961669922
    8. '   ' → logprob: -15.250041961669922
    9. '_ing' → logprob: -15.250041961669922
    10. ' bingo' → logprob: -15.250041961669922

Token 743: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -4.008129963040119e-06
    2. 'card' → logprob: -12.750003814697266
    3. '_' → logprob: -14.375003814697266
    4. '_car' → logprob: -16.250003814697266
    5. '_cards' → logprob: -16.375003814697266
    6. '_cart' → logprob: -16.500003814697266
    7. 'Card' → logprob: -16.875003814697266
    8. '_code' → logprob: -18.000003814697266
    9. ' card' → logprob: -19.125003814697266
    10. ' _' → logprob: -19.125003814697266

Token 744: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29942047595977783
    2. '
' → logprob: -1.4244204759597778
    3. 'called' → logprob: -4.424420356750488
    4. '    
' → logprob: -5.549420356750488
    5. ' called' → logprob: -6.299420356750488
    6. '  
' → logprob: -8.674420356750488
    7. '   
' → logprob: -9.424420356750488
    8. '_called' → logprob: -10.299420356750488
    9. ' 
' → logprob: -10.799420356750488
    10. '
' → logprob: -11.049420356750488

Token 745: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.618702232837677
    2. '
' → logprob: -1.3687021732330322
    3. 'called' → logprob: -1.7437021732330322
    4. ' called' → logprob: -3.6187021732330322
    5. '    
' → logprob: -5.618702411651611
    6. '```' → logprob: -6.743702411651611
    7. '   
' → logprob: -9.118701934814453
    8. '_called' → logprob: -9.368701934814453
    9. '  
' → logprob: -9.493701934814453
    10. '
' → logprob: -10.743701934814453

Token 746: ' #' (ID: 1069)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.034551866352558136
    2. '
' → logprob: -4.159552097320557
    3. '   ' → logprob: -4.159552097320557
    4. ' called' → logprob: -6.034552097320557
    5. '#' (adapté à ' #') → logprob: -8.534551620483398
    6. '```' → logprob: -9.534551620483398
    7. '    
' → logprob: -10.034551620483398
    8. '.called' → logprob: -12.284551620483398
    9. '-called' → logprob: -12.659551620483398
    10. '_called' → logprob: -12.659551620483398

Token 747: ' Lire' (ID: 57624)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'called' → logprob: -2.045823566731997e-05
    2. ' called' → logprob: -11.000020027160645
    3. 'N' → logprob: -13.250020027160645
    4. '   ' → logprob: -13.875020027160645
    5. '#' → logprob: -14.125020027160645
    6. 'call' → logprob: -16.37502098083496
    7. '.called' → logprob: -17.00002098083496
    8. 'for' → logprob: -17.37502098083496
    9. '```' → logprob: -17.37502098083496
    10. '-called' → logprob: -17.37502098083496

Token 748: ' les' (ID: 1341)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.2015051543712616
    2. ' called' → logprob: -1.701505184173584
    3. '_called' → logprob: -9.326504707336426
    4. ' the' → logprob: -14.201504707336426
    5. '   ' → logprob: -14.451504707336426
    6. '.called' → logprob: -14.451504707336426
    7. 'the' → logprob: -15.326504707336426
    8. 'appel' → logprob: -15.576504707336426
    9. ' appelé' → logprob: -15.701504707336426
    10. '-called' → logprob: -15.951504707336426

Token 749: ' num' (ID: 2269)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.002507047727704048
    2. '_called' → logprob: -6.002507209777832
    3. ' called' → logprob: -10.377507209777832
    4. '-called' → logprob: -16.252506256103516
    5. '.called' → logprob: -16.752506256103516
    6. 'Called' → logprob: -18.127506256103516
    7. 'cal' → logprob: -18.252506256103516
    8. '   ' → logprob: -18.752506256103516
    9. 'call' → logprob: -19.502506256103516
    10. 'known' → logprob: -19.627506256103516

Token 750: 'éros' (ID: 120888)
  Prédit: '_called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_called' → logprob: -0.016244331374764442
    2. 'called' → logprob: -4.641244411468506
    3. 'ber' → logprob: -5.766244411468506
    4. 'bered' → logprob: -6.016244411468506
    5. 'er' → logprob: -8.891243934631348
    6. '_numbers' → logprob: -9.016243934631348
    7. '_calls' → logprob: -9.391243934631348
    8. '   ' → logprob: -9.766243934631348
    9. '_b' → logprob: -10.016243934631348
    10. '_' → logprob: -10.141243934631348

Token 751: ' appel' (ID: 34642)
  Prédit: '_called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_called' → logprob: -0.151673823595047
    2. 'appel' → logprob: -2.2766737937927246
    3. '_app' → logprob: -4.401673793792725
    4. '_' → logprob: -4.651673793792725
    5. ' appel' → logprob: -5.026673793792725
    6. ' called' → logprob: -5.151673793792725
    7. 'called' → logprob: -6.026673793792725
    8. '   ' → logprob: -7.651673793792725
    9. ' appelé' → logprob: -8.651674270629883
    10. ''appel' → logprob: -8.651674270629883

Token 752: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -7.827200897736475e-05
    2. 'ed' → logprob: -9.625078201293945
    3. 'é' → logprob: -11.750078201293945
    4. 'es' → logprob: -13.125078201293945
    5. '   ' → logprob: -13.375078201293945
    6. 'ès' → logprob: -15.375078201293945
    7. 's' → logprob: -16.000078201293945
    8. 'ées' → logprob: -16.000078201293945
    9. 'ės' → logprob: -16.750078201293945
    10. 'ÉS' → logprob: -17.125078201293945

Token 753: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3989173173904419
    2. 'called' → logprob: -1.148917317390442
    3. ' called' → logprob: -5.023917198181152
    4. '
' → logprob: -5.273917198181152
    5. '    
' → logprob: -9.023917198181152
    6. '.called' → logprob: -9.773917198181152
    7. '_called' → logprob: -10.398917198181152
    8. '```' → logprob: -10.773917198181152
    9. '-called' → logprob: -11.148917198181152
    10. '   
' → logprob: -11.773917198181152

Token 754: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39679601788520813
    2. 'called' → logprob: -1.1467959880828857
    3. ' called' → logprob: -4.646796226501465
    4. '
' → logprob: -8.396796226501465
    5. '_called' → logprob: -11.271796226501465
    6. '.called' → logprob: -11.271796226501465
    7. '```' → logprob: -11.521796226501465
    8. '-called' → logprob: -11.521796226501465
    9. '    
' → logprob: -12.021796226501465
    10. '  ' → logprob: -13.396796226501465

Token 755: ' called' (ID: 4358)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' (adapté à ' called') → logprob: -0.00044556602369993925
    2. ' called' → logprob: -7.750445365905762
    3. '   ' → logprob: -11.125445365905762
    4. '-called' → logprob: -17.250446319580078
    5. '.called' → logprob: -17.500446319580078
    6. 'call' → logprob: -17.625446319580078
    7. '_called' → logprob: -17.875446319580078
    8. '```' → logprob: -18.625446319580078
    9. ' ' → logprob: -18.875446319580078
    10. '  ' → logprob: -19.375446319580078

Token 756: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -12.87500286102295
    3. 's' → logprob: -15.62500286102295
    4. '_n' → logprob: -15.75000286102295
    5. '_num' → logprob: -16.375003814697266
    6. '_number' → logprob: -16.875003814697266
    7. 'numbers' → logprob: -17.000003814697266
    8. ')_' → logprob: -18.250003814697266
    9. '_values' → logprob: -18.500003814697266
    10. '_names' → logprob: -18.875003814697266

Token 757: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197597458958626
    2. '=' → logprob: -2.8119759559631348
    3. '   ' → logprob: -12.061976432800293
    4. '()' → logprob: -12.936976432800293
    5. ' ' → logprob: -17.686975479125977
    6. '＝' → logprob: -17.686975479125977
    7. '=[]' → logprob: -18.186975479125977
    8. ' ' → logprob: -19.436975479125977
    9. ' =
' → logprob: -19.936975479125977
    10. '=list' → logprob: -19.936975479125977

Token 758: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.3132617771625519
    2. 'read' → logprob: -1.3132617473602295
    3. '	read' → logprob: -17.938261032104492
    4. ' called' → logprob: -20.188261032104492
    5. '(read' → logprob: -20.688261032104492
    6. ' ' → logprob: -21.063261032104492
    7. 'called' → logprob: -21.313261032104492
    8. '_read' → logprob: -21.313261032104492
    9. ' reads' → logprob: -21.563261032104492
    10. ' ' → logprob: -21.813261032104492

Token 759: '_called' (ID: 70949)
  Prédit: '_called'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_called' → logprob: -6.2729995988775045e-06
    2. '_b' → logprob: -12.125006675720215
    3. '_calls' → logprob: -15.125006675720215
    4. '_call' → logprob: -15.750006675720215
    5. 'called' → logprob: -16.0000057220459
    6. '_used' → logprob: -16.6250057220459
    7. '_' → logprob: -16.7500057220459
    8. '_c' → logprob: -17.1250057220459
    9. 'Called' → logprob: -17.3750057220459
    10. '_numbers' → logprob: -18.3750057220459

Token 760: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -1.1994775377388578e-05
    2. '_' → logprob: -12.250012397766113
    3. 'numbers' → logprob: -12.375012397766113
    4. '_n' → logprob: -13.625012397766113
    5. '_number' → logprob: -14.500012397766113
    6. 'umbers' → logprob: -15.500012397766113
    7. ' _' → logprob: -15.875012397766113
    8. '```' → logprob: -16.000011444091797
    9. 's' → logprob: -16.375011444091797
    10. 'int' → logprob: -16.500011444091797

Token 761: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15708529949188232
    2. '   ' → logprob: -2.157085418701172
    3. ' marks' → logprob: -3.657085418701172
    4. '    
' → logprob: -6.282085418701172
    5. 'marks' → logprob: -6.407085418701172
    6. '  
' → logprob: -8.782085418701172
    7. '_marks' → logprob: -9.532085418701172
    8. '   
' → logprob: -9.907085418701172
    9. '
' → logprob: -10.157085418701172
    10. ' 
' → logprob: -11.032085418701172

Token 762: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03431621566414833
    2. '
' → logprob: -3.659316301345825
    3. 'marks' → logprob: -5.159316062927246
    4. ' marks' → logprob: -6.534316062927246
    5. '    
' → logprob: -7.909316062927246
    6. '```' → logprob: -8.034316062927246
    7. '#' → logprob: -10.284316062927246
    8. '``' → logprob: -11.534316062927246
    9. '  
' → logprob: -11.534316062927246
    10. '_marks' → logprob: -11.659316062927246

Token 763: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7455331087112427
    2. 'marks' → logprob: -0.8705331087112427
    3. ' marks' → logprob: -2.245532989501953
    4. '
' → logprob: -7.870532989501953
    5. '```' → logprob: -8.370532989501953
    6. '    
' → logprob: -9.245532989501953
    7. '_marks' → logprob: -9.620532989501953
    8. '  ' → logprob: -10.620532989501953
    9. ' ' → logprob: -11.120532989501953
    10. 'm' → logprob: -11.245532989501953

Token 764: ' Mar' (ID: 3145)
  Prédit: 'marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'marks' → logprob: -0.030001325532794
    2. ' marks' → logprob: -3.530001401901245
    3. '   ' → logprob: -8.530001640319824
    4. 'marked' → logprob: -10.280001640319824
    5. 'mark' → logprob: -11.655001640319824
    6. '#' → logprob: -12.905001640319824
    7. 'markers' → logprob: -13.530001640319824
    8. ' ' → logprob: -13.780001640319824
    9. '_marks' → logprob: -14.030001640319824
    10. 'mar' → logprob: -14.280001640319824

Token 765: 'quer' (ID: 8054)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02394174598157406
    2. 'ks' → logprob: -3.7739417552948
    3. 'ked' → logprob: -7.273941516876221
    4. 'kup' → logprob: -13.773941993713379
    5. 'rk' → logprob: -14.148941993713379
    6. 'king' → logprob: -15.523941993713379
    7. 'к' → logprob: -16.023941040039062
    8. 'ker' → logprob: -16.023941040039062
    9. 'kers' → logprob: -16.523941040039062
    10. 'kd' → logprob: -17.023941040039062

Token 766: ' la' (ID: 557)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0050149401649832726
    2. '_' → logprob: -5.380014896392822
    3. ' the' → logprob: -8.75501537322998
    4. 'b' → logprob: -8.75501537322998
    5. ' la' → logprob: -10.88001537322998
    6. 'the' → logprob: -11.25501537322998
    7. '(b' → logprob: -11.38001537322998
    8. ' ' → logprob: -11.38001537322998
    9. '   ' → logprob: -12.13001537322998
    10. ' bingo' → logprob: -12.38001537322998

Token 767: ' carte' (ID: 30276)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.013693157583475113
    2. '_b' → logprob: -5.138693332672119
    3. ' bingo' → logprob: -5.388693332672119
    4. 'card' → logprob: -6.138693332672119
    5. '_' → logprob: -8.013692855834961
    6. '_card' → logprob: -8.388692855834961
    7. ' b' → logprob: -8.763692855834961
    8. ' card' → logprob: -8.763692855834961
    9. '   ' → logprob: -10.513692855834961
    10. 'cards' → logprob: -10.638692855834961

Token 768: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023683084174990654
    2. ' marks' → logprob: -4.273683071136475
    3. 'marks' → logprob: -5.398683071136475
    4. '_b' → logprob: -6.148683071136475
    5. '_marks' → logprob: -6.398683071136475
    6. ' =' → logprob: -7.773683071136475
    7. 'b' → logprob: -8.023683547973633
    8. ' card' → logprob: -9.648683547973633
    9. '_card' → logprob: -9.898683547973633
    10. ' bingo' → logprob: -10.148683547973633

Token 769: ' les' (ID: 1341)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.35396647453308105
    2. ' b' → logprob: -1.853966474533081
    3. ' la' → logprob: -3.353966474533081
    4. '(b' → logprob: -3.853966474533081
    5. ' the' → logprob: -3.978966474533081
    6. ' les' → logprob: -3.978966474533081
    7. ' bingo' → logprob: -4.10396671295166
    8. ' le' → logprob: -4.22896671295166
    9. '   ' → logprob: -4.97896671295166
    10. '	b' → logprob: -6.22896671295166

Token 770: ' num' (ID: 2269)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.2056313157081604
    2. ' called' → logprob: -1.7056312561035156
    3. 'b' → logprob: -6.080631256103516
    4. 'appel' → logprob: -6.955631256103516
    5. '_called' → logprob: -7.580631256103516
    6. 'marks' → logprob: -9.455631256103516
    7. ' appelé' → logprob: -9.455631256103516
    8. ' appel' → logprob: -9.830631256103516
    9. '   ' → logprob: -10.205631256103516
    10. ' appels' → logprob: -10.205631256103516

Token 771: 'éros' (ID: 120888)
  Prédit: 'bered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bered' → logprob: -0.8940066695213318
    2. 'ber' → logprob: -2.0190067291259766
    3. 'ro' → logprob: -2.6440067291259766
    4. 'éros' → logprob: -2.8940067291259766
    5. '   ' → logprob: -3.2690067291259766
    6. 'er' → logprob: -3.3940067291259766
    7. 'bers' → logprob: -3.3940067291259766
    8. 'ored' → logprob: -3.6440067291259766
    9. '__' → logprob: -3.8940067291259766
    10. 'or' → logprob: -4.144006729125977

Token 772: ' appel' (ID: 34642)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009608637541532516
    2. 'b' → logprob: -5.759608745574951
    3. '_b' → logprob: -6.009608745574951
    4. ' marks' → logprob: -6.259608745574951
    5. '	b' → logprob: -8.009608268737793
    6. ' b' → logprob: -8.384608268737793
    7. ' mark' → logprob: -8.509608268737793
    8. '_marks' → logprob: -8.759608268737793
    9. '_' → logprob: -9.009608268737793
    10. ' marked' → logprob: -9.134608268737793

Token 773: 'és' (ID: 1756)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.23061037063598633
    2. 'és' → logprob: -1.6056103706359863
    3. '   ' → logprob: -5.605610370635986
    4. 'é' → logprob: -7.355610370635986
    5. 'es' → logprob: -7.605610370635986
    6. 'éd' → logprob: -8.355609893798828
    7. '_called' → logprob: -10.105609893798828
    8. '__' → logprob: -10.730609893798828
    9. '_numbers' → logprob: -11.480609893798828
    10. '       ' → logprob: -11.730609893798828

Token 774: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.260259747505188
    2. 'marks' → logprob: -2.1352596282958984
    3. ' marks' → logprob: -2.6352596282958984
    4. '
' → logprob: -3.2602596282958984
    5. '    
' → logprob: -7.510259628295898
    6. '_marks' → logprob: -8.510259628295898
    7. '  
' → logprob: -10.510259628295898
    8. '   
' → logprob: -11.260259628295898
    9. '```' → logprob: -11.260259628295898
    10. 'marked' → logprob: -11.510259628295898

Token 775: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04404553398489952
    2. 'marks' → logprob: -3.6690454483032227
    3. ' marks' → logprob: -4.044045448303223
    4. '
' → logprob: -10.544045448303223
    5. '    
' → logprob: -11.044045448303223
    6. '```' → logprob: -11.794045448303223
    7. '_marks' → logprob: -12.294045448303223
    8. '	m' → logprob: -12.544045448303223
    9. '   ' → logprob: -14.169045448303223
    10. 'm' → logprob: -14.544045448303223

Token 776: ' marks' (ID: 22891)
  Prédit: 'marks'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marks' (adapté à ' marks') → logprob: -0.12845048308372498
    2. ' marks' → logprob: -2.128450393676758
    3. '   ' → logprob: -6.503450393676758
    4. 'marked' → logprob: -11.003450393676758
    5. 'mark' → logprob: -13.378450393676758
    6. '_marks' → logprob: -13.378450393676758
    7. ' ' → logprob: -14.128450393676758
    8. '       ' → logprob: -14.503450393676758
    9. '```' → logprob: -14.753450393676758
    10. ' marked' → logprob: -14.753450393676758

Token 777: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014166101813316345
    2. '=' → logprob: -4.264165878295898
    3. '=b' → logprob: -13.014165878295898
    4. ',' → logprob: -15.389165878295898
    5. '(b' → logprob: -17.3891658782959
    6. '   ' → logprob: -17.3891658782959
    7. '_' → logprob: -17.3891658782959
    8. '(' → logprob: -18.2641658782959
    9. ')' → logprob: -18.3891658782959
    10. ' =
' → logprob: -18.5141658782959

Token 778: ' mark' (ID: 1983)
  Prédit: ' mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.04858759790658951
    2. 'mark' → logprob: -3.0485875606536865
    3. '(mark' → logprob: -15.673587799072266
    4. '_mark' → logprob: -17.548587799072266
    5. '.mark' → logprob: -17.798587799072266
    6. ' marked' → logprob: -18.173587799072266
    7. ' marks' → logprob: -18.423587799072266
    8. 'marked' → logprob: -18.673587799072266
    9. ' ' → logprob: -19.298587799072266
    10. ' ' → logprob: -19.923587799072266

Token 779: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0002615742268972099
    2. '_' → logprob: -8.250261306762695
    3. 'b' → logprob: -15.500261306762695
    4. ' _' → logprob: -16.875261306762695
    5. '(b' → logprob: -17.125261306762695
    6. '_B' → logprob: -17.625261306762695
    7. '\' → logprob: -18.250261306762695
    8. ')_' → logprob: -18.500261306762695
    9. '```' → logprob: -19.250261306762695
    10. '_marks' → logprob: -19.375261306762695

Token 780: 'ingo' (ID: 14878)
  Prédit: 'ingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingo' → logprob: -2.4034345187828876e-05
    2. 'ing' → logprob: -11.37502384185791
    3. 'igo' → logprob: -12.62502384185791
    4. 'b' → logprob: -13.37502384185791
    5. 'o' → logprob: -13.50002384185791
    6. 'ango' → logprob: -14.12502384185791
    7. '_' → logprob: -14.37502384185791
    8. 'ongo' → logprob: -14.37502384185791
    9. 'i' → logprob: -14.50002384185791
    10. ' bingo' → logprob: -14.62502384185791

Token 781: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -4.246537173457909e-06
    2. 'card' → logprob: -12.750003814697266
    3. '_car' → logprob: -14.000003814697266
    4. '_cards' → logprob: -15.500003814697266
    5. '_' → logprob: -16.375003814697266
    6. '_code' → logprob: -16.625003814697266
    7. 'Card' → logprob: -16.875003814697266
    8. '_cart' → logprob: -17.125003814697266
    9. '_c' → logprob: -18.500003814697266
    10. ' card' → logprob: -19.000003814697266

Token 782: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. '(
' → logprob: -17.125001907348633
    4. 'b' → logprob: -17.250001907348633
    5. ',b' → logprob: -17.875001907348633
    6. '(B' → logprob: -18.000001907348633
    7. ' (' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '(br' → logprob: -19.500001907348633
    10. '	b' → logprob: -19.500001907348633

Token 783: 'ingo' (ID: 14878)
  Prédit: 'ingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingo' → logprob: -0.0006131939589977264
    2. 'ing' → logprob: -8.12561321258545
    3. 'card' → logprob: -8.50061321258545
    4. 'in' → logprob: -10.62561321258545
    5. '   ' → logprob: -10.62561321258545
    6. 'ango' → logprob: -11.75061321258545
    7. 'ino' → logprob: -11.87561321258545
    8. '       ' → logprob: -12.12561321258545
    9. 'b' → logprob: -12.25061321258545
    10. 'i' → logprob: -12.50061321258545

Token 784: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -1.282920129597187e-05
    2. 'card' → logprob: -11.875012397766113
    3. '_' → logprob: -13.500012397766113
    4. '_cards' → logprob: -13.750012397766113
    5. ')_' → logprob: -14.000012397766113
    6. '_code' → logprob: -14.125012397766113
    7. '   ' → logprob: -14.625012397766113
    8. '_car' → logprob: -15.250012397766113
    9. ' _' → logprob: -15.500012397766113
    10. ' card' → logprob: -16.00001335144043

Token 785: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.128163257315464e-07
    2. ',b' → logprob: -16.125
    3. ' ,' → logprob: -16.5
    4. ',
' → logprob: -18.375
    5. '‌,' → logprob: -20.25
    6. ',c' → logprob: -20.5
    7. ',m' → logprob: -21.625
    8. '،' → logprob: -22.0
    9. '，' → logprob: -22.125
    10. ')' → logprob: -23.375

Token 786: ' called' (ID: 4358)
  Prédit: ' called'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' called' → logprob: -0.6931476593017578
    2. 'called' → logprob: -0.6931476593017578
    3. '_called' → logprob: -15.068147659301758
    4. '.called' → logprob: -15.943147659301758
    5. '-called' → logprob: -17.068147659301758
    6. '   ' → logprob: -17.443147659301758
    7. 'Called' → logprob: -18.443147659301758
    8. ')' → logprob: -18.568147659301758
    9. 'cal' → logprob: -18.568147659301758
    10. ' ' → logprob: -18.818147659301758

Token 787: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -1.0564331205387134e-05
    2. '_' → logprob: -12.00001049041748
    3. 'numbers' → logprob: -13.25001049041748
    4. '_n' → logprob: -14.12501049041748
    5. '_called' → logprob: -14.37501049041748
    6. ' _' → logprob: -14.75001049041748
    7. ')_' → logprob: -14.75001049041748
    8. 's' → logprob: -16.000011444091797
    9. ')' → logprob: -16.750011444091797
    10. '_number' → logprob: -17.000011444091797

Token 788: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011761783389374614
    2. ')
' → logprob: -6.751176357269287
    3. '   ' → logprob: -12.126175880432129
    4. ')
' → logprob: -15.251175880432129
    5. ' )' → logprob: -15.376175880432129
    6. ' ' → logprob: -17.501176834106445
    7. ')

' → logprob: -17.626176834106445
    8. ')`' → logprob: -19.251176834106445
    9. '),' → logprob: -19.501176834106445
    10. ')\' → logprob: -19.751176834106445

Token 789: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002451161155477166
    2. 'if' → logprob: -6.377450942993164
    3. '
' → logprob: -7.377450942993164
    4. '    
' → logprob: -9.627450942993164
    5. ' if' → logprob: -9.877450942993164
    6. '```' → logprob: -12.127450942993164
    7. '	if' → logprob: -15.877450942993164
    8. '  
' → logprob: -16.002450942993164
    9. '       ' → logprob: -16.002450942993164
    10. '<|end|>' → logprob: -16.377450942993164

Token 790: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20240667462348938
    2. '   ' → logprob: -1.702406644821167
    3. ' if' → logprob: -6.952406883239746
    4. '
' → logprob: -10.702406883239746
    5. 'print' → logprob: -11.827406883239746
    6. '    
' → logprob: -12.452406883239746
    7. 'result' → logprob: -13.827406883239746
    8. '	if' → logprob: -14.452406883239746
    9. '```' → logprob: -14.452406883239746
    10. '  ' → logprob: -15.077406883239746

Token 791: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005192012991756201
    2. ' if' → logprob: -5.505191802978516
    3. '   ' → logprob: -7.505191802978516
    4. 'print' → logprob: -7.505191802978516
    5. 'result' → logprob: -11.505191802978516
    6. 'b' → logprob: -13.630191802978516
    7. ' print' → logprob: -14.505191802978516
    8. '```' → logprob: -15.755191802978516
    9. 'is' → logprob: -16.005191802978516
    10. '	if' → logprob: -16.005191802978516

Token 792: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.09271419048309326
    2. 'ifie' → logprob: -3.092714309692383
    3. 'if' → logprob: -3.342714309692383
    4. '   ' → logprob: -5.092714309692383
    5. 'ify' → logprob: -6.967714309692383
    6. 'ifiez' → logprob: -8.217714309692383
    7. 'ifies' → logprob: -8.467714309692383
    8. 'ifi' → logprob: -8.842714309692383
    9. ' if' → logprob: -9.717714309692383
    10. 'i' → logprob: -11.467714309692383

Token 793: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1817505806684494
    2. '   ' → logprob: -2.181750535964966
    3. ' if' → logprob: -2.931750535964966
    4. 'print' → logprob: -11.556750297546387
    5. '	if' → logprob: -11.556750297546387
    6. '(' → logprob: -12.056750297546387
    7. ' ' → logprob: -12.556750297546387
    8. 'result' → logprob: -12.681750297546387
    9. '  ' → logprob: -12.806750297546387
    10. 'whether' → logprob: -13.306750297546387

Token 794: ''il' (ID: 14683)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02668840065598488
    2. '(has' → logprob: -4.776688575744629
    3. ' (' → logprob: -5.026688575744629
    4. 'if' → logprob: -5.651688575744629
    5. ' if' → logprob: -6.026688575744629
    6. '(if' → logprob: -6.151688575744629
    7. '(' → logprob: -7.276688575744629
    8. ''il' → logprob: -7.276688575744629
    9. '_has' → logprob: -7.401688575744629
    10. ' has' → logprob: -7.651688575744629

Token 795: ' y' (ID: 342)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.07697173207998276
    2. ' y' → logprob: -2.8269717693328857
    3. 'has' → logprob: -4.451971530914307
    4. 'y' → logprob: -5.951971530914307
    5. ' a' → logprob: -7.451971530914307
    6. 'a' → logprob: -10.701972007751465
    7. ' have' → logprob: -10.826972007751465
    8. ' ' → logprob: -13.326972007751465
    9. '(has' → logprob: -13.326972007751465
    10. ' is' → logprob: -13.451972007751465

Token 796: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20329825580120087
    2. 'a' → logprob: -1.7032982110977173
    3. ' has' → logprob: -7.203298091888428
    4. ' y' → logprob: -7.703298091888428
    5. 'has' → logprob: -7.703298091888428
    6. ' ' → logprob: -9.078298568725586
    7. 'y' → logprob: -10.078298568725586
    8. '   ' → logprob: -10.703298568725586
    9. ' have' → logprob: -10.828298568725586
    10. ''a' → logprob: -11.328298568725586

Token 797: ' un' (ID: 537)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.04537707939743996
    2. 'has' → logprob: -3.420377016067505
    3. ' un' → logprob: -5.795377254486084
    4. ' bingo' → logprob: -5.920377254486084
    5. '_b' → logprob: -6.045377254486084
    6. 'b' → logprob: -6.170377254486084
    7. ' a' → logprob: -7.045377254486084
    8. ' b' → logprob: -8.420376777648926
    9. '_has' → logprob: -8.545376777648926
    10. '(has' → logprob: -10.045376777648926

Token 798: ' Bingo' (ID: 83316)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11467885226011276
    2. ' bingo' → logprob: -2.2396788597106934
    3. 'B' → logprob: -7.114678859710693
    4. ' b' → logprob: -7.364678859710693
    5. '_b' → logprob: -8.614678382873535
    6. ' Bingo' → logprob: -8.739678382873535
    7. 'if' → logprob: -10.614678382873535
    8. ' if' → logprob: -11.114678382873535
    9. ' bing' → logprob: -11.614678382873535
    10. ' B' → logprob: -11.614678382873535

Token 799: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011390270665287971
    2. 'if' → logprob: -7.001139163970947
    3. '
' → logprob: -9.126138687133789
    4. ' if' → logprob: -9.376138687133789
    5. '    
' → logprob: -10.376138687133789
    6. '  
' → logprob: -14.376138687133789
    7. '  ' → logprob: -14.751138687133789
    8. '    ' → logprob: -15.126138687133789
    9. '	if' → logprob: -15.376138687133789
    10. '```' → logprob: -15.501138687133789

Token 800: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009280181839130819
    2. 'if' → logprob: -7.125927925109863
    3. ' if' → logprob: -9.000927925109863
    4. '
' → logprob: -16.00092887878418
    5. '    
' → logprob: -16.75092887878418
    6. '```' → logprob: -16.87592887878418
    7. '   ' → logprob: -17.37592887878418
    8. 'print' → logprob: -17.75092887878418
    9. 'result' → logprob: -18.12592887878418
    10. '	if' → logprob: -18.25092887878418

Token 801: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18566468358039856
    2. '   ' → logprob: -1.9356646537780762
    3. ' if' → logprob: -3.685664653778076
    4. 'print' → logprob: -10.185665130615234
    5. 'result' → logprob: -14.560665130615234
    6. '```' → logprob: -14.685665130615234
    7. ' print' → logprob: -15.060665130615234
    8. '	if' → logprob: -15.560665130615234
    9. ' ' → logprob: -16.310665130615234
    10. '  ' → logprob: -17.185665130615234

Token 802: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.25192973017692566
    2. ' has' → logprob: -1.501929759979248
    3. '(has' → logprob: -14.37692928314209
    4. '	has' → logprob: -16.251930236816406
    5. '.has' → logprob: -18.876930236816406
    6. '   ' → logprob: -18.876930236816406
    7. '_has' → logprob: -18.876930236816406
    8. 'ha' → logprob: -20.376930236816406
    9. 'have' → logprob: -20.501930236816406
    10. ' ' → logprob: -20.751930236816406

Token 803: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.9875325708417222e-05
    2. 'b' → logprob: -10.750029563903809
    3. 'B' → logprob: -12.000029563903809
    4. '_' → logprob: -13.750029563903809
    5. ' bingo' → logprob: -14.250029563903809
    6. ' Bingo' → logprob: -15.750029563903809
    7. '_B' → logprob: -16.000030517578125
    8. ' _' → logprob: -16.000030517578125
    9. ' ' → logprob: -16.125030517578125
    10. '\' → logprob: -17.250030517578125

Token 804: 'ingo' (ID: 14878)
  Prédit: 'ingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingo' → logprob: -6.921253225300461e-05
    2. '_b' → logprob: -10.250069618225098
    3. 'b' → logprob: -11.250069618225098
    4. ' bingo' → logprob: -11.750069618225098
    5. 'ing' → logprob: -12.125069618225098
    6. 'igo' → logprob: -13.625069618225098
    7. 'ango' → logprob: -13.750069618225098
    8. '_' → logprob: -13.875069618225098
    9. 'inge' → logprob: -13.875069618225098
    10. 'i' → logprob: -14.625069618225098

Token 805: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.081584716506768e-05
    2. '(' → logprob: -10.875020980834961
    3. ' (' → logprob: -13.625020980834961
    4. '(mark' → logprob: -14.625020980834961
    5. '(b' → logprob: -16.25002098083496
    6. '   ' → logprob: -17.50002098083496
    7. '(
' → logprob: -17.75002098083496
    8. '(s' → logprob: -19.00002098083496
    9. '(matches' → logprob: -19.12502098083496
    10. '(mask' → logprob: -19.25002098083496

Token 806: 'arks' (ID: 13455)
  Prédit: 'arks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arks' → logprob: -4.127333340875339e-06
    2. 'ark' → logprob: -13.000003814697266
    3. '(' → logprob: -13.750003814697266
    4. 'ar' → logprob: -15.125003814697266
    5. '(ar' → logprob: -16.375003814697266
    6. '[' → logprob: -16.500003814697266
    7. '(m' → logprob: -17.000003814697266
    8. ')' → logprob: -17.125003814697266
    9. '   ' → logprob: -17.375003814697266
    10. '(a' → logprob: -17.750003814697266

Token 807: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00194565299898386
    2. '):
' → logprob: -6.251945495605469
    3. ')' → logprob: -11.626945495605469
    4. ':' → logprob: -12.376945495605469
    5. ' ):' → logprob: -13.251945495605469
    6. '   ' → logprob: -13.376945495605469
    7. '():' → logprob: -14.876945495605469
    8. '):
' → logprob: -15.376945495605469
    9. ')==' → logprob: -17.37694549560547
    10. '):

' → logprob: -17.75194549560547

Token 808: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.127333340875339e-06
    2. 'print' → logprob: -12.500003814697266
    3. ' print' → logprob: -15.375003814697266
    4. '```' → logprob: -16.375003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '
' → logprob: -18.250003814697266
    7. '    ' → logprob: -18.875003814697266
    8. '           ' → logprob: -19.000003814697266
    9. '      ' → logprob: -19.125003814697266
    10. ':' → logprob: -19.875003814697266

Token 809: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06675928831100464
    2. 'print' (adapté à ' print') → logprob: -3.3167593479156494
    3. ' print' → logprob: -3.5667593479156494
    4. '   ' → logprob: -9.69175910949707
    5. '```' → logprob: -15.19175910949707
    6. '	print' → logprob: -16.81675910949707
    7. '           ' → logprob: -17.19175910949707
    8. '      ' → logprob: -17.81675910949707
    9. '     ' → logprob: -18.19175910949707
    10. ' ' → logprob: -18.31675910949707

Token 810: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -4.167648876318708e-05
    2. '(' → logprob: -10.250041961669922
    3. '('' → logprob: -12.000041961669922
    4. ' ("' → logprob: -18.500041961669922
    5. '("""' → logprob: -19.000041961669922
    6. '("("' → logprob: -19.250041961669922
    7. '(
' → logprob: -19.375041961669922
    8. '("")' → logprob: -20.000041961669922
    9. '()' → logprob: -20.250041961669922
    10. '"' → logprob: -20.500041961669922

Token 811: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: 0.0
    2. ' Yes' → logprob: -18.5
    3. 'Oui' → logprob: -21.0
    4. 'YES' → logprob: -21.375
    5. 'True' → logprob: -23.75
    6. 'Ye' → logprob: -23.875
    7. '"' → logprob: -24.5
    8. '“Yes' → logprob: -24.5
    9. 'No' → logprob: -25.0
    10. 'Yeah' → logprob: -25.25

Token 812: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0031790214125066996
    2. '")
' → logprob: -5.75317907333374
    3. '")
' → logprob: -13.878178596496582
    4. ')' → logprob: -15.378178596496582
    5. ')")' → logprob: -16.7531795501709
    6. '"' → logprob: -17.3781795501709
    7. '")

' → logprob: -17.6281795501709
    8. ' ")' → logprob: -17.7531795501709
    9. '')' → logprob: -19.2531795501709
    10. '”)' → logprob: -19.3781795501709

Token 813: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00044103997061029077
    2. 'else' → logprob: -7.750441074371338
    3. ' else' → logprob: -11.50044059753418
    4. '```' → logprob: -15.62544059753418
    5. '       ' → logprob: -16.25044059753418
    6. '	else' → logprob: -17.25044059753418
    7. '    
' → logprob: -18.75044059753418
    8. '   ' → logprob: -18.87544059753418
    9. ' ' → logprob: -19.25044059753418
    10. 'Else' → logprob: -19.37544059753418

Token 814: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1618676334619522
    2. 'else' (adapté à ' else') → logprob: -1.911867618560791
    3. ' else' → logprob: -6.411867618560791
    4. '	else' → logprob: -16.536867141723633
    5. ' ' → logprob: -16.786867141723633
    6. '```' → logprob: -16.911867141723633
    7. 'Else' → logprob: -17.661867141723633
    8. '       ' → logprob: -18.036867141723633
    9. '
' → logprob: -19.661867141723633
    10. '  ' → logprob: -19.661867141723633

Token 815: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26639261841773987
    2. ':
' → logprob: -1.6413925886154175
    3. '       ' → logprob: -3.266392707824707
    4. ' :
' → logprob: -6.891392707824707
    5. ' :' → logprob: -7.641392707824707
    6. '   ' → logprob: -7.641392707824707
    7. ' print' → logprob: -11.891392707824707
    8. '    ' → logprob: -12.266392707824707
    9. '():
' → logprob: -12.516392707824707
    10. '      ' → logprob: -12.766392707824707

Token 816: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017159098759293556
    2. ' print' → logprob: -4.7671589851379395
    3. 'print' → logprob: -4.7671589851379395
    4. '   ' → logprob: -12.767159461975098
    5. '(print' → logprob: -15.142159461975098
    6. '           ' → logprob: -15.517159461975098
    7. '	print' → logprob: -15.642159461975098
    8. '```' → logprob: -15.767159461975098
    9. '     ' → logprob: -16.64215850830078
    10. '.print' → logprob: -17.39215850830078

Token 817: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16023874282836914
    2. ' print' → logprob: -1.9102387428283691
    3. '       ' → logprob: -11.160238265991211
    4. '   ' → logprob: -14.785238265991211
    5. '    ' → logprob: -18.16023826599121
    6. '	print' → logprob: -18.16023826599121
    7. '           ' → logprob: -19.16023826599121
    8. '        ' → logprob: -19.16023826599121
    9. '.print' → logprob: -19.16023826599121
    10. '(print' → logprob: -19.78523826599121

Token 818: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00015860427811276168
    2. '(' → logprob: -8.750158309936523
    3. ' ("' → logprob: -16.875158309936523
    4. '('' → logprob: -16.875158309936523
    5. '(
' → logprob: -17.750158309936523
    6. '("""' → logprob: -18.500158309936523
    7. '("")' → logprob: -19.000158309936523
    8. '()' → logprob: -20.125158309936523
    9. '(""' → logprob: -20.250158309936523
    10. '(("' → logprob: -21.750158309936523

Token 819: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: 0.0
    2. '"No' → logprob: -17.75
    3. ' No' → logprob: -19.5
    4. '_No' → logprob: -25.875
    5. '"' → logprob: -26.625
    6. 'NO' → logprob: -26.875
    7. '.No' → logprob: -27.25
    8. '“No' → logprob: -27.5
    9. '>No' → logprob: -28.125
    10. '(No' → logprob: -28.5

Token 820: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -1.0802738870552275e-05
    2. ')")' → logprob: -12.00001049041748
    3. ')' → logprob: -12.37501049041748
    4. '()' → logprob: -15.50001049041748
    5. '")
' → logprob: -16.625011444091797
    6. '}")' → logprob: -16.875011444091797
    7. '("' → logprob: -18.250011444091797
    8. '')' → logprob: -19.125011444091797
    9. ' ")' → logprob: -19.750011444091797
    10. '”)' → logprob: -19.875011444091797

Token 821: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00013679367839358747
    2. 'main' → logprob: -9.000136375427246
    3. '```' → logprob: -11.375136375427246
    4. ' if' → logprob: -13.500136375427246
    5. '
' → logprob: -15.375136375427246
    6. '#' → logprob: -15.500136375427246
    7. '\n' → logprob: -16.625137329101562
    8. '\' → logprob: -17.750137329101562
    9. '``' → logprob: -18.750137329101562
    10. '<|end|>' → logprob: -19.125137329101562

Token 822: ' Ex' (ID: 1771)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.2200749754119897e-06
    2. 'main' → logprob: -13.250001907348633
    3. ' if' → logprob: -14.750001907348633
    4. 'If' → logprob: -23.375001907348633
    5. '```' → logprob: -23.625001907348633
    6. '#' → logprob: -24.375001907348633
    7. '#if' → logprob: -25.625001907348633
    8. ' main' → logprob: -26.250001907348633
    9. '__' → logprob: -26.250001907348633
    10. '	if' → logprob: -27.125001907348633

Token 823: 'écution' (ID: 122423)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010779452277347445
    2. 'ecute' → logprob: -7.126078128814697
    3. 'ec' → logprob: -9.126077651977539
    4. 'ecut' → logprob: -9.376077651977539
    5. 'ecution' → logprob: -10.751077651977539
    6. 'port' → logprob: -10.876077651977539
    7. 'e' → logprob: -11.001077651977539
    8. '#' → logprob: -12.001077651977539
    9. 'ecu' → logprob: -12.251077651977539
    10. '```' → logprob: -12.376077651977539

Token 824: ' du' (ID: 1462)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002258277963846922
    2. '
' → logprob: -8.500226020812988
    3. ' if' → logprob: -10.875226020812988
    4. 'main' → logprob: -12.625226020812988
    5. '```' → logprob: -16.250225067138672
    6. '

' → logprob: -17.000225067138672
    7. '\
' → logprob: -18.500225067138672
    8. '\' → logprob: -18.500225067138672
    9. '    
' → logprob: -18.875225067138672
    10. '  
' → logprob: -18.875225067138672

Token 825: ' programme' (ID: 18190)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3914971351623535
    2. 'if' → logprob: -1.1414971351623535
    3. '__' → logprob: -5.3914971351623535
    4. ' main' → logprob: -9.891496658325195
    5. ' if' → logprob: -12.141496658325195
    6. '```' → logprob: -12.891496658325195
    7. '_main' → logprob: -13.641496658325195
    8. ' __' → logprob: -15.266496658325195
    9. 'script' → logprob: -16.016496658325195
    10. 'program' → logprob: -16.891496658325195

Token 826: ' principal' (ID: 10589)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20410826802253723
    2. '
' → logprob: -1.7041082382202148
    3. 'main' → logprob: -5.954108238220215
    4. '

' → logprob: -9.454108238220215
    5. ' if' → logprob: -11.829108238220215
    6. '```' → logprob: -11.829108238220215
    7. '    
' → logprob: -14.079108238220215
    8. '\n' → logprob: -14.204108238220215
    9. '  
' → logprob: -14.204108238220215
    10. '
' → logprob: -14.579108238220215

Token 827: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31381380558013916
    2. '
' → logprob: -1.3138138055801392
    3. '

' → logprob: -7.56381368637085
    4. 'main' → logprob: -11.063814163208008
    5. ' if' → logprob: -11.438814163208008
    6. '
' → logprob: -13.438814163208008
    7. '  
' → logprob: -13.438814163208008
    8. '```' → logprob: -13.438814163208008
    9. '\n' → logprob: -13.813814163208008
    10. '    
' → logprob: -14.313814163208008

Token 828: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0019286326132714748
    2. 'main' → logprob: -6.251928806304932
    3. ' if' → logprob: -17.501928329467773
    4. ' main' → logprob: -21.126928329467773
    5. '```' → logprob: -23.376928329467773
    6. '(main' → logprob: -25.376928329467773
    7. 'If' → logprob: -25.876928329467773
    8. '
' → logprob: -26.751928329467773
    9. '#if' → logprob: -27.001928329467773
    10. '	main' → logprob: -27.126928329467773

Token 829: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12901465594768524
    2. '__' → logprob: -2.129014730453491
    3. ' ' → logprob: -6.379014492034912
    4. '_' → logprob: -9.00401496887207
    5. ' ' → logprob: -9.25401496887207
    6. '_name' → logprob: -9.75401496887207
    7. ' name' → logprob: -10.37901496887207
    8. 'name' → logprob: -10.87901496887207
    9. ' ' → logprob: -11.12901496887207
    10. ' True' → logprob: -11.37901496887207

Token 830: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.18362225592136383
    2. '==' → logprob: -2.183622360229492
    3. ' ==' → logprob: -2.933622360229492
    4. ' __' → logprob: -6.933622360229492
    5. 'name' → logprob: -7.308622360229492
    6. '_' → logprob: -8.808622360229492
    7. '=="' → logprob: -9.808622360229492
    8. '=' → logprob: -10.558622360229492
    9. '=='' → logprob: -10.933622360229492
    10. 'main' → logprob: -12.558622360229492

Token 831: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.3856492842023727e-06
    2. '==' → logprob: -14.000000953674316
    3. '__.__' → logprob: -14.625000953674316
    4. ' ==' → logprob: -17.500001907348633
    5. '___' → logprob: -18.375001907348633
    6. '=="' → logprob: -18.750001907348633
    7. '____' → logprob: -18.875001907348633
    8. '__.' → logprob: -18.875001907348633
    9. '__
' → logprob: -19.000001907348633
    10. 'name' → logprob: -19.250001907348633

Token 832: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00011212585377506912
    2. '==' → logprob: -9.250112533569336
    3. '=="' → logprob: -11.750112533569336
    4. ' ==' → logprob: -12.500112533569336
    5. '___' → logprob: -12.875112533569336
    6. '____' → logprob: -14.750112533569336
    7. '__.__' → logprob: -14.750112533569336
    8. '_' → logprob: -15.000112533569336
    9. '__["' → logprob: -16.000112533569336
    10. '__('' → logprob: -16.125112533569336

Token 833: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018215617164969444
    2. ''' → logprob: -4.018215656280518
    3. ' "__' → logprob: -9.89321517944336
    4. '__' → logprob: -11.14321517944336
    5. ' '__' → logprob: -14.26821517944336
    6. '"user' → logprob: -17.01821517944336
    7. '"name' → logprob: -17.64321517944336
    8. '("__' → logprob: -17.89321517944336
    9. '"_' → logprob: -18.26821517944336
    10. ''"' → logprob: -19.01821517944336

Token 834: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. 'name' → logprob: -16.0
    3. ' main' → logprob: -18.875
    4. '_main' → logprob: -18.875
    5. '__' → logprob: -22.375
    6. 'ma' → logprob: -23.125
    7. '	main' → logprob: -23.5
    8. 'm' → logprob: -23.875
    9. 'maine' → logprob: -24.125
    10. '(main' → logprob: -24.625

Token 835: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.02329590730369091
    2. '__' → logprob: -3.7732958793640137
    3. '__':
' → logprob: -9.898296356201172
    4. '"' → logprob: -16.648296356201172
    5. '__["' → logprob: -17.023296356201172
    6. '__
' → logprob: -17.648296356201172
    7. '__("' → logprob: -18.273296356201172
    8. '__",' → logprob: -18.398296356201172
    9. ' "__' → logprob: -18.648296356201172
    10. '__
' → logprob: -19.023296356201172

Token 836: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.39357420802116394
    2. '__' → logprob: -1.1435742378234863
    3. '"' → logprob: -5.018574237823486
    4. ''' → logprob: -10.018573760986328
    5. ' main' → logprob: -11.518573760986328
    6. '__":
' → logprob: -11.893573760986328
    7. '___' → logprob: -13.893573760986328
    8. '	main' → logprob: -14.018573760986328
    9. '_main' → logprob: -14.143573760986328
    10. '   ' → logprob: -14.393573760986328

Token 837: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. '	main' → logprob: -23.375
    4. '   ' → logprob: -25.375
    5. '_main' → logprob: -26.125
    6. '.main' → logprob: -26.375
    7. '(main' → logprob: -27.0
    8. 'Main' → logprob: -28.25
    9. 'mai' → logprob: -28.375
    10. 'ma' → logprob: -28.5

Token 838: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 836
Tokens correctement prédits (1ère position, stricte): 366
Tokens correctement prédits (1ère position, avec adaptation): 392
Tokens correctement prédits (top 10): 645
Précision stricte (1ère position): 43.78%
Précision adaptée (1ère position): 46.89%
Précision (top 10): 77.15%
================================================================================
