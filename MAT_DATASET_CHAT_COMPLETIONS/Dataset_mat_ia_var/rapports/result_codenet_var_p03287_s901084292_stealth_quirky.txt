================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import operator as op
import functools as ft
import itertools as it

get_ints = lambda: map(int, sys.stdin.readline().split())
n, m = list(get_ints())

try:
    import numpy as np
    arr = np.fromstring(sys.stdin.readline(), dtype=int, sep=' ')
except ImportError:
    arr = list(get_ints())

prefix = [0]
for num in arr:
    prefix.append((prefix[-1] + num) % m)
modded = list(map(lambda x: x % m, prefix))

freq = {}
for val in modded:
    freq[val] = freq.get(val, 0) + 1

weird_sum = sum([(v*(v-1))//2 for v in freq.values()])
print(weird_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' operator' (ID: 11019)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -16.875125885009766

Token 5: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007050906307995319
    2. '\' → logprob: -6.13205099105835
    3. ',' → logprob: -6.38205099105835
    4. '\n' → logprob: -6.38205099105835
    5. '<|end|>' → logprob: -7.88205099105835
    6. '.
' → logprob: -8.382050514221191
    7. 'import' → logprob: -8.882050514221191
    8. '
' → logprob: -9.257050514221191
    9. '```' → logprob: -9.257050514221191
    10. '[' → logprob: -9.257050514221191

Token 6: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.38711827993392944
    2. ' op' → logprob: -1.1371183395385742
    3. 'ops' → logprob: -8.887118339538574
    4. 'oper' → logprob: -10.137118339538574
    5. '_op' → logprob: -10.887118339538574
    6. '	op' → logprob: -11.512118339538574
    7. 'operator' → logprob: -11.637118339538574
    8. ' opr' → logprob: -12.137118339538574
    9. ' ' → logprob: -12.262118339538574
    10. 'opf' → logprob: -12.637118339538574

Token 7: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4647713601589203
    2. ',' → logprob: -1.5897713899612427
    3. '#' → logprob: -2.464771270751953
    4. 'import' → logprob: -3.714771270751953
    5. '*' → logprob: -4.589771270751953
    6. '\' → logprob: -4.714771270751953
    7. '```' → logprob: -5.089771270751953
    8. '\n' → logprob: -5.589771270751953
    9. '' → logprob: -5.714771270751953
    10. '_' → logprob: -5.839771270751953

Token 8: 'import' (ID: 561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5705803036689758
    2. 'import' → logprob: -1.695580244064331
    3. 'def' → logprob: -2.820580244064331
    4. 'from' → logprob: -3.070580244064331
    5. '.' → logprob: -3.195580244064331
    6. '\' → logprob: -4.07058048248291
    7. '

' → logprob: -4.32058048248291
    8. '```' → logprob: -4.57058048248291
    9. '
' → logprob: -4.94558048248291
    10. '#' → logprob: -4.94558048248291

Token 9: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.2634734511375427
    2. ' math' → logprob: -1.8884735107421875
    3. 'math' → logprob: -3.0134735107421875
    4. 'fun' → logprob: -4.0134735107421875
    5. ' itertools' → logprob: -4.8884735107421875
    6. ' ast' → logprob: -5.8884735107421875
    7. ' collections' → logprob: -7.0134735107421875
    8. ' re' → logprob: -7.5134735107421875
    9. 'collections' → logprob: -7.6384735107421875
    10. 'os' → logprob: -8.513473510742188

Token 10: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17011192440986633
    2. 'def' → logprob: -3.170111894607544
    3. ' as' → logprob: -3.420111894607544
    4. 'as' → logprob: -3.920111894607544
    5. '<|end|>' → logprob: -4.420112133026123
    6. ',' → logprob: -4.545112133026123
    7. 'import' → logprob: -5.045112133026123
    8. '
' → logprob: -5.295112133026123
    9. '<|end|>' → logprob: -5.670112133026123
    10. '@' → logprob: -5.670112133026123

Token 11: ' ft' (ID: 16280)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.2486373484134674
    2. 'ft' → logprob: -2.2486374378204346
    3. ' ' → logprob: -2.9986374378204346
    4. ' ft' → logprob: -3.1236374378204346
    5. 'f' → logprob: -5.1236371994018555
    6. '  ' → logprob: -5.4986371994018555
    7. '    ' → logprob: -5.8736371994018555
    8. ' functools' → logprob: -5.8736371994018555
    9. '   ' → logprob: -6.2486371994018555
    10. 'func' → logprob: -6.7486371994018555

Token 12: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004202932585030794
    2. ',' → logprob: -6.379202842712402
    3. '\' → logprob: -7.254202842712402
    4. 'def' → logprob: -7.629202842712402
    5. '.
' → logprob: -7.879202842712402
    6. '#' → logprob: -9.004202842712402
    7. '.

' → logprob: -9.129202842712402
    8. '
' → logprob: -9.379202842712402
    9. '```' → logprob: -9.629202842712402
    10. '

' → logprob: -9.879202842712402

Token 13: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024489001370966434
    2. ',' → logprob: -7.002449035644531
    3. '\' → logprob: -7.627449035644531
    4. 'def' → logprob: -8.002449035644531
    5. '.
' → logprob: -8.502449035644531
    6. 'import' → logprob: -9.252449035644531
    7. '#' → logprob: -9.252449035644531
    8. '```' → logprob: -9.627449035644531
    9. '.def' → logprob: -10.627449035644531
    10. '.

' → logprob: -10.627449035644531

Token 14: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.09695260226726532
    2. ' itertools' → logprob: -2.7219526767730713
    3. 'math' → logprob: -4.221952438354492
    4. ' os' → logprob: -5.346952438354492
    5. ' collections' → logprob: -5.596952438354492
    6. ' re' → logprob: -6.096952438354492
    7. ' typing' → logprob: -7.721952438354492
    8. 'collections' → logprob: -8.846952438354492
    9. 'os' → logprob: -9.096952438354492
    10. ' ast' → logprob: -9.471952438354492

Token 15: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.033015359193086624
    2. '<|end|>' → logprob: -3.783015251159668
    3. 'as' → logprob: -5.033015251159668
    4. '.' → logprob: -6.158015251159668
    5. ' ' → logprob: -7.658015251159668
    6. '<|end|>' → logprob: -8.283015251159668
    7. ' .' → logprob: -9.158015251159668
    8. ',' → logprob: -9.658015251159668
    9. 'import' → logprob: -9.783015251159668
    10. ' ,' → logprob: -9.783015251159668

Token 16: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.004286146257072687
    2. ' it' → logprob: -5.504286289215088
    3. 'itl' → logprob: -9.62928581237793
    4. ' ' → logprob: -10.37928581237793
    5. '	it' → logprob: -10.50428581237793
    6. 'its' → logprob: -11.25428581237793
    7. '   ' → logprob: -11.25428581237793
    8. 'itt' → logprob: -11.25428581237793
    9. '  ' → logprob: -11.62928581237793
    10. 'itg' → logprob: -12.00428581237793

Token 17: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.34024283289909363
    2. 'import' → logprob: -2.215242862701416
    3. '
' → logprob: -2.715242862701416
    4. '<|end|>' → logprob: -3.215242862701416
    5. ',' → logprob: -3.715242862701416
    6. '\n' → logprob: -3.840242862701416
    7. '

' → logprob: -4.840242862701416
    8. '#' → logprob: -5.965242862701416
    9. '<|end|>' → logprob: -5.965242862701416
    10. '\' → logprob: -6.340242862701416

Token 18: 'get' (ID: 522)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.024882670491933823
    2. ',' → logprob: -4.649882793426514
    3. 'def' → logprob: -5.399882793426514
    4. '\' → logprob: -6.649882793426514
    5. '.
' → logprob: -6.774882793426514
    6. '#' → logprob: -6.774882793426514
    7. ':' → logprob: -6.899882793426514
    8. 'import' → logprob: -7.024882793426514
    9. 'as' → logprob: -7.649882793426514
    10. '_' → logprob: -7.774882793426514

Token 19: '_int' (ID: 12285)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.004875077400356531
    2. '_' → logprob: -5.504875183105469
    3. 't' → logprob: -7.504875183105469
    4. 'at' → logprob: -9.254875183105469
    5. 'ter' → logprob: -9.379875183105469
    6. '_t' → logprob: -10.629875183105469
    7. '_attr' → logprob: -11.129875183105469
    8. 'att' → logprob: -12.004875183105469
    9. 'te' → logprob: -12.379875183105469
    10. 's' → logprob: -13.129875183105469

Token 20: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4604063630104065
    2. '()' → logprob: -1.0854063034057617
    3. 'eger' → logprob: -4.210406303405762
    4. '('' → logprob: -5.085406303405762
    5. '("' → logprob: -5.335406303405762
    6. '("("' → logprob: -6.210406303405762
    7. '(`' → logprob: -7.085406303405762
    8. '("")' → logprob: -7.835406303405762
    9. '("_' → logprob: -8.835406303405762
    10. 's' → logprob: -8.960406303405762

Token 21: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008379706181585789
    2. '()' → logprob: -5.133379936218262
    3. '40' → logprob: -7.383379936218262
    4. '('' → logprob: -7.508379936218262
    5. ' =' → logprob: -8.258379936218262
    6. '.' → logprob: -8.758379936218262
    7. '("("' → logprob: -8.883379936218262
    8. '=' → logprob: -9.133379936218262
    9. '("")' → logprob: -9.258379936218262
    10. '```' → logprob: -9.258379936218262

Token 22: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3665260672569275
    2. ' lambda' → logprob: -1.4915261268615723
    3. 'list' → logprob: -3.6165261268615723
    4. 'map' → logprob: -3.8665261268615723
    5. ' list' → logprob: -4.116526126861572
    6. ' map' → logprob: -4.366526126861572
    7. '(lambda' → logprob: -6.366526126861572
    8. 'ft' → logprob: -6.741526126861572
    9. ' ft' → logprob: -7.241526126861572
    10. ' sys' → logprob: -7.616526126861572

Token 23: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5315370559692383
    2. ':list' → logprob: -1.9065370559692383
    3. ' sys' → logprob: -2.5315370559692383
    4. 'sys' → logprob: -2.9065370559692383
    5. 'list' → logprob: -3.1565370559692383
    6. ' list' → logprob: -4.031537055969238
    7. 'map' → logprob: -4.156537055969238
    8. ':int' → logprob: -4.406537055969238
    9. 'line' → logprob: -4.906537055969238
    10. ' :' → logprob: -5.281537055969238

Token 24: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.14399448037147522
    2. ' map' → logprob: -2.1439945697784424
    3. 'list' → logprob: -4.268994331359863
    4. ' list' → logprob: -5.893994331359863
    5. '[' → logprob: -9.143994331359863
    6. '	map' → logprob: -11.143994331359863
    7. ' ' → logprob: -11.518994331359863
    8. 'm' → logprob: -11.643994331359863
    9. ' [' → logprob: -11.768994331359863
    10. '(map' → logprob: -12.393994331359863

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01110229454934597
    2. '(' → logprob: -4.511102199554443
    3. 'int' → logprob: -10.011102676391602
    4. '<int' → logprob: -12.136102676391602
    5. '(
' → logprob: -14.136102676391602
    6. '[int' → logprob: -14.261102676391602
    7. '```' → logprob: -14.636102676391602
    8. '(ord' → logprob: -14.636102676391602
    9. '(str' → logprob: -14.761102676391602
    10. '(lambda' → logprob: -15.261102676391602

Token 26: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.10881529003381729
    2. '(' → logprob: -2.9838151931762695
    3. ',' → logprob: -3.2338151931762695
    4. ')' → logprob: -4.6088151931762695
    5. '(input' → logprob: -6.1088151931762695
    6. '=sys' → logprob: -8.60881519317627
    7. 'sys' → logprob: -8.73381519317627
    8. '(stdin' → logprob: -9.60881519317627
    9. '(system' → logprob: -9.73381519317627
    10. '(open' → logprob: -10.35881519317627

Token 27: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12329651415348053
    2. ' sys' → logprob: -2.2482964992523193
    3. 'input' → logprob: -4.748296737670898
    4. ' input' → logprob: -6.623296737670898
    5. '(sys' → logprob: -8.748296737670898
    6. '=sys' → logprob: -9.248296737670898
    7. ')' → logprob: -9.748296737670898
    8. '	sys' → logprob: -9.748296737670898
    9. ' ' → logprob: -11.248296737670898
    10. 'stdin' → logprob: -11.748296737670898

Token 28: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007348202052526176
    2. '.argv' → logprob: -7.250734806060791
    3. '.' → logprob: -10.87573528289795
    4. '.std' → logprob: -12.75073528289795
    5. '.stdout' → logprob: -12.87573528289795
    6. '.readline' → logprob: -15.12573528289795
    7. '._' → logprob: -16.500734329223633
    8. '.input' → logprob: -16.875734329223633
    9. 'stdin' → logprob: -17.125734329223633
    10. ' .' → logprob: -17.375734329223633

Token 29: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004916246980428696
    2. '.' → logprob: -5.504916191101074
    3. '.read' → logprob: -7.129916191101074
    4. '.readlines' → logprob: -10.504916191101074
    5. ')' → logprob: -12.254916191101074
    6. ').' → logprob: -13.254916191101074
    7. '.)' → logprob: -13.754916191101074
    8. '.buffer' → logprob: -14.129916191101074
    9. ' .' → logprob: -14.379916191101074
    10. '.stdin' → logprob: -16.50491714477539

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.13102813065052032
    2. '())' → logprob: -2.131028175354004
    3. '()' → logprob: -5.506028175354004
    4. ')' → logprob: -11.131028175354004
    5. ' ())' → logprob: -12.006028175354004
    6. '(' → logprob: -12.881028175354004
    7. ' ().' → logprob: -13.506028175354004
    8. ' ()' → logprob: -14.256028175354004
    9. '();)' → logprob: -14.381028175354004
    10. '(),' → logprob: -14.631028175354004

Token 31: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.11304144561290741
    2. 'split' → logprob: -2.363041400909424
    3. 'rstrip' → logprob: -4.363041400909424
    4. ' strip' → logprob: -11.488041877746582
    5. ' split' → logprob: -13.488041877746582
    6. 'read' → logprob: -13.738041877746582
    7. ' ' → logprob: -16.113040924072266
    8. 'rs' → logprob: -16.363040924072266
    9. 'str' → logprob: -16.738040924072266
    10. 'decode' → logprob: -16.988040924072266

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001382497837767005
    2. ')' → logprob: -7.251382350921631
    3. '()))' → logprob: -7.876382350921631
    4. '()' → logprob: -8.251382827758789
    5. '))' → logprob: -11.001382827758789
    6. '())
' → logprob: -11.626382827758789
    7. ' ())' → logprob: -12.626382827758789
    8. '(' → logprob: -13.876382827758789
    9. '())

' → logprob: -14.501382827758789
    10. '();)' → logprob: -15.376382827758789

Token 33: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22996240854263306
    2. '
' → logprob: -1.9799623489379883
    3. '

' → logprob: -3.6049623489379883
    4. '\n' → logprob: -4.229962348937988
    5. 'for' → logprob: -5.354962348937988
    6. '\' → logprob: -5.479962348937988
    7. '#' → logprob: -5.729962348937988
    8. '' → logprob: -6.479962348937988
    9. 'n' → logprob: -6.854962348937988
    10. '_' → logprob: -6.979962348937988

Token 34: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.045300181955099106
    2. '=' → logprob: -3.420300245285034
    3. ' ' → logprob: -4.920300006866455
    4. ',' → logprob: -5.670300006866455
    5. ' ,' → logprob: -8.295300483703613
    6. '.' → logprob: -8.295300483703613
    7. '  ' → logprob: -8.545300483703613
    8. ')' → logprob: -9.795300483703613
    9. '=int' → logprob: -11.420300483703613
    10. 'space' → logprob: -11.670300483703613

Token 35: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.033086895942688
    2. 'm' → logprob: -1.033086895942688
    3. ' k' → logprob: -1.658086895942688
    4. ' m' → logprob: -2.4080867767333984
    5. 't' → logprob: -7.158086776733398
    6. 'n' → logprob: -7.158086776733398
    7. 'q' → logprob: -7.158086776733398
    8. '=' → logprob: -7.283086776733398
    9. ' t' → logprob: -7.408086776733398
    10. ' ' → logprob: -7.533086776733398

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10032646358013153
    2. '=' → logprob: -2.3503265380859375
    3. ',' → logprob: -9.100326538085938
    4. ' ' → logprob: -12.975326538085938
    5. '<|end|>' → logprob: -13.100326538085938
    6. ')' → logprob: -13.725326538085938
    7. ' ,' → logprob: -14.600326538085938
    8. ' =
' → logprob: -15.225326538085938
    9. ' =",' → logprob: -15.600326538085938
    10. '.' → logprob: -15.600326538085938

Token 37: ' list' (ID: 1562)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.3539591133594513
    2. 'get' → logprob: -1.353959083557129
    3. ' map' → logprob: -3.978959083557129
    4. ' next' → logprob: -4.103959083557129
    5. 'map' → logprob: -5.978959083557129
    6. 'next' → logprob: -6.228959083557129
    7. ' ' → logprob: -9.478959083557129
    8. ' n' → logprob: -10.228959083557129
    9. '0' → logprob: -11.728959083557129
    10. '(get' → logprob: -11.978959083557129

Token 38: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.2547536790370941
    2. '(' → logprob: -1.5047537088394165
    3. '(map' → logprob: -6.504753589630127
    4. '(sys' → logprob: -7.254753589630127
    5. '()' → logprob: -8.629754066467285
    6. '(range' → logprob: -8.879754066467285
    7. '(int' → logprob: -9.254754066467285
    8. '(s' → logprob: -10.379754066467285
    9. '(set' → logprob: -10.754754066467285
    10. '(
' → logprob: -11.004754066467285

Token 39: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -6.630610641877865e-06
    2. 'ints' → logprob: -12.125006675720215
    3. 'int' → logprob: -14.000006675720215
    4. 'Ints' → logprob: -15.125006675720215
    5. '_Int' → logprob: -16.7500057220459
    6. '(int' → logprob: -16.7500057220459
    7. 'Int' → logprob: -17.7500057220459
    8. '(_' → logprob: -17.8750057220459
    9. '```' → logprob: -18.1250057220459
    10. ')' → logprob: -18.7500057220459

Token 40: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.176947600673884e-05
    2. 'ts' → logprob: -10.750021934509277
    3. '(s' → logprob: -16.50002098083496
    4. ' s' → logprob: -16.50002098083496
    5. 't' → logprob: -16.75002098083496
    6. 'ints' → logprob: -17.12502098083496
    7. ')s' → logprob: -17.25002098083496
    8. ')' → logprob: -17.87502098083496
    9. 'ss' → logprob: -17.87502098083496
    10. 'nts' → logprob: -18.12502098083496

Token 41: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003982111811637878
    2. ')' → logprob: -6.003982067108154
    3. '()' → logprob: -6.503982067108154
    4. '());' → logprob: -12.878982543945312
    5. '(),' → logprob: -13.878982543945312
    6. ' ())' → logprob: -13.878982543945312
    7. '();)' → logprob: -14.128982543945312
    8. '()))' → logprob: -14.128982543945312
    9. '())
' → logprob: -14.378982543945312
    10. '(' → logprob: -14.628982543945312

Token 42: 'try' (ID: 1806)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024294346570968628
    2. '\n' → logprob: -4.899294376373291
    3. ' 
' → logprob: -5.399294376373291
    4. '
' → logprob: -6.149294376373291
    5. 'for' → logprob: -6.524294376373291
    6. '<|end|>' → logprob: -6.524294376373291
    7. '  
' → logprob: -6.524294376373291
    8. ' ' → logprob: -6.774294376373291
    9. '

' → logprob: -7.149294376373291
    10. '' → logprob: -7.399294376373291

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011246218346059322
    2. ' :' → logprob: -6.876124858856201
    3. ':
' → logprob: -9.376124382019043
    4. '):' → logprob: -13.001124382019043
    5. ':**' → logprob: -13.751124382019043
    6. ':def' → logprob: -14.626124382019043
    7. ':

' → logprob: -14.876124382019043
    8. ' :
' → logprob: -15.126124382019043
    9. '>:' → logprob: -15.126124382019043
    10. '():' → logprob: -15.813624382019043

Token 44: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1965920329093933
    2. ' :' → logprob: -2.446592092514038
    3. '   ' → logprob: -3.196592092514038
    4. '    ' → logprob: -3.696592092514038
    5. ':
' → logprob: -4.821591854095459
    6. ' ' → logprob: -4.821591854095459
    7. ' n' → logprob: -6.071591854095459
    8. '[' → logprob: -6.571591854095459
    9. 'n' → logprob: -6.821591854095459
    10. '```' → logprob: -7.759091854095459

Token 45: ' import' (ID: 1588)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23671062290668488
    2. ' :' → logprob: -3.361710548400879
    3. ' ' → logprob: -3.486710548400879
    4. '[' → logprob: -3.486710548400879
    5. ' n' → logprob: -3.611710548400879
    6. ':
' → logprob: -3.736710548400879
    7. '   ' → logprob: -3.736710548400879
    8. '    ' → logprob: -4.861710548400879
    9. 'n' → logprob: -5.486710548400879
    10. ' x' → logprob: -6.111710548400879

Token 46: ' numpy' (ID: 19529)
  Prédit: ' numpy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.03328831493854523
    2. ' math' → logprob: -4.158288478851318
    3. ' scipy' → logprob: -5.283288478851318
    4. 'numpy' → logprob: -5.783288478851318
    5. ' sym' → logprob: -6.408288478851318
    6. ' collections' → logprob: -6.533288478851318
    7. '_' → logprob: -6.908288478851318
    8. ' psy' → logprob: -7.158288478851318
    9. ' pandas' → logprob: -7.408288478851318
    10. ' sys' → logprob: -7.658288478851318

Token 47: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.050521280616521835
    2. '<|end|>' → logprob: -3.0505213737487793
    3. '.' → logprob: -7.425521373748779
    4. '<|end|>' → logprob: -7.550521373748779
    5. ' ' → logprob: -7.675521373748779
    6. 'as' → logprob: -9.050520896911621
    7. '
' → logprob: -9.300520896911621
    8. '.ndarray' → logprob: -10.300520896911621
    9. ' .' → logprob: -11.050520896911621
    10. ')' → logprob: -11.050520896911621

Token 48: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.005942779127508402
    2. 'np' → logprob: -5.1309428215026855
    3. ' ' → logprob: -11.880942344665527
    4. ' ' → logprob: -12.380942344665527
    5. '_np' → logprob: -14.130942344665527
    6. ' n' → logprob: -14.380942344665527
    7. ' NP' → logprob: -14.880942344665527
    8. ' numpy' → logprob: -15.255942344665527
    9. '=np' → logprob: -15.380942344665527
    10. 'n' → logprob: -15.755942344665527

Token 49: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43959537148475647
    2. 'except' → logprob: -1.814595341682434
    3. '    
' → logprob: -2.0645954608917236
    4. ' except' → logprob: -3.6895954608917236
    5. ' 
' → logprob: -4.5645952224731445
    6. '\n' → logprob: -5.1895952224731445
    7. '<|end|>' → logprob: -5.3145952224731445
    8. '

' → logprob: -5.6895952224731445
    9. ',' → logprob: -6.0645952224731445
    10. '.' → logprob: -6.3145952224731445

Token 51: ' arr' (ID: 1724)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7021318078041077
    2. 'except' → logprob: -1.452131748199463
    3. '    
' → logprob: -2.202131748199463
    4. ' except' → logprob: -2.952131748199463
    5. '   ' → logprob: -3.452131748199463
    6. 'np' → logprob: -3.827131748199463
    7. ' 
' → logprob: -4.327131748199463
    8. ',' → logprob: -5.327131748199463
    9. ':' → logprob: -5.577131748199463
    10. ' ' → logprob: -5.577131748199463

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6936537027359009
    2. ' =' → logprob: -0.6936537027359009
    3. '=np' → logprob: -8.06865406036377
    4. '_' → logprob: -9.44365406036377
    5. ' ' → logprob: -10.19365406036377
    6. '[' → logprob: -11.06865406036377
    7. ',' → logprob: -11.31865406036377
    8. '.' → logprob: -11.94365406036377
    9. 'ay' → logprob: -11.94365406036377
    10. '_=' → logprob: -11.94365406036377

Token 53: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.5231423377990723
    2. 'np' → logprob: -0.8981423377990723
    3. ' numpy' → logprob: -12.398141860961914
    4. '=np' → logprob: -12.398141860961914
    5. '[np' → logprob: -12.648141860961914
    6. '(np' → logprob: -13.148141860961914
    7. 'numpy' → logprob: -13.148141860961914
    8. '   ' → logprob: -13.648141860961914
    9. ',np' → logprob: -13.773141860961914
    10. '_np' → logprob: -15.210641860961914

Token 54: '.from' (ID: 10935)
  Prédit: '.zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.2137860506772995
    2. '.arange' → logprob: -2.2137861251831055
    3. '.array' → logprob: -3.4637861251831055
    4. '.empty' → logprob: -3.8387861251831055
    5. '.' → logprob: -3.9637861251831055
    6. '.random' → logprob: -5.9637861251831055
    7. '.ones' → logprob: -5.9637861251831055
    8. '.full' → logprob: -6.3387861251831055
    9. '.ndarray' → logprob: -6.5887861251831055
    10. '.from' → logprob: -6.5887861251831055

Token 55: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.9266793727874756
    2. 'buffer' → logprob: -1.1766793727874756
    3. 'file' → logprob: -1.6766793727874756
    4. 'stdin' → logprob: -2.8016793727874756
    5. 'iter' → logprob: -3.3016793727874756
    6. 'input' → logprob: -5.676679611206055
    7. 'function' → logprob: -6.051679611206055
    8. 'txt' → logprob: -6.301679611206055
    9. 'sys' → logprob: -6.801679611206055
    10. 'iterator' → logprob: -7.301679611206055

Token 56: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.34723103046417236
    2. '(' → logprob: -1.3472310304641724
    3. '(input' → logprob: -3.597230911254883
    4. '('',' → logprob: -5.597230911254883
    5. '('' → logprob: -6.972230911254883
    6. 'input' → logprob: -8.097230911254883
    7. '("",' → logprob: -8.472230911254883
    8. ' (' → logprob: -8.972230911254883
    9. '(s' → logprob: -9.097230911254883
    10. '(
' → logprob: -9.472230911254883

Token 57: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.111979357432574e-05
    2. '.' → logprob: -10.75007152557373
    3. 'stdin' → logprob: -10.75007152557373
    4. '.readline' → logprob: -10.87507152557373
    5. '.stdout' → logprob: -12.00007152557373
    6. '.std' → logprob: -13.25007152557373
    7. '.argv' → logprob: -13.87507152557373
    8. ' stdin' → logprob: -15.62507152557373
    9. '(stdin' → logprob: -15.62507152557373
    10. '.read' → logprob: -17.250070571899414

Token 58: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0036608832888305187
    2. '.read' → logprob: -5.628660678863525
    3. '().' → logprob: -10.753661155700684
    4. '.buffer' → logprob: -10.753661155700684
    5. ',' → logprob: -12.378661155700684
    6. '.' → logprob: -12.753661155700684
    7. ' readline' → logprob: -12.753661155700684
    8. 'read' → logprob: -12.878661155700684
    9. '.readlines' → logprob: -13.128661155700684
    10. 'buffer' → logprob: -13.628661155700684

Token 59: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.44116073846817017
    2. ',' → logprob: -2.3161606788635254
    3. '('' → logprob: -2.6911606788635254
    4. '(' → logprob: -2.6911606788635254
    5. '(',',' → logprob: -3.4411606788635254
    6. '('',' → logprob: -3.5661606788635254
    7. '(','' → logprob: -3.6911606788635254
    8. '(',' → logprob: -4.316160678863525
    9. '(),'' → logprob: -5.191160678863525
    10. '',' → logprob: -5.691160678863525

Token 60: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.363286554813385
    2. 'sep' → logprob: -1.9882864952087402
    3. ' dtype' → logprob: -2.3632864952087402
    4. ' sep' → logprob: -2.6132864952087402
    5. 'd' → logprob: -9.613286972045898
    6. ' ' → logprob: -9.738286972045898
    7. 'int' → logprob: -9.988286972045898
    8. 'se' → logprob: -10.613286972045898
    9. ' d' → logprob: -10.863286972045898
    10. '(dtype' → logprob: -11.238286972045898

Token 61: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5999083518981934
    2. '=np' → logprob: -1.2249083518981934
    3. '=int' → logprob: -1.8499083518981934
    4. '=n' → logprob: -9.849908828735352
    5. 'int' → logprob: -11.474908828735352
    6. '='' → logprob: -11.724908828735352
    7. ' =' → logprob: -12.224908828735352
    8. '=float' → logprob: -12.224908828735352
    9. '=
' → logprob: -12.974908828735352
    10. '=i' → logprob: -13.099908828735352

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005529354326426983
    2. ' ,' → logprob: -5.255529403686523
    3. ')' → logprob: -8.755529403686523
    4. '',' → logprob: -10.255529403686523
    5. '(),' → logprob: -10.505529403686523
    6. ',count' → logprob: -10.755529403686523
    7. '),' → logprob: -11.255529403686523
    8. ',
' → logprob: -12.505529403686523
    9. '  ' → logprob: -12.755529403686523
    10. ' ' → logprob: -12.880529403686523

Token 63: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.25275158882141113
    2. ' sep' → logprob: -1.5027515888214111
    3. ' count' → logprob: -8.377751350402832
    4. ' ' → logprob: -8.752751350402832
    5. 'dtype' → logprob: -8.752751350402832
    6. 'count' → logprob: -8.877751350402832
    7. 'se' → logprob: -9.252751350402832
    8. ' dtype' → logprob: -11.252751350402832
    9. '```' → logprob: -12.252751350402832
    10. 'separator' → logprob: -12.252751350402832

Token 64: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.005555909126996994
    2. '=' → logprob: -6.005556106567383
    3. '=',' → logprob: -6.380556106567383
    4. '="' → logprob: -6.630556106567383
    5. '=",' → logprob: -10.255556106567383
    6. ''' → logprob: -11.005556106567383
    7. '='\' → logprob: -12.630556106567383
    8. ''=' → logprob: -13.005556106567383
    9. '"' → logprob: -13.630556106567383
    10. '=='' → logprob: -14.755556106567383

Token 65: ' ')
' (ID: 49195)
  Prédit: ' ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ')' → logprob: -0.7467209100723267
    2. ''' → logprob: -0.9967209100723267
    3. ' ' → logprob: -2.621720790863037
    4. ' )' → logprob: -3.121720790863037
    5. ' '' → logprob: -3.871720790863037
    6. '')' → logprob: -4.371720790863037
    7. ')' → logprob: -5.246720790863037
    8. ' ,' → logprob: -7.121720790863037
    9. ' ')
' → logprob: -8.871721267700195
    10. ',' → logprob: -9.121721267700195

Token 66: 'except' (ID: 25035)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5885368585586548
    2. ')
' → logprob: -1.7135368585586548
    3. '   ' → logprob: -1.9635368585586548
    4. 'except' → logprob: -2.8385367393493652
    5. '
' → logprob: -4.463536739349365
    6. ',' → logprob: -4.463536739349365
    7. '    
' → logprob: -4.838536739349365
    8. ' except' → logprob: -4.838536739349365
    9. ').' → logprob: -4.963536739349365
    10. '[:-' → logprob: -5.713536739349365

Token 67: ' Import' (ID: 19998)
  Prédit: ' Import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Import' → logprob: -0.10280386358499527
    2. ' Module' → logprob: -2.727803945541382
    3. 'Import' → logprob: -3.977803945541382
    4. 'Module' → logprob: -4.602803707122803
    5. ':' → logprob: -6.227803707122803
    6. ' ' → logprob: -6.977803707122803
    7. ' Exception' → logprob: -8.227804183959961
    8. '(Module' → logprob: -8.852804183959961
    9. '  ' → logprob: -9.602804183959961
    10. 'Indent' → logprob: -10.852804183959961

Token 68: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0005551783833652735
    2. 'rror' → logprob: -7.500555038452148
    3. 'error' → logprob: -13.625555038452148
    4. 'ror' → logprob: -14.625555038452148
    5. 'Warning' → logprob: -14.875555038452148
    6. 'r' → logprob: -15.875555038452148
    7. 'Er' → logprob: -16.50055503845215
    8. 'Err' → logprob: -17.87555503845215
    9. 'er' → logprob: -18.37555503845215
    10. 'Erro' → logprob: -18.50055503845215

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013131031300872564
    2. ':
' → logprob: -9.375131607055664
    3. ' :' → logprob: -10.125131607055664
    4. '   ' → logprob: -13.000131607055664
    5. ' as' → logprob: -13.750131607055664
    6. ',' → logprob: -14.375131607055664
    7. ':return' → logprob: -14.375131607055664
    8. ':**' → logprob: -14.750131607055664
    9. '):' → logprob: -15.000131607055664
    10. ':

' → logprob: -15.125131607055664

Token 70: '   ' (ID: 271)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.46944573521614075
    2. '   ' → logprob: -1.0944457054138184
    3. 'arr' → logprob: -3.3444457054138184
    4. ' pass' → logprob: -6.219445705413818
    5. '    ' → logprob: -6.469445705413818
    6. '	arr' → logprob: -7.844445705413818
    7. 'pass' → logprob: -9.219446182250977
    8. ' ' → logprob: -9.219446182250977
    9. ' print' → logprob: -9.781946182250977
    10. ' raise' → logprob: -10.219446182250977

Token 71: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.07566502690315247
    2. 'arr' (adapté à ' arr') → logprob: -2.70066499710083
    3. '   ' → logprob: -5.20066499710083
    4. '	arr' → logprob: -11.075665473937988
    5. '[' → logprob: -11.200665473937988
    6. 'lst' → logprob: -11.513165473937988
    7. ' from' → logprob: -11.700665473937988
    8. ' lst' → logprob: -11.700665473937988
    9. '_arr' → logprob: -11.888165473937988
    10. ' sys' → logprob: -12.013165473937988

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804987296462059
    2. '=' → logprob: -3.2880499362945557
    3. '=list' → logprob: -12.663049697875977
    4. ' ' → logprob: -13.038049697875977
    5. '=[]' → logprob: -13.788049697875977
    6. '  ' → logprob: -15.038049697875977
    7. '   ' → logprob: -15.288049697875977
    8. ':' → logprob: -15.288049697875977
    9. '[:]' → logprob: -15.663049697875977
    10. ',' → logprob: -15.788049697875977

Token 73: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06446151435375214
    2. ' list' → logprob: -2.8144614696502686
    3. '[]' → logprob: -7.314461708068848
    4. 'np' → logprob: -7.314461708068848
    5. '[' → logprob: -8.314461708068848
    6. 'ft' → logprob: -8.564461708068848
    7. 'array' → logprob: -9.064461708068848
    8. ' [' → logprob: -9.189461708068848
    9. ' np' → logprob: -9.189461708068848
    10. ' []' → logprob: -9.564461708068848

Token 74: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.0009090794483199716
    2. '(it' → logprob: -7.750908851623535
    3. '(map' → logprob: -8.375908851623535
    4. '(' → logprob: -9.375908851623535
    5. 'get' → logprob: -9.375908851623535
    6. '()' → logprob: -10.375908851623535
    7. '(list' → logprob: -11.000908851623535
    8. '(ft' → logprob: -12.250908851623535
    9. '(iter' → logprob: -12.375908851623535
    10. '(next' → logprob: -12.750908851623535

Token 75: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -1.2664456789934775e-06
    2. 'ints' → logprob: -14.000000953674316
    3. 'int' → logprob: -15.750000953674316
    4. 'Ints' → logprob: -16.250001907348633
    5. '_in' → logprob: -17.250001907348633
    6. 's' → logprob: -17.625001907348633
    7. '_Int' → logprob: -17.625001907348633
    8. 'Int' → logprob: -18.125001907348633
    9. '_' → logprob: -18.625001907348633
    10. '_uint' → logprob: -19.000001907348633

Token 76: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20158466696739197
    2. 'ts' → logprob: -1.7015846967697144
    3. 't' → logprob: -8.701584815979004
    4. '_ts' → logprob: -13.201584815979004
    5. ')s' → logprob: -14.326584815979004
    6. ')' → logprob: -14.576584815979004
    7. '(ts' → logprob: -14.701584815979004
    8. 'ls' → logprob: -15.076584815979004
    9. 'sts' → logprob: -15.451584815979004
    10. '(s' → logprob: -15.576584815979004

Token 77: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47482481598854065
    2. '())' → logprob: -1.2248247861862183
    3. '()' → logprob: -2.474824905395508
    4. '())
' → logprob: -12.099824905395508
    5. '(' → logprob: -12.599824905395508
    6. '))' → logprob: -12.599824905395508
    7. '()
' → logprob: -13.349824905395508
    8. ')
' → logprob: -13.974824905395508
    9. ' )' → logprob: -14.099824905395508
    10. ' ())' → logprob: -14.224824905395508

Token 78: 'prefix' (ID: 26155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8406856656074524
    2. '.' → logprob: -1.5906856060028076
    3. '
' → logprob: -1.9656856060028076
    4. '#' → logprob: -2.4656856060028076
    5. ')' → logprob: -3.8406856060028076
    6. '<|end|>' → logprob: -4.340685844421387
    7. '[
' → logprob: -4.465685844421387
    8. 'for' → logprob: -4.465685844421387
    9. '\n' → logprob: -4.840685844421387
    10. 'n' → logprob: -4.840685844421387

Token 79: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02852247655391693
    2. '_sum' → logprob: -3.653522491455078
    3. '_s' → logprob: -6.153522491455078
    4. 's' → logprob: -10.153522491455078
    5. ' _' → logprob: -11.528522491455078
    6. 'sum' → logprob: -11.653522491455078
    7. '_=' → logprob: -12.153522491455078
    8. '_max' → logprob: -12.278522491455078
    9. '_)' → logprob: -12.528522491455078
    10. '_counts' → logprob: -13.028522491455078

Token 80: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13841727375984192
    2. ' [' → logprob: -2.1384172439575195
    3. '0' → logprob: -4.7634172439575195
    4. 'arr' → logprob: -6.8884172439575195
    5. ' ' → logprob: -7.7634172439575195
    6. '[arr' → logprob: -7.7634172439575195
    7. 'ft' → logprob: -8.13841724395752
    8. '[]' → logprob: -8.76341724395752
    9. '[it' → logprob: -9.26341724395752
    10. ' arr' → logprob: -9.63841724395752

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.991464786347933e-05
    2. ' ' → logprob: -10.000060081481934
    3. 'arr' → logprob: -11.250060081481934
    4. '(' → logprob: -14.875060081481934
    5. ')' → logprob: -15.375060081481934
    6. ']' → logprob: -15.625060081481934
    7. '[' → logprob: -15.750060081481934
    8. '1' → logprob: -15.875060081481934
    9. ' arr' → logprob: -16.312559127807617
    10. '-' → logprob: -16.687559127807617

Token 82: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00021450345229823142
    2. ']*' → logprob: -9.375214576721191
    3. ']*(' → logprob: -9.625214576721191
    4. ',' → logprob: -10.375214576721191
    5. ' ]' → logprob: -11.500214576721191
    6. ']+' → logprob: -11.500214576721191
    7. ']
' → logprob: -12.000214576721191
    8. '()]' → logprob: -14.000214576721191
    9. ' for' → logprob: -14.250214576721191
    10. '*' → logprob: -14.250214576721191

Token 83: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22600513696670532
    2. ' for' → logprob: -1.6010050773620605
    3. '+' → logprob: -7.9760050773620605
    4. 'i' → logprob: -10.101005554199219
    5. '
' → logprob: -10.226005554199219
    6. 'f' → logprob: -10.601005554199219
    7. '	for' → logprob: -10.601005554199219
    8. '*' → logprob: -10.601005554199219
    9. ' ' → logprob: -11.101005554199219
    10. '+
' → logprob: -11.601005554199219

Token 84: ' num' (ID: 2269)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11425677686929703
    2. ' x' → logprob: -2.8642568588256836
    3. 'i' → logprob: -3.6142568588256836
    4. 'v' → logprob: -4.864256858825684
    5. ' i' → logprob: -4.864256858825684
    6. 'a' → logprob: -5.114256858825684
    7. ' v' → logprob: -7.114256858825684
    8. ' val' → logprob: -7.864256858825684
    9. 'num' → logprob: -7.864256858825684
    10. ' a' → logprob: -8.489256858825684

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011131768114864826
    2. 'in' → logprob: -4.511131763458252
    3. ' ' → logprob: -9.76113224029541
    4. ' i' → logprob: -12.01113224029541
    5. '	in' → logprob: -12.13613224029541
    6. 's' → logprob: -12.26113224029541
    7. 'i' → logprob: -13.38613224029541
    8. '  ' → logprob: -13.63613224029541
    9. ' ' → logprob: -13.82363224029541
    10. 'ine' → logprob: -14.51113224029541

Token 86: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.009327821433544159
    2. '(arr' → logprob: -5.2593278884887695
    3. ' arr' → logprob: -5.5093278884887695
    4. '(' → logprob: -11.50932788848877
    5. ' (' → logprob: -11.50932788848877
    6. '	arr' → logprob: -11.75932788848877
    7. '[arr' → logprob: -12.25932788848877
    8. 'prefix' → logprob: -13.88432788848877
    9. '_arr' → logprob: -14.50932788848877
    10. '<arr' → logprob: -14.63432788848877

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007211300544440746
    2. ':
' → logprob: -7.500720977783203
    3. ' :' → logprob: -9.375720977783203
    4. ',' → logprob: -10.125720977783203
    5. '):' → logprob: -10.875720977783203
    6. '[' → logprob: -11.875720977783203
    7. '   ' → logprob: -12.000720977783203
    8. '.' → logprob: -13.375720977783203
    9. '+' → logprob: -13.625720977783203
    10. '.append' → logprob: -14.000720977783203

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3147464990615845
    2. ' prefix' → logprob: -1.3147464990615845
    3. 'prefix' → logprob: -6.689746379852295
    4. '(prefix' → logprob: -9.689746856689453
    5. ' ' → logprob: -9.939746856689453
    6. '_prefix' → logprob: -10.564746856689453
    7. '    ' → logprob: -10.689746856689453
    8. '    
' → logprob: -11.439746856689453
    9. '.prefix' → logprob: -11.564746856689453
    10. '       ' → logprob: -11.689746856689453

Token 89: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.09572915732860565
    2. '   ' → logprob: -2.970729112625122
    3. 'prefix' (adapté à ' prefix') → logprob: -3.220729112625122
    4. '(prefix' → logprob: -10.345728874206543
    5. '_prefix' → logprob: -10.845728874206543
    6. '.prefix' → logprob: -11.345728874206543
    7. '       ' → logprob: -12.095728874206543
    8. ' ' → logprob: -12.595728874206543
    9. '-prefix' → logprob: -12.720728874206543
    10. 'Prefix' → logprob: -13.033228874206543

Token 90: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008860491216182709
    2. '.' → logprob: -4.7588605880737305
    3. ' .' → logprob: -8.88386058807373
    4. '[-' → logprob: -9.75886058807373
    5. '.extend' → logprob: -10.75886058807373
    6. '   ' → logprob: -11.63386058807373
    7. 'append' → logprob: -12.63386058807373
    8. '.app' → logprob: -13.13386058807373
    9. '_append' → logprob: -13.13386058807373
    10. '.add' → logprob: -13.38386058807373

Token 91: '((' (ID: 2054)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.3107457458972931
    2. ' prefix' → logprob: -1.8107457160949707
    3. 'prefix' → logprob: -2.3107457160949707
    4. '(' → logprob: -5.435745716094971
    5. ' (' → logprob: -11.560746192932129
    6. '_prefix' → logprob: -12.810746192932129
    7. ' ' → logprob: -13.560746192932129
    8. '+' → logprob: -13.810746192932129
    9. '(num' → logprob: -13.935746192932129
    10. '.prefix' → logprob: -14.060746192932129

Token 92: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.06204017251729965
    2. ' prefix' → logprob: -2.812040090560913
    3. 'num' → logprob: -10.437040328979492
    4. ' ' → logprob: -10.937040328979492
    5. '(prefix' → logprob: -12.062040328979492
    6. '   ' → logprob: -12.437040328979492
    7. '_prefix' → logprob: -12.437040328979492
    8. ' num' → logprob: -12.812040328979492
    9. '0' → logprob: -13.312040328979492
    10. '-prefix' → logprob: -13.812040328979492

Token 93: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00013619766104966402
    2. '-' → logprob: -9.000136375427246
    3. '   ' → logprob: -11.750136375427246
    4. '][-' → logprob: -12.875136375427246
    5. ' [-' → logprob: -14.250136375427246
    6. ')' → logprob: -14.375136375427246
    7. ' -' → logprob: -15.000136375427246
    8. '[' → logprob: -15.625136375427246
    9. ')[' → logprob: -16.12513542175293
    10. '+' → logprob: -16.12513542175293

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.750014305114746
    3. ']' → logprob: -12.625014305114746
    4. ']+' → logprob: -13.375014305114746
    5. '   ' → logprob: -14.500014305114746
    6. '+' → logprob: -14.750014305114746
    7. '  ' → logprob: -16.62501335144043
    8. '])' → logprob: -16.75001335144043
    9. ')' → logprob: -16.87501335144043
    10. ' +' → logprob: -17.25001335144043

Token 95: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6358939409255981
    2. '+' → logprob: -0.7608939409255981
    3. ')' → logprob: -6.010893821716309
    4. ')+' → logprob: -7.260893821716309
    5. ' ' → logprob: -9.385893821716309
    6. ' )' → logprob: -10.385893821716309
    7. ']+' → logprob: -12.385893821716309
    8. '+)' → logprob: -12.760893821716309
    9. ']' → logprob: -13.010893821716309
    10. ')+(' → logprob: -13.260893821716309

Token 96: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3869066536426544
    2. ' +' → logprob: -1.136906623840332
    3. ' ' → logprob: -11.386906623840332
    4. '+
' → logprob: -11.886906623840332
    5. ' +
' → logprob: -12.011906623840332
    6. ')' → logprob: -12.636906623840332
    7. ')+' → logprob: -12.761906623840332
    8. ' ' → logprob: -13.636906623840332
    9. ' plus' → logprob: -14.261906623840332
    10. ' op' → logprob: -14.386906623840332

Token 97: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.20146089792251587
    2. ' num' → logprob: -1.701460838317871
    3. 'op' → logprob: -10.826460838317871
    4. ' op' → logprob: -11.451460838317871
    5. ' ' → logprob: -11.701460838317871
    6. '(num' → logprob: -12.826460838317871
    7. '   ' → logprob: -13.326460838317871
    8. '	num' → logprob: -14.076460838317871
    9. 'int' → logprob: -14.576460838317871
    10. 'n' → logprob: -14.951460838317871

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001581993536092341
    2. ')%' → logprob: -6.626582145690918
    3. ' )' → logprob: -8.876582145690918
    4. '))' → logprob: -9.126582145690918
    5. '%' → logprob: -12.376582145690918
    6. ' %' → logprob: -13.001582145690918
    7. ' ))' → logprob: -15.501582145690918
    8. '   ' → logprob: -15.876582145690918
    9. ')
' → logprob: -16.2515811920166
    10. ')`' → logprob: -16.3765811920166

Token 99: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.057612959295511246
    2. '%' → logprob: -2.932612895965576
    3. ' %' → logprob: -6.057612895965576
    4. ')%' → logprob: -8.182613372802734
    5. ' )' → logprob: -9.807613372802734
    6. '<|end|>' → logprob: -10.932613372802734
    7. '%)' → logprob: -11.807613372802734
    8. ' ' → logprob: -12.307613372802734
    9. '   ' → logprob: -12.307613372802734
    10. '<|end|>' → logprob: -13.057613372802734

Token 100: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006844899617135525
    2. ' m' → logprob: -5.131844997406006
    3. '(m' → logprob: -7.631844997406006
    4. ' ' → logprob: -9.256844520568848
    5. '998' → logprob: -9.631844520568848
    6. ' (' → logprob: -9.756844520568848
    7. '100' → logprob: -10.131844520568848
    8. '2' → logprob: -10.256844520568848
    9. '(' → logprob: -10.256844520568848
    10. 'p' → logprob: -11.006844520568848

Token 101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -15.250000953674316
    4. '))' → logprob: -15.875000953674316
    5. ')`' → logprob: -16.625
    6. ')#' → logprob: -18.375
    7. '),' → logprob: -18.625
    8. ')

' → logprob: -18.625
    9. ')}' → logprob: -19.0
    10. '   ' → logprob: -19.25

Token 102: 'mod' (ID: 4847)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.489702045917511
    2. 'res' → logprob: -2.489701986312866
    3. 'result' → logprob: -2.739701986312866
    4. '#' → logprob: -3.239701986312866
    5. 'q' → logprob: -3.739701986312866
    6. 'mod' → logprob: -4.364702224731445
    7. 's' → logprob: -4.364702224731445
    8. 'i' → logprob: -4.364702224731445
    9. '<|end|>' → logprob: -4.364702224731445
    10. 'prefix' → logprob: -4.614702224731445

Token 103: 'ded' (ID: 33732)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.04199449345469475
    2. '_count' → logprob: -3.791994571685791
    3. '_indices' → logprob: -4.916994571685791
    4. '_counter' → logprob: -5.416994571685791
    5. 's' → logprob: -6.416994571685791
    6. '_' → logprob: -7.041994571685791
    7. '_map' → logprob: -7.416994571685791
    8. 'counts' → logprob: -7.541994571685791
    9. '_cnt' → logprob: -7.666994571685791
    10. '_sum' → logprob: -7.666994571685791

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9412094354629517
    2. '_counts' → logprob: -1.0662094354629517
    3. '_' → logprob: -2.191209316253662
    4. '_indices' → logprob: -3.691209316253662
    5. '=' → logprob: -3.816209316253662
    6. '_count' → logprob: -3.816209316253662
    7. '_prefix' → logprob: -3.941209316253662
    8. '_sum' → logprob: -4.191209316253662
    9. 's' → logprob: -4.691209316253662
    10. '_freq' → logprob: -4.941209316253662

Token 105: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5945500731468201
    2. '{}' → logprob: -1.5945501327514648
    3. '{' → logprob: -1.7195501327514648
    4. 'ft' → logprob: -3.719550132751465
    5. ' [' → logprob: -3.844550132751465
    6. ' {}' → logprob: -5.719550132751465
    7. '[(' → logprob: -5.844550132751465
    8. 'list' → logprob: -5.969550132751465
    9. 'collections' → logprob: -6.094550132751465
    10. 'dict' → logprob: -6.344550132751465

Token 106: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.01878165639936924
    2. '(prefix' → logprob: -4.893781661987305
    3. '(it' → logprob: -5.143781661987305
    4. '(ft' → logprob: -6.018781661987305
    5. '(' → logprob: -6.393781661987305
    6. '((' → logprob: -7.643781661987305
    7. '(range' → logprob: -8.643781661987305
    8. '(filter' → logprob: -8.893781661987305
    9. 'map' → logprob: -9.393781661987305
    10. '(op' → logprob: -9.518781661987305

Token 107: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.31446972489356995
    2. '(prefix' → logprob: -1.9394696950912476
    3. '(op' → logprob: -2.189469814300537
    4. '((' → logprob: -5.564469814300537
    5. '(operator' → logprob: -5.564469814300537
    6. '(' → logprob: -5.689469814300537
    7. '(f' → logprob: -6.314469814300537
    8. '(ft' → logprob: -7.439469814300537
    9. '(part' → logprob: -8.439469337463379
    10. 'prefix' → logprob: -9.814469337463379

Token 108: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2615417242050171
    2. 'x' → logprob: -1.511541724205017
    3. '(x' → logprob: -5.386541843414307
    4. ' i' → logprob: -7.011541843414307
    5. ' (' → logprob: -7.261541843414307
    6. 'a' → logprob: -7.386541843414307
    7. ' a' → logprob: -8.136541366577148
    8. ' k' → logprob: -8.511541366577148
    9. 'k' → logprob: -8.511541366577148
    10. '(' → logprob: -8.636541366577148

Token 109: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010682971915230155
    2. ' :' → logprob: -6.876068115234375
    3. ':(' → logprob: -11.501068115234375
    4. ',' → logprob: -11.751068115234375
    5. ':return' → logprob: -12.001068115234375
    6. ':
' → logprob: -12.501068115234375
    7. ' :(' → logprob: -14.126068115234375
    8. ' x' → logprob: -14.126068115234375
    9. ':`' → logprob: -14.251068115234375
    10. ' mod' → logprob: -14.251068115234375

Token 110: ' x' (ID: 1215)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.5240814089775085
    2. 'prefix' → logprob: -2.1490814685821533
    3. 'x' → logprob: -2.2740814685821533
    4. '(x' → logprob: -2.5240814685821533
    5. '(op' → logprob: -3.1490814685821533
    6. '(lambda' → logprob: -3.7740814685821533
    7. ' (' → logprob: -4.524081230163574
    8. 'op' → logprob: -5.149081230163574
    9. '((' → logprob: -5.524081230163574
    10. ' x' → logprob: -5.524081230163574

Token 111: ' %' (ID: 1851)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11179178208112717
    2. ' %' → logprob: -2.9867918491363525
    3. '*' → logprob: -3.8617918491363525
    4. ' *' → logprob: -4.236791610717773
    5. '%' → logprob: -4.861791610717773
    6. ' :' → logprob: -5.486791610717773
    7. '**' → logprob: -5.486791610717773
    8. ':x' → logprob: -6.986791610717773
    9. ' ' → logprob: -7.361791610717773
    10. '*x' → logprob: -7.736791610717773

Token 112: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0017043406842276454
    2. ' m' → logprob: -6.376704216003418
    3. 'n' → logprob: -13.751704216003418
    4. ' ' → logprob: -14.126704216003418
    5. '   ' → logprob: -15.376704216003418
    6. '
' → logprob: -17.001705169677734
    7. '	m' → logprob: -17.126705169677734
    8. '  ' → logprob: -17.626705169677734
    9. ')m' → logprob: -17.626705169677734
    10. '<|end|>' → logprob: -17.751705169677734

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018477320671081543
    2. ',p' → logprob: -4.018477439880371
    3. ' ,' → logprob: -8.518477439880371
    4. 'prefix' → logprob: -9.143477439880371
    5. '   ' → logprob: -12.268477439880371
    6. ' prefix' → logprob: -12.643477439880371
    7. ',
' → logprob: -12.643477439880371
    8. '(prefix' → logprob: -12.893477439880371
    9. '))' → logprob: -13.268477439880371
    10. '),' → logprob: -13.893477439880371

Token 114: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0034271120093762875
    2. 'arr' → logprob: -6.003427028656006
    3. ' prefix' → logprob: -7.128427028656006
    4. '(prefix' → logprob: -9.753427505493164
    5. 'it' → logprob: -10.128427505493164
    6. 'range' → logprob: -10.628427505493164
    7. '[' → logprob: -11.253427505493164
    8. ' arr' → logprob: -12.503427505493164
    9. 'pref' → logprob: -13.628427505493164
    10. '[arr' → logprob: -13.878427505493164

Token 115: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00022880789765622467
    2. '))
' → logprob: -9.375228881835938
    3. ' ))' → logprob: -9.375228881835938
    4. ')' → logprob: -9.875228881835938
    5. ')))' → logprob: -12.125228881835938
    6. ' ' → logprob: -14.125228881835938
    7. '));' → logprob: -15.000228881835938
    8. '))

' → logprob: -15.125228881835938
    9. '[:-' → logprob: -15.750228881835938
    10. '   ' → logprob: -15.750228881835938

Token 116: 'freq' (ID: 71759)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.4016857445240021
    2. 'sorted' → logprob: -1.5266857147216797
    3. 'count' → logprob: -3.6516857147216797
    4. 'prefix' → logprob: -4.15168571472168
    5. 'counts' → logprob: -4.15168571472168
    6. 'stack' → logprob: -4.27668571472168
    7. 'mods' → logprob: -5.02668571472168
    8. 'freq' → logprob: -5.15168571472168
    9. 'arr' → logprob: -5.27668571472168
    10. 'counter' → logprob: -5.52668571472168

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02632422000169754
    2. '=' → logprob: -3.6513242721557617
    3. '_' → logprob: -11.901324272155762
    4. ')' → logprob: -12.401324272155762
    5. 's' → logprob: -12.401324272155762
    6. ' ' → logprob: -12.901324272155762
    7. '[' → logprob: -13.901324272155762
    8. '(' → logprob: -14.151324272155762
    9. ',' → logprob: -14.526324272155762
    10. '  ' → logprob: -14.526324272155762

Token 118: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.01593524031341076
    2. '[' → logprob: -4.26593542098999
    3. '{' → logprob: -6.51593542098999
    4. ' {}' → logprob: -9.015934944152832
    5. ' [' → logprob: -9.640934944152832
    6. 'dict' → logprob: -9.890934944152832
    7. 'collections' → logprob: -10.890934944152832
    8. '{}

' → logprob: -11.390934944152832
    9. 'default' → logprob: -11.765934944152832
    10. 'ft' → logprob: -11.765934944152832

Token 119: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0023513841442763805
    2. 'max' → logprob: -6.7523512840271
    3. 'result' → logprob: -8.002351760864258
    4. 'count' → logprob: -8.127351760864258
    5. ' for' → logprob: -8.502351760864258
    6. 'res' → logprob: -9.252351760864258
    7. 'answer' → logprob: -9.627351760864258
    8. 'ans' → logprob: -9.752351760864258
    9. 'total' → logprob: -9.752351760864258
    10. 'mod' → logprob: -11.377351760864258

Token 120: ' val' (ID: 1459)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2553626000881195
    2. 'val' → logprob: -2.7553625106811523
    3. 'mod' → logprob: -2.8803625106811523
    4. ' x' → logprob: -3.2553625106811523
    5. ' val' → logprob: -3.6303625106811523
    6. 'value' → logprob: -4.130362510681152
    7. 'v' → logprob: -5.005362510681152
    8. 'r' → logprob: -5.255362510681152
    9. 'num' → logprob: -5.630362510681152
    10. ' mod' → logprob: -5.755362510681152

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04302717000246048
    2. 'in' → logprob: -3.16802716255188
    3. ' ' → logprob: -10.7930269241333
    4. '	in' → logprob: -13.1680269241333
    5. '_in' → logprob: -13.9180269241333
    6. 'In' → logprob: -14.4180269241333
    7. '  ' → logprob: -14.7930269241333
    8. 's' → logprob: -14.9805269241333
    9. 'import' → logprob: -15.1680269241333
    10. '   ' → logprob: -15.1680269241333

Token 122: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5760170221328735
    2. ' mod' → logprob: -0.8260170221328735
    3. 'm' → logprob: -10.701017379760742
    4. '	mod' → logprob: -10.951017379760742
    5. ' ' → logprob: -11.076017379760742
    6. '(mod' → logprob: -11.826017379760742
    7. 'prefix' → logprob: -12.826017379760742
    8. ' modd' → logprob: -12.826017379760742
    9. '```' → logprob: -13.326017379760742
    10. ' modu' → logprob: -14.076017379760742

Token 123: 'ded' (ID: 33732)
  Prédit: 'ded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ded' → logprob: -0.36556708812713623
    2. 'freq' → logprob: -1.7405670881271362
    3. 'mod' → logprob: -2.240567207336426
    4. 'med' → logprob: -4.115567207336426
    5. 'fed' → logprob: -6.115567207336426
    6. 'ed' → logprob: -6.365567207336426
    7. 'oded' → logprob: -6.740567207336426
    8. 'ted' → logprob: -7.365567207336426
    9. 'ged' → logprob: -7.490567207336426
    10. 'prefix' → logprob: -8.365567207336426

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002261854097014293
    2. ':
' → logprob: -8.750226020812988
    3. ' :' → logprob: -9.625226020812988
    4. '):' → logprob: -14.000226020812988
    5. ':**' → logprob: -15.125226020812988
    6. ':
' → logprob: -15.750226020812988
    7. ' :
' → logprob: -16.875226974487305
    8. '   ' → logprob: -17.000226974487305
    9. ':

' → logprob: -17.125226974487305
    10. ':list' → logprob: -17.125226974487305

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036374349147081375
    2. 'freq' → logprob: -3.53637433052063
    3. ' freq' → logprob: -5.036374568939209
    4. '_freq' → logprob: -10.78637409210205
    5. ' frequency' → logprob: -10.91137409210205
    6. '```' → logprob: -10.91137409210205
    7. 'frequency' → logprob: -11.28637409210205
    8. '(freq' → logprob: -11.91137409210205
    9. ' if' → logprob: -12.28637409210205
    10. 'fre' → logprob: -12.53637409210205

Token 126: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' (adapté à ' freq') → logprob: -0.004313803277909756
    2. ' freq' → logprob: -6.129313945770264
    3. '   ' → logprob: -6.254313945770264
    4. 'if' → logprob: -9.004313468933105
    5. 'frequency' → logprob: -9.629313468933105
    6. 'fre' → logprob: -12.379313468933105
    7. '_freq' → logprob: -12.629313468933105
    8. '(freq' → logprob: -13.254313468933105
    9. ' if' → logprob: -13.504313468933105
    10. ' ' → logprob: -13.504313468933105

Token 127: '[val' (ID: 162482)
  Prédit: '[val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -2.8802491215174086e-05
    2. '.setdefault' → logprob: -11.250028610229492
    3. '[' → logprob: -11.750028610229492
    4. '[f' → logprob: -11.875028610229492
    5. ' [' → logprob: -15.125028610229492
    6. '[value' → logprob: -15.750028610229492
    7. '[temp' → logprob: -16.250028610229492
    8. '[var' → logprob: -16.500028610229492
    9. 'val' → logprob: -16.625028610229492
    10. '[v' → logprob: -16.750028610229492

Token 128: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5300076603889465
    2. ' =' → logprob: -0.9050076603889465
    3. ']' → logprob: -5.030007839202881
    4. ']=' → logprob: -8.280007362365723
    5. '+=' → logprob: -11.030007362365723
    6. ' +=' → logprob: -11.155007362365723
    7. ']+=' → logprob: -11.155007362365723
    8. ' ' → logprob: -11.530007362365723
    9. ' ]' → logprob: -12.280007362365723
    10. ')' → logprob: -12.405007362365723

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007636678405106068
    2. ' =' → logprob: -4.882636547088623
    3. '+=' → logprob: -11.132637023925781
    4. 'freq' → logprob: -11.132637023925781
    5. '=f' → logprob: -14.382637023925781
    6. ' +=' → logprob: -15.507637023925781
    7. ' ' → logprob: -16.13263702392578
    8. '_freq' → logprob: -16.75763702392578
    9. '=
' → logprob: -16.88263702392578
    10. '(freq' → logprob: -17.00763702392578

Token 130: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.2014351636171341
    2. ' freq' → logprob: -1.7014352083206177
    3. 'frequency' → logprob: -11.826435089111328
    4. '(freq' → logprob: -11.951435089111328
    5. ' frequency' → logprob: -12.701435089111328
    6. '1' → logprob: -13.076435089111328
    7. '_freq' → logprob: -14.076435089111328
    8. 'fre' → logprob: -14.201435089111328
    9. '.freq' → logprob: -14.951435089111328
    10. '0' → logprob: -15.326435089111328

Token 131: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -3.619311974034645e-05
    2. '.' → logprob: -10.750036239624023
    3. 'get' → logprob: -11.500036239624023
    4. ' .' → logprob: -12.875036239624023
    5. 'val' → logprob: -13.375036239624023
    6. '.setdefault' → logprob: -15.375036239624023
    7. '.val' → logprob: -16.125036239624023
    8. 'freq' → logprob: -16.750036239624023
    9. '{}.' → logprob: -17.375036239624023
    10. '.
' → logprob: -17.625036239624023

Token 132: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -6.885492621222511e-05
    2. 'val' → logprob: -9.750068664550781
    3. '[val' → logprob: -12.000068664550781
    4. ',val' → logprob: -12.750068664550781
    5. '(' → logprob: -14.000068664550781
    6. ' val' → logprob: -14.625068664550781
    7. '	val' → logprob: -16.37506866455078
    8. '(valor' → logprob: -17.62506866455078
    9. '(vals' → logprob: -17.75006866455078
    10. ' (' → logprob: -18.00006866455078

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018860280513763428
    2. '0' → logprob: -4.018860340118408
    3. ' ,' → logprob: -7.268860340118408
    4. '1' → logprob: -12.14385986328125
    5. ' ' → logprob: -12.14385986328125
    6. '+' → logprob: -14.14385986328125
    7. '(),' → logprob: -14.26885986328125
    8. '   ' → logprob: -15.51885986328125
    9. '+,' → logprob: -15.89385986328125
    10. ',
' → logprob: -16.51885986328125

Token 134: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011709370883181691
    2. ' ' → logprob: -6.751171112060547
    3. ')' → logprob: -14.751171112060547
    4. '   ' → logprob: -15.626171112060547
    5. '1' → logprob: -16.751171112060547
    6. '  ' → logprob: -17.376171112060547
    7. '    ' → logprob: -17.876171112060547
    8. '۰' → logprob: -18.001171112060547
    9. ' ' → logprob: -18.501171112060547
    10. '```' → logprob: -18.813671112060547

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -16.375179290771484
    4. ')' → logprob: -16.375179290771484
    5. '1' → logprob: -16.625179290771484
    6. '  ' → logprob: -18.125179290771484
    7. '۰' → logprob: -18.125179290771484
    8. '```' → logprob: -18.250179290771484
    9. '<|end|>' → logprob: -18.875179290771484
    10. '    ' → logprob: -19.125179290771484

Token 136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013020104728639126
    2. '0' → logprob: -4.888020038604736
    3. ')+' → logprob: -5.513020038604736
    4. '+' → logprob: -6.763020038604736
    5. ' )' → logprob: -8.638020515441895
    6. '1' → logprob: -11.263020515441895
    7. '+)' → logprob: -11.763020515441895
    8. ' +' → logprob: -11.888020515441895
    9. ' ' → logprob: -13.513020515441895
    10. '2' → logprob: -13.888020515441895

Token 137: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0022018824238330126
    2. ' +' → logprob: -6.127202033996582
    3. '0' → logprob: -11.127202033996582
    4. '1' → logprob: -13.627202033996582
    5. '+
' → logprob: -15.502202033996582
    6. '()+' → logprob: -15.502202033996582
    7. '+=' → logprob: -15.877202033996582
    8. '2' → logprob: -16.752201080322266
    9. ')+' → logprob: -17.002201080322266
    10. ' plus' → logprob: -17.002201080322266

Token 138: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '   ' → logprob: -17.62548828125
    4. '```' → logprob: -18.50048828125
    5. '  ' → logprob: -19.62548828125
    6. '<|end|>' → logprob: -20.12548828125
    7. '0' → logprob: -20.50048828125
    8. '۱' → logprob: -21.37548828125
    9. '    ' → logprob: -21.62548828125
    10. '`' → logprob: -22.18798828125

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -19.625003814697266
    4. '   ' → logprob: -21.250003814697266
    5. '...' → logprob: -21.500003814697266
    6. '  ' → logprob: -22.000003814697266
    7. '
' → logprob: -22.375003814697266
    8. ')' → logprob: -22.375003814697266
    9. '0' → logprob: -22.500003814697266
    10. '۱' → logprob: -22.625003814697266

Token 140: '

' (ID: 279)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.119240403175354
    2. 'res' → logprob: -1.244240403175354
    3. 'ans' → logprob: -1.869240403175354
    4. 'answer' → logprob: -1.994240403175354
    5. 'count' → logprob: -2.9942402839660645
    6. 'max' → logprob: -4.2442402839660645
    7. 'pairs' → logprob: -4.2442402839660645
    8. 'total' → logprob: -4.6192402839660645
    9. 'cnt' → logprob: -6.6192402839660645
    10. 's' → logprob: -7.3692402839660645

Token 141: 'we' (ID: 854)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2604997158050537
    2. 'ans' → logprob: -1.2604997158050537
    3. 'result' → logprob: -1.2604997158050537
    4. 'answer' → logprob: -2.3854997158050537
    5. 'count' → logprob: -3.5104997158050537
    6. 'max' → logprob: -4.385499954223633
    7. 'total' → logprob: -4.510499954223633
    8. 'pairs' → logprob: -6.510499954223633
    9. 'cnt' → logprob: -7.135499954223633
    10. 's' → logprob: -8.135499954223633

Token 142: 'ird' (ID: 2716)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.3818006217479706
    2. 'ighted' → logprob: -1.756800651550293
    3. 'ights' → logprob: -2.381800651550293
    4. 'll' → logprob: -4.006800651550293
    5. 'ak' → logprob: -4.381800651550293
    6. 'l' → logprob: -4.881800651550293
    7. 'igh' → logprob: -5.631800651550293
    8. 'ek' → logprob: -6.131800651550293
    9. 're' → logprob: -6.256800651550293
    10. 'st' → logprob: -6.631800651550293

Token 143: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5329867005348206
    2. '_sum' → logprob: -1.4079866409301758
    3. 's' → logprob: -3.532986640930176
    4. ' =' → logprob: -3.907986640930176
    5. '_val' → logprob: -3.907986640930176
    6. '_freq' → logprob: -4.282986640930176
    7. '=' → logprob: -4.407986640930176
    8. '_s' → logprob: -4.532986640930176
    9. '_count' → logprob: -4.532986640930176
    10. '_pairs' → logprob: -4.532986640930176

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012802512384951115
    2. '=' → logprob: -4.387802600860596
    3. 's' → logprob: -8.637802124023438
    4. '_' → logprob: -9.137802124023438
    5. ' ' → logprob: -12.637802124023438
    6. ',' → logprob: -13.762802124023438
    7. ')' → logprob: -13.887802124023438
    8. ' ' → logprob: -14.387802124023438
    9. ' =
' → logprob: -15.387802124023438
    10. '_=' → logprob: -15.387802124023438

Token 145: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01000904943794012
    2. 'sum' → logprob: -4.885008811950684
    3. ' ' → logprob: -6.510008811950684
    4. ' sum' → logprob: -7.260008811950684
    5. 'ft' → logprob: -8.760008811950684
    6. '(' → logprob: -11.760008811950684
    7. '   ' → logprob: -11.885008811950684
    8. '(sum' → logprob: -11.885008811950684
    9. 'int' → logprob: -12.135008811950684
    10. 'max' → logprob: -12.510008811950684

Token 146: '([(' (ID: 156282)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.9503135681152344
    2. '(freq' → logprob: -0.9503135681152344
    3. '(lambda' → logprob: -2.9503135681152344
    4. 'v' → logprob: -3.0753135681152344
    5. '((' → logprob: -3.2003135681152344
    6. 'freq' → logprob: -3.4503135681152344
    7. '(f' → logprob: -4.450313568115234
    8. '(x' → logprob: -4.825313568115234
    9. '(ft' → logprob: -4.950313568115234
    10. 'lambda' → logprob: -4.950313568115234

Token 147: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2510017454624176
    2. 'count' → logprob: -2.3760018348693848
    3. 'freq' → logprob: -2.6260018348693848
    4. 'k' → logprob: -3.7510018348693848
    5. 'c' → logprob: -4.501001834869385
    6. 'val' → logprob: -4.751001834869385
    7. 'cnt' → logprob: -5.376001834869385
    8. 'x' → logprob: -5.876001834869385
    9. 'f' → logprob: -6.251001834869385
    10. '(v' → logprob: -6.376001834869385

Token 148: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.20617622137069702
    2. ' *' → logprob: -1.8311762809753418
    3. '*' → logprob: -3.706176280975342
    4. ')*(' → logprob: -6.706176280975342
    5. '*v' → logprob: -8.956175804138184
    6. ')' → logprob: -9.206175804138184
    7. ' *(' → logprob: -10.331175804138184
    8. '(v' → logprob: -12.081175804138184
    9. '*((' → logprob: -12.081175804138184
    10. ' ' → logprob: -12.331175804138184

Token 149: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002615742268972099
    2. '(v' → logprob: -8.250261306762695
    3. ' v' → logprob: -16.125261306762695
    4. '[v' → logprob: -16.625261306762695
    5. ')v' → logprob: -18.125261306762695
    6. '	v' → logprob: -18.125261306762695
    7. 'vq' → logprob: -18.250261306762695
    8. '_v' → logprob: -18.875261306762695
    9. '
' → logprob: -19.375261306762695
    10. '{' → logprob: -20.000261306762695

Token 150: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00975679699331522
    2. ' -' → logprob: -4.634756565093994
    3. ' ' → logprob: -14.884757041931152
    4. '1' → logprob: -15.509757041931152
    5. '```' → logprob: -15.759757041931152
    6. '–' → logprob: -17.009756088256836
    7. '−' → logprob: -17.259756088256836
    8. '
' → logprob: -17.384756088256836
    9. ')' → logprob: -17.509756088256836
    10. '<|end|>' → logprob: -17.634756088256836

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -10.875021934509277
    3. ')' → logprob: -13.125021934509277
    4. '
' → logprob: -15.375021934509277
    5. '<|end|>' → logprob: -15.437521934509277
    6. '```' → logprob: -16.062522888183594
    7. '   ' → logprob: -16.375022888183594
    8. '  ' → logprob: -16.437522888183594
    9. 'to' → logprob: -16.875022888183594
    10. '')' → logprob: -16.875022888183594

Token 152: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7029539346694946
    2. ')//' → logprob: -0.7029539346694946
    3. ' )' → logprob: -4.702953815460205
    4. '//' → logprob: -7.827953815460205
    5. ' //' → logprob: -8.202954292297363
    6. ')>>' → logprob: -11.202954292297363
    7. '')' → logprob: -14.452954292297363
    8. ')/' → logprob: -14.452954292297363
    9. ' ' → logprob: -14.577954292297363
    10. '`)' → logprob: -14.702954292297363

Token 153: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.38687559962272644
    2. ' //' → logprob: -1.1368756294250488
    3. ')//' → logprob: -13.38687515258789
    4. '```' → logprob: -13.88687515258789
    5. ' ' → logprob: -14.13687515258789
    6. '>>' → logprob: -15.38687515258789
    7. ' ' → logprob: -15.76187515258789
    8. '>//' → logprob: -15.88687515258789
    9. ')' → logprob: -15.88687515258789
    10. '://' → logprob: -16.13687515258789

Token 154: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.500009536743164
    4. '
' → logprob: -16.750009536743164
    5. '```' → logprob: -17.750009536743164
    6. '

' → logprob: -17.875009536743164
    7. '  ' → logprob: -19.000009536743164
    8. '           ' → logprob: -19.000009536743164
    9. '<|end|>' → logprob: -19.000009536743164
    10. '.' → logprob: -19.250009536743164

Token 155: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011117145419120789
    2. 'for' → logprob: -4.511116981506348
    3. ' ' → logprob: -10.386116981506348
    4. '   ' → logprob: -10.511116981506348
    5. '	for' → logprob: -12.261116981506348
    6. ')' → logprob: -12.386116981506348
    7. '  ' → logprob: -14.136116981506348
    8. ']' → logprob: -14.511116981506348
    9. ',' → logprob: -15.136116981506348
    10. ' *' → logprob: -15.636116981506348

Token 156: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1290944814682007
    2. ' v' → logprob: -1.1290944814682007
    3. ' freq' → logprob: -1.5040944814682007
    4. 'freq' → logprob: -2.2540946006774902
    5. 'val' → logprob: -4.37909460067749
    6. ' val' → logprob: -4.37909460067749
    7. 'vals' → logprob: -7.75409460067749
    8. ' vals' → logprob: -8.879094123840332
    9. '(freq' → logprob: -9.254094123840332
    10. ')v' → logprob: -9.379094123840332

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2703893482685089
    2. ' freq' → logprob: -1.5203893184661865
    3. 'freq' → logprob: -4.020389556884766
    4. '(freq' → logprob: -9.020389556884766
    5. 'in' → logprob: -9.645389556884766
    6. ',' → logprob: -10.020389556884766
    7. ',f' → logprob: -10.020389556884766
    8. ' ,' → logprob: -10.520389556884766
    9. ' frequency' → logprob: -11.645389556884766
    10. '.freq' → logprob: -11.645389556884766

Token 158: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.029753385111689568
    2. ' freq' → logprob: -3.5297534465789795
    3. '(freq' → logprob: -13.154753684997559
    4. 'frequency' → logprob: -14.904753684997559
    5. '.freq' → logprob: -15.654753684997559
    6. 'fre' → logprob: -15.654753684997559
    7. '_freq' → logprob: -15.904753684997559
    8. ' frequency' → logprob: -16.529752731323242
    9. '
' → logprob: -17.029752731323242
    10. ' ' → logprob: -17.654752731323242

Token 159: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.00020008347928524017
    2. '.' → logprob: -9.250200271606445
    3. 'values' → logprob: -9.750200271606445
    4. ' .' → logprob: -10.125200271606445
    5. ' values' → logprob: -12.750200271606445
    6. '.Values' → logprob: -13.375200271606445
    7. '.value' → logprob: -14.250200271606445
    8. '().' → logprob: -15.000200271606445
    9. '_values' → logprob: -17.000200271606445
    10. '].' → logprob: -17.125200271606445

Token 160: '()])
' (ID: 141457)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.038109999150037766
    2. '])' → logprob: -3.2881100177764893
    3. '())' → logprob: -10.53810977935791
    4. '()]' → logprob: -10.66310977935791
    5. '()])
' → logprob: -11.78810977935791
    6. ')])' → logprob: -12.53810977935791
    7. ']' → logprob: -12.53810977935791
    8. ')' → logprob: -13.78810977935791
    9. ''])' → logprob: -14.03810977935791
    10. ' ])' → logprob: -14.28810977935791

Token 161: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.318681188422488e-05
    2. '
' → logprob: -12.50001335144043
    3. '<|end|>' → logprob: -13.00001335144043
    4. 'pr' → logprob: -13.37501335144043
    5. ')' → logprob: -13.50001335144043
    6. ' print' → logprob: -13.62501335144043
    7. '#print' → logprob: -14.75001335144043
    8. '#' → logprob: -14.75001335144043
    9. '+' → logprob: -15.00001335144043
    10. 'result' → logprob: -15.25001335144043

Token 162: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.288163083605468e-05
    2. '((' → logprob: -10.125052452087402
    3. ' (' → logprob: -12.125052452087402
    4. '(max' → logprob: -12.625052452087402
    5. 'we' → logprob: -13.250052452087402
    6. '()' → logprob: -14.750052452087402
    7. '(f' → logprob: -15.125052452087402
    8. '(abs' → logprob: -15.250052452087402
    9. '(`' → logprob: -15.250052452087402
    10. '(the' → logprob: -15.625052452087402

Token 163: 'we' (ID: 854)
  Prédit: 'we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -7.290784560609609e-05
    2. ' weird' → logprob: -9.625072479248047
    3. 'max' → logprob: -12.625072479248047
    4. 'weed' → logprob: -13.875072479248047
    5. '(' → logprob: -14.750072479248047
    6. 'wee' → logprob: -15.000072479248047
    7. 'str' → logprob: -15.000072479248047
    8. 'int' → logprob: -15.500072479248047
    9. ')' → logprob: -15.500072479248047
    10. 'm' → logprob: -15.625072479248047

Token 164: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -1.4855663721391466e-05
    2. 'ir' → logprob: -12.250015258789062
    3. 'ierd' → logprob: -12.375015258789062
    4. 'irds' → logprob: -12.875015258789062
    5. ')' → logprob: -14.750015258789062
    6. 'ired' → logprob: -15.125015258789062
    7. '```' → logprob: -15.250015258789062
    8. '
' → logprob: -15.500015258789062
    9. 'irdi' → logprob: -15.750015258789062
    10. 'i' → logprob: -15.750015258789062

Token 165: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0280383548888494e-06
    2. 'sum' → logprob: -13.875000953674316
    3. '_s' → logprob: -17.250001907348633
    4. '_' → logprob: -18.000001907348633
    5. ')_' → logprob: -18.125001907348633
    6. 'Sum' → logprob: -18.250001907348633
    7. ')' → logprob: -18.250001907348633
    8. '"_' → logprob: -18.750001907348633
    9. ''_' → logprob: -18.875001907348633
    10. ' _' → logprob: -19.125001907348633

Token 166: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25979334115982056
    2. '+' → logprob: -1.5097932815551758
    3. ' +' → logprob: -4.884793281555176
    4. ' )' → logprob: -8.384793281555176
    5. '+)' → logprob: -10.134793281555176
    6. '))' → logprob: -14.509793281555176
    7. ')
' → logprob: -14.759793281555176
    8. ',' → logprob: -14.759793281555176
    9. '*' → logprob: -14.759793281555176
    10. '+k' → logprob: -15.259793281555176


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 164
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 75
Tokens correctement prédits (top 10): 139
Précision stricte (1ère position): 45.12%
Précision adaptée (1ère position): 45.73%
Précision (top 10): 84.76%
================================================================================
