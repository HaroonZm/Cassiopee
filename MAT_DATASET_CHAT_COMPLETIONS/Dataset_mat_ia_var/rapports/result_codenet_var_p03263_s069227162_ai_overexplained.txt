================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lire deux entiers à partir d'une seule ligne d'entrée, séparés par un espace
# map applique la fonction int à chaque élément de l'entrée découpée en morceaux (split())
# H représente la hauteur (nombre de lignes), W la largeur (nombre de colonnes) de la grille
H, W = map(int, input().split())

# Initialiser une liste vide appelée 'a' pour stocker la grille/les matrices de nombres
a = []

# Répéter H fois (pour chaque ligne de la grille)
for _ in range(H):
    # Lire la ligne courante, découper selon les espaces et convertir chaque élément en entier
    A = list(map(int, input().split()))
    # Ajouter la liste convertie de cette ligne à la grille 'a'
    a.append(A)

# Initialiser la variable i à 0 (non utilisée plus loin, c'était probablement pour une ancienne version du code)
i = 0
# Initialiser la variable j à 0 (également non utilisée)
j = 0
# Initialiser un compteur 'cnt' à 0 ; il comptera le nombre total de mouvements effectués
cnt = 0
# Initialiser une liste vide 'ans' pour enregistrer chaque mouvement effectué sous forme de liste [h1, w1, h2, w2]
ans = []

# Boucle externe sur chaque ligne de la grille; h commence à 0 et va jusqu'à H-1
for h in range(H):
    # Boucle interne sur chaque colonne de la ligne courante; w commence à 0 et va jusqu'à W-1
    for w in range(W):
        # Vérifier si le nombre courant, a[h][w], est impair (le reste de la division par 2 est non nul)
        if a[h][w] % 2 == 1:
            # Vérifier si ce n'est PAS la dernière colonne de la ligne (w n'est pas égal à l'indice maximal W-1)
            if w != W-1:
                # Incrémenter le compteur de mouvements car on va effectuer une opération
                cnt += 1
                # Enregistrer ce mouvement : on déplace 1 de la case (h, w) à la case (h, w+1)
                # Utilisation de h+1 et w+1 car l'énoncé (ou la sortie) exige des indices commençant à 1
                ans.append([h+1, w+1, h+1, w+2])
                # Décrémenter de 1 la case courante car on donne un à la voisine
                a[h][w] -= 1
                # Incrémenter de 1 la case juste à droite (h, w+1)
                a[h][w+1] += 1
            else:
                # Si on est sur la dernière colonne (droite), mais PAS sur la dernière ligne
                if h != H-1:
                    # Incrémenter le compteur de mouvements car on va déplacer vers la ligne du dessous
                    cnt += 1
                    # Enregistrer ce mouvement : on déplace 1 de la case (h, w) à la case (h+1, w)
                    ans.append([h+1, w+1, h+2, w+1])
                    # Décrémenter la case courante car on donne un à celle du dessous
                    a[h][w] -= 1
                    # Incrémenter la case directement en dessous (h+1, w)
                    a[h+1][w] += 1

# Afficher sur une ligne le nombre total de mouvements effectués
print(cnt)

# Parcourir tous les mouvements enregistrés dans la liste ans
for i in range(len(ans)):
    # Imprimer chaque mouvement sous forme de 4 nombres séparés par des espaces
    # *ans[i] permet de "dépaqueter" la liste ans[i] en paramètres séparés pour print
    print(*ans[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lire' (ID: 57624)
  → Token d'amorce (pas de prédiction)

Token 2: ' deux' (ID: 10301)
  → Token d'amorce (pas de prédiction)

Token 3: ' ent' (ID: 1121)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.5548110008239746
    2. ' ' → logprob: -1.5548110008239746
    3. ' espaces' → logprob: -2.1798110008239746
    4. 'l' → logprob: -3.1798110008239746
    5. ' ' → logprob: -4.179811000823975
    6. ' ent' → logprob: -4.554811000823975
    7. ' mots' → logprob: -4.804811000823975
    8. ' nombres' → logprob: -5.054811000823975
    9. 's' → logprob: -5.179811000823975
    10. ' l' → logprob: -6.804811000823975

Token 4: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.5070736408233643
    2. 'ières' → logprob: -1.3820736408233643
    3. 'r' → logprob: -2.3820736408233643
    4. 'i' → logprob: -3.6320736408233643
    5. 'ié' → logprob: -4.507073402404785
    6. 'ier' → logprob: -5.132073402404785
    7. 'ière' → logprob: -5.757073402404785
    8. 'î' → logprob: -6.757073402404785
    9. '```' → logprob: -6.757073402404785
    10. 'rès' → logprob: -7.507073402404785

Token 5: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3774475157260895
    2. 'a' → logprob: -2.3774476051330566
    3. 'x' → logprob: -2.5024476051330566
    4. 'i' → logprob: -3.1274476051330566
    5. 'e' → logprob: -3.5024476051330566
    6. '\n' → logprob: -3.6274476051330566
    7. '\' → logprob: -4.627447605133057
    8. '```' → logprob: -4.752447605133057
    9. 's' → logprob: -5.127447605133057
    10. 'd' → logprob: -5.502447605133057

Token 6: ' partir' (ID: 12100)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0843167304992676
    2. ' partir' → logprob: -1.0843167304992676
    3. ' ' → logprob: -1.9593167304992676
    4. ' l' → logprob: -2.4593167304992676
    5. ' ' → logprob: -3.9593167304992676
    6. 'entr' → logprob: -4.459316730499268
    7. '_' → logprob: -4.709316730499268
    8. 'part' → logprob: -4.709316730499268
    9. 'entrée' → logprob: -4.709316730499268
    10. '```' → logprob: -4.959316730499268

Token 7: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.062479253858327866
    2. ' ' → logprob: -3.312479257583618
    3. ' de' → logprob: -4.562479019165039
    4. 'd' → logprob: -5.062479019165039
    5. ' du' → logprob: -5.562479019165039
    6. 's' → logprob: -6.687479019165039
    7. '_' → logprob: -7.437479019165039
    8. 'de' → logprob: -8.437479019165039
    9. ''' → logprob: -8.562479019165039
    10. ' des' → logprob: -8.687479019165039

Token 8: ''une' (ID: 13337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14519661664962769
    2. ''un' → logprob: -3.0201966762542725
    3. ''une' → logprob: -3.1451966762542725
    4. '_' → logprob: -4.020196437835693
    5. 'u' → logprob: -4.395196437835693
    6. 'a' → logprob: -5.895196437835693
    7. ''espace' → logprob: -5.895196437835693
    8. ''utilisateur' → logprob: -6.395196437835693
    9. ''u' → logprob: -6.645196437835693
    10. '"' → logprob: -7.395196437835693

Token 9: ' seule' (ID: 41983)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.8097953796386719
    2. ' ' → logprob: -1.3097953796386719
    3. '\n' → logprob: -2.059795379638672
    4. 'l' → logprob: -3.434795379638672
    5. 'ligne' → logprob: -3.809795379638672
    6. '\' → logprob: -3.934795379638672
    7. ' \' → logprob: -3.934795379638672
    8. 'entr' → logprob: -4.434795379638672
    9. 's' → logprob: -4.684795379638672
    10. 'input' → logprob: -4.934795379638672

Token 10: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.9555210471153259
    2. ' ' → logprob: -1.4555211067199707
    3. 'ligne' → logprob: -2.3305211067199707
    4. ' input' → logprob: -2.4555211067199707
    5. 'input' → logprob: -2.7055211067199707
    6. 'l' → logprob: -3.3305211067199707
    7. 'entrée' → logprob: -3.5805211067199707
    8. ',' → logprob: -3.5805211067199707
    9. '_' → logprob: -5.080521106719971
    10. ''' → logprob: -5.455521106719971

Token 11: ' d' (ID: 272)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0759892463684082
    2. 'n' → logprob: -1.2009892463684082
    3. 'x' → logprob: -1.3259892463684082
    4. 'e' → logprob: -3.075989246368408
    5. 'i' → logprob: -3.700989246368408
    6. 'ent' → logprob: -5.325989246368408
    7. '```' → logprob: -5.325989246368408
    8. 'input' → logprob: -5.575989246368408
    9. ',' → logprob: -5.700989246368408
    10. '`' → logprob: -6.700989246368408

Token 12: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.03915278986096382
    2. 'entrée' → logprob: -3.9141528606414795
    3. 'e' → logprob: -4.1641526222229
    4. ''' → logprob: -6.5391526222229
    5. ''ent' → logprob: -7.4141526222229
    6. 'é' → logprob: -8.414153099060059
    7. ''é' → logprob: -9.039153099060059
    8. '’entrée' → logprob: -9.039153099060059
    9. ''e' → logprob: -9.289153099060059
    10. 'u' → logprob: -9.289153099060059

Token 13: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8159835934638977
    2. 'x' → logprob: -1.065983533859253
    3. 'n' → logprob: -1.815983533859253
    4. 'e' → logprob: -3.440983533859253
    5. 'i' → logprob: -4.690983772277832
    6. '```' → logprob: -5.440983772277832
    7. ',' → logprob: -5.940983772277832
    8. 'ent' → logprob: -6.815983772277832
    9. 'input' → logprob: -7.440983772277832
    10. '`' → logprob: -8.815983772277832

Token 14: ' sépar' (ID: 97160)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6346574425697327
    2. 'a' → logprob: -1.009657382965088
    3. 'n' → logprob: -3.009657382965088
    4. ' x' → logprob: -3.259657382965088
    5. ' a' → logprob: -5.134657382965088
    6. ' n' → logprob: -5.384657382965088
    7. 'ent' → logprob: -6.259657382965088
    8. 'input' → logprob: -6.384657382965088
    9. ' ' → logprob: -7.009657382965088
    10. ' ent' → logprob: -7.634657382965088

Token 15: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.030728938058018684
    2. 'é' → logprob: -3.530729055404663
    3. 'er' → logprob: -7.530728816986084
    4. 'es' → logprob: -7.905728816986084
    5. 'ée' → logprob: -11.030729293823242
    6. 'e' → logprob: -11.030729293823242
    7. '```' → logprob: -11.405729293823242
    8. 'ès' → logprob: -11.530729293823242
    9. 's' → logprob: -11.655729293823242
    10. 'ées' → logprob: -12.280729293823242

Token 16: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6466173529624939
    2. ' par' → logprob: -0.7716173529624939
    3. 'es' → logprob: -4.771617412567139
    4. '_par' → logprob: -6.271617412567139
    5. '```' → logprob: -6.646617412567139
    6. 's' → logprob: -7.271617412567139
    7. ' ' → logprob: -7.521617412567139
    8. 'e' → logprob: -7.771617412567139
    9. ',' → logprob: -8.39661693572998
    10. '(par' → logprob: -9.02161693572998

Token 17: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.03323297202587128
    2. ''un' → logprob: -4.283233165740967
    3. ' un' → logprob: -4.408233165740967
    4. 'des' → logprob: -5.783233165740967
    5. 'es' → logprob: -6.908233165740967
    6. ''' → logprob: -7.283233165740967
    7. '```' → logprob: -7.783233165740967
    8. ' des' → logprob: -8.283232688903809
    9. 'esp' → logprob: -8.408232688903809
    10. 'une' → logprob: -8.908232688903809

Token 18: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7999749779701233
    2. ' espace' → logprob: -1.2999749183654785
    3. ''espace' → logprob: -1.4249749183654785
    4. 'esp' → logprob: -4.2999749183654785
    5. 'space' → logprob: -4.9249749183654785
    6. 'e' → logprob: -4.9249749183654785
    7. '’espace' → logprob: -5.6749749183654785
    8. ''esp' → logprob: -6.0499749183654785
    9. ' ' → logprob: -6.7999749183654785
    10. ''' → logprob: -6.9249749183654785

Token 19: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.017321018502116203
    2. 'x' → logprob: -4.1423211097717285
    3. 'n' → logprob: -6.7673211097717285
    4. '```' → logprob: -10.01732063293457
    5. 'i' → logprob: -10.26732063293457
    6. 'e' → logprob: -10.39232063293457
    7. ' a' → logprob: -12.01732063293457
    8. 'ent' → logprob: -12.01732063293457
    9. '`' → logprob: -12.51732063293457
    10. 'v' → logprob: -12.76732063293457

Token 20: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.021855933591723442
    2. 'x' → logprob: -3.8968558311462402
    3. 'n' → logprob: -6.77185583114624
    4. '```' → logprob: -9.396856307983398
    5. 'i' → logprob: -10.021856307983398
    6. 'e' → logprob: -10.646856307983398
    7. '`' → logprob: -12.271856307983398
    8. 'A' → logprob: -12.271856307983398
    9. 'v' → logprob: -13.021856307983398
    10. 'ent' → logprob: -13.271856307983398

Token 21: ' map' (ID: 4014)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014497945085167885
    2. 'x' → logprob: -4.389497756958008
    3. 'n' → logprob: -6.264497756958008
    4. 'ent' → logprob: -10.139497756958008
    5. 'i' → logprob: -10.889497756958008
    6. ' a' → logprob: -11.264497756958008
    7. '#' → logprob: -12.514497756958008
    8. '```' → logprob: -12.889497756958008
    9. 'e' → logprob: -13.139497756958008
    10. 'input' → logprob: -14.514497756958008

Token 22: ' applique' (ID: 180579)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0980370044708252
    2. '(int' → logprob: -2.473037004470825
    3. 'int' → logprob: -5.223036766052246
    4. '(lambda' → logprob: -6.473036766052246
    5. '(
' → logprob: -7.098036766052246
    6. 'a' → logprob: -8.848036766052246
    7. 'e' → logprob: -9.223036766052246
    8. '(i' → logprob: -9.473036766052246
    9. 's' → logprob: -9.598036766052246
    10. '=' → logprob: -9.723036766052246

Token 23: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15894164144992828
    2. '(int' → logprob: -2.2839417457580566
    3. '(lambda' → logprob: -3.1589417457580566
    4. '(
' → logprob: -7.033941745758057
    5. 'int' → logprob: -7.658941745758057
    6. '()' → logprob: -7.783941745758057
    7. '(str' → logprob: -8.408941268920898
    8. '(map' → logprob: -8.783941268920898
    9. 's' → logprob: -10.283941268920898
    10. 'd' → logprob: -10.658941268920898

Token 24: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.14445824921131134
    2. ' fonction' → logprob: -2.769458293914795
    3. 'int' → logprob: -3.019458293914795
    4. 'function' → logprob: -4.519458293914795
    5. ' function' → logprob: -4.894458293914795
    6. 'fon' → logprob: -6.269458293914795
    7. 'str' → logprob: -7.394458293914795
    8. ' int' → logprob: -7.519458293914795
    9. 'input' → logprob: -7.894458293914795
    10. 'entrée' → logprob: -8.519457817077637

Token 25: ' int' (ID: 677)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3061249554157257
    2. '(int' → logprob: -1.4311249256134033
    3. 'int' → logprob: -4.181125164031982
    4. '(lambda' → logprob: -5.181125164031982
    5. '(str' → logprob: -6.056125164031982
    6. '(
' → logprob: -7.681125164031982
    7. '()' → logprob: -8.556124687194824
    8. 'str' → logprob: -8.806124687194824
    9. '```' → logprob: -9.056124687194824
    10. '(input' → logprob: -9.181124687194824

Token 26: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022878795862197876
    2. '(int' → logprob: -7.002287864685059
    3. '(
' → logprob: -7.877287864685059
    4. 's' → logprob: -7.877287864685059
    5. 'a' → logprob: -9.502287864685059
    6. 'n' → logprob: -9.877287864685059
    7. '()' → logprob: -10.002287864685059
    8. 'def' → logprob: -10.127287864685059
    9. ',' → logprob: -10.252287864685059
    10. '(n' → logprob: -10.252287864685059

Token 27: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.37304505705833435
    2. 'l' → logprob: -1.4980450868606567
    3. 'cha' → logprob: -3.748044967651367
    4. ' l' → logprob: -3.873044967651367
    5. 'la' → logprob: -3.998044967651367
    6. ' input' → logprob: -4.748044967651367
    7. ' la' → logprob: -4.998044967651367
    8. 'input' → logprob: -5.123044967651367
    9. ' each' → logprob: -6.873044967651367
    10. 'Chaque' → logprob: -6.873044967651367

Token 28: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.006053697783499956
    2. ' élément' → logprob: -5.381053924560547
    3. 'element' → logprob: -6.881053924560547
    4. 'entrée' → logprob: -9.256053924560547
    5. 'val' → logprob: -9.631053924560547
    6. ' element' → logprob: -9.881053924560547
    7. 'elem' → logprob: -10.131053924560547
    8. 'mot' → logprob: -10.131053924560547
    9. 'part' → logprob: -10.506053924560547
    10. ' mot' → logprob: -11.131053924560547

Token 29: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9987346529960632
    2. 'x' → logprob: -1.498734712600708
    3. 'n' → logprob: -1.873734712600708
    4. 'input' → logprob: -2.498734712600708
    5. 'a' → logprob: -3.873734712600708
    6. 'l' → logprob: -3.998734712600708
    7. 'ent' → logprob: -4.123734474182129
    8. 'i' → logprob: -4.248734474182129
    9. 'entr' → logprob: -4.248734474182129
    10. 'e' → logprob: -4.373734474182129

Token 30: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5514034628868103
    2. 'input' → logprob: -1.176403522491455
    3. ' input' → logprob: -2.426403522491455
    4. ' l' → logprob: -3.676403522491455
    5. 'la' → logprob: -7.051403522491455
    6. 'entrée' → logprob: -7.426403522491455
    7. ' la' → logprob: -8.676403045654297
    8. 's' → logprob: -11.301403045654297
    9. '(input' → logprob: -11.426403045654297
    10. 'split' → logprob: -11.551403045654297

Token 31: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8093061447143555
    2. ''entrée' → logprob: -1.1843061447143555
    3. 'entrée' → logprob: -1.9343061447143555
    4. 'a' → logprob: -2.4343061447143555
    5. 'igne' → logprob: -5.0593061447143555
    6. ''' → logprob: -5.5593061447143555
    7. ' input' → logprob: -6.4343061447143555
    8. 'e' → logprob: -6.9343061447143555
    9. '`' → logprob: -7.6843061447143555
    10. ''ent' → logprob: -7.8093061447143555

Token 32: ' déc' (ID: 8498)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0970336198806763
    2. 'a' → logprob: -1.3470336198806763
    3. 'n' → logprob: -1.5970336198806763
    4. ',' → logprob: -2.7220335006713867
    5. '(' → logprob: -3.4720335006713867
    6. 'e' → logprob: -3.8470335006713867
    7. 'i' → logprob: -3.9720335006713867
    8. 'ent' → logprob: -4.222033500671387
    9. 'input' → logprob: -4.972033500671387
    10. ':' → logprob: -5.222033500671387

Token 33: 'oup' (ID: 9999)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.20883561670780182
    2. 'd' → logprob: -2.8338356018066406
    3. 'mp' → logprob: -3.8338356018066406
    4. 'u' → logprob: -4.208835601806641
    5. 'om' → logprob: -4.208835601806641
    6. 'lée' → logprob: -4.208835601806641
    7. 'r' → logprob: -4.958835601806641
    8. 'l' → logprob: -5.208835601806641
    9. 'omp' → logprob: -5.208835601806641
    10. 's' → logprob: -5.333835601806641

Token 34: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0717737153172493
    2. 'ée' → logprob: -3.8217737674713135
    3. 'és' → logprob: -3.8217737674713135
    4. 'p' → logprob: -4.321773529052734
    5. 'e' → logprob: -5.196773529052734
    6. 't' → logprob: -6.196773529052734
    7. 's' → logprob: -6.571773529052734
    8. 'er' → logprob: -6.696773529052734
    9. 'pé' → logprob: -7.071773529052734
    10. '```' → logprob: -8.071773529052734

Token 35: ' en' (ID: 469)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11643803119659424
    2. 'x' → logprob: -2.6164379119873047
    3. 'n' → logprob: -3.3664379119873047
    4. 'e' → logprob: -7.366437911987305
    5. 'ent' → logprob: -7.491437911987305
    6. ',' → logprob: -8.241437911987305
    7. 'i' → logprob: -8.616437911987305
    8. ' a' → logprob: -8.741437911987305
    9. '```' → logprob: -9.241437911987305
    10. '#' → logprob: -9.616437911987305

Token 36: ' morceaux' (ID: 133321)
  Prédit: ' morceaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' morceaux' → logprob: -1.4030920267105103
    2. 'chaine' → logprob: -1.9030920267105103
    3. 'tokens' → logprob: -2.0280919075012207
    4. 'cha' → logprob: -2.4030919075012207
    5. ' chaînes' → logprob: -2.6530919075012207
    6. '```' → logprob: -3.1530919075012207
    7. 'chain' → logprob: -3.2780919075012207
    8. 'élé' → logprob: -3.6530919075012207
    9. ' espaces' → logprob: -3.6530919075012207
    10. 'part' → logprob: -3.7780919075012207

Token 37: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2737662196159363
    2. 'x' → logprob: -2.023766279220581
    3. 'n' → logprob: -2.273766279220581
    4. 'e' → logprob: -6.148766040802002
    5. 'ent' → logprob: -6.898766040802002
    6. '#' → logprob: -7.773766040802002
    7. 'i' → logprob: -8.89876651763916
    8. '```' → logprob: -8.89876651763916
    9. 'v' → logprob: -9.52376651763916
    10. ',' → logprob: -9.52376651763916

Token 38: 'split' (ID: 13627)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041954707354307175
    2. ' )' → logprob: -3.916954755783081
    3. 'input' → logprob: -4.291954517364502
    4. 'par' → logprob: -6.166954517364502
    5. 'str' → logprob: -6.166954517364502
    6. ' input' → logprob: -7.291954517364502
    7. 'split' → logprob: -7.916954517364502
    8. 'l' → logprob: -7.916954517364502
    9. ''' → logprob: -8.04195499420166
    10. '"' → logprob: -8.41695499420166

Token 39: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009467111667618155
    2. '()' → logprob: -7.750946521759033
    3. '')' → logprob: -8.500946998596191
    4. '")' → logprob: -8.875946998596191
    5. '`)' → logprob: -10.125946998596191
    6. ' )' → logprob: -10.500946998596191
    7. '#' → logprob: -10.625946998596191
    8. '())' → logprob: -11.375946998596191
    9. 'input' → logprob: -11.500946998596191
    10. '))' → logprob: -11.625946998596191

Token 40: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05856981500983238
    2. 'x' → logprob: -3.05856990814209
    3. 'n' → logprob: -4.68356990814209
    4. 'e' → logprob: -8.18356990814209
    5. 'ent' → logprob: -8.30856990814209
    6. '```' → logprob: -9.43356990814209
    7. '#' → logprob: -10.93356990814209
    8. ' a' → logprob: -11.80856990814209
    9. 'i' → logprob: -12.05856990814209
    10. 'b' → logprob: -12.30856990814209

Token 41: ' H' (ID: 487)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007894424721598625
    2. 'x' → logprob: -4.882894515991211
    3. 'ent' → logprob: -8.757894515991211
    4. 'n' → logprob: -9.382894515991211
    5. ' a' → logprob: -10.382894515991211
    6. '```' → logprob: -11.882894515991211
    7. 'A' → logprob: -12.382894515991211
    8. '#' → logprob: -13.632894515991211
    9. 'val' → logprob: -14.382894515991211
    10. 'e' → logprob: -14.507894515991211

Token 42: ' représente' (ID: 88912)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.21069510281085968
    2. 'a' → logprob: -2.5856950283050537
    3. 'i' → logprob: -2.8356950283050537
    4. '#' → logprob: -3.8356950283050537
    5. 'int' → logprob: -4.460695266723633
    6. 'H' → logprob: -5.960695266723633
    7. 'é' → logprob: -6.085695266723633
    8. '=int' → logprob: -6.210695266723633
    9. '=' → logprob: -6.335695266723633
    10. 'u' → logprob: -6.835695266723633

Token 43: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6897858381271362
    2. ' l' → logprob: -1.8147858381271362
    3. 'les' → logprob: -1.9397858381271362
    4. 'la' → logprob: -2.439785957336426
    5. 'le' → logprob: -3.564785957336426
    6. ' la' → logprob: -3.564785957336426
    7. ' le' → logprob: -4.189785957336426
    8. ' les' → logprob: -4.564785957336426
    9. 'une' → logprob: -5.314785957336426
    10. 'H' → logprob: -6.064785957336426

Token 44: ' hauteur' (ID: 72987)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.5597593784332275
    2. ' hauteur' → logprob: -1.1847593784332275
    3. 'tail' → logprob: -3.0597593784332275
    4. 'h' → logprob: -3.5597593784332275
    5. 'nombre' → logprob: -5.184759140014648
    6. 't' → logprob: -5.184759140014648
    7. 'liste' → logprob: -5.309759140014648
    8. 's' → logprob: -5.809759140014648
    9. ' ' → logprob: -6.122259140014648
    10. 'haut' → logprob: -6.559759140014648

Token 45: ' (' (ID: 350)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0002314303710591048
    2. 'h' → logprob: -8.750231742858887
    3. ' H' → logprob: -9.750231742858887
    4. ',' → logprob: -12.875231742858887
    5. '#' → logprob: -13.125231742858887
    6. 'x' → logprob: -13.500231742858887
    7. 'n' → logprob: -13.625231742858887
    8. ' ' → logprob: -13.750231742858887
    9. 'a' → logprob: -13.875231742858887
    10. 'I' → logprob: -14.500231742858887

Token 46: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015261459164321423
    2. ' )' → logprob: -5.765261650085449
    3. ')#' → logprob: -6.015261650085449
    4. '#' → logprob: -6.140261650085449
    5. '),' → logprob: -6.640261650085449
    6. 'de' → logprob: -6.890261650085449
    7. 'height' → logprob: -7.390261650085449
    8. '):' → logprob: -7.515261650085449
    9. ' hauteur' → logprob: -7.515261650085449
    10. ' de' → logprob: -7.640261650085449

Token 47: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5990241765975952
    2. ')' → logprob: -1.5990241765975952
    3. 'd' → logprob: -2.7240242958068848
    4. '_' → logprob: -2.8490242958068848
    5. '_d' → logprob: -3.2240242958068848
    6. ' de' → logprob: -3.3490242958068848
    7. ' )' → logprob: -3.9740242958068848
    8. ' ' → logprob: -4.599024295806885
    9. 'de' → logprob: -4.599024295806885
    10. '_de' → logprob: -4.974024295806885

Token 48: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06943565607070923
    2. ' lignes' → logprob: -3.1944355964660645
    3. 'person' → logprob: -5.4444355964660645
    4. 'n' → logprob: -5.6944355964660645
    5. ' ' → logprob: -6.0694355964660645
    6. 'p' → logprob: -6.3194355964660645
    7. ' l' → logprob: -6.5694355964660645
    8. 'colon' → logprob: -6.6944355964660645
    9. 'ligne' → logprob: -6.6944355964660645
    10. 't' → logprob: -6.9444355964660645

Token 49: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030908435583114624
    2. ' )' → logprob: -6.753090858459473
    3. ',' → logprob: -7.628090858459473
    4. 's' → logprob: -8.003090858459473
    5. 'H' → logprob: -8.378090858459473
    6. '#' → logprob: -8.628090858459473
    7. '),' → logprob: -8.753090858459473
    8. ')#' → logprob: -9.003090858459473
    9. '')' → logprob: -10.128090858459473
    10. '):' → logprob: -10.378090858459473

Token 50: ' W' (ID: 486)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.8671355843544006
    2. 'W' → logprob: -1.2421355247497559
    3. 'L' → logprob: -1.6171355247497559
    4. ' W' → logprob: -2.992135524749756
    5. ' V' → logprob: -3.992135524749756
    6. ' L' → logprob: -4.367135524749756
    7. 'T' → logprob: -5.492135524749756
    8. 'w' → logprob: -7.117135524749756
    9. 'v' → logprob: -7.492135524749756
    10. 'l' → logprob: -7.492135524749756

Token 51: ' la' (ID: 557)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31293728947639465
    2. ' =' → logprob: -2.1879372596740723
    3. ' représente' → logprob: -2.5629372596740723
    4. ' la' → logprob: -2.8129372596740723
    5. ' represents' → logprob: -5.812937259674072
    6. ',' → logprob: -5.812937259674072
    7. '<|end|>' → logprob: -5.937937259674072
    8. ' représ' → logprob: -6.062937259674072
    9. 'la' → logprob: -6.437937259674072
    10. 'represent' → logprob: -6.437937259674072

Token 52: ' largeur' (ID: 180807)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.47456157207489014
    2. ' largeur' → logprob: -1.0995615720748901
    3. ' large' → logprob: -3.3495616912841797
    4. 'l' → logprob: -5.22456169128418
    5. 'larg' → logprob: -6.72456169128418
    6. ' larg' → logprob: -7.34956169128418
    7. ' ' → logprob: -7.47456169128418
    8. 'Large' → logprob: -7.97456169128418
    9. ' colonne' → logprob: -8.09956169128418
    10. ' l' → logprob: -8.59956169128418

Token 53: ' (' (ID: 350)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.01832704432308674
    2. ',' → logprob: -4.518327236175537
    3. 'h' → logprob: -6.268327236175537
    4. 'n' → logprob: -6.518327236175537
    5. ' H' → logprob: -7.018327236175537
    6. 'x' → logprob: -7.143327236175537
    7. ')' → logprob: -7.893327236175537
    8. ' =' → logprob: -8.518326759338379
    9. '=' → logprob: -8.643326759338379
    10. '#' → logprob: -8.768326759338379

Token 54: 'nombre' (ID: 28576)
  Prédit: 'nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.6650062799453735
    2. ')' → logprob: -1.2900062799453735
    3. 'la' → logprob: -3.040006160736084
    4. ' nombre' → logprob: -3.290006160736084
    5. ' la' → logprob: -3.290006160736084
    6. 'l' → logprob: -3.540006160736084
    7. 'colon' → logprob: -4.290006160736084
    8. ' )' → logprob: -5.165006160736084
    9. 'des' → logprob: -5.290006160736084
    10. 'n' → logprob: -5.290006160736084

Token 55: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6831263899803162
    2. ' de' → logprob: -1.308126449584961
    3. '_de' → logprob: -2.433126449584961
    4. ')' → logprob: -2.808126449584961
    5. '_' → logprob: -3.433126449584961
    6. 'd' → logprob: -3.808126449584961
    7. '_d' → logprob: -4.683126449584961
    8. ' d' → logprob: -5.183126449584961
    9. ' )' → logprob: -5.933126449584961
    10. '=' → logprob: -7.058126449584961

Token 56: ' colon' (ID: 20947)
  Prédit: 'colon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colon' → logprob: -0.8288735151290894
    2. 'l' → logprob: -0.9538735151290894
    3. ' colon' → logprob: -2.328873634338379
    4. 'la' → logprob: -3.203873634338379
    5. ' l' → logprob: -4.328873634338379
    6. 'col' → logprob: -4.578873634338379
    7. ' la' → logprob: -5.078873634338379
    8. 'car' → logprob: -5.828873634338379
    9. ')' → logprob: -6.203873634338379
    10. ' ' → logprob: -6.578873634338379

Token 57: 'nes' (ID: 4382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9401693940162659
    2. 'es' → logprob: -0.9401693940162659
    3. 's' → logprob: -1.690169334411621
    4. 'e' → logprob: -3.815169334411621
    5. '#' → logprob: -5.190169334411621
    6. ' )' → logprob: -6.065169334411621
    7. 'nes' → logprob: -7.190169334411621
    8. 'n' → logprob: -7.315169334411621
    9. '),' → logprob: -7.565169334411621
    10. ',' → logprob: -7.565169334411621

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012606535165105015
    2. ',' → logprob: -10.375125885009766
    3. '#' → logprob: -10.500125885009766
    4. ' )' → logprob: -11.375125885009766
    5. ')#' → logprob: -11.625125885009766
    6. '):' → logprob: -12.000125885009766
    7. ')
' → logprob: -12.000125885009766
    8. '')' → logprob: -12.125125885009766
    9. '),' → logprob: -12.375125885009766
    10. '```' → logprob: -12.625125885009766

Token 59: ' de' (ID: 334)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0006953967968001962
    2. ',' → logprob: -7.87569522857666
    3. 'h' → logprob: -8.62569522857666
    4. '#' → logprob: -10.37569522857666
    5. 'n' → logprob: -10.87569522857666
    6. ' H' → logprob: -10.87569522857666
    7. '```' → logprob: -11.00069522857666
    8. 'x' → logprob: -11.62569522857666
    9. '[' → logprob: -11.62569522857666
    10. ')' → logprob: -12.37569522857666

Token 60: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8710641860961914
    2. ' la' → logprob: -0.9960641860961914
    3. ' l' → logprob: -2.1210641860961914
    4. ' ' → logprob: -2.8710641860961914
    5. 'la' → logprob: -3.3710641860961914
    6. ' ' → logprob: -7.621064186096191
    7. 's' → logprob: -8.746064186096191
    8. ' grille' → logprob: -9.246064186096191
    9. ' chaque' → logprob: -9.621064186096191
    10. 'a' → logprob: -9.871064186096191

Token 61: ' grille' (ID: 99153)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41664204001426697
    2. 'gr' → logprob: -1.2916420698165894
    3. 'mat' → logprob: -3.7916419506073
    4. ' matr' → logprob: -4.291642189025879
    5. ' grille' → logprob: -4.291642189025879
    6. 'm' → logprob: -5.166642189025879
    7. 'plate' → logprob: -6.291642189025879
    8. 'matrix' → logprob: -6.416642189025879
    9. 's' → logprob: -6.541642189025879
    10. 'car' → logprob: -7.791642189025879

Token 62: '
' (ID: 198)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0002084277366520837
    2. 'h' → logprob: -9.250208854675293
    3. ',' → logprob: -10.000208854675293
    4. '```' → logprob: -11.000208854675293
    5. '#' → logprob: -11.625208854675293
    6. ' H' → logprob: -12.250208854675293
    7. ':' → logprob: -12.375208854675293
    8. 'a' → logprob: -12.375208854675293
    9. 'n' → logprob: -12.375208854675293
    10. '(' → logprob: -12.375208854675293

Token 63: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0015043864259496331
    2. 'h' → logprob: -7.251504421234131
    3. ',' → logprob: -7.876504421234131
    4. 'n' → logprob: -9.626503944396973
    5. '[' → logprob: -9.626503944396973
    6. '#' → logprob: -10.001503944396973
    7. 'x' → logprob: -10.001503944396973
    8. ':' → logprob: -10.376503944396973
    9. '```' → logprob: -10.501503944396973
    10. 'W' → logprob: -10.876503944396973

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.546478935983032e-05
    2. ' ,' → logprob: -11.250025749206543
    3. ',W' → logprob: -11.500025749206543
    4. ',H' → logprob: -14.125025749206543
    5. ',
' → logprob: -14.750025749206543
    6. ',

' → logprob: -15.250025749206543
    7. ',w' → logprob: -15.875025749206543
    8. '=' → logprob: -16.625024795532227
    9. 'W' → logprob: -16.875024795532227
    10. '<|end|>' → logprob: -17.000024795532227

Token 65: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.2826653718948364
    2. 'W' → logprob: -1.4076653718948364
    3. ' ' → logprob: -6.532665252685547
    4. '<|end|>' → logprob: -10.157665252685547
    5. ' ' → logprob: -11.282665252685547
    6. '  ' → logprob: -12.532665252685547
    7. ' ‌' → logprob: -14.032665252685547
    8. 'space' → logprob: -14.532665252685547
    9. ' ' → logprob: -14.657665252685547
    10. 'w' → logprob: -15.407665252685547

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03390225023031235
    2. '=' → logprob: -3.408902168273926
    3. ',' → logprob: -8.283902168273926
    4. '=input' → logprob: -13.658902168273926
    5. ' =
' → logprob: -14.533902168273926
    6. ' ,' → logprob: -14.783902168273926
    7. ')' → logprob: -14.908902168273926
    8. ' ' → logprob: -15.033902168273926
    9. ' ' → logprob: -15.033902168273926
    10. '.' → logprob: -15.908902168273926

Token 67: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04858918860554695
    2. 'map' → logprob: -3.0485892295837402
    3. ' ' → logprob: -14.423588752746582
    4. '	map' → logprob: -14.923588752746582
    5. ' list' → logprob: -15.048588752746582
    6. ' ' → logprob: -15.173588752746582
    7. ' input' → logprob: -16.5485897064209
    8. 'm' → logprob: -16.5485897064209
    9. 'list' → logprob: -16.6735897064209
    10. 'input' → logprob: -16.9235897064209

Token 68: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007637866772711277
    2. '(' → logprob: -4.882637977600098
    3. '(str' → logprob: -11.382637977600098
    4. 'int' → logprob: -12.257637977600098
    5. '(input' → logprob: -12.382637977600098
    6. '<int' → logprob: -12.507637977600098
    7. '(
' → logprob: -12.507637977600098
    8. ' int' → logprob: -13.507637977600098
    9. '(list' → logprob: -14.007637977600098
    10. ' (' → logprob: -14.132637977600098

Token 69: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.42078888416290283
    2. 'input' → logprob: -1.1707888841629028
    3. ')' → logprob: -4.045788764953613
    4. ',input' → logprob: -4.295788764953613
    5. '(' → logprob: -7.045788764953613
    6. ' input' → logprob: -7.420788764953613
    7. ')(' → logprob: -8.045788764953613
    8. ',' → logprob: -9.045788764953613
    9. ' (' → logprob: -9.420788764953613
    10. '	input' → logprob: -9.920788764953613

Token 70: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005234832875430584
    2. ' input' → logprob: -5.255234718322754
    3. '(input' → logprob: -14.755234718322754
    4. '<input' → logprob: -15.380234718322754
    5. '[input' → logprob: -16.13023567199707
    6. '	input' → logprob: -16.38023567199707
    7. '   ' → logprob: -16.38023567199707
    8. '=input' → logprob: -16.75523567199707
    9. ',input' → logprob: -17.00523567199707
    10. '```' → logprob: -17.75523567199707

Token 71: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002048197668045759
    2. '())' → logprob: -6.377048015594482
    3. '()' → logprob: -8.00204849243164
    4. ')' → logprob: -12.12704849243164
    5. '()).' → logprob: -12.50204849243164
    6. ' ().' → logprob: -13.62704849243164
    7. '(' → logprob: -15.25204849243164
    8. '()))' → logprob: -15.87704849243164
    9. ' ())' → logprob: -15.87704849243164
    10. '()
' → logprob: -16.25204849243164

Token 72: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026300468016415834
    2. 'strip' → logprob: -8.250263214111328
    3. ' split' → logprob: -13.625263214111328
    4. 'rstrip' → logprob: -15.000263214111328
    5. 'spl' → logprob: -16.000263214111328
    6. '(split' → logprob: -17.250263214111328
    7. ')' → logprob: -18.000263214111328
    8. '().' → logprob: -18.375263214111328
    9. 's' → logprob: -18.625263214111328
    10. '.split' → logprob: -19.125263214111328

Token 73: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010317281819880009
    2. '()' → logprob: -4.760317325592041
    3. '()))' → logprob: -6.510317325592041
    4. ')' → logprob: -8.635316848754883
    5. '(' → logprob: -11.385316848754883
    6. '('' → logprob: -12.010316848754883
    7. ' ())' → logprob: -12.010316848754883
    8. '())
' → logprob: -12.635316848754883
    9. '))' → logprob: -13.135316848754883
    10. '()),' → logprob: -13.885316848754883

Token 74: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' Initial' (ID: 9209)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.5725730061531067
    2. 'grid' → logprob: -1.447572946548462
    3. 'gr' → logprob: -2.197572946548462
    4. ' grille' → logprob: -2.572572946548462
    5. '#' → logprob: -5.447573184967041
    6. 'g' → logprob: -5.947573184967041
    7. ' #' → logprob: -6.447573184967041
    8. ' gr' → logprob: -6.822573184967041
    9. ' ' → logprob: -7.197573184967041
    10. ' g' → logprob: -7.822573184967041

Token 76: 'iser' (ID: 7466)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5758221745491028
    2. 'i' → logprob: -0.9508221745491028
    3. 'iser' → logprob: -4.200822353363037
    4. 's' → logprob: -4.700822353363037
    5. 'e' → logprob: -5.075822353363037
    6. 'is' → logprob: -5.325822353363037
    7. 'isation' → logprob: -5.575822353363037
    8. 'izing' → logprob: -6.325822353363037
    9. '_i' → logprob: -6.325822353363037
    10. '#' → logprob: -6.575822353363037

Token 77: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.707688570022583
    2. '_' → logprob: -1.457688570022583
    3. ' ' → logprob: -2.082688570022583
    4. ' une' → logprob: -3.582688570022583
    5. '(' → logprob: -3.832688570022583
    6. '[' → logprob: -4.082688331604004
    7. '()' → logprob: -4.207688331604004
    8. ')' → logprob: -4.957688331604004
    9. '[]' → logprob: -4.957688331604004
    10. 'l' → logprob: -5.207688331604004

Token 78: ' liste' (ID: 31719)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.14516855776309967
    2. ' ' → logprob: -3.3951685428619385
    3. ' grille' → logprob: -3.5201685428619385
    4. '_' → logprob: -4.020168781280518
    5. 'liste' → logprob: -4.145168781280518
    6. ' liste' → logprob: -4.145168781280518
    7. '_gr' → logprob: -5.395168781280518
    8. 'mat' → logprob: -5.520168781280518
    9. 'grid' → logprob: -5.770168781280518
    10. ' matr' → logprob: -6.395168781280518

Token 79: ' vide' (ID: 21835)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.9342390894889832
    2. '_gr' → logprob: -1.809239149093628
    3. 'gr' → logprob: -1.809239149093628
    4. '_' → logprob: -2.684239149093628
    5. '_grid' → logprob: -2.684239149093628
    6. '[]' → logprob: -3.059239149093628
    7. ' grid' → logprob: -3.559239149093628
    8. ' grille' → logprob: -3.809239149093628
    9. 's' → logprob: -5.059238910675049
    10. '<|end|>' → logprob: -5.309238910675049

Token 80: ' appelée' (ID: 179130)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.37882769107818604
    2. 'gr' → logprob: -2.1288275718688965
    3. ' grid' → logprob: -2.5038275718688965
    4. 'g' → logprob: -3.1288275718688965
    5. ' grille' → logprob: -3.7538275718688965
    6. '[]' → logprob: -4.6288275718688965
    7. '_grid' → logprob: -5.0038275718688965
    8. '_gr' → logprob: -5.7538275718688965
    9. ',' → logprob: -5.7538275718688965
    10. 'G' → logprob: -5.8788275718688965

Token 81: ' '' (ID: 461)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.612231969833374
    2. 'grid' → logprob: -0.862231969833374
    3. ' grid' → logprob: -3.612231969833374
    4. ' grille' → logprob: -4.987232208251953
    5. 'g' → logprob: -6.862232208251953
    6. 'G' → logprob: -8.612232208251953
    7. '`' → logprob: -9.362232208251953
    8. 'board' → logprob: -9.362232208251953
    9. '```' → logprob: -9.862232208251953
    10. 'result' → logprob: -9.862232208251953

Token 82: 'a' (ID: 64)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.5618728995323181
    2. 'gr' → logprob: -1.061872959136963
    3. ' grid' → logprob: -2.686872959136963
    4. ' grille' → logprob: -4.311872959136963
    5. 'board' → logprob: -7.061872959136963
    6. 'g' → logprob: -7.936872959136963
    7. ' gr' → logprob: -8.561872482299805
    8. 'matrix' → logprob: -8.686872482299805
    9. 'data' → logprob: -8.811872482299805
    10. '```' → logprob: -9.061872482299805

Token 83: ''' (ID: 6)
  Prédit: 'rray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rray' → logprob: -0.21840934455394745
    2. 'rr' → logprob: -1.7184092998504639
    3. 'a' → logprob: -4.968409538269043
    4. 'r' → logprob: -5.718409538269043
    5. '_' → logprob: -6.593409538269043
    6. ')' → logprob: -7.218409538269043
    7. '_array' → logprob: -7.468409538269043
    8. '_gr' → logprob: -7.593409538269043
    9. '')' → logprob: -7.718409538269043
    10. ' =' → logprob: -8.093409538269043

Token 84: ' pour' (ID: 1930)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002270198310725391
    2. ' a' → logprob: -8.500226974487305
    3. '[a' → logprob: -12.125226974487305
    4. '
' → logprob: -12.250226974487305
    5. '<|end|>' → logprob: -12.250226974487305
    6. '#a' → logprob: -13.625226974487305
    7. '[]' → logprob: -13.750226974487305
    8. ''a' → logprob: -13.750226974487305
    9. '[' → logprob: -14.125226974487305
    10. '	a' → logprob: -14.750226974487305

Token 85: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.8275880813598633
    2. ' accueillir' → logprob: -1.3275880813598633
    3. '[]' → logprob: -2.4525880813598633
    4. ' recevoir' → logprob: -2.5775880813598633
    5. 'a' → logprob: -3.7025880813598633
    6. ' ' → logprob: -3.8275880813598633
    7. 'stock' → logprob: -4.077588081359863
    8. '=[]' → logprob: -4.452588081359863
    9. ' recue' → logprob: -4.452588081359863
    10. '_' → logprob: -4.452588081359863

Token 86: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.015272366814315319
    2. 'érer' → logprob: -4.39027214050293
    3. 'e' → logprob: -6.01527214050293
    4. 'erer' → logprob: -9.51527214050293
    5. 'urer' → logprob: -10.01527214050293
    6. 'uler' → logprob: -10.26527214050293
    7. 'rer' → logprob: -10.51527214050293
    8. 'r' → logprob: -10.89027214050293
    9. 'iser' → logprob: -11.01527214050293
    10. 'a' → logprob: -11.51527214050293

Token 87: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4875205457210541
    2. 'les' → logprob: -1.6125205755233765
    3. ' la' → logprob: -2.112520456314087
    4. ' ' → logprob: -3.987520456314087
    5. 'la' → logprob: -4.362520694732666
    6. 'a' → logprob: -4.612520694732666
    7. 'l' → logprob: -4.612520694732666
    8. '<|end|>' → logprob: -5.362520694732666
    9. ' l' → logprob: -6.112520694732666
    10. '[]' → logprob: -6.362520694732666

Token 88: ' grille' (ID: 99153)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07960473746061325
    2. ' s' → logprob: -3.0796046257019043
    3. ' ' → logprob: -4.579604625701904
    4. 'gr' → logprob: -4.829604625701904
    5. 'l' → logprob: -5.204604625701904
    6. '_' → logprob: -6.204604625701904
    7. 'a' → logprob: -6.704604625701904
    8. ' grille' → logprob: -6.829604625701904
    9. ' l' → logprob: -7.829604625701904
    10. '_gr' → logprob: -8.329605102539062

Token 89: '/' (ID: 14)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4074053168296814
    2. '
' → logprob: -1.2824053764343262
    3. '\n' → logprob: -3.782405376434326
    4. '\' → logprob: -4.657405376434326
    5. 'n' → logprob: -4.907405376434326
    6. ' 
' → logprob: -5.657405376434326
    7. '[' → logprob: -5.782405376434326
    8. 'for' → logprob: -5.907405376434326
    9. '' → logprob: -6.032405376434326
    10. 'newline' → logprob: -7.032405376434326

Token 90: 'les' (ID: 1032)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01860499195754528
    2. ' ' → logprob: -4.268604755401611
    3. ' a' → logprob: -6.518604755401611
    4. '[' → logprob: -7.018604755401611
    5. 'for' → logprob: -7.768604755401611
    6. '[]' → logprob: -8.39360523223877
    7. 's' → logprob: -8.64360523223877
    8. '_' → logprob: -8.89360523223877
    9. 'grid' → logprob: -9.14360523223877
    10. 'n' → logprob: -9.39360523223877

Token 91: ' matrices' (ID: 75935)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.41852858662605286
    2. 'l' → logprob: -1.1685285568237305
    3. ' données' → logprob: -3.9185285568237305
    4. 'a' → logprob: -6.0435285568237305
    5. '_' → logprob: -6.4185285568237305
    6. ' valeurs' → logprob: -6.5435285568237305
    7. ' a' → logprob: -6.6685285568237305
    8. 'd' → logprob: -6.6685285568237305
    9. ' l' → logprob: -7.0435285568237305
    10. 'élé' → logprob: -7.7935285568237305

Token 92: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16748400032520294
    2. '
' → logprob: -2.1674840450286865
    3. '\n' → logprob: -4.417483806610107
    4. ' 
' → logprob: -4.792483806610107
    5. 'for' → logprob: -5.792483806610107
    6. 'n' → logprob: -6.042483806610107
    7. ' a' → logprob: -6.042483806610107
    8. '[' → logprob: -6.042483806610107
    9. '\' → logprob: -6.167483806610107
    10. '  
' → logprob: -6.292483806610107

Token 93: ' nombres' (ID: 76205)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6426309943199158
    2. ' l' → logprob: -1.6426310539245605
    3. ' lignes' → logprob: -2.3926310539245605
    4. 'a' → logprob: -2.7676310539245605
    5. '_' → logprob: -3.7676310539245605
    6. ' la' → logprob: -4.2676310539245605
    7. ' ' → logprob: -4.3926310539245605
    8. '0' → logprob: -4.7676310539245605
    9. ' listes' → logprob: -4.7676310539245605
    10. ' données' → logprob: -5.2676310539245605

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2871008813381195
    2. 'a' → logprob: -2.0371007919311523
    3. '\n' → logprob: -2.5371007919311523
    4. 'for' → logprob: -4.412100791931152
    5. ' 
' → logprob: -5.287100791931152
    6. '' → logprob: -5.412100791931152
    7. '\' → logprob: -5.412100791931152
    8. '  
' → logprob: -5.912100791931152
    9. ' for' → logprob: -6.037100791931152
    10. '
' → logprob: -6.037100791931152

Token 95: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004719187971204519
    2. '
' → logprob: -5.879719257354736
    3. 'for' → logprob: -7.129719257354736
    4. '\n' → logprob: -7.254719257354736
    5. '\' → logprob: -9.129718780517578
    6. ' a' → logprob: -9.254718780517578
    7. ' 
' → logprob: -9.504718780517578
    8. 'n' → logprob: -9.879718780517578
    9. '' → logprob: -11.129718780517578
    10. '  
' → logprob: -11.254718780517578

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01819911040365696
    2. '=' → logprob: -4.0181989669799805
    3. '.' → logprob: -10.64319896697998
    4. '=[]' → logprob: -11.14319896697998
    5. '.append' → logprob: -13.01819896697998
    6. ' +=' → logprob: -13.14319896697998
    7. ' =[' → logprob: -13.26819896697998
    8. '[' → logprob: -14.01819896697998
    9. ' ' → logprob: -14.14319896697998
    10. ' =
' → logprob: -14.51819896697998

Token 97: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.3212512731552124
    2. '[]' → logprob: -1.8212512731552124
    3. '[' → logprob: -2.571251392364502
    4. ' [' → logprob: -3.321251392364502
    5. '[int' → logprob: -9.196250915527344
    6. '[list' → logprob: -9.196250915527344
    7. '[a' → logprob: -10.071250915527344
    8. '[s' → logprob: -10.946250915527344
    9. '[input' → logprob: -10.946250915527344
    10. '[n' → logprob: -11.071250915527344

Token 98: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1881207674741745
    2. '
' → logprob: -2.0631208419799805
    3. '\n' → logprob: -3.8131208419799805
    4. '\' → logprob: -4.6881208419799805
    5. ' for' → logprob: -4.8131208419799805
    6. '' → logprob: -6.0631208419799805
    7. '#' → logprob: -6.8131208419799805
    8. ' 
' → logprob: -7.6881208419799805
    9. 'n' → logprob: -7.8131208419799805
    10. '<|end|>' → logprob: -8.81312084197998

Token 99: ' Ré' (ID: 27181)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00044926130794920027
    2. ' for' → logprob: -7.875449180603027
    3. 'f' → logprob: -9.750449180603027
    4. '#' → logprob: -11.625449180603027
    5. 'r' → logprob: -13.625449180603027
    6. 'F' → logprob: -15.750449180603027
    7. 'fo' → logprob: -16.000450134277344
    8. 'pour' → logprob: -16.000450134277344
    9. '
' → logprob: -16.500450134277344
    10. 'For' → logprob: -17.000450134277344

Token 100: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.021723082289099693
    2. 'pé' → logprob: -4.52172327041626
    3. 'c' → logprob: -5.39672327041626
    4. 'cup' → logprob: -5.64672327041626
    5. '#' → logprob: -7.14672327041626
    6. 'a' → logprob: -7.77172327041626
    7. 'cu' → logprob: -7.89672327041626
    8. 'pe' → logprob: -8.146722793579102
    9. 'col' → logprob: -9.271722793579102
    10. 'pi' → logprob: -9.396722793579102

Token 101: 'éter' (ID: 73737)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.08600598573684692
    2. 'éter' → logprob: -2.586005926132202
    3. 'e' → logprob: -4.961006164550781
    4. 'è' → logprob: -10.211006164550781
    5. 'ét' → logprob: -10.336006164550781
    6. 'eter' → logprob: -12.461006164550781
    7. 'été' → logprob: -13.086006164550781
    8. '#' → logprob: -13.211006164550781
    9. 'l' → logprob: -13.461006164550781
    10. 'ê' → logprob: -14.086006164550781

Token 102: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.3650386929512024
    2. ' ' → logprob: -1.8650386333465576
    3. ' for' → logprob: -2.1150386333465576
    4. 'for' → logprob: -3.8650386333465576
    5. 'H' → logprob: -5.990038871765137
    6. ' (' → logprob: -6.490038871765137
    7. '  ' → logprob: -6.615038871765137
    8. '   ' → logprob: -7.365038871765137
    9. ' range' → logprob: -7.615038871765137
    10. ' _' → logprob: -7.740038871765137

Token 103: ' fois' (ID: 14697)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.46393394470214844
    2. ' for' → logprob: -2.0889339447021484
    3. ' fois' → logprob: -2.3389339447021484
    4. ' ' → logprob: -2.7139339447021484
    5. 'for' → logprob: -3.2139339447021484
    6. 'times' → logprob: -3.8389339447021484
    7. ' ' → logprob: -5.088933944702148
    8. 'fois' → logprob: -5.463933944702148
    9. ' =' → logprob: -5.838933944702148
    10. '=' → logprob: -6.338933944702148

Token 104: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15329794585704803
    2. ' for' → logprob: -2.0282979011535645
    3. '
' → logprob: -4.6532979011535645
    4. ':' → logprob: -8.403298377990723
    5. '' → logprob: -8.403298377990723
    6. '\n' → logprob: -8.778298377990723
    7. '```' → logprob: -8.778298377990723
    8. '<|end|>' → logprob: -9.528298377990723
    9. ' 
' → logprob: -9.778298377990723
    10. 'n' → logprob: -10.403298377990723

Token 105: 'pour' (ID: 52723)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5236532092094421
    2. ' for' → logprob: -1.023653268814087
    3. ' ' → logprob: -4.148653030395508
    4. ')' → logprob: -4.148653030395508
    5. '   ' → logprob: -5.273653030395508
    6. ' i' → logprob: -5.523653030395508
    7. ' )' → logprob: -6.023653030395508
    8. '    ' → logprob: -6.773653030395508
    9. ' 
' → logprob: -6.898653030395508
    10. '
' → logprob: -7.648653030395508

Token 106: ' chaque' (ID: 21194)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3885270357131958
    2. ' i' → logprob: -1.2635270357131958
    3. ' ' → logprob: -3.7635269165039062
    4. '_' → logprob: -4.888526916503906
    5. ' ' → logprob: -5.263526916503906
    6. 'i' → logprob: -6.763526916503906
    7. ' range' → logprob: -7.263526916503906
    8. ' chaque' → logprob: -7.388526916503906
    9. ' each' → logprob: -9.263526916503906
    10. ' ' → logprob: -9.388526916503906

Token 107: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.04320288822054863
    2. 'ligne' → logprob: -4.418202877044678
    3. ' ' → logprob: -4.668202877044678
    4. ' i' → logprob: -4.793202877044678
    5. ' _' → logprob: -5.043202877044678
    6. '_' → logprob: -5.418202877044678
    7. ' lignes' → logprob: -7.418202877044678
    8. ')' → logprob: -7.918202877044678
    9. ' ' → logprob: -8.293203353881836
    10. ' )' → logprob: -9.043203353881836

Token 108: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06553681194782257
    2. ')' → logprob: -3.1905367374420166
    3. ' :' → logprob: -4.065536975860596
    4. '):' → logprob: -6.815536975860596
    5. ',' → logprob: -7.190536975860596
    6. 'a' → logprob: -7.315536975860596
    7. ' )' → logprob: -7.440536975860596
    8. ':
' → logprob: -7.690536975860596
    9. 'for' → logprob: -7.815536975860596
    10. ' ' → logprob: -8.315536499023438

Token 109: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1947907954454422
    2. ' code' → logprob: -2.819790840148926
    3. 'la' → logprob: -3.069790840148926
    4. ' grille' → logprob: -3.444790840148926
    5. ' input' → logprob: -4.819790840148926
    6. ' a' → logprob: -4.944790840148926
    7. 'a' → logprob: -4.944790840148926
    8. ' range' → logprob: -5.694790840148926
    9. 'entrée' → logprob: -5.694790840148926
    10. ' entrée' → logprob: -6.319790840148926

Token 110: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.47479262948036194
    2. ' grille' → logprob: -0.9747925996780396
    3. 'range' → logprob: -8.47479248046875
    4. '#' → logprob: -9.09979248046875
    5. ' gr' → logprob: -9.22479248046875
    6. 'mat' → logprob: -9.47479248046875
    7. 'entrée' → logprob: -10.59979248046875
    8. 'grid' → logprob: -10.72479248046875
    9. 'a' → logprob: -10.72479248046875
    10. 's' → logprob: -11.09979248046875

Token 111: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3699495494365692
    2. ')' → logprob: -1.2449495792388916
    3. '):' → logprob: -4.3699493408203125
    4. ' :' → logprob: -6.1199493408203125
    5. ':
' → logprob: -6.2449493408203125
    6. '):
' → logprob: -6.6199493408203125
    7. ',' → logprob: -7.2449493408203125
    8. ' )' → logprob: -7.2449493408203125
    9. ')
' → logprob: -8.119949340820312
    10. ' ' → logprob: -8.244949340820312

Token 112: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015217076055705547
    2. ' for' → logprob: -4.265217304229736
    3. '
' → logprob: -6.890217304229736
    4. ' 
' → logprob: -10.390216827392578
    5. '   ' → logprob: -13.390216827392578
    6. '```' → logprob: -14.015216827392578
    7. '	for' → logprob: -14.765216827392578
    8. 'n' → logprob: -14.765216827392578
    9. '  
' → logprob: -15.015216827392578
    10. 'i' → logprob: -15.140216827392578

Token 113: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.49112483859062195
    2. ' i' → logprob: -1.2411248683929443
    3. ' ' → logprob: -2.3661248683929443
    4. '_' → logprob: -5.366124629974365
    5. 'i' → logprob: -8.241125106811523
    6. ' ‌' → logprob: -8.741125106811523
    7. ' ' → logprob: -10.241125106811523
    8. ' ▁' → logprob: -11.616125106811523
    9. '  ' → logprob: -11.866125106811523
    10. '_i' → logprob: -12.616125106811523

Token 114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00477899145334959
    2. 'in' → logprob: -5.379778861999512
    3. ' ' → logprob: -8.879778861999512
    4. ' i' → logprob: -11.629778861999512
    5. '_' → logprob: -12.754778861999512
    6. ',' → logprob: -13.004778861999512
    7. ' ' → logprob: -13.129778861999512
    8. ' ,' → logprob: -14.504778861999512
    9. ' _' → logprob: -14.504778861999512
    10. '1' → logprob: -14.629778861999512

Token 115: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740845859050751
    2. 'range' → logprob: -0.9740846157073975
    3. ' ' → logprob: -12.474084854125977
    4. '	range' → logprob: -13.099084854125977
    5. '(range' → logprob: -14.474084854125977
    6. 'rang' → logprob: -14.974084854125977
    7. ' ran' → logprob: -15.724084854125977
    8. 'ran' → logprob: -15.724084854125977
    9. ' rang' → logprob: -16.224084854125977
    10. ' xrange' → logprob: -16.349084854125977

Token 116: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.25260230898857117
    2. '(' → logprob: -1.5026023387908936
    3. ' (' → logprob: -7.5026021003723145
    4. '(
' → logprob: -9.127602577209473
    5. ' H' → logprob: -12.127602577209473
    6. '(s' → logprob: -13.502602577209473
    7. '()' → logprob: -13.502602577209473
    8. '(int' → logprob: -13.752602577209473
    9. 'H' → logprob: -14.377602577209473
    10. ' ' → logprob: -15.127602577209473

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006207719910889864
    2. ')' → logprob: -5.1312079429626465
    3. ':' → logprob: -8.631207466125488
    4. ' ):' → logprob: -9.756207466125488
    5. '):
' → logprob: -10.131207466125488
    6. '+' → logprob: -14.131207466125488
    7. ' :' → logprob: -14.881207466125488
    8. ' )' → logprob: -15.131207466125488
    9. '():' → logprob: -15.381207466125488
    10. '):
' → logprob: -15.631207466125488

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025518300011754036
    2. 'a' → logprob: -4.400518417358398
    3. ' a' → logprob: -4.400518417358398
    4. '    
' → logprob: -7.900518417358398
    5. '    ' → logprob: -8.775518417358398
    6. '	a' → logprob: -11.150518417358398
    7. ' ,' → logprob: -11.150518417358398
    8. ' 
' → logprob: -11.525518417358398
    9. ':' → logprob: -11.650518417358398
    10. ',a' → logprob: -11.650518417358398

Token 119: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5379908680915833
    2. ' a' → logprob: -0.9129908680915833
    3. '   ' → logprob: -4.287991046905518
    4. '    
' → logprob: -7.912991046905518
    5. ' 
' → logprob: -8.41299057006836
    6. '    ' → logprob: -8.91299057006836
    7. ' line' → logprob: -9.28799057006836
    8. '     
' → logprob: -10.41299057006836
    9. 'line' → logprob: -10.66299057006836
    10. ' ' → logprob: -10.66299057006836

Token 120: ' Lire' (ID: 57624)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2679629325866699
    2. ' a' → logprob: -1.51796293258667
    3. ' row' → logprob: -4.64296293258667
    4. ' line' → logprob: -5.64296293258667
    5. 'row' → logprob: -6.64296293258667
    6. '   ' → logprob: -8.017963409423828
    7. ' ligne' → logprob: -8.517963409423828
    8. 'line' → logprob: -8.517963409423828
    9. '#' → logprob: -8.642963409423828
    10. ' ' → logprob: -8.892963409423828

Token 121: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.2094542980194092
    2. ' ' → logprob: -1.5844542980194092
    3. ' la' → logprob: -1.7094542980194092
    4. 'a' → logprob: -2.459454298019409
    5. ' l' → logprob: -2.834454298019409
    6. '    ' → logprob: -3.084454298019409
    7. ' a' → logprob: -3.334454298019409
    8. ' ' → logprob: -4.084454536437988
    9. '   ' → logprob: -4.334454536437988
    10. ' input' → logprob: -4.709454536437988

Token 122: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.976615846157074
    2. 'ligne' → logprob: -1.3516159057617188
    3. 'liste' → logprob: -1.6016159057617188
    4. ' liste' → logprob: -1.9766159057617188
    5. 'a' → logprob: -5.226615905761719
    6. 'l' → logprob: -5.476615905761719
    7. 'input' → logprob: -5.601615905761719
    8. 'list' → logprob: -6.101615905761719
    9. 'suite' → logprob: -6.726615905761719
    10. ' prochaine' → logprob: -6.726615905761719

Token 123: ' cour' (ID: 2871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40677356719970703
    2. 'a' → logprob: -1.906773567199707
    3. '    ' → logprob: -2.156773567199707
    4. ',' → logprob: -3.656773567199707
    5. ' ' → logprob: -4.406773567199707
    6. ' a' → logprob: -4.781773567199707
    7. ' ,' → logprob: -5.281773567199707
    8. 's' → logprob: -5.281773567199707
    9. '  ' → logprob: -6.031773567199707
    10. '()' → logprob: -6.156773567199707

Token 124: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.003995765466243029
    2. 'r' → logprob: -5.628995895385742
    3. 'ant' → logprob: -7.878995895385742
    4. 'a' → logprob: -11.628995895385742
    5. 'amment' → logprob: -12.628995895385742
    6. '#' → logprob: -13.628995895385742
    7. 'anter' → logprob: -14.128995895385742
    8. 'antes' → logprob: -14.253995895385742
    9. 'nante' → logprob: -14.378995895385742
    10. 'rant' → logprob: -15.253995895385742

Token 125: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4579468369483948
    2. 'a' → logprob: -1.83294677734375
    3. '    ' → logprob: -2.45794677734375
    4. ',' → logprob: -2.70794677734375
    5. ' ,' → logprob: -3.58294677734375
    6. '    
' → logprob: -4.58294677734375
    7. ' a' → logprob: -4.95794677734375
    8. ' ' → logprob: -6.08294677734375
    9. 's' → logprob: -6.70794677734375
    10. '     
' → logprob: -6.83294677734375

Token 126: ' décou' (ID: 68302)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07820751518011093
    2. 'a' → logprob: -2.703207492828369
    3. ' ' → logprob: -6.078207492828369
    4. '   ' → logprob: -6.328207492828369
    5. '    ' → logprob: -6.578207492828369
    6. ' row' → logprob: -7.203207492828369
    7. ' lst' → logprob: -7.703207492828369
    8. ' line' → logprob: -7.828207492828369
    9. ' data' → logprob: -8.078207969665527
    10. ' list' → logprob: -9.078207969665527

Token 127: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.028981398791074753
    2. 'p' → logprob: -3.7789814472198486
    3. 'pe' → logprob: -5.2789812088012695
    4. 'page' → logprob: -8.15398120880127
    5. 'pé' → logprob: -8.52898120880127
    6. ' per' → logprob: -10.65398120880127
    7. '   ' → logprob: -11.52898120880127
    8. 'pper' → logprob: -11.65398120880127
    9. 'pez' → logprob: -11.77898120880127
    10. 'пер' → logprob: -12.02898120880127

Token 128: ' selon' (ID: 27571)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000518716755323112
    2. ' ()' → logprob: -9.125518798828125
    3. ' la' → logprob: -9.500518798828125
    4. ' l' → logprob: -9.875518798828125
    5. ')' → logprob: -10.000518798828125
    6. ' en' → logprob: -10.125518798828125
    7. 'input' → logprob: -10.250518798828125
    8. 'la' → logprob: -10.375518798828125
    9. 'l' → logprob: -11.000518798828125
    10. '(' → logprob: -11.125518798828125

Token 129: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.11626411229372025
    2. ''' → logprob: -3.4912641048431396
    3. 'l' → logprob: -3.7412641048431396
    4. ' les' → logprob: -3.8662641048431396
    5. '()' → logprob: -4.491264343261719
    6. '"' → logprob: -5.366264343261719
    7. 'les' → logprob: -5.616264343261719
    8. ' '' → logprob: -5.741264343261719
    9. ' ' → logprob: -6.616264343261719
    10. ''l' → logprob: -6.991264343261719

Token 130: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.02769932709634304
    2. 'esp' → logprob: -3.7776992321014404
    3. ' espace' → logprob: -6.0276994705200195
    4. ''esp' → logprob: -7.1526994705200195
    5. 'es' → logprob: -8.02769947052002
    6. ''espace' → logprob: -8.40269947052002
    7. ''' → logprob: -8.52769947052002
    8. ' ' → logprob: -9.40269947052002
    9. '"' → logprob: -9.52769947052002
    10. 'spaces' → logprob: -9.77769947052002

Token 131: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43369707465171814
    2. ' ,' → logprob: -1.8086971044540405
    3. '   ' → logprob: -1.9336971044540405
    4. 'a' → logprob: -3.558696985244751
    5. ',a' → logprob: -4.80869722366333
    6. ' a' → logprob: -5.55869722366333
    7. ' ' → logprob: -7.18369722366333
    8. '    ' → logprob: -7.18369722366333
    9. '    
' → logprob: -8.058696746826172
    10. ')' → logprob: -8.058696746826172

Token 132: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.04475194588303566
    2. 'convert' → logprob: -3.9197518825531006
    3. ' convert' → logprob: -4.29475212097168
    4. '   ' → logprob: -6.29475212097168
    5. 'aj' → logprob: -6.54475212097168
    6. '    ' → logprob: -6.66975212097168
    7. ' appliquer' → logprob: -6.79475212097168
    8. 'con' → logprob: -7.29475212097168
    9. 'ap' → logprob: -7.41975212097168
    10. '    
' → logprob: -7.54475212097168

Token 133: ' chaque' (ID: 21194)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.4879564344882965
    2. '()' → logprob: -1.9879564046859741
    3. '(' → logprob: -2.2379565238952637
    4. ' la' → logprob: -2.9879565238952637
    5. ' les' → logprob: -3.1129565238952637
    6. 'la' → logprob: -4.237956523895264
    7. 'les' → logprob: -4.987956523895264
    8. '   ' → logprob: -4.987956523895264
    9. 'en' → logprob: -5.112956523895264
    10. '(int' → logprob: -5.862956523895264

Token 134: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.06263647973537445
    2. ' élément' → logprob: -2.937636375427246
    3. 'int' → logprob: -6.187636375427246
    4. 'element' → logprob: -6.812636375427246
    5. ' en' → logprob: -7.062636375427246
    6. ' ' → logprob: -7.062636375427246
    7. 'val' → logprob: -7.187636375427246
    8. ' element' → logprob: -7.562636375427246
    9. 'elem' → logprob: -8.687636375427246
    10. 'car' → logprob: -8.687636375427246

Token 135: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0059831892140209675
    2. 'en' → logprob: -6.005983352661133
    3. 'int' → logprob: -7.005983352661133
    4. ' in' → logprob: -7.380983352661133
    5. ' into' → logprob: -7.380983352661133
    6. '   ' → logprob: -7.755983352661133
    7. ' int' → logprob: -8.130983352661133
    8. '(int' → logprob: -9.380983352661133
    9. ' a' → logprob: -9.755983352661133
    10. '=int' → logprob: -10.005983352661133

Token 136: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4742344915866852
    2. ' int' → logprob: -0.9742344617843628
    3. 'ent' → logprob: -9.224234580993652
    4. ' entier' → logprob: -10.599234580993652
    5. ' ' → logprob: -11.474234580993652
    6. ' ent' → logprob: -11.724234580993652
    7. '=int' → logprob: -12.599234580993652
    8. '	int' → logprob: -13.099234580993652
    9. ']int' → logprob: -13.474234580993652
    10. '(int' → logprob: -13.724234580993652

Token 137: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10671351104974747
    2. ',' → logprob: -2.8567135334014893
    3. 'a' → logprob: -3.4817135334014893
    4. ' ,' → logprob: -5.35671329498291
    5. '    
' → logprob: -6.35671329498291
    6. ' a' → logprob: -6.48171329498291
    7. 's' → logprob: -6.85671329498291
    8. '    ' → logprob: -6.85671329498291
    9. '	a' → logprob: -7.23171329498291
    10. ':' → logprob: -7.48171329498291

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027907442301511765
    2. 'a' → logprob: -3.777907371520996
    3. ' a' → logprob: -6.027907371520996
    4. ',' → logprob: -6.902907371520996
    5. '    ' → logprob: -8.527907371520996
    6. ' ,' → logprob: -8.527907371520996
    7. ':' → logprob: -8.777907371520996
    8. '    
' → logprob: -9.027907371520996
    9. 's' → logprob: -9.152907371520996
    10. ' ' → logprob: -9.402907371520996

Token 139: ' A' (ID: 355)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7399708032608032
    2. 'a' → logprob: -1.1149708032608032
    3. ' row' → logprob: -2.3649706840515137
    4. ' line' → logprob: -3.1149706840515137
    5. '   ' → logprob: -3.7399706840515137
    6. 'row' → logprob: -4.114970684051514
    7. 'line' → logprob: -4.739970684051514
    8. ' ligne' → logprob: -5.864970684051514
    9. ' ' → logprob: -6.239970684051514
    10. 'ligne' → logprob: -6.489970684051514

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13321879506111145
    2. '=' → logprob: -2.258218765258789
    3. '_line' → logprob: -4.758218765258789
    4. '.append' → logprob: -5.633218765258789
    5. '_' → logprob: -5.633218765258789
    6. 'l' → logprob: -7.008218765258789
    7. '_l' → logprob: -7.133218765258789
    8. ',' → logprob: -7.883218765258789
    9. 'ligne' → logprob: -7.883218765258789
    10. '[]' → logprob: -8.008218765258789

Token 141: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.31326204538345337
    2. 'list' → logprob: -1.3132619857788086
    3. 'map' → logprob: -15.438261985778809
    4. ' map' → logprob: -15.813261985778809
    5. '=list' → logprob: -17.938262939453125
    6. '	list' → logprob: -18.188262939453125
    7. ' ' → logprob: -18.188262939453125
    8. ' liste' → logprob: -18.813262939453125
    9. 'List' → logprob: -19.063262939453125
    10. 'int' → logprob: -19.563262939453125

Token 142: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.5046365857124329
    2. '(' → logprob: -1.004636526107788
    3. '(int' → logprob: -3.504636526107788
    4. '(input' → logprob: -11.129636764526367
    5. '(
' → logprob: -11.379636764526367
    6. 'map' → logprob: -13.004636764526367
    7. ' (' → logprob: -13.254636764526367
    8. '(

' → logprob: -13.254636764526367
    9. '<int' → logprob: -13.629636764526367
    10. '()' → logprob: -13.754636764526367

Token 143: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018174871802330017
    2. '(' → logprob: -4.018174648284912
    3. '<int' → logprob: -11.39317512512207
    4. '(
' → logprob: -12.26817512512207
    5. 'int' → logprob: -12.64317512512207
    6. ' (' → logprob: -13.39317512512207
    7. '[int' → logprob: -13.76817512512207
    8. ',int' → logprob: -13.89317512512207
    9. ']int' → logprob: -14.26817512512207
    10. '(in' → logprob: -14.39317512512207

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28072866797447205
    2. ',input' → logprob: -1.5307286977767944
    3. '(input' → logprob: -3.655728578567505
    4. '(' → logprob: -6.280728816986084
    5. 'input' → logprob: -7.405728816986084
    6. '(),' → logprob: -9.780728340148926
    7. ' ,' → logprob: -12.905728340148926
    8. '(
' → logprob: -13.280728340148926
    9. '=input' → logprob: -13.905728340148926
    10. ' input' → logprob: -14.155728340148926

Token 145: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009862331673502922
    2. ' input' → logprob: -4.634862422943115
    3. '(input' → logprob: -9.384861946105957
    4. ',input' → logprob: -11.134861946105957
    5. ')' → logprob: -12.759861946105957
    6. '   ' → logprob: -13.259861946105957
    7. '	input' → logprob: -13.884861946105957
    8. '_input' → logprob: -14.634861946105957
    9. '=input' → logprob: -14.884861946105957
    10. ',' → logprob: -14.884861946105957

Token 146: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.127333340875339e-06
    2. '()' → logprob: -12.500003814697266
    3. ' ().' → logprob: -15.000003814697266
    4. '.' → logprob: -17.000003814697266
    5. '(' → logprob: -17.875003814697266
    6. ' .' → logprob: -17.875003814697266
    7. '.split' → logprob: -18.750003814697266
    8. '()
' → logprob: -20.375003814697266
    9. ')' → logprob: -20.625003814697266
    10. '>().' → logprob: -21.125003814697266

Token 147: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.36574100604048e-06
    2. ' split' → logprob: -13.125004768371582
    3. ')' → logprob: -13.375004768371582
    4. 'strip' → logprob: -14.375004768371582
    5. '(split' → logprob: -17.000003814697266
    6. 'rstrip' → logprob: -17.625003814697266
    7. 'spl' → logprob: -17.875003814697266
    8. '.split' → logprob: -18.500003814697266
    9. ' ' → logprob: -19.125003814697266
    10. '_split' → logprob: -19.250003814697266

Token 148: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03737187013030052
    2. '()' → logprob: -3.912371873855591
    3. '))' → logprob: -4.787371635437012
    4. '())' → logprob: -4.912371635437012
    5. '(' → logprob: -7.162371635437012
    6. ')' → logprob: -8.662371635437012
    7. '())))' → logprob: -10.912371635437012
    8. '()));' → logprob: -11.037371635437012
    9. '()))
' → logprob: -11.787371635437012
    10. '())).' → logprob: -13.412371635437012

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06943176686763763
    2. ')' → logprob: -3.444431781768799
    3. 'a' → logprob: -3.444431781768799
    4. '<|end|>' → logprob: -6.194431781768799
    5. '    
' → logprob: -7.819431781768799
    6. ' ' → logprob: -8.56943130493164
    7. ')a' → logprob: -8.94443130493164
    8. '  ' → logprob: -9.31943130493164
    9. ' a' → logprob: -9.44443130493164
    10. '\' → logprob: -10.06943130493164

Token 150: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07020595669746399
    2. '   ' → logprob: -2.8202059268951416
    3. '<|end|>' → logprob: -5.695206165313721
    4. ')' → logprob: -6.445206165313721
    5. ' a' → logprob: -6.570206165313721
    6. '    
' → logprob: -7.195206165313721
    7. '
' → logprob: -8.445205688476562
    8. '#a' → logprob: -8.570205688476562
    9. ' ' → logprob: -8.820205688476562
    10. ' 
' → logprob: -9.195205688476562

Token 151: ' Ajouter' (ID: 165754)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0053129736334085464
    2. ' a' → logprob: -5.255312919616699
    3. 'append' → logprob: -9.5053129196167
    4. '   ' → logprob: -13.3803129196167
    5. '.append' → logprob: -14.1303129196167
    6. ' ' → logprob: -14.6303129196167
    7. ' append' → logprob: -14.7553129196167
    8. '_a' → logprob: -14.8803129196167
    9. '	a' → logprob: -15.1303129196167
    10. '
' → logprob: -15.5053129196167

Token 152: ' la' (ID: 557)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.9197953939437866
    2. '(' → logprob: -1.1697953939437866
    3. '(A' → logprob: -1.2947953939437866
    4. ' A' → logprob: -5.044795513153076
    5. 'A' → logprob: -5.169795513153076
    6. 'a' → logprob: -6.169795513153076
    7. ' a' → logprob: -6.419795513153076
    8. '(
' → logprob: -7.544795513153076
    9. ' (' → logprob: -8.794795036315918
    10. '   ' → logprob: -8.794795036315918

Token 153: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08219319581985474
    2. ' A' → logprob: -2.83219313621521
    3. 'ligne' → logprob: -4.582193374633789
    4. ' ligne' → logprob: -4.832193374633789
    5. 'a' → logprob: -6.957193374633789
    6. ' ' → logprob: -8.332193374633789
    7. 'liste' → logprob: -8.332193374633789
    8. ' liste' → logprob: -8.832193374633789
    9. 'l' → logprob: -9.457193374633789
    10. 's' → logprob: -9.957193374633789

Token 154: ' convert' (ID: 8452)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7946339845657349
    2. '(A' → logprob: -1.4196339845657349
    3. 'a' → logprob: -2.1696338653564453
    4. '(' → logprob: -2.2946338653564453
    5. '(a' → logprob: -2.6696338653564453
    6. ' A' → logprob: -4.044633865356445
    7. ' a' → logprob: -5.919633865356445
    8. '(
' → logprob: -7.294633865356445
    9. ' (' → logprob: -7.294633865356445
    10. ')' → logprob: -8.169633865356445

Token 155: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.03765236958861351
    2. 'ir' → logprob: -3.6626522541046143
    3. 'i' → logprob: -5.037652492523193
    4. 'er' → logprob: -6.662652492523193
    5. 'A' → logprob: -6.912652492523193
    6. 'is' → logprob: -7.162652492523193
    7. '   ' → logprob: -8.162652015686035
    8. 'r' → logprob: -8.287652015686035
    9. 'e' → logprob: -8.662652015686035
    10. 'rie' → logprob: -8.787652015686035

Token 156: ' de' (ID: 334)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6224765777587891
    2. ' a' → logprob: -1.122476577758789
    3. '   ' → logprob: -2.622476577758789
    4. 'a' → logprob: -2.997476577758789
    5. ' A' → logprob: -5.747476577758789
    6. ' ' → logprob: -5.872476577758789
    7. '    ' → logprob: -6.122476577758789
    8. 'A' → logprob: -6.372476577758789
    9. ' au' → logprob: -6.497476577758789
    10. ')' → logprob: -7.122476577758789

Token 157: ' cette' (ID: 7696)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.054520998150110245
    2. ' A' → logprob: -3.179521083831787
    3. ' la' → logprob: -5.054521083831787
    4. 'la' → logprob: -6.429521083831787
    5. 'l' → logprob: -6.679521083831787
    6. 'a' → logprob: -7.804521083831787
    7. ' ent' → logprob: -7.929521083831787
    8. 'ent' → logprob: -8.054520606994629
    9. 'n' → logprob: -8.304520606994629
    10. ' nombres' → logprob: -9.054520606994629

Token 158: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.1297042816877365
    2. 'ligne' → logprob: -2.129704236984253
    3. ' A' → logprob: -7.129704475402832
    4. 'A' → logprob: -7.129704475402832
    5. 'l' → logprob: -7.629704475402832
    6. ' ' → logprob: -8.004704475402832
    7. '#' → logprob: -9.754704475402832
    8. 'line' → logprob: -10.379704475402832
    9. 'a' → logprob: -10.504704475402832
    10. ' line' → logprob: -10.879704475402832

Token 159: ' à' (ID: 1221)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6785866022109985
    2. 'a' → logprob: -1.0535866022109985
    3. ' à' → logprob: -2.553586483001709
    4. '   ' → logprob: -2.803586483001709
    5. '	a' → logprob: -6.053586483001709
    6. ' ' → logprob: -7.053586483001709
    7. 'à' → logprob: -7.553586483001709
    8. ')' → logprob: -7.678586483001709
    9. '_a' → logprob: -7.928586483001709
    10. '    ' → logprob: -8.053586959838867

Token 160: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00862320140004158
    2. ' a' → logprob: -4.758623123168945
    3. ' la' → logprob: -11.883623123168945
    4. ''a' → logprob: -14.133623123168945
    5. 'la' → logprob: -14.133623123168945
    6. ' ' → logprob: -16.133623123168945
    7. ' ' → logprob: -16.633623123168945
    8. '	a' → logprob: -16.883623123168945
    9. '_a' → logprob: -17.008623123168945
    10. '`' → logprob: -17.633623123168945

Token 161: ' grille' (ID: 99153)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002525722375139594
    2. ' a' → logprob: -6.002525806427002
    3. ''a' → logprob: -10.877525329589844
    4. 'liste' → logprob: -11.127525329589844
    5. ' liste' → logprob: -12.252525329589844
    6. 'gr' → logprob: -12.377525329589844
    7. '`' → logprob: -12.877525329589844
    8. 'list' → logprob: -14.502525329589844
    9. ' ' → logprob: -14.627525329589844
    10. 'b' → logprob: -14.627525329589844

Token 162: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.33753854036331177
    2. ' a' → logprob: -1.837538480758667
    3. '   ' → logprob: -2.212538480758667
    4. '	a' → logprob: -4.462538719177246
    5. '    
' → logprob: -6.212538719177246
    6. '
' → logprob: -6.212538719177246
    7. ' 
' → logprob: -7.337538719177246
    8. '    ' → logprob: -8.212538719177246
    9. ' ' → logprob: -8.712538719177246
    10. '_a' → logprob: -8.837538719177246

Token 163: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.128163257315464e-07
    2. ' a' → logprob: -15.25
    3. ')' → logprob: -17.125
    4. '```' → logprob: -18.125
    5. ''a' → logprob: -18.25
    6. 'а' → logprob: -18.25
    7. ')a' → logprob: -18.25
    8. '(a' → logprob: -19.5
    9. '`' → logprob: -19.625
    10. '	a' → logprob: -20.0

Token 164: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007928603328764439
    2. 'a' → logprob: -5.382928371429443
    3. '   ' → logprob: -6.257928371429443
    4. ')a' → logprob: -7.007928371429443
    5. ' )' → logprob: -9.007928848266602
    6. '.append' → logprob: -9.007928848266602
    7. '.a' → logprob: -9.757928848266602
    8. ')
' → logprob: -10.007928848266602
    9. ' a' → logprob: -10.632928848266602
    10. '))' → logprob: -10.882928848266602

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013178465887904167
    2. 'a' → logprob: -4.51317834854126
    3. '    
' → logprob: -6.51317834854126
    4. '
' → logprob: -8.138178825378418
    5. ' a' → logprob: -8.263178825378418
    6. '	a' → logprob: -11.388178825378418
    7. ')' → logprob: -11.763178825378418
    8. ' 
' → logprob: -11.763178825378418
    9. '  
' → logprob: -11.763178825378418
    10. '<|end|>' → logprob: -11.763178825378418

Token 166: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.12887121737003326
    2. ' a' → logprob: -2.128871202468872
    3. '   ' → logprob: -6.253871440887451
    4. ' ' → logprob: -12.003870964050293
    5. '	a' → logprob: -12.128870964050293
    6. ' ' → logprob: -13.253870964050293
    7. '  ' → logprob: -13.628870964050293
    8. '_a' → logprob: -13.753870964050293
    9. '.a' → logprob: -14.128870964050293
    10. '    ' → logprob: -15.003870964050293

Token 167: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2014947235584259
    2. '.' → logprob: -1.7014946937561035
    3. '.app' → logprob: -9.826495170593262
    4. '.extend' → logprob: -12.201495170593262
    5. '.ap' → logprob: -12.201495170593262
    6. '.Append' → logprob: -12.451495170593262
    7. '.setdefault' → logprob: -12.576495170593262
    8. '.push' → logprob: -12.701495170593262
    9. '.add' → logprob: -12.951495170593262
    10. '​.' → logprob: -14.076495170593262

Token 168: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.005236479919403791
    2. '(' → logprob: -5.255236625671387
    3. '(a' → logprob: -13.130236625671387
    4. '(
' → logprob: -14.755236625671387
    5. ' (' → logprob: -15.380236625671387
    6. '(

' → logprob: -16.63023567199707
    7. '((' → logprob: -16.75523567199707
    8. '(`' → logprob: -18.50523567199707
    9. '(B' → logprob: -19.00523567199707
    10. '(
' → logprob: -19.63023567199707

Token 169: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ')
' → logprob: -12.125005722045898
    3. ' )' → logprob: -15.625005722045898
    4. ')`' → logprob: -16.1250057220459
    5. '))' → logprob: -16.3750057220459
    6. ')a' → logprob: -17.1250057220459
    7. ')#' → logprob: -18.3750057220459
    8. ')

' → logprob: -18.7500057220459
    9. '`)' → logprob: -18.8750057220459
    10. ')}' → logprob: -19.3750057220459

Token 170: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.015674518421292305
    2. '
' → logprob: -4.890674591064453
    3. 'for' → logprob: -5.890674591064453
    4. '<|end|>' → logprob: -6.265674591064453
    5. 'n' → logprob: -7.015674591064453
    6. '\n' → logprob: -7.765674591064453
    7. '[' → logprob: -7.890674591064453
    8. 'a' → logprob: -7.890674591064453
    9. 'r' → logprob: -8.640674591064453
    10. '\' → logprob: -9.015674591064453

Token 171: ' Initial' (ID: 9209)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4127202332019806
    2. 'result' → logprob: -2.537720203399658
    3. 'total' → logprob: -2.662720203399658
    4. 'for' → logprob: -2.912720203399658
    5. 'max' → logprob: -3.037720203399658
    6. ' total' → logprob: -4.162720203399658
    7. ' #' → logprob: -4.412720203399658
    8. 's' → logprob: -4.412720203399658
    9. ' max' → logprob: -4.537720203399658
    10. ' for' → logprob: -4.787720203399658

Token 172: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.15454278886318207
    2. '#' → logprob: -2.5295426845550537
    3. 'izer' → logprob: -3.1545426845550537
    4. 'i' → logprob: -5.279542922973633
    5. '_' → logprob: -5.279542922973633
    6. 'e' → logprob: -5.654542922973633
    7. 'er' → logprob: -6.029542922973633
    8. 'ize' → logprob: -6.279542922973633
    9. 'a' → logprob: -7.279542922973633
    10. 'is' → logprob: -7.779542922973633

Token 173: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5459351539611816
    2. ' max' → logprob: -2.1709351539611816
    3. ' un' → logprob: -2.5459351539611816
    4. ' ans' → logprob: -2.7959351539611816
    5. ' result' → logprob: -3.1709351539611816
    6. 'max' → logprob: -3.6709351539611816
    7. 'result' → logprob: -4.170935153961182
    8. ' a' → logprob: -4.420935153961182
    9. ' sum' → logprob: -4.545935153961182
    10. ' an' → logprob: -4.795935153961182

Token 174: ' variable' (ID: 11076)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6603423953056335
    2. 'result' → logprob: -1.0353424549102783
    3. 'max' → logprob: -3.2853424549102783
    4. 'dp' → logprob: -3.7853424549102783
    5. 'rés' → logprob: -3.9103424549102783
    6. 'b' → logprob: -4.535342216491699
    7. 'res' → logprob: -5.160342216491699
    8. 'som' → logprob: -5.785342216491699
    9. 'liste' → logprob: -6.035342216491699
    10. 'trans' → logprob: -6.160342216491699

Token 175: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6659789085388184
    2. 'max' → logprob: -1.5409789085388184
    3. 'sum' → logprob: -2.6659789085388184
    4. 'ans' → logprob: -3.0409789085388184
    5. 'total' → logprob: -3.5409789085388184
    6. 'result' → logprob: -3.6659789085388184
    7. 'S' → logprob: -4.040978908538818
    8. ' max' → logprob: -4.290978908538818
    9. 'count' → logprob: -4.415978908538818
    10. 'res' → logprob: -4.790978908538818

Token 176: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040842071175575256
    2. '=' → logprob: -3.290842056274414
    3. ' ' → logprob: -6.290842056274414
    4. 'n' → logprob: -7.290842056274414
    5. ',' → logprob: -9.415842056274414
    6. 's' → logprob: -9.540842056274414
    7. 'd' → logprob: -10.915842056274414
    8. 'x' → logprob: -11.415842056274414
    9. '0' → logprob: -11.540842056274414
    10. ' ,' → logprob: -11.665842056274414

Token 177: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029907725751399994
    2. ' ' → logprob: -3.529907703399658
    3. '1' → logprob: -8.779908180236816
    4. 'H' → logprob: -14.029908180236816
    5. ' ' → logprob: -14.717408180236816
    6. ' -' → logprob: -14.967408180236816
    7. ' H' → logprob: -15.154908180236816
    8. '```' → logprob: -15.342408180236816
    9. '-' → logprob: -15.592408180236816
    10. '2' → logprob: -15.779908180236816

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007671024068258703
    2. '1' → logprob: -7.375767230987549
    3. ' ' → logprob: -9.12576675415039
    4. 'H' → logprob: -11.25076675415039
    5. '-' → logprob: -11.37576675415039
    6. '2' → logprob: -13.25076675415039
    7. '```' → logprob: -14.00076675415039
    8. 'a' → logprob: -14.50076675415039
    9. '-H' → logprob: -14.75076675415039
    10. '10' → logprob: -14.81326675415039

Token 179: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011399227194488049
    2. '
' → logprob: -4.636399269104004
    3. ' i' → logprob: -6.511399269104004
    4. ' 
' → logprob: -9.761399269104004
    5. ' ' → logprob: -10.761399269104004
    6. '\n' → logprob: -10.761399269104004
    7. 'a' → logprob: -11.011399269104004
    8. '  
' → logprob: -11.886399269104004
    9. '\' → logprob: -12.386399269104004
    10. ',i' → logprob: -12.386399269104004

Token 180: 'non' (ID: 11741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5872297883033752
    2. 'i' → logprob: -0.8372297883033752
    3. ' )' → logprob: -5.2122297286987305
    4. ')i' → logprob: -5.9622297286987305
    5. ' i' → logprob: -6.0872297286987305
    6. 'a' → logprob: -8.71222972869873
    7. 'while' → logprob: -8.83722972869873
    8. '#' → logprob: -9.46222972869873
    9. 'indice' → logprob: -9.46222972869873
    10. 'index' → logprob: -9.71222972869873

Token 181: ' utilisée' (ID: 106548)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.7417975068092346
    2. ' utilisée' → logprob: -2.24179744720459
    3. 'strict' → logprob: -2.49179744720459
    4. 'local' → logprob: -2.49179744720459
    5. 'util' → logprob: -2.86679744720459
    6. 'use' → logprob: -3.74179744720459
    7. ')' → logprob: -3.99179744720459
    8. ' strict' → logprob: -4.36679744720459
    9. 'visible' → logprob: -4.99179744720459
    10. ' utilis' → logprob: -5.24179744720459

Token 182: ' plus' (ID: 2932)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019262611865997314
    2. ' )' → logprob: -4.144262790679932
    3. 'i' → logprob: -6.394262790679932
    4. '#' → logprob: -7.144262790679932
    5. ',' → logprob: -8.019262313842773
    6. '
' → logprob: -9.269262313842773
    7. '<|end|>' → logprob: -9.519262313842773
    8. ' ' → logprob: -9.644262313842773
    9. ')i' → logprob: -9.644262313842773
    10. ')#' → logprob: -10.394262313842773

Token 183: ' loin' (ID: 40875)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31141120195388794
    2. ',' → logprob: -1.8114111423492432
    3. ' )' → logprob: -3.311411142349243
    4. '#' → logprob: -4.186411380767822
    5. ' pour' → logprob: -4.436411380767822
    6. ' for' → logprob: -4.561411380767822
    7. ' ' → logprob: -5.186411380767822
    8. 'pour' → logprob: -5.186411380767822
    9. 'for' → logprob: -5.436411380767822
    10. 'i' → logprob: -5.561411380767822

Token 184: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009006052277982235
    2. 'i' → logprob: -6.009006023406982
    3. '#' → logprob: -6.134006023406982
    4. ' )' → logprob: -6.509006023406982
    5. '
' → logprob: -6.884006023406982
    6. ',' → logprob: -7.009006023406982
    7. '<|end|>' → logprob: -8.00900650024414
    8. ')
' → logprob: -8.50900650024414
    9. ' ' → logprob: -9.25900650024414
    10. ')i' → logprob: -9.63400650024414

Token 185: ' c' (ID: 274)
  Prédit: ' mais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.7863802313804626
    2. ' i' → logprob: -1.4113802909851074
    3. ' donc' → logprob: -2.7863802909851074
    4. ' but' → logprob: -2.7863802909851074
    5. ' )' → logprob: -3.1613802909851074
    6. ' ' → logprob: -3.2863802909851074
    7. 'i' → logprob: -3.4113802909851074
    8. ')' → logprob: -4.161380290985107
    9. '#' → logprob: -4.661380290985107
    10. ' a' → logprob: -4.661380290985107

Token 186: ''était' (ID: 40609)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0834887027740479
    2. '#' → logprob: -1.2084887027740479
    3. ''' → logprob: -1.9584887027740479
    4. 'a' → logprob: -2.958488702774048
    5. 'e' → logprob: -3.208488702774048
    6. ')' → logprob: -3.583488702774048
    7. ''a' → logprob: -4.208488464355469
    8. '')' → logprob: -4.208488464355469
    9. ''est' → logprob: -4.208488464355469
    10. ''#' → logprob: -4.458488464355469

Token 187: ' probablement' (ID: 87740)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -1.5078686475753784
    2. '#' → logprob: -2.007868766784668
    3. ' une' → logprob: -2.007868766784668
    4. ' un' → logprob: -2.507868766784668
    5. ' probablement' → logprob: -2.757868766784668
    6. ' juste' → logprob: -3.007868766784668
    7. ' inutile' → logprob: -3.007868766784668
    8. ' peut' → logprob: -3.132868766784668
    9. 'une' → logprob: -3.257868766784668
    10. 'pour' → logprob: -3.507868766784668

Token 188: ' pour' (ID: 1930)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.1165690422058105
    2. 'pour' → logprob: -1.2415690422058105
    3. 'une' → logprob: -2.4915690422058105
    4. ' un' → logprob: -2.4915690422058105
    5. ' pour' → logprob: -2.7415690422058105
    6. 'un' → logprob: -2.9915690422058105
    7. 'pré' → logprob: -4.1165690422058105
    8. 'inut' → logprob: -4.9915690422058105
    9. ' supprim' → logprob: -4.9915690422058105
    10. ' prévue' → logprob: -5.1165690422058105

Token 189: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.0323431491851807
    2. 'l' → logprob: -2.0323431491851807
    3. 'comp' → logprob: -2.0323431491851807
    4. '_' → logprob: -2.1573431491851807
    5. 'un' → logprob: -2.4073431491851807
    6. ' une' → logprob: -3.7823431491851807
    7. 'la' → logprob: -3.7823431491851807
    8. 'le' → logprob: -3.9073431491851807
    9. ' un' → logprob: -3.9073431491851807
    10. 'it' → logprob: -4.032342910766602

Token 190: ' ancienne' (ID: 123824)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.200277641415596
    2. ' boucle' → logprob: -2.57527756690979
    3. '#' → logprob: -3.82527756690979
    4. 'range' → logprob: -3.82527756690979
    5. 'for' → logprob: -3.95027756690979
    6. 'comp' → logprob: -4.450277805328369
    7. 'comment' → logprob: -4.575277805328369
    8. 'while' → logprob: -5.950277805328369
    9. 'loop' → logprob: -5.950277805328369
    10. 'b' → logprob: -6.075277805328369

Token 191: ' version' (ID: 3926)
  Prédit: ' boucle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boucle' → logprob: -0.3351632356643677
    2. ' ' → logprob: -1.4601632356643677
    3. ' loop' → logprob: -5.085163116455078
    4. ')' → logprob: -5.335163116455078
    5. ' )' → logprob: -5.460163116455078
    6. '#' → logprob: -5.585163116455078
    7. ' for' → logprob: -5.585163116455078
    8. ' #' → logprob: -5.710163116455078
    9. ' version' → logprob: -5.710163116455078
    10. ' ligne' → logprob: -5.835163116455078

Token 192: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01481018029153347
    2. ' )' → logprob: -4.514810085296631
    3. 'i' → logprob: -6.389810085296631
    4. ',' → logprob: -7.389810085296631
    5. ' ' → logprob: -7.639810085296631
    6. 'a' → logprob: -8.139810562133789
    7. '#' → logprob: -8.514810562133789
    8. ')i' → logprob: -9.389810562133789
    9. ')
' → logprob: -10.014810562133789
    10. '   ' → logprob: -10.014810562133789

Token 193: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.004566838499158621
    2. ' code' → logprob: -6.004566669464111
    3. 'cod' → logprob: -6.629566669464111
    4. '#' → logprob: -7.879566669464111
    5. 'for' → logprob: -8.75456714630127
    6. 'c' → logprob: -9.75456714630127
    7. 'programme' → logprob: -10.00456714630127
    8. 'コード' → logprob: -10.12956714630127
    9. 'script' → logprob: -11.25456714630127
    10. '```' → logprob: -11.62956714630127

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033685388043522835
    2. '#' → logprob: -6.003368377685547
    3. 'i' → logprob: -7.628368377685547
    4. ' )' → logprob: -8.753368377685547
    5. ')
' → logprob: -9.503368377685547
    6. ')i' → logprob: -10.003368377685547
    7. 'a' → logprob: -10.003368377685547
    8. ')#' → logprob: -10.503368377685547
    9. '
' → logprob: -10.753368377685547
    10. ',' → logprob: -11.378368377685547

Token 195: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.453737710718997e-05
    2. ' i' → logprob: -11.250044822692871
    3. '```' → logprob: -11.375044822692871
    4. '
' → logprob: -11.500044822692871
    5. '0' → logprob: -13.000044822692871
    6. 'a' → logprob: -13.375044822692871
    7. '#' → logprob: -13.625044822692871
    8. '\' → logprob: -13.625044822692871
    9. '`' → logprob: -14.250044822692871
    10. 'for' → logprob: -14.375044822692871

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43354716897010803
    2. ' =' → logprob: -1.0585471391677856
    3. '+' → logprob: -6.183547019958496
    4. ' +=' → logprob: -6.308547019958496
    5. '+=' → logprob: -7.058547019958496
    6. ' ' → logprob: -9.933547019958496
    7. ')' → logprob: -11.308547019958496
    8. ',' → logprob: -11.933547019958496
    9. ' +' → logprob: -12.058547019958496
    10. '.' → logprob: -12.058547019958496

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014163628220558167
    2. ' ' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.389163970947266
    4. '1' → logprob: -17.014163970947266
    5. ' 
' → logprob: -19.389163970947266
    6. '۰' → logprob: -19.514163970947266
    7. '０' → logprob: -20.076663970947266
    8. ' ' → logprob: -20.701663970947266
    9. '‌' → logprob: -20.889163970947266
    10. '`' → logprob: -21.201663970947266

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '０' → logprob: -19.875
    4. '۰' → logprob: -20.375
    5. '1' → logprob: -20.875
    6. '00' → logprob: -21.375
    7. '=' → logprob: -21.625
    8. 'a' → logprob: -22.375
    9. '```' → logprob: -22.375
    10. 'int' → logprob: -22.5

Token 199: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7589898109436035
    2. '
' → logprob: -1.1339898109436035
    3. '<|end|>' → logprob: -1.6339898109436035
    4. '\n' → logprob: -5.3839898109436035
    5. 'for' → logprob: -5.6339898109436035
    6. 'i' → logprob: -6.3839898109436035
    7. ' ' → logprob: -6.7589898109436035
    8. 'while' → logprob: -7.8839898109436035
    9. '' → logprob: -7.8839898109436035
    10. '```' → logprob: -8.008989334106445

Token 200: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1731167882680893
    2. '
' → logprob: -2.923116683959961
    3. 'for' → logprob: -3.298116683959961
    4. 'i' → logprob: -4.298116683959961
    5. '<|end|>' → logprob: -4.423116683959961
    6. 'w' → logprob: -4.548116683959961
    7. 'while' → logprob: -4.548116683959961
    8. '' → logprob: -4.923116683959961
    9. 'n' → logprob: -6.048116683959961
    10. ' ' → logprob: -6.798116683959961

Token 201: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.052814245223999
    2. '#' → logprob: -1.427814245223999
    3. 'max' → logprob: -1.427814245223999
    4. 's' → logprob: -2.927814245223999
    5. 'result' → logprob: -3.677814245223999
    6. 'r' → logprob: -4.427814483642578
    7. 'f' → logprob: -4.802814483642578
    8. 'b' → logprob: -4.802814483642578
    9. 'total' → logprob: -4.802814483642578
    10. 'sum' → logprob: -4.802814483642578

Token 202: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.3084868788719177
    2. 'izer' → logprob: -1.8084869384765625
    3. 'ize' → logprob: -2.6834869384765625
    4. 'er' → logprob: -3.9334869384765625
    5. '#' → logprob: -5.0584869384765625
    6. '=' → logprob: -6.3084869384765625
    7. 'i' → logprob: -6.5584869384765625
    8. 'is' → logprob: -6.9334869384765625
    9. 'for' → logprob: -6.9334869384765625
    10. 'iz' → logprob: -7.5584869384765625

Token 203: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.24708829820156097
    2. 'ans' → logprob: -2.2470881938934326
    3. 'dp' → logprob: -2.9970881938934326
    4. 'res' → logprob: -4.122088432312012
    5. ' j' → logprob: -4.372088432312012
    6. ' ans' → logprob: -4.872088432312012
    7. 'max' → logprob: -5.122088432312012
    8. 'b' → logprob: -5.622088432312012
    9. 'answer' → logprob: -5.747088432312012
    10. 'result' → logprob: -5.872088432312012

Token 204: ' variable' (ID: 11076)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04146077111363411
    2. 'result' → logprob: -4.791460990905762
    3. 'max' → logprob: -5.166460990905762
    4. 's' → logprob: -5.166460990905762
    5. 'res' → logprob: -5.416460990905762
    6. 'ans' → logprob: -5.416460990905762
    7. 'sum' → logprob: -5.541460990905762
    8. 'dp' → logprob: -5.666460990905762
    9. 'b' → logprob: -5.916460990905762
    10. 'total' → logprob: -6.916460990905762

Token 205: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08972307294607162
    2. 'ans' → logprob: -2.9647231101989746
    3. ' j' → logprob: -4.839723110198975
    4. 'sum' → logprob: -5.339723110198975
    5. 'res' → logprob: -5.464723110198975
    6. 'max' → logprob: -5.714723110198975
    7. ' ans' → logprob: -5.714723110198975
    8. 's' → logprob: -5.964723110198975
    9. 'dp' → logprob: -5.964723110198975
    10. 'result' → logprob: -6.714723110198975

Token 206: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740865230560303
    2. ' =' → logprob: -0.9740865230560303
    3. ' ' → logprob: -12.09908676147461
    4. '0' → logprob: -13.47408676147461
    5. '<|end|>' → logprob: -14.34908676147461
    6. ',' → logprob: -14.59908676147461
    7. 's' → logprob: -15.09908676147461
    8. '=
' → logprob: -15.84908676147461
    9. ' =
' → logprob: -16.34908676147461
    10. 'a' → logprob: -16.47408676147461

Token 207: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067589483223855495
    2. ' ' → logprob: -5.006759166717529
    3. '1' → logprob: -10.131758689880371
    4. 'W' → logprob: -13.381758689880371
    5. ' W' → logprob: -14.631758689880371
    6. '-' → logprob: -15.194258689880371
    7. 'H' → logprob: -15.319258689880371
    8. '10' → logprob: -15.756758689880371
    9. '4' → logprob: -15.944258689880371
    10. ' -' → logprob: -16.319259643554688

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002458430244587362
    2. '1' → logprob: -8.875246047973633
    3. ' ' → logprob: -9.500246047973633
    4. 'W' → logprob: -10.875246047973633
    5. '-' → logprob: -12.250246047973633
    6. 'H' → logprob: -13.125246047973633
    7. '2' → logprob: -14.187746047973633
    8. 'len' → logprob: -14.250246047973633
    9. '10' → logprob: -14.687746047973633
    10. '4' → logprob: -14.687746047973633

Token 209: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.15307313203811646
    2. '<|end|>' → logprob: -2.0280730724334717
    3. '
' → logprob: -5.028073310852051
    4. ' j' → logprob: -6.403073310852051
    5. '0' → logprob: -7.153073310852051
    6. ' ' → logprob: -8.15307331085205
    7. 'i' → logprob: -8.52807331085205
    8. ')' → logprob: -8.52807331085205
    9. '=' → logprob: -8.65307331085205
    10. '<|end|>' → logprob: -9.02807331085205

Token 210: 'égal' (ID: 67940)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028732506558299065
    2. ' )' → logprob: -3.6537325382232666
    3. '0' → logprob: -6.1537322998046875
    4. '#' → logprob: -9.028732299804688
    5. ' ' → logprob: -9.153732299804688
    6. 'i' → logprob: -11.028732299804688
    7. ' ' → logprob: -11.403732299804688
    8. ')#' → logprob: -11.528732299804688
    9. '<|end|>' → logprob: -11.653732299804688
    10. 'non' → logprob: -12.403732299804688

Token 211: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.25790074467658997
    2. ' à' → logprob: -1.7579007148742676
    3. 'e' → logprob: -4.257900714874268
    4. '=' → logprob: -4.632900714874268
    5. '0' → logprob: -4.882900714874268
    6. 'à' → logprob: -4.882900714874268
    7. ')' → logprob: -5.382900714874268
    8. '   ' → logprob: -6.382900714874268
    9. '#' → logprob: -6.382900714874268
    10. ' ' → logprob: -6.757900714874268

Token 212: ' non' (ID: 2893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4343699514865875
    2. '0' → logprob: -1.6843699216842651
    3. '#' → logprob: -1.8093699216842651
    4. ' ' → logprob: -6.934370040893555
    5. ' )' → logprob: -7.684370040893555
    6. ' non' → logprob: -7.934370040893555
    7. ' #' → logprob: -8.684370040893555
    8. '
' → logprob: -8.809370040893555
    9. 'non' → logprob: -8.934370040893555
    10. ',' → logprob: -9.309370040893555

Token 213: ' utilisée' (ID: 106548)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.046881914138793945
    2. ' utilisée' → logprob: -3.296881914138794
    3. 'used' → logprob: -5.546881675720215
    4. ' utilis' → logprob: -6.046881675720215
    5. ' utilisé' → logprob: -6.671881675720215
    6. ' used' → logprob: -8.046881675720215
    7. ' utilisées' → logprob: -8.046881675720215
    8. ' utilisés' → logprob: -8.671881675720215
    9. '#' → logprob: -9.171881675720215
    10. ' utilizada' → logprob: -9.296881675720215

Token 214: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030399193987250328
    2. ' )' → logprob: -3.5303990840911865
    3. ',' → logprob: -7.530399322509766
    4. '#' → logprob: -10.405399322509766
    5. ' ' → logprob: -10.655399322509766
    6. ')#' → logprob: -11.405399322509766
    7. ')
' → logprob: -12.030399322509766
    8. '.' → logprob: -12.155399322509766
    9. ' ,' → logprob: -12.155399322509766
    10. ' ' → logprob: -12.280399322509766

Token 215: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.248469718324486e-05
    2. '0' → logprob: -10.750022888183594
    3. ' j' → logprob: -13.875022888183594
    4. '```' → logprob: -17.250022888183594
    5. ',' → logprob: -18.875022888183594
    6. ' ' → logprob: -19.000022888183594
    7. '_j' → logprob: -19.375022888183594
    8. '	j' → logprob: -19.625022888183594
    9. '1' → logprob: -19.750022888183594
    10. 'i' → logprob: -19.875022888183594

Token 216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889959216117859
    2. ' =' → logprob: -2.578899621963501
    3. ')' → logprob: -12.578899383544922
    4. ' =
' → logprob: -12.953899383544922
    5. '=
' → logprob: -13.203899383544922
    6. ' ' → logprob: -13.953899383544922
    7. '=

' → logprob: -14.203899383544922
    8. '0' → logprob: -15.578899383544922
    9. ' ' → logprob: -15.703899383544922
    10. ' +=' → logprob: -15.828899383544922

Token 217: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. ' ' → logprob: -18.879077911376953
    4. ' ' → logprob: -20.629077911376953
    5. '۰' → logprob: -20.629077911376953
    6. '1' → logprob: -20.754077911376953
    7. ' 
' → logprob: -20.879077911376953
    8. '00' → logprob: -21.566577911376953
    9. '=' → logprob: -22.191577911376953
    10. '０' → logprob: -22.316577911376953

Token 218: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '=' → logprob: -22.375
    4. '۰' → logprob: -22.5
    5. '1' → logprob: -22.75
    6. '00' → logprob: -22.875
    7. '```' → logprob: -23.0
    8. ' ' → logprob: -23.25
    9. '０' → logprob: -23.625
    10. '2' → logprob: -24.3125

Token 219: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1289961189031601
    2. 'for' → logprob: -2.7539961338043213
    3. '<|end|>' → logprob: -3.3789961338043213
    4. 'i' → logprob: -5.128995895385742
    5. 'max' → logprob: -5.253995895385742
    6. 'sum' → logprob: -5.628995895385742
    7. 'n' → logprob: -6.128995895385742
    8. 's' → logprob: -7.003995895385742
    9. 'x' → logprob: -7.253995895385742
    10. '```' → logprob: -8.003995895385742

Token 221: ' Initial' (ID: 9209)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1726653575897217
    2. '#' → logprob: -1.2976653575897217
    3. 'for' → logprob: -1.2976653575897217
    4. 'result' → logprob: -2.9226653575897217
    5. 's' → logprob: -3.5476653575897217
    6. 'sum' → logprob: -3.9226653575897217
    7. 'total' → logprob: -4.047665596008301
    8. 'min' → logprob: -5.172665596008301
    9. 'count' → logprob: -5.172665596008301
    10. 'res' → logprob: -5.422665596008301

Token 222: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0003987336531281471
    2. 'er' → logprob: -8.750398635864258
    3. '#' → logprob: -8.875398635864258
    4. 'ser' → logprob: -9.625398635864258
    5. 'is' → logprob: -10.750398635864258
    6. 'izer' → logprob: -11.875398635864258
    7. 'ar' → logprob: -14.125398635864258
    8. 'al' → logprob: -14.125398635864258
    9. 'user' → logprob: -14.500398635864258
    10. '```' → logprob: -14.625398635864258

Token 223: ' un' (ID: 537)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9356770515441895
    2. 'ans' → logprob: -1.3106770515441895
    3. 'count' → logprob: -1.9356770515441895
    4. 'res' → logprob: -3.3106770515441895
    5. 'sum' → logprob: -3.3106770515441895
    6. 'result' → logprob: -3.5606770515441895
    7. 's' → logprob: -3.8106770515441895
    8. 'c' → logprob: -4.4356770515441895
    9. 'total' → logprob: -4.8106770515441895
    10. 'k' → logprob: -4.9356770515441895

Token 224: ' compteur' (ID: 163344)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.384326696395874
    2. 'max' → logprob: -1.509326696395874
    3. 's' → logprob: -1.634326696395874
    4. 'result' → logprob: -2.384326696395874
    5. 'total' → logprob: -2.884326696395874
    6. 'c' → logprob: -3.259326696395874
    7. 'counter' → logprob: -3.509326696395874
    8. 'd' → logprob: -3.884326696395874
    9. 'comp' → logprob: -4.259326934814453
    10. 'flag' → logprob: -4.509326934814453

Token 225: ' '' (ID: 461)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.09258466213941574
    2. 'cnt' → logprob: -2.9675846099853516
    3. 'counter' → logprob: -3.9675846099853516
    4. '=' → logprob: -4.967584609985352
    5. ' =' → logprob: -5.092584609985352
    6. 'c' → logprob: -6.342584609985352
    7. ' count' → logprob: -6.967584609985352
    8. 'k' → logprob: -7.092584609985352
    9. '
' → logprob: -7.717584609985352
    10. 'comp' → logprob: -8.467584609985352

Token 226: 'cnt' (ID: 33160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.05873991549015045
    2. 'cnt' → logprob: -3.5587399005889893
    3. 'comp' → logprob: -4.308740139007568
    4. 'c' → logprob: -5.558740139007568
    5. 'counter' → logprob: -5.683740139007568
    6. 'max' → logprob: -5.933740139007568
    7. 'res' → logprob: -6.683740139007568
    8. 'total' → logprob: -7.308740139007568
    9. 'ans' → logprob: -7.433740139007568
    10. 's' → logprob: -7.683740139007568

Token 227: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17380602657794952
    2. ''' → logprob: -2.0488059520721436
    3. '=' → logprob: -3.6738059520721436
    4. '_' → logprob: -6.048806190490723
    5. ' '' → logprob: -6.923806190490723
    6. ' ='' → logprob: -7.048806190490723
    7. ' ' → logprob: -8.173806190490723
    8. '='' → logprob: -8.423806190490723
    9. ')' → logprob: -8.673806190490723
    10. ',' → logprob: -9.923806190490723

Token 228: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519964575767517
    2. ' =' → logprob: -1.5019965171813965
    3. 'cnt' → logprob: -9.876996040344238
    4. ' ' → logprob: -11.376996040344238
    5. ',' → logprob: -13.251996040344238
    6. ' cnt' → logprob: -15.001996040344238
    7. 's' → logprob: -15.126996040344238
    8. '_' → logprob: -15.376996040344238
    9. '=
' → logprob: -15.501996040344238
    10. ' ' → logprob: -15.501996040344238

Token 229: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '1' → logprob: -16.250431060791016
    4. ' ' → logprob: -17.625431060791016
    5. '=' → logprob: -18.500431060791016
    6. '  ' → logprob: -19.687931060791016
    7. ' =' → logprob: -19.812931060791016
    8. '   ' → logprob: -19.875431060791016
    9. '```' → logprob: -19.875431060791016
    10. '
' → logprob: -20.062931060791016

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -11.875007629394531
    3. '1' → logprob: -15.125007629394531
    4. '=' → logprob: -16.87500762939453
    5. '```' → logprob: -17.81250762939453
    6. '-' → logprob: -17.87500762939453
    7. 'int' → logprob: -18.06250762939453
    8. '100' → logprob: -18.37500762939453
    9. '10' → logprob: -18.62500762939453
    10. 'len' → logprob: -18.62500762939453

Token 231: ' ;' (ID: 4605)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0014032063772901893
    2. '
' → logprob: -7.251403331756592
    3. 'c' → logprob: -7.501403331756592
    4. ' cnt' → logprob: -10.376402854919434
    5. '#' → logprob: -10.876402854919434
    6. '=' → logprob: -11.001402854919434
    7. '  
' → logprob: -11.501402854919434
    8. '' → logprob: -11.501402854919434
    9. '	cnt' → logprob: -11.626402854919434
    10. ' 
' → logprob: -11.876402854919434

Token 232: ' il' (ID: 1793)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.005755049642175436
    2. ' cnt' → logprob: -5.7557549476623535
    3. '
' → logprob: -6.8807549476623535
    4. '#' → logprob: -7.7557549476623535
    5. ' ' → logprob: -8.255755424499512
    6. 'count' → logprob: -8.505755424499512
    7. 'c' → logprob: -8.755755424499512
    8. ' ' → logprob: -9.130755424499512
    9. ' 
' → logprob: -9.630755424499512
    10. '<|end|>' → logprob: -10.005755424499512

Token 233: ' comp' (ID: 1050)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6951572299003601
    2. 's' → logprob: -1.8201572895050049
    3. '#' → logprob: -2.570157289505005
    4. ' =' → logprob: -2.945157289505005
    5. ' s' → logprob: -4.070157051086426
    6. 'n' → logprob: -4.070157051086426
    7. 'cnt' → logprob: -4.195157051086426
    8. ' compte' → logprob: -4.195157051086426
    9. 'comp' → logprob: -4.445157051086426
    10. ')' → logprob: -4.445157051086426

Token 234: 'tera' (ID: 24940)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.047320205718278885
    2. 't' → logprob: -3.2973201274871826
    3. 'le' → logprob: -5.422320365905762
    4. 'ter' → logprob: -5.672320365905762
    5. '#' → logprob: -7.797320365905762
    6. 'tle' → logprob: -8.922320365905762
    7. '=' → logprob: -9.297320365905762
    8. 'tera' → logprob: -9.422320365905762
    9. 'lete' → logprob: -9.422320365905762
    10. 'teur' → logprob: -9.797320365905762

Token 235: ' le' (ID: 505)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.47845399379730225
    2. 'le' → logprob: -1.6034539937973022
    3. ' les' → logprob: -2.103454113006592
    4. ' le' → logprob: -3.103454113006592
    5. '<|end|>' → logprob: -5.103454113006592
    6. 'l' → logprob: -5.978454113006592
    7. 'nombre' → logprob: -7.353454113006592
    8. ',' → logprob: -7.353454113006592
    9. ' ' → logprob: -7.853454113006592
    10. '#' → logprob: -8.353453636169434

Token 236: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.03569072112441063
    2. ' nombre' → logprob: -3.6606907844543457
    3. 'n' → logprob: -6.035690784454346
    4. '#' → logprob: -6.410690784454346
    5. 's' → logprob: -6.535690784454346
    6. 'number' → logprob: -7.160690784454346
    7. '0' → logprob: -7.160690784454346
    8. 'sum' → logprob: -8.035690307617188
    9. ' nombres' → logprob: -8.410690307617188
    10. '=' → logprob: -8.410690307617188

Token 237: ' total' (ID: 3609)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8356428146362305
    2. 'des' → logprob: -1.7106428146362305
    3. 'de' → logprob: -1.7106428146362305
    4. ' des' → logprob: -2.0856428146362305
    5. 'd' → logprob: -3.4606428146362305
    6. ' d' → logprob: -3.4606428146362305
    7. '#' → logprob: -4.9606428146362305
    8. ' ' → logprob: -5.7106428146362305
    9. ' of' → logprob: -6.0856428146362305
    10. '=' → logprob: -6.7106428146362305

Token 238: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6899619102478027
    2. ' de' → logprob: -1.6899619102478027
    3. '<|end|>' → logprob: -1.6899619102478027
    4. '_' → logprob: -2.3149619102478027
    5. '=' → logprob: -2.5649619102478027
    6. 'des' → logprob: -3.1899619102478027
    7. 'de' → logprob: -3.1899619102478027
    8. 'd' → logprob: -3.4399619102478027
    9. ')' → logprob: -3.5649619102478027
    10. ' =' → logprob: -3.6899619102478027

Token 239: ' mouvements' (ID: 119420)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25156208872795105
    2. 'cases' → logprob: -1.8765621185302734
    3. '0' → logprob: -3.1265621185302734
    4. ' ' → logprob: -5.376562118530273
    5. ' cellules' → logprob: -5.501562118530273
    6. 'élé' → logprob: -5.626562118530273
    7. 'pairs' → logprob: -6.251562118530273
    8. 'cells' → logprob: -7.001562118530273
    9. 'c' → logprob: -7.126562118530273
    10. '```' → logprob: -7.126562118530273

Token 240: ' effectu' (ID: 100880)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00793415866792202
    2. '=' → logprob: -5.882934093475342
    3. '
' → logprob: -6.882934093475342
    4. '#' → logprob: -7.507934093475342
    5. 'c' → logprob: -7.632934093475342
    6. ',' → logprob: -7.632934093475342
    7. '<|end|>' → logprob: -7.757934093475342
    8. ' ' → logprob: -7.882934093475342
    9. '  
' → logprob: -8.2579345703125
    10. '\n' → logprob: -8.2579345703125

Token 241: 'és' (ID: 1756)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7551538348197937
    2. ')' → logprob: -1.6301538944244385
    3. 'é' → logprob: -1.8801538944244385
    4. '=' → logprob: -3.0051538944244385
    5. 'és' → logprob: -3.0051538944244385
    6. ' =' → logprob: -3.6301538944244385
    7. ' ' → logprob: -4.380153656005859
    8. 's' → logprob: -4.505153656005859
    9. '   ' → logprob: -4.630153656005859
    10. ' )' → logprob: -5.130153656005859

Token 242: '
' (ID: 198)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00799837987869978
    2. '
' → logprob: -4.882998466491699
    3. 'c' → logprob: -8.7579984664917
    4. '' → logprob: -9.7579984664917
    5. '
' → logprob: -10.5079984664917
    6. '  
' → logprob: -10.6329984664917
    7. '#' → logprob: -10.7579984664917
    8. '\n' → logprob: -11.0079984664917
    9. ' cnt' → logprob: -11.2579984664917
    10. ',' → logprob: -11.2579984664917

Token 243: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.3544423381972592e-05
    2. 'c' → logprob: -11.75001335144043
    3. 'cn' → logprob: -12.62501335144043
    4. 'count' → logprob: -13.87501335144043
    5. ' cnt' → logprob: -14.00001335144043
    6. '
' → logprob: -15.62501335144043
    7. '#' → logprob: -16.37501335144043
    8. 'counter' → logprob: -16.50001335144043
    9. '	cnt' → logprob: -16.50001335144043
    10. 'ct' → logprob: -17.00001335144043

Token 244: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759419798851013
    2. ' =' → logprob: -0.8259419798851013
    3. ' ' → logprob: -13.700942039489746
    4. ')' → logprob: -13.950942039489746
    5. ' =
' → logprob: -15.950942039489746
    6. ',' → logprob: -16.45094108581543
    7. ' ' → logprob: -16.57594108581543
    8. ' +=' → logprob: -16.82594108581543
    9. '＝' → logprob: -17.32594108581543
    10. ' =)' → logprob: -17.32594108581543

Token 245: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. ' ' → logprob: -19.376928329467773
    4. '=' → logprob: -20.876928329467773
    5. '1' → logprob: -21.376928329467773
    6. '۰' → logprob: -21.501928329467773
    7. '00' → logprob: -21.751928329467773
    8. '000' → logprob: -22.689428329467773
    9. '```' → logprob: -22.814428329467773
    10. ' =' → logprob: -22.939428329467773

Token 246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '۰' → logprob: -20.625
    4. '000' → logprob: -21.25
    5. '０' → logprob: -21.9375
    6. '00' → logprob: -22.0625
    7. '```' → logprob: -22.0625
    8. 'int' → logprob: -22.5
    9. '   ' → logprob: -22.875
    10. '٠' → logprob: -22.875

Token 247: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5689143538475037
    2. 'for' → logprob: -1.6939144134521484
    3. '#' → logprob: -2.3189144134521484
    4. 'while' → logprob: -2.6939144134521484
    5. '<|end|>' → logprob: -3.1939144134521484
    6. '\n' → logprob: -4.193914413452148
    7. 'i' → logprob: -4.568914413452148
    8. 'n' → logprob: -4.943914413452148
    9. '\' → logprob: -6.318914413452148
    10. ',' → logprob: -6.443914413452148

Token 248: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.0120973587036133
    2. 'i' → logprob: -1.3870973587036133
    3. 'for' → logprob: -1.5120973587036133
    4. '#' → logprob: -2.6370973587036133
    5. 'n' → logprob: -3.3870973587036133
    6. '
' → logprob: -3.8870973587036133
    7. ' while' → logprob: -4.762097358703613
    8. ',' → logprob: -5.137097358703613
    9. '\n' → logprob: -5.637097358703613
    10. 'x' → logprob: -5.762097358703613

Token 249: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006018148735165596
    2. 'while' → logprob: -5.506018161773682
    3. '#' → logprob: -7.006018161773682
    4. 'i' → logprob: -7.006018161773682
    5. 'visited' → logprob: -10.756017684936523
    6. 'def' → logprob: -10.881017684936523
    7. 'x' → logprob: -11.006017684936523
    8. 'current' → logprob: -11.506017684936523
    9. ' for' → logprob: -11.756017684936523
    10. 'j' → logprob: -11.881017684936523

Token 250: 'iser' (ID: 7466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4714058637619019
    2. 'izer' → logprob: -1.4714058637619019
    3. 'iser' → logprob: -1.5964058637619019
    4. 'er' → logprob: -1.7214058637619019
    5. 'ize' → logprob: -2.3464059829711914
    6. 'i' → logprob: -3.3464059829711914
    7. '#' → logprob: -4.221405982971191
    8. 'for' → logprob: -6.596405982971191
    9. '```' → logprob: -6.721405982971191
    10. 'a' → logprob: -6.846405982971191

Token 251: ' une' (ID: 2463)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.572720468044281
    2. 'x' → logprob: -1.5727205276489258
    3. 'current' → logprob: -3.197720527648926
    4. 'found' → logprob: -3.322720527648926
    5. 'cur' → logprob: -3.447720527648926
    6. 'visited' → logprob: -3.447720527648926
    7. 'flag' → logprob: -4.072720527648926
    8. 'i' → logprob: -4.447720527648926
    9. 'k' → logprob: -5.197720527648926
    10. 'move' → logprob: -5.322720527648926

Token 252: ' liste' (ID: 31719)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.6815560460090637
    2. 'variable' → logprob: -1.681555986404419
    3. 'copy' → logprob: -2.431555986404419
    4. 'stack' → logprob: -2.806555986404419
    5. 'visited' → logprob: -3.681555986404419
    6. 'temp' → logprob: -4.181556224822998
    7. 'queue' → logprob: -4.181556224822998
    8. 'nou' → logprob: -4.431556224822998
    9. 'position' → logprob: -4.806556224822998
    10. 'tmp' → logprob: -5.056556224822998

Token 253: ' vide' (ID: 21835)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.4116559028625488
    2. 'dp' → logprob: -1.4116559028625488
    3. 'positions' → logprob: -2.911655902862549
    4. 'd' → logprob: -3.036655902862549
    5. 'moves' → logprob: -3.036655902862549
    6. 'pos' → logprob: -3.286655902862549
    7. 'move' → logprob: -3.411655902862549
    8. ' =' → logprob: -3.661655902862549
    9. 'res' → logprob: -3.661655902862549
    10. 's' → logprob: -4.036655902862549

Token 254: ' '' (ID: 461)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -1.5552021265029907
    2. 'visited' → logprob: -1.8052021265029907
    3. 'pos' → logprob: -1.9302021265029907
    4. 'stack' → logprob: -2.305202007293701
    5. 'q' → logprob: -2.555202007293701
    6. ',' → logprob: -3.305202007293701
    7. 'positions' → logprob: -3.555202007293701
    8. 'b' → logprob: -3.680202007293701
    9. 'd' → logprob: -3.930202007293701
    10. 'queue' → logprob: -4.055202007293701

Token 255: 'ans' (ID: 616)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7064788341522217
    2. 'pos' → logprob: -2.3314788341522217
    3. 'stack' → logprob: -2.4564788341522217
    4. 'b' → logprob: -2.7064788341522217
    5. 'que' → logprob: -2.8314788341522217
    6. 'queue' → logprob: -3.0814788341522217
    7. 'dq' → logprob: -3.8314788341522217
    8. 'ans' → logprob: -4.081479072570801
    9. 'move' → logprob: -4.706479072570801
    10. 'positions' → logprob: -4.706479072570801

Token 256: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5784241557121277
    2. ' =' → logprob: -1.2034242153167725
    3. '=' → logprob: -2.3284242153167725
    4. ']'' → logprob: -3.8284242153167725
    5. '=[]' → logprob: -4.828423976898193
    6. ']' → logprob: -5.453423976898193
    7. '[]' → logprob: -6.078423976898193
    8. ')'' → logprob: -6.203423976898193
    9. '']' → logprob: -6.578423976898193
    10. 's' → logprob: -7.953423976898193

Token 257: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20470227301120758
    2. ' =' → logprob: -1.7047022581100464
    3. '=[]' → logprob: -6.329702377319336
    4. 'ans' → logprob: -6.704702377319336
    5. '[]' → logprob: -8.579702377319336
    6. ',' → logprob: -10.829702377319336
    7. '=[]
' → logprob: -11.079702377319336
    8. 'a' → logprob: -11.954702377319336
    9. '[' → logprob: -12.204702377319336
    10. ']' → logprob: -12.454702377319336

Token 258: ' enregistr' (ID: 76845)
  Prédit: 'stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stock' → logprob: -0.38210710883140564
    2. '[]' → logprob: -1.257107138633728
    3. ' stock' → logprob: -4.257107257843018
    4. 'collect' → logprob: -5.132107257843018
    5. 'store' → logprob: -5.132107257843018
    6. '<|end|>' → logprob: -7.007107257843018
    7. '_' → logprob: -7.132107257843018
    8. ' recop' → logprob: -7.382107257843018
    9. 'rec' → logprob: -7.507107257843018
    10. '...' → logprob: -7.507107257843018

Token 259: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0015278366627171636
    2. '[]' → logprob: -7.501527786254883
    3. 'e' → logprob: -8.126527786254883
    4. '=' → logprob: -8.501527786254883
    5. '_' → logprob: -8.626527786254883
    6. '[' → logprob: -9.501527786254883
    7. ' =' → logprob: -10.001527786254883
    8. '(' → logprob: -10.251527786254883
    9. 'es' → logprob: -10.376527786254883
    10. '=[]' → logprob: -10.751527786254883

Token 260: ' chaque' (ID: 21194)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2099163830280304
    2. '([]' → logprob: -2.459916353225708
    3. '()' → logprob: -2.584916353225708
    4. '(' → logprob: -3.709916353225708
    5. '[' → logprob: -6.084916591644287
    6. ' []' → logprob: -7.459916591644287
    7. ')' → logprob: -8.334916114807129
    8. '([' → logprob: -8.584916114807129
    9. '("' → logprob: -9.334916114807129
    10. ']' → logprob: -9.584916114807129

Token 261: ' mouvement' (ID: 62236)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.8208562731742859
    2. '(ans' → logprob: -2.0708563327789307
    3. ' move' → logprob: -2.1958563327789307
    4. ' (' → logprob: -2.6958563327789307
    5. 'ans' → logprob: -2.8208563327789307
    6. '(' → logprob: -2.8208563327789307
    7. '[]' → logprob: -3.1958563327789307
    8. ' ans' → logprob: -4.070856094360352
    9. '()' → logprob: -4.820856094360352
    10. '(move' → logprob: -4.945856094360352

Token 262: ' effectué' (ID: 131221)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011358557268977165
    2. '[]' → logprob: -5.261358737945557
    3. ' ans' → logprob: -6.511358737945557
    4. '(ans' → logprob: -7.261358737945557
    5. '
' → logprob: -7.386358737945557
    6. '=' → logprob: -7.636358737945557
    7. ' =' → logprob: -7.636358737945557
    8. '```' → logprob: -7.886358737945557
    9. '[' → logprob: -8.511358261108398
    10. '=[]' → logprob: -8.636358261108398

Token 263: ' sous' (ID: 14487)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0671529471874237
    2. '
' → logprob: -2.942152976989746
    3. '(ans' → logprob: -6.067152976989746
    4. '[]' → logprob: -6.192152976989746
    5. '\n' → logprob: -6.442152976989746
    6. ' ans' → logprob: -6.567152976989746
    7. ',' → logprob: -7.067152976989746
    8. '.' → logprob: -7.317152976989746
    9. ')' → logprob: -7.692152976989746
    10. '#' → logprob: -7.942152976989746

Token 264: ' forme' (ID: 27450)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7423816323280334
    2. 'form' → logprob: -1.6173815727233887
    3. 'forme' → logprob: -1.7423815727233887
    4. ' forme' → logprob: -3.3673815727233887
    5. '(' → logprob: -3.4923815727233887
    6. '()' → logprob: -3.8673815727233887
    7. '[]' → logprob: -3.9923815727233887
    8. '[' → logprob: -4.117381572723389
    9. ' la' → logprob: -4.992381572723389
    10. '#' → logprob: -5.617381572723389

Token 265: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9719553589820862
    2. 'de' → logprob: -1.0969552993774414
    3. ' d' → logprob: -2.3469552993774414
    4. '[]' → logprob: -2.4719552993774414
    5. 'd' → logprob: -2.5969552993774414
    6. '[' → logprob: -3.5969552993774414
    7. '['' → logprob: -6.971955299377441
    8. '[:]' → logprob: -7.221955299377441
    9. ' []' → logprob: -7.221955299377441
    10. 'des' → logprob: -8.096955299377441

Token 266: ' liste' (ID: 31719)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.837323009967804
    2. 'tu' → logprob: -1.4623229503631592
    3. 'tuple' → logprob: -1.7123229503631592
    4. ' tuples' → logprob: -3.212322950363159
    5. '(t' → logprob: -3.462322950363159
    6. '[' → logprob: -3.962322950363159
    7. '[]' → logprob: -3.962322950363159
    8. '(a' → logprob: -5.212323188781738
    9. ' tuple' → logprob: -5.337323188781738
    10. '()' → logprob: -5.462323188781738

Token 267: ' [' (ID: 723)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.11849027127027512
    2. '[]' → logprob: -2.243490219116211
    3. '[]
' → logprob: -6.368490219116211
    4. ']' → logprob: -7.118490219116211
    5. '[' → logprob: -7.493490219116211
    6. '(ans' → logprob: -7.493490219116211
    7. '=' → logprob: -7.618490219116211
    8. '()' → logprob: -7.868490219116211
    9. '=[]' → logprob: -8.493490219116211
    10. ' ans' → logprob: -8.618490219116211

Token 268: 'h' (ID: 71)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008608425967395306
    2. 'x' → logprob: -5.133608341217041
    3. ' i' → logprob: -6.883608341217041
    4. ']' → logprob: -7.133608341217041
    5. '[i' → logprob: -8.3836088180542
    6. 'r' → logprob: -8.5086088180542
    7. 'y' → logprob: -9.6336088180542
    8. '0' → logprob: -10.0086088180542
    9. 'row' → logprob: -10.1336088180542
    10. 'ligne' → logprob: -10.1336088180542

Token 269: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016971994191408157
    2. ' ,' → logprob: -6.501697063446045
    3. ',i' → logprob: -9.626697540283203
    4. ',j' → logprob: -9.751697540283203
    5. '[' → logprob: -11.626697540283203
    6. ',h' → logprob: -11.876697540283203
    7. ',t' → logprob: -12.126697540283203
    8. ',y' → logprob: -12.501697540283203
    9. ',
' → logprob: -12.501697540283203
    10. ']' → logprob: -12.501697540283203

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006029533687978983
    2. ',h' → logprob: -8.625602722167969
    3. ' ,' → logprob: -9.125602722167969
    4. '1' → logprob: -9.125602722167969
    5. ',i' → logprob: -10.250602722167969
    6. ',
' → logprob: -10.375602722167969
    7. ',j' → logprob: -10.500602722167969
    8. '[' → logprob: -11.000602722167969
    9. ',m' → logprob: -11.750602722167969
    10. ',y' → logprob: -11.875602722167969

Token 271: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.000431861262768507
    2. ' w' → logprob: -8.500432014465332
    3. 'h' → logprob: -9.125432014465332
    4. 'i' → logprob: -9.375432014465332
    5. 'j' → logprob: -10.500432014465332
    6. 'v' → logprob: -13.375432014465332
    7. 'W' → logprob: -13.625432014465332
    8. 'l' → logprob: -13.625432014465332
    9. 'a' → logprob: -14.125432014465332
    10. 'k' → logprob: -14.500432014465332

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006772568449378014
    2. ',' → logprob: -5.006772518157959
    3. ' ,' → logprob: -11.256772994995117
    4. ']' → logprob: -11.381772994995117
    5. 'i' → logprob: -11.881772994995117
    6. '
' → logprob: -12.006772994995117
    7. '+' → logprob: -12.131772994995117
    8. ',
' → logprob: -12.631772994995117
    9. ' ' → logprob: -13.006772994995117
    10. '-' → logprob: -13.631772994995117

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020103710994590074
    2. ' ,' → logprob: -9.000201225280762
    3. ']' → logprob: -9.875201225280762
    4. ',
' → logprob: -11.250201225280762
    5. '1' → logprob: -12.000201225280762
    6. '+' → logprob: -13.875201225280762
    7. ',h' → logprob: -13.875201225280762
    8. ',

' → logprob: -14.125201225280762
    9. ',...' → logprob: -14.500201225280762
    10. '[' → logprob: -14.875201225280762

Token 274: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.12848298251628876
    2. 'w' → logprob: -2.1284830570220947
    3. ' h' → logprob: -6.753482818603516
    4. ' w' → logprob: -8.003482818603516
    5. 'd' → logprob: -10.878482818603516
    6. 'a' → logprob: -11.378482818603516
    7. 'v' → logprob: -11.628482818603516
    8. 'l' → logprob: -13.503482818603516
    9. 'j' → logprob: -13.628482818603516
    10. ']' → logprob: -13.753482818603516

Token 275: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005068036844022572
    2. ',' → logprob: -7.62550687789917
    3. 'a' → logprob: -12.125506401062012
    4. ']' → logprob: -12.375506401062012
    5. '+' → logprob: -12.375506401062012
    6. ' ' → logprob: -13.375506401062012
    7. 't' → logprob: -13.500506401062012
    8. ' ,' → logprob: -15.375506401062012
    9. '```' → logprob: -15.500506401062012
    10. ',
' → logprob: -15.500506401062012

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006218921043910086
    2. '1' → logprob: -8.000621795654297
    3. ' ,' → logprob: -8.375621795654297
    4. ']' → logprob: -10.250621795654297
    5. ',
' → logprob: -11.500621795654297
    6. ',h' → logprob: -12.375621795654297
    7. ',w' → logprob: -13.125621795654297
    8. '2' → logprob: -14.750621795654297
    9. 'a' → logprob: -15.125621795654297
    10. ',

' → logprob: -15.375621795654297

Token 277: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.004097396973520517
    2. ' w' → logprob: -5.5040974617004395
    3. 'v' → logprob: -12.129096984863281
    4. 'W' → logprob: -12.504096984863281
    5. 'l' → logprob: -13.129096984863281
    6. '1' → logprob: -13.254096984863281
    7. ' ' → logprob: -14.004096984863281
    8. 'c' → logprob: -14.379096984863281
    9. 'h' → logprob: -14.504096984863281
    10. ']' → logprob: -14.504096984863281

Token 278: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001584258396178484
    2. '2' → logprob: -6.501584053039551
    3. ',' → logprob: -10.12658405303955
    4. ']' → logprob: -10.12658405303955
    5. 'idth' → logprob: -13.75158405303955
    6. ' ' → logprob: -14.87658405303955
    7. 'ight' → logprob: -16.376585006713867
    8. '```' → logprob: -16.376585006713867
    9. '+' → logprob: -16.876585006713867
    10. '   ' → logprob: -17.251585006713867

Token 279: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003255719493608922
    2. ',' → logprob: -8.250325202941895
    3. ' ]' → logprob: -10.000325202941895
    4. ']
' → logprob: -11.500325202941895
    5. '']' → logprob: -12.625325202941895
    6. ')' → logprob: -14.250325202941895
    7. '[' → logprob: -14.375325202941895
    8. '[]' → logprob: -14.375325202941895
    9. ']
' → logprob: -14.375325202941895
    10. '],' → logprob: -14.500325202941895

Token 280: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.7432603272027336e-06
    2. '[]' → logprob: -13.375001907348633
    3. ' ans' → logprob: -16.000001907348633
    4. '	ans' → logprob: -18.125001907348633
    5. '(ans' → logprob: -18.125001907348633
    6. '[]
' → logprob: -18.125001907348633
    7. 'a' → logprob: -18.750001907348633
    8. '```' → logprob: -19.000001907348633
    9. '#' → logprob: -19.125001907348633
    10. '[' → logprob: -19.250001907348633

Token 281: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0620056614279747
    2. ' =' → logprob: -2.8120057582855225
    3. '=[]' → logprob: -10.187005996704102
    4. '＝' → logprob: -15.687005996704102
    5. '[]' → logprob: -16.6870059967041
    6. ',' → logprob: -16.8120059967041
    7. '=[]
' → logprob: -17.9370059967041
    8. ']' → logprob: -17.9370059967041
    9. '=[' → logprob: -18.0620059967041
    10. '.=' → logprob: -18.0620059967041

Token 282: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.248469718324486e-05
    2. ' []' → logprob: -10.750022888183594
    3. '[]
' → logprob: -14.625022888183594
    4. '[]}' → logprob: -15.375022888183594
    5. '[' → logprob: -15.500022888183594
    6. '[]>' → logprob: -17.375022888183594
    7. '[]

' → logprob: -17.625022888183594
    8. '[],' → logprob: -18.250022888183594
    9. '[]"' → logprob: -18.750022888183594
    10. '[])' → logprob: -18.875022888183594

Token 283: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00021891399228479713
    2. ' for' → logprob: -8.500219345092773
    3. '#' → logprob: -11.375219345092773
    4. '
' → logprob: -14.000219345092773
    5. 'i' → logprob: -14.000219345092773
    6. '<|end|>' → logprob: -14.000219345092773
    7. 'H' → logprob: -14.625219345092773
    8. '```' → logprob: -15.500219345092773
    9. 'f' → logprob: -15.875219345092773
    10. ',' → logprob: -16.000219345092773

Token 284: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.265633419388905e-05
    2. '#' → logprob: -9.750062942504883
    3. 'def' → logprob: -12.625062942504883
    4. ' for' → logprob: -14.750062942504883
    5. 'For' → logprob: -15.500062942504883
    6. 'while' → logprob: -15.750062942504883
    7. 'pour' → logprob: -16.625062942504883
    8. '```' → logprob: -17.000062942504883
    9. 'from' → logprob: -17.375062942504883
    10. 'fo' → logprob: -18.125062942504883

Token 285: 'cle' (ID: 3170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.667972207069397
    2. 'cle' → logprob: -1.292972207069397
    3. 'c' → logprob: -1.667972207069397
    4. 't' → logprob: -4.917972087860107
    5. 'cles' → logprob: -5.042972087860107
    6. '#' → logprob: -6.042972087860107
    7. 'g' → logprob: -6.167972087860107
    8. 'r' → logprob: -6.167972087860107
    9. 'cl' → logprob: -6.542972087860107
    10. 'clé' → logprob: -7.167972087860107

Token 286: ' externe' (ID: 83003)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20142942667007446
    2. ' for' → logprob: -1.7014293670654297
    3. 'i' → logprob: -12.70142936706543
    4. 's' → logprob: -12.70142936706543
    5. ' pour' → logprob: -13.45142936706543
    6. ':' → logprob: -13.57642936706543
    7. 'pour' → logprob: -13.57642936706543
    8. '
' → logprob: -13.95142936706543
    9. '_' → logprob: -14.07642936706543
    10. 'H' → logprob: -14.07642936706543

Token 287: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0059302207082509995
    2. ' for' → logprob: -5.130930423736572
    3. 'i' → logprob: -14.880929946899414
    4. ':' → logprob: -15.005929946899414
    5. 'pour' → logprob: -15.255929946899414
    6. '
' → logprob: -15.630929946899414
    7. 'range' → logprob: -16.005929946899414
    8. 'h' → logprob: -16.380929946899414
    9. '_' → logprob: -16.380929946899414
    10. 'fo' → logprob: -17.005929946899414

Token 288: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5672899484634399
    2. 'i' → logprob: -1.44228994846344
    3. 'h' → logprob: -1.69228994846344
    4. 'H' → logprob: -4.56728982925415
    5. 'r' → logprob: -6.94228982925415
    6. ' range' → logprob: -7.31728982925415
    7. '_' → logprob: -7.94228982925415
    8. '_h' → logprob: -10.817290306091309
    9. '_range' → logprob: -11.317290306091309
    10. 'a' → logprob: -11.442290306091309

Token 289: ' ligne' (ID: 19583)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11783844232559204
    2. 'h' → logprob: -2.2428383827209473
    3. 'range' → logprob: -5.867838382720947
    4. ' i' → logprob: -6.742838382720947
    5. ' range' → logprob: -7.867838382720947
    6. 'H' → logprob: -8.242838859558105
    7. 'row' → logprob: -8.492838859558105
    8. 'r' → logprob: -9.492838859558105
    9. ' h' → logprob: -9.867838859558105
    10. 'w' → logprob: -11.992838859558105

Token 290: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00045843268162570894
    2. ' for' → logprob: -7.875458240509033
    3. 'range' → logprob: -10.125458717346191
    4. 'h' → logprob: -10.500458717346191
    5. 'i' → logprob: -11.625458717346191
    6. 'r' → logprob: -14.875458717346191
    7. '```' → logprob: -15.125458717346191
    8. 'H' → logprob: -15.375458717346191
    9. 'in' → logprob: -15.750458717346191
    10. ',' → logprob: -15.750458717346191

Token 291: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03373225778341293
    2. ' range' → logprob: -3.5337321758270264
    3. 'a' → logprob: -5.5337324142456055
    4. ' a' → logprob: -11.283732414245605
    5. 'la' → logprob: -11.908732414245605
    6. ' la' → logprob: -13.783732414245605
    7. 'H' → logprob: -13.908732414245605
    8. '(range' → logprob: -14.658732414245605
    9. 'r' → logprob: -15.283732414245605
    10. 'rang' → logprob: -15.283732414245605

Token 292: ' grille' (ID: 99153)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01496520359069109
    2. 'a' → logprob: -4.264965057373047
    3. 'gr' → logprob: -8.014965057373047
    4. ' range' → logprob: -8.764965057373047
    5. 'for' → logprob: -8.889965057373047
    6. 'r' → logprob: -9.014965057373047
    7. 'H' → logprob: -11.014965057373047
    8. 'pl' → logprob: -11.139965057373047
    9. 'rang' → logprob: -11.389965057373047
    10. 'grid' → logprob: -12.264965057373047

Token 293: ';' (ID: 26)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9266199160483666e-05
    2. ' for' → logprob: -10.875019073486328
    3. 'i' → logprob: -16.500019073486328
    4. '
' → logprob: -16.500019073486328
    5. 'range' → logprob: -17.000019073486328
    6. 'h' → logprob: -17.375019073486328
    7. ':' → logprob: -17.500019073486328
    8. 'f' → logprob: -17.750019073486328
    9. ',' → logprob: -18.500019073486328
    10. 'fo' → logprob: -19.000019073486328

Token 294: ' h' (ID: 312)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.318681188422488e-05
    2. ' for' → logprob: -11.25001335144043
    3. 'h' → logprob: -16.37501335144043
    4. 'i' → logprob: -19.12501335144043
    5. 'range' → logprob: -19.50001335144043
    6. 'H' → logprob: -20.37501335144043
    7. '```' → logprob: -20.50001335144043
    8. '
' → logprob: -21.25001335144043
    9. '	for' → logprob: -21.50001335144043
    10. '   ' → logprob: -21.62501335144043

Token 295: ' commence' (ID: 44755)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4077818691730499
    2. ' =' → logprob: -1.6577818393707275
    3. ' in' → logprob: -2.5327818393707275
    4. ',' → logprob: -3.9077818393707275
    5. 'in' → logprob: -3.9077818393707275
    6. 'for' → logprob: -4.407782077789307
    7. ' ' → logprob: -5.157782077789307
    8. 'i' → logprob: -5.657782077789307
    9. ' for' → logprob: -6.657782077789307
    10. ')' → logprob: -7.657782077789307

Token 296: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.036508139222860336
    2. 'from' → logprob: -4.286508083343506
    3. '0' → logprob: -4.411508083343506
    4. 'à' → logprob: -5.661508083343506
    5. ' à' → logprob: -6.411508083343506
    6. ',' → logprob: -7.161508083343506
    7. ' =' → logprob: -7.411508083343506
    8. ' in' → logprob: -7.536508083343506
    9. 'at' → logprob: -7.536508083343506
    10. 'de' → logprob: -7.661508083343506

Token 297: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005930667975917459
    2. '1' → logprob: -8.125593185424805
    3. ' ' → logprob: -8.125593185424805
    4. '=' → logprob: -15.375593185424805
    5. 'range' → logprob: -15.375593185424805
    6. '```' → logprob: -16.313093185424805
    7. '2' → logprob: -16.688093185424805
    8. '#' → logprob: -16.688093185424805
    9. 'for' → logprob: -16.750593185424805
    10. '(' → logprob: -17.250593185424805

Token 298: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002669384120963514
    2. '1' → logprob: -8.250267028808594
    3. ' ' → logprob: -12.250267028808594
    4. '=' → logprob: -14.750267028808594
    5. 'range' → logprob: -16.000267028808594
    6. 'h' → logprob: -16.250267028808594
    7. '-' → logprob: -16.812767028808594
    8. '```' → logprob: -17.000267028808594
    9. '(' → logprob: -17.250267028808594
    10. 'i' → logprob: -17.250267028808594

Token 299: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027705466374754906
    2. ' for' → logprob: -3.652705430984497
    3. ',' → logprob: -7.027705669403076
    4. 'range' → logprob: -7.902705669403076
    5. ')' → logprob: -10.152705192565918
    6. ' range' → logprob: -10.527705192565918
    7. 'h' → logprob: -10.652705192565918
    8. ':' → logprob: -11.027705192565918
    9. '=' → logprob: -12.027705192565918
    10. 'in' → logprob: -12.277705192565918

Token 300: ' va' (ID: 3423)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.4182990491390228
    2. 'h' → logprob: -1.2932990789413452
    3. 'range' → logprob: -3.5432989597320557
    4. 's' → logprob: -4.668299198150635
    5. ' range' → logprob: -4.668299198150635
    6. 'for' → logprob: -5.793299198150635
    7. ' jusqu' → logprob: -5.793299198150635
    8. ' continue' → logprob: -6.168299198150635
    9. ' H' → logprob: -6.418299198150635
    10. ' s' → logprob: -6.418299198150635

Token 301: ' jusqu' (ID: 21961)
  Prédit: ' jusqu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.10783757269382477
    2. 'jus' → logprob: -2.482837677001953
    3. ' jusque' → logprob: -4.232837677001953
    4. ' ' → logprob: -5.857837677001953
    5. ' à' → logprob: -8.232837677001953
    6. ',' → logprob: -8.607837677001953
    7. ' up' → logprob: -8.857837677001953
    8. ' until' → logprob: -9.107837677001953
    9. ' Jusqu' → logprob: -9.107837677001953
    10. ' hasta' → logprob: -9.732837677001953

Token 302: ''à' (ID: 33688)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.30047622323036194
    2. 'à' → logprob: -1.8004761934280396
    3. ''à' → logprob: -2.675476312637329
    4. '’à' → logprob: -4.42547607421875
    5. '(H' → logprob: -5.92547607421875
    6. ' jusqu' → logprob: -6.05047607421875
    7. 'au' → logprob: -6.42547607421875
    8. ' ' → logprob: -6.67547607421875
    9. '(' → logprob: -6.92547607421875
    10. 'H' → logprob: -7.17547607421875

Token 303: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0004108924185857177
    2. ' H' → logprob: -8.000411033630371
    3. 'W' → logprob: -9.500411033630371
    4. ' ' → logprob: -15.250411033630371
    5. '   ' → logprob: -16.125410079956055
    6. ' W' → logprob: -16.250410079956055
    7. 'h' → logprob: -16.750410079956055
    8. '```' → logprob: -16.750410079956055
    9. '(H' → logprob: -17.375410079956055
    10. '	H' → logprob: -17.750410079956055

Token 304: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7223159074783325
    2. '-' → logprob: -1.4723159074783325
    3. ':' → logprob: -1.4723159074783325
    4. ' for' → logprob: -3.847315788269043
    5. ',' → logprob: -4.222315788269043
    6. ' -' → logprob: -4.972315788269043
    7. ')' → logprob: -4.972315788269043
    8. '):' → logprob: -6.097315788269043
    9. '
' → logprob: -6.722315788269043
    10. 'range' → logprob: -7.972315788269043

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3358446166384965e-05
    2. ' ' → logprob: -9.875053405761719
    3. '2' → logprob: -13.750053405761719
    4. '-' → logprob: -14.625053405761719
    5. 'for' → logprob: -16.00005340576172
    6. '```' → logprob: -16.25005340576172
    7. '   ' → logprob: -16.87505340576172
    8. 'H' → logprob: -17.12505340576172
    9. ' ' → logprob: -18.00005340576172
    10. ',' → logprob: -18.00005340576172

Token 306: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002156091621145606
    2. ' for' → logprob: -6.2521562576293945
    3. 'h' → logprob: -9.127156257629395
    4. ',' → logprob: -10.002156257629395
    5. '
' → logprob: -10.252156257629395
    6. ':' → logprob: -10.502156257629395
    7. 'f' → logprob: -12.002156257629395
    8. ',
' → logprob: -13.502156257629395
    9. '```' → logprob: -14.002156257629395
    10. ':
' → logprob: -14.377156257629395

Token 307: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016778295685071498
    2. ' for' → logprob: -8.875167846679688
    3. 'h' → logprob: -10.500167846679688
    4. ',' → logprob: -16.375167846679688
    5. '```' → logprob: -16.625167846679688
    6. '
' → logprob: -17.500167846679688
    7. 'f' → logprob: -17.500167846679688
    8. 'range' → logprob: -17.875167846679688
    9. ':' → logprob: -18.000167846679688
    10. 'b' → logprob: -18.625167846679688

Token 308: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5759406089782715
    2. ' h' → logprob: -0.8259406089782715
    3. '	h' → logprob: -15.07594108581543
    4. 'H' → logprob: -15.70094108581543
    5. '_h' → logprob: -15.82594108581543
    6. ' ' → logprob: -15.82594108581543
    7. ' ' → logprob: -15.95094108581543
    8. '   ' → logprob: -16.07594108581543
    9. '0' → logprob: -17.07594108581543
    10. ')' → logprob: -17.07594108581543

Token 309: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4290110170841217
    2. 'in' → logprob: -1.0540109872817993
    3. ' ' → logprob: -8.554011344909668
    4. ',' → logprob: -9.929011344909668
    5. ')' → logprob: -11.304011344909668
    6. '+' → logprob: -11.554011344909668
    7. ' i' → logprob: -11.929011344909668
    8. '=' → logprob: -12.054011344909668
    9. '	in' → logprob: -12.179011344909668
    10. '0' → logprob: -12.304011344909668

Token 310: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03805571794509888
    2. ' range' → logprob: -3.288055658340454
    3. '0' → logprob: -11.538055419921875
    4. ')' → logprob: -13.538055419921875
    5. ' ' → logprob: -13.538055419921875
    6. '(range' → logprob: -14.163055419921875
    7. '	range' → logprob: -15.038055419921875
    8. '   ' → logprob: -15.663055419921875
    9. 'ange' → logprob: -16.538055419921875
    10. '  ' → logprob: -16.538055419921875

Token 311: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.006719759665429592
    2. '(' → logprob: -5.006719589233398
    3. '(
' → logprob: -12.881719589233398
    4. '(W' → logprob: -13.881719589233398
    5. '(h' → logprob: -14.381719589233398
    6. 'H' → logprob: -16.0067195892334
    7. '((' → logprob: -16.3817195892334
    8. '(len' → logprob: -16.5067195892334
    9. '(

' → logprob: -17.5067195892334
    10. ' (' → logprob: -18.1317195892334

Token 312: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008415495976805687
    2. '):
' → logprob: -7.1258416175842285
    3. ' ):' → logprob: -11.37584114074707
    4. ':' → logprob: -11.50084114074707
    5. '+' → logprob: -12.37584114074707
    6. ')' → logprob: -12.50084114074707
    7. '   ' → logprob: -12.50084114074707
    8. '-' → logprob: -13.00084114074707
    9. '):
' → logprob: -14.50084114074707
    10. '):

' → logprob: -15.87584114074707

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45024216175079346
    2. ' for' → logprob: -1.0752421617507935
    3. 'for' → logprob: -3.950242042541504
    4. ':' → logprob: -7.450242042541504
    5. ' ' → logprob: -7.575242042541504
    6. '	for' → logprob: -7.825242042541504
    7. '<|end|>' → logprob: -8.450242042541504
    8. '  ' → logprob: -9.200242042541504
    9. ',' → logprob: -9.325242042541504
    10. '    
' → logprob: -9.450242042541504

Token 314: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1365519016981125
    2. ' for' → logprob: -2.636551856994629
    3. '   ' → logprob: -2.886551856994629
    4. 'w' → logprob: -8.511551856994629
    5. ' ' → logprob: -10.386551856994629
    6. '	for' → logprob: -11.761551856994629
    7. '    ' → logprob: -11.761551856994629
    8. ' w' → logprob: -12.136551856994629
    9. '  ' → logprob: -12.386551856994629
    10. 'W' → logprob: -13.761551856994629

Token 315: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12701033055782318
    2. 'w' → logprob: -2.1270103454589844
    3. ' for' → logprob: -9.877010345458984
    4. 'W' → logprob: -11.627010345458984
    5. '   ' → logprob: -11.752010345458984
    6. 'j' → logprob: -12.252010345458984
    7. ' w' → logprob: -12.502010345458984
    8. '#' → logprob: -12.627010345458984
    9. ' ' → logprob: -14.877010345458984
    10. '	for' → logprob: -15.377010345458984

Token 316: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.013094000518321991
    2. 'cl' → logprob: -4.763093948364258
    3. 'for' → logprob: -6.513093948364258
    4. 'cler' → logprob: -6.513093948364258
    5. 'cles' → logprob: -7.263093948364258
    6. 'clé' → logprob: -7.638093948364258
    7. 'c' → logprob: -8.763093948364258
    8. 'kle' → logprob: -9.888093948364258
    9. 'r' → logprob: -10.138093948364258
    10. '   ' → logprob: -11.138093948364258

Token 317: ' interne' (ID: 59673)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01610521785914898
    2. 'for' → logprob: -4.2661051750183105
    3. ' in' → logprob: -7.2661051750183105
    4. '   ' → logprob: -7.6411051750183105
    5. ' w' → logprob: -8.391105651855469
    6. ' ' → logprob: -8.391105651855469
    7. ' inner' → logprob: -9.516105651855469
    8. ' W' → logprob: -9.891105651855469
    9. 'w' → logprob: -10.766105651855469
    10. ' j' → logprob: -10.891105651855469

Token 318: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13031525909900665
    2. 'for' → logprob: -2.1303153038024902
    3. ' in' → logprob: -5.75531530380249
    4. 'in' → logprob: -9.255314826965332
    5. ' on' → logprob: -9.630314826965332
    6. ' en' → logprob: -10.630314826965332
    7. ' ' → logprob: -11.380314826965332
    8. '   ' → logprob: -11.630314826965332
    9. ' over' → logprob: -13.380314826965332
    10. ' pour' → logprob: -13.880314826965332

Token 319: ' chaque' (ID: 21194)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.2838042676448822
    2. 'range' → logprob: -1.7838042974472046
    3. ' W' → logprob: -3.283804178237915
    4. ' range' → logprob: -3.658804178237915
    5. '(W' → logprob: -4.158804416656494
    6. ' (' → logprob: -9.533803939819336
    7. '(range' → logprob: -9.658803939819336
    8. '(' → logprob: -10.158803939819336
    9. 'for' → logprob: -10.533803939819336
    10. '   ' → logprob: -12.533803939819336

Token 320: ' colonne' (ID: 148275)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.35043978691101074
    2. '(W' → logprob: -1.3504397869110107
    3. 'range' → logprob: -3.4754397869110107
    4. ' W' → logprob: -6.10044002532959
    5. ' range' → logprob: -6.22544002532959
    6. '(w' → logprob: -7.60044002532959
    7. 'w' → logprob: -7.85044002532959
    8. '(' → logprob: -8.22544002532959
    9. ' (' → logprob: -9.47544002532959
    10. '(range' → logprob: -9.85044002532959

Token 321: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32283610105514526
    2. ' for' → logprob: -1.82283616065979
    3. ' in' → logprob: -2.19783616065979
    4. 'in' → logprob: -6.197835922241211
    5. '   ' → logprob: -7.947835922241211
    6. '(w' → logprob: -7.947835922241211
    7. '(' → logprob: -8.947835922241211
    8. '(W' → logprob: -9.197835922241211
    9. ' of' → logprob: -9.947835922241211
    10. 'range' → logprob: -9.947835922241211

Token 322: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3133121728897095
    2. ' range' → logprob: -1.3133121728897095
    3. 'W' → logprob: -10.813312530517578
    4. '(range' → logprob: -11.188312530517578
    5. ' W' → logprob: -11.563312530517578
    6. '(W' → logprob: -11.938312530517578
    7. ' ' → logprob: -16.563312530517578
    8. 'r' → logprob: -16.688312530517578
    9. 'for' → logprob: -16.813312530517578
    10. 'rang' → logprob: -17.313312530517578

Token 323: ' ligne' (ID: 19583)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.42168089747428894
    2. '(W' → logprob: -1.4216809272766113
    3. 'range' → logprob: -2.5466809272766113
    4. ' range' → logprob: -4.171680927276611
    5. ' W' → logprob: -5.171680927276611
    6. ' (' → logprob: -6.046680927276611
    7. '(' → logprob: -7.296680927276611
    8. 'for' → logprob: -8.671680450439453
    9. '(range' → logprob: -10.296680450439453
    10. ' for' → logprob: -11.546680450439453

Token 324: ' cour' (ID: 2871)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8028938174247742
    2. '(W' → logprob: -1.177893877029419
    3. 'range' → logprob: -2.177893877029419
    4. 'W' → logprob: -2.677893877029419
    5. ' for' → logprob: -3.427893877029419
    6. ' range' → logprob: -3.802893877029419
    7. ' W' → logprob: -5.92789363861084
    8. '(range' → logprob: -6.17789363861084
    9. '   ' → logprob: -7.05289363861084
    10. ' in' → logprob: -7.17789363861084

Token 325: 'ante' (ID: 2116)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6345815658569336
    2. 'W' → logprob: -1.7595815658569336
    3. 'onne' → logprob: -2.5095815658569336
    4. 'l' → logprob: -3.0095815658569336
    5. 's' → logprob: -3.3845815658569336
    6. 'n' → logprob: -3.3845815658569336
    7. 'r' → logprob: -3.5095815658569336
    8. 'ls' → logprob: -3.8845815658569336
    9. 'w' → logprob: -4.384581565856934
    10. ' for' → logprob: -5.384581565856934

Token 326: ';' (ID: 26)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25716423988342285
    2. 'for' → logprob: -1.5071642398834229
    3. '   ' → logprob: -5.257164001464844
    4. ',' → logprob: -12.507164001464844
    5. ' ' → logprob: -13.132164001464844
    6. '	for' → logprob: -13.132164001464844
    7. ' in' → logprob: -14.257164001464844
    8. '  ' → logprob: -14.382164001464844
    9. ':' → logprob: -14.507164001464844
    10. ' ' → logprob: -14.882164001464844

Token 327: ' w' (ID: 286)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4849832355976105
    2. 'w' → logprob: -1.484983205795288
    3. ' range' → logprob: -3.234983205795288
    4. ' for' → logprob: -3.359983205795288
    5. 'range' → logprob: -3.359983205795288
    6. 'W' → logprob: -3.734983205795288
    7. ' w' → logprob: -4.109983444213867
    8. ' W' → logprob: -5.109983444213867
    9. '   ' → logprob: -5.984983444213867
    10. ' ' → logprob: -10.484983444213867

Token 328: ' commence' (ID: 44755)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1603771597146988
    2. 'in' → logprob: -1.9103771448135376
    3. 'for' → logprob: -9.785377502441406
    4. ' ' → logprob: -10.285377502441406
    5. '=' → logprob: -10.410377502441406
    6. 'range' → logprob: -11.410377502441406
    7. ' =' → logprob: -12.410377502441406
    8. ')' → logprob: -12.535377502441406
    9. ' for' → logprob: -12.785377502441406
    10. '+' → logprob: -13.160377502441406

Token 329: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39300909638404846
    2. ' à' → logprob: -1.768009066581726
    3. ' =' → logprob: -2.2680091857910156
    4. ' in' → logprob: -3.3930091857910156
    5. ' at' → logprob: -4.518009185791016
    6. 'à' → logprob: -5.768009185791016
    7. '<|end|>' → logprob: -7.768009185791016
    8. '0' → logprob: -7.768009185791016
    9. 'in' → logprob: -7.893009185791016
    10. 'at' → logprob: -7.893009185791016

Token 330: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02686910517513752
    2. ' ' → logprob: -3.776869058609009
    3. '1' → logprob: -5.651869297027588
    4. ' range' → logprob: -9.52686882019043
    5. 'range' → logprob: -10.65186882019043
    6. '(' → logprob: -12.52686882019043
    7. ' (' → logprob: -13.40186882019043
    8. 'for' → logprob: -14.02686882019043
    9. ' for' → logprob: -14.65186882019043
    10. ' w' → logprob: -14.65186882019043

Token 331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003396343090571463
    2. ' ' → logprob: -8.25033950805664
    3. '1' → logprob: -9.75033950805664
    4. 'range' → logprob: -11.25033950805664
    5. ' range' → logprob: -12.50033950805664
    6. 'for' → logprob: -13.37533950805664
    7. '(' → logprob: -13.75033950805664
    8. '   ' → logprob: -15.62533950805664
    9. ' for' → logprob: -16.12533950805664
    10. 'w' → logprob: -16.31283950805664

Token 332: ' et' (ID: 859)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7184367179870605
    2. ' for' → logprob: -0.9684367179870605
    3. 'for' → logprob: -2.3434367179870605
    4. 'in' → logprob: -3.5934367179870605
    5. '   ' → logprob: -5.0934367179870605
    6. ',' → logprob: -6.3434367179870605
    7. ' ' → logprob: -8.343437194824219
    8. '    ' → logprob: -8.718437194824219
    9. '+' → logprob: -8.718437194824219
    10. ' range' → logprob: -8.718437194824219

Token 333: ' va' (ID: 3423)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4960397183895111
    2. 'w' → logprob: -2.121039628982544
    3. 'range' → logprob: -2.121039628982544
    4. ' W' → logprob: -2.871039628982544
    5. '0' → logprob: -3.246039628982544
    6. ' w' → logprob: -3.371039628982544
    7. 'W' → logprob: -3.996039628982544
    8. '1' → logprob: -6.621039867401123
    9. ' for' → logprob: -7.371039867401123
    10. ' ' → logprob: -7.746039867401123

Token 334: ' jusqu' (ID: 21961)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6679680347442627
    2. 'range' → logprob: -1.1679680347442627
    3. '0' → logprob: -1.7929680347442627
    4. '1' → logprob: -5.042967796325684
    5. ' ' → logprob: -5.917967796325684
    6. '(' → logprob: -7.542967796325684
    7. ' in' → logprob: -9.792967796325684
    8. '   ' → logprob: -11.167967796325684
    9. '(range' → logprob: -11.417967796325684
    10. 'for' → logprob: -11.542967796325684

Token 335: ''à' (ID: 33688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04102402180433273
    2. '(W' → logprob: -3.6660239696502686
    3. ''à' → logprob: -4.791024208068848
    4. '=' → logprob: -6.166024208068848
    5. 'à' → logprob: -6.166024208068848
    6. '’à' → logprob: -7.416024208068848
    7. '(H' → logprob: -8.041024208068848
    8. ' à' → logprob: -8.166024208068848
    9. '()' → logprob: -8.291024208068848
    10. 'range' → logprob: -9.291024208068848

Token 336: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.007727291435003281
    2. ' W' → logprob: -4.882727146148682
    3. '1' → logprob: -9.38272762298584
    4. '(W' → logprob: -10.50772762298584
    5. '   ' → logprob: -12.63272762298584
    6. ' ' → logprob: -13.25772762298584
    7. '(' → logprob: -13.38272762298584
    8. '0' → logprob: -14.38272762298584
    9. '	W' → logprob: -14.50772762298584
    10. ' (' → logprob: -14.63272762298584

Token 337: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08307947218418121
    2. ' -' → logprob: -3.5830795764923096
    3. '   ' → logprob: -4.3330793380737305
    4. '):' → logprob: -4.5830793380737305
    5. 'for' → logprob: -4.5830793380737305
    6. '(' → logprob: -4.8330793380737305
    7. ' for' → logprob: -6.2080793380737305
    8. ':' → logprob: -6.2080793380737305
    9. ')' → logprob: -6.7080793380737305
    10. '):
' → logprob: -6.7080793380737305

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.47757811343763e-05
    2. '-' → logprob: -10.750044822692871
    3. '2' → logprob: -11.375044822692871
    4. 'W' → logprob: -11.875044822692871
    5. ' ' → logprob: -12.375044822692871
    6. '   ' → logprob: -15.500044822692871
    7. '(' → logprob: -16.000043869018555
    8. '(W' → logprob: -16.000043869018555
    9. '0' → logprob: -16.625043869018555
    10. '```' → logprob: -16.625043869018555

Token 339: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3029133379459381
    2. ':' → logprob: -1.4279133081436157
    3. ' for' → logprob: -4.302913188934326
    4. 'for' → logprob: -4.927913188934326
    5. ':
' → logprob: -8.052913665771484
    6. ' :' → logprob: -8.677913665771484
    7. '       ' → logprob: -9.177913665771484
    8. ',' → logprob: -10.427913665771484
    9. '  ' → logprob: -10.427913665771484
    10. '    ' → logprob: -10.427913665771484

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6255936026573181
    2. 'for' → logprob: -1.125593662261963
    3. ' for' → logprob: -2.125593662261963
    4. ':' → logprob: -3.875593662261963
    5. '       ' → logprob: -9.125593185424805
    6. ' ' → logprob: -9.375593185424805
    7. ' :' → logprob: -10.000593185424805
    8. '    ' → logprob: -10.125593185424805
    9. '(' → logprob: -10.250593185424805
    10. 'range' → logprob: -10.375593185424805

Token 341: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02226640284061432
    2. ' for' → logprob: -3.897266387939453
    3. '   ' → logprob: -6.522266387939453
    4. 'range' → logprob: -8.647266387939453
    5. ' range' → logprob: -9.897266387939453
    6. 'w' → logprob: -10.647266387939453
    7. '       ' → logprob: -13.897266387939453
    8. ' w' → logprob: -14.397266387939453
    9. ' ' → logprob: -15.022266387939453
    10. '    ' → logprob: -15.147266387939453

Token 342: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.1269330382347107
    2. 'w' → logprob: -2.1269330978393555
    3. 'W' → logprob: -13.001933097839355
    4. ' W' → logprob: -13.751933097839355
    5. '(w' → logprob: -14.626933097839355
    6. ' ' → logprob: -15.001933097839355
    7. ' ' → logprob: -15.751933097839355
    8. '_w' → logprob: -15.751933097839355
    9. ')' → logprob: -16.37693214416504
    10. ' in' → logprob: -16.37693214416504

Token 343: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012637847103178501
    2. 'in' → logprob: -4.387637615203857
    3. '+' → logprob: -10.262638092041016
    4. '0' → logprob: -10.262638092041016
    5. ' ' → logprob: -10.762638092041016
    6. '1' → logprob: -11.137638092041016
    7. '   ' → logprob: -11.637638092041016
    8. '=' → logprob: -12.512638092041016
    9. '    ' → logprob: -12.762638092041016
    10. ' =' → logprob: -13.512638092041016

Token 344: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12697966396808624
    2. ' range' → logprob: -2.1269795894622803
    3. '(range' → logprob: -9.87697982788086
    4. '(' → logprob: -15.37697982788086
    5. '	range' → logprob: -17.50197982788086
    6. '0' → logprob: -18.12697982788086
    7. '   ' → logprob: -18.50197982788086
    8. ' ' → logprob: -18.87697982788086
    9. ')' → logprob: -19.62697982788086
    10. '.range' → logprob: -20.25197982788086

Token 345: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.038063064217567444
    2. '(' → logprob: -3.2880630493164062
    3. ' (' → logprob: -11.663063049316406
    4. 'W' → logprob: -12.663063049316406
    5. '(w' → logprob: -12.663063049316406
    6. '(range' → logprob: -12.913063049316406
    7. '(H' → logprob: -13.663063049316406
    8. '(
' → logprob: -14.038063049316406
    9. ')' → logprob: -14.038063049316406
    10. ' W' → logprob: -14.788063049316406

Token 346: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001723488443531096
    2. '-' → logprob: -6.876723289489746
    3. '):
' → logprob: -7.751723289489746
    4. '+' → logprob: -9.126723289489746
    5. ' ):' → logprob: -9.626723289489746
    6. ' -' → logprob: -9.876723289489746
    7. ')' → logprob: -10.751723289489746
    8. ':' → logprob: -12.126723289489746
    9. '   ' → logprob: -12.501723289489746
    10. '):
' → logprob: -13.876723289489746

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007258862257003784
    2. ' if' → logprob: -5.507258892059326
    3. 'if' → logprob: -6.007258892059326
    4. ':' → logprob: -7.757258892059326
    5. '   ' → logprob: -9.257258415222168
    6. '        
' → logprob: -9.507258415222168
    7. ',' → logprob: -9.882258415222168
    8. '#' → logprob: -10.882258415222168
    9. '           ' → logprob: -11.632258415222168
    10. '      ' → logprob: -11.882258415222168

Token 348: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19144923985004425
    2. ' if' → logprob: -1.9414492845535278
    3. '       ' → logprob: -4.191449165344238
    4. '           ' → logprob: -4.191449165344238
    5. 'while' → logprob: -8.316449165344238
    6. '#' (adapté à ' #') → logprob: -9.316449165344238
    7. '   ' → logprob: -10.566449165344238
    8. '        ' → logprob: -10.691449165344238
    9. ' while' → logprob: -10.816449165344238
    10. 'val' → logprob: -11.316449165344238

Token 349: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015326489694416523
    2. 'while' → logprob: -4.390326499938965
    3. 'val' → logprob: -6.390326499938965
    4. '#' → logprob: -7.890326499938965
    5. 'x' → logprob: -8.140326499938965
    6. ' if' → logprob: -8.265326499938965
    7. '       ' → logprob: -9.390326499938965
    8. 'v' → logprob: -9.765326499938965
    9. 'value' → logprob: -10.515326499938965
    10. 'current' → logprob: -11.265326499938965

Token 350: 'ifier' (ID: 4550)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20754513144493103
    2. 'ifie' → logprob: -2.832545042037964
    3. ' if' → logprob: -2.957545042037964
    4. 'ifier' → logprob: -3.207545042037964
    5. 'f' → logprob: -3.707545042037964
    6. '   ' → logprob: -5.332545280456543
    7. 'ifiez' → logprob: -5.582545280456543
    8. 'er' → logprob: -7.207545280456543
    9. '       ' → logprob: -7.332545280456543
    10. 'e' → logprob: -7.707545280456543

Token 351: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.697089672088623
    2. ' if' → logprob: -0.697089672088623
    3. 'a' → logprob: -6.197089672088623
    4. ' a' → logprob: -6.322089672088623
    5. ' si' → logprob: -9.572090148925781
    6. '   ' → logprob: -10.697090148925781
    7. '       ' → logprob: -12.572090148925781
    8. ' s' → logprob: -13.072090148925781
    9. 'si' → logprob: -13.697090148925781
    10. ' ' → logprob: -13.822090148925781

Token 352: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.061981577426195145
    2. ' a' → logprob: -2.811981678009033
    3. 'w' → logprob: -11.811981201171875
    4. ' w' → logprob: -12.936981201171875
    5. '(a' → logprob: -13.061981201171875
    6. ' ' → logprob: -13.811981201171875
    7. ' (' → logprob: -15.311981201171875
    8. ' ' → logprob: -15.311981201171875
    9. '	a' → logprob: -15.561981201171875
    10. 'A' → logprob: -16.061981201171875

Token 353: ' nombre' (ID: 9733)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007817655801773071
    2. ' a' → logprob: -4.88281774520874
    3. 'w' → logprob: -8.632817268371582
    4. ' w' → logprob: -11.007817268371582
    5. '(a' → logprob: -12.007817268371582
    6. ' not' → logprob: -13.007817268371582
    7. '0' → logprob: -13.632817268371582
    8. 'not' → logprob: -13.757817268371582
    9. ' (' → logprob: -13.757817268371582
    10. '#' → logprob: -13.882817268371582

Token 354: ' courant' (ID: 74694)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9118710160255432
    2. '>' → logprob: -1.4118709564208984
    3. ' a' → logprob: -2.0368709564208984
    4. ' >' → logprob: -2.4118709564208984
    5. '%' → logprob: -2.7868709564208984
    6. '[a' → logprob: -4.036870956420898
    7. ' ' → logprob: -4.786870956420898
    8. '_a' → logprob: -4.911870956420898
    9. ' %' → logprob: -5.036870956420898
    10. '   ' → logprob: -5.036870956420898

Token 355: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.696780800819397
    2. '>' → logprob: -1.196780800819397
    3. ' a' → logprob: -2.1967806816101074
    4. ' >' → logprob: -2.8217806816101074
    5. '%' → logprob: -4.196780681610107
    6. ' !=' → logprob: -5.946780681610107
    7. '!=' → logprob: -6.196780681610107
    8. ' %' → logprob: -6.321780681610107
    9. ' ==' → logprob: -6.571780681610107
    10. ' is' → logprob: -6.696780681610107

Token 356: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004332676064223051
    2. 'w' → logprob: -6.254332542419434
    3. ' a' → logprob: -7.004332542419434
    4. '       ' → logprob: -7.879332542419434
    5. '           ' → logprob: -8.129332542419434
    6. '0' → logprob: -8.629332542419434
    7. '>' → logprob: -8.754332542419434
    8. '#' → logprob: -9.129332542419434
    9. 'if' → logprob: -9.129332542419434
    10. '%' → logprob: -9.754332542419434

Token 357: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -2.339278580620885e-06
    2. 'h' → logprob: -13.125001907348633
    3. '[a' → logprob: -15.500001907348633
    4. '[' → logprob: -16.875001907348633
    5. '[r' → logprob: -19.000001907348633
    6. '[y' → logprob: -19.625001907348633
    7. '```' → logprob: -19.625001907348633
    8. 'a' → logprob: -19.750001907348633
    9. '[u' → logprob: -20.000001907348633
    10. '<h' → logprob: -20.125001907348633

Token 358: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006077215657569468
    2. '[w' → logprob: -7.500607490539551
    3. 'w' → logprob: -11.00060749053955
    4. ' ][' → logprob: -11.12560749053955
    5. '[' → logprob: -11.62560749053955
    6. '[h' → logprob: -11.75060749053955
    7. '"][' → logprob: -12.87560749053955
    8. ']' → logprob: -13.12560749053955
    9. ']][' → logprob: -14.75060749053955
    10. ''][' → logprob: -15.50060749053955

Token 359: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -8.895480277715251e-06
    2. '][' → logprob: -12.375008583068848
    3. '[w' → logprob: -12.875008583068848
    4. ' w' → logprob: -13.125008583068848
    5. '   ' → logprob: -17.500009536743164
    6. '	w' → logprob: -17.625009536743164
    7. ']' → logprob: -17.750009536743164
    8. 'W' → logprob: -18.125009536743164
    9. ''w' → logprob: -18.625009536743164
    10. '```' → logprob: -18.875009536743164

Token 360: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005361109972000122
    2. ']>' → logprob: -5.255361080169678
    3. ']>=' → logprob: -9.755361557006836
    4. ']!=' → logprob: -10.380361557006836
    5. ']%' → logprob: -11.255361557006836
    6. ' ]' → logprob: -11.505361557006836
    7. '>' → logprob: -11.880361557006836
    8. '],' → logprob: -12.880361557006836
    9. '']' → logprob: -13.380361557006836
    10. ']==' → logprob: -13.880361557006836

Token 361: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1987302154302597
    2. '>' → logprob: -2.323730230331421
    3. ' >' → logprob: -3.198730230331421
    4. ' %' → logprob: -3.823730230331421
    5. ' is' → logprob: -5.323729991912842
    6. ' est' → logprob: -5.823729991912842
    7. 's' → logprob: -6.073729991912842
    8. 'if' → logprob: -6.323729991912842
    9. '   ' → logprob: -6.948729991912842
    10. '1' → logprob: -7.198729991912842

Token 362: ' impair' (ID: 64113)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.2791331112384796
    2. '>' → logprob: -2.2791330814361572
    3. 'sup' → logprob: -3.2791330814361572
    4. 'odd' → logprob: -3.4041330814361572
    5. 'im' → logprob: -3.6541330814361572
    6. 'pair' → logprob: -4.029133319854736
    7. 'strict' → logprob: -4.279133319854736
    8. ' supérieur' → logprob: -5.404133319854736
    9. '>=' → logprob: -5.904133319854736
    10. ' impair' → logprob: -7.029133319854736

Token 363: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3880258798599243
    2. '       ' → logprob: -1.3880258798599243
    3. ' if' → logprob: -3.5130257606506348
    4. 'if' → logprob: -4.013025760650635
    5. ' and' → logprob: -4.638025760650635
    6. '           ' → logprob: -4.763025760650635
    7. ' :' → logprob: -5.763025760650635
    8. ',' → logprob: -7.138025760650635
    9. ':
' → logprob: -7.263025760650635
    10. '        ' → logprob: -8.138026237487793

Token 364: 'le' (ID: 282)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39890530705451965
    2. ' a' → logprob: -1.3989052772521973
    3. 'if' → logprob: -2.8989052772521973
    4. ' if' → logprob: -4.523905277252197
    5. '%' → logprob: -4.648905277252197
    6. ')' → logprob: -5.398905277252197
    7. ' %' → logprob: -6.898905277252197
    8. ' )' → logprob: -7.773905277252197
    9. ')%' → logprob: -8.648905754089355
    10. '(a' → logprob: -9.023905754089355

Token 365: ' reste' (ID: 26769)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.01756116934120655
    2. ' %' → logprob: -4.142560958862305
    3. ')' → logprob: -7.017560958862305
    4. 'a' → logprob: -7.892560958862305
    5. '&' → logprob: -9.642560958862305
    6. ']' → logprob: -9.642560958862305
    7. '1' → logprob: -10.017560958862305
    8. ' ' → logprob: -10.892560958862305
    9. '```' → logprob: -10.892560958862305
    10. ' a' → logprob: -12.017560958862305

Token 366: ' de' (ID: 334)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2555062770843506
    2. '!=' → logprob: -2.3805062770843506
    3. ')' → logprob: -2.7555062770843506
    4. ' ==' → logprob: -3.2555062770843506
    5. '%' → logprob: -4.88050651550293
    6. '==' → logprob: -5.13050651550293
    7. ' ' → logprob: -5.25550651550293
    8. '=' → logprob: -6.13050651550293
    9. 'a' → logprob: -6.38050651550293
    10. ' %' → logprob: -6.75550651550293

Token 367: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.43083369731903076
    2. ' a' → logprob: -1.0558336973190308
    3. ' ' → logprob: -6.55583381652832
    4. '1' → logprob: -7.93083381652832
    5. '```' → logprob: -9.18083381652832
    6. ')' → logprob: -9.68083381652832
    7. '%' → logprob: -10.30583381652832
    8. '(a' → logprob: -10.68083381652832
    9. '   ' → logprob: -10.80583381652832
    10. '2' → logprob: -11.18083381652832

Token 368: ' division' (ID: 21629)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8124150633811951
    2. 'a' → logprob: -1.0624151229858398
    3. '2' → logprob: -2.31241512298584
    4. '1' → logprob: -3.68741512298584
    5. 'div' → logprob: -3.68741512298584
    6. ' a' → logprob: -3.81241512298584
    7. ' %' → logprob: -4.31241512298584
    8. 'division' → logprob: -4.43741512298584
    9. ' ' → logprob: -5.18741512298584
    10. ' division' → logprob: -5.56241512298584

Token 369: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5750480890274048
    2. '%' → logprob: -1.9500480890274048
    3. ' !=' → logprob: -2.0750479698181152
    4. 'a' → logprob: -3.2000479698181152
    5. '!=' → logprob: -3.2000479698181152
    6. ' ==' → logprob: -4.075047969818115
    7. ' %' → logprob: -4.325047969818115
    8. ' ' → logprob: -4.575047969818115
    9. ' par' → logprob: -4.575047969818115
    10. ' a' → logprob: -4.700047969818115

Token 370: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026353945955634117
    2. ' ' → logprob: -3.6513538360595703
    3. '1' → logprob: -10.52635383605957
    4. '```' → logprob: -11.02635383605957
    5. 'a' → logprob: -12.40135383605957
    6. ' a' → logprob: -13.40135383605957
    7. ')' → logprob: -14.15135383605957
    8. '
' → logprob: -14.27635383605957
    9. ',' → logprob: -14.65135383605957
    10. ' deux' → logprob: -14.77635383605957

Token 371: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.85366350505501e-05
    2. ' ' → logprob: -9.25009822845459
    3. '```' → logprob: -13.62509822845459
    4. 'de' → logprob: -14.25009822845459
    5. '1' → logprob: -16.250099182128906
    6. 'a' → logprob: -16.375099182128906
    7. '
' → logprob: -16.625099182128906
    8. '   ' → logprob: -17.375099182128906
    9. '#' → logprob: -17.375099182128906
    10. '==' → logprob: -17.750099182128906

Token 372: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.39328187704086304
    2. ')' → logprob: -1.5182819366455078
    3. '!=' → logprob: -2.518281936645508
    4. ' ==' → logprob: -3.893281936645508
    5. '==' → logprob: -5.893281936645508
    6. ' )' → logprob: -6.643281936645508
    7. ')!=' → logprob: -7.768281936645508
    8. '1' → logprob: -8.643281936645508
    9. '   ' → logprob: -9.393281936645508
    10. ' ' → logprob: -9.518281936645508

Token 373: ' non' (ID: 2893)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028412409126758575
    2. ' ' → logprob: -3.778412342071533
    3. '!=' → logprob: -6.028412342071533
    4. '==' → logprob: -6.153412342071533
    5. ' ==' → logprob: -8.028412818908691
    6. ' !=' → logprob: -8.403412818908691
    7. '```' → logprob: -10.528412818908691
    8. '=' → logprob: -10.778412818908691
    9. '!' → logprob: -11.403412818908691
    10. 'une' → logprob: -13.653412818908691

Token 374: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01892368122935295
    2. '=' → logprob: -5.018923759460449
    3. ' égal' → logprob: -5.143923759460449
    4. ' ' → logprob: -5.893923759460449
    5. ' ég' → logprob: -7.143923759460449
    6. ' zéro' → logprob: -7.643923759460449
    7. ' zero' → logprob: -7.768923759460449
    8. ' nul' → logprob: -7.893923759460449
    9. ' =' → logprob: -7.893923759460449
    10. 'zero' → logprob: -8.01892375946045

Token 375: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4462333023548126
    2. '):' → logprob: -1.4462332725524902
    3. '):
' → logprob: -2.8212332725524902
    4. ' !=' → logprob: -3.1962332725524902
    5. ' )' → logprob: -5.19623327255249
    6. '!=' → logprob: -5.82123327255249
    7. '   ' → logprob: -6.07123327255249
    8. 'if' → logprob: -6.07123327255249
    9. ' ):' → logprob: -6.07123327255249
    10. ':' → logprob: -6.32123327255249

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009161281399428844
    2. '           ' → logprob: -5.259161472320557
    3. ':' → logprob: -5.884161472320557
    4. ' if' → logprob: -7.259161472320557
    5. 'if' → logprob: -7.884161472320557
    6. ' :' → logprob: -11.134160995483398
    7. '   ' → logprob: -11.509160995483398
    8. ',' → logprob: -11.884160995483398
    9. '        ' → logprob: -12.259160995483398
    10. '        
' → logprob: -12.259160995483398

Token 377: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018234115093946457
    2. '       ' → logprob: -4.5182342529296875
    3. ' if' → logprob: -5.0182342529296875
    4. '           ' → logprob: -7.5182342529296875
    5. '   ' → logprob: -14.143234252929688
    6. '        ' → logprob: -15.268234252929688
    7. 'If' → logprob: -15.643234252929688
    8. '	if' → logprob: -16.268234252929688
    9. '               ' → logprob: -17.018234252929688
    10. '```' → logprob: -17.018234252929688

Token 378: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3868767023086548
    2. 'a' → logprob: -1.1368767023086548
    3. '(a' → logprob: -12.511877059936523
    4. ' ' → logprob: -13.886877059936523
    5. '	a' → logprob: -14.761877059936523
    6. '   ' → logprob: -15.011877059936523
    7. ' ' → logprob: -15.761877059936523
    8. ' (' → logprob: -15.761877059936523
    9. '(' → logprob: -18.136877059936523
    10. '  ' → logprob: -18.386877059936523

Token 379: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -1.9361264946837764e-07
    2. 'h' → logprob: -16.375
    3. ' [' → logprob: -17.125
    4. '[' → logprob: -17.625
    5. '```' → logprob: -20.0
    6. '[a' → logprob: -20.375
    7. '[s' → logprob: -20.875
    8. '<h' → logprob: -20.875
    9. '[u' → logprob: -21.0
    10. ')[' → logprob: -21.125

Token 380: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2529163658618927
    2. '[h' → logprob: -1.5029163360595703
    3. '[' → logprob: -7.25291633605957
    4. '[w' → logprob: -8.62791633605957
    5. ']' → logprob: -10.37791633605957
    6. ' ][' → logprob: -10.62791633605957
    7. ')[' → logprob: -12.00291633605957
    8. '}[' → logprob: -12.50291633605957
    9. '[a' → logprob: -12.62791633605957
    10. '[j' → logprob: -12.62791633605957

Token 381: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0007499480270780623
    2. '[w' → logprob: -7.2507500648498535
    3. '][' → logprob: -10.250749588012695
    4. ' w' → logprob: -12.500749588012695
    5. '[' → logprob: -15.375749588012695
    6. '	w' → logprob: -16.125749588012695
    7. '```' → logprob: -16.250749588012695
    8. '0' → logprob: -16.500749588012695
    9. 'W' → logprob: -16.625749588012695
    10. 's' → logprob: -16.875749588012695

Token 382: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6808478236198425
    2. '%' → logprob: -0.8058478236198425
    3. ')' → logprob: -3.6808478832244873
    4. ']%' → logprob: -4.055847644805908
    5. ' %' → logprob: -5.805847644805908
    6. ')%' → logprob: -6.680847644805908
    7. '}' → logprob: -8.805848121643066
    8. '```' → logprob: -10.305848121643066
    9. '[' → logprob: -11.055848121643066
    10. ' ' → logprob: -11.055848121643066

Token 383: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07893671840429306
    2. ' %' → logprob: -2.578936815261841
    3. '1' → logprob: -11.453936576843262
    4. ')' → logprob: -11.828936576843262
    5. ' ' → logprob: -12.203936576843262
    6. '```' → logprob: -12.203936576843262
    7. '%
' → logprob: -12.328936576843262
    8. ' ' → logprob: -12.703936576843262
    9. ']' → logprob: -13.203936576843262
    10. '&' → logprob: -13.828936576843262

Token 384: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '```' → logprob: -15.750626564025879
    4. '==' → logprob: -18.250627517700195
    5. '1' → logprob: -18.625627517700195
    6. '=' → logprob: -19.125627517700195
    7. '>' → logprob: -19.250627517700195
    8. '   ' → logprob: -19.500627517700195
    9. '!=' → logprob: -19.875627517700195
    10. '`' → logprob: -20.125627517700195

Token 385: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -15.875004768371582
    4. '   ' → logprob: -17.250003814697266
    5. '>' → logprob: -18.437503814697266
    6. '{' → logprob: -18.437503814697266
    7. '==' → logprob: -18.625003814697266
    8. '  ' → logprob: -19.250003814697266
    9. '۲' → logprob: -19.437503814697266
    10. '
' → logprob: -19.437503814697266

Token 386: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.011936862021684647
    2. ' !=' → logprob: -5.261936664581299
    3. '==' → logprob: -5.386936664581299
    4. ':' → logprob: -6.261936664581299
    5. '1' → logprob: -8.761937141418457
    6. ' ==' → logprob: -10.761937141418457
    7. ')!=' → logprob: -12.136937141418457
    8. '()!=' → logprob: -12.886937141418457
    9. '!==' → logprob: -12.886937141418457
    10. '=' → logprob: -12.886937141418457

Token 387: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '0' → logprob: -18.500036239624023
    4. '```' → logprob: -19.000036239624023
    5. '

' → logprob: -19.500036239624023
    6. '１' → logprob: -20.125036239624023
    7. ' ' → logprob: -20.750036239624023
    8. '!=' → logprob: -20.750036239624023
    9. '!' → logprob: -20.875036239624023
    10. '>' → logprob: -21.187536239624023

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '0' → logprob: -18.125001907348633
    4. '```' → logprob: -19.375001907348633
    5. '!' → logprob: -19.875001907348633
    6. '!=' → logprob: -20.250001907348633
    7. '１' → logprob: -21.000001907348633
    8. '

' → logprob: -21.250001907348633
    9. '' → logprob: -21.437501907348633
    10. '#' → logprob: -21.500001907348633

Token 389: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014486834406852722
    2. ':
' → logprob: -6.876448631286621
    3. ' and' → logprob: -7.876448631286621
    4. ' :' → logprob: -11.251448631286621
    5. ',' → logprob: -11.626448631286621
    6. '):' → logprob: -12.001448631286621
    7. 'and' → logprob: -12.876448631286621
    8. '           ' → logprob: -13.376448631286621
    9. '       ' → logprob: -13.501448631286621
    10. ')' → logprob: -13.876448631286621

Token 390: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037248291075229645
    2. ' if' → logprob: -4.162248134613037
    3. 'if' → logprob: -4.162248134613037
    4. '       ' → logprob: -5.787248134613037
    5. '#' → logprob: -6.412248134613037
    6. ' #' → logprob: -8.662248611450195
    7. '          ' → logprob: -9.412248611450195
    8. ',' → logprob: -9.537248611450195
    9. '         ' → logprob: -9.662248611450195
    10. '            
' → logprob: -9.787248611450195

Token 391: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19898054003715515
    2. '           ' → logprob: -2.4489805698394775
    3. ' if' → logprob: -2.6989805698394775
    4. '               ' → logprob: -3.6989805698394775
    5. '#' (adapté à ' #') → logprob: -6.323980331420898
    6. 'next' → logprob: -10.073980331420898
    7. '   ' → logprob: -10.198980331420898
    8. 'w' → logprob: -10.698980331420898
    9. '            
' → logprob: -11.323980331420898
    10. ' ' → logprob: -11.323980331420898

Token 392: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0020274927373975515
    2. '#' → logprob: -6.87702751159668
    3. ' if' → logprob: -7.37702751159668
    4. '           ' → logprob: -8.00202751159668
    5. '            
' → logprob: -11.50202751159668
    6. 's' → logprob: -12.37702751159668
    7. 'cnt' → logprob: -12.75202751159668
    8. 'If' → logprob: -13.25202751159668
    9. 'i' → logprob: -13.25202751159668
    10. 'si' → logprob: -13.37702751159668

Token 393: 'ifier' (ID: 4550)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5313054323196411
    2. 'ifier' → logprob: -1.7813054323196411
    3. '       ' → logprob: -3.0313053131103516
    4. '           ' → logprob: -3.4063053131103516
    5. '   ' → logprob: -3.5313053131103516
    6. '               ' → logprob: -3.9063053131103516
    7. 'la' → logprob: -3.9063053131103516
    8. 'er' → logprob: -4.906305313110352
    9. 'for' → logprob: -5.031305313110352
    10. 'ifie' → logprob: -5.031305313110352

Token 394: ' si' (ID: 1784)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.0995439738035202
    2. 'w' → logprob: -2.849544048309326
    3. ' if' → logprob: -3.349544048309326
    4. 'if' → logprob: -6.349544048309326
    5. '(w' → logprob: -11.974543571472168
    6. ' ' → logprob: -12.349543571472168
    7. '   ' → logprob: -12.474543571472168
    8. ' ' → logprob: -12.724543571472168
    9. '	w' → logprob: -12.849543571472168
    10. '           ' → logprob: -13.224543571472168

Token 395: ' ce' (ID: 2357)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.026343729346990585
    2. ' w' → logprob: -3.651343822479248
    3. '(w' → logprob: -10.15134334564209
    4. '   ' → logprob: -13.90134334564209
    5. 'W' → logprob: -14.02634334564209
    6. '	w' → logprob: -14.27634334564209
    7. ' ' → logprob: -14.90134334564209
    8. '_w' → logprob: -15.02634334564209
    9. '<w' → logprob: -15.02634334564209
    10. '[w' → logprob: -15.52634334564209

Token 396: ' n' (ID: 297)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0486053042113781
    2. ' w' → logprob: -3.04860520362854
    3. '[w' → logprob: -12.173604965209961
    4. '=w' → logprob: -12.423604965209961
    5. '<w' → logprob: -12.673604965209961
    6. '(w' → logprob: -13.173604965209961
    7. ' not' → logprob: -13.673604965209961
    8. '#' → logprob: -14.048604965209961
    9. ']' → logprob: -15.298604965209961
    10. '   ' → logprob: -15.423604965209961

Token 397: ''est' (ID: 6616)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9926190376281738
    2. ' w' → logprob: -0.9926190376281738
    3. 'n' → logprob: -3.117619037628174
    4. ' n' → logprob: -3.117619037628174
    5. 'e' → logprob: -3.242619037628174
    6. ''est' → logprob: -3.492619037628174
    7. 'a' → logprob: -3.742619037628174
    8. ' pas' → logprob: -4.617619037628174
    9. 'pas' → logprob: -4.867619037628174
    10. '['' → logprob: -4.992619037628174

Token 398: ' PAS' (ID: 66794)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0013389317318797112
    2. ' pas' → logprob: -6.751338958740234
    3. 'w' → logprob: -10.001338958740234
    4. '_pas' → logprob: -10.251338958740234
    5. '(w' → logprob: -10.751338958740234
    6. '#' → logprob: -10.876338958740234
    7. '#w' → logprob: -11.501338958740234
    8. 'Pas' → logprob: -11.751338958740234
    9. '[w' → logprob: -12.126338958740234
    10. '   ' → logprob: -12.251338958740234

Token 399: ' la' (ID: 557)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.9236918091773987
    2. 'la' → logprob: -1.048691749572754
    3. 'w' → logprob: -2.298691749572754
    4. 'le' → logprob: -2.423691749572754
    5. ' la' → logprob: -2.923691749572754
    6. ' (' → logprob: -5.048691749572754
    7. ' le' → logprob: -6.173691749572754
    8. '(le' → logprob: -8.298691749572754
    9. '((' → logprob: -8.673691749572754
    10. '(' → logprob: -8.673691749572754

Token 400: ' dernière' (ID: 39497)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.03168569132685661
    2. 'dern' → logprob: -3.9066855907440186
    3. ' dernière' → logprob: -5.156685829162598
    4. 'col' → logprob: -5.781685829162598
    5. 'last' → logprob: -7.281685829162598
    6. '#' → logprob: -7.281685829162598
    7. 'Dern' → logprob: -7.656685829162598
    8. 'case' → logprob: -9.156685829162598
    9. ' derni' → logprob: -9.281685829162598
    10. 'ligne' → logprob: -9.406685829162598

Token 401: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.1683868169784546
    2. ' colonne' → logprob: -2.043386936187744
    3. 'w' → logprob: -3.918386936187744
    4. 'column' → logprob: -6.168386936187744
    5. 'case' → logprob: -7.543386936187744
    6. ' col' → logprob: -7.543386936187744
    7. '(w' → logprob: -7.543386936187744
    8. ' (' → logprob: -8.168386459350586
    9. ' case' → logprob: -8.293386459350586
    10. ' w' → logprob: -8.543386459350586

Token 402: ' de' (ID: 334)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19432583451271057
    2. ':' → logprob: -2.4443259239196777
    3. 'and' → logprob: -2.4443259239196777
    4. ' :' → logprob: -6.694325923919678
    5. ' ' → logprob: -7.694325923919678
    6. 'if' → logprob: -7.944325923919678
    7. 'w' → logprob: -8.31932544708252
    8. ',' → logprob: -8.56932544708252
    9. ' if' → logprob: -9.06932544708252
    10. '   ' → logprob: -9.06932544708252

Token 403: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.1874811351299286
    2. ' la' → logprob: -1.812481164932251
    3. 'W' → logprob: -5.437480926513672
    4. 'w' → logprob: -6.312480926513672
    5. 'range' → logprob: -6.812480926513672
    6. ' range' → logprob: -8.687480926513672
    7. 'l' → logprob: -9.312480926513672
    8. 'the' → logprob: -9.687480926513672
    9. ' W' → logprob: -9.812480926513672
    10. 'a' → logprob: -11.187480926513672

Token 404: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.39681363105773926
    2. 'range' → logprob: -2.1468136310577393
    3. 'w' → logprob: -2.3968136310577393
    4. ' ligne' → logprob: -3.3968136310577393
    5. 'gr' → logprob: -3.6468136310577393
    6. 'row' → logprob: -3.7718136310577393
    7. 'for' → logprob: -3.7718136310577393
    8. 'rang' → logprob: -5.64681339263916
    9. 'grid' → logprob: -5.89681339263916
    10. ' range' → logprob: -6.02181339263916

Token 405: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.35609474778175354
    2. ':' → logprob: -1.7310947179794312
    3. '           ' → logprob: -2.6060948371887207
    4. 'and' → logprob: -3.7310948371887207
    5. '               ' → logprob: -5.106094837188721
    6. '   ' → logprob: -5.606094837188721
    7. ' if' → logprob: -5.856094837188721
    8. 'if' → logprob: -5.981094837188721
    9. '       ' → logprob: -6.231094837188721
    10. ' et' → logprob: -6.231094837188721

Token 406: 'w' (ID: 86)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.25203314423561096
    2. 'w' → logprob: -1.5020331144332886
    3. 'W' → logprob: -9.752033233642578
    4. ' W' → logprob: -11.502033233642578
    5. '   ' → logprob: -11.752033233642578
    6. '           ' → logprob: -11.877033233642578
    7. ')' → logprob: -12.127033233642578
    8. '(w' → logprob: -12.627033233642578
    9. '       ' → logprob: -12.752033233642578
    10. '    ' → logprob: -13.752033233642578

Token 407: ' n' (ID: 297)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5120843052864075
    2. '<' → logprob: -1.1370842456817627
    3. '+' → logprob: -3.3870842456817627
    4. ')' → logprob: -3.8870842456817627
    5. ' !=' → logprob: -4.012084484100342
    6. ' +' → logprob: -5.387084484100342
    7. '!=' → logprob: -6.762084484100342
    8. ' ' → logprob: -7.887084484100342
    9. '<w' → logprob: -8.637084007263184
    10. 'w' → logprob: -8.887084007263184

Token 408: ''est' (ID: 6616)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1315384954214096
    2. ' <' → logprob: -2.8815383911132812
    3. '+' → logprob: -3.3815383911132812
    4. ' !=' → logprob: -4.006538391113281
    5. '!=' → logprob: -4.381538391113281
    6. ']' → logprob: -7.381538391113281
    7. '=' → logprob: -8.631538391113281
    8. ')' → logprob: -8.756538391113281
    9. '<n' → logprob: -8.881538391113281
    10. '<w' → logprob: -9.006538391113281

Token 409: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.128204807639122
    2. ' not' → logprob: -2.628204822540283
    3. 'pas' → logprob: -3.503204822540283
    4. 'not' → logprob: -5.003204822540283
    5. '=' → logprob: -5.128204822540283
    6. '_pas' → logprob: -6.378204822540283
    7. '0' → logprob: -7.003204822540283
    8. '<' → logprob: -7.253204822540283
    9. '<|end|>' → logprob: -7.378204822540283
    10. 'Pas' → logprob: -8.128204345703125

Token 410: ' égal' (ID: 15059)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.2519652247428894
    2. ' W' → logprob: -1.5019652843475342
    3. '=W' → logprob: -11.001965522766113
    4. '=' → logprob: -12.001965522766113
    5. '==' → logprob: -12.126965522766113
    6. ' ==' → logprob: -13.501965522766113
    7. ' =' → logprob: -13.626965522766113
    8. '(W' → logprob: -13.876965522766113
    9. ' (' → logprob: -13.876965522766113
    10. '	W' → logprob: -14.126965522766113

Token 411: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1381532847881317
    2. 'à' → logprob: -2.763153314590454
    3. 'to' → logprob: -3.638153314590454
    4. 'W' → logprob: -4.013153076171875
    5. ' to' → logprob: -5.013153076171875
    6. ')' → logprob: -5.013153076171875
    7. ' W' → logprob: -6.138153076171875
    8. '           ' → logprob: -6.888153076171875
    9. '   ' → logprob: -6.888153076171875
    10. ',' → logprob: -7.263153076171875

Token 412: ' l' (ID: 305)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.029761601239442825
    2. ' W' → logprob: -3.529761552810669
    3. '   ' → logprob: -11.65476131439209
    4. ' ' → logprob: -13.90476131439209
    5. '	W' → logprob: -14.65476131439209
    6. ')' → logprob: -15.02976131439209
    7. '(W' → logprob: -15.15476131439209
    8. '```' → logprob: -16.029762268066406
    9. '  ' → logprob: -16.529762268066406
    10. '           ' → logprob: -16.654762268066406

Token 413: ''ind' (ID: 82245)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.05190179869532585
    2. ' W' → logprob: -3.1769018173217773
    3. '-' → logprob: -4.801901817321777
    4. '   ' → logprob: -7.926901817321777
    5. ' -' → logprob: -8.301901817321777
    6. ' ' → logprob: -11.801901817321777
    7. '	W' → logprob: -11.801901817321777
    8. '+' → logprob: -12.176901817321777
    9. '(W' → logprob: -12.551901817321777
    10. '[' → logprob: -12.801901817321777

Token 414: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0017427700804546475
    2. 'e' → logprob: -6.751742839813232
    3. 'ice' → logprob: -7.626742839813232
    4. 'ices' → logprob: -11.001742362976074
    5. 'W' → logprob: -11.251742362976074
    6. 'é' → logprob: -11.501742362976074
    7. 'exe' → logprob: -11.501742362976074
    8. 'es' → logprob: -12.501742362976074
    9. 'x' → logprob: -12.626742362976074
    10. 'eks' → logprob: -13.001742362976074

Token 415: ' maximal' (ID: 65414)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.03903539478778839
    2. ' W' → logprob: -3.2890353202819824
    3. '   ' → logprob: -7.039035320281982
    4. '(W' → logprob: -10.78903579711914
    5. ' ' → logprob: -11.03903579711914
    6. ')' → logprob: -11.16403579711914
    7. '       ' → logprob: -11.41403579711914
    8. '  ' → logprob: -12.16403579711914
    9. '           ' → logprob: -12.16403579711914
    10. '    ' → logprob: -12.41403579711914

Token 416: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.445720374584198
    2. ' W' → logprob: -1.0707204341888428
    3. ')' → logprob: -4.695720195770264
    4. '   ' → logprob: -5.070720195770264
    5. '(W' → logprob: -7.945720195770264
    6. ' de' → logprob: -8.570720672607422
    7. ' ' → logprob: -8.570720672607422
    8. '       ' → logprob: -8.820720672607422
    9. '           ' → logprob: -8.820720672607422
    10. '):' → logprob: -9.695720672607422

Token 417: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759562253952026
    2. ' -' → logprob: -0.8259562253952026
    3. ')' → logprob: -12.075956344604492
    4. ' ' → logprob: -12.325956344604492
    5. ' ' → logprob: -12.700956344604492
    6. '1' → logprob: -13.450956344604492
    7. '()-' → logprob: -14.700956344604492
    8. 'w' → logprob: -15.075956344604492
    9. '```' → logprob: -15.450956344604492
    10. '()' → logprob: -15.450956344604492

Token 418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '-' → logprob: -15.625019073486328
    4. '```' → logprob: -15.625019073486328
    5. '   ' → logprob: -17.125019073486328
    6. '2' → logprob: -18.625019073486328
    7. '
' → logprob: -19.000019073486328
    8. ' -' → logprob: -19.125019073486328
    9. '１' → logprob: -19.375019073486328
    10. '  ' → logprob: -19.875019073486328

Token 419: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026527050882577896
    2. ')' → logprob: -4.526526927947998
    3. ' and' → logprob: -5.026526927947998
    4. ' ):' → logprob: -5.026526927947998
    5. '):
' → logprob: -6.526526927947998
    6. 'and' → logprob: -8.526527404785156
    7. '           ' → logprob: -8.526527404785156
    8. ' )' → logprob: -8.526527404785156
    9. ':' → logprob: -9.276527404785156
    10. ' ):
' → logprob: -10.526527404785156

Token 420: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2102562040090561
    2. '               ' → logprob: -2.2102560997009277
    3. '           ' → logprob: -2.5852560997009277
    4. ',' → logprob: -6.085256099700928
    5. ':
' → logprob: -7.210256099700928
    6. ' and' → logprob: -7.460256099700928
    7. ' :' → logprob: -7.835256099700928
    8. '):' → logprob: -8.585256576538086
    9. '       ' → logprob: -9.210256576538086
    10. ')' → logprob: -10.085256576538086

Token 421: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8354709148406982
    2. '           ' → logprob: -1.3354709148406982
    3. 'if' (adapté à ' if') → logprob: -1.3354709148406982
    4. '               ' → logprob: -3.3354709148406982
    5. '       ' → logprob: -6.210471153259277
    6. ':' → logprob: -7.085471153259277
    7. '            ' → logprob: -7.210471153259277
    8. 'w' → logprob: -7.835471153259277
    9. ' w' → logprob: -8.835471153259277
    10. '   ' → logprob: -8.960471153259277

Token 422: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.3869061768054962
    2. 'w' → logprob: -1.1369061470031738
    3. '   ' → logprob: -11.011906623840332
    4. ' ' → logprob: -12.136906623840332
    5. '(w' → logprob: -12.636906623840332
    6. '	w' → logprob: -12.761906623840332
    7. ' ' → logprob: -12.761906623840332
    8. '    ' → logprob: -14.011906623840332
    9. '<w' → logprob: -14.011906623840332
    10. 'W' → logprob: -14.261906623840332

Token 423: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11330768465995789
    2. '!=' → logprob: -2.7383077144622803
    3. ' !=' → logprob: -3.8633077144622803
    4. ' <' → logprob: -3.8633077144622803
    5. '+' → logprob: -8.11330795288086
    6. '<w' → logprob: -10.11330795288086
    7. '<W' → logprob: -10.61330795288086
    8. ' ' → logprob: -10.98830795288086
    9. '<len' → logprob: -10.98830795288086
    10. '[' → logprob: -12.11330795288086

Token 424: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.048601001501083374
    2. ' W' → logprob: -3.048600912094116
    3. '   ' → logprob: -11.798601150512695
    4. ' ' → logprob: -12.923601150512695
    5. '(W' → logprob: -14.173601150512695
    6. '0' → logprob: -14.173601150512695
    7. '	W' → logprob: -14.173601150512695
    8. ' (' → logprob: -14.423601150512695
    9. '  ' → logprob: -15.048601150512695
    10. '    ' → logprob: -15.923601150512695

Token 425: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0017036291537806392
    2. ' -' → logprob: -6.37670373916626
    3. '1' → logprob: -14.001703262329102
    4. '–' → logprob: -15.876703262329102
    5. '   ' → logprob: -16.0017032623291
    6. ' ' → logprob: -16.2517032623291
    7. '−' → logprob: -16.3767032623291
    8. '           ' → logprob: -16.6267032623291
    9. '#' → logprob: -17.1267032623291
    10. '       ' → logprob: -17.2517032623291

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '-' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '```' → logprob: -18.250001907348633
    6. '2' → logprob: -19.500001907348633
    7. '１' → logprob: -19.875001907348633
    8. '
' → logprob: -20.375001907348633
    9. '  ' → logprob: -21.062501907348633
    10. '       ' → logprob: -21.187501907348633

Token 427: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10110308229923248
    2. ':
' → logprob: -2.3511030673980713
    3. '               ' → logprob: -7.97610330581665
    4. ' and' → logprob: -8.101102828979492
    5. '           ' → logprob: -8.601102828979492
    6. ' :' → logprob: -11.226102828979492
    7. ',' → logprob: -11.351102828979492
    8. ':
' → logprob: -11.476102828979492
    9. ' :
' → logprob: -12.101102828979492
    10. 'and' → logprob: -12.101102828979492

Token 428: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013189408928155899
    2. 'a' → logprob: -5.388189315795898
    3. ' a' → logprob: -5.388189315795898
    4. '           ' → logprob: -5.888189315795898
    5. ':' → logprob: -7.138189315795898
    6. '#' → logprob: -9.388189315795898
    7. '                
' → logprob: -9.513189315795898
    8. ',' → logprob: -9.638189315795898
    9. ':
' → logprob: -10.388189315795898
    10. '[' → logprob: -11.263189315795898

Token 429: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.914303183555603
    2. '               ' → logprob: -0.914303183555603
    3. ' a' → logprob: -2.2893033027648926
    4. '#' (adapté à ' #') → logprob: -3.2893033027648926
    5. '                   ' → logprob: -3.7893033027648926
    6. '           ' → logprob: -3.9143033027648926
    7. ' ans' → logprob: -4.914303302764893
    8. '                ' → logprob: -5.914303302764893
    9. ' #' → logprob: -6.039303302764893
    10. '                
' → logprob: -6.164303302764893

Token 430: ' In' (ID: 730)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01530629862099886
    2. '#' → logprob: -4.26530647277832
    3. '               ' → logprob: -8.14030647277832
    4. 'ans' → logprob: -8.14030647277832
    5. 'cnt' → logprob: -8.26530647277832
    6. '                   ' → logprob: -8.39030647277832
    7. ' a' → logprob: -10.64030647277832
    8. 'move' → logprob: -11.39030647277832
    9. 'next' → logprob: -12.01530647277832
    10. '#a' → logprob: -12.26530647277832

Token 431: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.5790273547172546
    2. 'crement' → logprob: -0.9540273547172546
    3. 'a' → logprob: -4.07902717590332
    4. 'cre' → logprob: -4.45402717590332
    5. 'cré' → logprob: -4.70402717590332
    6. 'c' → logprob: -4.82902717590332
    7. 'crements' → logprob: -6.70402717590332
    8. '   ' → logprob: -6.70402717590332
    9. '#' → logprob: -6.82902717590332
    10. 'it' → logprob: -6.82902717590332

Token 432: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.8632679581642151
    2. '               ' → logprob: -1.6132678985595703
    3. 'ement' → logprob: -1.8632678985595703
    4. 'cnt' → logprob: -2.4882678985595703
    5. 'é' → logprob: -2.9882678985595703
    6. '                   ' → logprob: -3.3632678985595703
    7. 'rement' → logprob: -3.8632678985595703
    8. 'ment' → logprob: -4.86326789855957
    9. ' cnt' → logprob: -4.98826789855957
    10. '   ' → logprob: -5.36326789855957

Token 433: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.22786317765712738
    2. 'a' → logprob: -2.727863073348999
    3. ' a' → logprob: -2.977863073348999
    4. '               ' → logprob: -2.977863073348999
    5. '                   ' → logprob: -3.477863073348999
    6. 'cnt' → logprob: -5.977863311767578
    7. ' cnt' → logprob: -6.852863311767578
    8. '           ' → logprob: -7.477863311767578
    9. ' ans' → logprob: -7.977863311767578
    10. '   ' → logprob: -8.102863311767578

Token 434: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00012308525037951767
    2. ' a' → logprob: -9.625123023986816
    3. '               ' → logprob: -10.875123023986816
    4. '                   ' → logprob: -10.875123023986816
    5. 'cnt' → logprob: -11.250123023986816
    6. '   ' → logprob: -12.500123023986816
    7. '           ' → logprob: -13.375123023986816
    8. '1' → logprob: -16.375123977661133
    9. '	a' → logprob: -16.500123977661133
    10. 'ans' → logprob: -16.500123977661133

Token 435: ' compteur' (ID: 163344)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0020309460815042257
    2. 'cnt' → logprob: -6.252030849456787
    3. ' a' → logprob: -9.627031326293945
    4. 'nombre' → logprob: -11.377031326293945
    5. 'c' → logprob: -11.877031326293945
    6. 'counter' → logprob: -13.127031326293945
    7. 'comp' → logprob: -13.127031326293945
    8. ' compteur' → logprob: -13.377031326293945
    9. 'w' → logprob: -13.627031326293945
    10. '#' → logprob: -13.627031326293945

Token 436: ' de' (ID: 334)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.053465310484170914
    2. '               ' → logprob: -3.0534653663635254
    3. ' cnt' → logprob: -5.553465366363525
    4. '(cnt' → logprob: -7.928465366363525
    5. '[cnt' → logprob: -8.303464889526367
    6. '                   ' → logprob: -8.553464889526367
    7. '           ' → logprob: -9.803464889526367
    8. '	cnt' → logprob: -9.928464889526367
    9. '1' → logprob: -10.678464889526367
    10. '   ' → logprob: -11.178464889526367

Token 437: ' mouvements' (ID: 119420)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0017731155967339873
    2. '1' → logprob: -6.376772880554199
    3. ' cnt' → logprob: -9.7517728805542
    4. 'cn' → logprob: -12.6267728805542
    5. 'w' → logprob: -13.1267728805542
    6. 'c' → logprob: -13.5017728805542
    7. '   ' → logprob: -14.0017728805542
    8. '	cnt' → logprob: -14.0017728805542
    9. ' ' → logprob: -14.5017728805542
    10. 'a' → logprob: -14.5017728805542

Token 438: ' car' (ID: 1669)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.44090113043785095
    2. '               ' → logprob: -1.0659011602401733
    3. '                   ' → logprob: -5.065901279449463
    4. ' cnt' → logprob: -5.315901279449463
    5. '1' → logprob: -8.315900802612305
    6. '           ' → logprob: -8.690900802612305
    7. '[cnt' → logprob: -8.815900802612305
    8. '   ' → logprob: -9.440900802612305
    9. '                ' → logprob: -9.815900802612305
    10. '(cnt' → logprob: -9.940900802612305

Token 439: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4363139569759369
    2. 'cnt' → logprob: -1.8113139867782593
    3. ' a' → logprob: -2.1863138675689697
    4. '               ' → logprob: -3.3113138675689697
    5. ' cnt' → logprob: -3.5613138675689697
    6. '1' → logprob: -6.061314105987549
    7. '           ' → logprob: -6.186314105987549
    8. '                   ' → logprob: -6.686314105987549
    9. '   ' → logprob: -6.686314105987549
    10. ' ' → logprob: -7.436314105987549

Token 440: ' va' (ID: 3423)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -1.0138390064239502
    2. 'a' → logprob: -1.7638390064239502
    3. 'effect' → logprob: -2.01383900642395
    4. '               ' → logprob: -2.13883900642395
    5. ' dé' → logprob: -3.01383900642395
    6. ' va' → logprob: -3.26383900642395
    7. 'va' → logprob: -3.26383900642395
    8. ' a' → logprob: -3.88883900642395
    9. ' effect' → logprob: -4.013838768005371
    10. '           ' → logprob: -4.388838768005371

Token 441: ' effectuer' (ID: 98625)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.6085028648376465
    2. 'effect' → logprob: -2.2335028648376465
    3. 'trans' → logprob: -2.3585028648376465
    4. 'a' → logprob: -2.7335028648376465
    5. 'faire' → logprob: -2.7335028648376465
    6. ' déplacer' → logprob: -3.2335028648376465
    7. ' effectuer' → logprob: -3.6085028648376465
    8. '   ' → logprob: -4.3585028648376465
    9. 'aj' → logprob: -4.8585028648376465
    10. ' ' → logprob: -5.7335028648376465

Token 442: ' une' (ID: 2463)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5191951394081116
    2. 'un' → logprob: -1.6441950798034668
    3. 'une' → logprob: -2.269195079803467
    4. 'cnt' → logprob: -3.519195079803467
    5. ' une' → logprob: -4.019195079803467
    6. ' un' → logprob: -4.019195079803467
    7. 'a' → logprob: -4.394195079803467
    8. ' ' → logprob: -4.769195079803467
    9. '               ' → logprob: -5.269195079803467
    10. 'd' → logprob: -5.269195079803467

Token 443: ' opération' (ID: 86023)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.983370304107666
    2. 'm' → logprob: -1.608370304107666
    3. 'move' → logprob: -1.733370304107666
    4. 'trans' → logprob: -2.608370304107666
    5. 'a' → logprob: -2.983370304107666
    6. 'pass' → logprob: -3.608370304107666
    7. 'cnt' → logprob: -4.108370304107666
    8. 'action' → logprob: -4.358370304107666
    9. ' déplacement' → logprob: -4.733370304107666
    10. 'p' → logprob: -4.733370304107666

Token 444: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5627028346061707
    2. 'cnt' → logprob: -0.9377028346061707
    3. ' cnt' → logprob: -4.312702655792236
    4. '                   ' → logprob: -4.937702655792236
    5. '                
' → logprob: -5.312702655792236
    6. '                ' → logprob: -5.562702655792236
    7. 'a' → logprob: -6.187702655792236
    8. ',' → logprob: -6.437702655792236
    9. '1' → logprob: -6.562702655792236
    10. '[cnt' → logprob: -7.187702655792236

Token 445: '               ' (ID: 506)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.6811819076538086
    2. 'a' → logprob: -1.4311819076538086
    3. '               ' → logprob: -1.5561819076538086
    4. ' cnt' → logprob: -3.6811819076538086
    5. ' a' → logprob: -4.431181907653809
    6. '                   ' → logprob: -5.306181907653809
    7. '                ' → logprob: -7.556181907653809
    8. '           ' → logprob: -7.931181907653809
    9. '                
' → logprob: -8.181181907653809
    10. '1' → logprob: -8.931181907653809

Token 446: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.04888245463371277
    2. ' cnt' → logprob: -3.048882484436035
    3. '               ' → logprob: -8.173882484436035
    4. '                   ' → logprob: -12.423882484436035
    5. '1' → logprob: -12.673882484436035
    6. '	cnt' → logprob: -13.173882484436035
    7. '[cnt' → logprob: -13.923882484436035
    8. '           ' → logprob: -13.923882484436035
    9. '(cnt' → logprob: -14.048882484436035
    10. '                ' → logprob: -14.673882484436035

Token 447: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38701120018959045
    2. '+=' → logprob: -1.137011170387268
    3. '=' → logprob: -9.137011528015137
    4. '+' → logprob: -11.262011528015137
    5. ' =' → logprob: -11.387011528015137
    6. '               ' → logprob: -12.262011528015137
    7. '                   ' → logprob: -13.262011528015137
    8. '                ' → logprob: -14.012011528015137
    9. ']+=' → logprob: -15.012011528015137
    10. '           ' → logprob: -16.01201057434082

Token 448: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.62502670288086
    4. '１' → logprob: -20.25002670288086
    5. '  ' → logprob: -22.00002670288086
    6. ' ' → logprob: -22.37502670288086
    7. '+' → logprob: -22.50002670288086
    8. '```' → logprob: -22.87502670288086
    9. '           ' → logprob: -23.00002670288086
    10. '    ' → logprob: -23.31252670288086

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -20.0
    4. '１' → logprob: -20.875
    5. '```' → logprob: -21.125
    6. '۱' → logprob: -22.5
    7. '१' → logprob: -22.5
    8. '১' → logprob: -22.5625
    9. '  ' → logprob: -22.5625
    10. '+' → logprob: -22.625

Token 450: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003212649840861559
    2. ' ans' → logprob: -6.7532124519348145
    3. '                
' → logprob: -6.8782124519348145
    4. ' a' → logprob: -7.5032124519348145
    5. '                ' → logprob: -8.753212928771973
    6. 'a' → logprob: -10.003212928771973
    7. '           ' → logprob: -10.378212928771973
    8. ',' → logprob: -10.378212928771973
    9. ' 
' → logprob: -10.628212928771973
    10. '                   ' → logprob: -10.878212928771973

Token 451: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08448184281587601
    2. ' a' → logprob: -3.334481954574585
    3. ' ans' → logprob: -3.584481954574585
    4. '                
' → logprob: -4.834481716156006
    5. 'a' → logprob: -5.459481716156006
    6. ' 
' → logprob: -6.459481716156006
    7. '                ' → logprob: -6.709481716156006
    8. ' ' → logprob: -7.209481716156006
    9. '           ' → logprob: -7.959481716156006
    10. 'ans' → logprob: -8.334482192993164

Token 452: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0700211226940155
    2. 'ans' → logprob: -3.320021152496338
    3. '               ' → logprob: -3.570021152496338
    4. '                   ' → logprob: -7.070021152496338
    5. ' ans' → logprob: -7.070021152496338
    6. '#' (adapté à ' #') → logprob: -7.320021152496338
    7. ' a' → logprob: -7.445021152496338
    8. '           ' → logprob: -8.44502067565918
    9. '                ' → logprob: -9.94502067565918
    10. 'next' → logprob: -10.69502067565918

Token 453: ' En' (ID: 2130)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009139076806604862
    2. 'ans' → logprob: -5.134139060974121
    3. '#' → logprob: -5.759139060974121
    4. '               ' → logprob: -11.634139060974121
    5. 'aj' → logprob: -11.884139060974121
    6. 'Ajouter' → logprob: -11.884139060974121
    7. 'A' → logprob: -12.384139060974121
    8. '           ' → logprob: -12.634139060974121
    9. '#a' → logprob: -13.009139060974121
    10. ' a' → logprob: -13.134139060974121

Token 454: 'registrer' (ID: 192246)
  Prédit: 'registrer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'registrer' → logprob: -0.04083486646413803
    2. 'register' → logprob: -4.290834903717041
    3. 'lever' → logprob: -4.665834903717041
    4. 'append' → logprob: -5.415834903717041
    5. 'ans' → logprob: -5.790834903717041
    6. 'a' → logprob: -6.040834903717041
    7. 'reg' → logprob: -6.290834903717041
    8. 't' → logprob: -6.665834903717041
    9. '.append' → logprob: -6.790834903717041
    10. 's' → logprob: -7.290834903717041

Token 455: ' ce' (ID: 2357)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10772562026977539
    2. 'ans' → logprob: -2.4827256202697754
    3. '(ans' → logprob: -4.357725620269775
    4. '[h' → logprob: -5.482725620269775
    5. '   ' → logprob: -7.357725620269775
    6. ' [' → logprob: -7.732725620269775
    7. '[a' → logprob: -8.607725143432617
    8. '([' → logprob: -9.107725143432617
    9. ' ans' → logprob: -10.107725143432617
    10. '[w' → logprob: -10.107725143432617

Token 456: ' mouvement' (ID: 62236)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.5149277448654175
    2. '[' → logprob: -2.014927864074707
    3. 'ans' → logprob: -2.264927864074707
    4. ' [' → logprob: -2.264927864074707
    5. ' ans' → logprob: -3.139927864074707
    6. 'm' → logprob: -5.389927864074707
    7. ' mouvement' → logprob: -5.514927864074707
    8. '[a' → logprob: -6.139927864074707
    9. '[m' → logprob: -6.389927864074707
    10. '   ' → logprob: -6.889927864074707

Token 457: ' :' (ID: 712)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5830597281455994
    2. ' ans' → logprob: -1.4580597877502441
    3. 'ans' → logprob: -2.208059787750244
    4. ',' → logprob: -2.708059787750244
    5. '[' → logprob: -4.083059787750244
    6. ' =' → logprob: -4.833059787750244
    7. '
' → logprob: -6.333059787750244
    8. '           ' → logprob: -6.708059787750244
    9. '(ans' → logprob: -6.833059787750244
    10. ' ,' → logprob: -7.208059787750244

Token 458: ' on' (ID: 402)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7403599619865417
    2. 'ans' → logprob: -1.3653600215911865
    3. '[h' → logprob: -1.3653600215911865
    4. ' ans' → logprob: -4.740359783172607
    5. ' [' → logprob: -6.365359783172607
    6. '               ' → logprob: -6.865359783172607
    7. 'h' → logprob: -7.490359783172607
    8. '           ' → logprob: -9.115360260009766
    9. '(ans' → logprob: -9.240360260009766
    10. '   ' → logprob: -9.615360260009766

Token 459: ' dé' (ID: 2393)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.9969332218170166
    2. 'ans' → logprob: -1.2469332218170166
    3. '.append' → logprob: -1.4969332218170166
    4. ' ans' → logprob: -2.8719332218170166
    5. ' append' → logprob: -2.8719332218170166
    6. '[' → logprob: -6.6219329833984375
    7. 'app' → logprob: -6.7469329833984375
    8. ' ajoute' → logprob: -6.9969329833984375
    9. 'a' → logprob: -7.3719329833984375
    10. '#' → logprob: -7.7469329833984375

Token 460: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.004538350272923708
    2. '[' → logprob: -5.754538536071777
    3. 'f' → logprob: -7.254538536071777
    4. 'pose' → logprob: -7.754538536071777
    5. 'p' → logprob: -9.379538536071777
    6. 'pla' → logprob: -10.379538536071777
    7. 'pl' → logprob: -11.379538536071777
    8. 'c' → logprob: -11.379538536071777
    9. 'pile' → logprob: -11.379538536071777
    10. 'cale' → logprob: -11.879538536071777

Token 461: ' ' (ID: 220)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03969176486134529
    2. ' h' → logprob: -3.539691686630249
    3. '[h' → logprob: -4.664691925048828
    4. '1' → logprob: -8.664691925048828
    5. '[' → logprob: -9.414691925048828
    6. 'a' → logprob: -9.914691925048828
    7. ',' → logprob: -9.914691925048828
    8. '   ' → logprob: -10.289691925048828
    9. '(h' → logprob: -10.664691925048828
    10. ' [' → logprob: -11.164691925048828

Token 462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.032725121825933456
    2. 'un' → logprob: -3.6577250957489014
    3. 'une' → logprob: -5.7827253341674805
    4. 'l' → logprob: -6.7827253341674805
    5. 'le' → logprob: -6.9077253341674805
    6. ' ' → logprob: -7.9077253341674805
    7. 'a' → logprob: -8.28272533416748
    8. 'de' → logprob: -9.03272533416748
    9. 'la' → logprob: -9.15772533416748
    10. 'from' → logprob: -9.28272533416748

Token 463: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15391279757022858
    2. 'from' → logprob: -3.6539127826690674
    3. 'a' → logprob: -4.1539130210876465
    4. ' from' → logprob: -4.2789130210876465
    5. ' ' → logprob: -4.4039130210876465
    6. '[' → logprob: -4.4039130210876465
    7. '<|end|>' → logprob: -4.4039130210876465
    8. 'coin' → logprob: -4.5289130210876465
    9. ' ,' → logprob: -5.0289130210876465
    10. ']' → logprob: -5.5289130210876465

Token 464: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016120117157697678
    2. '[a' → logprob: -5.141119956970215
    3. 'la' → logprob: -5.641119956970215
    4. 'case' → logprob: -6.891119956970215
    5. 'l' → logprob: -6.891119956970215
    6. ' a' → logprob: -7.141119956970215
    7. '(a' → logprob: -7.141119956970215
    8. 'position' → logprob: -7.266119956970215
    9. ' la' → logprob: -7.516119956970215
    10. 'h' → logprob: -7.516119956970215

Token 465: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.005340251140296459
    2. 'position' → logprob: -5.880340099334717
    3. 'cell' → logprob: -6.880340099334717
    4. 'a' → logprob: -7.005340099334717
    5. ' case' → logprob: -8.380340576171875
    6. 'val' → logprob: -8.880340576171875
    7. 'pile' → logprob: -10.255340576171875
    8. ' cellule' → logprob: -10.255340576171875
    9. 'h' → logprob: -10.380340576171875
    10. 'cases' → logprob: -10.630340576171875

Token 466: ' (' (ID: 350)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.18014630675315857
    2. 'h' → logprob: -1.805146336555481
    3. ' h' → logprob: -9.055146217346191
    4. ',' → logprob: -9.180146217346191
    5. '(h' → logprob: -9.305146217346191
    6. ' [' → logprob: -9.805146217346191
    7. '[' → logprob: -10.680146217346191
    8. '   ' → logprob: -12.180146217346191
    9. ',h' → logprob: -13.430146217346191
    10. ' (' → logprob: -13.430146217346191

Token 467: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00020890454470645636
    2. ' h' → logprob: -8.500208854675293
    3. '[h' → logprob: -12.250208854675293
    4. '   ' → logprob: -14.625208854675293
    5. ',' → logprob: -15.875208854675293
    6. '(h' → logprob: -16.75020980834961
    7. ',h' → logprob: -17.12520980834961
    8. '	h' → logprob: -17.87520980834961
    9. '"h' → logprob: -18.00020980834961
    10. ')' → logprob: -18.37520980834961

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015340459533035755
    2. ',w' → logprob: -4.265340328216553
    3. ' ,' → logprob: -6.890340328216553
    4. 'w' → logprob: -9.265340805053711
    5. '[w' → logprob: -10.140340805053711
    6. ' w' → logprob: -11.265340805053711
    7. '   ' → logprob: -13.015340805053711
    8. '           ' → logprob: -13.515340805053711
    9. ')' → logprob: -13.515340805053711
    10. '[' → logprob: -13.515340805053711

Token 469: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.023245712742209435
    2. ' w' → logprob: -3.7732458114624023
    3. '	w' → logprob: -15.773245811462402
    4. '   ' → logprob: -16.273244857788086
    5. ' ' → logprob: -17.648244857788086
    6. ',w' → logprob: -18.023244857788086
    7. '    ' → logprob: -19.148244857788086
    8. '<w' → logprob: -19.273244857788086
    9. ''w' → logprob: -19.523244857788086
    10. '(w' → logprob: -19.523244857788086

Token 470: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6969093084335327
    2. ',' → logprob: -0.6969093084335327
    3. '),' → logprob: -5.946909427642822
    4. '+' → logprob: -7.446909427642822
    5. ' ,' → logprob: -7.946909427642822
    6. '   ' → logprob: -9.321908950805664
    7. '[' → logprob: -10.196908950805664
    8. ' )' → logprob: -10.821908950805664
    9. ',w' → logprob: -11.821908950805664
    10. ' +' → logprob: -11.946908950805664

Token 471: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001995250815525651
    2. ' ,' → logprob: -6.501995086669922
    3. ',w' → logprob: -8.501995086669922
    4. '               ' → logprob: -9.251995086669922
    5. '[' → logprob: -9.626995086669922
    6. 'w' → logprob: -10.626995086669922
    7. ',h' → logprob: -11.001995086669922
    8. '   ' → logprob: -11.001995086669922
    9. '           ' → logprob: -11.126995086669922
    10. '[h' → logprob: -11.501995086669922

Token 472: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04477735981345177
    2. ' h' → logprob: -3.6697773933410645
    3. '(h' → logprob: -4.1697773933410645
    4. '[h' → logprob: -5.9197773933410645
    5. ' (' → logprob: -8.919776916503906
    6. ' ' → logprob: -11.294776916503906
    7. '	h' → logprob: -12.294776916503906
    8. '(' → logprob: -12.544776916503906
    9. '<h' → logprob: -13.419776916503906
    10. ''h' → logprob: -13.419776916503906

Token 473: ' case' (ID: 1890)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.007453641388565302
    2. ' h' → logprob: -5.132453441619873
    3. '[h' → logprob: -7.132453441619873
    4. '(h' → logprob: -7.257453441619873
    5. ' (' → logprob: -12.257453918457031
    6. '	h' → logprob: -12.507453918457031
    7. ',h' → logprob: -12.757453918457031
    8. ',' → logprob: -13.382453918457031
    9. ' ' → logprob: -13.632453918457031
    10. '+h' → logprob: -14.007453918457031

Token 474: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.3892802298069
    2. '[h' → logprob: -1.1392802000045776
    3. ' (' → logprob: -6.264280319213867
    4. 'h' → logprob: -7.889280319213867
    5. ' h' → logprob: -9.639280319213867
    6. ',' → logprob: -10.639280319213867
    7. '[' → logprob: -11.014280319213867
    8. '(' → logprob: -11.389280319213867
    9. ' [' → logprob: -11.764280319213867
    10. ',h' → logprob: -13.889280319213867

Token 475: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.023282986134290695
    2. ' h' → logprob: -3.773283004760742
    3. '(h' → logprob: -10.773283004760742
    4. '[h' → logprob: -11.898283004760742
    5. ' ' → logprob: -12.523283004760742
    6. ' (' → logprob: -13.523283004760742
    7. ')' → logprob: -13.773283004760742
    8. '	h' → logprob: -14.023283004760742
    9. '   ' → logprob: -14.648283004760742
    10. ',h' → logprob: -14.773283004760742

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002886544680222869
    2. ' ,' → logprob: -5.877886772155762
    3. ',w' → logprob: -9.627886772155762
    4. ' ' → logprob: -12.627886772155762
    5. ')' → logprob: -12.627886772155762
    6. ',h' → logprob: -12.752886772155762
    7. '+' → logprob: -13.377886772155762
    8. '[' → logprob: -13.502886772155762
    9. ' w' → logprob: -13.877886772155762
    10. '   ' → logprob: -14.127886772155762

Token 477: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.2519479990005493
    2. 'w' → logprob: -1.5019479990005493
    3. '(w' → logprob: -11.626948356628418
    4. ' ' → logprob: -12.751948356628418
    5. ' (' → logprob: -13.126948356628418
    6. '   ' → logprob: -13.626948356628418
    7. '	w' → logprob: -13.751948356628418
    8. ' ' → logprob: -13.751948356628418
    9. '    ' → logprob: -14.501948356628418
    10. '{' → logprob: -15.376948356628418

Token 478: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004083266947418451
    2. ' +' → logprob: -5.504083156585693
    3. '   ' → logprob: -12.629083633422852
    4. '1' → logprob: -13.629083633422852
    5. ')+' → logprob: -15.754083633422852
    6. ' ' → logprob: -16.87908363342285
    7. '＋' → logprob: -17.37908363342285
    8. ')' → logprob: -18.00408363342285
    9. '```' → logprob: -18.12908363342285
    10. ''+' → logprob: -18.25408363342285

Token 479: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.750001907348633
    3. '+' → logprob: -14.500001907348633
    4. ')' → logprob: -16.375001907348633
    5. '```' → logprob: -17.000001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '`' → logprob: -20.125001907348633
    8. ' +' → logprob: -20.625001907348633
    9. '１' → logprob: -20.750001907348633
    10. ' )' → logprob: -21.375001907348633

Token 480: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1454758644104004
    2. ')' → logprob: -2.6454758644104004
    3. '               ' → logprob: -2.7704758644104004
    4. '           ' → logprob: -7.1454758644104
    5. ')
' → logprob: -7.7704758644104
    6. ']
' → logprob: -8.520475387573242
    7. '                   ' → logprob: -8.645475387573242
    8. ']' → logprob: -9.645475387573242
    9. ')`
' → logprob: -9.895475387573242
    10. '   ' → logprob: -11.145475387573242

Token 481: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016303325071930885
    2. 'ans' → logprob: -4.391303539276123
    3. ' ans' → logprob: -5.891303539276123
    4. '           ' → logprob: -7.016303539276123
    5. '       ' → logprob: -9.891303062438965
    6. '                   ' → logprob: -10.891303062438965
    7. '(ans' → logprob: -11.016303062438965
    8. '   ' → logprob: -11.141303062438965
    9. '```' → logprob: -11.266303062438965
    10. '	ans' → logprob: -12.266303062438965

Token 482: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0002908910100813955
    2. '               ' → logprob: -8.500290870666504
    3. ' ans' → logprob: -9.500290870666504
    4. '           ' → logprob: -11.875290870666504
    5. '   ' → logprob: -12.625290870666504
    6. '                   ' → logprob: -14.000290870666504
    7. '(ans' → logprob: -14.250290870666504
    8. '	ans' → logprob: -14.375290870666504
    9. '       ' → logprob: -15.375290870666504
    10. 'cnt' → logprob: -17.37529182434082

Token 483: ' Util' (ID: 13564)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0013816634891554713
    2. '               ' → logprob: -6.751381874084473
    3. ' ans' → logprob: -8.501381874084473
    4. '           ' → logprob: -12.751381874084473
    5. '                   ' → logprob: -12.751381874084473
    6. '   ' → logprob: -13.126381874084473
    7. '	ans' → logprob: -15.126381874084473
    8. '(ans' → logprob: -16.251380920410156
    9. '       ' → logprob: -16.626380920410156
    10. '                ' → logprob: -17.126380920410156

Token 484: 'isation' (ID: 6993)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.12889333069324493
    2. 'se' → logprob: -3.0038933753967285
    3. 's' → logprob: -3.2538933753967285
    4. 'iser' → logprob: -3.8788933753967285
    5. '#' → logprob: -5.3788933753967285
    6. '```' → logprob: -5.6288933753967285
    7. '   ' → logprob: -7.7538933753967285
    8. 'er' → logprob: -7.7538933753967285
    9. 'isant' → logprob: -7.7538933753967285
    10. 'ise' → logprob: -8.12889289855957

Token 485: ' de' (ID: 334)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.9977118372917175
    2. '.append' → logprob: -1.4977118968963623
    3. '                   ' → logprob: -2.1227118968963623
    4. 'de' → logprob: -3.1227118968963623
    5. 'ans' → logprob: -3.2477118968963623
    6. 'append' → logprob: -3.2477118968963623
    7. '               ' → logprob: -3.6227118968963623
    8. '('' → logprob: -3.6227118968963623
    9. '(ans' → logprob: -3.8727118968963623
    10. '           ' → logprob: -3.9977118968963623

Token 486: ' h' (ID: 312)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05906705930829048
    2. 'append' → logprob: -3.4340670108795166
    3. '1' → logprob: -4.684067249298096
    4. 'a' → logprob: -4.809067249298096
    5. '[' → logprob: -6.184067249298096
    6. '.append' → logprob: -6.434067249298096
    7. '"' → logprob: -7.434067249298096
    8. '(ans' → logprob: -7.434067249298096
    9. ' ans' → logprob: -7.559067249298096
    10. 'print' → logprob: -7.934067249298096

Token 487: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04493463784456253
    2. ' +' → logprob: -3.1699347496032715
    3. ',' → logprob: -6.4199347496032715
    4. '[h' → logprob: -8.294934272766113
    5. '[' → logprob: -11.294934272766113
    6. '+h' → logprob: -11.919934272766113
    7. ',h' → logprob: -12.044934272766113
    8. '   ' → logprob: -12.294934272766113
    9. '[w' → logprob: -12.419934272766113
    10. '```' → logprob: -12.544934272766113

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. ' ' → logprob: -11.62501335144043
    3. ',' → logprob: -12.87501335144043
    4. '[' → logprob: -14.75001335144043
    5. '```' → logprob: -15.00001335144043
    6. '   ' → logprob: -16.00001335144043
    7. '=' → logprob: -16.25001335144043
    8. '`' → logprob: -16.75001335144043
    9. '<|end|>' → logprob: -17.00001335144043
    10. '+' → logprob: -17.00001335144043

Token 489: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008588159107603133
    2. ',w' → logprob: -7.375858783721924
    3. ',h' → logprob: -9.125859260559082
    4. ')' → logprob: -10.375859260559082
    5. '<|end|>' → logprob: -10.750859260559082
    6. ' ,' → logprob: -10.875859260559082
    7. '[' → logprob: -11.625859260559082
    8. '),' → logprob: -11.750859260559082
    9. ',
' → logprob: -12.250859260559082
    10. ']' → logprob: -12.500859260559082

Token 490: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00248338864184916
    2. ' w' → logprob: -6.002483367919922
    3. '(w' → logprob: -13.002483367919922
    4. ',' → logprob: -13.127483367919922
    5. ',w' → logprob: -13.252483367919922
    6. 'W' → logprob: -15.252483367919922
    7. '```' → logprob: -15.252483367919922
    8. '1' → logprob: -15.377483367919922
    9. ''w' → logprob: -15.502483367919922
    10. ' (' → logprob: -16.002483367919922

Token 491: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0031846018973737955
    2. ' +' → logprob: -5.753184795379639
    3. '[' → logprob: -12.00318431854248
    4. '[h' → logprob: -15.00318431854248
    5. '+h' → logprob: -15.37818431854248
    6. '+w' → logprob: -16.503185272216797
    7. '＋' → logprob: -17.128185272216797
    8. ',' → logprob: -17.628185272216797
    9. '+[' → logprob: -17.878185272216797
    10. '[w' → logprob: -18.003185272216797

Token 492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -10.000066757202148
    3. '+' → logprob: -11.000066757202148
    4. 'w' → logprob: -12.625066757202148
    5. ' +' → logprob: -14.875066757202148
    6. ',' → logprob: -15.750066757202148
    7. '2' → logprob: -15.875066757202148
    8. '[' → logprob: -16.62506675720215
    9. '   ' → logprob: -16.62506675720215
    10. ' w' → logprob: -16.75006675720215

Token 493: ' car' (ID: 1669)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03043965995311737
    2. ')' → logprob: -3.655439615249634
    3. '),' → logprob: -5.780439853668213
    4. ',
' → logprob: -8.280439376831055
    5. 'print' → logprob: -9.030439376831055
    6. ']' → logprob: -9.030439376831055
    7. ' ,' → logprob: -9.280439376831055
    8. '<|end|>' → logprob: -9.405439376831055
    9. ');' → logprob: -9.655439376831055
    10. '[' → logprob: -10.030439376831055

Token 494: ' l' (ID: 305)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.20805343985557556
    2. 'l' → logprob: -1.958053469657898
    3. 'la' → logprob: -4.0830535888671875
    4. 'indices' → logprob: -4.7080535888671875
    5. 'le' → logprob: -4.9580535888671875
    6. ' les' → logprob: -5.2080535888671875
    7. '#' → logprob: -5.2080535888671875
    8. 'index' → logprob: -7.0830535888671875
    9. ' l' → logprob: -8.208053588867188
    10. 'Python' → logprob: -8.208053588867188

Token 495: ''' (ID: 6)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5346445441246033
    2. '#' → logprob: -1.659644603729248
    3. 'indices' → logprob: -2.534644603729248
    4. ' indices' → logprob: -3.284644603729248
    5. 'a' → logprob: -3.784644603729248
    6. ''h' → logprob: -3.909644603729248
    7. 'for' → logprob: -4.409644603729248
    8. 'indice' → logprob: -5.034644603729248
    9. '[h' → logprob: -5.034644603729248
    10. 'index' → logprob: -5.409644603729248

Token 496: 'én' (ID: 3289)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.32176095247268677
    2. 'indice' → logprob: -1.946760892868042
    3. 'index' → logprob: -2.571760892868042
    4. '#' → logprob: -3.071760892868042
    5. ' indices' → logprob: -6.321761131286621
    6. 'a' → logprob: -6.321761131286621
    7. 'h' → logprob: -6.571761131286621
    8. ''ind' → logprob: -7.071761131286621
    9. ''' → logprob: -7.571761131286621
    10. '1' → logprob: -7.571761131286621

Token 497: 'oncé' (ID: 59071)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.4177994728088379
    2. '#' → logprob: -1.917799472808838
    3. 'h' → logprob: -2.167799472808838
    4. 'umer' → logprob: -3.542799472808838
    5. '   ' → logprob: -3.792799472808838
    6. 't' → logprob: -5.542799472808838
    7. '```' → logprob: -5.667799472808838
    8. ']' → logprob: -6.167799472808838
    9. 'num' → logprob: -6.417799472808838
    10. '       ' → logprob: -6.542799472808838

Token 498: ' (' (ID: 350)
  Prédit: ' demande'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' demande' → logprob: -0.32536011934280396
    2. ' utilise' → logprob: -3.200360059738159
    3. 'index' → logprob: -3.450360059738159
    4. '#' → logprob: -3.825360059738159
    5. 'indices' → logprob: -3.950360059738159
    6. 'dem' → logprob: -3.950360059738159
    7. ' exige' → logprob: -3.950360059738159
    8. 'util' → logprob: -4.075360298156738
    9. ' veut' → logprob: -4.075360298156738
    10. 'd' → logprob: -4.200360298156738

Token 499: 'ou' (ID: 283)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.024329598993062973
    2. ')' → logprob: -4.149329662322998
    3. ' h' → logprob: -5.274329662322998
    4. '#' → logprob: -7.149329662322998
    5. 'a' → logprob: -7.399329662322998
    6. '[h' → logprob: -7.774329662322998
    7. '                   ' → logprob: -8.39932918548584
    8. 'w' → logprob: -8.39932918548584
    9. 'ans' → logprob: -8.39932918548584
    10. '```' → logprob: -9.14932918548584

Token 500: ' la' (ID: 557)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.30513492226600647
    2. 'h' → logprob: -2.4301350116729736
    3. '#' → logprob: -3.1801350116729736
    4. ')' → logprob: -3.5551350116729736
    5. ' w' → logprob: -3.6801350116729736
    6. 'the' → logprob: -3.8051350116729736
    7. 'a' → logprob: -4.5551347732543945
    8. ' la' → logprob: -5.1801347732543945
    9. ' the' → logprob: -5.3051347732543945
    10. 'l' → logprob: -5.3051347732543945

Token 501: ' sortie' (ID: 52761)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.15729708969593048
    2. ' code' → logprob: -2.532297134399414
    3. 'w' → logprob: -3.657297134399414
    4. 'problem' → logprob: -4.407297134399414
    5. 'print' → logprob: -5.157297134399414
    6. '#' → logprob: -5.532297134399414
    7. 'h' → logprob: -5.657297134399414
    8. 'test' → logprob: -6.407297134399414
    9. 'gr' → logprob: -6.657297134399414
    10. ')' → logprob: -6.782297134399414

Token 502: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005783616565167904
    2. ' des' → logprob: -6.005783557891846
    3. '#' → logprob: -6.505783557891846
    4. 'des' → logprob: -8.130784034729004
    5. '[' → logprob: -8.380784034729004
    6. 's' → logprob: -8.755784034729004
    7. 'indices' → logprob: -9.255784034729004
    8. ' )' → logprob: -9.255784034729004
    9. ')#' → logprob: -9.630784034729004
    10. ',' → logprob: -9.755784034729004

Token 503: ' exige' (ID: 68073)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3916720449924469
    2. ')' → logprob: -1.2666720151901245
    3. 'print' → logprob: -4.516672134399414
    4. '[h' → logprob: -4.891672134399414
    5. ']' → logprob: -5.391672134399414
    6. '[' → logprob: -5.516672134399414
    7. '#' → logprob: -5.891672134399414
    8. '.append' → logprob: -6.391672134399414
    9. ',h' → logprob: -6.516672134399414
    10. ' h' → logprob: -7.141672134399414

Token 504: ' des' (ID: 731)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3893481492996216
    2. 'des' → logprob: -1.6393481492996216
    3. ' des' → logprob: -3.139348030090332
    4. ' d' → logprob: -3.264348030090332
    5. 'un' → logprob: -5.014348030090332
    6. '1' → logprob: -5.014348030090332
    7. 'une' → logprob: -5.139348030090332
    8. 'indices' → logprob: -5.139348030090332
    9. ' une' → logprob: -5.389348030090332
    10. 'de' → logprob: -5.389348030090332

Token 505: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.34604641795158386
    2. '1' → logprob: -1.4710464477539062
    3. ' indices' → logprob: -3.2210464477539062
    4. 'positions' → logprob: -4.471046447753906
    5. ' coordonnées' → logprob: -5.971046447753906
    6. 'indexes' → logprob: -6.096046447753906
    7. 'index' → logprob: -6.221046447753906
    8. 'h' → logprob: -6.471046447753906
    9. 'coordinates' → logprob: -6.596046447753906
    10. 'coord' → logprob: -6.846046447753906

Token 506: ' comm' (ID: 1394)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.071403980255127
    2. '[h' → logprob: -1.821403980255127
    3. ',' → logprob: -2.196403980255127
    4. ' ans' → logprob: -2.446403980255127
    5. '.append' → logprob: -2.571403980255127
    6. ')' → logprob: -2.696403980255127
    7. '[' → logprob: -2.946403980255127
    8. 'print' → logprob: -2.946403980255127
    9. ' =' → logprob: -4.821403980255127
    10. '(ans' → logprob: -4.946403980255127

Token 507: 'en' (ID: 262)
  Prédit: 'enç'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enç' → logprob: -0.7471541166305542
    2. 'encé' → logprob: -0.7471541166305542
    3. 'enc' → logprob: -3.3721542358398438
    4. 'ent' → logprob: -4.872154235839844
    5. 'un' → logprob: -5.622154235839844
    6. 'en' → logprob: -5.747154235839844
    7. 'anç' → logprob: -6.997154235839844
    8. 'encent' → logprob: -7.247154235839844
    9. 'ença' → logprob: -7.372154235839844
    10. '1' → logprob: -8.247154235839844

Token 508: 'çant' (ID: 78714)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.04532149061560631
    2. 'nt' → logprob: -3.545321464538574
    3. 'n' → logprob: -4.295321464538574
    4. 'nts' → logprob: -6.920321464538574
    5. 'nés' → logprob: -8.170321464538574
    6. 'rc' → logprob: -8.545321464538574
    7. 'çant' → logprob: -9.170321464538574
    8. '1' → logprob: -10.170321464538574
    9. 't' → logprob: -10.670321464538574
    10. 'c' → logprob: -10.795321464538574

Token 509: ' à' (ID: 1221)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.49684661626815796
    2. 'à' → logprob: -1.9968466758728027
    3. 'h' → logprob: -2.1218466758728027
    4. ' à' → logprob: -2.9968466758728027
    5. '=' → logprob: -3.1218466758728027
    6. '=h' → logprob: -4.496846675872803
    7. '1' → logprob: -4.871846675872803
    8. '(h' → logprob: -4.996846675872803
    9. ' par' → logprob: -5.121846675872803
    10. ',' → logprob: -6.121846675872803

Token 510: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '0' → logprob: -13.00000286102295
    3. ' ' → logprob: -16.250001907348633
    4. '```' → logprob: -18.125001907348633
    5. 'h' → logprob: -18.625001907348633
    6. '+' → logprob: -19.125001907348633
    7. 'un' → logprob: -19.500001907348633
    8. '#' → logprob: -20.000001907348633
    9. '`' → logprob: -21.375001907348633
    10. '   ' → logprob: -21.375001907348633

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. '0' → logprob: -10.750021934509277
    3. 'h' → logprob: -15.625021934509277
    4. '#' → logprob: -17.37502098083496
    5. '
' → logprob: -17.75002098083496
    6. 'un' → logprob: -17.87502098083496
    7. ' ' → logprob: -18.12502098083496
    8. '```' → logprob: -18.37502098083496
    9. '+' → logprob: -18.87502098083496
    10. '=' → logprob: -19.37502098083496

Token 512: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5841578245162964
    2. '           ' → logprob: -0.9591578245162964
    3. 'ans' → logprob: -3.459157943725586
    4. ' ans' → logprob: -4.209157943725586
    5. ')' → logprob: -5.459157943725586
    6. '       ' → logprob: -5.709157943725586
    7. '                   ' → logprob: -6.084157943725586
    8. ',' → logprob: -6.709157943725586
    9. '   ' → logprob: -7.584157943725586
    10. '(ans' → logprob: -8.334157943725586

Token 513: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19433486461639404
    2. 'ans' → logprob: -2.1943349838256836
    3. ' ans' → logprob: -3.4443349838256836
    4. '           ' → logprob: -3.4443349838256836
    5. '                   ' → logprob: -8.069334983825684
    6. '       ' → logprob: -8.319334983825684
    7. ',' → logprob: -8.569334983825684
    8. '[' → logprob: -8.694334983825684
    9. '   ' → logprob: -8.944334983825684
    10. '```' → logprob: -9.819334983825684

Token 514: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -9.317247167928144e-05
    2. '               ' → logprob: -10.000093460083008
    3. ' ans' → logprob: -10.250093460083008
    4. '   ' → logprob: -12.250093460083008
    5. '           ' → logprob: -12.250093460083008
    6. '                   ' → logprob: -12.875093460083008
    7. '       ' → logprob: -15.750093460083008
    8. '(ans' → logprob: -16.125093460083008
    9. '	ans' → logprob: -16.500093460083008
    10. '```' → logprob: -19.250093460083008

Token 515: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.008129963040119e-06
    2. '.' → logprob: -12.500003814697266
    3. '.app' → logprob: -15.875003814697266
    4. 'append' → logprob: -15.875003814697266
    5. '.Append' → logprob: -17.625003814697266
    6. '.ap' → logprob: -18.375003814697266
    7. ').' → logprob: -18.375003814697266
    8. '.push' → logprob: -18.750003814697266
    9. '.extend' → logprob: -18.750003814697266
    10. '.setdefault' → logprob: -18.875003814697266

Token 516: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -1.1472419600977446e-06
    2. '((' → logprob: -15.000000953674316
    3. '([(' → logprob: -15.000000953674316
    4. '(' → logprob: -15.250000953674316
    5. '([[' → logprob: -16.125001907348633
    6. '(([' → logprob: -16.875001907348633
    7. ' ([' → logprob: -18.750001907348633
    8. '[' → logprob: -19.500001907348633
    9. '[(' → logprob: -20.125001907348633
    10. '([
' → logprob: -20.750001907348633

Token 517: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.320199877838604e-07
    2. ' h' → logprob: -15.5
    3. '(h' → logprob: -15.625
    4. '[h' → logprob: -18.375
    5. '	h' → logprob: -19.25
    6. '   ' → logprob: -19.625
    7. '"h' → logprob: -20.5
    8. '+h' → logprob: -21.625
    9. '_h' → logprob: -21.625
    10. ',h' → logprob: -22.875

Token 518: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012518366798758507
    2. ' +' → logprob: -4.387518405914307
    3. ',' → logprob: -11.762517929077148
    4. '+,' → logprob: -15.387517929077148
    5. ' ,' → logprob: -15.637517929077148
    6. '[' → logprob: -15.637517929077148
    7. '+h' → logprob: -16.01251792907715
    8. ']+' → logprob: -16.26251792907715
    9. '+
' → logprob: -16.63751792907715
    10. '＋' → logprob: -17.26251792907715

Token 519: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. ',' → logprob: -16.500003814697266
    4. '   ' → logprob: -17.500003814697266
    5. '<|end|>' → logprob: -17.750003814697266
    6. '```' → logprob: -18.250003814697266
    7. '+' → logprob: -18.625003814697266
    8. '0' → logprob: -19.375003814697266
    9. '[' → logprob: -19.500003814697266
    10. '
' → logprob: -19.875003814697266

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006483370088972151
    2. ',w' → logprob: -7.625648498535156
    3. ' ,' → logprob: -8.750648498535156
    4. 'w' → logprob: -13.625648498535156
    5. ',
' → logprob: -14.250648498535156
    6. ' w' → logprob: -16.625648498535156
    7. ')' → logprob: -18.375648498535156
    8. '[' → logprob: -19.000648498535156
    9. '   ' → logprob: -19.250648498535156
    10. '‌,' → logprob: -19.500648498535156

Token 521: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00017970333283301443
    2. ' w' → logprob: -8.625179290771484
    3. '	w' → logprob: -17.125179290771484
    4. '   ' → logprob: -17.500179290771484
    5. 'W' → logprob: -17.500179290771484
    6. ''w' → logprob: -18.250179290771484
    7. ' ' → logprob: -18.875179290771484
    8. '(w' → logprob: -19.250179290771484
    9. '[w' → logprob: -19.375179290771484
    10. '<w' → logprob: -19.500179290771484

Token 522: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.5491004129871726e-05
    2. ' +' → logprob: -10.000045776367188
    3. '1' → logprob: -17.625045776367188
    4. '+
' → logprob: -18.625045776367188
    5. '+,' → logprob: -19.125045776367188
    6. ',' → logprob: -19.125045776367188
    7. ']+' → logprob: -19.500045776367188
    8. '＋' → logprob: -19.500045776367188
    9. '<|end|>' → logprob: -20.875045776367188
    10. ')+' → logprob: -21.000045776367188

Token 523: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.750009536743164
    3. '+' → logprob: -14.000009536743164
    4. '2' → logprob: -15.125009536743164
    5. '   ' → logprob: -16.875009536743164
    6. '```' → logprob: -17.250009536743164
    7. '<|end|>' → logprob: -17.437509536743164
    8. ' +' → logprob: -17.437509536743164
    9. '۱' → logprob: -17.500009536743164
    10. ',' → logprob: -18.125009536743164

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004740447038784623
    2. ' ,' → logprob: -8.000473976135254
    3. '+' → logprob: -9.375473976135254
    4. ',w' → logprob: -10.250473976135254
    5. ',
' → logprob: -12.125473976135254
    6. ',h' → logprob: -12.125473976135254
    7. ' +' → logprob: -12.375473976135254
    8. 'w' → logprob: -13.500473976135254
    9. '+,' → logprob: -14.500473976135254
    10. '1' → logprob: -15.375473976135254

Token 525: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.15310683415737e-05
    2. ' h' → logprob: -10.750021934509277
    3. '	h' → logprob: -18.62502098083496
    4. '   ' → logprob: -19.75002098083496
    5. ' ' → logprob: -22.00002098083496
    6. 'w' → logprob: -22.00002098083496
    7. ',h' → logprob: -22.87502098083496
    8. '[h' → logprob: -22.87502098083496
    9. '<h' → logprob: -23.12502098083496
    10. '"h' → logprob: -23.25002098083496

Token 526: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013977376511320472
    2. ' +' → logprob: -7.001397609710693
    3. ',' → logprob: -7.751397609710693
    4. '1' → logprob: -10.501398086547852
    5. 'w' → logprob: -11.376398086547852
    6. ',w' → logprob: -12.001398086547852
    7. '+w' → logprob: -13.001398086547852
    8. ' ' → logprob: -13.376398086547852
    9. ' ,' → logprob: -13.376398086547852
    10. '[' → logprob: -13.376398086547852

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002867225557565689
    2. '2' → logprob: -8.250287055969238
    3. ' ' → logprob: -10.625287055969238
    4. '<|end|>' → logprob: -14.125287055969238
    5. 'w' → logprob: -15.500287055969238
    6. '0' → logprob: -16.625286102294922
    7. '   ' → logprob: -17.500286102294922
    8. '۱' → logprob: -17.875286102294922
    9. '
' → logprob: -18.062786102294922
    10. '```' → logprob: -18.062786102294922

Token 528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.0590548703912646e-05
    2. ' ,' → logprob: -10.750030517578125
    3. ',w' → logprob: -11.875030517578125
    4. 'w' → logprob: -13.250030517578125
    5. '<|end|>' → logprob: -15.750030517578125
    6. '`,' → logprob: -16.875030517578125
    7. '‌,' → logprob: -17.250030517578125
    8. ',
' → logprob: -17.375030517578125
    9. '',' → logprob: -17.750030517578125
    10. ' w' → logprob: -18.000030517578125

Token 529: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0005530327325686812
    2. ' w' → logprob: -7.500553131103516
    3. '(w' → logprob: -17.375553131103516
    4. '   ' → logprob: -17.750553131103516
    5. '	w' → logprob: -18.125553131103516
    6. 'W' → logprob: -19.125553131103516
    7. ' ' → logprob: -20.250553131103516
    8. '[w' → logprob: -20.250553131103516
    9. ''w' → logprob: -20.375553131103516
    10. '    ' → logprob: -21.375553131103516

Token 530: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006494098342955112
    2. ' +' → logprob: -7.500649452209473
    3. '2' → logprob: -9.250649452209473
    4. ' ' → logprob: -16.500648498535156
    5. '++' → logprob: -16.750648498535156
    6. '+
' → logprob: -16.875648498535156
    7. '```' → logprob: -17.000648498535156
    8. '#' → logprob: -17.625648498535156
    9. '<|end|>' → logprob: -17.875648498535156
    10. '   ' → logprob: -18.250648498535156

Token 531: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. '+' → logprob: -15.000003814697266
    4. '```' → logprob: -16.875003814697266
    5. '   ' → logprob: -17.375003814697266
    6. '1' → logprob: -17.625003814697266
    7. '۲' → logprob: -19.312503814697266
    8. '２' → logprob: -19.687503814697266
    9. '           ' → logprob: -20.125003814697266
    10. '<|end|>' → logprob: -20.187503814697266

Token 532: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0003049570368602872
    2. '])
' → logprob: -8.25030517578125
    3. '           ' → logprob: -10.87530517578125
    4. '               ' → logprob: -11.37530517578125
    5. ' ])' → logprob: -11.62530517578125
    6. ')' → logprob: -13.25030517578125
    7. '])
' → logprob: -14.50030517578125
    8. '       ' → logprob: -14.62530517578125
    9. ')])' → logprob: -14.75030517578125
    10. '                   ' → logprob: -15.12530517578125

Token 533: '               ' (ID: 506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20815064013004303
    2. '               ' → logprob: -1.7081506252288818
    3. ' a' → logprob: -5.458150863647461
    4. '           ' → logprob: -7.083150863647461
    5. '                ' → logprob: -7.833150863647461
    6. '```' → logprob: -7.833150863647461
    7. '                
' → logprob: -7.958150863647461
    8. '                   ' → logprob: -8.083150863647461
    9. '              ' → logprob: -10.583150863647461
    10. '   ' → logprob: -10.833150863647461

Token 534: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00017910730093717575
    2. '               ' → logprob: -8.875179290771484
    3. ' a' → logprob: -10.750179290771484
    4. '                   ' → logprob: -11.500179290771484
    5. '           ' → logprob: -11.875179290771484
    6. '```' → logprob: -15.250179290771484
    7. '                
' → logprob: -15.500179290771484
    8. '   ' → logprob: -16.250179290771484
    9. '                       ' → logprob: -17.125179290771484
    10. '                ' → logprob: -17.125179290771484

Token 535: ' Dé' (ID: 27247)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.080963092041202e-06
    2. '               ' → logprob: -12.250004768371582
    3. ' a' → logprob: -15.750004768371582
    4. '           ' → logprob: -16.1250057220459
    5. '                   ' → logprob: -17.0000057220459
    6. '#' → logprob: -18.7500057220459
    7. '   ' → logprob: -19.7500057220459
    8. '                ' → logprob: -20.5000057220459
    9. '       ' → logprob: -21.2500057220459
    10. '                       ' → logprob: -21.3750057220459

Token 536: 'cr' (ID: 798)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.773419976234436
    2. 'placer' → logprob: -0.898419976234436
    3. 'crement' → logprob: -2.7734198570251465
    4. 'cr' → logprob: -3.6484198570251465
    5. 'a' → logprob: -4.2734198570251465
    6. 'cre' → logprob: -4.3984198570251465
    7. 'c' → logprob: -4.7734198570251465
    8. 'caler' → logprob: -5.5234198570251465
    9. 'f' → logprob: -6.6484198570251465
    10. 'cré' → logprob: -7.1484198570251465

Token 537: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.2826921343803406
    2. 'ement' → logprob: -1.6576921939849854
    3. 'ment' → logprob: -3.5326921939849854
    4. 'a' → logprob: -4.032691955566406
    5. 'é' → logprob: -5.282691955566406
    6. 'm' → logprob: -7.282691955566406
    7. 'e' → logprob: -7.657691955566406
    8. 'è' → logprob: -7.907691955566406
    9. 'em' → logprob: -8.157691955566406
    10. 'mentar' → logprob: -8.407691955566406

Token 538: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2033834606409073
    2. 'a' → logprob: -1.703383445739746
    3. '               ' → logprob: -7.203383445739746
    4. 'ent' → logprob: -7.453383445739746
    5. 'e' → logprob: -7.828383445739746
    6. '           ' → logprob: -9.203383445739746
    7. ' a' → logprob: -9.828383445739746
    8. '   ' → logprob: -10.578383445739746
    9. '                   ' → logprob: -11.453383445739746
    10. 'ter' → logprob: -11.828383445739746

Token 539: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.451116051815916e-05
    2. ' a' → logprob: -10.625024795532227
    3. '               ' → logprob: -16.500024795532227
    4. '                   ' → logprob: -16.875024795532227
    5. '(a' → logprob: -17.250024795532227
    6. '           ' → logprob: -17.500024795532227
    7. '[a' → logprob: -18.000024795532227
    8. '   ' → logprob: -19.125024795532227
    9. '	a' → logprob: -19.875024795532227
    10. '       ' → logprob: -20.250024795532227

Token 540: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012693758122622967
    2. 'a' → logprob: -4.387693881988525
    3. ' ' → logprob: -8.762693405151367
    4. 'un' → logprob: -11.262693405151367
    5. ' a' → logprob: -11.512693405151367
    6. '   ' → logprob: -14.012693405151367
    7. '```' → logprob: -14.137693405151367
    8. '[a' → logprob: -14.262693405151367
    9. '１' → logprob: -14.762693405151367
    10. '(a' → logprob: -15.262693405151367

Token 541: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028185509145259857
    2. 'a' → logprob: -5.877818584442139
    3. 'un' → logprob: -11.62781810760498
    4. ' ' → logprob: -12.50281810760498
    5. '１' → logprob: -15.00281810760498
    6. '```' → logprob: -16.002819061279297
    7. '[a' → logprob: -16.002819061279297
    8. ' a' → logprob: -16.252819061279297
    9. 'une' → logprob: -16.627819061279297
    10. '(a' → logprob: -16.627819061279297

Token 542: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00034142236108891666
    2. ' a' → logprob: -8.375341415405273
    3. '               ' → logprob: -9.375341415405273
    4. '[a' → logprob: -11.250341415405273
    5. '                   ' → logprob: -11.750341415405273
    6. '(a' → logprob: -13.000341415405273
    7. '           ' → logprob: -13.000341415405273
    8. '[' → logprob: -15.250341415405273
    9. '                       ' → logprob: -16.500341415405273
    10. '                ' → logprob: -16.625341415405273

Token 543: ' case' (ID: 1890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0024321437813341618
    2. 'val' → logprob: -6.627432346343994
    3. 'case' → logprob: -7.002432346343994
    4. 'value' → logprob: -9.377431869506836
    5. 'quant' → logprob: -10.502431869506836
    6. ' a' → logprob: -10.752431869506836
    7. '#' → logprob: -11.127431869506836
    8. 'nombre' → logprob: -11.877431869506836
    9. ' valeur' → logprob: -11.877431869506836
    10. 'part' → logprob: -12.252431869506836

Token 544: ' cour' (ID: 2871)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.05560320243239403
    2. 'a' → logprob: -2.930603265762329
    3. '[a' → logprob: -7.55560302734375
    4. 'h' → logprob: -8.68060302734375
    5. ' a' → logprob: -10.93060302734375
    6. '[' → logprob: -12.68060302734375
    7. '   ' → logprob: -13.18060302734375
    8. '```' → logprob: -13.68060302734375
    9. ' [' → logprob: -13.80560302734375
    10. '[w' → logprob: -14.68060302734375

Token 545: 'ante' (ID: 2116)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.019648771733045578
    2. '[a' → logprob: -4.019648551940918
    3. 'ante' → logprob: -7.894648551940918
    4. '               ' → logprob: -8.019648551940918
    5. '           ' → logprob: -8.269648551940918
    6. '[' → logprob: -8.644648551940918
    7. 'ant' → logprob: -9.269648551940918
    8. ' a' → logprob: -9.894648551940918
    9. 'r' → logprob: -10.519648551940918
    10. '```' → logprob: -10.644648551940918

Token 546: ' car' (ID: 1669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1524779796600342
    2. '               ' → logprob: -1.6524779796600342
    3. '[' → logprob: -1.9024779796600342
    4. ' a' → logprob: -2.402477979660034
    5. 'a' → logprob: -2.902477979660034
    6. '[a' → logprob: -2.902477979660034
    7. '            
' → logprob: -3.277477979660034
    8. '<|end|>' → logprob: -3.402477979660034
    9. '                   ' → logprob: -4.277478218078613
    10. '                        
' → logprob: -4.652478218078613

Token 547: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.013118937611579895
    2. ' a' → logprob: -4.513118743896484
    3. '               ' → logprob: -6.388118743896484
    4. '           ' → logprob: -8.138118743896484
    5. '                   ' → logprob: -9.763118743896484
    6. 'on' → logprob: -11.388118743896484
    7. '   ' → logprob: -12.013118743896484
    8. ' on' → logprob: -12.763118743896484
    9. ' ' → logprob: -12.888118743896484
    10. '1' → logprob: -13.013118743896484

Token 548: ' donne' (ID: 30004)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02394779585301876
    2. ' a' → logprob: -3.7739477157592773
    3. '           ' → logprob: -8.398947715759277
    4. 'dé' → logprob: -8.523947715759277
    5. '[a' → logprob: -9.023947715759277
    6. '       ' → logprob: -10.898947715759277
    7. '               ' → logprob: -10.898947715759277
    8. '```' → logprob: -11.023947715759277
    9. 'ai' → logprob: -11.398947715759277
    10. '                   ' → logprob: -11.523947715759277

Token 549: ' un' (ID: 537)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19560477137565613
    2. '1' → logprob: -2.1956048011779785
    3. ' a' → logprob: -3.0706048011779785
    4. ' ' → logprob: -4.4456048011779785
    5. 'un' → logprob: -5.4456048011779785
    6. '               ' → logprob: -6.9456048011779785
    7. '                   ' → logprob: -7.1956048011779785
    8. '   ' → logprob: -7.9456048011779785
    9. ' un' → logprob: -7.9456048011779785
    10. '           ' → logprob: -8.07060432434082

Token 550: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17082373797893524
    2. '1' → logprob: -1.9208236932754517
    3. 'coin' → logprob: -5.170823574066162
    4. 'unit' → logprob: -5.670823574066162
    5. '```' → logprob: -7.545823574066162
    6. 'un' → logprob: -8.92082405090332
    7. 'one' → logprob: -9.17082405090332
    8. 'token' → logprob: -9.67082405090332
    9. 'piece' → logprob: -9.92082405090332
    10. 'pe' → logprob: -10.04582405090332

Token 551: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0010324534960091114
    2. ' a' → logprob: -7.25103235244751
    3. '[a' → logprob: -8.626032829284668
    4. '[' → logprob: -9.751032829284668
    5. 'la' → logprob: -10.126032829284668
    6. '   ' → logprob: -12.001032829284668
    7. '```' → logprob: -12.376032829284668
    8. '=' → logprob: -12.376032829284668
    9. '[h' → logprob: -12.501032829284668
    10. 'l' → logprob: -12.626032829284668

Token 552: ' vo' (ID: 778)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03778783977031708
    2. 'case' → logprob: -3.412787914276123
    3. ' a' → logprob: -6.662787914276123
    4. 'vo' → logprob: -7.412787914276123
    5. 'cell' → logprob: -7.537787914276123
    6. ' case' → logprob: -8.037787437438965
    7. 'adj' → logprob: -8.412787437438965
    8. 'next' → logprob: -8.537787437438965
    9. 'neighbor' → logprob: -8.787787437438965
    10. '[a' → logprob: -9.037787437438965

Token 553: 'isine' (ID: 24412)
  Prédit: 'isine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isine' → logprob: -0.3667986989021301
    2. 'is' → logprob: -1.6167986392974854
    3. 'a' → logprob: -3.2417986392974854
    4. 'i' → logprob: -3.4917986392974854
    5. 'r' → logprob: -4.8667988777160645
    6. '[' → logprob: -5.4917988777160645
    7. 'ix' → logprob: -5.4917988777160645
    8. '[i' → logprob: -5.9917988777160645
    9. '#' → logprob: -6.2417988777160645
    10. 'case' → logprob: -6.3667988777160645

Token 554: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22182263433933258
    2. '           ' → logprob: -1.7218226194381714
    3. '               ' → logprob: -4.596822738647461
    4. ' a' → logprob: -4.596822738647461
    5. '                   ' → logprob: -11.096822738647461
    6. '       ' → logprob: -11.596822738647461
    7. '[a' → logprob: -13.096822738647461
    8. '            
' → logprob: -13.471822738647461
    9. '          ' → logprob: -13.596822738647461
    10. '   ' → logprob: -13.721822738647461

Token 555: '               ' (ID: 506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1704273223876953
    2. '           ' → logprob: -2.6704273223876953
    3. ' a' → logprob: -2.7954273223876953
    4. '               ' → logprob: -3.6704273223876953
    5. '            
' → logprob: -7.795427322387695
    6. '                
' → logprob: -9.170427322387695
    7. '                   ' → logprob: -9.295427322387695
    8. '       ' → logprob: -9.795427322387695
    9. '```' → logprob: -10.170427322387695
    10. '[' → logprob: -10.420427322387695

Token 556: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -1.700132997939363e-05
    2. ' a' → logprob: -11.000017166137695
    3. '               ' → logprob: -15.500017166137695
    4. '           ' → logprob: -16.250017166137695
    5. '                   ' → logprob: -18.625017166137695
    6. '   ' → logprob: -19.500017166137695
    7. '	a' → logprob: -20.375017166137695
    8. '       ' → logprob: -21.125017166137695
    9. ' ' → logprob: -22.000017166137695
    10. '                       ' → logprob: -22.625017166137695

Token 557: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: 0.0
    2. 'h' → logprob: -17.625
    3. '[a' → logprob: -19.375
    4. '[' → logprob: -19.75
    5. ' [' → logprob: -22.5
    6. '[u' → logprob: -23.25
    7. '[s' → logprob: -23.25
    8. '```' → logprob: -23.375
    9. '[y' → logprob: -23.625
    10. '[c' → logprob: -23.75

Token 558: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001349403290078044
    2. '[h' → logprob: -6.626349449157715
    3. ']' → logprob: -11.626349449157715
    4. '[w' → logprob: -12.251349449157715
    5. 'h' → logprob: -12.751349449157715
    6. '[' → logprob: -12.876349449157715
    7. ' ][' → logprob: -13.001349449157715
    8. '"][' → logprob: -13.751349449157715
    9. ']][' → logprob: -15.626349449157715
    10. ''][' → logprob: -15.876349449157715

Token 559: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.4121114822482923e-06
    2. '[w' → logprob: -12.875003814697266
    3. ' w' → logprob: -14.125003814697266
    4. '	w' → logprob: -16.250003814697266
    5. ''w' → logprob: -17.375003814697266
    6. '][' → logprob: -17.750003814697266
    7. 'W' → logprob: -18.125003814697266
    8. 'ｗ' → logprob: -19.000003814697266
    9. '   ' → logprob: -19.125003814697266
    10. '```' → logprob: -20.000003814697266

Token 560: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025074053555727005
    2. ']-' → logprob: -6.002507209777832
    3. '-' → logprob: -10.502507209777832
    4. '-=' → logprob: -13.252507209777832
    5. ' ]' → logprob: -14.002507209777832
    6. '[' → logprob: -14.877507209777832
    7. ')' → logprob: -15.002507209777832
    8. ' -=' → logprob: -15.127507209777832
    9. '#' → logprob: -15.752507209777832
    10. '```' → logprob: -16.37750816345215

Token 561: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.013277880847454071
    2. '-' → logprob: -4.638278007507324
    3. ' -=' → logprob: -5.763278007507324
    4. '=' → logprob: -8.013278007507324
    5. '[' → logprob: -10.513278007507324
    6. '```' → logprob: -12.013278007507324
    7. '[-' → logprob: -12.763278007507324
    8. ')' → logprob: -13.388278007507324
    9. '+=' → logprob: -13.513278007507324
    10. '<|end|>' → logprob: -13.888278007507324

Token 562: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -20.75
    4. '```' → logprob: -21.75
    5. '１' → logprob: -22.625
    6. '۱' → logprob: -22.75
    7. '<|end|>' → logprob: -23.125
    8. '১' → logprob: -23.25
    9. '१' → logprob: -23.625
    10. '=' → logprob: -24.125

Token 563: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '１' → logprob: -22.5
    4. '   ' → logprob: -23.0
    5. '১' → logprob: -23.625
    6. '```' → logprob: -23.625
    7. '۱' → logprob: -23.875
    8. '१' → logprob: -24.125
    9. '<|end|>' → logprob: -24.625
    10. 'a' → logprob: -25.125

Token 564: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11689088493585587
    2. 'a' → logprob: -2.7418909072875977
    3. '           ' → logprob: -3.2418909072875977
    4. ' a' → logprob: -5.116890907287598
    5. '                
' → logprob: -7.741890907287598
    6. '            
' → logprob: -8.866890907287598
    7. ' ' → logprob: -10.741890907287598
    8. '<|end|>' → logprob: -10.741890907287598
    9. '                   ' → logprob: -10.866890907287598
    10. ' 
' → logprob: -10.866890907287598

Token 565: '               ' (ID: 506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029381869360804558
    2. '               ' → logprob: -3.90438175201416
    3. ' a' → logprob: -5.15438175201416
    4. '           ' → logprob: -6.52938175201416
    5. '                   ' → logprob: -7.27938175201416
    6. '       ' → logprob: -8.02938175201416
    7. '                
' → logprob: -8.65438175201416
    8. '   ' → logprob: -9.15438175201416
    9. '                ' → logprob: -9.27938175201416
    10. '            
' → logprob: -9.90438175201416

Token 566: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1626579910516739
    2. '               ' → logprob: -1.9126579761505127
    3. ' a' → logprob: -6.037658214569092
    4. '           ' → logprob: -10.662657737731934
    5. '                   ' → logprob: -11.912657737731934
    6. '                
' → logprob: -12.162657737731934
    7. '                ' → logprob: -12.412657737731934
    8. '       ' → logprob: -13.412657737731934
    9. '```' → logprob: -14.537657737731934
    10. '              ' → logprob: -14.537657737731934

Token 567: ' In' (ID: 730)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5451681974809617e-05
    2. '               ' → logprob: -11.625015258789062
    3. ' a' → logprob: -12.125015258789062
    4. '           ' → logprob: -14.125015258789062
    5. '                   ' → logprob: -15.125015258789062
    6. '       ' → logprob: -17.750015258789062
    7. '                ' → logprob: -17.875015258789062
    8. '#' → logprob: -18.125015258789062
    9. '                       ' → logprob: -18.500015258789062
    10. '   ' → logprob: -18.500015258789062

Token 568: 'cr' (ID: 798)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011065175058320165
    2. 'crement' → logprob: -7.6261067390441895
    3. '[a' → logprob: -7.6261067390441895
    4. '           ' → logprob: -10.251106262207031
    5. '               ' → logprob: -10.376106262207031
    6. ' a' → logprob: -10.751106262207031
    7. '[' → logprob: -11.251106262207031
    8. 'cre' → logprob: -11.751106262207031
    9. 'cr' → logprob: -12.001106262207031
    10. '       ' → logprob: -12.501106262207031

Token 569: 'ément' (ID: 17645)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.5299291610717773
    2. 'ément' → logprob: -1.6549291610717773
    3. 'crement' → logprob: -2.0299291610717773
    4. 'ment' → logprob: -2.1549291610717773
    5. 'a' → logprob: -2.4049291610717773
    6. 'cr' → logprob: -2.4049291610717773
    7. '                   ' → logprob: -3.7799291610717773
    8. '[' → logprob: -3.9049291610717773
    9. 'é' → logprob: -4.029929161071777
    10. 'rement' → logprob: -4.029929161071777

Token 570: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.02272879332304001
    2. 'a' → logprob: -3.897728681564331
    3. '               ' → logprob: -6.27272891998291
    4. ' a' → logprob: -8.27272891998291
    5. '                   ' → logprob: -10.52272891998291
    6. '                ' → logprob: -12.02272891998291
    7. '           ' → logprob: -13.02272891998291
    8. 'e' → logprob: -13.77272891998291
    9. '[a' → logprob: -13.89772891998291
    10. 'ar' → logprob: -14.52272891998291

Token 571: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0025299990084022284
    2. ' a' → logprob: -6.002530097961426
    3. '1' → logprob: -9.877530097961426
    4. ' ' → logprob: -13.252530097961426
    5. '               ' → logprob: -14.377530097961426
    6. '   ' → logprob: -15.502530097961426
    7. '                   ' → logprob: -15.627530097961426
    8. '	a' → logprob: -16.50252914428711
    9. '           ' → logprob: -16.75252914428711
    10. '```' → logprob: -17.00252914428711

Token 572: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015893694944679737
    2. ' ' → logprob: -6.876589298248291
    3. 'a' → logprob: -7.501589298248291
    4. '<|end|>' → logprob: -12.87658977508545
    5. '```' → logprob: -14.00158977508545
    6. ' a' → logprob: -14.87658977508545
    7. '   ' → logprob: -15.87658977508545
    8. '<|end|>' → logprob: -17.251588821411133
    9. '  ' → logprob: -17.564088821411133
    10. '`' → logprob: -17.626588821411133

Token 573: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.387458365177736e-05
    2. 'a' → logprob: -9.500083923339844
    3. ' ' → logprob: -11.625083923339844
    4. '```' → logprob: -17.625083923339844
    5. ' a' → logprob: -18.125083923339844
    6. '１' → logprob: -18.625083923339844
    7. 'un' → logprob: -19.875083923339844
    8. '2' → logprob: -19.875083923339844
    9. '...' → logprob: -19.875083923339844
    10. '   ' → logprob: -19.875083923339844

Token 574: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010231143794953823
    2. ' a' → logprob: -4.635231018066406
    3. '               ' → logprob: -7.760231018066406
    4. '<|end|>' → logprob: -10.260231018066406
    5. '                   ' → logprob: -12.010231018066406
    6. '           ' → logprob: -13.010231018066406
    7. '                ' → logprob: -14.135231018066406
    8. '#a' → logprob: -14.510231018066406
    9. '```' → logprob: -14.760231018066406
    10. ' ' → logprob: -14.885231018066406

Token 575: ' case' (ID: 1890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00011105302110081539
    2. ' a' → logprob: -9.250110626220703
    3. '1' → logprob: -11.625110626220703
    4. '[a' → logprob: -12.625110626220703
    5. ' ' → logprob: -13.500110626220703
    6. '```' → logprob: -14.375110626220703
    7. '   ' → logprob: -15.875110626220703
    8. '[' → logprob: -16.750110626220703
    9. '#' → logprob: -16.750110626220703
    10. 'w' → logprob: -17.125110626220703

Token 576: ' juste' (ID: 31553)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3975667357444763
    2. '[h' → logprob: -1.147566795349121
    3. '[a' → logprob: -5.022566795349121
    4. ' a' → logprob: -5.522566795349121
    5. ' [' → logprob: -10.772566795349121
    6. '[w' → logprob: -11.397566795349121
    7. '[' → logprob: -11.772566795349121
    8. '```' → logprob: -12.147566795349121
    9. 'h' → logprob: -13.022566795349121
    10. '   ' → logprob: -13.147566795349121

Token 577: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9529762268066406
    2. '[h' → logprob: -0.9529762268066406
    3. '[w' → logprob: -2.3279762268066406
    4. 'à' → logprob: -2.4529762268066406
    5. '[' → logprob: -4.452976226806641
    6. 'w' → logprob: -4.952976226806641
    7. 'adj' → logprob: -4.952976226806641
    8. 'h' → logprob: -5.577976226806641
    9. 'a' → logprob: -5.702976226806641
    10. ' [' → logprob: -5.952976226806641

Token 578: ' droite' (ID: 61428)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09156429767608643
    2. 'w' → logprob: -2.466564178466797
    3. ' côté' → logprob: -6.841564178466797
    4. ' droite' → logprob: -6.841564178466797
    5. 'cot' → logprob: -8.591564178466797
    6. ' cote' → logprob: -9.591564178466797
    7. 'la' → logprob: -9.841564178466797
    8. ' coté' → logprob: -10.216564178466797
    9. 'dro' → logprob: -10.466564178466797
    10. ' c' → logprob: -10.841564178466797

Token 579: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10567465424537659
    2. ' a' → logprob: -2.3556747436523438
    3. '               ' → logprob: -5.230674743652344
    4. '           ' → logprob: -9.980674743652344
    5. '                   ' → logprob: -9.980674743652344
    6. '   ' → logprob: -12.730674743652344
    7. '[a' → logprob: -13.105674743652344
    8. '       ' → logprob: -13.730674743652344
    9. '                       ' → logprob: -13.730674743652344
    10. '                ' → logprob: -14.105674743652344

Token 580: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2525818645954132
    2. 'a' → logprob: -1.5025818347930908
    3. ' h' → logprob: -7.75258207321167
    4. ' a' → logprob: -9.127581596374512
    5. '[h' → logprob: -9.502581596374512
    6. ')' → logprob: -11.127581596374512
    7. '           ' → logprob: -12.002581596374512
    8. '               ' → logprob: -12.252581596374512
    9. '                   ' → logprob: -12.377581596374512
    10. '   ' → logprob: -12.877581596374512

Token 581: ',' (ID: 11)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.023711493238806725
    2. '[h' → logprob: -3.7737114429473877
    3. ')[' → logprob: -8.148711204528809
    4. '[w' → logprob: -9.773711204528809
    5. '[' → logprob: -10.398711204528809
    6. 'h' → logprob: -10.773711204528809
    7. ',' → logprob: -10.898711204528809
    8. ']' → logprob: -11.523711204528809
    9. ')' → logprob: -11.648711204528809
    10. ',h' → logprob: -12.273711204528809

Token 582: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.029753148555755615
    2. ' w' → logprob: -3.5297532081604004
    3. '[w' → logprob: -13.404752731323242
    4. '   ' → logprob: -14.779752731323242
    5. '	w' → logprob: -15.154752731323242
    6. '(w' → logprob: -16.029752731323242
    7. '<w' → logprob: -16.404752731323242
    8. '    ' → logprob: -16.779752731323242
    9. ',w' → logprob: -16.904752731323242
    10. ' ' → logprob: -16.904752731323242

Token 583: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004061242798343301
    2. ' +' → logprob: -8.000406265258789
    3. ']' → logprob: -9.875406265258789
    4. ']+' → logprob: -11.000406265258789
    5. '   ' → logprob: -14.250406265258789
    6. ')' → logprob: -14.375406265258789
    7. ')+' → logprob: -15.000406265258789
    8. '           ' → logprob: -15.875406265258789
    9. '][' → logprob: -16.12540626525879
    10. '1' → logprob: -16.25040626525879

Token 584: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '+' → logprob: -16.125001907348633
    4. ')' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '```' → logprob: -17.750001907348633
    7. 'w' → logprob: -17.875001907348633
    8. '2' → logprob: -19.250001907348633
    9. '１' → logprob: -20.500001907348633
    10. '۱' → logprob: -20.500001907348633

Token 585: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6974349021911621
    2. ']' → logprob: -0.6974349021911621
    3. '               ' → logprob: -6.322434902191162
    4. ']+=' → logprob: -6.572434902191162
    5. ')]' → logprob: -7.947434902191162
    6. '])' → logprob: -8.07243537902832
    7. '           ' → logprob: -8.44743537902832
    8. 'a' → logprob: -9.69743537902832
    9. ')a' → logprob: -10.07243537902832
    10. '                   ' → logprob: -10.94743537902832

Token 586: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17742657661437988
    2. 'a' → logprob: -2.42742657661438
    3. ' a' → logprob: -2.67742657661438
    4. '           ' → logprob: -6.427426338195801
    5. '                   ' → logprob: -6.927426338195801
    6. '```' → logprob: -6.927426338195801
    7. '                ' → logprob: -7.177426338195801
    8. '                
' → logprob: -7.427426338195801
    9. '              ' → logprob: -9.0524263381958
    10. '=' → logprob: -9.8024263381958

Token 587: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00013214473437983543
    2. ' a' → logprob: -9.00013256072998
    3. '               ' → logprob: -11.75013256072998
    4. '                   ' → logprob: -14.87513256072998
    5. '1' → logprob: -15.25013256072998
    6. '           ' → logprob: -15.75013256072998
    7. '   ' → logprob: -16.625131607055664
    8. '                ' → logprob: -18.375131607055664
    9. '                       ' → logprob: -18.375131607055664
    10. '	a' → logprob: -18.750131607055664

Token 588: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: 0.0
    2. 'h' → logprob: -18.25
    3. '[' → logprob: -19.25
    4. ' [' → logprob: -20.25
    5. '[a' → logprob: -20.875
    6. '```' → logprob: -22.625
    7. '[w' → logprob: -23.0
    8. '[u' → logprob: -23.25
    9. '<h' → logprob: -23.625
    10. '	h' → logprob: -23.75

Token 589: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10034727305173874
    2. '[h' → logprob: -2.3503472805023193
    3. '[w' → logprob: -9.475347518920898
    4. ']' → logprob: -10.850347518920898
    5. 'h' → logprob: -10.850347518920898
    6. '[' → logprob: -11.850347518920898
    7. ' ][' → logprob: -12.725347518920898
    8. '       ' → logprob: -13.225347518920898
    9. ')[' → logprob: -13.225347518920898
    10. '           ' → logprob: -13.225347518920898

Token 590: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -6.992775888647884e-05
    2. '[w' → logprob: -9.625069618225098
    3. ' w' → logprob: -12.500069618225098
    4. '(w' → logprob: -16.375070571899414
    5. 'h' → logprob: -18.125070571899414
    6. '[' → logprob: -18.125070571899414
    7. '   ' → logprob: -18.250070571899414
    8. '	w' → logprob: -18.625070571899414
    9. ''w' → logprob: -19.250070571899414
    10. '<w' → logprob: -19.625070571899414

Token 591: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.957014556974173e-05
    2. ' +' → logprob: -9.750069618225098
    3. ']+' → logprob: -12.000069618225098
    4. ']' → logprob: -13.000069618225098
    5. '+]' → logprob: -13.250069618225098
    6. '1' → logprob: -14.875069618225098
    7. ']+=' → logprob: -16.00006866455078
    8. '[' → logprob: -16.25006866455078
    9. '+w' → logprob: -16.50006866455078
    10. '+
' → logprob: -16.62506866455078

Token 592: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '+' → logprob: -13.750001907348633
    3. ' ' → logprob: -15.000001907348633
    4. '```' → logprob: -17.125001907348633
    5. '   ' → logprob: -18.125001907348633
    6. ']' → logprob: -18.250001907348633
    7. '۱' → logprob: -19.500001907348633
    8. '<|end|>' → logprob: -20.000001907348633
    9. '１' → logprob: -20.375001907348633
    10. ']+=' → logprob: -20.437501907348633

Token 593: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023268774151802063
    2. ']+=' → logprob: -3.773268699645996
    3. '+=' → logprob: -11.773268699645996
    4. ' +=' → logprob: -12.023268699645996
    5. ']+' → logprob: -12.398268699645996
    6. ' ]' → logprob: -12.648268699645996
    7. '']' → logprob: -14.148268699645996
    8. ')' → logprob: -14.523268699645996
    9. '"]' → logprob: -15.023268699645996
    10. '+' → logprob: -15.273268699645996

Token 594: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0007565005216747522
    2. ' +=' → logprob: -7.25075626373291
    3. ']+=' → logprob: -10.00075626373291
    4. '+' → logprob: -13.87575626373291
    5. '=' → logprob: -17.125757217407227
    6. '+=(' → logprob: -17.375757217407227
    7. '+='' → logprob: -17.625757217407227
    8. '```' → logprob: -18.000757217407227
    9. '+="' → logprob: -18.625757217407227
    10. '[' → logprob: -19.625757217407227

Token 595: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -17.750024795532227
    4. '   ' → logprob: -18.375024795532227
    5. '```' → logprob: -19.000024795532227
    6. '  ' → logprob: -20.750024795532227
    7. '１' → logprob: -21.000024795532227
    8. '۱' → logprob: -21.125024795532227
    9. '0' → logprob: -21.250024795532227
    10. '१' → logprob: -21.625024795532227

Token 596: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '<|end|>' → logprob: -18.375
    4. '```' → logprob: -20.75
    5. '   ' → logprob: -21.5
    6. '#' → logprob: -22.75
    7. '１' → logprob: -22.875
    8. '۱' → logprob: -22.875
    9. '১' → logprob: -23.0
    10. '१' → logprob: -23.125

Token 597: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3357832133769989
    2. 'else' → logprob: -1.7107832431793213
    3. 'elif' → logprob: -2.4607832431793213
    4. ' else' → logprob: -4.210783004760742
    5. ' elif' → logprob: -5.960783004760742
    6. '       ' → logprob: -6.585783004760742
    7. '<|end|>' → logprob: -9.335783004760742
    8. '               ' → logprob: -9.585783004760742
    9. '            
' → logprob: -10.210783004760742
    10. '```' → logprob: -10.585783004760742

Token 598: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7245150208473206
    2. '<|end|>' → logprob: -1.3495149612426758
    3. '```' → logprob: -1.7245149612426758
    4. ' else' → logprob: -3.849514961242676
    5. 'elif' → logprob: -3.974514961242676
    6. '           ' → logprob: -3.974514961242676
    7. '       ' → logprob: -4.224514961242676
    8. '``' → logprob: -7.349514961242676
    9. ' 
' → logprob: -7.474514961242676
    10. '<|end|>' → logprob: -7.474514961242676

Token 599: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.055383071303367615
    2. 'elif' → logprob: -3.0553829669952393
    3. ' else' → logprob: -5.430383205413818
    4. '           ' → logprob: -6.430383205413818
    5. '       ' → logprob: -7.430383205413818
    6. ' elif' → logprob: -8.68038272857666
    7. '	elif' → logprob: -12.18038272857666
    8. '	else' → logprob: -13.18038272857666
    9. '<|end|>' → logprob: -13.43038272857666
    10. '            
' → logprob: -13.55538272857666

Token 600: ':
' (ID: 734)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08893707394599915
    2. ':' → logprob: -3.0889370441436768
    3. ' if' → logprob: -3.8389370441436768
    4. '               ' → logprob: -4.838937282562256
    5. '#' → logprob: -5.088937282562256
    6. 'elif' → logprob: -6.713937282562256
    7. ':
' → logprob: -6.963937282562256
    8. '           ' → logprob: -7.463937282562256
    9. ':#' → logprob: -7.588937282562256
    10. '   ' → logprob: -8.338936805725098

Token 601: '               ' (ID: 506)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000738038623239845
    2. '#' → logprob: -7.750738143920898
    3. 'elif' → logprob: -9.000738143920898
    4. '           ' → logprob: -9.625738143920898
    5. ' if' → logprob: -10.250738143920898
    6. 'cnt' → logprob: -10.375738143920898
    7. '               ' → logprob: -10.625738143920898
    8. '   ' → logprob: -11.000738143920898
    9. '       ' → logprob: -12.375738143920898
    10. 'for' → logprob: -13.000738143920898

Token 602: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010235271416604519
    2. '#' (adapté à ' #') → logprob: -4.63523530960083
    3. 'cnt' → logprob: -7.76023530960083
    4. 'elif' → logprob: -10.760234832763672
    5. ' if' → logprob: -11.135234832763672
    6. '   ' → logprob: -11.760234832763672
    7. '           ' → logprob: -12.760234832763672
    8. '               ' → logprob: -13.635234832763672
    9. '```' → logprob: -13.635234832763672
    10. '1' → logprob: -14.010234832763672

Token 603: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0032251295633614063
    2. 'elif' → logprob: -6.378225326538086
    3. '#' → logprob: -6.628225326538086
    4. 'cnt' → logprob: -8.753225326538086
    5. '   ' → logprob: -10.503225326538086
    6. ' if' → logprob: -12.128225326538086
    7. '           ' → logprob: -13.128225326538086
    8. '               ' → logprob: -13.628225326538086
    9. '       ' → logprob: -14.003225326538086
    10. '#if' → logprob: -14.003225326538086

Token 604: ' on' (ID: 402)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.001503790495917201
    2. ' h' → logprob: -6.501503944396973
    3. '(h' → logprob: -14.376503944396973
    4. 'w' → logprob: -14.626503944396973
    5. '	h' → logprob: -15.751503944396973
    6. '   ' → logprob: -16.126502990722656
    7. 'not' → logprob: -16.626502990722656
    8. ' not' → logprob: -17.001502990722656
    9. '#' → logprob: -17.376502990722656
    10. '<h' → logprob: -17.751502990722656

Token 605: ' est' (ID: 893)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.09925839304924011
    2. 'n' → logprob: -2.5992584228515625
    3. ' h' → logprob: -4.2242584228515625
    4. ' n' → logprob: -6.0992584228515625
    5. 'w' → logprob: -7.2242584228515625
    6. 's' → logprob: -7.3492584228515625
    7. 'est' → logprob: -7.5992584228515625
    8. '[h' → logprob: -7.5992584228515625
    9. '<h' → logprob: -8.724258422851562
    10. ' est' → logprob: -8.724258422851562

Token 606: ' sur' (ID: 1512)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03619696572422981
    2. ' h' → logprob: -3.5361969470977783
    3. ' not' → logprob: -5.411197185516357
    4. 'not' → logprob: -6.536197185516357
    5. 'dans' → logprob: -8.9111967086792
    6. '<h' → logprob: -9.4111967086792
    7. ' dans' → logprob: -9.6611967086792
    8. '   ' → logprob: -9.9111967086792
    9. 'à' → logprob: -9.9111967086792
    10. ' à' → logprob: -10.1611967086792

Token 607: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00976801197975874
    2. ' h' → logprob: -4.634768009185791
    3. '(h' → logprob: -12.25976848602295
    4. '	h' → logprob: -13.25976848602295
    5. ' not' → logprob: -13.63476848602295
    6. '<h' → logprob: -13.63476848602295
    7. '   ' → logprob: -14.25976848602295
    8. 'not' → logprob: -14.38476848602295
    9. ' la' → logprob: -14.50976848602295
    10. 'l' → logprob: -14.75976848602295

Token 608: ' dernière' (ID: 39497)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.7517186403274536
    2. 'dern' → logprob: -0.7517186403274536
    3. 'ligne' → logprob: -3.126718521118164
    4. 'last' → logprob: -4.626718521118164
    5. ' dernière' → logprob: -6.126718521118164
    6. 'Dern' → logprob: -8.001718521118164
    7. 'l' → logprob: -9.251718521118164
    8. 'h' → logprob: -9.251718521118164
    9. '#' → logprob: -9.751718521118164
    10. ' derni' → logprob: -9.876718521118164

Token 609: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.6973244547843933
    2. 'ligne' → logprob: -0.6973244547843933
    3. ' ligne' → logprob: -6.197324275970459
    4. ' colonne' → logprob: -6.572324275970459
    5. 'line' → logprob: -8.822324752807617
    6. 'l' → logprob: -8.947324752807617
    7. '   ' → logprob: -8.947324752807617
    8. ' ' → logprob: -9.322324752807617
    9. '#' → logprob: -9.447324752807617
    10. 'colon' → logprob: -9.822324752807617

Token 610: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6594156622886658
    2. ' and' → logprob: -0.9094156622886658
    3. ' if' → logprob: -3.2844157218933105
    4. 'and' → logprob: -3.4094157218933105
    5. ':' → logprob: -5.6594157218933105
    6. '   ' → logprob: -6.4094157218933105
    7. 'elif' → logprob: -6.9094157218933105
    8. '                   ' → logprob: -7.1594157218933105
    9. ',' → logprob: -7.5344157218933105
    10. '<|end|>' → logprob: -7.6594157218933105

Token 611: 'dro' (ID: 100256)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.9981420336989686e-05
    2. ' h' → logprob: -11.000020027160645
    3. 'w' → logprob: -12.875020027160645
    4. ')' → logprob: -14.875020027160645
    5. '   ' → logprob: -15.375020027160645
    6. 'if' → logprob: -17.125019073486328
    7. '<h' → logprob: -17.625019073486328
    8. '```' → logprob: -17.875019073486328
    9. '	h' → logprob: -18.125019073486328
    10. '(h' → logprob: -18.500019073486328

Token 612: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.015368643216788769
    2. 'i' → logprob: -4.515368461608887
    3. 'it' → logprob: -6.015368461608887
    4. 'e' → logprob: -7.015368461608887
    5. '   ' → logprob: -7.640368461608887
    6. ' ite' → logprob: -8.890368461608887
    7. 'ité' → logprob: -9.515368461608887
    8. '    ' → logprob: -10.140368461608887
    9. 'ites' → logprob: -10.140368461608887
    10. 'te' → logprob: -10.265368461608887

Token 613: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2516285479068756
    2. 'et' → logprob: -2.6266286373138428
    3. ' et' → logprob: -2.7516286373138428
    4. ',' → logprob: -3.0016286373138428
    5. '),' → logprob: -4.001628398895264
    6. '):
' → logprob: -5.126628398895264
    7. 'e' → logprob: -5.501628398895264
    8. '):' → logprob: -5.626628398895264
    9. ' and' → logprob: -6.001628398895264
    10. 'and' → logprob: -7.626628398895264

Token 614: ' mais' (ID: 2899)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03013770282268524
    2. ' if' → logprob: -3.530137777328491
    3. '               ' → logprob: -8.40513801574707
    4. '#' → logprob: -9.15513801574707
    5. '                   ' → logprob: -11.03013801574707
    6. '   ' → logprob: -12.03013801574707
    7. 'elif' → logprob: -12.03013801574707
    8. ' si' → logprob: -12.15513801574707
    9. ' #' → logprob: -12.15513801574707
    10. 's' → logprob: -12.28013801574707

Token 615: ' PAS' (ID: 66794)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.026309238746762276
    2. ' h' → logprob: -3.6513092517852783
    3. ' not' → logprob: -13.2763090133667
    4. '#' → logprob: -13.6513090133667
    5. 'if' → logprob: -13.7763090133667
    6. '(h' → logprob: -13.9013090133667
    7. ' que' → logprob: -14.1513090133667
    8. '	h' → logprob: -14.2763090133667
    9. ' ' → logprob: -14.6513090133667
    10. '   ' → logprob: -14.7763090133667

Token 616: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.11571180075407028
    2. 'la' → logprob: -2.7407116889953613
    3. ' sur' → logprob: -3.8657116889953613
    4. 'le' → logprob: -4.115711688995361
    5. 'h' → logprob: -5.365711688995361
    6. '(h' → logprob: -7.115711688995361
    7. 'au' → logprob: -7.240711688995361
    8. '#' → logprob: -7.740711688995361
    9. 'dans' → logprob: -8.49071216583252
    10. 'à' → logprob: -8.61571216583252

Token 617: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.008968248032033443
    2. ' la' → logprob: -4.758968353271484
    3. 'h' → logprob: -8.133968353271484
    4. 'the' → logprob: -10.258968353271484
    5. 'le' → logprob: -11.883968353271484
    6. '(h' → logprob: -12.258968353271484
    7. 'l' → logprob: -12.883968353271484
    8. ' h' → logprob: -13.133968353271484
    9. '<h' → logprob: -13.258968353271484
    10. '#' → logprob: -13.508968353271484

Token 618: ' dernière' (ID: 39497)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.5463489294052124
    2. 'last' → logprob: -1.4213489294052124
    3. 'der' → logprob: -2.046349048614502
    4. ' dernière' → logprob: -3.796349048614502
    5. 'Dern' → logprob: -4.171349048614502
    6. ' derni' → logprob: -5.171349048614502
    7. ' last' → logprob: -5.796349048614502
    8. 'ligne' → logprob: -6.296349048614502
    9. ' dernier' → logprob: -7.546349048614502
    10. ' der' → logprob: -7.671349048614502

Token 619: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.007472217082977295
    2. ' ligne' → logprob: -5.007472038269043
    3. 'line' → logprob: -8.132472038269043
    4. 'row' → logprob: -8.757472038269043
    5. 'l' → logprob: -9.007472038269043
    6. '#' → logprob: -9.757472038269043
    7. 'lig' → logprob: -10.632472038269043
    8. 'lin' → logprob: -10.757472038269043
    9. 'rang' → logprob: -11.007472038269043
    10. '   ' → logprob: -11.132472038269043

Token 620: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0400186777114868
    2. ' if' → logprob: -1.5400186777114868
    3. ',' → logprob: -1.9150186777114868
    4. '<|end|>' → logprob: -2.5400185585021973
    5. ' and' → logprob: -2.9150185585021973
    6. '               ' → logprob: -3.0400185585021973
    7. 'if' → logprob: -3.1650185585021973
    8. ':
' → logprob: -3.7900185585021973
    9. '           ' → logprob: -4.415018558502197
    10. '                   ' → logprob: -4.790018558502197

Token 621: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07059760391712189
    2. 'if' → logprob: -3.6955976486206055
    3. ' if' → logprob: -3.8205976486206055
    4. ' and' → logprob: -4.6955976486206055
    5. '                   ' → logprob: -5.0705976486206055
    6. '           ' → logprob: -6.1955976486206055
    7. ':' → logprob: -6.3205976486206055
    8. '```' → logprob: -7.0705976486206055
    9. ':
' → logprob: -8.070597648620605
    10. '   ' → logprob: -8.695597648620605

Token 622: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0032141993287950754
    2. ' if' → logprob: -5.753214359283447
    3. 'elif' → logprob: -10.753213882446289
    4. '               ' → logprob: -11.503213882446289
    5. '           ' → logprob: -12.378213882446289
    6. '```' → logprob: -14.878213882446289
    7. '                   ' → logprob: -15.003213882446289
    8. '       ' → logprob: -16.75321388244629
    9. 'cnt' → logprob: -16.87821388244629
    10. '   ' → logprob: -17.00321388244629

Token 623: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00861468818038702
    2. ' h' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.008615493774414
    4. '(h' → logprob: -16.258615493774414
    5. '	h' → logprob: -17.508615493774414
    6. '<h' → logprob: -18.883615493774414
    7. '    ' → logprob: -20.883615493774414
    8. '[h' → logprob: -21.008615493774414
    9. ' ' → logprob: -21.008615493774414
    10. ' ' → logprob: -21.383615493774414

Token 624: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1602427214384079
    2. '!=' → logprob: -1.9102426767349243
    3. '!=(' → logprob: -11.785243034362793
    4. '<' → logprob: -11.910243034362793
    5. ']!=' → logprob: -13.410243034362793
    6. ')!=' → logprob: -13.910243034362793
    7. '!=-' → logprob: -14.410243034362793
    8. '()!=' → logprob: -14.660243034362793
    9. ' <' → logprob: -15.285243034362793
    10. '<|end|>' → logprob: -15.660243034362793

Token 625: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.676292231422849e-05
    2. ' H' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.625017166137695
    4. '	H' → logprob: -19.250017166137695
    5. '(H' → logprob: -19.250017166137695
    6. '           ' → logprob: -20.500017166137695
    7. '       ' → logprob: -21.125017166137695
    8. '#' → logprob: -21.375017166137695
    9. ' ' → logprob: -21.375017166137695
    10. ',H' → logprob: -22.000017166137695

Token 626: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.253090865968261e-06
    2. ' -' → logprob: -11.625009536743164
    3. '1' → logprob: -15.375009536743164
    4. '()-' → logprob: -18.375009536743164
    5. '−' → logprob: -20.250009536743164
    6. '–' → logprob: -20.250009536743164
    7. '-
' → logprob: -20.500009536743164
    8. '```' → logprob: -21.125009536743164
    9. '   ' → logprob: -21.250009536743164
    10. '#' → logprob: -21.500009536743164

Token 627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '-' → logprob: -15.250000953674316
    4. '１' → logprob: -19.375
    5. '۱' → logprob: -19.5
    6. '<|end|>' → logprob: -19.625
    7. '   ' → logprob: -19.875
    8. '
' → logprob: -20.0
    9. '```' → logprob: -20.25
    10. '१' → logprob: -20.875

Token 628: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5769295692443848
    2. ':
' → logprob: -0.8269295692443848
    3. '                   ' → logprob: -7.701929569244385
    4. '               ' → logprob: -7.951929569244385
    5. '           ' → logprob: -9.326929092407227
    6. ',' → logprob: -10.951929092407227
    7. ' :
' → logprob: -11.201929092407227
    8. ':
' → logprob: -11.326929092407227
    9. '):
' → logprob: -11.576929092407227
    10. ' and' → logprob: -11.576929092407227

Token 629: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016597529873251915
    2. '                   ' → logprob: -4.641597747802734
    3. ':' → logprob: -5.391597747802734
    4. '           ' → logprob: -6.891597747802734
    5. ':
' → logprob: -6.891597747802734
    6. '       ' → logprob: -10.016597747802734
    7. '                ' → logprob: -10.391597747802734
    8. '                       ' → logprob: -10.391597747802734
    9. '   ' → logprob: -10.641597747802734
    10. '              ' → logprob: -10.891597747802734

Token 630: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6187049150466919
    2. '                   ' → logprob: -1.493704915046692
    3. 'cnt' → logprob: -1.618704915046692
    4. '                       ' → logprob: -3.8687047958374023
    5. '#' (adapté à ' #') → logprob: -4.743704795837402
    6. '                    ' → logprob: -5.618704795837402
    7. '                ' → logprob: -6.118704795837402
    8. ' cnt' → logprob: -7.493704795837402
    9. '                    
' → logprob: -7.493704795837402
    10. '           ' → logprob: -7.618704795837402

Token 631: ' In' (ID: 730)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0004060050705447793
    2. '                   ' → logprob: -8.125406265258789
    3. ' cnt' → logprob: -10.125406265258789
    4. '#' → logprob: -10.125406265258789
    5. '               ' → logprob: -10.500406265258789
    6. '                       ' → logprob: -14.125406265258789
    7. '	cnt' → logprob: -14.750406265258789
    8. '                    
' → logprob: -15.000406265258789
    9. '           ' → logprob: -15.500406265258789
    10. 'count' → logprob: -15.625406265258789

Token 632: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.0034320964477956295
    2. 'cnt' → logprob: -6.253432273864746
    3. 'crement' → logprob: -6.878432273864746
    4. 'cre' → logprob: -8.378432273864746
    5. 'c' → logprob: -8.628432273864746
    6. 'cré' → logprob: -10.128432273864746
    7. 'crt' → logprob: -11.003432273864746
    8. 't' → logprob: -12.878432273864746
    9. '[' → logprob: -14.003432273864746
    10. 'crements' → logprob: -14.503432273864746

Token 633: 'ément' (ID: 17645)
  Prédit: 'crement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crement' → logprob: -0.8138792514801025
    2. 'ément' → logprob: -1.3138792514801025
    3. 'cr' → logprob: -1.5638792514801025
    4. 'ment' → logprob: -3.1888792514801025
    5. 'rement' → logprob: -3.5638792514801025
    6. 'érer' → logprob: -6.313879013061523
    7. 'cré' → logprob: -6.313879013061523
    8. 'cnt' → logprob: -6.938879013061523
    9. 'té' → logprob: -7.438879013061523
    10. 'ré' → logprob: -7.438879013061523

Token 634: 'er' (ID: 259)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0761377140879631
    2. 'cnt' → logprob: -2.9511377811431885
    3. '               ' → logprob: -4.826137542724609
    4. '=' → logprob: -5.326137542724609
    5. '           ' → logprob: -6.201137542724609
    6. '                       ' → logprob: -6.326137542724609
    7. 'er' → logprob: -6.576137542724609
    8. '(cnt' → logprob: -6.701137542724609
    9. ' cnt' → logprob: -7.701137542724609
    10. ' =' → logprob: -8.20113754272461

Token 635: ' le' (ID: 505)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.25213515758514404
    2. ' cnt' → logprob: -1.502135157585144
    3. '(cnt' → logprob: -9.252135276794434
    4. '[cnt' → logprob: -10.252135276794434
    5. '	cnt' → logprob: -10.252135276794434
    6. '1' → logprob: -11.252135276794434
    7. '   ' → logprob: -11.877135276794434
    8. '               ' → logprob: -12.252135276794434
    9. 'le' → logprob: -12.627135276794434
    10. '           ' → logprob: -12.877135276794434

Token 636: ' compteur' (ID: 163344)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.14398817718029022
    2. '1' → logprob: -2.0189881324768066
    3. ' cnt' → logprob: -6.768988132476807
    4. ' ' → logprob: -9.268988609313965
    5. 'count' → logprob: -10.893988609313965
    6. 'counter' → logprob: -11.518988609313965
    7. '	cnt' → logprob: -11.643988609313965
    8. '   ' → logprob: -12.018988609313965
    9. '(cnt' → logprob: -12.018988609313965
    10. '```' → logprob: -12.643988609313965

Token 637: ' de' (ID: 334)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07380060851573944
    2. 'cnt' → logprob: -2.823800563812256
    3. '               ' → logprob: -5.323800563812256
    4. '+=' → logprob: -6.073800563812256
    5. ' +=' → logprob: -6.698800563812256
    6. '                       ' → logprob: -6.698800563812256
    7. '=' → logprob: -7.198800563812256
    8. ' cnt' → logprob: -7.823800563812256
    9. '           ' → logprob: -8.073801040649414
    10. ' =' → logprob: -9.073801040649414

Token 638: ' mouvements' (ID: 119420)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005613881163299084
    2. 'cnt' → logprob: -5.505613803863525
    3. 'm' → logprob: -7.130613803863525
    4. ' ' → logprob: -7.380613803863525
    5. ' cnt' → logprob: -10.005614280700684
    6. ' mouvements' → logprob: -10.130614280700684
    7. 'mov' → logprob: -11.255614280700684
    8. 'moves' → logprob: -12.005614280700684
    9. ' mouvement' → logprob: -13.380614280700684
    10. ' movements' → logprob: -14.005614280700684

Token 639: ' car' (ID: 1669)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1921045333147049
    2. 'cnt' → logprob: -1.8171045780181885
    3. '                       ' → logprob: -5.192104339599609
    4. '               ' → logprob: -5.692104339599609
    5. ' cnt' → logprob: -6.317104339599609
    6. '=' → logprob: -7.317104339599609
    7. '           ' → logprob: -8.69210433959961
    8. '(cnt' → logprob: -8.94210433959961
    9. '                    
' → logprob: -9.31710433959961
    10. '```' → logprob: -9.44210433959961

Token 640: ' on' (ID: 402)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5759565830230713
    2. ' cnt' → logprob: -0.8259565830230713
    3. '                   ' → logprob: -11.700956344604492
    4. '	cnt' → logprob: -12.450956344604492
    5. '(cnt' → logprob: -12.825956344604492
    6. '                       ' → logprob: -14.575956344604492
    7. '               ' → logprob: -14.575956344604492
    8. '[cnt' → logprob: -14.700956344604492
    9. '1' → logprob: -14.950956344604492
    10. '_cnt' → logprob: -15.825956344604492

Token 641: ' va' (ID: 3423)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5986562967300415
    2. ' cnt' → logprob: -0.8486562967300415
    3. '                   ' → logprob: -4.723656177520752
    4. '               ' → logprob: -4.848656177520752
    5. '           ' → logprob: -6.223656177520752
    6. '                       ' → logprob: -7.973656177520752
    7. ' va' → logprob: -8.34865665435791
    8. '       ' → logprob: -8.34865665435791
    9. '	cnt' → logprob: -8.34865665435791
    10. 'continue' → logprob: -8.47365665435791

Token 642: ' déplacer' (ID: 142135)
  Prédit: ' effectuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' effectuer' → logprob: -0.5035386085510254
    2. '1' → logprob: -1.6285386085510254
    3. 'effect' → logprob: -2.2535386085510254
    4. 'faire' → logprob: -2.7535386085510254
    5. ' effect' → logprob: -4.878538608551025
    6. 'contin' → logprob: -5.128538608551025
    7. '   ' → logprob: -5.628538608551025
    8. 'cnt' → logprob: -5.878538608551025
    9. ' faire' → logprob: -6.128538608551025
    10. '           ' → logprob: -6.503538608551025

Token 643: ' vers' (ID: 3640)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.03335300460457802
    2. '1' → logprob: -3.658353090286255
    3. ' cnt' → logprob: -5.033352851867676
    4. '                   ' → logprob: -8.408352851867676
    5. ' ' → logprob: -9.283352851867676
    6. '               ' → logprob: -9.658352851867676
    7. '	cnt' → logprob: -9.658352851867676
    8. '(cnt' → logprob: -10.658352851867676
    9. '[cnt' → logprob: -11.408352851867676
    10. '           ' → logprob: -12.408352851867676

Token 644: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.9701727628707886
    2. '1' → logprob: -1.3451727628707886
    3. 'l' → logprob: -2.220172882080078
    4. ' h' → logprob: -2.345172882080078
    5. 'la' → logprob: -2.845172882080078
    6. ' la' → logprob: -3.095172882080078
    7. 'le' → logprob: -4.220172882080078
    8. 'cnt' → logprob: -4.595172882080078
    9. ' l' → logprob: -5.095172882080078
    10. ' le' → logprob: -5.220172882080078

Token 645: ' ligne' (ID: 19583)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.8793467283248901
    2. 'ligne' → logprob: -1.1293467283248901
    3. '1' → logprob: -1.5043467283248901
    4. 'bas' → logprob: -4.62934684753418
    5. ' case' → logprob: -4.75434684753418
    6. ' ligne' → logprob: -5.25434684753418
    7. 'l' → logprob: -5.50434684753418
    8. 'cnt' → logprob: -5.62934684753418
    9. ' ' → logprob: -6.50434684753418
    10. 'next' → logprob: -6.75434684753418

Token 646: ' du' (ID: 1462)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1395578235387802
    2. '+' → logprob: -2.5145578384399414
    3. 'cnt' → logprob: -3.6395578384399414
    4. 'h' → logprob: -4.889557838439941
    5. '               ' → logprob: -5.389557838439941
    6. '   ' → logprob: -5.764557838439941
    7. '++' → logprob: -6.264557838439941
    8. ' suivante' → logprob: -6.514557838439941
    9. ' +' → logprob: -7.514557838439941
    10. '                       ' → logprob: -7.514557838439941

Token 647: ' dessous' (ID: 120954)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.08953160047531128
    2. 'h' → logprob: -2.464531660079956
    3. 'ha' → logprob: -8.214531898498535
    4. 'haut' → logprob: -8.714531898498535
    5. ' bas' → logprob: -9.964531898498535
    6. 'b' → logprob: -9.964531898498535
    7. 'below' → logprob: -10.714531898498535
    8. ' dessous' → logprob: -11.089531898498535
    9. 'dess' → logprob: -12.089531898498535
    10. 'bottom' → logprob: -12.714531898498535

Token 648: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.48042595386505127
    2. 'cnt' → logprob: -0.9804259538650513
    3. '               ' → logprob: -5.980425834655762
    4. '                       ' → logprob: -5.980425834655762
    5. ' cnt' → logprob: -8.230425834655762
    6. '           ' → logprob: -8.605425834655762
    7. '[cnt' → logprob: -8.855425834655762
    8. ',' → logprob: -8.980425834655762
    9. '```' → logprob: -8.980425834655762
    10. '                    
' → logprob: -9.355425834655762

Token 649: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.45921629667282104
    2. 'cnt' → logprob: -1.0842163562774658
    3. '               ' → logprob: -4.084216117858887
    4. '                       ' → logprob: -5.459216117858887
    5. ' cnt' → logprob: -5.459216117858887
    6. '```' → logprob: -5.834216117858887
    7. '           ' → logprob: -7.459216117858887
    8. '       ' → logprob: -7.959216117858887
    9. '[cnt' → logprob: -8.084216117858887
    10. '                    
' → logprob: -9.209216117858887

Token 650: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0022118736524134874
    2. '                   ' → logprob: -6.252212047576904
    3. ' cnt' → logprob: -8.752211570739746
    4. '                       ' → logprob: -9.877211570739746
    5. '               ' → logprob: -10.127211570739746
    6. 'count' → logprob: -10.627211570739746
    7. '1' → logprob: -12.752211570739746
    8. '           ' → logprob: -13.002211570739746
    9. '	cnt' → logprob: -13.502211570739746
    10. '                    ' → logprob: -14.502211570739746

Token 651: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38687485456466675
    2. ' +=' → logprob: -1.1368749141693115
    3. ']+=' → logprob: -12.76187515258789
    4. '                   ' → logprob: -14.63687515258789
    5. '=' → logprob: -15.88687515258789
    6. '   ' → logprob: -16.38687515258789
    7. '```' → logprob: -16.38687515258789
    8. '+' → logprob: -16.51187515258789
    9. '               ' → logprob: -17.01187515258789
    10. '           ' → logprob: -17.13687515258789

Token 652: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.25247573852539
    4. '```' → logprob: -18.62747573852539
    5. '+' → logprob: -20.12747573852539
    6. '                   ' → logprob: -20.50247573852539
    7. '１' → logprob: -20.50247573852539
    8. ' ' → logprob: -20.50247573852539
    9. '  ' → logprob: -20.75247573852539
    10. '           ' → logprob: -21.12747573852539

Token 653: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -18.875
    4. '   ' → logprob: -19.5
    5. '１' → logprob: -20.75
    6. '<|end|>' → logprob: -21.25
    7. '+' → logprob: -21.6875
    8. '১' → logprob: -22.0625
    9. '۱' → logprob: -22.25
    10. '१' → logprob: -22.5625

Token 654: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020948227494955063
    2. '               ' → logprob: -4.02094841003418
    3. '           ' → logprob: -6.77094841003418
    4. 'ans' → logprob: -7.39594841003418
    5. '       ' → logprob: -7.64594841003418
    6. '                    
' → logprob: -9.14594841003418
    7. '                       ' → logprob: -9.14594841003418
    8. '                    ' → logprob: -9.52094841003418
    9. '<|end|>' → logprob: -9.64594841003418
    10. '```' → logprob: -10.14594841003418

Token 655: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.028840921819210052
    2. '               ' → logprob: -3.903841018676758
    3. '#' → logprob: -5.278841018676758
    4. '           ' → logprob: -6.653841018676758
    5. 'ans' → logprob: -6.653841018676758
    6. '```' → logprob: -8.153841018676758
    7. '       ' → logprob: -8.903841018676758
    8. ' ans' → logprob: -10.153841018676758
    9. '                       ' → logprob: -10.278841018676758
    10. '                    ' → logprob: -10.528841018676758

Token 656: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3825145363807678
    2. '                   ' → logprob: -1.257514476776123
    3. '#' (adapté à ' #') → logprob: -3.632514476776123
    4. '               ' → logprob: -5.507514476776123
    5. ' ans' → logprob: -6.132514476776123
    6. '           ' → logprob: -7.382514476776123
    7. '                    ' → logprob: -9.757514953613281
    8. '                       ' → logprob: -10.632514953613281
    9. '                  ' → logprob: -10.757514953613281
    10. '       ' → logprob: -10.757514953613281

Token 657: ' En' (ID: 2130)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0011260485043749213
    2. ' ans' → logprob: -7.376125812530518
    3. '                   ' → logprob: -7.626125812530518
    4. '               ' → logprob: -11.501126289367676
    5. '           ' → logprob: -14.251126289367676
    6. '	ans' → logprob: -15.001126289367676
    7. '(ans' → logprob: -15.376126289367676
    8. '#' → logprob: -16.37612533569336
    9. '                    ' → logprob: -16.62612533569336
    10. 'ann' → logprob: -16.62612533569336

Token 658: 'registrer' (ID: 192246)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.029194677248597145
    2. 'registrer' → logprob: -4.2791948318481445
    3. ' ans' → logprob: -4.5291948318481445
    4. '           ' → logprob: -7.2791948318481445
    5. '```' → logprob: -7.6541948318481445
    6. 'code' → logprob: -7.6541948318481445
    7. 'append' → logprob: -7.9041948318481445
    8. 'app' → logprob: -7.9041948318481445
    9. '(ans' → logprob: -8.154194831848145
    10. 'register' → logprob: -8.279194831848145

Token 659: ' ce' (ID: 2357)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.061356183141469955
    2. '[h' → logprob: -3.6863560676574707
    3. 'ans' → logprob: -3.8113560676574707
    4. '(h' → logprob: -4.561356067657471
    5. '(ans' → logprob: -6.436356067657471
    6. '[' → logprob: -8.311356544494629
    7. ' ans' → logprob: -11.561356544494629
    8. '[l' → logprob: -11.686356544494629
    9. '(' → logprob: -12.436356544494629
    10. 'Ans' → logprob: -12.811356544494629

Token 660: ' mouvement' (ID: 62236)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09166675806045532
    2. 'm' → logprob: -2.4666666984558105
    3. 'move' → logprob: -6.8416666984558105
    4. 'movement' → logprob: -7.2166666984558105
    5. ' mouvement' → logprob: -7.5916666984558105
    6. ' ans' → logprob: -8.716667175292969
    7. 'mov' → logprob: -9.716667175292969
    8. '   ' → logprob: -10.591667175292969
    9. ' déplacement' → logprob: -10.716667175292969
    10. '[' → logprob: -10.716667175292969

Token 661: ' :' (ID: 712)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09626708179712296
    2. '                   ' → logprob: -2.721266984939575
    3. '(ans' → logprob: -4.846267223358154
    4. ' ans' → logprob: -5.096267223358154
    5. '[h' → logprob: -5.221267223358154
    6. '[' → logprob: -5.471267223358154
    7. '               ' → logprob: -6.346267223358154
    8. '.append' → logprob: -7.971267223358154
    9. '           ' → logprob: -9.221266746520996
    10. '                       ' → logprob: -9.846266746520996

Token 662: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6240831017494202
    2. '[h' → logprob: -0.8740831017494202
    3. '[' → logprob: -3.1240830421447754
    4. ' ans' → logprob: -5.874083042144775
    5. '(ans' → logprob: -8.874083518981934
    6. ' [' → logprob: -10.124083518981934
    7. '[a' → logprob: -10.499083518981934
    8. '	ans' → logprob: -13.499083518981934
    9. '[n' → logprob: -13.749083518981934
    10. 'ann' → logprob: -14.749083518981934

Token 663: ' dé' (ID: 2393)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.07664452493190765
    2. 'ans' → logprob: -3.3266444206237793
    3. '.append' → logprob: -3.3266444206237793
    4. ' append' → logprob: -6.576644420623779
    5. ' ans' → logprob: -8.076644897460938
    6. 'app' → logprob: -9.201644897460938
    7. 'appen' → logprob: -10.201644897460938
    8. 'move' → logprob: -10.326644897460938
    9. 'continue' → logprob: -10.951644897460938
    10. '           ' → logprob: -11.076644897460938

Token 664: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.0003010233340319246
    2. 'append' → logprob: -8.250301361083984
    3. 'ans' → logprob: -11.125301361083984
    4. 'pla' → logprob: -11.750301361083984
    5. 'placer' → logprob: -12.125301361083984
    6. 'placement' → logprob: -13.250301361083984
    7. 'plac' → logprob: -13.250301361083984
    8. 'move' → logprob: -13.375301361083984
    9. '.append' → logprob: -13.500301361083984
    10. '[' → logprob: -13.750301361083984

Token 665: ' ' (ID: 220)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[h' → logprob: -9.2576454335358e-05
    2. '(h' → logprob: -9.750092506408691
    3. '[' → logprob: -10.625092506408691
    4. ' [' → logprob: -11.625092506408691
    5. '([' → logprob: -14.000092506408691
    6. '1' → logprob: -16.000093460083008
    7. 'h' → logprob: -16.750093460083008
    8. '[(' → logprob: -18.375093460083008
    9. '[l' → logprob: -18.375093460083008
    10. '[j' → logprob: -19.000093460083008

Token 666: '1' (ID: 16)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -1.4378848391061183e-05
    2. '[' → logprob: -11.250014305114746
    3. ' [' → logprob: -14.500014305114746
    4. '(h' → logprob: -15.250014305114746
    5. '1' → logprob: -15.375014305114746
    6. '[a' → logprob: -15.500014305114746
    7. '[l' → logprob: -17.250015258789062
    8. '[
' → logprob: -18.000015258789062
    9. '[m' → logprob: -18.125015258789062
    10. 'h' → logprob: -18.375015258789062

Token 667: ' de' (ID: 334)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.004755496047437191
    2. '(h' → logprob: -5.62975549697876
    3. '([' → logprob: -7.75475549697876
    4. '[' → logprob: -7.75475549697876
    5. ' [' → logprob: -8.379755020141602
    6. 'from' → logprob: -10.254755020141602
    7. '[a' → logprob: -11.504755020141602
    8. ',' → logprob: -12.629755020141602
    9. '(' → logprob: -13.254755020141602
    10. '```' → logprob: -13.254755020141602

Token 668: ' la' (ID: 557)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.0002060436672763899
    2. '(h' → logprob: -8.875205993652344
    3. '[' → logprob: -10.250205993652344
    4. ' [' → logprob: -10.500205993652344
    5. 'h' → logprob: -12.875205993652344
    6. ' h' → logprob: -15.125205993652344
    7. '[a' → logprob: -15.250205993652344
    8. '[l' → logprob: -16.750205993652344
    9. ' (' → logprob: -17.500205993652344
    10. '[
' → logprob: -18.125205993652344

Token 669: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.002094349591061473
    2. ' case' → logprob: -6.377094268798828
    3. '[h' → logprob: -8.002094268798828
    4. 'h' → logprob: -10.002094268798828
    5. '(h' → logprob: -11.752094268798828
    6. '(case' → logprob: -13.252094268798828
    7. 'cas' → logprob: -14.627094268798828
    8. 'ligne' → logprob: -14.627094268798828
    9. '[' → logprob: -14.877094268798828
    10. 'cell' → logprob: -15.002094268798828

Token 670: ' (' (ID: 350)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.0621224045753479
    2. '(h' → logprob: -2.812122344970703
    3. '([' → logprob: -8.812122344970703
    4. 'h' → logprob: -12.937122344970703
    5. ' (' → logprob: -13.562122344970703
    6. '[' → logprob: -13.937122344970703
    7. ' [' → logprob: -14.562122344970703
    8. '```' → logprob: -15.562122344970703
    9. '   ' → logprob: -15.937122344970703
    10. '(' → logprob: -15.937122344970703

Token 671: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.1008713702030946e-06
    2. ' h' → logprob: -13.750001907348633
    3. '[h' → logprob: -14.000001907348633
    4. '(h' → logprob: -15.875001907348633
    5. '	h' → logprob: -20.000001907348633
    6. '_h' → logprob: -20.375001907348633
    7. ',h' → logprob: -20.875001907348633
    8. '<h' → logprob: -21.000001907348633
    9. ''h' → logprob: -21.250001907348633
    10. '"h' → logprob: -21.250001907348633

Token 672: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048617228865623474
    2. '+' → logprob: -3.048617124557495
    3. ' ,' → logprob: -10.923617362976074
    4. ' +' → logprob: -11.798617362976074
    5. '[' → logprob: -13.298617362976074
    6. ',h' → logprob: -14.423617362976074
    7. '```' → logprob: -14.423617362976074
    8. '[h' → logprob: -14.923617362976074
    9. ',
' → logprob: -15.048617362976074
    10. '   ' → logprob: -15.298617362976074

Token 673: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00317783304490149
    2. ' w' → logprob: -5.753177642822266
    3. '[w' → logprob: -16.753177642822266
    4. ',w' → logprob: -17.253177642822266
    5. '<w' → logprob: -17.878177642822266
    6. '(w' → logprob: -17.878177642822266
    7. '	w' → logprob: -18.253177642822266
    8. '   ' → logprob: -18.628177642822266
    9. '+' → logprob: -18.628177642822266
    10. '<|end|>' → logprob: -19.003177642822266

Token 674: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002705250633880496
    2. ',' → logprob: -6.252705097198486
    3. '+' → logprob: -7.502705097198486
    4. ']' → logprob: -9.002705574035645
    5. ' à' → logprob: -10.502705574035645
    6. 'à' → logprob: -10.627705574035645
    7. '[' → logprob: -11.252705574035645
    8. 'a' → logprob: -11.627705574035645
    9. '),' → logprob: -12.002705574035645
    10. '```' → logprob: -12.127705574035645

Token 675: ' à' (ID: 1221)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6685792207717896
    2. 'ans' → logprob: -1.2935792207717896
    3. ' ans' → logprob: -2.0435791015625
    4. '               ' → logprob: -2.6685791015625
    5. ',' → logprob: -5.2935791015625
    6. '           ' → logprob: -5.6685791015625
    7. 'à' → logprob: -6.1685791015625
    8. ' à' → logprob: -6.6685791015625
    9. '   ' → logprob: -7.2935791015625
    10. 'to' → logprob: -7.9185791015625

Token 676: ' la' (ID: 557)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.005670306738466024
    2. 'h' → logprob: -5.505670070648193
    3. '(h' → logprob: -6.505670070648193
    4. ' h' → logprob: -9.630670547485352
    5. ' [' → logprob: -10.505670547485352
    6. '[' → logprob: -13.130670547485352
    7. ' (' → logprob: -14.880670547485352
    8. '<h' → logprob: -16.50567054748535
    9. '   ' → logprob: -17.25567054748535
    10. '	h' → logprob: -17.50567054748535

Token 677: ' case' (ID: 1890)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.008953598327934742
    2. '(h' → logprob: -4.75895357131958
    3. '[h' → logprob: -8.008954048156738
    4. ' h' → logprob: -12.008954048156738
    5. ' (' → logprob: -16.258953094482422
    6. '<h' → logprob: -16.258953094482422
    7. '   ' → logprob: -16.258953094482422
    8. '{' → logprob: -16.633953094482422
    9. '	h' → logprob: -16.758953094482422
    10. '```' → logprob: -17.508953094482422

Token 678: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.003721576649695635
    2. '[h' → logprob: -5.628721714019775
    3. ' (' → logprob: -9.128721237182617
    4. 'h' → logprob: -11.378721237182617
    5. '(' → logprob: -14.253721237182617
    6. '```' → logprob: -14.878721237182617
    7. '   ' → logprob: -15.503721237182617
    8. '[(' → logprob: -16.753721237182617
    9. ' h' → logprob: -16.878721237182617
    10. '([' → logprob: -17.003721237182617

Token 679: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.26612818241119385
    2. '[h' → logprob: -1.5161281824111938
    3. '(h' → logprob: -4.266128063201904
    4. ' h' → logprob: -9.766128540039062
    5. '{' → logprob: -13.516128540039062
    6. '<h' → logprob: -13.891128540039062
    7. ' (' → logprob: -14.141128540039062
    8. ')' → logprob: -14.141128540039062
    9. '   ' → logprob: -14.641128540039062
    10. '```' → logprob: -14.641128540039062

Token 680: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0280383548888494e-06
    2. '+h' → logprob: -14.375000953674316
    3. ' +' → logprob: -15.250000953674316
    4. '[h' → logprob: -15.875000953674316
    5. '[' → logprob: -17.625001907348633
    6. '+,' → logprob: -18.000001907348633
    7. '+
' → logprob: -18.250001907348633
    8. ',' → logprob: -18.625001907348633
    9. '+[' → logprob: -19.625001907348633
    10. 'h' → logprob: -20.750001907348633

Token 681: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804677724838257
    2. '2' → logprob: -3.2880468368530273
    3. '+' → logprob: -12.288046836853027
    4. '```' → logprob: -14.913046836853027
    5. '
' → logprob: -15.413046836853027
    6. ' ' → logprob: -16.66304588317871
    7. '   ' → logprob: -17.66304588317871
    8. '`' → logprob: -18.66304588317871
    9. '[' → logprob: -18.66304588317871
    10. ')' → logprob: -19.03804588317871

Token 682: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012288003927096725
    2. '+' → logprob: -6.7512288093566895
    3. ' ,' → logprob: -9.876228332519531
    4. ' +' → logprob: -13.126228332519531
    5. '+,' → logprob: -13.376228332519531
    6. ')' → logprob: -13.501228332519531
    7. '[' → logprob: -14.501228332519531
    8. '',' → logprob: -14.751228332519531
    9. '   ' → logprob: -15.126228332519531
    10. ',w' → logprob: -15.251228332519531

Token 683: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.06198034808039665
    2. ' w' → logprob: -2.8119802474975586
    3. 'W' → logprob: -11.436980247497559
    4. ' W' → logprob: -13.811980247497559
    5. '   ' → logprob: -14.936980247497559
    6. '```' → logprob: -15.436980247497559
    7. '(w' → logprob: -15.686980247497559
    8. ' ' → logprob: -16.186981201171875
    9. '1' → logprob: -16.811981201171875
    10. ',w' → logprob: -17.311981201171875

Token 684: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.68022444692906e-05
    2. ')' → logprob: -10.375046730041504
    3. ' +' → logprob: -11.375046730041504
    4. ')
' → logprob: -13.125046730041504
    5. '[' → logprob: -14.125046730041504
    6. '```' → logprob: -14.375046730041504
    7. ')+' → logprob: -14.625046730041504
    8. '+
' → logprob: -16.12504768371582
    9. ']' → logprob: -16.62504768371582
    10. '#' → logprob: -16.87504768371582

Token 685: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03125874698162079
    2. 'ans' → logprob: -3.5312588214874268
    3. '               ' → logprob: -7.031258583068848
    4. ' ans' → logprob: -8.531258583068848
    5. '```' → logprob: -8.906258583068848
    6. '           ' → logprob: -9.031258583068848
    7. '                       ' → logprob: -9.781258583068848
    8. '(ans' → logprob: -10.281258583068848
    9. '                    
' → logprob: -10.531258583068848
    10. '       ' → logprob: -11.031258583068848

Token 686: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0005294414004310966
    2. '                   ' → logprob: -7.7505292892456055
    3. ' ans' → logprob: -9.250529289245605
    4. '               ' → logprob: -13.625529289245605
    5. 'cnt' → logprob: -13.750529289245605
    6. '(ans' → logprob: -15.750529289245605
    7. '	ans' → logprob: -16.000530242919922
    8. '           ' → logprob: -16.625530242919922
    9. '                       ' → logprob: -17.125530242919922
    10. 'ann' → logprob: -17.250530242919922

Token 687: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -12.87500286102295
    3. '.app' → logprob: -16.125003814697266
    4. 'append' → logprob: -16.375003814697266
    5. '.Append' → logprob: -19.000003814697266
    6. ' .' → logprob: -19.125003814697266
    7. '.extend' → logprob: -19.875003814697266
    8. '.ap' → logprob: -20.000003814697266
    9. ' append' → logprob: -21.250003814697266
    10. '[' → logprob: -21.375003814697266

Token 688: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.625000953674316
    3. '[h' → logprob: -15.625000953674316
    4. '([
' → logprob: -16.125
    5. '(' → logprob: -17.625
    6. '([[' → logprob: -18.75
    7. ' ([' → logprob: -19.125
    8. '[a' → logprob: -19.125
    9. '([(' → logprob: -19.125
    10. '=[' → logprob: -19.75

Token 689: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.2200749754119897e-06
    2. ' h' → logprob: -13.500001907348633
    3. '[h' → logprob: -14.250001907348633
    4. '(h' → logprob: -16.500001907348633
    5. '	h' → logprob: -19.875001907348633
    6. '<h' → logprob: -21.250001907348633
    7. '"h' → logprob: -21.375001907348633
    8. ',h' → logprob: -21.500001907348633
    9. '?h' → logprob: -22.125001907348633
    10. '+h' → logprob: -22.250001907348633

Token 690: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.704273118884885e-07
    2. ' +' → logprob: -14.375000953674316
    3. '+h' → logprob: -17.875
    4. '1' → logprob: -19.375
    5. '+
' → logprob: -19.75
    6. '[' → logprob: -19.75
    7. '＋' → logprob: -20.25
    8. 'h' → logprob: -21.125
    9. '+,' → logprob: -21.5
    10. '<|end|>' → logprob: -21.625

Token 691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. '+' → logprob: -11.50001049041748
    3. ' ' → logprob: -17.000009536743164
    4. '2' → logprob: -18.500009536743164
    5. '[' → logprob: -18.875009536743164
    6. '<|end|>' → logprob: -18.875009536743164
    7. '```' → logprob: -18.875009536743164
    8. ' +' → logprob: -19.875009536743164
    9. 'h' → logprob: -20.000009536743164
    10. '{' → logprob: -20.375009536743164

Token 692: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.865583706414327e-05
    2. ',w' → logprob: -9.75009822845459
    3. ' ,' → logprob: -10.25009822845459
    4. ',
' → logprob: -13.50009822845459
    5. 'w' → logprob: -13.75009822845459
    6. '+' → logprob: -14.12509822845459
    7. '<|end|>' → logprob: -14.25009822845459
    8. ',W' → logprob: -14.50009822845459
    9. ',h' → logprob: -15.75009822845459
    10. '‌,' → logprob: -16.000099182128906

Token 693: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.9054008084349334e-05
    2. ' w' → logprob: -10.250039100646973
    3. 'W' → logprob: -12.625039100646973
    4. '   ' → logprob: -15.250039100646973
    5. '	w' → logprob: -18.625038146972656
    6. '    ' → logprob: -18.625038146972656
    7. ' ' → logprob: -20.500038146972656
    8. '  ' → logprob: -20.750038146972656
    9. '(w' → logprob: -20.875038146972656
    10. '       ' → logprob: -21.250038146972656

Token 694: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.4121114822482923e-06
    2. ' +' → logprob: -12.625003814697266
    3. '+,' → logprob: -17.250003814697266
    4. '＋' → logprob: -17.875003814697266
    5. '+
' → logprob: -17.875003814697266
    6. ',' → logprob: -18.375003814697266
    7. '1' → logprob: -19.750003814697266
    8. '[' → logprob: -20.000003814697266
    9. ']+' → logprob: -20.250003814697266
    10. ''+' → logprob: -21.125003814697266

Token 695: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '+' → logprob: -14.000000953674316
    3. '2' → logprob: -15.375000953674316
    4. ' ' → logprob: -15.875000953674316
    5. '   ' → logprob: -17.125001907348633
    6. 'w' → logprob: -19.812501907348633
    7. '```' → logprob: -20.125001907348633
    8. '                   ' → logprob: -20.500001907348633
    9. ' +' → logprob: -20.500001907348633
    10. '
' → logprob: -20.625001907348633

Token 696: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036382899270392954
    2. ' ,' → logprob: -8.125364303588867
    3. ',h' → logprob: -9.625364303588867
    4. ',
' → logprob: -14.125364303588867
    5. 'h' → logprob: -14.500364303588867
    6. ' h' → logprob: -15.125364303588867
    7. '+' → logprob: -16.125364303588867
    8. ',w' → logprob: -17.375364303588867
    9. '+,' → logprob: -17.875364303588867
    10. '   ' → logprob: -18.000364303588867

Token 697: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.688212614681106e-05
    2. ' h' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.000017166137695
    4. '(h' → logprob: -17.250017166137695
    5. '	h' → logprob: -17.875017166137695
    6. '[h' → logprob: -19.250017166137695
    7. '<h' → logprob: -19.875017166137695
    8. '       ' → logprob: -21.375017166137695
    9. '+h' → logprob: -21.375017166137695
    10. '    ' → logprob: -22.000017166137695

Token 698: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5048530030981055e-06
    2. '1' → logprob: -14.000001907348633
    3. ' +' → logprob: -15.000001907348633
    4. '2' → logprob: -16.000001907348633
    5. '+h' → logprob: -17.125001907348633
    6. '```' → logprob: -17.125001907348633
    7. ']+' → logprob: -17.875001907348633
    8. '+
' → logprob: -18.000001907348633
    9. '+[' → logprob: -18.125001907348633
    10. '＋' → logprob: -18.125001907348633

Token 699: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.652451464906335e-05
    2. '1' → logprob: -11.125016212463379
    3. ' ' → logprob: -13.375016212463379
    4. '```' → logprob: -16.250017166137695
    5. '+' → logprob: -17.875017166137695
    6. '۲' → logprob: -18.687517166137695
    7. '２' → logprob: -18.937517166137695
    8. '   ' → logprob: -19.500017166137695
    9. '
' → logprob: -20.125017166137695
    10. '{' → logprob: -20.125017166137695

Token 700: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9743012671824545e-05
    2. ' ,' → logprob: -10.875020027160645
    3. 'w' → logprob: -14.625020027160645
    4. ',w' → logprob: -15.625020027160645
    5. '[' → logprob: -17.625019073486328
    6. '‌,' → logprob: -18.250019073486328
    7. '<|end|>' → logprob: -18.750019073486328
    8. '   ' → logprob: -18.750019073486328
    9. '```' → logprob: -18.875019073486328
    10. '،' → logprob: -19.375019073486328

Token 701: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0024762547109276056
    2. ' w' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.127476692199707
    4. '       ' → logprob: -16.00247573852539
    5. 'W' → logprob: -16.50247573852539
    6. '     ' → logprob: -17.37747573852539
    7. '    ' → logprob: -17.37747573852539
    8. '	w' → logprob: -17.50247573852539
    9. ' ' → logprob: -17.75247573852539
    10. '           ' → logprob: -18.12747573852539

Token 702: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.1008713702030946e-06
    2. ' +' → logprob: -13.125001907348633
    3. '+
' → logprob: -17.625001907348633
    4. '[' → logprob: -19.750001907348633
    5. '＋' → logprob: -20.125001907348633
    6. '+w' → logprob: -20.125001907348633
    7. '1' → logprob: -20.625001907348633
    8. '```' → logprob: -21.125001907348633
    9. '+[' → logprob: -21.250001907348633
    10. '+xml' → logprob: -21.500001907348633

Token 703: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '+' → logprob: -16.75
    3. ' ' → logprob: -18.0
    4. '```' → logprob: -19.875
    5. '   ' → logprob: -21.375
    6. ')' → logprob: -21.5
    7. ']' → logprob: -21.875
    8. '۱' → logprob: -21.875
    9. '<|end|>' → logprob: -21.875
    10. 'w' → logprob: -22.25

Token 704: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07891634106636047
    2. '])
' → logprob: -2.578916311264038
    3. '])
' → logprob: -11.453916549682617
    4. '                   ' → logprob: -11.703916549682617
    5. '               ' → logprob: -12.953916549682617
    6. ')' → logprob: -12.953916549682617
    7. ')
' → logprob: -13.703916549682617
    8. '           ' → logprob: -14.828916549682617
    9. ''])' → logprob: -15.328916549682617
    10. ']' → logprob: -15.328916549682617

Token 705: '                   ' (ID: 699)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6399632692337036
    2. '                   ' → logprob: -0.7649632692337036
    3. ' a' → logprob: -5.139963150024414
    4. '               ' → logprob: -6.764963150024414
    5. '```' → logprob: -9.014963150024414
    6. '                    
' → logprob: -9.889963150024414
    7. '	               ' → logprob: -10.389963150024414
    8. '           ' → logprob: -10.639963150024414
    9. '                    ' → logprob: -11.264963150024414
    10. '``' → logprob: -11.389963150024414

Token 706: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005348789971321821
    2. '                   ' → logprob: -5.2553486824035645
    3. ' a' → logprob: -9.130349159240723
    4. '               ' → logprob: -13.005349159240723
    5. '#' (adapté à ' #') → logprob: -13.255349159240723
    6. '```' → logprob: -14.380349159240723
    7. '                    ' → logprob: -14.505349159240723
    8. '           ' → logprob: -14.755349159240723
    9. '                       ' → logprob: -14.755349159240723
    10. '#a' → logprob: -15.380349159240723

Token 707: ' Dé' (ID: 27247)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.662937372922897e-05
    2. '                   ' → logprob: -9.250096321105957
    3. ' a' → logprob: -15.375096321105957
    4. '               ' → logprob: -15.625096321105957
    5. '   ' → logprob: -17.375097274780273
    6. '           ' → logprob: -17.750097274780273
    7. '#' → logprob: -17.875097274780273
    8. '                       ' → logprob: -18.625097274780273
    9. '       ' → logprob: -18.875097274780273
    10. '                  ' → logprob: -20.375097274780273

Token 708: 'cr' (ID: 798)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31506669521331787
    2. 'crement' → logprob: -1.3150666952133179
    3. 'cr' → logprob: -6.440066814422607
    4. 'c' → logprob: -9.19006633758545
    5. ' a' → logprob: -10.31506633758545
    6. 'crements' → logprob: -10.31506633758545
    7. 'cre' → logprob: -11.31506633758545
    8. 'cré' → logprob: -11.81506633758545
    9. 'CREMENT' → logprob: -11.94006633758545
    10. ' decrement' → logprob: -12.06506633758545

Token 709: 'ément' (ID: 17645)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0014360661152750254
    2. '                   ' → logprob: -7.251436233520508
    3. '               ' → logprob: -7.751436233520508
    4. '           ' → logprob: -8.876436233520508
    5. '                       ' → logprob: -9.876436233520508
    6. ' a' → logprob: -10.501436233520508
    7. '       ' → logprob: -11.501436233520508
    8. 'ment' → logprob: -11.626436233520508
    9. '[a' → logprob: -11.626436233520508
    10. 'er' → logprob: -11.876436233520508

Token 710: 'er' (ID: 259)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13890907168388367
    2. 'er' → logprob: -2.263909101486206
    3. '                   ' → logprob: -3.888909101486206
    4. ' a' → logprob: -5.888908863067627
    5. '               ' → logprob: -6.138908863067627
    6. '[a' → logprob: -9.763909339904785
    7. 'e' → logprob: -10.013909339904785
    8. 'de' → logprob: -10.013909339904785
    9. '                       ' → logprob: -10.263909339904785
    10. '[' → logprob: -10.263909339904785

Token 711: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014522972516715527
    2. ' a' → logprob: -4.389523029327393
    3. '                   ' → logprob: -6.764523029327393
    4. ' de' → logprob: -7.139523029327393
    5. 'de' → logprob: -10.014522552490234
    6. '               ' → logprob: -11.639522552490234
    7. '                       ' → logprob: -13.139522552490234
    8. '   ' → logprob: -13.264522552490234
    9. '                 ' → logprob: -13.389522552490234
    10. '[a' → logprob: -13.764522552490234

Token 712: ' case' (ID: 1890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.5252596464706585e-05
    2. '1' → logprob: -10.125044822692871
    3. ' a' → logprob: -12.375044822692871
    4. '```' → logprob: -14.375044822692871
    5. '[a' → logprob: -15.250044822692871
    6. 'case' → logprob: -16.625045776367188
    7. ' ' → logprob: -16.750045776367188
    8. 'code' → logprob: -17.125045776367188
    9. '#' → logprob: -17.750045776367188
    10. '   ' → logprob: -17.875045776367188

Token 713: ' cour' (ID: 2871)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01495746523141861
    2. '[h' → logprob: -4.264957427978516
    3. '[a' → logprob: -7.889957427978516
    4. ' a' → logprob: -8.139957427978516
    5. '```' → logprob: -9.764957427978516
    6. '                   ' → logprob: -10.389957427978516
    7. '               ' → logprob: -11.264957427978516
    8. '   ' → logprob: -12.389957427978516
    9. '[' → logprob: -12.389957427978516
    10. '[cur' → logprob: -12.889957427978516

Token 714: 'ante' (ID: 2116)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.06266066431999207
    2. 'ante' → logprob: -3.5626606941223145
    3. 'a' → logprob: -3.9376606941223145
    4. '[a' → logprob: -5.0626606941223145
    5. '[h' → logprob: -5.9376606941223145
    6. 'r' → logprob: -6.4376606941223145
    7. 'rent' → logprob: -6.9376606941223145
    8. 'h' → logprob: -7.5626606941223145
    9. '[' → logprob: -7.6876606941223145
    10. '[r' → logprob: -8.687660217285156

Token 715: ' car' (ID: 1669)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38760972023010254
    2. '                   ' → logprob: -1.1376097202301025
    3. ' a' → logprob: -7.887609481811523
    4. '               ' → logprob: -8.512609481811523
    5. '[a' → logprob: -9.012609481811523
    6. '           ' → logprob: -10.762609481811523
    7. '                       ' → logprob: -11.387609481811523
    8. '   ' → logprob: -13.137609481811523
    9. '                    ' → logprob: -13.637609481811523
    10. '                  ' → logprob: -13.637609481811523

Token 716: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006854608654975891
    2. ' a' → logprob: -5.00685453414917
    3. '                   ' → logprob: -9.131855010986328
    4. '1' → logprob: -10.881855010986328
    5. ' ' → logprob: -12.131855010986328
    6. '               ' → logprob: -13.131855010986328
    7. '                       ' → logprob: -13.506855010986328
    8. '   ' → logprob: -13.756855010986328
    9. '           ' → logprob: -14.006855010986328
    10. '       ' → logprob: -14.631855010986328

Token 717: ' donne' (ID: 30004)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0022874027490615845
    2. ' a' → logprob: -6.1272873878479
    3. '                   ' → logprob: -10.002287864685059
    4. '[a' → logprob: -11.002287864685059
    5. '           ' → logprob: -11.377287864685059
    6. '               ' → logprob: -11.627287864685059
    7. '                       ' → logprob: -11.877287864685059
    8. '[h' → logprob: -12.752287864685059
    9. '       ' → logprob: -13.127287864685059
    10. '```' → logprob: -13.627287864685059

Token 718: ' un' (ID: 537)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0713558942079544
    2. '                   ' → logprob: -2.9463558197021484
    3. '1' → logprob: -4.196355819702148
    4. ' a' → logprob: -7.446355819702148
    5. '               ' → logprob: -8.446355819702148
    6. ' ' → logprob: -8.696355819702148
    7. '```' → logprob: -8.946355819702148
    8. '   ' → logprob: -10.196355819702148
    9. '           ' → logprob: -10.321355819702148
    10. '                       ' → logprob: -10.571355819702148

Token 719: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10340835899114609
    2. 'a' → logprob: -2.3534083366394043
    3. ' ' → logprob: -6.103408336639404
    4. ' a' → logprob: -7.103408336639404
    5. '```' → logprob: -10.353408813476562
    6. '                   ' → logprob: -10.478408813476562
    7. '[' → logprob: -10.478408813476562
    8. '[a' → logprob: -10.728408813476562
    9. '   ' → logprob: -11.853408813476562
    10. '               ' → logprob: -12.603408813476562

Token 720: ' celle' (ID: 31790)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.40998875699006e-05
    2. ' a' → logprob: -9.62507438659668
    3. 'la' → logprob: -11.87507438659668
    4. ' la' → logprob: -14.62507438659668
    5. '1' → logprob: -15.25007438659668
    6. '```' → logprob: -15.62507438659668
    7. 'l' → logprob: -16.00007438659668
    8. '[a' → logprob: -17.00007438659668
    9. 'the' → logprob: -18.00007438659668
    10. ' ' → logprob: -18.12507438659668

Token 721: ' du' (ID: 1462)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.00012535012501757592
    2. 'a' → logprob: -9.25012493133545
    3. 'h' → logprob: -10.87512493133545
    4. '[a' → logprob: -11.50012493133545
    5. ' [' → logprob: -16.500125885009766
    6. '[' → logprob: -17.000125885009766
    7. '(h' → logprob: -17.625125885009766
    8. '                   ' → logprob: -18.000125885009766
    9. '+h' → logprob: -18.125125885009766
    10. '               ' → logprob: -19.125125885009766

Token 722: ' dessous' (ID: 120954)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.19325289130210876
    2. 'dess' → logprob: -2.5682528018951416
    3. 'bas' → logprob: -2.5682528018951416
    4. 'haut' → logprob: -4.818253040313721
    5. ' dessous' → logprob: -5.068253040313721
    6. 'below' → logprob: -6.068253040313721
    7. 'ligne' → logprob: -6.943253040313721
    8. '
' → logprob: -6.943253040313721
    9. 'ha' → logprob: -7.068253040313721
    10. '[h' → logprob: -7.193253040313721

Token 723: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3149382472038269
    2. '                   ' → logprob: -1.3149383068084717
    3. ' a' → logprob: -6.689938068389893
    4. '               ' → logprob: -8.06493854522705
    5. '           ' → logprob: -9.31493854522705
    6. '                       ' → logprob: -11.43993854522705
    7. '```' → logprob: -11.56493854522705
    8. '   ' → logprob: -13.06493854522705
    9. '       ' → logprob: -13.56493854522705
    10. '                    ' → logprob: -14.18993854522705

Token 724: '                   ' (ID: 699)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21181456744670868
    2. '                   ' → logprob: -1.711814522743225
    3. ' a' → logprob: -4.9618144035339355
    4. '               ' → logprob: -6.3368144035339355
    5. '                       ' → logprob: -7.2118144035339355
    6. '           ' → logprob: -7.7118144035339355
    7. '```' → logprob: -8.086814880371094
    8. '       ' → logprob: -9.961814880371094
    9. '                    ' → logprob: -11.211814880371094
    10. '   ' → logprob: -11.961814880371094

Token 725: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -1.4378848391061183e-05
    2. ' a' → logprob: -11.250014305114746
    3. '                   ' → logprob: -13.750014305114746
    4. '           ' → logprob: -16.750015258789062
    5. '```' → logprob: -17.000015258789062
    6. '                       ' → logprob: -17.625015258789062
    7. '   ' → logprob: -17.750015258789062
    8. '               ' → logprob: -17.750015258789062
    9. '       ' → logprob: -18.125015258789062
    10. '	a' → logprob: -18.625015258789062

Token 726: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -5.512236498361744e-07
    2. 'h' → logprob: -14.625000953674316
    3. '```' → logprob: -21.375
    4. '[a' → logprob: -21.375
    5. 'a' → logprob: -22.875
    6. ' [' → logprob: -23.125
    7. '(h' → logprob: -23.125
    8. '[' → logprob: -23.125
    9. ',h' → logprob: -23.75
    10. '[u' → logprob: -23.875

Token 727: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002346488763578236
    2. '[h' → logprob: -8.625234603881836
    3. '[w' → logprob: -10.375234603881836
    4. ']' → logprob: -11.250234603881836
    5. ' ][' → logprob: -12.375234603881836
    6. '[' → logprob: -13.125234603881836
    7. '}[' → logprob: -13.500234603881836
    8. '"][' → logprob: -13.750234603881836
    9. ''][' → logprob: -14.250234603881836
    10. 'h' → logprob: -14.875234603881836

Token 728: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.8889261304575484e-06
    2. '[w' → logprob: -12.625003814697266
    3. ' w' → logprob: -14.500003814697266
    4. '	w' → logprob: -17.875003814697266
    5. 'W' → logprob: -18.375003814697266
    6. ''w' → logprob: -19.000003814697266
    7. '][' → logprob: -19.125003814697266
    8. 'ｗ' → logprob: -19.375003814697266
    9. 'j' → logprob: -20.375003814697266
    10. 'v' → logprob: -20.500003814697266

Token 729: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12170704454183578
    2. ']-' → logprob: -2.621706962585449
    3. '-=' → logprob: -3.871706962585449
    4. ' -=' → logprob: -4.121706962585449
    5. '-' → logprob: -5.496706962585449
    6. '[' → logprob: -7.996706962585449
    7. '][' → logprob: -9.37170696258545
    8. '               ' → logprob: -9.37170696258545
    9. '           ' → logprob: -9.74670696258545
    10. '                   ' → logprob: -9.74670696258545

Token 730: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.006838749162852764
    2. ' -=' → logprob: -5.006838798522949
    3. '-' → logprob: -9.00683879852295
    4. '```' → logprob: -15.00683879852295
    5. '=' → logprob: -15.38183879852295
    6. '           ' → logprob: -16.756837844848633
    7. ']-' → logprob: -16.881837844848633
    8. '+=' → logprob: -17.256837844848633
    9. '   ' → logprob: -17.506837844848633
    10. ')' → logprob: -17.756837844848633

Token 731: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -18.375003814697266
    4. '<|end|>' → logprob: -18.500003814697266
    5. '   ' → logprob: -18.750003814697266
    6. '=' → logprob: -20.625003814697266
    7. '１' → logprob: -21.000003814697266
    8. '۱' → logprob: -21.125003814697266
    9. '                   ' → logprob: -21.250003814697266
    10. '           ' → logprob: -21.375003814697266

Token 732: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '<|end|>' → logprob: -18.625
    3. '```' → logprob: -18.625
    4. ' ' → logprob: -18.75
    5. '   ' → logprob: -21.0
    6. '۱' → logprob: -21.875
    7. '`' → logprob: -22.625
    8. '<|end|>' → logprob: -22.75
    9. '１' → logprob: -22.875
    10. '১' → logprob: -23.0

Token 733: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3134553134441376
    2. '                   ' → logprob: -1.31345534324646
    3. ' a' → logprob: -9.438455581665039
    4. '               ' → logprob: -9.688455581665039
    5. '           ' → logprob: -10.563455581665039
    6. '```' → logprob: -11.438455581665039
    7. '   ' → logprob: -12.188455581665039
    8. '                       ' → logprob: -12.813455581665039
    9. '       ' → logprob: -12.938455581665039
    10. '                    ' → logprob: -13.313455581665039

Token 734: '                   ' (ID: 699)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6967063546180725
    2. '                   ' → logprob: -0.6967063546180725
    3. '               ' → logprob: -6.196706295013428
    4. '```' → logprob: -6.946706295013428
    5. '           ' → logprob: -8.196706771850586
    6. ' a' → logprob: -9.321706771850586
    7. '       ' → logprob: -10.071706771850586
    8. '``' → logprob: -10.196706771850586
    9. '                       ' → logprob: -10.821706771850586
    10. '                    ' → logprob: -10.821706771850586

Token 735: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007662679417990148
    2. '                   ' → logprob: -7.250766277313232
    3. ' a' → logprob: -10.375765800476074
    4. '           ' → logprob: -11.750765800476074
    5. '   ' → logprob: -11.875765800476074
    6. '       ' → logprob: -12.125765800476074
    7. '                       ' → logprob: -13.250765800476074
    8. '               ' → logprob: -13.375765800476074
    9. ' ' → logprob: -14.250765800476074
    10. '```' → logprob: -14.250765800476074

Token 736: ' In' (ID: 730)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.981667537620524e-06
    2. ' a' → logprob: -13.250001907348633
    3. '                   ' → logprob: -15.750001907348633
    4. '   ' → logprob: -19.875001907348633
    5. '                       ' → logprob: -20.750001907348633
    6. '               ' → logprob: -21.125001907348633
    7. '	a' → logprob: -21.625001907348633
    8. 'A' → logprob: -22.000001907348633
    9. '```' → logprob: -22.125001907348633
    10. '
' → logprob: -22.250001907348633

Token 737: 'cr' (ID: 798)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0003210422000847757
    2. 'c' → logprob: -8.875321388244629
    3. ' a' → logprob: -9.375321388244629
    4. 'crement' → logprob: -10.250321388244629
    5. 'cre' → logprob: -10.750321388244629
    6. '[a' → logprob: -11.125321388244629
    7. '   ' → logprob: -11.875321388244629
    8. '[' → logprob: -12.625321388244629
    9. 'cr' → logprob: -12.750321388244629
    10. '[h' → logprob: -12.750321388244629

Token 738: 'ément' (ID: 17645)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7334468960762024
    2. 'crement' → logprob: -0.8584468960762024
    3. '                   ' → logprob: -3.7334468364715576
    4. 'ment' → logprob: -4.108447074890137
    5. '               ' → logprob: -4.358447074890137
    6. 'rement' → logprob: -4.983447074890137
    7. 'ément' → logprob: -5.233447074890137
    8. '                       ' → logprob: -5.358447074890137
    9. 'CREMENT' → logprob: -5.358447074890137
    10. 'cr' → logprob: -5.483447074890137

Token 739: 'er' (ID: 259)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.050730712711811066
    2. ' a' → logprob: -3.6757307052612305
    3. '[a' → logprob: -4.0507307052612305
    4. 'er' → logprob: -5.8007307052612305
    5. '[' → logprob: -5.8007307052612305
    6. '_a' → logprob: -9.05073070526123
    7. '               ' → logprob: -9.55073070526123
    8. '                   ' → logprob: -9.67573070526123
    9. '   ' → logprob: -9.80073070526123
    10. 'b' → logprob: -9.92573070526123

Token 740: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002141101285815239
    2. '1' → logprob: -6.627140998840332
    3. ' a' → logprob: -7.127140998840332
    4. ' de' → logprob: -12.127140998840332
    5. 'de' → logprob: -13.127140998840332
    6. ' ' → logprob: -13.252140998840332
    7. '   ' → logprob: -13.877140998840332
    8. '[a' → logprob: -14.002140998840332
    9. '[' → logprob: -14.752140998840332
    10. '	a' → logprob: -16.50214195251465

Token 741: ' case' (ID: 1890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00023607931507285684
    2. '1' → logprob: -8.375236511230469
    3. '```' → logprob: -13.250236511230469
    4. ' a' → logprob: -13.375236511230469
    5. '[h' → logprob: -13.625236511230469
    6. '[a' → logprob: -15.250236511230469
    7. '
' → logprob: -15.250236511230469
    8. '`' → logprob: -15.625236511230469
    9. ' ' → logprob: -16.12523651123047
    10. '   ' → logprob: -16.87523651123047

Token 742: ' directement' (ID: 52317)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[h' → logprob: -5.872261317563243e-05
    2. 'h' → logprob: -9.750059127807617
    3. '(h' → logprob: -15.500059127807617
    4. 'a' → logprob: -16.875059127807617
    5. '```' → logprob: -17.500059127807617
    6. '[a' → logprob: -18.375059127807617
    7. ' h' → logprob: -18.750059127807617
    8. '[' → logprob: -19.625059127807617
    9. '<h' → logprob: -19.750059127807617
    10. ' [' → logprob: -20.125059127807617

Token 743: ' en' (ID: 469)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.023517407476902008
    2. 'h' → logprob: -3.773517370223999
    3. '(h' → logprob: -8.398517608642578
    4. '+' → logprob: -11.148517608642578
    5. 'below' → logprob: -11.648517608642578
    6. 'a' → logprob: -11.898517608642578
    7. '+h' → logprob: -12.023517608642578
    8. '   ' → logprob: -12.773517608642578
    9. '```' → logprob: -13.273517608642578
    10. '[' → logprob: -13.648517608642578

Token 744: ' dessous' (ID: 120954)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.20236793160438538
    2. 'h' → logprob: -1.827367901802063
    3. 'below' → logprob: -4.952367782592773
    4. ' dessous' → logprob: -5.327367782592773
    5. 'bas' → logprob: -6.077367782592773
    6. 'a' → logprob: -6.202367782592773
    7. '+h' → logprob: -6.327367782592773
    8. '+' → logprob: -6.702367782592773
    9. '-dessous' → logprob: -7.077367782592773
    10. '(h' → logprob: -7.327367782592773

Token 745: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0028589628636837006
    2. '[h' → logprob: -6.252859115600586
    3. '[a' → logprob: -7.502859115600586
    4. '                   ' → logprob: -8.127859115600586
    5. ' a' → logprob: -10.002859115600586
    6. '   ' → logprob: -11.502859115600586
    7. '               ' → logprob: -11.752859115600586
    8. '           ' → logprob: -12.002859115600586
    9. '```' → logprob: -12.377859115600586
    10. '[' → logprob: -12.752859115600586

Token 746: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.038529906421899796
    2. 'a' → logprob: -3.288529872894287
    3. '[h' → logprob: -7.788529872894287
    4. '(h' → logprob: -9.663530349731445
    5. ' h' → logprob: -12.288530349731445
    6. '   ' → logprob: -13.038530349731445
    7. '```' → logprob: -13.538530349731445
    8. ' a' → logprob: -14.288530349731445
    9. '	h' → logprob: -14.788530349731445
    10. ')' → logprob: -14.913530349731445

Token 747: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2113979209971149e-05
    2. '[h' → logprob: -12.500012397766113
    3. ' +' → logprob: -12.625012397766113
    4. '[w' → logprob: -13.375012397766113
    5. '][' → logprob: -13.500012397766113
    6. '+
' → logprob: -14.250012397766113
    7. '+h' → logprob: -14.375012397766113
    8. '+[' → logprob: -15.000012397766113
    9. '+w' → logprob: -15.375012397766113
    10. '```' → logprob: -16.250011444091797

Token 748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. 'w' → logprob: -12.75000286102295
    3. '+' → logprob: -15.87500286102295
    4. '```' → logprob: -16.625003814697266
    5. '[w' → logprob: -17.750003814697266
    6. ' ' → logprob: -18.250003814697266
    7. '
' → logprob: -18.500003814697266
    8. 'h' → logprob: -19.875003814697266
    9. '   ' → logprob: -20.125003814697266
    10. '１' → logprob: -20.500003814697266

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.525140106678009
    2. '][' → logprob: -0.900140106678009
    3. ')[' → logprob: -7.275140285491943
    4. ')' → logprob: -7.775140285491943
    5. '           ' → logprob: -8.650139808654785
    6. '[w' → logprob: -9.150139808654785
    7. '   ' → logprob: -9.275139808654785
    8. '                   ' → logprob: -9.275139808654785
    9. '               ' → logprob: -9.650139808654785
    10. ' ,' → logprob: -9.775139808654785

Token 750: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0040785204619169235
    2. ' w' → logprob: -5.504078388214111
    3. '[w' → logprob: -16.754077911376953
    4. '   ' → logprob: -17.004077911376953
    5. '	w' → logprob: -18.004077911376953
    6. 'W' → logprob: -18.379077911376953
    7. '    ' → logprob: -19.129077911376953
    8. '       ' → logprob: -19.129077911376953
    9. ',w' → logprob: -19.254077911376953
    10. ' ' → logprob: -19.254077911376953

Token 751: ')
' (ID: 446)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1291685700416565
    2. ')' → logprob: -2.8791685104370117
    3. '+' → logprob: -3.2541685104370117
    4. ']' → logprob: -4.379168510437012
    5. ')[' → logprob: -4.754168510437012
    6. ']+=' → logprob: -6.629168510437012
    7. ')][' → logprob: -6.629168510437012
    8. ')+' → logprob: -7.004168510437012
    9. '[w' → logprob: -7.629168510437012
    10. ']+' → logprob: -7.754168510437012

Token 752: '                   ' (ID: 699)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.22120557725429535
    2. ' +=' → logprob: -2.096205472946167
    3. '                   ' → logprob: -3.346205472946167
    4. '[a' → logprob: -4.346205711364746
    5. '```' → logprob: -4.471205711364746
    6. '[' → logprob: -4.846205711364746
    7. 'a' → logprob: -5.346205711364746
    8. ']+=' → logprob: -7.096205711364746
    9. '+' → logprob: -7.471205711364746
    10. ' a' → logprob: -7.846205711364746

Token 753: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -9.913265239447355e-05
    2. ' a' → logprob: -9.250099182128906
    3. '                   ' → logprob: -12.750099182128906
    4. '1' → logprob: -18.375099182128906
    5. '           ' → logprob: -18.750099182128906
    6. '               ' → logprob: -18.750099182128906
    7. '	a' → logprob: -18.875099182128906
    8. '   ' → logprob: -19.125099182128906
    9. '                       ' → logprob: -19.250099182128906
    10. '```' → logprob: -19.875099182128906

Token 754: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -3.128163257315464e-07
    2. '+h' → logprob: -16.0
    3. 'h' → logprob: -16.375
    4. '][' → logprob: -17.5
    5. '+' → logprob: -17.5
    6. ' [' → logprob: -19.0
    7. '[' → logprob: -19.5
    8. '[w' → logprob: -20.25
    9. '```' → logprob: -20.375
    10. '+[' → logprob: -20.375

Token 755: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005941001698374748
    2. '][' → logprob: -5.130940914154053
    3. ' +' → logprob: -11.880941390991211
    4. '+h' → logprob: -13.005941390991211
    5. '[' → logprob: -13.880941390991211
    6. ']' → logprob: -14.255941390991211
    7. '[h' → logprob: -14.380941390991211
    8. '+[' → logprob: -14.755941390991211
    9. '+
' → logprob: -15.505941390991211
    10. '＋' → logprob: -16.00594139099121

Token 756: '1' (ID: 16)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0206720617134124e-05
    2. '[w' → logprob: -12.12501049041748
    3. ' w' → logprob: -12.25001049041748
    4. '	w' → logprob: -17.375009536743164
    5. '(w' → logprob: -18.500009536743164
    6. '1' → logprob: -19.500009536743164
    7. ',w' → logprob: -19.750009536743164
    8. 'W' → logprob: -19.875009536743164
    9. '[' → logprob: -19.875009536743164
    10. '_w' → logprob: -20.000009536743164

Token 757: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006718054646626115
    2. '[w' → logprob: -7.375671863555908
    3. ']' → logprob: -10.75067138671875
    4. 'w' → logprob: -11.75067138671875
    5. '[' → logprob: -11.75067138671875
    6. ' ][' → logprob: -12.12567138671875
    7. '"][' → logprob: -14.12567138671875
    8. ')[' → logprob: -14.87567138671875
    9. '   ' → logprob: -15.12567138671875
    10. '[h' → logprob: -15.37567138671875

Token 758: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.531315314830863e-06
    2. ' w' → logprob: -12.625003814697266
    3. '[w' → logprob: -16.375003814697266
    4. 'W' → logprob: -17.750003814697266
    5. '	w' → logprob: -18.500003814697266
    6. '<w' → logprob: -19.125003814697266
    7. ''w' → logprob: -19.375003814697266
    8. '#w' → logprob: -19.500003814697266
    9. '(w' → logprob: -19.875003814697266
    10. '
' → logprob: -20.000003814697266

Token 759: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008629591204226017
    2. ']+=' → logprob: -4.75862979888916
    3. ']+' → logprob: -12.00862979888916
    4. '+=' → logprob: -12.75862979888916
    5. ')' → logprob: -12.75862979888916
    6. '']' → logprob: -14.00862979888916
    7. ' ]' → logprob: -14.13362979888916
    8. '+' → logprob: -14.50862979888916
    9. '+]' → logprob: -14.75862979888916
    10. '```' → logprob: -15.00862979888916

Token 760: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00044175516813993454
    2. ' +=' → logprob: -7.875441551208496
    3. ']+=' → logprob: -9.750441551208496
    4. '+' → logprob: -12.750441551208496
    5. '+='' → logprob: -15.375441551208496
    6. '+="' → logprob: -16.250442504882812
    7. '```' → logprob: -16.500442504882812
    8. '+=(' → logprob: -17.000442504882812
    9. '=' → logprob: -17.625442504882812
    10. ']' → logprob: -19.000442504882812

Token 761: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -17.3750057220459
    4. '   ' → logprob: -17.7500057220459
    5. '<|end|>' → logprob: -19.3750057220459
    6. '0' → logprob: -20.0000057220459
    7. '`' → logprob: -21.2500057220459
    8. '           ' → logprob: -21.3750057220459
    9. '       ' → logprob: -21.6250057220459
    10. '۱' → logprob: -22.1250057220459

Token 762: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '```' → logprob: -19.25
    4. '   ' → logprob: -20.0
    5. '<|end|>' → logprob: -20.0
    6. '۱' → logprob: -21.625
    7. '１' → logprob: -21.875
    8. '`' → logprob: -22.375
    9. '१' → logprob: -22.375
    10. '১' → logprob: -22.375

Token 763: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05498587340116501
    2. '#' → logprob: -3.304985761642456
    3. 'for' → logprob: -4.554986000061035
    4. '<|end|>' → logprob: -5.179986000061035
    5. '```' → logprob: -8.054986000061035
    6. '#print' → logprob: -9.304986000061035
    7. ')' → logprob: -9.554986000061035
    8. '
' → logprob: -9.929986000061035
    9. '<|end|>' → logprob: -10.304986000061035
    10. ']' → logprob: -11.179986000061035

Token 764: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24698781967163086
    2. 'for' → logprob: -1.9969878196716309
    3. '#' → logprob: -2.496987819671631
    4. '```' → logprob: -7.371987819671631
    5. '#print' → logprob: -9.871988296508789
    6. 'if' → logprob: -10.246988296508789
    7. 'continue' → logprob: -10.871988296508789
    8. 'else' → logprob: -11.621988296508789
    9. ' for' → logprob: -12.121988296508789
    10. ')' → logprob: -12.121988296508789

Token 765: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '#' → logprob: -15.0
    3. ' print' → logprob: -17.75
    4. 'for' → logprob: -18.75
    5. '#print' → logprob: -18.75
    6. '```' → logprob: -19.5
    7. 'Print' → logprob: -22.25
    8. 'if' → logprob: -23.875
    9. '
' → logprob: -24.375
    10. '`' → logprob: -24.75

Token 766: 'icher' (ID: 13617)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5083077549934387
    2. 'for' → logprob: -1.258307695388794
    3. 'icher' → logprob: -2.258307695388794
    4. '#' → logprob: -5.133307933807373
    5. 'ich' → logprob: -6.008307933807373
    6. 'or' → logprob: -7.383307933807373
    7. 'er' → logprob: -8.383307456970215
    8. 'ichage' → logprob: -8.508307456970215
    9. 'iche' → logprob: -8.633307456970215
    10. '#print' → logprob: -9.883307456970215

Token 767: ' sur' (ID: 1512)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00035143180866725743
    2. '(cnt' → logprob: -8.250351905822754
    3. 'print' → logprob: -9.375351905822754
    4. 'len' → logprob: -12.250351905822754
    5. '[cnt' → logprob: -14.750351905822754
    6. ' cnt' → logprob: -16.375350952148438
    7. 'count' → logprob: -16.875350952148438
    8. '(len' → logprob: -17.875350952148438
    9. '```' → logprob: -18.000350952148438
    10. '	cnt' → logprob: -18.000350952148438

Token 768: ' une' (ID: 2463)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.06321229040622711
    2. 'len' → logprob: -2.8132123947143555
    3. 'le' → logprob: -7.9382123947143555
    4. '(cnt' → logprob: -8.063212394714355
    5. 'la' → logprob: -8.188212394714355
    6. 'print' → logprob: -9.438212394714355
    7. 'ln' → logprob: -9.938212394714355
    8. '[cnt' → logprob: -10.188212394714355
    9. 'l' → logprob: -10.938212394714355
    10. 'cout' → logprob: -11.063212394714355

Token 769: ' ligne' (ID: 19583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1003437265753746
    2. 'prem' → logprob: -2.475343704223633
    3. 'single' → logprob: -5.975343704223633
    4. 'ligne' → logprob: -6.225343704223633
    5. 'e' → logprob: -6.975343704223633
    6. 'v' → logprob: -7.850343704223633
    7. 'r' → logprob: -7.850343704223633
    8. 'n' → logprob: -8.100343704223633
    9. '#' → logprob: -8.225343704223633
    10. 'vec' → logprob: -8.350343704223633

Token 770: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5975115299224854
    2. 'cnt' → logprob: -0.8475115299224854
    3. '(cnt' → logprob: -3.8475115299224854
    4. '[cnt' → logprob: -11.847511291503906
    5. ' cnt' → logprob: -14.597511291503906
    6. 'len' → logprob: -15.347511291503906
    7. '   ' → logprob: -15.847511291503906
    8. '(print' → logprob: -16.347511291503906
    9. '(len' → logprob: -16.972511291503906
    10. '	cnt' → logprob: -16.972511291503906

Token 771: ' nombre' (ID: 9733)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -9.088346359931165e-07
    2. 'len' → logprob: -14.250000953674316
    3. 'print' → logprob: -15.625000953674316
    4. '(cnt' → logprob: -17.375
    5. ' cnt' → logprob: -17.75
    6. 'ct' → logprob: -19.125
    7. 'cn' → logprob: -19.375
    8. 'count' → logprob: -19.5
    9. '[cnt' → logprob: -19.875
    10. '	cnt' → logprob: -20.875

Token 772: ' total' (ID: 3609)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.03786348178982735
    2. 'cnt' → logprob: -3.7878634929656982
    3. '(' → logprob: -4.662863254547119
    4. 'print' → logprob: -5.412863254547119
    5. '()' → logprob: -8.037863731384277
    6. 'de' → logprob: -8.912863731384277
    7. '(len' → logprob: -10.037863731384277
    8. '(count' → logprob: -10.037863731384277
    9. '[cnt' → logprob: -10.162863731384277
    10. 'd' → logprob: -12.412863731384277

Token 773: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009850544156506658
    2. 'cnt' → logprob: -7.500985145568848
    3. '(cnt' → logprob: -7.750985145568848
    4. '(' → logprob: -14.125985145568848
    5. '(print' → logprob: -14.375985145568848
    6. '[cnt' → logprob: -16.25098419189453
    7. 'of' → logprob: -16.37598419189453
    8. ' print' → logprob: -17.00098419189453
    9. '#' → logprob: -17.00098419189453
    10. 'for' → logprob: -17.25098419189453

Token 774: ' mouvements' (ID: 119420)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.2369290441274643
    2. 'm' → logprob: -1.7369290590286255
    3. 'moves' → logprob: -3.736928939819336
    4. 'mov' → logprob: -4.861928939819336
    5. 'print' → logprob: -6.236928939819336
    6. ' mouvements' → logprob: -6.736928939819336
    7. 'cout' → logprob: -10.486928939819336
    8. 'cou' → logprob: -10.486928939819336
    9. 'move' → logprob: -10.736928939819336
    10. 'motions' → logprob: -11.361928939819336

Token 775: ' effectu' (ID: 100880)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -21.5
    3. ' print' → logprob: -22.25
    4. '
' → logprob: -26.25
    5. '#print' → logprob: -27.0
    6. '``' → logprob: -27.25
    7. 'pr' → logprob: -27.75
    8. '`' → logprob: -28.0
    9. ')' → logprob: -28.125
    10. 'printf' → logprob: -28.25

Token 776: 'és' (ID: 1756)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ')
' → logprob: -17.625
    3. ' print' → logprob: -18.5
    4. ')' → logprob: -18.625
    5. '
' → logprob: -19.5
    6. '```' → logprob: -21.875
    7. '(print' → logprob: -22.625
    8. ',' → logprob: -23.625
    9. '.print' → logprob: -23.75
    10. 'prints' → logprob: -24.5

Token 777: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -19.25
    3. ' print' → logprob: -21.375
    4. '
' → logprob: -24.125
    5. '``' → logprob: -24.25
    6. '#print' → logprob: -24.875
    7. 'pr' → logprob: -25.125
    8. ')' → logprob: -25.5
    9. ')
' → logprob: -25.625
    10. '(print' → logprob: -25.625

Token 778: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.5
    3. ' print' → logprob: -21.625
    4. '``' → logprob: -22.0
    5. '
' → logprob: -25.625
    6. '`' → logprob: -25.875
    7. 'pr' → logprob: -26.25
    8. '`
' → logprob: -26.375
    9. 'prin' → logprob: -27.0
    10. '#print' → logprob: -27.0

Token 779: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.061974067240953445
    2. '(' → logprob: -2.811974048614502
    3. '(count' → logprob: -12.68697452545166
    4. ' (' → logprob: -14.56197452545166
    5. '(
' → logprob: -14.56197452545166
    6. '(len' → logprob: -14.81197452545166
    7. 'cnt' → logprob: -15.06197452545166
    8. '()' → logprob: -15.06197452545166
    9. '('' → logprob: -15.18697452545166
    10. '(ctrl' → logprob: -15.18697452545166

Token 780: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -15.875
    3. ' )' → logprob: -17.0
    4. ')#' → logprob: -18.5
    5. ')`' → logprob: -18.875
    6. '),' → logprob: -19.25
    7. '))' → logprob: -19.625
    8. ')}' → logprob: -19.75
    9. ').' → logprob: -20.875
    10. ')
' → logprob: -21.375

Token 781: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.951771421066951e-05
    2. ' for' → logprob: -10.875029563903809
    3. '#' → logprob: -12.125029563903809
    4. '
' → logprob: -13.000029563903809
    5. '<|end|>' → logprob: -13.500029563903809
    6. '```' → logprob: -14.125029563903809
    7. ')' → logprob: -15.625029563903809
    8. '\n' → logprob: -16.125028610229492
    9. '    
' → logprob: -16.125028610229492
    10. '\' → logprob: -16.500028610229492

Token 782: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -18.125
    3. '#' → logprob: -21.25
    4. '	for' → logprob: -22.75
    5. '```' → logprob: -24.125
    6. '
' → logprob: -25.5
    7. '   ' → logprob: -25.5
    8. 'print' → logprob: -25.875
    9. '​' → logprob: -26.0
    10. 'from' → logprob: -26.125

Token 783: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0002398938377154991
    2. 'orrer' → logprob: -9.000240325927734
    3. 'ours' → logprob: -9.125240325927734
    4. 'orer' → logprob: -12.625240325927734
    5. 'or' → logprob: -13.250240325927734
    6. 'ourt' → logprob: -13.875240325927734
    7. '#' → logprob: -14.750240325927734
    8. 'ou' → logprob: -14.875240325927734
    9. 'urer' → logprob: -15.750240325927734
    10. 'OUR' → logprob: -16.125240325927734

Token 784: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.13307063281536102
    2. 'ir' → logprob: -3.008070707321167
    3. 'our' → logprob: -3.383070707321167
    4. 'for' → logprob: -3.508070707321167
    5. 'or' → logprob: -5.133070468902588
    6. 'orer' → logprob: -6.633070468902588
    7. 'rer' → logprob: -6.883070468902588
    8. '#' → logprob: -7.008070468902588
    9. 'ur' → logprob: -7.383070468902588
    10. 'r' → logprob: -7.883070468902588

Token 785: ' tous' (ID: 10688)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.035756055265665054
    2. 'for' → logprob: -3.6607561111450195
    3. '(ans' → logprob: -4.7857561111450195
    4. 'm' → logprob: -7.9107561111450195
    5. 'range' → logprob: -8.16075611114502
    6. 'mov' → logprob: -9.03575611114502
    7. ' ans' → logprob: -9.41075611114502
    8. 'a' → logprob: -10.53575611114502
    9. 'len' → logprob: -10.78575611114502
    10. '(m' → logprob: -10.91075611114502

Token 786: ' les' (ID: 1341)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20230501890182495
    2. '(ans' → logprob: -1.7023050785064697
    3. 'move' → logprob: -8.07730484008789
    4. '(m' → logprob: -8.45230484008789
    5. 'm' → logprob: -8.57730484008789
    6. 'mov' → logprob: -9.45230484008789
    7. ' ans' → logprob: -9.82730484008789
    8. '(' → logprob: -10.95230484008789
    9. 'movement' → logprob: -11.70230484008789
    10. '(move' → logprob: -11.82730484008789

Token 787: ' mouvements' (ID: 119420)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09532532840967178
    2. 'move' → logprob: -2.845325231552124
    3. 'm' → logprob: -3.970325231552124
    4. 'moves' → logprob: -4.720325469970703
    5. 'mov' → logprob: -5.845325469970703
    6. 'movement' → logprob: -7.595325469970703
    7. 'a' → logprob: -7.845325469970703
    8. 'answer' → logprob: -8.345325469970703
    9. 'mv' → logprob: -8.845325469970703
    10. 'x' → logprob: -8.970325469970703

Token 788: ' enregistr' (ID: 76845)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.816591434879228e-05
    2. ' for' → logprob: -9.37508773803711
    3. 'in' → logprob: -12.87508773803711
    4. '
' → logprob: -14.37508773803711
    5. ' in' → logprob: -17.12508773803711
    6. '   ' → logprob: -18.00008773803711
    7. ':' → logprob: -18.25008773803711
    8. '```' → logprob: -18.25008773803711
    9. '#' → logprob: -18.50008773803711
    10. '	for' → logprob: -18.87508773803711

Token 789: 'és' (ID: 1756)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.21329154074192047
    2. 'ée' → logprob: -2.588291645050049
    3. 'er' → logprob: -2.713291645050049
    4. 'for' → logprob: -3.588291645050049
    5. 'ans' → logprob: -4.838291645050049
    6. 'é' → logprob: -5.463291645050049
    7. 'ons' → logprob: -6.088291645050049
    8. ' for' → logprob: -6.463291645050049
    9. 'és' → logprob: -6.588291645050049
    10. 's' → logprob: -6.588291645050049

Token 790: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -16.875
    3. '
' → logprob: -20.125
    4. '#' → logprob: -23.125
    5. '   ' → logprob: -24.0
    6. '```' → logprob: -24.125
    7. 'pour' → logprob: -24.375
    8. '	for' → logprob: -24.375
    9. 'from' → logprob: -25.0
    10. 'in' → logprob: -25.5

Token 791: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.128163257315464e-07
    2. ' ans' → logprob: -15.25
    3. '(ans' → logprob: -22.0
    4. '
' → logprob: -24.625
    5. '	ans' → logprob: -24.625
    6. '   ' → logprob: -25.25
    7. 'range' → logprob: -25.25
    8. 'answer' → logprob: -25.625
    9. 'a' → logprob: -25.75
    10. ' ' → logprob: -26.125

Token 792: ' liste' (ID: 31719)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.9361264946837764e-07
    2. 'for' → logprob: -16.625
    3. ' ans' → logprob: -16.75
    4. 'range' → logprob: -20.25
    5. 'answer' → logprob: -21.125
    6. 'a' → logprob: -21.25
    7. '   ' → logprob: -21.375
    8. '(ans' → logprob: -21.5
    9. '
' → logprob: -22.0
    10. '```' → logprob: -22.125

Token 793: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.935296834039036e-06
    2. 'ans' → logprob: -13.25000286102295
    3. ' for' → logprob: -13.75000286102295
    4. '
' → logprob: -20.250003814697266
    5. '(ans' → logprob: -20.375003814697266
    6. '#' → logprob: -22.250003814697266
    7. '```' → logprob: -23.000003814697266
    8. ' ans' → logprob: -23.125003814697266
    9. '   ' → logprob: -23.125003814697266
    10. 'range' → logprob: -23.375003814697266

Token 794: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -18.0
    3. '```' → logprob: -18.25
    4. '
' → logprob: -18.875
    5. '#' → logprob: -22.25
    6. '``' → logprob: -22.625
    7. '	for' → logprob: -24.125
    8. '   ' → logprob: -25.375
    9. 'pour' → logprob: -25.375
    10. '.for' → logprob: -25.625

Token 795: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.5
    3. '```' → logprob: -15.75
    4. ' for' → logprob: -18.625
    5. '``' → logprob: -22.0
    6. '	for' → logprob: -24.25
    7. '   ' → logprob: -24.375
    8. '#' → logprob: -24.75
    9. '    
' → logprob: -25.375
    10. 'For' → logprob: -25.375

Token 796: ' i' (ID: 575)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.08034634590148926
    2. ' move' → logprob: -2.9553463459014893
    3. 'h' → logprob: -3.7053463459014893
    4. 'x' → logprob: -8.70534610748291
    5. ' h' → logprob: -9.20534610748291
    6. 'mov' → logprob: -9.45534610748291
    7. 'a' → logprob: -9.58034610748291
    8. 'movement' → logprob: -10.45534610748291
    9. 'm' → logprob: -11.08034610748291
    10. 'v' → logprob: -11.33034610748291

Token 797: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5234317779541016
    2. ' in' → logprob: -0.8984317779541016
    3. 'n' → logprob: -9.023431777954102
    4. ' ' → logprob: -9.023431777954102
    5. ',' → logprob: -10.773431777954102
    6. '	in' → logprob: -10.898431777954102
    7. '  ' → logprob: -11.648431777954102
    8. 's' → logprob: -12.648431777954102
    9. ')' → logprob: -12.648431777954102
    10. ' ' → logprob: -12.773431777954102

Token 798: ' range' (ID: 3352)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01859165169298649
    2. 'range' → logprob: -4.01859188079834
    3. ' ans' → logprob: -7.76859188079834
    4. ' range' → logprob: -10.89359188079834
    5. '(ans' → logprob: -15.76859188079834
    6. '	ans' → logprob: -17.268590927124023
    7. 'answer' → logprob: -17.518590927124023
    8. 'an' → logprob: -18.143590927124023
    9. 'Ans' → logprob: -18.768590927124023
    10. ' ' → logprob: -18.893590927124023

Token 799: '(len' (ID: 14990)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.02995377965271473
    2. '(len' → logprob: -3.529953718185425
    3. '(' → logprob: -8.529953956604004
    4. 'cnt' → logprob: -12.654953956604004
    5. '(count' → logprob: -14.029953956604004
    6. 'len' → logprob: -14.279953956604004
    7. '[cnt' → logprob: -14.779953956604004
    8. '(
' → logprob: -14.779953956604004
    9. ' (' → logprob: -15.279953956604004
    10. ' cnt' → logprob: -16.279953002929688

Token 800: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.107425062713446e-06
    2. 'ans' → logprob: -12.000006675720215
    3. '(cnt' → logprob: -14.625006675720215
    4. '(' → logprob: -14.875006675720215
    5. ' ans' → logprob: -16.25000762939453
    6. ' (' → logprob: -17.25000762939453
    7. '	ans' → logprob: -18.75000762939453
    8. '(answer' → logprob: -19.37500762939453
    9. '_ans' → logprob: -19.50000762939453
    10. 'Ans' → logprob: -19.75000762939453

Token 801: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007342241005972028
    2. '):
' → logprob: -7.625734329223633
    3. ')):' → logprob: -8.875734329223633
    4. ')' → logprob: -9.375734329223633
    5. ']):' → logprob: -11.875734329223633
    6. ' ):' → logprob: -12.125734329223633
    7. ':' → logprob: -12.375734329223633
    8. '):
' → logprob: -13.250734329223633
    9. '():' → logprob: -14.125734329223633
    10. ']:' → logprob: -14.750734329223633

Token 802: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1355680525302887
    2. 'print' → logprob: -2.135568141937256
    3. ' print' → logprob: -4.760568141937256
    4. '	print' → logprob: -10.510567665100098
    5. '   ' → logprob: -12.635567665100098
    6. '    ' → logprob: -13.010567665100098
    7. '       ' → logprob: -13.260567665100098
    8. '    
' → logprob: -13.385567665100098
    9. '```' → logprob: -13.760567665100098
    10. ')' → logprob: -14.010567665100098

Token 803: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017227731877937913
    2. '   ' → logprob: -6.751722812652588
    3. ' print' → logprob: -7.501722812652588
    4. '	print' → logprob: -15.50172233581543
    5. 'prin' → logprob: -18.75172233581543
    6. ' ' → logprob: -19.37672233581543
    7. '    ' → logprob: -19.37672233581543
    8. 'for' → logprob: -19.37672233581543
    9. '   ' → logprob: -19.62672233581543
    10. 'pr' → logprob: -20.12672233581543

Token 804: ' Im' (ID: 3133)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.0
    3. '   ' → logprob: -17.75
    4. 'for' → logprob: -21.375
    5. '	print' → logprob: -22.875
    6. '#print' → logprob: -23.5
    7. '#' → logprob: -24.125
    8. 'move' → logprob: -24.625
    9. '    
' → logprob: -24.625
    10. '```' → logprob: -24.875

Token 805: 'primer' (ID: 55821)
  Prédit: 'primer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primer' → logprob: -0.0010141143575310707
    2. 'pr' → logprob: -7.501014232635498
    3. 'prime' → logprob: -7.876014232635498
    4. 'print' → logprob: -10.25101375579834
    5. 'primir' → logprob: -10.75101375579834
    6. 'prim' → logprob: -12.00101375579834
    7. '   ' → logprob: -12.25101375579834
    8. 'pri' → logprob: -12.50101375579834
    9. 'pression' → logprob: -12.75101375579834
    10. 'printer' → logprob: -12.87601375579834

Token 806: ' chaque' (ID: 21194)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.021081648766994476
    2. 'ans' → logprob: -4.521081447601318
    3. '*' → logprob: -5.146081447601318
    4. '(ans' → logprob: -5.521081447601318
    5. '(' → logprob: -8.896081924438477
    6. '(*(' → logprob: -12.146081924438477
    7. ' ans' → logprob: -12.646081924438477
    8. '(*)' → logprob: -13.021081924438477
    9. '('' → logprob: -13.146081924438477
    10. '_ans' → logprob: -13.646081924438477

Token 807: ' mouvement' (ID: 62236)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.22676798701286316
    2. 'ans' → logprob: -1.7267680168151855
    3. '(ans' → logprob: -3.9767680168151855
    4. '*' → logprob: -5.6017680168151855
    5. '(' → logprob: -6.3517680168151855
    6. '('' → logprob: -7.7267680168151855
    7. '("' → logprob: -8.601767539978027
    8. '(
' → logprob: -9.226767539978027
    9. ' ans' → logprob: -9.976767539978027
    10. '(*)' → logprob: -11.351767539978027

Token 808: ' sous' (ID: 14487)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.001234399271197617
    2. '(' → logprob: -6.751234531402588
    3. 'print' → logprob: -10.62623405456543
    4. '('' → logprob: -10.87623405456543
    5. '(*(' → logprob: -12.50123405456543
    6. '*' → logprob: -12.62623405456543
    7. '   ' → logprob: -12.75123405456543
    8. '(ans' → logprob: -12.75123405456543
    9. '(*)' → logprob: -13.12623405456543
    10. '("' → logprob: -13.25123405456543

Token 809: ' forme' (ID: 27450)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'format' → logprob: -1.435976505279541
    2. ''' → logprob: -1.560976505279541
    3. 'form' → logprob: -1.810976505279541
    4. 'str' → logprob: -2.060976505279541
    5. 'la' → logprob: -2.060976505279541
    6. '"' → logprob: -2.685976505279541
    7. 'f' → logprob: -3.810976505279541
    8. '   ' → logprob: -4.810976505279541
    9. '*' → logprob: -4.935976505279541
    10. 'forma' → logprob: -4.935976505279541

Token 810: ' de' (ID: 334)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.007305837702006102
    2. '(' → logprob: -5.38230562210083
    3. '('' → logprob: -6.50730562210083
    4. '("{}' → logprob: -7.88230562210083
    5. '('{}' → logprob: -8.007306098937988
    6. '("' → logprob: -8.007306098937988
    7. '   ' → logprob: -10.507306098937988
    8. '(ans' → logprob: -10.757306098937988
    9. '*' → logprob: -10.882306098937988
    10. 'ans' → logprob: -11.132306098937988

Token 811: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3909088373184204
    2. '"' → logprob: -1.6409088373184204
    3. ''' → logprob: -1.6409088373184204
    4. '*' → logprob: -2.015908718109131
    5. 'str' → logprob: -2.015908718109131
    6. 'f' → logprob: -2.515908718109131
    7. '"{' → logprob: -5.015908718109131
    8. 'ans' → logprob: -5.765908718109131
    9. ''{' → logprob: -6.765908718109131
    10. '{}' → logprob: -6.765908718109131

Token 812: '4' (ID: 19)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.35138407349586487
    2. '"' → logprob: -1.2263840436935425
    3. '*' → logprob: -6.976384162902832
    4. '"{' → logprob: -7.101384162902832
    5. 'str' → logprob: -8.351384162902832
    6. 'print' → logprob: -8.351384162902832
    7. ''{' → logprob: -8.601384162902832
    8. 'f' → logprob: -9.101384162902832
    9. ''s' → logprob: -9.976384162902832
    10. '4' → logprob: -10.101384162902832

Token 813: ' nombres' (ID: 76205)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20006714761257172
    2. 'ans' → logprob: -1.950067162513733
    3. '(ans' → logprob: -3.9500670433044434
    4. ' ans' → logprob: -4.700067043304443
    5. '*' → logprob: -5.200067043304443
    6. ' print' → logprob: -5.825067043304443
    7. '{}' → logprob: -7.950067043304443
    8. 'for' → logprob: -7.950067043304443
    9. ',' → logprob: -8.575067520141602
    10. 'ent' → logprob: -8.950067520141602

Token 814: ' sépar' (ID: 97160)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.025860704481601715
    2. 'print' → logprob: -3.7758607864379883
    3. '(' → logprob: -6.650860786437988
    4. '*' → logprob: -6.900860786437988
    5. ',' → logprob: -8.775860786437988
    6. '   ' → logprob: -9.900860786437988
    7. '('' → logprob: -10.525860786437988
    8. ' print' → logprob: -10.900860786437988
    9. '()' → logprob: -11.025860786437988
    10. '("' → logprob: -11.525860786437988

Token 815: 'és' (ID: 1756)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6328859925270081
    2. 'es' → logprob: -2.3828859329223633
    3. 'par' → logprob: -2.5078859329223633
    4. 'és' → logprob: -2.5078859329223633
    5. 'space' → logprob: -3.2578859329223633
    6. ''' → logprob: -3.6328859329223633
    7. ' espaces' → logprob: -3.7578859329223633
    8. ' space' → logprob: -3.8828859329223633
    9. ''espace' → logprob: -3.8828859329223633
    10. 'e' → logprob: -3.8828859329223633

Token 816: ' par' (ID: 686)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7085879445075989
    2. '('' → logprob: -0.8335879445075989
    3. 'print' → logprob: -3.458587884902954
    4. '"' → logprob: -3.583587884902954
    5. '("' → logprob: -4.833588123321533
    6. '()' → logprob: -6.083588123321533
    7. '(' → logprob: -6.208588123321533
    8. ',' → logprob: -7.833588123321533
    9. '   ' → logprob: -8.708587646484375
    10. 'par' → logprob: -9.083587646484375

Token 817: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3717251718044281
    2. '"' → logprob: -1.8717252016067505
    3. 'es' → logprob: -2.496725082397461
    4. 'un' → logprob: -2.871725082397461
    5. ''un' → logprob: -5.121725082397461
    6. 'esp' → logprob: -5.746725082397461
    7. 'des' → logprob: -5.996725082397461
    8. ''espace' → logprob: -6.121725082397461
    9. 'space' → logprob: -6.621725082397461
    10. ' un' → logprob: -7.871725082397461

Token 818: ' espaces' (ID: 98361)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.17019608616828918
    2. 'esp' → logprob: -1.9201960563659668
    3. ''espace' → logprob: -5.920196056365967
    4. 'spaces' → logprob: -6.295196056365967
    5. ''esp' → logprob: -6.545196056365967
    6. 'space' → logprob: -6.670196056365967
    7. ''' → logprob: -6.795196056365967
    8. ' espaces' → logprob: -7.045196056365967
    9. '"' → logprob: -7.545196056365967
    10. '```' → logprob: -10.045196533203125

Token 819: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019138160860165954
    2. ' print' → logprob: -8.625191688537598
    3. '   ' → logprob: -11.750191688537598
    4. '(*' → logprob: -13.000191688537598
    5. '*' → logprob: -14.125191688537598
    6. '(print' → logprob: -14.875191688537598
    7. '```' → logprob: -15.500191688537598
    8. '(' → logprob: -15.750191688537598
    9. '
' → logprob: -16.87519073486328
    10. ',' → logprob: -17.12519073486328

Token 820: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0028181932866573334
    2. '   ' → logprob: -6.0028181076049805
    3. ' print' → logprob: -8.00281810760498
    4. '```' → logprob: -12.62781810760498
    5. ',' → logprob: -13.62781810760498
    6. '	print' → logprob: -13.87781810760498
    7. ')' → logprob: -14.25281810760498
    8. '(print' → logprob: -14.62781810760498
    9. '`' → logprob: -15.12781810760498
    10. '#print' → logprob: -15.87781810760498

Token 821: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -15.75
    3. '   ' → logprob: -20.25
    4. '```' → logprob: -21.5
    5. '	print' → logprob: -23.25
    6. 'for' → logprob: -23.25
    7. 'printf' → logprob: -23.875
    8. '`' → logprob: -24.875
    9. '*' → logprob: -25.125
    10. '    
' → logprob: -25.25

Token 822: ' *' (ID: 425)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.3358446166384965e-05
    2. '   ' → logprob: -10.000053405761719
    3. ' print' → logprob: -11.750053405761719
    4. '	print' → logprob: -20.00005340576172
    5. '```' → logprob: -22.00005340576172
    6. ' ' → logprob: -22.75005340576172
    7. '  ' → logprob: -23.75005340576172
    8. 'for' → logprob: -23.75005340576172
    9. 'printf' → logprob: -24.37505340576172
    10. '`' → logprob: -25.25005340576172

Token 823: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005126784555613995
    2. '*' → logprob: -5.505126953125
    3. 'ans' → logprob: -6.880126953125
    4. ' print' → logprob: -11.755126953125
    5. '(*' → logprob: -12.505126953125
    6. 'prin' → logprob: -12.505126953125
    7. '   ' → logprob: -12.755126953125
    8. ' ans' → logprob: -15.255126953125
    9. '`' → logprob: -15.505126953125
    10. ' *' → logprob: -15.755126953125

Token 824: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0025470047257840633
    2. '[' → logprob: -6.002546787261963
    3. 'print' → logprob: -10.502547264099121
    4. '(ans' → logprob: -10.752547264099121
    5. '[*' → logprob: -11.627547264099121
    6. 'ans' → logprob: -12.002547264099121
    7. '(i' → logprob: -12.752547264099121
    8. '(*' → logprob: -13.252547264099121
    9. '```' → logprob: -14.127547264099121
    10. '*' → logprob: -14.752547264099121

Token 825: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ' )' → logprob: -12.375007629394531
    3. '))' → logprob: -13.250007629394531
    4. ')])' → logprob: -15.000007629394531
    5. '])' → logprob: -15.875007629394531
    6. ')
' → logprob: -15.875007629394531
    7. '）' → logprob: -16.62500762939453
    8. '),' → logprob: -16.87500762939453
    9. ')...' → logprob: -16.87500762939453
    10. ')}}' → logprob: -16.87500762939453

Token 826: ' permet' (ID: 11798)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001475220051361248
    2. 'print' → logprob: -9.250147819519043
    3. '<|end|>' → logprob: -11.000147819519043
    4. ' )' → logprob: -11.625147819519043
    5. '),' → logprob: -12.000147819519043
    6. ')
' → logprob: -12.500147819519043
    7. ',' → logprob: -12.875147819519043
    8. '))' → logprob: -13.250147819519043
    9. ');' → logprob: -13.250147819519043
    10. ')...' → logprob: -13.375147819519043

Token 827: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3171653151512146
    2. '*' → logprob: -1.3171653747558594
    3. '   ' → logprob: -6.567165374755859
    4. ' print' → logprob: -7.067165374755859
    5. ' ' → logprob: -7.192165374755859
    6. ')' → logprob: -8.19216537475586
    7. 'ans' → logprob: -9.19216537475586
    8. '  ' → logprob: -9.44216537475586
    9. '"' → logprob: -9.69216537475586
    10. '*p' → logprob: -9.94216537475586

Token 828: ' "' (ID: 392)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008631822653114796
    2. 'ans' → logprob: -4.758631706237793
    3. ' print' → logprob: -12.383631706237793
    4. 'prin' → logprob: -12.508631706237793
    5. '*' → logprob: -12.633631706237793
    6. 'printf' → logprob: -13.883631706237793
    7. 'printer' → logprob: -14.133631706237793
    8. '#print' → logprob: -14.383631706237793
    9. ' ans' → logprob: -14.383631706237793
    10. ')' → logprob: -14.758631706237793

Token 829: 'dé' (ID: 98340)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008314246661029756
    2. '*' → logprob: -8.250831604003906
    3. 'un' → logprob: -8.250831604003906
    4. 'ans' → logprob: -9.250831604003906
    5. 'expand' → logprob: -9.500831604003906
    6. ' unpack' → logprob: -9.875831604003906
    7. ' print' → logprob: -10.250831604003906
    8. '#print' → logprob: -11.375831604003906
    9. ')' → logprob: -11.625831604003906
    10. '...' → logprob: -12.250831604003906

Token 830: 'pa' (ID: 3899)
  Prédit: 'pack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pack' → logprob: -0.8740406632423401
    2. 'plier' → logprob: -1.3740406036376953
    3. 'packer' → logprob: -1.7490406036376953
    4. 'ball' → logprob: -2.6240406036376953
    5. 'pa' → logprob: -3.1240406036376953
    6. 'ployer' → logprob: -4.374040603637695
    7. '```' → logprob: -4.999040603637695
    8. 'print' → logprob: -5.124040603637695
    9. 'un' → logprob: -5.499040603637695
    10. 'packing' → logprob: -5.874040603637695

Token 831: 'qu' (ID: 351)
  Prédit: 'cker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cker' → logprob: -0.8575749397277832
    2. 'acker' → logprob: -0.9825749397277832
    3. 'quer' → logprob: -1.9825749397277832
    4. 'ck' → logprob: -3.607574939727783
    5. 'packer' → logprob: -4.732574939727783
    6. '```' → logprob: -4.982574939727783
    7. 'pack' → logprob: -5.232574939727783
    8. 'que' → logprob: -5.857574939727783
    9. 'r' → logprob: -6.607574939727783
    10. 'cher' → logprob: -6.732574939727783

Token 832: 'eter' (ID: 2377)
  Prédit: 'cker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cker' → logprob: -0.32731255888938904
    2. 'quer' → logprob: -1.4523125886917114
    3. 'ker' → logprob: -4.077312469482422
    4. 'acker' → logprob: -4.702312469482422
    5. 'qu' → logprob: -5.077312469482422
    6. 'ck' → logprob: -5.577312469482422
    7. '*' → logprob: -6.077312469482422
    8. '```' → logprob: -6.577312469482422
    9. 'c' → logprob: -7.202312469482422
    10. 'cher' → logprob: -7.702312469482422

Token 833: '"' (ID: 1)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004521265625953674
    2. ' ans' → logprob: -5.879521369934082
    3. '*' → logprob: -6.504521369934082
    4. '(ans' → logprob: -8.504521369934082
    5. '(*' → logprob: -11.379521369934082
    6. '	ans' → logprob: -13.254521369934082
    7. ')' → logprob: -14.379521369934082
    8. 'args' → logprob: -14.629521369934082
    9. 'print' → logprob: -14.629521369934082
    10. '_ans' → logprob: -15.004521369934082

Token 834: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00012713817704934627
    2. '(ans' → logprob: -10.000126838684082
    3. ' ans' → logprob: -10.000126838684082
    4. '*' → logprob: -10.250126838684082
    5. '(*' → logprob: -14.125126838684082
    6. '	ans' → logprob: -15.750126838684082
    7. '_ans' → logprob: -18.1251277923584
    8. 'args' → logprob: -18.5001277923584
    9. 'Ans' → logprob: -18.7501277923584
    10. 'an' → logprob: -18.7501277923584

Token 835: ' liste' (ID: 31719)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.896309739408025e-07
    2. ' ans' → logprob: -14.250000953674316
    3. '*' → logprob: -16.875
    4. '(ans' → logprob: -17.25
    5. '	ans' → logprob: -18.5
    6. 'anst' → logprob: -18.75
    7. 'an' → logprob: -19.0
    8. 'list' → logprob: -19.125
    9. 'a' → logprob: -19.5
    10. 'args' → logprob: -19.875

Token 836: ' ans' (ID: 3345)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.03733224794268608
    2. '*' → logprob: -3.66233229637146
    3. 'print' → logprob: -4.537332057952881
    4. '(ans' → logprob: -8.787332534790039
    5. 'ans' → logprob: -9.412332534790039
    6. '[*' → logprob: -11.287332534790039
    7. '(' → logprob: -12.412332534790039
    8. '   ' → logprob: -12.537332534790039
    9. ' (*' → logprob: -12.787332534790039
    10. '(*)' → logprob: -13.037332534790039

Token 837: '[i' (ID: 1768)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.4904279410839081
    2. '[i' → logprob: -1.2404279708862305
    3. 'print' → logprob: -2.8654279708862305
    4. '[' → logprob: -4.2404279708862305
    5. '(ans' → logprob: -4.6154279708862305
    6. '[*' → logprob: -4.9904279708862305
    7. ')' → logprob: -5.1154279708862305
    8. '   ' → logprob: -5.7404279708862305
    9. ',' → logprob: -7.6154279708862305
    10. 'ans' → logprob: -8.61542797088623

Token 838: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1994775377388578e-05
    2. ' )' → logprob: -11.625012397766113
    3. '))' → logprob: -14.000012397766113
    4. '   ' → logprob: -14.750012397766113
    5. '*)' → logprob: -15.500012397766113
    6. ',' → logprob: -15.625012397766113
    7. ')}}' → logprob: -15.750012397766113
    8. ')*' → logprob: -15.875012397766113
    9. 'print' → logprob: -16.000011444091797
    10. '[' → logprob: -16.125011444091797

Token 839: ' en' (ID: 469)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.049430280923843384
    2. '(*' → logprob: -3.9244303703308105
    3. ')' → logprob: -4.4244303703308105
    4. '*' → logprob: -4.5494303703308105
    5. ',' → logprob: -5.1744303703308105
    6. ',*' → logprob: -8.799429893493652
    7. '   ' → logprob: -9.549429893493652
    8. ' print' → logprob: -10.924429893493652
    9. '(print' → logprob: -12.549429893493652
    10. '#print' → logprob: -12.924429893493652

Token 840: ' paramètres' (ID: 130696)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.43223869800567627
    2. '*' → logprob: -1.1822386980056763
    3. 'print' → logprob: -3.9322385787963867
    4. 'args' → logprob: -4.057238578796387
    5. ')' → logprob: -5.432238578796387
    6. ' ans' → logprob: -6.682238578796387
    7. ' ' → logprob: -7.682238578796387
    8. 'arguments' → logprob: -8.057238578796387
    9. '(ans' → logprob: -8.682238578796387
    10. '*)' → logprob: -9.057238578796387

Token 841: ' sépar' (ID: 97160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5959390997886658
    2. '*' → logprob: -1.0959391593933105
    3. '(*' → logprob: -2.3459391593933105
    4. ')' → logprob: -4.0959391593933105
    5. ',' → logprob: -6.3459391593933105
    6. '   ' → logprob: -7.8459391593933105
    7. ',*' → logprob: -9.345938682556152
    8. ' print' → logprob: -10.095938682556152
    9. '*)' → logprob: -11.095938682556152
    10. ']' → logprob: -12.220938682556152

Token 842: 'és' (ID: 1756)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0165927242487669
    2. ',' → logprob: -4.516592502593994
    3. ' print' → logprob: -6.641592502593994
    4. '*' → logprob: -7.141592502593994
    5. 'p' → logprob: -7.141592502593994
    6. ')' → logprob: -7.391592502593994
    7. 'prit' → logprob: -8.266592979431152
    8. 'ans' → logprob: -8.516592979431152
    9. 'prin' → logprob: -8.516592979431152
    10. 'a' → logprob: -8.891592979431152

Token 843: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5333564281463623
    2. ')' → logprob: -0.9083564281463623
    3. ',' → logprob: -4.908356666564941
    4. '*' → logprob: -6.908356666564941
    5. '   ' → logprob: -7.033356666564941
    6. ' print' → logprob: -7.533356666564941
    7. '(*' → logprob: -8.908356666564941
    8. '),' → logprob: -9.658356666564941
    9. ')*' → logprob: -10.658356666564941
    10. ');' → logprob: -10.783356666564941

Token 844: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.375
    3. 'printf' → logprob: -20.5
    4. '```' → logprob: -20.75
    5. 'prin' → logprob: -20.875
    6. 'pr' → logprob: -22.625
    7. '`' → logprob: -22.75
    8. '#print' → logprob: -23.0
    9. 'la' → logprob: -23.75
    10. '*' → logprob: -23.875

Token 845: '
' (ID: 198)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.00043257648940198123
    2. 'print' → logprob: -8.250432968139648
    3. '(' → logprob: -9.000432968139648
    4. '*' → logprob: -11.000432968139648
    5. ')' → logprob: -11.250432968139648
    6. '()' → logprob: -11.750432968139648
    7. '(*)' → logprob: -12.125432968139648
    8. '(ans' → logprob: -13.250432968139648
    9. '   ' → logprob: -13.750432968139648
    10. ',' → logprob: -14.250432968139648

Token 846: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023281004279851913
    2. 'print' → logprob: -3.7732810974121094
    3. ' print' → logprob: -10.89828109741211
    4. '```' → logprob: -11.89828109741211
    5. '       ' → logprob: -12.27328109741211
    6. ':' → logprob: -12.89828109741211
    7. '   ' → logprob: -14.02328109741211
    8. '	print' → logprob: -14.64828109741211
    9. '    
' → logprob: -14.77328109741211
    10. '    ' → logprob: -15.14828109741211

Token 847: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.981667537620524e-06
    2. '   ' → logprob: -13.500001907348633
    3. ' print' → logprob: -14.500001907348633
    4. '	print' → logprob: -21.500001907348633
    5. '```' → logprob: -23.125001907348633
    6. '#print' → logprob: -24.500001907348633
    7. 'Print' → logprob: -25.250001907348633
    8. '(print' → logprob: -25.375001907348633
    9. 'printf' → logprob: -25.625001907348633
    10. '.print' → logprob: -26.000001907348633

Token 848: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.250001907348633
    3. '*' → logprob: -14.500001907348633
    4. '(*)' → logprob: -18.750001907348633
    5. '((*' → logprob: -21.000001907348633
    6. ' (*' → logprob: -21.250001907348633
    7. '(*(' → logprob: -22.375001907348633
    8. '(
' → logprob: -22.750001907348633
    9. '(ans' → logprob: -23.250001907348633
    10. '()' → logprob: -23.500001907348633

Token 849: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: 0.0
    2. '(ans' → logprob: -17.375
    3. ' ans' → logprob: -19.0
    4. '	ans' → logprob: -21.75
    5. '[' → logprob: -21.875
    6. 'a' → logprob: -22.0
    7. '   ' → logprob: -23.75
    8. '`' → logprob: -24.25
    9. 'Ans' → logprob: -24.5
    10. 'ansa' → logprob: -24.5

Token 850: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -12.87500286102295
    3. ')[' → logprob: -16.625001907348633
    4. ' [' → logprob: -17.625001907348633
    5. '[a' → logprob: -19.000001907348633
    6. '[I' → logprob: -19.125001907348633
    7. ')' → logprob: -19.625001907348633
    8. '[int' → logprob: -20.125001907348633
    9. '[
' → logprob: -20.375001907348633
    10. 'i' → logprob: -20.500001907348633

Token 851: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -13.625001907348633
    3. ')
' → logprob: -16.125001907348633
    4. '))' → logprob: -16.875001907348633
    5. ')}' → logprob: -17.750001907348633
    6. ')`' → logprob: -18.250001907348633
    7. '}' → logprob: -18.500001907348633
    8. '[' → logprob: -19.125001907348633
    9. '())' → logprob: -19.250001907348633
    10. ')#' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 849
Tokens correctement prédits (1ère position, stricte): 238
Tokens correctement prédits (1ère position, avec adaptation): 252
Tokens correctement prédits (top 10): 521
Précision stricte (1ère position): 28.03%
Précision adaptée (1ère position): 29.68%
Précision (top 10): 61.37%
================================================================================
