================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
row1 = list(map(int, input().split()))
row2 = list(map(int, input().split()))
row3 = list(map(int, input().split()))
result = 0
for x in row2:
    result += x
i = 0
while i < n - 1:
    if row1[i + 1] - row1[i] == 1:
        result += row3[row1[i] - 1]
    i += 1
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '("("' → logprob: -12.375107765197754
    8. '()' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08201935887336731
    2. ')' → logprob: -2.582019329071045
    3. '()' → logprob: -6.332019329071045
    4. '(
' → logprob: -7.707019329071045
    5. '())' → logprob: -8.457019805908203
    6. '('' → logprob: -9.332019805908203
    7. ''' → logprob: -9.457019805908203
    8. '`' → logprob: -9.707019805908203
    9. '')' → logprob: -9.707019805908203
    10. '```' → logprob: -10.082019805908203

Token 5: 'row' (ID: 843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9191706776618958
    2. 'i' → logprob: -1.169170618057251
    3. 'for' → logprob: -1.669170618057251
    4. 's' → logprob: -3.169170618057251
    5. '*' → logprob: -4.66917085647583
    6. ')' → logprob: -4.91917085647583
    7. 'x' → logprob: -5.04417085647583
    8. '#' → logprob: -5.16917085647583
    9. '`' → logprob: -5.16917085647583
    10. 'a' → logprob: -5.54417085647583

Token 6: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025799013674259186
    2. '_' → logprob: -3.775799036026001
    3. '_s' → logprob: -6.650798797607422
    4. ' =' → logprob: -8.025798797607422
    5. '[' → logprob: -8.150798797607422
    6. '[:]' → logprob: -8.525798797607422
    7. ' ' → logprob: -8.900798797607422
    8. ' s' → logprob: -9.275798797607422
    9. '[]' → logprob: -9.900798797607422
    10. '.' → logprob: -10.150798797607422

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43488478660583496
    2. 's' → logprob: -1.434884786605835
    3. '_' → logprob: -2.684884786605835
    4. '[]' → logprob: -4.059885025024414
    5. '[:]' → logprob: -4.684885025024414
    6. ' =' → logprob: -5.559885025024414
    7. '=' → logprob: -5.809885025024414
    8. '.' → logprob: -6.309885025024414
    9. '[s' → logprob: -6.309885025024414
    10. '\[' → logprob: -6.559885025024414

Token 8: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8772256374359131
    2. ' []' → logprob: -1.377225637435913
    3. '"' → logprob: -2.252225637435913
    4. '[' → logprob: -2.627225637435913
    5. ''' → logprob: -3.252225637435913
    6. 'input' → logprob: -3.627225637435913
    7. ' [' → logprob: -4.002225875854492
    8. 'list' → logprob: -4.252225875854492
    9. '[input' → logprob: -4.252225875854492
    10. ' input' → logprob: -4.877225875854492

Token 9: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -8.470901229884475e-05
    2. '(range' → logprob: -10.12508487701416
    3. '()' → logprob: -11.12508487701416
    4. '('' → logprob: -11.50008487701416
    5. '(input' → logprob: -11.87508487701416
    6. '(int' → logprob: -13.00008487701416
    7. '("("' → logprob: -13.50008487701416
    8. '(n' → logprob: -13.75008487701416
    9. '(
' → logprob: -14.25008487701416
    10. ' (' → logprob: -14.25008487701416

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00414274213835597
    2. '(' → logprob: -5.754142761230469
    3. '(str' → logprob: -7.629142761230469
    4. 'int' → logprob: -8.129142761230469
    5. '<int' → logprob: -9.879142761230469
    6. '=int' → logprob: -10.004142761230469
    7. ')' → logprob: -10.254142761230469
    8. '(lambda' → logprob: -11.129142761230469
    9. '(
' → logprob: -11.629142761230469
    10. '(input' → logprob: -12.254142761230469

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0066220578737556934
    2. '(' → logprob: -5.256621837615967
    3. ',input' → logprob: -7.631621837615967
    4. '))' → logprob: -7.881621837615967
    5. 'input' → logprob: -8.506622314453125
    6. '=input' → logprob: -9.131622314453125
    7. ')' → logprob: -9.256622314453125
    8. ' (' → logprob: -11.256622314453125
    9. ',' → logprob: -11.506622314453125
    10. ' input' → logprob: -11.631622314453125

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17993971705436707
    2. ' input' → logprob: -1.8049397468566895
    3. '(input' → logprob: -8.679939270019531
    4. ',input' → logprob: -11.554939270019531
    5. ')' → logprob: -11.679939270019531
    6. '=input' → logprob: -12.804939270019531
    7. '	input' → logprob: -14.054939270019531
    8. ' ' → logprob: -14.554939270019531
    9. 'list' → logprob: -14.679939270019531
    10. '[input' → logprob: -15.054939270019531

Token 13: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5818818807601929
    2. '()' → logprob: -1.4568818807601929
    3. '())' → logprob: -1.7068818807601929
    4. '().' → logprob: -3.8318819999694824
    5. '()));' → logprob: -5.956881999969482
    6. '()>' → logprob: -7.081881999969482
    7. '(' → logprob: -7.331881999969482
    8. '())))' → logprob: -8.456881523132324
    9. '());' → logprob: -8.706881523132324
    10. ')' → logprob: -8.831881523132324

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004134322516620159
    2. 'strip' → logprob: -5.504134178161621
    3. 'rstrip' → logprob: -9.879134178161621
    4. 's' → logprob: -13.504134178161621
    5. ')' → logprob: -13.879134178161621
    6. '(split' → logprob: -14.129134178161621
    7. ' split' → logprob: -14.254134178161621
    8. 'spl' → logprob: -14.254134178161621
    9. 'sp' → logprob: -15.629134178161621
    10. 'replace' → logprob: -16.754135131835938

Token 15: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.17032186686992645
    2. '))' → logprob: -2.4203219413757324
    3. '())' → logprob: -2.9203219413757324
    4. ')' → logprob: -4.920321941375732
    5. '()' → logprob: -5.420321941375732
    6. '(' → logprob: -6.295321941375732
    7. '('' → logprob: -9.670321464538574
    8. ''))' → logprob: -10.170321464538574
    9. '(','' → logprob: -10.545321464538574
    10. '())))' → logprob: -10.920321464538574

Token 16: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.009510979987680912
    2. 'for' → logprob: -5.3845109939575195
    3. 'sum' → logprob: -6.7595109939575195
    4. 'result' → logprob: -7.1345109939575195
    5. 'max' → logprob: -7.2595109939575195
    6. 'rows' → logprob: -7.2595109939575195
    7. 's' → logprob: -7.8845109939575195
    8. 'r' → logprob: -8.25951099395752
    9. 'matrix' → logprob: -9.13451099395752
    10. 'count' → logprob: -9.13451099395752

Token 17: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. '1' → logprob: -13.50000286102295
    3. '0' → logprob: -14.37500286102295
    4. ' ' → logprob: -14.87500286102295
    5. '[' → logprob: -15.50000286102295
    6. '```' → logprob: -16.000001907348633
    7. '₂' → logprob: -17.250001907348633
    8. '_' → logprob: -17.625001907348633
    9. '２' → logprob: -17.625001907348633
    10. ')' → logprob: -18.000001907348633

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16054794192314148
    2. '=' → logprob: -1.9105479717254639
    3. '[' → logprob: -8.660548210144043
    4. '.' → logprob: -9.910548210144043
    5. '_' → logprob: -10.410548210144043
    6. ')' → logprob: -10.410548210144043
    7. '[:]' → logprob: -11.035548210144043
    8. '[]' → logprob: -12.660548210144043
    9. 's' → logprob: -12.660548210144043
    10. '.append' → logprob: -13.285548210144043

Token 19: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2519514262676239
    2. 'list' → logprob: -1.5019514560699463
    3. ' row' → logprob: -11.251951217651367
    4. 'row' → logprob: -12.001951217651367
    5. '(list' → logprob: -13.001951217651367
    6. 'map' → logprob: -15.751951217651367
    7. ' ' → logprob: -15.751951217651367
    8. ' map' → logprob: -15.876951217651367
    9. 'List' → logprob: -16.501951217651367
    10. '=list' → logprob: -16.876951217651367

Token 20: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14453458786010742
    2. '(map' → logprob: -2.0195345878601074
    3. '(int' → logprob: -7.144534587860107
    4. '(lambda' → logprob: -7.644534587860107
    5. '(

' → logprob: -8.894535064697266
    6. '(list' → logprob: -9.019535064697266
    7. '((' → logprob: -9.894535064697266
    8. '(range' → logprob: -10.019535064697266
    9. '(
' → logprob: -10.394535064697266
    10. '(m' → logprob: -10.894535064697266

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004586534574627876
    2. '(' → logprob: -5.504586696624756
    3. '<int' → logprob: -8.379586219787598
    4. 'int' → logprob: -8.879586219787598
    5. '=int' → logprob: -9.879586219787598
    6. '[int' → logprob: -10.504586219787598
    7. '```' → logprob: -11.129586219787598
    8. '(str' → logprob: -11.629586219787598
    9. '<|end|>' → logprob: -12.004586219787598
    10. ')' → logprob: -12.129586219787598

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22881734371185303
    2. '(int' → logprob: -1.978817343711853
    3. ',int' → logprob: -2.7288174629211426
    4. 'int' → logprob: -7.728817462921143
    5. ',input' → logprob: -8.603816986083984
    6. ' ,' → logprob: -9.353816986083984
    7. '(' → logprob: -9.353816986083984
    8. '<int' → logprob: -9.478816986083984
    9. '(input' → logprob: -9.853816986083984
    10. '```' → logprob: -9.978816986083984

Token 23: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038054004311561584
    2. ' int' → logprob: -3.4130539894104004
    3. 'input' → logprob: -5.6630539894104
    4. ' input' → logprob: -7.0380539894104
    5. '(int' → logprob: -10.038054466247559
    6. '[int' → logprob: -12.913054466247559
    7. '<int' → logprob: -13.538054466247559
    8. ',int' → logprob: -14.413054466247559
    9. '=int' → logprob: -15.538054466247559
    10. '(input' → logprob: -15.663054466247559

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.045069798827171326
    2. '()' → logprob: -3.545069694519043
    3. '()))' → logprob: -4.420069694519043
    4. '())' → logprob: -6.170069694519043
    5. '()));' → logprob: -8.295069694519043
    6. '(' → logprob: -8.420069694519043
    7. '()))
' → logprob: -8.920069694519043
    8. '()(' → logprob: -9.670069694519043
    9. '()).' → logprob: -9.795069694519043
    10. '()-' → logprob: -9.920069694519043

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -15.125
    3. 'strip' → logprob: -16.75
    4. '(split' → logprob: -17.5
    5. 'spl' → logprob: -18.125
    6. ')' → logprob: -18.25
    7. 'plit' → logprob: -20.0
    8. '```' → logprob: -20.125
    9. 'rstrip' → logprob: -20.25
    10. '.split' → logprob: -21.25

Token 26: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.26581791043281555
    2. '))' → logprob: -1.6408178806304932
    3. '())' → logprob: -3.765817880630493
    4. ')' → logprob: -4.765818119049072
    5. '()' → logprob: -4.890818119049072
    6. '(' → logprob: -8.265817642211914
    7. '()))
' → logprob: -9.140817642211914
    8. ''))' → logprob: -11.765817642211914
    9. '()))

' → logprob: -11.765817642211914
    10. '())
' → logprob: -12.015817642211914

Token 27: 'row' (ID: 843)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.101867437362671
    2. 'r' → logprob: -1.476867437362671
    3. 'for' → logprob: -2.226867437362671
    4. 'result' → logprob: -2.476867437362671
    5. 'm' → logprob: -2.851867437362671
    6. 'sum' → logprob: -3.601867437362671
    7. 'd' → logprob: -3.726867437362671
    8. 'max' → logprob: -3.726867437362671
    9. 'c' → logprob: -3.976867437362671
    10. 'a' → logprob: -4.47686767578125

Token 28: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08385533839464188
    2. '3' → logprob: -2.583855390548706
    3. '2' → logprob: -5.583855152130127
    4. 's' → logprob: -6.958855152130127
    5. '0' → logprob: -9.333855628967285
    6. '_' → logprob: -9.458855628967285
    7. ' ' → logprob: -10.708855628967285
    8. '[' → logprob: -11.083855628967285
    9. ')' → logprob: -11.833855628967285
    10. '```' → logprob: -12.083855628967285

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021037761121988297
    2. '=' → logprob: -3.8960378170013428
    3. '[' → logprob: -8.021038055419922
    4. '_' → logprob: -9.521038055419922
    5. ')' → logprob: -10.521038055419922
    6. '[]' → logprob: -11.021038055419922
    7. '[:]' → logprob: -11.146038055419922
    8. '=[]' → logprob: -11.771038055419922
    9. ' =[' → logprob: -11.771038055419922
    10. 's' → logprob: -12.646038055419922

Token 30: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.38694462180137634
    2. 'list' → logprob: -1.1369446516036987
    3. '(list' → logprob: -9.886944770812988
    4. ' row' → logprob: -11.511944770812988
    5. 'row' → logprob: -11.636944770812988
    6. '=list' → logprob: -13.261944770812988
    7. '[' → logprob: -14.761944770812988
    8. ' [' → logprob: -15.511944770812988
    9. '[list' → logprob: -15.511944770812988
    10. ' ' → logprob: -16.011943817138672

Token 31: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003671210026368499
    2. '((' → logprob: -6.503671169281006
    3. '(map' → logprob: -7.378671169281006
    4. '(range' → logprob: -7.378671169281006
    5. '(list' → logprob: -7.753671169281006
    6. '(()' → logprob: -10.003671646118164
    7. '("("' → logprob: -10.003671646118164
    8. '(int' → logprob: -10.128671646118164
    9. '([' → logprob: -10.128671646118164
    10. '(

' → logprob: -10.253671646118164

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.265633419388905e-05
    2. '(' → logprob: -10.250062942504883
    3. 'int' → logprob: -11.625062942504883
    4. '<int' → logprob: -11.875062942504883
    5. '[int' → logprob: -12.250062942504883
    6. '=int' → logprob: -12.375062942504883
    7. ')(' → logprob: -14.500062942504883
    8. ',int' → logprob: -14.500062942504883
    9. ' (' → logprob: -14.875062942504883
    10. ')' → logprob: -15.000062942504883

Token 33: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007756514940410852
    2. ',int' → logprob: -5.63275671005249
    3. ',' → logprob: -6.50775671005249
    4. 'int' → logprob: -7.00775671005249
    5. '(' → logprob: -7.25775671005249
    6. '=int' → logprob: -8.132756233215332
    7. '```' → logprob: -8.257756233215332
    8. '[int' → logprob: -8.757756233215332
    9. '<int' → logprob: -9.007756233215332
    10. ')' → logprob: -9.007756233215332

Token 34: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007801687810570002
    2. ' int' → logprob: -5.132801532745361
    3. 'input' → logprob: -6.382801532745361
    4. ' input' → logprob: -9.00780200958252
    5. '(int' → logprob: -9.88280200958252
    6. '[int' → logprob: -12.13280200958252
    7. '<int' → logprob: -13.63280200958252
    8. '(input' → logprob: -15.38280200958252
    9. ',int' → logprob: -15.63280200958252
    10. '=int' → logprob: -16.007801055908203

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5848519206047058
    2. '()' → logprob: -1.4598519802093506
    3. '()))' → logprob: -2.0848519802093506
    4. '())' → logprob: -2.4598519802093506
    5. '()));' → logprob: -8.83485221862793
    6. '(' → logprob: -8.95985221862793
    7. '()`' → logprob: -9.33485221862793
    8. ')' → logprob: -9.95985221862793
    9. '()
' → logprob: -9.95985221862793
    10. '()))
' → logprob: -10.08485221862793

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002249933750135824
    2. ')' → logprob: -8.625225067138672
    3. '))' → logprob: -10.500225067138672
    4. 'spl' → logprob: -11.250225067138672
    5. '(split' → logprob: -13.750225067138672
    6. '()))' → logprob: -13.875225067138672
    7. ' split' → logprob: -14.625225067138672
    8. 's' → logprob: -14.625225067138672
    9. '())' → logprob: -14.875225067138672
    10. '()' → logprob: -15.125225067138672

Token 37: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.43469229340553284
    2. ')' → logprob: -1.0596922636032104
    3. '()))' → logprob: -5.5596923828125
    4. '()' → logprob: -6.6846923828125
    5. '())' → logprob: -7.4346923828125
    6. '(' → logprob: -8.4346923828125
    7. ''))' → logprob: -10.9346923828125
    8. ')))' → logprob: -11.0596923828125
    9. ' ))' → logprob: -12.3096923828125
    10. '))
' → logprob: -12.3096923828125

Token 38: 'result' (ID: 2521)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.080595850944519
    2. 's' → logprob: -1.455595850944519
    3. 'r' → logprob: -2.5805959701538086
    4. 'matrix' → logprob: -2.8305959701538086
    5. 'max' → logprob: -2.9555959701538086
    6. 'result' → logprob: -3.2055959701538086
    7. 'for' → logprob: -3.7055959701538086
    8. '[' → logprob: -3.8305959701538086
    9. 'sum' → logprob: -3.8305959701538086
    10. 'd' → logprob: -3.9555959701538086

Token 39: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2598745822906494
    2. '=' → logprob: -1.5098745822906494
    3. ' =' → logprob: -1.6348745822906494
    4. '_' → logprob: -1.7598745822906494
    5. '[' → logprob: -2.2598745822906494
    6. '.' → logprob: -4.63487434387207
    7. 's' → logprob: -4.75987434387207
    8. ' ' → logprob: -5.75987434387207
    9. '[:]' → logprob: -7.00987434387207
    10. '_space' → logprob: -8.00987434387207

Token 40: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3326075077056885
    2. ' [' → logprob: -1.7076075077056885
    3. ' []' → logprob: -1.7076075077056885
    4. '[row' → logprob: -1.7076075077056885
    5. '[]' → logprob: -2.3326075077056885
    6. 'row' → logprob: -2.8326075077056885
    7. ' row' → logprob: -3.8326075077056885
    8. ' ' → logprob: -5.082607269287109
    9. '[max' → logprob: -6.082607269287109
    10. ' max' → logprob: -6.707607269287109

Token 41: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6492212414741516
    2. '[row' → logprob: -1.2742211818695068
    3. '[]' → logprob: -2.024221181869507
    4. 'row' → logprob: -2.899221181869507
    5. '[max' → logprob: -4.899221420288086
    6. '[min' → logprob: -6.774221420288086
    7. 'sum' → logprob: -7.399221420288086
    8. 'max' → logprob: -7.899221420288086
    9. '[][]' → logprob: -8.399221420288086
    10. '[[' → logprob: -8.774221420288086

Token 42: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42854684591293335
    2. '
' → logprob: -1.1785469055175781
    3. '\n' → logprob: -3.428546905517578
    4. '' → logprob: -5.553546905517578
    5. '\' → logprob: -6.678546905517578
    6. ' for' → logprob: -6.928546905517578
    7. ' 
' → logprob: -7.178546905517578
    8. 'f' → logprob: -7.678546905517578
    9. 'n' → logprob: -8.303546905517578
    10. '```' → logprob: -8.553546905517578

Token 43: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11448187381029129
    2. '\n' → logprob: -2.7394819259643555
    3. '
' → logprob: -3.3644819259643555
    4. '```' → logprob: -5.3644819259643555
    5. ' for' → logprob: -5.9894819259643555
    6. '' → logprob: -7.1144819259643555
    7. '\' → logprob: -7.8644819259643555
    8. ' 
' → logprob: -8.614481925964355
    9. 'n' → logprob: -9.489481925964355
    10. 'i' → logprob: -9.614481925964355

Token 44: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6398367881774902
    2. ' i' → logprob: -0.7648367881774902
    3. ' ‌' → logprob: -5.26483678817749
    4. '  ' → logprob: -6.51483678817749
    5. 'i' → logprob: -8.639837265014648
    6. ' n' → logprob: -8.764837265014648
    7. ' _' → logprob: -9.639837265014648
    8. ' ﻿' → logprob: -10.264837265014648
    9. ' ​' → logprob: -10.389837265014648
    10. '_' → logprob: -10.639837265014648

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021527202799916267
    2. 'in' → logprob: -3.8965272903442383
    3. ' ' → logprob: -7.271527290344238
    4. ' i' → logprob: -9.646527290344238
    5. '_' → logprob: -9.896527290344238
    6. '  ' → logprob: -10.146527290344238
    7. 's' → logprob: -10.771527290344238
    8. 'n' → logprob: -10.771527290344238
    9. 'space' → logprob: -10.896527290344238
    10. '	in' → logprob: -11.396527290344238

Token 46: ' row' (ID: 5225)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038088537752628326
    2. 'range' → logprob: -3.66308856010437
    3. ' row' → logprob: -4.538088321685791
    4. 'row' → logprob: -6.913088321685791
    5. '[' → logprob: -11.41308879852295
    6. '[row' → logprob: -12.28808879852295
    7. ' ' → logprob: -12.78808879852295
    8. '(range' → logprob: -12.78808879852295
    9. ' xrange' → logprob: -13.03808879852295
    10. '	range' → logprob: -13.78808879852295

Token 47: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0049881357699632645
    2. '3' → logprob: -5.504988193511963
    3. '2' → logprob: -7.004988193511963
    4. '[' → logprob: -13.754987716674805
    5. ' ' → logprob: -15.004987716674805
    6. '_' → logprob: -15.754987716674805
    7. 's' → logprob: -16.192487716674805
    8. '```' → logprob: -16.254987716674805
    9. '0' → logprob: -16.379987716674805
    10. 'range' → logprob: -16.879987716674805

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11798157542943954
    2. '[' → logprob: -2.8679816722869873
    3. 'in' → logprob: -3.7429816722869873
    4. ' in' → logprob: -3.8679816722869873
    5. ')' → logprob: -6.367981433868408
    6. '<|end|>' → logprob: -6.367981433868408
    7. ' :' → logprob: -6.492981433868408
    8. '):' → logprob: -6.617981433868408
    9. '>' → logprob: -6.992981433868408
    10. '[:]' → logprob: -8.117981910705566

Token 49: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5620025396347046
    2. '   ' → logprob: -1.6870025396347046
    3. ' if' → logprob: -1.9370025396347046
    4. '    ' → logprob: -3.312002658843994
    5. '<|end|>' → logprob: -3.562002658843994
    6. 'if' → logprob: -4.062002658843994
    7. '  ' → logprob: -5.562002658843994
    8. '```' → logprob: -6.187002658843994
    9. ' ,' → logprob: -6.312002658843994
    10. ''' → logprob: -6.562002658843994

Token 50: ' result' (ID: 1534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16513773798942566
    2. ' result' → logprob: -2.665137767791748
    3. ' if' → logprob: -2.915137767791748
    4. 'result' (adapté à ' result') → logprob: -4.290137767791748
    5. ''' → logprob: -5.415137767791748
    6. '    ' → logprob: -5.540137767791748
    7. ' for' → logprob: -6.165137767791748
    8. 'if' → logprob: -6.915137767791748
    9. ' ```' → logprob: -7.165137767791748
    10. '`' → logprob: -7.915137767791748

Token 51: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6661511063575745
    2. ' +=' → logprob: -0.7911511063575745
    3. '+' → logprob: -3.4161510467529297
    4. '=' → logprob: -9.41615104675293
    5. '+='' → logprob: -10.41615104675293
    6. '+="' → logprob: -10.79115104675293
    7. ']+=' → logprob: -12.29115104675293
    8. ' +' → logprob: -12.29115104675293
    9. '+=(' → logprob: -12.41615104675293
    10. '>' → logprob: -12.54115104675293

Token 52: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.051123831421136856
    2. ' x' → logprob: -3.051123857498169
    3. 'row' → logprob: -6.92612361907959
    4. 'abs' → logprob: -7.42612361907959
    5. '1' → logprob: -7.92612361907959
    6. ' row' → logprob: -8.80112361907959
    7. ' abs' → logprob: -8.80112361907959
    8. ' ' → logprob: -9.55112361907959
    9. '(x' → logprob: -10.17612361907959
    10. 'max' → logprob: -10.30112361907959

Token 53: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2317775934934616
    2. '<|end|>' → logprob: -2.3567776679992676
    3. ' ' → logprob: -2.4817776679992676
    4. '\n' → logprob: -4.606777667999268
    5. '*' → logprob: -4.981777667999268
    6. '\' → logprob: -5.981777667999268
    7. '
' → logprob: -6.356777667999268
    8. ' 
' → logprob: -6.731777667999268
    9. '+
' → logprob: -6.856777667999268
    10. '%' → logprob: -6.981777667999268

Token 54: 'i' (ID: 72)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10156067460775375
    2. '+' → logprob: -2.726560592651367
    3. ' ' → logprob: -4.476560592651367
    4. 'for' → logprob: -4.976560592651367
    5. '*' → logprob: -6.101560592651367
    6. '
' → logprob: -6.226560592651367
    7. '\n' → logprob: -6.476560592651367
    8. '+
' → logprob: -6.601560592651367
    9. '<|end|>' → logprob: -6.851560592651367
    10. '```' → logprob: -6.976560592651367

Token 55: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.045711129903793335
    2. 'n' → logprob: -3.295711040496826
    3. 'nd' → logprob: -5.670711040496826
    4. '+' → logprob: -6.920711040496826
    5. '=' → logprob: -7.045711040496826
    6. 's' → logprob: -7.420711040496826
    7. 'm' → logprob: -7.670711040496826
    8. 't' → logprob: -7.920711040496826
    9. 'd' → logprob: -9.045711517333984
    10. ' =' → logprob: -9.170711517333984

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11677008867263794
    2. '0' → logprob: -2.241770029067993
    3. '1' → logprob: -5.866770267486572
    4. '2' → logprob: -7.491770267486572
    5. ' n' → logprob: -7.991770267486572
    6. ' len' → logprob: -9.366769790649414
    7. 'n' → logprob: -9.991769790649414
    8. 'len' → logprob: -10.241769790649414
    9. ' row' → logprob: -10.866769790649414
    10. 'row' → logprob: -11.866769790649414

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029200129210948944
    2. '1' → logprob: -3.6542000770568848
    3. '2' → logprob: -6.654200077056885
    4. 'n' → logprob: -7.404200077056885
    5. '-' → logprob: -8.029200553894043
    6. 'len' → logprob: -8.154200553894043
    7. ' ' → logprob: -8.279200553894043
    8. 'row' → logprob: -9.279200553894043
    9. '3' → logprob: -11.779200553894043
    10. 'sum' → logprob: -12.279200553894043

Token 58: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007717720698565245
    2. 'i' → logprob: -4.882717609405518
    3. ' ' → logprob: -9.257718086242676
    4. '(i' → logprob: -12.132718086242676
    5. '	i' → logprob: -12.632718086242676
    6. ' n' → logprob: -12.757718086242676
    7. ' ' → logprob: -13.257718086242676
    8. '<|end|>' → logprob: -14.507718086242676
    9. 'n' → logprob: -14.882718086242676
    10. '```' → logprob: -15.007718086242676

Token 61: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.001778830192051828
    2. '<' → logprob: -6.376778602600098
    3. ' ' → logprob: -9.751778602600098
    4. '<n' → logprob: -11.626778602600098
    5. ' <=' → logprob: -12.126778602600098
    6. '<len' → logprob: -12.626778602600098
    7. ' <
' → logprob: -15.001778602600098
    8. ' n' → logprob: -15.501778602600098
    9. ' \<' → logprob: -16.251779556274414
    10. '<size' → logprob: -16.876779556274414

Token 62: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1278483122587204
    2. 'n' → logprob: -2.1278483867645264
    3. ' ' → logprob: -8.002848625183105
    4. 'len' → logprob: -8.252848625183105
    5. '3' → logprob: -8.752848625183105
    6. ' len' → logprob: -8.752848625183105
    7. '2' → logprob: -12.377848625183105
    8. '4' → logprob: -13.877848625183105
    9. '1' → logprob: -14.252848625183105
    10. '6' → logprob: -14.377848625183105

Token 63: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032197798136621714
    2. ' :' → logprob: -5.7532196044921875
    3. ':
' → logprob: -10.378219604492188
    4. '+:' → logprob: -12.878219604492188
    5. ':**' → logprob: -13.253219604492188
    6. ' and' → logprob: -13.378219604492188
    7. ' :
' → logprob: -14.003219604492188
    8. '):' → logprob: -14.003219604492188
    9. '+' → logprob: -14.253219604492188
    10. '   ' → logprob: -14.378219604492188

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09590592980384827
    2. '2' → logprob: -2.4709060192108154
    3. ' ' → logprob: -4.970905780792236
    4. '3' → logprob: -12.470906257629395
    5. '```' → logprob: -14.470906257629395
    6. '  ' → logprob: -14.720906257629395
    7. '   ' → logprob: -15.783406257629395
    8. '4' → logprob: -15.908406257629395
    9. '0' → logprob: -15.908406257629395
    10. '<|end|>' → logprob: -16.345905303955078

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018162349238991737
    2. '2' → logprob: -4.018162250518799
    3. ' ' → logprob: -11.643162727355957
    4. '3' → logprob: -12.768162727355957
    5. '```' → logprob: -15.080662727355957
    6. '-' → logprob: -15.830662727355957
    7. '   ' → logprob: -16.45566177368164
    8. '0' → logprob: -16.76816177368164
    9. '4' → logprob: -16.89316177368164
    10. '

' → logprob: -17.14316177368164

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09116185456514359
    2. ' :' → logprob: -2.4661619663238525
    3. ' :
' → logprob: -6.591161727905273
    4. ':
' → logprob: -7.341161727905273
    5. '   ' → logprob: -9.341161727905273
    6. ' ' → logprob: -9.591161727905273
    7. '    ' → logprob: -12.091161727905273
    8. '```' → logprob: -12.216161727905273
    9. ''s' → logprob: -12.591161727905273
    10. ' :
' → logprob: -12.716161727905273

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00163662014529109
    2. '<|end|>' → logprob: -7.376636505126953
    3. ' if' → logprob: -8.001636505126953
    4. '    
' → logprob: -8.501636505126953
    5. ' ' → logprob: -8.876636505126953
    6. ' result' → logprob: -9.501636505126953
    7. 'result' → logprob: -9.876636505126953
    8. ' i' → logprob: -10.001636505126953
    9. '
' → logprob: -10.251636505126953
    10. '```' → logprob: -10.626636505126953

Token 68: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09794232249259949
    2. 'if' (adapté à ' if') → logprob: -3.222942352294922
    3. '   ' → logprob: -3.347942352294922
    4. ' result' → logprob: -4.847942352294922
    5. ' i' → logprob: -5.597942352294922
    6. 'result' → logprob: -5.722942352294922
    7. ' for' → logprob: -6.722942352294922
    8. '    ' → logprob: -6.847942352294922
    9. ' ' → logprob: -7.722942352294922
    10. 'i' → logprob: -8.097942352294922

Token 69: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.002877272432669997
    2. 'row' → logprob: -6.002877235412598
    3. ' abs' → logprob: -8.877877235412598
    4. ' i' → logprob: -9.627877235412598
    5. ' ' → logprob: -9.752877235412598
    6. ' (' → logprob: -10.627877235412598
    7. ' result' → logprob: -10.752877235412598
    8. ' not' → logprob: -10.877877235412598
    9. '   ' → logprob: -11.002877235412598
    10. ' x' → logprob: -11.252877235412598

Token 70: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06497406214475632
    2. '1' → logprob: -2.814974069595337
    3. '3' → logprob: -5.814973831176758
    4. '[' → logprob: -11.439973831176758
    5. '```' → logprob: -13.002473831176758
    6. '[i' → logprob: -13.502473831176758
    7. ' ' → logprob: -13.752473831176758
    8. '`' → logprob: -14.502473831176758
    9. 's' → logprob: -15.189973831176758
    10. ' [' → logprob: -15.252473831176758

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014388042036443949
    2. '[' → logprob: -6.626438617706299
    3. ' [' → logprob: -9.501439094543457
    4. '[n' → logprob: -12.126439094543457
    5. '[j' → logprob: -12.251439094543457
    6. '[x' → logprob: -12.501439094543457
    7. 'i' → logprob: -12.501439094543457
    8. '```' → logprob: -12.626439094543457
    9. ' ' → logprob: -13.501439094543457
    10. '[m' → logprob: -13.563939094543457

Token 72: ' +' (ID: 659)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4307207763195038
    2. ' >' → logprob: -1.8057208061218262
    3. '>' → logprob: -2.930720806121826
    4. '<' → logprob: -3.430720806121826
    5. ' ==' → logprob: -3.680720806121826
    6. '+' → logprob: -3.930720806121826
    7. ')' → logprob: -4.305720806121826
    8. ']' → logprob: -4.930720806121826
    9. '==' → logprob: -5.055720806121826
    10. ' !=' → logprob: -5.180720806121826

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009145628428086638
    2. ' ' → logprob: -7.000914573669434
    3. '```' → logprob: -13.625914573669434
    4. '2' → logprob: -14.125914573669434
    5. '0' → logprob: -15.500914573669434
    6. ']' → logprob: -15.688414573669434
    7. '   ' → logprob: -15.875914573669434
    8. '`' → logprob: -16.000913619995117
    9. ')' → logprob: -16.063413619995117
    10. '>' → logprob: -16.500913619995117

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016897499153856188
    2. ' ' → logprob: -9.250168800354004
    3. '0' → logprob: -9.625168800354004
    4. '2' → logprob: -13.125168800354004
    5. ']' → logprob: -13.375168800354004
    6. 'i' → logprob: -14.500168800354004
    7. '```' → logprob: -14.812668800354004
    8. '   ' → logprob: -15.000168800354004
    9. '3' → logprob: -15.312668800354004
    10. ')' → logprob: -15.375168800354004

Token 75: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04184279590845108
    2. ' ]' → logprob: -3.2918426990509033
    3. ']>' → logprob: -6.166842937469482
    4. ']==' → logprob: -7.041842937469482
    5. '>' → logprob: -8.666842460632324
    6. ' -' → logprob: -8.791842460632324
    7. '-' → logprob: -9.041842460632324
    8. ' >' → logprob: -9.166842460632324
    9. ']>=' → logprob: -9.291842460632324
    10. ' ' → logprob: -9.666842460632324

Token 76: ' -' (ID: 533)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10067911446094513
    2. '>' → logprob: -2.4756791591644287
    3. ' ==' → logprob: -5.22567892074585
    4. ' <' → logprob: -5.97567892074585
    5. '==' → logprob: -7.22567892074585
    6. ' ' → logprob: -7.22567892074585
    7. ' >=' → logprob: -7.60067892074585
    8. ' -' → logprob: -7.72567892074585
    9. ' +' → logprob: -7.97567892074585
    10. ' <=' → logprob: -8.225679397583008

Token 77: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.4745165705680847
    2. 'row' → logprob: -0.9745165705680847
    3. '1' → logprob: -8.474516868591309
    4. ' ' → logprob: -8.724516868591309
    5. '	row' → logprob: -9.974516868591309
    6. '(row' → logprob: -12.349516868591309
    7. '  ' → logprob: -12.474516868591309
    8. '2' → logprob: -12.974516868591309
    9. '0' → logprob: -13.599516868591309
    10. '=row' → logprob: -13.787016868591309

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0061026280745863914
    2. '[i' → logprob: -5.381102561950684
    3. '2' → logprob: -6.756102561950684
    4. '[' → logprob: -8.381102561950684
    5. 'i' → logprob: -10.506102561950684
    6. ' ' → logprob: -11.318602561950684
    7. 's' → logprob: -11.756102561950684
    8. '```' → logprob: -11.818602561950684
    9. '[
' → logprob: -12.256102561950684
    10. ' i' → logprob: -12.881102561950684

Token 79: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004413975402712822
    2. '[' → logprob: -7.875441551208496
    3. 'i' → logprob: -9.875441551208496
    4. ' i' → logprob: -12.375441551208496
    5. ' [' → logprob: -12.500441551208496
    6. '```' → logprob: -14.500441551208496
    7. ' ' → logprob: -15.250441551208496
    8. '[I' → logprob: -15.625441551208496
    9. '	i' → logprob: -15.750441551208496
    10. '   ' → logprob: -15.875441551208496

Token 80: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2889743745326996
    2. ')' → logprob: -2.1639742851257324
    3. ']' → logprob: -2.9139742851257324
    4. '>' → logprob: -2.9139742851257324
    5. ' ]' → logprob: -4.663974285125732
    6. ' )' → logprob: -5.288974285125732
    7. ' <=' → logprob: -5.538974285125732
    8. ' ==' → logprob: -6.038974285125732
    9. ' ' → logprob: -6.288974285125732
    10. ' >=' → logprob: -6.663974285125732

Token 81: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6353016495704651
    2. ' >' → logprob: -1.0103015899658203
    3. ' <=' → logprob: -3.0103015899658203
    4. '>' → logprob: -3.8853015899658203
    5. '==' → logprob: -4.13530158996582
    6. ' <' → logprob: -4.38530158996582
    7. ' >=' → logprob: -5.88530158996582
    8. ' ' → logprob: -5.88530158996582
    9. '<=' → logprob: -6.88530158996582
    10. ' !=' → logprob: -7.26030158996582

Token 82: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4781167209148407
    2. '1' → logprob: -0.9781167507171631
    3. '2' → logprob: -5.853116512298584
    4. ' row' → logprob: -7.478116512298584
    5. 'row' → logprob: -8.603116989135742
    6. '-' → logprob: -9.478116989135742
    7. '0' → logprob: -9.478116989135742
    8. ' -' → logprob: -10.103116989135742
    9. '3' → logprob: -10.228116989135742
    10. '  ' → logprob: -10.665616989135742

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007494697347283363
    2. 'row' → logprob: -5.257494926452637
    3. '2' → logprob: -6.882494926452637
    4. '0' → logprob: -7.257494926452637
    5. ' ' → logprob: -8.632494926452637
    6. '-' → logprob: -9.007494926452637
    7. '3' → logprob: -10.007494926452637
    8. '(row' → logprob: -10.007494926452637
    9. ' row' → logprob: -10.882494926452637
    10. '10' → logprob: -11.194994926452637

Token 84: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.019301902502775192
    2. ':' → logprob: -4.519301891326904
    3. 'and' → logprob: -5.269301891326904
    4. ' ' → logprob: -6.519301891326904
    5. ' or' → logprob: -6.644301891326904
    6. '   ' → logprob: -9.144302368164062
    7. ' :' → logprob: -9.519302368164062
    8. '    ' → logprob: -10.019302368164062
    9. '	and' → logprob: -10.144302368164062
    10. ':
' → logprob: -11.019302368164062

Token 85: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5820425152778625
    2. '       ' → logprob: -1.0820424556732178
    3. ':' → logprob: -2.5820424556732178
    4. '   ' → logprob: -4.207042694091797
    5. ' or' → logprob: -5.457042694091797
    6. ' ' → logprob: -6.207042694091797
    7. 'and' → logprob: -6.707042694091797
    8. '    ' → logprob: -7.082042694091797
    9. '<|end|>' → logprob: -7.332042694091797
    10. ':
' → logprob: -7.582042694091797

Token 86: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.15455372631549835
    2. ' result' → logprob: -2.1545536518096924
    3. '   ' → logprob: -4.6545538902282715
    4. 'i' → logprob: -5.0295538902282715
    5. '
' → logprob: -5.6545538902282715
    6. ' i' → logprob: -5.9045538902282715
    7. '       ' → logprob: -6.1545538902282715
    8. ' if' → logprob: -6.7795538902282715
    9. ' ' → logprob: -7.6545538902282715
    10. 'if' → logprob: -7.9045538902282715

Token 87: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2520885467529297
    2. '+=' → logprob: -1.5020885467529297
    3. ' -=' → logprob: -9.25208854675293
    4. '+' → logprob: -10.12708854675293
    5. ' =' → logprob: -11.37708854675293
    6. '-=' → logprob: -12.25208854675293
    7. ' +' → logprob: -12.87708854675293
    8. '=' → logprob: -13.00208854675293
    9. ' *=' → logprob: -14.50208854675293
    10. ' ' → logprob: -14.75208854675293

Token 88: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.02112729288637638
    2. '1' → logprob: -4.146127223968506
    3. ' row' → logprob: -6.021127223968506
    4. '10' → logprob: -7.396127223968506
    5. '3' → logprob: -7.521127223968506
    6. '(row' → logprob: -7.896127223968506
    7. '2' → logprob: -8.521127700805664
    8. '5' → logprob: -8.896127700805664
    9. '4' → logprob: -9.021127700805664
    10. ' ' → logprob: -9.021127700805664

Token 89: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6210576891899109
    2. '1' → logprob: -0.8710576891899109
    3. '3' → logprob: -3.1210577487945557
    4. ' ' → logprob: -14.308557510375977
    5. '```' → logprob: -14.308557510375977
    6. '+' → logprob: -15.371057510375977
    7. 's' → logprob: -15.433557510375977
    8. '[' → logprob: -15.621057510375977
    9. '   ' → logprob: -15.871057510375977
    10. '-' → logprob: -16.183557510375977

Token 90: '[row' (ID: 35899)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014221377205103636
    2. '[' → logprob: -6.626421928405762
    3. ' [' → logprob: -9.751421928405762
    4. 'i' → logprob: -10.626421928405762
    5. '```' → logprob: -12.751421928405762
    6. ' i' → logprob: -13.126421928405762
    7. '[I' → logprob: -14.001421928405762
    8. '   ' → logprob: -14.126421928405762
    9. '[j' → logprob: -14.126421928405762
    10. '1' → logprob: -14.251421928405762

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.49543508887290955
    2. '2' → logprob: -0.9954351186752319
    3. '3' → logprob: -3.8704349994659424
    4. 'i' → logprob: -9.620434761047363
    5. 's' → logprob: -10.182934761047363
    6. ' ' → logprob: -10.370434761047363
    7. '[' → logprob: -11.057934761047363
    8. '<|end|>' → logprob: -11.245434761047363
    9. '```' → logprob: -11.245434761047363
    10. '0' → logprob: -11.370434761047363

Token 92: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021069261129014194
    2. 'i' → logprob: -9.000210762023926
    3. '[' → logprob: -9.625210762023926
    4. '1' → logprob: -12.125210762023926
    5. ' [' → logprob: -12.250210762023926
    6. ' i' → logprob: -12.375210762023926
    7. ']' → logprob: -13.000210762023926
    8. '[
' → logprob: -13.875210762023926
    9. '   ' → logprob: -14.500210762023926
    10. ' ' → logprob: -15.000210762023926

Token 93: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7834596037864685
    2. '+' → logprob: -1.0334596633911133
    3. ']' → logprob: -2.9084596633911133
    4. ']+' → logprob: -3.0334596633911133
    5. ' +' → logprob: -3.2834596633911133
    6. 'i' → logprob: -3.4084596633911133
    7. ']]' → logprob: -5.158459663391113
    8. '   ' → logprob: -5.658459663391113
    9. '+i' → logprob: -5.908459663391113
    10. ' i' → logprob: -7.658459663391113

Token 94: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08745501935482025
    2. '+' → logprob: -2.5874550342559814
    3. ']+' → logprob: -5.462454795837402
    4. ' +' → logprob: -6.212454795837402
    5. ' ]' → logprob: -6.462454795837402
    6. '+]' → logprob: -8.462454795837402
    7. '+i' → logprob: -9.212454795837402
    8. '-' → logprob: -9.212454795837402
    9. '[i' → logprob: -9.337454795837402
    10. '   ' → logprob: -9.462454795837402

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000632139970548451
    2. ' ' → logprob: -7.375632286071777
    3. '2' → logprob: -13.438132286071777
    4. '<|end|>' → logprob: -14.250632286071777
    5. '...' → logprob: -14.375632286071777
    6. '0' → logprob: -14.563132286071777
    7. '.' → logprob: -15.313132286071777
    8. ',' → logprob: -15.688132286071777
    9. ' -' → logprob: -16.00063133239746
    10. '  ' → logprob: -16.12563133239746

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028624574770219624
    2. ' ' → logprob: -8.250286102294922
    3. '2' → logprob: -11.250286102294922
    4. '0' → logprob: -12.125286102294922
    5. '3' → logprob: -14.500286102294922
    6. '   ' → logprob: -14.812786102294922
    7. '-' → logprob: -15.187786102294922
    8. ']' → logprob: -15.187786102294922
    9. '10' → logprob: -15.250286102294922
    10. '11' → logprob: -15.250286102294922

Token 97: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004559003747999668
    2. ' ]' → logprob: -6.25455904006958
    3. '+' → logprob: -6.50455904006958
    4. ']
' → logprob: -7.50455904006958
    5. ']+' → logprob: -8.254558563232422
    6. ' +' → logprob: -8.879558563232422
    7. '   ' → logprob: -9.754558563232422
    8. ']*' → logprob: -10.129558563232422
    9. ' ' → logprob: -11.254558563232422
    10. '*' → logprob: -11.504558563232422

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7686492204666138
    2. 'i' → logprob: -1.8936492204666138
    3. '
' → logprob: -1.8936492204666138
    4. ' i' → logprob: -2.393649101257324
    5. '	i' → logprob: -2.643649101257324
    6. ' 
' → logprob: -3.393649101257324
    7. '    
' → logprob: -3.893649101257324
    8. '\n' → logprob: -5.143649101257324
    9. ' ' → logprob: -5.643649101257324
    10. '   
' → logprob: -5.768649101257324

Token 99: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13100022077560425
    2. ' i' → logprob: -2.631000280380249
    3. 'i' (adapté à ' i') → logprob: -3.006000280380249
    4. '	i' → logprob: -6.88100004196167
    5. ' ' → logprob: -9.006000518798828
    6. '       ' → logprob: -10.256000518798828
    7. ' else' → logprob: -10.256000518798828
    8. 'else' → logprob: -10.756000518798828
    9. '```' → logprob: -11.006000518798828
    10. '[i' → logprob: -11.756000518798828

Token 100: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.05504905804991722
    2. '+=' → logprob: -3.055048942565918
    3. '+' → logprob: -5.055048942565918
    4. ' +' → logprob: -10.055048942565918
    5. '=' → logprob: -11.555048942565918
    6. '++' → logprob: -12.055048942565918
    7. ' ' → logprob: -12.805048942565918
    8. ' =' → logprob: -14.055048942565918
    9. '+++' → logprob: -14.305048942565918
    10. '+="' → logprob: -15.180048942565918

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -18.75001335144043
    4. '2' → logprob: -19.25001335144043
    5. '   ' → logprob: -19.56251335144043
    6. '１' → logprob: -19.75001335144043
    7. '0' → logprob: -20.43751335144043
    8. '3' → logprob: -20.93751335144043
    9. '+' → logprob: -21.25001335144043
    10. '۱' → logprob: -21.31251335144043

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '2' → logprob: -17.750001907348633
    4. '```' → logprob: -18.125001907348633
    5. '0' → logprob: -19.312501907348633
    6. '   ' → logprob: -19.437501907348633
    7. '１' → logprob: -20.187501907348633
    8. '3' → logprob: -20.750001907348633
    9. '+' → logprob: -21.437501907348633
    10. '۱' → logprob: -21.500001907348633

Token 103: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12703940272331238
    2. '(result' → logprob: -2.1270394325256348
    3. '()' → logprob: -9.627038955688477
    4. '('' → logprob: -10.627038955688477
    5. '("("' → logprob: -12.002038955688477
    6. '((' → logprob: -12.752038955688477
    7. 'result' → logprob: -12.752038955688477
    8. '(`' → logprob: -13.002038955688477
    9. '(results' → logprob: -13.502038955688477
    10. ' (' → logprob: -13.752038955688477

Token 106: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.875
    3. ')`' → logprob: -16.5
    4. '))' → logprob: -17.0
    5. ')
' → logprob: -18.0
    6. '')' → logprob: -19.375
    7. '`)' → logprob: -19.5
    8. '```' → logprob: -19.625
    9. '),' → logprob: -20.0
    10. ')#' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 104
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 83
Précision stricte (1ère position): 41.35%
Précision adaptée (1ère position): 42.31%
Précision (top 10): 79.81%
================================================================================
