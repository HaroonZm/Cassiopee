================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
m1, d1 = map(int, input().split())
m2, d2 = map(int, input().split())
if m1 != m2:
    print(1)
else:
    print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'm' (ID: 76)
  → Token d'amorce (pas de prédiction)

Token 1: '1' (ID: 16)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' d' (ID: 272)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.1620766818523407
    2. 'm' → logprob: -2.287076711654663
    3. ' ' → logprob: -3.287076711654663
    4. '.' → logprob: -5.662076473236084
    5. '_' → logprob: -6.287076473236084
    6. ' =' → logprob: -6.662076473236084
    7. ',' → logprob: -7.412076473236084
    8. '=' → logprob: -7.662076473236084
    9. '  ' → logprob: -7.787076473236084
    10. '[' → logprob: -7.912076473236084

Token 4: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16736190021038055
    2. ',' → logprob: -2.0423619747161865
    3. ' =' → logprob: -4.167361736297607
    4. '.' → logprob: -5.167361736297607
    5. '_' → logprob: -6.292361736297607
    6. '*' → logprob: -8.167362213134766
    7. ')' → logprob: -8.167362213134766
    8. '+' → logprob: -8.167362213134766
    9. '[' → logprob: -8.292362213134766
    10. '-' → logprob: -10.542362213134766

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07584118098020554
    2. ',' → logprob: -3.200841188430786
    3. ' =' → logprob: -3.700841188430786
    4. '+' → logprob: -5.825840950012207
    5. '*' → logprob: -6.200840950012207
    6. ')' → logprob: -6.700840950012207
    7. '.' → logprob: -7.450840950012207
    8. '_' → logprob: -8.450840950012207
    9. '[' → logprob: -9.950840950012207
    10. ';' → logprob: -9.950840950012207

Token 6: ' map' (ID: 4014)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.4484498500823975
    2. ' map' → logprob: -1.4484498500823975
    3. ' data' → logprob: -2.4484498500823975
    4. ' x' → logprob: -2.5734498500823975
    5. 'data' → logprob: -3.0734498500823975
    6. 'm' → logprob: -3.0734498500823975
    7. ' ' → logprob: -3.1984498500823975
    8. 'x' → logprob: -3.1984498500823975
    9. 'map' → logprob: -3.1984498500823975
    10. ' y' → logprob: -3.9484498500823975

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1928032487630844
    2. '(lambda' → logprob: -1.8178032636642456
    3. '<|end|>' → logprob: -5.442803382873535
    4. '```' → logprob: -5.692803382873535
    5. '(int' → logprob: -6.317803382873535
    6. '(token' → logprob: -7.817803382873535
    7. '((' → logprob: -8.192803382873535
    8. '(user' → logprob: -8.442803382873535
    9. '(func' → logprob: -8.567803382873535
    10. ')' → logprob: -8.817803382873535

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1467026323080063
    2. ')' → logprob: -2.146702527999878
    3. '(' → logprob: -4.146702766418457
    4. 'input' → logprob: -6.021702766418457
    5. '(user' → logprob: -8.396702766418457
    6. '<|end|>' → logprob: -8.396702766418457
    7. '[input' → logprob: -9.146702766418457
    8. ')(' → logprob: -9.396702766418457
    9. '(raw' → logprob: -9.396702766418457
    10. ' input' → logprob: -9.896702766418457

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02631632424890995
    2. ' input' → logprob: -3.6513164043426514
    3. ')' → logprob: -11.40131664276123
    4. '(input' → logprob: -12.52631664276123
    5. ',input' → logprob: -14.52631664276123
    6. '	input' → logprob: -16.276315689086914
    7. '=input' → logprob: -16.401315689086914
    8. '<input' → logprob: -16.401315689086914
    9. 'user' → logprob: -16.526315689086914
    10. '[input' → logprob: -16.526315689086914

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3510431945323944
    2. '()' → logprob: -1.3510432243347168
    3. '().' → logprob: -4.101043224334717
    4. '(' → logprob: -5.226043224334717
    5. ')' → logprob: -5.851043224334717
    6. '());' → logprob: -6.101043224334717
    7. '('' → logprob: -6.351043224334717
    8. '(()' → logprob: -6.351043224334717
    9. '`()' → logprob: -6.601043224334717
    10. '()))' → logprob: -7.101043224334717

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003112711710855365
    2. 'strip' → logprob: -8.125310897827148
    3. 'rstrip' → logprob: -11.250310897827148
    4. ' split' → logprob: -13.375310897827148
    5. '(split' → logprob: -14.875310897827148
    6. '```' → logprob: -15.750310897827148
    7. ')' → logprob: -16.12531089782715
    8. 'spl' → logprob: -16.62531089782715
    9. 'read' → logprob: -16.75031089782715
    10. 'startswith' → logprob: -17.25031089782715

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4836304187774658
    2. ')' → logprob: -0.9836304187774658
    3. '))' → logprob: -5.608630180358887
    4. '()' → logprob: -5.608630180358887
    5. '`)' → logprob: -6.858630180358887
    6. '()))' → logprob: -7.608630180358887
    7. '(' → logprob: -7.733630180358887
    8. '```' → logprob: -10.483630180358887
    9. ' ())' → logprob: -10.608630180358887
    10. '`()' → logprob: -10.733630180358887

Token 13: 'm' (ID: 76)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7886735796928406
    2. 'm' → logprob: -1.6636736392974854
    3. 'if' → logprob: -2.2886736392974854
    4. ',' → logprob: -2.2886736392974854
    5. '#' → logprob: -3.6636736392974854
    6. '+
' → logprob: -4.163673400878906
    7. '
' → logprob: -4.288673400878906
    8. 'a' → logprob: -4.288673400878906
    9. ')' → logprob: -4.413673400878906
    10. '```' → logprob: -4.788673400878906

Token 14: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011701062321662903
    2. '2' → logprob: -7.5011701583862305
    3. ',' → logprob: -7.7511701583862305
    4. '.' → logprob: -9.25117015838623
    5. '+' → logprob: -10.62617015838623
    6. 'm' → logprob: -11.50117015838623
    7. '[' → logprob: -11.75117015838623
    8. ' ' → logprob: -11.87617015838623
    9. ')' → logprob: -12.25117015838623
    10. ',m' → logprob: -12.25117015838623

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022249009634833783
    2. ' ,' → logprob: -9.000222206115723
    3. '`,' → logprob: -9.750222206115723
    4. ',m' → logprob: -11.375222206115723
    5. '<|end|>' → logprob: -11.875222206115723
    6. '',' → logprob: -12.250222206115723
    7. ',d' → logprob: -13.000222206115723
    8. '‌,' → logprob: -13.125222206115723
    9. '```' → logprob: -13.375222206115723
    10. '",' → logprob: -13.875222206115723

Token 16: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16203825175762177
    2. ' d' → logprob: -1.9120382070541382
    3. ' ' → logprob: -6.662038326263428
    4. '<|end|>' → logprob: -8.28703784942627
    5. 'space' → logprob: -8.91203784942627
    6. ' ' → logprob: -9.66203784942627
    7. '_d' → logprob: -10.66203784942627
    8. '  ' → logprob: -11.16203784942627
    9. 's' → logprob: -11.66203784942627
    10. '`' → logprob: -11.91203784942627

Token 17: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029964769259095192
    2. '2' → logprob: -3.7799646854400635
    3. '=' → logprob: -5.279964923858643
    4. ',' → logprob: -6.654964923858643
    5. ' =' → logprob: -8.154964447021484
    6. '```' → logprob: -11.404964447021484
    7. '=int' → logprob: -12.279964447021484
    8. ' ' → logprob: -12.404964447021484
    9. '[' → logprob: -12.904964447021484
    10. ' ,' → logprob: -13.279964447021484

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25376904010772705
    2. '=' → logprob: -1.503769040107727
    3. ',' → logprob: -6.3787689208984375
    4. '<|end|>' → logprob: -9.253768920898438
    5. ')' → logprob: -10.878768920898438
    6. ' ,' → logprob: -11.628768920898438
    7. ' ' → logprob: -11.753768920898438
    8. '<|end|>' → logprob: -13.253768920898438
    9. '=

' → logprob: -13.753768920898438
    10. '=
' → logprob: -13.878768920898438

Token 19: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.009763998910784721
    2. 'map' → logprob: -4.634764194488525
    3. ' ' → logprob: -12.634763717651367
    4. ' input' → logprob: -13.384763717651367
    5. ' m' → logprob: -13.884763717651367
    6. '	map' → logprob: -14.509763717651367
    7. 'm' → logprob: -15.009763717651367
    8. ' ' → logprob: -15.259763717651367
    9. 'int' → logprob: -15.509763717651367
    10. '(map' → logprob: -15.634763717651367

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.033882543444633484
    2. '(' → logprob: -3.4088826179504395
    3. '<int' → logprob: -8.783882141113281
    4. '```' → logprob: -11.158882141113281
    5. ' (' → logprob: -11.408882141113281
    6. '[int' → logprob: -11.658882141113281
    7. '<|end|>' → logprob: -11.908882141113281
    8. '(str' → logprob: -12.158882141113281
    9. '(in' → logprob: -12.283882141113281
    10. '(
' → logprob: -12.408882141113281

Token 21: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06757242977619171
    2. '(),' → logprob: -2.9425723552703857
    3. ',' → logprob: -4.567572593688965
    4. ',input' → logprob: -6.317572593688965
    5. '(input' → logprob: -8.692572593688965
    6. '()' → logprob: -9.067572593688965
    7. ').' → logprob: -10.317572593688965
    8. '```' → logprob: -10.567572593688965
    9. '()).' → logprob: -11.317572593688965
    10. '>().' → logprob: -11.567572593688965

Token 22: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.32836511731147766
    2. 'input' → logprob: -1.8283650875091553
    3. ' input' → logprob: -2.7033650875091553
    4. ' int' → logprob: -2.9533650875091553
    5. '(int' → logprob: -9.953365325927734
    6. '[int' → logprob: -11.578365325927734
    7. '(input' → logprob: -11.578365325927734
    8. '<int' → logprob: -12.578365325927734
    9. ' ' → logprob: -12.953365325927734
    10. 'map' → logprob: -13.078365325927734

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3425219549390022e-05
    2. '()' → logprob: -11.25001335144043
    3. ' ().' → logprob: -15.50001335144043
    4. '()).' → logprob: -17.37501335144043
    5. '.' → logprob: -17.50001335144043
    6. '(' → logprob: -17.62501335144043
    7. '>().' → logprob: -17.87501335144043
    8. '().__' → logprob: -18.12501335144043
    9. '())' → logprob: -18.50001335144043
    10. ').' → logprob: -18.50001335144043

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.0
    3. 'strip' → logprob: -16.75
    4. '(split' → logprob: -17.875
    5. ')' → logprob: -18.125
    6. 'spl' → logprob: -18.75
    7. 'int' → logprob: -19.875
    8. '```' → logprob: -20.25
    9. '.split' → logprob: -20.375
    10. 'plit' → logprob: -21.0

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09171026200056076
    2. '()' → logprob: -2.716710329055786
    3. ')' → logprob: -3.841710329055786
    4. '()))' → logprob: -10.841710090637207
    5. '())
' → logprob: -11.591710090637207
    6. ' ())' → logprob: -11.716710090637207
    7. '();)' → logprob: -11.841710090637207
    8. '().' → logprob: -11.841710090637207
    9. '`)' → logprob: -12.341710090637207
    10. '()>' → logprob: -12.466710090637207

Token 26: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016639621928334236
    2. 'days' → logprob: -4.766639709472656
    3. ' if' → logprob: -6.016639709472656
    4. '```' → logprob: -6.641639709472656
    5. 'day' → logprob: -7.391639709472656
    6. 'print' → logprob: -7.391639709472656
    7. 'n' → logprob: -7.766639709472656
    8. '`' → logprob: -7.766639709472656
    9. '``' → logprob: -8.016639709472656
    10. 'months' → logprob: -8.141639709472656

Token 27: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.007966683246195316
    2. 'm' → logprob: -5.5079665184021
    3. ' (' → logprob: -5.7579665184021
    4. ' ' → logprob: -7.7579665184021
    5. '(m' → logprob: -8.382966995239258
    6. '(' → logprob: -10.257966995239258
    7. ' d' → logprob: -11.007966995239258
    8. '  ' → logprob: -11.882966995239258
    9. ' ' → logprob: -12.007966995239258
    10. 'd' → logprob: -14.132966995239258

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.060365608893335e-05
    2. '2' → logprob: -11.125041007995605
    3. '_' → logprob: -11.875041007995605
    4. ' ' → logprob: -12.000041007995605
    5. '==' → logprob: -12.125041007995605
    6. ' ==' → logprob: -12.500041007995605
    7. '```' → logprob: -13.625041007995605
    8. '１' → logprob: -15.062541007995605
    9. '' → logprob: -15.375041007995605
    10. '<' → logprob: -15.437541007995605

Token 29: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0909891352057457
    2. ' <' → logprob: -2.715989112854004
    3. '==' → logprob: -4.590989112854004
    4. ' <=' → logprob: -4.715989112854004
    5. ' >' → logprob: -6.840989112854004
    6. '<' → logprob: -7.840989112854004
    7. ' !=' → logprob: -9.090989112854004
    8. '=' → logprob: -9.965989112854004
    9. ' ' → logprob: -10.340989112854004
    10. '<=' → logprob: -10.465989112854004

Token 30: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.31327441334724426
    2. ' m' → logprob: -1.3132743835449219
    3. '1' → logprob: -12.188274383544922
    4. ' ' → logprob: -12.188274383544922
    5. '2' → logprob: -14.188274383544922
    6. '	m' → logprob: -15.063274383544922
    7. '=m' → logprob: -15.313274383544922
    8. '=' → logprob: -15.313274383544922
    9. '12' → logprob: -15.688274383544922
    10. '6' → logprob: -15.813274383544922

Token 31: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0160469189286232
    2. '2' → logprob: -4.14104700088501
    3. ' ' → logprob: -12.141046524047852
    4. '```' → logprob: -12.766046524047852
    5. '3' → logprob: -13.766046524047852
    6. 'and' → logprob: -14.953546524047852
    7. '12' → logprob: -15.078546524047852
    8. ''' → logprob: -15.141046524047852
    9. '   ' → logprob: -15.266046524047852
    10. '_' → logprob: -15.391046524047852

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008853754960000515
    2. ' :' → logprob: -4.758853912353516
    3. ' and' → logprob: -8.508853912353516
    4. ' or' → logprob: -11.008853912353516
    5. ':
' → logprob: -11.633853912353516
    6. 'and' → logprob: -12.008853912353516
    7. '):' → logprob: -13.758853912353516
    8. '>' → logprob: -14.008853912353516
    9. ' :
' → logprob: -14.008853912353516
    10. '>:' → logprob: -14.508853912353516

Token 33: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008958564139902592
    2. ' print' → logprob: -5.133958339691162
    3. '   ' → logprob: -6.008958339691162
    4. '\n' → logprob: -8.75895881652832
    5. '
' → logprob: -9.25895881652832
    6. '```' → logprob: -9.50895881652832
    7. 'if' → logprob: -9.88395881652832
    8. '``' → logprob: -10.13395881652832
    9. '\' → logprob: -10.25895881652832
    10. ':' → logprob: -10.88395881652832

Token 34: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.07213512808084488
    2. 'print' (adapté à ' print') → logprob: -2.8221352100372314
    3. ' if' → logprob: -4.947134971618652
    4. ' days' → logprob: -6.947134971618652
    5. '   ' → logprob: -7.197134971618652
    6. 'if' → logprob: -8.072134971618652
    7. ' for' → logprob: -8.072134971618652
    8. ' ' → logprob: -9.072134971618652
    9. ' month' → logprob: -9.697134971618652
    10. ' n' → logprob: -9.822134971618652

Token 35: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03818802908062935
    2. '("' → logprob: -4.0381879806518555
    3. '('' → logprob: -4.2881879806518555
    4. '("("' → logprob: -5.1631879806518555
    5. '()' → logprob: -8.788187980651855
    6. '(True' → logprob: -9.663187980651855
    7. '("")' → logprob: -10.538187980651855
    8. '(-' → logprob: -10.788187980651855
    9. '((' → logprob: -10.788187980651855
    10. '(False' → logprob: -11.038187980651855

Token 36: '1' (ID: 16)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.44014883041381836
    2. '1' → logprob: -1.6901488304138184
    3. '0' → logprob: -2.8151488304138184
    4. 'd' → logprob: -4.315148830413818
    5. '"D' → logprob: -4.440148830413818
    6. ''' → logprob: -4.565148830413818
    7. '32' → logprob: -4.690148830413818
    8. '31' → logprob: -4.940148830413818
    9. '"d' → logprob: -5.065148830413818
    10. '12' → logprob: -5.190148830413818

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012140447506681085
    2. '0' → logprob: -6.751214027404785
    3. 'else' → logprob: -11.001214027404785
    4. ' )' → logprob: -11.626214027404785
    5. ')
' → logprob: -12.501214027404785
    6. ' else' → logprob: -13.376214027404785
    7. '3' → logprob: -13.376214027404785
    8. '9' → logprob: -13.376214027404785
    9. '6' → logprob: -13.501214027404785
    10. '2' → logprob: -13.751214027404785

Token 38: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.11070162057876587
    2. 'elif' → logprob: -2.485701560974121
    3. '0' → logprob: -4.360701560974121
    4. ' else' → logprob: -5.110701560974121
    5. '<|end|>' → logprob: -7.235701560974121
    6. '6' → logprob: -7.235701560974121
    7. ' elif' → logprob: -7.985701560974121
    8. '```' → logprob: -8.485701560974121
    9. ')' → logprob: -8.860701560974121
    10. '4' → logprob: -9.110701560974121

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016551809676457196
    2. '   ' → logprob: -8.875165939331055
    3. ':
' → logprob: -10.625165939331055
    4. '.' → logprob: -15.125165939331055
    5. ',' → logprob: -15.250165939331055
    6. '>' → logprob: -15.375165939331055
    7. '       ' → logprob: -16.500165939331055
    8. '<|end|>' → logprob: -16.625165939331055
    9. ' :' → logprob: -16.875165939331055
    10. '  ' → logprob: -17.125165939331055

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23651273548603058
    2. 'print' → logprob: -1.6115127801895142
    3. '0' → logprob: -5.236512660980225
    4. '1' → logprob: -6.111512660980225
    5. 'if' → logprob: -6.861512660980225
    6. 'd' → logprob: -6.986512660980225
    7. '2' → logprob: -8.111513137817383
    8. 'abs' → logprob: -8.111513137817383
    9. 'max' → logprob: -8.236513137817383
    10. ' print' → logprob: -8.486513137817383

Token 41: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.17432406544685364
    2. '0' → logprob: -2.6743240356445312
    3. 'd' → logprob: -3.0493240356445312
    4. '1' → logprob: -3.7993240356445312
    5. 'max' → logprob: -5.424324035644531
    6. '2' → logprob: -5.799324035644531
    7. 'if' → logprob: -6.299324035644531
    8. 'abs' → logprob: -6.424324035644531
    9. '3' → logprob: -6.549324035644531
    10. '18' → logprob: -6.549324035644531

Token 42: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1859092116355896
    2. '(d' → logprob: -1.9359092712402344
    3. '((' → logprob: -3.9359092712402344
    4. '(abs' → logprob: -5.935909271240234
    5. '(max' → logprob: -6.060909271240234
    6. '(int' → logprob: -7.810909271240234
    7. '0' → logprob: -9.185909271240234
    8. '(((' → logprob: -9.560909271240234
    9. '()' → logprob: -9.935909271240234
    10. '(
' → logprob: -10.060909271240234

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.135865718126297
    2. '1' → logprob: -2.6358656883239746
    3. 'd' → logprob: -3.6358656883239746
    4. '(' → logprob: -4.635865688323975
    5. '2' → logprob: -5.510865688323975
    6. '31' → logprob: -5.760865688323975
    7. '(d' → logprob: -5.885865688323975
    8. 'abs' → logprob: -5.885865688323975
    9. 'int' → logprob: -6.260865688323975
    10. '-' → logprob: -6.510865688323975

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.625
    3. ' )' → logprob: -16.0
    4. '))' → logprob: -17.25
    5. '`)' → logprob: -18.125
    6. '')' → logprob: -19.0
    7. '0' → logprob: -19.5
    8. ')`' → logprob: -20.0
    9. '）' → logprob: -20.25
    10. '")' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 38
Précision stricte (1ère position): 40.48%
Précision adaptée (1ère position): 42.86%
Précision (top 10): 90.48%
================================================================================
