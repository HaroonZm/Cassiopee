================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import defaultdict

input_stream = sys.stdin.buffer

def get_values_from_input_line(element_processing_function=lambda s: s.decode()):
    """
    Reads a line from input and returns an iterator of its space-separated elements,
    each processed by the specified function.
    """
    return map(element_processing_function, input_stream.readline().split())

def get_single_processed_line(processing_function=lambda s: s.decode()):
    """
    Reads a line from input, strips the trailing newline, and processes it with
    the specified function.
    """
    return processing_function(input_stream.readline().rstrip())

def main():
    input_character_list = [character for character in get_single_processed_line()]
    total_abc_substring_count = 0
    consecutive_a_count = 0
    current_position = 0

    while current_position < len(input_character_list) - 2:

        current_three_characters = "".join(
            input_character_list[current_position : current_position + 3]
        )

        if current_three_characters == "ABC":
            total_abc_substring_count += consecutive_a_count + 1
            current_position += 2
            input_character_list[current_position] = "A"
        else:
            if input_character_list[current_position] == "A":
                consecutive_a_count += 1
            else:
                consecutive_a_count = 0
            current_position += 1

    print(total_abc_substring_count)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01821877807378769
    2. 'os' → logprob: -4.143218994140625
    3. ' Py' → logprob: -7.768218994140625
    4. ' pathlib' → logprob: -7.768218994140625
    5. ' collections' → logprob: -7.893218994140625
    6. ' math' → logprob: -8.768218994140625
    7. 'collections' → logprob: -9.018218994140625
    8. ' ' → logprob: -9.143218994140625
    9. ' typing' → logprob: -9.643218994140625
    10. ' datetime' → logprob: -9.768218994140625

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.537659227848053
    2. 'import' → logprob: -0.912659227848053
    3. '.' → logprob: -4.287659168243408
    4. ' ' → logprob: -8.287659645080566
    5. '<|end|>' → logprob: -9.037659645080566
    6. '.import' → logprob: -9.287659645080566
    7. '```' → logprob: -9.412659645080566
    8. '_import' → logprob: -10.537659645080566
    9. '	import' → logprob: -10.662659645080566
    10. '_' → logprob: -11.412659645080566

Token 6: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2618234157562256
    2. ' deque' → logprob: -1.7618234157562256
    3. ' abc' → logprob: -3.0118234157562256
    4. 'deque' → logprob: -4.886823654174805
    5. 'abc' → logprob: -7.136823654174805
    6. ' named' → logprob: -7.761823654174805
    7. ' Counter' → logprob: -7.886823654174805
    8. ' import' → logprob: -9.261823654174805
    9. 'default' → logprob: -10.511823654174805
    10. ' ' → logprob: -10.511823654174805

Token 7: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.08275940269231796
    2. '
' → logprob: -3.707759380340576
    3. 'import' → logprob: -3.832759380340576
    4. '\n' → logprob: -3.957759380340576
    5. '```' → logprob: -5.082759380340576
    6. ',' → logprob: -6.207759380340576
    7. '<|end|>' → logprob: -6.457759380340576
    8. ' 

' → logprob: -6.832759380340576
    9. '\' → logprob: -7.082759380340576
    10. '' → logprob: -7.707759380340576

Token 8: 'input' (ID: 2586)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7115576863288879
    2. 'data' → logprob: -1.4615576267242432
    3. 'def' → logprob: -1.5865576267242432
    4. 'import' → logprob: -3.336557626724243
    5. '\' → logprob: -4.836557865142822
    6. 'default' → logprob: -5.461557865142822
    7. '
' → logprob: -5.586557865142822
    8. '```' → logprob: -5.711557865142822
    9. '' → logprob: -6.086557865142822
    10. 'de' → logprob: -6.086557865142822

Token 9: '_stream' (ID: 29670)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0483899861574173
    2. '.' → logprob: -3.4233899116516113
    3. '_' → logprob: -4.923389911651611
    4. '=' → logprob: -5.673389911651611
    5. '()' → logprob: -6.298389911651611
    6. '_data' → logprob: -7.298389911651611
    7. ')' → logprob: -8.42339038848877
    8. ' =' → logprob: -8.54839038848877
    9. '```' → logprob: -8.54839038848877
    10. '_line' → logprob: -9.04839038848877

Token 10: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7911152839660645
    2. '=' → logprob: -1.0411152839660645
    3. ' =' → logprob: -1.6661152839660645
    4. '(' → logprob: -6.5411152839660645
    5. ')' → logprob: -6.9161152839660645
    6. '.readline' → logprob: -7.0411152839660645
    7. '[:]' → logprob: -8.541114807128906
    8. '_' → logprob: -8.791114807128906
    9. 's' → logprob: -8.791114807128906
    10. '.=' → logprob: -8.916114807128906

Token 11: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07897648960351944
    2. ' sys' → logprob: -2.5789763927459717
    3. '(sys' → logprob: -9.82897663116455
    4. 'iter' → logprob: -11.45397663116455
    5. ' iter' → logprob: -12.20397663116455
    6. 'input' → logprob: -12.20397663116455
    7. '	sys' → logprob: -12.45397663116455
    8. '```' → logprob: -13.20397663116455
    9. '=sys' → logprob: -13.20397663116455
    10. 'stdin' → logprob: -13.70397663116455

Token 12: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.013613545335829258
    2. '.stdin' → logprob: -4.388613700866699
    3. ' .' → logprob: -7.638613700866699
    4. '.input' → logprob: -7.888613700866699
    5. '.stdout' → logprob: -9.2636137008667
    6. '.argv' → logprob: -9.7636137008667
    7. '.readline' → logprob: -10.1386137008667
    8. '.import' → logprob: -10.8886137008667
    9. '.next' → logprob: -12.0136137008667
    10. '.std' → logprob: -12.3886137008667

Token 13: '.buffer' (ID: 48964)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07242601364850998
    2. '.readline' → logprob: -2.6974260807037354
    3. '.read' → logprob: -6.447425842285156
    4. 'read' → logprob: -7.822425842285156
    5. '.readlines' → logprob: -8.947425842285156
    6. '
' → logprob: -9.572425842285156
    7. '```' → logprob: -10.072425842285156
    8. '<|end|>' → logprob: -10.197425842285156
    9. '#' → logprob: -10.447425842285156
    10. '[' → logprob: -10.447425842285156

Token 14: '

' (ID: 279)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4898360073566437
    2. '.read' → logprob: -1.2398359775543213
    3. '.' → logprob: -2.6148359775543213
    4. 'read' → logprob: -3.7398359775543213
    5. '.readlines' → logprob: -7.6148362159729
    6. '<|end|>' → logprob: -9.239835739135742
    7. '_read' → logprob: -9.739835739135742
    8. ' readline' → logprob: -9.989835739135742
    9. '[:]' → logprob: -10.239835739135742
    10. '```' → logprob: -10.489835739135742

Token 15: 'def' (ID: 1314)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.19680412113666534
    2. '.read' → logprob: -2.1968040466308594
    3. '.' → logprob: -2.8218040466308594
    4. 'read' → logprob: -5.196804046630859
    5. '.readlines' → logprob: -6.946804046630859
    6. '=' → logprob: -7.946804046630859
    7. 'def' → logprob: -8.32180404663086
    8. '[:]' → logprob: -8.44680404663086
    9. '.write' → logprob: -9.19680404663086
    10. ':' → logprob: -9.19680404663086

Token 16: ' get' (ID: 717)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.15103156864643097
    2. ' process' → logprob: -2.776031494140625
    3. ' parse' → logprob: -3.276031494140625
    4. ' main' → logprob: -4.026031494140625
    5. ' readline' → logprob: -4.526031494140625
    6. ' solve' → logprob: -5.401031494140625
    7. ' parser' → logprob: -6.276031494140625
    8. ' ' → logprob: -6.901031494140625
    9. ' decode' → logprob: -7.026031494140625
    10. ' tokenize' → logprob: -8.026031494140625

Token 17: '_values' (ID: 20393)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.49512407183647156
    2. '_line' → logprob: -2.620124101638794
    3. ' _' → logprob: -2.745124101638794
    4. '_input' → logprob: -2.870124101638794
    5. '_byte' → logprob: -3.120124101638794
    6. '_next' → logprob: -3.120124101638794
    7. '_' → logprob: -3.370124101638794
    8. '_chunk' → logprob: -3.995124101638794
    9. '_tokens' → logprob: -4.745123863220215
    10. '_char' → logprob: -5.120123863220215

Token 18: '_from' (ID: 12526)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.28230372071266174
    2. '(' → logprob: -1.4073036909103394
    3. '()' → logprob: -7.907303810119629
    4. '_' → logprob: -8.532303810119629
    5. '(:' → logprob: -8.782303810119629
    6. ' ():' → logprob: -9.282303810119629
    7. ' (' → logprob: -10.657303810119629
    8. '(token' → logprob: -10.907303810119629
    9. '```' → logprob: -10.907303810119629
    10. '(data' → logprob: -11.157303810119629

Token 19: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.9455336928367615
    2. '_stream' → logprob: -1.3205337524414062
    3. '_' → logprob: -2.3205337524414062
    4. '_buffer' → logprob: -2.5705337524414062
    5. 'input' → logprob: -2.6955337524414062
    6. ' input' → logprob: -3.5705337524414062
    7. '_bytes' → logprob: -3.8205337524414062
    8. 'stdin' → logprob: -4.570533752441406
    9. 'buffer' → logprob: -4.945533752441406
    10. 'stream' → logprob: -5.445533752441406

Token 20: '_line' (ID: 14418)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2305130511522293
    2. '(' → logprob: -1.605513095855713
    3. '()' → logprob: -6.480513095855713
    4. '(input' → logprob: -7.480513095855713
    5. '(line' → logprob: -7.855513095855713
    6. '(stream' → logprob: -7.980513095855713
    7. '_' → logprob: -8.105512619018555
    8. '_stream' → logprob: -8.105512619018555
    9. ' ():' → logprob: -8.855512619018555
    10. '("("' → logprob: -8.980512619018555

Token 21: '(element' (ID: 22709)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4754018187522888
    2. '():' → logprob: -0.9754018187522888
    3. '(line' → logprob: -7.600401878356934
    4. '()' → logprob: -8.350401878356934
    5. '(:' → logprob: -8.600401878356934
    6. ' ():' → logprob: -9.475401878356934
    7. '("("' → logprob: -9.975401878356934
    8. ' (' → logprob: -9.975401878356934
    9. '(token' → logprob: -10.350401878356934
    10. ':' → logprob: -10.350401878356934

Token 22: '_processing' (ID: 142889)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12628404796123505
    2. 's' → logprob: -2.251284122467041
    3. ',' → logprob: -5.126284122467041
    4. ')' → logprob: -5.626284122467041
    5. '=' → logprob: -6.251284122467041
    6. ':' → logprob: -7.001284122467041
    7. '[' → logprob: -7.626284122467041
    8. ' ):' → logprob: -9.251283645629883
    9. '):
' → logprob: -9.626283645629883
    10. ' =' → logprob: -10.376283645629883

Token 23: '_function' (ID: 21094)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01015822310000658
    2. '_function' → logprob: -5.760158061981201
    3. '_func' → logprob: -6.260158061981201
    4. '_fn' → logprob: -6.385158061981201
    5. ')' → logprob: -6.510158061981201
    6. '=' → logprob: -7.635158061981201
    7. '_' → logprob: -7.760158061981201
    8. ',' → logprob: -8.13515853881836
    9. ' ):' → logprob: -8.63515853881836
    10. '):
' → logprob: -9.26015853881836

Token 24: '=lambda' (ID: 64865)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008492480963468552
    2. ',' → logprob: -5.133492469787598
    3. ')' → logprob: -6.008492469787598
    4. ' ):' → logprob: -10.133492469787598
    5. '):
' → logprob: -10.633492469787598
    6. '=' → logprob: -11.383492469787598
    7. '(line' → logprob: -12.008492469787598
    8. '(' → logprob: -12.258492469787598
    9. ':' → logprob: -12.508492469787598
    10. ',line' → logprob: -12.883492469787598

Token 25: ' s' (ID: 265)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.34877219796180725
    2. ' x' → logprob: -1.2237721681594849
    3. ' line' → logprob: -8.848772048950195
    4. 'line' → logprob: -9.223772048950195
    5. 's' → logprob: -11.348772048950195
    6. 'element' → logprob: -11.598772048950195
    7. 'v' → logprob: -12.098772048950195
    8. ' s' → logprob: -12.098772048950195
    9. ' ' → logprob: -12.223772048950195
    10. 'e' → logprob: -12.348772048950195

Token 26: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007397199049592018
    2. ' :' → logprob: -5.632397174835205
    3. ':s' → logprob: -5.757397174835205
    4. 's' → logprob: -7.882397174835205
    5. ',' → logprob: -9.382397651672363
    6. ':str' → logprob: -9.507397651672363
    7. ':return' → logprob: -10.257397651672363
    8. ' s' → logprob: -11.382397651672363
    9. '):' → logprob: -11.507397651672363
    10. ':list' → logprob: -12.257397651672363

Token 27: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.0418814420700073
    2. 's' → logprob: -1.2918814420700073
    3. 'int' → logprob: -1.4168814420700073
    4. ' int' → logprob: -2.041881561279297
    5. 'str' → logprob: -9.166881561279297
    6. ' str' → logprob: -10.916881561279297
    7. 'float' → logprob: -11.041881561279297
    8. ' sys' → logprob: -11.416881561279297
    9. ' ' → logprob: -11.916881561279297
    10. '<int' → logprob: -11.916881561279297

Token 28: '.decode' (ID: 30619)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006762383040040731
    2. ')' → logprob: -5.006762504577637
    3. ',' → logprob: -10.881762504577637
    4. '):
' → logprob: -11.256762504577637
    5. ' ):' → logprob: -11.506762504577637
    6. ':' → logprob: -13.381762504577637
    7. ' ' → logprob: -14.131762504577637
    8. '[' → logprob: -14.631762504577637
    9. ')):' → logprob: -14.631762504577637
    10. '   ' → logprob: -15.006762504577637

Token 29: '()):
' (ID: 83536)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6473460793495178
    2. '()' → logprob: -1.147346019744873
    3. '('' → logprob: -1.897346019744873
    4. '(),' → logprob: -5.397346019744873
    5. '("' → logprob: -6.897346019744873
    6. '().' → logprob: -7.022346019744873
    7. '(' → logprob: -7.397346019744873
    8. '()),' → logprob: -7.647346019744873
    9. ')' → logprob: -8.147346496582031
    10. '():' → logprob: -8.397346496582031

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004638741724193096
    2. ' line' → logprob: -5.754638671875
    3. ' readline' → logprob: -7.504638671875
    4. ' input' → logprob: -8.504638671875
    5. '   ' → logprob: -9.004638671875
    6. 'input' → logprob: -9.004638671875
    7. 'line' → logprob: -9.004638671875
    8. ' return' → logprob: -9.504638671875
    9. '	line' → logprob: -10.379638671875
    10. '    
' → logprob: -10.504638671875

Token 31: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4078371524810791
    2. ' line' → logprob: -1.157837152481079
    3. 'line' → logprob: -5.1578369140625
    4. ' try' → logprob: -5.2828369140625
    5. ' input' → logprob: -5.2828369140625
    6. 'input' → logprob: -6.7828369140625
    7. '       ' → logprob: -7.2828369140625
    8. '    ' → logprob: -7.6578369140625
    9. '	line' → logprob: -7.7828369140625
    10. 'try' → logprob: -7.7828369140625

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003606959478929639
    2. ' line' → logprob: -7.128606796264648
    3. '    ' → logprob: -7.628606796264648
    4. ')' → logprob: -7.753606796264648
    5. ' input' → logprob: -8.378606796264648
    6. '"""' → logprob: -8.503606796264648
    7. 'def' → logprob: -8.628606796264648
    8. '    
' → logprob: -8.878606796264648
    9. 'input' → logprob: -8.878606796264648
    10. ' return' → logprob: -8.878606796264648

Token 33: ' Reads' (ID: 88839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20936213433742523
    2. ' """' → logprob: -2.584362030029297
    3. ')' → logprob: -2.834362030029297
    4. '"""' → logprob: -3.459362030029297
    5. ' ' → logprob: -4.959362030029297
    6. '    ' → logprob: -6.084362030029297
    7. ' )' → logprob: -6.209362030029297
    8. ' return' → logprob: -6.459362030029297
    9. 'def' → logprob: -6.459362030029297
    10. '\n' → logprob: -6.834362030029297

Token 34: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0983150452375412
    2. ' line' → logprob: -3.7233150005340576
    3. ' one' → logprob: -3.8483150005340576
    4. ' the' → logprob: -3.9733150005340576
    5. ' an' → logprob: -4.348315238952637
    6. '   ' → logprob: -5.348315238952637
    7. ' next' → logprob: -5.723315238952637
    8. ' input' → logprob: -5.973315238952637
    9. 'line' → logprob: -6.723315238952637
    10. 'input' → logprob: -6.973315238952637

Token 35: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6349369287490845
    2. ' line' → logprob: -0.7599369287490845
    3. 'single' → logprob: -6.759936809539795
    4. ' single' → logprob: -6.884936809539795
    5. 'input' → logprob: -9.509937286376953
    6. '_line' → logprob: -11.009937286376953
    7. ' input' → logprob: -11.384937286376953
    8. ' ' → logprob: -11.509937286376953
    9. 's' → logprob: -12.134937286376953
    10. '	line' → logprob: -12.134937286376953

Token 36: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.744868278503418
    2. '   ' → logprob: -0.994868278503418
    3. ',' → logprob: -2.494868278503418
    4. ' and' → logprob: -3.244868278503418
    5. 'from' → logprob: -4.119868278503418
    6. ' ,' → logprob: -5.244868278503418
    7. ' ' → logprob: -5.869868278503418
    8. 'input' → logprob: -6.119868278503418
    9. ' with' → logprob: -6.869868278503418
    10. ' =' → logprob: -6.869868278503418

Token 37: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4773466885089874
    2. 'input' → logprob: -0.977346658706665
    3. ' the' → logprob: -5.852346897125244
    4. 'the' → logprob: -7.852346897125244
    5. 'stdin' → logprob: -13.602346420288086
    6. '_input' → logprob: -14.727346420288086
    7. ' stdin' → logprob: -15.852346420288086
    8. 'Input' → logprob: -16.102346420288086
    9. ' an' → logprob: -16.102346420288086
    10. ' a' → logprob: -17.227346420288086

Token 38: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27398115396499634
    2. ',' → logprob: -2.0239810943603516
    3. ' and' → logprob: -2.8989810943603516
    4. ')' → logprob: -3.1489810943603516
    5. ' ,' → logprob: -6.023981094360352
    6. '.' → logprob: -6.148981094360352
    7. ' )' → logprob: -6.773981094360352
    8. '.readline' → logprob: -7.023981094360352
    9. ' ' → logprob: -7.523981094360352
    10. 'input' → logprob: -7.648981094360352

Token 39: ' returns' (ID: 7377)
  Prédit: ' returns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' returns' → logprob: -0.5661717057228088
    2. ' splits' → logprob: -1.191171646118164
    3. ' return' → logprob: -3.066171646118164
    4. 'return' → logprob: -3.191171646118164
    5. 'returns' → logprob: -3.816171646118164
    6. ' processes' → logprob: -4.566171646118164
    7. ' tokens' → logprob: -6.316171646118164
    8. '   ' → logprob: -6.941171646118164
    9. 'tokens' → logprob: -6.941171646118164
    10. ' applies' → logprob: -7.066171646118164

Token 40: ' an' (ID: 448)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.4420230388641357
    2. ' a' → logprob: -1.8170230388641357
    3. ' list' → logprob: -1.8170230388641357
    4. ' input' → logprob: -2.0670230388641357
    5. 'element' → logprob: -2.3170230388641357
    6. ' element' → logprob: -2.5670230388641357
    7. 'input' → logprob: -2.8170230388641357
    8. 'list' → logprob: -3.1920230388641357
    9. ' an' → logprob: -4.442023277282715
    10. ' [' → logprob: -4.692023277282715

Token 41: ' iterator' (ID: 30787)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.06384290754795074
    2. ' iterable' → logprob: -3.563843011856079
    3. 'array' → logprob: -4.4388427734375
    4. ' empty' → logprob: -4.5638427734375
    5. ' list' → logprob: -5.0638427734375
    6. ' iterator' → logprob: -6.4388427734375
    7. 'list' → logprob: -6.6888427734375
    8. ' element' → logprob: -7.1888427734375
    9. 'empty' → logprob: -8.0638427734375
    10. 'iterator' → logprob: -8.6888427734375

Token 42: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3978598713874817
    2. '(' → logprob: -1.397859811782837
    3. ' of' → logprob: -3.147859811782837
    4. ' that' → logprob: -4.897860050201416
    5. ' over' → logprob: -5.647860050201416
    6. ' (' → logprob: -5.772860050201416
    7. '       ' → logprob: -5.897860050201416
    8. '    ' → logprob: -5.897860050201416
    9. ' ' → logprob: -6.022860050201416
    10. '(token' → logprob: -6.272860050201416

Token 43: ' its' (ID: 1617)
  Prédit: ' element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.11628066748380661
    2. 'element' → logprob: -2.4912805557250977
    3. ' processed' → logprob: -4.741280555725098
    4. ' map' → logprob: -5.366280555725098
    5. 'map' → logprob: -5.616280555725098
    6. ' elements' → logprob: -5.741280555725098
    7. ' values' → logprob: -5.866280555725098
    8. ' the' → logprob: -5.991280555725098
    9. 'processed' → logprob: -7.616280555725098
    10. 'elements' → logprob: -8.491280555725098

Token 44: ' space' (ID: 4918)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.15469272434711456
    2. ' elements' → logprob: -2.6546926498413086
    3. ' tokens' → logprob: -3.4046926498413086
    4. 'values' → logprob: -4.029692649841309
    5. ' processed' → logprob: -4.529692649841309
    6. 'tokens' → logprob: -5.654692649841309
    7. ' decoded' → logprob: -6.154692649841309
    8. 'elements' → logprob: -6.279692649841309
    9. ' results' → logprob: -7.029692649841309
    10. ' parsed' → logprob: -7.654692649841309

Token 45: '-separated' (ID: 189658)
  Prédit: '-separated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-separated' → logprob: -0.025969428941607475
    2. '-' → logprob: -4.775969505310059
    3. '-del' → logprob: -5.275969505310059
    4. 'se' → logprob: -5.525969505310059
    5. 'del' → logprob: -5.775969505310059
    6. 'split' → logprob: -6.025969505310059
    7. '<|end|>' → logprob: -7.025969505310059
    8. 'tokens' → logprob: -7.775969505310059
    9. 'token' → logprob: -8.275969505310059
    10. ' -' → logprob: -8.650969505310059

Token 46: ' elements' (ID: 8632)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.6004512310028076
    2. 'values' → logprob: -1.3504512310028076
    3. ' elements' → logprob: -2.3504512310028076
    4. ' tokens' → logprob: -3.1004512310028076
    5. 'tokens' → logprob: -3.6004512310028076
    6. 'elements' → logprob: -3.7254512310028076
    7. 'processed' → logprob: -8.850451469421387
    8. ' processed' → logprob: -9.225451469421387
    9. 'decoded' → logprob: -9.600451469421387
    10. ' items' → logprob: -9.725451469421387

Token 47: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13297805190086365
    2. ',' → logprob: -2.3829779624938965
    3. ' ,' → logprob: -4.7579779624938965
    4. ')' → logprob: -5.0079779624938965
    5. '.' → logprob: -5.3829779624938965
    6. ' tokens' → logprob: -5.6329779624938965
    7. '  ' → logprob: -6.3829779624938965
    8. '    ' → logprob: -6.3829779624938965
    9. 'tokens' → logprob: -7.0079779624938965
    10. '<|end|>' → logprob: -7.0079779624938965

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7423603534698486
    2. ' processed' → logprob: -1.3673603534698486
    3. ' converted' → logprob: -1.9923603534698486
    4. '    ' → logprob: -2.6173603534698486
    5. ' split' → logprob: -4.8673601150512695
    6. ' with' → logprob: -5.1173601150512695
    7. ' as' → logprob: -5.3673601150512695
    8. ' decoded' → logprob: -5.3673601150512695
    9. ' each' → logprob: -5.4923601150512695
    10. ' which' → logprob: -5.6173601150512695

Token 49: ' each' (ID: 2454)
  Prédit: ' processed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' processed' → logprob: -0.6293512582778931
    2. ' after' → logprob: -1.379351258277893
    3. '   ' → logprob: -2.8793511390686035
    4. 'processed' → logprob: -3.2543511390686035
    5. ' applying' → logprob: -3.6293511390686035
    6. ' converted' → logprob: -4.1293511390686035
    7. 'converted' → logprob: -4.1293511390686035
    8. ' map' → logprob: -4.5043511390686035
    9. ' decoded' → logprob: -4.5043511390686035
    10. ' mapped' → logprob: -4.6293511390686035

Token 50: ' processed' (ID: 23478)
  Prédit: ' processed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' processed' → logprob: -0.17228539288043976
    2. 'processed' → logprob: -2.047285318374634
    3. ' passed' → logprob: -3.547285318374634
    4. 'passed' → logprob: -8.922285079956055
    5. ' transformed' → logprob: -9.547285079956055
    6. '_processed' → logprob: -9.922285079956055
    7. ' being' → logprob: -10.922285079956055
    8. ' converted' → logprob: -11.047285079956055
    9. ' run' → logprob: -11.047285079956055
    10. 'converted' → logprob: -11.672285079956055

Token 51: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.05487698316574097
    2. ' with' → logprob: -3.1798770427703857
    3. 'by' → logprob: -4.679876804351807
    4. 'with' → logprob: -6.429876804351807
    5. ' through' → logprob: -8.054877281188965
    6. '<|end|>' → logprob: -8.679877281188965
    7. ' using' → logprob: -8.929877281188965
    8. ' ' → logprob: -9.554877281188965
    9. '   ' → logprob: -9.804877281188965
    10. '<|end|>' → logprob: -10.054877281188965

Token 52: ' the' (ID: 290)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.5018248558044434
    2. ' element' → logprob: -1.0018248558044434
    3. ' the' → logprob: -3.6268248558044434
    4. 'the' → logprob: -7.251824855804443
    5. ' a' → logprob: -10.751825332641602
    6. '```' → logprob: -11.376825332641602
    7. '	element' → logprob: -11.876825332641602
    8. ' ' → logprob: -12.251825332641602
    9. '(element' → logprob: -12.751825332641602
    10. ' an' → logprob: -13.001825332641602

Token 53: ' specified' (ID: 10185)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.02976345270872116
    2. ' element' → logprob: -3.5297634601593018
    3. '```' → logprob: -11.779763221740723
    4. '`' → logprob: -14.279763221740723
    5. '_element' → logprob: -14.404763221740723
    6. '	element' → logprob: -14.654763221740723
    7. 'input' → logprob: -14.779763221740723
    8. '
' → logprob: -14.904763221740723
    9. '[element' → logprob: -14.904763221740723
    10. 'provided' → logprob: -14.904763221740723

Token 54: ' function' (ID: 1114)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.15887483954429626
    2. ' function' → logprob: -2.783874750137329
    3. 'function' → logprob: -3.158874750137329
    4. ' element' → logprob: -3.158874750137329
    5. 'processing' → logprob: -10.03387451171875
    6. 'token' → logprob: -10.15887451171875
    7. ' processing' → logprob: -11.03387451171875
    8. '_element' → logprob: -11.90887451171875
    9. '	element' → logprob: -12.03387451171875
    10. '_function' → logprob: -12.03387451171875

Token 55: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44910696148872375
    2. ',' → logprob: -1.9491069316864014
    3. '):' → logprob: -2.5741069316864014
    4. '.' → logprob: -2.8241069316864014
    5. ')' → logprob: -2.8241069316864014
    6. ':' → logprob: -4.5741071701049805
    7. 'def' → logprob: -5.9491071701049805
    8. ' ' → logprob: -6.0741071701049805
    9. '):
' → logprob: -6.3241071701049805
    10. ').' → logprob: -6.4491071701049805

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003051742911338806
    2. '    
' → logprob: -7.0030517578125
    3. '
' → logprob: -7.3780517578125
    4. '"""' → logprob: -7.6280517578125
    5. '"""
' → logprob: -8.0030517578125
    6. '```' → logprob: -8.3780517578125
    7. ')' → logprob: -8.7530517578125
    8. '\n' → logprob: -9.3780517578125
    9. ' ' → logprob: -9.5030517578125
    10. '    ' → logprob: -10.7530517578125

Token 57: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005925951059907675
    2. '    
' → logprob: -5.630926132202148
    3. '
' → logprob: -7.005926132202148
    4. '"""' → logprob: -7.755926132202148
    5. '\n' → logprob: -7.880926132202148
    6. '```' → logprob: -8.130926132202148
    7. '  
' → logprob: -9.880926132202148
    8. '"""
' (adapté à ' """
') → logprob: -9.880926132202148
    9. '   
' → logprob: -10.255926132202148
    10. ')' → logprob: -10.630926132202148

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007534817326813936
    2. ' line' → logprob: -5.007534980773926
    3. 'line' → logprob: -8.257534980773926
    4. '    
' → logprob: -8.632534980773926
    5. ' input' → logprob: -9.632534980773926
    6. 'input' → logprob: -9.757534980773926
    7. ' while' → logprob: -9.882534980773926
    8. 'try' → logprob: -9.882534980773926
    9. ' try' → logprob: -10.007534980773926
    10. '
' → logprob: -10.382534980773926

Token 59: ' return' (ID: 622)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.9258472919464111
    2. '   ' → logprob: -1.0508472919464111
    3. ' line' → logprob: -1.4258472919464111
    4. 'try' → logprob: -5.550847053527832
    5. 'data' → logprob: -6.175847053527832
    6. ' try' → logprob: -6.675847053527832
    7. ' data' → logprob: -6.800847053527832
    8. 'return' (adapté à ' return') → logprob: -6.925847053527832
    9. ' while' → logprob: -7.050847053527832
    10. ' return' → logprob: -7.550847053527832

Token 60: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5135560631752014
    2. '(map' → logprob: -1.5135560035705566
    3. '(element' → logprob: -2.6385560035705566
    4. ' map' → logprob: -3.2635560035705566
    5. ' (' → logprob: -3.7635560035705566
    6. '(input' → logprob: -4.013556003570557
    7. 'input' → logprob: -4.638556003570557
    8. '(iter' → logprob: -4.888556003570557
    9. 'element' → logprob: -5.138556003570557
    10. 'iter' → logprob: -5.763556003570557

Token 61: '(element' (ID: 22709)
  Prédit: '(element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(element' → logprob: -0.3813934922218323
    2. '(lambda' → logprob: -1.6313934326171875
    3. '(' → logprob: -2.1313934326171875
    4. '(
' → logprob: -6.0063934326171875
    5. '(input' → logprob: -9.006393432617188
    6. 'element' → logprob: -9.006393432617188
    7. 'lambda' → logprob: -10.756393432617188
    8. '(

' → logprob: -11.256393432617188
    9. '(
' → logprob: -12.881393432617188
    10. '((' → logprob: -13.131393432617188

Token 62: '_processing' (ID: 142889)
  Prédit: '_processing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processing' → logprob: -7.064297824399546e-05
    2. 'processing' → logprob: -10.125070571899414
    3. '(lambda' → logprob: -11.750070571899414
    4. ')' → logprob: -12.125070571899414
    5. 'Processing' → logprob: -12.625070571899414
    6. '(' → logprob: -12.750070571899414
    7. '_process' → logprob: -13.250070571899414
    8. '(process' → logprob: -13.375070571899414
    9. 's' → logprob: -13.500070571899414
    10. '_processed' → logprob: -13.500070571899414

Token 63: '_function' (ID: 21094)
  Prédit: '_function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_function' → logprob: -4.842555426876061e-06
    2. 'function' → logprob: -12.250004768371582
    3. '_func' → logprob: -18.7500057220459
    4. '_functions' → logprob: -18.8750057220459
    5. '_FUNCTION' → logprob: -19.1250057220459
    6. 'f' → logprob: -19.3750057220459
    7. 'Function' → logprob: -19.8750057220459
    8. '_method' → logprob: -20.2500057220459
    9. '_fun' → logprob: -20.2500057220459
    10. '_system' → logprob: -20.3750057220459

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05648134648799896
    2. ',input' → logprob: -2.93148136138916
    3. ',int' → logprob: -7.18148136138916
    4. ' ,' → logprob: -7.93148136138916
    5. 'input' → logprob: -8.55648136138916
    6. ',line' → logprob: -8.93148136138916
    7. ' input' → logprob: -10.68148136138916
    8. ',
' → logprob: -10.68148136138916
    9. 'sys' → logprob: -10.80648136138916
    10. ',next' → logprob: -11.30648136138916

Token 65: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.054913315922021866
    2. ' input' → logprob: -2.929913282394409
    3. '   ' → logprob: -11.304913520812988
    4. '(input' → logprob: -11.929913520812988
    5. ')' → logprob: -12.554913520812988
    6. 'lambda' → logprob: -12.554913520812988
    7. 'b' → logprob: -13.804913520812988
    8. '	input' → logprob: -14.054913520812988
    9. ' ' → logprob: -14.554913520812988
    10. '
' → logprob: -14.804913520812988

Token 66: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: 0.0
    2. 'stream' → logprob: -17.0
    3. '_STREAM' → logprob: -17.75
    4. '_line' → logprob: -17.875
    5. '_st' → logprob: -18.875
    6. '(stream' → logprob: -20.0
    7. '.stream' → logprob: -20.25
    8. '_' → logprob: -20.625
    9. '_Stream' → logprob: -20.625
    10. '_str' → logprob: -20.75

Token 67: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -15.000000953674316
    3. '().' → logprob: -15.375000953674316
    4. ' readline' → logprob: -17.0
    5. '.readlines' → logprob: -17.625
    6. ').' → logprob: -18.375
    7. ' .' → logprob: -18.625
    8. '.read' → logprob: -18.875
    9. '```' → logprob: -20.0
    10. '.rstrip' → logprob: -20.625

Token 68: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019209524616599083
    2. '().' → logprob: -4.394209384918213
    3. '()' → logprob: -5.019209384918213
    4. ' ())' → logprob: -10.269209861755371
    5. '())
' → logprob: -11.644209861755371
    6. ')' → logprob: -11.644209861755371
    7. '()))' → logprob: -12.144209861755371
    8. '();)' → logprob: -12.769209861755371
    9. '()[' → logprob: -13.894209861755371
    10. '(' → logprob: -14.019209861755371

Token 69: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.6102057695388794
    2. 'rstrip' → logprob: -1.3602057695388794
    3. 'split' → logprob: -1.6102057695388794
    4. 'decode' → logprob: -8.11020565032959
    5. ' strip' → logprob: -12.86020565032959
    6. '```' → logprob: -13.61020565032959
    7. ' split' → logprob: -13.98520565032959
    8. '.rstrip' → logprob: -14.61020565032959
    9. '(split' → logprob: -15.23520565032959
    10. '(strip' → logprob: -15.61020565032959

Token 70: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01205641683191061
    2. '()' → logprob: -4.512056350708008
    3. '(b' → logprob: -8.262056350708008
    4. 'b' → logprob: -8.512056350708008
    5. '()))' → logprob: -8.512056350708008
    6. '(' → logprob: -8.762056350708008
    7. '())
' → logprob: -9.637056350708008
    8. ' ())' → logprob: -10.012056350708008
    9. ')' → logprob: -10.637056350708008
    10. '());' → logprob: -11.387056350708008

Token 71: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04027647525072098
    2. '#' → logprob: -3.415276527404785
    3. 'newline' → logprob: -6.290276527404785
    4. '\' → logprob: -7.290276527404785
    5. '```' → logprob: -7.540276527404785
    6. 'for' → logprob: -7.790276527404785
    7. '[' → logprob: -8.040276527404785
    8. 'if' → logprob: -8.040276527404785
    9. 'data' → logprob: -8.165276527404785
    10. '<|end|>' → logprob: -8.290276527404785

Token 72: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.21774901449680328
    2. ' main' → logprob: -1.842748999595642
    3. ' process' → logprob: -3.9677491188049316
    4. ' parse' → logprob: -5.217749118804932
    5. '_get' → logprob: -6.217749118804932
    6. ' solve' → logprob: -6.592749118804932
    7. 'get' → logprob: -6.967749118804932
    8. ' write' → logprob: -7.092749118804932
    9. ' _' → logprob: -7.342749118804932
    10. ' convert' → logprob: -7.467749118804932

Token 73: '_single' (ID: 46053)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0017386015970259905
    2. '_value' → logprob: -7.126738548278809
    3. '_' → logprob: -7.751738548278809
    4. '_tokens' → logprob: -9.126738548278809
    5. '_line' → logprob: -9.501738548278809
    6. '_elements' → logprob: -9.876738548278809
    7. '_numbers' → logprob: -10.251738548278809
    8. '_lines' → logprob: -10.626738548278809
    9. '_s' → logprob: -10.876738548278809
    10. '_total' → logprob: -11.376738548278809

Token 74: '_processed' (ID: 161669)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.03195611760020256
    2. '_line' → logprob: -3.531956195831299
    3. '_' → logprob: -6.281956195831299
    4. '_element' → logprob: -8.90695571899414
    5. '_input' → logprob: -10.03195571899414
    6. '_word' → logprob: -10.40695571899414
    7. '_val' → logprob: -10.78195571899414
    8. 'value' → logprob: -10.90695571899414
    9. '_values' → logprob: -11.03195571899414
    10. '_token' → logprob: -11.28195571899414

Token 75: '_line' (ID: 14418)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.013326343148946762
    2. '_line' → logprob: -4.763326168060303
    3. '_element' → logprob: -5.638326168060303
    4. '_input' → logprob: -7.013326168060303
    5. '_' → logprob: -9.513326644897461
    6. '_token' → logprob: -9.763326644897461
    7. '_item' → logprob: -10.388326644897461
    8. 'value' → logprob: -10.763326644897461
    9. '_values' → logprob: -10.888326644897461
    10. '_integer' → logprob: -11.638326644897461

Token 76: '(process' (ID: 39808)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004493805463425815
    2. '():
' → logprob: -8.625449180603027
    3. ' ():' → logprob: -8.625449180603027
    4. '(element' → logprob: -9.750449180603027
    5. '_element' → logprob: -12.000449180603027
    6. 'element' → logprob: -12.250449180603027
    7. '(line' → logprob: -12.750449180603027
    8. '_elements' → logprob: -12.875449180603027
    9. '()' → logprob: -13.000449180603027
    10. '(' → logprob: -13.125449180603027

Token 77: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.5246825814247131
    2. 'ed' → logprob: -0.8996825814247131
    3. '_line' → logprob: -7.274682521820068
    4. 'or' → logprob: -8.274682998657227
    5. 'element' → logprob: -8.649682998657227
    6. '_element' → logprob: -8.774682998657227
    7. '_input' → logprob: -9.524682998657227
    8. 'line' → logprob: -9.899682998657227
    9. '```' → logprob: -10.399682998657227
    10. '_' → logprob: -11.024682998657227

Token 78: '_function' (ID: 21094)
  Prédit: '_function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_function' → logprob: -0.0005955664673820138
    2. '):' → logprob: -8.375595092773438
    3. ')_' → logprob: -8.750595092773438
    4. 'function' → logprob: -9.500595092773438
    5. '_func' → logprob: -9.750595092773438
    6. '_line' → logprob: -10.750595092773438
    7. ')' → logprob: -10.875595092773438
    8. '```' → logprob: -12.000595092773438
    9. '_method' → logprob: -12.250595092773438
    10. '_fn' → logprob: -12.750595092773438

Token 79: '=lambda' (ID: 64865)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023853396996855736
    2. '=lambda' → logprob: -4.273853302001953
    3. '):
' → logprob: -4.898853302001953
    4. '=' → logprob: -6.398853302001953
    5. '=None' → logprob: -8.023853302001953
    6. ',' → logprob: -9.773853302001953
    7. '):
' → logprob: -10.023853302001953
    8. ')' → logprob: -10.273853302001953
    9. ' ):' → logprob: -10.398853302001953
    10. ':' → logprob: -11.648853302001953

Token 80: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030782734975218773
    2. ' s' → logprob: -3.530782699584961
    3. 'x' → logprob: -7.030782699584961
    4. ' x' → logprob: -8.905782699584961
    5. 'line' → logprob: -13.280782699584961
    6. 'a' → logprob: -13.405782699584961
    7. '   ' → logprob: -13.655782699584961
    8. 'int' → logprob: -14.030782699584961
    9. 'sys' → logprob: -14.155782699584961
    10. ' ' → logprob: -14.280782699584961

Token 81: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009794592624530196
    2. ':s' → logprob: -7.000979423522949
    3. ' :' → logprob: -9.75097942352295
    4. 's' → logprob: -11.75097942352295
    5. ':return' → logprob: -15.00097942352295
    6. '   ' → logprob: -15.75097942352295
    7. '):' → logprob: -16.000980377197266
    8. ':ss' → logprob: -16.125980377197266
    9. ':
' → logprob: -16.125980377197266
    10. ':str' → logprob: -16.250980377197266

Token 82: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5767387747764587
    2. ' s' → logprob: -0.8267387747764587
    3. 'int' → logprob: -7.3267388343811035
    4. ' int' → logprob: -8.951738357543945
    5. '(s' → logprob: -12.951738357543945
    6. 'None' → logprob: -13.201738357543945
    7. ' ' → logprob: -13.451738357543945
    8. 'str' → logprob: -13.951738357543945
    9. 'input' → logprob: -14.326738357543945
    10. 'sys' → logprob: -14.576738357543945

Token 83: '.decode' (ID: 30619)
  Prédit: '.decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.decode' → logprob: -0.2825751304626465
    2. '):' → logprob: -1.4075751304626465
    3. ':' → logprob: -7.6575751304626465
    4. ')):' → logprob: -7.7825751304626465
    5. '):
' → logprob: -8.532575607299805
    6. ')' → logprob: -9.032575607299805
    7. ' ):' → logprob: -9.407575607299805
    8. '   ' → logprob: -10.157575607299805
    9. 'decode' → logprob: -10.532575607299805
    10. '.' → logprob: -10.532575607299805

Token 84: '()):
' (ID: 83536)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05223212018609047
    2. '()):
' → logprob: -3.302232027053833
    3. '):' → logprob: -4.927232265472412
    4. '():' → logprob: -5.427232265472412
    5. '())' → logprob: -7.177232265472412
    6. '()))' → logprob: -7.802232265472412
    7. '():
' → logprob: -7.927232265472412
    8. ')' → logprob: -7.927232265472412
    9. '):
' → logprob: -8.552231788635254
    10. '(),' → logprob: -9.427231788635254

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.070975071750581e-05
    2. 'return' → logprob: -10.625030517578125
    3. ' return' → logprob: -12.375030517578125
    4. 'def' → logprob: -13.375030517578125
    5. '```' → logprob: -15.500030517578125
    6. '   ' → logprob: -16.125030517578125
    7. '    
' → logprob: -16.875030517578125
    8. '    ' → logprob: -17.125030517578125
    9. 'input' → logprob: -17.500030517578125
    10. '	return' → logprob: -17.500030517578125

Token 86: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002359117614105344
    2. ' return' → logprob: -6.752358913421631
    3. 'return' → logprob: -6.752358913421631
    4. '
' → logprob: -12.252359390258789
    5. '```' → logprob: -12.752359390258789
    6. ' line' → logprob: -12.877359390258789
    7. '    
' → logprob: -12.877359390258789
    8. 'def' → logprob: -13.252359390258789
    9. '    ' → logprob: -13.627359390258789
    10. 'line' → logprob: -13.877359390258789

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00859022606164217
    2. 'Reads' → logprob: -5.008590221405029
    3. ' Reads' → logprob: -6.758590221405029
    4. '"""
' → logprob: -7.508590221405029
    5. '"""' → logprob: -9.758590698242188
    6. ' """
' → logprob: -10.008590698242188
    7. 'Read' → logprob: -11.258590698242188
    8. 'Returns' → logprob: -11.383590698242188
    9. 'def' → logprob: -11.758590698242188
    10. ' return' → logprob: -11.883590698242188

Token 88: ' Reads' (ID: 88839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2667364478111267
    2. 'Reads' (adapté à ' Reads') → logprob: -2.1417365074157715
    3. 'return' → logprob: -3.1417365074157715
    4. ' return' → logprob: -3.1417365074157715
    5. ' Reads' → logprob: -3.6417365074157715
    6. 'Returns' → logprob: -6.3917365074157715
    7. ' reads' → logprob: -7.1417365074157715
    8. 'def' → logprob: -7.3917365074157715
    9. ' line' → logprob: -8.516736030578613
    10. '
' → logprob: -8.641736030578613

Token 89: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.01296092290431261
    2. 'a' → logprob: -4.387960910797119
    3. ' one' → logprob: -7.762960910797119
    4. ' the' → logprob: -11.762961387634277
    5. ' an' → logprob: -11.762961387634277
    6. ' line' → logprob: -12.887961387634277
    7. '<|end|>' → logprob: -13.387961387634277
    8. 'A' → logprob: -13.512961387634277
    9. ' ' → logprob: -13.762961387634277
    10. 'one' → logprob: -14.012961387634277

Token 90: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.00020127551397308707
    2. 'line' → logprob: -8.750201225280762
    3. ' single' → logprob: -10.625201225280762
    4. 'n' → logprob: -12.000201225280762
    5. ' ' → logprob: -12.625201225280762
    6. ' a' → logprob: -12.750201225280762
    7. ')' → logprob: -13.625201225280762
    8. '_line' → logprob: -14.125201225280762
    9. ' ' → logprob: -14.250201225280762
    10. 'a' → logprob: -14.375201225280762

Token 91: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.0625072568655014
    2. '   ' → logprob: -3.812507152557373
    3. '_' → logprob: -3.937507152557373
    4. ' ' → logprob: -4.937507152557373
    5. 'from' → logprob: -5.562507152557373
    6. '_from' → logprob: -5.812507152557373
    7. ' =' → logprob: -6.187507152557373
    8. '    ' → logprob: -6.562507152557373
    9. ')' → logprob: -7.687507152557373
    10. ' )' → logprob: -7.812507152557373

Token 92: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759400725364685
    2. 'input' → logprob: -0.8259400725364685
    3. ' the' → logprob: -15.075940132141113
    4. 'the' → logprob: -16.075939178466797
    5. '_input' → logprob: -16.950939178466797
    6. '(input' → logprob: -17.075939178466797
    7. 'stdin' → logprob: -17.075939178466797
    8. 'in' → logprob: -17.450939178466797
    9. ' code' → logprob: -17.950939178466797
    10. ' ' → logprob: -17.950939178466797

Token 93: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05384741723537445
    2. ')' → logprob: -3.553847312927246
    3. ' and' → logprob: -4.803847312927246
    4. ',' → logprob: -5.053847312927246
    5. ':' → logprob: -5.928847312927246
    6. '.' → logprob: -6.178847312927246
    7. ' ' → logprob: -6.928847312927246
    8. '    ' → logprob: -7.428847312927246
    9. '<|end|>' → logprob: -7.553847312927246
    10. '):' → logprob: -7.803847312927246

Token 94: ' strips' (ID: 52023)
  Prédit: ' processes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' processes' → logprob: -0.09321397542953491
    2. ' applies' → logprob: -3.3432140350341797
    3. ' splits' → logprob: -3.5932140350341797
    4. ' dec' → logprob: -3.8432140350341797
    5. ' returns' → logprob: -6.21821403503418
    6. ' and' → logprob: -6.46821403503418
    7. 'return' → logprob: -8.71821403503418
    8. ' return' → logprob: -8.84321403503418
    9. ' returning' → logprob: -9.09321403503418
    10. '   ' → logprob: -9.09321403503418

Token 95: ' the' (ID: 290)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012199865886941552
    2. ' ()' → logprob: -7.001219749450684
    3. '():' → logprob: -9.126219749450684
    4. ' the' → logprob: -10.251219749450684
    5. ')' → logprob: -10.251219749450684
    6. '(' → logprob: -10.501219749450684
    7. '().' → logprob: -10.626219749450684
    8. '   ' → logprob: -10.626219749450684
    9. '()
' → logprob: -11.376219749450684
    10. '(),' → logprob: -11.501219749450684

Token 96: ' trailing' (ID: 57985)
  Prédit: ' newline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' newline' → logprob: -0.682199239730835
    2. ' trailing' → logprob: -1.432199239730835
    3. 'newline' → logprob: -2.307199239730835
    4. 'b' → logprob: -2.807199239730835
    5. '()' → logprob: -3.807199239730835
    6. ' whitespace' → logprob: -4.182199478149414
    7. ' b' → logprob: -4.307199478149414
    8. ' line' → logprob: -4.682199478149414
    9. 'line' → logprob: -4.807199478149414
    10. 'input' → logprob: -4.932199478149414

Token 97: ' newline' (ID: 95802)
  Prédit: ' newline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' newline' → logprob: -0.7856698632240295
    2. 'b' → logprob: -1.5356698036193848
    3. ' b' → logprob: -1.5356698036193848
    4. ' whitespace' → logprob: -2.6606698036193848
    5. 'newline' → logprob: -3.2856698036193848
    6. '()' → logprob: -6.785669803619385
    7. ' spaces' → logprob: -6.785669803619385
    8. '```' → logprob: -6.910669803619385
    9. '\n' → logprob: -7.160669803619385
    10. '`' → logprob: -7.910669803619385

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12776070833206177
    2. '   ' → logprob: -2.377760648727417
    3. '):' → logprob: -4.252760887145996
    4. ')' → logprob: -5.127760887145996
    5. '(),' → logprob: -6.252760887145996
    6. ' and' → logprob: -6.377760887145996
    7. ' ,' → logprob: -7.377760887145996
    8. '():' → logprob: -7.377760887145996
    9. '),' → logprob: -7.752760887145996
    10. '()' → logprob: -7.877760887145996

Token 99: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05688020586967468
    2. '   ' → logprob: -3.931880235671997
    3. ')' → logprob: -4.181879997253418
    4. ' return' → logprob: -5.306879997253418
    5. ' returns' → logprob: -5.681879997253418
    6. ' processes' → logprob: -6.181879997253418
    7. ' )' → logprob: -6.431879997253418
    8. ' dec' → logprob: -6.431879997253418
    9. '    ' → logprob: -6.556879997253418
    10. 'return' → logprob: -6.806879997253418

Token 100: ' processes' (ID: 14340)
  Prédit: ' returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' returns' → logprob: -0.19428716599941254
    2. ' return' → logprob: -2.069287061691284
    3. 'return' → logprob: -3.694287061691284
    4. 'returns' → logprob: -3.819287061691284
    5. '   ' → logprob: -6.069287300109863
    6. ')' → logprob: -7.319287300109863
    7. ' processes' → logprob: -8.694287300109863
    8. ' applies' → logprob: -9.444287300109863
    9. ' ' → logprob: -9.694287300109863
    10. 'Returns' → logprob: -9.819287300109863

Token 101: ' it' (ID: 480)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7012245655059814
    2. '(' → logprob: -1.2012245655059814
    3. ' it' → logprob: -1.9512245655059814
    4. '(s' → logprob: -3.5762245655059814
    5. 'the' → logprob: -4.701224327087402
    6. ' its' → logprob: -5.201224327087402
    7. '<|end|>' → logprob: -5.326224327087402
    8. '(
' → logprob: -5.576224327087402
    9. ')' → logprob: -5.826224327087402
    10. ' (' → logprob: -6.326224327087402

Token 102: ' with' (ID: 483)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9762505292892456
    2. '   ' → logprob: -1.2262505292892456
    3. ' with' → logprob: -1.9762505292892456
    4. ')' → logprob: -2.101250648498535
    5. 'def' → logprob: -3.726250648498535
    6. '):
' → logprob: -4.726250648498535
    7. ' by' → logprob: -4.726250648498535
    8. ',' → logprob: -4.976250648498535
    9. ' using' → logprob: -5.226250648498535
    10. ':' → logprob: -5.351250648498535

Token 103: '
' (ID: 198)
  Prédit: ' processing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' processing' → logprob: -0.6007834076881409
    2. 'processing' → logprob: -0.8507834076881409
    3. ' the' → logprob: -3.850783348083496
    4. 'the' → logprob: -5.725783348083496
    5. ' a' → logprob: -11.350783348083496
    6. '.processing' → logprob: -13.725783348083496
    7. '_processing' → logprob: -14.850783348083496
    8. 'a' → logprob: -15.600783348083496
    9. '-processing' → logprob: -15.975783348083496
    10. ' ' → logprob: -16.100784301757812

Token 104: '   ' (ID: 271)
  Prédit: ' processing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' processing' → logprob: -0.03853357583284378
    2. 'processing' → logprob: -3.2885336875915527
    3. ' the' → logprob: -7.663533687591553
    4. 'the' → logprob: -10.913533210754395
    5. ' a' → logprob: -13.663533210754395
    6. ' element' → logprob: -14.163533210754395
    7. 'element' → logprob: -14.913533210754395
    8. '.processing' → logprob: -14.913533210754395
    9. ' input' → logprob: -15.038533210754395
    10. 'Processing' → logprob: -15.288533210754395

Token 105: ' the' (ID: 290)
  Prédit: 'processing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processing' → logprob: -0.008798808790743351
    2. ' processing' → logprob: -5.383798599243164
    3. 'the' (adapté à ' the') → logprob: -5.508798599243164
    4. ' the' → logprob: -9.133798599243164
    5. 'element' → logprob: -11.758798599243164
    6. 'a' → logprob: -13.258798599243164
    7. ' a' → logprob: -15.008798599243164
    8. 'Processing' → logprob: -15.133798599243164
    9. 'input' → logprob: -15.383798599243164
    10. 'process' → logprob: -16.008798599243164

Token 106: ' specified' (ID: 10185)
  Prédit: 'processing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processing' → logprob: -0.02437334693968296
    2. ' processing' → logprob: -3.7743732929229736
    3. ' given' → logprob: -7.774373531341553
    4. 'given' → logprob: -8.149373054504395
    5. 'provided' → logprob: -8.524373054504395
    6. 'specified' → logprob: -8.899373054504395
    7. ' provided' → logprob: -9.774373054504395
    8. ' specified' → logprob: -10.649373054504395
    9. 'function' → logprob: -14.649373054504395
    10. '.processing' → logprob: -14.774373054504395

Token 107: ' function' (ID: 1114)
  Prédit: ' function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' function' → logprob: -0.01645425520837307
    2. 'function' → logprob: -4.141454219818115
    3. ' processing' → logprob: -8.141454696655273
    4. 'processing' → logprob: -9.391454696655273
    5. '_function' → logprob: -10.516454696655273
    6. ' process' → logprob: -12.391454696655273
    7. '<|end|>' → logprob: -12.516454696655273
    8. ' ' → logprob: -13.391454696655273
    9. 'process' → logprob: -13.516454696655273
    10. '(process' → logprob: -13.891454696655273

Token 108: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027051314245909452
    2. '):
' → logprob: -6.627705097198486
    3. ')' → logprob: -7.627705097198486
    4. '   ' → logprob: -8.252705574035645
    5. '(s' → logprob: -8.377705574035645
    6. ',' → logprob: -8.752705574035645
    7. ':' → logprob: -9.127705574035645
    8. 'def' → logprob: -9.752705574035645
    9. '():' → logprob: -9.752705574035645
    10. ' ):' → logprob: -12.127705574035645

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02878010831773281
    2. ')' → logprob: -3.903780221939087
    3. '):' → logprob: -5.028779983520508
    4. '):
' → logprob: -7.028779983520508
    5. 'def' → logprob: -7.903779983520508
    6. '    
' → logprob: -9.153779983520508
    7. '```' → logprob: -10.028779983520508
    8. ' ' → logprob: -10.153779983520508
    9. '  
' → logprob: -10.153779983520508
    10. ' 
' → logprob: -10.653779983520508

Token 110: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11384091526269913
    2. ')' → logprob: -2.2388408184051514
    3. '):' → logprob: -7.9888410568237305
    4. '```' → logprob: -8.98884105682373
    5. ' ' → logprob: -9.11384105682373
    6. ' return' → logprob: -9.11384105682373
    7. '"""' → logprob: -9.61384105682373
    8. 'return' → logprob: -9.73884105682373
    9. 'def' → logprob: -10.61384105682373
    10. '    ' → logprob: -10.86384105682373

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020220205187797546
    2. ' return' → logprob: -6.877021789550781
    3. 'return' → logprob: -7.252021789550781
    4. ' line' → logprob: -8.752021789550781
    5. 'line' → logprob: -9.377021789550781
    6. 'input' → logprob: -10.877021789550781
    7. ' input' → logprob: -11.627021789550781
    8. 'def' → logprob: -13.377021789550781
    9. '   ' → logprob: -13.502021789550781
    10. '    
' → logprob: -13.752021789550781

Token 112: ' return' (ID: 622)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.47834116220474243
    2. 'return' (adapté à ' return') → logprob: -0.9783411622047424
    3. ' line' → logprob: -6.353341102600098
    4. '   ' → logprob: -6.853341102600098
    5. 'raw' → logprob: -7.103341102600098
    6. ' return' → logprob: -7.478341102600098
    7. 'data' → logprob: -10.478341102600098
    8. 'input' → logprob: -11.728341102600098
    9. 'processed' → logprob: -12.228341102600098
    10. ' raw' → logprob: -12.353341102600098

Token 113: ' processing' (ID: 12323)
  Prédit: 'processing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processing' → logprob: -0.011055245995521545
    2. ' processing' → logprob: -4.5110554695129395
    3. 'input' → logprob: -12.136054992675781
    4. 'Processing' → logprob: -14.261054992675781
    5. 'process' → logprob: -14.886054992675781
    6. 'get' → logprob: -15.011054992675781
    7. '.processing' → logprob: -15.386054992675781
    8. ' input' → logprob: -15.761054992675781
    9. '_processing' → logprob: -15.761054992675781
    10. 'processed' → logprob: -15.761054992675781

Token 114: '_function' (ID: 21094)
  Prédit: '_function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_function' → logprob: -0.0031890016980469227
    2. 'g' → logprob: -5.7531890869140625
    3. 'function' → logprob: -12.753189086914062
    4. '_line' → logprob: -13.378189086914062
    5. 'f' → logprob: -13.503189086914062
    6. '_' → logprob: -13.503189086914062
    7. '_func' → logprob: -13.628189086914062
    8. '_g' → logprob: -14.128189086914062
    9. '_processing' → logprob: -14.128189086914062
    10. '_process' → logprob: -14.378189086914062

Token 115: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0008388153510168195
    2. '(' → logprob: -7.500838756561279
    3. '(next' → logprob: -8.250839233398438
    4. 'input' → logprob: -11.375839233398438
    5. '(get' → logprob: -11.625839233398438
    6. '(
' → logprob: -12.875839233398438
    7. '((' → logprob: -14.500839233398438
    8. ' (' → logprob: -14.875839233398438
    9. '(list' → logprob: -15.000839233398438
    10. 'next' → logprob: -15.125839233398438

Token 116: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -2.339278580620885e-06
    2. 'stream' → logprob: -13.000001907348633
    3. '_line' → logprob: -17.125001907348633
    4. '_STREAM' → logprob: -17.250001907348633
    5. '_st' → logprob: -18.625001907348633
    6. '(stream' → logprob: -19.125001907348633
    7. '_' → logprob: -19.250001907348633
    8. 'Stream' → logprob: -19.250001907348633
    9. ')_' → logprob: -19.500001907348633
    10. '_string' → logprob: -19.625001907348633

Token 117: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.704273118884885e-07
    2. '.read' → logprob: -15.625000953674316
    3. '().' → logprob: -15.875000953674316
    4. ').' → logprob: -16.125
    5. '.' → logprob: -16.375
    6. ' readline' → logprob: -16.75
    7. '.readlines' → logprob: -17.5
    8. ')' → logprob: -18.0
    9. '.rstrip' → logprob: -19.0
    10. 'read' → logprob: -19.25

Token 118: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4106677770614624
    2. '()' → logprob: -1.1606677770614624
    3. '().' → logprob: -3.785667896270752
    4. ')' → logprob: -7.285667896270752
    5. '(),' → logprob: -10.160667419433594
    6. '()[' → logprob: -10.160667419433594
    7. '()))' → logprob: -10.660667419433594
    8. '()).' → logprob: -11.660667419433594
    9. '();)' → logprob: -11.910667419433594
    10. '(' → logprob: -12.535667419433594

Token 119: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.11774703115224838
    2. 'strip' → logprob: -2.3677470684051514
    3. 'read' → logprob: -4.367746829986572
    4. 'decode' → logprob: -5.367746829986572
    5. 'r' → logprob: -10.74274730682373
    6. 'raw' → logprob: -11.49274730682373
    7. ')' → logprob: -12.24274730682373
    8. '```' → logprob: -12.86774730682373
    9. '.rstrip' → logprob: -12.99274730682373
    10. ' strip' → logprob: -14.11774730682373

Token 120: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023663757368922234
    2. '()' → logprob: -4.523663520812988
    3. 'b' → logprob: -5.023663520812988
    4. '(b' → logprob: -5.273663520812988
    5. '())
' → logprob: -8.273663520812988
    6. ')' → logprob: -8.523663520812988
    7. '()\' → logprob: -8.898663520812988
    8. '(' → logprob: -9.148663520812988
    9. '()))' → logprob: -10.148663520812988
    10. ' b' → logprob: -11.023663520812988

Token 121: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0274125337600708
    2. '#' → logprob: -4.527412414550781
    3. '
' → logprob: -4.652412414550781
    4. '(' → logprob: -6.152412414550781
    5. '<|end|>' → logprob: -6.652412414550781
    6. 'newline' → logprob: -7.152412414550781
    7. '\n' → logprob: -7.652412414550781
    8. '\' → logprob: -7.652412414550781
    9. '_' → logprob: -8.402412414550781
    10. '

' → logprob: -8.527412414550781

Token 122: ' main' (ID: 2758)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.18561281263828278
    2. 'get' → logprob: -2.060612916946411
    3. ' main' → logprob: -3.435612916946411
    4. ' process' → logprob: -5.810612678527832
    5. ' parse' → logprob: -6.310612678527832
    6. 'main' → logprob: -6.935612678527832
    7. '_get' → logprob: -6.935612678527832
    8. 'process' → logprob: -7.310612678527832
    9. ' read' → logprob: -7.560612678527832
    10. 'parse' → logprob: -7.810612678527832

Token 123: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01626509055495262
    2. '(' → logprob: -4.141264915466309
    3. '()' → logprob: -9.016264915466309
    4. '_' → logprob: -10.016264915466309
    5. ':' → logprob: -10.516264915466309
    6. '(:' → logprob: -11.016264915466309
    7. '("("' → logprob: -12.391264915466309
    8. ' ():' → logprob: -12.516264915466309
    9. '(":' → logprob: -13.266264915466309
    10. '():
' → logprob: -14.016264915466309

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002247199881821871
    2. '    
' → logprob: -6.752247333526611
    3. '    ' → logprob: -7.377247333526611
    4. 'input' → logprob: -9.252246856689453
    5. ' input' → logprob: -9.877246856689453
    6. ' readline' → logprob: -10.127246856689453
    7. '<|end|>' → logprob: -10.627246856689453
    8. '   ' → logprob: -10.752246856689453
    9. '(' → logprob: -10.752246856689453
    10. 'newline' → logprob: -10.877246856689453

Token 125: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10145070403814316
    2. '   ' → logprob: -2.7264506816864014
    3. 'n' → logprob: -3.7264506816864014
    4. ' num' → logprob: -5.7264509201049805
    5. ' N' → logprob: -7.2264509201049805
    6. ' t' → logprob: -7.2264509201049805
    7. ' for' → logprob: -7.8514509201049805
    8. ' line' → logprob: -7.8514509201049805
    9. 'num' → logprob: -8.10145092010498
    10. ' #' → logprob: -8.47645092010498

Token 126: '_character' (ID: 99888)
  Prédit: '_stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.3339502215385437
    2. '_' → logprob: -1.9589502811431885
    3. '_line' → logprob: -1.9589502811431885
    4. '_lines' → logprob: -7.583950042724609
    5. '_values' → logprob: -7.833950042724609
    6. '_data' → logprob: -8.33395004272461
    7. '_str' → logprob: -8.95895004272461
    8. '_buffer' → logprob: -9.45895004272461
    9. '_string' → logprob: -9.45895004272461
    10. '_tokens' → logprob: -9.83395004272461

Token 127: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010687803849577904
    2. '_' → logprob: -5.260687828063965
    3. '=' → logprob: -5.885687828063965
    4. ' =' → logprob: -6.135687828063965
    5. '_stream' → logprob: -8.885687828063965
    6. '_s' → logprob: -9.135687828063965
    7. '_line' → logprob: -9.760687828063965
    8. 'istics' → logprob: -10.510687828063965
    9. '_array' → logprob: -11.010687828063965
    10. '()' → logprob: -11.260687828063965

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10081945359706879
    2. '=' → logprob: -2.3508193492889404
    3. 's' → logprob: -9.10081958770752
    4. '   ' → logprob: -9.22581958770752
    5. '()' → logprob: -9.35081958770752
    6. '[]' → logprob: -9.47581958770752
    7. '=[]' → logprob: -9.85081958770752
    8. '[:]' → logprob: -9.85081958770752
    9. '_' → logprob: -9.97581958770752
    10. ',' → logprob: -10.85081958770752

Token 129: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005891229957342148
    2. 'get' → logprob: -5.3808913230896
    3. ' list' → logprob: -6.7558913230896
    4. '(list' → logprob: -10.005890846252441
    5. '[]' → logprob: -10.630890846252441
    6. 'next' → logprob: -11.005890846252441
    7. ' get' → logprob: -12.005890846252441
    8. '[list' → logprob: -13.005890846252441
    9. '(get' → logprob: -13.255890846252441
    10. 'tuple' → logprob: -13.505890846252441

Token 130: 'character' (ID: 38245)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7161338329315186
    2. '*' → logprob: -1.9661338329315186
    3. 'get' → logprob: -2.0911338329315186
    4. 'next' → logprob: -2.3411338329315186
    5. 'char' → logprob: -2.9661338329315186
    6. 'x' → logprob: -3.3411338329315186
    7. 'chr' → logprob: -3.4661338329315186
    8. 'ch' → logprob: -4.091134071350098
    9. 'ord' → logprob: -5.341134071350098
    10. '*c' → logprob: -5.716134071350098

Token 131: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4813745319843292
    2. ' for' → logprob: -1.2313745021820068
    3. '()' → logprob: -2.606374502182007
    4. '.decode' → logprob: -4.606374740600586
    5. '()]' → logprob: -5.981374740600586
    6. ']' → logprob: -6.106374740600586
    7. '(' → logprob: -7.981374740600586
    8. ' ' → logprob: -8.731374740600586
    9. '   ' → logprob: -8.856374740600586
    10. ')' → logprob: -8.856374740600586

Token 132: ' character' (ID: 5855)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.28157302737236023
    2. ' character' → logprob: -1.4065730571746826
    3. ' line' → logprob: -8.906573295593262
    4. '_character' → logprob: -9.281573295593262
    5. '_' → logprob: -10.031573295593262
    6. 'line' → logprob: -10.156573295593262
    7. ' ' → logprob: -10.781573295593262
    8. ' in' → logprob: -10.781573295593262
    9. 'element' → logprob: -11.406573295593262
    10. '   ' → logprob: -11.906573295593262

Token 133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01606041006743908
    2. 'in' → logprob: -4.1410603523254395
    3. ' ' → logprob: -11.391060829162598
    4. 'import' → logprob: -11.641060829162598
    5. 'input' → logprob: -14.266060829162598
    6. '<|end|>' → logprob: -14.266060829162598
    7. 'character' → logprob: -14.391060829162598
    8. ',' → logprob: -14.391060829162598
    9. '  ' → logprob: -14.516060829162598
    10. '    ' → logprob: -14.766060829162598

Token 134: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.582085371017456
    2. ' get' → logprob: -0.832085371017456
    3. ' input' → logprob: -5.582085609436035
    4. 'input' → logprob: -6.082085609436035
    5. ' ' → logprob: -10.582085609436035
    6. ' sys' → logprob: -11.207085609436035
    7. '(get' → logprob: -11.582085609436035
    8. '"' → logprob: -11.832085609436035
    9. 'sys' → logprob: -12.207085609436035
    10. '_get' → logprob: -12.457085609436035

Token 135: '_single' (ID: 46053)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.01815205067396164
    2. '_single' → logprob: -4.018152236938477
    3. '_' → logprob: -13.643152236938477
    4. '_character' → logprob: -15.143152236938477
    5. 'single' → logprob: -15.393152236938477
    6. '_value' → logprob: -15.893152236938477
    7. '(_' → logprob: -16.268152236938477
    8. 'values' → logprob: -16.768152236938477
    9. '_char' → logprob: -17.018152236938477
    10. 'Single' → logprob: -17.018152236938477

Token 136: '_processed' (ID: 161669)
  Prédit: '_processed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processed' → logprob: -2.935296834039036e-06
    2. 'processed' → logprob: -13.37500286102295
    3. '_character' → logprob: -14.00000286102295
    4. '_line' → logprob: -15.25000286102295
    5. 'Processed' → logprob: -16.125003814697266
    6. '_filtered' → logprob: -16.875003814697266
    7. '_' → logprob: -17.125003814697266
    8. '_input' → logprob: -17.625003814697266
    9. '_encoded' → logprob: -18.125003814697266
    10. '_process' → logprob: -18.125003814697266

Token 137: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.007615848444402218
    2. 'line' → logprob: -4.88261604309082
    3. 'ine' → logprob: -13.38261604309082
    4. '_' → logprob: -13.50761604309082
    5. '_list' → logprob: -13.50761604309082
    6. 'Line' → logprob: -13.63261604309082
    7. '```' → logprob: -14.13261604309082
    8. '(line' → logprob: -14.25761604309082
    9. '_LINE' → logprob: -14.50761604309082
    10. ' line' → logprob: -14.88261604309082

Token 138: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0021939214784651995
    2. '()' → logprob: -6.252193927764893
    3. ' ()' → logprob: -9.252193450927734
    4. '(lambda' → logprob: -10.252193450927734
    5. '(' → logprob: -10.377193450927734
    6. '(str' → logprob: -10.627193450927734
    7. '()]
' → logprob: -10.752193450927734
    8. '()][' → logprob: -11.377193450927734
    9. '()],' → logprob: -11.752193450927734
    10. ']' → logprob: -12.002193450927734

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2345772087574005
    2. ':' → logprob: -1.8595771789550781
    3. '(' → logprob: -4.359577178955078
    4. ' ' → logprob: -4.484577178955078
    5. '    
' → logprob: -4.984577178955078
    6. ')' → logprob: -5.234577178955078
    7. ',' → logprob: -5.234577178955078
    8. '    ' → logprob: -5.734577178955078
    9. '[:]' → logprob: -6.734577178955078
    10. '<|end|>' → logprob: -6.984577178955078

Token 140: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026321783661842346
    2. ' ' → logprob: -4.401321887969971
    3. '    
' → logprob: -5.526321887969971
    4. '    ' → logprob: -6.276321887969971
    5. ' #' → logprob: -6.651321887969971
    6. '#' → logprob: -6.651321887969971
    7. ' for' → logprob: -7.276321887969971
    8. ')' → logprob: -7.401321887969971
    9. '
' → logprob: -7.526321887969971
    10. '  ' → logprob: -7.776321887969971

Token 141: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08151690661907196
    2. '_count' → logprob: -3.456516981124878
    3. '_chars' → logprob: -3.831516981124878
    4. '_char' → logprob: -4.206516742706299
    5. '_counts' → logprob: -5.706516742706299
    6. '_length' → logprob: -6.081516742706299
    7. '_character' → logprob: -6.831516742706299
    8. '_space' → logprob: -6.831516742706299
    9. '_tokens' → logprob: -7.081516742706299
    10. ' =' → logprob: -8.331517219543457

Token 142: 'abc' (ID: 26682)
  Prédit: 'characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'characters' → logprob: -0.10211976617574692
    2. 'count' → logprob: -2.7271196842193604
    3. 'chars' → logprob: -4.8521199226379395
    4. 'length' → logprob: -5.6021199226379395
    5. 'input' → logprob: -5.7271199226379395
    6. 'character' → logprob: -5.8521199226379395
    7. 'sum' → logprob: -5.8521199226379395
    8. 'lines' → logprob: -6.3521199226379395
    9. 'counts' → logprob: -6.6021199226379395
    10. 'char' → logprob: -7.1021199226379395

Token 143: '_sub' (ID: 11572)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.18794989585876465
    2. '_counts' → logprob: -1.9379498958587646
    3. ' =' → logprob: -4.687950134277344
    4. '_counter' → logprob: -5.062950134277344
    5. '_' → logprob: -5.437950134277344
    6. '_chars' → logprob: -6.062950134277344
    7. '_sum' → logprob: -6.187950134277344
    8. '_char' → logprob: -6.562950134277344
    9. '=' → logprob: -7.687950134277344
    10. 'count' → logprob: -7.812950134277344

Token 144: 'string' (ID: 1655)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.21151745319366455
    2. 'string' → logprob: -2.086517333984375
    3. 'se' → logprob: -2.836517333984375
    4. 's' → logprob: -5.586517333984375
    5. 'sequence' → logprob: -5.711517333984375
    6. 'str' → logprob: -8.336517333984375
    7. 'seq' → logprob: -8.711517333984375
    8. 'count' → logprob: -9.211517333984375
    9. 'counts' → logprob: -9.586517333984375
    10. 'quences' → logprob: -9.961517333984375

Token 145: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0014133312506601214
    2. '_count' → logprob: -6.626413345336914
    3. ' =' → logprob: -10.251413345336914
    4. '_counts' → logprob: -10.876413345336914
    5. '=' → logprob: -11.626413345336914
    6. 'count' → logprob: -11.876413345336914
    7. '_length' → logprob: -12.126413345336914
    8. '_s' → logprob: -12.501413345336914
    9. '_' → logprob: -12.501413345336914
    10. '_len' → logprob: -13.001413345336914

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20254725217819214
    2. '=' → logprob: -1.827547311782837
    3. '_' → logprob: -3.827547311782837
    4. 's' → logprob: -7.327547073364258
    5. '_=' → logprob: -10.327547073364258
    6. '_space' → logprob: -10.702547073364258
    7. ' ' → logprob: -10.952547073364258
    8. 'space' → logprob: -11.202547073364258
    9. ' +=' → logprob: -11.452547073364258
    10. ')' → logprob: -11.952547073364258

Token 147: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14268507063388824
    2. ' ' → logprob: -2.0176851749420166
    3. 'len' → logprob: -13.267684936523438
    4. ' ' → logprob: -13.517684936523438
    5. ' [' → logprob: -13.642684936523438
    6. '[' → logprob: -13.892684936523438
    7. 'sum' → logprob: -13.892684936523438
    8. ' len' → logprob: -14.017684936523438
    9. ' defaultdict' → logprob: -14.330184936523438
    10. ' sum' → logprob: -14.705184936523438

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012678056373260915
    2. 'default' → logprob: -10.000126838684082
    3. 'len' → logprob: -10.000126838684082
    4. ' ' → logprob: -11.000126838684082
    5. 'sum' → logprob: -11.625126838684082
    6. 'input' → logprob: -12.375126838684082
    7. '[' → logprob: -12.500126838684082
    8. 'int' → logprob: -14.250126838684082
    9. '3' → logprob: -14.500126838684082
    10. '(' → logprob: -15.125126838684082

Token 149: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5488466620445251
    2. '<|end|>' → logprob: -1.17384672164917
    3. '   ' → logprob: -2.67384672164917
    4. ' ' → logprob: -4.42384672164917
    5. ' for' → logprob: -4.54884672164917
    6. '    
' → logprob: -4.92384672164917
    7. 'for' → logprob: -5.54884672164917
    8. ' 
' → logprob: -5.67384672164917
    9. '<|end|>' → logprob: -6.42384672164917
    10. ',' → logprob: -6.54884672164917

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17737378180027008
    2. '
' → logprob: -3.0523738861083984
    3. ' for' → logprob: -3.4273738861083984
    4. ' ' → logprob: -3.6773738861083984
    5. 'for' → logprob: -3.9273738861083984
    6. '<|end|>' → logprob: -4.177373886108398
    7. '    
' → logprob: -4.927373886108398
    8. 'def' → logprob: -5.552373886108398
    9. '#' → logprob: -6.052373886108398
    10. ' 
' → logprob: -6.552373886108398

Token 151: ' consecutive' (ID: 40840)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1762133091688156
    2. 'n' → logprob: -2.051213264465332
    3. 'i' → logprob: -5.176213264465332
    4. 'current' → logprob: -5.301213264465332
    5. 'abc' → logprob: -5.301213264465332
    6. 'length' → logprob: -5.926213264465332
    7. ' for' → logprob: -6.051213264465332
    8. 'input' → logprob: -6.176213264465332
    9. '#' → logprob: -6.426213264465332
    10. 'def' → logprob: -6.801213264465332

Token 152: '_a' (ID: 10852)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41836419701576233
    2. '_count' → logprob: -1.66836416721344
    3. '_counts' → logprob: -3.4183642864227295
    4. '_a' → logprob: -3.7933642864227295
    5. '_char' → logprob: -3.7933642864227295
    6. '_character' → logprob: -3.9183642864227295
    7. '_chars' → logprob: -4.16836404800415
    8. '_counter' → logprob: -4.66836404800415
    9. '_length' → logprob: -4.91836404800415
    10. '_index' → logprob: -5.66836404800415

Token 153: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.014654548838734627
    2. '_counts' → logprob: -4.764654636383057
    3. '_counter' → logprob: -5.514654636383057
    4. '_' → logprob: -7.764654636383057
    5. 's' → logprob: -8.014654159545898
    6. 'count' → logprob: -8.639654159545898
    7. '_sub' → logprob: -9.139654159545898
    8. '_run' → logprob: -9.264654159545898
    9. '_index' → logprob: -9.389654159545898
    10. '_list' → logprob: -9.514654159545898

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692999839782715
    2. '=' → logprob: -2.126929998397827
    3. 's' → logprob: -13.876930236816406
    4. ' ' → logprob: -14.251930236816406
    5. '_' → logprob: -16.501930236816406
    6. ' ' → logprob: -16.626930236816406
    7. '   ' → logprob: -16.626930236816406
    8. '  ' → logprob: -17.376930236816406
    9. '	' → logprob: -17.501930236816406
    10. ',' → logprob: -17.626930236816406

Token 155: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012513418681919575
    2. ' ' → logprob: -4.387513637542725
    3. '1' → logprob: -12.762513160705566
    4. '   ' → logprob: -15.262513160705566
    5. '  ' → logprob: -15.950013160705566
    6. ' ' → logprob: -16.075014114379883
    7. '[' → logprob: -16.137514114379883
    8. '2' → logprob: -17.137514114379883
    9. '3' → logprob: -17.450014114379883
    10. '<|end|>' → logprob: -17.637514114379883

Token 156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000713266315869987
    2. ' ' → logprob: -7.250713348388672
    3. '1' → logprob: -13.250713348388672
    4. '[' → logprob: -14.125713348388672
    5. '[]' → logprob: -15.125713348388672
    6. ' [' → logprob: -16.438213348388672
    7. '2' → logprob: -16.625713348388672
    8. '   ' → logprob: -17.000713348388672
    9. '000' → logprob: -17.313213348388672
    10. '3' → logprob: -17.500713348388672

Token 157: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07115618884563446
    2. ' for' → logprob: -3.6961562633514404
    3. 'for' → logprob: -3.9461562633514404
    4. '<|end|>' → logprob: -4.696156024932861
    5. '    
' → logprob: -5.446156024932861
    6. ' ' → logprob: -5.446156024932861
    7. '
' → logprob: -5.571156024932861
    8. '  ' → logprob: -7.696156024932861
    9. '    ' → logprob: -7.821156024932861
    10. '	for' → logprob: -8.07115650177002

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29428935050964355
    2. ' for' → logprob: -2.1692893505096436
    3. ' ' → logprob: -2.5442893505096436
    4. 'for' → logprob: -3.0442893505096436
    5. '    
' → logprob: -5.544289588928223
    6. ' 
' → logprob: -6.044289588928223
    7. '    ' → logprob: -6.294289588928223
    8. '  ' → logprob: -6.794289588928223
    9. ' i' → logprob: -6.794289588928223
    10. '	for' → logprob: -7.169289588928223

Token 159: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026184173300862312
    2. 'i' → logprob: -5.15118408203125
    3. 'current' (adapté à ' current') → logprob: -5.40118408203125
    4. 'n' → logprob: -5.90118408203125
    5. 'previous' → logprob: -6.15118408203125
    6. ' for' → logprob: -6.27618408203125
    7. 'total' → logprob: -6.52618408203125
    8. 'abc' → logprob: -6.65118408203125
    9. 'last' → logprob: -7.02618408203125
    10. 'prev' → logprob: -7.02618408203125

Token 160: '_position' (ID: 23739)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5152171850204468
    2. '_index' → logprob: -1.8902171850204468
    3. '_character' → logprob: -2.3902173042297363
    4. '_sub' → logprob: -3.0152173042297363
    5. '_char' → logprob: -3.6402173042297363
    6. '_token' → logprob: -4.265217304229736
    7. '_sequence' → logprob: -4.390217304229736
    8. '_count' → logprob: -4.640217304229736
    9. '_a' → logprob: -4.640217304229736
    10. '_position' → logprob: -4.640217304229736

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02692515403032303
    2. '=' → logprob: -3.7769250869750977
    3. '_' → logprob: -5.776925086975098
    4. ' ' → logprob: -7.901925086975098
    5. ' +=' → logprob: -9.401925086975098
    6. ')' → logprob: -10.651925086975098
    7. ' _' → logprob: -11.026925086975098
    8. '<|end|>' → logprob: -11.401925086975098
    9. 's' → logprob: -11.526925086975098
    10. ',' → logprob: -11.651925086975098

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08898188918828964
    2. ' ' → logprob: -2.463981866836548
    3. '1' → logprob: -10.838981628417969
    4. ' -' → logprob: -11.463981628417969
    5. '-' → logprob: -12.151481628417969
    6. '<|end|>' → logprob: -13.713981628417969
    7. ' ' → logprob: -13.963981628417969
    8. '2' → logprob: -14.026481628417969
    9. 'len' → logprob: -14.026481628417969
    10. 's' → logprob: -15.401481628417969

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018446780450176448
    2. '-' → logprob: -8.875184059143066
    3. ' ' → logprob: -10.375184059143066
    4. '1' → logprob: -11.625184059143066
    5. '2' → logprob: -13.625184059143066
    6. 'len' → logprob: -13.875184059143066
    7. ' -' → logprob: -14.375184059143066
    8. '3' → logprob: -15.125184059143066
    9. '4' → logprob: -15.812684059143066
    10. '[' → logprob: -16.312685012817383

Token 164: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.146174669265747
    2. '   ' → logprob: -1.146174669265747
    3. '<|end|>' → logprob: -1.896174669265747
    4. ' while' → logprob: -2.771174669265747
    5. ' ' → logprob: -3.021174669265747
    6. 'while' → logprob: -3.771174669265747
    7. ' 
' → logprob: -3.896174669265747
    8. ',' → logprob: -4.146174430847168
    9. '    
' → logprob: -4.271174430847168
    10. '#' → logprob: -5.271174430847168

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4942154586315155
    2. ' while' → logprob: -1.494215488433838
    3. 'while' → logprob: -2.244215488433838
    4. '
' → logprob: -3.369215488433838
    5. '<|end|>' → logprob: -4.119215488433838
    6. '	while' → logprob: -5.869215488433838
    7. ',' → logprob: -6.869215488433838
    8. '    
' → logprob: -7.244215488433838
    9. ' ' → logprob: -7.244215488433838
    10. ' for' → logprob: -7.369215488433838

Token 166: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1678919643163681
    2. 'for' → logprob: -2.0428919792175293
    3. ' while' → logprob: -4.292891979217529
    4. 'n' → logprob: -4.667891979217529
    5. ' for' → logprob: -6.542891979217529
    6. '   ' → logprob: -9.667891502380371
    7. 'a' → logprob: -9.917891502380371
    8. 'length' → logprob: -10.167891502380371
    9. '#' → logprob: -10.417891502380371
    10. 'i' → logprob: -10.417891502380371

Token 167: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.01819712109863758
    2. 'current' → logprob: -4.018197059631348
    3. ' True' → logprob: -11.018197059631348
    4. '(current' → logprob: -11.393197059631348
    5. ' ' → logprob: -11.518197059631348
    6. '	current' → logprob: -12.893197059631348
    7. 'True' → logprob: -12.893197059631348
    8. '_current' → logprob: -12.893197059631348
    9. 'urrent' → logprob: -14.393197059631348
    10. ' input' → logprob: -15.018197059631348

Token 168: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.00679861381649971
    2. '_' → logprob: -5.00679874420166
    3. '_character' → logprob: -9.50679874420166
    4. '<' → logprob: -13.00679874420166
    5. '_pos' → logprob: -13.38179874420166
    6. ' _' → logprob: -13.75679874420166
    7. '<_' → logprob: -14.00679874420166
    8. '_positions' → logprob: -14.13179874420166
    9. '_<' → logprob: -14.88179874420166
    10. '_current' → logprob: -15.00679874420166

Token 169: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.006982121616601944
    2. '<' → logprob: -5.006982326507568
    3. '<len' → logprob: -8.50698184967041
    4. ' ' → logprob: -9.75698184967041
    5. ' <=' → logprob: -12.38198184967041
    6. '<n' → logprob: -14.25698184967041
    7. ' <
' → logprob: -14.75698184967041
    8. '<=' → logprob: -15.38198184967041
    9. '[' → logprob: -15.50698184967041
    10. '<size' → logprob: -15.50698184967041

Token 170: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02975141443312168
    2. ' len' → logprob: -3.5297513008117676
    3. '(len' → logprob: -14.279751777648926
    4. '   ' → logprob: -15.279751777648926
    5. 'length' → logprob: -16.40475082397461
    6. 'input' → logprob: -17.90475082397461
    7. '=len' → logprob: -17.90475082397461
    8. '	len' → logprob: -18.02975082397461
    9. ' ' → logprob: -18.65475082397461
    10. '<len' → logprob: -19.27975082397461

Token 171: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004080897197127342
    2. '(' → logprob: -5.504080772399902
    3. 'input' → logprob: -13.129080772399902
    4. '(
' → logprob: -15.629080772399902
    5. ' (' → logprob: -15.629080772399902
    6. '(

' → logprob: -17.12908172607422
    7. '(output' → logprob: -17.25408172607422
    8. '(in' → logprob: -17.37908172607422
    9. ' input' → logprob: -17.87908172607422
    10. '=input' → logprob: -18.50408172607422

Token 172: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -2.7610454708337784e-05
    2. 'character' → logprob: -10.625027656555176
    3. '_' → logprob: -12.750027656555176
    4. ')' → logprob: -15.750027656555176
    5. '_char' → logprob: -16.87502670288086
    6. '_)' → logprob: -17.00002670288086
    7. ')_' → logprob: -17.87502670288086
    8. '_CHARACTER' → logprob: -18.00002670288086
    9. '(character' → logprob: -18.62502670288086
    10. '_input' → logprob: -18.75002670288086

Token 173: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.796184723294573e-06
    2. 's' → logprob: -12.250005722045898
    3. 'list' → logprob: -14.750005722045898
    4. ')_' → logprob: -15.250005722045898
    5. 'List' → logprob: -16.1250057220459
    6. 'ist' → logprob: -16.7500057220459
    7. ')' → logprob: -17.0000057220459
    8. '_lists' → logprob: -17.1250057220459
    9. ']_' → logprob: -17.3750057220459
    10. '_LIST' → logprob: -18.2500057220459

Token 174: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00405857153236866
    2. '):
' → logprob: -5.879058361053467
    3. ' ):' → logprob: -7.379058361053467
    4. ')' → logprob: -7.754058361053467
    5. ':' → logprob: -9.129058837890625
    6. ' and' → logprob: -9.629058837890625
    7. 'and' → logprob: -11.504058837890625
    8. '   ' → logprob: -12.629058837890625
    9. '):

' → logprob: -12.879058837890625
    10. ' ):
' → logprob: -13.004058837890625

Token 175: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003265255654696375
    2. ':
' → logprob: -8.250326156616211
    3. ' :' → logprob: -10.000326156616211
    4. ' and' → logprob: -11.250326156616211
    5. 'and' → logprob: -12.500326156616211
    6. '):' → logprob: -13.625326156616211
    7. ':**' → logprob: -14.375326156616211
    8. '[' → logprob: -15.125326156616211
    9. ':

' → logprob: -15.375326156616211
    10. ',' → logprob: -16.00032615661621

Token 176: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11611500382423401
    2. ' ' → logprob: -2.241115093231201
    3. '1' → logprob: -5.741115093231201
    4. '3' → logprob: -9.866114616394043
    5. '6' → logprob: -11.616114616394043
    6. '```' → logprob: -12.491114616394043
    7. '4' → logprob: -12.741114616394043
    8. '5' → logprob: -12.991114616394043
    9. '(' → logprob: -13.303614616394043
    10. '7' → logprob: -14.491114616394043

Token 177: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014573395310435444
    2. '1' → logprob: -9.12514591217041
    3. ' ' → logprob: -11.00014591217041
    4. '3' → logprob: -11.12514591217041
    5. '```' → logprob: -13.43764591217041
    6. '
' → logprob: -14.62514591217041
    7. 'len' → logprob: -14.62514591217041
    8. '(' → logprob: -14.75014591217041
    9. '

' → logprob: -14.87514591217041
    10. '0' → logprob: -15.68764591217041

Token 178: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002963203703984618
    2. ':
' → logprob: -6.627963066101074
    3. ' and' → logprob: -6.877963066101074
    4. ' :' → logprob: -7.752963066101074
    5. 'and' → logprob: -9.377963066101074
    6. '   ' → logprob: -9.502963066101074
    7. ' :
' → logprob: -12.252963066101074
    8. '):' → logprob: -12.377963066101074
    9. ' ' → logprob: -13.252963066101074
    10. ')' → logprob: -13.877963066101074

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8064362406730652
    2. ' ' → logprob: -1.43143630027771
    3. '   ' → logprob: -1.68143630027771
    4. '    ' → logprob: -2.93143630027771
    5. ' if' → logprob: -4.056436061859131
    6. '    
' → logprob: -4.056436061859131
    7. ' 
' → logprob: -4.681436061859131
    8. '     
' → logprob: -5.306436061859131
    9. '  ' → logprob: -5.556436061859131
    10. '        
' → logprob: -5.806436061859131

Token 180: ' current' (ID: 2208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07093268632888794
    2. 'c' → logprob: -3.570932626724243
    3. ' if' → logprob: -4.195932865142822
    4. '       ' → logprob: -4.570932865142822
    5. 'char' → logprob: -5.195932865142822
    6. 'current' (adapté à ' current') → logprob: -5.445932865142822
    7. '   ' → logprob: -5.570932865142822
    8. 'ch' → logprob: -7.945932865142822
    9. 'i' → logprob: -8.820932388305664
    10. 'a' → logprob: -9.195932388305664

Token 181: '_three' (ID: 121681)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.6050412654876709
    2. '_character' → logprob: -1.105041265487671
    3. '_' → logprob: -2.105041265487671
    4. 'char' → logprob: -8.35504150390625
    5. '_token' → logprob: -8.48004150390625
    6. '_position' → logprob: -8.98004150390625
    7. '_chars' → logprob: -9.48004150390625
    8. 'character' → logprob: -9.85504150390625
    9. '_a' → logprob: -10.60504150390625
    10. '_fragment' → logprob: -10.73004150390625

Token 182: '_char' (ID: 23398)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.2688024342060089
    2. ' =' → logprob: -1.7688024044036865
    3. '_char' → logprob: -3.7688024044036865
    4. '=' → logprob: -3.7688024044036865
    5. '_' → logprob: -4.268802642822266
    6. '_token' → logprob: -6.643802642822266
    7. '_tokens' → logprob: -7.018802642822266
    8. '_character' → logprob: -7.143802642822266
    9. '_letters' → logprob: -7.393802642822266
    10. '<|end|>' → logprob: -8.018802642822266

Token 183: 'acters' (ID: 8385)
  Prédit: 'acters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.28553125262260437
    2. 's' → logprob: -1.5355312824249268
    3. 'acter' → logprob: -3.6605312824249268
    4. ' =' → logprob: -5.285531044006348
    5. '=' → logprob: -6.410531044006348
    6. '_list' → logprob: -9.035531044006348
    7. '_sequence' → logprob: -9.160531044006348
    8. '```' → logprob: -9.410531044006348
    9. '_seq' → logprob: -10.035531044006348
    10. 'act' → logprob: -10.160531044006348

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.725207328796387
    4. ')' → logprob: -15.725207328796387
    5. ' ==' → logprob: -16.22520637512207
    6. ' =[' → logprob: -17.10020637512207
    7. '[' → logprob: -17.22520637512207
    8. 's' → logprob: -17.97520637512207
    9. ',' → logprob: -18.22520637512207
    10. '   ' → logprob: -18.22520637512207

Token 185: ' "".' (ID: 94734)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.18015219271183014
    2. ' input' → logprob: -1.805152177810669
    3. '''.' → logprob: -8.43015193939209
    4. ' ''.' → logprob: -9.30515193939209
    5. ' "".' → logprob: -10.05515193939209
    6. '"' → logprob: -10.68015193939209
    7. '   ' → logprob: -11.30515193939209
    8. '[input' → logprob: -12.05515193939209
    9. '(input' → logprob: -12.80515193939209
    10. '	input' → logprob: -12.80515193939209

Token 186: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -4.4849443838757e-06
    2. ' join' → logprob: -12.625004768371582
    3. 'jo' → logprob: -14.500004768371582
    4. 'j' → logprob: -15.375004768371582
    5. '```' → logprob: -15.625004768371582
    6. '.join' → logprob: -16.000003814697266
    7. '(join' → logprob: -17.000003814697266
    8. 'Join' → logprob: -17.500003814697266
    9. 'joining' → logprob: -18.250003814697266
    10. 'concat' → logprob: -18.375003814697266

Token 187: '(
' (ID: 1607)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03818952292203903
    2. 'input' → logprob: -3.28818941116333
    3. '([' → logprob: -9.163189888000488
    4. '(' → logprob: -10.288189888000488
    5. '[input' → logprob: -12.413189888000488
    6. '((' → logprob: -13.163189888000488
    7. '([
' → logprob: -13.163189888000488
    8. ' input' → logprob: -14.288189888000488
    9. '(
' → logprob: -15.288189888000488
    10. '<input' → logprob: -15.788189888000488

Token 188: '           ' (ID: 352)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002771239960566163
    2. '[input' → logprob: -6.002771377563477
    3. '(input' → logprob: -8.502771377563477
    4. ' input' → logprob: -9.627771377563477
    5. '[
' → logprob: -11.127771377563477
    6. '[' → logprob: -11.502771377563477
    7. '   ' → logprob: -13.752771377563477
    8. '[i' → logprob: -15.377771377563477
    9. '	input' → logprob: -15.877771377563477
    10. '<input' → logprob: -16.002771377563477

Token 189: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.001462619286030531
    2. '[input' → logprob: -6.626462459564209
    3. ' input' → logprob: -9.376462936401367
    4. '[
' → logprob: -10.376462936401367
    5. '(input' → logprob: -11.126462936401367
    6. '[' → logprob: -12.251462936401367
    7. '<input' → logprob: -14.876462936401367
    8. '   ' → logprob: -15.001462936401367
    9. '[i' → logprob: -15.501462936401367
    10. '	input' → logprob: -16.001462936401367

Token 190: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -7.107425062713446e-06
    2. 'character' → logprob: -11.875006675720215
    3. '_char' → logprob: -17.00000762939453
    4. '_' → logprob: -17.75000762939453
    5. '_CHARACTER' → logprob: -18.25000762939453
    6. 'Character' → logprob: -19.12500762939453
    7. '<Character' → logprob: -20.25000762939453
    8. '[' → logprob: -20.75000762939453
    9. '```' → logprob: -21.25000762939453
    10. '_position' → logprob: -21.50000762939453

Token 191: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.935296834039036e-06
    2. 'list' → logprob: -13.25000286102295
    3. 's' → logprob: -14.50000286102295
    4. '[current' → logprob: -15.50000286102295
    5. 'List' → logprob: -15.62500286102295
    6. '[' → logprob: -16.125003814697266
    7. '_lists' → logprob: -16.875003814697266
    8. '   ' → logprob: -17.875003814697266
    9. '[position' → logprob: -18.625003814697266
    10. '_LIST' → logprob: -18.750003814697266

Token 192: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -3.702754474943504e-05
    2. '   ' → logprob: -11.25003719329834
    3. 'current' → logprob: -11.25003719329834
    4. '[
' → logprob: -12.00003719329834
    5. '[' → logprob: -12.62503719329834
    6. ' [' → logprob: -14.00003719329834
    7. ' current' → logprob: -15.12503719329834
    8. ')' → logprob: -16.250036239624023
    9. '[cur' → logprob: -16.500036239624023
    10. '[curr' → logprob: -17.000036239624023

Token 193: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -8.93579563125968e-05
    2. 'position' → logprob: -9.375089645385742
    3. '_character' → logprob: -12.750089645385742
    4. '_pos' → logprob: -14.250089645385742
    5. '+' → logprob: -14.375089645385742
    6. '_' → logprob: -16.250089645385742
    7. '_POSITION' → logprob: -16.750089645385742
    8. 'Position' → logprob: -17.250089645385742
    9. '_positions' → logprob: -17.375089645385742
    10. 'osition' → logprob: -17.875089645385742

Token 194: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005264613428153098
    2. ' :' → logprob: -7.625526428222656
    3. 'current' → logprob: -10.500526428222656
    4. '   ' → logprob: -12.000526428222656
    5. ']' → logprob: -13.625526428222656
    6. '[current' → logprob: -13.625526428222656
    7. ',current' → logprob: -14.000526428222656
    8. ' current' → logprob: -14.875526428222656
    9. ' ' → logprob: -15.000526428222656
    10. ':
' → logprob: -15.625526428222656

Token 195: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -7.517272024415433e-05
    2. ' current' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.625075340270996
    4. '(current' → logprob: -16.75007438659668
    5. '
' → logprob: -17.25007438659668
    6. '           ' → logprob: -18.25007438659668
    7. '[current' → logprob: -19.25007438659668
    8. '       ' → logprob: -19.50007438659668
    9. '3' → logprob: -19.50007438659668
    10. '$current' → logprob: -19.62507438659668

Token 196: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.00676344521343708
    2. 'position' → logprob: -5.006763458251953
    3. 'osition' → logprob: -10.631763458251953
    4. '+' → logprob: -10.756763458251953
    5. 'Position' → logprob: -13.881763458251953
    6. '_POSITION' → logprob: -14.131763458251953
    7. '_positions' → logprob: -15.756763458251953
    8. '	position' → logprob: -15.881763458251953
    9. 'POSITION' → logprob: -16.006763458251953
    10. '.position' → logprob: -16.631763458251953

Token 197: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020958632230759
    2. ' +' → logprob: -2.3502094745635986
    3. 'current' → logprob: -13.60020923614502
    4. '3' → logprob: -14.60020923614502
    5. ' ' → logprob: -14.85020923614502
    6. '   ' → logprob: -15.10020923614502
    7. '[' → logprob: -16.475210189819336
    8. '[current' → logprob: -16.600210189819336
    9. '+
' → logprob: -16.850210189819336
    10. '＋' → logprob: -16.850210189819336

Token 198: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -17.25002098083496
    4. '   ' → logprob: -17.37502098083496
    5. '
' → logprob: -17.75002098083496
    6. '  ' → logprob: -18.00002098083496
    7. '۳' → logprob: -18.75002098083496
    8. '  
' → logprob: -19.68752098083496
    9. '`' → logprob: -19.93752098083496
    10. '３' → logprob: -19.93752098083496

Token 199: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -18.750001907348633
    4. '```' → logprob: -18.750001907348633
    5. '
' → logprob: -19.000001907348633
    6. '۳' → logprob: -19.687501907348633
    7. ')' → logprob: -20.375001907348633
    8. '３' → logprob: -20.375001907348633
    9. ']' → logprob: -20.687501907348633
    10. '  ' → logprob: -20.750001907348633

Token 200: ']
' (ID: 1592)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4438273012638092
    2. ']' → logprob: -1.0688272714614868
    3. ')' → logprob: -4.443827152252197
    4. ']
' → logprob: -6.068827152252197
    5. '       ' → logprob: -7.568827152252197
    6. '])
' → logprob: -8.318827629089355
    7. ']

' → logprob: -9.693827629089355
    8. ')
' → logprob: -9.943827629089355
    9. '   ' → logprob: -10.193827629089355
    10. '])

' → logprob: -12.193827629089355

Token 201: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030487535521388054
    2. '       ' → logprob: -3.530487537384033
    3. ')
' → logprob: -7.405487537384033
    4. '   ' → logprob: -9.405487060546875
    5. ')

' → logprob: -10.905487060546875
    6. ' )' → logprob: -11.155487060546875
    7. '           ' → logprob: -12.530487060546875
    8. '```' → logprob: -12.530487060546875
    9. '`)' → logprob: -13.780487060546875
    10. ')`' → logprob: -14.155487060546875

Token 202: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008959388360381126
    2. '       ' → logprob: -4.8839592933654785
    3. ')
' → logprob: -7.2589592933654785
    4. ' )' → logprob: -7.8839592933654785
    5. '   ' → logprob: -8.383959770202637
    6. ')

' (adapté à ' )

') → logprob: -10.258959770202637
    7. ' )
' → logprob: -13.883959770202637
    8. '")' → logprob: -14.008959770202637
    9. '           ' → logprob: -14.258959770202637
    10. ' ' → logprob: -14.258959770202637

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016170088201761246
    2. '   ' → logprob: -4.641170024871826
    3. '<|end|>' → logprob: -5.516170024871826
    4. ' if' → logprob: -7.141170024871826
    5. 'if' → logprob: -7.141170024871826
    6. '
' → logprob: -8.391170501708984
    7. ')' → logprob: -8.641170501708984
    8. '        
' → logprob: -9.391170501708984
    9. ' ' → logprob: -9.891170501708984
    10. ',' → logprob: -10.141170501708984

Token 204: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08001583069562912
    2. '       ' → logprob: -2.5800158977508545
    3. ' if' → logprob: -6.830015659332275
    4. '   ' → logprob: -10.080016136169434
    5. 'i' → logprob: -13.705016136169434
    6. 'If' → logprob: -14.455016136169434
    7. '	if' → logprob: -15.455016136169434
    8. ' ' → logprob: -15.830016136169434
    9. '        
' → logprob: -15.830016136169434
    10. '```' → logprob: -15.830016136169434

Token 205: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.029750604182481766
    2. 'current' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.65475082397461
    4. '(current' → logprob: -18.15475082397461
    5. '[current' → logprob: -18.90475082397461
    6. 'urrent' → logprob: -19.15475082397461
    7. '	current' → logprob: -19.27975082397461
    8. '   ' → logprob: -19.65475082397461
    9. '$current' → logprob: -20.02975082397461
    10. ' ' → logprob: -20.40475082397461

Token 206: '_three' (ID: 121681)
  Prédit: '_three'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_three' → logprob: -2.816093228830141e-06
    2. 'three' → logprob: -13.12500286102295
    3. '_' → logprob: -15.50000286102295
    4. 'Three' → logprob: -15.50000286102295
    5. '_two' → logprob: -15.50000286102295
    6. ' three' → logprob: -16.125001907348633
    7. '_character' → logprob: -16.875001907348633
    8. '_char' → logprob: -18.000001907348633
    9. '_tr' → logprob: -19.000001907348633
    10. '3' → logprob: -19.000001907348633

Token 207: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.00018327576981391758
    2. '_chars' → logprob: -9.50018310546875
    3. 'char' → logprob: -10.12518310546875
    4. 'acters' → logprob: -10.37518310546875
    5. 'characters' → logprob: -11.12518310546875
    6. '_' → logprob: -11.25018310546875
    7. '_character' → logprob: -12.87518310546875
    8. 's' → logprob: -13.00018310546875
    9. '==' → logprob: -13.25018310546875
    10. '```' → logprob: -14.62518310546875

Token 208: 'acters' (ID: 8385)
  Prédit: 'acters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.014408059418201447
    2. 'aters' → logprob: -4.889408111572266
    3. 'ters' → logprob: -5.014408111572266
    4. 'act' → logprob: -10.139408111572266
    5. '==' → logprob: -10.889408111572266
    6. 'ers' → logprob: -10.889408111572266
    7. 'ct' → logprob: -11.389408111572266
    8. 'r' → logprob: -11.639408111572266
    9. '```' → logprob: -11.764408111572266
    10. 'ter' → logprob: -11.764408111572266

Token 209: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25194817781448364
    2. '==' → logprob: -1.5019481182098389
    3. '=' → logprob: -11.876948356628418
    4. '=="' → logprob: -12.876948356628418
    5. ')' → logprob: -13.126948356628418
    6. '=='' → logprob: -13.376948356628418
    7. ' =' → logprob: -13.501948356628418
    8. ' !=' → logprob: -13.751948356628418
    9. '===' → logprob: -14.126948356628418
    10. ')==' → logprob: -14.501948356628418

Token 210: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06612434983253479
    2. ''' → logprob: -3.066124439239502
    3. ' "' → logprob: -4.066124439239502
    4. ' '' → logprob: -8.566123962402344
    5. 'abc' → logprob: -10.566123962402344
    6. '"a' → logprob: -12.191123962402344
    7. ''"' → logprob: -12.316123962402344
    8. ''ab' → logprob: -12.441123962402344
    9. ''a' → logprob: -12.566123962402344
    10. ' abc' → logprob: -13.316123962402344

Token 211: 'ABC' (ID: 44197)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -2.3676733690081164e-05
    2. 'ABC' → logprob: -10.87502384185791
    3. '"' → logprob: -12.37502384185791
    4. 'a' → logprob: -15.25002384185791
    5. ' abc' → logprob: -16.000022888183594
    6. ''' → logprob: -16.750022888183594
    7. 'aba' → logprob: -16.875022888183594
    8. '```' → logprob: -18.125022888183594
    9. 'ab' → logprob: -18.375022888183594
    10. '
' → logprob: -18.625022888183594

Token 212: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.31487101316452026
    2. '":
' → logprob: -1.314871072769165
    3. '"' → logprob: -6.689870834350586
    4. '":
' → logprob: -8.314870834350586
    5. '":

' → logprob: -9.689870834350586
    6. ':' → logprob: -10.814870834350586
    7. '"):
' → logprob: -11.189870834350586
    8. ':
' → logprob: -12.064870834350586
    9. '       ' → logprob: -12.564870834350586
    10. '):
' → logprob: -12.814870834350586

Token 213: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11035130172967911
    2. ':' → logprob: -2.735351324081421
    3. ':
' → logprob: -3.235351324081421
    4. ',' → logprob: -9.6103515625
    5. '       ' → logprob: -9.9853515625
    6. '```' → logprob: -10.4853515625
    7. '            
' → logprob: -10.6103515625
    8. '
' → logprob: -10.6103515625
    9. '):
' → logprob: -11.1103515625
    10. '          ' → logprob: -11.4853515625

Token 214: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.8392330408096313
    2. '           ' → logprob: -1.0892330408096313
    3. ' total' → logprob: -1.5892330408096313
    4. '
' → logprob: -3.714232921600342
    5. '       ' → logprob: -5.964232921600342
    6. '               ' → logprob: -8.0892333984375
    7. 'current' → logprob: -10.5892333984375
    8. '            
' → logprob: -10.7142333984375
    9. '   ' → logprob: -10.9642333984375
    10. '        
' → logprob: -11.3392333984375

Token 215: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.008129963040119e-06
    2. '_sub' → logprob: -12.625003814697266
    3. ' _' → logprob: -15.625003814697266
    4. '_
' → logprob: -15.875003814697266
    5. '_total' → logprob: -16.250003814697266
    6. '
' → logprob: -16.875003814697266
    7. '```' → logprob: -17.000003814697266
    8. 'abc' → logprob: -17.125003814697266
    9. 'substring' → logprob: -17.625003814697266
    10. '_a' → logprob: -18.000003814697266

Token 216: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.875000953674316
    3. ' abc' → logprob: -16.125
    4. 'abcdef' → logprob: -18.625
    5. 'ABC' → logprob: -18.875
    6. 'a' → logprob: -18.875
    7. 'ab' → logprob: -19.375
    8. '```' → logprob: -19.5
    9. ' ' → logprob: -20.25
    10. '   ' → logprob: -20.25

Token 217: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -1.0683535037969705e-05
    2. '_' → logprob: -11.62501049041748
    3. '_total' → logprob: -14.37501049041748
    4. 'substring' → logprob: -14.75001049041748
    5. '_count' → logprob: -15.00001049041748
    6. '_s' → logprob: -16.000011444091797
    7. '_Sub' → logprob: -16.750011444091797
    8. '_SUB' → logprob: -17.000011444091797
    9. 'sub' → logprob: -17.250011444091797
    10. '```' → logprob: -17.625011444091797

Token 218: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.00011641718447208405
    2. 'tring' → logprob: -9.375116348266602
    3. '_string' → logprob: -10.750116348266602
    4. 'substring' → logprob: -12.250116348266602
    5. 'str' → logprob: -13.250116348266602
    6. 'ring' → logprob: -14.125116348266602
    7. 's' → logprob: -14.625116348266602
    8. 'String' → logprob: -14.750116348266602
    9. '```' → logprob: -15.000116348266602
    10. 'total' → logprob: -15.500116348266602

Token 219: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.320199877838604e-07
    2. 'count' → logprob: -15.625
    3. '_' → logprob: -16.0
    4. '+=' → logprob: -17.125
    5. 's' → logprob: -17.375
    6. '_counter' → logprob: -17.375
    7. ' _' → logprob: -18.0
    8. ' +=' → logprob: -18.0
    9. '_counts' → logprob: -18.125
    10. '_code' → logprob: -18.25

Token 220: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3132689297199249
    2. '+=' → logprob: -1.3132688999176025
    3. '   ' → logprob: -12.688268661499023
    4. '+' → logprob: -13.938268661499023
    5. ']+=' → logprob: -13.938268661499023
    6. '=' → logprob: -14.063268661499023
    7. '    ' → logprob: -14.563268661499023
    8. ' =' → logprob: -14.813268661499023
    9. '           ' → logprob: -15.438268661499023
    10. '[' → logprob: -15.938268661499023

Token 221: ' consecutive' (ID: 40840)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018327576981391758
    2. ' ' → logprob: -8.62518310546875
    3. '3' → logprob: -13.75018310546875
    4. 'current' → logprob: -14.43768310546875
    5. '2' → logprob: -14.68768310546875
    6. '   ' → logprob: -14.75018310546875
    7. '10' → logprob: -15.43768310546875
    8. '100' → logprob: -15.81268310546875
    9. 'con' → logprob: -16.37518310546875
    10. '```' → logprob: -16.43768310546875

Token 222: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -4.5491004129871726e-05
    2. 'a' → logprob: -10.125045776367188
    3. '_' → logprob: -12.750045776367188
    4. '1' → logprob: -13.375045776367188
    5. ' ' → logprob: -15.125045776367188
    6. '_count' → logprob: -15.875045776367188
    7. '```' → logprob: -16.500045776367188
    8. '3' → logprob: -16.875045776367188
    9. 'A' → logprob: -17.250045776367188
    10. '_b' → logprob: -17.250045776367188

Token 223: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.5252596464706585e-05
    2. '_' → logprob: -10.500044822692871
    3. 'count' → logprob: -11.125044822692871
    4. '_c' → logprob: -14.375044822692871
    5. ' _' → logprob: -14.875044822692871
    6. '_con' → logprob: -15.125044822692871
    7. '_co' → logprob: -15.250044822692871
    8. '_cont' → logprob: -15.625044822692871
    9. '_counter' → logprob: -15.625044822692871
    10. 's' → logprob: -15.875044822692871

Token 224: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4981563091278076
    2. '           ' → logprob: -0.9981563091278076
    3. '+' → logprob: -4.123156547546387
    4. '            
' → logprob: -5.748156547546387
    5. '        
' → logprob: -7.248156547546387
    6. 'current' → logprob: -7.373156547546387
    7. '+
' → logprob: -7.498156547546387
    8. ' 
' → logprob: -7.623156547546387
    9. '       ' → logprob: -7.748156547546387
    10. '    
' → logprob: -7.998156547546387

Token 225: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011045700375689194
    2. ' ' → logprob: -9.125110626220703
    3. 'current' → logprob: -14.125110626220703
    4. '0' → logprob: -15.375110626220703
    5. '   ' → logprob: -15.750110626220703
    6. ' current' → logprob: -16.125110626220703
    7. '
' → logprob: -16.750110626220703
    8. '```' → logprob: -16.875110626220703
    9. '2' → logprob: -17.375110626220703
    10. '+' → logprob: -17.500110626220703

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.011373155459296e-05
    2. 'current' → logprob: -11.000030517578125
    3. ' ' → logprob: -11.375030517578125
    4. '0' → logprob: -14.000030517578125
    5. '3' → logprob: -15.250030517578125
    6. '   ' → logprob: -15.750030517578125
    7. '2' → logprob: -15.875030517578125
    8. '(' → logprob: -16.000030517578125
    9. '
' → logprob: -16.125030517578125
    10. ' current' → logprob: -16.250030517578125

Token 227: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010424054227769375
    2. '           ' → logprob: -4.8854241371154785
    3. '            
' → logprob: -7.0104241371154785
    4. '
' → logprob: -7.6354241371154785
    5. 'current' → logprob: -8.01042366027832
    6. ' 
' → logprob: -8.38542366027832
    7. '  
' → logprob: -8.51042366027832
    8. '        
' → logprob: -8.63542366027832
    9. '    
' → logprob: -8.76042366027832
    10. '       ' → logprob: -9.01042366027832

Token 228: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6835760474205017
    2. '           ' → logprob: -0.8085760474205017
    3. '            
' → logprob: -3.5585761070251465
    4. ' 
' → logprob: -4.9335761070251465
    5. '        
' → logprob: -5.0585761070251465
    6. '       ' → logprob: -5.8085761070251465
    7. '    
' → logprob: -6.6835761070251465
    8. 'current' → logprob: -7.6835761070251465
    9. '  
' → logprob: -7.8085761070251465
    10. '\n' → logprob: -7.8085761070251465

Token 229: ' current' (ID: 2208)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.15382201969623566
    2. '           ' → logprob: -2.4038219451904297
    3. 'current' (adapté à ' current') → logprob: -3.0288219451904297
    4. '       ' → logprob: -6.52882194519043
    5. ' current' → logprob: -6.65382194519043
    6. ' consecutive' → logprob: -7.15382194519043
    7. '   ' → logprob: -8.90382194519043
    8. '               ' → logprob: -9.40382194519043
    9. '
' → logprob: -10.15382194519043
    10. '            
' → logprob: -10.90382194519043

Token 230: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -8.41866585687967e-06
    2. '_character' → logprob: -12.500008583068848
    3. 'position' → logprob: -13.250008583068848
    4. '_' → logprob: -13.500008583068848
    5. 'Position' → logprob: -14.125008583068848
    6. '_positions' → logprob: -15.375008583068848
    7. '_POSITION' → logprob: -16.25000762939453
    8. '_pos' → logprob: -16.25000762939453
    9. '+' → logprob: -16.87500762939453
    10. '```' → logprob: -17.12500762939453

Token 231: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931684017181396
    2. '+=' → logprob: -0.6931684017181396
    3. '+' → logprob: -10.818168640136719
    4. '=' → logprob: -14.568168640136719
    5. ']+=' → logprob: -14.943168640136719
    6. ' ' → logprob: -15.568168640136719
    7. ' +' → logprob: -16.06816864013672
    8. '    ' → logprob: -17.44316864013672
    9. '   ' → logprob: -17.56816864013672
    10. ' =' → logprob: -17.56816864013672

Token 232: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.014756156131625175
    2. '1' → logprob: -4.264756202697754
    3. ' ' → logprob: -7.639756202697754
    4. '2' → logprob: -9.139756202697754
    5. '   ' → logprob: -13.202256202697754
    6. '  ' → logprob: -14.702256202697754
    7. '4' → logprob: -15.077256202697754
    8. '```' → logprob: -15.077256202697754
    9. '
' → logprob: -15.389756202697754
    10. '0' → logprob: -15.452256202697754

Token 233: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004021407105028629
    2. '1' → logprob: -5.629021644592285
    3. '2' → logprob: -7.879021644592285
    4. ' ' → logprob: -10.129021644592285
    5. '```' → logprob: -14.504021644592285
    6. '   ' → logprob: -14.566521644592285
    7. '4' → logprob: -14.566521644592285
    8. '0' → logprob: -15.629021644592285
    9. '  ' → logprob: -16.31652069091797
    10. '5' → logprob: -16.37902069091797

Token 234: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010482928482815623
    2. '
' → logprob: -7.5010480880737305
    3. 'else' → logprob: -8.25104808807373
    4. '           ' → logprob: -9.62604808807373
    5. ' else' → logprob: -9.62604808807373
    6. '   ' → logprob: -9.75104808807373
    7. '<|end|>' → logprob: -11.62604808807373
    8. ' 
' → logprob: -12.12604808807373
    9. '        
' → logprob: -12.12604808807373
    10. '    
' → logprob: -12.75104808807373

Token 235: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013203580165281892
    2. '   ' → logprob: -7.7513203620910645
    3. '           ' → logprob: -8.001319885253906
    4. 'else' → logprob: -8.251319885253906
    5. '<|end|>' → logprob: -8.751319885253906
    6. '
' → logprob: -10.251319885253906
    7. ' else' → logprob: -10.501319885253906
    8. '        
' → logprob: -11.126319885253906
    9. 'current' → logprob: -11.751319885253906
    10. '```' → logprob: -11.876319885253906

Token 236: ' input' (ID: 3422)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056787293404340744
    2. '           ' → logprob: -3.4317872524261475
    3. 'else' → logprob: -4.681787490844727
    4. 'current' → logprob: -5.181787490844727
    5. '   ' → logprob: -6.306787490844727
    6. 'continue' → logprob: -6.306787490844727
    7. '
' → logprob: -6.681787490844727
    8. ' current' → logprob: -6.681787490844727
    9. ' else' → logprob: -7.181787490844727
    10. 'elif' → logprob: -7.806787490844727

Token 237: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -1.4140441635390744e-05
    2. '_stream' → logprob: -12.125014305114746
    3. 'character' → logprob: -12.250014305114746
    4. '_list' → logprob: -13.125014305114746
    5. '_char' → logprob: -14.000014305114746
    6. '_' → logprob: -15.250014305114746
    7. '_CHARACTER' → logprob: -15.625014305114746
    8. 'Character' → logprob: -15.625014305114746
    9. '_string' → logprob: -16.62501335144043
    10. '[' → logprob: -16.62501335144043

Token 238: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.4140441635390744e-05
    2. '[current' → logprob: -12.125014305114746
    3. 'list' → logprob: -12.500014305114746
    4. 'List' → logprob: -13.750014305114746
    5. '[' → logprob: -14.375014305114746
    6. '_lists' → logprob: -14.375014305114746
    7. '<|end|>' → logprob: -14.375014305114746
    8. 'current' → logprob: -15.125014305114746
    9. '_current' → logprob: -15.125014305114746
    10. '   ' → logprob: -15.125014305114746

Token 239: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.007220868952572346
    2. '.pop' → logprob: -5.00722074508667
    3. '.insert' → logprob: -8.382221221923828
    4. '[' → logprob: -9.507221221923828
    5. '=current' → logprob: -10.132221221923828
    6. '.remove' → logprob: -10.257221221923828
    7. ' =' → logprob: -10.382221221923828
    8. '.append' → logprob: -10.507221221923828
    9. '   ' → logprob: -11.007221221923828
    10. 'current' → logprob: -11.632221221923828

Token 240: '_position' (ID: 23739)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.8026793599128723
    2. 'current' → logprob: -1.1776793003082275
    3. '_position' → logprob: -1.5526793003082275
    4. 'position' → logprob: -3.9276793003082275
    5. '_list' → logprob: -5.552679538726807
    6. '_current' → logprob: -6.052679538726807
    7. '[position' → logprob: -6.677679538726807
    8. '   ' → logprob: -7.177679538726807
    9. '(current' → logprob: -7.177679538726807
    10. '[' → logprob: -7.302679538726807

Token 241: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02662363089621067
    2. '=' → logprob: -4.401623725891113
    3. ' =' → logprob: -4.901623725891113
    4. ' ]' → logprob: -6.026623725891113
    5. ']=' → logprob: -6.276623725891113
    6. ']+=' → logprob: -7.026623725891113
    7. ']==' → logprob: -7.401623725891113
    8. ' +=' → logprob: -8.401623725891113
    9. '+=' → logprob: -9.026623725891113
    10. ' ==' → logprob: -9.276623725891113

Token 242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09017141163349152
    2. ' =' → logprob: -2.4651713371276855
    3. '+=' → logprob: -7.2151713371276855
    4. '==' → logprob: -8.590171813964844
    5. ' ==' → logprob: -9.215171813964844
    6. '='' → logprob: -9.715171813964844
    7. ' +=' → logprob: -9.840171813964844
    8. '<|end|>' → logprob: -10.590171813964844
    9. ' ' → logprob: -11.215171813964844
    10. '+='' → logprob: -11.840171813964844

Token 243: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.2603015601634979
    2. ''' → logprob: -2.5103015899658203
    3. '"C' → logprob: -2.8853015899658203
    4. '"' → logprob: -3.0103015899658203
    5. '"A' → logprob: -4.51030158996582
    6. ''C' → logprob: -4.63530158996582
    7. ' "' → logprob: -5.13530158996582
    8. ''A' → logprob: -5.26030158996582
    9. ' '' → logprob: -5.51030158996582
    10. 'B' → logprob: -6.01030158996582

Token 244: 'A' (ID: 32)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07769200950860977
    2. 'C' → logprob: -3.3276920318603516
    3. 'A' → logprob: -3.8276920318603516
    4. 'Z' → logprob: -4.327692031860352
    5. '"' → logprob: -6.577692031860352
    6. ''' → logprob: -7.327692031860352
    7. '"B' → logprob: -7.327692031860352
    8. '@' → logprob: -7.702692031860352
    9. ''C' → logprob: -9.327692031860352
    10. '"C' → logprob: -9.452692031860352

Token 245: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -9.364928700961173e-05
    2. '<|end|>' → logprob: -9.625093460083008
    3. '"
' → logprob: -10.875093460083008
    4. ' "' → logprob: -13.500093460083008
    5. '"user' → logprob: -13.500093460083008
    6. '```' → logprob: -13.750093460083008
    7. '"#' → logprob: -13.750093460083008
    8. '")' → logprob: -13.750093460083008
    9. ''' → logprob: -14.625093460083008
    10. '"}' → logprob: -14.750093460083008

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01121098268777132
    2. '<|end|>' → logprob: -4.761210918426514
    3. '   ' → logprob: -7.261210918426514
    4. '           ' → logprob: -7.886210918426514
    5. 'current' → logprob: -7.886210918426514
    6. '        
' → logprob: -8.386211395263672
    7. '
' → logprob: -8.511211395263672
    8. ' ' → logprob: -8.761211395263672
    9. ')' → logprob: -9.011211395263672
    10. ' 
' → logprob: -9.261211395263672

Token 247: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019680337980389595
    2. '   ' → logprob: -4.144680500030518
    3. '<|end|>' → logprob: -6.769680500030518
    4. 'current' → logprob: -7.519680500030518
    5. 'else' (adapté à ' else') → logprob: -7.769680500030518
    6. '
' → logprob: -8.14468002319336
    7. '    
' → logprob: -8.39468002319336
    8. ' current' → logprob: -8.51968002319336
    9. '        
' → logprob: -8.89468002319336
    10. ' 
' → logprob: -9.01968002319336

Token 248: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050817616283893585
    2. ':
' → logprob: -3.1758177280426025
    3. ':' → logprob: -5.800817489624023
    4. ' current' → logprob: -6.425817489624023
    5. '   ' → logprob: -6.675817489624023
    6. 'current' → logprob: -6.800817489624023
    7. '       ' → logprob: -7.300817489624023
    8. '
' → logprob: -10.800817489624023
    9. ',' → logprob: -11.550817489624023
    10. '    
' → logprob: -11.925817489624023

Token 249: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.549284040927887
    2. ' current' → logprob: -1.1742839813232422
    3. '       ' → logprob: -2.299283981323242
    4. 'current' → logprob: -4.674283981323242
    5. '   ' → logprob: -5.674283981323242
    6. '	current' → logprob: -8.924283981323242
    7. '	       ' → logprob: -9.424283981323242
    8. '		' → logprob: -10.549283981323242
    9. '        
' → logprob: -10.549283981323242
    10. '
' → logprob: -10.549283981323242

Token 250: ' if' (ID: 538)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.32346346974372864
    2. 'current' → logprob: -1.3234634399414062
    3. '   ' → logprob: -4.823463439941406
    4. '           ' → logprob: -6.573463439941406
    5. '       ' → logprob: -7.323463439941406
    6. '	current' → logprob: -10.448463439941406
    7. ' ' → logprob: -11.698463439941406
    8. '
' → logprob: -12.448463439941406
    9. '    ' → logprob: -12.698463439941406
    10. '               ' → logprob: -13.198463439941406

Token 251: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.128384530544281
    2. ' input' → logprob: -2.128384590148926
    3. 'current' → logprob: -6.878384590148926
    4. ' current' → logprob: -8.128384590148926
    5. '   ' → logprob: -9.378384590148926
    6. ' ' → logprob: -10.253384590148926
    7. '  ' → logprob: -12.628384590148926
    8. '	input' → logprob: -13.003384590148926
    9. 'con' → logprob: -13.503384590148926
    10. '    ' → logprob: -13.753384590148926

Token 252: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -1.8624639324116288e-06
    2. 'character' → logprob: -13.375001907348633
    3. '_char' → logprob: -15.500001907348633
    4. 'Character' → logprob: -16.750001907348633
    5. '_list' → logprob: -16.875001907348633
    6. '_CHARACTER' → logprob: -17.125001907348633
    7. '<Character' → logprob: -18.750001907348633
    8. '_three' → logprob: -19.000001907348633
    9. '[' → logprob: -19.375001907348633
    10. '_stream' → logprob: -19.500001907348633

Token 253: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.805981972021982e-05
    2. '_character' → logprob: -10.00009822845459
    3. 'list' → logprob: -10.50009822845459
    4. 'character' → logprob: -10.87509822845459
    5. 'List' → logprob: -13.12509822845459
    6. 'position' → logprob: -13.25009822845459
    7. '_position' → logprob: -14.00009822845459
    8. '[position' → logprob: -14.62509822845459
    9. '_char' → logprob: -16.000097274780273
    10. 'char' → logprob: -16.125097274780273

Token 254: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.4736459888808895e-05
    2. '[' → logprob: -11.875014305114746
    3. '[
' → logprob: -12.750014305114746
    4. 'current' → logprob: -13.125014305114746
    5. ' [' → logprob: -13.375014305114746
    6. '[input' → logprob: -14.875014305114746
    7. '[cur' → logprob: -15.625014305114746
    8. '   ' → logprob: -15.750014305114746
    9. '```' → logprob: -16.000015258789062
    10. ' current' → logprob: -16.250015258789062

Token 255: '_position' (ID: 23739)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5164323449134827
    2. '_position' → logprob: -1.016432285308838
    3. '[current' → logprob: -3.516432285308838
    4. 'position' → logprob: -4.891432285308838
    5. '_current' → logprob: -5.641432285308838
    6. ' current' → logprob: -8.641432762145996
    7. '[position' → logprob: -9.141432762145996
    8. '_character' → logprob: -9.391432762145996
    9. '(current' → logprob: -9.891432762145996
    10. '   ' → logprob: -10.266432762145996

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16006658971309662
    2. ' !=' → logprob: -2.785066604614258
    3. '!=' → logprob: -2.910066604614258
    4. ']!=' → logprob: -4.035066604614258
    5. ' ]' → logprob: -4.785066604614258
    6. '==' → logprob: -5.910066604614258
    7. ']==' → logprob: -6.285066604614258
    8. ' ==' → logprob: -7.535066604614258
    9. ' not' → logprob: -8.410066604614258
    10. ' ' → logprob: -9.535066604614258

Token 257: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5788764357566833
    2. '==' → logprob: -1.2038764953613281
    3. ' !=' → logprob: -2.328876495361328
    4. ' ==' → logprob: -3.203876495361328
    5. ' in' → logprob: -7.953876495361328
    6. '=' → logprob: -8.203876495361328
    7. ' ' → logprob: -8.578876495361328
    8. 'in' → logprob: -8.578876495361328
    9. ' not' → logprob: -8.828876495361328
    10. '!="' → logprob: -9.703876495361328

Token 258: ' "' (ID: 392)
  Prédit: '"A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"A' → logprob: -0.12216860055923462
    2. ''A' → logprob: -2.24716854095459
    3. 'A' → logprob: -4.74716854095459
    4. '"B' → logprob: -8.49716854095459
    5. ''' → logprob: -8.74716854095459
    6. ' "' → logprob: -9.37216854095459
    7. ' '' → logprob: -9.87216854095459
    8. '"' → logprob: -10.74716854095459
    9. '   ' → logprob: -10.99716854095459
    10. ' ' → logprob: -11.12216854095459

Token 259: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.016580065712332726
    2. '"A' → logprob: -4.641580104827881
    3. ''A' → logprob: -5.391580104827881
    4. 'B' → logprob: -6.266580104827881
    5. '"B' → logprob: -9.016579627990723
    6. ''' → logprob: -9.391579627990723
    7. 'C' → logprob: -9.766579627990723
    8. ' A' → logprob: -10.391579627990723
    9. '"' → logprob: -11.641579627990723
    10. '"C' → logprob: -11.766579627990723

Token 260: '":
' (ID: 9213)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2943888306617737
    2. ':' → logprob: -1.544388771057129
    3. '":
' → logprob: -4.169388771057129
    4. '":' → logprob: -4.919388771057129
    5. '           ' → logprob: -5.044388771057129
    6. '"' → logprob: -5.419388771057129
    7. '):
' → logprob: -6.419388771057129
    8. '<|end|>' → logprob: -6.794388771057129
    9. ' and' → logprob: -6.919388771057129
    10. ' :
' → logprob: -7.044388771057129

Token 261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05547250434756279
    2. ' current' → logprob: -3.3054726123809814
    3. 'current' → logprob: -4.555472373962402
    4. '           ' → logprob: -5.680472373962402
    5. 'con' → logprob: -6.930472373962402
    6. '   ' → logprob: -7.180472373962402
    7. '                
' → logprob: -7.805472373962402
    8. '	           ' → logprob: -8.180472373962402
    9. '       ' → logprob: -9.055472373962402
    10. '            
' → logprob: -9.180472373962402

Token 262: ' consecutive' (ID: 40840)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.5028248429298401
    2. '               ' → logprob: -1.2528247833251953
    3. ' consecutive' → logprob: -2.5028247833251953
    4. '   ' → logprob: -4.627824783325195
    5. '	con' → logprob: -4.627824783325195
    6. '           ' → logprob: -5.877824783325195
    7. '                   ' → logprob: -5.877824783325195
    8. '
' → logprob: -6.877824783325195
    9. '_con' → logprob: -8.127824783325195
    10. ' ' → logprob: -8.752824783325195

Token 263: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.002848386764526367
    2. '_' → logprob: -6.0028486251831055
    3. '_count' → logprob: -8.002848625183105
    4. ' _' → logprob: -10.252848625183105
    5. '_
' → logprob: -13.877848625183105
    6. 'a' → logprob: -14.627848625183105
    7. '_space' → logprob: -15.627848625183105
    8. '_c' → logprob: -16.00284767150879
    9. '_A' → logprob: -16.25284767150879
    10. '_s' → logprob: -16.37784767150879

Token 264: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.003281214041635394
    2. '+=' → logprob: -6.128281116485596
    3. '_' → logprob: -7.128281116485596
    4. ' +=' → logprob: -8.378281593322754
    5. 'count' → logprob: -10.253281593322754
    6. '_counts' → logprob: -11.503281593322754
    7. '+' → logprob: -12.003281593322754
    8. ' _' → logprob: -12.128281593322754
    9. 's' → logprob: -13.003281593322754
    10. '=' → logprob: -13.753281593322754

Token 265: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3869452178478241
    2. '+=' → logprob: -1.1369452476501465
    3. '=' → logprob: -9.636944770812988
    4. ' =' → logprob: -11.886944770812988
    5. '+' → logprob: -14.136944770812988
    6. ']+=' → logprob: -14.136944770812988
    7. '<|end|>' → logprob: -16.011945724487305
    8. ' +' → logprob: -16.261945724487305
    9. ' ' → logprob: -16.511945724487305
    10. '   ' → logprob: -16.761945724487305

Token 266: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -17.750625610351562
    4. '
' → logprob: -19.000625610351562
    5. '0' → logprob: -19.500625610351562
    6. '  ' → logprob: -19.875625610351562
    7. '```' → logprob: -20.500625610351562
    8. '<|end|>' → logprob: -20.750625610351562
    9. ' ' → logprob: -21.125625610351562
    10. '۱' → logprob: -21.375625610351562

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.125059127807617
    4. '0' → logprob: -18.625059127807617
    5. 'current' → logprob: -18.875059127807617
    6. '
' → logprob: -19.375059127807617
    7. '<|end|>' → logprob: -19.750059127807617
    8. '```' → logprob: -20.312559127807617
    9. '  ' → logprob: -20.375059127807617
    10. '+' → logprob: -20.562559127807617

Token 268: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008191008120775223
    2. '
' → logprob: -5.258191108703613
    3. '               ' → logprob: -6.758191108703613
    4. 'else' → logprob: -6.758191108703613
    5. 'current' → logprob: -8.008191108703613
    6. ' else' → logprob: -9.258191108703613
    7. '            
' → logprob: -9.633191108703613
    8. '       ' → logprob: -10.133191108703613
    9. '		' → logprob: -10.508191108703613
    10. ' current' → logprob: -10.883191108703613

Token 269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002605029381811619
    2. '               ' → logprob: -7.002604961395264
    3. '
' → logprob: -7.252604961395264
    4. 'else' → logprob: -7.502604961395264
    5. 'current' → logprob: -8.627605438232422
    6. ' else' → logprob: -8.877605438232422
    7. ' current' → logprob: -9.877605438232422
    8. '       ' → logprob: -10.377605438232422
    9. '            
' → logprob: -11.502605438232422
    10. '```' → logprob: -12.002605438232422

Token 270: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6515117287635803
    2. 'current' → logprob: -1.6515116691589355
    3. ' else' → logprob: -2.1515116691589355
    4. '           ' → logprob: -2.4015116691589355
    5. ' current' → logprob: -3.0265116691589355
    6. '       ' → logprob: -3.5265116691589355
    7. '   ' → logprob: -6.2765116691589355
    8. '	current' → logprob: -9.276512145996094
    9. '
' → logprob: -9.651512145996094
    10. '	else' → logprob: -10.401512145996094

Token 271: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01808883249759674
    2. '           ' → logprob: -4.5180888175964355
    3. ':
' → logprob: -5.5180888175964355
    4. 'current' → logprob: -7.2680888175964355
    5. '   ' → logprob: -7.6430888175964355
    6. '       ' → logprob: -7.6430888175964355
    7. ' current' → logprob: -8.268089294433594
    8. '<|end|>' → logprob: -8.518089294433594
    9. '
' → logprob: -8.768089294433594
    10. '                
' → logprob: -9.393089294433594

Token 272: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06173236668109894
    2. 'con' → logprob: -3.061732292175293
    3. '           ' → logprob: -4.686732292175293
    4. '   ' → logprob: -6.561732292175293
    5. '       ' → logprob: -6.686732292175293
    6. 'current' → logprob: -7.061732292175293
    7. ' current' → logprob: -8.811732292175293
    8. '	con' → logprob: -9.311732292175293
    9. ' consecutive' → logprob: -10.561732292175293
    10. '                   ' → logprob: -11.686732292175293

Token 273: ' consecutive' (ID: 40840)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.015432835556566715
    2. ' consecutive' → logprob: -5.140432834625244
    3. '               ' → logprob: -5.265432834625244
    4. '   ' → logprob: -5.515432834625244
    5. '           ' → logprob: -8.765433311462402
    6. '	con' → logprob: -9.390433311462402
    7. ' conse' → logprob: -11.890433311462402
    8. '       ' → logprob: -12.015433311462402
    9. ' ' → logprob: -12.140433311462402
    10. '_con' → logprob: -12.640433311462402

Token 274: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -4.60414821645827e-06
    2. 'a' → logprob: -12.750004768371582
    3. '_' → logprob: -13.375004768371582
    4. ' _' → logprob: -16.875003814697266
    5. '\' → logprob: -19.125003814697266
    6. '_ai' → logprob: -19.125003814697266
    7. '_
' → logprob: -20.000003814697266
    8. '_an' → logprob: -20.125003814697266
    9. '_count' → logprob: -20.125003814697266
    10. '_o' → logprob: -20.375003814697266

Token 275: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0003373694489710033
    2. 'count' → logprob: -8.000337600708008
    3. '_' → logprob: -13.625337600708008
    4. '=' → logprob: -14.875337600708008
    5. '_c' → logprob: -15.875337600708008
    6. 'Count' → logprob: -16.000337600708008
    7. '_counts' → logprob: -17.125337600708008
    8. 'c' → logprob: -17.500337600708008
    9. ' =' → logprob: -17.625337600708008
    10. 'ount' → logprob: -18.000337600708008

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '.=' → logprob: -19.389163970947266
    4. '＝' → logprob: -20.014163970947266
    5. ' ' → logprob: -20.264163970947266
    6. '=
' → logprob: -20.389163970947266
    7. '=

' → logprob: -21.639163970947266
    8. ',' → logprob: -21.764163970947266
    9. '+=' → logprob: -22.264163970947266
    10. '0' → logprob: -22.389163970947266

Token 277: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.750051498413086
    4. '           ' → logprob: -20.375051498413086
    5. '۰' → logprob: -20.375051498413086
    6. ' ' → logprob: -20.687551498413086
    7. '  ' → logprob: -20.750051498413086
    8. '000' → logprob: -21.437551498413086
    9. '    ' → logprob: -21.437551498413086
    10. '	' → logprob: -21.562551498413086

Token 278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -17.375024795532227
    4. '۰' → logprob: -19.000024795532227
    5. '   ' → logprob: -19.375024795532227
    6. '000' → logprob: -19.500024795532227
    7. '00' → logprob: -19.500024795532227
    8. '```' → logprob: -20.375024795532227
    9. ' ' → logprob: -20.437524795532227
    10. '  ' → logprob: -20.625024795532227

Token 279: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4519381523132324
    2. '
' → logprob: -1.2019381523132324
    3. '           ' → logprob: -3.0769381523132324
    4. 'current' → logprob: -4.326938152313232
    5. '        
' → logprob: -6.451938152313232
    6. '   ' → logprob: -7.201938152313232
    7. '            
' → logprob: -7.576938152313232
    8. '    
' → logprob: -7.701938152313232
    9. '
' → logprob: -8.70193862915039
    10. ' current' → logprob: -9.57693862915039

Token 280: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10992664098739624
    2. '
' → logprob: -3.109926700592041
    3. '           ' → logprob: -3.484926700592041
    4. 'current' → logprob: -3.609926700592041
    5. '   ' → logprob: -6.734926700592041
    6. '        
' → logprob: -8.234926223754883
    7. ' current' → logprob: -8.859926223754883
    8. '            
' → logprob: -9.359926223754883
    9. '    
' → logprob: -9.984926223754883
    10. '
' → logprob: -11.234926223754883

Token 281: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.21947534382343292
    2. ' current' → logprob: -1.7194753885269165
    3. '       ' → logprob: -4.344475269317627
    4. '   ' → logprob: -5.844475269317627
    5. '           ' → logprob: -6.594475269317627
    6. '	current' → logprob: -7.719475269317627
    7. '
' → logprob: -8.969475746154785
    8. '	' → logprob: -10.594475746154785
    9. '        
' → logprob: -11.719475746154785
    10. ' ' → logprob: -11.844475746154785

Token 282: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -1.1160349458805285e-05
    2. '_' → logprob: -11.875011444091797
    3. '_character' → logprob: -13.000011444091797
    4. 'position' → logprob: -14.000011444091797
    5. 'Position' → logprob: -14.000011444091797
    6. '_pos' → logprob: -16.125011444091797
    7. '_POSITION' → logprob: -16.750011444091797
    8. '_Position' → logprob: -17.375011444091797
    9. '_positions' → logprob: -18.500011444091797
    10. ' position' → logprob: -19.375011444091797

Token 283: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10031924396753311
    2. ' +=' → logprob: -2.3503191471099854
    3. '+' → logprob: -9.100318908691406
    4. ']+=' → logprob: -15.225318908691406
    5. '+="' → logprob: -15.350318908691406
    6. '=' → logprob: -15.725318908691406
    7. '+='' → logprob: -15.975318908691406
    8. ' +' → logprob: -17.225318908691406
    9. ' ' → logprob: -17.725318908691406
    10. '   ' → logprob: -17.975318908691406

Token 284: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -18.750001907348633
    4. '
' → logprob: -19.375001907348633
    5. '<|end|>' → logprob: -19.375001907348633
    6. '```' → logprob: -19.500001907348633
    7. '１' → logprob: -20.375001907348633
    8. '۱' → logprob: -20.750001907348633
    9. '  ' → logprob: -21.000001907348633
    10. '१' → logprob: -21.750001907348633

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -20.25
    5. '<|end|>' → logprob: -21.125
    6. '１' → logprob: -21.375
    7. '
' → logprob: -21.75
    8. '۱' → logprob: -21.75
    9. '﻿' → logprob: -22.125
    10. '१' → logprob: -22.5

Token 286: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06038067862391472
    2. '<|end|>' → logprob: -3.560380697250366
    3. 'if' → logprob: -3.810380697250366
    4. '
' → logprob: -5.185380458831787
    5. '```' → logprob: -6.810380458831787
    6. '    
' → logprob: -7.435380458831787
    7. ' if' → logprob: -8.435380935668945
    8. 'return' → logprob: -9.185380935668945
    9. ')' → logprob: -9.185380935668945
    10. '}' → logprob: -9.810380935668945

Token 287: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2071736603975296
    2. '
' → logprob: -2.0821735858917236
    3. '<|end|>' → logprob: -3.5821735858917236
    4. '   ' → logprob: -3.7071735858917236
    5. '```' → logprob: -5.707173824310303
    6. 'return' → logprob: -6.207173824310303
    7. '    
' → logprob: -6.332173824310303
    8. ' if' → logprob: -6.832173824310303
    9. ')' → logprob: -7.332173824310303
    10. '  
' → logprob: -8.082173347473145

Token 288: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.18323276937007904
    2. '   ' → logprob: -1.8082327842712402
    3. 'if' → logprob: -5.93323278427124
    4. 'return' → logprob: -8.308232307434082
    5. 'while' → logprob: -8.308232307434082
    6. ' print' → logprob: -8.933232307434082
    7. 'for' → logprob: -9.308232307434082
    8. '    
' → logprob: -9.558232307434082
    9. '```' → logprob: -11.183232307434082
    10. '#print' → logprob: -12.058232307434082

Token 289: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.011065744794905186
    2. '(' → logprob: -4.51106595993042
    3. 'total' → logprob: -11.011065483093262
    4. '(
' → logprob: -14.386065483093262
    5. '()' → logprob: -14.761065483093262
    6. ' (' → logprob: -16.136066436767578
    7. '(t' → logprob: -16.261066436767578
    8. '(sum' → logprob: -17.761066436767578
    9. ',total' → logprob: -17.886066436767578
    10. ' total' → logprob: -18.011066436767578

Token 290: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.2200749754119897e-06
    2. ')' → logprob: -13.875001907348633
    3. ' _' → logprob: -15.125001907348633
    4. '_)' → logprob: -15.250001907348633
    5. '_
' → logprob: -15.500001907348633
    6. ')_' → logprob: -16.375001907348633
    7. '_chars' → logprob: -16.625001907348633
    8. '_total' → logprob: -17.000001907348633
    9. '_xyz' → logprob: -17.000001907348633
    10. '_character' → logprob: -17.250001907348633

Token 291: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -7.896309739408025e-07
    2. ' abc' → logprob: -14.625000953674316
    3. 'abcdef' → logprob: -17.125
    4. '_' → logprob: -17.375
    5. '```' → logprob: -17.375
    6. ' ' → logprob: -17.875
    7. 'a' → logprob: -18.0
    8. '   ' → logprob: -18.625
    9. 'sub' → logprob: -18.625
    10. 'ab' → logprob: -18.625

Token 292: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -9.615255839889869e-05
    2. '_' → logprob: -9.875096321105957
    3. ')' → logprob: -10.375096321105957
    4. 'substring' → logprob: -12.500096321105957
    5. ')_' → logprob: -12.625096321105957
    6. '_string' → logprob: -12.625096321105957
    7. '_s' → logprob: -14.125096321105957
    8. '_)' → logprob: -14.125096321105957
    9. '_SUB' → logprob: -15.250096321105957
    10. '_Sub' → logprob: -15.375096321105957

Token 293: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.0005847262218594551
    2. 'tring' → logprob: -7.500584602355957
    3. 'ring' → logprob: -10.875584602355957
    4. '_string' → logprob: -12.250584602355957
    5. 'str' → logprob: -12.375584602355957
    6. 'r' → logprob: -14.125584602355957
    7. 'strings' → logprob: -14.375584602355957
    8. 'count' → logprob: -14.625584602355957
    9. ' string' → logprob: -14.875584602355957
    10. '```' → logprob: -15.000584602355957

Token 294: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.692145012086257e-05
    2. 'count' → logprob: -10.500046730041504
    3. ')' → logprob: -11.375046730041504
    4. '_' → logprob: -12.500046730041504
    5. ')_' → logprob: -13.625046730041504
    6. '_c' → logprob: -13.750046730041504
    7. '_counts' → logprob: -14.625046730041504
    8. '_counter' → logprob: -14.625046730041504
    9. '_cnt' → logprob: -15.375046730041504
    10. 't' → logprob: -15.500046730041504

Token 295: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -15.375000953674316
    4. ')}' → logprob: -17.375
    5. ')`' → logprob: -17.375
    6. '+' → logprob: -17.5
    7. '))' → logprob: -17.875
    8. '   ' → logprob: -18.25
    9. '}' → logprob: -19.125
    10. '()' → logprob: -19.5

Token 296: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010250702034682035
    2. '
' → logprob: -7.626025199890137
    3. '<|end|>' → logprob: -7.626025199890137
    4. ' if' → logprob: -10.751025199890137
    5. '```' → logprob: -10.876025199890137
    6. '#' → logprob: -12.751025199890137
    7. '  
' → logprob: -13.876025199890137
    8. '\n' → logprob: -14.001025199890137
    9. 'main' → logprob: -14.126025199890137
    10. '    
' → logprob: -14.876025199890137

Token 297: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3137151300907135
    2. '__' → logprob: -1.3137151002883911
    3. '_' → logprob: -7.813714981079102
    4. '_name' → logprob: -10.813714981079102
    5. ' ' → logprob: -11.438714981079102
    6. '___' → logprob: -11.438714981079102
    7. 'name' → logprob: -13.063714981079102
    8. '  ' → logprob: -13.438714981079102
    9. ' _' → logprob: -14.063714981079102
    10. '/__' → logprob: -14.313714981079102

Token 298: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002004057401791215
    2. '==' → logprob: -6.752004146575928
    3. '__.__' → logprob: -7.377004146575928
    4. '__.' → logprob: -9.25200366973877
    5. '__["' → logprob: -11.00200366973877
    6. '___' → logprob: -11.12700366973877
    7. ' ==' → logprob: -11.37700366973877
    8. '__*/' → logprob: -11.50200366973877
    9. '```' → logprob: -11.50200366973877
    10. '.__' → logprob: -11.62700366973877

Token 299: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00014704519708175212
    2. '__.__' → logprob: -9.000146865844727
    3. '==' → logprob: -10.875146865844727
    4. '__.' → logprob: -13.000146865844727
    5. '___' → logprob: -13.750146865844727
    6. '__["' → logprob: -14.500146865844727
    7. '=="' → logprob: -14.875146865844727
    8. '____' → logprob: -15.625146865844727
    9. '_' → logprob: -15.750146865844727
    10. '__
' → logprob: -16.625146865844727

Token 300: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11393994837999344
    2. '==' → logprob: -2.2389400005340576
    3. ' ==' → logprob: -7.1139397621154785
    4. '=="' → logprob: -8.238940238952637
    5. '__.__' → logprob: -10.738940238952637
    6. '=='' → logprob: -12.238940238952637
    7. '=' → logprob: -12.738940238952637
    8. '.__' → logprob: -12.863940238952637
    9. '_' → logprob: -13.238940238952637
    10. '__.' → logprob: -13.738940238952637

Token 301: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008628644980490208
    2. ''' → logprob: -4.758628845214844
    3. ' "__' → logprob: -11.258628845214844
    4. '__' → logprob: -13.758628845214844
    5. ' '__' → logprob: -16.008628845214844
    6. '("__' → logprob: -17.758628845214844
    7. '"user' → logprob: -17.883628845214844
    8. '   ' → logprob: -17.883628845214844
    9. '"name' → logprob: -18.258628845214844
    10. ''"' → logprob: -18.758628845214844

Token 302: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00023607931507285684
    2. 'name' → logprob: -8.750236511230469
    3. '__' → logprob: -9.875236511230469
    4. '"' → logprob: -10.625236511230469
    5. ''' → logprob: -14.250236511230469
    6. '_main' → logprob: -14.375236511230469
    7. ' main' → logprob: -14.875236511230469
    8. 'built' → logprob: -16.62523651123047
    9. '"name' → logprob: -17.37523651123047
    10. 'm' → logprob: -17.50023651123047

Token 303: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3220308721065521
    2. '__":
' → logprob: -1.3220309019088745
    3. '__:' → logprob: -4.822031021118164
    4. '__':
' → logprob: -7.697031021118164
    5. '__.' → logprob: -9.197031021118164
    6. '__["' → logprob: -9.572031021118164
    7. '__.__' → logprob: -10.197031021118164
    8. ':' → logprob: -12.447031021118164
    9. '__
' → logprob: -12.822031021118164
    10. '__[' → logprob: -12.947031021118164

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18752531707286835
    2. '	main' → logprob: -1.9375252723693848
    3. ' main' → logprob: -3.9375252723693848
    4. 'main' → logprob: -4.937525272369385
    5. '   ' → logprob: -9.187525749206543
    6. '<|end|>' → logprob: -9.812525749206543
    7. '    
' → logprob: -10.187525749206543
    8. ' ' → logprob: -11.187525749206543
    9. '_main' → logprob: -11.562525749206543
    10. '	Main' → logprob: -11.562525749206543

Token 305: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.60414821645827e-06
    2. ' main' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.500004768371582
    4. '	main' → logprob: -14.875004768371582
    5. '(main' → logprob: -21.625003814697266
    6. 'import' → logprob: -21.750003814697266
    7. '_main' → logprob: -21.875003814697266
    8. '  ' → logprob: -21.875003814697266
    9. '.main' → logprob: -22.375003814697266
    10. 'Main' → logprob: -23.750003814697266

Token 306: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 304
Tokens correctement prédits (1ère position, stricte): 136
Tokens correctement prédits (1ère position, avec adaptation): 144
Tokens correctement prédits (top 10): 249
Précision stricte (1ère position): 44.74%
Précision adaptée (1ère position): 47.37%
Précision (top 10): 81.91%
================================================================================
