================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())

slist = []
tlist = []

for idx in range(n):
    inp = input().split() # split input
    s = inp[0]
    t = int(inp[1]) # convert to int, don't forget
    slist.append(s)
    tlist.append(t)
    
x = input()

try:
    ind = slist.index(x)
except Exception as e:
    # not supposed to happen but hey
    ind = -1

res = 0
# kind of inefficient, could slice tlist, but let's try this
for i in range(ind+1, len(tlist)):
    res += tlist[i]

print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.7530574849806726e-05
    2. ''' → logprob: -10.750057220458984
    3. '('' → logprob: -11.125057220458984
    4. '(
' → logprob: -11.750057220458984
    5. '(n' → logprob: -13.000057220458984
    6. '```' → logprob: -13.125057220458984
    7. '("("' → logprob: -13.125057220458984
    8. '()' → logprob: -13.500057220458984
    9. '`' → logprob: -13.500057220458984
    10. '[' → logprob: -14.125057220458984

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09555883705615997
    2. ')' → logprob: -2.9705588817596436
    3. '()' → logprob: -3.3455588817596436
    4. '())' → logprob: -5.7205586433410645
    5. '('' → logprob: -7.9705586433410645
    6. '(
' → logprob: -8.720559120178223
    7. '(()' → logprob: -8.845559120178223
    8. '("("' → logprob: -8.970559120178223
    9. '```' → logprob: -9.345559120178223
    10. '(""))' → logprob: -9.595559120178223

Token 5: 's' (ID: 82)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4092439115047455
    2. 'i' → logprob: -1.9092439413070679
    3. 'for' → logprob: -1.9092439413070679
    4. 's' → logprob: -3.5342438220977783
    5. 'f' → logprob: -6.284244060516357
    6. 'x' → logprob: -6.284244060516357
    7. ' if' → logprob: -6.409244060516357
    8. 'total' → logprob: -7.034244060516357
    9. 'result' → logprob: -7.159244060516357
    10. 'sum' → logprob: -7.159244060516357

Token 6: 'list' (ID: 2641)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0505443811416626
    2. 'u' → logprob: -1.3005443811416626
    3. '+' → logprob: -2.300544261932373
    4. '[' → logprob: -2.425544261932373
    5. 'um' → logprob: -2.800544261932373
    6. ' =' → logprob: -3.050544261932373
    7. '.' → logprob: -3.675544261932373
    8. '_' → logprob: -4.800544261932373
    9. '+=' → logprob: -5.050544261932373
    10. '(' → logprob: -5.175544261932373

Token 7: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0487964041531086
    2. '[' → logprob: -3.2987964153289795
    3. '.append' → logprob: -5.6737961769104
    4. ')' → logprob: -6.1737961769104
    5. '[:]' → logprob: -6.2987961769104
    6. 's' → logprob: -7.0487961769104
    7. '.setdefault' → logprob: -8.048796653747559
    8. '_' → logprob: -8.173796653747559
    9. '(' → logprob: -8.298796653747559
    10. '.)' → logprob: -8.423796653747559

Token 8: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.020931415259838104
    2. '[]' → logprob: -3.8959314823150635
    3. 'list' → logprob: -9.520931243896484
    4. ' [' → logprob: -9.645931243896484
    5. ' list' → logprob: -9.645931243896484
    6. 'input' → logprob: -9.645931243896484
    7. ' input' → logprob: -10.020931243896484
    8. '[input' → logprob: -10.270931243896484
    9. ' ' → logprob: -11.270931243896484
    10. 'set' → logprob: -11.395931243896484

Token 9: 't' (ID: 83)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010793721303343773
    2. ' for' → logprob: -7.001079559326172
    3. '```' → logprob: -9.501079559326172
    4. '\n' → logprob: -10.001079559326172
    5. 'n' → logprob: -10.376079559326172
    6. '
' → logprob: -12.626079559326172
    7. 's' → logprob: -12.876079559326172
    8. '`' → logprob: -12.876079559326172
    9. '\' → logprob: -13.126079559326172
    10. '[' → logprob: -14.126079559326172

Token 10: 'list' (ID: 2641)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30997076630592346
    2. '.append' → logprob: -2.0599708557128906
    3. '.' → logprob: -2.6849708557128906
    4. '=' → logprob: -3.5599708557128906
    5. 'okens' → logprob: -4.184970855712891
    6. 'oken' → logprob: -4.934970855712891
    7. 's' → logprob: -5.184970855712891
    8. 'o' → logprob: -5.684970855712891
    9. 'emp' → logprob: -6.059970855712891
    10. '.extend' → logprob: -6.934970855712891

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02594398707151413
    2. '=' → logprob: -3.7759439945220947
    3. '.append' → logprob: -6.525943756103516
    4. '.' → logprob: -7.525943756103516
    5. '[' → logprob: -7.775943756103516
    6. 's' → logprob: -10.025943756103516
    7. ' +=' → logprob: -10.025943756103516
    8. '[]' → logprob: -10.400943756103516
    9. '=[]' → logprob: -10.400943756103516
    10. '[:]' → logprob: -10.525943756103516

Token 12: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5766074657440186
    2. '[]' → logprob: -0.8266074657440186
    3. '[' → logprob: -7.576607704162598
    4. ' ' → logprob: -9.076607704162598
    5. ' [' → logprob: -10.826607704162598
    6. '[]
' → logprob: -12.451607704162598
    7. 'list' → logprob: -12.451607704162598
    8. '[s' → logprob: -12.951607704162598
    9. 's' → logprob: -13.076607704162598
    10. '[]}' → logprob: -13.201607704162598

Token 13: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00044032474397681653
    2. 'f' → logprob: -7.8754401206970215
    3. ' for' → logprob: -10.25044059753418
    4. '```' → logprob: -11.25044059753418
    5. 'n' → logprob: -11.75044059753418
    6. '
' → logprob: -13.12544059753418
    7. '`' → logprob: -14.37544059753418
    8. 'i' → logprob: -14.62544059753418
    9. '\n' → logprob: -15.00044059753418
    10. 'r' → logprob: -15.62544059753418

Token 14: ' idx' (ID: 14016)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08999896794557571
    2. ' i' → logprob: -2.839998960494995
    3. '  ' → logprob: -3.714998960494995
    4. ' n' → logprob: -5.839999198913574
    5. 'i' → logprob: -8.714999198913574
    6. ' s' → logprob: -9.714999198913574
    7. ' ‌' → logprob: -10.589999198913574
    8. ' ' → logprob: -10.839999198913574
    9. ' )' → logprob: -11.339999198913574
    10. 'n' → logprob: -11.464999198913574

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006452689412981272
    2. 'in' → logprob: -5.256452560424805
    3. ' ' → logprob: -6.756452560424805
    4. ' i' → logprob: -11.381452560424805
    5. ',' → logprob: -11.881452560424805
    6. '  ' → logprob: -12.131452560424805
    7. '_' → logprob: -12.256452560424805
    8. 'n' → logprob: -12.631452560424805
    9. '	in' → logprob: -12.631452560424805
    10. ' _' → logprob: -12.756452560424805

Token 16: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07890751957893372
    2. 'range' → logprob: -2.5789074897766113
    3. '	range' → logprob: -12.32890796661377
    4. ' ' → logprob: -12.45390796661377
    5. ' in' → logprob: -12.45390796661377
    6. '(range' → logprob: -13.57890796661377
    7. ' n' → logprob: -14.07890796661377
    8. 'in' → logprob: -14.32890796661377
    9. ')' → logprob: -14.32890796661377
    10. ' xrange' → logprob: -14.45390796661377

Token 17: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3133188486099243
    2. '(n' → logprob: -1.3133188486099243
    3. '(len' → logprob: -10.063319206237793
    4. ' (' → logprob: -11.313319206237793
    5. '(
' → logprob: -14.188319206237793
    6. '(range' → logprob: -15.188319206237793
    7. '(

' → logprob: -15.313319206237793
    8. '(s' → logprob: -15.438319206237793
    9. '(length' → logprob: -15.563319206237793
    10. '(`' → logprob: -16.188318252563477

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2321014553308487
    2. ')' → logprob: -1.6071014404296875
    3. '+' → logprob: -5.4821014404296875
    4. ' ):' → logprob: -6.3571014404296875
    5. ' )' → logprob: -7.8571014404296875
    6. ':' → logprob: -8.107101440429688
    7. ' +' → logprob: -10.107101440429688
    8. ',' → logprob: -11.857101440429688
    9. ' ' → logprob: -12.357101440429688
    10. '[' → logprob: -12.607101440429688

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10352489352226257
    2. '    ' → logprob: -2.603524923324585
    3. ' ' → logprob: -4.103524684906006
    4. '    
' → logprob: -6.228524684906006
    5. '```' → logprob: -6.728524684906006
    6. '     
' → logprob: -6.978524684906006
    7. ' s' → logprob: -7.603524684906006
    8. ' input' → logprob: -7.728524684906006
    9. 'input' → logprob: -7.978524684906006
    10. '  ' → logprob: -8.478525161743164

Token 20: ' inp' (ID: 64450)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4543033838272095
    2. ' s' → logprob: -1.8293033838272095
    3. '   ' → logprob: -2.45430326461792
    4. ' ' → logprob: -3.07930326461792
    5. ' input' → logprob: -3.82930326461792
    6. '    ' → logprob: -3.95430326461792
    7. 's' → logprob: -4.57930326461792
    8. 'line' → logprob: -6.07930326461792
    9. ' token' → logprob: -6.57930326461792
    10. 'input' → logprob: -6.57930326461792

Token 21: ' =' (ID: 314)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.00043615259346552193
    2. 'u' → logprob: -8.750435829162598
    3. ' ut' → logprob: -9.250435829162598
    4. ' =' → logprob: -9.375435829162598
    5. 'uts' → logprob: -10.750435829162598
    6. '=' → logprob: -11.125435829162598
    7. 't' → logprob: -11.250435829162598
    8. '_ut' → logprob: -11.375435829162598
    9. '   ' → logprob: -11.500435829162598
    10. '```' → logprob: -11.625435829162598

Token 22: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.011545010842382908
    2. 'input' → logprob: -4.761545181274414
    3. ' int' → logprob: -5.886545181274414
    4. 'int' → logprob: -8.886545181274414
    5. ' list' → logprob: -12.136545181274414
    6. '=input' → logprob: -13.011545181274414
    7. '(input' → logprob: -14.136545181274414
    8. ' ' → logprob: -14.386545181274414
    9. ' inp' → logprob: -14.511545181274414
    10. ' str' → logprob: -14.886545181274414

Token 23: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012029698118567467
    2. '(' → logprob: -6.8762030601501465
    3. '())' → logprob: -9.501202583312988
    4. '('' → logprob: -10.251202583312988
    5. '().' → logprob: -10.876202583312988
    6. '("' → logprob: -11.251202583312988
    7. '("")' → logprob: -11.501202583312988
    8. ')' → logprob: -12.001202583312988
    9. '("("' → logprob: -12.626202583312988
    10. '()
' → logprob: -13.126202583312988

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.049852147698402405
    2. 'strip' → logprob: -3.049852132797241
    3. 'rstrip' → logprob: -6.67485237121582
    4. 'replace' → logprob: -14.17485237121582
    5. ' split' → logprob: -14.79985237121582
    6. 'rs' → logprob: -15.29985237121582
    7. 'spl' → logprob: -16.04985237121582
    8. 'startswith' → logprob: -16.92485237121582
    9. 'append' → logprob: -17.42485237121582
    10. 'sp' → logprob: -17.42485237121582

Token 25: '()' (ID: 416)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6089909076690674
    2. '()' → logprob: -1.1089909076690674
    3. '(' → logprob: -2.1089909076690674
    4. '("("' → logprob: -5.483990669250488
    5. '("' → logprob: -7.483990669250488
    6. '())' → logprob: -10.108990669250488
    7. '(`' → logprob: -10.733990669250488
    8. '(
' → logprob: -11.233990669250488
    9. '(',' → logprob: -11.858990669250488
    10. ''' → logprob: -12.108990669250488

Token 26: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47994303703308105
    2. '   ' → logprob: -1.229943037033081
    3. '\' → logprob: -3.979943037033081
    4. '    
' → logprob: -4.10494327545166
    5. '    ' → logprob: -4.60494327545166
    6. ' ' → logprob: -4.97994327545166
    7. '[
' → logprob: -5.35494327545166
    8. 's' → logprob: -5.85494327545166
    9. '[]' → logprob: -5.97994327545166
    10. '<|end|>' → logprob: -6.10494327545166

Token 27: ' split' (ID: 12648)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3484338521957397
    2. ' s' → logprob: -1.5984338521957397
    3. ' inp' → logprob: -1.7234338521957397
    4. ' t' → logprob: -2.3484339714050293
    5. '<|end|>' → logprob: -2.3484339714050293
    6. 's' → logprob: -2.4734339714050293
    7. 'inp' → logprob: -3.7234339714050293
    8. ' if' → logprob: -4.473433971405029
    9. ' for' → logprob: -4.973433971405029
    10. 't' → logprob: -5.348433971405029

Token 28: ' input' (ID: 3422)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04663198068737984
    2. '(' → logprob: -3.6716320514678955
    3. '[' → logprob: -4.046631813049316
    4. ')' → logprob: -6.546631813049316
    5. '('' → logprob: -8.546631813049316
    6. '()[' → logprob: -8.796631813049316
    7. '   ' → logprob: -9.296631813049316
    8. '()
' → logprob: -9.421631813049316
    9. '[]' → logprob: -9.796631813049316
    10. '```' → logprob: -9.796631813049316

Token 29: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026080351322889328
    2. 's' → logprob: -4.651080131530762
    3. '<|end|>' → logprob: -4.776080131530762
    4. ' s' → logprob: -6.401080131530762
    5. '    
' → logprob: -6.526080131530762
    6. ' ' → logprob: -7.151080131530762
    7. ' t' → logprob: -7.276080131530762
    8. 't' → logprob: -7.526080131530762
    9. '  ' → logprob: -7.651080131530762
    10. '[' → logprob: -7.901080131530762

Token 31: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7146924138069153
    2. 's' (adapté à ' s') → logprob: -1.0896923542022705
    3. 't' → logprob: -2.7146923542022705
    4. ' if' → logprob: -2.9646923542022705
    5. 'if' → logprob: -4.33969259262085
    6. ' ' → logprob: -4.83969259262085
    7. ' t' → logprob: -4.83969259262085
    8. '    ' → logprob: -5.21469259262085
    9. ' s' → logprob: -5.33969259262085
    10. 'i' → logprob: -5.33969259262085

Token 32: ' =' (ID: 314)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0010617482475936413
    2. '.append' → logprob: -7.501061916351318
    3. 'plit' → logprob: -7.751061916351318
    4. 'append' → logprob: -10.75106143951416
    5. '_list' → logprob: -10.87606143951416
    6. 'plist' → logprob: -11.37606143951416
    7. '[' → logprob: -11.75106143951416
    8. 't' → logprob: -12.50106143951416
    9. 'lst' → logprob: -12.75106143951416
    10. 'plt' → logprob: -13.00106143951416

Token 33: ' inp' (ID: 64450)
  Prédit: ' inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.6395251154899597
    2. 'inp' → logprob: -0.8895251154899597
    3. 'int' → logprob: -3.2645251750946045
    4. ' int' → logprob: -3.7645251750946045
    5. '(inp' → logprob: -9.389525413513184
    6. 'input' → logprob: -10.389525413513184
    7. ' float' → logprob: -10.764525413513184
    8. 'float' → logprob: -11.014525413513184
    9. 'in' → logprob: -11.764525413513184
    10. ' input' → logprob: -11.889525413513184

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013083349040243775
    2. '0' → logprob: -9.625130653381348
    3. ' [' → logprob: -10.250130653381348
    4. '[-' → logprob: -11.125130653381348
    5. '[:' → logprob: -11.875130653381348
    6. '[int' → logprob: -13.750130653381348
    7. '[:]' → logprob: -13.750130653381348
    8. '[s' → logprob: -14.000130653381348
    9. '[idx' → logprob: -14.250130653381348
    10. 's' → logprob: -14.500130653381348

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.341087570646778e-05
    2. '1' → logprob: -9.375093460083008
    3. ' ' → logprob: -11.875093460083008
    4. '-' → logprob: -13.500093460083008
    5. '2' → logprob: -15.750093460083008
    6. ']' → logprob: -17.250093460083008
    7. '3' → logprob: -17.750093460083008
    8. '   ' → logprob: -18.375093460083008
    9. '۰' → logprob: -18.500093460083008
    10. '4' → logprob: -18.562593460083008

Token 36: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004894073354080319
    2. ' ]' → logprob: -7.750489234924316
    3. ']
' → logprob: -10.625489234924316
    4. ')' → logprob: -11.250489234924316
    5. '']' → logprob: -11.500489234924316
    6. '])' → logprob: -12.625489234924316
    7. '[' → logprob: -12.625489234924316
    8. ')]' → logprob: -13.250489234924316
    9. '   ' → logprob: -14.125489234924316
    10. '()]' → logprob: -14.500489234924316

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08684437721967697
    2. '<|end|>' → logprob: -3.2118444442749023
    3. 't' → logprob: -3.4618444442749023
    4. ' t' → logprob: -6.086844444274902
    5. ' ' → logprob: -6.211844444274902
    6. '    ' → logprob: -6.336844444274902
    7. '    
' → logprob: -6.461844444274902
    8. ',' → logprob: -6.836844444274902
    9. '<|end|>' → logprob: -6.836844444274902
    10. '  ' → logprob: -7.961844444274902

Token 38: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.058014173060655594
    2. ' t' → logprob: -2.933014154434204
    3. '   ' → logprob: -7.308014392852783
    4. ' ' → logprob: -7.558014392852783
    5. 'v' → logprob: -7.558014392852783
    6. 'd' → logprob: -8.308013916015625
    7. 's' → logprob: -8.933013916015625
    8. ',' → logprob: -8.933013916015625
    9. 'p' → logprob: -9.308013916015625
    10. 'c' → logprob: -9.308013916015625

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016040820628404617
    2. '=' → logprob: -4.141040802001953
    3. ' ' → logprob: -12.391040802001953
    4. 's' → logprob: -14.266040802001953
    5. '[' → logprob: -14.266040802001953
    6. ',' → logprob: -15.391040802001953
    7. '_' → logprob: -16.016040802001953
    8. '  ' → logprob: -16.391040802001953
    9. '<|end|>' → logprob: -16.516040802001953
    10. ')' → logprob: -16.641040802001953

Token 40: ' int' (ID: 677)
  Prédit: 'inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inp' → logprob: -0.38705718517303467
    2. ' inp' → logprob: -1.2620571851730347
    3. 'int' → logprob: -3.387057304382324
    4. ' int' → logprob: -5.512057304382324
    5. '(inp' → logprob: -11.387057304382324
    6. 'input' → logprob: -11.887057304382324
    7. ' ' → logprob: -12.762057304382324
    8. 'Inp' → logprob: -13.949557304382324
    9. 'in' → logprob: -14.137057304382324
    10. ' in' → logprob: -14.574557304382324

Token 41: '(inp' (ID: 141645)
  Prédit: '(inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inp' → logprob: -0.04870227351784706
    2. '(' → logprob: -3.0487022399902344
    3. ' (' → logprob: -9.298702239990234
    4. '(in' → logprob: -11.423702239990234
    5. 'inp' → logprob: -12.298702239990234
    6. '(instr' → logprob: -12.548702239990234
    7. ' inp' → logprob: -13.298702239990234
    8. '(
' → logprob: -14.548702239990234
    9. '(input' → logprob: -15.048702239990234
    10. ' ' → logprob: -15.048702239990234

Token 42: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. '[-' → logprob: -14.00000286102295
    3. ']' → logprob: -14.25000286102295
    4. '1' → logprob: -14.50000286102295
    5. '\[' → logprob: -15.12500286102295
    6. ' [' → logprob: -15.25000286102295
    7. '])' → logprob: -16.250003814697266
    8. '][' → logprob: -16.250003814697266
    9. ')' → logprob: -16.625003814697266
    10. '(' → logprob: -16.750003814697266

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.750005722045898
    3. '2' → logprob: -14.000005722045898
    4. '])' → logprob: -14.375005722045898
    5. ']' → logprob: -14.625005722045898
    6. '0' → logprob: -14.875005722045898
    7. '-' → logprob: -15.250005722045898
    8. '```' → logprob: -15.437505722045898
    9. ')' → logprob: -15.625005722045898
    10. '[' → logprob: -15.937505722045898

Token 44: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004939023870974779
    2. '])' → logprob: -5.629939079284668
    3. ']' → logprob: -6.629939079284668
    4. ')]' → logprob: -12.379939079284668
    5. ')])' → logprob: -12.629939079284668
    6. '）' → logprob: -12.754939079284668
    7. '))' → logprob: -12.879939079284668
    8. ' )' → logprob: -13.504939079284668
    9. '}' → logprob: -14.004939079284668
    10. '})' → logprob: -14.254939079284668

Token 45: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09055475890636444
    2. '<|end|>' → logprob: -3.215554714202881
    3. 's' → logprob: -4.340554714202881
    4. ' ' → logprob: -4.590554714202881
    5. '    
' → logprob: -5.590554714202881
    6. '
' → logprob: -5.715554714202881
    7. '```' → logprob: -5.715554714202881
    8. '\n' → logprob: -5.840554714202881
    9. '\' → logprob: -5.840554714202881
    10. ')' → logprob: -6.840554714202881

Token 46: ' convert' (ID: 8452)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03329489007592201
    2. '<|end|>' → logprob: -3.533294916152954
    3. 't' → logprob: -6.658294677734375
    4. 's' → logprob: -7.408294677734375
    5. '<|end|>' → logprob: -7.533294677734375
    6. ')' → logprob: -8.158294677734375
    7. ' t' → logprob: -8.283294677734375
    8. ' continue' → logprob: -8.783294677734375
    9. ' )' → logprob: -9.783294677734375
    10. '(s' → logprob: -10.033294677734375

Token 47: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0019589634612202644
    2. ' int' → logprob: -7.126958847045898
    3. '<|end|>' → logprob: -7.501958847045898
    4. ' space' → logprob: -8.751958847045898
    5. '32' → logprob: -9.251958847045898
    6. '  ' → logprob: -9.626958847045898
    7. 'space' → logprob: -9.876958847045898
    8. 'int' → logprob: -9.876958847045898
    9. ' ,' → logprob: -10.376958847045898
    10. ' t' → logprob: -10.626958847045898

Token 49: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06945489346981049
    2. '<|end|>' → logprob: -3.5694549083709717
    3. 's' → logprob: -3.9444549083709717
    4. '
' → logprob: -5.069454669952393
    5. '    
' → logprob: -5.319454669952393
    6. 'n' → logprob: -6.694454669952393
    7. '```' → logprob: -6.819454669952393
    8. '\n' → logprob: -7.319454669952393
    9. '  
' → logprob: -7.319454669952393
    10. ' 
' → logprob: -7.319454669952393

Token 50: ' don't' (ID: 4128)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4405638873577118
    2. 't' → logprob: -2.190563917160034
    3. 's' → logprob: -2.315563917160034
    4. ')' → logprob: -2.940563917160034
    5. '<|end|>' → logprob: -2.940563917160034
    6. ' ' → logprob: -4.440563678741455
    7. ' t' → logprob: -4.565563678741455
    8. '<|end|>' → logprob: -5.565563678741455
    9. 'n' → logprob: -5.690563678741455
    10. '```' → logprob: -6.065563678741455

Token 51: ' forget' (ID: 13814)
  Prédit: ' forget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forget' → logprob: -1.1573952436447144
    2. 'forget' → logprob: -2.532395362854004
    3. ' continue' → logprob: -2.657395362854004
    4. 'append' → logprob: -2.907395362854004
    5. 'strip' → logprob: -3.032395362854004
    6. ' use' → logprob: -3.157395362854004
    7. '<|end|>' → logprob: -3.157395362854004
    8. ' ' → logprob: -3.407395362854004
    9. 'convert' → logprob: -3.407395362854004
    10. 'continue' → logprob: -3.657395362854004

Token 52: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6502590179443359
    2. '<|end|>' → logprob: -1.025259017944336
    3. ' ' → logprob: -3.400259017944336
    4. '
' → logprob: -3.650259017944336
    5. 's' → logprob: -3.900259017944336
    6. '    
' → logprob: -4.650259017944336
    7. '<|end|>' → logprob: -5.275259017944336
    8. ')' → logprob: -5.650259017944336
    9. 'n' → logprob: -5.775259017944336
    10. '```' → logprob: -5.900259017944336

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1926610767841339
    2. '<|end|>' → logprob: -2.1926610469818115
    3. '
' → logprob: -3.6926610469818115
    4. 's' → logprob: -3.6926610469818115
    5. '```' → logprob: -5.567661285400391
    6. '    
' → logprob: -5.942661285400391
    7. '<|end|>' → logprob: -6.442661285400391
    8. '  
' → logprob: -7.067661285400391
    9. ' ' → logprob: -7.192661285400391
    10. ' 
' → logprob: -7.192661285400391

Token 54: ' sl' (ID: 1925)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07428888976573944
    2. '<|end|>' → logprob: -2.949288845062256
    3. '   ' → logprob: -4.699288845062256
    4. ' ' → logprob: -5.574288845062256
    5. ' 
' → logprob: -6.324288845062256
    6. '	s' → logprob: -6.324288845062256
    7. ' s' → logprob: -7.199288845062256
    8. '
' → logprob: -7.574288845062256
    9. '<|end|>' → logprob: -7.699288845062256
    10. '    
' → logprob: -8.199289321899414

Token 55: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -3.4121114822482923e-06
    2. 'list' → logprob: -12.875003814697266
    3. 'is' → logprob: -14.625003814697266
    4. '```' → logprob: -15.750003814697266
    5. '   ' → logprob: -16.625003814697266
    6. 'i' → logprob: -17.125003814697266
    7. '.append' → logprob: -17.625003814697266
    8. ' ist' → logprob: -17.625003814697266
    9. 'ист' → logprob: -17.875003814697266
    10. 'it' → logprob: -18.000003814697266

Token 56: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.31330937147140503
    2. '.' → logprob: -1.3133094310760498
    3. '.app' → logprob: -11.188309669494629
    4. '.Append' → logprob: -11.688309669494629
    5. 'append' → logprob: -12.063309669494629
    6. ' .' → logprob: -12.438309669494629
    7. '.ap' → logprob: -12.563309669494629
    8. '.extend' → logprob: -12.938309669494629
    9. '_append' → logprob: -13.313309669494629
    10. '.push' → logprob: -13.813309669494629

Token 57: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.04868410527706146
    2. '(' → logprob: -3.0486841201782227
    3. '((' → logprob: -9.298684120178223
    4. '('' → logprob: -13.548684120178223
    5. '(
' → logprob: -13.923684120178223
    6. '(t' → logprob: -14.173684120178223
    7. 's' → logprob: -14.298684120178223
    8. '(n' → logprob: -15.173684120178223
    9. ' (' → logprob: -15.798684120178223
    10. '(ss' → logprob: -15.798684120178223

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. ' )' → logprob: -12.500007629394531
    3. ')t' → logprob: -13.375007629394531
    4. ')
' → logprob: -14.250007629394531
    5. ',' → logprob: -14.500007629394531
    6. '),' → logprob: -14.500007629394531
    7. '   ' → logprob: -15.875007629394531
    8. ')s' → logprob: -16.00000762939453
    9. ',)' → logprob: -16.50000762939453
    10. ' ' → logprob: -17.00000762939453

Token 59: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8793649077415466
    2. '	t' → logprob: -1.3793649673461914
    3. '   ' → logprob: -1.5043649673461914
    4. '    
' → logprob: -3.1293649673461914
    5. ' t' → logprob: -3.3793649673461914
    6. ' 
' → logprob: -4.629364967346191
    7. '  
' → logprob: -5.129364967346191
    8. '```' → logprob: -5.629364967346191
    9. '<|end|>' → logprob: -6.004364967346191
    10. '`t' → logprob: -6.254364967346191

Token 60: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.055644139647483826
    2. ' t' → logprob: -3.3056440353393555
    3. '	t' → logprob: -4.1806440353393555
    4. ' ' → logprob: -6.8056440353393555
    5. '\t' → logprob: -7.8056440353393555
    6. ' 
' → logprob: -8.305644035339355
    7. '   ' → logprob: -9.180644035339355
    8. '<|end|>' → logprob: -9.430644035339355
    9. '    
' → logprob: -9.930644035339355
    10. '	' → logprob: -10.305644035339355

Token 61: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0003550079127307981
    2. 'ist' → logprob: -8.000354766845703
    3. '_list' → logprob: -10.875354766845703
    4. ')' → logprob: -15.000354766845703
    5. ' list' → logprob: -16.875354766845703
    6. 'lists' → logprob: -17.125354766845703
    7. 'lst' → logprob: -17.250354766845703
    8. '-' → logprob: -17.375354766845703
    9. '_' → logprob: -17.625354766845703
    10. 'List' → logprob: -17.875354766845703

Token 62: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.126943439245224
    2. '.' → logprob: -2.126943349838257
    3. ' .' → logprob: -12.501943588256836
    4. '.app' → logprob: -12.626943588256836
    5. '.extend' → logprob: -13.001943588256836
    6. 'append' → logprob: -13.251943588256836
    7. '.Append' → logprob: -13.751943588256836
    8. '.insert' → logprob: -13.876943588256836
    9. '.ap' → logprob: -14.126943588256836
    10. '.push' → logprob: -14.626943588256836

Token 63: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.06196914613246918
    2. '(' → logprob: -2.811969041824341
    3. '(
' → logprob: -14.561968803405762
    4. ' (' → logprob: -14.686968803405762
    5. 't' → logprob: -15.311968803405762
    6. '((' → logprob: -15.561968803405762
    7. '(

' → logprob: -16.311969757080078
    8. '(T' → logprob: -17.561969757080078
    9. '(`' → logprob: -17.686969757080078
    10. '(int' → logprob: -17.936969757080078

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ')
' → logprob: -13.12500286102295
    3. ' )' → logprob: -14.12500286102295
    4. '))' → logprob: -17.000003814697266
    5. '   ' → logprob: -17.375003814697266
    6. ')

' → logprob: -18.375003814697266
    7. '),' → logprob: -18.875003814697266
    8. '}' → logprob: -19.000003814697266
    9. ')`' → logprob: -19.125003814697266
    10. '）' → logprob: -19.250003814697266

Token 65: '    
' (ID: 1944)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5264393091201782
    2. 's' → logprob: -1.9014393091201782
    3. '#' → logprob: -2.0264391899108887
    4. 'i' → logprob: -2.2764391899108887
    5. 'if' → logprob: -2.4014391899108887
    6. 'n' → logprob: -2.5264391899108887
    7. 'd' → logprob: -3.4014391899108887
    8. ',' → logprob: -3.5264391899108887
    9. 'm' → logprob: -3.6514391899108887
    10. ')' → logprob: -3.7764391899108887

Token 66: 'x' (ID: 87)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1157739162445068
    2. 's' → logprob: -1.6157739162445068
    3. '#' → logprob: -1.8657739162445068
    4. ')' → logprob: -2.740773916244507
    5. 'if' → logprob: -2.990773916244507
    6. 'n' → logprob: -3.490773916244507
    7. ',' → logprob: -3.740773916244507
    8. 'm' → logprob: -3.990773916244507
    9. 'i' → logprob: -3.990773916244507
    10. 'd' → logprob: -4.240774154663086

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1402028352022171
    2. '=' → logprob: -3.015202760696411
    3. '_' → logprob: -3.015202760696411
    4. 's' → logprob: -3.890202760696411
    5. 'or' → logprob: -5.14020299911499
    6. ',' → logprob: -7.14020299911499
    7. 'o' → logprob: -7.14020299911499
    8. 'y' → logprob: -7.26520299911499
    9. 'for' → logprob: -7.64020299911499
    10. 'list' → logprob: -8.015202522277832

Token 68: ' input' (ID: 3422)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.926037073135376
    2. 't' → logprob: -1.051037073135376
    3. 'max' → logprob: -1.926037073135376
    4. 'int' → logprob: -3.051037073135376
    5. 'sorted' → logprob: -3.551037073135376
    6. 'sum' → logprob: -4.551036834716797
    7. 's' → logprob: -5.051036834716797
    8. '0' → logprob: -5.301036834716797
    9. '[min' → logprob: -6.051036834716797
    10. 'len' → logprob: -7.051036834716797

Token 69: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018390359356999397
    2. '(' → logprob: -4.01839017868042
    3. '().' → logprob: -8.893390655517578
    4. ' ()' → logprob: -10.768390655517578
    5. ')' → logprob: -10.893390655517578
    6. '```' → logprob: -11.268390655517578
    7. '())' → logprob: -11.518390655517578
    8. '("")' → logprob: -12.018390655517578
    9. '("("' → logprob: -12.393390655517578
    10. '('' → logprob: -12.393390655517578

Token 70: 'try' (ID: 1806)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5801613330841064
    2. 'if' → logprob: -1.4551613330841064
    3. 'ans' → logprob: -2.5801613330841064
    4. 'print' → logprob: -2.7051613330841064
    5. 'idx' → logprob: -3.9551613330841064
    6. 'max' → logprob: -4.455161094665527
    7. 'result' → logprob: -4.705161094665527
    8. 'min' → logprob: -5.580161094665527
    9. 'i' → logprob: -5.705161094665527
    10. 'answer' → logprob: -5.705161094665527

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023393364972434938
    2. ' :' → logprob: -8.50023365020752
    3. ':
' → logprob: -10.50023365020752
    4. '：' → logprob: -14.37523365020752
    5. '   ' → logprob: -14.75023365020752
    6. '[' → logprob: -14.87523365020752
    7. '):' → logprob: -15.00023365020752
    8. ':**' → logprob: -15.25023365020752
    9. '{' → logprob: -16.000234603881836
    10. '[:]' → logprob: -16.000234603881836

Token 72: '   ' (ID: 271)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.7049062252044678
    2. 'idx' → logprob: -1.7049062252044678
    3. ' ind' → logprob: -2.2049062252044678
    4. ' t' → logprob: -2.4549062252044678
    5. '   ' → logprob: -3.0799062252044678
    6. 'index' → logprob: -3.9549062252044678
    7. ' index' → logprob: -4.204906463623047
    8. 't' → logprob: -4.329906463623047
    9. 'ind' → logprob: -4.829906463623047
    10. 's' → logprob: -5.204906463623047

Token 73: ' ind' (ID: 1383)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5001050233840942
    2. 'idx' → logprob: -1.7501050233840942
    3. ' i' → logprob: -1.8751050233840942
    4. 'i' → logprob: -3.2501049041748047
    5. ' index' → logprob: -4.625104904174805
    6. 'index' → logprob: -4.625104904174805
    7. ' t' → logprob: -5.875104904174805
    8. 's' → logprob: -6.625104904174805
    9. 'n' → logprob: -7.250104904174805
    10. 't' → logprob: -7.750104904174805

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43355852365493774
    2. 'ex' → logprob: -1.183558464050293
    3. '=' → logprob: -3.433558464050293
    4. 'x' → logprob: -5.058558464050293
    5. 's' → logprob: -5.058558464050293
    6. 'e' → logprob: -8.183558464050293
    7. ' ' → logprob: -8.808558464050293
    8. '_' → logprob: -10.058558464050293
    9. '=s' → logprob: -10.183558464050293
    10. 'ices' → logprob: -10.683558464050293

Token 75: ' sl' (ID: 1925)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8640467524528503
    2. ' sl' → logprob: -1.1140468120574951
    3. ' t' → logprob: -1.7390468120574951
    4. 't' → logprob: -2.614046812057495
    5. ' s' → logprob: -7.614046573638916
    6. 'sl' → logprob: -8.239047050476074
    7. '   ' → logprob: -8.614047050476074
    8. ' ' → logprob: -9.864047050476074
    9. '(s' → logprob: -9.989047050476074
    10. '[' → logprob: -10.114047050476074

Token 76: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -7.64839569455944e-05
    2. 'is' → logprob: -10.375076293945312
    3. 'st' → logprob: -10.375076293945312
    4. 'i' → logprob: -12.000076293945312
    5. 't' → logprob: -12.500076293945312
    6. 'index' → logprob: -14.250076293945312
    7. 'list' → logprob: -14.500076293945312
    8. 'ists' → logprob: -14.625076293945312
    9. 'it' → logprob: -14.750076293945312
    10. '   ' → logprob: -14.875076293945312

Token 77: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00011164903844473884
    2. '.' → logprob: -9.12511157989502
    3. 'index' → logprob: -13.25011157989502
    4. ' .' → logprob: -14.62511157989502
    5. '.Index' → logprob: -15.25011157989502
    6. '.ind' → logprob: -16.625112533569336
    7. '#index' → logprob: -17.250112533569336
    8. '.idx' → logprob: -17.500112533569336
    9. ' index' → logprob: -18.125112533569336
    10. '.i' → logprob: -18.375112533569336

Token 78: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06198897212743759
    2. '(x' → logprob: -2.8119890689849854
    3. '('' → logprob: -10.936988830566406
    4. '(
' → logprob: -13.311988830566406
    5. '("("' → logprob: -13.811988830566406
    6. '(xs' → logprob: -15.311988830566406
    7. '(s' → logprob: -15.936988830566406
    8. '((' → logprob: -16.061988830566406
    9. '()' → logprob: -16.311988830566406
    10. ' (' → logprob: -16.561988830566406

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ')
' → logprob: -13.25000286102295
    3. ' )' → logprob: -13.87500286102295
    4. ')

' → logprob: -17.125003814697266
    5. '))' → logprob: -17.125003814697266
    6. '),' → logprob: -17.875003814697266
    7. ')`' → logprob: -17.875003814697266
    8. '）' → logprob: -18.000003814697266
    9. '`)' → logprob: -18.250003814697266
    10. ')+' → logprob: -18.375003814697266

Token 80: 'except' (ID: 25035)
  Prédit: 'except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' → logprob: -0.5045278668403625
    2. '   ' → logprob: -1.8795278072357178
    3. ' except' → logprob: -2.0045278072357178
    4. ')' → logprob: -2.2545278072357178
    5. '<|end|>' → logprob: -7.129528045654297
    6. '    
' → logprob: -7.754528045654297
    7. ']' → logprob: -7.879528045654297
    8. '#' → logprob: -7.879528045654297
    9. 'print' → logprob: -8.129528045654297
    10. '	except' → logprob: -8.129528045654297

Token 81: ' Exception' (ID: 6851)
  Prédit: ' Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.009327230043709278
    2. 'Value' → logprob: -4.759327411651611
    3. '	Value' → logprob: -7.759327411651611
    4. ' ' → logprob: -8.884326934814453
    5. '(Value' → logprob: -9.759326934814453
    6. '.Value' → logprob: -10.884326934814453
    7. '<Value' → logprob: -11.009326934814453
    8. '_Value' → logprob: -11.384326934814453
    9. '<|end|>' → logprob: -11.509326934814453
    10. ' Val' → logprob: -11.884326934814453

Token 82: ' as' (ID: 472)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012610667385160923
    2. ' as' → logprob: -4.51261043548584
    3. ' :' → logprob: -6.51261043548584
    4. 'as' → logprob: -10.51261043548584
    5. ':
' → logprob: -11.13761043548584
    6. '[' → logprob: -11.76261043548584
    7. '   ' → logprob: -12.13761043548584
    8. '):' → logprob: -12.38761043548584
    9. ':**' → logprob: -13.01261043548584
    10. '：' → logprob: -13.13761043548584

Token 83: ' e' (ID: 319)
  Prédit: ' Name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Name' → logprob: -0.3550531268119812
    2. 'Name' → logprob: -1.730053186416626
    3. ' ' → logprob: -2.980053186416626
    4. '   ' → logprob: -3.980053186416626
    5. '  ' → logprob: -4.855052947998047
    6. 'Index' → logprob: -5.355052947998047
    7. ' Index' → logprob: -5.355052947998047
    8. ' Not' → logprob: -5.605052947998047
    9. '    ' → logprob: -5.980052947998047
    10. 'None' → logprob: -6.105052947998047

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.91732100979425e-05
    2. ' :' → logprob: -11.500039100646973
    3. ':**' → logprob: -11.500039100646973
    4. ':
' → logprob: -11.875039100646973
    5. '):' → logprob: -11.875039100646973
    6. ',' → logprob: -13.500039100646973
    7. ':return' → logprob: -14.125039100646973
    8. ' as' → logprob: -14.750039100646973
    9. '   ' → logprob: -15.250039100646973
    10. '[:]' → logprob: -15.250039100646973

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014133538119494915
    2. ' print' → logprob: -5.264133453369141
    3. '    ' → logprob: -6.014133453369141
    4. 'print' → logprob: -6.139133453369141
    5. ' pass' → logprob: -6.389133453369141
    6. '    
' → logprob: -6.514133453369141
    7. ' ind' → logprob: -8.51413345336914
    8. 'pass' → logprob: -9.38913345336914
    9. '```' → logprob: -9.51413345336914
    10. '0' → logprob: -9.88913345336914

Token 86: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4164174795150757
    2. '   ' → logprob: -1.4164174795150757
    3. 'pass' → logprob: -2.7914175987243652
    4. ' print' → logprob: -4.166417598724365
    5. 'ind' → logprob: -4.416417598724365
    6. ' pass' → logprob: -5.166417598724365
    7. ' ind' → logprob: -6.541417598724365
    8. '-' → logprob: -7.166417598724365
    9. '```' → logprob: -7.916417598724365
    10. 'continue' → logprob: -9.291417121887207

Token 87: ' not' (ID: 625)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.48969534039497375
    2. ' print' → logprob: -1.8646953105926514
    3. 'pass' → logprob: -2.2396953105926514
    4. ' pass' → logprob: -2.2396953105926514
    5. '   ' → logprob: -4.7396955490112305
    6. 'ind' → logprob: -5.2396955490112305
    7. ' ind' → logprob: -5.6146955490112305
    8. ' ' → logprob: -8.23969554901123
    9. 'pr' → logprob: -8.61469554901123
    10. 'p' → logprob: -9.36469554901123

Token 88: ' supposed' (ID: 18126)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.38867291808128357
    2. ' found' → logprob: -1.388672947883606
    3. ' pass' → logprob: -3.7636728286743164
    4. 'pass' → logprob: -4.013672828674316
    5. '_found' → logprob: -4.263672828674316
    6. 'Found' → logprob: -5.638672828674316
    7. 'print' → logprob: -5.888672828674316
    8. ' find' → logprob: -6.263672828674316
    9. 'find' → logprob: -6.388672828674316
    10. 'ind' → logprob: -6.388672828674316

Token 89: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.08655165135860443
    2. ' to' → logprob: -2.5865516662597656
    3. 'ed' → logprob: -5.461551666259766
    4. ')' → logprob: -6.586551666259766
    5. '   ' → logprob: -7.086551666259766
    6. '<|end|>' → logprob: -8.336551666259766
    7. '#' → logprob: -8.961551666259766
    8. '    ' → logprob: -9.211551666259766
    9. 'ind' → logprob: -9.211551666259766
    10. 'print' → logprob: -9.211551666259766

Token 90: ' happen' (ID: 5659)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.14399829506874084
    2. 'print' → logprob: -2.268998384475708
    3. 'occur' → logprob: -4.143998146057129
    4. 'h' → logprob: -4.518998146057129
    5. 'find' → logprob: -6.143998146057129
    6. 'be' → logprob: -7.518998146057129
    7. ' pass' → logprob: -8.268998146057129
    8. 'continue' → logprob: -8.643998146057129
    9. ' happen' → logprob: -8.768998146057129
    10. 'f' → logprob: -8.893998146057129

Token 91: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05120968818664551
    2. ' pass' → logprob: -3.4262096881866455
    3. 'pass' → logprob: -4.176209449768066
    4. '    ' → logprob: -7.301209449768066
    5. ':' → logprob: -7.926209449768066
    6. '	pass' → logprob: -8.176209449768066
    7. 'print' → logprob: -8.801209449768066
    8. ' ' → logprob: -9.051209449768066
    9. ' print' → logprob: -9.301209449768066
    10. '  ' → logprob: -9.801209449768066

Token 92: ' hey' (ID: 45233)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.05434263125061989
    2. '   ' → logprob: -3.929342746734619
    3. 'pass' → logprob: -3.929342746734619
    4. ' print' → logprob: -5.304342746734619
    5. ' continue' → logprob: -5.554342746734619
    6. ' ind' → logprob: -5.679342746734619
    7. 'ind' → logprob: -7.929342746734619
    8. '    ' → logprob: -7.929342746734619
    9. 'print' → logprob: -8.054342269897461
    10. 'continue' → logprob: -9.554342269897461

Token 93: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04713030904531479
    2. ' pass' → logprob: -3.5471303462982178
    3. 'pass' → logprob: -4.422130107879639
    4. 'print' → logprob: -6.172130107879639
    5. ' print' → logprob: -7.047130107879639
    6. 'ind' → logprob: -7.172130107879639
    7. ' ind' → logprob: -7.422130107879639
    8. '    ' → logprob: -9.047130584716797
    9. '	pass' → logprob: -9.297130584716797
    10. ':' → logprob: -9.297130584716797

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28020769357681274
    2. ' pass' → logprob: -2.155207633972168
    3. 'pass' → logprob: -2.530207633972168
    4. 'print' → logprob: -3.780207633972168
    5. ' print' → logprob: -4.655207633972168
    6. ' ind' → logprob: -4.780207633972168
    7. 'ind' → logprob: -5.030207633972168
    8. ' continue' → logprob: -8.155207633972168
    9. '```' → logprob: -8.155207633972168
    10. ' None' → logprob: -8.530207633972168

Token 95: ' ind' (ID: 1383)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.40879300236701965
    2. 'print' → logprob: -1.5337929725646973
    3. 'ind' (adapté à ' ind') → logprob: -2.2837929725646973
    4. '   ' → logprob: -4.283792972564697
    5. 'continue' → logprob: -5.908792972564697
    6. ' pass' → logprob: -7.283792972564697
    7. ' ind' → logprob: -9.033793449401855
    8. 'exit' → logprob: -9.283793449401855
    9. ' print' → logprob: -9.533793449401855
    10. 'import' → logprob: -9.533793449401855

Token 96: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2524831295013428
    2. ' =' → logprob: -1.5024831295013428
    3. '+=' → logprob: -8.127483367919922
    4. ' +=' → logprob: -9.127483367919922
    5. '+' → logprob: -10.002483367919922
    6. '<|end|>' → logprob: -10.252483367919922
    7. '=None' → logprob: -11.002483367919922
    8. ')' → logprob: -11.502483367919922
    9. '=
' → logprob: -11.502483367919922
    10. '   ' → logprob: -11.627483367919922

Token 97: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.033739060163497925
    2. ' -' → logprob: -3.5337390899658203
    3. '-n' → logprob: -6.28373908996582
    4. 'None' → logprob: -7.53373908996582
    5. 'n' → logprob: -7.65873908996582
    6. 'len' → logprob: -7.78373908996582
    7. ' n' → logprob: -9.03373908996582
    8. '0' → logprob: -9.03373908996582
    9. ' None' → logprob: -9.53373908996582
    10. ' len' → logprob: -9.90873908996582

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.570319702499546e-05
    2. '2' → logprob: -11.375025749206543
    3. ' ' → logprob: -11.625025749206543
    4. '100' → logprob: -14.437525749206543
    5. '-' → logprob: -14.625025749206543
    6. '１' → logprob: -14.625025749206543
    7. '10' → logprob: -14.812525749206543
    8. '111' → logprob: -14.937525749206543
    9. '0' → logprob: -15.125025749206543
    10. ' -' → logprob: -15.187525749206543

Token 99: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13332290947437286
    2. '<|end|>' → logprob: -2.8833229541778564
    3. 'print' → logprob: -3.1333229541778564
    4. '
' → logprob: -4.133322715759277
    5. ' if' → logprob: -5.133322715759277
    6. '#' → logprob: -6.633322715759277
    7. 'i' → logprob: -8.008322715759277
    8. '```' → logprob: -8.383322715759277
    9. ' 
' → logprob: -8.508322715759277
    10. '<|end|>' → logprob: -8.633322715759277

Token 100: 'res' (ID: 430)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14329934120178223
    2. 'print' → logprob: -2.0182993412017822
    3. 'i' → logprob: -8.393299102783203
    4. ' if' → logprob: -9.268299102783203
    5. 'for' → logprob: -9.393299102783203
    6. '#' → logprob: -10.018299102783203
    7. 'result' → logprob: -10.768299102783203
    8. 't' → logprob: -10.768299102783203
    9. '```' → logprob: -11.018299102783203
    10. 'output' → logprob: -11.268299102783203

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5251935720443726
    2. '=' → logprob: -0.9001935720443726
    3. 'ult' → logprob: -6.400193691253662
    4. 'ults' → logprob: -8.650193214416504
    5. 's' → logprob: -9.275193214416504
    6. ' ' → logprob: -10.650193214416504
    7. '_' → logprob: -10.775193214416504
    8. 'ault' → logprob: -10.900193214416504
    9. 'u' → logprob: -11.150193214416504
    10. ')' → logprob: -11.650193214416504

Token 102: ' ' (ID: 220)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3792191445827484
    2. 'max' → logprob: -2.3792190551757812
    3. '-' → logprob: -2.7542190551757812
    4. ' t' → logprob: -3.5042190551757812
    5. '0' → logprob: -3.5042190551757812
    6. 'sum' → logprob: -3.5042190551757812
    7. 'min' → logprob: -4.004219055175781
    8. '"' → logprob: -4.629219055175781
    9. ' max' → logprob: -4.629219055175781
    10. 'float' → logprob: -5.254219055175781

Token 103: '0' (ID: 15)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.46822887659072876
    2. '-' → logprob: -1.218228816986084
    3. 'max' → logprob: -3.218228816986084
    4. '0' → logprob: -4.218228816986084
    5. 'min' → logprob: -4.968228816986084
    6. 'sum' → logprob: -5.468228816986084
    7. '"' → logprob: -5.843228816986084
    8. '-t' → logprob: -6.343228816986084
    9. 'ind' → logprob: -6.468228816986084
    10. 'float' → logprob: -7.218228816986084

Token 104: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18151229619979858
    2. 'if' → logprob: -1.9315123558044434
    3. '
' → logprob: -4.681512355804443
    4. '<|end|>' → logprob: -4.931512355804443
    5. ' for' → logprob: -5.556512355804443
    6. ' if' → logprob: -7.931512355804443
    7. '<|end|>' → logprob: -9.431511878967285
    8. 'i' → logprob: -9.431511878967285
    9. 'while' → logprob: -10.181511878967285
    10. '+' → logprob: -10.431511878967285

Token 105: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009207114577293396
    2. 'if' → logprob: -4.759207248687744
    3. ' for' → logprob: -7.759207248687744
    4. '
' → logprob: -9.759206771850586
    5. '<|end|>' → logprob: -9.759206771850586
    6. 'i' → logprob: -10.259206771850586
    7. 'while' → logprob: -12.759206771850586
    8. ' if' → logprob: -12.884206771850586
    9. '```' → logprob: -13.009206771850586
    10. 'n' → logprob: -13.509206771850586

Token 106: ' kind' (ID: 3675)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025492381304502487
    2. 'if' → logprob: -3.7754924297332764
    3. ' for' → logprob: -6.275492191314697
    4. 'ind' → logprob: -8.275492668151855
    5. ' if' → logprob: -9.900492668151855
    6. 'while' → logprob: -10.900492668151855
    7. 'range' → logprob: -11.025492668151855
    8. 'res' → logprob: -12.150492668151855
    9. '#' → logprob: -12.900492668151855
    10. 'i' → logprob: -13.025492668151855

Token 107: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019289745017886162
    2. ' for' → logprob: -4.019289970397949
    3. 'x' → logprob: -7.894289970397949
    4. 'ind' → logprob: -8.39428997039795
    5. '#' → logprob: -9.01928997039795
    6. 'ex' → logprob: -9.51928997039795
    7. '=' → logprob: -9.64428997039795
    8. 'while' → logprob: -10.14428997039795
    9. 's' → logprob: -10.39428997039795
    10. '   ' → logprob: -10.51928997039795

Token 108: ' inefficient' (ID: 130986)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011390152387320995
    2. 'if' → logprob: -4.636390209197998
    3. ' for' → logprob: -6.511390209197998
    4. 'while' → logprob: -9.63638973236084
    5. ' if' → logprob: -11.26138973236084
    6. '#' → logprob: -11.63638973236084
    7. 'i' → logprob: -11.63638973236084
    8. '```' → logprob: -11.76138973236084
    9. 'range' → logprob: -11.76138973236084
    10. 'found' → logprob: -12.51138973236084

Token 109: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.301394023466855e-05
    2. 'if' → logprob: -10.750062942504883
    3. 'while' → logprob: -11.000062942504883
    4. ' for' → logprob: -11.625062942504883
    5. 'i' → logprob: -11.625062942504883
    6. 'res' → logprob: -13.125062942504883
    7. 'max' → logprob: -14.000062942504883
    8. 'min' → logprob: -14.625062942504883
    9. 'prev' → logprob: -14.750062942504883
    10. 'count' → logprob: -15.000062942504883

Token 110: ' could' (ID: 2023)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003206711495295167
    2. 'but' → logprob: -6.253206729888916
    3. ' for' → logprob: -7.378206729888916
    4. '#' → logprob: -8.003206253051758
    5. ' but' → logprob: -9.128206253051758
    6. 'i' → logprob: -9.253206253051758
    7. 'while' → logprob: -9.878206253051758
    8. 'res' → logprob: -10.753206253051758
    9. 'if' → logprob: -11.628206253051758
    10. '
' → logprob: -12.253206253051758

Token 111: ' slice' (ID: 30288)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3659015893936157
    2. 'be' → logprob: -1.4909015893936157
    3. ' be' → logprob: -3.115901470184326
    4. ' for' → logprob: -3.490901470184326
    5. '```' → logprob: -6.365901470184326
    6. 'range' → logprob: -6.865901470184326
    7. 'res' → logprob: -6.990901470184326
    8. 'ind' → logprob: -7.490901470184326
    9. '   ' → logprob: -7.740901470184326
    10. 'continue' → logprob: -8.115901947021484

Token 112: ' t' (ID: 260)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06088239699602127
    2. ' for' → logprob: -3.435882329940796
    3. 'if' → logprob: -3.685882329940796
    4. ' if' → logprob: -6.685882568359375
    5. 's' → logprob: -8.685882568359375
    6. 'range' → logprob: -9.310882568359375
    7. ')' → logprob: -9.685882568359375
    8. 'res' → logprob: -10.060882568359375
    9. 'start' → logprob: -11.060882568359375
    10. 'from' → logprob: -11.060882568359375

Token 113: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05937075614929199
    2. 'ist' → logprob: -3.309370756149292
    3. 'list' → logprob: -4.434370994567871
    4. 'or' → logprob: -5.434370994567871
    5. 'if' → logprob: -6.684370994567871
    6. '#' → logprob: -7.184370994567871
    7. ' for' → logprob: -7.184370994567871
    8. 'res' → logprob: -7.309370994567871
    9. 'r' → logprob: -8.559370994567871
    10. 't' → logprob: -8.684370994567871

Token 114: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009788630995899439
    2. 'if' → logprob: -7.375978946685791
    3. ' for' → logprob: -8.000978469848633
    4. 'i' → logprob: -12.500978469848633
    5. 'while' → logprob: -13.000978469848633
    6. '+' → logprob: -13.125978469848633
    7. 'ind' → logprob: -13.625978469848633
    8. 'start' → logprob: -13.750978469848633
    9. ')' → logprob: -14.000978469848633
    10. 'res' → logprob: -14.000978469848633

Token 115: ' but' (ID: 889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05381149798631668
    2. 'but' → logprob: -3.553811550140381
    3. '#' → logprob: -3.928811550140381
    4. ' but' → logprob: -6.553811550140381
    5. 'ind' → logprob: -6.803811550140381
    6. 'len' → logprob: -7.678811550140381
    7. ' for' → logprob: -7.803811550140381
    8. 'if' → logprob: -8.928811073303223
    9. 'start' → logprob: -9.053811073303223
    10. 'res' → logprob: -9.553811073303223

Token 116: ' let's' (ID: 35717)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05181453749537468
    2. '#' → logprob: -3.051814556121826
    3. ' for' → logprob: -5.801814556121826
    4. '```' → logprob: -9.551814079284668
    5. '
' → logprob: -10.176814079284668
    6. 'n' → logprob: -10.426814079284668
    7. '   ' → logprob: -11.551814079284668
    8. 'if' → logprob: -11.676814079284668
    9. ' #' → logprob: -11.926814079284668
    10. 'res' → logprob: -11.926814079284668

Token 117: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0039549171924591064
    2. ' for' → logprob: -5.628954887390137
    3. 'continue' → logprob: -9.003954887390137
    4. 'range' → logprob: -9.003954887390137
    5. '   ' → logprob: -10.003954887390137
    6. '#' → logprob: -11.003954887390137
    7. 'keep' → logprob: -11.378954887390137
    8. '```' → logprob: -11.503954887390137
    9. 'do' → logprob: -12.128954887390137
    10. ' range' → logprob: -12.253954887390137

Token 118: ' this' (ID: 495)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.368984107510187e-05
    2. ' for' → logprob: -11.000033378601074
    3. 'if' → logprob: -11.250033378601074
    4. 'range' → logprob: -13.625033378601074
    5. '```' → logprob: -14.125033378601074
    6. 'i' → logprob: -14.375033378601074
    7. 'from' → logprob: -15.000033378601074
    8. 'while' → logprob: -15.375033378601074
    9. 'n' → logprob: -16.12503433227539
    10. ')' → logprob: -16.25003433227539

Token 119: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00034177995985373855
    2. ' for' → logprob: -8.125341415405273
    3. 'if' → logprob: -10.625341415405273
    4. '<|end|>' → logprob: -11.000341415405273
    5. '
' → logprob: -13.625341415405273
    6. ')' → logprob: -13.750341415405273
    7. 'range' → logprob: -14.000341415405273
    8. '```' → logprob: -14.875341415405273
    9. '<|end|>' → logprob: -15.000341415405273
    10. 'from' → logprob: -15.750341415405273

Token 120: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004920298233628273
    2. 'if' → logprob: -7.625492095947266
    3. ' for' → logprob: -13.375492095947266
    4. 'i' → logprob: -13.625492095947266
    5. 'while' → logprob: -14.625492095947266
    6. '
' → logprob: -15.125492095947266
    7. '```' → logprob: -15.750492095947266
    8. 'n' → logprob: -16.125492095947266
    9. 'length' → logprob: -16.125492095947266
    10. 'from' → logprob: -16.750492095947266

Token 121: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6018503904342651
    2. ' i' → logprob: -0.8518503904342651
    3. ' idx' → logprob: -4.726850509643555
    4. 'idx' → logprob: -4.976850509643555
    5. 'ind' → logprob: -6.601850509643555
    6. '_i' → logprob: -6.601850509643555
    7. '_' → logprob: -6.851850509643555
    8. ' t' → logprob: -6.976850509643555
    9. ' ind' → logprob: -7.101850509643555
    10. ' val' → logprob: -7.351850509643555

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014483846724033356
    2. 'in' → logprob: -4.26448392868042
    3. ' ' → logprob: -8.639483451843262
    4. 'range' → logprob: -9.889483451843262
    5. ' range' → logprob: -10.639483451843262
    6. 's' → logprob: -11.014483451843262
    7. '  ' → logprob: -11.514483451843262
    8. ',' → logprob: -11.639483451843262
    9. 'n' → logprob: -11.764483451843262
    10. '   ' → logprob: -12.139483451843262

Token 123: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2520096004009247
    2. ' range' → logprob: -1.502009630203247
    3. 't' → logprob: -10.377009391784668
    4. ' t' → logprob: -11.252009391784668
    5. 's' → logprob: -11.502009391784668
    6. '(range' → logprob: -11.502009391784668
    7. ' ' → logprob: -12.627009391784668
    8. 'r' → logprob: -12.877009391784668
    9. 'rang' → logprob: -13.002009391784668
    10. '	range' → logprob: -13.377009391784668

Token 124: '(ind' (ID: 50964)
  Prédit: '(ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ind' → logprob: -0.147511824965477
    2. '(n' → logprob: -2.5225117206573486
    3. '(len' → logprob: -2.8975117206573486
    4. '(' → logprob: -6.397511959075928
    5. 'ind' → logprob: -10.77251148223877
    6. ' (' → logprob: -11.39751148223877
    7. '(s' → logprob: -11.39751148223877
    8. 'len' → logprob: -12.52251148223877
    9. ' ind' → logprob: -12.89751148223877
    10. '(indent' → logprob: -13.14751148223877

Token 125: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.87572181224823
    2. '+' → logprob: -1.12572181224823
    3. ' +' → logprob: -1.75072181224823
    4. ',n' → logprob: -2.7507219314575195
    5. ' ,' → logprob: -4.2507219314575195
    6. ',len' → logprob: -5.6257219314575195
    7. '   ' → logprob: -6.3757219314575195
    8. '+n' → logprob: -7.0007219314575195
    9. '):
' → logprob: -8.12572193145752
    10. '):' → logprob: -8.25072193145752

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002651503309607506
    2. ' ' → logprob: -8.250265121459961
    3. '
' → logprob: -14.125265121459961
    4. '```' → logprob: -14.250265121459961
    5. 'len' → logprob: -14.312765121459961
    6. '   ' → logprob: -14.562765121459961
    7. 'n' → logprob: -15.062765121459961
    8. '2' → logprob: -15.375265121459961
    9. '0' → logprob: -15.875265121459961
    10. '

' → logprob: -16.00026512145996

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09513620287179947
    2. ',n' → logprob: -2.7201361656188965
    3. ' ,' → logprob: -4.3451361656188965
    4. ',len' → logprob: -4.4701361656188965
    5. '   ' → logprob: -8.595136642456055
    6. '):' → logprob: -8.970136642456055
    7. 'n' → logprob: -9.970136642456055
    8. '):
' → logprob: -10.095136642456055
    9. 'len' → logprob: -10.345136642456055
    10. ' n' → logprob: -11.470136642456055

Token 128: ' len' (ID: 4631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010657379403710365
    2. ' n' → logprob: -5.26065731048584
    3. 'len' → logprob: -5.26065731048584
    4. ' len' → logprob: -8.76065731048584
    5. '   ' → logprob: -10.13565731048584
    6. ' ' → logprob: -12.13565731048584
    7. 'ind' → logprob: -12.76065731048584
    8. '	n' → logprob: -13.26065731048584
    9. ')' → logprob: -13.38565731048584
    10. '
' → logprob: -13.38565731048584

Token 129: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.000526107382029295
    2. '(' → logprob: -7.625525951385498
    3. 't' → logprob: -10.500526428222656
    4. ' (' → logprob: -12.500526428222656
    5. '(s' → logprob: -12.500526428222656
    6. '(
' → logprob: -13.500526428222656
    7. ' t' → logprob: -14.875526428222656
    8. ')' → logprob: -14.875526428222656
    9. 's' → logprob: -15.125526428222656
    10. ')t' → logprob: -15.500526428222656

Token 130: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005241583567112684
    2. 'ist' → logprob: -5.255241394042969
    3. ')' → logprob: -12.755241394042969
    4. 't' → logprob: -13.005241394042969
    5. '_list' → logprob: -13.880241394042969
    6. ' list' → logprob: -14.255241394042969
    7. 'List' → logprob: -15.380241394042969
    8. '   ' → logprob: -15.880241394042969
    9. 'lst' → logprob: -15.880241394042969
    10. '```' → logprob: -16.50524139404297

Token 131: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2064152956008911
    2. '):
' → logprob: -2.3314151763916016
    3. ')):' → logprob: -2.5814151763916016
    4. ')):
' → logprob: -4.331415176391602
    5. '))' → logprob: -8.831415176391602
    6. ' ):' → logprob: -9.081415176391602
    7. '):
' → logprob: -9.331415176391602
    8. ')' → logprob: -9.456415176391602
    9. ')):
' → logprob: -10.456415176391602
    10. '   ' → logprob: -11.081415176391602

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008268806152045727
    2. 'if' → logprob: -5.0082688331604
    3. ' if' → logprob: -6.8832688331604
    4. 'res' → logprob: -7.8832688331604
    5. ' res' → logprob: -10.133268356323242
    6. '```' → logprob: -10.258268356323242
    7. ' ' → logprob: -10.383268356323242
    8. '<|end|>' → logprob: -11.258268356323242
    9. '    
' → logprob: -11.758268356323242
    10. '	if' → logprob: -11.883268356323242

Token 133: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.032954223453998566
    2. 'res' (adapté à ' res') → logprob: -4.032954216003418
    3. '   ' → logprob: -4.282954216003418
    4. ' if' → logprob: -7.157954216003418
    5. ' ' → logprob: -10.157954216003418
    6. '```' → logprob: -10.532954216003418
    7. '	if' → logprob: -11.032954216003418
    8. '    
' → logprob: -11.032954216003418
    9. ' res' → logprob: -12.407954216003418
    10. '  ' → logprob: -12.782954216003418

Token 134: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.24098162353038788
    2. ' +=' → logprob: -1.6159815788269043
    3. '=' → logprob: -4.865981578826904
    4. ' =' → logprob: -4.990981578826904
    5. '+' → logprob: -7.240981578826904
    6. 'max' → logprob: -9.865982055664062
    7. '<' → logprob: -10.115982055664062
    8. '   ' → logprob: -10.490982055664062
    9. '>' → logprob: -10.740982055664062
    10. '=max' → logprob: -10.740982055664062

Token 135: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0006578696193173528
    2. ' t' → logprob: -7.37565803527832
    3. '   ' → logprob: -10.50065803527832
    4. '	t' → logprob: -14.12565803527832
    5. '(t' → logprob: -14.25065803527832
    6. ' ' → logprob: -14.75065803527832
    7. 'max' → logprob: -14.75065803527832
    8. '`t' → logprob: -14.87565803527832
    9. '  ' → logprob: -15.75065803527832
    10. '100' → logprob: -15.75065803527832

Token 136: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0002646735229063779
    2. 'ist' → logprob: -8.625265121459961
    3. '[i' → logprob: -9.750265121459961
    4. 'lst' → logprob: -11.375265121459961
    5. '[' → logprob: -12.000265121459961
    6. 'List' → logprob: -13.125265121459961
    7. '_list' → logprob: -13.375265121459961
    8. ' list' → logprob: -14.000265121459961
    9. 'ilist' → logprob: -14.500265121459961
    10. ')' → logprob: -14.750265121459961

Token 137: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010369796073064208
    2. '[' → logprob: -6.876037120819092
    3. ' [' → logprob: -13.501036643981934
    4. '[ind' → logprob: -13.876036643981934
    5. '[
' → logprob: -14.376036643981934
    6. '[idx' → logprob: -15.251036643981934
    7. '[s' → logprob: -15.626036643981934
    8. '[index' → logprob: -15.876036643981934
    9. '```' → logprob: -16.25103759765625
    10. '[int' → logprob: -16.37603759765625

Token 138: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006874383892863989
    2. ']' → logprob: -5.3818745613098145
    3. '])' → logprob: -7.1318745613098145
    4. ' )' → logprob: -7.2568745613098145
    5. '<|end|>' → logprob: -8.006874084472656
    6. ' if' → logprob: -8.756874084472656
    7. ')]' → logprob: -8.756874084472656
    8. ')
' → logprob: -11.131874084472656
    9. '>' → logprob: -11.506874084472656
    10. 'if' → logprob: -11.631874084472656

Token 139: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017755765293259174
    2. ' print' → logprob: -9.625177383422852
    3. ')' → logprob: -10.125177383422852
    4. 'if' → logprob: -10.625177383422852
    5. '
' → logprob: -10.750177383422852
    6. '<|end|>' → logprob: -11.250177383422852
    7. '```' → logprob: -12.000177383422852
    8. '#' → logprob: -13.875177383422852
    9. '(print' → logprob: -14.000177383422852
    10. '#print' → logprob: -14.375177383422852

Token 140: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048996202647686005
    2. '(res' → logprob: -3.0489962100982666
    3. '('' → logprob: -8.173995971679688
    4. '()' → logprob: -10.048995971679688
    5. '("("' → logprob: -10.173995971679688
    6. ' (' → logprob: -10.673995971679688
    7. '(`' → logprob: -12.173995971679688
    8. '(s' → logprob: -12.423995971679688
    9. 'res' → logprob: -12.548995971679688
    10. '(
' → logprob: -13.423995971679688

Token 141: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.250001907348633
    3. ')
' → logprob: -15.875001907348633
    4. ')`' → logprob: -16.375001907348633
    5. '`)' → logprob: -17.625001907348633
    6. '))' → logprob: -17.875001907348633
    7. '')' → logprob: -17.875001907348633
    8. ')#' → logprob: -18.250001907348633
    9. '")' → logprob: -18.875001907348633
    10. '+' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 139
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 47
Tokens correctement prédits (top 10): 87
Précision stricte (1ère position): 32.37%
Précision adaptée (1ère position): 33.81%
Précision (top 10): 62.59%
================================================================================
