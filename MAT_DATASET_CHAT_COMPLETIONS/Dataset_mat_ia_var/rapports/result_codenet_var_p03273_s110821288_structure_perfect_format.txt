================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
h, w = map(int, input().split())
k = []
h_remove = []
w_remove = []

for i in range(h):
    ls = input()
    if ls.count(".") == w:
        h_remove.append(i)
    k.append(ls)

for i in range(w):
    xx = ""
    for j in range(h):
        xx += k[j][i]
    if xx.count(".") == h:
        w_remove.append(i)

h_remove = set(h_remove)
w_remove = set(w_remove)

for i in range(h):
    if i in h_remove:
        continue
    ret = ""
    for j in range(w):
        if j in w_remove:
            continue
        ret += k[i][j]
    print(ret)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'h' (ID: 71)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' w' (ID: 286)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2384488582611084
    2. '=' → logprob: -1.6134488582611084
    3. ' =' → logprob: -4.8634490966796875
    4. ')' → logprob: -5.7384490966796875
    5. '```' → logprob: -7.6134490966796875
    6. '*' → logprob: -7.8634490966796875
    7. '.' → logprob: -8.238449096679688
    8. ':' → logprob: -8.363449096679688
    9. '[' → logprob: -8.988449096679688
    10. '_' → logprob: -9.613449096679688

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20209194719791412
    2. ' image' → logprob: -2.452091932296753
    3. ' h' → logprob: -3.077091932296753
    4. ' img' → logprob: -3.452091932296753
    5. ' map' → logprob: -4.952092170715332
    6. '0' → logprob: -5.952092170715332
    7. 'image' → logprob: -5.952092170715332
    8. 'map' → logprob: -6.577092170715332
    9. ' np' → logprob: -7.327092170715332
    10. ' input' → logprob: -7.327092170715332

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06916536390781403
    2. '(int' → logprob: -3.4441654682159424
    3. '(lambda' → logprob: -3.8191654682159424
    4. '(str' → logprob: -4.694165229797363
    5. '```' → logprob: -6.694165229797363
    6. '<|end|>' → logprob: -7.819165229797363
    7. '[int' → logprob: -8.069165229797363
    8. ')' → logprob: -8.319165229797363
    9. '(len' → logprob: -8.694165229797363
    10. '<int' → logprob: -8.819165229797363

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.016287608072161674
    2. '(' → logprob: -4.891287803649902
    3. ')' → logprob: -4.891287803649902
    4. 'input' → logprob: -7.516287803649902
    5. '(str' → logprob: -8.891287803649902
    6. '(raw' → logprob: -9.141287803649902
    7. '```' → logprob: -9.141287803649902
    8. ' input' → logprob: -10.266287803649902
    9. '(int' → logprob: -10.391287803649902
    10. '[input' → logprob: -10.766287803649902

Token 7: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4742639660835266
    2. 'input' → logprob: -0.9742639660835266
    3. '(input' → logprob: -9.099264144897461
    4. ')' → logprob: -9.599264144897461
    5. ',input' → logprob: -12.474264144897461
    6. ' )' → logprob: -13.849264144897461
    7. '=input' → logprob: -13.974264144897461
    8. '<input' → logprob: -15.099264144897461
    9. '[input' → logprob: -15.349264144897461
    10. '	input' → logprob: -15.849264144897461

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16288085281848907
    2. '())' → logprob: -2.2878808975219727
    3. '('' → logprob: -3.9128808975219727
    4. '().' → logprob: -4.037880897521973
    5. '(' → logprob: -5.162880897521973
    6. '(()' → logprob: -7.037880897521973
    7. '());' → logprob: -7.287880897521973
    8. '("' → logprob: -7.787880897521973
    9. '()>' → logprob: -7.787880897521973
    10. '(""))' → logprob: -8.037880897521973

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043472214019857347
    2. 'strip' → logprob: -7.750434875488281
    3. 'rstrip' → logprob: -13.000434875488281
    4. ' split' → logprob: -13.500434875488281
    5. '(split' → logprob: -15.375434875488281
    6. 'read' → logprob: -16.62543487548828
    7. ')' → logprob: -17.25043487548828
    8. 'startswith' → logprob: -17.37543487548828
    9. 'spl' → logprob: -17.75043487548828
    10. 'decode' → logprob: -18.75043487548828

Token 10: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5657400488853455
    2. ')' → logprob: -0.9407400488853455
    3. '))' → logprob: -3.4407401084899902
    4. '()' → logprob: -5.19074010848999
    5. '()))' → logprob: -5.69074010848999
    6. '('' → logprob: -8.315739631652832
    7. '`)' → logprob: -8.815739631652832
    8. '(' → logprob: -8.815739631652832
    9. '')' → logprob: -10.190739631652832
    10. ' ())' → logprob: -10.565739631652832

Token 11: 'k' (ID: 74)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9505304098129272
    2. ',' → logprob: -1.8255304098129272
    3. 'a' → logprob: -1.9505304098129272
    4. '#' → logprob: -1.9505304098129272
    5. ')' → logprob: -3.325530529022217
    6. 'r' → logprob: -4.075530529022217
    7. 'print' → logprob: -4.200530529022217
    8. 'for' → logprob: -4.450530529022217
    9. 'n' → logprob: -4.700530529022217
    10. 'm' → logprob: -4.700530529022217

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18854595720767975
    2. '=' → logprob: -1.8135459423065186
    3. ' ' → logprob: -5.188546180725098
    4. '+' → logprob: -6.688546180725098
    5. 'ernels' → logprob: -7.813546180725098
    6. 'ernel' → logprob: -8.063546180725098
    7. ',' → logprob: -8.438546180725098
    8. ' +=' → logprob: -8.688546180725098
    9. ')' → logprob: -8.813546180725098
    10. '_' → logprob: -9.188546180725098

Token 13: ' []
' (ID: 8911)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.8011987209320068
    2. 'h' → logprob: -1.9261987209320068
    3. 'int' → logprob: -2.426198720932007
    4. ' int' → logprob: -2.426198720932007
    5. '0' → logprob: -2.676198720932007
    6. ' min' → logprob: -2.926198720932007
    7. ' ' → logprob: -2.926198720932007
    8. 'min' → logprob: -3.676198720932007
    9. ' w' → logprob: -4.551198959350586
    10. 'w' → logprob: -5.176198959350586

Token 14: 'h' (ID: 71)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00445077009499073
    2. ' for' → logprob: -5.754450798034668
    3. '[' → logprob: -7.379450798034668
    4. 'k' → logprob: -8.379450798034668
    5. 'h' → logprob: -8.629450798034668
    6. '_' → logprob: -9.629450798034668
    7. 'f' → logprob: -10.754450798034668
    8. 'a' → logprob: -11.379450798034668
    9. '[]' → logprob: -11.504450798034668
    10. 'n' → logprob: -11.629450798034668

Token 15: '_remove' (ID: 41629)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3616718053817749
    2. '.' → logprob: -1.986671805381775
    3. ',' → logprob: -3.4866719245910645
    4. '<|end|>' → logprob: -3.4866719245910645
    5. ')' → logprob: -3.6116719245910645
    6. '-' → logprob: -3.9866719245910645
    7. ' ' → logprob: -4.4866719245910645
    8. '>' → logprob: -5.1116719245910645
    9. 'for' → logprob: -5.1116719245910645
    10. '=' → logprob: -5.2366719245910645

Token 16: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14364956319332123
    2. 'd' → logprob: -2.3936495780944824
    3. '=' → logprob: -4.768649578094482
    4. '[' → logprob: -4.893649578094482
    5. ' =' → logprob: -5.393649578094482
    6. '[]' → logprob: -5.518649578094482
    7. 'ed' → logprob: -5.893649578094482
    8. '_indices' → logprob: -6.143649578094482
    9. 'ing' → logprob: -6.393649578094482
    10. '_list' → logprob: -6.518649578094482

Token 17: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7834638953208923
    2. 'set' → logprob: -1.283463954925537
    3. ' []' → logprob: -2.158463954925537
    4. '0' → logprob: -2.283463954925537
    5. ' set' → logprob: -3.283463954925537
    6. '[' → logprob: -5.533463954925537
    7. ' ' → logprob: -5.908463954925537
    8. '[h' → logprob: -6.783463954925537
    9. '[int' → logprob: -7.283463954925537
    10. ' [' → logprob: -7.533463954925537

Token 18: 'w' (ID: 86)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017413699999451637
    2. ' for' → logprob: -4.14241361618042
    3. 'f' → logprob: -7.64241361618042
    4. ' ' → logprob: -8.267414093017578
    5. 'n' → logprob: -8.767414093017578
    6. '[' → logprob: -9.142414093017578
    7. '<|end|>' → logprob: -9.392414093017578
    8. 'r' → logprob: -10.517414093017578
    9. 'i' → logprob: -10.517414093017578
    10. 'd' → logprob: -10.517414093017578

Token 19: '_remove' (ID: 41629)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12915819883346558
    2. '_remove' → logprob: -2.2541582584381104
    3. ' _' → logprob: -5.379158020019531
    4. '[' → logprob: -6.129158020019531
    5. '<|end|>' → logprob: -6.254158020019531
    6. '[]' → logprob: -6.504158020019531
    7. ',' → logprob: -6.629158020019531
    8. '.' → logprob: -7.129158020019531
    9. ')' → logprob: -7.379158020019531
    10. '_append' → logprob: -7.754158020019531

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144100487232208
    2. '=' → logprob: -1.7014410495758057
    3. ',' → logprob: -11.951440811157227
    4. '=[]' → logprob: -12.076440811157227
    5. ' ' → logprob: -12.326440811157227
    6. '[]' → logprob: -12.701440811157227
    7. '[' → logprob: -12.951440811157227
    8. '_' → logprob: -13.326440811157227
    9. ')' → logprob: -13.701440811157227
    10. '[:]' → logprob: -14.201440811157227

Token 21: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.043048977851867676
    2. ' []' → logprob: -3.293048858642578
    3. 'set' → logprob: -5.543048858642578
    4. '[' → logprob: -7.168048858642578
    5. '[]
' → logprob: -8.918048858642578
    6. ' set' → logprob: -9.543048858642578
    7. ' ' → logprob: -9.918048858642578
    8. '0' → logprob: -10.293048858642578
    9. ' [' → logprob: -12.043048858642578
    10. '[]}' → logprob: -12.793048858642578

Token 22: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8670179997570813e-05
    2. ' for' → logprob: -11.125019073486328
    3. 'f' → logprob: -13.375019073486328
    4. 'n' → logprob: -14.125019073486328
    5. 'i' → logprob: -14.250019073486328
    6. '```' → logprob: -14.625019073486328
    7. 'h' → logprob: -16.750019073486328
    8. 'For' → logprob: -17.000019073486328
    9. 'a' → logprob: -17.000019073486328
    10. '`' → logprob: -17.250019073486328

Token 23: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13691094517707825
    2. ' ' → logprob: -2.261910915374756
    3. ' _' → logprob: -3.761910915374756
    4. 'i' → logprob: -8.136911392211914
    5. ' ‌' → logprob: -8.761911392211914
    6. '_' → logprob: -9.886911392211914
    7. '  ' → logprob: -10.761911392211914
    8. ' h' → logprob: -11.886911392211914
    9. ' x' → logprob: -12.011911392211914
    10. ' row' → logprob: -12.386911392211914

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09031540155410767
    2. 'in' → logprob: -2.465315341949463
    3. ' ' → logprob: -6.715315341949463
    4. 'n' → logprob: -9.215315818786621
    5. ' n' → logprob: -10.465315818786621
    6. '  ' → logprob: -11.215315818786621
    7. '	in' → logprob: -12.465315818786621
    8. '<|end|>' → logprob: -12.590315818786621
    9. 'range' → logprob: -12.965315818786621
    10. ',' → logprob: -13.090315818786621

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.313264399766922
    2. 'range' → logprob: -1.3132643699645996
    3. '	range' → logprob: -14.188264846801758
    4. '(range' → logprob: -14.438264846801758
    5. ' h' → logprob: -14.938264846801758
    6. ' ' → logprob: -15.813264846801758
    7. '_range' → logprob: -15.813264846801758
    8. '.range' → logprob: -15.938264846801758
    9. ' xrange' → logprob: -16.188264846801758
    10. '```' → logprob: -16.438264846801758

Token 26: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06309042125940323
    2. '(h' → logprob: -2.8130903244018555
    3. ' (' → logprob: -7.3130903244018555
    4. '(len' → logprob: -8.188090324401855
    5. '(n' → logprob: -9.063090324401855
    6. '(int' → logprob: -11.063090324401855
    7. '(s' → logprob: -11.813090324401855
    8. '(range' → logprob: -12.063090324401855
    9. '(length' → logprob: -12.438090324401855
    10. '(
' → logprob: -12.438090324401855

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.315936429426074e-05
    2. ')' → logprob: -9.875082969665527
    3. '):
' → logprob: -11.250082969665527
    4. ':' → logprob: -11.250082969665527
    5. '+' → logprob: -12.875082969665527
    6. ' ):' → logprob: -13.250082969665527
    7. ']:' → logprob: -15.375082969665527
    8. '-' → logprob: -15.500082969665527
    9. ''):' → logprob: -15.750082969665527
    10. '**' → logprob: -16.250083923339844

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04210055619478226
    2. 'k' → logprob: -4.292100429534912
    3. ' k' → logprob: -4.792100429534912
    4. '    ' → logprob: -5.417100429534912
    5. ' ' → logprob: -5.417100429534912
    6. '    
' → logprob: -5.792100429534912
    7. '```' → logprob: -5.792100429534912
    8. 'n' → logprob: -8.04210090637207
    9. ' t' → logprob: -8.16710090637207
    10. 'a' → logprob: -8.29210090637207

Token 29: ' ls' (ID: 41498)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.23434270918369293
    2. ' k' → logprob: -1.8593426942825317
    3. '   ' → logprob: -3.3593428134918213
    4. ' ' → logprob: -5.609342575073242
    5. 'data' → logprob: -6.234342575073242
    6. 'row' → logprob: -6.234342575073242
    7. 's' → logprob: -6.484342575073242
    8. 'x' → logprob: -6.609342575073242
    9. 't' → logprob: -7.109342575073242
    10. '_' → logprob: -7.109342575073242

Token 30: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3692258596420288
    2. ' =' → logprob: -1.6192258596420288
    3. '=' → logprob: -2.2442259788513184
    4. 's' → logprob: -6.619225978851318
    5. '_' → logprob: -6.744225978851318
    6. '=input' → logprob: -7.369225978851318
    7. ' ' → logprob: -8.11922550201416
    8. 'i' → logprob: -8.11922550201416
    9. '   ' → logprob: -8.61922550201416
    10. '.append' → logprob: -8.74422550201416

Token 31: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.17979790270328522
    2. ' list' → logprob: -1.804797887802124
    3. '[list' → logprob: -10.804798126220703
    4. ' [' → logprob: -11.679798126220703
    5. 'input' → logprob: -11.804798126220703
    6. '[]' → logprob: -12.054798126220703
    7. '[' → logprob: -12.054798126220703
    8. '=list' → logprob: -13.804798126220703
    9. ' []' → logprob: -13.804798126220703
    10. '	list' → logprob: -14.054798126220703

Token 32: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0036026788875460625
    2. '().' → logprob: -5.753602504730225
    3. '(' → logprob: -8.003602981567383
    4. '())' → logprob: -10.253602981567383
    5. '()>' → logprob: -10.878602981567383
    6. '('' → logprob: -11.253602981567383
    7. '("")' → logprob: -13.003602981567383
    8. ')' → logprob: -13.128602981567383
    9. '();' → logprob: -13.253602981567383
    10. '("("' → logprob: -13.253602981567383

Token 33: '   ' (ID: 271)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.0327100045979023
    2. '.' → logprob: -5.032710075378418
    3. '()' → logprob: -5.282710075378418
    4. '<|end|>' → logprob: -5.282710075378418
    5. '.readline' → logprob: -5.407710075378418
    6. ')' → logprob: -6.282710075378418
    7. '.strip' → logprob: -6.282710075378418
    8. '.tolist' → logprob: -6.407710075378418
    9. '.append' → logprob: -6.407710075378418
    10. '.readlines' → logprob: -7.157710075378418

Token 34: ' if' (ID: 538)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07354070246219635
    2. '.split' → logprob: -3.198540687561035
    3. '   ' → logprob: -4.573540687561035
    4. ')' → logprob: -5.323540687561035
    5. ' k' → logprob: -5.448540687561035
    6. '<|end|>' → logprob: -5.823540687561035
    7. '.append' → logprob: -6.448540687561035
    8. '[:]' → logprob: -7.198540687561035
    9. '.k' → logprob: -7.198540687561035
    10. '_k' → logprob: -7.323540687561035

Token 35: ' ls' (ID: 41498)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8777794241905212
    2. '"' → logprob: -1.002779483795166
    3. ' '' → logprob: -2.877779483795166
    4. ' ' → logprob: -3.127779483795166
    5. ' "' → logprob: -3.377779483795166
    6. ' ls' → logprob: -3.377779483795166
    7. 'ls' → logprob: -3.877779483795166
    8. ' len' → logprob: -4.627779483795166
    9. 'len' → logprob: -4.752779483795166
    10. ' not' → logprob: -6.252779483795166

Token 36: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.3575383722782135
    2. '.' → logprob: -1.3575383424758911
    3. '.find' → logprob: -3.9825384616851807
    4. '.startswith' → logprob: -4.357538223266602
    5. '[' → logprob: -5.732538223266602
    6. ' ==' → logprob: -6.357538223266602
    7. ' not' → logprob: -6.607538223266602
    8. ':' → logprob: -6.732538223266602
    9. ' in' → logprob: -6.732538223266602
    10. '==' → logprob: -7.607538223266602

Token 37: '(".' (ID: 10507)
  Prédit: '('#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('#' → logprob: -0.25266456604003906
    2. '("#' → logprob: -2.252664566040039
    3. '('' → logprob: -2.627664566040039
    4. '(' → logprob: -3.502664566040039
    5. '('*' → logprob: -4.752664566040039
    6. '("' → logprob: -5.877664566040039
    7. '('.')' → logprob: -6.002664566040039
    8. '("*' → logprob: -6.877664566040039
    9. '('@' → logprob: -8.377664566040039
    10. '(".' → logprob: -8.752664566040039

Token 38: '")' (ID: 1405)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6973333358764648
    2. '")' → logprob: -1.1973333358764648
    3. ')' → logprob: -1.6973333358764648
    4. '"#' → logprob: -4.447333335876465
    5. '.' → logprob: -6.447333335876465
    6. '"' → logprob: -7.197333335876465
    7. ')#' → logprob: -7.447333335876465
    8. '')' → logprob: -7.822333335876465
    9. '")==' → logprob: -7.947333335876465
    10. '".' → logprob: -8.197333335876465

Token 39: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20676465332508087
    2. ' >' → logprob: -3.0817646980285645
    3. '==' → logprob: -3.0817646980285645
    4. ' <' → logprob: -3.2067646980285645
    5. '<' → logprob: -3.9567646980285645
    6. '>' → logprob: -4.3317646980285645
    7. ')' → logprob: -5.2067646980285645
    8. ' >=' → logprob: -5.3317646980285645
    9. ' <=' → logprob: -5.4567646980285645
    10. ' !=' → logprob: -5.8317646980285645

Token 40: ' w' (ID: 286)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7576802968978882
    2. 'w' → logprob: -1.6326802968978882
    3. ' w' → logprob: -1.8826802968978882
    4. ' ' → logprob: -2.0076804161071777
    5. ' h' → logprob: -4.007680416107178
    6. 'h' → logprob: -4.507680416107178
    7. 'len' → logprob: -4.507680416107178
    8. ' len' → logprob: -4.757680416107178
    9. ' k' → logprob: -9.13267993927002
    10. 'k' → logprob: -9.25767993927002

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16115336120128632
    2. ' :' → logprob: -1.9111533164978027
    3. '):' → logprob: -7.536153316497803
    4. ' and' → logprob: -9.286153793334961
    5. ' ' → logprob: -9.661153793334961
    6. ' or' → logprob: -9.786153793334961
    7. ')' → logprob: -9.911153793334961
    8. ' ):' → logprob: -10.286153793334961
    9. '.' → logprob: -10.911153793334961
    10. ',' → logprob: -11.036153793334961

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.324428915977478
    2. '   ' → logprob: -1.324428915977478
    3. ' continue' → logprob: -5.199429035186768
    4. '    ' → logprob: -5.574429035186768
    5. ' k' → logprob: -7.199429035186768
    6. 'k' → logprob: -7.949429035186768
    7. ' h' → logprob: -8.69942855834961
    8. 'continue' → logprob: -9.07442855834961
    9. ' `' → logprob: -9.69942855834961
    10. '        ' → logprob: -10.07442855834961

Token 43: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.06693200021982193
    2. 'h' (adapté à ' h') → logprob: -2.816931962966919
    3. '   ' → logprob: -5.816932201385498
    4. ' continue' → logprob: -6.316932201385498
    5. 'continue' → logprob: -10.06693172454834
    6. '	h' → logprob: -10.19193172454834
    7. '       ' → logprob: -10.81693172454834
    8. ' ' → logprob: -10.94193172454834
    9. ' w' → logprob: -11.19193172454834
    10. '    ' → logprob: -11.69193172454834

Token 44: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -3.8889261304575484e-06
    2. 'remove' → logprob: -13.750003814697266
    3. '_replace' → logprob: -14.000003814697266
    4. '_rem' → logprob: -14.375003814697266
    5. '_continue' → logprob: -14.750003814697266
    6. '_append' → logprob: -15.375003814697266
    7. '_' → logprob: -15.500003814697266
    8. '_removed' → logprob: -15.875003814697266
    9. '_REMOVE' → logprob: -16.250003814697266
    10. '_keep' → logprob: -17.000003814697266

Token 45: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0025341638829559088
    2. '.' → logprob: -6.00253438949585
    3. '.add' → logprob: -10.627533912658691
    4. '.extend' → logprob: -11.002533912658691
    5. '.app' → logprob: -12.377533912658691
    6. ' .' → logprob: -12.752533912658691
    7. '.push' → logprob: -12.877533912658691
    8. '.Append' → logprob: -13.002533912658691
    9. '.ap' → logprob: -13.252533912658691
    10. '.setdefault' → logprob: -13.377533912658691

Token 46: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.500075340270996
    3. 'i' → logprob: -15.375075340270996
    4. '(
' → logprob: -17.12507438659668
    5. '((' → logprob: -17.87507438659668
    6. '(len' → logprob: -18.25007438659668
    7. ' (' → logprob: -18.62507438659668
    8. '(

' → logprob: -19.50007438659668
    9. '(a' → logprob: -19.62507438659668
    10. '(I' → logprob: -20.00007438659668

Token 47: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. ')
' → logprob: -12.625004768371582
    3. ' )' → logprob: -13.875004768371582
    4. '))' → logprob: -15.625004768371582
    5. '   ' → logprob: -16.750003814697266
    6. '),' → logprob: -17.125003814697266
    7. '`)' → logprob: -17.750003814697266
    8. ')return' → logprob: -18.000003814697266
    9. ')#' → logprob: -18.000003814697266
    10. ')

' → logprob: -18.125003814697266

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003916207235306501
    2. 'else' → logprob: -6.128916263580322
    3. ' else' → logprob: -6.503916263580322
    4. ' ' → logprob: -9.378915786743164
    5. 'k' → logprob: -10.878915786743164
    6. '<|end|>' → logprob: -10.878915786743164
    7. '	else' → logprob: -11.003915786743164
    8. '    
' → logprob: -11.378915786743164
    9. ',' → logprob: -11.503915786743164
    10. ')' → logprob: -11.628915786743164

Token 49: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03463498875498772
    2. 'k' (adapté à ' k') → logprob: -3.909635066986084
    3. 'else' → logprob: -4.659635066986084
    4. ' else' → logprob: -5.659635066986084
    5. ' ' → logprob: -7.284635066986084
    6. ' k' → logprob: -9.909634590148926
    7. '  ' → logprob: -9.909634590148926
    8. 's' → logprob: -10.159634590148926
    9. '```' → logprob: -10.784634590148926
    10. '-' → logprob: -10.784634590148926

Token 50: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10027341544628143
    2. '.' → logprob: -2.350273370742798
    3. ' .' → logprob: -9.975273132324219
    4. '.extend' → logprob: -11.600273132324219
    5. 'append' → logprob: -12.725273132324219
    6. '.push' → logprob: -12.975273132324219
    7. '.app' → logprob: -12.975273132324219
    8. '.ap' → logprob: -13.475273132324219
    9. '.add' → logprob: -15.350273132324219
    10. '_append' → logprob: -15.475273132324219

Token 51: '(ls' (ID: 128476)
  Prédit: '(ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -0.0009209888521581888
    2. '(' → logprob: -7.25092077255249
    3. '(list' → logprob: -8.500921249389648
    4. 'ls' → logprob: -12.375921249389648
    5. '((' → logprob: -14.250921249389648
    6. '(lst' → logprob: -14.375921249389648
    7. '(str' → logprob: -14.500921249389648
    8. '(
' → logprob: -15.125921249389648
    9. '(len' → logprob: -15.625921249389648
    10. '(li' → logprob: -15.875921249389648

Token 52: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. '))' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.875001907348633
    4. ')
' → logprob: -15.125001907348633
    5. '')' → logprob: -15.875001907348633
    6. ')`' → logprob: -16.625001907348633
    7. '")' → logprob: -16.875001907348633
    8. '`)' → logprob: -17.000001907348633
    9. '[' → logprob: -18.125001907348633
    10. '),' → logprob: -18.250001907348633

Token 53: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007379092741757631
    2. ' for' → logprob: -5.507379055023193
    3. 'w' → logprob: -6.007379055023193
    4. 'n' → logprob: -8.507379531860352
    5. '```' → logprob: -8.632379531860352
    6. '#' → logprob: -9.007379531860352
    7. '<|end|>' → logprob: -9.007379531860352
    8. '
' → logprob: -10.257379531860352
    9. ' ' → logprob: -10.882379531860352
    10. 'i' → logprob: -11.132379531860352

Token 54: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09203367680311203
    2. 'i' → logprob: -2.467033624649048
    3. ' j' → logprob: -6.467033863067627
    4. ' w' → logprob: -7.717033863067627
    5. ' ' → logprob: -8.217033386230469
    6. 'j' → logprob: -8.592033386230469
    7. 'w' → logprob: -8.967033386230469
    8. '_' → logprob: -8.967033386230469
    9. ' h' → logprob: -9.467033386230469
    10. '```' → logprob: -9.467033386230469

Token 55: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.694091796875
    2. ' in' → logprob: -0.694091796875
    3. ' ' → logprob: -7.444091796875
    4. '_' → logprob: -8.694091796875
    5. '_in' → logprob: -10.319091796875
    6. '   ' → logprob: -10.694091796875
    7. '  ' → logprob: -10.819091796875
    8. '(' → logprob: -10.819091796875
    9. ' _' → logprob: -10.944091796875
    10. 'not' → logprob: -11.194091796875

Token 56: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6209163069725037
    2. 'range' → logprob: -0.8709163069725037
    3. 'h' → logprob: -3.9959163665771484
    4. ' h' → logprob: -3.9959163665771484
    5. 'w' → logprob: -5.370916366577148
    6. ' w' → logprob: -6.120916366577148
    7. 'k' → logprob: -8.995916366577148
    8. ' k' → logprob: -9.370916366577148
    9. 'r' → logprob: -10.620916366577148
    10. ' ' → logprob: -10.745916366577148

Token 57: '(w' (ID: 7420)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.027017051354050636
    2. '(len' → logprob: -4.027017116546631
    3. '(' → logprob: -5.027017116546631
    4. '(w' → logprob: -6.402017116546631
    5. 'h' → logprob: -7.652017116546631
    6. 'len' → logprob: -9.902016639709473
    7. '(k' → logprob: -10.277016639709473
    8. 'w' → logprob: -10.777016639709473
    9. ' (' → logprob: -12.027016639709473
    10. '((' → logprob: -12.402016639709473

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013231287710368633
    2. '):
' → logprob: -4.51323127746582
    3. ')' → logprob: -6.13823127746582
    4. '):
' → logprob: -12.01323127746582
    5. ' ):' → logprob: -12.26323127746582
    6. ':' → logprob: -12.26323127746582
    7. '):

' → logprob: -12.76323127746582
    8. '   ' → logprob: -13.13823127746582
    9. 'w' → logprob: -15.51323127746582
    10. ' ' → logprob: -15.63823127746582

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9094468951225281
    2. 'count' → logprob: -1.5344469547271729
    3. 'w' → logprob: -1.7844469547271729
    4. 'if' → logprob: -1.9094469547271729
    5. '.' → logprob: -3.909446954727173
    6. 'col' → logprob: -4.284446716308594
    7. 'column' → logprob: -4.534446716308594
    8. 'cnt' → logprob: -5.284446716308594
    9. 'c' → logprob: -5.534446716308594
    10. 'j' → logprob: -6.409446716308594

Token 60: ' xx' (ID: 44242)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.4870375692844391
    2. 'cnt' → logprob: -1.8620375394821167
    3. 'c' → logprob: -2.4870376586914062
    4. 'count' → logprob: -2.6120376586914062
    5. 'column' → logprob: -3.7370376586914062
    6. 'if' → logprob: -4.737037658691406
    7. 's' → logprob: -4.987037658691406
    8. 'all' → logprob: -4.987037658691406
    9. ' col' → logprob: -5.737037658691406
    10. 'w' → logprob: -5.737037658691406

Token 61: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07032451778650284
    2. ' =' → logprob: -2.695324420928955
    3. ' ' → logprob: -8.820324897766113
    4. 'f' → logprob: -10.195324897766113
    5. '_count' → logprob: -10.570324897766113
    6. 'w' → logprob: -10.570324897766113
    7. '_remove' → logprob: -10.820324897766113
    8. 'count' → logprob: -10.945324897766113
    9. 'if' → logprob: -10.945324897766113
    10. '   ' → logprob: -10.945324897766113

Token 62: ' ""
' (ID: 18061)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.823412299156189
    2. 'all' → logprob: -1.198412299156189
    3. '0' → logprob: -1.823412299156189
    4. '"' → logprob: -3.3234124183654785
    5. ' True' → logprob: -4.4484124183654785
    6. 'False' → logprob: -4.6984124183654785
    7. ' all' → logprob: -4.6984124183654785
    8. '""' → logprob: -4.8234124183654785
    9. '[' → logprob: -5.1984124183654785
    10. 'sum' → logprob: -5.5734124183654785

Token 63: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006458262912929058
    2. ' for' → logprob: -5.256458282470703
    3. '   ' → logprob: -7.006458282470703
    4. '
' → logprob: -8.131458282470703
    5. ' ' → logprob: -12.506458282470703
    6. '    
' → logprob: -12.631458282470703
    7. 'x' → logprob: -12.756458282470703
    8. 'all' → logprob: -13.256458282470703
    9. '```' → logprob: -13.506458282470703
    10. 'if' → logprob: -13.631458282470703

Token 64: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.15441757265944e-05
    2. ' for' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.500031471252441
    4. 'f' → logprob: -16.125032424926758
    5. '
' → logprob: -17.250032424926758
    6. 'x' → logprob: -18.750032424926758
    7. 'flag' → logprob: -18.875032424926758
    8. 'j' → logprob: -19.000032424926758
    9. 'if' → logprob: -19.000032424926758
    10. '	for' → logprob: -19.500032424926758

Token 65: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0019756227266043425
    2. ' j' → logprob: -6.2519755363464355
    3. 'row' → logprob: -10.876976013183594
    4. 'r' → logprob: -11.751976013183594
    5. 'x' → logprob: -12.001976013183594
    6. 'h' → logprob: -12.876976013183594
    7. 'jj' → logprob: -13.376976013183594
    8. '```' → logprob: -13.501976013183594
    9. 'i' → logprob: -13.751976013183594
    10. 'ls' → logprob: -13.751976013183594

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004633995704352856
    2. 'in' → logprob: -5.379633903503418
    3. 'range' → logprob: -11.379633903503418
    4. ' ' → logprob: -13.879633903503418
    5. '<|end|>' → logprob: -14.254633903503418
    6. ' range' → logprob: -15.004633903503418
    7. 'n' → logprob: -16.379634857177734
    8. 'In' → logprob: -16.629634857177734
    9. '	in' → logprob: -16.879634857177734
    10. '  ' → logprob: -17.254634857177734

Token 67: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38687604665756226
    2. ' range' → logprob: -1.136876106262207
    3. ' h' → logprob: -13.136876106262207
    4. 'k' → logprob: -13.511876106262207
    5. 'h' → logprob: -14.136876106262207
    6. ' k' → logprob: -14.886876106262207
    7. '(range' → logprob: -15.011876106262207
    8. '	range' → logprob: -16.51187515258789
    9. ' xrange' → logprob: -16.51187515258789
    10. ' ' → logprob: -17.01187515258789

Token 68: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0001427538663847372
    2. 'h' → logprob: -9.250143051147461
    3. '(' → logprob: -10.375143051147461
    4. '(range' → logprob: -11.750143051147461
    5. 'range' → logprob: -12.000143051147461
    6. '(len' → logprob: -14.500143051147461
    7. '(w' → logprob: -14.750143051147461
    8. ' h' → logprob: -15.875143051147461
    9. ' range' → logprob: -15.875143051147461
    10. '(k' → logprob: -15.875143051147461

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20271100103855133
    2. '):
' → logprob: -1.7027109861373901
    3. ')' → logprob: -6.70271110534668
    4. '):
' → logprob: -10.57771110534668
    5. ':' → logprob: -10.95271110534668
    6. '):

' → logprob: -11.45271110534668
    7. '   ' → logprob: -11.70271110534668
    8. ' ):' → logprob: -13.32771110534668
    9. ' ):
' → logprob: -14.07771110534668
    10. ',' → logprob: -14.20271110534668

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017547931522130966
    2. ' xx' → logprob: -4.767548084259033
    3. 'xx' → logprob: -5.017548084259033
    4. '   ' → logprob: -6.142548084259033
    5. ' ' → logprob: -10.142547607421875
    6. ' if' → logprob: -11.267547607421875
    7. 'if' → logprob: -11.392547607421875
    8. '(xx' → logprob: -11.892547607421875
    9. '      ' → logprob: -12.017547607421875
    10. 'x' → logprob: -12.142547607421875

Token 71: ' xx' (ID: 44242)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' (adapté à ' xx') → logprob: -0.0011865380220115185
    2. ' xx' → logprob: -7.251186370849609
    3. '           ' → logprob: -7.751186370849609
    4. '   ' → logprob: -10.50118637084961
    5. '       ' → logprob: -11.25118637084961
    6. ' ' → logprob: -13.37618637084961
    7. '               ' → logprob: -13.37618637084961
    8. 'if' → logprob: -14.12618637084961
    9. '          ' → logprob: -14.62618637084961
    10. '(xx' → logprob: -15.12618637084961

Token 72: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001990255434066057
    2. ' +=' → logprob: -6.25199031829834
    3. '+' → logprob: -9.87699031829834
    4. ']+=' → logprob: -12.50199031829834
    5. '+='' → logprob: -12.87699031829834
    6. '+=(' → logprob: -13.12699031829834
    7. '=' → logprob: -14.25199031829834
    8. '+="' → logprob: -14.50199031829834
    9. '.append' → logprob: -14.50199031829834
    10. 'append' → logprob: -16.126989364624023

Token 73: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015030752401798964
    2. ' k' → logprob: -6.501502990722656
    3. '   ' → logprob: -14.876502990722656
    4. ' ' → logprob: -15.001502990722656
    5. '  ' → logprob: -17.126502990722656
    6. 'kx' → logprob: -17.751502990722656
    7. '    ' → logprob: -18.001502990722656
    8. '(k' → logprob: -18.501502990722656
    9. '"k' → logprob: -18.626502990722656
    10. '{k' → logprob: -18.876502990722656

Token 74: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.2200749754119897e-06
    2. 'j' → logprob: -13.375001907348633
    3. '[' → logprob: -15.250001907348633
    4. '```' → logprob: -15.250001907348633
    5. '[k' → logprob: -16.000001907348633
    6. '[i' → logprob: -16.750001907348633
    7. '[
' → logprob: -18.625001907348633
    8. '\[' → logprob: -19.250001907348633
    9. ' [' → logprob: -19.500001907348633
    10. '
' → logprob: -19.625001907348633

Token 75: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0054556094110012054
    2. '][' → logprob: -5.380455493927002
    3. '[' → logprob: -7.130455493927002
    4. ']' → logprob: -11.88045597076416
    5. ' [' → logprob: -12.25545597076416
    6. '[j' → logprob: -12.25545597076416
    7. '[
' → logprob: -12.75545597076416
    8. '"][' → logprob: -12.88045597076416
    9. ' ' → logprob: -13.13045597076416
    10. '[I' → logprob: -13.13045597076416

Token 76: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.935296834039036e-06
    2. ' i' → logprob: -12.75000286102295
    3. ' ' → logprob: -21.125003814697266
    4. '[i' → logprob: -21.875003814697266
    5. '	i' → logprob: -22.250003814697266
    6. '{i' → logprob: -23.125003814697266
    7. ''i' → logprob: -23.125003814697266
    8. ')i' → logprob: -23.250003814697266
    9. '<|end|>' → logprob: -23.625003814697266
    10. '*i' → logprob: -23.750003814697266

Token 77: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001975802006199956
    2. '])' → logprob: -9.500197410583496
    3. ' ]' → logprob: -9.750197410583496
    4. ')' → logprob: -10.375197410583496
    5. ']
' → logprob: -11.000197410583496
    6. ')]' → logprob: -11.125197410583496
    7. '']' → logprob: -14.500197410583496
    8. ']

' → logprob: -15.000197410583496
    9. '"]' → logprob: -15.500197410583496
    10. '`]' → logprob: -16.000198364257812

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04366298392415047
    2. 'if' → logprob: -3.2936630249023438
    3. ' if' → logprob: -5.293663024902344
    4. '    
' → logprob: -8.168663024902344
    5. '
' → logprob: -8.418663024902344
    6. '  ' → logprob: -11.043663024902344
    7. ' ' → logprob: -11.043663024902344
    8. '        
' → logprob: -11.293663024902344
    9. '  
' → logprob: -11.418663024902344
    10. '```' → logprob: -12.293663024902344

Token 79: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21889148652553558
    2. '   ' → logprob: -1.8438915014266968
    3. ' if' → logprob: -3.4688913822174072
    4. '.' → logprob: -4.968891620635986
    5. '    
' → logprob: -9.718891143798828
    6. ' ' → logprob: -9.968891143798828
    7. '.
' → logprob: -10.343891143798828
    8. '```' → logprob: -10.718891143798828
    9. '  ' → logprob: -10.843891143798828
    10. 'i' → logprob: -10.843891143798828

Token 80: ' xx' (ID: 44242)
  Prédit: ' xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xx' → logprob: -0.10135375708341599
    2. 'xx' → logprob: -2.351353645324707
    3. '"' → logprob: -8.226353645324707
    4. ' "."' → logprob: -8.476353645324707
    5. '(xx' → logprob: -8.601353645324707
    6. '"."' → logprob: -8.726353645324707
    7. 'x' → logprob: -9.601353645324707
    8. '.xx' → logprob: -9.726353645324707
    9. ' x' → logprob: -10.101353645324707
    10. '"x' → logprob: -10.601353645324707

Token 81: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.0016130544245243073
    2. '.' → logprob: -6.751613140106201
    3. '==' → logprob: -8.501612663269043
    4. 'count' → logprob: -9.001612663269043
    5. ' ==' → logprob: -9.126612663269043
    6. '.replace' → logprob: -12.751612663269043
    7. ' .' → logprob: -13.126612663269043
    8. '   ' → logprob: -14.251612663269043
    9. '.find' → logprob: -14.876612663269043
    10. '...' → logprob: -15.251612663269043

Token 82: '(".' (ID: 10507)
  Prédit: '(".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(".' → logprob: -0.004602080676704645
    2. '('.')' → logprob: -5.879601955413818
    3. '".' → logprob: -7.254601955413818
    4. '("#' → logprob: -7.629601955413818
    5. '(' → logprob: -8.004602432250977
    6. '"."' → logprob: -8.754602432250977
    7. '.' → logprob: -11.129602432250977
    8. '("*' → logprob: -11.129602432250977
    9. '("")' → logprob: -11.504602432250977
    10. '()' → logprob: -11.754602432250977

Token 83: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5255534052848816
    2. '")' → logprob: -0.9005534052848816
    3. '"' → logprob: -6.650553226470947
    4. '==' → logprob: -7.525553226470947
    5. '')' → logprob: -8.900553703308105
    6. '#' → logprob: -9.400553703308105
    7. '=' → logprob: -9.400553703308105
    8. '")==' → logprob: -9.900553703308105
    9. '""' → logprob: -10.025553703308105
    10. ' )' → logprob: -10.275553703308105

Token 84: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2553742527961731
    2. ' ==' → logprob: -1.5053741931915283
    3. '=' → logprob: -6.380374431610107
    4. ')' → logprob: -6.755374431610107
    5. ' ' → logprob: -8.13037395477295
    6. ' =' → logprob: -10.13037395477295
    7. '<' → logprob: -10.38037395477295
    8. '"' → logprob: -10.38037395477295
    9. '!=' → logprob: -10.50537395477295
    10. '>' → logprob: -10.63037395477295

Token 85: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.049946725368499756
    2. ' h' → logprob: -3.0499467849731445
    3. 'w' → logprob: -6.6749467849731445
    4. ' w' → logprob: -9.424946784973145
    5. ' ' → logprob: -11.799946784973145
    6. '0' → logprob: -13.049946784973145
    7. '   ' → logprob: -13.299946784973145
    8. 'len' → logprob: -13.799946784973145
    9. '	h' → logprob: -14.174946784973145
    10. '"h' → logprob: -14.174946784973145

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.037653062492609024
    2. ':
' → logprob: -3.4126529693603516
    3. '   ' → logprob: -6.162652969360352
    4. '):' → logprob: -7.412652969360352
    5. '):
' → logprob: -7.787652969360352
    6. ' :' → logprob: -8.162652969360352
    7. ')' → logprob: -8.287652969360352
    8. ' :
' → logprob: -9.412652969360352
    9. ' w' → logprob: -9.537652969360352
    10. '       ' → logprob: -9.912652969360352

Token 87: '       ' (ID: 309)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7316387891769409
    2. ' w' → logprob: -1.356638789176941
    3. '       ' → logprob: -1.731638789176941
    4. '   ' → logprob: -2.4816389083862305
    5. '	w' → logprob: -8.73163890838623
    6. '    ' → logprob: -8.85663890838623
    7. '  ' → logprob: -8.98163890838623
    8. ' ' → logprob: -9.48163890838623
    9. '      ' → logprob: -9.48163890838623
    10. '           ' → logprob: -9.60663890838623

Token 88: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -1.981667537620524e-06
    2. ' w' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.000001907348633
    4. '
' → logprob: -17.250001907348633
    5. '    
' → logprob: -18.250001907348633
    6. '       ' → logprob: -18.625001907348633
    7. '<|end|>' → logprob: -19.125001907348633
    8. '	w' → logprob: -19.250001907348633
    9. '```' → logprob: -19.500001907348633
    10. '  ' → logprob: -19.750001907348633

Token 89: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -1.259079363080673e-05
    2. '_rem' → logprob: -11.750012397766113
    3. 'remove' → logprob: -12.875012397766113
    4. '_replace' → logprob: -14.500012397766113
    5. '_REMOVE' → logprob: -14.625012397766113
    6. '_' → logprob: -14.875012397766113
    7. '_removed' → logprob: -15.500012397766113
    8. '_continue' → logprob: -15.875012397766113
    9. '_append' → logprob: -16.00001335144043
    10. '_re' → logprob: -16.37501335144043

Token 90: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008625093847513199
    2. '.' → logprob: -4.758625030517578
    3. ' .' → logprob: -12.008625030517578
    4. '.add' → logprob: -12.883625030517578
    5. '.push' → logprob: -14.633625030517578
    6. 'append' → logprob: -14.758625030517578
    7. '.Append' → logprob: -14.883625030517578
    8. '.app' → logprob: -15.383625030517578
    9. '.extend' → logprob: -15.383625030517578
    10. '.setdefault' → logprob: -15.883625030517578

Token 91: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. '(' → logprob: -18.0
    3. ' (' → logprob: -19.25
    4. 'i' → logprob: -20.375
    5. '(ii' → logprob: -21.75
    6. '(int' → logprob: -22.125
    7. '(I' → logprob: -22.625
    8. '((' → logprob: -23.375
    9. '(j' → logprob: -23.625
    10. '(a' → logprob: -24.125

Token 92: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. ')
' → logprob: -12.000007629394531
    3. ' )' → logprob: -14.250007629394531
    4. ')#' → logprob: -15.750007629394531
    5. '<|end|>' → logprob: -15.750007629394531
    6. '#' → logprob: -16.37500762939453
    7. '))' → logprob: -16.62500762939453
    8. ')return' → logprob: -16.75000762939453
    9. '),' → logprob: -17.00000762939453
    10. ')add' → logprob: -17.12500762939453

Token 93: 'h' (ID: 71)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.050296396017074585
    2. 'print' → logprob: -3.4252963066101074
    3. 'h' → logprob: -4.425296306610107
    4. 'new' → logprob: -6.925296306610107
    5. 'result' → logprob: -7.050296306610107
    6. 'n' → logprob: -7.425296306610107
    7. ' for' → logprob: -7.675296306610107
    8. '#' → logprob: -7.925296306610107
    9. 'k' → logprob: -8.175296783447266
    10. 'pr' → logprob: -8.800296783447266

Token 94: '_remove' (ID: 41629)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.34489816427230835
    2. ' set' → logprob: -1.7198982238769531
    3. 'sorted' → logprob: -3.594898223876953
    4. '[]' → logprob: -3.969898223876953
    5. ' []' → logprob: -3.969898223876953
    6. 'list' → logprob: -4.219898223876953
    7. ' sorted' → logprob: -4.344898223876953
    8. ' list' → logprob: -4.719898223876953
    9. '[' → logprob: -5.094898223876953
    10. ' [' → logprob: -5.594898223876953

Token 97: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.004623203072696924
    2. '(' → logprob: -5.3796234130859375
    3. '(H' → logprob: -14.004623413085938
    4. '(k' → logprob: -14.129623413085938
    5. ' (' → logprob: -14.754623413085938
    6. '((' → logprob: -15.379623413085938
    7. '(`' → logprob: -15.629623413085938
    8. '(
' → logprob: -16.504623413085938
    9. '<|end|>' → logprob: -16.754623413085938
    10. '(l' → logprob: -17.129623413085938

Token 98: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.0001387009397149086
    2. 'remove' → logprob: -9.125138282775879
    3. '_rem' → logprob: -11.500138282775879
    4. ')' → logprob: -11.625138282775879
    5. '_' → logprob: -13.125138282775879
    6. ')_' → logprob: -13.500138282775879
    7. '_)' → logprob: -13.625138282775879
    8. '_replace' → logprob: -13.875138282775879
    9. '(remove' → logprob: -13.875138282775879
    10. '_re' → logprob: -14.625138282775879

Token 99: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.659005157416686e-05
    2. ')
' → logprob: -9.750066757202148
    3. ' )' → logprob: -11.875066757202148
    4. ')

' → logprob: -14.500066757202148
    5. ')
' → logprob: -15.250066757202148
    6. ')set' → logprob: -15.625066757202148
    7. ')#' → logprob: -15.750066757202148
    8. '),' → logprob: -17.00006675720215
    9. '}' → logprob: -17.37506675720215
    10. '<|end|>' → logprob: -17.50006675720215

Token 100: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00014942926645744592
    2. ' w' → logprob: -8.875149726867676
    3. 'for' → logprob: -12.375149726867676
    4. ' for' → logprob: -14.125149726867676
    5. '   ' → logprob: -14.375149726867676
    6. '
' → logprob: -14.625149726867676
    7. ' ' → logprob: -14.875149726867676
    8. '<|end|>' → logprob: -15.000149726867676
    9. ' 
' → logprob: -15.125149726867676
    10. ',' → logprob: -15.375149726867676

Token 101: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -2.1888679839321412e-05
    2. '_rem' → logprob: -11.000021934509277
    3. '_replace' → logprob: -13.625021934509277
    4. 'remove' → logprob: -14.125021934509277
    5. '_' → logprob: -14.375021934509277
    6. '_removed' → logprob: -14.375021934509277
    7. '_REMOVE' → logprob: -14.500021934509277
    8. '_continue' → logprob: -14.750021934509277
    9. 'Remove' → logprob: -15.000021934509277
    10. '_Remove' → logprob: -15.000021934509277

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.393588125705719
    2. '=' → logprob: -1.1435880661010742
    3. '=set' → logprob: -5.268588066101074
    4. '<|end|>' → logprob: -6.893588066101074
    5. ')' → logprob: -7.768588066101074
    6. 'set' → logprob: -10.018588066101074
    7. ' ' → logprob: -11.018588066101074
    8. '<|end|>' → logprob: -11.768588066101074
    9. '=
' → logprob: -12.268588066101074
    10. ',' → logprob: -12.268588066101074

Token 103: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.07889176905155182
    2. ' set' → logprob: -2.5788917541503906
    3. '=set' → logprob: -14.70389175415039
    4. '(set' → logprob: -14.95389175415039
    5. ')set' → logprob: -15.07889175415039
    6. ' ' → logprob: -15.20389175415039
    7. '{' → logprob: -15.32889175415039
    8. '	set' → logprob: -15.45389175415039
    9. 's' → logprob: -16.70389175415039
    10. '#set' → logprob: -17.32889175415039

Token 104: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.004317841492593288
    2. '()' → logprob: -5.504317760467529
    3. '(' → logprob: -8.504318237304688
    4. 'w' → logprob: -10.504318237304688
    5. ' (' → logprob: -13.254318237304688
    6. '([]' → logprob: -13.629318237304688
    7. '(
' → logprob: -13.754318237304688
    8. '()
' → logprob: -13.879318237304688
    9. '({' → logprob: -13.879318237304688
    10. '(range' → logprob: -14.754318237304688

Token 105: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.0036858171224594116
    2. 'remove' → logprob: -5.62868595123291
    3. ')' → logprob: -9.62868595123291
    4. 'Remove' → logprob: -11.62868595123291
    5. '_REMOVE' → logprob: -12.12868595123291
    6. 'w' → logprob: -13.12868595123291
    7. '))' → logprob: -14.37868595123291
    8. '-remove' → logprob: -14.75368595123291
    9. '.remove' → logprob: -15.00368595123291
    10. '	remove' → logprob: -15.12868595123291

Token 106: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. ')
' → logprob: -12.375007629394531
    3. ' )' → logprob: -12.875007629394531
    4. ')

' → logprob: -14.750007629394531
    5. '#' → logprob: -16.37500762939453
    6. '))' → logprob: -16.50000762939453
    7. ')#' → logprob: -16.62500762939453
    8. ')set' → logprob: -17.00000762939453
    9. ')`' → logprob: -17.50000762939453
    10. ')
' → logprob: -17.62500762939453

Token 107: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.810037742368877e-05
    2. ' for' → logprob: -10.375038146972656
    3. 'result' → logprob: -12.250038146972656
    4. 'print' → logprob: -13.875038146972656
    5. '```' → logprob: -14.875038146972656
    6. 'h' → logprob: -15.375038146972656
    7. 'new' → logprob: -15.750038146972656
    8. 'output' → logprob: -16.250038146972656
    9. '#' → logprob: -16.500038146972656
    10. 'f' → logprob: -16.750038146972656

Token 108: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03377086669206619
    2. 'i' → logprob: -3.408770799636841
    3. ' ' → logprob: -9.158770561218262
    4. '	i' → logprob: -11.908770561218262
    5. '   ' → logprob: -12.283770561218262
    6. '_i' → logprob: -13.158770561218262
    7. '  ' → logprob: -13.783770561218262
    8. '_' → logprob: -13.908770561218262
    9. '```' → logprob: -14.033770561218262
    10. ' ' → logprob: -14.658770561218262

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005273838527500629
    2. 'in' → logprob: -5.255273818969727
    3. 'not' → logprob: -10.630273818969727
    4. ' not' → logprob: -11.630273818969727
    5. ' ' → logprob: -12.505273818969727
    6. 'range' → logprob: -13.380273818969727
    7. '   ' → logprob: -15.005273818969727
    8. 'n' → logprob: -15.130273818969727
    9. '  ' → logprob: -15.255273818969727
    10. ',' → logprob: -15.630273818969727

Token 110: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029754657298326492
    2. ' range' → logprob: -3.529754638671875
    3. ' ' → logprob: -12.779754638671875
    4. '   ' → logprob: -14.154754638671875
    5. '(range' → logprob: -15.404754638671875
    6. '  ' → logprob: -15.904754638671875
    7. 'r' → logprob: -16.154754638671875
    8. ' h' → logprob: -16.779754638671875
    9. 'h' → logprob: -16.904754638671875
    10. '	range' → logprob: -17.029754638671875

Token 111: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00026300468016415834
    2. '(' → logprob: -8.750263214111328
    3. '(range' → logprob: -9.375263214111328
    4. ' (' → logprob: -11.875263214111328
    5. 'range' → logprob: -12.250263214111328
    6. 'h' → logprob: -12.500263214111328
    7. ' range' → logprob: -12.875263214111328
    8. '(len' → logprob: -14.125263214111328
    9. ' h' → logprob: -14.875263214111328
    10. '((' → logprob: -15.750263214111328

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12709282338619232
    2. '):
' → logprob: -2.1270928382873535
    3. ':' → logprob: -9.502092361450195
    4. ')' → logprob: -10.377092361450195
    5. ' ):' → logprob: -10.377092361450195
    6. '):
' → logprob: -11.127092361450195
    7. ' ):
' → logprob: -12.252092361450195
    8. '):

' → logprob: -12.377092361450195
    9. '   ' → logprob: -13.377092361450195
    10. ':
' → logprob: -14.502092361450195

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027230527251958847
    2. ' if' → logprob: -3.6522305011749268
    3. 'if' → logprob: -7.027230739593506
    4. ' ' → logprob: -11.527230262756348
    5. '	if' → logprob: -11.652230262756348
    6. '<|end|>' → logprob: -12.277230262756348
    7. '    ' → logprob: -12.402230262756348
    8. ' for' → logprob: -12.652230262756348
    9. '   ' → logprob: -12.902230262756348
    10. ',' → logprob: -12.902230262756348

Token 114: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16141368448734283
    2. 'if' (adapté à ' if') → logprob: -1.9114136695861816
    3. '   ' → logprob: -6.786413669586182
    4. ' ' → logprob: -10.03641414642334
    5. '    ' → logprob: -11.66141414642334
    6. '	if' → logprob: -12.28641414642334
    7. ' for' → logprob: -13.78641414642334
    8. 'for' → logprob: -14.53641414642334
    9. '```' → logprob: -14.78641414642334
    10. ' i' → logprob: -15.28641414642334

Token 115: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38689762353897095
    2. ' i' → logprob: -1.1368975639343262
    3. '   ' → logprob: -11.386898040771484
    4. ' ' → logprob: -11.761898040771484
    5. ' not' → logprob: -12.386898040771484
    6. 'not' → logprob: -13.011898040771484
    7. ' ' → logprob: -15.011898040771484
    8. '  ' → logprob: -15.511898040771484
    9. ')' → logprob: -15.636898040771484
    10. '    ' → logprob: -16.261898040771484

Token 116: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.012565218843519688
    2. 'not' → logprob: -4.3875651359558105
    3. ' in' → logprob: -10.012565612792969
    4. ' ' → logprob: -11.762565612792969
    5. 'in' → logprob: -13.262565612792969
    6. ' no' → logprob: -14.387565612792969
    7. '	not' → logprob: -15.012565612792969
    8. ')' → logprob: -15.637565612792969
    9. ' ' → logprob: -17.13756561279297
    10. 'no' → logprob: -17.63756561279297

Token 117: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.008617408573627472
    2. ' h' → logprob: -4.758617401123047
    3. '   ' → logprob: -13.133617401123047
    4. ' ' → logprob: -14.508617401123047
    5. '  ' → logprob: -16.008617401123047
    6. 'w' → logprob: -16.008617401123047
    7. '    ' → logprob: -16.508617401123047
    8. '	h' → logprob: -16.758617401123047
    9. '
' → logprob: -17.133617401123047
    10. '(h' → logprob: -18.133617401123047

Token 118: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.00011033779446734115
    2. 'remove' → logprob: -9.125110626220703
    3. 'Remove' → logprob: -15.250110626220703
    4. '_removed' → logprob: -15.250110626220703
    5. '_rem' → logprob: -15.500110626220703
    6. '_replace' → logprob: -15.625110626220703
    7. '_REMOVE' → logprob: -15.750110626220703
    8. '_continue' → logprob: -16.125110626220703
    9. '_Remove' → logprob: -17.000110626220703
    10. '-remove' → logprob: -17.000110626220703

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0201644878834486
    2. ':
' → logprob: -4.020164489746094
    3. '   ' → logprob: -6.520164489746094
    4. '       ' → logprob: -7.645164489746094
    5. ' continue' → logprob: -11.145164489746094
    6. ' :' → logprob: -11.145164489746094
    7. 'continue' → logprob: -11.770164489746094
    8. ' ' → logprob: -12.020164489746094
    9. ' or' → logprob: -12.520164489746094
    10. '    ' → logprob: -12.770164489746094

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08940580487251282
    2. '   ' → logprob: -2.4644057750701904
    3. ' continue' → logprob: -8.08940601348877
    4. 'continue' → logprob: -9.83940601348877
    5. ':' → logprob: -9.96440601348877
    6. '	continue' → logprob: -10.71440601348877
    7. ' ' → logprob: -11.46440601348877
    8. '	   ' → logprob: -12.08940601348877
    9. '	' → logprob: -12.33940601348877
    10. '    ' → logprob: -12.96440601348877

Token 121: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.49993324279785156
    2. '   ' → logprob: -0.9999332427978516
    3. ' continue' → logprob: -3.7499332427978516
    4. '       ' → logprob: -6.249933242797852
    5. ' ' → logprob: -10.249933242797852
    6. '	continue' → logprob: -10.999933242797852
    7. '           ' → logprob: -10.999933242797852
    8. 'contin' → logprob: -13.499933242797852
    9. '    ' → logprob: -13.624933242797852
    10. 'continu' → logprob: -13.999933242797852

Token 122: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014847294427454472
    2. '    
' → logprob: -4.889847278594971
    3. '
' → logprob: -5.014847278594971
    4. 'print' → logprob: -8.389847755432129
    5. '  
' → logprob: -8.514847755432129
    6. '        
' → logprob: -10.014847755432129
    7. '\n' → logprob: -10.264847755432129
    8. ' 
' → logprob: -10.764847755432129
    9. '   
' → logprob: -11.514847755432129
    10. ' ' → logprob: -11.764847755432129

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027018047403544188
    2. '    
' → logprob: -6.377701759338379
    3. 'print' → logprob: -7.877701759338379
    4. '
' → logprob: -7.877701759338379
    5. 'for' → logprob: -8.877701759338379
    6. ' for' → logprob: -10.127701759338379
    7. '  
' → logprob: -10.627701759338379
    8. '        
' → logprob: -11.752701759338379
    9. ' ' → logprob: -11.877701759338379
    10. ' 
' → logprob: -12.252701759338379

Token 124: ' ret' (ID: 2881)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42075660824775696
    2. 'print' → logprob: -1.1707565784454346
    3. '   ' → logprob: -3.5457565784454346
    4. ' for' → logprob: -5.545756816864014
    5. ' print' → logprob: -8.420756340026855
    6. 'row' → logprob: -8.920756340026855
    7. 'line' → logprob: -9.045756340026855
    8. '    
' → logprob: -10.920756340026855
    9. 's' → logprob: -11.045756340026855
    10. 'else' → logprob: -11.295756340026855

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17782850563526154
    2. '=' → logprob: -2.177828550338745
    3. ' +=' → logprob: -3.927828550338745
    4. ' ' → logprob: -4.552828311920166
    5. '.append' → logprob: -4.677828311920166
    6. '   ' → logprob: -5.177828311920166
    7. 'int' → logprob: -6.927828311920166
    8. '+=' → logprob: -6.927828311920166
    9. '  ' → logprob: -7.302828311920166
    10. 'print' → logprob: -7.802828311920166

Token 126: ' ""
' (ID: 18061)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.0003155625017825514
    2. '"' → logprob: -9.00031566619873
    3. '''' → logprob: -9.00031566619873
    4. ' ""' → logprob: -9.75031566619873
    5. '[]' → logprob: -11.50031566619873
    6. '[]
' → logprob: -16.500314712524414
    7. ' []' → logprob: -16.750314712524414
    8. '''
' → logprob: -16.750314712524414
    9. ' ' → logprob: -17.125314712524414
    10. ''' → logprob: -17.500314712524414

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02696205861866474
    2. ' for' → logprob: -4.1519622802734375
    3. 'for' → logprob: -4.5269622802734375
    4. '
' → logprob: -10.651962280273438
    5. ' ' → logprob: -11.526962280273438
    6. '    
' → logprob: -11.526962280273438
    7. '	for' → logprob: -11.901962280273438
    8. '  ' → logprob: -13.151962280273438
    9. '    ' → logprob: -13.651962280273438
    10. '<|end|>' → logprob: -14.401962280273438

Token 128: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006347272545099258
    2. '   ' → logprob: -5.756347179412842
    3. ' for' → logprob: -5.756347179412842
    4. '	for' → logprob: -13.63134765625
    5. ' ' → logprob: -15.25634765625
    6. '    
' → logprob: -15.75634765625
    7. '  ' → logprob: -15.75634765625
    8. '
' → logprob: -16.13134765625
    9. '    ' → logprob: -17.75634765625
    10. ' 
' → logprob: -18.88134765625

Token 129: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1602362096309662
    2. ' j' → logprob: -1.9102362394332886
    3. '   ' → logprob: -12.535236358642578
    4. 'i' → logprob: -12.660236358642578
    5. 'w' → logprob: -13.035236358642578
    6. ' ' → logprob: -13.535236358642578
    7. 'x' → logprob: -14.160236358642578
    8. ' w' → logprob: -15.535236358642578
    9. '	j' → logprob: -15.660236358642578
    10. '    ' → logprob: -15.910236358642578

Token 130: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002264686394482851
    2. 'in' → logprob: -6.127264499664307
    3. ' not' → logprob: -10.127264976501465
    4. 'not' → logprob: -10.877264976501465
    5. '   ' → logprob: -11.377264976501465
    6. 'range' → logprob: -12.627264976501465
    7. ' ' → logprob: -12.752264976501465
    8. '    ' → logprob: -13.252264976501465
    9. '  ' → logprob: -14.752264976501465
    10. ' range' → logprob: -15.002264976501465

Token 131: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04919039458036423
    2. ' range' → logprob: -3.0491902828216553
    3. 'w' → logprob: -7.424190521240234
    4. ' w' → logprob: -12.299190521240234
    5. '(range' → logprob: -13.924190521240234
    6. ' ' → logprob: -14.799190521240234
    7. '   ' → logprob: -14.924190521240234
    8. '(w' → logprob: -17.549190521240234
    9. '[w' → logprob: -18.299190521240234
    10. '	range' → logprob: -18.299190521240234

Token 132: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.186918243765831
    2. 'w' → logprob: -1.9369182586669922
    3. 'range' → logprob: -3.936918258666992
    4. ' range' → logprob: -5.186918258666992
    5. ' w' → logprob: -6.936918258666992
    6. '(range' → logprob: -8.686918258666992
    7. ' (' → logprob: -9.311918258666992
    8. '(' → logprob: -12.311918258666992
    9. '   ' → logprob: -12.686918258666992
    10. '<w' → logprob: -13.311918258666992

Token 133: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00787407997995615
    2. '):' → logprob: -5.007874011993408
    3. ':
' → logprob: -7.507874011993408
    4. '   ' → logprob: -7.882874011993408
    5. ':' → logprob: -8.757874488830566
    6. '():
' → logprob: -11.132874488830566
    7. ')' → logprob: -11.382874488830566
    8. '):

' → logprob: -12.007874488830566
    9. '       ' → logprob: -12.132874488830566
    10. ' not' → logprob: -12.132874488830566

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010785224847495556
    2. ' if' → logprob: -4.760785102844238
    3. '   ' → logprob: -6.260785102844238
    4. '    ' → logprob: -9.010785102844238
    5. ' ' → logprob: -9.885785102844238
    6. '<|end|>' → logprob: -10.385785102844238
    7. 'if' → logprob: -10.510785102844238
    8. ',' → logprob: -11.885785102844238
    9. '     ' → logprob: -12.260785102844238
    10. '      ' → logprob: -12.385785102844238

Token 135: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31389856338500977
    2. 'if' (adapté à ' if') → logprob: -1.3138985633850098
    3. '       ' → logprob: -7.56389856338501
    4. '   ' → logprob: -9.188898086547852
    5. '           ' → logprob: -11.688898086547852
    6. '    ' → logprob: -12.313898086547852
    7. '        ' → logprob: -13.063898086547852
    8. '```' → logprob: -15.438898086547852
    9. ' ' → logprob: -15.813898086547852
    10. '	if' → logprob: -16.56389808654785

Token 136: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.31328803300857544
    2. 'j' → logprob: -1.3132879734039307
    3. '   ' → logprob: -10.813287734985352
    4. ' not' → logprob: -13.188287734985352
    5. ' ' → logprob: -13.813287734985352
    6. '    ' → logprob: -13.938287734985352
    7. 'not' → logprob: -13.938287734985352
    8. '	j' → logprob: -14.313287734985352
    9. ' ' → logprob: -14.563287734985352
    10. '  ' → logprob: -15.563287734985352

Token 137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06240009143948555
    2. 'in' → logprob: -3.0624001026153564
    3. ' not' → logprob: -4.312399864196777
    4. 'not' → logprob: -8.062399864196777
    5. ' ' → logprob: -13.937399864196777
    6. '   ' → logprob: -15.437399864196777
    7. ')' → logprob: -16.562400817871094
    8. '<|end|>' → logprob: -17.312400817871094
    9. ' ' → logprob: -17.562400817871094
    10. '_in' → logprob: -17.812400817871094

Token 138: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.313262403011322
    2. ' w' → logprob: -1.3132624626159668
    3. '_w' → logprob: -14.688261985778809
    4. '	w' → logprob: -16.563262939453125
    5. ' ' → logprob: -16.938262939453125
    6. '<w' → logprob: -17.563262939453125
    7. 'W' → logprob: -18.063262939453125
    8. ''w' → logprob: -18.063262939453125
    9. '(w' → logprob: -18.188262939453125
    10. '   ' → logprob: -18.313262939453125

Token 139: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.0002631238894537091
    2. 'remove' → logprob: -8.250263214111328
    3. '_REMOVE' → logprob: -14.250263214111328
    4. 'Remove' → logprob: -14.500263214111328
    5. '_rem' → logprob: -15.375263214111328
    6. '_continue' → logprob: -16.000263214111328
    7. 'w' → logprob: -16.125263214111328
    8. '_removed' → logprob: -16.500263214111328
    9. ' remove' → logprob: -17.000263214111328
    10. '_replace' → logprob: -17.250263214111328

Token 140: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.28182119131088257
    2. ':' → logprob: -1.7818212509155273
    3. '       ' → logprob: -2.6568212509155273
    4. '           ' → logprob: -5.031821250915527
    5. 'continue' → logprob: -8.031821250915527
    6. ' continue' → logprob: -9.281821250915527
    7. '):
' → logprob: -9.406821250915527
    8. '   ' → logprob: -11.156821250915527
    9. ',' → logprob: -12.031821250915527
    10. ':
' → logprob: -12.156821250915527

Token 141: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029425861313939095
    2. 'continue' → logprob: -4.279426097869873
    3. ' continue' → logprob: -4.279426097869873
    4. '       ' → logprob: -6.654426097869873
    5. '               ' → logprob: -12.654425621032715
    6. '	continue' → logprob: -13.279425621032715
    7. '   ' → logprob: -13.529425621032715
    8. '	       ' → logprob: -15.154425621032715
    9. '		' → logprob: -15.279425621032715
    10. '          ' → logprob: -15.279425621032715

Token 142: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.03613395243883133
    2. '           ' → logprob: -4.036133766174316
    3. ' continue' → logprob: -4.036133766174316
    4. '               ' → logprob: -9.411133766174316
    5. '       ' → logprob: -9.536133766174316
    6. '   ' → logprob: -13.286133766174316
    7. '	continue' → logprob: -13.411133766174316
    8. 'continu' → logprob: -16.161134719848633
    9. 'contin' → logprob: -16.286134719848633
    10. '_continue' → logprob: -17.036134719848633

Token 143: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013451146893203259
    2. ' ret' → logprob: -4.638451099395752
    3. 'ret' → logprob: -5.638451099395752
    4. '           ' → logprob: -9.26345157623291
    5. '   ' → logprob: -10.63845157623291
    6. '	ret' → logprob: -12.88845157623291
    7. '$ret' → logprob: -13.51345157623291
    8. '
' → logprob: -13.63845157623291
    9. 'print' → logprob: -13.63845157623291
    10. ',' → logprob: -13.63845157623291

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09422703832387924
    2. 'ret' → logprob: -2.5942270755767822
    3. ' ret' → logprob: -4.219226837158203
    4. '           ' → logprob: -7.719226837158203
    5. '   ' → logprob: -9.969226837158203
    6. '	ret' → logprob: -11.719226837158203
    7. '$ret' → logprob: -12.344226837158203
    8. '               ' → logprob: -13.844226837158203
    9. '
' → logprob: -13.844226837158203
    10. '(ret' → logprob: -14.094226837158203

Token 145: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.0035497010685503483
    2. ' ret' → logprob: -5.753549575805664
    3. '       ' → logprob: -8.003549575805664
    4. '   ' → logprob: -10.253549575805664
    5. '           ' → logprob: -13.628549575805664
    6. '	ret' → logprob: -14.628549575805664
    7. 'print' → logprob: -15.378549575805664
    8. '$ret' → logprob: -15.753549575805664
    9. '.ret' → logprob: -16.128549575805664
    10. 'rets' → logprob: -16.628549575805664

Token 146: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0041103423573076725
    2. ' +=' → logprob: -5.504110336303711
    3. '+' → logprob: -11.129110336303711
    4. '+="' → logprob: -11.629110336303711
    5. '+='' → logprob: -12.754110336303711
    6. '   ' → logprob: -13.379110336303711
    7. '=' → logprob: -13.504110336303711
    8. ']+=' → logprob: -13.629110336303711
    9. '       ' → logprob: -14.129110336303711
    10. '    ' → logprob: -15.754110336303711

Token 147: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.688212614681106e-05
    2. ' k' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.125017166137695
    4. ' ' → logprob: -18.000017166137695
    5. '  ' → logprob: -18.375017166137695
    6. 'kx' → logprob: -18.500017166137695
    7. '"k' → logprob: -19.500017166137695
    8. '{k' → logprob: -20.375017166137695
    9. '[k' → logprob: -20.625017166137695
    10. '	k' → logprob: -21.250017166137695

Token 148: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[j' → logprob: -15.125
    3. 'i' → logprob: -17.75
    4. '[' → logprob: -19.0
    5. ' [' → logprob: -19.375
    6. '```' → logprob: -19.375
    7. '   ' → logprob: -20.875
    8. '[I' → logprob: -21.0
    9. '[
' → logprob: -22.0
    10. '[k' → logprob: -22.375

Token 149: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07915228605270386
    2. '[j' → logprob: -2.5791523456573486
    3. ']' → logprob: -8.32915210723877
    4. '"][' → logprob: -11.57915210723877
    5. ' ][' → logprob: -11.95415210723877
    6. '[' → logprob: -12.70415210723877
    7. '   ' → logprob: -14.07915210723877
    8. ''][' → logprob: -14.70415210723877
    9. 'j' → logprob: -15.45415210723877
    10. '[i' → logprob: -15.57915210723877

Token 150: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.4121114822482923e-06
    2. ' j' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.875003814697266
    4. '[j' → logprob: -17.500003814697266
    5. ']' → logprob: -18.500003814697266
    6. '	j' → logprob: -18.750003814697266
    7. '
' → logprob: -19.000003814697266
    8. '```' → logprob: -19.000003814697266
    9. 'k' → logprob: -19.625003814697266
    10. '  ' → logprob: -20.125003814697266

Token 151: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11591236293315887
    2. ']' → logprob: -2.240912437438965
    3. ')
' → logprob: -5.865912437438965
    4. ']
' → logprob: -8.740912437438965
    5. '   ' → logprob: -9.740912437438965
    6. '}' → logprob: -11.740912437438965
    7. '）' → logprob: -11.865912437438965
    8. ')]' → logprob: -12.490912437438965
    9. '])' → logprob: -12.990912437438965
    10. ' )' → logprob: -12.990912437438965

Token 152: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2561514675617218
    2. '   ' → logprob: -1.5061514377593994
    3. ' print' → logprob: -5.7561516761779785
    4. '
' → logprob: -6.8811516761779785
    5. '	print' → logprob: -11.63115119934082
    6. '    
' → logprob: -12.38115119934082
    7. '```' → logprob: -12.63115119934082
    8. '  
' → logprob: -13.75615119934082
    9. ')' → logprob: -14.00615119934082
    10. '.print' → logprob: -14.38115119934082

Token 153: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9385402993066236e-05
    2. ' print' → logprob: -11.000019073486328
    3. '
' → logprob: -13.000019073486328
    4. '   ' → logprob: -15.125019073486328
    5. '```' → logprob: -18.250019073486328
    6. '	print' → logprob: -19.000019073486328
    7. '(print' → logprob: -19.375019073486328
    8. '.print' → logprob: -19.625019073486328
    9. '
' → logprob: -19.750019073486328
    10. ')' → logprob: -19.875019073486328

Token 154: '(ret' (ID: 35317)
  Prédit: '(ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.01104935072362423
    2. '(' → logprob: -4.511049270629883
    3. '()' → logprob: -14.886049270629883
    4. 'ret' → logprob: -15.011049270629883
    5. '(
' → logprob: -15.386049270629883
    6. ' (' → logprob: -15.761049270629883
    7. '(rest' → logprob: -15.761049270629883
    8. '(return' → logprob: -15.886049270629883
    9. '(re' → logprob: -16.511049270629883
    10. '$ret' → logprob: -17.636049270629883

Token 155: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -16.125
    4. ')`' → logprob: -17.5
    5. '')' → logprob: -18.75
    6. '))' → logprob: -18.875
    7. '`)' → logprob: -19.25
    8. '")' → logprob: -19.5
    9. '())' → logprob: -19.625
    10. '()' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 153
Tokens correctement prédits (1ère position, stricte): 69
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 45.10%
Précision adaptée (1ère position): 50.98%
Précision (top 10): 85.62%
================================================================================
