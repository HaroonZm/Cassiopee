================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A, B = map(int, input().split())

a = A
A_dec = set()
i = 2
while i * i <= a:
    while a % i == 0:
        A_dec.add(i)
        a //= i
    i += 1
if a > 1:
    A_dec.add(a)

b = B
B_dec = set()
i = 2
while i * i <= b:
    while b % i == 0:
        B_dec.add(i)
        b //= i
    i += 1
if b > 1:
    B_dec.add(b)

ans = 1
for a in A_dec:
    if a in B_dec:
        ans += 1

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1461086869239807
    2. '+' → logprob: -2.771108627319336
    3. ')' → logprob: -4.146108627319336
    4. '.' → logprob: -4.396108627319336
    5. '[' → logprob: -4.521108627319336
    6. ',' → logprob: -4.771108627319336
    7. '(' → logprob: -4.896108627319336
    8. ' =' → logprob: -4.896108627319336
    9. ';' → logprob: -5.021108627319336
    10. ':' → logprob: -7.396108627319336

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0954147577285767
    2. '0' → logprob: -1.2204147577285767
    3. '1' → logprob: -1.5954147577285767
    4. '10' → logprob: -2.220414638519287
    5. '5' → logprob: -4.595414638519287
    6. ' B' → logprob: -4.845414638519287
    7. '[]' → logprob: -5.095414638519287
    8. '[' → logprob: -5.095414638519287
    9. 'B' → logprob: -5.470414638519287
    10. 'map' → logprob: -5.845414638519287

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04745231196284294
    2. '(lambda' → logprob: -3.297452211380005
    3. '<|end|>' → logprob: -5.172452449798584
    4. '```' → logprob: -7.172452449798584
    5. '(user' → logprob: -7.922452449798584
    6. '(int' → logprob: -7.922452449798584
    7. '(token' → logprob: -8.547451972961426
    8. '<|end|>' → logprob: -8.922451972961426
    9. '()' → logprob: -9.047451972961426
    10. '(func' → logprob: -9.047451972961426

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13084785640239716
    2. ')' → logprob: -2.505847930908203
    3. '(' → logprob: -3.380847930908203
    4. 'input' → logprob: -5.630847930908203
    5. '```' → logprob: -6.755847930908203
    6. ',' → logprob: -7.755847930908203
    7. '`)' → logprob: -8.255847930908203
    8. '`' → logprob: -8.755847930908203
    9. ',input' → logprob: -8.755847930908203
    10. '(user' → logprob: -8.880847930908203

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16028942167758942
    2. ' input' → logprob: -1.9102894067764282
    3. '(input' → logprob: -9.910289764404297
    4. ')' → logprob: -11.410289764404297
    5. ',input' → logprob: -13.660289764404297
    6. '=input' → logprob: -13.910289764404297
    7. ' ' → logprob: -14.410289764404297
    8. '```' → logprob: -14.660289764404297
    9. '<input' → logprob: -15.285289764404297
    10. '	input' → logprob: -15.410289764404297

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5846205949783325
    2. '())' → logprob: -1.5846205949783325
    3. '()' → logprob: -1.7096205949783325
    4. ')' → logprob: -3.459620475769043
    5. '('' → logprob: -4.959620475769043
    6. '`()' → logprob: -5.584620475769043
    7. '().' → logprob: -5.834620475769043
    8. '(()' → logprob: -6.084620475769043
    9. '(""))' → logprob: -6.334620475769043
    10. '```' → logprob: -7.334620475769043

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0006469102227129042
    2. 'strip' → logprob: -7.375647068023682
    3. 'rstrip' → logprob: -11.625646591186523
    4. ' split' → logprob: -11.875646591186523
    5. ')' → logprob: -12.875646591186523
    6. 'read' → logprob: -13.625646591186523
    7. '(split' → logprob: -15.250646591186523
    8. 'spl' → logprob: -15.875646591186523
    9. 'startswith' → logprob: -16.000646591186523
    10. 'replace' → logprob: -16.625646591186523

Token 10: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17063438892364502
    2. '))' → logprob: -2.1706342697143555
    3. '())' → logprob: -3.1706342697143555
    4. '()))' → logprob: -7.9206342697143555
    5. '()' → logprob: -8.295634269714355
    6. '`)' → logprob: -9.420634269714355
    7. ')`' → logprob: -10.295634269714355
    8. ')))' → logprob: -11.295634269714355
    9. '(' → logprob: -11.545634269714355
    10. '),' → logprob: -12.045634269714355

Token 11: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.42884203791618347
    2. '\n' → logprob: -2.053842067718506
    3. '#' → logprob: -2.428842067718506
    4. '+' → logprob: -3.053842067718506
    5. 'print' → logprob: -3.928842067718506
    6. '```' → logprob: -4.678842067718506
    7. '+
' → logprob: -4.678842067718506
    8. '*' → logprob: -4.928842067718506
    9. 'x' → logprob: -5.178842067718506
    10. '`' → logprob: -5.303842067718506

Token 12: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8892796635627747
    2. 'dd' → logprob: -2.13927960395813
    3. '+' → logprob: -2.26427960395813
    4. '.' → logprob: -2.38927960395813
    5. '=' → logprob: -2.76427960395813
    6. '*' → logprob: -2.88927960395813
    7. '[' → logprob: -3.26427960395813
    8. ' =' → logprob: -3.88927960395813
    9. 'd' → logprob: -4.014279842376709
    10. ',' → logprob: -4.139279842376709

Token 13: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4999440014362335
    2. ' A' → logprob: -1.2499439716339111
    3. 'a' → logprob: -3.249943971633911
    4. '[]' → logprob: -3.624943971633911
    5. ' []' → logprob: -4.87494421005249
    6. 'B' → logprob: -5.12494421005249
    7. 'int' → logprob: -5.12494421005249
    8. 'b' → logprob: -5.62494421005249
    9. ' a' → logprob: -5.99994421005249
    10. '0' → logprob: -5.99994421005249

Token 14: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0695914551615715
    2. ' +' → logprob: -2.819591522216797
    3. '*' → logprob: -5.569591522216797
    4. '_' → logprob: -7.069591522216797
    5. '%' → logprob: -7.444591522216797
    6. ' ' → logprob: -7.694591522216797
    7. ' *' → logprob: -8.194591522216797
    8. '-' → logprob: -8.194591522216797
    9. 'a' → logprob: -8.319591522216797
    10. '**' → logprob: -8.444591522216797

Token 15: 'A' (ID: 32)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06240445002913475
    2. ' +' → logprob: -3.6874043941497803
    3. '-' → logprob: -4.312404632568359
    4. '%' → logprob: -4.937404632568359
    5. '*' → logprob: -5.687404632568359
    6. '**' → logprob: -5.937404632568359
    7. ' ' → logprob: -6.062404632568359
    8. '+b' → logprob: -6.187404632568359
    9. ' %' → logprob: -7.187404632568359
    10. ' **' → logprob: -7.687404632568359

Token 16: '_dec' (ID: 33390)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6542551517486572
    2. '+' → logprob: -1.6542551517486572
    3. ' +' → logprob: -1.9042551517486572
    4. ' =' → logprob: -3.0292551517486572
    5. '+=' → logprob: -3.4042551517486572
    6. '=' → logprob: -4.404254913330078
    7. ' -=' → logprob: -4.404254913330078
    8. ' ' → logprob: -4.654254913330078
    9. ' ==' → logprob: -5.279254913330078
    10. '-' → logprob: -5.404254913330078

Token 17: ' =' (ID: 314)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.6625851988792419
    2. 'r' → logprob: -1.4125852584838867
    3. 'imal' → logprob: -1.5375852584838867
    4. 'imals' → logprob: -4.912585258483887
    5. 'rement' → logprob: -5.412585258483887
    6. '_' → logprob: -5.412585258483887
    7. 're' → logprob: -5.912585258483887
    8. 'oded' → logprob: -6.787585258483887
    9. 'ayed' → logprob: -7.287585258483887
    10. 'rest' → logprob: -7.412585258483887

Token 18: ' set' (ID: 920)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.41408059000968933
    2. '0' → logprob: -1.9140806198120117
    3. 'A' → logprob: -2.6640806198120117
    4. ' a' → logprob: -3.6640806198120117
    5. 'float' → logprob: -3.9140806198120117
    6. '1' → logprob: -4.164080619812012
    7. '10' → logprob: -4.664080619812012
    8. '.' → logprob: -4.664080619812012
    9. ' A' → logprob: -5.039080619812012
    10. '2' → logprob: -5.039080619812012

Token 19: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.017626766115427017
    2. '(' → logprob: -4.767626762390137
    3. '([' → logprob: -5.892626762390137
    4. '(a' → logprob: -6.392626762390137
    5. '(range' → logprob: -6.517626762390137
    6. '([]' → logprob: -6.767626762390137
    7. '(A' → logprob: -7.517626762390137
    8. '({' → logprob: -8.142626762390137
    9. '([(' → logprob: -8.267626762390137
    10. '('' → logprob: -8.517626762390137

Token 20: 'i' (ID: 72)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6249582171440125
    2. '.' → logprob: -2.3749582767486572
    3. '=' → logprob: -2.4999582767486572
    4. '-' → logprob: -2.7499582767486572
    5. ':' → logprob: -3.1249582767486572
    6. ',' → logprob: -3.1249582767486572
    7. '+' → logprob: -3.2499582767486572
    8. 'for' → logprob: -3.3749582767486572
    9. ')' → logprob: -3.7499582767486572
    10. 'while' → logprob: -4.499958038330078

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4205076992511749
    2. 'n' → logprob: -1.1705076694488525
    3. ' =' → logprob: -3.6705076694488525
    4. 'f' → logprob: -5.670507907867432
    5. 'nt' → logprob: -6.295507907867432
    6. 'nd' → logprob: -6.420507907867432
    7. 'd' → logprob: -8.670507431030273
    8. ' n' → logprob: -8.920507431030273
    9. ' ' → logprob: -9.295507431030273
    10. 'm' → logprob: -9.795507431030273

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21541728079319
    2. '0' → logprob: -1.7154172658920288
    3. '1' → logprob: -4.340417385101318
    4. '2' → logprob: -7.465417385101318
    5. 'a' → logprob: -8.96541690826416
    6. ' a' → logprob: -9.21541690826416
    7. ' A' → logprob: -10.84041690826416
    8. 'A' → logprob: -10.96541690826416
    9. ' -' → logprob: -11.21541690826416
    10. '  ' → logprob: -12.27791690826416

Token 23: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11233647912740707
    2. '1' → logprob: -2.9873363971710205
    3. ' ' → logprob: -3.1123363971710205
    4. '2' → logprob: -4.7373366355896
    5. 'a' → logprob: -6.4873366355896
    6. 'A' → logprob: -7.3623366355896
    7. '-' → logprob: -9.112336158752441
    8. ' a' → logprob: -9.862336158752441
    9. ' A' → logprob: -9.987336158752441
    10. '10' → logprob: -9.987336158752441

Token 24: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.239226222038269
    2. '<|end|>' → logprob: -1.364226222038269
    3. ' ' → logprob: -1.489226222038269
    4. '
' → logprob: -2.4892263412475586
    5. 'while' → logprob: -3.2392263412475586
    6. '**' → logprob: -3.3642263412475586
    7. '*' → logprob: -4.114226341247559
    8. '<|end|>' → logprob: -4.239226341247559
    9. ' while' → logprob: -4.364226341247559
    10. ',' → logprob: -5.739226341247559

Token 25: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05424146354198456
    2. 'i' → logprob: -3.179241418838501
    3. ' a' → logprob: -5.05424165725708
    4. ' A' → logprob: -5.67924165725708
    5. 'a' → logprob: -7.30424165725708
    6. 'A' → logprob: -7.55424165725708
    7. ' ' → logprob: -8.929241180419922
    8. ' (' → logprob: -11.054241180419922
    9. '(i' → logprob: -11.179241180419922
    10. ' True' → logprob: -12.429241180419922

Token 27: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.11496112495660782
    2. '<=' → logprob: -2.2399611473083496
    3. ' *' → logprob: -6.86496114730835
    4. '*' → logprob: -7.48996114730835
    5. '**' → logprob: -8.364960670471191
    6. '*i' → logprob: -8.614960670471191
    7. ' <' → logprob: -10.114960670471191
    8. ' ' → logprob: -10.489960670471191
    9. '<' → logprob: -10.614960670471191
    10. ' **' → logprob: -11.239960670471191

Token 28: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.108289435505867
    2. '<=' → logprob: -3.1082894802093506
    3. 'i' → logprob: -3.4832894802093506
    4. ' a' → logprob: -3.8582894802093506
    5. ' <=' → logprob: -6.1082892417907715
    6. ' i' → logprob: -6.1082892417907715
    7. 'A' → logprob: -7.3582892417907715
    8. '<' → logprob: -7.8582892417907715
    9. ' ' → logprob: -8.73328971862793
    10. ' A' → logprob: -9.23328971862793

Token 29: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.033707138150930405
    2. '<=' → logprob: -3.4087071418762207
    3. ' <' → logprob: -10.533706665039062
    4. '<' → logprob: -11.033706665039062
    5. ' ' → logprob: -11.908706665039062
    6. '<|end|>' → logprob: -12.158706665039062
    7. ' <<=' → logprob: -12.658706665039062
    8. ' ≤' → logprob: -13.908706665039062
    9. ' <=",' → logprob: -14.408706665039062
    10. ')<=' → logprob: -15.033706665039062

Token 30: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5861473679542542
    2. 'a' → logprob: -0.8361473679542542
    3. ' A' → logprob: -5.086147308349609
    4. 'A' → logprob: -5.586147308349609
    5. ' ' → logprob: -8.71114730834961
    6. '	a' → logprob: -10.96114730834961
    7. ' B' → logprob: -11.21114730834961
    8. 'B' → logprob: -11.33614730834961
    9. ' ' → logprob: -12.83614730834961
    10. '  ' → logprob: -12.83614730834961

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009730404708534479
    2. ' :' → logprob: -7.125973224639893
    3. ' and' → logprob: -9.000972747802734
    4. ':
' → logprob: -10.250972747802734
    5. 'and' → logprob: -12.125972747802734
    6. ':**' → logprob: -13.375972747802734
    7. '+:' → logprob: -14.250972747802734
    8. ':
' → logprob: -14.750972747802734
    9. ':

' → logprob: -15.250972747802734
    10. '>:' → logprob: -15.375972747802734

Token 32: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5139979124069214
    2. ' ' → logprob: -1.2639979124069214
    3. ' :' → logprob: -3.138998031616211
    4. '   ' → logprob: -3.763998031616211
    5. ' if' → logprob: -3.888998031616211
    6. '<|end|>' → logprob: -4.013998031616211
    7. '    ' → logprob: -5.888998031616211
    8. '  ' → logprob: -6.138998031616211
    9. ' and' → logprob: -6.388998031616211
    10. ' ' → logprob: -6.763998031616211

Token 33: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23472748696804047
    2. 'if' → logprob: -2.109727382659912
    3. ' ' → logprob: -2.734727382659912
    4. '<|end|>' → logprob: -4.609727382659912
    5. '   ' → logprob: -4.984727382659912
    6. ' while' → logprob: -5.859727382659912
    7. ' i' → logprob: -7.234727382659912
    8. 'while' (adapté à ' while') → logprob: -7.734727382659912
    9. '<|end|>' → logprob: -7.734727382659912
    10. 'i' → logprob: -7.859727382659912

Token 34: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023250484839081764
    2. ' a' → logprob: -3.7732505798339844
    3. 'A' → logprob: -13.523250579833984
    4. '(a' → logprob: -13.523250579833984
    5. '	a' → logprob: -14.023250579833984
    6. ' ' → logprob: -14.148250579833984
    7. '_a' → logprob: -14.898250579833984
    8. '>a' → logprob: -16.273250579833984
    9. '   ' → logprob: -16.523250579833984
    10. '#a' → logprob: -17.148250579833984

Token 35: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.049748823046684265
    2. ' %' → logprob: -3.5497488975524902
    3. '%i' → logprob: -3.9247488975524902
    4. '%A' → logprob: -10.799748420715332
    5. '%e' → logprob: -10.924748420715332
    6. '%x' → logprob: -12.549748420715332
    7. '%d' → logprob: -12.674748420715332
    8. '%c' → logprob: -13.049748420715332
    9. '%E' → logprob: -13.674748420715332
    10. '%b' → logprob: -13.924748420715332

Token 36: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.572941179503687e-05
    2. ' i' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.625045776367188
    4. '	i' → logprob: -16.875045776367188
    5. '<|end|>' → logprob: -17.000045776367188
    6. ' ' → logprob: -17.125045776367188
    7. '<|end|>' → logprob: -18.250045776367188
    8. '*i' → logprob: -18.375045776367188
    9. '  ' → logprob: -18.500045776367188
    10. '%i' → logprob: -19.250045776367188

Token 37: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5762929320335388
    2. ' ==' → logprob: -0.8262929320335388
    3. ')==' → logprob: -9.076292991638184
    4. '=' → logprob: -9.326292991638184
    5. ' ' → logprob: -9.701292991638184
    6. '===' → logprob: -10.826292991638184
    7. '0' → logprob: -11.076292991638184
    8. ']==' → logprob: -11.326292991638184
    9. ')' → logprob: -11.451292991638184
    10. '```' → logprob: -11.701292991638184

Token 38: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001929228543303907
    2. ' ' → logprob: -6.25192928314209
    3. '<|end|>' → logprob: -14.50192928314209
    4. '   ' → logprob: -16.751928329467773
    5. '<|end|>' → logprob: -17.126928329467773
    6. '  ' → logprob: -17.126928329467773
    7. '۰' → logprob: -18.626928329467773
    8. '```' → logprob: -19.126928329467773
    9. ' ' → logprob: -19.626928329467773
    10. ')' → logprob: -19.626928329467773

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '<|end|>' → logprob: -18.12506675720215
    4. '۰' → logprob: -20.00006675720215
    5. '```' → logprob: -20.25006675720215
    6. '<|end|>' → logprob: -20.75006675720215
    7. '   ' → logprob: -21.25006675720215
    8. '٠' → logprob: -21.62506675720215
    9. '  ' → logprob: -21.75006675720215
    10. ' ' → logprob: -22.12506675720215

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01110571064054966
    2. ':
' → logprob: -4.511105537414551
    3. '):' → logprob: -10.76110553741455
    4. '):
' → logprob: -11.63610553741455
    5. '   ' → logprob: -11.88610553741455
    6. ':A' → logprob: -11.88610553741455
    7. ':

' → logprob: -12.63610553741455
    8. ':
' → logprob: -13.01110553741455
    9. ' and' → logprob: -13.51110553741455
    10. '<|end|>' → logprob: -13.76110553741455

Token 41: '       ' (ID: 309)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.10296786576509476
    2. 'A' → logprob: -2.9779679775238037
    3. '   ' → logprob: -3.9779679775238037
    4. '       ' → logprob: -4.102967739105225
    5. ' a' → logprob: -5.227967739105225
    6. '    ' → logprob: -5.727967739105225
    7. ' ' → logprob: -6.602967739105225
    8. 'a' → logprob: -7.727967739105225
    9. ' 
' → logprob: -7.977967739105225
    10. '	A' → logprob: -8.227968215942383

Token 42: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.5760903358459473
    2. ' A' → logprob: -0.8260903358459473
    3. 'a' → logprob: -9.451089859008789
    4. ' a' → logprob: -11.076089859008789
    5. ' ' → logprob: -11.451089859008789
    6. '<|end|>' → logprob: -11.451089859008789
    7. '	A' → logprob: -11.576089859008789
    8. '   ' → logprob: -12.201089859008789
    9. '>A' → logprob: -12.576089859008789
    10. '```' → logprob: -12.576089859008789

Token 43: '_dec' (ID: 33390)
  Prédit: '_dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dec' → logprob: -5.319370302458992e-06
    2. 'dec' → logprob: -13.125005722045898
    3. '_div' → logprob: -13.250005722045898
    4. '_decay' → logprob: -15.000005722045898
    5. '_de' → logprob: -15.375005722045898
    6. '_' → logprob: -15.875005722045898
    7. '```' → logprob: -15.875005722045898
    8. 'Dec' → logprob: -16.1250057220459
    9. 'A' → logprob: -16.6250057220459
    10. '_def' → logprob: -17.2500057220459

Token 44: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.009797172620892525
    2. '.' → logprob: -4.634797096252441
    3. ' .' → logprob: -10.759797096252441
    4. '.setdefault' → logprob: -12.134797096252441
    5. '.update' → logprob: -12.259797096252441
    6. '.append' → logprob: -12.259797096252441
    7. 'add' → logprob: -13.134797096252441
    8. '.remove' → logprob: -13.509797096252441
    9. '`.' → logprob: -15.009797096252441
    10. '.insert' → logprob: -15.259797096252441

Token 45: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.005233882926404476
    2. '(' → logprob: -5.2552337646484375
    3. '(
' → logprob: -16.755233764648438
    4. '(a' → logprob: -16.880233764648438
    5. '((' → logprob: -17.380233764648438
    6. '(ii' → logprob: -17.505233764648438
    7. ' (' → logprob: -18.755233764648438
    8. '('' → logprob: -19.380233764648438
    9. '(

' → logprob: -19.505233764648438
    10. '(`' → logprob: -19.880233764648438

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011146385222673416
    2. ')
' → logprob: -4.511146545410156
    3. ')
' → logprob: -10.011146545410156
    4. ' )' → logprob: -11.136146545410156
    5. ')`' → logprob: -11.136146545410156
    6. ')`
' → logprob: -12.636146545410156
    7. '`)' → logprob: -12.636146545410156
    8. ')

' → logprob: -12.886146545410156
    9. '```' → logprob: -13.011146545410156
    10. '))' → logprob: -13.136146545410156

Token 47: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9150173664093018
    2. '*' → logprob: -1.6650173664093018
    3. '<|end|>' → logprob: -2.7900173664093018
    4. 'a' → logprob: -3.0400173664093018
    5. '*
' → logprob: -3.0400173664093018
    6. 'i' → logprob: -3.2900173664093018
    7. ' ' → logprob: -3.4150173664093018
    8. '
' → logprob: -3.6650173664093018
    9. '       ' → logprob: -3.6650173664093018
    10. '   ' → logprob: -3.6650173664093018

Token 48: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0076085166074335575
    2. ' a' → logprob: -4.882608413696289
    3. '```' → logprob: -14.132608413696289
    4. '	a' → logprob: -14.507608413696289
    5. ' ' → logprob: -15.257608413696289
    6. 'i' → logprob: -15.507608413696289
    7. '_a' → logprob: -15.757608413696289
    8. ' 
' → logprob: -16.13260841369629
    9. '`' → logprob: -16.38260841369629
    10. 'A' → logprob: -16.50760841369629

Token 49: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.03939543291926384
    2. ' //' → logprob: -3.414395332336426
    3. '=' → logprob: -6.039395332336426
    4. '//' → logprob: -6.164395332336426
    5. '/=' → logprob: -7.039395332336426
    6. ' /=' → logprob: -8.789395332336426
    7. ' =' → logprob: -8.789395332336426
    8. ' ' → logprob: -10.039395332336426
    9. '/' → logprob: -11.789395332336426
    10. ' ' → logprob: -11.789395332336426

Token 50: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5451681974809617e-05
    2. '=i' → logprob: -11.125015258789062
    3. 'i' → logprob: -15.000015258789062
    4. '=}' → logprob: -15.250015258789062
    5. '=

' → logprob: -17.875015258789062
    6. '=int' → logprob: -18.625015258789062
    7. '=_' → logprob: -18.625015258789062
    8. ' =' → logprob: -18.875015258789062
    9. '='' → logprob: -19.250015258789062
    10. '=
' → logprob: -19.375015258789062

Token 51: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020354038861114532
    2. ' i' → logprob: -8.500203132629395
    3. '	i' → logprob: -17.87520408630371
    4. ' ' → logprob: -19.75020408630371
    5. '   ' → logprob: -19.87520408630371
    6. '2' → logprob: -19.87520408630371
    7. '```' → logprob: -21.00020408630371
    8. '  ' → logprob: -21.87520408630371
    9. '*i' → logprob: -22.25020408630371
    10. '10' → logprob: -22.37520408630371

Token 52: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023994818329811096
    2. ' i' → logprob: -4.3989949226379395
    3. 'i' → logprob: -4.8989949226379395
    4. '    ' → logprob: -6.3989949226379395
    5. '  ' → logprob: -7.2739949226379395
    6. '   ' → logprob: -8.023994445800781
    7. '<|end|>' → logprob: -8.398994445800781
    8. ' ,' → logprob: -9.023994445800781
    9. ' 
' → logprob: -9.398994445800781
    10. ' ' → logprob: -9.398994445800781

Token 53: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1586155891418457
    2. '```' → logprob: -1.4086155891418457
    3. 'i' → logprob: -1.6586155891418457
    4. ' ' → logprob: -2.0336155891418457
    5. '<|end|>' → logprob: -3.0336155891418457
    6. '   ' → logprob: -3.4086155891418457
    7. '    ' → logprob: -4.408615589141846
    8. ' ```' → logprob: -4.908615589141846
    9. '2' → logprob: -5.783615589141846
    10. ' 
' → logprob: -5.908615589141846

Token 54: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17459170520305634
    2. 'i' (adapté à ' i') → logprob: -1.9245916604995728
    3. ' ' → logprob: -5.049591541290283
    4. '   ' → logprob: -5.174591541290283
    5. '    ' → logprob: -7.424591541290283
    6. '  ' → logprob: -7.674591541290283
    7. '+' → logprob: -8.424592018127441
    8. ' 
' → logprob: -8.674592018127441
    9. '1' → logprob: -9.549592018127441
    10. '```' → logprob: -9.549592018127441

Token 55: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06328357756137848
    2. '+' → logprob: -2.938283681869507
    3. ' +=' → logprob: -4.813283443450928
    4. '=' → logprob: -8.563283920288086
    5. '++' → logprob: -10.063283920288086
    6. '+='' → logprob: -12.688283920288086
    7. ' +' → logprob: -13.438283920288086
    8. '```' → logprob: -13.813283920288086
    9. '+="' → logprob: -13.938283920288086
    10. ']+=' → logprob: -13.938283920288086

Token 56: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -16.50000762939453
    4. '```' → logprob: -17.75000762939453
    5. '１' → logprob: -18.50000762939453
    6. '+' → logprob: -18.81250762939453
    7. '१' → logprob: -19.18750762939453
    8. '۱' → logprob: -19.31250762939453
    9. '১' → logprob: -19.31250762939453
    10. '<|end|>' → logprob: -19.43750762939453

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -17.750001907348633
    4. '<|end|>' → logprob: -18.062501907348633
    5. '+' → logprob: -18.625001907348633
    6. '2' → logprob: -18.687501907348633
    7. '１' → logprob: -19.187501907348633
    8. '१' → logprob: -19.500001907348633
    9. '১' → logprob: -19.562501907348633
    10. '۱' → logprob: -19.750001907348633

Token 58: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0038665852043777704
    2. '```' → logprob: -5.753866672515869
    3. ' if' → logprob: -8.128866195678711
    4. '<|end|>' → logprob: -8.378866195678711
    5. 'A' → logprob: -9.378866195678711
    6. 'while' → logprob: -10.503866195678711
    7. '``' → logprob: -11.128866195678711
    8. '
' → logprob: -11.878866195678711
    9. 'If' → logprob: -12.003866195678711
    10. 'a' → logprob: -12.003866195678711

Token 59: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008681101026013494
    2. '```' → logprob: -7.625868320465088
    3. ' if' → logprob: -8.00086784362793
    4. 'A' → logprob: -11.50086784362793
    5. '``' → logprob: -11.75086784362793
    6. '<|end|>' → logprob: -11.75086784362793
    7. 'while' → logprob: -11.87586784362793
    8. '
' → logprob: -12.37586784362793
    9. 'If' → logprob: -12.62586784362793
    10. 'for' → logprob: -13.87586784362793

Token 60: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06994009763002396
    2. 'a' → logprob: -2.6949400901794434
    3. ' ' → logprob: -13.569940567016602
    4. ' ' → logprob: -13.569940567016602
    5. '	a' → logprob: -14.069940567016602
    6. '(a' → logprob: -15.694940567016602
    7. '>a' → logprob: -16.5699405670166
    8. '_a' → logprob: -16.9449405670166
    9. '   ' → logprob: -17.3199405670166
    10. '>' → logprob: -17.6949405670166

Token 61: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11282987147569656
    2. ' >' → logprob: -2.2378299236297607
    3. '!=' → logprob: -12.98783016204834
    4. '">' → logprob: -13.48783016204834
    5. '&gt' → logprob: -13.73783016204834
    6. ' !=' → logprob: -13.86283016204834
    7. ' ' → logprob: -14.23783016204834
    8. ' ' → logprob: -14.61283016204834
    9. '1' → logprob: -15.36283016204834
    10. '   ' → logprob: -16.987829208374023

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '>' → logprob: -17.87520408630371
    4. '１' → logprob: -18.00020408630371
    5. '```' → logprob: -18.12520408630371
    6. '<|end|>' → logprob: -18.50020408630371
    7. '   ' → logprob: -19.12520408630371
    8. '۱' → logprob: -19.18770408630371
    9. ' ' → logprob: -19.31270408630371
    10. '2' → logprob: -19.31270408630371

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '>' → logprob: -16.7500057220459
    4. '１' → logprob: -17.3750057220459
    5. '```' → logprob: -18.7500057220459
    6. '۱' → logprob: -18.8125057220459
    7. '१' → logprob: -18.9375057220459
    8. '   ' → logprob: -19.4375057220459
    9. '2' → logprob: -19.5625057220459
    10. '<|end|>' → logprob: -19.8125057220459

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31332698464393616
    2. ':
' → logprob: -1.3133269548416138
    3. ':

' → logprob: -10.688326835632324
    4. ':
' → logprob: -10.813326835632324
    5. ':A' → logprob: -11.438326835632324
    6. 'A' → logprob: -12.563326835632324
    7. '   ' → logprob: -12.938326835632324
    8. '):
' → logprob: -14.188326835632324
    9. '():
' → logprob: -14.313326835632324
    10. ' :' → logprob: -14.438326835632324

Token 65: '   ' (ID: 271)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.04393499717116356
    2. '   ' → logprob: -3.1689350605010986
    3. 'A' → logprob: -7.1689348220825195
    4. '```' → logprob: -9.79393482208252
    5. '	A' → logprob: -9.91893482208252
    6. ' ' → logprob: -10.16893482208252
    7. ' ' → logprob: -11.29393482208252
    8. ' a' → logprob: -13.41893482208252
    9. '<|end|>' → logprob: -13.54393482208252
    10. '  ' → logprob: -13.66893482208252

Token 66: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.20141538977622986
    2. 'A' (adapté à ' A') → logprob: -1.7014154195785522
    3. ' ' → logprob: -14.326415061950684
    4. '```' → logprob: -14.451415061950684
    5. '   ' → logprob: -14.576415061950684
    6. '	A' → logprob: -15.201415061950684
    7. '<|end|>' → logprob: -16.451416015625
    8. ' ' → logprob: -16.576416015625
    9. '_A' → logprob: -16.951416015625
    10. '>A' → logprob: -17.576416015625

Token 67: '_dec' (ID: 33390)
  Prédit: '_dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dec' → logprob: -1.7432603272027336e-06
    2. 'dec' → logprob: -13.625001907348633
    3. '_decay' → logprob: -16.000001907348633
    4. '_def' → logprob: -16.250001907348633
    5. '_de' → logprob: -16.375001907348633
    6. '_decoder' → logprob: -17.000001907348633
    7. 'Dec' → logprob: -17.250001907348633
    8. '_dem' → logprob: -17.625001907348633
    9. '_DEC' → logprob: -17.750001907348633
    10. 'A' → logprob: -18.500001907348633

Token 68: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0003931384126190096
    2. '.' → logprob: -7.875392913818359
    3. ' .' → logprob: -11.37539291381836
    4. 'add' → logprob: -14.25039291381836
    5. '.append' → logprob: -15.25039291381836
    6. '.setdefault' → logprob: -15.37539291381836
    7. '```' → logprob: -16.00039291381836
    8. '.Add' → logprob: -16.75039291381836
    9. '.update' → logprob: -17.00039291381836
    10. '.put' → logprob: -17.50039291381836

Token 69: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00029625516617670655
    2. '(' → logprob: -8.125296592712402
    3. '(A' → logprob: -16.125295639038086
    4. '(ai' → logprob: -17.750295639038086
    5. 'a' → logprob: -18.000295639038086
    6. ' (' → logprob: -18.250295639038086
    7. '(
' → logprob: -18.250295639038086
    8. '(i' → logprob: -18.250295639038086
    9. '(an' → logprob: -18.750295639038086
    10. '((' → logprob: -19.000295639038086

Token 70: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.500001907348633
    4. '}' → logprob: -17.000001907348633
    5. ')#' → logprob: -17.875001907348633
    6. ')

' → logprob: -18.500001907348633
    7. ')a' → logprob: -18.625001907348633
    8. ')}' → logprob: -18.750001907348633
    9. ')`' → logprob: -18.750001907348633
    10. '),' → logprob: -19.000001907348633

Token 71: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31391406059265137
    2. 'B' → logprob: -1.3139140605926514
    3. '```' → logprob: -7.9389142990112305
    4. 'a' → logprob: -9.81391429901123
    5. '``' → logprob: -10.06391429901123
    6. 'C' → logprob: -10.31391429901123
    7. ',' → logprob: -10.68891429901123
    8. '  
' → logprob: -10.81391429901123
    9. 'if' → logprob: -11.18891429901123
    10. ' ' → logprob: -11.31391429901123

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00998048484325409
    2. '=' → logprob: -4.63498067855835
    3. ' ' → logprob: -8.509980201721191
    4. ',' → logprob: -12.259980201721191
    5. ' ==' → logprob: -12.259980201721191
    6. '  ' → logprob: -12.759980201721191
    7. ')' → logprob: -13.259980201721191
    8. ' ,' → logprob: -13.259980201721191
    9. '>' → logprob: -13.759980201721191
    10. ' >' → logprob: -13.884980201721191

Token 73: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6931489706039429
    2. ' B' → logprob: -0.6931489706039429
    3. 'b' → logprob: -13.818148612976074
    4. ' ' → logprob: -14.443148612976074
    5. '>B' → logprob: -16.44314956665039
    6. ' b' → logprob: -16.81814956665039
    7. '	B' → logprob: -17.44314956665039
    8. ' ' → logprob: -17.44314956665039
    9. '_B' → logprob: -18.19314956665039
    10. '```' → logprob: -18.44314956665039

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38706696033477783
    2. 'b' → logprob: -1.5120669603347778
    3. '<|end|>' → logprob: -2.3870668411254883
    4. '=' → logprob: -6.012066841125488
    5. ' =' → logprob: -6.762066841125488
    6. '  
' → logprob: -7.137066841125488
    7. ' b' → logprob: -7.262066841125488
    8. ' 
' → logprob: -7.387066841125488
    9. '```' → logprob: -7.387066841125488
    10. '<|end|>' → logprob: -8.012066841125488

Token 75: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00026658078422769904
    2. 'b' → logprob: -8.375267028808594
    3. '```' → logprob: -10.250267028808594
    4. ' B' → logprob: -14.750267028808594
    5. '``' → logprob: -15.500267028808594
    6. '`' → logprob: -17.625267028808594
    7. '   ' → logprob: -18.500267028808594
    8. 'A' → logprob: -19.000267028808594
    9. 'while' → logprob: -19.625267028808594
    10. '#' → logprob: -19.750267028808594

Token 76: '_dec' (ID: 33390)
  Prédit: '_dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dec' → logprob: -0.00010962257510982454
    2. '_' → logprob: -9.750109672546387
    3. 'dec' → logprob: -11.500109672546387
    4. '_de' → logprob: -11.875109672546387
    5. '_decoder' → logprob: -12.250109672546387
    6. '_b' → logprob: -12.500109672546387
    7. '```' → logprob: -12.750109672546387
    8. '_dem' → logprob: -13.125109672546387
    9. '_def' → logprob: -13.250109672546387
    10. '_des' → logprob: -13.375109672546387

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269349306821823
    2. '=' → logprob: -2.1269350051879883
    3. '=set' → logprob: -12.126935005187988
    4. ' ' → logprob: -14.001935005187988
    5. 's' → logprob: -15.501935005187988
    6. 'set' → logprob: -16.626934051513672
    7. '<|end|>' → logprob: -16.876934051513672
    8. '   ' → logprob: -16.876934051513672
    9. ':' → logprob: -17.251934051513672
    10. '＝' → logprob: -17.626934051513672

Token 78: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.25193509459495544
    2. ' set' → logprob: -1.5019351243972778
    3. '{' → logprob: -12.376935005187988
    4. ' {' → logprob: -14.251935005187988
    5. '	set' → logprob: -14.876935005187988
    6. '=set' → logprob: -15.001935005187988
    7. ' ' → logprob: -15.626935005187988
    8. 's' → logprob: -16.126935958862305
    9. '(set' → logprob: -16.126935958862305
    10. ')set' → logprob: -16.876935958862305

Token 79: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008301171474158764
    2. '(' → logprob: -7.125830173492432
    3. '()
' → logprob: -10.750829696655273
    4. '()

' → logprob: -13.375829696655273
    5. '()>' → logprob: -14.875829696655273
    6. '()<' → logprob: -15.000829696655273
    7. '()]' → logprob: -15.125829696655273
    8. '()</' → logprob: -15.125829696655273
    9. '()}' → logprob: -15.500829696655273
    10. ' ()' → logprob: -15.875829696655273

Token 80: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.921253225300461e-05
    2. 'j' → logprob: -9.625069618225098
    3. ' i' → logprob: -13.375069618225098
    4. '```' → logprob: -13.500069618225098
    5. 'b' → logprob: -15.625069618225098
    6. 'while' → logprob: -17.25006866455078
    7. '``' → logprob: -18.75006866455078
    8. '2' → logprob: -18.75006866455078
    9. '`' → logprob: -19.37506866455078
    10. '   ' → logprob: -19.37506866455078

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975129522383213
    2. '=' → logprob: -3.5297513008117676
    3. ' ' → logprob: -14.77975082397461
    4. '   ' → logprob: -15.15475082397461
    5. '```' → logprob: -16.65475082397461
    6. ')' → logprob: -17.15475082397461
    7. '<|end|>' → logprob: -17.65475082397461
    8. ' =
' → logprob: -17.65475082397461
    9. '＝' → logprob: -17.90475082397461
    10. ' ' → logprob: -18.02975082397461

Token 82: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008614808320999146
    2. ' ' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.883614540100098
    4. '  ' → logprob: -16.883615493774414
    5. '```' → logprob: -17.508615493774414
    6. '۲' → logprob: -18.258615493774414
    7. '２' → logprob: -19.008615493774414
    8. '1' → logprob: -19.258615493774414
    9. '<|end|>' → logprob: -19.696115493774414
    10. '    ' → logprob: -19.821115493774414

Token 83: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.187545776367188
    4. '۲' → logprob: -18.187545776367188
    5. 'b' → logprob: -18.500045776367188
    6. '```' → logprob: -18.562545776367188
    7. '  ' → logprob: -18.687545776367188
    8. '২' → logprob: -18.687545776367188
    9. '२' → logprob: -18.875045776367188
    10. '２' → logprob: -18.937545776367188

Token 84: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3725317120552063
    2. '<|end|>' → logprob: -1.7475316524505615
    3. ' while' → logprob: -1.9975316524505615
    4. '<|end|>' → logprob: -7.622531890869141
    5. '	while' → logprob: -8.74753189086914
    6. '```' → logprob: -9.24753189086914
    7. 'While' → logprob: -9.24753189086914
    8. ' ' → logprob: -9.37253189086914
    9. '*' → logprob: -9.49753189086914
    10. '
' → logprob: -10.87253189086914

Token 85: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0021621601190418005
    2. ' while' → logprob: -6.502161979675293
    3. 'i' → logprob: -7.377161979675293
    4. '2' → logprob: -11.377161979675293
    5. 'b' → logprob: -11.627161979675293
    6. '```' → logprob: -11.627161979675293
    7. 'While' → logprob: -13.127161979675293
    8. '	while' → logprob: -14.252161979675293
    9. ' i' → logprob: -14.377161979675293
    10. ' ' → logprob: -14.877161979675293

Token 86: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3869022727012634
    2. 'i' → logprob: -1.1369023323059082
    3. 'b' → logprob: -10.63690185546875
    4. '   ' → logprob: -13.38690185546875
    5. 'B' → logprob: -13.63690185546875
    6. ' ' → logprob: -13.76190185546875
    7. '	i' → logprob: -13.88690185546875
    8. ' b' → logprob: -14.01190185546875
    9. '(i' → logprob: -14.38690185546875
    10. '2' → logprob: -15.63690185546875

Token 87: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04428859055042267
    2. '*' → logprob: -3.1692886352539062
    3. '*i' → logprob: -6.669288635253906
    4. ' ' → logprob: -11.294288635253906
    5. '**' → logprob: -12.544288635253906
    6. '*b' → logprob: -14.169288635253906
    7. '*s' → logprob: -14.794288635253906
    8. '```' → logprob: -14.919288635253906
    9. '*object' → logprob: -15.419288635253906
    10. ' <=' → logprob: -15.794288635253906

Token 88: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001024831784889102
    2. 'b' → logprob: -7.3760247230529785
    3. ' i' → logprob: -7.8760247230529785
    4. '2' → logprob: -11.376025199890137
    5. '*i' → logprob: -13.126025199890137
    6. 'B' → logprob: -13.376025199890137
    7. ' ' → logprob: -13.751025199890137
    8. '1' → logprob: -14.626025199890137
    9. '```' → logprob: -15.126025199890137
    10. '	i' → logprob: -15.251025199890137

Token 89: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5759677886962891
    2. '<=' → logprob: -0.8259677886962891
    3. '<|end|>' → logprob: -11.200967788696289
    4. '<' → logprob: -11.950967788696289
    5. ' ' → logprob: -12.575967788696289
    6. ')<=' → logprob: -13.325967788696289
    7. ' <=",' → logprob: -13.825967788696289
    8. ']<=' → logprob: -14.325967788696289
    9. '```' → logprob: -14.825967788696289
    10. '<|end|>' → logprob: -15.200967788696289

Token 90: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002613358374219388
    2. ' b' → logprob: -8.250261306762695
    3. ' ' → logprob: -18.875261306762695
    4. '   ' → logprob: -19.375261306762695
    5. '```' → logprob: -19.500261306762695
    6. '<|end|>' → logprob: -19.625261306762695
    7. '	b' → logprob: -19.750261306762695
    8. ')b' → logprob: -21.562761306762695
    9. '`' → logprob: -21.750261306762695
    10. ' б' → logprob: -21.812761306762695

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004092292860150337
    2. ':
' → logprob: -5.504092216491699
    3. ' :' → logprob: -12.5040922164917
    4. '<|end|>' → logprob: -12.8790922164917
    5. 'b' → logprob: -13.2540922164917
    6. ':b' → logprob: -13.3790922164917
    7. ' and' → logprob: -14.0040922164917
    8. ':
' → logprob: -14.2540922164917
    9. '):' → logprob: -14.6290922164917
    10. '   ' → logprob: -14.8790922164917

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04806351289153099
    2. 'b' → logprob: -3.1730635166168213
    3. ' ' → logprob: -6.548063278198242
    4. '       ' → logprob: -6.673063278198242
    5. '```' → logprob: -6.798063278198242
    6. ' b' → logprob: -6.923063278198242
    7. ' while' → logprob: -9.673063278198242
    8. ':' → logprob: -10.173063278198242
    9. '1' → logprob: -10.173063278198242
    10. '    ' → logprob: -10.423063278198242

Token 93: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0791410431265831
    2. ' while' → logprob: -2.579141139984131
    3. '   ' → logprob: -8.329140663146973
    4. '```' → logprob: -12.579140663146973
    5. 'While' → logprob: -12.829140663146973
    6. '	while' → logprob: -13.329140663146973
    7. ' ' → logprob: -13.704140663146973
    8. 'b' → logprob: -14.204140663146973
    9. '    ' → logprob: -15.829140663146973
    10. '  ' → logprob: -16.45414161682129

Token 94: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020741820335388
    2. ' b' → logprob: -2.3502073287963867
    3. '<|end|>' → logprob: -14.350207328796387
    4. ' ' → logprob: -16.100208282470703
    5. '```' → logprob: -16.850208282470703
    6. '   ' → logprob: -17.725208282470703
    7. '<|end|>' → logprob: -18.100208282470703
    8. ')b' → logprob: -18.100208282470703
    9. '	b' → logprob: -18.350208282470703
    10. '(b' → logprob: -18.725208282470703

Token 95: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.016038356348872185
    2. '%' → logprob: -4.141038417816162
    3. ' ' → logprob: -12.641037940979004
    4. '%i' → logprob: -14.891037940979004
    5. ' ' → logprob: -15.141037940979004
    6. '%b' → logprob: -16.14103889465332
    7. '%s' → logprob: -17.39103889465332
    8. '%B' → logprob: -17.64103889465332
    9. '%e' → logprob: -18.14103889465332
    10. '%d' → logprob: -18.26603889465332

Token 96: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00133595522493124
    2. ' i' → logprob: -6.626336097717285
    3. '<|end|>' → logprob: -11.751336097717285
    4. ' ' → logprob: -14.376336097717285
    5. '   ' → logprob: -14.376336097717285
    6. '<|end|>' → logprob: -14.626336097717285
    7. '	i' → logprob: -15.251336097717285
    8. '  ' → logprob: -16.12633514404297
    9. '2' → logprob: -16.50133514404297
    10. '_i' → logprob: -17.25133514404297

Token 97: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47408393025398254
    2. ' ==' → logprob: -0.9740839004516602
    3. ')==' → logprob: -13.09908390045166
    4. '=' → logprob: -13.72408390045166
    5. ']==' → logprob: -13.84908390045166
    6. ' ' → logprob: -13.97408390045166
    7. '===' → logprob: -14.22408390045166
    8. '```' → logprob: -14.84908390045166
    9. '()==' → logprob: -15.59908390045166
    10. '==
' → logprob: -15.97408390045166

Token 98: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0046210684813559055
    2. ' ' → logprob: -5.3796210289001465
    3. '   ' → logprob: -14.129621505737305
    4. '  ' → logprob: -16.254621505737305
    5. '```' → logprob: -17.629621505737305
    6. '2' → logprob: -18.004621505737305
    7. ' ' → logprob: -18.254621505737305
    8. '    ' → logprob: -18.254621505737305
    9. '       ' → logprob: -18.504621505737305
    10. '           ' → logprob: -18.879621505737305

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '2' → logprob: -17.625051498413086
    4. '   ' → logprob: -17.875051498413086
    5. '  ' → logprob: -19.375051498413086
    6. '```' → logprob: -19.375051498413086
    7. '1' → logprob: -19.750051498413086
    8. ' ' → logprob: -20.125051498413086
    9. '           ' → logprob: -20.875051498413086
    10. '    ' → logprob: -21.125051498413086

Token 100: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3334013521671295
    2. ':' → logprob: -1.3334013223648071
    3. ':
' → logprob: -4.083401203155518
    4. '   ' → logprob: -6.333401203155518
    5. 'B' → logprob: -8.208401679992676
    6. '<|end|>' → logprob: -8.333401679992676
    7. '):
' → logprob: -8.458401679992676
    8. ' B' → logprob: -8.833401679992676
    9. ',' → logprob: -9.458401679992676
    10. '):' → logprob: -9.833401679992676

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06890536099672318
    2. 'B' → logprob: -3.4439053535461426
    3. '   ' → logprob: -3.9439053535461426
    4. ' B' → logprob: -4.193905353546143
    5. '	B' → logprob: -9.4439058303833
    6. ' ' → logprob: -10.9439058303833
    7. '      ' → logprob: -10.9439058303833
    8. '           ' → logprob: -11.0689058303833
    9. '     ' → logprob: -11.5689058303833
    10. '  ' → logprob: -11.6939058303833

Token 102: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -1.6240566083070007e-06
    2. ' B' → logprob: -13.375001907348633
    3. '	B' → logprob: -18.500001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '>B' → logprob: -19.750001907348633
    6. '<|end|>' → logprob: -20.250001907348633
    7. 'b' → logprob: -20.375001907348633
    8. '`' → logprob: -20.500001907348633
    9. '```' → logprob: -20.500001907348633
    10. '_B' → logprob: -20.875001907348633

Token 103: '_dec' (ID: 33390)
  Prédit: '_dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dec' → logprob: -3.128163257315464e-07
    2. 'dec' → logprob: -16.375
    3. '_des' → logprob: -17.125
    4. '_de' → logprob: -17.25
    5. ''_' → logprob: -17.25
    6. '"_' → logprob: -17.375
    7. '_dem' → logprob: -17.875
    8. 'Dec' → logprob: -18.125
    9. '*_' → logprob: -18.5
    10. '   ' → logprob: -18.625

Token 104: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0024832691997289658
    2. '.' → logprob: -6.002483367919922
    3. ' .' → logprob: -11.877483367919922
    4. 'add' → logprob: -15.002483367919922
    5. '.Add' → logprob: -15.877483367919922
    6. '   ' → logprob: -16.252483367919922
    7. ' add' → logprob: -18.127483367919922
    8. '.append' → logprob: -18.627483367919922
    9. '<|end|>' → logprob: -19.127483367919922
    10. '.remove' → logprob: -19.252483367919922

Token 105: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.625
    3. '(ii' → logprob: -17.5
    4. ' (' → logprob: -20.375
    5. '(I' → logprob: -21.125
    6. '(int' → logprob: -21.375
    7. '(iv' → logprob: -22.0
    8. '(
' → logprob: -22.375
    9. '(ierr' → logprob: -22.875
    10. '   ' → logprob: -22.875

Token 106: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3809751868247986
    2. ')
' → logprob: -1.5059752464294434
    3. '   ' → logprob: -2.8809752464294434
    4. '       ' → logprob: -3.2559752464294434
    5. ')i' → logprob: -8.505974769592285
    6. ')
' → logprob: -10.380974769592285
    7. '```' → logprob: -11.005974769592285
    8. '  ' → logprob: -11.130974769592285
    9. ' ' → logprob: -11.130974769592285
    10. '           ' → logprob: -11.255974769592285

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31412750482559204
    2. 'b' → logprob: -1.3141274452209473
    3. '   ' → logprob: -7.814127445220947
    4. ' b' → logprob: -8.314127922058105
    5. '
' → logprob: -9.064127922058105
    6. '```' → logprob: -10.064127922058105
    7. '        
' → logprob: -11.189127922058105
    8. '``' → logprob: -11.314127922058105
    9. 'B' → logprob: -11.689127922058105
    10. '	b' → logprob: -12.064127922058105

Token 108: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -3.054500666621607e-06
    2. ' b' → logprob: -12.75000286102295
    3. '```' → logprob: -18.250003814697266
    4. '   ' → logprob: -19.250003814697266
    5. '	b' → logprob: -19.375003814697266
    6. '       ' → logprob: -19.500003814697266
    7. 'B' → logprob: -21.500003814697266
    8. 'print' → logprob: -21.750003814697266
    9. ' б' → logprob: -22.500003814697266
    10. ')b' → logprob: -22.625003814697266

Token 109: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.537628173828125
    2. ' //' → logprob: -1.037628173828125
    3. '//' → logprob: -2.787628173828125
    4. '```' → logprob: -12.287628173828125
    5. '/=' → logprob: -14.037628173828125
    6. '=' → logprob: -14.412628173828125
    7. ' ' → logprob: -15.662628173828125
    8. ' ' → logprob: -15.787628173828125
    9. '   ' → logprob: -15.912628173828125
    10. '%' → logprob: -16.537628173828125

Token 110: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.226628895296017e-06
    2. '=i' → logprob: -12.125007629394531
    3. 'i' → logprob: -13.375007629394531
    4. '=}' → logprob: -16.50000762939453
    5. '=
' → logprob: -17.25000762939453
    6. '_=' → logprob: -17.62500762939453
    7. ' i' → logprob: -18.37500762939453
    8. '2' → logprob: -18.87500762939453
    9. '=

' → logprob: -18.87500762939453
    10. '=int' → logprob: -19.25000762939453

Token 111: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011712945997714996
    2. ' i' → logprob: -6.751171112060547
    3. '   ' → logprob: -13.876171112060547
    4. '	i' → logprob: -16.626171112060547
    5. '       ' → logprob: -17.876171112060547
    6. ' ' → logprob: -18.126171112060547
    7. '  ' → logprob: -18.626171112060547
    8. '```' → logprob: -18.626171112060547
    9. '    ' → logprob: -18.751171112060547
    10. '*i' → logprob: -19.001171112060547

Token 112: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002610736759379506
    2. 'i' → logprob: -6.002610683441162
    3. ' i' → logprob: -9.25261116027832
    4. '	i' → logprob: -10.37761116027832
    5. ' ' → logprob: -13.00261116027832
    6. '```' → logprob: -13.00261116027832
    7. '  ' → logprob: -13.25261116027832
    8. '       ' → logprob: -14.00261116027832
    9. '1' → logprob: -15.00261116027832
    10. '[i' → logprob: -15.12761116027832

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000578292878344655
    2. 'i' → logprob: -7.5005784034729
    3. ' i' → logprob: -10.750577926635742
    4. '```' → logprob: -12.875577926635742
    5. '	i' → logprob: -13.875577926635742
    6. ' ' → logprob: -16.000577926635742
    7. '       ' → logprob: -16.125577926635742
    8. '  ' → logprob: -16.250577926635742
    9. '``' → logprob: -17.500577926635742
    10. '
' → logprob: -17.500577926635742

Token 114: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.08425592631101608
    2. '1' → logprob: -2.5842559337615967
    3. '   ' → logprob: -5.459255695343018
    4. ' i' → logprob: -6.834255695343018
    5. '	i' → logprob: -11.209256172180176
    6. ' ' → logprob: -13.209256172180176
    7. '```' → logprob: -13.209256172180176
    8. '       ' → logprob: -14.209256172180176
    9. '[i' → logprob: -15.334256172180176
    10. '(i' → logprob: -15.459256172180176

Token 115: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018171247094869614
    2. ' +=' → logprob: -4.018171310424805
    3. '=' → logprob: -11.393171310424805
    4. '+' → logprob: -11.643171310424805
    5. '+='' → logprob: -14.268171310424805
    6. ']+=' → logprob: -15.018171310424805
    7. '+="' → logprob: -15.143171310424805
    8. '+=(' → logprob: -17.393171310424805
    9. '   ' → logprob: -17.518171310424805
    10. '```' → logprob: -18.018171310424805

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.500036239624023
    4. '```' → logprob: -17.750036239624023
    5. '2' → logprob: -18.750036239624023
    6. '`' → logprob: -19.875036239624023
    7. '	' → logprob: -20.187536239624023
    8. '[' → logprob: -20.625036239624023
    9. ' ' → logprob: -20.812536239624023
    10. '
' → logprob: -21.000036239624023

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.500001907348633
    4. '2' → logprob: -18.812501907348633
    5. '<|end|>' → logprob: -19.625001907348633
    6. '   ' → logprob: -19.875001907348633
    7. '`' → logprob: -20.125001907348633
    8. '3' → logprob: -20.562501907348633
    9. '１' → logprob: -20.937501907348633
    10. 'python' → logprob: -21.000001907348633

Token 118: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.7697225252486533e-06
    2. '```' → logprob: -12.625003814697266
    3. ' if' → logprob: -16.000003814697266
    4. 'for' → logprob: -17.375003814697266
    5. '
' → logprob: -17.500003814697266
    6. 'B' → logprob: -17.625003814697266
    7. '\
' → logprob: -18.500003814697266
    8. 'while' → logprob: -18.625003814697266
    9. '    
' → logprob: -18.625003814697266
    10. '``' → logprob: -18.750003814697266

Token 119: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.955703818472102e-05
    2. '```' → logprob: -9.750059127807617
    3. '
' → logprob: -14.375059127807617
    4. '``' → logprob: -14.875059127807617
    5. ' if' → logprob: -16.125059127807617
    6. '\
' → logprob: -16.625059127807617
    7. '    
' → logprob: -17.000059127807617
    8. '  
' → logprob: -17.625059127807617
    9. 'If' → logprob: -18.250059127807617
    10. 'while' → logprob: -18.375059127807617

Token 120: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759395360946655
    2. 'b' → logprob: -0.8259395360946655
    3. ' ' → logprob: -16.325939178466797
    4. 'B' → logprob: -17.325939178466797
    5. '>b' → logprob: -18.700939178466797
    6. ' ' → logprob: -18.950939178466797
    7. '	b' → logprob: -19.200939178466797
    8. '   ' → logprob: -19.950939178466797
    9. '<|end|>' → logprob: -20.200939178466797
    10. ' б' → logprob: -20.200939178466797

Token 121: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3132701516151428
    2. '>' → logprob: -1.313270092010498
    3. ' ' → logprob: -12.063270568847656
    4. '1' → logprob: -13.313270568847656
    5. ' ' → logprob: -14.438270568847656
    6. '   ' → logprob: -16.188270568847656
    7. '...' → logprob: -16.688270568847656
    8. '```' → logprob: -16.813270568847656
    9. '  ' → logprob: -17.188270568847656
    10. '2' → logprob: -17.438270568847656

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026300758123397827
    2. ' ' → logprob: -3.6513006687164307
    3. '   ' → logprob: -16.27630043029785
    4. '<|end|>' → logprob: -16.27630043029785
    5. ' ' → logprob: -16.40130043029785
    6. '>' → logprob: -16.52630043029785
    7. '```' → logprob: -17.15130043029785
    8. '  ' → logprob: -18.52630043029785
    9. '...' → logprob: -19.02630043029785
    10. '
' → logprob: -19.15130043029785

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.375009536743164
    4. '>' → logprob: -18.625009536743164
    5. '```' → logprob: -18.875009536743164
    6. '<|end|>' → logprob: -18.875009536743164
    7. '
' → logprob: -20.250009536743164
    8. '0' → logprob: -20.625009536743164
    9. '  ' → logprob: -21.000009536743164
    10. '[' → logprob: -21.062509536743164

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05086984857916832
    2. '   ' → logprob: -3.675869941711426
    3. ':
' → logprob: -3.800869941711426
    4. '>' → logprob: -7.550869941711426
    5. ' B' → logprob: -7.550869941711426
    6. 'B' → logprob: -7.800869941711426
    7. ':B' → logprob: -8.300869941711426
    8. '>B' → logprob: -8.925869941711426
    9. '<|end|>' → logprob: -11.050869941711426
    10. '	B' → logprob: -11.175869941711426

Token 125: '   ' (ID: 271)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.35370102524757385
    2. '   ' → logprob: -1.3537009954452515
    3. ' B' → logprob: -3.228701114654541
    4. '	B' → logprob: -10.853700637817383
    5. ' ' → logprob: -13.478700637817383
    6. '  ' → logprob: -13.853700637817383
    7. 'b' → logprob: -14.478700637817383
    8. '    ' → logprob: -15.228700637817383
    9. '>B' → logprob: -15.353700637817383
    10. '```' → logprob: -15.353700637817383

Token 126: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -1.8624639324116288e-06
    2. ' B' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.375001907348633
    4. 'b' → logprob: -20.125001907348633
    5. '	B' → logprob: -20.875001907348633
    6. '>B' → logprob: -22.500001907348633
    7. '
' → logprob: -22.625001907348633
    8. '{' → logprob: -22.750001907348633
    9. '`' → logprob: -23.375001907348633
    10. '_B' → logprob: -23.500001907348633

Token 127: '_dec' (ID: 33390)
  Prédit: '_dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dec' → logprob: -1.8624639324116288e-06
    2. 'dec' → logprob: -13.875001907348633
    3. 'B' → logprob: -14.875001907348633
    4. 'Dec' → logprob: -16.125001907348633
    5. '_de' → logprob: -16.250001907348633
    6. '_DEC' → logprob: -17.125001907348633
    7. '_b' → logprob: -17.375001907348633
    8. '_des' → logprob: -17.375001907348633
    9. '_dem' → logprob: -17.625001907348633
    10. '_d' → logprob: -18.000001907348633

Token 128: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0009181279456242919
    2. '.' → logprob: -7.000917911529541
    3. 'add' → logprob: -12.1259183883667
    4. ' .' → logprob: -14.0009183883667
    5. '.Add' → logprob: -16.000917434692383
    6. '.update' → logprob: -16.375917434692383
    7. '.append' → logprob: -17.000917434692383
    8. '   ' → logprob: -17.625917434692383
    9. '.union' → logprob: -18.125917434692383
    10. '_add' → logprob: -18.250917434692383

Token 129: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.128163257315464e-07
    2. 'b' → logprob: -15.75
    3. '(' → logprob: -17.625
    4. '(B' → logprob: -17.75
    5. '(
' → logprob: -22.625
    6. '(a' → logprob: -22.75
    7. ' (' → logprob: -22.875
    8. '(br' → logprob: -23.375
    9. '(bb' → logprob: -23.75
    10. '	b' → logprob: -24.0

Token 130: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ')
' → logprob: -12.500004768371582
    3. ')

' → logprob: -14.000004768371582
    4. ')`' → logprob: -15.500004768371582
    5. ')b' → logprob: -15.625004768371582
    6. ' )' → logprob: -15.875004768371582
    7. '())' → logprob: -17.0000057220459
    8. ')#' → logprob: -17.2500057220459
    9. '}' → logprob: -17.6250057220459
    10. ')a' → logprob: -18.2500057220459

Token 131: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4490600824356079
    2. 'common' → logprob: -1.199060082435608
    3. 'if' → logprob: -3.3240599632263184
    4. 'C' → logprob: -5.199059963226318
    5. 'result' → logprob: -5.199059963226318
    6. 'g' → logprob: -5.449059963226318
    7. 'union' → logprob: -5.824059963226318
    8. 'inter' → logprob: -6.699059963226318
    9. 'ans' → logprob: -7.074059963226318
    10. 'div' → logprob: -7.199059963226318

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018170898780226707
    2. '=' → logprob: -4.0181708335876465
    3. '_' → logprob: -11.143171310424805
    4. '.' → logprob: -12.393171310424805
    5. ' ' → logprob: -14.893171310424805
    6. '_space' → logprob: -15.018171310424805
    7. '_=' → logprob: -15.268171310424805
    8. '.=' → logprob: -15.518171310424805
    9. 's' → logprob: -15.643171310424805
    10. ',' → logprob: -16.018171310424805

Token 133: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2117830365896225
    2. 'len' → logprob: -1.7117830514907837
    3. ' A' → logprob: -4.961782932281494
    4. 'sorted' → logprob: -6.711782932281494
    5. ' len' → logprob: -7.211782932281494
    6. 'list' → logprob: -7.336782932281494
    7. '(A' → logprob: -8.961783409118652
    8. '0' → logprob: -9.086783409118652
    9. 'sum' → logprob: -9.086783409118652
    10. 'max' → logprob: -9.586783409118652

Token 134: '1' (ID: 16)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4383763074874878
    2. 'len' → logprob: -1.0633763074874878
    3. 'sorted' → logprob: -5.313376426696777
    4. '(A' → logprob: -6.688376426696777
    5. 'list' → logprob: -6.688376426696777
    6. '1' → logprob: -7.188376426696777
    7. '0' → logprob: -7.938376426696777
    8. '(len' → logprob: -8.188376426696777
    9. 'sum' → logprob: -8.563376426696777
    10. 'str' → logprob: -8.688376426696777

Token 135: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018932918086647987
    2. '
' → logprob: -4.768932819366455
    3. ' for' → logprob: -5.268932819366455
    4. 'while' → logprob: -5.893932819366455
    5. '\n' → logprob: -7.018932819366455
    6. '\' → logprob: -7.643932819366455
    7. ',' → logprob: -8.143933296203613
    8. '*' → logprob: -8.893933296203613
    9. '\
' → logprob: -9.268933296203613
    10. '```' → logprob: -9.268933296203613

Token 136: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.534558552724775e-05
    2. 'common' → logprob: -10.625025749206543
    3. ' for' → logprob: -14.625025749206543
    4. 'while' → logprob: -15.500025749206543
    5. 'if' → logprob: -15.875025749206543
    6. 'div' → logprob: -16.250024795532227
    7. 'g' → logprob: -16.875024795532227
    8. 'shared' → logprob: -17.250024795532227
    9. '```' → logprob: -17.750024795532227
    10. 'from' → logprob: -17.875024795532227

Token 137: ' a' (ID: 261)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4660833477973938
    2. ' c' → logprob: -2.466083288192749
    3. ' i' → logprob: -2.466083288192749
    4. ' x' → logprob: -2.591083288192749
    5. ' d' → logprob: -3.591083288192749
    6. 'p' → logprob: -3.716083288192749
    7. ' prime' → logprob: -3.716083288192749
    8. ' factor' → logprob: -4.091083526611328
    9. 'i' → logprob: -5.341083526611328
    10. ' v' → logprob: -5.466083526611328

Token 138: ' in' (ID: 306)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.16139867901802063
    2. '_' → logprob: -2.1613986492156982
    3. '_f' → logprob: -4.286398887634277
    4. '_div' → logprob: -4.661398887634277
    5. 'factor' → logprob: -6.161398887634277
    6. '_prime' → logprob: -6.286398887634277
    7. '_in' → logprob: -6.411398887634277
    8. '_dec' → logprob: -6.536398887634277
    9. ' in' → logprob: -6.786398887634277
    10. '_fac' → logprob: -7.036398887634277

Token 139: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0019774071406573057
    2. ' A' → logprob: -6.251977443695068
    3. '(A' → logprob: -10.00197696685791
    4. '(' → logprob: -13.37697696685791
    5. ' (' → logprob: -13.37697696685791
    6. ' ' → logprob: -15.62697696685791
    7. '   ' → logprob: -16.501977920532227
    8. 'list' → logprob: -16.501977920532227
    9. '  ' → logprob: -17.251977920532227
    10. 'B' → logprob: -18.126977920532227

Token 140: '_dec' (ID: 33390)
  Prédit: '_dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dec' → logprob: -6.704273118884885e-07
    2. 'dec' → logprob: -14.250000953674316
    3. '_de' → logprob: -18.25
    4. 'Dec' → logprob: -18.375
    5. '_' → logprob: -19.375
    6. '_d' → logprob: -19.75
    7. '_def' → logprob: -20.25
    8. '_DEC' → logprob: -20.5
    9. '_div' → logprob: -20.625
    10. ' _' → logprob: -21.0

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5695290565490723
    2. '|' → logprob: -1.6945290565490723
    3. '&' → logprob: -2.4445290565490723
    4. '.inter' → logprob: -2.4445290565490723
    5. '.union' → logprob: -3.3195290565490723
    6. '&B' → logprob: -3.4445290565490723
    7. ' &' → logprob: -5.319529056549072
    8. 'inter' → logprob: -6.819529056549072
    9. 'intersection' → logprob: -7.069529056549072
    10. ':B' → logprob: -7.819529056549072

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05115068703889847
    2. 'if' → logprob: -3.1761507987976074
    3. 'for' → logprob: -5.426150798797607
    4. ' if' → logprob: -6.051150798797607
    5. ' for' → logprob: -7.426150798797607
    6. ':
' → logprob: -7.551150798797607
    7. ':' → logprob: -8.67615032196045
    8. ' ' → logprob: -10.30115032196045
    9. 'ans' → logprob: -11.17615032196045
    10. '       ' → logprob: -12.67615032196045

Token 143: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011495749466121197
    2. 'for' → logprob: -4.761495590209961
    3. ' if' → logprob: -5.886495590209961
    4. '   ' → logprob: -9.761495590209961
    5. ' for' → logprob: -10.386495590209961
    6. 'ans' → logprob: -11.511495590209961
    7. ' ' → logprob: -13.636495590209961
    8. ' ans' → logprob: -15.511495590209961
    9. '
' → logprob: -15.886495590209961
    10. '	if' → logprob: -16.26149559020996

Token 144: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023245595395565033
    2. ' a' → logprob: -3.7732455730438232
    3. ' ' → logprob: -17.273244857788086
    4. '   ' → logprob: -17.398244857788086
    5. '	a' → logprob: -17.648244857788086
    6. ' ' → logprob: -19.148244857788086
    7. '(a' → logprob: -19.398244857788086
    8. '  ' → logprob: -19.898244857788086
    9. 'а' → logprob: -19.898244857788086
    10. '[a' → logprob: -20.773244857788086

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1275617778301239
    2. 'in' → logprob: -2.1275618076324463
    3. ' ' → logprob: -7.377561569213867
    4. ' ' → logprob: -13.002561569213867
    5. ' a' → logprob: -13.377561569213867
    6. ' not' → logprob: -13.627561569213867
    7. ' B' → logprob: -14.252561569213867
    8. ' i' → logprob: -14.627561569213867
    9. 'B' → logprob: -15.127561569213867
    10. '<|end|>' → logprob: -15.127561569213867

Token 146: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04858771339058876
    2. ' B' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.298587799072266
    4. '   ' → logprob: -17.298587799072266
    5. ' ' → logprob: -17.673587799072266
    6. '	B' → logprob: -18.173587799072266
    7. '```' → logprob: -18.298587799072266
    8. '`' → logprob: -18.548587799072266
    9. '_B' → logprob: -18.673587799072266
    10. ',' → logprob: -18.923587799072266

Token 147: '_dec' (ID: 33390)
  Prédit: '_dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dec' → logprob: -1.9361264946837764e-07
    2. 'dec' → logprob: -16.25
    3. 'Dec' → logprob: -17.125
    4. '_def' → logprob: -18.25
    5. '_de' → logprob: -19.0
    6. '_DEC' → logprob: -19.625
    7. '_des' → logprob: -19.625
    8. '_d' → logprob: -19.875
    9. ''_' → logprob: -20.375
    10. '```' → logprob: -20.375

Token 148: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4740983843803406
    2. ':' → logprob: -0.9740983843803406
    3. '):
' → logprob: -11.724098205566406
    4. '   ' → logprob: -12.099098205566406
    5. ':
' → logprob: -12.474098205566406
    6. ':

' → logprob: -13.724098205566406
    7. ' :
' → logprob: -14.224098205566406
    8. '):' → logprob: -14.599098205566406
    9. '       ' → logprob: -15.349098205566406
    10. ' and' → logprob: -15.349098205566406

Token 149: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14810289442539215
    2. ' ans' → logprob: -2.6481029987335205
    3. 'ans' → logprob: -2.7731029987335205
    4. '	ans' → logprob: -6.023102760314941
    5. '       ' → logprob: -6.398102760314941
    6. '
' → logprob: -9.398102760314941
    7. '```' → logprob: -9.523102760314941
    8. '(ans' → logprob: -9.648102760314941
    9. '    
' → logprob: -10.523102760314941
    10. ',' → logprob: -11.148102760314941

Token 150: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0017497921362519264
    2. ' ans' → logprob: -6.3767499923706055
    3. '   ' → logprob: -10.376749992370605
    4. '
' → logprob: -11.876749992370605
    5. '	ans' → logprob: -11.876749992370605
    6. 'answer' → logprob: -14.376749992370605
    7. '(ans' → logprob: -14.501749992370605
    8. '```' → logprob: -14.626749992370605
    9. '       ' → logprob: -15.376749992370605
    10. '    
' → logprob: -15.376749992370605

Token 151: ' +=' (ID: 2757)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.28807133436203003
    2. ' *=' → logprob: -1.5380713939666748
    3. '*' → logprob: -3.788071393966675
    4. '=' → logprob: -4.413071155548096
    5. '+=' → logprob: -7.538071155548096
    6. ' =' → logprob: -9.288071632385254
    7. ' +=' → logprob: -9.913071632385254
    8. ' ' → logprob: -10.788071632385254
    9. ' *' → logprob: -11.538071632385254
    10. '```' → logprob: -11.788071632385254

Token 152: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19387784600257874
    2. ' ' → logprob: -1.9438778162002563
    3. 'a' → logprob: -3.568877935409546
    4. ' a' → logprob: -5.318877696990967
    5. '0' → logprob: -12.693878173828125
    6. '2' → logprob: -13.568878173828125
    7. '10' → logprob: -14.568878173828125
    8. '100' → logprob: -14.568878173828125
    9. '(a' → logprob: -14.568878173828125
    10. '-' → logprob: -15.068878173828125

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.250014305114746
    3. 'a' → logprob: -14.125014305114746
    4. '0' → logprob: -15.750014305114746
    5. '2' → logprob: -17.62501335144043
    6. '-' → logprob: -18.37501335144043
    7. 'ans' → logprob: -18.75001335144043
    8. '10' → logprob: -19.12501335144043
    9. '100' → logprob: -19.25001335144043
    10. '+' → logprob: -19.37501335144043

Token 154: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9623810658231378e-05
    2. '
' → logprob: -11.375020027160645
    3. ' print' → logprob: -11.750020027160645
    4. '```' → logprob: -17.000019073486328
    5. '
' → logprob: -18.375019073486328
    6. 'for' → logprob: -18.625019073486328
    7. '.print' → logprob: -18.625019073486328
    8. '  
' → logprob: -18.750019073486328
    9. '(print' → logprob: -18.875019073486328
    10. '

' → logprob: -19.625019073486328

Token 155: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012749579036608338
    2. '
' → logprob: -9.000127792358398
    3. ' print' → logprob: -12.500127792358398
    4. '
' → logprob: -15.750127792358398
    5. '.print' → logprob: -17.2501277923584
    6. ' 
' → logprob: -17.3751277923584
    7. '(print' → logprob: -17.5001277923584
    8. '  
' → logprob: -18.5001277923584
    9. '-print' → logprob: -18.5001277923584
    10. ')' → logprob: -18.5001277923584

Token 156: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.062437381595373154
    2. '(' → logprob: -2.8124372959136963
    3. '(len' → logprob: -7.937437534332275
    4. '()' → logprob: -10.062437057495117
    5. 'ans' → logprob: -10.062437057495117
    6. '('' → logprob: -11.312437057495117
    7. '((' → logprob: -12.437437057495117
    8. '("' → logprob: -12.937437057495117
    9. '(a' → logprob: -13.062437057495117
    10. '("("' → logprob: -13.437437057495117

Token 157: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.375
    3. ')`' → logprob: -16.25
    4. ')
' → logprob: -17.0
    5. ')#' → logprob: -17.5
    6. '))' → logprob: -17.625
    7. '+' → logprob: -17.625
    8. ')}' → logprob: -19.0
    9. '```' → logprob: -19.0
    10. '()' → logprob: -19.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 155
Tokens correctement prédits (1ère position, stricte): 61
Tokens correctement prédits (1ère position, avec adaptation): 70
Tokens correctement prédits (top 10): 139
Précision stricte (1ère position): 39.35%
Précision adaptée (1ère position): 45.16%
Précision (top 10): 89.68%
================================================================================
