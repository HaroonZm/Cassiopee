================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

int1 = lambda x: int(x) - 1
read = sys.stdin.buffer.read
readline = sys.stdin.buffer.readline
readlines = sys.stdin.buffer.readlines
sys.setrecursionlimit(500000)

R = int(read())
print(2 * R * math.pi)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00043126524542458355
    2. 'os' → logprob: -7.750431060791016
    3. '"os' → logprob: -15.125431060791016
    4. ' re' → logprob: -16.375431060791016
    5. ' math' → logprob: -16.625431060791016
    6. '	os' → logprob: -17.125431060791016
    7. '_os' → logprob: -17.250431060791016
    8. ' o' → logprob: -17.375431060791016
    9. ' json' → logprob: -18.000431060791016
    10. ' ' → logprob: -18.250431060791016

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2752407193183899
    2. '\n' → logprob: -2.775240659713745
    3. 'import' → logprob: -3.025240659713745
    4. '<|end|>' → logprob: -3.275240659713745
    5. '\' → logprob: -3.400240659713745
    6. '
' → logprob: -3.650240659713745
    7. '```' → logprob: -4.400240898132324
    8. '

' → logprob: -5.275240898132324
    9. '<|end|>' → logprob: -5.275240898132324
    10. ',' → logprob: -5.900240898132324

Token 6: 'int' (ID: 491)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.054233431816101
    2. '\' → logprob: -1.429233431816101
    3. 'import' → logprob: -2.1792335510253906
    4. '\n' → logprob: -2.1792335510253906
    5. '```' → logprob: -2.4292335510253906
    6. 'def' → logprob: -3.4292335510253906
    7. '
' → logprob: -4.179233551025391
    8. ',' → logprob: -4.679233551025391
    9. '`' → logprob: -4.929233551025391
    10. '*' → logprob: -4.929233551025391

Token 7: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13663768768310547
    2. ' ' → logprob: -2.3866376876831055
    3. 'er' → logprob: -4.2616376876831055
    4. '32' → logprob: -4.6366376876831055
    5. 'eger' → logprob: -5.7616376876831055
    6. '_' → logprob: -6.5116376876831055
    7. '('' → logprob: -6.5116376876831055
    8. '(space' → logprob: -7.0116376876831055
    9. '   ' → logprob: -7.3866376876831055
    10. '  ' → logprob: -7.3866376876831055

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.077755868434906
    2. ' ' → logprob: -3.452755928039551
    3. '_' → logprob: -3.952755928039551
    4. '1' → logprob: -4.202755928039551
    5. ')' → logprob: -6.077755928039551
    6. ' (' → logprob: -6.202755928039551
    7. '```' → logprob: -7.077755928039551
    8. '  ' → logprob: -7.327755928039551
    9. '2' → logprob: -7.327755928039551
    10. ',' → logprob: -8.32775592803955

Token 9: ' lambda' (ID: 27871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011441177688539028
    2. '1' → logprob: -5.136441230773926
    3. '0' → logprob: -6.261441230773926
    4. '10' → logprob: -6.761441230773926
    5. '5' → logprob: -6.886441230773926
    6. ' int' → logprob: -7.011441230773926
    7. '42' → logprob: -8.636441230773926
    8. 'int' → logprob: -9.136441230773926
    9. '2' → logprob: -9.386441230773926
    10. '3' → logprob: -10.011441230773926

Token 10: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06832635402679443
    2. ' ' → logprob: -2.818326473236084
    3. 'x' → logprob: -5.193326473236084
    4. '  ' → logprob: -8.318325996398926
    5. ' a' → logprob: -8.318325996398926
    6. ' n' → logprob: -8.943325996398926
    7. ' s' → logprob: -10.693325996398926
    8. ' space' → logprob: -10.818325996398926
    9. ' :' → logprob: -11.068325996398926
    10. 'a' → logprob: -11.068325996398926

Token 11: ':' (ID: 25)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.4380658268928528
    2. ':' → logprob: -1.063065767288208
    3. ' x' → logprob: -4.813066005706787
    4. ' ' → logprob: -7.563066005706787
    5. ',' → logprob: -8.563065528869629
    6. ':x' → logprob: -8.563065528869629
    7. ' ,' → logprob: -9.063065528869629
    8. 'x' → logprob: -9.313065528869629
    9. '**' → logprob: -10.813065528869629
    10. ' **' → logprob: -11.688065528869629

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16077451407909393
    2. 'int' → logprob: -1.9107744693756104
    3. ' x' → logprob: -7.9107747077941895
    4. 'x' → logprob: -9.660774230957031
    5. ' ' → logprob: -9.785774230957031
    6. '(int' → logprob: -10.660774230957031
    7. ' math' → logprob: -11.160774230957031
    8. ' sys' → logprob: -12.410774230957031
    9. '	int' → logprob: -12.785774230957031
    10. 'math' → logprob: -12.785774230957031

Token 13: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001267016981728375
    2. '(x' → logprob: -7.126266956329346
    3. ' (' → logprob: -8.126267433166504
    4. ' ' → logprob: -10.251267433166504
    5. '1' → logprob: -10.626267433166504
    6. '<|end|>' → logprob: -10.751267433166504
    7. '32' → logprob: -10.876267433166504
    8. 's' → logprob: -11.001267433166504
    9. '('' → logprob: -11.626267433166504
    10. '40' → logprob: -12.001267433166504

Token 14: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.023293538717553e-05
    2. '(' → logprob: -11.125030517578125
    3. '))' → logprob: -12.750030517578125
    4. ' )' → logprob: -12.750030517578125
    5. '(x' → logprob: -12.750030517578125
    6. ')x' → logprob: -13.625030517578125
    7. '[' → logprob: -14.000030517578125
    8. ')))' → logprob: -14.250030517578125
    9. ')>' → logprob: -14.250030517578125
    10. '),' → logprob: -14.750030517578125

Token 15: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014432109892368317
    2. '(x' → logprob: -7.751443386077881
    3. '(
' → logprob: -7.751443386077881
    4. ',' → logprob: -8.751442909240723
    5. ')' → logprob: -9.001442909240723
    6. '<|end|>' → logprob: -9.501442909240723
    7. '(

' → logprob: -11.126442909240723
    8. ' (' → logprob: -11.126442909240723
    9. '#' → logprob: -11.251442909240723
    10. '(math' → logprob: -11.251442909240723

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22548654675483704
    2. '1' → logprob: -1.6004865169525146
    3. ' math' → logprob: -10.475486755371094
    4. '2' → logprob: -10.975486755371094
    5. '0' → logprob: -11.975486755371094
    6. '5' → logprob: -12.225486755371094
    7. '10' → logprob: -12.600486755371094
    8. '3' → logprob: -13.225486755371094
    9. '32' → logprob: -13.225486755371094
    10. '7' → logprob: -13.725486755371094

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020670343190431595
    2. ' ' → logprob: -3.8956704139709473
    3. '2' → logprob: -10.270669937133789
    4. '0' → logprob: -10.520669937133789
    5. '32' → logprob: -11.020669937133789
    6. '5' → logprob: -11.270669937133789
    7. '10' → logprob: -12.145669937133789
    8. '3' → logprob: -12.520669937133789
    9. 'int' → logprob: -12.770669937133789
    10. ' int' → logprob: -12.895669937133789

Token 18: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022239116951823235
    2. '*' → logprob: -4.6472392082214355
    3. ')' → logprob: -5.3972392082214355
    4. '(
' → logprob: -6.1472392082214355
    5. '
' → logprob: -6.3972392082214355
    6. '(x' → logprob: -7.1472392082214355
    7. ',' → logprob: -7.6472392082214355
    8. ' (' → logprob: -7.8972392082214355
    9. '\n' → logprob: -8.022238731384277
    10. '\' → logprob: -8.272238731384277

Token 19: 'read' (ID: 1293)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5263038277626038
    2. '*' → logprob: -1.151303768157959
    3. '(' → logprob: -3.401303768157959
    4. '
' → logprob: -4.151303768157959
    5. '<|end|>' → logprob: -5.151303768157959
    6. '\n' → logprob: -5.276303768157959
    7. ',' → logprob: -5.401303768157959
    8. '+' → logprob: -5.526303768157959
    9. '_' → logprob: -5.776303768157959
    10. '#' → logprob: -5.901303768157959

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11276714503765106
    2. '=' → logprob: -2.862767219543457
    3. '(' → logprob: -3.737767219543457
    4. ')' → logprob: -4.362767219543457
    5. '()' → logprob: -5.612767219543457
    6. '_' → logprob: -5.862767219543457
    7. '_line' → logprob: -5.862767219543457
    8. 'line' → logprob: -7.237767219543457
    9. 's' → logprob: -7.737767219543457
    10. '_input' → logprob: -7.862767219543457

Token 21: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.24708911776542664
    2. 'sys' → logprob: -2.247089147567749
    3. 'lambda' → logprob: -2.747089147567749
    4. ' sys' → logprob: -3.747089147567749
    5. ' input' → logprob: -3.872089147567749
    6. ' lambda' → logprob: -5.37208890914917
    7. '(sys' → logprob: -10.747089385986328
    8. '(lambda' → logprob: -11.122089385986328
    9. '=sys' → logprob: -11.872089385986328
    10. 'int' → logprob: -11.997089385986328

Token 22: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.010397985577583313
    2. '.' → logprob: -4.760397911071777
    3. '.argv' → logprob: -6.635397911071777
    4. '.stdout' → logprob: -7.885397911071777
    5. '.std' → logprob: -10.260397911071777
    6. ' .' → logprob: -10.385397911071777
    7. '.readline' → logprob: -11.010397911071777
    8. '.stderr' → logprob: -13.135397911071777
    9. '.version' → logprob: -13.510397911071777
    10. '.read' → logprob: -13.760397911071777

Token 23: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.009154310449957848
    2. '.read' → logprob: -4.759154319763184
    3. '.' → logprob: -7.759154319763184
    4. '.readlines' → logprob: -9.509154319763184
    5. 'read' → logprob: -10.259154319763184
    6. '.Read' → logprob: -13.634154319763184
    7. '.buffer' → logprob: -14.259154319763184
    8. '<|end|>' → logprob: -15.009154319763184
    9. ' .' → logprob: -15.259154319763184
    10. '.write' → logprob: -15.509154319763184

Token 24: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.05698346719145775
    2. 'read' → logprob: -2.931983470916748
    3. '.read' → logprob: -6.431983470916748
    4. ' readline' → logprob: -7.681983470916748
    5. '_read' → logprob: -11.05698299407959
    6. '```' → logprob: -12.43198299407959
    7. '.readlines' → logprob: -13.18198299407959
    8. '.' → logprob: -13.18198299407959
    9. 'raw' → logprob: -13.43198299407959
    10. 'rea' → logprob: -14.30698299407959

Token 25: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36912670731544495
    2. 'line' → logprob: -2.119126796722412
    3. '().' → logprob: -2.119126796722412
    4. '_line' → logprob: -2.994126796722412
    5. '(' → logprob: -4.369126796722412
    6. '()\' → logprob: -6.244126796722412
    7. '1' → logprob: -7.244126796722412
    8. 'into' → logprob: -7.244126796722412
    9. '```' → logprob: -7.744126796722412
    10. 'exact' → logprob: -8.119126319885254

Token 26: 'read' (ID: 1293)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07912826538085938
    2. '()
' → logprob: -3.5791282653808594
    3. '()\' → logprob: -3.9541282653808594
    4. '().' → logprob: -4.579128265380859
    5. 'line' → logprob: -5.329128265380859
    6. '(' → logprob: -5.454128265380859
    7. 'def' → logprob: -5.704128265380859
    8. '
' → logprob: -5.954128265380859
    9. '()

' → logprob: -6.579128265380859
    10. 'data' → logprob: -7.204128265380859

Token 27: 'line' (ID: 1137)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04056235030293465
    2. '(' → logprob: -3.540562391281128
    3. '().' → logprob: -4.540562152862549
    4. ' ()' → logprob: -10.415562629699707
    5. '()
' → logprob: -11.290562629699707
    6. '()

' → logprob: -11.665562629699707
    7. '(
' → logprob: -12.540562629699707
    8. '()\' → logprob: -12.540562629699707
    9. '()[' → logprob: -12.790562629699707
    10. '()]' → logprob: -13.040562629699707

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4430413246154785
    2. '()' → logprob: -1.1930413246154785
    3. ' =' → logprob: -2.9430413246154785
    4. '(' → logprob: -7.1930413246154785
    5. ')' → logprob: -8.06804084777832
    6. 's' → logprob: -8.31804084777832
    7. '.readline' → logprob: -9.19304084777832
    8. ' ' → logprob: -9.44304084777832
    9. 'line' → logprob: -9.69304084777832
    10. ' ()' → logprob: -9.94304084777832

Token 29: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004087543580681086
    2. ' sys' → logprob: -5.504087448120117
    3. 'lambda' → logprob: -12.129087448120117
    4. '=sys' → logprob: -13.379087448120117
    5. '	sys' → logprob: -13.629087448120117
    6. '(sys' → logprob: -14.254087448120117
    7. 'read' → logprob: -16.504087448120117
    8. '0' → logprob: -16.504087448120117
    9. ' lambda' → logprob: -16.879087448120117
    10. 'stdin' → logprob: -16.879087448120117

Token 30: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.15237782895565033
    2. '.readline' → logprob: -2.0273778438568115
    3. '.stdout' → logprob: -5.027377605438232
    4. '.' → logprob: -5.902377605438232
    5. ' .' → logprob: -9.02737808227539
    6. '.stderr' → logprob: -9.40237808227539
    7. '.argv' → logprob: -9.52737808227539
    8. 'stdin' → logprob: -10.02737808227539
    9. '.buffer' → logprob: -10.90237808227539
    10. '.readlines' → logprob: -12.40237808227539

Token 31: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3144390881061554
    2. '.buffer' → logprob: -1.314439058303833
    3. '.' → logprob: -6.814439296722412
    4. 'buffer' → logprob: -10.314438819885254
    5. '.stdin' → logprob: -11.064438819885254
    6. '.read' → logprob: -11.814438819885254
    7. '.b' → logprob: -12.564438819885254
    8. ' .' → logprob: -12.564438819885254
    9. '<|end|>' → logprob: -12.939438819885254
    10. '.line' → logprob: -13.064438819885254

Token 32: '.readline' (ID: 74673)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.25286805629730225
    2. '.readline' → logprob: -1.7528680562973022
    3. ' readline' → logprob: -3.002868175506592
    4. 'line' → logprob: -8.002867698669434
    5. 'getline' → logprob: -8.877867698669434
    6. '1' → logprob: -11.627867698669434
    7. '```' → logprob: -11.752867698669434
    8. 'peek' → logprob: -12.127867698669434
    9. '_read' → logprob: -12.627867698669434
    10. 'rstrip' → logprob: -13.127867698669434

Token 33: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3833613991737366
    2. 'def' → logprob: -1.2583613395690918
    3. '

' → logprob: -4.133361339569092
    4. '\n' → logprob: -4.758361339569092
    5. 'n' → logprob: -6.383361339569092
    6. 'newline' → logprob: -6.758361339569092
    7. 'x' → logprob: -7.258361339569092
    8. 'read' → logprob: -7.633361339569092
    9. '()' → logprob: -7.633361339569092
    10. '(n' → logprob: -7.758361339569092

Token 34: 'read' (ID: 1293)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2535954415798187
    2. 'n' → logprob: -1.8785954713821411
    3. 'data' → logprob: -3.7535953521728516
    4. '
' → logprob: -4.253595352172852
    5. '\n' → logprob: -4.878595352172852
    6. 'for' → logprob: -5.253595352172852
    7. 's' → logprob: -5.378595352172852
    8. '#' → logprob: -5.878595352172852
    9. 'num' → logprob: -6.128595352172852
    10. 'input' → logprob: -6.503595352172852

Token 35: 'lines' (ID: 10105)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002946559339761734
    2. '().' → logprob: -6.377946376800537
    3. '(' → logprob: -6.752946376800537
    4. '()
' → logprob: -11.002946853637695
    5. ' ()' → logprob: -11.002946853637695
    6. '()[' → logprob: -11.502946853637695
    7. '()\' → logprob: -11.627946853637695
    8. '()

' → logprob: -12.002946853637695
    9. '()]' → logprob: -12.752946853637695
    10. '()`' → logprob: -12.877946853637695

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3484836518764496
    2. ' =' → logprob: -1.223483681678772
    3. 's' → logprob: -11.84848403930664
    4. ')' → logprob: -11.84848403930664
    5. '[:]' → logprob: -12.47348403930664
    6. ' ' → logprob: -12.59848403930664
    7. '()' → logprob: -12.84848403930664
    8. 'read' → logprob: -12.97348403930664
    9. ',' → logprob: -13.84848403930664
    10. '<|end|>' → logprob: -13.97348403930664

Token 37: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.11288098990917206
    2. 'sys' → logprob: -2.2378809452056885
    3. '(sys' → logprob: -10.73788070678711
    4. '=sys' → logprob: -11.11288070678711
    5. 'read' → logprob: -12.48788070678711
    6. '	sys' → logprob: -12.61288070678711
    7. 'lines' → logprob: -12.73788070678711
    8. 's' → logprob: -12.86288070678711
    9. ' lambda' → logprob: -13.48788070678711
    10. ' read' → logprob: -13.48788070678711

Token 38: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0031079540494829416
    2. '.stdout' → logprob: -6.378108024597168
    3. '.' → logprob: -6.878108024597168
    4. 'stdin' → logprob: -8.378108024597168
    5. '.stderr' → logprob: -9.503108024597168
    6. '.std' → logprob: -10.253108024597168
    7. '.argv' → logprob: -12.378108024597168
    8. '.sys' → logprob: -12.503108024597168
    9. ' .' → logprob: -12.503108024597168
    10. '.readline' → logprob: -12.878108024597168

Token 39: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.7171152830123901
    2. '.readlines' → logprob: -1.4671152830123901
    3. '.buffer' → logprob: -1.5921152830123901
    4. '.' → logprob: -2.5921154022216797
    5. '.read' → logprob: -6.34211540222168
    6. 'buffer' → logprob: -7.09211540222168
    7. '.lines' → logprob: -9.21711540222168
    8. '```' → logprob: -10.96711540222168
    9. ')' → logprob: -11.09211540222168
    10. ' .' → logprob: -11.34211540222168

Token 40: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.6981099247932434
    2. '.readline' → logprob: -1.3231098651885986
    3. '.read' → logprob: -1.6981098651885986
    4. 'read' → logprob: -2.9481098651885986
    5. '_read' → logprob: -7.573110103607178
    6. '.' → logprob: -10.32310962677002
    7. 'raw' → logprob: -10.82310962677002
    8. '1' → logprob: -11.07310962677002
    9. 'lines' → logprob: -11.19810962677002
    10. '._' → logprob: -11.69810962677002

Token 41: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7340296506881714
    2. '
' → logprob: -1.1090296506881714
    3. '#' → logprob: -2.484029769897461
    4. '\n' → logprob: -3.234029769897461
    5. '

' → logprob: -3.859029769897461
    6. '\' → logprob: -4.484029769897461
    7. '(' → logprob: -4.984029769897461
    8. '```' → logprob: -4.984029769897461
    9. '' → logprob: -5.609029769897461
    10. 'newline' → logprob: -6.109029769897461

Token 42: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5032264590263367
    2. '
' → logprob: -2.0032265186309814
    3. '\n' → logprob: -2.7532265186309814
    4. '\' → logprob: -3.2532265186309814
    5. '

' → logprob: -3.3782265186309814
    6. '#' → logprob: -3.6282265186309814
    7. '(' → logprob: -3.7532265186309814
    8. '' → logprob: -4.503226280212402
    9. 'x' → logprob: -4.753226280212402
    10. 'n' → logprob: -4.878226280212402

Token 43: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007721052970737219
    2. '.exit' → logprob: -7.375771999359131
    3. '.stdout' → logprob: -10.000772476196289
    4. '.stdin' → logprob: -10.875772476196289
    5. '.stderr' → logprob: -11.250772476196289
    6. '.write' → logprob: -11.250772476196289
    7. '.readline' → logprob: -11.500772476196289
    8. '.setdefault' → logprob: -11.750772476196289
    9. ' .' → logprob: -12.250772476196289
    10. '<|end|>' → logprob: -12.250772476196289

Token 44: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0004587903094943613
    2. '_rec' → logprob: -8.625458717346191
    3. 're' → logprob: -9.875458717346191
    4. 'trace' → logprob: -10.000458717346191
    5. 'execution' → logprob: -10.250458717346191
    6. 'limit' → logprob: -10.500458717346191
    7. 'e' → logprob: -10.875458717346191
    8. 'ecution' → logprob: -11.375458717346191
    9. 'ursion' → logprob: -11.625458717346191
    10. '_' → logprob: -11.625458717346191

Token 45: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00022570860164705664
    2. 'urs' → logprob: -9.250226020812988
    3. 'ursive' → logprob: -9.250226020812988
    4. 'ur' → logprob: -11.125226020812988
    5. 'limit' → logprob: -11.625226020812988
    6. 'ision' → logprob: -12.125226020812988
    7. 'usion' → logprob: -13.625226020812988
    8. 'ursor' → logprob: -13.750226020812988
    9. '_limit' → logprob: -13.875226020812988
    10. 'set' → logprob: -15.750226020812988

Token 46: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0010378103470429778
    2. '_limit' → logprob: -6.87603759765625
    3. 'depth' → logprob: -13.12603759765625
    4. 'lim' → logprob: -14.37603759765625
    5. 'ursion' → logprob: -14.62603759765625
    6. '(limit' → logprob: -14.62603759765625
    7. 'imit' → logprob: -14.87603759765625
    8. '_depth' → logprob: -15.25103759765625
    9. ' limit' → logprob: -15.25103759765625
    10. '.limit' → logprob: -15.37603759765625

Token 47: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.080963092041202e-06
    2. '((' → logprob: -13.375004768371582
    3. ' (' → logprob: -13.750004768371582
    4. '100' → logprob: -14.000004768371582
    5. '(int' → logprob: -14.125004768371582
    6. '()' → logprob: -14.750004768371582
    7. ' ' → logprob: -16.3750057220459
    8. '(
' → logprob: -16.5000057220459
    9. '400' → logprob: -16.7500057220459
    10. '40' → logprob: -17.1250057220459

Token 48: '500' (ID: 3234)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011264264583587646
    2. '100' → logprob: -4.511264324188232
    3. ' ' → logprob: -8.511263847351074
    4. '1' → logprob: -12.261263847351074
    5. '500' → logprob: -12.886263847351074
    6. '999' → logprob: -13.011263847351074
    7. '400' → logprob: -13.136263847351074
    8. '200' → logprob: -13.886263847351074
    9. '300' → logprob: -13.886263847351074
    10. 'pow' → logprob: -14.136263847351074

Token 49: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.24621714651584625
    2. '0' → logprob: -1.996217131614685
    3. '00' → logprob: -2.4962172508239746
    4. '048' → logprob: -14.121216773986816
    5. '_' → logprob: -14.621216773986816
    6. ' ' → logprob: -14.621216773986816
    7. ')' → logprob: -15.246216773986816
    8. '007' → logprob: -15.621216773986816
    9. '   ' → logprob: -15.746216773986816
    10. '050' → logprob: -15.871216773986816

Token 50: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ' )' → logprob: -12.500004768371582
    3. '0' → logprob: -14.250004768371582
    4. ')
' → logprob: -14.500004768371582
    5. '))' → logprob: -17.2500057220459
    6. '}' → logprob: -17.6250057220459
    7. ')
' → logprob: -18.1250057220459
    8. '1' → logprob: -18.1250057220459
    9. ' ' → logprob: -18.2500057220459
    10. '`)' → logprob: -18.2500057220459

Token 51: 'R' (ID: 49)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3233468234539032
    2. 'n' → logprob: -1.3233468532562256
    3. 'N' → logprob: -5.8233466148376465
    4. 'class' → logprob: -6.1983466148376465
    5. 'data' → logprob: -6.3233466148376465
    6. 'a' → logprob: -7.0733466148376465
    7. '#' → logprob: -7.4483466148376465
    8. 'input' → logprob: -7.6983466148376465
    9. 'for' → logprob: -8.198347091674805
    10. '\' → logprob: -8.323347091674805

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20331089198589325
    2. '=' → logprob: -2.078310966491699
    3. ' ' → logprob: -3.453310966491699
    4. ',' → logprob: -3.703310966491699
    5. 'E' → logprob: -6.953310966491699
    6. ' ,' → logprob: -7.328310966491699
    7. '_' → logprob: -8.7033109664917
    8. '  ' → logprob: -8.9533109664917
    9. 'C' → logprob: -9.4533109664917
    10. 'A' → logprob: -9.4533109664917

Token 53: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.49060261249542236
    2. 'int' → logprob: -0.9906026124954224
    3. ' ' → logprob: -4.365602493286133
    4. '10' → logprob: -6.990602493286133
    5. ' read' → logprob: -7.990602493286133
    6. '0' → logprob: -7.990602493286133
    7. '100' → logprob: -8.115602493286133
    8. '5' → logprob: -8.740602493286133
    9. 'read' → logprob: -8.740602493286133
    10. '1' → logprob: -8.990602493286133

Token 54: '(read' (ID: 45738)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16137179732322693
    2. '(read' → logprob: -1.9113718271255493
    3. '(input' → logprob: -7.91137170791626
    4. '(sys' → logprob: -8.161372184753418
    5. ' (' → logprob: -8.786372184753418
    6. 'read' → logprob: -9.286372184753418
    7. '('' → logprob: -9.786372184753418
    8. '(math' → logprob: -9.786372184753418
    9. '()' → logprob: -10.536372184753418
    10. '(space' → logprob: -10.911372184753418

Token 55: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.051409680396318436
    2. '()' → logprob: -3.1764097213745117
    3. '(' → logprob: -5.051409721374512
    4. '().' → logprob: -6.551409721374512
    5. ' ())' → logprob: -8.176409721374512
    6. ' ()' → logprob: -9.801409721374512
    7. '()[' → logprob: -10.426409721374512
    8. ')' → logprob: -10.676409721374512
    9. 'line' → logprob: -10.801409721374512
    10. '())
' → logprob: -11.051409721374512

Token 56: 'print' (ID: 1598)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027521435171365738
    2. '()
' → logprob: -4.15252161026001
    3. '()\' → logprob: -5.52752161026001
    4. '.readline' → logprob: -5.65252161026001
    5. '(' → logprob: -6.90252161026001
    6. '#' → logprob: -7.65252161026001
    7. '().' → logprob: -8.027521133422852
    8. '\n' → logprob: -8.027521133422852
    9. '
' → logprob: -8.027521133422852
    10. '*' → logprob: -8.777521133422852

Token 57: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036499056965112686
    2. '(R' → logprob: -3.4114990234375
    3. '('' → logprob: -6.9114990234375
    4. '(math' → logprob: -7.1614990234375
    5. '(int' → logprob: -7.2864990234375
    6. '((' → logprob: -8.6614990234375
    7. '()' → logprob: -9.7864990234375
    8. '(read' → logprob: -10.2864990234375
    9. '(round' → logprob: -10.7864990234375
    10. '("("' → logprob: -10.7864990234375

Token 58: '2' (ID: 17)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.01984734833240509
    2. 'int' → logprob: -4.519847393035889
    3. ' R' → logprob: -5.519847393035889
    4. '(R' → logprob: -6.269847393035889
    5. ')' → logprob: -6.519847393035889
    6. '(' → logprob: -7.394847393035889
    7. 'math' → logprob: -8.51984691619873
    8. '(int' → logprob: -9.14484691619873
    9. '")' → logprob: -9.39484691619873
    10. ''' → logprob: -9.64484691619873

Token 59: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1011374443769455
    2. '*' → logprob: -2.351137399673462
    3. ' **' → logprob: -7.601137638092041
    4. '**' → logprob: -8.226137161254883
    5. ')' → logprob: -9.851137161254883
    6. ' ' → logprob: -10.226137161254883
    7. ' )' → logprob: -10.726137161254883
    8. ' ' → logprob: -10.976137161254883
    9. ' *)' → logprob: -11.851137161254883
    10. '*)' → logprob: -12.101137161254883

Token 60: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.5316668748855591
    2. 'R' → logprob: -0.9066668748855591
    3. '*' → logprob: -5.2816667556762695
    4. ' ' → logprob: -6.2816667556762695
    5. ' *' → logprob: -7.1566667556762695
    6. ' math' → logprob: -7.6566667556762695
    7. '**' → logprob: -9.65666675567627
    8. ')' → logprob: -10.15666675567627
    9. 'int' → logprob: -10.40666675567627
    10. ' (' → logprob: -10.53166675567627

Token 61: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003171121352352202
    2. '*' → logprob: -8.125317573547363
    3. '*)' → logprob: -11.250317573547363
    4. ')`' → logprob: -13.125317573547363
    5. '`)' → logprob: -13.500317573547363
    6. '))' → logprob: -13.625317573547363
    7. ' )' → logprob: -13.750317573547363
    8. ')*' → logprob: -14.250317573547363
    9. '**' → logprob: -14.750317573547363
    10. '')' → logprob: -14.875317573547363

Token 62: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4314986765384674
    2. 'math' → logprob: -1.181498646736145
    3. '3' → logprob: -3.1814987659454346
    4. ' ' → logprob: -6.3064985275268555
    5. '(math' → logprob: -8.681498527526855
    6. 'Math' → logprob: -10.806498527526855
    7. '314' → logprob: -10.931498527526855
    8. 'cmath' → logprob: -11.806498527526855
    9. '  ' → logprob: -12.306498527526855
    10. 'import' → logprob: -12.306498527526855

Token 63: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -0.00027682865038514137
    2. '.' → logprob: -8.250276565551758
    3. '.PI' → logprob: -11.500276565551758
    4. '.sin' → logprob: -13.000276565551758
    5. '.sqrt' → logprob: -13.625276565551758
    6. 'pi' → logprob: -14.250276565551758
    7. '.cos' → logprob: -14.375276565551758
    8. '*pi' → logprob: -15.250276565551758
    9. '.atan' → logprob: -15.750276565551758
    10. ' .' → logprob: -16.500276565551758

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -14.000001907348633
    3. '))' → logprob: -14.500001907348633
    4. ')`' → logprob: -15.750001907348633
    5. ')
' → logprob: -17.000001907348633
    6. '`)' → logprob: -17.500001907348633
    7. ')**' → logprob: -17.500001907348633
    8. '')' → logprob: -18.500001907348633
    9. ')))' → logprob: -18.500001907348633
    10. '）' → logprob: -19.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 62
Tokens correctement prédits (1ère position, stricte): 25
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 44
Précision stricte (1ère position): 40.32%
Précision adaptée (1ère position): 40.32%
Précision (top 10): 70.97%
================================================================================
