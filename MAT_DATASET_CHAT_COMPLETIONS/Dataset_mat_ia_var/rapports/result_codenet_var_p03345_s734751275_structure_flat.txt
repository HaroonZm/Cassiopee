================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a,b,c,k=map(int,input().split())
if k%2==0:
    if abs(a-b)<10**18:
        print(a-b)
    else:
        print("Unfair")
else:
    if abs(a-b)<10**18:
        print(b-a)
    else:
        print("Unfair")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',b' (ID: 17568)
  → Token d'amorce (pas de prédiction)

Token 2: ',c' (ID: 22261)
  → Token d'amorce (pas de prédiction)

Token 3: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0370388925075531
    2. ',d' → logprob: -3.412038803100586
    3. '=' → logprob: -6.287038803100586
    4. '+' → logprob: -7.287038803100586
    5. '```' → logprob: -8.537038803100586
    6. '<|end|>' → logprob: -8.912038803100586
    7. ';' → logprob: -9.287038803100586
    8. 'd' → logprob: -9.537038803100586
    9. '[' → logprob: -9.662038803100586
    10. ')' → logprob: -9.912038803100586

Token 4: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016680773347616196
    2. ' =' → logprob: -4.391680717468262
    3. ',' → logprob: -5.641680717468262
    4. ';' → logprob: -8.766680717468262
    5. '+' → logprob: -8.891680717468262
    6. ')' → logprob: -8.891680717468262
    7. '.' → logprob: -10.141680717468262
    8. '(' → logprob: -10.516680717468262
    9. '```' → logprob: -10.766680717468262
    10. '<|end|>' → logprob: -10.891680717468262

Token 5: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03519447147846222
    2. ' ' → logprob: -3.6601943969726562
    3. '1' → logprob: -4.785194396972656
    4. '```' → logprob: -9.035194396972656
    5. 'a' → logprob: -9.160194396972656
    6. '[' → logprob: -9.285194396972656
    7. '10' → logprob: -9.410194396972656
    8. '(' → logprob: -10.535194396972656
    9. '`' → logprob: -10.910194396972656
    10. ' [' → logprob: -11.410194396972656

Token 6: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004147257190197706
    2. '(lambda' → logprob: -5.754147052764893
    3. '```' → logprob: -7.629147052764893
    4. '<|end|>' → logprob: -8.25414752960205
    5. ')' → logprob: -10.25414752960205
    6. '(user' → logprob: -10.62914752960205
    7. '(int' → logprob: -11.00414752960205
    8. '\(' → logprob: -11.25414752960205
    9. '(
' → logprob: -11.50414752960205
    10. '(open' → logprob: -11.75414752960205

Token 7: ',input' (ID: 123014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7468302249908447
    2. '(input' → logprob: -1.6218302249908447
    3. '<|end|>' → logprob: -1.7468302249908447
    4. '(' → logprob: -2.3718302249908447
    5. '<|end|>' → logprob: -4.996829986572266
    6. '(user' → logprob: -4.996829986572266
    7. '(raw' → logprob: -5.371829986572266
    8. '(data' → logprob: -5.371829986572266
    9. '```' → logprob: -5.496829986572266
    10. ')(' → logprob: -5.746829986572266

Token 8: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39923909306526184
    2. '<|end|>' → logprob: -2.0242390632629395
    3. '(' → logprob: -2.3992390632629395
    4. '())' → logprob: -3.0242390632629395
    5. '<|end|>' → logprob: -4.7742390632629395
    6. '(token' → logprob: -5.0242390632629395
    7. '```' → logprob: -5.2742390632629395
    8. '()' → logprob: -5.3992390632629395
    9. '(""))' → logprob: -6.3367390632629395
    10. '(input' → logprob: -6.3367390632629395

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.253713218029588e-05
    2. 'strip' → logprob: -10.125062942504883
    3. 'rstrip' → logprob: -11.375062942504883
    4. ')' → logprob: -12.625062942504883
    5. ' split' → logprob: -12.750062942504883
    6. '(split' → logprob: -13.375062942504883
    7. 'read' → logprob: -13.500062942504883
    8. 'spl' → logprob: -14.250062942504883
    9. '```' → logprob: -14.250062942504883
    10. 'startswith' → logprob: -16.000062942504883

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16398867964744568
    2. '())' → logprob: -1.913988709449768
    3. '))' → logprob: -6.4139885902404785
    4. '()' → logprob: -6.9139885902404785
    5. '`)' → logprob: -7.0389885902404785
    6. '()))' → logprob: -10.038989067077637
    7. '```' → logprob: -10.288989067077637
    8. ')`' → logprob: -10.413989067077637
    9. ' ())' → logprob: -10.788989067077637
    10. ' )' → logprob: -10.913989067077637

Token 11: 'if' (ID: 366)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6654860377311707
    2. 'if' → logprob: -0.9154860377311707
    3. '+' → logprob: -3.1654860973358154
    4. 'i' → logprob: -4.165485858917236
    5. '#' → logprob: -4.915485858917236
    6. '*' → logprob: -5.665485858917236
    7. ' if' → logprob: -6.165485858917236
    8. 'x' → logprob: -6.290485858917236
    9. '+
' → logprob: -6.290485858917236
    10. '
' → logprob: -6.415485858917236

Token 12: ' k' (ID: 372)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07133525609970093
    2. 'a' → logprob: -2.6963353157043457
    3. ' k' → logprob: -7.196335315704346
    4. ' ' → logprob: -7.571335315704346
    5. 'k' → logprob: -9.321334838867188
    6. ' (' → logprob: -10.571334838867188
    7. '(a' → logprob: -11.821334838867188
    8. ' b' → logprob: -12.571334838867188
    9. ' ' → logprob: -13.821334838867188
    10. '(' → logprob: -13.821334838867188

Token 13: '%' (ID: 4)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07514798641204834
    2. '>' → logprob: -2.700148105621338
    3. ' ==' → logprob: -6.200148105621338
    4. ' <=' → logprob: -7.075148105621338
    5. ' <' → logprob: -7.200148105621338
    6. '==' → logprob: -7.450148105621338
    7. ' ' → logprob: -7.700148105621338
    8. '<' → logprob: -8.82514762878418
    9. ' >=' → logprob: -9.45014762878418
    10. '<=' → logprob: -9.57514762878418

Token 14: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2214077264070511
    2. 'a' → logprob: -1.9714077711105347
    3. '4' → logprob: -3.471407651901245
    4. '3' → logprob: -3.596407651901245
    5. '5' → logprob: -8.596407890319824
    6. '6' → logprob: -8.596407890319824
    7. 'c' → logprob: -8.721407890319824
    8. 'k' → logprob: -9.346407890319824
    9. '7' → logprob: -9.471407890319824
    10. ' ' → logprob: -9.971407890319824

Token 15: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5830373764038086
    2. ' ==' → logprob: -0.8330373764038086
    3. ':' → logprob: -5.458037376403809
    4. '!=' → logprob: -6.833037376403809
    5. ' !=' → logprob: -6.958037376403809
    6. ' :' → logprob: -7.708037376403809
    7. '=' → logprob: -8.583037376403809
    8. ' ' → logprob: -9.958037376403809
    9. '>' → logprob: -10.208037376403809
    10. ' =' → logprob: -10.458037376403809

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001184276770800352
    2. '1' → logprob: -7.126184463500977
    3. ' ' → logprob: -7.876184463500977
    4. '2' → logprob: -16.876184463500977
    5. 'a' → logprob: -17.126184463500977
    6. '```' → logprob: -18.126184463500977
    7. 'b' → logprob: -18.688684463500977
    8. '   ' → logprob: -18.938684463500977
    9. '  ' → logprob: -19.001184463500977
    10. 'k' → logprob: -19.188684463500977

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00033999193692579865
    2. ' :' → logprob: -8.000340461730957
    3. ':
' → logprob: -13.625340461730957
    4. ':return' → logprob: -14.000340461730957
    5. ':**' → logprob: -14.000340461730957
    6. '>:' → logprob: -14.750340461730957
    7. ',' → logprob: -15.375340461730957
    8. '):' → logprob: -15.750340461730957
    9. '>' → logprob: -16.37533950805664
    10. '<|end|>' → logprob: -16.37533950805664

Token 18: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.050285518169403076
    2. '   ' → logprob: -3.675285577774048
    3. 'print' → logprob: -4.800285339355469
    4. ' ' → logprob: -4.925285339355469
    5. '    ' → logprob: -5.050285339355469
    6. ' a' → logprob: -7.550285339355469
    7. ' \' → logprob: -7.925285339355469
    8. '	print' → logprob: -8.800285339355469
    9. ' 
' → logprob: -9.300285339355469
    10. ' `' → logprob: -9.425285339355469

Token 19: ' if' (ID: 538)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.003144920105114579
    2. 'print' → logprob: -5.87814474105835
    3. ' a' → logprob: -9.378145217895508
    4. ' ' → logprob: -9.503145217895508
    5. ' pass' → logprob: -9.878145217895508
    6. '   ' → logprob: -10.503145217895508
    7. '    ' → logprob: -10.628145217895508
    8. ' if' → logprob: -10.878145217895508
    9. ' ```' → logprob: -11.878145217895508
    10. ' `' → logprob: -12.128145217895508

Token 20: ' abs' (ID: 8443)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4974489212036133
    2. 'a' → logprob: -1.7474489212036133
    3. ' (' → logprob: -1.9974489212036133
    4. '(a' → logprob: -2.6224489212036133
    5. ' b' → logprob: -5.497448921203613
    6. ' abs' → logprob: -6.372448921203613
    7. ' c' → logprob: -6.872448921203613
    8. 'b' → logprob: -7.247448921203613
    9. ' k' → logprob: -7.747448921203613
    10. ' ' → logprob: -7.872448921203613

Token 21: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.627176768844947e-05
    2. '(' → logprob: -9.750096321105957
    3. '(k' → logprob: -11.000096321105957
    4. '(b' → logprob: -11.500096321105957
    5. '(c' → logprob: -11.750096321105957
    6. 'a' → logprob: -13.625096321105957
    7. '(x' → logprob: -14.250096321105957
    8. '(s' → logprob: -14.500096321105957
    9. '((' → logprob: -14.750096321105957
    10. '(n' → logprob: -15.500096321105957

Token 22: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.24575237929821014
    2. '-' → logprob: -1.8707523345947266
    3. ')' → logprob: -3.8707523345947266
    4. ' -' → logprob: -3.9957523345947266
    5. '-c' → logprob: -4.745752334594727
    6. ')>' → logprob: -5.370752334594727
    7. '-k' → logprob: -5.495752334594727
    8. ')>=' → logprob: -5.995752334594727
    9. '-n' → logprob: -6.245752334594727
    10. '-a' → logprob: -6.745752334594727

Token 23: ')<' (ID: 62287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043170347809791565
    2. ')>=' → logprob: -4.16817045211792
    3. ')<=' → logprob: -4.41817045211792
    4. ')>' → logprob: -4.41817045211792
    5. ')==' → logprob: -6.41817045211792
    6. ')<' → logprob: -7.54317045211792
    7. ')%' → logprob: -7.91817045211792
    8. ' )' → logprob: -10.043169975280762
    9. ')!=' → logprob: -10.543169975280762
    10. ')**' → logprob: -11.043169975280762

Token 24: '10' (ID: 702)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7391074299812317
    2. '=' → logprob: -1.114107370376587
    3. 'abs' → logprob: -2.364107370376587
    4. 'c' → logprob: -2.864107370376587
    5. '=k' → logprob: -3.489107370376587
    6. '=c' → logprob: -4.989107608795166
    7. '2' → logprob: -5.989107608795166
    8. '=(' → logprob: -6.489107608795166
    9. ' abs' → logprob: -7.114107608795166
    10. '=int' → logprob: -8.864107131958008

Token 25: '**' (ID: 410)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009398083784617484
    2. ' and' → logprob: -7.250939846038818
    3. ' :' → logprob: -9.12593936920166
    4. '>:' → logprob: -10.50093936920166
    5. ':
' → logprob: -10.62593936920166
    6. ' or' → logprob: -11.12593936920166
    7. 'and' → logprob: -11.37593936920166
    8. '):' → logprob: -11.37593936920166
    9. '   ' → logprob: -11.62593936920166
    10. '>' → logprob: -12.37593936920166

Token 26: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.016862470656633377
    2. '8' → logprob: -5.016862392425537
    3. '10' → logprob: -5.641862392425537
    4. '7' → logprob: -5.766862392425537
    5. '6' → logprob: -6.266862392425537
    6. '5' → logprob: -7.141862392425537
    7. '18' → logprob: -8.266862869262695
    8. '-' → logprob: -8.516862869262695
    9. '4' → logprob: -9.391862869262695
    10. '3' → logprob: -10.016862869262695

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035622045397758484
    2. ' and' → logprob: -3.5356221199035645
    3. ' :' → logprob: -6.1606221199035645
    4. 'and' → logprob: -6.1606221199035645
    5. ' or' → logprob: -7.4106221199035645
    6. ':return' → logprob: -7.6606221199035645
    7. '):' → logprob: -8.660621643066406
    8. ' ' → logprob: -9.285621643066406
    9. ':
' → logprob: -10.035621643066406
    10. '>:' → logprob: -10.285621643066406

Token 28: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7171304225921631
    2. '       ' → logprob: -0.7171304225921631
    3. ':
' → logprob: -5.092130661010742
    4. '<|end|>' → logprob: -5.467130661010742
    5. '
' → logprob: -5.717130661010742
    6. ',' → logprob: -6.217130661010742
    7. ' and' → logprob: -6.342130661010742
    8. '   ' → logprob: -6.467130661010742
    9. ' or' → logprob: -7.592130661010742
    10. '    ' → logprob: -7.717130661010742

Token 29: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7853350043296814
    2. '           ' → logprob: -1.4103350639343262
    3. 'print' (adapté à ' print') → logprob: -2.035335063934326
    4. ' print' → logprob: -2.160335063934326
    5. '   ' → logprob: -4.160335063934326
    6. '\n' → logprob: -4.785335063934326
    7. '        ' → logprob: -4.910335063934326
    8. '    ' → logprob: -5.535335063934326
    9. '
' → logprob: -6.035335063934326
    10. '            ' → logprob: -6.410335063934326

Token 30: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23259255290031433
    2. '(a' → logprob: -1.9825925827026367
    3. '("' → logprob: -3.1075925827026367
    4. '('' → logprob: -4.232592582702637
    5. '(abs' → logprob: -4.982592582702637
    6. '()' → logprob: -6.232592582702637
    7. '((' → logprob: -6.607592582702637
    8. '(max' → logprob: -9.232592582702637
    9. '(c' → logprob: -9.232592582702637
    10. '("")' → logprob: -10.107592582702637

Token 31: '-b' (ID: 2118)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5521863698959351
    2. '+' → logprob: -1.177186369895935
    3. '+b' → logprob: -3.4271864891052246
    4. '-' → logprob: -3.6771864891052246
    5. ' +' → logprob: -4.052186489105225
    6. '-b' → logprob: -4.302186489105225
    7. '+c' → logprob: -4.677186489105225
    8. ' -' → logprob: -5.177186489105225
    9. '-k' → logprob: -5.677186489105225
    10. '*' → logprob: -6.177186489105225

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002043748099822551
    2. ')
' → logprob: -8.750204086303711
    3. ' )' → logprob: -10.250204086303711
    4. '   ' → logprob: -13.000204086303711
    5. '))' → logprob: -13.375204086303711
    6. '+' → logprob: -13.625204086303711
    7. '')' → logprob: -13.750204086303711
    8. ')
' → logprob: -13.875204086303711
    9. ' ' → logprob: -14.000204086303711
    10. '`)' → logprob: -14.750204086303711

Token 33: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10836248844861984
    2. ' else' → logprob: -2.7333624362945557
    3. '	else' → logprob: -4.233362674713135
    4. '<|end|>' → logprob: -4.608362674713135
    5. '   ' → logprob: -4.733362674713135
    6. 'elif' → logprob: -6.483362674713135
    7. '<|end|>' → logprob: -7.608362674713135
    8. ')' → logprob: -8.233362197875977
    9. '```' → logprob: -8.358362197875977
    10. '	elif' → logprob: -8.483362197875977

Token 34: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2180803269147873
    2. '   ' → logprob: -1.8430802822113037
    3. ' else' → logprob: -3.4680802822113037
    4. '       ' → logprob: -5.843080520629883
    5. 'elif' → logprob: -6.218080520629883
    6. '	else' → logprob: -6.843080520629883
    7. '<|end|>' → logprob: -8.593080520629883
    8. ' ' → logprob: -8.843080520629883
    9. ' elif' → logprob: -10.593080520629883
    10. '	elif' → logprob: -10.843080520629883

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017517358355689794
    2. ':
' → logprob: -9.625175476074219
    3. ' :' → logprob: -9.625175476074219
    4. '       ' → logprob: -10.250175476074219
    5. '   ' → logprob: -12.625175476074219
    6. '    ' → logprob: -13.875175476074219
    7. '):' → logprob: -14.625175476074219
    8. '      ' → logprob: -15.000175476074219
    9. '        ' → logprob: -15.125175476074219
    10. '**' → logprob: -15.250175476074219

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00293360254727304
    2. 'print' → logprob: -6.627933502197266
    3. '```' → logprob: -7.252933502197266
    4. '<|end|>' → logprob: -7.877933502197266
    5. '   ' → logprob: -9.127933502197266
    6. '0' → logprob: -9.502933502197266
    7. '           ' → logprob: -9.752933502197266
    8. '`' → logprob: -10.377933502197266
    9. '``' → logprob: -10.377933502197266
    10. '        
' → logprob: -10.502933502197266

Token 37: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0014305938966572285
    2. '       ' → logprob: -7.001430511474609
    3. 'c' → logprob: -8.37643051147461
    4. ' print' → logprob: -9.00143051147461
    5. '   ' → logprob: -9.50143051147461
    6. '0' → logprob: -10.25143051147461
    7. ' ' → logprob: -11.12643051147461
    8. 'a' → logprob: -11.75143051147461
    9. '```' → logprob: -12.12643051147461
    10. '(' → logprob: -12.75143051147461

Token 38: '("' (ID: 568)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.6759689450263977
    2. '(a' → logprob: -1.175968885421753
    3. '(c' → logprob: -2.175968885421753
    4. '(' → logprob: -3.050968885421753
    5. '(k' → logprob: -4.675969123840332
    6. 'b' → logprob: -5.675969123840332
    7. '(abs' → logprob: -5.675969123840332
    8. 'a' → logprob: -6.300969123840332
    9. '(-' → logprob: -6.425969123840332
    10. '0' → logprob: -7.300969123840332

Token 39: 'Un' (ID: 2265)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.491740107536316
    2. 'Overflow' → logprob: -1.866740107536316
    3. 'Too' → logprob: -1.991740107536316
    4. '-' → logprob: -2.1167402267456055
    5. 'a' → logprob: -2.6167402267456055
    6. 'overflow' → logprob: -3.3667402267456055
    7. 'Un' → logprob: -3.3667402267456055
    8. '0' → logprob: -3.4917402267456055
    9. 'Big' → logprob: -3.7417402267456055
    10. 'Error' → logprob: -3.9917402267456055

Token 40: 'fair' (ID: 53923)
  Prédit: 'bounded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bounded' → logprob: -0.7283804416656494
    2. 'defined' → logprob: -1.4783804416656494
    3. 'known' → logprob: -2.2283804416656494
    4. 'reachable' → logprob: -2.8533804416656494
    5. 'k' → logprob: -3.3533804416656494
    6. 'def' → logprob: -3.6033804416656494
    7. 'handled' → logprob: -5.10338020324707
    8. 'print' → logprob: -5.22838020324707
    9. 'predict' → logprob: -5.22838020324707
    10. 'know' → logprob: -5.72838020324707

Token 41: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00040815072134137154
    2. ')' → logprob: -8.000408172607422
    3. '")
' → logprob: -10.625408172607422
    4. '")
' → logprob: -11.125408172607422
    5. ')")' → logprob: -11.125408172607422
    6. 'a' → logprob: -12.125408172607422
    7. '!")' → logprob: -12.125408172607422
    8. '"' → logprob: -12.500408172607422
    9. 'e' → logprob: -14.875408172607422
    10. ' ")' → logprob: -15.000408172607422

Token 42: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.012402749620378017
    2. ' else' → logprob: -4.887402534484863
    3. 'elif' → logprob: -5.512402534484863
    4. '<|end|>' → logprob: -7.762402534484863
    5. '```' → logprob: -8.512402534484863
    6. '
' → logprob: -10.012402534484863
    7. '	else' → logprob: -11.512402534484863
    8. ' elif' → logprob: -11.637402534484863
    9. '    
' → logprob: -11.762402534484863
    10. '_else' → logprob: -11.887402534484863

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018565983918961138
    2. ':
' → logprob: -8.8751859664917
    3. ' :' → logprob: -10.7501859664917
    4. '   ' → logprob: -11.0001859664917
    5. '<|end|>' → logprob: -12.6251859664917
    6. ',' → logprob: -13.5001859664917
    7. '```' → logprob: -14.8751859664917
    8. ':

' → logprob: -14.8751859664917
    9. ':**' → logprob: -15.0001859664917
    10. '{' → logprob: -15.3751859664917

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5685248374938965
    2. '       ' → logprob: -1.8185248374938965
    3. '    ' → logprob: -2.1935248374938965
    4. ' ' → logprob: -2.9435248374938965
    5. 'print' → logprob: -3.4435248374938965
    6. '<|end|>' → logprob: -4.0685248374938965
    7. '```' → logprob: -4.5685248374938965
    8. '(' → logprob: -4.6935248374938965
    9. '        ' → logprob: -5.0685248374938965
    10. ' print' → logprob: -5.0685248374938965

Token 45: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.056207090616226196
    2. ' print' → logprob: -3.6812071800231934
    3. 'a' → logprob: -5.056207180023193
    4. ' ' → logprob: -5.431207180023193
    5. ' a' → logprob: -5.431207180023193
    6. '(' → logprob: -5.931207180023193
    7. '   ' → logprob: -6.306207180023193
    8. '+' → logprob: -6.306207180023193
    9. ' (' → logprob: -6.431207180023193
    10. 'abs' → logprob: -6.931207180023193

Token 46: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -1.0022555589675903
    2. ' (' → logprob: -1.1272555589675903
    3. 'abs' → logprob: -1.6272555589675903
    4. ' a' → logprob: -3.127255439758301
    5. '(abs' → logprob: -3.752255439758301
    6. '(a' → logprob: -4.002255439758301
    7. 'a' → logprob: -4.002255439758301
    8. '(' → logprob: -5.752255439758301
    9. ' c' → logprob: -6.127255439758301
    10. ' ' → logprob: -6.627255439758301

Token 47: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6945990920066833
    2. '(a' → logprob: -0.6945990920066833
    3. '(c' → logprob: -6.694599151611328
    4. '<|end|>' → logprob: -9.444599151611328
    5. '(b' → logprob: -10.069599151611328
    6. 'a' → logprob: -10.694599151611328
    7. '(k' → logprob: -11.194599151611328
    8. '(user' → logprob: -11.319599151611328
    9. ' (' → logprob: -11.569599151611328
    10. '(
' → logprob: -11.944599151611328

Token 48: '-b' (ID: 2118)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.7661589980125427
    2. '+c' → logprob: -1.0161590576171875
    3. '-' → logprob: -2.7661590576171875
    4. '-b' → logprob: -2.8911590576171875
    5. '+b' → logprob: -3.0161590576171875
    6. '+' → logprob: -5.2661590576171875
    7. ' -' → logprob: -9.016159057617188
    8. 'c' → logprob: -9.516159057617188
    9. ' +' → logprob: -9.516159057617188
    10. '+a' → logprob: -9.516159057617188

Token 49: ')<' (ID: 62287)
  Prédit: ')>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')>' → logprob: -0.9119645953178406
    2. ')>=' → logprob: -1.0369646549224854
    3. ')' → logprob: -1.9119646549224854
    4. ')<' → logprob: -2.4119646549224854
    5. ')<=' → logprob: -5.536964416503906
    6. '>=' → logprob: -7.161964416503906
    7. '>' → logprob: -7.411964416503906
    8. ')==' → logprob: -8.411964416503906
    9. '<' → logprob: -8.411964416503906
    10. ' )' → logprob: -8.536964416503906

Token 50: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0033532092347741127
    2. ' ' → logprob: -6.003353118896484
    3. '1' → logprob: -7.503353118896484
    4. 'k' → logprob: -9.003353118896484
    5. 'c' → logprob: -9.378353118896484
    6. '100' → logprob: -10.378353118896484
    7. 'a' → logprob: -10.753353118896484
    8. ' k' → logprob: -11.253353118896484
    9. '```' → logprob: -11.878353118896484
    10. ' c' → logprob: -12.253353118896484

Token 51: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.048667535185813904
    2. '18' → logprob: -3.0486674308776855
    3. '*' → logprob: -10.048667907714844
    4. '^' → logprob: -10.798667907714844
    5. '```' → logprob: -12.673667907714844
    6. '1' → logprob: -13.048667907714844
    7. '¹' → logprob: -13.048667907714844
    8. '8' → logprob: -13.173667907714844
    9. '+' → logprob: -13.548667907714844
    10. '17' → logprob: -13.923667907714844

Token 52: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.00018363336857873946
    2. '9' → logprob: -9.625184059143066
    3. '19' → logprob: -10.125184059143066
    4. '17' → logprob: -10.750184059143066
    5. '1' → logprob: -11.375184059143066
    6. '10' → logprob: -11.625184059143066
    7. '8' → logprob: -11.875184059143066
    8. '15' → logprob: -12.000184059143066
    9. '6' → logprob: -12.625184059143066
    10. '12' → logprob: -12.750184059143066

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00427938112989068
    2. ':
' → logprob: -5.629279613494873
    3. '       ' → logprob: -8.129279136657715
    4. '+' → logprob: -8.879279136657715
    5. '):' → logprob: -8.879279136657715
    6. ' :' → logprob: -10.379279136657715
    7. '-' → logprob: -11.004279136657715
    8. '   ' → logprob: -11.254279136657715
    9. '+:' → logprob: -11.504279136657715
    10. '):
' → logprob: -11.754279136657715

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007890212000347674
    2. 'print' → logprob: -8.125788688659668
    3. '+' → logprob: -8.500788688659668
    4. '```' → logprob: -8.625788688659668
    5. '   ' → logprob: -10.250788688659668
    6. ' print' → logprob: -11.875788688659668
    7. '    ' → logprob: -11.875788688659668
    8. '-' → logprob: -11.875788688659668
    9. '        ' → logprob: -12.250788688659668
    10. ':' → logprob: -12.250788688659668

Token 55: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31958475708961487
    2. 'print' (adapté à ' print') → logprob: -1.3195847272872925
    3. ' print' → logprob: -5.319584846496582
    4. '```' → logprob: -7.444584846496582
    5. '   ' → logprob: -7.569584846496582
    6. '	print' → logprob: -9.319584846496582
    7. '	' → logprob: -10.069584846496582
    8. '    ' → logprob: -10.319584846496582
    9. '           ' → logprob: -10.569584846496582
    10. '-' → logprob: -10.819584846496582

Token 56: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.01850610412657261
    2. '(' → logprob: -4.518506050109863
    3. '(abs' → logprob: -6.018506050109863
    4. '(b' → logprob: -6.393506050109863
    5. 'a' → logprob: -6.393506050109863
    6. '(c' → logprob: -6.518506050109863
    7. '((' → logprob: -10.143506050109863
    8. '(-' → logprob: -10.143506050109863
    9. 'abs' → logprob: -10.768506050109863
    10. 'b' → logprob: -11.018506050109863

Token 57: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.015304540283977985
    2. ' -' → logprob: -4.7653045654296875
    3. '-' → logprob: -5.0153045654296875
    4. '-c' → logprob: -10.515304565429688
    5. 'a' → logprob: -13.515304565429688
    6. '-а' → logprob: -13.640304565429688
    7. ')' → logprob: -14.390304565429688
    8. '-A' → logprob: -14.890304565429688
    9. ')-' → logprob: -15.515304565429688
    10. ' a' → logprob: -15.515304565429688

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043829824426211417
    2. ')
' → logprob: -7.750438213348389
    3. '   ' → logprob: -12.125438690185547
    4. ' )' → logprob: -13.750438690185547
    5. ')
' → logprob: -14.750438690185547
    6. '       ' → logprob: -15.250438690185547
    7. ')

' → logprob: -15.500438690185547
    8. '))' → logprob: -16.250438690185547
    9. '）' → logprob: -16.375438690185547
    10. '`)' → logprob: -17.000438690185547

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30257275700569153
    2. 'else' → logprob: -1.5525727272033691
    3. '       ' → logprob: -3.302572727203369
    4. ' else' → logprob: -4.677572727203369
    5. '```' → logprob: -5.927572727203369
    6. '<|end|>' → logprob: -7.927572727203369
    7. '	else' → logprob: -9.302573204040527
    8. ' ' → logprob: -9.677573204040527
    9. '``' → logprob: -10.677573204040527
    10. '  ' → logprob: -11.177573204040527

Token 60: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0032873940654098988
    2. ' else' → logprob: -5.878287315368652
    3. '   ' → logprob: -7.753287315368652
    4. '       ' → logprob: -10.128287315368652
    5. '```' → logprob: -12.503287315368652
    6. ' ' → logprob: -12.878287315368652
    7. '	else' → logprob: -13.003287315368652
    8. '<|end|>' → logprob: -13.128287315368652
    9. 'elif' → logprob: -13.503287315368652
    10. ')' → logprob: -14.753287315368652

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026062922552227974
    2. '       ' → logprob: -3.7760629653930664
    3. ':
' → logprob: -5.901062965393066
    4. '):' → logprob: -10.901062965393066
    5. '<|end|>' → logprob: -11.526062965393066
    6. '   ' → logprob: -11.651062965393066
    7. '           ' → logprob: -11.776062965393066
    8. '        ' → logprob: -12.026062965393066
    9. '```' → logprob: -12.151062965393066
    10. '{' → logprob: -12.901062965393066

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003781224077101797
    2. 'print' → logprob: -8.000377655029297
    3. '```' → logprob: -10.750377655029297
    4. '           ' → logprob: -11.750377655029297
    5. '   ' → logprob: -11.875377655029297
    6. ' print' → logprob: -12.375377655029297
    7. '"' → logprob: -14.625377655029297
    8. '     ' → logprob: -14.875377655029297
    9. '      ' → logprob: -15.125377655029297
    10. '(' → logprob: -15.625377655029297

Token 63: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.3464544432936236e-05
    2. '```' → logprob: -10.625043869018555
    3. '       ' → logprob: -11.500043869018555
    4. '   ' → logprob: -12.250043869018555
    5. ' print' → logprob: -12.500043869018555
    6. '``' → logprob: -14.750043869018555
    7. '	print' → logprob: -17.000043869018555
    8. '           ' → logprob: -17.125043869018555
    9. 'Print' → logprob: -18.000043869018555
    10. '"' → logprob: -19.125043869018555

Token 64: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00023619852436240762
    2. '(' → logprob: -8.375236511230469
    3. '"' → logprob: -12.250236511230469
    4. '('' → logprob: -14.125236511230469
    5. '()' → logprob: -16.50023651123047
    6. '("")' → logprob: -16.87523651123047
    7. '(Un' → logprob: -17.25023651123047
    8. '(
' → logprob: -17.75023651123047
    9. '("""' → logprob: -19.12523651123047
    10. '(("' → logprob: -19.12523651123047

Token 65: 'Un' (ID: 2265)
  Prédit: 'Un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Un' → logprob: -0.0036079094279557467
    2. '"' → logprob: -5.628607749938965
    3. '(Un' → logprob: -12.628607749938965
    4. '")' → logprob: -13.628607749938965
    5. 'Fair' → logprob: -14.128607749938965
    6. ' Un' → logprob: -14.628607749938965
    7. 'Unavailable' → logprob: -14.628607749938965
    8. '_Un' → logprob: -15.628607749938965
    9. 'Unknown' → logprob: -15.753607749938965
    10. '```' → logprob: -16.00360870361328

Token 66: 'fair' (ID: 53923)
  Prédit: 'fair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fair' → logprob: -0.0055536627769470215
    2. 'f' → logprob: -5.380553722381592
    3. 'fa' → logprob: -7.130553722381592
    4. 'air' → logprob: -10.130553245544434
    5. 'faire' → logprob: -10.880553245544434
    6. 'Fair' → logprob: -11.005553245544434
    7. 'a' → logprob: -11.005553245544434
    8. 'fait' → logprob: -12.005553245544434
    9. '```' → logprob: -12.130553245544434
    10. 'fail' → logprob: -12.255553245544434

Token 67: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519746720790863
    2. '")' → logprob: -1.5019747018814087
    3. ')")' → logprob: -10.501975059509277
    4. '')' → logprob: -11.251975059509277
    5. '`)' → logprob: -13.376975059509277
    6. ')
' → logprob: -13.876975059509277
    7. '```' → logprob: -13.876975059509277
    8. '"' → logprob: -14.251975059509277
    9. '")
' → logprob: -15.251975059509277
    10. '}")' → logprob: -15.751975059509277


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 65
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 54
Précision stricte (1ère position): 32.31%
Précision adaptée (1ère position): 38.46%
Précision (top 10): 83.08%
================================================================================
