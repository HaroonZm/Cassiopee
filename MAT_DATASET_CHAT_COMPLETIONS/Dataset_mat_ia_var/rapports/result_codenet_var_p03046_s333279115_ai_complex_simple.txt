================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import chain, islice, repeat
import sys

def main():
    m, k = map(int, input().split())
    lim = 1 << m

    def _err(): print(-1); sys.exit(0)

    (lambda:
        (lambda: print('0 0'), lambda: _err())[k != 0]() if m == 0 else
        (lambda: print('0 0 1 1'), lambda: _err())[k == 0]( ) if m == 1 else
        (lambda:
            (lambda arr:
                print(' '.join(map(str, arr)))
            )(
                reduce(
                    lambda a, b: a + b,
                    (
                        [k],
                        list(islice((i for i in range(lim) if i != k), 0, k)),
                        list(islice(reversed([i for i in range(lim) if i != k]), 0, lim - k -1)),
                        [k],
                    )
                )
            )
        )()
    )() if k < lim else _err()

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.4987817108631134
    2. 'partial' → logprob: -1.248781681060791
    3. 'reduce' → logprob: -2.498781681060791
    4. ' wraps' → logprob: -3.998781681060791
    5. 'l' → logprob: -5.748781681060791
    6. ' partial' → logprob: -7.248781681060791
    7. 'cached' → logprob: -7.623781681060791
    8. 'cache' → logprob: -7.623781681060791
    9. 'cmp' → logprob: -8.74878215789795
    10. ' reduce' → logprob: -9.37378215789795

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020809410139918327
    2. '.' → logprob: -4.520809173583984
    3. '(lambda' → logprob: -4.895809173583984
    4. ' (' → logprob: -7.020809173583984
    5. ',' → logprob: -7.770809173583984
    6. '```' → logprob: -8.020809173583984
    7. '\' → logprob: -9.020809173583984
    8. ''' → logprob: -9.645809173583984
    9. '(
' → logprob: -9.895809173583984
    10. '`' → logprob: -10.020809173583984

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20910526812076569
    2. '\' → logprob: -2.0841052532196045
    3. 'def' → logprob: -3.2091052532196045
    4. ' ' → logprob: -4.709105491638184
    5. ',' → logprob: -6.209105491638184
    6. '```' → logprob: -6.209105491638184
    7. '(
' → logprob: -6.834105491638184
    8. '\(' → logprob: -6.959105491638184
    9. '\n' → logprob: -7.209105491638184
    10. ' (' → logprob: -7.209105491638184

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04220021516084671
    2. 'import' → logprob: -3.2922003269195557
    3. '.' → logprob: -5.667200088500977
    4. ' .' → logprob: -8.167200088500977
    5. '.import' → logprob: -8.417200088500977
    6. ' ' → logprob: -8.917200088500977
    7. '	import' → logprob: -10.792200088500977
    8. '_import' → logprob: -11.417200088500977
    9. '<|end|>' → logprob: -12.542200088500977
    10. '.im' → logprob: -12.792200088500977

Token 8: ' chain' (ID: 13464)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.035888910293579
    2. ' group' → logprob: -1.285888910293579
    3. 'count' → logprob: -2.035888910293579
    4. 'acc' → logprob: -2.660888910293579
    5. 'cycle' → logprob: -3.035888910293579
    6. 'chain' → logprob: -3.410888910293579
    7. 'com' → logprob: -3.660888910293579
    8. ' cycle' → logprob: -4.035888671875
    9. ' chain' → logprob: -4.410888671875
    10. ' accumulate' → logprob: -4.410888671875

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20070266723632812
    2. '(
' → logprob: -2.325702667236328
    3. ',' → logprob: -3.325702667236328
    4. '\n' → logprob: -4.075702667236328
    5. '.' → logprob: -4.325702667236328
    6. 'def' → logprob: -5.325702667236328
    7. '\' → logprob: -5.700702667236328
    8. 'import' → logprob: -5.825702667236328
    9. '```' → logprob: -6.325702667236328
    10. ',
' → logprob: -7.075702667236328

Token 10: ' is' (ID: 382)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.2887395918369293
    2. ' is' → logprob: -2.2887396812438965
    3. 'is' → logprob: -3.1637396812438965
    4. 'count' → logprob: -3.9137396812438965
    5. ' group' → logprob: -4.0387396812438965
    6. 'group' → logprob: -4.0387396812438965
    7. 'cycle' → logprob: -4.4137396812438965
    8. 'compress' → logprob: -5.2887396812438965
    9. ' cycle' → logprob: -5.5387396812438965
    10. 'product' → logprob: -5.5387396812438965

Token 11: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -4.191489642835222e-05
    2. 'l' → logprob: -11.000041961669922
    3. 'lic' → logprob: -11.125041961669922
    4. '```' → logprob: -13.250041961669922
    5. 'licing' → logprob: -13.250041961669922
    6. '#' → logprob: -13.625041961669922
    7. 'liced' → logprob: -13.750041961669922
    8. 'lices' → logprob: -14.500041961669922
    9. '"' → logprob: -14.625041961669922
    10. '``' → logprob: -14.625041961669922

Token 12: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07770789414644241
    2. '(
' → logprob: -2.9527080059051514
    3. 'def' → logprob: -4.702707767486572
    4. ',' → logprob: -4.952707767486572
    5. '\' → logprob: -5.827707767486572
    6. '\n' → logprob: -6.577707767486572
    7. '.' → logprob: -7.827707767486572
    8. '
' → logprob: -8.45270824432373
    9. '```' → logprob: -8.70270824432373
    10. ' (' → logprob: -8.70270824432373

Token 13: ' repeat' (ID: 22962)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.6360459327697754
    2. 'group' → logprob: -2.0110459327697754
    3. 'take' → logprob: -2.0110459327697754
    4. 'zip' → logprob: -2.2610459327697754
    5. 'tee' → logprob: -2.2610459327697754
    6. 'cycle' → logprob: -2.6360459327697754
    7. 'filter' → logprob: -2.6360459327697754
    8. 'acc' → logprob: -2.7610459327697754
    9. 'compress' → logprob: -3.1360459327697754
    10. 'drop' → logprob: -3.7610459327697754

Token 14: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4733782410621643
    2. '\' → logprob: -2.0983781814575195
    3. 'def' → logprob: -2.2233781814575195
    4. '(
' → logprob: -2.8483781814575195
    5. '\n' → logprob: -3.0983781814575195
    6. ',' → logprob: -3.7233781814575195
    7. '```' → logprob: -4.8483781814575195
    8. '(

' → logprob: -6.4733781814575195
    9. '[' → logprob: -6.7233781814575195
    10. '`' → logprob: -6.8483781814575195

Token 15: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1356775462627411
    2. '\' → logprob: -3.0106775760650635
    3. '```' → logprob: -3.2606775760650635
    4. '\n' → logprob: -4.510677337646484
    5. 'd' → logprob: -4.885677337646484
    6. ',' → logprob: -5.760677337646484
    7. '`' → logprob: -5.760677337646484
    8. 'import' → logprob: -5.885677337646484
    9. '
' → logprob: -6.135677337646484
    10. ',
' → logprob: -6.260677337646484

Token 16: ' sys' (ID: 12228)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -1.0270075798034668
    2. ' itertools' → logprob: -1.4020075798034668
    3. ' os' → logprob: -2.027007579803467
    4. ' functools' → logprob: -2.652007579803467
    5. ' math' → logprob: -2.777007579803467
    6. ' ' → logprob: -3.027007579803467
    7. ' operator' → logprob: -3.527007579803467
    8. ' re' → logprob: -3.777007579803467
    9. ' numpy' → logprob: -4.027007579803467
    10. ' sys' → logprob: -5.277007579803467

Token 17: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8974627256393433
    2. '\n' → logprob: -1.7724627256393433
    3. 'def' → logprob: -1.8974627256393433
    4. ',' → logprob: -2.397462844848633
    5. '

' → logprob: -2.522462844848633
    6. '```' → logprob: -3.647462844848633
    7. '\' → logprob: -3.647462844848633
    8. 'import' → logprob: -4.022462844848633
    9. ',
' → logprob: -4.897462844848633
    10. '[' → logprob: -5.522462844848633

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0031033270061016083
    2. '```' → logprob: -6.878103256225586
    3. '\' → logprob: -7.753103256225586
    4. 'class' → logprob: -8.128103256225586
    5. 'import' → logprob: -8.503103256225586
    6. '\n' → logprob: -8.753103256225586
    7. 'de' → logprob: -9.128103256225586
    8. ',' → logprob: -9.128103256225586
    9. '
' → logprob: -9.253103256225586
    10. 'd' → logprob: -9.378103256225586

Token 19: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1535224914550781
    2. ' factorial' → logprob: -2.403522491455078
    3. ' reduce' → logprob: -2.778522491455078
    4. ' process' → logprob: -2.778522491455078
    5. ' wrap' → logprob: -3.028522491455078
    6. ' map' → logprob: -3.278522491455078
    7. ' compose' → logprob: -3.778522491455078
    8. ' filter' → logprob: -3.778522491455078
    9. ' decode' → logprob: -3.903522491455078
    10. ' main' → logprob: -4.028522491455078

Token 20: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028713271021842957
    2. '():' → logprob: -6.002871513366699
    3. ':' → logprob: -9.0028715133667
    4. '(:' → logprob: -9.3778715133667
    5. '_' → logprob: -9.6278715133667
    6. ' (' → logprob: -9.8778715133667
    7. '()' → logprob: -11.1278715133667
    8. '(
' → logprob: -11.2528715133667
    9. '("("' → logprob: -12.0028715133667
    10. '```' → logprob: -12.6278715133667

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1279381960630417
    2. '    ' → logprob: -2.5029382705688477
    3. ' ' → logprob: -3.5029382705688477
    4. ' )' → logprob: -7.377938270568848
    5. ' for' → logprob: -7.377938270568848
    6. 'a' → logprob: -7.502938270568848
    7. 'n' → logprob: -7.502938270568848
    8. ')' → logprob: -7.627938270568848
    9. '  ' → logprob: -7.752938270568848
    10. ' readline' → logprob: -8.002938270568848

Token 22: ' m' (ID: 284)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.7154003381729126
    2. '   ' → logprob: -1.9654003381729126
    3. ' n' → logprob: -2.090400218963623
    4. ' data' → logprob: -2.215400218963623
    5. 'n' → logprob: -2.465400218963623
    6. ' for' → logprob: -2.840400218963623
    7. 'for' → logprob: -3.090400218963623
    8. ' input' → logprob: -3.215400218963623
    9. 'input' → logprob: -3.340400218963623
    10. '    ' → logprob: -3.465400218963623

Token 23: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.41230666637420654
    2. 'ain' → logprob: -1.4123066663742065
    3. 'ap' → logprob: -2.787306785583496
    4. 'e' → logprob: -4.162306785583496
    5. ' =' → logprob: -5.162306785583496
    6. 'ax' → logprob: -6.037306785583496
    7. 'essage' → logprob: -6.537306785583496
    8. 'ean' → logprob: -6.662306785583496
    9. '=' → logprob: -6.912306785583496
    10. 'y' → logprob: -7.037306785583496

Token 24: ' k' (ID: 372)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.13271722197532654
    2. 'n' → logprob: -2.1327171325683594
    3. ' ' → logprob: -6.632717132568359
    4. ' k' → logprob: -7.007717132568359
    5. ' t' → logprob: -7.257717132568359
    6. ' s' → logprob: -7.757717132568359
    7. '_' → logprob: -7.757717132568359
    8. 'k' → logprob: -8.13271713256836
    9. ' w' → logprob: -8.50771713256836
    10. ' d' → logprob: -9.13271713256836

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009878150187432766
    2. '=' → logprob: -4.634878158569336
    3. ',' → logprob: -9.259878158569336
    4. ' ' → logprob: -10.759878158569336
    5. ' =
' → logprob: -13.009878158569336
    6. ' ,' → logprob: -13.509878158569336
    7. '  ' → logprob: -14.259878158569336
    8. ')' → logprob: -15.134878158569336
    9. '<|end|>' → logprob: -15.259878158569336
    10. ' =
' → logprob: -15.634878158569336

Token 26: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1121516078710556
    2. 'map' → logprob: -2.487151622772217
    3. ' ' → logprob: -4.237151622772217
    4. '5' → logprob: -6.737151622772217
    5. '1' → logprob: -6.862151622772217
    6. '2' → logprob: -7.112151622772217
    7. '10' → logprob: -7.112151622772217
    8. '0' → logprob: -7.487151622772217
    9. ' sys' → logprob: -7.487151622772217
    10. '3' → logprob: -7.987151622772217

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03680543601512909
    2. '(' → logprob: -3.4118053913116455
    3. '(str' → logprob: -5.786805629730225
    4. '(input' → logprob: -9.911805152893066
    5. 'int' → logprob: -11.036805152893066
    6. '(
' → logprob: -12.036805152893066
    7. '(lambda' → logprob: -12.786805152893066
    8. '(eval' → logprob: -12.911805152893066
    9. 'str' → logprob: -13.411805152893066
    10. '<int' → logprob: -13.536805152893066

Token 28: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4582992792129517
    2. ')' → logprob: -1.4582992792129517
    3. '(input' → logprob: -1.4582992792129517
    4. '(sys' → logprob: -1.4582992792129517
    5. ',' → logprob: -2.833299160003662
    6. 'input' → logprob: -5.083299160003662
    7. ',input' → logprob: -6.583299160003662
    8. '```' → logprob: -6.833299160003662
    9. 'sys' → logprob: -7.958299160003662
    10. '=sys' → logprob: -8.20829963684082

Token 29: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6353656053543091
    2. ' sys' → logprob: -0.8853656053543091
    3. 'input' → logprob: -3.1353654861450195
    4. 'sys' → logprob: -4.2603654861450195
    5. ')' → logprob: -9.76036548614502
    6. '(sys' → logprob: -11.01036548614502
    7. ' )' → logprob: -12.13536548614502
    8. ' ' → logprob: -12.26036548614502
    9. '=sys' → logprob: -12.63536548614502
    10. '	sys' → logprob: -13.01036548614502

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002172385808080435
    2. '()' → logprob: -6.627172470092773
    3. '())' → logprob: -7.377172470092773
    4. ')' → logprob: -8.502172470092773
    5. '()
' → logprob: -12.752172470092773
    6. '(' → logprob: -12.877172470092773
    7. '());' → logprob: -13.127172470092773
    8. '()>' → logprob: -13.502172470092773
    9. '()))' → logprob: -13.627172470092773
    10. '('').' → logprob: -13.627172470092773

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.764977686339989e-05
    2. 'strip' → logprob: -9.875057220458984
    3. ' split' → logprob: -12.375057220458984
    4. '(split' → logprob: -13.750057220458984
    5. 'rstrip' → logprob: -14.750057220458984
    6. 'read' → logprob: -15.125057220458984
    7. 'spl' → logprob: -16.125057220458984
    8. ' ' → logprob: -17.625057220458984
    9. ')' → logprob: -18.375057220458984
    10. '```' → logprob: -18.375057220458984

Token 32: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11177237331867218
    2. '())' → logprob: -2.361772298812866
    3. '))' → logprob: -4.736772537231445
    4. '()' → logprob: -5.986772537231445
    5. '()))' → logprob: -8.986772537231445
    6. '(' → logprob: -9.986772537231445
    7. '('' → logprob: -11.236772537231445
    8. '),' → logprob: -11.861772537231445
    9. ')`' → logprob: -12.486772537231445
    10. ')
' → logprob: -12.611772537231445

Token 33: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6038929224014282
    2. '
' → logprob: -1.2288929224014282
    3. ')' → logprob: -2.6038928031921387
    4. '<|end|>' → logprob: -3.2288928031921387
    5. ':
' → logprob: -4.603892803192139
    6. '\n' → logprob: -5.228892803192139
    7. ',' → logprob: -5.228892803192139
    8. '  
' → logprob: -5.603892803192139
    9. '   ' → logprob: -5.603892803192139
    10. '    
' → logprob: -5.728892803192139

Token 34: ' lim' (ID: 3147)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8181271553039551
    2. '
' → logprob: -1.693127155303955
    3. 'n' → logprob: -2.193127155303955
    4. '   ' → logprob: -3.443127155303955
    5. '<|end|>' → logprob: -3.693127155303955
    6. ' ' → logprob: -3.818127155303955
    7. ' 
' → logprob: -3.818127155303955
    8. ' if' → logprob: -4.068127155303955
    9. 'data' → logprob: -4.318127155303955
    10. '\n' → logprob: -4.443127155303955

Token 35: ' =' (ID: 314)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.20235809683799744
    2. ' =' → logprob: -1.8273581266403198
    3. 'its' → logprob: -4.202358245849609
    4. '=' → logprob: -5.577358245849609
    5. '   ' → logprob: -6.452358245849609
    6. ' ' → logprob: -7.202358245849609
    7. '  ' → logprob: -8.45235824584961
    8. 'ited' → logprob: -8.45235824584961
    9. '```' → logprob: -8.70235824584961
    10. ',' → logprob: -9.20235824584961

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2774651348590851
    2. '1' → logprob: -2.9024651050567627
    3. '10' → logprob: -3.1524651050567627
    4. ' m' → logprob: -3.5274651050567627
    5. ' k' → logprob: -3.5274651050567627
    6. '2' → logprob: -3.5274651050567627
    7. ' min' → logprob: -4.652465343475342
    8. ' max' → logprob: -4.777465343475342
    9. ' (' → logprob: -5.027465343475342
    10. ' int' → logprob: -5.527465343475342

Token 37: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1140663623809814
    2. '1' → logprob: -1.4890663623809814
    3. '2' → logprob: -1.6140663623809814
    4. ' ' → logprob: -1.8640663623809814
    5. 'm' → logprob: -3.8640663623809814
    6. 'k' → logprob: -4.114066123962402
    7. ' m' → logprob: -4.489066123962402
    8. 'min' → logprob: -4.614066123962402
    9. '(' → logprob: -5.239066123962402
    10. ' k' → logprob: -5.489066123962402

Token 38: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.01912262663245201
    2. ' <<' → logprob: -4.14412260055542
    3. '<' → logprob: -5.89412260055542
    4. '0' → logprob: -9.519123077392578
    5. '1' → logprob: -9.894123077392578
    6. '+' → logprob: -10.019123077392578
    7. '<<(' → logprob: -10.269123077392578
    8. ' <' → logprob: -10.894123077392578
    9. '2' → logprob: -10.894123077392578
    10. ' <<=' → logprob: -11.394123077392578

Token 39: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.48342424631118774
    2. 'k' → logprob: -1.108424186706543
    3. '(' → logprob: -3.608424186706543
    4. ' m' → logprob: -4.733424186706543
    5. '(k' → logprob: -5.108424186706543
    6. ' k' → logprob: -5.483424186706543
    7. ' (' → logprob: -5.858424186706543
    8. '(m' → logprob: -6.233424186706543
    9. '60' → logprob: -7.108424186706543
    10. '50' → logprob: -8.483424186706543

Token 40: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47137612104415894
    2. 'k' → logprob: -2.5963761806488037
    3. '+' → logprob: -2.9713761806488037
    4. ' 
' → logprob: -3.2213761806488037
    5. ' k' → logprob: -3.8463761806488037
    6. 'm' → logprob: -3.8463761806488037
    7. '-' → logprob: -3.9713761806488037
    8. '(k' → logprob: -3.9713761806488037
    9. '
' → logprob: -4.096375942230225
    10. ')' → logprob: -4.221375942230225

Token 41: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030638525262475014
    2. '   ' → logprob: -4.405638694763184
    3. '    
' → logprob: -4.905638694763184
    4. '  
' → logprob: -5.905638694763184
    5. '\n' → logprob: -6.030638694763184
    6. '<|end|>' → logprob: -6.405638694763184
    7. ' 
' → logprob: -7.155638694763184
    8. ':' → logprob: -7.405638694763184
    9. '```' → logprob: -7.405638694763184
    10. '   
' → logprob: -8.155638694763184

Token 42: ' def' (ID: 1056)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5084724426269531
    2. 'arr' → logprob: -2.133472442626953
    3. 'a' → logprob: -2.258472442626953
    4. 's' → logprob: -2.383472442626953
    5. 'lst' → logprob: -2.633472442626953
    6. 'res' → logprob: -3.133472442626953
    7. 'ans' → logprob: -3.258472442626953
    8. 'for' → logprob: -3.258472442626953
    9. 'seq' → logprob: -3.383472442626953
    10. 'dp' → logprob: -3.883472442626953

Token 43: ' _' (ID: 1175)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -1.8355551958084106
    2. ' gen' → logprob: -2.835555076599121
    3. ' generate' → logprob: -3.210555076599121
    4. ' is' → logprob: -3.335555076599121
    5. ' valid' → logprob: -3.335555076599121
    6. ' count' → logprob: -3.335555076599121
    7. ' check' → logprob: -3.460555076599121
    8. ' helper' → logprob: -3.460555076599121
    9. ' solve' → logprob: -3.460555076599121
    10. 'pow' → logprob: -3.585555076599121

Token 44: 'err' (ID: 837)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.7131268978118896
    2. 'iter' → logprob: -2.5881268978118896
    3. 'pow' → logprob: -2.8381268978118896
    4. 'count' → logprob: -2.8381268978118896
    5. 'comb' → logprob: -2.9631268978118896
    6. 'solve' → logprob: -3.0881268978118896
    7. 'get' → logprob: -3.4631268978118896
    8. 'bit' → logprob: -3.7131268978118896
    9. 'generate' → logprob: -3.7131268978118896
    10. 'gen' → logprob: -3.7131268978118896

Token 45: '():' (ID: 9442)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6318244934082031
    2. 'or' → logprob: -0.8818244934082031
    3. 'handle' → logprob: -3.506824493408203
    4. 'write' → logprob: -5.131824493408203
    5. 'orm' → logprob: -5.631824493408203
    6. '():' → logprob: -6.131824493408203
    7. 'handler' → logprob: -6.131824493408203
    8. 'ort' → logprob: -6.881824493408203
    9. '_print' → logprob: -7.006824493408203
    10. '_handle' → logprob: -7.131824493408203

Token 46: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05202607065439224
    2. ' raise' → logprob: -3.3020260334014893
    3. 'raise' → logprob: -5.427026271820068
    4. '   ' → logprob: -5.552026271820068
    5. '\n' → logprob: -6.552026271820068
    6. ' return' → logprob: -7.177026271820068
    7. '    ' → logprob: -7.802026271820068
    8. '<|end|>' → logprob: -7.927026271820068
    9. 'print' → logprob: -8.05202579498291
    10. ' ' → logprob: -8.05202579498291

Token 47: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10312314331531525
    2. '()' → logprob: -2.478123188018799
    3. '('' → logprob: -5.228123188018799
    4. '("' → logprob: -5.478123188018799
    5. '(False' → logprob: -5.978123188018799
    6. '(-' → logprob: -7.103123188018799
    7. '("")' → logprob: -7.853123188018799
    8. '(*' → logprob: -8.35312271118164
    9. '(None' → logprob: -8.97812271118164
    10. '(end' → logprob: -8.97812271118164

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.625007629394531
    3. '2' → logprob: -12.750007629394531
    4. '   ' → logprob: -16.18750762939453
    5. '１' → logprob: -16.43750762939453
    6. '```' → logprob: -16.62500762939453
    7. '۱' → logprob: -16.68750762939453
    8. '-' → logprob: -17.18750762939453
    9. 's' → logprob: -17.18750762939453
    10. '10' → logprob: -17.37500762939453

Token 49: ');' (ID: 2245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.300083648762666e-05
    2. ');' → logprob: -10.000053405761719
    3. '),' → logprob: -12.625053405761719
    4. ',' → logprob: -13.875053405761719
    5. ')
' → logprob: -14.000053405761719
    6. '))' → logprob: -14.750053405761719
    7. ')`' → logprob: -14.875053405761719
    8. ' )' → logprob: -15.000053405761719
    9. ')return' → logprob: -15.125053405761719
    10. '')' → logprob: -15.125053405761719

Token 50: ' sys' (ID: 12228)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.056819505989551544
    2. ' exit' → logprob: -3.306819438934326
    3. 'return' → logprob: -4.431819438934326
    4. ' sys' → logprob: -5.306819438934326
    5. 'exit' → logprob: -6.556819438934326
    6. 'sys' → logprob: -9.306819915771484
    7. ' ' → logprob: -9.806819915771484
    8. '    ' → logprob: -9.931819915771484
    9. ' raise' → logprob: -10.056819915771484
    10. '```' → logprob: -10.181819915771484

Token 51: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.00026073982007801533
    2. '.stdout' → logprob: -8.875260353088379
    3. '.stderr' → logprob: -9.625260353088379
    4. '.' → logprob: -10.125260353088379
    5. '.stdin' → logprob: -12.500260353088379
    6. '	exit' → logprob: -12.875260353088379
    7. 'exit' → logprob: -13.000260353088379
    8. ' .' → logprob: -13.250260353088379
    9. '.ex' → logprob: -13.875260353088379
    10. '.setdefault' → logprob: -14.250260353088379

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759857296943665
    2. '()' → logprob: -0.8259857296943665
    3. ' ()' → logprob: -11.2009859085083
    4. '()(' → logprob: -11.5759859085083
    5. '()`' → logprob: -12.2009859085083
    6. ' (' → logprob: -12.2009859085083
    7. '`()' → logprob: -13.2009859085083
    8. '()
' → logprob: -13.4509859085083
    9. '()\' → logprob: -13.7009859085083
    10. '();' → logprob: -13.9509859085083

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25911280512809753
    2. ')' → logprob: -1.75911283493042
    3. '1' → logprob: -2.88411283493042
    4. ' ' → logprob: -9.009112358093262
    5. '()' → logprob: -11.509112358093262
    6. '))' → logprob: -12.009112358093262
    7. ' )' → logprob: -12.384112358093262
    8. '())' → logprob: -12.509112358093262
    9. '(' → logprob: -12.634112358093262
    10. '  ' → logprob: -12.884112358093262

Token 54: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -13.250003814697266
    3. '))' → logprob: -13.250003814697266
    4. ' )' → logprob: -15.625003814697266
    5. ')`' → logprob: -16.375003814697266
    6. ')

' → logprob: -17.000003814697266
    7. '`)' → logprob: -17.125003814697266
    8. '   ' → logprob: -17.625003814697266
    9. '())' → logprob: -17.875003814697266
    10. '),' → logprob: -17.875003814697266

Token 55: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20848418772220612
    2. '   ' → logprob: -2.333484172821045
    3. '<|end|>' → logprob: -2.708484172821045
    4. '    
' → logprob: -4.083484172821045
    5. '\n' → logprob: -6.458484172821045
    6. '  
' → logprob: -6.708484172821045
    7. '<|end|>' → logprob: -6.708484172821045
    8. ' ' → logprob: -7.083484172821045
    9. ' 
' → logprob: -7.708484172821045
    10. ')' → logprob: -8.083484649658203

Token 56: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.789015531539917
    2. 'if' → logprob: -0.789015531539917
    3. ' if' → logprob: -2.914015531539917
    4. 'def' → logprob: -4.539015769958496
    5. 'a' → logprob: -5.289015769958496
    6. 'arr' → logprob: -5.539015769958496
    7. 'data' → logprob: -5.539015769958496
    8. 'x' → logprob: -6.289015769958496
    9. '    
' → logprob: -6.789015769958496
    10. 'sequence' → logprob: -7.039015769958496

Token 57: 'lambda' (ID: 35280)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.26281610131263733
    2. 'm' → logprob: -2.2628161907196045
    3. ' k' → logprob: -2.5128161907196045
    4. ' m' → logprob: -3.8878161907196045
    5. ')' → logprob: -4.637815952301025
    6. 'lim' → logprob: -5.762815952301025
    7. ' (' → logprob: -6.512815952301025
    8. 'lambda' → logprob: -6.950315952301025
    9. 'i' → logprob: -7.325315952301025
    10. 'n' → logprob: -7.387815952301025

Token 58: ':
' (ID: 734)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6133730411529541
    2. ' x' → logprob: -2.238373041152954
    3. ' s' → logprob: -2.863373041152954
    4. 'n' → logprob: -2.863373041152954
    5. ' l' → logprob: -3.488373041152954
    6. 'x' → logprob: -3.988373041152954
    7. ' )' → logprob: -3.988373041152954
    8. ' a' → logprob: -4.238372802734375
    9. ' i' → logprob: -4.363372802734375
    10. ' k' → logprob: -4.363372802734375

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28735482692718506
    2. '    ' → logprob: -2.0373549461364746
    3. '   ' → logprob: -3.0373549461364746
    4. '<|end|>' → logprob: -4.037354946136475
    5. ' ' → logprob: -4.662354946136475
    6. ' if' → logprob: -4.787354946136475
    7. '        ' → logprob: -5.037354946136475
    8. ')' → logprob: -5.537354946136475
    9. '0' → logprob: -5.912354946136475
    10. '        
' → logprob: -6.162354946136475

Token 60: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0120818614959717
    2. ' if' → logprob: -1.7620818614959717
    3. '   ' → logprob: -2.7620818614959717
    4. '       ' → logprob: -3.0120818614959717
    5. ' [' → logprob: -3.2620818614959717
    6. '[' → logprob: -3.3870818614959717
    7. ' None' → logprob: -3.3870818614959717
    8. 'k' → logprob: -3.5120818614959717
    9. ' (' → logprob: -4.012082099914551
    10. ')' → logprob: -4.012082099914551

Token 61: 'lambda' (ID: 35280)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.637624979019165
    2. 'm' → logprob: -2.262624979019165
    3. '(k' → logprob: -2.887624979019165
    4. '(lambda' → logprob: -2.887624979019165
    5. '(m' → logprob: -3.387624979019165
    6. 'lambda' → logprob: -3.637624979019165
    7. '[]' → logprob: -3.637624979019165
    8. '0' → logprob: -3.637624979019165
    9. 'lim' → logprob: -3.762624979019165
    10. '(' → logprob: -4.137624740600586

Token 62: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28125059604644775
    2. ' n' → logprob: -2.281250476837158
    3. ' :' → logprob: -3.156250476837158
    4. '():' → logprob: -3.781250476837158
    5. ' None' → logprob: -4.406250476837158
    6. ' l' → logprob: -5.031250476837158
    7. ' a' → logprob: -5.531250476837158
    8. ' ' → logprob: -5.531250476837158
    9. ' _' → logprob: -5.656250476837158
    10. ' x' → logprob: -5.781250476837158

Token 63: ' print' (ID: 2123)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9944965243339539
    2. '<|end|>' → logprob: -1.9944965839385986
    3. ' None' → logprob: -2.3694965839385986
    4. '        ' → logprob: -2.3694965839385986
    5. '            ' → logprob: -2.7444965839385986
    6. ' k' → logprob: -3.2444965839385986
    7. ' (' → logprob: -3.4944965839385986
    8. ' [' → logprob: -3.8694965839385986
    9. ' True' → logprob: -3.9944965839385986
    10. '           ' → logprob: -3.9944965839385986

Token 64: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5160459280014038
    2. '('' → logprob: -1.7660459280014038
    3. '(-' → logprob: -1.7660459280014038
    4. '(l' → logprob: -4.016046047210693
    5. '(list' → logprob: -4.641046047210693
    6. '(*' → logprob: -4.766046047210693
    7. '("' → logprob: -4.891046047210693
    8. '([' → logprob: -5.141046047210693
    9. '((' → logprob: -5.516046047210693
    10. '(
' → logprob: -6.266046047210693

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49197617173194885
    2. ' '.' → logprob: -1.9919761419296265
    3. '-' → logprob: -2.116976261138916
    4. ''' → logprob: -3.366976261138916
    5. ''.' → logprob: -4.116976261138916
    6. ' '' → logprob: -4.116976261138916
    7. '1' → logprob: -4.366976261138916
    8. ' ' → logprob: -4.366976261138916
    9. ' ')' → logprob: -4.866976261138916
    10. ' ',' → logprob: -5.116976261138916

Token 66: ' ' (ID: 220)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5296485424041748
    2. ''' → logprob: -1.5296485424041748
    3. ''))' → logprob: -2.654648542404175
    4. ' ',' → logprob: -3.529648542404175
    5. ' ')' → logprob: -4.029648780822754
    6. '',' → logprob: -4.154648780822754
    7. '0' → logprob: -4.154648780822754
    8. ' '*' → logprob: -4.404648780822754
    9. '')' → logprob: -4.654648780822754
    10. ' ' → logprob: -5.404648780822754

Token 67: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2765209674835205
    2. ''*' → logprob: -2.0265209674835205
    3. '0' → logprob: -2.7765209674835205
    4. '1' → logprob: -4.151520729064941
    5. '')' → logprob: -4.901520729064941
    6. ''))' → logprob: -5.026520729064941
    7. '',' → logprob: -5.276520729064941
    8. ' '' → logprob: -5.776520729064941
    9. ' ' → logprob: -6.401520729064941
    10. ''+' → logprob: -6.901520729064941

Token 68: ''),' (ID: 10047)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.36578047275543213
    2. ''))' → logprob: -1.8657804727554321
    3. '',' → logprob: -2.7407803535461426
    4. '')' → logprob: -2.8657803535461426
    5. '0' → logprob: -4.490780353546143
    6. ' '' → logprob: -4.865780353546143
    7. ''),' → logprob: -5.490780353546143
    8. ' ',' → logprob: -6.365780353546143
    9. ' ' → logprob: -6.865780353546143
    10. '\n' → logprob: -6.865780353546143

Token 69: ' lambda' (ID: 27871)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.143075942993164
    2. ' _' → logprob: -1.768075942993164
    3. ' lambda' → logprob: -2.143075942993164
    4. ' ' → logprob: -2.518075942993164
    5. '_' → logprob: -3.018075942993164
    6. ' None' → logprob: -3.393075942993164
    7. ' )' → logprob: -3.518075942993164
    8. ' exit' → logprob: -4.018075942993164
    9. '    ' → logprob: -4.143075942993164
    10. '        ' → logprob: -4.143075942993164

Token 70: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003058992326259613
    2. ' err' → logprob: -6.753058910369873
    3. ' :' → logprob: -7.003058910369873
    4. 'err' → logprob: -7.753058910369873
    5. ' _' → logprob: -9.378059387207031
    6. ' _:' → logprob: -9.628059387207031
    7. ':_' → logprob: -9.628059387207031
    8. ':
' → logprob: -10.378059387207031
    9. ' x' → logprob: -10.440559387207031
    10. '=' → logprob: -10.565559387207031

Token 71: ' _' (ID: 1175)
  Prédit: '_err'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_err' → logprob: -1.0006380081176758
    2. 'print' → logprob: -1.3756380081176758
    3. ' _' → logprob: -1.8756380081176758
    4. ' print' → logprob: -2.250638008117676
    5. ' (' → logprob: -3.500638008117676
    6. '(lambda' → logprob: -4.250638008117676
    7. '_' → logprob: -5.000638008117676
    8. '(_' → logprob: -5.000638008117676
    9. '[' → logprob: -5.125638008117676
    10. 'reduce' → logprob: -5.250638008117676

Token 72: 'err' (ID: 837)
  Prédit: 'err'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'err' → logprob: -4.4894986785948277e-05
    2. 'er' → logprob: -10.625044822692871
    3. '_err' → logprob: -11.750044822692871
    4. ' err' → logprob: -12.125044822692871
    5. ')' → logprob: -13.750044822692871
    6. 'e' → logprob: -13.875044822692871
    7. '(err' → logprob: -14.125044822692871
    8. '	err' → logprob: -14.500044822692871
    9. ' ' → logprob: -14.875044822692871
    10. 'error' → logprob: -14.875044822692871

Token 73: '())[' (ID: 166443)
  Prédit: '())['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())[' → logprob: -0.07561817020177841
    2. '())' → logprob: -3.325618267059326
    3. ')' → logprob: -3.575618267059326
    4. ')[' → logprob: -5.825618267059326
    5. '()' → logprob: -5.950618267059326
    6. '(),' → logprob: -6.575618267059326
    7. '()))' → logprob: -6.825618267059326
    8. '()[' → logprob: -7.825618267059326
    9. '))[' → logprob: -8.700617790222168
    10. '))' → logprob: -10.075617790222168

Token 74: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.025130433961749077
    2. 'not' → logprob: -4.650130271911621
    3. 'm' → logprob: -5.525130271911621
    4. '(k' → logprob: -5.650130271911621
    5. ' k' → logprob: -6.275130271911621
    6. '0' → logprob: -6.400130271911621
    7. ' not' → logprob: -7.275130271911621
    8. 'False' → logprob: -7.400130271911621
    9. 'int' → logprob: -7.525130271911621
    10. '(not' → logprob: -7.525130271911621

Token 75: ' !=' (ID: 1666)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.7340015769004822
    2. '>' → logprob: -1.484001636505127
    3. '!=' → logprob: -1.734001636505127
    4. '==' → logprob: -2.484001636505127
    5. '<' → logprob: -4.734001636505127
    6. ' >=' → logprob: -5.109001636505127
    7. ' !=' → logprob: -5.734001636505127
    8. ' >' → logprob: -5.859001636505127
    9. ' ==' → logprob: -6.234001636505127
    10. ']' → logprob: -6.234001636505127

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10567701607942581
    2. ' ' → logprob: -2.7306771278381348
    3. '1' → logprob: -4.355677127838135
    4. '(' → logprob: -4.730677127838135
    5. 'lim' → logprob: -5.105677127838135
    6. ' (' → logprob: -5.855677127838135
    7. '2' → logprob: -6.605677127838135
    8. '((' → logprob: -7.855677127838135
    9. 'm' → logprob: -7.855677127838135
    10. ' lim' → logprob: -7.980677127838135

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015444930642843246
    2. ' ' → logprob: -5.015444755554199
    3. '1' → logprob: -5.640444755554199
    4. 'lim' → logprob: -5.890444755554199
    5. '(' → logprob: -6.515444755554199
    6. 'm' → logprob: -8.3904447555542
    7. ' (' → logprob: -8.5154447555542
    8. '2' → logprob: -9.5779447555542
    9. '((' → logprob: -9.8904447555542
    10. '   ' → logprob: -10.2029447555542

Token 78: ']()' (ID: 137203)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27249911427497864
    2. '])' → logprob: -1.6474990844726562
    3. ']()' → logprob: -3.2724990844726562
    4. ' or' → logprob: -6.647499084472656
    5. '](' → logprob: -6.647499084472656
    6. ' ]' → logprob: -7.022499084472656
    7. '])(' → logprob: -7.022499084472656
    8. ' and' → logprob: -7.147499084472656
    9. ' ])' → logprob: -7.147499084472656
    10. ']])' → logprob: -7.897499084472656

Token 79: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03993714228272438
    2. '   ' → logprob: -3.2899372577667236
    3. '()' → logprob: -7.4149370193481445
    4. '())' → logprob: -7.9149370193481445
    5. ' )' → logprob: -8.164937019348145
    6. '    ' → logprob: -8.539937019348145
    7. ' ' → logprob: -8.914937019348145
    8. '       ' → logprob: -9.414937019348145
    9. '  ' → logprob: -9.664937019348145
    10. '))' → logprob: -10.539937019348145

Token 80: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5980282425880432
    2. 'm' → logprob: -1.7230281829833984
    3. ' k' → logprob: -1.8480281829833984
    4. 'k' → logprob: -2.2230281829833984
    5. ' not' → logprob: -6.598028182983398
    6. ' ' → logprob: -6.723028182983398
    7. '   ' → logprob: -7.223028182983398
    8. 'lim' → logprob: -7.848028182983398
    9. ' lim' → logprob: -7.973028182983398
    10. '  ' → logprob: -7.973028182983398

Token 81: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.697139322757721
    2. ' ==' → logprob: -0.697139322757721
    3. ' else' → logprob: -6.322139263153076
    4. ' ' → logprob: -6.697139263153076
    5. ' <' → logprob: -8.447139739990234
    6. '0' → logprob: -8.447139739990234
    7. ' !=' → logprob: -9.572139739990234
    8. 'else' → logprob: -9.572139739990234
    9. '>' → logprob: -9.697139739990234
    10. '=' → logprob: -9.822139739990234

Token 82: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6944094300270081
    2. ' ' → logprob: -0.6944094300270081
    3. '1' → logprob: -6.694409370422363
    4. '  ' → logprob: -12.194409370422363
    5. '<|end|>' → logprob: -12.194409370422363
    6. 'k' → logprob: -12.319409370422363
    7. '2' → logprob: -13.006909370422363
    8. '   ' → logprob: -13.194409370422363
    9. ' k' → logprob: -13.819409370422363
    10. ' ' → logprob: -14.319409370422363

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00533443596214056
    2. ' ' → logprob: -5.255334377288818
    3. '1' → logprob: -9.255334854125977
    4. '  ' → logprob: -13.630334854125977
    5. '   ' → logprob: -14.130334854125977
    6. '<|end|>' → logprob: -14.130334854125977
    7. '2' → logprob: -14.255334854125977
    8. 'k' → logprob: -15.317834854125977
    9. '-' → logprob: -15.505334854125977
    10. '<|end|>' → logprob: -15.755334854125977

Token 84: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.01949656754732132
    2. 'else' → logprob: -4.019496440887451
    3. '   ' → logprob: -7.519496440887451
    4. '    ' → logprob: -7.894496440887451
    5. ' ' → logprob: -8.01949691772461
    6. '  ' → logprob: -10.26949691772461
    7. ')' → logprob: -10.51949691772461
    8. ' )' → logprob: -11.51949691772461
    9. '        ' → logprob: -12.26949691772461
    10. ' and' → logprob: -12.51949691772461

Token 85: '
' (ID: 198)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10868377238512039
    2. '(' → logprob: -3.1086838245391846
    3. '(lambda' → logprob: -3.2336838245391846
    4. '   ' → logprob: -5.4836835861206055
    5. '[' → logprob: -5.9836835861206055
    6. '(
' → logprob: -6.1086835861206055
    7. '(chain' → logprob: -6.1086835861206055
    8. ' [' → logprob: -6.3586835861206055
    9. ' (
' → logprob: -6.7336835861206055
    10. '    ' → logprob: -7.6086835861206055

Token 86: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.18051083385944366
    2. '(lambda' → logprob: -2.6805107593536377
    3. '   ' → logprob: -3.1805107593536377
    4. '(' → logprob: -3.9305107593536377
    5. '       ' → logprob: -4.180510997772217
    6. '(
' → logprob: -5.430510997772217
    7. '    ' → logprob: -6.180510997772217
    8. ' (
' → logprob: -6.430510997772217
    9. '(chain' → logprob: -6.680510997772217
    10. ' ' → logprob: -6.680510997772217

Token 87: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9629979729652405
    2. '(lambda' → logprob: -1.5879979133605957
    3. '(' (adapté à ' (') → logprob: -1.7129979133605957
    4. '(k' → logprob: -2.7129979133605957
    5. '(
' → logprob: -3.0879979133605957
    6. '   ' → logprob: -3.4629979133605957
    7. '[' → logprob: -4.087997913360596
    8. '((' → logprob: -4.837997913360596
    9. 'print' → logprob: -4.962997913360596
    10. '[]' → logprob: -5.087997913360596

Token 88: 'lambda' (ID: 35280)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.767763078212738
    2. ' (' → logprob: -1.5177631378173828
    3. '(k' → logprob: -2.392763137817383
    4. 'lambda' → logprob: -3.017763137817383
    5. 'k' → logprob: -3.267763137817383
    6. ' lambda' → logprob: -3.767763137817383
    7. '   ' → logprob: -3.767763137817383
    8. ' k' → logprob: -3.892763137817383
    9. '(' → logprob: -4.517763137817383
    10. '(m' → logprob: -4.767763137817383

Token 89: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011570100672543049
    2. ' k' → logprob: -5.261569976806641
    3. ' :' → logprob: -6.011569976806641
    4. 'k' → logprob: -7.011569976806641
    5. ':
' → logprob: -7.136569976806641
    6. ' m' → logprob: -7.636569976806641
    7. ' ' → logprob: -7.886569976806641
    8. ':k' → logprob: -8.13656997680664
    9. 'm' → logprob: -9.01156997680664
    10. '   ' → logprob: -9.26156997680664

Token 90: ' print' (ID: 2123)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0148011445999146
    2. 'print' → logprob: -1.2648011445999146
    3. ' print' → logprob: -2.639801025390625
    4. '[' → logprob: -2.639801025390625
    5. '(lambda' → logprob: -3.014801025390625
    6. '(' → logprob: -3.389801025390625
    7. ' [' → logprob: -4.014801025390625
    8. '(k' → logprob: -4.014801025390625
    9. '(
' → logprob: -4.264801025390625
    10. '(print' → logprob: -4.514801025390625

Token 91: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2780649662017822
    2. '(' → logprob: -2.5280649662017822
    3. '(-' → logprob: -2.6530649662017822
    4. '(*' → logprob: -2.6530649662017822
    5. '((' → logprob: -5.153064727783203
    6. '(k' → logprob: -5.528064727783203
    7. '(f' → logprob: -5.903064727783203
    8. '(
' → logprob: -6.028064727783203
    9. '("' → logprob: -6.528064727783203
    10. '(l' → logprob: -6.778064727783203

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45098069310188293
    2. '-' → logprob: -1.2009806632995605
    3. '1' → logprob: -3.4509806632995605
    4. ''' → logprob: -4.5759806632995605
    5. '2' → logprob: -4.9509806632995605
    6. '')' → logprob: -4.9509806632995605
    7. ''.' → logprob: -6.9509806632995605
    8. '(' → logprob: -6.9509806632995605
    9. '{}' → logprob: -7.5759806632995605
    10. ' ' → logprob: -7.7009806632995605

Token 93: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07324372977018356
    2. '0' → logprob: -2.8232436180114746
    3. '1' → logprob: -4.573243618011475
    4. ' ')' → logprob: -8.448244094848633
    5. '')' → logprob: -8.573244094848633
    6. ' ',' → logprob: -9.573244094848633
    7. '',' → logprob: -10.135744094848633
    8. ''),' → logprob: -10.198244094848633
    9. ',' → logprob: -10.260744094848633
    10. ' '' → logprob: -10.260744094848633

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018743176013231277
    2. '1' → logprob: -4.26874303817749
    3. ' ' → logprob: -5.89374303817749
    4. ''' → logprob: -7.51874303817749
    5. '')' → logprob: -7.64374303817749
    6. '(' → logprob: -9.393743515014648
    7. ' ')' → logprob: -9.518743515014648
    8. 'k' → logprob: -9.643743515014648
    9. '```' → logprob: -9.893743515014648
    10. '-' → logprob: -9.956243515014648

Token 95: ' ' (ID: 220)
  Prédit: ''),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.908515989780426
    2. ' ' → logprob: -1.1585159301757812
    3. '0' → logprob: -2.4085159301757812
    4. '',' → logprob: -2.7835159301757812
    5. ' '' → logprob: -2.9085159301757812
    6. ''' → logprob: -3.7835159301757812
    7. ',' → logprob: -3.9085159301757812
    8. '')' → logprob: -4.283515930175781
    9. ' ',' → logprob: -4.908515930175781
    10. '');' → logprob: -6.658515930175781

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.974104642868042
    2. '0' → logprob: -1.224104642868042
    3. ' ' → logprob: -1.474104642868042
    4. '',' → logprob: -3.224104642868042
    5. ''' → logprob: -3.599104642868042
    6. ''),' → logprob: -4.224104881286621
    7. ' ',' → logprob: -5.224104881286621
    8. ' '' → logprob: -5.724104881286621
    9. '')' → logprob: -5.849104881286621
    10. '...' → logprob: -6.224104881286621

Token 97: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014192769303917885
    2. '0' → logprob: -4.389192581176758
    3. '')' → logprob: -7.014192581176758
    4. '1' → logprob: -8.389192581176758
    5. ' ')' → logprob: -8.639192581176758
    6. ''),' → logprob: -9.514192581176758
    7. ''' → logprob: -9.576692581176758
    8. '2' → logprob: -9.701692581176758
    9. ' '' → logprob: -9.826692581176758
    10. '  ' → logprob: -10.826692581176758

Token 98: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19721604883670807
    2. ' ' → logprob: -2.197216033935547
    3. '1' → logprob: -2.697216033935547
    4. '2' → logprob: -8.322216033935547
    5. '')' → logprob: -9.634716033935547
    6. '3' → logprob: -10.134716033935547
    7. ' ')' → logprob: -10.197216033935547
    8. '7' → logprob: -11.009716033935547
    9. ''),' → logprob: -11.884716033935547
    10. '```' → logprob: -11.947216033935547

Token 99: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.69452965259552
    2. ' ' → logprob: -0.81952965259552
    3. ' '' → logprob: -4.1945295333862305
    4. '0' → logprob: -4.3195295333862305
    5. ''' → logprob: -4.6945295333862305
    6. '')' → logprob: -4.8195295333862305
    7. '',' → logprob: -5.0695295333862305
    8. '1' → logprob: -6.5695295333862305
    9. ' ',' → logprob: -6.5695295333862305
    10. '   ' → logprob: -7.0695295333862305

Token 100: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.089198999106884
    2. 'lambda' → logprob: -2.4641990661621094
    3. '(lambda' → logprob: -8.33919906616211
    4. '_lambda' → logprob: -11.46419906616211
    5. ' lamb' → logprob: -12.83919906616211
    6. ' ' → logprob: -13.08919906616211
    7. '=lambda' → logprob: -13.33919906616211
    8. '    ' → logprob: -13.71419906616211
    9. ' (' → logprob: -14.08919906616211
    10. ' _' → logprob: -15.33919906616211

Token 101: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.941850526549388e-06
    2. ' :' → logprob: -12.375007629394531
    3. '=lambda' → logprob: -13.625007629394531
    4. '=' → logprob: -13.875007629394531
    5. '():' → logprob: -14.500007629394531
    6. ':_' → logprob: -15.250007629394531
    7. ':
' → logprob: -15.375007629394531
    8. 'lambda' → logprob: -16.25000762939453
    9. ' lambda' → logprob: -16.75000762939453
    10. ':return' → logprob: -16.75000762939453

Token 102: ' _' (ID: 1175)
  Prédit: '_err'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_err' → logprob: -0.35776737332344055
    2. ' _' → logprob: -2.232767343521118
    3. 'print' → logprob: -2.482767343521118
    4. '(lambda' → logprob: -3.607767343521118
    5. 'lambda' → logprob: -3.732767343521118
    6. ' lambda' → logprob: -3.982767343521118
    7. ' ' → logprob: -4.857767581939697
    8. ' print' → logprob: -4.982767581939697
    9. '_lambda' → logprob: -5.857767581939697
    10. ' (' → logprob: -5.982767581939697

Token 103: 'err' (ID: 837)
  Prédit: 'err'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'err' → logprob: -6.897412822581828e-05
    2. '_err' → logprob: -9.750068664550781
    3. '(err' → logprob: -12.625068664550781
    4. ' err' → logprob: -13.375068664550781
    5. '.err' → logprob: -14.125068664550781
    6. '	err' → logprob: -14.375068664550781
    7. 'er' → logprob: -14.500068664550781
    8. '
' → logprob: -14.625068664550781
    9. 'def' → logprob: -15.000068664550781
    10. 'k' → logprob: -15.250068664550781

Token 104: '())[' (ID: 166443)
  Prédit: '())['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())[' → logprob: -0.48985135555267334
    2. '()[' → logprob: -1.2398513555526733
    3. ')[' → logprob: -2.364851474761963
    4. '[k' → logprob: -5.989851474761963
    5. '[' → logprob: -7.364851474761963
    6. '()' → logprob: -8.489850997924805
    7. '")[' → logprob: -8.989850997924805
    8. ')' → logprob: -9.114850997924805
    9. ' )[' → logprob: -9.739850997924805
    10. '))[' → logprob: -9.864850997924805

Token 105: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08478986471891403
    2. 'm' → logprob: -2.709789752960205
    3. '(k' → logprob: -5.209789752960205
    4. 'not' → logprob: -5.709789752960205
    5. ' k' → logprob: -5.834789752960205
    6. '(m' → logprob: -6.709789752960205
    7. ' m' → logprob: -7.334789752960205
    8. ' not' → logprob: -8.209790229797363
    9. 'False' → logprob: -8.584790229797363
    10. '(not' → logprob: -9.209790229797363

Token 106: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.172479271888733
    2. '>=' → logprob: -1.297479271888733
    3. ' >' → logprob: -1.797479271888733
    4. ' >=' → logprob: -1.922479271888733
    5. '!=' → logprob: -2.6724791526794434
    6. ' !=' → logprob: -3.7974791526794434
    7. '==' → logprob: -4.797479152679443
    8. ' ==' → logprob: -6.172479152679443
    9. ' not' → logprob: -6.422479152679443
    10. '>>' → logprob: -7.172479152679443

Token 107: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19741851091384888
    2. ' ' → logprob: -2.697418451309204
    3. 'lim' → logprob: -2.947418451309204
    4. '1' → logprob: -3.447418451309204
    5. '(' → logprob: -3.947418451309204
    6. ' lim' → logprob: -5.947418689727783
    7. ' (' → logprob: -6.197418689727783
    8. '((' → logprob: -7.072418689727783
    9. '   ' → logprob: -7.509918689727783
    10. '(l' → logprob: -7.822418689727783

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31200456619262695
    2. '1' → logprob: -1.937004566192627
    3. '(' → logprob: -2.437004566192627
    4. 'lim' → logprob: -4.062004566192627
    5. '3' → logprob: -4.937004566192627
    6. '((' → logprob: -5.187004566192627
    7. '2' → logprob: -5.812004566192627
    8. ' ' → logprob: -6.437004566192627
    9. '(l' → logprob: -7.312004566192627
    10. '   ' → logprob: -8.312004089355469

Token 109: '](' (ID: 20614)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6606566905975342
    2. ']()' → logprob: -0.7856566905975342
    3. '])' → logprob: -4.035656929016113
    4. '()]' → logprob: -5.535656929016113
    5. ']()
' → logprob: -5.660656929016113
    6. ' ]' → logprob: -6.785656929016113
    7. '](' → logprob: -7.285656929016113
    8. '   ' → logprob: -9.160656929016113
    9. ')]' → logprob: -9.285656929016113
    10. ']))' → logprob: -9.285656929016113

Token 110: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027176181320101023
    2. '))' → logprob: -6.5027174949646
    3. ')
' → logprob: -7.8777174949646
    4. '   ' → logprob: -8.002717971801758
    5. '
' → logprob: -8.752717971801758
    6. 'else' → logprob: -9.502717971801758
    7. ' ' → logprob: -9.627717971801758
    8. ' )' → logprob: -9.877717971801758
    9. 'if' → logprob: -10.627717971801758
    10. '

' → logprob: -10.877717971801758

Token 111: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7547115683555603
    2. 'if' → logprob: -1.629711627960205
    3. ')' → logprob: -2.254711627960205
    4. ' if' → logprob: -2.379711627960205
    5. 'else' → logprob: -2.379711627960205
    6. '()' → logprob: -3.879711627960205
    7. ' else' → logprob: -4.504711627960205
    8. '       ' → logprob: -4.754711627960205
    9. ' ' → logprob: -6.879711627960205
    10. 'elif' → logprob: -7.504711627960205

Token 112: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1426849663257599
    2. ' m' → logprob: -2.0176849365234375
    3. ' ' → logprob: -12.267684936523438
    4. '   ' → logprob: -13.392684936523438
    5. 'not' → logprob: -14.267684936523438
    6. '1' → logprob: -14.767684936523438
    7. '  ' → logprob: -14.892684936523438
    8. '(m' → logprob: -15.017684936523438
    9. ' ' → logprob: -15.017684936523438
    10. ' not' → logprob: -15.142684936523438

Token 113: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1427302360534668
    2. '==' → logprob: -2.017730236053467
    3. ' ' → logprob: -10.267730712890625
    4. '==
' → logprob: -12.392730712890625
    5. ' !=' → logprob: -12.767730712890625
    6. '=' → logprob: -12.892730712890625
    7. '<|end|>' → logprob: -13.142730712890625
    8. ' ' → logprob: -13.267730712890625
    9. ' ==
' → logprob: -13.517730712890625
    10. '<|end|>' → logprob: -14.392730712890625

Token 114: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.055185332894325256
    2. ' ' → logprob: -2.930185317993164
    3. '2' → logprob: -8.180185317993164
    4. '0' → logprob: -11.305185317993164
    5. '   ' → logprob: -12.430185317993164
    6. '  ' → logprob: -12.680185317993164
    7. '    ' → logprob: -14.492685317993164
    8. '
' → logprob: -14.555185317993164
    9. '3' → logprob: -14.992685317993164
    10. '[' → logprob: -14.992685317993164

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008173631504178047
    2. '2' → logprob: -4.88317346572876
    3. ' ' → logprob: -7.50817346572876
    4. '   ' → logprob: -11.758173942565918
    5. '0' → logprob: -13.070673942565918
    6. '  ' → logprob: -13.195673942565918
    7. '3' → logprob: -14.195673942565918
    8. '
' → logprob: -14.383173942565918
    9. '```' → logprob: -14.445673942565918
    10. '11' → logprob: -14.633173942565918

Token 116: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16222284734249115
    2. 'else' → logprob: -1.9122228622436523
    3. '   ' → logprob: -6.537222862243652
    4. '       ' → logprob: -8.037222862243652
    5. ')' → logprob: -8.537222862243652
    6. '    ' → logprob: -11.662222862243652
    7. '	else' → logprob: -12.037222862243652
    8. ' ' → logprob: -12.037222862243652
    9. '     ' → logprob: -13.162222862243652
    10. '  ' → logprob: -13.287222862243652

Token 117: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35245412588119507
    2. ' (' → logprob: -2.22745418548584
    3. ' (
' → logprob: -3.22745418548584
    4. '(' → logprob: -3.47745418548584
    5. ' None' → logprob: -3.47745418548584
    6. '[
' → logprob: -4.10245418548584
    7. '(
' → logprob: -4.22745418548584
    8. ' lambda' → logprob: -4.47745418548584
    9. '[' → logprob: -4.60245418548584
    10. '(lambda' → logprob: -4.85245418548584

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04288420081138611
    2. '(' → logprob: -4.667884349822998
    3. ' (' → logprob: -4.792884349822998
    4. '   ' → logprob: -4.917884349822998
    5. '[
' → logprob: -5.417884349822998
    6. '(
' → logprob: -5.792884349822998
    7. '[' → logprob: -6.292884349822998
    8. ' (
' → logprob: -7.042884349822998
    9. '...' → logprob: -7.042884349822998
    10. '    ' → logprob: -7.167884349822998

Token 119: ' (' (ID: 350)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.7718513607978821
    2. '(lambda' → logprob: -1.6468513011932373
    3. ' (' → logprob: -2.2718513011932373
    4. '(' (adapté à ' (') → logprob: -2.5218513011932373
    5. '[
' → logprob: -2.8968513011932373
    6. ' (
' → logprob: -3.1468513011932373
    7. ' lambda' → logprob: -4.021851539611816
    8. '[' → logprob: -4.146851539611816
    9. 'lambda' → logprob: -4.271851539611816
    10. ' None' → logprob: -5.896851539611816

Token 120: 'lambda' (ID: 35280)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.4274025559425354
    2. 'lambda' → logprob: -1.3024024963378906
    3. '(
' → logprob: -3.6774024963378906
    4. '(' → logprob: -4.302402496337891
    5. ' (' → logprob: -4.802402496337891
    6. '   ' → logprob: -5.052402496337891
    7. ' lambda' → logprob: -5.552402496337891
    8. 'def' → logprob: -5.802402496337891
    9. 'k' → logprob: -5.802402496337891
    10. '[' → logprob: -6.052402496337891

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015669959830120206
    2. ':
' → logprob: -6.7515668869018555
    3. ' :' → logprob: -8.001566886901855
    4. '():' → logprob: -10.501566886901855
    5. '=' → logprob: -12.001566886901855
    6. ':

' → logprob: -12.126566886901855
    7. ' ' → logprob: -12.751566886901855
    8. '(' → logprob: -13.001566886901855
    9. ':void' → logprob: -13.501566886901855
    10. '()' → logprob: -13.626566886901855

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6966198682785034
    2. ' (' → logprob: -2.196619987487793
    3. ' [
' → logprob: -2.821619987487793
    4. '[
' → logprob: -3.071619987487793
    5. ' (
' → logprob: -3.446619987487793
    6. ' chain' → logprob: -3.446619987487793
    7. ' [' → logprob: -3.571619987487793
    8. ' k' → logprob: -3.696619987487793
    9. '        ' → logprob: -3.696619987487793
    10. '[' → logprob: -3.821619987487793

Token 123: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9993455410003662
    2. '(lambda' → logprob: -2.374345541000366
    3. '(
' → logprob: -2.624345541000366
    4. 'k' → logprob: -2.624345541000366
    5. 'res' → logprob: -2.624345541000366
    6. '[' → logprob: -2.749345541000366
    7. 'arr' → logprob: -3.124345541000366
    8. ' res' → logprob: -3.249345541000366
    9. 'ans' → logprob: -3.249345541000366
    10. 'n' → logprob: -3.499345541000366

Token 124: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.7810220122337341
    2. '(lambda' → logprob: -1.156022071838379
    3. 'k' → logprob: -2.156022071838379
    4. ' lambda' → logprob: -3.906022071838379
    5. '   ' → logprob: -4.406022071838379
    6. 'def' → logprob: -4.406022071838379
    7. ' k' → logprob: -5.281022071838379
    8. '(k' → logprob: -5.406022071838379
    9. '[' → logprob: -5.406022071838379
    10. ' (' → logprob: -5.656022071838379

Token 125: ' arr' (ID: 1724)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0072158994153141975
    2. '():' → logprob: -5.882215976715088
    3. ' :' → logprob: -6.507215976715088
    4. ':
' → logprob: -7.382215976715088
    5. '()' → logprob: -7.507215976715088
    6. '<|end|>' → logprob: -8.50721549987793
    7. '(' → logprob: -8.75721549987793
    8. ' ' → logprob: -8.94471549987793
    9. '():
' → logprob: -9.25721549987793
    10. '        ' → logprob: -9.31971549987793

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07009749859571457
    2. ',' → logprob: -3.4450974464416504
    3. '=' → logprob: -3.9450974464416504
    4. '=[]' → logprob: -4.94509744644165
    5. ' :' → logprob: -5.07009744644165
    6. '=lambda' → logprob: -7.19509744644165
    7. '=None' → logprob: -7.69509744644165
    8. '=[],' → logprob: -8.320097923278809
    9. ':
' → logprob: -8.445097923278809
    10. ' =' → logprob: -8.945097923278809

Token 127: '               ' (ID: 506)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.69769686460495
    2. 'arr' → logprob: -1.8226969242095947
    3. ' list' → logprob: -2.6976969242095947
    4. '               ' → logprob: -2.8226969242095947
    5. ' chain' → logprob: -2.9476969242095947
    6. ' reduce' → logprob: -3.3226969242095947
    7. 'list' → logprob: -3.5726969242095947
    8. 'reduce' → logprob: -3.8226969242095947
    9. ' lambda' → logprob: -4.572696685791016
    10. '            ' → logprob: -4.697696685791016

Token 128: ' print' (ID: 2123)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6560193300247192
    2. '                   ' → logprob: -2.1560192108154297
    3. ' arr' → logprob: -2.4060192108154297
    4. 'reduce' → logprob: -2.9060192108154297
    5. '               ' → logprob: -3.2810192108154297
    6. ' reduce' → logprob: -3.7810192108154297
    7. '                ' → logprob: -3.9060192108154297
    8. ' chain' → logprob: -3.9060192108154297
    9. '(lambda' → logprob: -4.15601921081543
    10. '[' → logprob: -4.28101921081543

Token 129: '('' (ID: 706)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.21196530759334564
    2. '('' → logprob: -2.086965322494507
    3. '(' → logprob: -2.711965322494507
    4. '(*(' → logprob: -8.086965560913086
    5. '(
' → logprob: -9.086965560913086
    6. '("' → logprob: -9.586965560913086
    7. '(len' → logprob: -11.086965560913086
    8. '((' → logprob: -11.336965560913086
    9. '()' → logprob: -12.211965560913086
    10. '(

' → logprob: -12.336965560913086

Token 130: ' '.' (ID: 12662)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6191149950027466
    2. ''' → logprob: -0.8691149950027466
    3. ' *' → logprob: -3.494114875793457
    4. 'len' → logprob: -5.494114875793457
    5. ' '' → logprob: -5.619114875793457
    6. ')' → logprob: -7.244114875793457
    7. 'arr' → logprob: -7.369114875793457
    8. '(*' → logprob: -7.494114875793457
    9. '*(' → logprob: -7.994114875793457
    10. '"' → logprob: -8.119114875793457

Token 131: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.000261216628132388
    2. ''' → logprob: -8.875261306762695
    3. 'len' → logprob: -10.125261306762695
    4. 'chain' → logprob: -10.625261306762695
    5. ')' → logprob: -10.875261306762695
    6. ' join' → logprob: -11.125261306762695
    7. 'arr' → logprob: -11.500261306762695
    8. '*' → logprob: -13.250261306762695
    9. 'print' → logprob: -13.250261306762695
    10. ' ' → logprob: -13.375261306762695

Token 132: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0032699264120310545
    2. '(str' → logprob: -5.753270149230957
    3. '(' → logprob: -9.753270149230957
    4. 'map' → logprob: -10.628270149230957
    5. '(arr' → logprob: -12.128270149230957
    6. ')' → logprob: -13.503270149230957
    7. '('' → logprob: -14.128270149230957
    8. '(m' → logprob: -14.753270149230957
    9. '(
' → logprob: -14.753270149230957
    10. 'str' → logprob: -14.878270149230957

Token 133: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.001875086221843958
    2. 'str' → logprob: -6.376874923706055
    3. '(' → logprob: -8.751874923706055
    4. '(
' → logprob: -12.126874923706055
    5. ')' → logprob: -12.251874923706055
    6. '[str' → logprob: -13.501874923706055
    7. '=str' → logprob: -13.876874923706055
    8. ' str' → logprob: -14.376874923706055
    9. '(

' → logprob: -15.001874923706055
    10. '```' → logprob: -15.251874923706055

Token 134: ',' (ID: 11)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.37205398082733154
    2. ',' → logprob: -1.7470539808273315
    3. 'arr' → logprob: -2.372054100036621
    4. '[arr' → logprob: -3.372054100036621
    5. '<arr' → logprob: -5.622054100036621
    6. '<|end|>' → logprob: -5.997054100036621
    7. '(chain' → logprob: -7.372054100036621
    8. '	arr' → logprob: -7.497054100036621
    9. '(' → logprob: -8.122054100036621
    10. '$arr' → logprob: -8.372054100036621

Token 135: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.18742412328720093
    2. ' arr' → logprob: -1.8124241828918457
    3. 'chain' → logprob: -5.312424182891846
    4. ' chain' → logprob: -6.312424182891846
    5. '(arr' → logprob: -8.187423706054688
    6. '[arr' → logprob: -8.562423706054688
    7. '[' → logprob: -8.812423706054688
    8. '
' → logprob: -9.562423706054688
    9. ' [' → logprob: -10.437423706054688
    10. '(chain' → logprob: -10.687423706054688

Token 136: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.2119450718164444
    2. '))' → logprob: -2.461945056915283
    3. '))))' → logprob: -2.461945056915283
    4. ')))
' → logprob: -5.086945056915283
    5. ' ' → logprob: -5.211945056915283
    6. '())))' → logprob: -6.336945056915283
    7. '()))' → logprob: -6.586945056915283
    8. ' ))' → logprob: -6.961945056915283
    9. '()' → logprob: -7.086945056915283
    10. '))))
' → logprob: -7.586945056915283

Token 137: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5114107131958008
    2. '+' → logprob: -1.8864107131958008
    3. ' +' → logprob: -2.011410713195801
    4. ')' → logprob: -2.636410713195801
    5. '                ' → logprob: -4.136410713195801
    6. '           ' → logprob: -5.011410713195801
    7. '                   ' → logprob: -5.636410713195801
    8. ' +
' → logprob: -5.636410713195801
    9. '[' → logprob: -6.386410713195801
    10. '<|end|>' → logprob: -6.511410713195801

Token 138: ' )' (ID: 1546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.169870138168335
    2. ')(' → logprob: -1.294870138168335
    3. '       ' → logprob: -1.544870138168335
    4. ')(
' → logprob: -2.294870138168335
    5. '               ' → logprob: -3.419870138168335
    6. ')' (adapté à ' )') → logprob: -3.669870138168335
    7. '(' → logprob: -4.669870376586914
    8. '(re' → logprob: -5.169870376586914
    9. ')((' → logprob: -5.169870376586914
    10. '(chain' → logprob: -5.544870376586914

Token 139: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18435810506343842
    2. '(chain' → logprob: -2.1843581199645996
    3. '(next' → logprob: -4.0593581199646
    4. '(
' → logprob: -4.3093581199646
    5. '(lambda' → logprob: -5.1843581199646
    6. ')' → logprob: -5.1843581199646
    7. '([' → logprob: -6.0593581199646
    8. '((' → logprob: -6.1843581199646
    9. '[' → logprob: -6.4343581199646
    10. '(list' → logprob: -6.6843581199646

Token 140: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0577443838119507
    2. 'list' → logprob: -1.9327443838119507
    3. ' chain' → logprob: -2.0577445030212402
    4. 'chain' → logprob: -2.1827445030212402
    5. ' list' → logprob: -2.4327445030212402
    6. '                   ' → logprob: -2.6827445030212402
    7. 'reduce' → logprob: -3.4327445030212402
    8. '[' → logprob: -3.6827445030212402
    9. ' [' → logprob: -4.43274450302124
    10. ' reduce' → logprob: -4.68274450302124

Token 141: ' reduce' (ID: 10389)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4697902202606201
    2. 'chain' → logprob: -1.7197902202606201
    3. 'reduce' (adapté à ' reduce') → logprob: -2.21979022026062
    4. '[' → logprob: -3.46979022026062
    5. '(chain' → logprob: -4.594790458679199
    6. 'tuple' → logprob: -4.969790458679199
    7. '(' → logprob: -5.094790458679199
    8. '[i' → logprob: -5.344790458679199
    9. '(lambda' → logprob: -5.594790458679199
    10. '[
' → logprob: -5.844790458679199

Token 142: '(
' (ID: 1607)
  Prédit: '(
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.9028729796409607
    2. '(' → logprob: -1.1528730392456055
    3. '(lambda' → logprob: -1.2778730392456055
    4. '(

' → logprob: -9.402873039245605
    5. '(chain' → logprob: -9.402873039245605
    6. '((' → logprob: -11.027873039245605
    7. '(
' → logprob: -11.152873039245605
    8. '   ' → logprob: -11.402873039245605
    9. '(operator' → logprob: -11.902873039245605
    10. 'lambda' → logprob: -12.027873039245605

Token 143: '                   ' (ID: 699)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.33599743247032166
    2. '(lambda' → logprob: -1.835997462272644
    3. '                   ' → logprob: -2.5859973430633545
    4. '               ' → logprob: -3.0859973430633545
    5. 'chain' → logprob: -5.835997581481934
    6. ' lambda' → logprob: -6.710997581481934
    7. '   ' → logprob: -8.710997581481934
    8. '                       ' → logprob: -9.335997581481934
    9. 'operator' → logprob: -9.335997581481934
    10. '=lambda' → logprob: -9.335997581481934

Token 144: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.03594203293323517
    2. '(lambda' → logprob: -3.7859420776367188
    3. 'chain' → logprob: -4.660942077636719
    4. '   ' → logprob: -6.160942077636719
    5. ' lambda' → logprob: -7.285942077636719
    6. '           ' → logprob: -9.035942077636719
    7. '       ' → logprob: -9.660942077636719
    8. '                   ' → logprob: -9.910942077636719
    9. '               ' → logprob: -10.410942077636719
    10. 'list' → logprob: -10.660942077636719

Token 145: ' a' (ID: 261)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.09898525476455688
    2. ' arr' → logprob: -3.348985195159912
    3. 'lambda' → logprob: -3.473985195159912
    4. ' acc' → logprob: -4.098985195159912
    5. 'arr' → logprob: -5.473985195159912
    6. '(lambda' → logprob: -6.223985195159912
    7. ' a' → logprob: -6.473985195159912
    8. ' x' → logprob: -7.223985195159912
    9. ' chain' → logprob: -7.598985195159912
    10. '   ' → logprob: -7.723985195159912

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009120595059357584
    2. ',k' → logprob: -8.500911712646484
    3. ' ,' → logprob: -8.875911712646484
    4. ',
' → logprob: -9.125911712646484
    5. ',x' → logprob: -9.375911712646484
    6. ',a' → logprob: -9.375911712646484
    7. ',b' → logprob: -10.125911712646484
    8. ',[' → logprob: -10.500911712646484
    9. ',f' → logprob: -10.750911712646484
    10. ',l' → logprob: -10.875911712646484

Token 147: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.41466301679611206
    2. ' b' → logprob: -1.6646630764007568
    3. ' lambda' → logprob: -2.539663076400757
    4. 'lambda' → logprob: -3.164663076400757
    5. ' chain' → logprob: -4.414662837982178
    6. 'f' → logprob: -4.914662837982178
    7. 'chain' → logprob: -5.914662837982178
    8. ' f' → logprob: -6.039662837982178
    9. ' arr' → logprob: -6.664662837982178
    10. 'acc' → logprob: -6.664662837982178

Token 148: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001049838843755424
    2. ',' → logprob: -7.501049995422363
    3. ' :' → logprob: -7.876049995422363
    4. ':
' → logprob: -9.626049995422363
    5. ',:' → logprob: -11.376049995422363
    6. ':a' → logprob: -12.126049995422363
    7. ':[' → logprob: -12.126049995422363
    8. ':(' → logprob: -12.376049995422363
    9. 'a' → logprob: -12.876049995422363
    10. '   ' → logprob: -12.876049995422363

Token 149: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2139240801334381
    2. ' a' → logprob: -1.7139240503311157
    3. ' list' → logprob: -5.588923931121826
    4. 'list' → logprob: -5.713923931121826
    5. 'chain' → logprob: -6.088923931121826
    6. ' chain' → logprob: -6.338923931121826
    7. '[a' → logprob: -7.463923931121826
    8. ' [' → logprob: -8.588924407958984
    9. '   ' → logprob: -8.588924407958984
    10. '[' → logprob: -8.963924407958984

Token 150: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5794398784637451
    2. '+' → logprob: -0.8294398784637451
    3. '+b' → logprob: -6.329440116882324
    4. '+[' → logprob: -6.954440116882324
    5. '+a' → logprob: -7.954440116882324
    6. '+k' → logprob: -8.454440116882324
    7. '[:-' → logprob: -10.204440116882324
    8. '+d' → logprob: -10.704440116882324
    9. '+c' → logprob: -10.829440116882324
    10. '+x' → logprob: -10.954440116882324

Token 151: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03543509915471077
    2. ' b' → logprob: -3.660435199737549
    3. '[' → logprob: -5.285435199737549
    4. 'list' → logprob: -6.660435199737549
    5. '[b' → logprob: -6.660435199737549
    6. ' [' → logprob: -7.160435199737549
    7. ' list' → logprob: -8.41043472290039
    8. '['' → logprob: -9.28543472290039
    9. ''' → logprob: -9.91043472290039
    10. ''b' → logprob: -10.03543472290039

Token 152: ',
' (ID: 412)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.054614543914795
    2. ',' → logprob: -1.554614543914795
    3. '                   ' → logprob: -2.054614543914795
    4. ',
' → logprob: -2.179614543914795
    5. '               ' → logprob: -2.679614543914795
    6. ' if' → logprob: -2.679614543914795
    7. '+' → logprob: -3.304614543914795
    8. 'if' → logprob: -5.429614543914795
    9. ' +
' → logprob: -5.554614543914795
    10. '           ' → logprob: -5.679614543914795

Token 153: '                   ' (ID: 699)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3453149795532227
    2. '                   ' → logprob: -1.3453149795532227
    3. '[
' → logprob: -1.7203149795532227
    4. 'chain' → logprob: -2.4703149795532227
    5. 'repeat' → logprob: -2.9703149795532227
    6. '(chain' → logprob: -3.4703149795532227
    7. 'map' → logprob: -3.5953149795532227
    8. '(
' → logprob: -3.8453149795532227
    9. '               ' → logprob: -4.095314979553223
    10. '(re' → logprob: -4.345314979553223

Token 154: ' (
' (ID: 4112)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' (adapté à ' (
') → logprob: -1.2687302827835083
    2. '[
' → logprob: -1.3937302827835083
    3. 'map' → logprob: -2.0187301635742188
    4. '[' → logprob: -2.2687301635742188
    5. 'chain' → logprob: -2.6437301635742188
    6. '(chain' → logprob: -2.8937301635742188
    7. '(map' → logprob: -3.6437301635742188
    8. '(re' → logprob: -4.018730163574219
    9. '(' → logprob: -4.518730163574219
    10. 'repeat' → logprob: -4.643730163574219

Token 155: '                       ' (ID: 968)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.3535668849945068
    2. 'chain' → logprob: -1.4785668849945068
    3. '                   ' → logprob: -1.9785668849945068
    4. 'repeat' → logprob: -2.103566884994507
    5. '                       ' → logprob: -3.103566884994507
    6. '(
' → logprob: -3.103566884994507
    7. '(chain' → logprob: -3.228566884994507
    8. ' chain' → logprob: -3.603566884994507
    9. '(is' → logprob: -3.853566884994507
    10. '(' → logprob: -4.478567123413086

Token 156: ' [' (ID: 723)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.2411044836044312
    2. 'chain' → logprob: -1.2411044836044312
    3. '(
' → logprob: -2.1161046028137207
    4. 'repeat' → logprob: -2.3661046028137207
    5. '(chain' → logprob: -3.1161046028137207
    6. '(' → logprob: -3.3661046028137207
    7. '(is' → logprob: -3.8661046028137207
    8. '(re' → logprob: -4.241104602813721
    9. 'list' → logprob: -4.366104602813721
    10. '[' (adapté à ' [') → logprob: -4.366104602813721

Token 157: 'k' (ID: 74)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1295632123947144
    2. 'i' → logprob: -1.1295632123947144
    3. '(i' → logprob: -2.129563331604004
    4. '(' → logprob: -2.504563331604004
    5. 'x' → logprob: -2.629563331604004
    6. '*' → logprob: -4.504563331604004
    7. '1' → logprob: -4.629563331604004
    8. '(x' → logprob: -4.754563331604004
    9. 'arr' → logprob: -5.004563331604004
    10. 'k' → logprob: -5.379563331604004

Token 158: '],
' (ID: 2274)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5911163091659546
    2. ',' → logprob: -0.9661163091659546
    3. ']<<' → logprob: -4.466116428375244
    4. '<<' → logprob: -4.591116428375244
    5. ']*' → logprob: -4.841116428375244
    6. ' if' → logprob: -5.216116428375244
    7. ' ^' → logprob: -5.341116428375244
    8. ']+' → logprob: -5.341116428375244
    9. ',k' → logprob: -5.716116428375244
    10. '^' → logprob: -6.091116428375244

Token 159: '                       ' (ID: 968)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.09579336643219
    2. '[' → logprob: -1.97079336643219
    3. ' list' → logprob: -1.97079336643219
    4. 'list' → logprob: -2.2207932472229004
    5. '[k' → logprob: -3.0957932472229004
    6. 'repeat' → logprob: -3.0957932472229004
    7. '                       ' → logprob: -3.3457932472229004
    8. ' chain' → logprob: -4.0957932472229
    9. 'chain' → logprob: -4.2207932472229
    10. '                           ' → logprob: -4.2207932472229

Token 160: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.24591359496116638
    2. '[' → logprob: -2.745913505554199
    3. ' list' → logprob: -3.245913505554199
    4. ' [' → logprob: -4.120913505554199
    5. '[k' → logprob: -4.120913505554199
    6. 'chain' → logprob: -4.245913505554199
    7. 'is' → logprob: -4.245913505554199
    8. 'range' → logprob: -4.370913505554199
    9. '[a' → logprob: -5.120913505554199
    10. 'repeat' → logprob: -5.245913505554199

Token 161: '(is' (ID: 16171)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.9214522242546082
    2. '(is' → logprob: -1.171452283859253
    3. '(chain' → logprob: -1.296452283859253
    4. '(' → logprob: -4.796452045440674
    5. '(
' → logprob: -5.421452045440674
    6. '(map' → logprob: -6.046452045440674
    7. '(re' → logprob: -6.046452045440674
    8. '(filter' → logprob: -7.796452045440674
    9. '((' → logprob: -8.421452522277832
    10. '(i' → logprob: -8.796452522277832

Token 162: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.0008260641479864717
    2. 'slice' → logprob: -7.125825881958008
    3. '_slice' → logprob: -11.875825881958008
    4. 'chain' → logprob: -12.500825881958008
    5. '(slice' → logprob: -12.750825881958008
    6. 'repeat' → logprob: -12.875825881958008
    7. '(' → logprob: -13.625825881958008
    8. 'lices' → logprob: -14.750825881958008
    9. 'liced' → logprob: -14.750825881958008
    10. '```' → logprob: -14.750825881958008

Token 163: '((' (ID: 2054)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.5987066030502319
    2. '(re' → logprob: -0.8487066030502319
    3. '(' → logprob: -3.9737067222595215
    4. '(
' → logprob: -6.3487067222595215
    5. 'repeat' → logprob: -6.7237067222595215
    6. 'chain' → logprob: -8.598706245422363
    7. '(lambda' → logprob: -8.723706245422363
    8. '(k' → logprob: -9.098706245422363
    9. '(iter' → logprob: -9.848706245422363
    10. '(it' → logprob: -10.348706245422363

Token 164: 'i' (ID: 72)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.49554240703582764
    2. 'repeat' → logprob: -0.9955424070358276
    3. '(chain' → logprob: -4.870542526245117
    4. 'x' → logprob: -5.995542526245117
    5. '(' → logprob: -6.745542526245117
    6. 'lambda' → logprob: -6.870542526245117
    7. ' chain' → logprob: -6.870542526245117
    8. 'map' → logprob: -6.995542526245117
    9. 'i' → logprob: -6.995542526245117
    10. 'range' → logprob: -6.995542526245117

Token 165: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17330724000930786
    2. 'for' → logprob: -1.923307180404663
    3. 'repeat' → logprob: -5.173307418823242
    4. 'chain' → logprob: -5.673307418823242
    5. '(chain' → logprob: -6.923307418823242
    6. ' repeat' → logprob: -7.673307418823242
    7. '+' → logprob: -7.673307418823242
    8. ' chain' → logprob: -7.923307418823242
    9. '                           ' → logprob: -8.173307418823242
    10. ' +' → logprob: -8.923307418823242

Token 166: ' i' (ID: 575)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.37447819113731384
    2. ' chain' → logprob: -1.4994782209396362
    3. 'repeat' → logprob: -3.1244781017303467
    4. 'in' → logprob: -4.374478340148926
    5. ' in' → logprob: -4.749478340148926
    6. 'i' → logprob: -4.749478340148926
    7. 'range' → logprob: -4.874478340148926
    8. ' i' → logprob: -6.374478340148926
    9. ' repeat' → logprob: -6.499478340148926
    10. ' range' → logprob: -6.874478340148926

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4746760129928589
    2. 'in' → logprob: -0.9746760129928589
    3. ' ' → logprob: -8.474676132202148
    4. ')' → logprob: -9.849676132202148
    5. 'range' → logprob: -9.974676132202148
    6. 'n' → logprob: -10.537176132202148
    7. '<|end|>' → logprob: -10.724676132202148
    8. '  ' → logprob: -10.724676132202148
    9. 'from' → logprob: -10.912176132202148
    10. '
' → logprob: -11.037176132202148

Token 168: ' range' (ID: 3352)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.28424763679504395
    2. ' chain' → logprob: -2.409247636795044
    3. 'repeat' → logprob: -2.534247636795044
    4. 'range' → logprob: -2.784247636795044
    5. ' range' → logprob: -4.409247398376465
    6. 'count' → logprob: -6.659247398376465
    7. ' repeat' → logprob: -6.659247398376465
    8. '(chain' → logprob: -7.034247398376465
    9. ' ' → logprob: -9.159247398376465
    10. '
' → logprob: -9.159247398376465

Token 169: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0804625004529953
    2. '(k' → logprob: -3.2054624557495117
    3. '(' → logprob: -3.7054624557495117
    4. 'lim' → logprob: -5.580462455749512
    5. '                       ' → logprob: -6.580462455749512
    6. 'k' → logprob: -6.830462455749512
    7. '                           ' → logprob: -6.955462455749512
    8. ')' → logprob: -7.205462455749512
    9. '                            ' → logprob: -7.330462455749512
    10. '               ' → logprob: -7.705462455749512

Token 170: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.008431835100054741
    2. 'm' → logprob: -5.883431911468506
    3. 'k' → logprob: -6.383431911468506
    4. 'lim' → logprob: -6.633431911468506
    5. '1' → logprob: -7.883431911468506
    6. '   ' → logprob: -8.258431434631348
    7. '(' → logprob: -8.820931434631348
    8. '0' → logprob: -8.883431434631348
    9. ')' → logprob: -9.070931434631348
    10. 'imit' → logprob: -9.258431434631348

Token 171: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4306866228580475
    2. ')' → logprob: -1.805686593055725
    3. 'if' → logprob: -2.0556867122650146
    4. '),' → logprob: -3.3056867122650146
    5. ')),' → logprob: -4.6806864738464355
    6. '   ' → logprob: -5.3056864738464355
    7. ' ' → logprob: -6.4306864738464355
    8. '           ' → logprob: -6.9306864738464355
    9. '       ' → logprob: -7.0556864738464355
    10. '  ' → logprob: -7.6806864738464355

Token 172: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.49084964394569397
    2. 'if' → logprob: -0.9908496141433716
    3. '),' → logprob: -4.365849494934082
    4. '           ' → logprob: -7.115849494934082
    5. '   ' → logprob: -7.240849494934082
    6. '       ' → logprob: -7.490849494934082
    7. '                       ' → logprob: -8.365849494934082
    8. ' ),' → logprob: -8.490849494934082
    9. '               ' → logprob: -8.865849494934082
    10. 'for' → logprob: -8.990849494934082

Token 173: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4829421043395996
    2. ' i' → logprob: -0.9829421043395996
    3. '(i' → logprob: -5.3579421043396
    4. ' (' → logprob: -5.9829421043396
    5. '   ' → logprob: -7.8579421043396
    6. ' ' → logprob: -7.8579421043396
    7. ' not' → logprob: -9.232942581176758
    8. '  ' → logprob: -9.357942581176758
    9. 'not' → logprob: -9.545442581176758
    10. 'k' → logprob: -9.920442581176758

Token 174: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5271652340888977
    2. ' !=' → logprob: -0.9021652340888977
    3. '!=(' → logprob: -7.027165412902832
    4. 'and' → logprob: -7.652165412902832
    5. ' and' → logprob: -7.777165412902832
    6. '==' → logprob: -7.902165412902832
    7. ')' → logprob: -8.027165412902832
    8. ')!=' → logprob: -8.152165412902832
    9. '%' → logprob: -8.652165412902832
    10. '<=' → logprob: -9.027165412902832

Token 175: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3134734332561493
    2. ' k' → logprob: -1.3134734630584717
    3. '
' → logprob: -9.31347370147705
    4. ' ' → logprob: -10.68847370147705
    5. '0' → logprob: -10.93847370147705
    6. '	k' → logprob: -11.18847370147705
    7. '
' → logprob: -11.93847370147705
    8. ')' → logprob: -12.25097370147705
    9. '=k' → logprob: -12.31347370147705
    10. '   ' → logprob: -12.31347370147705

Token 176: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.005759911146014929
    2. ' ),' → logprob: -6.0057597160339355
    3. ' and' → logprob: -6.5057597160339355
    4. 'and' → logprob: -7.3807597160339355
    5. ' or' → logprob: -8.380760192871094
    6. ',' → logprob: -8.755760192871094
    7. ')' → logprob: -9.130760192871094
    8. '                       ' → logprob: -9.380760192871094
    9. ')),' → logprob: -9.505760192871094
    10. '           ' → logprob: -9.755760192871094

Token 177: ' ' (ID: 220)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.20148701965808868
    2. 'k' → logprob: -2.5764870643615723
    3. ' lim' → logprob: -2.5764870643615723
    4. ' k' → logprob: -4.951487064361572
    5. '2' → logprob: -5.451487064361572
    6. '(' → logprob: -5.576487064361572
    7. ' ' → logprob: -5.701487064361572
    8. 'm' → logprob: -6.201487064361572
    9. '1' → logprob: -6.576487064361572
    10. '0' → logprob: -6.951487064361572

Token 178: '0' (ID: 15)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.1319449543952942
    2. 'm' → logprob: -3.1319448947906494
    3. 'k' → logprob: -3.5069448947906494
    4. '2' → logprob: -4.0069451332092285
    5. 'None' → logprob: -4.8819451332092285
    6. '0' → logprob: -5.1319451332092285
    7. '1' → logprob: -5.2569451332092285
    8. '(' → logprob: -5.2569451332092285
    9. 'len' → logprob: -6.7569451332092285
    10. '4' → logprob: -7.1319451332092285

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04325391724705696
    2. ',k' → logprob: -3.9182538986206055
    3. ' ,' → logprob: -4.2932538986206055
    4. ',l' → logprob: -5.9182538986206055
    5. ',m' → logprob: -6.1682538986206055
    6. ',n' → logprob: -6.7932538986206055
    7. ',None' → logprob: -7.4182538986206055
    8. '               ' → logprob: -8.293253898620605
    9. ',len' → logprob: -8.293253898620605
    10. '           ' → logprob: -8.543253898620605

Token 180: ' k' (ID: 372)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.04004732891917229
    2. '(' → logprob: -4.1650471687316895
    3. ' lim' → logprob: -4.5400471687316895
    4. 'k' → logprob: -4.9150471687316895
    5. ' (' → logprob: -6.5400471687316895
    6. '(k' → logprob: -6.7900471687316895
    7. '1' → logprob: -7.9150471687316895
    8. '2' → logprob: -7.9150471687316895
    9. ' k' → logprob: -8.040047645568848
    10. '   ' → logprob: -8.415047645568848

Token 181: ')),
' (ID: 13846)
  Prédit: '),
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.5874087810516357
    2. '),' → logprob: -1.5874087810516357
    3. ')),
' → logprob: -1.9624087810516357
    4. ')),' → logprob: -3.0874087810516357
    5. '))' → logprob: -3.7124087810516357
    6. ')))' → logprob: -4.712409019470215
    7. ' ),
' → logprob: -5.337409019470215
    8. '                       ' → logprob: -5.712409019470215
    9. '                   ' → logprob: -5.962409019470215
    10. ')' → logprob: -6.337409019470215

Token 182: '                       ' (ID: 968)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7157147526741028
    2. ' list' → logprob: -1.215714693069458
    3. '                       ' → logprob: -2.340714693069458
    4. ' [' → logprob: -2.715714693069458
    5. '[' → logprob: -3.215714693069458
    6. '<|end|>' → logprob: -5.840714931488037
    7. ')' → logprob: -6.215714931488037
    8. 'repeat' → logprob: -6.715714931488037
    9. '                        ' → logprob: -7.090714931488037
    10. '[list' → logprob: -7.340714931488037

Token 183: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.36384305357933044
    2. '[k' → logprob: -1.4888430833816528
    3. '[' → logprob: -3.1138429641723633
    4. 'repeat' → logprob: -4.488842964172363
    5. '[list' → logprob: -4.988842964172363
    6. ' [' → logprob: -5.113842964172363
    7. ' list' → logprob: -5.238842964172363
    8. '[i' → logprob: -5.863842964172363
    9. '[(' → logprob: -6.988842964172363
    10. 'k' → logprob: -7.488842964172363

Token 184: '(is' (ID: 16171)
  Prédit: '(is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.005822025705128908
    2. '(re' → logprob: -5.75582218170166
    3. 'is' → logprob: -6.88082218170166
    4. '(range' → logprob: -7.00582218170166
    5. '(' → logprob: -8.50582218170166
    6. '(chain' → logprob: -8.75582218170166
    7. 'repeat' → logprob: -9.13082218170166
    8. '((' → logprob: -9.13082218170166
    9. '(i' → logprob: -10.63082218170166
    10. 'chain' → logprob: -10.88082218170166

Token 185: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.0803895816206932
    2. 'ice' → logprob: -2.8303894996643066
    3. 'slice' → logprob: -4.205389499664307
    4. 'ce' → logprob: -6.330389499664307
    5. 'ise' → logprob: -7.705389499664307
    6. '(slice' → logprob: -7.830389499664307
    7. 'ize' → logprob: -8.580389976501465
    8. 'is' → logprob: -8.830389976501465
    9. 'lace' → logprob: -9.830389976501465
    10. 'ince' → logprob: -10.080389976501465

Token 186: '(re' (ID: 8178)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.01990555040538311
    2. '(re' → logprob: -4.2699055671691895
    3. '(i' → logprob: -6.2699055671691895
    4. '(lambda' → logprob: -6.2699055671691895
    5. '(' → logprob: -8.019905090332031
    6. '(is' → logprob: -8.019905090332031
    7. '(chain' → logprob: -8.019905090332031
    8. 'repeat' → logprob: -8.644905090332031
    9. ' (' → logprob: -8.769905090332031
    10. '(iter' → logprob: -8.894905090332031

Token 187: 'versed' (ID: 76479)
  Prédit: 'peat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'peat' → logprob: -5.319370302458992e-06
    2. 'pe' → logprob: -12.500005722045898
    3. 'p' → logprob: -14.375005722045898
    4. 'PEAT' → logprob: -14.750005722045898
    5. '(' → logprob: -15.125005722045898
    6. 'repeat' → logprob: -16.2500057220459
    7. '(p' → logprob: -17.1250057220459
    8. 'peated' → logprob: -17.1250057220459
    9. '(re' → logprob: -17.2500057220459
    10. 'peating' → logprob: -17.5000057220459

Token 188: '([' (ID: 5194)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.5106534361839294
    2. '((' → logprob: -1.2606534957885742
    3. '([' → logprob: -2.635653495788574
    4. '(list' → logprob: -3.385653495788574
    5. '(tuple' → logprob: -5.760653495788574
    6. ' (' → logprob: -5.760653495788574
    7. '(' → logprob: -6.135653495788574
    8. '([(' → logprob: -7.385653495788574
    9. '(i' → logprob: -7.635653495788574
    10. 'range' → logprob: -7.760653495788574

Token 189: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5291829705238342
    2. 'i' → logprob: -0.9041829705238342
    3. 'j' → logprob: -6.7791829109191895
    4. 'range' → logprob: -6.7791829109191895
    5. '(' → logprob: -7.1541829109191895
    6. '((' → logprob: -7.4041829109191895
    7. ' i' → logprob: -8.154183387756348
    8. 'x' → logprob: -8.279183387756348
    9. '(range' → logprob: -8.279183387756348
    10. '   ' → logprob: -8.279183387756348

Token 190: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09369061887264252
    2. 'for' → logprob: -2.4686906337738037
    3. '(range' → logprob: -5.843690395355225
    4. '(l' → logprob: -7.343690395355225
    5. '(' → logprob: -7.843690395355225
    6. '(for' → logprob: -8.218690872192383
    7. ' (' → logprob: -8.968690872192383
    8. '(x' → logprob: -9.968690872192383
    9. '	for' → logprob: -9.968690872192383
    10. 'range' → logprob: -10.093690872192383

Token 191: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.42653360962867737
    2. ' range' → logprob: -1.176533579826355
    3. '(range' → logprob: -4.3015336990356445
    4. 'i' → logprob: -4.4265336990356445
    5. ' i' → logprob: -5.4265336990356445
    6. ' in' → logprob: -5.5515336990356445
    7. '(i' → logprob: -5.8015336990356445
    8. ' ' → logprob: -7.4265336990356445
    9. '   ' → logprob: -8.051533699035645
    10. ' (' → logprob: -8.176533699035645

Token 192: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06676886975765228
    2. ' range' → logprob: -3.1917688846588135
    3. ' in' → logprob: -3.9417688846588135
    4. '(range' → logprob: -5.941768646240234
    5. 'in' → logprob: -6.566768646240234
    6. 'chain' → logprob: -11.316768646240234
    7. '	range' → logprob: -11.816768646240234
    8. ' ' → logprob: -12.316768646240234
    9. '(' → logprob: -12.566768646240234
    10. '   ' → logprob: -13.066768646240234

Token 193: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25278666615486145
    2. ' range' → logprob: -1.502786636352539
    3. '(range' → logprob: -7.627786636352539
    4. 'chain' → logprob: -9.127786636352539
    5. 'lim' → logprob: -10.252786636352539
    6. '(' → logprob: -10.252786636352539
    7. 'repeat' → logprob: -10.690286636352539
    8. ' chain' → logprob: -10.877786636352539
    9. 're' → logprob: -11.065286636352539
    10. '   ' → logprob: -11.190286636352539

Token 194: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.013085057958960533
    2. '(' → logprob: -4.888084888458252
    3. '(k' → logprob: -5.513084888458252
    4. 'lim' → logprob: -6.888084888458252
    5. 'k' → logprob: -8.51308536529541
    6. 'l' → logprob: -9.26308536529541
    7. '1' → logprob: -10.88808536529541
    8. '   ' → logprob: -11.13808536529541
    9. '((' → logprob: -11.38808536529541
    10. '(m' → logprob: -11.63808536529541

Token 195: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.027927609160542488
    2. 'lim' → logprob: -4.152927398681641
    3. 'k' → logprob: -5.277927398681641
    4. '                   ' → logprob: -6.652927398681641
    5. '1' → logprob: -7.027927398681641
    6. '                       ' → logprob: -7.152927398681641
    7. '               ' → logprob: -7.277927398681641
    8. '           ' → logprob: -7.527927398681641
    9. '(k' → logprob: -7.902927398681641
    10. 'm' → logprob: -8.27792739868164

Token 196: ')' (ID: 8)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2890820801258087
    2. ' if' → logprob: -1.4140820503234863
    3. '           ' → logprob: -6.289082050323486
    4. '   ' → logprob: -6.414082050323486
    5. ')' → logprob: -6.539082050323486
    6. '()' → logprob: -6.789082050323486
    7. '       ' → logprob: -7.039082050323486
    8. ' ' → logprob: -8.289082527160645
    9. '               ' → logprob: -9.039082527160645
    10. 'k' → logprob: -9.414082527160645

Token 197: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4749710261821747
    2. 'if' → logprob: -0.9749710559844971
    3. ']),' → logprob: -7.974970817565918
    4. '()' → logprob: -8.974970817565918
    5. ' ' → logprob: -9.474970817565918
    6. '           ' → logprob: -9.599970817565918
    7. '   ' → logprob: -9.724970817565918
    8. '       ' → logprob: -10.474970817565918
    9. '),' → logprob: -10.849970817565918
    10. '               ' → logprob: -10.974970817565918

Token 198: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1642034649848938
    2. ' i' → logprob: -1.914203405380249
    3. '   ' → logprob: -5.664203643798828
    4. '(i' → logprob: -8.914203643798828
    5. ' ' → logprob: -9.039203643798828
    6. '  ' → logprob: -9.414203643798828
    7. '           ' → logprob: -10.789203643798828
    8. '    ' → logprob: -10.851703643798828
    9. ' (' → logprob: -11.039203643798828
    10. '     ' → logprob: -11.351703643798828

Token 199: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.38706907629966736
    2. '!=' → logprob: -1.1370691061019897
    3. ' not' → logprob: -9.887068748474121
    4. ']!=' → logprob: -10.512068748474121
    5. 'not' → logprob: -10.887068748474121
    6. ' ' → logprob: -11.012068748474121
    7. ' ' → logprob: -11.012068748474121
    8. '()!=' → logprob: -11.762068748474121
    9. '   ' → logprob: -12.012068748474121
    10. ' i' → logprob: -12.137068748474121

Token 200: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006211274303495884
    2. ' k' → logprob: -5.131211280822754
    3. '0' → logprob: -8.881211280822754
    4. '(k' → logprob: -10.506211280822754
    5. 'i' → logprob: -11.131211280822754
    6. 'l' → logprob: -11.256211280822754
    7. '   ' → logprob: -11.631211280822754
    8. ' ' → logprob: -11.631211280822754
    9. 'lim' → logprob: -11.631211280822754
    10. '                           ' → logprob: -11.881211280822754

Token 201: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.15772734582424164
    2. ' if' → logprob: -2.7827272415161133
    3. 'if' → logprob: -3.4077272415161133
    4. '()' → logprob: -4.032727241516113
    5. 'k' → logprob: -4.157727241516113
    6. ' ]' → logprob: -5.282727241516113
    7. '],' → logprob: -5.532727241516113
    8. '           ' → logprob: -6.532727241516113
    9. '   ' → logprob: -7.282727241516113
    10. '(k' → logprob: -7.407727241516113

Token 202: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09926443547010422
    2. 'k' → logprob: -2.97426438331604
    3. ' ' → logprob: -3.34926438331604
    4. ' k' → logprob: -5.474264621734619
    5. 'lim' → logprob: -6.349264621734619
    6. 'None' → logprob: -7.474264621734619
    7. '   ' → logprob: -8.349264144897461
    8. ' None' → logprob: -8.349264144897461
    9. ',' → logprob: -8.536764144897461
    10. ' lim' → logprob: -8.536764144897461

Token 203: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3372727930545807
    2. '0' → logprob: -1.3372727632522583
    3. 'lim' → logprob: -4.212272644042969
    4. 'len' → logprob: -5.837272644042969
    5. ' k' → logprob: -6.337272644042969
    6. 'm' → logprob: -6.462272644042969
    7. 'None' → logprob: -7.462272644042969
    8. '(' → logprob: -7.587272644042969
    9. ' ' → logprob: -7.837272644042969
    10. 'max' → logprob: -8.962272644042969

Token 204: ',' (ID: 11)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7016201019287109
    2. ',' → logprob: -1.451620101928711
    3. ',k' → logprob: -1.576620101928711
    4. ' k' → logprob: -3.326620101928711
    5. ' ,' → logprob: -4.576620101928711
    6. '                   ' → logprob: -5.701620101928711
    7. '                           ' → logprob: -5.826620101928711
    8. '               ' → logprob: -5.951620101928711
    9. '                       ' → logprob: -5.951620101928711
    10. '(k' → logprob: -6.701620101928711

Token 205: ' lim' (ID: 3147)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.2860538363456726
    2. 'k' → logprob: -1.4110538959503174
    3. 'm' → logprob: -6.161053657531738
    4. '(' → logprob: -7.286053657531738
    5. '(k' → logprob: -7.411053657531738
    6. ' lim' → logprob: -7.786053657531738
    7. 'len' → logprob: -7.911053657531738
    8. 'limit' → logprob: -9.661053657531738
    9. '   ' → logprob: -9.786053657531738
    10. 'lam' → logprob: -9.911053657531738

Token 206: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7742372751235962
    2. '-' → logprob: -1.1492372751235962
    3. '-k' → logprob: -1.5242372751235962
    4. 'k' → logprob: -6.649237155914307
    5. '))' → logprob: -7.399237155914307
    6. ')),' → logprob: -7.399237155914307
    7. ' ' → logprob: -7.899237155914307
    8. '-m' → logprob: -7.899237155914307
    9. '   ' → logprob: -7.899237155914307
    10. ')))' → logprob: -8.899237632751465

Token 207: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01192072220146656
    2. '1' → logprob: -4.886920928955078
    3. ' k' → logprob: -5.761920928955078
    4. '(k' → logprob: -7.136920928955078
    5. '(' → logprob: -8.386920928955078
    6. ' ' → logprob: -10.011920928955078
    7. ' (' → logprob: -10.136920928955078
    8. '2' → logprob: -10.886920928955078
    9. '   ' → logprob: -11.136920928955078
    10. '0' → logprob: -11.511920928955078

Token 208: ' -' (ID: 533)
  Prédit: '),
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),
' → logprob: -1.8436706066131592
    2. '-' → logprob: -2.218670606613159
    3. '))' → logprob: -2.218670606613159
    4. '),' → logprob: -2.343670606613159
    5. '                           ' → logprob: -2.718670606613159
    6. '                       ' → logprob: -2.718670606613159
    7. ')),
' → logprob: -2.968670606613159
    8. ')),' → logprob: -2.968670606613159
    9. '               ' → logprob: -3.218670606613159
    10. ')
' → logprob: -3.218670606613159

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011786778923124075
    2. ' ' → logprob: -6.751178741455078
    3. '0' → logprob: -12.001178741455078
    4. '2' → logprob: -14.376178741455078
    5. '   ' → logprob: -14.626178741455078
    6. ')' → logprob: -14.876178741455078
    7. 'k' → logprob: -15.876178741455078
    8. '))' → logprob: -16.126178741455078
    9. '-' → logprob: -16.251178741455078
    10. '```' → logprob: -16.376178741455078

Token 210: ')),
' (ID: 13846)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7444233894348145
    2. '),
' → logprob: -1.6194233894348145
    3. ')' → logprob: -2.1194233894348145
    4. '))))' → logprob: -2.7444233894348145
    5. '))' → logprob: -2.9944233894348145
    6. ')))' → logprob: -3.1194233894348145
    7. '                       ' → logprob: -4.4944233894348145
    8. ')
' → logprob: -4.6194233894348145
    9. ')),' → logprob: -4.9944233894348145
    10. ')))),' → logprob: -5.3694233894348145

Token 211: '                       ' (ID: 968)
  Prédit: ',
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',
' → logprob: -1.5070847272872925
    2. '[' → logprob: -1.8820847272872925
    3. ')' → logprob: -2.007084846496582
    4. ',' → logprob: -2.132084846496582
    5. '                           ' → logprob: -3.007084846496582
    6. '[k' → logprob: -3.257084846496582
    7. '   ' → logprob: -3.507084846496582
    8. '',' → logprob: -3.757084846496582
    9. '),' → logprob: -3.882084846496582
    10. '+' → logprob: -3.882084846496582

Token 212: ' [' (ID: 723)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.011285009793937206
    2. '[' (adapté à ' [') → logprob: -5.261284828186035
    3. 'repeat' → logprob: -5.761284828186035
    4. 'list' → logprob: -7.011284828186035
    5. ' [' → logprob: -7.261284828186035
    6. 're' → logprob: -7.761284828186035
    7. '[i' → logprob: -8.261284828186035
    8. ')' → logprob: -8.886284828186035
    9. '(k' → logprob: -9.511284828186035
    10. '[(' → logprob: -10.511284828186035

Token 213: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004141072859056294
    2. '0' → logprob: -8.00041389465332
    3. ' k' → logprob: -10.25041389465332
    4. '(k' → logprob: -11.62541389465332
    5. '   ' → logprob: -12.12541389465332
    6. '
' → logprob: -12.37541389465332
    7. '[k' → logprob: -12.75041389465332
    8. ' ' → logprob: -12.81291389465332
    9. '           ' → logprob: -12.87541389465332
    10. ']' → logprob: -13.00041389465332

Token 214: '],
' (ID: 2274)
  Prédit: ',
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',
' → logprob: -1.0913504362106323
    2. '                   ' → logprob: -1.9663504362106323
    3. ')' → logprob: -2.091350555419922
    4. ')))' → logprob: -2.091350555419922
    5. ',' → logprob: -2.466350555419922
    6. ']))' → logprob: -2.966350555419922
    7. '))))' → logprob: -3.216350555419922
    8. ')
' → logprob: -3.341350555419922
    9. '                       ' → logprob: -4.216350555419922
    10. '))' → logprob: -4.591350555419922

Token 215: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1219881922006607
    2. ')' → logprob: -3.621988296508789
    3. ')))' → logprob: -3.746988296508789
    4. '                       ' → logprob: -3.871988296508789
    5. '))))' → logprob: -4.371988296508789
    6. ')
' → logprob: -4.371988296508789
    7. '))' → logprob: -4.996988296508789
    8. '               ' → logprob: -5.496988296508789
    9. '[' → logprob: -6.371988296508789
    10. 'k' → logprob: -7.496988296508789

Token 216: ' )
' (ID: 3270)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15113069117069244
    2. ')' → logprob: -2.2761306762695312
    3. ')
' (adapté à ' )
') → logprob: -3.9011306762695312
    4. ')))' → logprob: -4.776130676269531
    5. '                   ' → logprob: -5.651130676269531
    6. '))))' → logprob: -5.901130676269531
    7. '))' → logprob: -6.776130676269531
    8. '),
' → logprob: -7.776130676269531
    9. '),' → logprob: -7.901130676269531
    10. '                       ' → logprob: -9.151130676269531

Token 217: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.121126689016819
    2. ')' → logprob: -2.246126651763916
    3. ')))' → logprob: -5.496126651763916
    4. '                   ' → logprob: -6.246126651763916
    5. '))))' → logprob: -6.996126651763916
    6. '))' → logprob: -7.371126651763916
    7. ')
' → logprob: -8.121127128601074
    8. '           ' → logprob: -8.996127128601074
    9. '),' → logprob: -9.746127128601074
    10. ' )' → logprob: -9.996127128601074

Token 218: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4733729958534241
    2. '               ' → logprob: -1.2233729362487793
    3. ')))' → logprob: -3.3483729362487793
    4. ')
' (adapté à ' )
') → logprob: -3.9733729362487793
    5. '))' → logprob: -4.348372936248779
    6. '))))' → logprob: -4.723372936248779
    7. '           ' → logprob: -5.723372936248779
    8. '                   ' → logprob: -5.973372936248779
    9. '       ' → logprob: -8.098373413085938
    10. ')
' → logprob: -8.598373413085938

Token 219: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9864012002944946
    2. '               ' → logprob: -0.9864012002944946
    3. '           ' → logprob: -2.236401081085205
    4. ')))' → logprob: -2.486401081085205
    5. '))' → logprob: -2.986401081085205
    6. '))))' → logprob: -5.111401081085205
    7. '       ' → logprob: -5.611401081085205
    8. '                   ' → logprob: -6.361401081085205
    9. ')
' → logprob: -6.986401081085205
    10. '[' → logprob: -8.111401557922363

Token 220: ' )
' (ID: 3270)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1935453861951828
    2. ')' → logprob: -2.318545341491699
    3. '))' → logprob: -3.068545341491699
    4. ')))' → logprob: -3.818545341491699
    5. '           ' → logprob: -5.693545341491699
    6. '   ' → logprob: -5.818545341491699
    7. '))))' → logprob: -6.693545341491699
    8. ')
' (adapté à ' )
') → logprob: -7.318545341491699
    9. '        ' → logprob: -8.4435453414917
    10. '          ' → logprob: -9.3185453414917

Token 221: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7656102776527405
    2. '       ' → logprob: -0.8906102776527405
    3. '   ' → logprob: -2.1406102180480957
    4. '()' → logprob: -5.765610218048096
    5. '))' → logprob: -6.015610218048096
    6. '())' → logprob: -7.140610218048096
    7. 'if' → logprob: -9.265610694885254
    8. '    ' → logprob: -9.265610694885254
    9. '           ' → logprob: -10.015610694885254
    10. '        ' → logprob: -10.140610694885254

Token 222: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' (adapté à ' )') → logprob: -0.18895936012268066
    2. '       ' → logprob: -2.4389593601226807
    3. '   ' → logprob: -2.5639593601226807
    4. '()' → logprob: -5.438959121704102
    5. '))' → logprob: -6.313959121704102
    6. '())' → logprob: -7.563959121704102
    7. '    ' → logprob: -8.063959121704102
    8. ')))' → logprob: -8.438959121704102
    9. '           ' → logprob: -9.188959121704102
    10. '      ' → logprob: -9.313959121704102

Token 223: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015430726343765855
    2. '())' → logprob: -7.501543045043945
    3. ')' → logprob: -7.626543045043945
    4. '(' → logprob: -8.751543045043945
    5. '   ' → logprob: -9.251543045043945
    6. '()
' → logprob: -9.251543045043945
    7. ' ()' → logprob: -9.751543045043945
    8. ' ' → logprob: -10.251543045043945
    9. '  ' → logprob: -11.251543045043945
    10. '       ' → logprob: -12.501543045043945

Token 224: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.019200408831238747
    2. '   ' → logprob: -4.644200325012207
    3. ')' → logprob: -5.394200325012207
    4. '())' → logprob: -6.144200325012207
    5. '()
' → logprob: -7.019200325012207
    6. 'main' → logprob: -7.394200325012207
    7. 'if' → logprob: -8.269200325012207
    8. '<|end|>' → logprob: -8.769200325012207
    9. '}()
' → logprob: -8.894200325012207
    10. '()>' → logprob: -9.394200325012207

Token 225: ' )' (ID: 1546)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029334304854273796
    2. '())' → logprob: -3.904334306716919
    3. ')' (adapté à ' )') → logprob: -5.02933406829834
    4. '   ' → logprob: -6.90433406829834
    5. '()
' → logprob: -7.15433406829834
    6. 'if' → logprob: -8.27933406829834
    7. '()

' → logprob: -9.65433406829834
    8. 'main' → logprob: -10.65433406829834
    9. '())
' → logprob: -11.15433406829834
    10. '();)' → logprob: -11.15433406829834

Token 226: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001831565605243668
    2. '()
' → logprob: -9.12518310546875
    3. '(' → logprob: -9.75018310546875
    4. '()

' → logprob: -12.37518310546875
    5. '()<' → logprob: -13.25018310546875
    6. '():' → logprob: -13.50018310546875
    7. ':' → logprob: -13.87518310546875
    8. '()`' → logprob: -14.12518310546875
    9. '()"' → logprob: -14.12518310546875
    10. '();' → logprob: -14.37518310546875

Token 227: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: ' k' (ID: 372)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.595696747303009
    2. ' m' → logprob: -0.970696747303009
    3. 'k' → logprob: -3.0956966876983643
    4. ' k' → logprob: -3.8456966876983643
    5. ' __' → logprob: -6.845696926116943
    6. ' True' → logprob: -7.095696926116943
    7. '__' → logprob: -7.720696926116943
    8. 'True' → logprob: -7.970696926116943
    9. ' ' → logprob: -8.220696449279785
    10. '0' → logprob: -9.470696449279785

Token 229: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5749194025993347
    2. '!=' → logprob: -1.3249194622039795
    3. ' !=' → logprob: -2.4499194622039795
    4. ' <' → logprob: -2.5749194622039795
    5. '<=' → logprob: -5.3249192237854
    6. ' <=' → logprob: -6.3249192237854
    7. '>' → logprob: -7.1999192237854
    8. '>=' → logprob: -7.6999192237854
    9. '==' → logprob: -7.9499192237854
    10. ' >=' → logprob: -8.449919700622559

Token 230: ' lim' (ID: 3147)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.0018137017032131553
    2. '(' → logprob: -6.501813888549805
    3. ' lim' → logprob: -8.501813888549805
    4. '=' → logprob: -9.876813888549805
    5. '1' → logprob: -10.626813888549805
    6. ' (' → logprob: -11.501813888549805
    7. '=(' → logprob: -12.501813888549805
    8. '(l' → logprob: -12.626813888549805
    9. 'limit' → logprob: -12.626813888549805
    10. 'lin' → logprob: -13.376813888549805

Token 231: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.08901657164096832
    2. 'else' → logprob: -2.4640166759490967
    3. ' and' → logprob: -10.464016914367676
    4. '    ' → logprob: -10.714016914367676
    5. ' ' → logprob: -11.964016914367676
    6. 'and' → logprob: -12.089016914367676
    7. '   ' → logprob: -12.839016914367676
    8. '+' → logprob: -12.964016914367676
    9. '        ' → logprob: -13.526516914367676
    10. '-' → logprob: -13.526516914367676

Token 232: ' _' (ID: 1175)
  Prédit: '_err'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_err' → logprob: -0.5559797883033752
    2. '   ' → logprob: -1.1809797286987305
    3. ' _' → logprob: -2.1809797286987305
    4. '  ' → logprob: -6.0559797286987305
    5. ' ' → logprob: -6.5559797286987305
    6. '       ' → logprob: -6.9309797286987305
    7. 'print' → logprob: -7.0559797286987305
    8. '    ' → logprob: -8.05597972869873
    9. 'sys' → logprob: -8.55597972869873
    10. ' print' → logprob: -9.30597972869873

Token 233: 'err' (ID: 837)
  Prédit: 'err'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'err' → logprob: -1.1517960956552997e-05
    2. '_err' → logprob: -11.625011444091797
    3. 'er' → logprob: -14.375011444091797
    4. ' err' → logprob: -14.750011444091797
    5. '(err' → logprob: -14.750011444091797
    6. 'e' → logprob: -15.250011444091797
    7. 'error' → logprob: -15.500011444091797
    8. '.err' → logprob: -15.500011444091797
    9. 'erm' → logprob: -16.250011444091797
    10. '	err' → logprob: -16.625011444091797

Token 234: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.087644062936306
    2. ')' → logprob: -3.212644100189209
    3. '<|end|>' → logprob: -3.587644100189209
    4. '(
' → logprob: -5.337644100189209
    5. '[' → logprob: -5.712644100189209
    6. '#' → logprob: -5.837644100189209
    7. '```' → logprob: -6.087644100189209
    8. '()' → logprob: -7.337644100189209
    9. '.' → logprob: -7.962644100189209
    10. ' (' → logprob: -8.08764362335205


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 234
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 84
Tokens correctement prédits (top 10): 200
Précision stricte (1ère position): 33.76%
Précision adaptée (1ère position): 35.90%
Précision (top 10): 85.47%
================================================================================
