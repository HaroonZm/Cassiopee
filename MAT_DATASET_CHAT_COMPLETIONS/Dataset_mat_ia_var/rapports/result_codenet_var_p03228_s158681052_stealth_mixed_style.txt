================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def bizarre(*x):
    A = list(x)
    globals()['r'] = [A[0], A[1], A[2]]
    for j in range(r[2]):
        if not j & 1:
            if r[0]&1: r[0]-=1
            r[1] = r[1]+(r[0]//2)
            r[0]//=2
        else:
            if r[1]%2==1:
                r[1]=r[1]-1
            r[0]+=(r[1]//2)
            r[1]//=2
    yield r[0] ; yield r[1]

def execute():
    import sys
    N=int; f=sys.stdin.readline
    x,y,z=[N(u) for u in f().split()]
    res=list(bizarre(x,y,z))
    print(res[0],end=' ')
    print(res[1])
execute()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' bizarre' (ID: 61150)
  → Token d'amorce (pas de prédiction)

Token 2: '(*' (ID: 9000)
  → Token d'amorce (pas de prédiction)

Token 3: 'x' (ID: 87)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12286044657230377
    2. 'args' → logprob: -2.7478604316711426
    3. '*' → logprob: -3.6228604316711426
    4. 'a' → logprob: -4.497860431671143
    5. ',' → logprob: -5.247860431671143
    6. '):' → logprob: -5.372860431671143
    7. 's' → logprob: -6.497860431671143
    8. 'arguments' → logprob: -7.497860431671143
    9. '**' → logprob: -7.747860431671143
    10. 'w' → logprob: -8.9978609085083

Token 4: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0185201168060303
    2. ',' → logprob: -1.1435201168060303
    3. '):' → logprob: -1.1435201168060303
    4. 's' → logprob: -7.268520355224609
    5. '*' → logprob: -8.89352035522461
    6. ':' → logprob: -9.64352035522461
    7. ',)' → logprob: -9.64352035522461
    8. '),' → logprob: -9.76852035522461
    9. ')s' → logprob: -10.01852035522461
    10. ')**' → logprob: -10.01852035522461

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14721348881721497
    2. '   ' → logprob: -2.5222134590148926
    3. '\n' → logprob: -3.5222134590148926
    4. ':return' → logprob: -4.397213459014893
    5. '```' → logprob: -5.272213459014893
    6. ' return' → logprob: -6.397213459014893
    7. '\' → logprob: -6.772213459014893
    8. ' ' → logprob: -6.897213459014893
    9. ' :' → logprob: -7.022213459014893
    10. ':\' → logprob: -7.022213459014893

Token 6: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1143790483474731
    2. '\n' → logprob: -1.4893790483474731
    3. 'return' → logprob: -1.6143790483474731
    4. 'r' → logprob: -2.8643789291381836
    5. ' ' → logprob: -2.9893789291381836
    6. ' return' → logprob: -3.8643789291381836
    7. '\' → logprob: -3.8643789291381836
    8. 'x' → logprob: -4.114378929138184
    9. '\r' → logprob: -4.489378929138184
    10. '\t' → logprob: -4.489378929138184

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3407699763774872
    2. ',' → logprob: -2.2157700061798096
    3. '.' → logprob: -2.3407700061798096
    4. '+' → logprob: -3.5907700061798096
    5. '[' → logprob: -3.5907700061798096
    6. ' =' → logprob: -4.4657697677612305
    7. '.append' → logprob: -5.8407697677612305
    8. 'r' → logprob: -5.9657697677612305
    9. '+=' → logprob: -6.3407697677612305
    10. ' ' → logprob: -6.4657697677612305

Token 8: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.21052248775959015
    2. ' []' → logprob: -2.085522413253784
    3. 'x' → logprob: -3.960522413253784
    4. '{}' → logprob: -4.210522651672363
    5. '[' → logprob: -4.335522651672363
    6. '0' → logprob: -4.960522651672363
    7. '[x' → logprob: -5.710522651672363
    8. ' [' → logprob: -6.085522651672363
    9. ' ' → logprob: -6.835522651672363
    10. '1' → logprob: -7.085522651672363

Token 9: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013821668922901154
    2. '(x' → logprob: -4.388821601867676
    3. '(range' → logprob: -7.388821601867676
    4. '((' → logprob: -8.263821601867676
    5. '(A' → logprob: -9.388821601867676
    6. 's' → logprob: -10.138821601867676
    7. '(map' → logprob: -10.388821601867676
    8. '('' → logprob: -10.763821601867676
    9. '(eval' → logprob: -10.763821601867676
    10. '(s' → logprob: -10.888821601867676

Token 10: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.615255839889869e-05
    2. '[' → logprob: -9.375096321105957
    3. ' )' → logprob: -12.625096321105957
    4. '   ' → logprob: -13.500096321105957
    5. '))' → logprob: -13.500096321105957
    6. ')`' → logprob: -14.375096321105957
    7. ',' → logprob: -14.625096321105957
    8. '[])' → logprob: -14.875096321105957
    9. ')[' → logprob: -15.000096321105957
    10. '),' → logprob: -15.125096321105957

Token 11: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28297871351242065
    2. '[' → logprob: -1.5329787731170654
    3. '[
' → logprob: -4.907978534698486
    4. '
' → logprob: -5.157978534698486
    5. '[:]' → logprob: -5.532978534698486
    6. '.append' → logprob: -6.532978534698486
    7. '```' → logprob: -6.657978534698486
    8. ')' → logprob: -6.782978534698486
    9. ':' → logprob: -6.782978534698486
    10. ',' → logprob: -7.282978534698486

Token 12: ' globals' (ID: 87840)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7910299301147461
    2. '.' → logprob: -1.666029930114746
    3. '    
' → logprob: -2.666029930114746
    4. ' ' → logprob: -2.791029930114746
    5. '   ' → logprob: -2.916029930114746
    6. '```' → logprob: -2.916029930114746
    7. '\n' → logprob: -3.541029930114746
    8. '\' → logprob: -4.291029930114746
    9. '  
' → logprob: -4.291029930114746
    10. '
' → logprob: -4.791029930114746

Token 13: '()['' (ID: 96829)
  Prédit: '()[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()['' → logprob: -0.2861701548099518
    2. '()' → logprob: -1.9111701250076294
    3. '().' → logprob: -2.536170244216919
    4. '()["' → logprob: -4.53617000579834
    5. '()[' → logprob: -4.53617000579834
    6. '.' → logprob: -8.78617000579834
    7. '[' → logprob: -10.03617000579834
    8. '(' → logprob: -10.16117000579834
    9. '().'' → logprob: -10.66117000579834
    10. '('.')' → logprob: -10.78617000579834

Token 14: 'r' (ID: 81)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03731387108564377
    2. 'b' → logprob: -3.787313938140869
    3. 'x' → logprob: -5.162313938140869
    4. '__' → logprob: -5.787313938140869
    5. ''' → logprob: -6.287313938140869
    6. 'B' → logprob: -6.912313938140869
    7. ''A' → logprob: -6.912313938140869
    8. 'a' → logprob: -8.037313461303711
    9. ''b' → logprob: -8.662313461303711
    10. 'str' → logprob: -8.662313461303711

Token 15: '']' (ID: 1089)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.43792518973350525
    2. 'a' → logprob: -1.5629252195358276
    3. '']' → logprob: -3.187925100326538
    4. 'es' → logprob: -3.687925100326538
    5. 'eturn' → logprob: -3.937925100326538
    6. 'an' → logprob: -4.687925338745117
    7. '']]' → logprob: -4.937925338745117
    8. ''' → logprob: -5.062925338745117
    9. 'ange' → logprob: -5.187925338745117
    10. '')]' → logprob: -5.312925338745117

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5530246496200562
    2. ' =' → logprob: -0.9280246496200562
    3. '[' → logprob: -3.6780247688293457
    4. '.' → logprob: -6.803024768829346
    5. '(' → logprob: -6.928024768829346
    6. ')' → logprob: -7.428024768829346
    7. '+' → logprob: -7.553024768829346
    8. '['' → logprob: -7.928024768829346
    9. ' +=' → logprob: -8.928024291992188
    10. '[:]' → logprob: -9.428024291992188

Token 17: ' [' (ID: 723)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.39520707726478577
    2. '[]' → logprob: -1.7702070474624634
    3. ' A' → logprob: -2.270207166671753
    4. ' []' → logprob: -4.395206928253174
    5. 'lambda' → logprob: -4.520206928253174
    6. '[' → logprob: -5.020206928253174
    7. ' lambda' → logprob: -5.020206928253174
    8. ' ' → logprob: -5.895206928253174
    9. '[A' → logprob: -5.895206928253174
    10. ' [' → logprob: -6.020206928253174

Token 18: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9190988540649414
    2. '0' → logprob: -1.0440988540649414
    3. '[]' → logprob: -2.0440988540649414
    4. ']' → logprob: -3.6690988540649414
    5. '{}' → logprob: -3.6690988540649414
    6. 'None' → logprob: -3.7940988540649414
    7. 'i' → logprob: -5.044098854064941
    8. '1' → logprob: -5.044098854064941
    9. '[' → logprob: -5.294098854064941
    10. '()]' → logprob: -5.544098854064941

Token 19: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028688950464129448
    2. ')' → logprob: -4.903688907623291
    3. ']' → logprob: -4.903688907623291
    4. ')]' → logprob: -5.903688907623291
    5. ',' → logprob: -6.278688907623291
    6. '[-' → logprob: -6.278688907623291
    7. '0' → logprob: -6.403688907623291
    8. '[i' → logprob: -6.528688907623291
    9. '   ' → logprob: -6.778688907623291
    10. '])' → logprob: -7.403688907623291

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029972175136208534
    2. '-' → logprob: -3.6549720764160156
    3. '1' → logprob: -5.779972076416016
    4. ' ' → logprob: -8.154972076416016
    5. '2' → logprob: -9.404972076416016
    6. ' -' → logprob: -10.154972076416016
    7. ':' → logprob: -10.529972076416016
    8. '(' → logprob: -10.904972076416016
    9. '-i' → logprob: -11.092472076416016
    10. 'i' → logprob: -11.342472076416016

Token 21: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13626503944396973
    2. '[' → logprob: -2.8862650394439697
    3. '][' → logprob: -3.0112650394439697
    4. '+' → logprob: -5.136264801025391
    5. ']]' → logprob: -5.511264801025391
    6. ']+' → logprob: -5.761264801025391
    7. ',' → logprob: -5.886264801025391
    8. ')]' → logprob: -6.636264801025391
    9. ' ]' → logprob: -7.136264801025391
    10. '],' → logprob: -7.511264801025391

Token 22: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5734362006187439
    2. 'A' → logprob: -0.9484362006187439
    3. ''A' → logprob: -4.573436260223389
    4. ' ' → logprob: -4.698436260223389
    5. '   ' → logprob: -5.573436260223389
    6. ''' → logprob: -5.698436260223389
    7. ' '' → logprob: -5.823436260223389
    8. ' [' → logprob: -6.448436260223389
    9. 'len' → logprob: -6.573436260223389
    10. ' None' → logprob: -6.698436260223389

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0226572435349226
    2. '[-' → logprob: -3.8976571559906006
    3. ']' → logprob: -7.02265739440918
    4. '0' → logprob: -8.39765739440918
    5. '.' → logprob: -8.64765739440918
    6. '1' → logprob: -8.89765739440918
    7. '-' → logprob: -9.02265739440918
    8. '])' → logprob: -9.02265739440918
    9. ')]' → logprob: -10.02265739440918
    10. '][' → logprob: -10.14765739440918

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20986825227737427
    2. '0' → logprob: -1.9598681926727295
    3. '-' → logprob: -3.0848681926727295
    4. '2' → logprob: -6.584868431091309
    5. ' ' → logprob: -7.084868431091309
    6. ' -' → logprob: -9.209868431091309
    7. '(' → logprob: -9.334868431091309
    8. ':' → logprob: -10.209868431091309
    9. '   ' → logprob: -10.272368431091309
    10. '3' → logprob: -10.397368431091309

Token 25: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17190603911876678
    2. ']]' → logprob: -2.921905994415283
    3. '],' → logprob: -2.921905994415283
    4. ')]' → logprob: -3.921905994415283
    5. '])]' → logprob: -4.046905994415283
    6. '])' → logprob: -5.421905994415283
    7. '+' → logprob: -5.421905994415283
    8. ']+' → logprob: -6.671905994415283
    9. ' ]' → logprob: -7.796905994415283
    10. ')' → logprob: -7.921905994415283

Token 26: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.42806071043014526
    2. 'A' → logprob: -1.17806077003479
    3. ' ' → logprob: -4.678060531616211
    4. ' lambda' → logprob: -5.178060531616211
    5. '   ' → logprob: -5.803060531616211
    6. ''A' → logprob: -6.303060531616211
    7. ']' → logprob: -6.428060531616211
    8. ' '' → logprob: -6.553060531616211
    9. 'lambda' → logprob: -6.553060531616211
    10. ' ]' → logprob: -6.553060531616211

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8792054653167725
    2. ']' → logprob: -1.3792054653167725
    3. '])' → logprob: -2.2542054653167725
    4. '+' → logprob: -2.7542054653167725
    5. ')]' → logprob: -2.8792054653167725
    6. '-' → logprob: -3.3792054653167725
    7. '2' → logprob: -4.504205703735352
    8. '],' → logprob: -4.754205703735352
    9. ')' → logprob: -5.004205703735352
    10. '])]' → logprob: -5.004205703735352

Token 28: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38557901978492737
    2. '0' → logprob: -1.260578989982605
    3. '1' → logprob: -3.5105791091918945
    4. '])' → logprob: -6.0105791091918945
    5. ':' → logprob: -6.8855791091918945
    6. '-' → logprob: -7.1355791091918945
    7. ']])' → logprob: -7.1355791091918945
    8. ']' → logprob: -7.8855791091918945
    9. ' ' → logprob: -8.010579109191895
    10. ']]' → logprob: -9.010579109191895

Token 29: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2430785447359085
    2. '],' → logprob: -1.868078589439392
    3. ']]' → logprob: -3.2430784702301025
    4. ')]' → logprob: -4.243078708648682
    5. '])' → logprob: -5.743078708648682
    6. '])]' → logprob: -5.743078708648682
    7. ' ]' → logprob: -7.743078708648682
    8. ',' → logprob: -8.618078231811523
    9. ')' → logprob: -8.868078231811523
    10. ' ]]' → logprob: -9.118078231811523

Token 30: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22930550575256348
    2. '.' → logprob: -2.2293055057525635
    3. '(' → logprob: -3.4793055057525635
    4. ',' → logprob: -3.6043055057525635
    5. ')' → logprob: -3.6043055057525635
    6. '+' → logprob: -6.479305267333984
    7. 'def' → logprob: -6.479305267333984
    8. '<|end|>' → logprob: -6.604305267333984
    9. ''' → logprob: -6.979305267333984
    10. '```' → logprob: -7.104305267333984

Token 31: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6741268634796143
    2. '.' → logprob: -1.0491268634796143
    3. ')' → logprob: -2.7991268634796143
    4. '(' → logprob: -3.4241268634796143
    5. ',' → logprob: -4.424126625061035
    6. ' ' → logprob: -4.799126625061035
    7. ']' → logprob: -5.049126625061035
    8. '<|end|>' → logprob: -5.299126625061035
    9. '+' → logprob: -5.799126625061035
    10. 'def' → logprob: -6.299126625061035

Token 32: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013365741819143295
    2. ' ' → logprob: -5.263365745544434
    3. 'i' → logprob: -5.763365745544434
    4. '_' → logprob: -6.013365745544434
    5. ' _' → logprob: -7.138365745544434
    6. ' x' → logprob: -7.638365745544434
    7. ' a' → logprob: -8.013365745544434
    8. ' A' → logprob: -8.263365745544434
    9. ' r' → logprob: -8.388365745544434
    10. ' v' → logprob: -9.263365745544434

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032954670023173094
    2. 'in' → logprob: -5.878295421600342
    3. ' ' → logprob: -8.1282958984375
    4. '  ' → logprob: -9.3782958984375
    5. ',' → logprob: -10.5032958984375
    6. ' i' → logprob: -10.8782958984375
    7. '_' → logprob: -11.6282958984375
    8. ' ,' → logprob: -11.8782958984375
    9. 'n' → logprob: -12.1282958984375
    10. 's' → logprob: -12.1282958984375

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0542244091629982
    2. 'range' → logprob: -3.1792244911193848
    3. ' A' → logprob: -4.804224491119385
    4. 'A' → logprob: -6.179224491119385
    5. '   ' → logprob: -8.429224014282227
    6. ' globals' → logprob: -8.429224014282227
    7. ' ' → logprob: -8.929224014282227
    8. '  ' → logprob: -9.679224014282227
    9. ' r' → logprob: -9.679224014282227
    10. ' xrange' → logprob: -10.179224014282227

Token 35: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10066197067499161
    2. '(len' → logprob: -2.3506619930267334
    3. ' (' → logprob: -7.725661754608154
    4. '(s' → logprob: -12.725662231445312
    5. '(A' → logprob: -12.850662231445312
    6. '((' → logprob: -13.225662231445312
    7. '(n' → logprob: -13.600662231445312
    8. ' len' → logprob: -13.725662231445312
    9. '(
' → logprob: -13.850662231445312
    10. '(int' → logprob: -14.350662231445312

Token 36: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5152917504310608
    2. '[j' → logprob: -1.890291690826416
    3. '[' → logprob: -2.015291690826416
    4. '):' → logprob: -2.265291690826416
    5. '   ' → logprob: -4.890291690826416
    6. '.' → logprob: -6.515291690826416
    7. '[i' → logprob: -7.640291690826416
    8. '```' → logprob: -7.640291690826416
    9. '.__' → logprob: -7.765291690826416
    10. ' ' → logprob: -7.765291690826416

Token 37: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1460208296775818
    2. '0' → logprob: -2.3960208892822266
    3. ' ' → logprob: -3.3960208892822266
    4. '2' → logprob: -5.646020889282227
    5. '1' → logprob: -5.771020889282227
    6. ')' → logprob: -5.896020889282227
    7. 'len' → logprob: -6.896020889282227
    8. '])' → logprob: -8.896020889282227
    9. '   ' → logprob: -9.021020889282227
    10. '-' → logprob: -9.021020889282227

Token 38: ']):
' (ID: 51989)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8012902736663818
    2. ']):' → logprob: -0.8012902736663818
    3. ']+' → logprob: -3.426290273666382
    4. '])' → logprob: -3.801290273666382
    5. '+' → logprob: -4.176290512084961
    6. ' ]' → logprob: -4.301290512084961
    7. ']:' → logprob: -5.176290512084961
    8. '):' → logprob: -5.426290512084961
    9. ')' → logprob: -6.051290512084961
    10. ' +' → logprob: -6.426290512084961

Token 39: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8256828784942627
    2. '    ' → logprob: -1.4506828784942627
    3. ' ' → logprob: -2.2006828784942627
    4. '       ' → logprob: -2.5756828784942627
    5. ' :' → logprob: -2.9506828784942627
    6. '   ' → logprob: -3.3256828784942627
    7. ' :
' → logprob: -4.325682640075684
    8. '<|end|>' → logprob: -4.700682640075684
    9. ':
' → logprob: -5.200682640075684
    10. '        ' → logprob: -5.450682640075684

Token 40: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2528162896633148
    2. '    ' → logprob: -2.2528162002563477
    3. '       ' → logprob: -3.3778162002563477
    4. '    
' → logprob: -3.6278162002563477
    5. '     
' → logprob: -4.502816200256348
    6. 'r' → logprob: -4.877816200256348
    7. '\n' → logprob: -5.002816200256348
    8. '        
' → logprob: -5.127816200256348
    9. ' 
' → logprob: -5.252816200256348
    10. ' r' → logprob: -5.627816200256348

Token 41: ' not' (ID: 625)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.13584834337234497
    2. 'r' → logprob: -2.3858482837677
    3. ' j' → logprob: -4.385848522186279
    4. ' not' → logprob: -4.760848522186279
    5. ' A' → logprob: -5.260848522186279
    6. ' ' → logprob: -6.135848522186279
    7. 'j' → logprob: -6.385848522186279
    8. ' (' → logprob: -7.010848522186279
    9. 'A' → logprob: -7.260848522186279
    10. '  ' → logprob: -8.010848045349121

Token 42: ' j' (ID: 441)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5310004949569702
    2. 'r' → logprob: -1.5310004949569702
    3. ' j' → logprob: -2.1560006141662598
    4. 'j' → logprob: -3.6560006141662598
    5. ' (' → logprob: -3.6560006141662598
    6. ' A' → logprob: -5.03100061416626
    7. ' isinstance' → logprob: -5.15600061416626
    8. '(r' → logprob: -5.65600061416626
    9. 'A' → logprob: -6.03100061416626
    10. '(' → logprob: -6.40600061416626

Token 43: ' &' (ID: 827)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07069889456033707
    2. '%' → logprob: -2.6956989765167236
    3. ' ' → logprob: -7.9456987380981445
    4. ' in' → logprob: -8.570698738098145
    5. ' ==' → logprob: -9.695698738098145
    6. ':' → logprob: -9.695698738098145
    7. ' :' → logprob: -10.070698738098145
    8. ' %=' → logprob: -11.695698738098145
    9. '==' → logprob: -11.820698738098145
    10. ' and' → logprob: -11.820698738098145

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2313397377729416
    2. ' ' → logprob: -1.981339693069458
    3. ' r' → logprob: -3.231339693069458
    4. 'r' → logprob: -3.731339693069458
    5. ' A' → logprob: -5.981339931488037
    6. ' (' → logprob: -7.231339931488037
    7. 'A' → logprob: -7.481339931488037
    8. '2' → logprob: -8.481339454650879
    9. '32' → logprob: -8.731339454650879
    10. ' x' → logprob: -9.106339454650879

Token 45: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.402413010597229
    2. '1' → logprob: -1.152413010597229
    3. 'A' → logprob: -5.0274128913879395
    4. ' r' → logprob: -5.5274128913879395
    5. ' ' → logprob: -6.0274128913879395
    6. ' A' → logprob: -7.5274128913879395
    7. 'x' → logprob: -7.5274128913879395
    8. '(' → logprob: -7.9024128913879395
    9. '2' → logprob: -8.652413368225098
    10. '(A' → logprob: -8.652413368225098

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016741497442126274
    2. ' :' → logprob: -4.1417412757873535
    3. ':
' → logprob: -7.6417412757873535
    4. '0' → logprob: -10.016741752624512
    5. '=' → logprob: -10.016741752624512
    6. '):' → logprob: -10.016741752624512
    7. '>:' → logprob: -10.766741752624512
    8. ' :
' → logprob: -11.141741752624512
    9. '==' → logprob: -11.641741752624512
    10. '():' → logprob: -11.891741752624512

Token 47: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08715144544839859
    2. ':
' → logprob: -2.837151527404785
    3. ' :' → logprob: -4.337151527404785
    4. ' :
' → logprob: -5.337151527404785
    5. '       ' → logprob: -5.712151527404785
    6. '           ' → logprob: -6.712151527404785
    7. '   ' → logprob: -7.087151527404785
    8. '):' → logprob: -8.712151527404785
    9. ':return' → logprob: -8.712151527404785
    10. ' ' → logprob: -8.837151527404785

Token 48: ' if' (ID: 538)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3200111389160156
    2. ' r' → logprob: -1.3200111389160156
    3. ' print' → logprob: -2.3200111389160156
    4. 'print' → logprob: -2.4450111389160156
    5. ' globals' → logprob: -2.8200111389160156
    6. ' ' → logprob: -3.0700111389160156
    7. '       ' → logprob: -3.5700111389160156
    8. '    ' → logprob: -3.8200111389160156
    9. '           ' → logprob: -3.9450111389160156
    10. '   ' → logprob: -3.9450111389160156

Token 49: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3767567276954651
    2. 'r' → logprob: -2.2517566680908203
    3. ' A' → logprob: -2.3767566680908203
    4. ' x' → logprob: -3.2517566680908203
    5. ' j' → logprob: -3.8767566680908203
    6. 'A' → logprob: -4.37675666809082
    7. ' ' → logprob: -4.50175666809082
    8. ' not' → logprob: -4.87675666809082
    9. ' len' → logprob: -5.37675666809082
    10. 'x' → logprob: -5.50175666809082

Token 50: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001769616355886683
    2. ' [' → logprob: -9.250177383422852
    3. '[j' → logprob: -10.625177383422852
    4. '1' → logprob: -11.625177383422852
    5. '   ' → logprob: -11.750177383422852
    6. '       ' → logprob: -12.250177383422852
    7. ''[' → logprob: -12.500177383422852
    8. ' ' → logprob: -12.625177383422852
    9. '0' → logprob: -12.875177383422852
    10. '  ' → logprob: -13.125177383422852

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08938411623239517
    2. '1' → logprob: -2.464384078979492
    3. ' ' → logprob: -8.714384078979492
    4. '2' → logprob: -9.214384078979492
    5. '[' → logprob: -9.339384078979492
    6. 'j' → logprob: -10.089384078979492
    7. '   ' → logprob: -10.901884078979492
    8. '[j' → logprob: -12.089384078979492
    9. '(' → logprob: -12.276884078979492
    10. ']' → logprob: -12.776884078979492

Token 52: ']&' (ID: 140620)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.3704848289489746
    2. ' >' → logprob: -1.3704848289489746
    3. ' &' → logprob: -1.8704848289489746
    4. ']' → logprob: -2.4954848289489746
    5. '[' → logprob: -2.9954848289489746
    6. '%' → logprob: -3.2454848289489746
    7. ' %' → logprob: -3.3704848289489746
    8. ' ]' → logprob: -3.9954848289489746
    9. ']>' → logprob: -4.120484828948975
    10. ' ' → logprob: -4.120484828948975

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7873119115829468
    2. 'r' → logprob: -1.5373119115829468
    3. ' r' → logprob: -1.6623119115829468
    4. ' ' → logprob: -2.6623120307922363
    5. 'j' → logprob: -3.2873120307922363
    6. ' j' → logprob: -3.6623120307922363
    7. ' (' → logprob: -5.537312030792236
    8. '(' → logprob: -6.537312030792236
    9. '32' → logprob: -7.662312030792236
    10. '   ' → logprob: -8.412311553955078

Token 54: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011152521707117558
    2. '==' → logprob: -5.636152744293213
    3. ' ==' → logprob: -5.886152744293213
    4. ':
' → logprob: -6.261152744293213
    5. ' :' → logprob: -6.511152744293213
    6. ' and' → logprob: -6.886152744293213
    7. '):' → logprob: -9.511152267456055
    8. ':return' → logprob: -10.511152267456055
    9. '():' → logprob: -10.636152267456055
    10. '>' → logprob: -11.011152267456055

Token 55: ' r' (ID: 428)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35010039806365967
    2. '           ' → logprob: -2.350100517272949
    3. ' ' → logprob: -2.725100517272949
    4. '            ' → logprob: -3.850100517272949
    5. '                ' → logprob: -3.850100517272949
    6. '   ' → logprob: -4.225100517272949
    7. '       ' → logprob: -4.725100517272949
    8. '                
' → logprob: -4.850100517272949
    9. ' return' → logprob: -5.100100517272949
    10. ' 
' → logprob: -5.100100517272949

Token 56: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06275281310081482
    2. '.append' → logprob: -2.9377527236938477
    3. '<|end|>' → logprob: -5.562752723693848
    4. '[j' → logprob: -6.687752723693848
    5. '[token' → logprob: -8.312752723693848
    6. 'append' → logprob: -8.312752723693848
    7. '[++' → logprob: -8.562752723693848
    8. '[
' → logprob: -8.687752723693848
    9. '[end' → logprob: -9.062752723693848
    10. '.extend' → logprob: -9.187752723693848

Token 57: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09131015837192535
    2. '0' → logprob: -2.4663102626800537
    3. '2' → logprob: -6.591310024261475
    4. 'j' → logprob: -8.216310501098633
    5. ']' → logprob: -8.653810501098633
    6. '[' → logprob: -8.653810501098633
    7. '   ' → logprob: -10.153810501098633
    8. '-' → logprob: -10.278810501098633
    9. ' ' → logprob: -10.653810501098633
    10. '' → logprob: -11.153810501098633

Token 58: ']-' (ID: 27107)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7045409679412842
    2. '+=' → logprob: -0.8295409679412842
    3. ')' → logprob: -4.329541206359863
    4. ' -=' → logprob: -4.579541206359863
    5. ' ^=' → logprob: -4.954541206359863
    6. '=' → logprob: -5.079541206359863
    7. '+' → logprob: -5.204541206359863
    8. '-' → logprob: -5.329541206359863
    9. ' <<=' → logprob: -5.329541206359863
    10. ' =' → logprob: -5.829541206359863

Token 59: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002871993638109416
    2. '1' → logprob: -8.250287055969238
    3. '               ' → logprob: -12.500287055969238
    4. ' ' → logprob: -12.625287055969238
    5. ' =' → logprob: -13.000287055969238
    6. '=

' → logprob: -13.000287055969238
    7. '                ' → logprob: -13.250287055969238
    8. '='' → logprob: -13.500287055969238
    9. '-=' → logprob: -13.625287055969238
    10. '=
' → logprob: -13.625287055969238

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010875082574784756
    2. ' ' → logprob: -4.635875225067139
    3. '2' → logprob: -6.885875225067139
    4. '   ' → logprob: -9.76087474822998
    5. '           ' → logprob: -11.38587474822998
    6. '3' → logprob: -11.76087474822998
    7. '4' → logprob: -12.76087474822998
    8. 'r' → logprob: -12.88587474822998
    9. '    ' → logprob: -13.13587474822998
    10. '-' → logprob: -13.26087474822998

Token 61: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: '           ' (ID: 352)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -1.0238960981369019
    2. '           ' → logprob: -1.1488960981369019
    3. '<|end|>' → logprob: -2.1488962173461914
    4. '       ' → logprob: -2.5238962173461914
    5. 'else' → logprob: -3.2738962173461914
    6. ' ' → logprob: -3.6488962173461914
    7. '               ' → logprob: -3.6488962173461914
    8. '
' → logprob: -4.523896217346191
    9. '   ' → logprob: -4.773896217346191
    10. ' elif' → logprob: -5.898896217346191

Token 63: ' r' (ID: 428)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9844454526901245
    2. '<|end|>' → logprob: -1.3594454526901245
    3. ' else' → logprob: -2.109445571899414
    4. '       ' → logprob: -2.734445571899414
    5. ' ' → logprob: -2.984445571899414
    6. 'else' → logprob: -3.109445571899414
    7. '               ' → logprob: -3.484445571899414
    8. '   ' → logprob: -4.109445571899414
    9. '<|end|>' → logprob: -4.859445571899414
    10. '
' → logprob: -5.109445571899414

Token 64: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.656383680412546e-05
    2. '0' → logprob: -11.750046730041504
    3. '```' → logprob: -11.875046730041504
    4. '1' → logprob: -12.250046730041504
    5. '   ' → logprob: -12.625046730041504
    6. '.append' → logprob: -12.750046730041504
    7. ' [' → logprob: -13.750046730041504
    8. ''[' → logprob: -13.750046730041504
    9. ' ' → logprob: -13.875046730041504
    10. '    ' → logprob: -13.937546730041504

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10130894929170609
    2. '0' → logprob: -2.351309061050415
    3. '2' → logprob: -6.851308822631836
    4. ']' → logprob: -11.226308822631836
    5. '-' → logprob: -12.538808822631836
    6. 'j' → logprob: -12.913808822631836
    7. '   ' → logprob: -13.038808822631836
    8. '[' → logprob: -13.163808822631836
    9. 'r' → logprob: -13.351308822631836
    10. ' ' → logprob: -13.538808822631836

Token 66: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14712244272232056
    2. ']+=' → logprob: -3.022122383117676
    3. '-=' → logprob: -3.272122383117676
    4. '-' → logprob: -4.272122383117676
    5. '&' → logprob: -4.522122383117676
    6. '*=' → logprob: -5.022122383117676
    7. ' +=' → logprob: -5.022122383117676
    8. ')' → logprob: -6.147122383117676
    9. '|' → logprob: -6.522122383117676
    10. ' -=' → logprob: -6.647122383117676

Token 67: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.11213337630033493
    2. '-=' → logprob: -2.737133264541626
    3. ' +=' → logprob: -3.987133264541626
    4. ' -=' → logprob: -4.987133502960205
    5. '-' → logprob: -5.487133502960205
    6. '*=' → logprob: -5.612133502960205
    7. '&' → logprob: -5.737133502960205
    8. '=' → logprob: -6.612133502960205
    9. '+' → logprob: -7.737133502960205
    10. '^' → logprob: -7.862133502960205

Token 68: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.340606153011322
    2. ' r' → logprob: -1.4656062126159668
    3. '0' → logprob: -4.090606212615967
    4. ' ' → logprob: -4.590606212615967
    5. ' (' → logprob: -5.090606212615967
    6. '1' → logprob: -5.465606212615967
    7. ' [' → logprob: -5.840606212615967
    8. '2' → logprob: -5.965606212615967
    9. 'int' → logprob: -5.965606212615967
    10. 'max' → logprob: -6.340606212615967

Token 69: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011563267558813095
    2. '0' → logprob: -5.011563301086426
    3. '1' → logprob: -5.511563301086426
    4. ' [' → logprob: -8.261563301086426
    5. ' ' → logprob: -9.136563301086426
    6. ']' → logprob: -10.074063301086426
    7. '][' → logprob: -10.199063301086426
    8. '[
' → logprob: -10.636563301086426
    9. '   ' → logprob: -10.699063301086426
    10. '```' → logprob: -10.949063301086426

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02070094272494316
    2. '0' → logprob: -3.8957009315490723
    3. '2' → logprob: -9.14570140838623
    4. '[' → logprob: -10.39570140838623
    5. ']' → logprob: -12.20820140838623
    6. ' ' → logprob: -12.33320140838623
    7. '-' → logprob: -12.64570140838623
    8. '   ' → logprob: -13.64570140838623
    9. '```' → logprob: -14.39570140838623
    10. '' → logprob: -14.52070140838623

Token 71: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4365624487400055
    2. '-' → logprob: -1.311562418937683
    3. ' +' → logprob: -3.3115625381469727
    4. '*' → logprob: -3.5615625381469727
    5. ' -' → logprob: -4.186562538146973
    6. ' *' → logprob: -6.311562538146973
    7. '<<' → logprob: -7.311562538146973
    8. '>>' → logprob: -7.686562538146973
    9. '^' → logprob: -8.311562538146973
    10. '|' → logprob: -8.686562538146973

Token 72: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2111109048128128
    2. '2' → logprob: -2.211110830307007
    3. 'r' → logprob: -2.711110830307007
    4. ' ' → logprob: -4.836111068725586
    5. ' r' → logprob: -6.336111068725586
    6. '-' → logprob: -6.461111068725586
    7. '3' → logprob: -6.711111068725586
    8. '0' → logprob: -8.336111068725586
    9. '7' → logprob: -8.461111068725586
    10. 'j' → logprob: -8.461111068725586

Token 73: 'r' (ID: 81)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29950979351997375
    2. '2' → logprob: -2.0495097637176514
    3. 'r' → logprob: -2.7995097637176514
    4. ' ' → logprob: -3.0495097637176514
    5. ' r' → logprob: -4.5495100021362305
    6. '-' → logprob: -4.9245100021362305
    7. '0' → logprob: -6.9245100021362305
    8. '3' → logprob: -7.1745100021362305
    9. ' -' → logprob: -7.5495100021362305
    10. '   ' → logprob: -7.9245100021362305

Token 74: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0037216958589851856
    2. '0' → logprob: -5.628721714019775
    3. ' ' → logprob: -10.378721237182617
    4. ' [' → logprob: -10.378721237182617
    5. '[
' → logprob: -10.878721237182617
    6. ')' → logprob: -11.878721237182617
    7. '1' → logprob: -12.191221237182617
    8. '   ' → logprob: -12.253721237182617
    9. '	' → logprob: -12.941221237182617
    10. '-' → logprob: -13.003721237182617

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0247877836227417
    2. '2' → logprob: -4.274787902832031
    3. '1' → logprob: -4.899787902832031
    4. '[' → logprob: -5.899787902832031
    5. ' ' → logprob: -8.149787902832031
    6. ']' → logprob: -10.899787902832031
    7. '   ' → logprob: -11.212287902832031
    8. '][' → logprob: -11.587287902832031
    9. '-' → logprob: -11.774787902832031
    10. '3' → logprob: -11.837287902832031

Token 76: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0844650268554688
    2. ')' → logprob: -1.4594650268554688
    3. '>>' → logprob: -1.5844650268554688
    4. ' -' → logprob: -2.8344650268554688
    5. '//' → logprob: -3.3344650268554688
    6. '+' → logprob: -3.4594650268554688
    7. ')//' → logprob: -3.9594650268554688
    8. ')>>' → logprob: -3.9594650268554688
    9. ' >>' → logprob: -4.084465026855469
    10. ' //' → logprob: -4.209465026855469

Token 77: '//' (ID: 393)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7066183090209961
    2. '-' → logprob: -0.9566183090209961
    3. '+' → logprob: -3.331618309020996
    4. ' -' → logprob: -3.831618309020996
    5. '//' → logprob: -4.081618309020996
    6. '*' → logprob: -4.331618309020996
    7. ' )' → logprob: -4.956618309020996
    8. '>>' → logprob: -5.081618309020996
    9. ' ' → logprob: -5.456618309020996
    10. '   ' → logprob: -5.706618309020996

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020629944279789925
    2. ' ' → logprob: -3.8956298828125
    3. '3' → logprob: -10.1456298828125
    4. '4' → logprob: -10.3956298828125
    5. '1' → logprob: -12.3956298828125
    6. '10' → logprob: -12.5206298828125
    7. '   ' → logprob: -13.3956298828125
    8. '  ' → logprob: -13.4581298828125
    9. '12' → logprob: -14.0831298828125
    10. '6' → logprob: -14.0831298828125

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04545898362994194
    2. ')
' → logprob: -3.670459032058716
    3. '*' → logprob: -4.545458793640137
    4. ')*' → logprob: -5.295458793640137
    5. '<|end|>' → logprob: -7.295458793640137
    6. ' )' → logprob: -7.920458793640137
    7. '       ' → logprob: -8.045458793640137
    8. ' *' → logprob: -8.420458793640137
    9. '<|end|>' → logprob: -8.545458793640137
    10. '   ' → logprob: -8.545458793640137

Token 80: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3177293539047241
    2. '<|end|>' → logprob: -1.3177293539047241
    3. '   ' → logprob: -1.9427293539047241
    4. '       ' → logprob: -2.0677294731140137
    5. '\n' → logprob: -2.3177294731140137
    6. '    ' → logprob: -3.9427294731140137
    7. ')' → logprob: -4.442729473114014
    8. ' 
' → logprob: -4.692729473114014
    9. '
' → logprob: -4.817729473114014
    10. ' return' → logprob: -5.067729473114014

Token 81: ' r' (ID: 428)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0021380058024078608
    2. '.append' → logprob: -7.127138137817383
    3. '[:]' → logprob: -7.627138137817383
    4. '.' → logprob: -8.002138137817383
    5. '[-' → logprob: -8.502138137817383
    6. '.pop' → logprob: -9.127138137817383
    7. '1' → logprob: -10.002138137817383
    8. '=' → logprob: -10.377138137817383
    9. '.remove' → logprob: -11.252138137817383
    10. '[]' → logprob: -11.627138137817383

Token 83: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5552905201911926
    2. '2' → logprob: -1.0552904605865479
    3. '0' → logprob: -2.555290460586548
    4. '[' → logprob: -9.180290222167969
    5. ']' → logprob: -9.180290222167969
    6. '-' → logprob: -10.305290222167969
    7. ' ' → logprob: -10.742790222167969
    8. '])' → logprob: -12.367790222167969
    9. '   ' → logprob: -12.430290222167969
    10. ']+' → logprob: -12.492790222167969

Token 84: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -1.2038451433181763
    2. '+=' → logprob: -1.4538451433181763
    3. ']' → logprob: -1.7038451433181763
    4. '-=' → logprob: -2.0788450241088867
    5. ' +=' → logprob: -2.7038450241088867
    6. '-' → logprob: -3.5788450241088867
    7. '=' → logprob: -3.7038450241088867
    8. ']+=' → logprob: -4.078845024108887
    9. ' =' → logprob: -5.078845024108887
    10. ')' → logprob: -5.453845024108887

Token 85: '//=' (ID: 171954)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16830721497535706
    2. '=' → logprob: -2.543307304382324
    3. ' +=' → logprob: -3.418307304382324
    4. '-=' → logprob: -3.793307304382324
    5. '//=' → logprob: -4.793307304382324
    6. ' -=' → logprob: -5.543307304382324
    7. '*=' → logprob: -5.918307304382324
    8. '-' → logprob: -6.418307304382324
    9. ',' → logprob: -6.793307304382324
    10. ' =' → logprob: -6.793307304382324

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002366753324167803
    2. ' ' → logprob: -8.375236511230469
    3. '1' → logprob: -12.625236511230469
    4. '10' → logprob: -13.625236511230469
    5. '   ' → logprob: -15.125236511230469
    6. '3' → logprob: -15.375236511230469
    7. '4' → logprob: -15.375236511230469
    8. '  ' → logprob: -15.500236511230469
    9. '    ' → logprob: -15.875236511230469
    10. '0' → logprob: -16.43773651123047

Token 87: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10499326139688492
    2. ':
' → logprob: -2.3549933433532715
    3. ' :
' → logprob: -6.8549933433532715
    4. '           ' → logprob: -6.9799933433532715
    5. ' :' → logprob: -7.1049933433532715
    6. '       ' → logprob: -7.3549933433532715
    7. '   ' → logprob: -7.6049933433532715
    8. 'r' → logprob: -8.979992866516113
    9. ' r' → logprob: -8.979992866516113
    10. ' ' → logprob: -9.104992866516113

Token 91: '           ' (ID: 352)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.38937997817993164
    2. 'r' → logprob: -1.6393799781799316
    3. '           ' → logprob: -2.1393799781799316
    4. '       ' → logprob: -5.639379978179932
    5. '   ' → logprob: -6.139379978179932
    6. ' ' → logprob: -7.264379978179932
    7. ' return' → logprob: -7.389379978179932
    8. '        ' → logprob: -7.889379978179932
    9. ' if' → logprob: -7.889379978179932
    10. ' for' → logprob: -8.014379501342773

Token 92: ' if' (ID: 538)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4936555027961731
    2. ' r' → logprob: -0.9936555027961731
    3. ' if' → logprob: -4.743655681610107
    4. '           ' → logprob: -5.493655681610107
    5. 'if' (adapté à ' if') → logprob: -6.118655681610107
    6. ' for' → logprob: -6.743655681610107
    7. '            ' → logprob: -7.368655681610107
    8. '   ' → logprob: -7.868655681610107
    9. '    ' → logprob: -8.11865520477295
    10. 'for' → logprob: -8.24365520477295

Token 93: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.09076696634292603
    2. 'r' → logprob: -2.4657669067382812
    3. ' not' → logprob: -6.465766906738281
    4. 'not' → logprob: -9.090766906738281
    5. ' ' → logprob: -10.090766906738281
    6. '   ' → logprob: -10.590766906738281
    7. '(r' → logprob: -10.965766906738281
    8. ' (' → logprob: -11.090766906738281
    9. ' ' → logprob: -11.340766906738281
    10. '  ' → logprob: -11.590766906738281

Token 94: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3425219549390022e-05
    2. '1' → logprob: -12.12501335144043
    3. '0' → logprob: -13.37501335144043
    4. '[
' → logprob: -13.93751335144043
    5. 'user' → logprob: -14.12501335144043
    6. 'User' → logprob: -14.43751335144043
    7. ' ' → logprob: -14.87501335144043
    8. 'Answer' → logprob: -15.18751335144043
    9. '```' → logprob: -15.25001335144043
    10. ' [' → logprob: -15.31251335144043

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014199234545230865
    2. '0' → logprob: -4.264199256896973
    3. '2' → logprob: -10.764199256896973
    4. '[' → logprob: -12.701699256896973
    5. ']' → logprob: -13.326699256896973
    6. ' ' → logprob: -13.639199256896973
    7. '   ' → logprob: -14.139199256896973
    8. '' → logprob: -14.389199256896973
    9. '```' → logprob: -14.701699256896973
    10. 'r' → logprob: -14.889199256896973

Token 96: ']%' (ID: 158002)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.05608075112104416
    2. ' &' → logprob: -3.1810808181762695
    3. ')&' → logprob: -4.9310808181762695
    4. ']&' → logprob: -5.8060808181762695
    5. '>' → logprob: -7.1810808181762695
    6. ')' → logprob: -7.6810808181762695
    7. '%' → logprob: -7.8060808181762695
    8. '>&' → logprob: -8.05608081817627
    9. ']' → logprob: -8.18108081817627
    10. ' >' → logprob: -8.80608081817627

Token 97: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008658423088490963
    2. ' ' → logprob: -5.258658409118652
    3. '3' → logprob: -5.883658409118652
    4. '4' → logprob: -8.133658409118652
    5. '1' → logprob: -9.633658409118652
    6. 'r' → logprob: -9.883658409118652
    7. '6' → logprob: -10.508658409118652
    8. '10' → logprob: -10.696158409118652
    9. '  ' → logprob: -10.946158409118652
    10. '5' → logprob: -10.946158409118652

Token 98: '==' (ID: 560)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2603148818016052
    2. '==' → logprob: -1.88531494140625
    3. ' ==' → logprob: -3.13531494140625
    4. '!=' → logprob: -4.26031494140625
    5. ' :' → logprob: -4.51031494140625
    6. ' !=' → logprob: -4.76031494140625
    7. ':
' → logprob: -9.88531494140625
    8. '>' → logprob: -10.26031494140625
    9. '=' → logprob: -10.51031494140625
    10. '):' → logprob: -11.01031494140625

Token 99: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0633813664317131
    2. ' ' → logprob: -3.3133814334869385
    3. '1' → logprob: -3.6883814334869385
    4. '   ' → logprob: -13.37588119506836
    5. ':' → logprob: -13.68838119506836
    6. '  ' → logprob: -14.18838119506836
    7. '2' → logprob: -14.25088119506836
    8. '```' → logprob: -14.75088119506836
    9. ' ' → logprob: -14.81338119506836
    10. '=' → logprob: -14.93838119506836

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08948080241680145
    2. ' :' → logprob: -2.4644808769226074
    3. ':
' → logprob: -7.964480876922607
    4. ' :
' → logprob: -8.83948040008545
    5. ':r' → logprob: -10.71448040008545
    6. ' r' → logprob: -11.33948040008545
    7. ':return' → logprob: -12.08948040008545
    8. ' and' → logprob: -12.96448040008545
    9. ' ' → logprob: -13.58948040008545
    10. '   ' → logprob: -14.08948040008545

Token 101: '               ' (ID: 506)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.021630333736538887
    2. ' ' → logprob: -3.89663028717041
    3. '               ' → logprob: -7.39663028717041
    4. 'r' → logprob: -8.39663028717041
    5. ' ' → logprob: -10.27163028717041
    6. ' break' → logprob: -10.39663028717041
    7. '            ' → logprob: -10.89663028717041
    8. '           ' → logprob: -11.02163028717041
    9. '                ' → logprob: -11.33413028717041
    10. ' 
' → logprob: -11.33413028717041

Token 102: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.004303833935409784
    2. 'r' (adapté à ' r') → logprob: -5.504303932189941
    3. ' break' → logprob: -9.754303932189941
    4. '                ' → logprob: -10.004303932189941
    5. '               ' → logprob: -10.629303932189941
    6. ' globals' → logprob: -10.754303932189941
    7. ' ' → logprob: -11.004303932189941
    8. '                   ' → logprob: -11.129303932189941
    9. ' ' → logprob: -12.254303932189941
    10. '    ' → logprob: -12.379303932189941

Token 103: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.514650183613412e-05
    2. '1' → logprob: -11.000055313110352
    3. ' [' → logprob: -11.375055313110352
    4. '.append' → logprob: -11.875055313110352
    5. ' ' → logprob: -12.375055313110352
    6. '['' → logprob: -12.375055313110352
    7. '<|end|>' → logprob: -13.625055313110352
    8. '[-' → logprob: -14.000055313110352
    9. '[
' → logprob: -14.125055313110352
    10. '[]' → logprob: -14.250055313110352

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011941560078412294
    2. '0' → logprob: -6.751194000244141
    3. ' ' → logprob: -11.00119400024414
    4. '[' → logprob: -12.62619400024414
    5. '2' → logprob: -13.37619400024414
    6. '   ' → logprob: -14.56369400024414
    7. '-' → logprob: -14.87619400024414
    8. ']' → logprob: -14.93869400024414
    9. '```' → logprob: -15.50119400024414
    10. '' → logprob: -16.37619400024414

Token 105: ']=' (ID: 9539)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6859480142593384
    2. '-=' → logprob: -0.8109480142593384
    3. ' -=' → logprob: -3.310947895050049
    4. ' +=' → logprob: -5.060947895050049
    5. '=' → logprob: -5.935947895050049
    6. ']+=' → logprob: -5.935947895050049
    7. '-' → logprob: -6.310947895050049
    8. '//=' → logprob: -7.185947895050049
    9. ' =' → logprob: -7.435947895050049
    10. ')' → logprob: -9.060948371887207

Token 106: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3071279227733612
    2. ' r' → logprob: -2.1821279525756836
    3. '(r' → logprob: -2.1821279525756836
    4. ' (' → logprob: -3.3071279525756836
    5. '(' → logprob: -6.807127952575684
    6. '((' → logprob: -8.432127952575684
    7. ' ' → logprob: -8.682127952575684
    8. '3' → logprob: -8.932127952575684
    9. '0' → logprob: -9.057127952575684
    10. '1' → logprob: -9.182127952575684

Token 107: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012797261297237128
    2. '1' → logprob: -9.000127792358398
    3. '```' → logprob: -14.500127792358398
    4. '[
' → logprob: -14.625127792358398
    5. '<|end|>' → logprob: -14.625127792358398
    6. '<|end|>' → logprob: -14.750127792358398
    7. '['' → logprob: -15.062627792358398
    8. '[-' → logprob: -15.250127792358398
    9. '0' → logprob: -15.875127792358398
    10. '-' → logprob: -16.0626277923584

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027599421446211636
    2. '0' → logprob: -8.625275611877441
    3. '[' → logprob: -9.875275611877441
    4. ' ' → logprob: -10.375275611877441
    5. '2' → logprob: -11.875275611877441
    6. '   ' → logprob: -12.625275611877441
    7. 'user' → logprob: -14.625275611877441
    8. '-' → logprob: -14.750275611877441
    9. '  ' → logprob: -15.187775611877441
    10. '4' → logprob: -15.250275611877441

Token 109: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4363352358341217
    2. '+' → logprob: -1.0613352060317993
    3. ' -' → logprob: -5.43633508682251
    4. ' +' → logprob: -5.81133508682251
    5. '//' → logprob: -8.686335563659668
    6. '*' → logprob: -10.686335563659668
    7. ' //' → logprob: -11.686335563659668
    8. '+-' → logprob: -11.686335563659668
    9. ')+' → logprob: -11.811335563659668
    10. '   ' → logprob: -11.811335563659668

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014406509581021965
    2. '2' → logprob: -9.375144004821777
    3. ' ' → logprob: -9.750144004821777
    4. '3' → logprob: -14.500144004821777
    5. '  ' → logprob: -16.625144958496094
    6. '   ' → logprob: -16.875144958496094
    7. '7' → logprob: -17.250144958496094
    8. '           ' → logprob: -17.375144958496094
    9. '0' → logprob: -17.625144958496094
    10. '4' → logprob: -17.750144958496094

Token 111: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.19532738626003265
    2. '           ' → logprob: -2.5703272819519043
    3. 'r' (adapté à ' r') → logprob: -2.9453272819519043
    4. '       ' → logprob: -3.1953272819519043
    5. '   ' → logprob: -5.820327281951904
    6. ' ' → logprob: -6.070327281951904
    7. '<|end|>' → logprob: -8.320327758789062
    8. ' else' → logprob: -8.695327758789062
    9. ' return' → logprob: -8.695327758789062
    10. '[' → logprob: -8.695327758789062

Token 114: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7954958821064793e-05
    2. ''[' → logprob: -12.125018119812012
    3. ' [' → logprob: -12.875018119812012
    4. '1' → logprob: -13.125018119812012
    5. '[
' → logprob: -13.500018119812012
    6. '0' → logprob: -13.500018119812012
    7. '```' → logprob: -13.750018119812012
    8. '   ' → logprob: -14.125018119812012
    9. '    ' → logprob: -14.875018119812012
    10. '"[' → logprob: -15.000018119812012

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17978297173976898
    2. '1' → logprob: -1.8047829866409302
    3. '[' → logprob: -10.80478286743164
    4. '   ' → logprob: -12.36728286743164
    5. ' ' → logprob: -12.36728286743164
    6. '2' → logprob: -13.17978286743164
    7. '```' → logprob: -14.17978286743164
    8. ']' → logprob: -14.30478286743164
    9. '    ' → logprob: -15.11728286743164
    10. '#' → logprob: -15.17978286743164

Token 116: ']+' (ID: 15344)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5038695931434631
    2. '=' → logprob: -1.2538695335388184
    3. ']+=' → logprob: -2.7538695335388184
    4. ' =' → logprob: -4.003869533538818
    5. ' +=' → logprob: -4.003869533538818
    6. ')' → logprob: -6.253869533538818
    7. ']' → logprob: -6.378869533538818
    8. ']=' → logprob: -6.503869533538818
    9. '=r' → logprob: -6.878869533538818
    10. '+=(' → logprob: -7.003869533538818

Token 117: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011121392250061035
    2. '=r' → logprob: -4.5111212730407715
    3. '=(' → logprob: -10.26112174987793
    4. '+=' → logprob: -11.26112174987793
    5. '=int' → logprob: -12.01112174987793
    6. '=
' → logprob: -12.76112174987793
    7. '='' → logprob: -12.76112174987793
    8. '=n' → logprob: -13.01112174987793
    9. '=p' → logprob: -13.76112174987793
    10. '=len' → logprob: -13.76112174987793

Token 118: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00866113230586052
    2. ' r' → logprob: -4.758661270141602
    3. '(r' → logprob: -10.883661270141602
    4. '1' → logprob: -11.758661270141602
    5. '2' → logprob: -12.133661270141602
    6. ' ' → logprob: -12.383661270141602
    7. '   ' → logprob: -12.633661270141602
    8. ' (' → logprob: -12.883661270141602
    9. '(' → logprob: -13.383661270141602
    10. '0' → logprob: -13.758661270141602

Token 119: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18008430302143097
    2. '1' → logprob: -1.8050843477249146
    3. '][' → logprob: -8.430084228515625
    4. ' ' → logprob: -10.305084228515625
    5. ' [' → logprob: -10.555084228515625
    6. ']' → logprob: -10.680084228515625
    7. '[
' → logprob: -10.930084228515625
    8. '
' → logprob: -12.180084228515625
    9. '0' → logprob: -12.930084228515625
    10. '   ' → logprob: -13.555084228515625

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.106736039626412e-05
    2. '0' → logprob: -10.750031471252441
    3. ' ' → logprob: -11.625031471252441
    4. '   ' → logprob: -15.750031471252441
    5. '2' → logprob: -16.125030517578125
    6. ']' → logprob: -16.812530517578125
    7. ')' → logprob: -16.937530517578125
    8. '[' → logprob: -17.312530517578125
    9. '])' → logprob: -17.562530517578125
    10. '-' → logprob: -17.750030517578125

Token 121: ']' (ID: 60)
  Prédit: ')//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.012787329964339733
    2. '//' → logprob: -4.637787342071533
    3. ')' → logprob: -5.887787342071533
    4. ']' → logprob: -10.012786865234375
    5. ' )' → logprob: -10.012786865234375
    6. '']//' → logprob: -10.012786865234375
    7. '}//' → logprob: -10.137786865234375
    8. ' //' → logprob: -10.637786865234375
    9. '   ' → logprob: -11.012786865234375
    10. '>//' → logprob: -11.512786865234375

Token 122: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.08966106176376343
    2. ')//' → logprob: -2.464661121368408
    3. ')' → logprob: -7.589661121368408
    4. '//=' → logprob: -8.83966064453125
    5. ' //' → logprob: -9.96466064453125
    6. '#' → logprob: -12.08966064453125
    7. '']//' → logprob: -13.08966064453125
    8. '2' → logprob: -13.08966064453125
    9. '   ' → logprob: -13.21466064453125
    10. '>//' → logprob: -13.46466064453125

Token 123: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018041854491457343
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -14.8751802444458
    4. '  ' → logprob: -15.7501802444458
    5. '4' → logprob: -16.562681198120117
    6. ')' → logprob: -16.937681198120117
    7. '    ' → logprob: -17.187681198120117
    8. '     ' → logprob: -17.375181198120117
    9. '```' → logprob: -17.625181198120117
    10. '       ' → logprob: -17.875181198120117

Token 124: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014222152531147003
    2. ')
' → logprob: -4.264222145080566
    3. '           ' → logprob: -11.014222145080566
    4. ')//' → logprob: -11.264222145080566
    5. '       ' → logprob: -12.139222145080566
    6. ')
' → logprob: -12.514222145080566
    7. '*' → logprob: -12.639222145080566
    8. ' )' → logprob: -12.764222145080566
    9. ')#' → logprob: -12.889222145080566
    10. ')

' → logprob: -13.139222145080566

Token 125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.061654362827539444
    2. 'r' → logprob: -2.9366543292999268
    3. '       ' → logprob: -5.311654567718506
    4. ' r' → logprob: -6.811654567718506
    5. '   ' → logprob: -8.061654090881348
    6. '<|end|>' → logprob: -9.186654090881348
    7. '```' → logprob: -9.561654090881348
    8. '		' → logprob: -9.686654090881348
    9. ' ' → logprob: -10.686654090881348
    10. '	       ' → logprob: -10.811654090881348

Token 126: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.007689328398555517
    2. ' r' → logprob: -4.882689476013184
    3. '           ' → logprob: -9.507689476013184
    4. '   ' → logprob: -12.632689476013184
    5. ' ' → logprob: -13.257689476013184
    6. '0' → logprob: -14.007689476013184
    7. '       ' → logprob: -14.132689476013184
    8. '1' → logprob: -14.882689476013184
    9. '  ' → logprob: -14.882689476013184
    10. '          ' → logprob: -15.007689476013184

Token 127: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -14.125000953674316
    3. '```' → logprob: -16.5
    4. '0' → logprob: -17.625
    5. '\[' → logprob: -17.625
    6. '[
' → logprob: -17.75
    7. '=' → logprob: -18.5
    8. ' [' → logprob: -18.625
    9. '#' → logprob: -19.25
    10. ''[' → logprob: -19.25

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002043748099822551
    2. '0' → logprob: -8.500204086303711
    3. ' ' → logprob: -14.375204086303711
    4. '2' → logprob: -16.37520408630371
    5. '   ' → logprob: -16.87520408630371
    6. '```' → logprob: -18.56270408630371
    7. '
' → logprob: -19.12520408630371
    8. '[' → logprob: -19.37520408630371
    9. '-' → logprob: -19.37520408630371
    10. '  ' → logprob: -19.50020408630371

Token 129: ']' (ID: 60)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.00035083942930214107
    2. '//' → logprob: -8.000350952148438
    3. ')//' → logprob: -12.000350952148438
    4. '=' → logprob: -12.375350952148438
    5. ' //' → logprob: -12.750350952148438
    6. ')' → logprob: -13.250350952148438
    7. '/=' → logprob: -16.250350952148438
    8. '   ' → logprob: -16.750350952148438
    9. ' ' → logprob: -17.500350952148438
    10. '}//' → logprob: -17.500350952148438

Token 130: '//=' (ID: 171954)
  Prédit: '//='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -5.240481914370321e-05
    2. '//' → logprob: -10.125052452087402
    3. '=' → logprob: -11.375052452087402
    4. ' //' → logprob: -14.500052452087402
    5. '/=' → logprob: -16.125051498413086
    6. '>>' → logprob: -16.375051498413086
    7. '-=' → logprob: -16.875051498413086
    8. '+=' → logprob: -18.125051498413086
    9. ')//' → logprob: -18.625051498413086
    10. '{//' → logprob: -18.750051498413086

Token 131: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '1' → logprob: -17.750001907348633
    4. '   ' → logprob: -18.125001907348633
    5. '```' → logprob: -18.250001907348633
    6. '  ' → logprob: -18.875001907348633
    7. '۲' → logprob: -19.062501907348633
    8. 'def' → logprob: -19.562501907348633
    9. '
' → logprob: -19.625001907348633
    10. '3' → logprob: -19.812501907348633

Token 132: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32036134600639343
    2. '<|end|>' → logprob: -1.9453613758087158
    3. ')' → logprob: -2.195361375808716
    4. '\n' → logprob: -5.320361137390137
    5. '    ' → logprob: -5.820361137390137
    6. '       ' → logprob: -5.820361137390137
    7. '\' → logprob: -6.195361137390137
    8. ' ' → logprob: -6.695361137390137
    9. '(' → logprob: -7.695361137390137
    10. ']' → logprob: -7.695361137390137

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.181052565574646
    2. '\n' → logprob: -2.8060526847839355
    3. ' ' → logprob: -3.3060526847839355
    4. '<|end|>' → logprob: -3.5560526847839355
    5. '       ' → logprob: -4.1810526847839355
    6. ' 
' → logprob: -4.9310526847839355
    7. '    
' → logprob: -5.6810526847839355
    8. '    ' → logprob: -5.8060526847839355
    9. 'return' → logprob: -6.5560526847839355
    10. '
' → logprob: -6.5560526847839355

Token 134: ' yield' (ID: 14376)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8103329539299011
    2. '<|end|>' → logprob: -0.9353329539299011
    3. ' ' → logprob: -2.810333013534546
    4. ')' → logprob: -3.310333013534546
    5. '\n' → logprob: -3.685333013534546
    6. 'return' → logprob: -4.935332775115967
    7. '    ' → logprob: -4.935332775115967
    8. '\' → logprob: -5.560332775115967
    9. ' return' → logprob: -5.560332775115967
    10. ':return' → logprob: -6.060332775115967

Token 135: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.061722274869680405
    2. ' r' → logprob: -3.1867222785949707
    3. 'from' → logprob: -4.561722278594971
    4. 'None' → logprob: -6.061722278594971
    5. ' from' → logprob: -6.811722278594971
    6. '(r' → logprob: -6.811722278594971
    7. '0' → logprob: -6.811722278594971
    8. ' ' → logprob: -7.686722278594971
    9. 'A' → logprob: -7.811722278594971
    10. ' None' → logprob: -8.061721801757812

Token 136: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.352525532245636
    2. '.' → logprob: -1.6025254726409912
    3. ',' → logprob: -3.352525472640991
    4. '<|end|>' → logprob: -3.602525472640991
    5. ')' → logprob: -4.10252571105957
    6. ']' → logprob: -5.10252571105957
    7. '(' → logprob: -5.35252571105957
    8. ' ' → logprob: -6.85252571105957
    9. '[
' → logprob: -6.85252571105957
    10. '#' → logprob: -6.97752571105957

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16987255215644836
    2. '2' → logprob: -1.919872522354126
    3. '1' → logprob: -5.669872760772705
    4. '-' → logprob: -6.044872760772705
    5. '3' → logprob: -6.669872760772705
    6. ']' → logprob: -6.669872760772705
    7. '])' → logprob: -6.919872760772705
    8. ' ' → logprob: -9.294872283935547
    9. ')' → logprob: -10.419872283935547
    10. ':' → logprob: -11.044872283935547

Token 138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.056370820850133896
    2. ',' → logprob: -3.306370735168457
    3. '+' → logprob: -4.431370735168457
    4. ' ]' → logprob: -6.181370735168457
    5. '}' → logprob: -6.431370735168457
    6. ')' → logprob: -7.056370735168457
    7. '<|end|>' → logprob: -7.181370735168457
    8. ' ,' → logprob: -8.556370735168457
    9. ' +' → logprob: -8.681370735168457
    10. '%' → logprob: -9.431370735168457

Token 139: ' ;' (ID: 4605)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' yield' (ID: 14376)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4055500030517578
    2. 'yield' → logprob: -1.4055500030517578
    3. '<|end|>' → logprob: -2.655550003051758
    4. 'def' → logprob: -5.155550003051758
    5. 'return' → logprob: -5.905550003051758
    6. ' ' → logprob: -6.280550003051758
    7. '   ' → logprob: -6.405550003051758
    8. '    ' → logprob: -7.030550003051758
    9. ' r' → logprob: -7.530550003051758
    10. ',' → logprob: -7.655550003051758

Token 141: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11302269250154495
    2. ' r' → logprob: -2.238022804260254
    3. ' from' → logprob: -9.613022804260254
    4. 'from' → logprob: -9.863022804260254
    5. ' ' → logprob: -10.488022804260254
    6. '0' → logprob: -11.238022804260254
    7. '(r' → logprob: -11.863022804260254
    8. ''' → logprob: -12.113022804260254
    9. '   ' → logprob: -12.363022804260254
    10. '  ' → logprob: -12.363022804260254

Token 142: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001063771080225706
    2. '<|end|>' → logprob: -7.626063823699951
    3. '[
' → logprob: -8.126063346862793
    4. '.' → logprob: -9.626063346862793
    5. ']' → logprob: -10.001063346862793
    6. '(' → logprob: -10.126063346862793
    7. '0' → logprob: -10.376063346862793
    8. ')' → logprob: -10.751063346862793
    9. '[-' → logprob: -11.126063346862793
    10. '[]' → logprob: -12.126063346862793

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.750006675720215
    3. '0' → logprob: -13.500006675720215
    4. ']' → logprob: -13.750006675720215
    5. '[' → logprob: -14.625006675720215
    6. '   ' → logprob: -15.562506675720215
    7. '-' → logprob: -16.1875057220459
    8. '2' → logprob: -16.3125057220459
    9. '```' → logprob: -17.2500057220459
    10. ')' → logprob: -17.3750057220459

Token 144: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031871015671640635
    2. ',' → logprob: -6.25318717956543
    3. ' ]' → logprob: -6.75318717956543
    4. ')' → logprob: -11.12818717956543
    5. ' ,' → logprob: -11.12818717956543
    6. ']
' → logprob: -11.37818717956543
    7. '}' → logprob: -11.37818717956543
    8. ';' → logprob: -11.37818717956543
    9. '']' → logprob: -12.25318717956543
    10. '];' → logprob: -12.62818717956543

Token 145: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' execute' (ID: 15792)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.46299105882644653
    2. ' bizarre' → logprob: -1.4629909992218018
    3. ' test' → logprob: -3.3379909992218018
    4. ' weird' → logprob: -3.5879909992218018
    5. ' strange' → logprob: -4.337991237640381
    6. ' normal' → logprob: -4.712991237640381
    7. ' solve' → logprob: -4.962991237640381
    8. ' solution' → logprob: -5.087991237640381
    9. ' run' → logprob: -5.462991237640381
    10. ' ' → logprob: -6.087991237640381

Token 147: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3214757740497589
    2. '(*' → logprob: -1.3214757442474365
    3. '(' → logprob: -5.321475982666016
    4. '(x' → logprob: -6.946475982666016
    5. '(b' → logprob: -7.446475982666016
    6. '():
' → logprob: -7.571475982666016
    7. '(*)' → logprob: -7.946475982666016
    8. 'def' → logprob: -9.071475982666016
    9. '()' → logprob: -9.071475982666016
    10. ' ():' → logprob: -9.196475982666016

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.635347843170166
    2. ' for' → logprob: -0.760347843170166
    3. 'for' → logprob: -7.010347843170166
    4. ' next' → logprob: -7.385347843170166
    5. ' return' → logprob: -7.760347843170166
    6. 'b' → logprob: -9.135347366333008
    7. '    
' → logprob: -9.635347366333008
    8. ' r' → logprob: -9.760347366333008
    9. ' b' → logprob: -9.885347366333008
    10. '```' → logprob: -9.885347366333008

Token 149: ' import' (ID: 1588)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1124262884259224
    2. 'yield' → logprob: -3.237426280975342
    3. 'return' → logprob: -3.987426280975342
    4. 'result' → logprob: -4.112426280975342
    5. ' for' → logprob: -4.862426280975342
    6. 'b' → logprob: -4.862426280975342
    7. '   ' → logprob: -5.112426280975342
    8. 'r' → logprob: -5.862426280975342
    9. 'res' → logprob: -5.987426280975342
    10. 'gen' → logprob: -6.862426280975342

Token 150: ' sys' (ID: 12228)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.8075008988380432
    2. ' random' → logprob: -1.8075008392333984
    3. 'sys' → logprob: -2.0575008392333984
    4. ' math' → logprob: -2.3075008392333984
    5. 'math' → logprob: -2.5575008392333984
    6. ' sys' → logprob: -2.8075008392333984
    7. ' itertools' → logprob: -4.057500839233398
    8. 'os' → logprob: -6.182500839233398
    9. ' os' → logprob: -6.807500839233398
    10. 'b' → logprob: -7.557500839233398

Token 151: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025249123573303223
    2. '    
' → logprob: -5.025249004364014
    3. '
' → logprob: -5.150249004364014
    4. 'input' → logprob: -5.650249004364014
    5. '[' → logprob: -6.025249004364014
    6. 'def' → logprob: -6.775249004364014
    7. '.readline' → logprob: -6.900249004364014
    8. '[]' → logprob: -7.525249004364014
    9. ',' → logprob: -7.525249004364014
    10. 'for' → logprob: -7.900249004364014

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026246467605233192
    2. '    
' → logprob: -7.62762451171875
    3. '
' → logprob: -7.75262451171875
    4. 'def' → logprob: -8.00262451171875
    5. 'input' → logprob: -8.12762451171875
    6. 'import' → logprob: -8.50262451171875
    7. ' for' → logprob: -8.50262451171875
    8. 'for' → logprob: -8.50262451171875
    9. ',' → logprob: -9.37762451171875
    10. ';' → logprob: -9.62762451171875

Token 153: ' N' (ID: 478)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8210907578468323
    2. ' data' → logprob: -1.4460906982421875
    3. '   ' → logprob: -1.6960906982421875
    4. ' for' → logprob: -2.5710906982421875
    5. 'for' → logprob: -3.4460906982421875
    6. ' input' → logprob: -4.6960906982421875
    7. 'input' → logprob: -4.6960906982421875
    8. 'd' → logprob: -5.8210906982421875
    9. 'def' → logprob: -6.0710906982421875
    10. ' lines' → logprob: -6.4460906982421875

Token 154: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02389320358633995
    2. '=' → logprob: -3.773893117904663
    3. ',' → logprob: -7.398893356323242
    4. '   ' → logprob: -10.898893356323242
    5. ' ' → logprob: -12.023893356323242
    6. '=int' → logprob: -12.273893356323242
    7. '=sys' → logprob: -13.148893356323242
    8. ' ,' → logprob: -13.398893356323242
    9. '    ' → logprob: -14.023893356323242
    10. '  ' → logprob: -14.023893356323242

Token 155: ';' (ID: 26)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.47429922223091125
    2. '(' → logprob: -0.9742991924285889
    3. '('' → logprob: -8.849299430847168
    4. '(input' → logprob: -10.099299430847168
    5. ' (' → logprob: -11.724299430847168
    6. '(Sys' → logprob: -11.724299430847168
    7. '=sys' → logprob: -12.599299430847168
    8. '(
' → logprob: -12.599299430847168
    9. '(System' → logprob: -12.724299430847168
    10. '(system' → logprob: -12.849299430847168

Token 156: ' f' (ID: 285)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.976438581943512
    2. ' data' → logprob: -1.1014385223388672
    3. 'exec' → logprob: -2.726438522338867
    4. 'input' → logprob: -2.851438522338867
    5. ' input' → logprob: -3.226438522338867
    6. ' exec' → logprob: -3.476438522338867
    7. 'sys' → logprob: -3.851438522338867
    8. 'for' → logprob: -4.101438522338867
    9. 'N' → logprob: -4.476438522338867
    10. ' sys' → logprob: -4.851438522338867

Token 157: '=sys' (ID: 149200)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.300390601158142
    2. 'ile' → logprob: -1.300390601158142
    3. '=sys' → logprob: -1.300390601158142
    4. '=open' → logprob: -2.1753907203674316
    5. '=' → logprob: -3.1753907203674316
    6. 'ilename' → logprob: -4.675390720367432
    7. 'or' → logprob: -5.175390720367432
    8. '.readline' → logprob: -6.425390720367432
    9. ' ' → logprob: -6.550390720367432
    10. 'rom' → logprob: -6.550390720367432

Token 158: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.04443740099668503
    2. 'stdin' → logprob: -3.6694374084472656
    3. '.argv' → logprob: -4.544437408447266
    4. '.stdout' → logprob: -5.169437408447266
    5. '.' → logprob: -8.294437408447266
    6. '.modules' → logprob: -8.419437408447266
    7. 'argv' → logprob: -8.419437408447266
    8. '<|end|>' → logprob: -8.669437408447266
    9. '.version' → logprob: -8.919437408447266
    10. '(stdin' → logprob: -9.169437408447266

Token 159: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.20669426023960114
    2. 'read' → logprob: -1.70669424533844
    3. '.readlines' → logprob: -6.58169412612915
    4. 'buffer' → logprob: -6.83169412612915
    5. '.read' → logprob: -6.83169412612915
    6. '.' → logprob: -7.45669412612915
    7. '<|end|>' → logprob: -7.70669412612915
    8. 'reader' → logprob: -8.331694602966309
    9. ' readline' → logprob: -9.331694602966309
    10. '_read' → logprob: -9.331694602966309

Token 160: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011778471525758505
    2. '()
' → logprob: -7.751177787780762
    3. '<|end|>' → logprob: -7.876177787780762
    4. '().' → logprob: -9.251177787780762
    5. '();' → logprob: -9.251177787780762
    6. '(' → logprob: -10.126177787780762
    7. '<|end|>' → logprob: -10.251177787780762
    8. 'def' → logprob: -10.751177787780762
    9. '()

' → logprob: -11.251177787780762
    10. '
' → logprob: -11.501177787780762

Token 161: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31492313742637634
    2. '   ' → logprob: -1.4399231672286987
    3. 'data' → logprob: -4.814923286437988
    4. '()
' → logprob: -4.814923286437988
    5. '();' → logprob: -5.314923286437988
    6. '<|end|>' → logprob: -5.439923286437988
    7. '
' → logprob: -7.314923286437988
    8. ' data' → logprob: -7.439923286437988
    9. ';' → logprob: -7.439923286437988
    10. ' for' → logprob: -7.439923286437988

Token 162: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8377804160118103
    2. 'for' → logprob: -1.087780475616455
    3. 'n' → logprob: -2.587780475616455
    4. '   ' → logprob: -3.462780475616455
    5. 'data' → logprob: -3.962780475616455
    6. ' n' → logprob: -4.212780475616455
    7. ' res' → logprob: -4.337780475616455
    8. 'res' → logprob: -4.587780475616455
    9. 'r' → logprob: -5.212780475616455
    10. 's' → logprob: -5.337780475616455

Token 163: ',y' (ID: 16103)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16051331162452698
    2. '=' → logprob: -1.9105132818222046
    3. ',' → logprob: -8.410512924194336
    4. '=f' → logprob: -10.285512924194336
    5. '=[]' → logprob: -10.910512924194336
    6. ' ' → logprob: -13.285512924194336
    7. 's' → logprob: -13.535512924194336
    8. '=int' → logprob: -13.535512924194336
    9. ' ,' → logprob: -13.785512924194336
    10. ' =[' → logprob: -14.160512924194336

Token 164: ',z' (ID: 54920)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17031964659690857
    2. ' =' → logprob: -1.920319676399231
    3. ',' → logprob: -4.670319557189941
    4. ',z' → logprob: -8.670319557189941
    5. '=f' → logprob: -9.295319557189941
    6. ',f' → logprob: -9.420319557189941
    7. ',x' → logprob: -9.420319557189941
    8. ' ,' → logprob: -10.670319557189941
    9. '=int' → logprob: -10.670319557189941
    10. ',y' → logprob: -10.795319557189941

Token 165: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024548891931772232
    2. ' =' → logprob: -3.8995490074157715
    3. '=f' → logprob: -5.5245490074157715
    4. '=input' → logprob: -12.649548530578613
    5. ',' → logprob: -13.149548530578613
    6. '=sys' → logprob: -13.399548530578613
    7. '=int' → logprob: -14.274548530578613
    8. '=line' → logprob: -14.524548530578613
    9. '=x' → logprob: -14.899548530578613
    10. '=s' → logprob: -15.024548530578613

Token 166: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.41551992297172546
    2. 'int' → logprob: -1.1655199527740479
    3. 'map' → logprob: -4.290519714355469
    4. ' N' → logprob: -5.165519714355469
    5. ' map' → logprob: -5.290519714355469
    6. ' int' → logprob: -5.915519714355469
    7. '*' → logprob: -7.415519714355469
    8. ' ' → logprob: -8.665519714355469
    9. '*N' → logprob: -9.040519714355469
    10. '0' → logprob: -9.665519714355469

Token 167: '(u' (ID: 17057)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.03370309993624687
    2. '(int' → logprob: -4.033703327178955
    3. '()' → logprob: -4.533703327178955
    4. '()]' → logprob: -6.033703327178955
    5. '(' → logprob: -7.408703327178955
    6. '().' → logprob: -7.408703327178955
    7. '()(' → logprob: -8.408702850341797
    8. '(),' → logprob: -8.408702850341797
    9. '(map' → logprob: -8.533702850341797
    10. '(i' → logprob: -9.283702850341797

Token 168: ')' (ID: 8)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.008184741251170635
    2. ')' → logprob: -5.758184909820557
    3. '())' → logprob: -6.758184909820557
    4. '().' → logprob: -7.008184909820557
    5. 'f' → logprob: -7.383184909820557
    6. '()' → logprob: -7.508184909820557
    7. '.strip' → logprob: -8.133184432983398
    8. '(' → logprob: -8.383184432983398
    9. ')]' → logprob: -8.383184432983398
    10. '(int' → logprob: -8.883184432983398

Token 169: ' for' (ID: 395)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0008350008283741772
    2. 'for' → logprob: -8.500835418701172
    3. 'f' → logprob: -8.625835418701172
    4. ' (' → logprob: -8.625835418701172
    5. '(' → logprob: -9.000835418701172
    6. ' for' → logprob: -9.375835418701172
    7. '()' → logprob: -10.500835418701172
    8. ')' → logprob: -11.750835418701172
    9. '(x' → logprob: -11.875835418701172
    10. '=f' → logprob: -12.500835418701172

Token 170: ' u' (ID: 337)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5760760307312012
    2. ' f' → logprob: -0.8260760307312012
    3. ' ' → logprob: -9.82607650756836
    4. '(f' → logprob: -10.45107650756836
    5. 'u' → logprob: -11.07607650756836
    6. ' u' → logprob: -11.32607650756836
    7. '  ' → logprob: -11.95107650756836
    8. '	f' → logprob: -12.32607650756836
    9. '   ' → logprob: -12.32607650756836
    10. ' ' → logprob: -13.38857650756836

Token 171: ' in' (ID: 306)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.7641621232032776
    2. '(f' → logprob: -0.7641621232032776
    3. '(' → logprob: -3.389162063598633
    4. 'f' → logprob: -3.764162063598633
    5. ' (' → logprob: -4.764162063598633
    6. ' in' → logprob: -5.889162063598633
    7. ' ' → logprob: -8.639162063598633
    8. '  ' → logprob: -10.389162063598633
    9. '	f' → logprob: -10.514162063598633
    10. 'in' → logprob: -10.889162063598633

Token 172: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07895610481500626
    2. ' f' → logprob: -2.578956127166748
    3. ' ' → logprob: -10.07895565032959
    4. '   ' → logprob: -11.20395565032959
    5. '	f' → logprob: -12.32895565032959
    6. '  ' → logprob: -12.57895565032959
    7. '    ' → logprob: -13.45395565032959
    8. '(f' → logprob: -14.32895565032959
    9. '     ' → logprob: -15.95395565032959
    10. '[f' → logprob: -16.078956604003906

Token 173: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4140441635390744e-05
    2. '()' → logprob: -11.250014305114746
    3. ' ().' → logprob: -14.625014305114746
    4. '(' → logprob: -14.875014305114746
    5. '('' → logprob: -15.875014305114746
    6. '()]' → logprob: -16.37501335144043
    7. '('').' → logprob: -17.25001335144043
    8. '().'' → logprob: -18.00001335144043
    9. '()[' → logprob: -18.25001335144043
    10. '()].' → logprob: -18.62501335144043

Token 174: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.12716422975063324
    2. 'split' → logprob: -2.377164125442505
    3. 'rstrip' → logprob: -3.627164125442505
    4. ' strip' → logprob: -12.752163887023926
    5. 'read' → logprob: -13.752163887023926
    6. 'decode' → logprob: -14.252163887023926
    7. '(strip' → logprob: -14.502163887023926
    8. '(split' → logprob: -15.002163887023926
    9. ' split' → logprob: -15.127163887023926
    10. ' ' → logprob: -16.627164840698242

Token 175: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0004688034241553396
    2. ']' → logprob: -8.000469207763672
    3. '(' → logprob: -9.375469207763672
    4. '()' → logprob: -10.375469207763672
    5. '('' → logprob: -11.500469207763672
    6. ')]' → logprob: -12.125469207763672
    7. '())' → logprob: -14.375469207763672
    8. '()],' → logprob: -14.875469207763672
    9. '()]
' → logprob: -15.125469207763672
    10. '`]' → logprob: -15.625469207763672

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2937219142913818
    2. ' for' → logprob: -1.4187219142913818
    3. '<|end|>' → logprob: -1.4187219142913818
    4. '
' → logprob: -1.6687219142913818
    5. '    
' → logprob: -4.418722152709961
    6. ',' → logprob: -4.793722152709961
    7. '  
' → logprob: -5.043722152709961
    8. ' 
' → logprob: -5.168722152709961
    9. '<|end|>' → logprob: -5.168722152709961
    10. 'for' → logprob: -5.293722152709961

Token 177: ' res' (ID: 694)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4998975694179535
    2. 'for' → logprob: -0.9998975992202759
    3. '   ' → logprob: -4.374897480010986
    4. '
' → logprob: -4.749897480010986
    5. 'def' → logprob: -6.999897480010986
    6. '    
' → logprob: -7.249897480010986
    7. 'b' → logprob: -7.249897480010986
    8. '<|end|>' → logprob: -7.624897480010986
    9. 'result' → logprob: -7.749897480010986
    10. 'r' → logprob: -8.499897956848145

Token 178: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34853890538215637
    2. ' =' → logprob: -1.223538875579834
    3. ',' → logprob: -10.598539352416992
    4. '=[]' → logprob: -10.723539352416992
    5. 's' → logprob: -11.723539352416992
    6. '=list' → logprob: -12.473539352416992
    7. '=

' → logprob: -12.473539352416992
    8. '=
' → logprob: -12.598539352416992
    9. '=b' → logprob: -12.848539352416992
    10. 'for' → logprob: -12.848539352416992

Token 179: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -7.982165698194876e-05
    2. '(' → logprob: -9.500080108642578
    3. ' (' → logprob: -12.875080108642578
    4. 'b' → logprob: -13.375080108642578
    5. '(
' → logprob: -15.250080108642578
    6. ')b' → logprob: -16.000080108642578
    7. '((' → logprob: -16.625080108642578
    8. '()' → logprob: -16.750080108642578
    9. '=b' → logprob: -17.000080108642578
    10. '	b' → logprob: -17.375080108642578

Token 180: 'izarre' (ID: 54933)
  Prédit: 'izarre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izarre' → logprob: -6.968934758333489e-05
    2. 'izzare' → logprob: -10.250069618225098
    3. 'z' → logprob: -10.875069618225098
    4. 'izar' → logprob: -11.500069618225098
    5. ' bizarre' → logprob: -13.250069618225098
    6. 'iz' → logprob: -13.625069618225098
    7. 'izare' → logprob: -13.750069618225098
    8. 'zar' → logprob: -14.625069618225098
    9. 'r' → logprob: -15.500069618225098
    10. 'izz' → logprob: -16.125070571899414

Token 181: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16277843713760376
    2. '((' → logprob: -2.287778377532959
    3. '(' → logprob: -3.037778377532959
    4. '(y' → logprob: -8.162778854370117
    5. '([' → logprob: -8.412778854370117
    6. ' (' → logprob: -8.662778854370117
    7. '(
' → logprob: -10.412778854370117
    8. ')' → logprob: -10.412778854370117
    9. ')(' → logprob: -10.912778854370117
    10. '(z' → logprob: -11.287778854370117

Token 182: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.11334600299596786
    2. ',' → logprob: -2.2383460998535156
    3. ' ,' → logprob: -7.613346099853516
    4. 'y' → logprob: -11.613346099853516
    5. '(' → logprob: -12.113346099853516
    6. '(y' → logprob: -12.113346099853516
    7. ' y' → logprob: -12.863346099853516
    8. ' ' → logprob: -12.863346099853516
    9. '   ' → logprob: -13.988346099853516
    10. '  ' → logprob: -14.363346099853516

Token 183: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.0013180967653170228
    2. ',' → logprob: -6.751317977905273
    3. 'z' → logprob: -9.126317977905273
    4. ' ,' → logprob: -10.251317977905273
    5. ' z' → logprob: -13.251317977905273
    6. ',x' → logprob: -14.626317977905273
    7. ',y' → logprob: -15.001317977905273
    8. '	z' → logprob: -15.251317977905273
    9. ',Z' → logprob: -15.626317977905273
    10. '   ' → logprob: -15.626317977905273

Token 184: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00012737659562844783
    2. ')' → logprob: -9.375127792358398
    3. '))
' → logprob: -10.375127792358398
    4. ')))' → logprob: -11.500127792358398
    5. ' ))' → logprob: -14.250127792358398
    6. '()))' → logprob: -15.500127792358398
    7. '))

' → logprob: -15.750127792358398
    8. '));' → logprob: -15.875127792358398
    9. '),' → logprob: -17.5001277923584
    10. ''))' → logprob: -17.6251277923584

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17985735833644867
    2. '<|end|>' → logprob: -2.1798572540283203
    3. '
' → logprob: -3.1798572540283203
    4. ')' → logprob: -5.05485725402832
    5. '<|end|>' → logprob: -7.67985725402832
    6. '[' → logprob: -7.67985725402832
    7. '    
' → logprob: -7.92985725402832
    8. '```' → logprob: -8.05485725402832
    9. ' ' → logprob: -8.17985725402832
    10. 'print' → logprob: -8.30485725402832

Token 186: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.15748345851898193
    2. 'for' → logprob: -2.0324835777282715
    3. 'return' → logprob: -4.9074835777282715
    4. '   ' → logprob: -5.2824835777282715
    5. ' for' → logprob: -6.2824835777282715
    6. 'res' → logprob: -8.782483100891113
    7. ' print' → logprob: -8.907483100891113
    8. 'def' → logprob: -10.907483100891113
    9. 'if' → logprob: -11.157483100891113
    10. ' return' → logprob: -11.282483100891113

Token 187: '(res' (ID: 8331)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.13191549479961395
    2. '(res' → logprob: -2.13191556930542
    3. '(' → logprob: -5.38191556930542
    4. 'res' → logprob: -8.631915092468262
    5. '('' → logprob: -8.756915092468262
    6. '(*(' → logprob: -10.631915092468262
    7. ' (*' → logprob: -12.131915092468262
    8. '(f' → logprob: -12.756915092468262
    9. '(sum' → logprob: -13.506915092468262
    10. '*' → logprob: -13.631915092468262

Token 188: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000672043883241713
    2. '))' → logprob: -7.500671863555908
    3. '[' → logprob: -9.625672340393066
    4. '])' → logprob: -10.125672340393066
    5. ')`' → logprob: -12.750672340393066
    6. ')")' → logprob: -13.125672340393066
    7. ' )' → logprob: -13.375672340393066
    8. '})' → logprob: -13.500672340393066
    9. ')])' → logprob: -13.500672340393066
    10. '(' → logprob: -14.250672340393066

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0043844361789524555
    2. '-' → logprob: -5.504384517669678
    3. '1' → logprob: -8.50438404083252
    4. ' ' → logprob: -9.62938404083252
    5. ' -' → logprob: -10.87938404083252
    6. '])' → logprob: -11.50438404083252
    7. '   ' → logprob: -13.12938404083252
    8. ']' → logprob: -13.25438404083252
    9. '
' → logprob: -13.37938404083252
    10. '2' → logprob: -14.75438404083252

Token 190: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17732495069503784
    2. ',res' → logprob: -1.9273250102996826
    3. ' ,' → logprob: -4.1773247718811035
    4. ',end' → logprob: -6.9273247718811035
    5. ')' → logprob: -7.5523247718811035
    6. ',r' → logprob: -10.427325248718262
    7. ' )' → logprob: -10.677325248718262
    8. ' ' → logprob: -11.302325248718262
    9. ',)' → logprob: -11.927325248718262
    10. ',result' → logprob: -12.052325248718262

Token 191: 'end' (ID: 419)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.004085047636181116
    2. ' res' → logprob: -5.504085063934326
    3. ''' → logprob: -12.004084587097168
    4. '"' → logprob: -15.379084587097168
    5. 'end' → logprob: -15.629084587097168
    6. '(res' → logprob: -16.629085540771484
    7. ' ' → logprob: -16.879085540771484
    8. ' '' → logprob: -17.129085540771484
    9. '$res' → logprob: -17.629085540771484
    10. ',res' → logprob: -17.879085540771484

Token 192: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.026119373738765717
    2. ''' → logprob: -3.7761194705963135
    3. '="' → logprob: -7.026119232177734
    4. '=' → logprob: -7.151119232177734
    5. '"' → logprob: -7.401119232177734
    6. '('' → logprob: -7.526119232177734
    7. '=',' → logprob: -11.026119232177734
    8. '(' → logprob: -11.151119232177734
    9. ' '' → logprob: -12.276119232177734
    10. '=''' → logprob: -12.401119232177734

Token 193: ' ')
' (ID: 49195)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002315357094630599
    2. '"' → logprob: -6.252315521240234
    3. ' '' → logprob: -7.877315521240234
    4. ' ' → logprob: -12.377315521240234
    5. ' )' → logprob: -14.377315521240234
    6. ''\' → logprob: -14.377315521240234
    7. ' "' → logprob: -14.752315521240234
    8. '',' → logprob: -14.752315521240234
    9. ')' → logprob: -15.002315521240234
    10. '('' → logprob: -15.127315521240234

Token 194: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001239196863025427
    2. 'res' → logprob: -9.000123977661133
    3. ' print' → logprob: -15.625123977661133
    4. '(print' → logprob: -16.250123977661133
    5. '#print' → logprob: -16.500123977661133
    6. 'pr' → logprob: -17.625123977661133
    7. 'println' → logprob: -18.000123977661133
    8. '
' → logprob: -18.125123977661133
    9. '.print' → logprob: -18.125123977661133
    10. '<|end|>' → logprob: -18.625123977661133

Token 195: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. 'res' → logprob: -15.875
    3. ' print' → logprob: -16.0
    4. '#print' → logprob: -18.0
    5. '(print' → logprob: -18.5
    6. '.print' → logprob: -20.0
    7. '
' → logprob: -20.5
    8. 'pr' → logprob: -20.5
    9. '   ' → logprob: -20.5
    10. 'printf' → logprob: -20.875

Token 196: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0010525768157094717
    2. '(' → logprob: -7.251052379608154
    3. '()' → logprob: -8.501052856445312
    4. '(*' → logprob: -9.251052856445312
    5. '('' → logprob: -10.376052856445312
    6. '('\' → logprob: -11.876052856445312
    7. 'res' → logprob: -13.001052856445312
    8. '('',' → logprob: -13.626052856445312
    9. ' (' → logprob: -14.376052856445312
    10. '((' → logprob: -15.751052856445312

Token 197: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. ''[' → logprob: -15.250000953674316
    3. ')' → logprob: -15.500000953674316
    4. '[
' → logprob: -16.000001907348633
    5. '[-' → logprob: -16.125001907348633
    6. '```' → logprob: -16.250001907348633
    7. ' [' → logprob: -16.750001907348633
    8. '1' → logprob: -16.875001907348633
    9. ']' → logprob: -17.000001907348633
    10. ')[' → logprob: -18.125001907348633

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -13.000003814697266
    3. ' ' → logprob: -14.000003814697266
    4. '   ' → logprob: -15.750003814697266
    5. '0' → logprob: -16.375003814697266
    6. '-' → logprob: -16.500003814697266
    7. '  ' → logprob: -18.250003814697266
    8. '`' → logprob: -18.375003814697266
    9. '
' → logprob: -18.500003814697266
    10. '```' → logprob: -18.625003814697266

Token 199: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004429435357451439
    2. '')' → logprob: -8.250442504882812
    3. ',' → logprob: -8.750442504882812
    4. ',end' → logprob: -11.375442504882812
    5. '))' → logprob: -12.375442504882812
    6. ' )' → logprob: -13.125442504882812
    7. ')
' → logprob: -13.750442504882812
    8. ')`' → logprob: -14.125442504882812
    9. ',)' → logprob: -14.500442504882812
    10. '`)' → logprob: -14.875442504882812

Token 200: 'execute' (ID: 21458)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.4868770196917467e-05
    2. '(' → logprob: -12.000024795532227
    3. '();' → logprob: -12.750024795532227
    4. '()<' → logprob: -12.750024795532227
    5. '()
' → logprob: -12.875024795532227
    6. '()`' → logprob: -13.375024795532227
    7. '()>' → logprob: -13.375024795532227
    8. '()">' → logprob: -13.625024795532227
    9. '()]' → logprob: -13.875024795532227
    10. ' ()' → logprob: -13.875024795532227


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 199
Tokens correctement prédits (1ère position, stricte): 78
Tokens correctement prédits (1ère position, avec adaptation): 81
Tokens correctement prédits (top 10): 139
Précision stricte (1ère position): 39.20%
Précision adaptée (1ère position): 40.70%
Précision (top 10): 69.85%
================================================================================
