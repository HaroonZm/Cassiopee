================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
v = input().split()
for i in range(n):
    v[i] = int(v[i])

v.sort()

for i in range(1, n):
    x = v[0]
    y = v[1]
    del v[0]
    del v[0]
    xy = (x + y) / 2
    v.append(xy)
    v.sort()

print(v[0])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '()' → logprob: -12.375107765197754
    8. '("("' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'v' (ID: 85)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0521364212036133
    2. 'for' → logprob: -1.3021364212036133
    3. 'if' → logprob: -1.4271364212036133
    4. 's' → logprob: -3.1771364212036133
    5. 'f' → logprob: -4.177136421203613
    6. 'x' → logprob: -4.177136421203613
    7. 'a' → logprob: -4.552136421203613
    8. ')' → logprob: -4.677136421203613
    9. ' ' → logprob: -4.677136421203613
    10. '*' → logprob: -4.927136421203613

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6570946574211121
    2. 'al' → logprob: -1.1570947170257568
    3. 'a' → logprob: -2.532094717025757
    4. ' =' → logprob: -3.032094717025757
    5. '=' → logprob: -4.032094478607178
    6. '[:]' → logprob: -4.907094478607178
    7. '[a' → logprob: -5.407094478607178
    8. '[i' → logprob: -6.157094478607178
    9. 'alue' → logprob: -6.782094478607178
    10. 'v' → logprob: -6.782094478607178

Token 7: ' input' (ID: 3422)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5332788825035095
    2. '[]' → logprob: -1.0332789421081543
    3. ' [' → logprob: -3.6582789421081543
    4. '[int' → logprob: -4.408278942108154
    5. '[' → logprob: -5.408278942108154
    6. '0' → logprob: -5.783278942108154
    7. 'list' → logprob: -5.908278942108154
    8. '[n' → logprob: -6.033278942108154
    9. 'n' → logprob: -6.158278942108154
    10. 'int' → logprob: -6.533278942108154

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005244385101832449
    2. '()' → logprob: -8.125524520874023
    3. '('' → logprob: -9.375524520874023
    4. ')' → logprob: -10.250524520874023
    5. '```' → logprob: -10.750524520874023
    6. '(
' → logprob: -10.875524520874023
    7. '(

' → logprob: -10.875524520874023
    8. '("("' → logprob: -11.250524520874023
    9. ''' → logprob: -11.750524520874023
    10. ' (' → logprob: -11.750524520874023

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011175490915775299
    2. 'strip' → logprob: -4.511175632476807
    3. ' split' → logprob: -9.136175155639648
    4. 'rstrip' → logprob: -11.386175155639648
    5. 'replace' → logprob: -12.011175155639648
    6. ' strip' → logprob: -13.636175155639648
    7. 'spl' → logprob: -14.761175155639648
    8. 'rs' → logprob: -15.011175155639648
    9. 's' → logprob: -15.136175155639648
    10. '```' → logprob: -16.01117515563965

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03460297733545303
    2. '('' → logprob: -3.7846028804779053
    3. '("("' → logprob: -5.034603118896484
    4. '()' → logprob: -5.534603118896484
    5. '`' → logprob: -9.034603118896484
    6. '((' → logprob: -9.159603118896484
    7. ''' → logprob: -9.284603118896484
    8. '"' → logprob: -9.409603118896484
    9. '(`' → logprob: -9.409603118896484
    10. ' (' → logprob: -9.784603118896484

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7066029906272888
    2. 'v' → logprob: -1.0816030502319336
    3. 'a' → logprob: -2.8316030502319336
    4. 'c' → logprob: -2.8316030502319336
    5. 's' → logprob: -3.8316030502319336
    6. '[' → logprob: -4.706603050231934
    7. 'count' → logprob: -5.831603050231934
    8. 'result' → logprob: -6.081603050231934
    9. 'm' → logprob: -6.206603050231934
    10. 'f' → logprob: -6.331603050231934

Token 12: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.35449251532554626
    2. ' ' → logprob: -1.2294925451278687
    3. '_' → logprob: -6.104492664337158
    4. 'i' → logprob: -7.104492664337158
    5. '  ' → logprob: -7.354492664337158
    6. ' v' → logprob: -7.354492664337158
    7. ' ‌' → logprob: -7.354492664337158
    8. ' _' → logprob: -7.729492664337158
    9. ' ' → logprob: -7.979492664337158
    10. ' n' → logprob: -9.3544921875

Token 13: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5782641172409058
    2. ' in' → logprob: -0.8282641172409058
    3. '  ' → logprob: -7.578264236450195
    4. ' ' → logprob: -7.578264236450195
    5. '_' → logprob: -7.703264236450195
    6. '=' → logprob: -8.578264236450195
    7. '<|end|>' → logprob: -8.703264236450195
    8. 'range' → logprob: -9.703264236450195
    9. ' =' → logprob: -9.828264236450195
    10. 'n' → logprob: -9.953264236450195

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4743434190750122
    2. 'range' → logprob: -0.9743434190750122
    3. ' v' → logprob: -8.599343299865723
    4. 'v' → logprob: -9.599343299865723
    5. '	range' → logprob: -12.474343299865723
    6. '(range' → logprob: -12.724343299865723
    7. 'n' → logprob: -12.849343299865723
    8. ' xrange' → logprob: -13.224343299865723
    9. ' ' → logprob: -13.599343299865723
    10. '_range' → logprob: -14.474343299865723

Token 15: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16030201315879822
    2. '(n' → logprob: -1.9103020429611206
    3. '(len' → logprob: -9.91030216217041
    4. ' (' → logprob: -10.91030216217041
    5. '(i' → logprob: -12.53530216217041
    6. '(
' → logprob: -12.91030216217041
    7. '(range' → logprob: -13.66030216217041
    8. '(v' → logprob: -14.66030216217041
    9. '(length' → logprob: -14.78530216217041
    10. '((' → logprob: -14.91030216217041

Token 16: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10039223730564117
    2. '):' → logprob: -2.3503923416137695
    3. ' )' → logprob: -9.47539234161377
    4. '+' → logprob: -9.85039234161377
    5. ':' → logprob: -11.10039234161377
    6. '[' → logprob: -11.60039234161377
    7. ' ):' → logprob: -11.85039234161377
    8. '):
' → logprob: -12.97539234161377
    9. '-' → logprob: -13.10039234161377
    10. '**' → logprob: -13.22539234161377

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014643508940935135
    2. ' ' → logprob: -5.139643669128418
    3. 'v' → logprob: -6.264643669128418
    4. '    ' → logprob: -6.389643669128418
    5. '    
' → logprob: -6.639643669128418
    6. ' if' → logprob: -6.889643669128418
    7. ' v' → logprob: -7.264643669128418
    8. '```' → logprob: -7.889643669128418
    9. '  ' → logprob: -8.139643669128418
    10. '       ' → logprob: -8.389643669128418

Token 18: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.6262763738632202
    2. '   ' → logprob: -2.0012764930725098
    3. 'if' → logprob: -2.2512764930725098
    4. 'print' → logprob: -2.2512764930725098
    5. ' if' → logprob: -2.8762764930725098
    6. ' v' → logprob: -3.0012764930725098
    7. ' print' → logprob: -5.25127649307251
    8. '    ' → logprob: -5.75127649307251
    9. 'i' → logprob: -5.87627649307251
    10. ' ' → logprob: -7.00127649307251

Token 19: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.39016804099082947
    2. '[' → logprob: -1.1401680707931519
    3. '[v' → logprob: -5.765168190002441
    4. '\[' → logprob: -9.765168190002441
    5. '[int' → logprob: -10.640168190002441
    6. '[...]' → logprob: -11.140168190002441
    7. '[I' → logprob: -11.390168190002441
    8. '```' → logprob: -11.390168190002441
    9. '[]' → logprob: -12.015168190002441
    10. ' [' → logprob: -12.140168190002441

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016916152089834213
    2. ')' → logprob: -4.391916275024414
    3. '])' → logprob: -6.266916275024414
    4. ' ]' → logprob: -6.641916275024414
    5. ']=' → logprob: -7.266916275024414
    6. '[' → logprob: -8.766916275024414
    7. ']==' → logprob: -9.141916275024414
    8. ')]' → logprob: -9.766916275024414
    9. '][' → logprob: -10.391916275024414
    10. '=' → logprob: -10.516916275024414

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10400914400815964
    2. ' =' → logprob: -3.1040091514587402
    3. '<|end|>' → logprob: -3.3540091514587402
    4. '[' → logprob: -4.72900915145874
    5. ')' → logprob: -5.72900915145874
    6. '+=' → logprob: -6.47900915145874
    7. ',' → logprob: -6.97900915145874
    8. 'print' → logprob: -7.10400915145874
    9. '+' → logprob: -7.22900915145874
    10. ' +=' → logprob: -7.35400915145874

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016038356348872185
    2. ' int' → logprob: -4.141038417816162
    3. 'float' → logprob: -13.141037940979004
    4. '[int' → logprob: -14.391037940979004
    5. '(int' → logprob: -14.641037940979004
    6. '   ' → logprob: -14.766037940979004
    7. '=int' → logprob: -15.641037940979004
    8. 'v' → logprob: -16.14103889465332
    9. ' float' → logprob: -16.26603889465332
    10. '	int' → logprob: -16.51603889465332

Token 23: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.06198493763804436
    2. '(' → logprob: -2.8119850158691406
    3. 'v' → logprob: -11.93698501586914
    4. '('' → logprob: -12.93698501586914
    5. '((' → logprob: -12.93698501586914
    6. '`' → logprob: -13.81198501586914
    7. ' (' → logprob: -14.31198501586914
    8. '("("' → logprob: -14.31198501586914
    9. '(
' → logprob: -14.56198501586914
    10. '```' → logprob: -14.68698501586914

Token 24: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0022382817696779966
    2. '[' → logprob: -6.2522382736206055
    3. ')' → logprob: -8.127238273620605
    4. '[v' → logprob: -12.127238273620605
    5. '[I' → logprob: -13.252238273620605
    6. ')[' → logprob: -13.377238273620605
    7. ']' → logprob: -13.502238273620605
    8. ' [' → logprob: -13.627238273620605
    9. '[
' → logprob: -13.627238273620605
    10. ')i' → logprob: -14.877238273620605

Token 25: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03939715400338173
    2. '))' → logprob: -3.7893972396850586
    3. '])' → logprob: -4.164397239685059
    4. ')])' → logprob: -8.289397239685059
    5. ']' → logprob: -9.289397239685059
    6. ')]' → logprob: -9.289397239685059
    7. ''])' → logprob: -11.664397239685059
    8. ']))' → logprob: -11.664397239685059
    9. ')))' → logprob: -11.789397239685059
    10. ' )' → logprob: -12.039397239685059

Token 26: 'v' (ID: 85)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7670415043830872
    2. 's' → logprob: -1.5170414447784424
    3. 'sum' → logprob: -1.8920414447784424
    4. 'max' → logprob: -2.7670414447784424
    5. 'v' → logprob: -3.8920414447784424
    6. 'if' → logprob: -4.0170416831970215
    7. '#' → logprob: -4.6420416831970215
    8. 'i' → logprob: -4.7670416831970215
    9. 'm' → logprob: -4.7670416831970215
    10. ' for' → logprob: -5.0170416831970215

Token 27: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2812669575214386
    2. '(' → logprob: -1.4062669277191162
    3. '()`' → logprob: -10.406267166137695
    4. '(`' → logprob: -11.156267166137695
    5. '();' → logprob: -11.906267166137695
    6. ' ()' → logprob: -11.906267166137695
    7. '```' → logprob: -11.906267166137695
    8. '((' → logprob: -12.031267166137695
    9. '(()' → logprob: -12.531267166137695
    10. '().' → logprob: -12.531267166137695

Token 29: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3465967178344727
    2. 'for' → logprob: -1.3465967178344727
    3. 'k' → logprob: -1.7215967178344727
    4. 'm' → logprob: -2.3465967178344727
    5. 'p' → logprob: -2.9715967178344727
    6. 'x' → logprob: -3.0965967178344727
    7. 'a' → logprob: -3.8465967178344727
    8. 'if' → logprob: -4.221596717834473
    9. 's' → logprob: -4.346596717834473
    10. 'sum' → logprob: -4.596596717834473

Token 30: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01943390630185604
    2. 'i' → logprob: -4.144433975219727
    3. ' ' → logprob: -6.269433975219727
    4. '_' → logprob: -6.769433975219727
    5. ' _' → logprob: -8.519433975219727
    6. ' ' → logprob: -9.644433975219727
    7. '_i' → logprob: -10.769433975219727
    8. ' v' → logprob: -10.894433975219727
    9. '	i' → logprob: -11.769433975219727
    10. '  ' → logprob: -12.144433975219727

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10140502452850342
    2. 'in' → logprob: -2.351405143737793
    3. ' ' → logprob: -6.851405143737793
    4. '  ' → logprob: -9.601405143737793
    5. '	in' → logprob: -10.726405143737793
    6. 'n' → logprob: -11.851405143737793
    7. ')' → logprob: -12.226405143737793
    8. '(' → logprob: -12.351405143737793
    9. '   ' → logprob: -12.601405143737793
    10. '+' → logprob: -12.726405143737793

Token 32: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1146412268280983
    2. 'range' → logprob: -2.2396411895751953
    3. ' v' → logprob: -6.489641189575195
    4. ' ' → logprob: -8.489641189575195
    5. 'v' → logprob: -9.739641189575195
    6. '  ' → logprob: -11.364641189575195
    7. '	range' → logprob: -12.489641189575195
    8. 'n' → logprob: -12.739641189575195
    9. ' ran' → logprob: -12.989641189575195
    10. ' n' → logprob: -13.114641189575195

Token 33: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07895763963460922
    2. '(n' → logprob: -2.5789575576782227
    3. ' (' → logprob: -10.078957557678223
    4. '(len' → logprob: -10.703957557678223
    5. '()' → logprob: -13.703957557678223
    6. '(s' → logprob: -14.078957557678223
    7. '(
' → logprob: -14.453957557678223
    8. ' ' → logprob: -14.953957557678223
    9. '(

' → logprob: -14.953957557678223
    10. '(v' → logprob: -15.953957557678223

Token 34: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.027247697114944458
    2. '1' → logprob: -3.652247667312622
    3. ' n' → logprob: -7.402247905731201
    4. 'len' → logprob: -8.402247428894043
    5. '(n' → logprob: -10.277247428894043
    6. '2' → logprob: -10.777247428894043
    7. '0' → logprob: -10.902247428894043
    8. ' ' → logprob: -11.527247428894043
    9. 'v' → logprob: -11.777247428894043
    10. '(' → logprob: -11.902247428894043

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3631248474121094
    2. ',n' → logprob: -1.9881248474121094
    3. ' n' → logprob: -2.3631248474121094
    4. ' ,' → logprob: -2.7381248474121094
    5. ')' → logprob: -5.613124847412109
    6. '(n' → logprob: -6.363124847412109
    7. ' )' → logprob: -7.113124847412109
    8. 'n' → logprob: -7.238124847412109
    9. ' ' → logprob: -7.488124847412109
    10. '(' → logprob: -7.613124847412109

Token 36: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10025531053543091
    2. ' n' → logprob: -2.350255250930786
    3. 'len' → logprob: -10.225255012512207
    4. ' len' → logprob: -11.350255012512207
    5. ' ' → logprob: -14.350255012512207
    6. '	n' → logprob: -16.225255966186523
    7. ')n' → logprob: -17.225255966186523
    8. '   ' → logprob: -17.350255966186523
    9. '0' → logprob: -17.600255966186523
    10. '2' → logprob: -17.850255966186523

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008891870966181159
    2. ':' → logprob: -7.375889301300049
    3. ')' → logprob: -8.50088882446289
    4. '+' → logprob: -10.62588882446289
    5. ',' → logprob: -11.12588882446289
    6. '):
' → logprob: -11.87588882446289
    7. ' ):' → logprob: -12.37588882446289
    8. '}:' → logprob: -13.12588882446289
    9. ':)' → logprob: -13.37588882446289
    10. '():' → logprob: -13.62588882446289

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6655799150466919
    2. ' ' → logprob: -0.7905799150466919
    3. ' 
' → logprob: -4.290579795837402
    4. ' if' → logprob: -4.915579795837402
    5. ':' → logprob: -6.040579795837402
    6. '    ' → logprob: -6.040579795837402
    7. '  ' → logprob: -6.665579795837402
    8. 'if' → logprob: -6.665579795837402
    9. '<|end|>' → logprob: -7.415579795837402
    10. '    
' → logprob: -7.540579795837402

Token 39: ' x' (ID: 1215)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32334640622138977
    2. 'print' → logprob: -1.3233463764190674
    3. 'v' → logprob: -5.4483466148376465
    4. ' if' → logprob: -5.5733466148376465
    5. '   ' → logprob: -6.3233466148376465
    6. ' print' → logprob: -9.573346138000488
    7. ' ' → logprob: -10.823346138000488
    8. 'prin' → logprob: -11.323346138000488
    9. 'diff' → logprob: -11.948346138000488
    10. ' v' → logprob: -12.073346138000488

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.042142849415540695
    2. '=' → logprob: -3.292142868041992
    3. ' -=' → logprob: -6.042142868041992
    4. '-' → logprob: -6.917142868041992
    5. '-=' → logprob: -8.792142868041992
    6. ' -' → logprob: -8.792142868041992
    7. ' +=' → logprob: -8.917142868041992
    8. ',' → logprob: -9.542142868041992
    9. '=int' → logprob: -10.542142868041992
    10. ' ' → logprob: -10.542142868041992

Token 41: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007221345789730549
    2. ' v' → logprob: -5.132221221923828
    3. 'abs' → logprob: -6.757221221923828
    4. '   ' → logprob: -9.757221221923828
    5. ' abs' → logprob: -10.382221221923828
    6. 'x' → logprob: -11.507221221923828
    7. '	v' → logprob: -11.507221221923828
    8. '(v' → logprob: -11.632221221923828
    9. 'max' → logprob: -13.257221221923828
    10. ' ' → logprob: -13.507221221923828

Token 42: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9027791495318525e-05
    2. '[' → logprob: -10.875019073486328
    3. '[-' → logprob: -17.125019073486328
    4. '[j' → logprob: -17.500019073486328
    5. '[:]' → logprob: -17.500019073486328
    6. '[len' → logprob: -18.125019073486328
    7. '[x' → logprob: -18.375019073486328
    8. '[]' → logprob: -18.500019073486328
    9. 'i' → logprob: -18.625019073486328
    10. '[n' → logprob: -18.875019073486328

Token 43: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.372294698550832e-06
    2. ' i' → logprob: -12.500009536743164
    3. '-' → logprob: -12.750009536743164
    4. '   ' → logprob: -14.125009536743164
    5. ' ' → logprob: -14.375009536743164
    6. '0' → logprob: -14.875009536743164
    7. ']' → logprob: -14.875009536743164
    8. '	i' → logprob: -15.250009536743164
    9. '[i' → logprob: -16.375009536743164
    10. '(i' → logprob: -16.500009536743164

Token 44: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005060248542577028
    2. ']+' → logprob: -5.755060195922852
    3. '+' → logprob: -7.380060195922852
    4. '-' → logprob: -7.755060195922852
    5. ' ]' → logprob: -8.380060195922852
    6. ']-' → logprob: -8.380060195922852
    7. ')' → logprob: -9.380060195922852
    8. '],' → logprob: -9.880060195922852
    9. ']*' → logprob: -10.255060195922852
    10. ' -' → logprob: -10.380060195922852

Token 45: '   ' (ID: 271)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1130555868148804
    2. '+' → logprob: -1.4880555868148804
    3. '-' → logprob: -1.6130555868148804
    4. '=' → logprob: -2.73805570602417
    5. ' +' → logprob: -3.11305570602417
    6. ' ' → logprob: -3.48805570602417
    7. ' =' → logprob: -3.61305570602417
    8. 'if' → logprob: -3.86305570602417
    9. 'v' → logprob: -4.11305570602417
    10. ',' → logprob: -4.86305570602417

Token 46: ' y' (ID: 342)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7249564528465271
    2. ' +' → logprob: -1.8499565124511719
    3. ' -' → logprob: -2.599956512451172
    4. '-' → logprob: -2.724956512451172
    5. '=' → logprob: -2.974956512451172
    6. ' =' → logprob: -2.974956512451172
    7. ' ' → logprob: -3.474956512451172
    8. 'if' → logprob: -3.974956512451172
    9. ' +=' → logprob: -4.099956512451172
    10. 'v' → logprob: -4.224956512451172

Token 47: ' =' (ID: 314)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0788911581039429
    2. '+' → logprob: -1.3288911581039429
    3. ' =' → logprob: -1.3288911581039429
    4. ' -' → logprob: -2.5788912773132324
    5. '=' → logprob: -3.2038912773132324
    6. '-' → logprob: -4.578891277313232
    7. ' ' → logprob: -6.203891277313232
    8. '[' → logprob: -7.578891277313232
    9. ' +=' → logprob: -8.578890800476074
    10. ' *' → logprob: -9.078890800476074

Token 48: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.2521055042743683
    2. 'v' → logprob: -1.502105474472046
    3. '	v' → logprob: -9.877105712890625
    4. '    ' → logprob: -10.127105712890625
    5. '   ' → logprob: -10.502105712890625
    6. 'x' → logprob: -11.377105712890625
    7. ' ' → logprob: -11.502105712890625
    8. ' x' → logprob: -11.877105712890625
    9. 'i' → logprob: -12.002105712890625
    10. 'y' → logprob: -12.252105712890625

Token 49: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0028638429939746857
    2. '[' → logprob: -5.877863883972168
    3. '[:]' → logprob: -10.877863883972168
    4. '[:' → logprob: -11.377863883972168
    5. '[-' → logprob: -11.502863883972168
    6. '[j' → logprob: -12.252863883972168
    7. ' [' → logprob: -13.002863883972168
    8. '[y' → logprob: -13.127863883972168
    9. '```' → logprob: -13.377863883972168
    10. '   ' → logprob: -13.377863883972168

Token 50: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00032640635618008673
    2. '-' → logprob: -8.750326156616211
    3. '1' → logprob: -9.375326156616211
    4. ' i' → logprob: -10.500326156616211
    5. '0' → logprob: -10.625326156616211
    6. ']' → logprob: -12.125326156616211
    7. 'y' → logprob: -12.125326156616211
    8. '   ' → logprob: -12.125326156616211
    9. '-i' → logprob: -12.125326156616211
    10. ' -' → logprob: -12.875326156616211

Token 51: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014695111894980073
    2. ' ]' → logprob: -7.751469612121582
    3. '])' → logprob: -8.001469612121582
    4. '+' → logprob: -8.501469612121582
    5. '-' → logprob: -8.751469612121582
    6. ')' → logprob: -8.876469612121582
    7. ']
' → logprob: -10.001469612121582
    8. ']+' → logprob: -10.001469612121582
    9. ' -' → logprob: -10.751469612121582
    10. ' +' → logprob: -11.501469612121582

Token 52: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1612919569015503
    2. '   ' → logprob: -1.5362919569015503
    3. '<|end|>' → logprob: -1.6612919569015503
    4. ' ' → logprob: -2.16129207611084
    5. '
' → logprob: -3.78629207611084
    6. '    ' → logprob: -3.91129207611084
    7. 'if' → logprob: -4.16129207611084
    8. ' +' → logprob: -4.16129207611084
    9. 'x' → logprob: -4.28629207611084
    10. ' if' → logprob: -4.41129207611084

Token 53: ' del' (ID: 1083)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1255571842193604
    2. '   ' → logprob: -1.5005571842193604
    3. 'if' → logprob: -2.2505571842193604
    4. ' if' → logprob: -2.3755571842193604
    5. '+' → logprob: -2.7505571842193604
    6. ' ' → logprob: -3.2505571842193604
    7. 'x' → logprob: -3.7505571842193604
    8. ' +' → logprob: -4.000556945800781
    9. '    ' → logprob: -4.250556945800781
    10. '<|end|>' → logprob: -4.375556945800781

Token 54: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.02074904553592205
    2. 'v' → logprob: -3.895749092102051
    3. '(v' → logprob: -8.77074909210205
    4. '[v' → logprob: -10.64574909210205
    5. ' ' → logprob: -11.77074909210205
    6. '	v' → logprob: -11.89574909210205
    7. '[' → logprob: -12.02074909210205
    8. '(' → logprob: -13.02074909210205
    9. ' y' → logprob: -13.39574909210205
    10. ')v' → logprob: -13.89574909210205

Token 55: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00029840084607712924
    2. '0' → logprob: -8.625298500061035
    3. '[:' → logprob: -9.375298500061035
    4. ' [' → logprob: -11.375298500061035
    5. '[
' → logprob: -12.000298500061035
    6. ' ' → logprob: -12.625298500061035
    7. '2' → logprob: -12.750298500061035
    8. '1' → logprob: -13.125298500061035
    9. '[-' → logprob: -13.500298500061035
    10. '[i' → logprob: -13.625298500061035

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05663692578673363
    2. '1' → logprob: -2.9316368103027344
    3. '2' → logprob: -6.556636810302734
    4. ' ' → logprob: -8.681636810302734
    5. '[' → logprob: -9.431636810302734
    6. ':' → logprob: -9.931636810302734
    7. '   ' → logprob: -11.431636810302734
    8. ']' → logprob: -11.681636810302734
    9. '(' → logprob: -12.806636810302734
    10. 'y' → logprob: -12.869136810302734

Token 57: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27886754274368286
    2. ']' → logprob: -1.528867483139038
    3. '])' → logprob: -3.778867483139038
    4. ')
' → logprob: -6.403867721557617
    5. ')]' → logprob: -6.653867721557617
    6. ':' → logprob: -8.403867721557617
    7. ']
' → logprob: -8.903867721557617
    8. '2' → logprob: -9.278867721557617
    9. '1' → logprob: -9.903867721557617
    10. '   ' → logprob: -10.153867721557617

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02975187823176384
    2. '<|end|>' → logprob: -3.904751777648926
    3. '    
' → logprob: -5.779751777648926
    4. ',' → logprob: -6.404751777648926
    5. ' ' → logprob: -6.779751777648926
    6. ')' → logprob: -7.779751777648926
    7. 'v' → logprob: -7.779751777648926
    8. '
' → logprob: -7.779751777648926
    9. ' 
' → logprob: -8.154751777648926
    10. '  ' → logprob: -8.404751777648926

Token 59: ' del' (ID: 1083)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5972420573234558
    2. 'del' (adapté à ' del') → logprob: -1.4722421169281006
    3. '   ' → logprob: -2.2222421169281006
    4. '0' → logprob: -2.4722421169281006
    5. 'y' → logprob: -4.0972418785095215
    6. '```' → logprob: -5.4722418785095215
    7. '1' → logprob: -6.3472418785095215
    8. 'insert' → logprob: -6.7222418785095215
    9. '  ' → logprob: -7.2222418785095215
    10. ' del' → logprob: -7.9722418785095215

Token 60: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.016283506527543068
    2. '0' → logprob: -4.3912835121154785
    3. ' v' → logprob: -6.2662835121154785
    4. '[' → logprob: -6.5162835121154785
    5. ' ' → logprob: -7.8912835121154785
    6. '1' → logprob: -11.89128303527832
    7. '	v' → logprob: -13.39128303527832
    8. '   ' → logprob: -13.51628303527832
    9. ' [' → logprob: -13.64128303527832
    10. '(' → logprob: -14.39128303527832

Token 61: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0021923754829913378
    2. '0' → logprob: -6.127192497253418
    3. '1' → logprob: -12.002192497253418
    4. ' ' → logprob: -15.252192497253418
    5. '(' → logprob: -15.377192497253418
    6. ' [' → logprob: -15.877192497253418
    7. '   ' → logprob: -16.0021915435791
    8. 'v' → logprob: -16.8771915435791
    9. '[:' → logprob: -17.0021915435791
    10. '-' → logprob: -17.0021915435791

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011742709903046489
    2. '1' → logprob: -6.751174449920654
    3. ' ' → logprob: -12.751173973083496
    4. '   ' → logprob: -14.251173973083496
    5. '  ' → logprob: -16.438674926757812
    6. '2' → logprob: -16.626174926757812
    7. '۰' → logprob: -16.813674926757812
    8. '-' → logprob: -17.126174926757812
    9. '01' → logprob: -17.876174926757812
    10. '[' → logprob: -17.876174926757812

Token 63: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16202598810195923
    2. ']' → logprob: -1.9120259284973145
    3. ')
' → logprob: -6.5370259284973145
    4. ']
' → logprob: -9.162026405334473
    5. ')]' → logprob: -9.412026405334473
    6. '])' → logprob: -9.662026405334473
    7. '<|end|>' → logprob: -10.412026405334473
    8. '）' → logprob: -10.537026405334473
    9. '   ' → logprob: -10.912026405334473
    10. '}' → logprob: -12.537026405334473

Token 64: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6122419238090515
    2. '   ' → logprob: -0.8622419238090515
    3. '<|end|>' → logprob: -4.487241744995117
    4. ' +' → logprob: -5.112241744995117
    5. 'v' → logprob: -5.362241744995117
    6. ' ' → logprob: -5.612241744995117
    7. ',' → logprob: -5.737241744995117
    8. ')' → logprob: -5.862241744995117
    9. '+
' → logprob: -7.237241744995117
    10. ' v' → logprob: -7.237241744995117

Token 65: ' xy' (ID: 53634)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1033473089337349
    2. '   ' → logprob: -2.6033473014831543
    3. 'x' → logprob: -4.978347301483154
    4. '+' → logprob: -5.228347301483154
    5. 'z' → logprob: -5.353347301483154
    6. '```' → logprob: -5.728347301483154
    7. '+
' → logprob: -7.353347301483154
    8. ' v' → logprob: -7.728347301483154
    9. 'if' → logprob: -8.103347778320312
    10. '`' → logprob: -8.228347778320312

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20324884355068207
    2. '=' → logprob: -1.7032488584518433
    3. ' +=' → logprob: -6.953248977661133
    4. '+' → logprob: -7.328248977661133
    5. '+=' → logprob: -8.828248977661133
    6. ' ' → logprob: -10.953248977661133
    7. '.append' → logprob: -10.953248977661133
    8. ' +' → logprob: -11.453248977661133
    9. '_' → logprob: -11.828248977661133
    10. '.' → logprob: -12.078248977661133

Token 67: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05494186654686928
    2. ' x' → logprob: -2.9299418926239014
    3. '(x' → logprob: -10.55494213104248
    4. ' ' → logprob: -11.92994213104248
    5. '   ' → logprob: -11.92994213104248
    6. '	x' → logprob: -12.05494213104248
    7. ' (' → logprob: -12.42994213104248
    8. '[x' → logprob: -12.42994213104248
    9. '  ' → logprob: -13.55494213104248
    10. 'int' → logprob: -14.05494213104248

Token 68: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00024763107649050653
    2. ' x' → logprob: -8.625247955322266
    3. '(x' → logprob: -10.250247955322266
    4. 'y' → logprob: -12.000247955322266
    5. '(' → logprob: -12.500247955322266
    6. ')' → logprob: -12.500247955322266
    7. '2' → logprob: -12.625247955322266
    8. '   ' → logprob: -13.125247955322266
    9. '3' → logprob: -13.500247955322266
    10. 'v' → logprob: -13.500247955322266

Token 69: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18053671717643738
    2. ' +' → logprob: -1.8055367469787598
    3. '+y' → logprob: -7.18053674697876
    4. ')' → logprob: -11.930536270141602
    5. ' ' → logprob: -12.305536270141602
    6. ')+' → logprob: -12.305536270141602
    7. '*' → logprob: -12.430536270141602
    8. '+x' → logprob: -13.055536270141602
    9. '   ' → logprob: -13.805536270141602
    10. ' plus' → logprob: -13.805536270141602

Token 70: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3868882656097412
    2. ' y' → logprob: -1.1368882656097412
    3. ' ' → logprob: -11.76188850402832
    4. '	y' → logprob: -13.01188850402832
    5. ')' → logprob: -13.38688850402832
    6. '    ' → logprob: -13.38688850402832
    7. '   ' → logprob: -13.38688850402832
    8. ')y' → logprob: -14.38688850402832
    9. ''y' → logprob: -14.76188850402832
    10. '  ' → logprob: -15.13688850402832

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00821844395250082
    2. ')//' → logprob: -6.133218288421631
    3. '+' → logprob: -6.383218288421631
    4. ')**' → logprob: -6.633218288421631
    5. '-' → logprob: -6.758218288421631
    6. ' )' → logprob: -7.758218288421631
    7. ')*' → logprob: -7.758218288421631
    8. ' +' → logprob: -8.258218765258789
    9. ')/' → logprob: -8.508218765258789
    10. ')+' → logprob: -8.508218765258789

Token 72: ' /' (ID: 820)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004350797680672258
    2. ' ' → logprob: -7.750434875488281
    3. '3' → logprob: -13.375434875488281
    4. '1' → logprob: -13.625434875488281
    5. '(' → logprob: -14.750434875488281
    6. '4' → logprob: -15.687934875488281
    7. '```' → logprob: -15.750434875488281
    8. '10' → logprob: -16.37543487548828
    9. '  ' → logprob: -16.68793487548828
    10. 'float' → logprob: -16.75043487548828

Token 74: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002585978072602302
    2. '10' → logprob: -9.000258445739746
    3. ' ' → logprob: -9.500258445739746
    4. '100' → logprob: -10.000258445739746
    5. '1' → logprob: -12.250258445739746
    6. '3' → logprob: -12.375258445739746
    7. '4' → logprob: -12.875258445739746
    8. '20' → logprob: -14.750258445739746
    9. '5' → logprob: -14.875258445739746
    10. '409' → logprob: -15.000258445739746

Token 75: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5442664623260498
    2. '<|end|>' → logprob: -1.2942664623260498
    3. '   ' → logprob: -2.79426646232605
    4. ')' → logprob: -3.04426646232605
    5. '    
' → logprob: -4.419266700744629
    6. '\n' → logprob: -5.044266700744629
    7. '<|end|>' → logprob: -5.544266700744629
    8. '  
' → logprob: -5.669266700744629
    9. ' 
' → logprob: -5.919266700744629
    10. ' ' → logprob: -6.419266700744629

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09583000093698502
    2. 'v' → logprob: -2.470829963684082
    3. '```' → logprob: -6.470829963684082
    4. '    
' → logprob: -6.595829963684082
    5. ' v' → logprob: -6.970829963684082
    6. '<|end|>' → logprob: -7.220829963684082
    7. '	v' → logprob: -7.345829963684082
    8. ' 
' → logprob: -8.095829963684082
    9. '
' → logprob: -8.220829963684082
    10. '``' → logprob: -8.595829963684082

Token 77: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.2864800989627838
    2. '   ' → logprob: -1.4114800691604614
    3. '```' → logprob: -6.161479949951172
    4. 'import' → logprob: -6.661479949951172
    5. ' v' → logprob: -7.661479949951172
    6. 'i' → logprob: -7.786479949951172
    7. '  ' → logprob: -8.161479949951172
    8. '	v' → logprob: -8.786479949951172
    9. '``' → logprob: -8.786479949951172
    10. ' ' → logprob: -9.036479949951172

Token 78: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.030311301350593567
    2. '.' → logprob: -3.655311346054077
    3. '.insert' → logprob: -5.530311107635498
    4. '.app' → logprob: -10.655311584472656
    5. 'append' → logprob: -12.405311584472656
    6. '.ap' → logprob: -12.530311584472656
    7. ' .' → logprob: -12.530311584472656
    8. 'insert' → logprob: -13.905311584472656
    9. '.Append' → logprob: -14.905311584472656
    10. '   ' → logprob: -15.030311584472656

Token 79: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.005234832875430584
    2. '(' → logprob: -5.255234718322754
    3. '((' → logprob: -14.255234718322754
    4. 'xy' → logprob: -15.755234718322754
    5. '(int' → logprob: -16.50523567199707
    6. ' (' → logprob: -16.75523567199707
    7. '(abs' → logprob: -17.00523567199707
    8. '(
' → logprob: -17.38023567199707
    9. '(round' → logprob: -18.38023567199707
    10. '()' → logprob: -18.63023567199707

Token 80: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.999452772201039e-05
    2. ' y' → logprob: -11.000029563903809
    3. '+y' → logprob: -11.750029563903809
    4. ')' → logprob: -12.750029563903809
    5. '+' → logprob: -14.125029563903809
    6. ',y' → logprob: -14.875029563903809
    7. 'v' → logprob: -15.250029563903809
    8. '_y' → logprob: -15.625029563903809
    9. '*y' → logprob: -15.625029563903809
    10. '	y' → logprob: -15.875029563903809

Token 81: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08316020667552948
    2. ')
' → logprob: -2.583160161972046
    3. '   ' → logprob: -5.708160400390625
    4. '
' → logprob: -7.208160400390625
    5. '<|end|>' → logprob: -9.458160400390625
    6. ' )' → logprob: -10.583160400390625
    7. ')v' → logprob: -10.708160400390625
    8. '    
' → logprob: -11.333160400390625
    9. ')n' → logprob: -11.708160400390625
    10. ')
' → logprob: -11.708160400390625

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.805118203163147
    2. 'v' → logprob: -1.430118203163147
    3. ' ' → logprob: -1.555118203163147
    4. '<|end|>' → logprob: -2.5551180839538574
    5. ')' → logprob: -4.930118083953857
    6. ' v' → logprob: -5.180118083953857
    7. 'print' → logprob: -6.055118083953857
    8. '    ' → logprob: -6.180118083953857
    9. ' 
' → logprob: -6.430118083953857
    10. '  ' → logprob: -6.555118083953857

Token 83: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0029264725744724274
    2. ' v' → logprob: -6.377926349639893
    3. '   ' → logprob: -6.752926349639893
    4. '	v' → logprob: -10.00292682647705
    5. '```' → logprob: -12.37792682647705
    6. '    
' → logprob: -13.37792682647705
    7. '<|end|>' → logprob: -13.50292682647705
    8. ' ' → logprob: -13.62792682647705
    9. '  ' → logprob: -14.25292682647705
    10. ')v' → logprob: -14.50292682647705

Token 84: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0054169618524611
    2. '.' → logprob: -5.2554168701171875
    3. 'sort' → logprob: -8.630416870117188
    4. ' sort' → logprob: -13.005416870117188
    5. ' .' → logprob: -14.380416870117188
    6. '	sort' → logprob: -14.755416870117188
    7. '=' → logprob: -15.130416870117188
    8. '<|end|>' → logprob: -15.380416870117188
    9. ')' → logprob: -15.630416870117188
    10. '.Sort' → logprob: -15.755416870117188

Token 85: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015229015843942761
    2. '(' → logprob: -8.875152587890625
    3. '()
' → logprob: -12.375152587890625
    4. '()

' → logprob: -13.125152587890625
    5. '()`' → logprob: -13.750152587890625
    6. '())' → logprob: -14.125152587890625
    7. '()]' → logprob: -14.250152587890625
    8. '();' → logprob: -14.375152587890625
    9. '()\' → logprob: -14.625152587890625
    10. '().' → logprob: -14.750152587890625

Token 86: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.6776029699249193e-05
    2. ')' → logprob: -11.12502670288086
    3. 'v' → logprob: -12.12502670288086
    4. ' print' → logprob: -12.75002670288086
    5. 'pr' → logprob: -13.87502670288086
    6. 'p' → logprob: -14.00002670288086
    7. '#' → logprob: -15.00002670288086
    8. 'result' → logprob: -15.12502670288086
    9. '```' → logprob: -15.12502670288086
    10. 'for' → logprob: -15.25002670288086

Token 87: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.397141695022583
    2. '(v' → logprob: -1.147141695022583
    3. '(round' → logprob: -5.647141456604004
    4. '("("' → logprob: -5.772141456604004
    5. '('' → logprob: -6.647141456604004
    6. '()' → logprob: -6.772141456604004
    7. '("' → logprob: -7.647141456604004
    8. '("(' → logprob: -8.897141456604004
    9. '(len' → logprob: -9.147141456604004
    10. '((' → logprob: -9.147141456604004

Token 88: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005160979344509542
    2. '[-' → logprob: -7.750515937805176
    3. ')' → logprob: -9.375515937805176
    4. '[len' → logprob: -15.500515937805176
    5. '0' → logprob: -15.750515937805176
    6. ' [' → logprob: -16.875516891479492
    7. ']' → logprob: -17.250516891479492
    8. '[
' → logprob: -17.500516891479492
    9. '[n' → logprob: -17.625516891479492
    10. ' )' → logprob: -18.000516891479492

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.0
    3. '00' → logprob: -16.875
    4. '-' → logprob: -17.875
    5. '000' → logprob: -19.0
    6. '1' → logprob: -19.125
    7. '[' → logprob: -19.625
    8. '۰' → logprob: -19.625
    9. '012' → logprob: -19.625
    10. '   ' → logprob: -20.0625

Token 90: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1875571544806007e-05
    2. '))' → logprob: -12.000011444091797
    3. '])' → logprob: -13.000011444091797
    4. '})' → logprob: -13.000011444091797
    5. ' )' → logprob: -14.750011444091797
    6. '`)' → logprob: -15.125011444091797
    7. ')`' → logprob: -15.625011444091797
    8. '）' → logprob: -16.500011444091797
    9. ')}' → logprob: -16.500011444091797
    10. '>)' → logprob: -16.625011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 88
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 72
Précision stricte (1ère position): 42.05%
Précision adaptée (1ère position): 45.45%
Précision (top 10): 81.82%
================================================================================
