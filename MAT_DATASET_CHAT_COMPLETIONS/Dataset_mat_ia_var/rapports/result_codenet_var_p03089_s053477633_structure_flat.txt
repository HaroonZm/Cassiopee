================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
b = list(map(int, input().split(' ')))
buf = []
for _ in range(N):
    is_end = True
    for i in range(len(b)-1, -1, -1):
        if i+1 == b[i]:
            buf.append(b[i])
            b.pop(i)
            is_end = False
            break
    if is_end:
        print(-1)
        exit()
i = len(buf) - 1
while i >= 0:
    print(buf[i])
    i -= 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019543453527148813
    2. '```' → logprob: -9.500195503234863
    3. '(N' → logprob: -10.500195503234863
    4. '`' → logprob: -10.750195503234863
    5. '(
' → logprob: -11.000195503234863
    6. ')' → logprob: -11.625195503234863
    7. '("("' → logprob: -11.625195503234863
    8. ''' → logprob: -11.625195503234863
    9. '()' → logprob: -11.875195503234863
    10. '('' → logprob: -12.250195503234863

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5316423177719116
    2. ')' → logprob: -0.9066423177719116
    3. '()' → logprob: -5.156642436981201
    4. '())' → logprob: -6.656642436981201
    5. '(
' → logprob: -7.656642436981201
    6. '```' → logprob: -8.781641960144043
    7. '))' → logprob: -8.906641960144043
    8. '")' → logprob: -9.406641960144043
    9. '')' → logprob: -9.531641960144043
    10. '(

' → logprob: -9.906641960144043

Token 5: 'b' (ID: 65)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7158713936805725
    2. 'if' → logprob: -1.2158713340759277
    3. '\n' → logprob: -2.5908713340759277
    4. 's' → logprob: -3.7158713340759277
    5. 'i' → logprob: -3.8408713340759277
    6. 'x' → logprob: -4.215871334075928
    7. '```' → logprob: -4.340871334075928
    8. '`' → logprob: -4.715871334075928
    9. 'a' → logprob: -4.715871334075928
    10. ')' → logprob: -4.965871334075928

Token 6: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5125776529312134
    2. ' =' → logprob: -1.2625776529312134
    3. '=' → logprob: -3.387577533721924
    4. 'in' → logprob: -3.762577533721924
    5. 'a' → logprob: -4.262577533721924
    6. 'r' → logprob: -4.637577533721924
    7. '[i' → logprob: -4.887577533721924
    8. 'e' → logprob: -5.137577533721924
    9. 'u' → logprob: -5.387577533721924
    10. '_i' → logprob: -6.012577533721924

Token 7: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.375492811203003
    2. '0' → logprob: -1.875492811203003
    3. '[]' → logprob: -2.250492811203003
    4. 'N' → logprob: -2.375492811203003
    5. ' N' → logprob: -2.500492811203003
    6. ' input' → logprob: -2.625492811203003
    7. ' ' → logprob: -2.875492811203003
    8. 'list' → logprob: -2.875492811203003
    9. ' []' → logprob: -3.250492811203003
    10. 'int' → logprob: -4.125493049621582

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000377049611415714
    2. '(range' → logprob: -8.50037670135498
    3. '```' → logprob: -10.00037670135498
    4. '(b' → logprob: -10.50037670135498
    5. '("("' → logprob: -10.87537670135498
    6. '(
' → logprob: -11.37537670135498
    7. '('' → logprob: -11.62537670135498
    8. ' (' → logprob: -11.62537670135498
    9. '()' → logprob: -11.62537670135498
    10. '((' → logprob: -12.25037670135498

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1438523232936859
    2. '(' → logprob: -2.2688522338867188
    3. '(str' → logprob: -3.5188522338867188
    4. '(input' → logprob: -7.643852233886719
    5. '(lambda' → logprob: -8.393852233886719
    6. '(
' → logprob: -9.768852233886719
    7. 'int' → logprob: -10.518852233886719
    8. '(eval' → logprob: -10.768852233886719
    9. '```' → logprob: -10.893852233886719
    10. 'str' → logprob: -11.143852233886719

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.021197665482759476
    2. '(' → logprob: -4.27119779586792
    3. ',input' → logprob: -5.14619779586792
    4. ',' → logprob: -7.89619779586792
    5. ')' → logprob: -8.396197319030762
    6. '))' → logprob: -8.521197319030762
    7. '=input' → logprob: -9.271197319030762
    8. 'input' → logprob: -9.646197319030762
    9. '(int' → logprob: -10.021197319030762
    10. ' (' → logprob: -10.646197319030762

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3135469853878021
    2. ' input' → logprob: -1.3135470151901245
    3. '(input' → logprob: -8.313547134399414
    4. ',input' → logprob: -10.438547134399414
    5. '=input' → logprob: -12.313547134399414
    6. ')' → logprob: -12.563547134399414
    7. '<input' → logprob: -14.438547134399414
    8. ' ' → logprob: -14.813547134399414
    9. '[input' → logprob: -14.938547134399414
    10. '	input' → logprob: -14.938547134399414

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.46946951746940613
    2. '()' → logprob: -1.5944695472717285
    3. '()))' → logprob: -2.2194695472717285
    4. ')' → logprob: -3.2194695472717285
    5. '(' → logprob: -4.2194695472717285
    6. '))' → logprob: -6.0944695472717285
    7. '().' → logprob: -6.5944695472717285
    8. '()));' → logprob: -6.9694695472717285
    9. '()>' → logprob: -7.0944695472717285
    10. '(()' → logprob: -7.2194695472717285

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002851729223039001
    2. 'strip' → logprob: -8.250285148620605
    3. 'rstrip' → logprob: -11.250285148620605
    4. ' split' → logprob: -11.500285148620605
    5. '(split' → logprob: -14.750285148620605
    6. 'spl' → logprob: -15.750285148620605
    7. ')' → logprob: -16.000286102294922
    8. '.split' → logprob: -16.625286102294922
    9. 'replace' → logprob: -17.875286102294922
    10. 'sp' → logprob: -18.125286102294922

Token 14: '('' (ID: 706)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7245323061943054
    2. ')' → logprob: -0.8495323061943054
    3. '()))' → logprob: -2.84953236579895
    4. '())' → logprob: -3.97453236579895
    5. '(' → logprob: -5.349532127380371
    6. '('' → logprob: -5.599532127380371
    7. '()' → logprob: -7.099532127380371
    8. ')))' → logprob: -7.224532127380371
    9. ''))' → logprob: -7.474532127380371
    10. '(','' → logprob: -7.974532127380371

Token 15: ' '' (ID: 461)
  Prédit: '')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')))' → logprob: -0.6398757696151733
    2. ')' → logprob: -1.3898757696151733
    3. ')))' → logprob: -1.5148757696151733
    4. '')' → logprob: -6.764875888824463
    5. '())))' → logprob: -6.889875888824463
    6. ''))' → logprob: -7.264875888824463
    7. '()' → logprob: -7.764875888824463
    8. ' ' → logprob: -8.764875411987305
    9. ''' → logprob: -9.639875411987305
    10. '")))' → logprob: -9.764875411987305

Token 16: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.2520337700843811
    2. ')' → logprob: -1.5020337104797363
    3. '))' → logprob: -9.502034187316895
    4. '')))' → logprob: -11.127034187316895
    5. '))))' → logprob: -11.877034187316895
    6. ')));' → logprob: -13.002034187316895
    7. '),' → logprob: -13.627034187316895
    8. ')))
' → logprob: -13.627034187316895
    9. ' ' → logprob: -14.252034187316895
    10. ')\' → logprob: -14.627034187316895

Token 17: 'buf' (ID: 13119)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.22878414392471313
    2. 'c' → logprob: -2.2287840843200684
    3. 's' → logprob: -3.3537840843200684
    4. 'a' → logprob: -3.4787840843200684
    5. ')' → logprob: -4.728784084320068
    6. 'for' → logprob: -5.103784084320068
    7. '#' → logprob: -5.603784084320068
    8. 'm' → logprob: -6.228784084320068
    9. 'd' → logprob: -6.478784084320068
    10. 'n' → logprob: -6.603784084320068

Token 18: ' =' (ID: 314)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.20212329924106598
    2. '[' → logprob: -2.3271234035491943
    3. ' =' → logprob: -2.9521234035491943
    4. '[:]' → logprob: -4.577123165130615
    5. 'fer' → logprob: -5.202123165130615
    6. 'f' → logprob: -5.327123165130615
    7. '_' → logprob: -5.702123165130615
    8. 'e' → logprob: -5.702123165130615
    9. '=' → logprob: -6.077123165130615
    10. '[]' → logprob: -6.452123165130615

Token 19: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.34023189544677734
    2. '[]' → logprob: -1.5902318954467773
    3. ' [' → logprob: -3.0902318954467773
    4. ' b' → logprob: -3.7152318954467773
    5. '[' → logprob: -4.840231895446777
    6. 'b' → logprob: -5.590231895446777
    7. '[b' → logprob: -6.715231895446777
    8. ' ' → logprob: -6.840231895446777
    9. '0' → logprob: -7.965231895446777
    10. ' {}' → logprob: -9.715231895446777

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012340416433289647
    2. 'f' → logprob: -7.00123405456543
    3. 'i' → logprob: -8.37623405456543
    4. 'n' → logprob: -10.75123405456543
    5. 'd' → logprob: -11.50123405456543
    6. ' for' → logprob: -11.62623405456543
    7. 'b' → logprob: -11.75123405456543
    8. 'if' → logprob: -12.00123405456543
    9. 'count' → logprob: -12.12623405456543
    10. '```' → logprob: -12.12623405456543

Token 21: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09243132174015045
    2. ' ' → logprob: -2.4674313068389893
    3. 'i' → logprob: -6.342431545257568
    4. '_' → logprob: -6.967431545257568
    5. ' _' → logprob: -7.717431545257568
    6. ' b' → logprob: -8.59243106842041
    7. ' x' → logprob: -9.09243106842041
    8. '  ' → logprob: -11.09243106842041
    9. ' ' → logprob: -11.96743106842041
    10. ' ‌' → logprob: -12.59243106842041

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06915602087974548
    2. ' ' → logprob: -3.3191559314727783
    3. 'in' → logprob: -3.5691559314727783
    4. ' i' → logprob: -7.069156169891357
    5. 'n' → logprob: -7.194156169891357
    6. 'i' → logprob: -7.694156169891357
    7. '_' → logprob: -8.8191556930542
    8. ' n' → logprob: -9.3191556930542
    9. '  ' → logprob: -10.0691556930542
    10. ' _' → logprob: -10.4441556930542

Token 23: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5423028469085693
    2. ' range' → logprob: -1.4173028469085693
    3. 'b' → logprob: -1.9173028469085693
    4. ' b' → logprob: -3.5423028469085693
    5. 'buf' → logprob: -8.792303085327148
    6. 'ran' → logprob: -10.667303085327148
    7. '_range' → logprob: -10.917303085327148
    8. 'r' → logprob: -11.542303085327148
    9. '(range' → logprob: -11.792303085327148
    10. '	range' → logprob: -11.792303085327148

Token 24: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.322677880525589
    2. '(N' → logprob: -1.3226778507232666
    3. ' N' → logprob: -5.447678089141846
    4. ' (' → logprob: -5.572678089141846
    5. 'N' → logprob: -7.072678089141846
    6. '(n' → logprob: -8.322677612304688
    7. ' ' → logprob: -9.447677612304688
    8. '(
' → logprob: -10.322677612304688
    9. '(range' → logprob: -10.822677612304688
    10. '(s' → logprob: -11.697677612304688

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10301928222179413
    2. ')' → logprob: -2.3530192375183105
    3. ' ):' → logprob: -6.3530192375183105
    4. ' )' → logprob: -7.7280192375183105
    5. ':' → logprob: -7.9780192375183105
    6. '+' → logprob: -8.853019714355469
    7. '):
' → logprob: -9.228019714355469
    8. ' ' → logprob: -11.478019714355469
    9. ',' → logprob: -12.353019714355469
    10. '-' → logprob: -12.353019714355469

Token 26: '   ' (ID: 271)
  Prédit: ' buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buf' → logprob: -0.3267208933830261
    2. '   ' → logprob: -2.076720952987671
    3. ' b' → logprob: -3.576720952987671
    4. 'buf' → logprob: -3.826720952987671
    5. ' i' → logprob: -4.201720714569092
    6. 'b' → logprob: -4.201720714569092
    7. '    ' → logprob: -4.451720714569092
    8. ' s' → logprob: -5.201720714569092
    9. ' ' → logprob: -5.451720714569092
    10. '    
' → logprob: -5.451720714569092

Token 27: ' is' (ID: 382)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6352576613426208
    2. 'buf' → logprob: -1.5102577209472656
    3. 'b' → logprob: -2.7602577209472656
    4. 'i' → logprob: -3.3852577209472656
    5. 'v' → logprob: -3.3852577209472656
    6. 'a' → logprob: -3.3852577209472656
    7. ' x' → logprob: -4.010257720947266
    8. 't' → logprob: -4.510257720947266
    9. 'n' → logprob: -4.635257720947266
    10. 'val' → logprob: -4.760257720947266

Token 28: '_end' (ID: 13707)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1427512168884277
    2. '_' → logprob: -1.5177512168884277
    3. ' _' → logprob: -1.6427512168884277
    4. ' '' → logprob: -2.8927512168884277
    5. ' True' → logprob: -3.0177512168884277
    6. '_valid' → logprob: -3.5177512168884277
    7. ' b' → logprob: -3.8927512168884277
    8. 'True' → logprob: -4.642751216888428
    9. ' not' → logprob: -4.767751216888428
    10. '  ' → logprob: -4.892751216888428

Token 29: ' =' (ID: 314)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.35947149991989136
    2. 'ed' → logprob: -1.3594715595245361
    3. '_' → logprob: -3.359471559524536
    4. ' =' → logprob: -4.984471321105957
    5. '=' → logprob: -6.859471321105957
    6. 'e' → logprob: -7.359471321105957
    7. 's' → logprob: -7.484471321105957
    8. ' ' → logprob: -7.609471321105957
    9. '_ing' → logprob: -8.734471321105957
    10. '  ' → logprob: -9.609471321105957

Token 30: ' True' (ID: 6432)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.49150359630584717
    2. 'False' → logprob: -1.4915035963058472
    3. ' True' → logprob: -1.9915035963058472
    4. 'True' → logprob: -4.241503715515137
    5. ' int' → logprob: -5.491503715515137
    6. 'int' → logprob: -6.366503715515137
    7. ' bool' → logprob: -6.741503715515137
    8. ' buf' → logprob: -6.866503715515137
    9. ' not' → logprob: -7.241503715515137
    10. 'buf' → logprob: -7.241503715515137

Token 31: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0775802731513977
    2. ' if' → logprob: -3.577580213546753
    3. '       ' → logprob: -4.452580451965332
    4. '    ' → logprob: -4.577580451965332
    5. '    
' → logprob: -4.702580451965332
    6. '<|end|>' → logprob: -5.202580451965332
    7. ' ' → logprob: -5.827580451965332
    8. ',' → logprob: -6.077580451965332
    9. '	if' → logprob: -7.202580451965332
    10. ' for' → logprob: -7.327580451965332

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7455098032951355
    2. '    ' → logprob: -1.7455098628997803
    3. ' if' → logprob: -2.2455098628997803
    4. '    
' → logprob: -2.6205098628997803
    5. ' ' → logprob: -2.7455098628997803
    6. '       ' → logprob: -2.9955098628997803
    7. ' 
' → logprob: -4.870509624481201
    8. '     
' → logprob: -4.870509624481201
    9. '
' → logprob: -4.995509624481201
    10. ' for' → logprob: -5.245509624481201

Token 33: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9365869164466858
    2. ' for' → logprob: -1.186586856842041
    3. 'for' (adapté à ' for') → logprob: -1.311586856842041
    4. ' ' → logprob: -3.811586856842041
    5. '    ' → logprob: -5.811586856842041
    6. ' if' → logprob: -6.561586856842041
    7. 'b' → logprob: -6.811586856842041
    8. 'buf' → logprob: -6.811586856842041
    9. 'if' → logprob: -6.936586856842041
    10. '    
' → logprob: -7.061586856842041

Token 34: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.522633969783783
    2. ' i' → logprob: -1.6476340293884277
    3. 'range' → logprob: -2.3976340293884277
    4. ' j' → logprob: -3.2726340293884277
    5. ' b' → logprob: -3.3976340293884277
    6. 'i' → logprob: -3.5226340293884277
    7. 'b' → logprob: -4.772634029388428
    8. ' ' → logprob: -4.897634029388428
    9. 'j' → logprob: -5.397634029388428
    10. ')' → logprob: -8.02263355255127

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006032484583556652
    2. 'in' → logprob: -5.256032466888428
    3. ',' → logprob: -7.631032466888428
    4. ' ' → logprob: -9.006032943725586
    5. '+' → logprob: -9.631032943725586
    6. ' ,' → logprob: -10.881032943725586
    7. '<|end|>' → logprob: -11.006032943725586
    8. 's' → logprob: -11.256032943725586
    9. '	in' → logprob: -11.256032943725586
    10. '_in' → logprob: -11.756032943725586

Token 36: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03366322070360184
    2. 'range' → logprob: -3.408663272857666
    3. ' xrange' → logprob: -12.408662796020508
    4. ' ' → logprob: -12.533662796020508
    5. '	range' → logprob: -12.908662796020508
    6. ' b' → logprob: -13.158662796020508
    7. ')' → logprob: -13.408662796020508
    8. '(range' → logprob: -14.408662796020508
    9. 'r' → logprob: -14.533662796020508
    10. ' ran' → logprob: -14.533662796020508

Token 37: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.13804592192173004
    2. '(' → logprob: -2.1380460262298584
    3. '(N' → logprob: -4.888045787811279
    4. '1' → logprob: -6.388045787811279
    5. 'len' → logprob: -6.888045787811279
    6. ' len' → logprob: -7.388045787811279
    7. ' ' → logprob: -9.388046264648438
    8. ' N' → logprob: -9.888046264648438
    9. '(n' → logprob: -11.263046264648438
    10. ' (' → logprob: -11.263046264648438

Token 38: '(b' (ID: 3229)
  Prédit: '(buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buf' → logprob: -0.47758200764656067
    2. '(b' → logprob: -0.9775819778442383
    3. '(' → logprob: -5.727581977844238
    4. ' buf' → logprob: -9.352581977844238
    5. 'b' → logprob: -10.352581977844238
    6. '(buff' → logprob: -10.352581977844238
    7. ' b' → logprob: -10.477581977844238
    8. '(buffer' → logprob: -10.727581977844238
    9. 'buf' → logprob: -11.102581977844238
    10. ' (' → logprob: -12.227581977844238

Token 39: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09695963561534882
    2. ')-' → logprob: -2.4719595909118652
    3. ' )' → logprob: -5.721959590911865
    4. '))' → logprob: -6.221959590911865
    5. ')):' → logprob: -6.471959590911865
    6. '-' → logprob: -7.596959590911865
    7. ')):
' → logprob: -8.471960067749023
    8. ' -' → logprob: -8.846960067749023
    9. ' ' → logprob: -9.221960067749023
    10. '[:-' → logprob: -9.596960067749023

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011083661578595638
    2. ' ' → logprob: -4.511083602905273
    3. '2' → logprob: -10.386083602905273
    4. '   ' → logprob: -13.823583602905273
    5. ')' → logprob: -13.948583602905273
    6. '  ' → logprob: -14.011083602905273
    7. '0' → logprob: -14.261083602905273
    8. '-' → logprob: -15.261083602905273
    9. ' )' → logprob: -15.823583602905273
    10. '１' → logprob: -15.886083602905273

Token 41: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010305248200893402
    2. ' ):' → logprob: -4.635305404663086
    3. ')' → logprob: -8.260305404663086
    4. '-' → logprob: -8.885305404663086
    5. '):
' → logprob: -9.635305404663086
    6. ' -' → logprob: -11.260305404663086
    7. ',' → logprob: -11.385305404663086
    8. ' )' → logprob: -11.760305404663086
    9. ':' → logprob: -12.010305404663086
    10. 'and' → logprob: -12.135305404663086

Token 42: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.46849381923675537
    2. ' -' → logprob: -1.0934938192367554
    3. ' ' → logprob: -3.593493938446045
    4. '0' → logprob: -4.468493938446045
    5. '1' → logprob: -10.468493461608887
    6. ' i' → logprob: -11.968493461608887
    7. ' )' → logprob: -12.968493461608887
    8. ')' → logprob: -12.968493461608887
    9. 'i' → logprob: -13.468493461608887
    10. '-i' → logprob: -14.218493461608887

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015300170343834907
    2. ' ' → logprob: -8.875152587890625
    3. '2' → logprob: -11.375152587890625
    4. '0' → logprob: -15.437652587890625
    5. 'len' → logprob: -15.437652587890625
    6. ' -' → logprob: -15.937652587890625
    7. '```' → logprob: -15.937652587890625
    8. ',' → logprob: -15.937652587890625
    9. '   ' → logprob: -16.000152587890625
    10. '  ' → logprob: -16.250152587890625

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016697037499397993
    2. '-' → logprob: -7.126669883728027
    3. ',-' → logprob: -7.501669883728027
    4. ' ,' → logprob: -8.751669883728027
    5. '   ' → logprob: -9.626669883728027
    6. ' -' → logprob: -10.251669883728027
    7. '1' → logprob: -10.376669883728027
    8. ' ,-' → logprob: -12.501669883728027
    9. '```' → logprob: -12.626669883728027
    10. '0' → logprob: -12.626669883728027

Token 45: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12860111892223358
    2. '-' → logprob: -2.12860107421875
    3. ' ' → logprob: -6.62860107421875
    4. '1' → logprob: -8.12860107421875
    5. '0' → logprob: -11.00360107421875
    6. ')' → logprob: -11.00360107421875
    7. ' )' → logprob: -11.62860107421875
    8. '2' → logprob: -13.00360107421875
    9. ',' → logprob: -13.69110107421875
    10. '<|end|>' → logprob: -13.81610107421875

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.084206375409849e-05
    2. ' ' → logprob: -10.500041007995605
    3. '2' → logprob: -11.375041007995605
    4. '```' → logprob: -14.437541007995605
    5. '   ' → logprob: -15.437541007995605
    6. ')' → logprob: -15.812541007995605
    7. '  ' → logprob: -16.25004005432129
    8. '    ' → logprob: -16.50004005432129
    9. '１' → logprob: -16.56254005432129
    10. '3' → logprob: -16.68754005432129

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032989128958433867
    2. ':' → logprob: -7.003298759460449
    3. '-' → logprob: -7.128298759460449
    4. ')' → logprob: -7.378298759460449
    5. ',' → logprob: -7.628298759460449
    6. '):-' → logprob: -8.37829875946045
    7. '):
' → logprob: -9.12829875946045
    8. ' ):' → logprob: -9.37829875946045
    9. '   ' → logprob: -11.37829875946045
    10. ' -' → logprob: -11.62829875946045

Token 48: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5926659107208252
    2. '       ' → logprob: -1.0926659107208252
    3. ':' → logprob: -3.217665910720825
    4. '   ' → logprob: -3.592665910720825
    5. '    ' → logprob: -3.967665910720825
    6. '<|end|>' → logprob: -4.217665672302246
    7. ')' → logprob: -5.717665672302246
    8. '[' → logprob: -6.717665672302246
    9. ' 
' → logprob: -7.092665672302246
    10. '  ' → logprob: -7.092665672302246

Token 49: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02566319704055786
    2. '<|end|>' → logprob: -4.400663375854492
    3. ' if' → logprob: -5.400663375854492
    4. '   ' → logprob: -6.150663375854492
    5. '       ' → logprob: -6.650663375854492
    6. '[' → logprob: -6.650663375854492
    7. '    ' → logprob: -7.025663375854492
    8. 'if' (adapté à ' if') → logprob: -7.025663375854492
    9. '32' → logprob: -7.150663375854492
    10. '  ' → logprob: -8.525663375854492

Token 50: ' i' (ID: 575)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.006750662811100483
    2. 'b' → logprob: -5.006750583648682
    3. ' ' → logprob: -10.88175106048584
    4. ' ' → logprob: -11.75675106048584
    5. ' buf' → logprob: -13.00675106048584
    6. '	b' → logprob: -13.63175106048584
    7. ' not' → logprob: -13.75675106048584
    8. ')' → logprob: -13.75675106048584
    9. ' б' → logprob: -14.88175106048584
    10. ')b' → logprob: -15.00675106048584

Token 51: '+' (ID: 10)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6840206384658813
    2. '>' → logprob: -1.0590206384658813
    3. ' ' → logprob: -2.934020519256592
    4. ' ==' → logprob: -3.059020519256592
    5. '==' → logprob: -4.809020519256592
    6. ' !=' → logprob: -4.934020519256592
    7. 'and' → logprob: -4.934020519256592
    8. ' and' → logprob: -5.184020519256592
    9. ' >=' → logprob: -5.184020519256592
    10. ')' → logprob: -5.809020519256592

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024575800634920597
    2. ' ' → logprob: -6.127457618713379
    3. '2' → logprob: -8.377457618713379
    4. '<|end|>' → logprob: -12.127457618713379
    5. '+' → logprob: -12.377457618713379
    6. 'b' → logprob: -12.627457618713379
    7. '```' → logprob: -12.877457618713379
    8. '`' → logprob: -12.939957618713379
    9. '0' → logprob: -13.064957618713379
    10. ')' → logprob: -13.064957618713379

Token 53: ' ==' (ID: 951)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10217905789613724
    2. ' b' → logprob: -2.4771790504455566
    3. 'len' → logprob: -5.102179050445557
    4. ' len' → logprob: -5.977179050445557
    5. '0' → logprob: -6.352179050445557
    6. ' ' → logprob: -6.477179050445557
    7. '1' → logprob: -7.852179050445557
    8. 'N' → logprob: -8.102179527282715
    9. ' N' → logprob: -9.102179527282715
    10. 'i' → logprob: -9.477179527282715

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007157695363275707
    2. '[' → logprob: -7.250715732574463
    3. '[I' → logprob: -12.500716209411621
    4. ')' → logprob: -15.000716209411621
    5. '[
' → logprob: -15.000716209411621
    6. '[index' → logprob: -15.500716209411621
    7. '[j' → logprob: -15.625716209411621
    8. 'i' → logprob: -15.875716209411621
    9. '[]' → logprob: -16.000715255737305
    10. '```' → logprob: -16.375715255737305

Token 56: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18628092110157013
    2. ' ):' → logprob: -2.1862809658050537
    3. ')' → logprob: -3.0612809658050537
    4. ' )' → logprob: -5.061280727386475
    5. ' and' → logprob: -6.311280727386475
    6. '):
' → logprob: -6.811280727386475
    7. ':' → logprob: -7.186280727386475
    8. ' ):
' → logprob: -8.436281204223633
    9. ' or' → logprob: -8.811281204223633
    10. ' ' → logprob: -8.936281204223633

Token 57: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019934063777327538
    2. ':
' → logprob: -4.394934177398682
    3. '       ' → logprob: -5.894934177398682
    4. ' and' → logprob: -6.144934177398682
    5. '):' → logprob: -6.769934177398682
    6. '           ' → logprob: -7.394934177398682
    7. ' or' → logprob: -8.769933700561523
    8. '   ' → logprob: -9.019933700561523
    9. '):
' → logprob: -9.144933700561523
    10. ')' → logprob: -9.269933700561523

Token 58: ' buf' (ID: 13976)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9810696244239807
    2. '    ' → logprob: -1.481069564819336
    3. '       ' → logprob: -2.231069564819336
    4. ' b' → logprob: -2.356069564819336
    5. '   ' → logprob: -2.731069564819336
    6. 'b' → logprob: -3.731069564819336
    7. ' ' → logprob: -3.856069564819336
    8. ' ' → logprob: -4.231069564819336
    9. 'continue' → logprob: -4.481069564819336
    10. '        ' → logprob: -4.856069564819336

Token 59: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3133062422275543
    2. '.append' → logprob: -1.313306212425232
    3. '.extend' → logprob: -11.188305854797363
    4. ' .' → logprob: -11.813305854797363
    5. '.pop' → logprob: -12.063305854797363
    6. '.clear' → logprob: -12.563305854797363
    7. '.insert' → logprob: -12.563305854797363
    8. '.app' → logprob: -13.063305854797363
    9. '.push' → logprob: -13.188305854797363
    10. '.remove' → logprob: -13.438305854797363

Token 60: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.47617632150650024
    2. '(i' → logprob: -1.2261762619018555
    3. '(' → logprob: -2.6011762619018555
    4. '('' → logprob: -4.8511762619018555
    5. '(True' → logprob: -6.8511762619018555
    6. '((' → logprob: -7.2261762619018555
    7. '(False' → logprob: -7.4761762619018555
    8. 'b' → logprob: -7.7261762619018555
    9. '("("' → logprob: -9.101176261901855
    10. '(a' → logprob: -9.226176261901855

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002765763783827424
    2. '.pop' → logprob: -6.127765655517578
    3. '[' → logprob: -7.627765655517578
    4. ')' → logprob: -9.752765655517578
    5. '[:' → logprob: -10.752765655517578
    6. ')i' → logprob: -12.377765655517578
    7. '[:]' → logprob: -12.627765655517578
    8. '[
' → logprob: -13.002765655517578
    9. 'pop' → logprob: -14.377765655517578
    10. 'i' → logprob: -14.502765655517578

Token 62: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6606425046920776
    2. ')' → logprob: -0.9106425046920776
    3. '])
' → logprob: -3.410642623901367
    4. ')
' → logprob: -3.535642623901367
    5. ']' → logprob: -4.660642623901367
    6. '))' → logprob: -5.660642623901367
    7. '-' → logprob: -5.910642623901367
    8. ')])' → logprob: -7.035642623901367
    9. '[i' → logprob: -7.285642623901367
    10. '))
' → logprob: -8.035642623901367

Token 63: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08049815148115158
    2. '       ' → logprob: -3.205498218536377
    3. '               ' → logprob: -4.330498218536377
    4. '            
' → logprob: -4.830498218536377
    5. ')' → logprob: -5.705498218536377
    6. ' 
' → logprob: -6.205498218536377
    7. '        
' → logprob: -6.330498218536377
    8. '    
' → logprob: -6.580498218536377
    9. '   ' → logprob: -6.830498218536377
    10. 'else' → logprob: -7.455498218536377

Token 64: ' b' (ID: 287)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.788749098777771
    2. ' break' → logprob: -1.038749098777771
    3. 'b' (adapté à ' b') → logprob: -2.0387492179870605
    4. ' b' → logprob: -3.1637492179870605
    5. '   ' → logprob: -4.6637492179870605
    6. '       ' → logprob: -5.9137492179870605
    7. ' is' → logprob: -6.4137492179870605
    8. ' del' → logprob: -6.5387492179870605
    9. 'del' → logprob: -6.6637492179870605
    10. 'is' → logprob: -6.9137492179870605

Token 65: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.003975462168455124
    2. '.remove' → logprob: -6.0039753913879395
    3. '.' → logprob: -6.7539753913879395
    4. '=' → logprob: -8.253975868225098
    5. '[i' → logprob: -10.128975868225098
    6. ' =' → logprob: -10.628975868225098
    7. 'pop' → logprob: -13.128975868225098
    8. '.insert' → logprob: -13.128975868225098
    9. '=i' → logprob: -13.878975868225098
    10. '.=' → logprob: -14.003975868225098

Token 66: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.5716304410016164e-05
    2. '(' → logprob: -10.250035285949707
    3. '()' → logprob: -15.625035285949707
    4. '(
' → logprob: -17.375036239624023
    5. 'i' → logprob: -17.500036239624023
    6. '(ii' → logprob: -17.875036239624023
    7. '((' → logprob: -18.250036239624023
    8. '```' → logprob: -19.000036239624023
    9. ' (' → logprob: -19.250036239624023
    10. '(I' → logprob: -19.625036239624023

Token 67: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.202093705534935
    2. ')' → logprob: -1.7020937204360962
    3. '           ' → logprob: -8.202094078063965
    4. ')
' → logprob: -8.452094078063965
    5. '       ' → logprob: -9.452094078063965
    6. '               ' → logprob: -9.952094078063965
    7. ' )
' → logprob: -10.452094078063965
    8. ')

' → logprob: -10.952094078063965
    9. ')`
' → logprob: -12.452094078063965
    10. ' )' → logprob: -12.827094078063965

Token 68: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03377410024404526
    2. '       ' → logprob: -3.7837741374969482
    3. '            
' → logprob: -5.783773899078369
    4. '```' → logprob: -6.658773899078369
    5. '               ' → logprob: -6.783773899078369
    6. 'else' → logprob: -7.033773899078369
    7. '   ' → logprob: -7.158773899078369
    8. '
' → logprob: -7.658773899078369
    9. '        
' → logprob: -7.658773899078369
    10. '    
' → logprob: -7.908773899078369

Token 69: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.3647973835468292
    2. ' is' → logprob: -1.2397973537445068
    3. '   ' → logprob: -5.114797592163086
    4. '       ' → logprob: -5.864797592163086
    5. '           ' → logprob: -5.989797592163086
    6. 'break' → logprob: -6.364797592163086
    7. '
' → logprob: -6.739797592163086
    8. ' 
' → logprob: -7.614797592163086
    9. '```' → logprob: -7.989797592163086
    10. '    
' → logprob: -8.239797592163086

Token 70: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.020001601427793503
    2. '_' → logprob: -4.020001411437988
    3. '_e' → logprob: -7.020001411437988
    4. '_en' → logprob: -7.145001411437988
    5. ' _' → logprob: -9.520001411437988
    6. '_n' → logprob: -10.895001411437988
    7. ''_' → logprob: -11.895001411437988
    8. '_a' → logprob: -12.020001411437988
    9. '_nd' → logprob: -12.145001411437988
    10. '__' → logprob: -12.395001411437988

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860984906554222
    2. '=' → logprob: -3.048609733581543
    3. ' ' → logprob: -11.048609733581543
    4. '=False' → logprob: -12.298609733581543
    5. '=True' → logprob: -13.548609733581543
    6. ' =
' → logprob: -15.298609733581543
    7. ')' → logprob: -15.673609733581543
    8. ' =)' → logprob: -16.29861068725586
    9. ' &=' → logprob: -16.92361068725586
    10. ' ==' → logprob: -16.92361068725586

Token 72: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.47408220171928406
    2. 'False' → logprob: -0.9740822315216064
    3. ' True' → logprob: -12.349081993103027
    4. 'True' → logprob: -14.099081993103027
    5. '(False' → logprob: -16.224082946777344
    6. '=False' → logprob: -18.474082946777344
    7. 'F' → logprob: -19.224082946777344
    8. ' false' → logprob: -19.349082946777344
    9. ' ' → logprob: -20.349082946777344
    10. '_false' → logprob: -20.349082946777344

Token 73: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0340216159820557
    2. '
' → logprob: -1.1590216159820557
    3. '<|end|>' → logprob: -2.1590216159820557
    4. '       ' → logprob: -2.6590216159820557
    5. '    
' → logprob: -3.0340216159820557
    6. '   ' → logprob: -3.5340216159820557
    7. '\n' → logprob: -3.7840216159820557
    8. ' 
' → logprob: -4.284021377563477
    9. '            
' → logprob: -4.659021377563477
    10. '  
' → logprob: -4.909021377563477

Token 74: '           ' (ID: 352)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1489826440811157
    2. '
' → logprob: -1.3989826440811157
    3. '    
' → logprob: -1.7739826440811157
    4. '   ' → logprob: -2.648982524871826
    5. ' 
' → logprob: -2.773982524871826
    6. '           ' → logprob: -3.023982524871826
    7. '<|end|>' → logprob: -3.773982524871826
    8. '  
' → logprob: -4.023982524871826
    9. '       ' → logprob: -4.148982524871826
    10. '            
' → logprob: -4.648982524871826

Token 75: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.841590166091919
    2. '       ' → logprob: -1.216590166091919
    3. 'break' (adapté à ' break') → logprob: -1.966590166091919
    4. ' break' → logprob: -2.216590166091919
    5. '   ' → logprob: -4.96658992767334
    6. '	break' → logprob: -5.09158992767334
    7. '               ' → logprob: -5.34158992767334
    8. '	' → logprob: -7.34158992767334
    9. ' ' → logprob: -7.46658992767334
    10. '    ' → logprob: -7.59158992767334

Token 76: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40906238555908203
    2. '\n' → logprob: -1.909062385559082
    3. '   ' → logprob: -2.159062385559082
    4. '    
' → logprob: -3.409062385559082
    5. '  
' → logprob: -4.659062385559082
    6. ' 
' → logprob: -4.659062385559082
    7. '<|end|>' → logprob: -4.909062385559082
    8. 'if' → logprob: -5.534062385559082
    9. '```' → logprob: -5.909062385559082
    10. '' → logprob: -7.034062385559082

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2618380784988403
    2. '\n' → logprob: -1.8868380784988403
    3. 'if' → logprob: -2.011837959289551
    4. '
' → logprob: -2.011837959289551
    5. 'else' → logprob: -2.386837959289551
    6. ' 
' → logprob: -2.511837959289551
    7. '    
' → logprob: -3.511837959289551
    8. '<|end|>' → logprob: -3.636837959289551
    9. '  
' → logprob: -4.261837959289551
    10. ' if' → logprob: -4.511837959289551

Token 78: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2162008136510849
    2. 'else' → logprob: -2.091200828552246
    3. ' if' → logprob: -3.466200828552246
    4. '\n' → logprob: -4.591200828552246
    5. ' else' → logprob: -4.841200828552246
    6. '   ' → logprob: -5.341200828552246
    7. ' ' → logprob: -5.466200828552246
    8. 'i' → logprob: -5.591200828552246
    9. ' 
' → logprob: -5.966200828552246
    10. '
' → logprob: -6.466200828552246

Token 79: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0006609689444303513
    2. ' not' → logprob: -7.6256608963012695
    3. 'is' → logprob: -9.25066089630127
    4. ' ' → logprob: -9.50066089630127
    5. ' ' → logprob: -14.12566089630127
    6. 'not' → logprob: -14.37566089630127
    7. ' True' → logprob: -15.87566089630127
    8. ' i' → logprob: -16.125661849975586
    9. '	is' → logprob: -16.375661849975586
    10. '  ' → logprob: -16.625661849975586

Token 80: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.001818216871470213
    2. '_' → logprob: -7.2518181800842285
    3. '_en' → logprob: -7.5018181800842285
    4. '_e' → logprob: -7.6268181800842285
    5. ' _' → logprob: -10.876818656921387
    6. '_nd' → logprob: -11.626818656921387
    7. '_not' → logprob: -11.751818656921387
    8. 'end' → logprob: -12.001818656921387
    9. ''_' → logprob: -12.876818656921387
    10. '_ent' → logprob: -12.876818656921387

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004473540757317096
    2. ' :' → logprob: -7.8754472732543945
    3. ':
' → logprob: -10.000447273254395
    4. '=' → logprob: -11.750447273254395
    5. '():' → logprob: -12.625447273254395
    6. '   ' → logprob: -13.375447273254395
    7. ' ==' → logprob: -13.625447273254395
    8. ' =' → logprob: -13.750447273254395
    9. '):' → logprob: -13.750447273254395
    10. ' ' → logprob: -14.000447273254395

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.52564537525177
    2. '   ' → logprob: -0.90064537525177
    3. ' break' → logprob: -6.9006452560424805
    4. 'print' → logprob: -7.7756452560424805
    5. ' print' → logprob: -8.27564525604248
    6. 'break' → logprob: -8.27564525604248
    7. '    ' → logprob: -9.02564525604248
    8. '           ' → logprob: -9.27564525604248
    9. '```' → logprob: -9.90064525604248
    10. ' ' → logprob: -10.02564525604248

Token 83: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05041871219873428
    2. 'break' → logprob: -3.0504186153411865
    3. ' print' → logprob: -6.675418853759766
    4. ' break' → logprob: -8.300418853759766
    5. '   ' → logprob: -8.675418853759766
    6. 'buf' → logprob: -9.050418853759766
    7. '-' → logprob: -11.175418853759766
    8. 'b' → logprob: -12.550418853759766
    9. '```' → logprob: -12.550418853759766
    10. 'pr' → logprob: -13.050418853759766

Token 84: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.14261282980442047
    2. '-' → logprob: -2.267612934112549
    3. '(' → logprob: -3.642612934112549
    4. '0' → logprob: -6.517612934112549
    5. '('' → logprob: -7.017612934112549
    6. '("' → logprob: -7.517612934112549
    7. '("-' → logprob: -8.76761245727539
    8. '('-' → logprob: -9.89261245727539
    9. '(
' → logprob: -12.39261245727539
    10. ' -' → logprob: -12.39261245727539

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.000001907348633
    3. '１' → logprob: -15.125001907348633
    4. '2' → logprob: -15.375001907348633
    5. '```' → logprob: -17.000001907348633
    6. '-' → logprob: -17.687501907348633
    7. '   ' → logprob: -17.750001907348633
    8. ')' → logprob: -17.812501907348633
    9. '  ' → logprob: -17.875001907348633
    10. '``' → logprob: -17.937501907348633

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008105786982923746
    2. ')
' → logprob: -7.125810623168945
    3. ' )' → logprob: -12.500810623168945
    4. ')return' → logprob: -14.375810623168945
    5. '   ' → logprob: -15.000810623168945
    6. '))' → logprob: -15.250810623168945
    7. ')
' → logprob: -15.625810623168945
    8. '`)' → logprob: -15.750810623168945
    9. ')`' → logprob: -15.750810623168945
    10. '```' → logprob: -15.750810623168945

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8938152194023132
    2. '   ' → logprob: -1.018815279006958
    3. 'else' → logprob: -1.518815279006958
    4. ' else' → logprob: -4.643815040588379
    5. '           ' → logprob: -7.768815040588379
    6. '
' → logprob: -9.018815040588379
    7. ' ' → logprob: -9.018815040588379
    8. '```' → logprob: -9.268815040588379
    9. '        
' → logprob: -9.643815040588379
    10. '	else' → logprob: -9.643815040588379

Token 88: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.5380643606185913
    2. ' exit' → logprob: -2.038064479827881
    3. 'break' → logprob: -2.288064479827881
    4. ' break' → logprob: -2.413064479827881
    5. '       ' → logprob: -2.913064479827881
    6. '   ' → logprob: -3.913064479827881
    7. '	exit' → logprob: -4.538064479827881
    8. '	break' → logprob: -5.788064479827881
    9. '```' → logprob: -6.288064479827881
    10. 'import' → logprob: -7.038064479827881

Token 89: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006739881355315447
    2. '(' → logprob: -5.006740093231201
    3. '()
' → logprob: -11.006739616394043
    4. '()`' → logprob: -13.256739616394043
    5. '()\' → logprob: -13.506739616394043
    6. ' ()' → logprob: -14.131739616394043
    7. '()(' → logprob: -14.506739616394043
    8. '()

' → logprob: -14.506739616394043
    9. '0' → logprob: -15.006739616394043
    10. '(
' → logprob: -15.131739616394043

Token 90: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41840803623199463
    2. 'print' → logprob: -1.2934080362319946
    3. 'while' → logprob: -2.793407917022705
    4. 'buf' → logprob: -6.043407917022705
    5. 'else' → logprob: -6.418407917022705
    6. 'b' → logprob: -6.418407917022705
    7. '```' → logprob: -7.668407917022705
    8. '
' → logprob: -9.418408393859863
    9. '    
' → logprob: -9.918408393859863
    10. '   ' → logprob: -10.793408393859863

Token 91: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7057560682296753
    2. 'nd' → logprob: -0.9557560682296753
    3. 'm' → logprob: -2.705756187438965
    4. 'nt' → logprob: -3.705756187438965
    5. 'f' → logprob: -4.455756187438965
    6. 't' → logprob: -5.330756187438965
    7. '=' → logprob: -5.705756187438965
    8. 'mp' → logprob: -5.830756187438965
    9. 'np' → logprob: -5.955756187438965
    10. ' ' → logprob: -6.705756187438965

Token 92: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.39915257692337036
    2. '0' → logprob: -1.1491525173187256
    3. ' len' → logprob: -4.649152755737305
    4. ' ' → logprob: -6.274152755737305
    5. '(len' → logprob: -8.524152755737305
    6. '1' → logprob: -8.649152755737305
    7. '-' → logprob: -9.149152755737305
    8. '2' → logprob: -9.399152755737305
    9. 'N' → logprob: -10.024152755737305
    10. ' -' → logprob: -10.274152755737305

Token 93: '(buf' (ID: 24783)
  Prédit: '(buf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buf' → logprob: -0.2988804876804352
    2. '(b' → logprob: -1.4238804578781128
    3. '(' → logprob: -4.048880577087402
    4. '(buff' → logprob: -9.923880577087402
    5. ' (' → logprob: -10.173880577087402
    6. '(buffer' → logprob: -10.923880577087402
    7. '(i' → logprob: -11.798880577087402
    8. 'b' → logprob: -12.673880577087402
    9. '(
' → logprob: -13.173880577087402
    10. 'buf' → logprob: -13.298880577087402

Token 94: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14498944580554962
    2. ' -' → logprob: -2.394989490509033
    3. ')' → logprob: -3.144989490509033
    4. ')-' → logprob: -7.644989490509033
    5. '()-' → logprob: -8.769989013671875
    6. ')
' → logprob: -9.894989013671875
    7. ' ' → logprob: -11.144989013671875
    8. '()' → logprob: -11.519989013671875
    9. ' )' → logprob: -11.894989013671875
    10. '-)' → logprob: -12.269989013671875

Token 95: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004420147743076086
    2. ' -' → logprob: -5.504420280456543
    3. '<|end|>' → logprob: -8.129420280456543
    4. '-
' → logprob: -11.254420280456543
    5. '
' → logprob: -11.879420280456543
    6. '```' → logprob: -12.004420280456543
    7. ' ' → logprob: -12.129420280456543
    8. ')' → logprob: -12.754420280456543
    9. '()-' → logprob: -13.004420280456543
    10. '<|end|>' → logprob: -13.129420280456543

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005552975926548243
    2. ' ' → logprob: -7.625555515289307
    3. '2' → logprob: -9.625555038452148
    4. '```' → logprob: -14.375555038452148
    5. '0' → logprob: -15.625555038452148
    6. '１' → logprob: -15.938055038452148
    7. '.' → logprob: -16.93805503845215
    8. '   ' → logprob: -17.12555503845215
    9. '-' → logprob: -17.37555503845215
    10. '(' → logprob: -17.37555503845215

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.786196975852363e-05
    2. '2' → logprob: -10.500038146972656
    3. ' ' → logprob: -11.500038146972656
    4. '```' → logprob: -16.250038146972656
    5. '１' → logprob: -17.250038146972656
    6. '0' → logprob: -18.125038146972656
    7. '3' → logprob: -18.312538146972656
    8. '   ' → logprob: -18.312538146972656
    9. '  ' → logprob: -18.875038146972656
    10. '-' → logprob: -18.937538146972656

Token 98: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1832411140203476
    2. 'while' → logprob: -1.9332411289215088
    3. '<|end|>' → logprob: -5.30824089050293
    4. '-' → logprob: -5.55824089050293
    5. 'print' → logprob: -6.18324089050293
    6. ' while' → logprob: -6.18324089050293
    7. '>' → logprob: -6.30824089050293
    8. '0' → logprob: -6.30824089050293
    9. ',' → logprob: -6.43324089050293
    10. ')' → logprob: -7.30824089050293

Token 99: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.462727814912796
    2. '<|end|>' → logprob: -1.0877277851104736
    3. '
' → logprob: -4.712728023529053
    4. ')' → logprob: -4.962728023529053
    5. ' while' → logprob: -4.962728023529053
    6. '\n' → logprob: -5.712728023529053
    7. 'print' → logprob: -5.837728023529053
    8. '```' → logprob: -7.212728023529053
    9. '<|end|>' → logprob: -7.712728023529053
    10. 'for' → logprob: -8.087727546691895

Token 100: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01604035124182701
    2. 'i' → logprob: -4.141040325164795
    3. '0' → logprob: -12.891040802001953
    4. ' ' → logprob: -13.016040802001953
    5. '	i' → logprob: -14.141040802001953
    6. '(i' → logprob: -15.266040802001953
    7. '   ' → logprob: -16.141040802001953
    8. ' True' → logprob: -16.641040802001953
    9. 'True' → logprob: -17.016040802001953
    10. '  ' → logprob: -17.016040802001953

Token 101: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.27385061979293823
    2. '>=' → logprob: -1.523850679397583
    3. ' >' → logprob: -4.148850440979004
    4. '>' → logprob: -5.148850440979004
    5. ' ' → logprob: -9.773850440979004
    6. '>-' → logprob: -11.273850440979004
    7. '≥' → logprob: -12.273850440979004
    8. ')>=' → logprob: -12.273850440979004
    9. ' ≥' → logprob: -12.773850440979004
    10. '0' → logprob: -12.773850440979004

Token 102: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019312551012262702
    2. ' ' → logprob: -6.251931190490723
    3. '1' → logprob: -13.751931190490723
    4. '   ' → logprob: -13.876931190490723
    5. '۰' → logprob: -15.876931190490723
    6. '```' → logprob: -16.56443214416504
    7. '  ' → logprob: -16.68943214416504
    8. ':' → logprob: -16.81443214416504
    9. '00' → logprob: -16.87693214416504
    10. '０' → logprob: -17.37693214416504

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043233807082287967
    2. ' ' → logprob: -7.75043249130249
    3. '   ' → logprob: -14.125432014465332
    4. '1' → logprob: -14.500432014465332
    5. '۰' → logprob: -16.56293296813965
    6. '00' → logprob: -16.87543296813965
    7. '  ' → logprob: -16.87543296813965
    8. '```' → logprob: -17.00043296813965
    9. '０' → logprob: -17.37543296813965
    10. '    ' → logprob: -18.00043296813965

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006835664622485638
    2. ':
' → logprob: -5.006835460662842
    3. '):' → logprob: -9.3818359375
    4. '):
' → logprob: -10.8818359375
    5. ':

' → logprob: -12.6318359375
    6. '<|end|>' → logprob: -13.1318359375
    7. ')' → logprob: -13.2568359375
    8. ' :' → logprob: -13.3818359375
    9. ':
' → logprob: -13.5068359375
    10. ',' → logprob: -13.6318359375

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6223164200782776
    2. ' print' → logprob: -1.4973163604736328
    3. 'print' → logprob: -1.7473163604736328
    4. '
' → logprob: -2.872316360473633
    5. '```' → logprob: -5.622316360473633
    6. '    
' → logprob: -6.247316360473633
    7. ' 
' → logprob: -6.747316360473633
    8. '	print' → logprob: -7.122316360473633
    9. '``' → logprob: -8.122316360473633
    10. '\' → logprob: -8.747316360473633

Token 106: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.027281809598207474
    2. ' print' → logprob: -3.6522817611694336
    3. '   ' → logprob: -7.027281761169434
    4. '
' → logprob: -9.902281761169434
    5. '```' → logprob: -10.402281761169434
    6. '	print' → logprob: -11.902281761169434
    7. '.print' → logprob: -13.527281761169434
    8. '#print' → logprob: -13.902281761169434
    9. '    
' → logprob: -14.152281761169434
    10. '``' → logprob: -14.277281761169434

Token 107: '(buf' (ID: 24783)
  Prédit: '(buf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buf' → logprob: -0.0009144435753114522
    2. '(' → logprob: -7.000914573669434
    3. ' buf' → logprob: -13.750914573669434
    4. ' (' → logprob: -13.750914573669434
    5. 'buf' → logprob: -15.125914573669434
    6. '(buff' → logprob: -15.125914573669434
    7. '(b' → logprob: -16.500913619995117
    8. '	buf' → logprob: -17.375913619995117
    9. '(buffer' → logprob: -17.625913619995117
    10. '(
' → logprob: -18.125913619995117

Token 108: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.723973582556937e-05
    2. ')' → logprob: -11.500017166137695
    3. '[' → logprob: -12.000017166137695
    4. '[-' → logprob: -15.000017166137695
    5. '[
' → logprob: -15.250017166137695
    6. '   ' → logprob: -15.375017166137695
    7. '[int' → logprob: -16.750017166137695
    8. ')i' → logprob: -17.250017166137695
    9. ' [' → logprob: -17.750017166137695
    10. ' ' → logprob: -18.250017166137695

Token 109: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06243614852428436
    2. '])' → logprob: -2.812436103820801
    3. ')
' → logprob: -8.3124361038208
    4. '))' → logprob: -9.4374361038208
    5. ' )' → logprob: -9.9374361038208
    6. ']' → logprob: -10.1874361038208
    7. '})' → logprob: -10.8124361038208
    8. '])
' → logprob: -11.3124361038208
    9. ')]' → logprob: -12.1874361038208
    10. '）' → logprob: -12.5624361038208

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7495808601379395
    2. 'i' → logprob: -0.9995808601379395
    3. '
' → logprob: -1.9995808601379395
    4. ' i' → logprob: -4.6245808601379395
    5. '\n' → logprob: -5.4995808601379395
    6. '	i' → logprob: -5.6245808601379395
    7. '    
' → logprob: -6.1245808601379395
    8. ',i' → logprob: -6.8745808601379395
    9. '```' → logprob: -6.9995808601379395
    10. '\' → logprob: -7.2495808601379395

Token 111: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.006771972868591547
    2. '   ' → logprob: -5.631772041320801
    3. ' i' → logprob: -5.881772041320801
    4. '	i' → logprob: -8.6317720413208
    5. '
' → logprob: -8.7567720413208
    6. '    
' → logprob: -11.5067720413208
    7. '```' → logprob: -11.6317720413208
    8. ',i' → logprob: -12.0067720413208
    9. '_i' → logprob: -12.5067720413208
    10. ' ' → logprob: -13.1317720413208

Token 112: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.10774114727973938
    2. ' -=' → logprob: -2.857741117477417
    3. '-' → logprob: -3.107741117477417
    4. '=' → logprob: -10.232741355895996
    5. ' -' → logprob: -13.232741355895996
    6. '+=' → logprob: -14.357741355895996
    7. '   ' → logprob: -14.732741355895996
    8. '```' → logprob: -14.857741355895996
    9. '--' → logprob: -15.482741355895996
    10. ' ' → logprob: -16.10774040222168

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.25002098083496
    4. '１' → logprob: -19.62502098083496
    5. '	' → logprob: -20.75002098083496
    6. '```' → logprob: -20.75002098083496
    7. '  ' → logprob: -21.12502098083496
    8. ' ' → logprob: -21.37502098083496
    9. '۱' → logprob: -21.50002098083496
    10. '    ' → logprob: -22.37502098083496

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -20.0
    4. '```' → logprob: -20.25
    5. '  ' → logprob: -21.375
    6. '۱' → logprob: -21.75
    7. '１' → logprob: -21.875
    8. '<|end|>' → logprob: -22.0
    9. '१' → logprob: -23.25
    10. '১' → logprob: -23.4375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 112
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 51
Tokens correctement prédits (top 10): 94
Précision stricte (1ère position): 40.18%
Précision adaptée (1ère position): 45.54%
Précision (top 10): 83.93%
================================================================================
