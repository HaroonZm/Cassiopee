================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

def main():
    n = int(stdin.readline())
    a = list(map(int, stdin.readline().split()))
    b = list(map(int, stdin.readline().split()))
    ans = 0
    for i, (ai, bi) in enumerate(zip(a, b)):
        used = min(ai, bi)
        ans += used
        rem = bi - used
        if i + 1 < len(a):
            used2 = min(a[i+1], rem)
            ans += used2
            a[i+1] -= used2
    print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.050773657858371735
    2. ' argv' → logprob: -3.5507736206054688
    3. 'exit' → logprob: -4.300773620605469
    4. ' exit' → logprob: -6.050773620605469
    5. 'stdout' → logprob: -6.050773620605469
    6. 'path' → logprob: -6.675773620605469
    7. 'stdin' → logprob: -7.425773620605469
    8. 'import' → logprob: -8.425773620605469
    9. 'version' → logprob: -8.550773620605469
    10. 'stderr' → logprob: -9.425773620605469

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02812373824417591
    2. '.readline' → logprob: -3.9031238555908203
    3. '\n' → logprob: -5.27812385559082
    4. '.read' → logprob: -7.40312385559082
    5. '
' → logprob: -7.77812385559082
    6. '.
' → logprob: -8.15312385559082
    7. '```' → logprob: -8.15312385559082
    8. '\' → logprob: -8.52812385559082
    9. 'import' → logprob: -8.90312385559082
    10. 'newline' → logprob: -9.15312385559082

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2673061788082123
    2. '.readline' → logprob: -1.7673062086105347
    3. 'for' → logprob: -3.767306089401245
    4. '\n' → logprob: -4.642306327819824
    5. '.read' → logprob: -4.767306327819824
    6. 'import' → logprob: -4.892306327819824
    7. 'print' → logprob: -4.892306327819824
    8. 'read' → logprob: -6.267306327819824
    9. '' → logprob: -7.017306327819824
    10. ',' → logprob: -7.017306327819824

Token 6: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.515007734298706
    2. ' read' → logprob: -1.390007734298706
    3. ' process' → logprob: -2.140007734298706
    4. ' space' → logprob: -4.640007972717285
    5. ' parse' → logprob: -4.765007972717285
    6. ' main' → logprob: -5.890007972717285
    7. ' readline' → logprob: -5.890007972717285
    8. ' ' → logprob: -6.765007972717285
    9. '_read' → logprob: -6.890007972717285
    10. 'read' → logprob: -7.140007972717285

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1986149102449417
    2. '():' → logprob: -1.8236149549484253
    3. ':' → logprob: -4.198615074157715
    4. '(:' → logprob: -5.698615074157715
    5. '(":' → logprob: -9.823615074157715
    6. '```' → logprob: -10.198615074157715
    7. ' ():' → logprob: -10.198615074157715
    8. '):' → logprob: -10.323615074157715
    9. ' (' → logprob: -10.323615074157715
    10. '(
' → logprob: -10.448615074157715

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02700521983206272
    2. '    ' → logprob: -4.652005195617676
    3. '    
' → logprob: -4.777005195617676
    4. '\' → logprob: -5.652005195617676
    5. ' ' → logprob: -6.402005195617676
    6. '\n' → logprob: -7.402005195617676
    7. '(stdin' → logprob: -7.402005195617676
    8. 'print' → logprob: -7.527005195617676
    9. ' print' → logprob: -8.777005195617676
    10. 'stdin' → logprob: -8.777005195617676

Token 9: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6136534810066223
    2. '   ' → logprob: -2.1136534214019775
    3. 'n' (adapté à ' n') → logprob: -2.6136534214019775
    4. ' ' → logprob: -2.6136534214019775
    5. 'pass' → logprob: -2.7386534214019775
    6. ' for' → logprob: -3.4886534214019775
    7. 'user' → logprob: -3.8636534214019775
    8. 'data' → logprob: -4.113653659820557
    9. 'x' → logprob: -4.613653659820557
    10. '    ' → logprob: -4.863653659820557

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09265094995498657
    2. '=' → logprob: -2.467650890350342
    3. ' ' → logprob: -5.842650890350342
    4. '  ' → logprob: -8.0926513671875
    5. ',' → logprob: -8.8426513671875
    6. ')' → logprob: -9.3426513671875
    7. '.' → logprob: -9.4676513671875
    8. '=int' → logprob: -9.8426513671875
    9. '   ' → logprob: -10.3426513671875
    10. '_' → logprob: -10.7176513671875

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.016347182914614677
    2. 'int' → logprob: -4.141347408294678
    3. ' ' → logprob: -8.14134693145752
    4. ' stdin' → logprob: -11.76634693145752
    5. '  ' → logprob: -12.26634693145752
    6. '   ' → logprob: -12.64134693145752
    7. ' len' → logprob: -13.26634693145752
    8. ' input' → logprob: -14.01634693145752
    9. ' map' → logprob: -14.01634693145752
    10. '=int' → logprob: -14.39134693145752

Token 12: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.5764061212539673
    2. '(' → logprob: -0.8264061212539673
    3. '(st' → logprob: -8.076406478881836
    4. '(input' → logprob: -9.326406478881836
    5. ' (' → logprob: -10.701406478881836
    6. '(
' → logprob: -10.826406478881836
    7. '()' → logprob: -11.951406478881836
    8. '(

' → logprob: -12.076406478881836
    9. '('' → logprob: -12.451406478881836
    10. 'stdin' → logprob: -13.076406478881836

Token 13: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0038913998287171125
    2. '.read' → logprob: -5.628891468048096
    3. '.' → logprob: -8.503890991210938
    4. '().' → logprob: -9.378890991210938
    5. '.readlines' → logprob: -13.878890991210938
    6. ')' → logprob: -14.128890991210938
    7. 'read' → logprob: -14.128890991210938
    8. '.Read' → logprob: -14.378890991210938
    9. ' .' → logprob: -14.753890991210938
    10. ' readline' → logprob: -15.128890991210938

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0036631335970014334
    2. '()' → logprob: -5.878663063049316
    3. '()))' → logprob: -7.628663063049316
    4. ')' → logprob: -8.628663063049316
    5. '().' → logprob: -8.753663063049316
    6. '(' → logprob: -11.128663063049316
    7. ' ())' → logprob: -11.253663063049316
    8. '())
' → logprob: -13.003663063049316
    9. '('' → logprob: -13.878663063049316
    10. '()),' → logprob: -14.003663063049316

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3883339762687683
    2. '    
' → logprob: -1.763334035873413
    3. '\' → logprob: -3.138334035873413
    4. '\n' → logprob: -3.513334035873413
    5. ' ' → logprob: -4.138333797454834
    6. ' 
' → logprob: -4.513333797454834
    7. '
' → logprob: -4.638333797454834
    8. '  
' → logprob: -4.638333797454834
    9. ')' → logprob: -4.763333797454834
    10. '   
' → logprob: -5.138333797454834

Token 16: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8615759611129761
    2. 'for' → logprob: -1.236575961112976
    3. ' for' → logprob: -1.861575961112976
    4. '    
' → logprob: -3.4865760803222656
    5. ' ' → logprob: -3.9865760803222656
    6. '\n' → logprob: -4.611576080322266
    7. 'data' → logprob: -4.861576080322266
    8. '\' → logprob: -4.861576080322266
    9. ' \' → logprob: -4.986576080322266
    10. ' 
' → logprob: -4.986576080322266

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5772592425346375
    2. ' =' → logprob: -1.0772593021392822
    3. '.' → logprob: -3.4522593021392822
    4. '=' → logprob: -4.077259063720703
    5. '[i' → logprob: -4.452259063720703
    6. 'rray' → logprob: -5.077259063720703
    7. 'pp' → logprob: -5.077259063720703
    8. '.append' → logprob: -5.327259063720703
    9. '[:]' → logprob: -5.452259063720703
    10. 's' → logprob: -5.827259063720703

Token 18: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5801945328712463
    2. ' list' → logprob: -0.8301945328712463
    3. ' [' → logprob: -6.080194473266602
    4. '[' → logprob: -7.080194473266602
    5. '[]' → logprob: -7.580194473266602
    6. ' []' → logprob: -8.080194473266602
    7. '[list' → logprob: -8.455194473266602
    8. '[int' → logprob: -10.705194473266602
    9. 'stdin' → logprob: -11.080194473266602
    10. ' ' → logprob: -11.455194473266602

Token 19: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02878844551742077
    2. '(stdin' → logprob: -3.7787883281707764
    3. '(range' → logprob: -6.4037885665893555
    4. '(map' → logprob: -6.5287885665893555
    5. '(int' → logprob: -7.2787885665893555
    6. '()' → logprob: -7.2787885665893555
    7. '(a' → logprob: -8.528788566589355
    8. '(st' → logprob: -9.028788566589355
    9. '(read' → logprob: -9.528788566589355
    10. '(

' → logprob: -9.653788566589355

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008963285014033318
    2. '(' → logprob: -4.758963108062744
    3. '(lambda' → logprob: -8.883963584899902
    4. '(str' → logprob: -9.508963584899902
    5. 'int' → logprob: -9.883963584899902
    6. ')' → logprob: -10.633963584899902
    7. '<int' → logprob: -10.883963584899902
    8. '(
' → logprob: -11.383963584899902
    9. '=int' → logprob: -11.383963584899902
    10. '<|end|>' → logprob: -12.383963584899902

Token 21: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.0004143456753809005
    2. ')' → logprob: -8.37541389465332
    3. '(' → logprob: -9.50041389465332
    4. ',' → logprob: -10.00041389465332
    5. '(std' → logprob: -11.12541389465332
    6. 'stdin' → logprob: -11.25041389465332
    7. '(stdout' → logprob: -11.37541389465332
    8. '(st' → logprob: -12.12541389465332
    9. '(stderr' → logprob: -12.50041389465332
    10. '))' → logprob: -12.87541389465332

Token 22: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.43803882598876953
    2. ' stdin' → logprob: -1.0630388259887695
    3. '(stdin' → logprob: -4.6880388259887695
    4. '.stdin' → logprob: -10.43803882598877
    5. ' std' → logprob: -10.43803882598877
    6. 'std' → logprob: -11.43803882598877
    7. ')' → logprob: -11.56303882598877
    8. 'stdout' → logprob: -12.43803882598877
    9. ' ' → logprob: -12.93803882598877
    10. '   ' → logprob: -13.93803882598877

Token 23: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -8.947715832618997e-05
    2. '.' → logprob: -9.375089645385742
    3. '.readlines' → logprob: -13.000089645385742
    4. '().' → logprob: -13.500089645385742
    5. ' .' → logprob: -14.375089645385742
    6. ' readline' → logprob: -15.375089645385742
    7. ').' → logprob: -16.500089645385742
    8. '.read' → logprob: -16.625089645385742
    9. ')' → logprob: -17.875089645385742
    10. '_read' → logprob: -19.875089645385742

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006290537305176258
    2. '())' → logprob: -5.756290435791016
    3. '()))' → logprob: -6.131290435791016
    4. '()' → logprob: -7.131290435791016
    5. '())))' → logprob: -9.131290435791016
    6. ')' → logprob: -11.506290435791016
    7. '()));' → logprob: -12.506290435791016
    8. '()),' → logprob: -12.506290435791016
    9. '()).' → logprob: -12.881290435791016
    10. '()-' → logprob: -13.631290435791016

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03857991099357605
    2. 'strip' → logprob: -3.2885799407958984
    3. 'rstrip' → logprob: -7.538579940795898
    4. ' split' → logprob: -12.288579940795898
    5. 'rs' → logprob: -14.913579940795898
    6. ')' → logprob: -15.163579940795898
    7. ' strip' → logprob: -15.163579940795898
    8. '(split' → logprob: -15.538579940795898
    9. '```' → logprob: -15.913579940795898
    10. ' ' → logprob: -16.4135799407959

Token 26: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2839150130748749
    2. '))' → logprob: -1.7839150428771973
    3. '())' → logprob: -2.9089150428771973
    4. ')' → logprob: -4.158915042877197
    5. '()' → logprob: -4.783915042877197
    6. '(' → logprob: -7.658915042877197
    7. '()))
' → logprob: -9.033914566040039
    8. ')))' → logprob: -10.783914566040039
    9. '())))' → logprob: -10.908914566040039
    10. '()))

' → logprob: -12.158914566040039

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03371969982981682
    2. '    
' → logprob: -4.283719539642334
    3. ' ' → logprob: -5.408719539642334
    4. '\' → logprob: -6.158719539642334
    5. ' 
' → logprob: -6.283719539642334
    6. '
' → logprob: -6.408719539642334
    7. '```' → logprob: -6.408719539642334
    8. '\n' → logprob: -6.533719539642334
    9. '  
' → logprob: -7.033719539642334
    10. ')' → logprob: -7.158719539642334

Token 28: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027366135269403458
    2. '    
' → logprob: -4.5273661613464355
    3. 'for' → logprob: -5.5273661613464355
    4. ' for' → logprob: -6.4023661613464355
    5. '    ' → logprob: -6.5273661613464355
    6. ' ' → logprob: -6.6523661613464355
    7. 'i' → logprob: -6.7773661613464355
    8. 'sum' → logprob: -7.4023661613464355
    9. '
' → logprob: -7.6523661613464355
    10. 'd' → logprob: -7.6523661613464355

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007617863826453686
    2. '=' → logprob: -5.007617950439453
    3. '.' → logprob: -7.882617950439453
    4. '[' → logprob: -8.382617950439453
    5. '.append' → logprob: -9.507617950439453
    6. '_' → logprob: -9.632617950439453
    7. ')' → logprob: -10.132617950439453
    8. '[]' → logprob: -10.632617950439453
    9. '  ' → logprob: -11.382617950439453
    10. ' .' → logprob: -11.507617950439453

Token 30: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.0644674301147461
    2. 'list' → logprob: -2.814467430114746
    3. ' a' → logprob: -6.814467430114746
    4. ' []' → logprob: -7.439467430114746
    5. ' [' → logprob: -7.814467430114746
    6. 'a' → logprob: -8.189467430114746
    7. '[]' → logprob: -10.064467430114746
    8. '[' → logprob: -10.189467430114746
    9. '[a' → logprob: -11.064467430114746
    10. ' ' → logprob: -11.564467430114746

Token 31: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.126949742436409
    2. '(' → logprob: -2.1269497871398926
    3. '(
' → logprob: -11.626949310302734
    4. '(int' → logprob: -12.626949310302734
    5. ' (' → logprob: -13.001949310302734
    6. '(ma' → logprob: -13.251949310302734
    7. '(

' → logprob: -13.376949310302734
    8. '(m' → logprob: -13.376949310302734
    9. '(s' → logprob: -15.126949310302734
    10. '(filter' → logprob: -15.251949310302734

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0207196231931448
    2. '(' → logprob: -3.895719528198242
    3. '<int' → logprob: -9.020719528198242
    4. ' (' → logprob: -11.395719528198242
    5. 'int' → logprob: -12.020719528198242
    6. '=int' → logprob: -12.020719528198242
    7. ')(' → logprob: -12.270719528198242
    8. ']int' → logprob: -12.520719528198242
    9. '[int' → logprob: -12.645719528198242
    10. ',int' → logprob: -12.770719528198242

Token 33: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44087719917297363
    2. '(int' → logprob: -1.4408771991729736
    3. '(stdin' → logprob: -2.4408771991729736
    4. ',' → logprob: -3.4408771991729736
    5. ',int' → logprob: -8.065876960754395
    6. ')' → logprob: -8.565876960754395
    7. ' ,' → logprob: -9.815876960754395
    8. ' (' → logprob: -10.815876960754395
    9. '(stdout' → logprob: -10.815876960754395
    10. '(std' → logprob: -10.940876960754395

Token 34: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.6243273615837097
    2. 'stdin' → logprob: -0.9993273615837097
    3. 'int' → logprob: -2.7493274211883545
    4. ' int' → logprob: -3.8743274211883545
    5. '(stdin' → logprob: -4.499327182769775
    6. '(int' → logprob: -8.124327659606934
    7. '[int' → logprob: -10.999327659606934
    8. '.stdin' → logprob: -11.124327659606934
    9. '<int' → logprob: -11.374327659606934
    10. 'ints' → logprob: -11.499327659606934

Token 35: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.723973582556937e-05
    2. '.readlines' → logprob: -11.625017166137695
    3. '.' → logprob: -12.875017166137695
    4. '.stdin' → logprob: -12.875017166137695
    5. '().' → logprob: -13.125017166137695
    6. '.read' → logprob: -14.375017166137695
    7. '.stdout' → logprob: -16.250017166137695
    8. '.write' → logprob: -16.500017166137695
    9. ' .' → logprob: -16.875017166137695
    10. ' readline' → logprob: -17.000017166137695

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020830852736253291
    2. '()' → logprob: -8.500207901000977
    3. '()))' → logprob: -12.875207901000977
    4. '())' → logprob: -14.000207901000977
    5. '()));' → logprob: -14.875207901000977
    6. ' ().' → logprob: -15.125207901000977
    7. '()[' → logprob: -15.500207901000977
    8. '()
' → logprob: -16.125207901000977
    9. '()).' → logprob: -16.250207901000977
    10. '()-' → logprob: -16.500207901000977

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.438573680294212e-06
    2. ' split' → logprob: -12.875005722045898
    3. 'strip' → logprob: -12.875005722045898
    4. ')' → logprob: -16.5000057220459
    5. 'rstrip' → logprob: -16.5000057220459
    6. '(split' → logprob: -17.3750057220459
    7. 'spl' → logprob: -18.1250057220459
    8. '.split' → logprob: -18.3750057220459
    9. '```' → logprob: -18.5000057220459
    10. 'read' → logprob: -19.2500057220459

Token 38: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.028781389817595482
    2. '())' → logprob: -4.153781414031982
    3. '()' → logprob: -4.528781414031982
    4. '))' → logprob: -6.403781414031982
    5. '()))
' → logprob: -8.778780937194824
    6. ')' → logprob: -10.778780937194824
    7. '()));' → logprob: -10.903780937194824
    8. '(' → logprob: -11.778780937194824
    9. '()))

' → logprob: -12.403780937194824
    10. '())))' → logprob: -13.278780937194824

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2529168426990509
    2. '
' → logprob: -1.8779168128967285
    3. '    
' → logprob: -3.1279168128967285
    4. 'c' → logprob: -5.3779168128967285
    5. 'n' → logprob: -5.8779168128967285
    6. ')' → logprob: -6.1279168128967285
    7. '<|end|>' → logprob: -6.1279168128967285
    8. 'for' → logprob: -6.5029168128967285
    9. '\n' → logprob: -6.5029168128967285
    10. '```' → logprob: -6.7529168128967285

Token 40: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5101986527442932
    2. 'c' → logprob: -2.0101985931396484
    3. 'result' → logprob: -2.8851985931396484
    4. 'd' → logprob: -3.3851985931396484
    5. '    
' → logprob: -3.3851985931396484
    6. 'total' → logprob: -3.8851985931396484
    7. '```' → logprob: -4.135198593139648
    8. '
' → logprob: -4.260198593139648
    9. 'for' → logprob: -4.385198593139648
    10. 's' → logprob: -4.385198593139648

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028330838307738304
    2. '=' → logprob: -4.6533308029174805
    3. '[' → logprob: -4.6533308029174805
    4. '_' → logprob: -5.1533308029174805
    5. '[:]' → logprob: -6.6533308029174805
    6. ' +=' → logprob: -7.4033308029174805
    7. '.' → logprob: -7.7783308029174805
    8. '[]' → logprob: -8.15333080291748
    9. ' ' → logprob: -8.90333080291748
    10. '.append' → logprob: -9.40333080291748

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0552233457565308
    2. '0' → logprob: -1.3052233457565308
    3. ' []' → logprob: -1.4302233457565308
    4. ' [' → logprob: -2.1802234649658203
    5. '[]' → logprob: -4.30522346496582
    6. '[' → logprob: -5.80522346496582
    7. ' set' → logprob: -5.93022346496582
    8. ' a' → logprob: -6.05522346496582
    9. '[a' → logprob: -6.05522346496582
    10. ' max' → logprob: -6.55522346496582

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05500143766403198
    2. '[]' → logprob: -3.8050014972686768
    3. '[' → logprob: -4.180001258850098
    4. 'max' → logprob: -5.430001258850098
    5. 'abs' → logprob: -5.805001258850098
    6. 'a' → logprob: -5.930001258850098
    7. '[a' → logprob: -6.055001258850098
    8. 'sum' → logprob: -6.555001258850098
    9. '[max' → logprob: -7.305001258850098
    10. 'float' → logprob: -7.805001258850098

Token 44: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.612887442111969
    2. ' for' → logprob: -1.9878873825073242
    3. '   ' → logprob: -2.237887382507324
    4. 'for' → logprob: -2.487887382507324
    5. '\n' → logprob: -2.987887382507324
    6. '<|end|>' → logprob: -3.362887382507324
    7. ' ' → logprob: -4.737887382507324
    8. ' 
' → logprob: -4.737887382507324
    9. '\' → logprob: -4.737887382507324
    10. '' → logprob: -5.112887382507324

Token 45: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8150666952133179
    2. '   ' → logprob: -1.4400666952133179
    3. 'for' → logprob: -2.3150668144226074
    4. '
' → logprob: -2.5650668144226074
    5. ' for' → logprob: -2.6900668144226074
    6. '\' → logprob: -2.9400668144226074
    7. '    
' → logprob: -5.315066814422607
    8. ' ' → logprob: -5.815066814422607
    9. '' → logprob: -5.940066814422607
    10. '<|end|>' → logprob: -5.940066814422607

Token 46: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2560475468635559
    2. ' for' → logprob: -2.256047487258911
    3. '\n' → logprob: -2.506047487258911
    4. '
' → logprob: -4.50604772567749
    5. '   ' → logprob: -4.63104772567749
    6. '```' → logprob: -5.00604772567749
    7. '\' → logprob: -5.13104772567749
    8. '	for' → logprob: -6.50604772567749
    9. ' ' → logprob: -6.88104772567749
    10. '' → logprob: -7.13104772567749

Token 47: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4763930141925812
    2. ' i' → logprob: -0.9763929843902588
    3. '  ' → logprob: -6.476393222808838
    4. '_' → logprob: -8.22639274597168
    5. 'i' → logprob: -8.35139274597168
    6. ' _' → logprob: -9.10139274597168
    7. ' ‌' → logprob: -9.47639274597168
    8. ' a' → logprob: -10.72639274597168
    9. ' I' → logprob: -11.47639274597168
    10. ' x' → logprob: -11.72639274597168

Token 48: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0934050902724266
    2. 'in' → logprob: -2.46840500831604
    3. ' ' → logprob: -5.843405246734619
    4. '  ' → logprob: -6.968405246734619
    5. '+' → logprob: -8.593404769897461
    6. '<|end|>' → logprob: -9.218404769897461
    7. ')' → logprob: -9.343404769897461
    8. 'n' → logprob: -10.718404769897461
    9. ' i' → logprob: -10.718404769897461
    10. ' n' → logprob: -10.843404769897461

Token 49: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1157677173614502
    2. ' x' → logprob: -1.8657677173614502
    3. '(ai' → logprob: -1.8657677173614502
    4. ' ai' → logprob: -2.74076771736145
    5. '(x' → logprob: -3.24076771736145
    6. 'x' → logprob: -3.24076771736145
    7. '(' → logprob: -3.24076771736145
    8. '(value' → logprob: -3.49076771736145
    9. ' val' → logprob: -3.61576771736145
    10. ' v' → logprob: -4.115767478942871

Token 50: 'ai' (ID: 1361)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07305792719125748
    2. 'ai' → logprob: -2.9480578899383545
    3. 'a' → logprob: -4.073058128356934
    4. 'aa' → logprob: -7.698058128356934
    5. 'aval' → logprob: -8.573058128356934
    6. 'av' → logprob: -8.948058128356934
    7. ' x' → logprob: -10.073058128356934
    8. 'ax' → logprob: -10.198058128356934
    9. 'val' → logprob: -10.573058128356934
    10. '_ai' → logprob: -10.823058128356934

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028266964363865554
    2. ' ,' → logprob: -8.375282287597656
    3. ',b' → logprob: -9.875282287597656
    4. ',
' → logprob: -15.875282287597656
    5. ',)' → logprob: -16.125282287597656
    6. ',a' → logprob: -16.500282287597656
    7. '‌,' → logprob: -16.750282287597656
    8. '_,' → logprob: -16.750282287597656
    9. ')' → logprob: -17.625282287597656
    10. ',j' → logprob: -18.000282287597656

Token 52: ' bi' (ID: 4424)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.014166327193379402
    2. ' bi' → logprob: -4.264166355133057
    3. ' ' → logprob: -14.264165878295898
    4. 'b' → logprob: -14.389165878295898
    5. 'bj' → logprob: -14.514165878295898
    6. '.bi' → logprob: -14.889165878295898
    7. ')' → logprob: -15.264165878295898
    8. 'Bi' → logprob: -16.5141658782959
    9. '-bi' → logprob: -16.8891658782959
    10. ' bj' → logprob: -17.1391658782959

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. ' )' → logprob: -11.000020027160645
    3. 'in' → logprob: -13.500020027160645
    4. ' in' → logprob: -14.125020027160645
    5. ')...' → logprob: -16.000019073486328
    6. ')
' → logprob: -16.750019073486328
    7. ')`' → logprob: -16.750019073486328
    8. ')=' → logprob: -17.125019073486328
    9. '),' → logprob: -17.125019073486328
    10. 's' → logprob: -17.250019073486328

Token 54: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5561732053756714
    2. ' in' → logprob: -0.9311732053756714
    3. ')' → logprob: -3.431173324584961
    4. ' )' → logprob: -9.431173324584961
    5. '	in' → logprob: -10.431173324584961
    6. ' ' → logprob: -10.931173324584961
    7. '   ' → logprob: -11.931173324584961
    8. ',' → logprob: -12.181173324584961
    9. '),' → logprob: -12.306173324584961
    10. '  ' → logprob: -12.931173324584961

Token 55: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.01815778948366642
    2. 'enumer' → logprob: -4.018157958984375
    3. ' enumer' → logprob: -12.393157958984375
    4. ')' → logprob: -14.143157958984375
    5. ' ' → logprob: -14.143157958984375
    6. ' enumeration' → logprob: -14.393157958984375
    7. ' enum' → logprob: -14.768157958984375
    8. ' en' → logprob: -14.893157958984375
    9. 'Enumer' → logprob: -15.018157958984375
    10. ' in' → logprob: -15.143157958984375

Token 56: '(zip' (ID: 87520)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6813799738883972
    2. '(a' → logprob: -0.8063799738883972
    3. '(zip' → logprob: -3.431380033493042
    4. '(en' → logprob: -4.431379795074463
    5. '((' → logprob: -6.431379795074463
    6. '(b' → logprob: -6.806379795074463
    7. ' (' → logprob: -8.556380271911621
    8. '(range' → logprob: -8.681380271911621
    9. ')' → logprob: -10.056380271911621
    10. '(s' → logprob: -10.181380271911621

Token 57: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.583550642360933e-05
    2. '(' → logprob: -10.250036239624023
    3. ' (' → logprob: -15.000036239624023
    4. 'a' → logprob: -17.375036239624023
    5. ')(' → logprob: -17.500036239624023
    6. '(
' → logprob: -17.750036239624023
    7. '   ' → logprob: -18.250036239624023
    8. ')' → logprob: -18.625036239624023
    9. '(ai' → logprob: -19.000036239624023
    10. '(b' → logprob: -19.375036239624023

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006273355334997177
    2. ',b' → logprob: -5.50627326965332
    3. ' ,' → logprob: -6.13127326965332
    4. ',
' → logprob: -12.63127326965332
    5. '   ' → logprob: -13.13127326965332
    6. '),' → logprob: -13.25627326965332
    7. '‌,' → logprob: -13.25627326965332
    8. ' ' → logprob: -13.38127326965332
    9. ',i' → logprob: -13.75627326965332
    10. 'b' → logprob: -14.00627326965332

Token 59: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11282911896705627
    2. ' b' → logprob: -2.2378292083740234
    3. ')' → logprob: -12.987829208374023
    4. ')b' → logprob: -12.987829208374023
    5. ' ' → logprob: -14.237829208374023
    6. '   ' → logprob: -15.237829208374023
    7. '    ' → logprob: -15.237829208374023
    8. '	b' → logprob: -15.362829208374023
    9. '))' → logprob: -16.050329208374023
    10. ' ' → logprob: -16.550329208374023

Token 60: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.01838708482682705
    2. '))' → logprob: -4.393387317657471
    3. '):' → logprob: -5.268387317657471
    4. ')):
' → logprob: -7.643387317657471
    5. ')' → logprob: -9.268386840820312
    6. ' ))' → logprob: -10.393386840820312
    7. ':' → logprob: -10.643386840820312
    8. ')):
' → logprob: -10.768386840820312
    9. ' ' → logprob: -10.893386840820312
    10. '   ' → logprob: -11.643386840820312

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1792699247598648
    2. ':' → logprob: -1.9292699098587036
    3. '):' → logprob: -4.679269790649414
    4. '   ' → logprob: -5.804269790649414
    5. ' :' → logprob: -6.679269790649414
    6. ' ' → logprob: -6.679269790649414
    7. ':
' → logprob: -7.429269790649414
    8. '    ' → logprob: -7.554269790649414
    9. '        
' → logprob: -7.679269790649414
    10. ' 
' → logprob: -8.179269790649414

Token 62: ' used' (ID: 2061)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06476960331201553
    2. '    ' → logprob: -4.189769744873047
    3. ' if' → logprob: -4.189769744873047
    4. ' 
' → logprob: -4.689769744873047
    5. '       ' → logprob: -4.939769744873047
    6. 'if' → logprob: -5.064769744873047
    7. '        ' → logprob: -5.814769744873047
    8. '<|end|>' → logprob: -5.814769744873047
    9. '   ' → logprob: -6.939769744873047
    10. '  ' → logprob: -8.064769744873047

Token 63: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.22614121437072754
    2. ' =' → logprob: -1.9761412143707275
    3. ' ' → logprob: -3.7261412143707275
    4. ' |=' → logprob: -4.101140975952148
    5. '_' → logprob: -4.851140975952148
    6. '[' → logprob: -5.226140975952148
    7. '=' → logprob: -5.726140975952148
    8. '+=' → logprob: -5.976140975952148
    9. '[i' → logprob: -7.101140975952148
    10. '  ' → logprob: -7.476140975952148

Token 64: ' min' (ID: 1349)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6329513192176819
    2. ' min' → logprob: -2.507951259613037
    3. 'ai' → logprob: -2.632951259613037
    4. ' ' → logprob: -2.882951259613037
    5. 'False' → logprob: -3.257951259613037
    6. ' ai' → logprob: -3.257951259613037
    7. 'min' → logprob: -3.382951259613037
    8. 'bi' → logprob: -3.507951259613037
    9. ' max' → logprob: -3.632951259613037
    10. ' False' → logprob: -3.757951259613037

Token 65: '(ai' (ID: 172264)
  Prédit: '(ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ai' → logprob: -0.0028238967061042786
    2. '(' → logprob: -5.877823829650879
    3. '(a' → logprob: -11.002823829650879
    4. '(
' → logprob: -14.502823829650879
    5. '(ui' → logprob: -14.877823829650879
    6. '(b' → logprob: -15.002823829650879
    7. ' (' → logprob: -15.252823829650879
    8. '((' → logprob: -15.502823829650879
    9. '(i' → logprob: -16.002824783325195
    10. '(s' → logprob: -16.252824783325195

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08897414058446884
    2. ' ,' → logprob: -2.4639742374420166
    3. ',b' → logprob: -10.463973999023438
    4. ' ' → logprob: -12.838973999023438
    5. ',
' → logprob: -14.088973999023438
    6. ')' → logprob: -14.463973999023438
    7. ' bi' → logprob: -14.838973999023438
    8. 'bi' → logprob: -15.088973999023438
    9. '),' → logprob: -15.213973999023438
    10. '‌,' → logprob: -15.588973999023438

Token 67: ' bi' (ID: 4424)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.2254435420036316
    2. ' bi' → logprob: -1.6004436016082764
    3. ')' → logprob: -11.475443840026855
    4. 'b' → logprob: -12.100443840026855
    5. '   ' → logprob: -12.475443840026855
    6. 'bie' → logprob: -13.350443840026855
    7. ' ' → logprob: -13.475443840026855
    8. 'biotic' → logprob: -13.912943840026855
    9. '.bi' → logprob: -13.975443840026855
    10. 'ai' → logprob: -14.037943840026855

Token 68: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026643596589565277
    2. ')
' → logprob: -3.6516435146331787
    3. '))' → logprob: -9.026643753051758
    4. ')
' → logprob: -9.526643753051758
    5. '       ' → logprob: -9.901643753051758
    6. '   ' → logprob: -10.151643753051758
    7. ' )' → logprob: -10.151643753051758
    8. '))
' → logprob: -12.026643753051758
    9. ' )
' → logprob: -12.276643753051758
    10. ')

' → logprob: -12.776643753051758

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3109486997127533
    2. '
' → logprob: -2.060948610305786
    3. '<|end|>' → logprob: -2.060948610305786
    4. '        
' → logprob: -5.435948848724365
    5. '<|end|>' → logprob: -5.560948848724365
    6. '\n' → logprob: -7.185948848724365
    7. '    
' → logprob: -7.185948848724365
    8. '   ' → logprob: -7.310948848724365
    9. ')' → logprob: -7.310948848724365
    10. '```' → logprob: -8.060948371887207

Token 70: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.24910151958465576
    2. 'ans' (adapté à ' ans') → logprob: -2.6241016387939453
    3. ' ai' → logprob: -2.8741016387939453
    4. 'ai' → logprob: -3.4991016387939453
    5. '       ' → logprob: -3.8741016387939453
    6. ' a' → logprob: -4.249101638793945
    7. 'a' → logprob: -4.499101638793945
    8. ' 
' → logprob: -4.749101638793945
    9. '        
' → logprob: -6.124101638793945
    10. '
' → logprob: -7.749101638793945

Token 71: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0024962294846773148
    2. '+=' → logprob: -6.127496242523193
    3. '+' → logprob: -8.127495765686035
    4. ' +' → logprob: -11.877495765686035
    5. ' ' → logprob: -13.502495765686035
    6. '    ' → logprob: -13.752495765686035
    7. '+='' → logprob: -13.752495765686035
    8. ' -=' → logprob: -13.877495765686035
    9. '<|end|>' → logprob: -14.252495765686035
    10. '	' → logprob: -14.377495765686035

Token 72: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.018278708681464195
    2. 'used' → logprob: -4.0182785987854
    3. ' ' → logprob: -9.143279075622559
    4. '1' → logprob: -11.518279075622559
    5. '2' → logprob: -12.393279075622559
    6. '   ' → logprob: -13.143279075622559
    7. ' ' → logprob: -13.393279075622559
    8. '4' → logprob: -14.643279075622559
    9. '0' → logprob: -14.893279075622559
    10. '.used' → logprob: -14.893279075622559

Token 73: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.004784107208252
    2. '    
' → logprob: -1.504784107208252
    3. '\n' → logprob: -1.629784107208252
    4. '   ' → logprob: -2.379784107208252
    5. '  
' → logprob: -3.629784107208252
    6. ' 
' → logprob: -4.129784107208252
    7. '```' → logprob: -4.129784107208252
    8. '<|end|>' → logprob: -4.254784107208252
    9. '   
' → logprob: -4.629784107208252
    10. '       ' → logprob: -5.129784107208252

Token 74: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38754943013191223
    2. '    
' → logprob: -1.8875494003295898
    3. '<|end|>' → logprob: -2.76254940032959
    4. '       ' → logprob: -3.01254940032959
    5. '  
' → logprob: -4.13754940032959
    6. '
' → logprob: -4.76254940032959
    7. ' ' → logprob: -4.88754940032959
    8. '        
' → logprob: -5.26254940032959
    9. '\n' → logprob: -5.38754940032959
    10. ' 
' → logprob: -5.63754940032959

Token 75: ' rem' (ID: 1662)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.027955777943134308
    2. ' a' → logprob: -4.027956008911133
    3. 'ai' → logprob: -4.902956008911133
    4. '       ' → logprob: -6.652956008911133
    5. '   ' → logprob: -7.402956008911133
    6. ' ai' → logprob: -8.152956008911133
    7. '	a' → logprob: -9.902956008911133
    8. '        
' → logprob: -10.527956008911133
    9. '<|end|>' → logprob: -11.402956008911133
    10. ' ' → logprob: -11.402956008911133

Token 76: ' =' (ID: 314)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.9126642346382141
    2. 'a' → logprob: -1.1626641750335693
    3. '_ai' → logprob: -1.6626641750335693
    4. ' =' → logprob: -3.1626641750335693
    5. 'ain' → logprob: -3.4126641750335693
    6. '_a' → logprob: -4.287664413452148
    7. 'aining' → logprob: -6.037664413452148
    8. '_' → logprob: -6.037664413452148
    9. '   ' → logprob: -7.037664413452148
    10. '=' → logprob: -7.537664413452148

Token 77: ' bi' (ID: 4424)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.6539047956466675
    2. ' ai' → logprob: -0.7789047956466675
    3. 'bi' → logprob: -4.153904914855957
    4. '(ai' → logprob: -5.778904914855957
    5. ' bi' → logprob: -6.403904914855957
    6. 'a' → logprob: -9.028904914855957
    7. ' ' → logprob: -9.278904914855957
    8. '   ' → logprob: -9.403904914855957
    9. '_ai' → logprob: -9.903904914855957
    10. 'max' → logprob: -10.153904914855957

Token 78: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12699487805366516
    2. '-' → logprob: -2.1269948482513428
    3. ' ' → logprob: -9.751995086669922
    4. '-ai' → logprob: -12.626995086669922
    5. ' -
' → logprob: -13.626995086669922
    6. '   ' → logprob: -14.001995086669922
    7. ' -=' → logprob: -14.751995086669922
    8. '       ' → logprob: -15.001995086669922
    9. '<|end|>' → logprob: -15.126995086669922
    10. '-
' → logprob: -15.376995086669922

Token 79: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.07890377938747406
    2. ' used' → logprob: -2.5789036750793457
    3. '   ' → logprob: -11.953904151916504
    4. '_used' → logprob: -13.453904151916504
    5. 'ai' → logprob: -13.703904151916504
    6. 'use' → logprob: -14.078904151916504
    7. ' ai' → logprob: -14.328904151916504
    8. 'Used' → logprob: -14.328904151916504
    9. ' ' → logprob: -14.453904151916504
    10. '<|end|>' → logprob: -14.703904151916504

Token 80: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3853011131286621
    2. ' ai' → logprob: -1.760301113128662
    3. ' if' → logprob: -2.635301113128662
    4. ' 
' → logprob: -3.510301113128662
    5. '<|end|>' → logprob: -3.885301113128662
    6. '  
' → logprob: -5.010301113128662
    7. 'ai' → logprob: -5.260301113128662
    8. '       ' → logprob: -5.885301113128662
    9. '    
' → logprob: -6.135301113128662
    10. '        
' → logprob: -6.260301113128662

Token 81: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5078428983688354
    2. '<|end|>' → logprob: -1.1328428983688354
    3. '       ' → logprob: -3.132843017578125
    4. '  
' → logprob: -4.882843017578125
    5. '   ' → logprob: -5.007843017578125
    6. ' for' → logprob: -5.132843017578125
    7. '        
' → logprob: -5.882843017578125
    8. '    
' → logprob: -5.882843017578125
    9. '<|end|>' → logprob: -6.382843017578125
    10. ' 
' → logprob: -6.507843017578125

Token 82: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7871339321136475
    2. ' for' → logprob: -1.4121339321136475
    3. 'if' (adapté à ' if') → logprob: -1.9121339321136475
    4. 'a' → logprob: -3.2871339321136475
    5. 'for' → logprob: -3.2871339321136475
    6. ' a' → logprob: -3.7871339321136475
    7. '   ' → logprob: -4.162134170532227
    8. ' ai' → logprob: -4.287134170532227
    9. 'ai' → logprob: -4.912134170532227
    10. '       ' → logprob: -5.162134170532227

Token 83: ' i' (ID: 575)
  Prédit: ' rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rem' → logprob: -0.7516500949859619
    2. ' ai' → logprob: -1.251650094985962
    3. ' i' → logprob: -1.626650094985962
    4. 'i' → logprob: -4.376649856567383
    5. ' a' → logprob: -4.751649856567383
    6. 'rem' → logprob: -4.876649856567383
    7. ' ' → logprob: -4.876649856567383
    8. ' used' → logprob: -5.126649856567383
    9. 'ai' → logprob: -6.751649856567383
    10. 'a' → logprob: -7.251649856567383

Token 84: ' +' (ID: 659)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9854980707168579
    2. '+' → logprob: -1.360498070716858
    3. ' >' → logprob: -1.735498070716858
    4. ' +' → logprob: -1.985498070716858
    5. ' ' → logprob: -3.6104979515075684
    6. '>' → logprob: -4.360497951507568
    7. '<' → logprob: -5.110497951507568
    8. ' ==' → logprob: -5.235497951507568
    9. ' !=' → logprob: -6.360497951507568
    10. '==' → logprob: -7.235497951507568

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42874887585639954
    2. ' ' → logprob: -1.0537488460540771
    3. '<|end|>' → logprob: -10.803749084472656
    4. ' <' → logprob: -11.178749084472656
    5. '2' → logprob: -11.678749084472656
    6. '  ' → logprob: -13.553749084472656
    7. '+' → logprob: -13.678749084472656
    8. '   ' → logprob: -14.366249084472656
    9. '<' → logprob: -14.928749084472656
    10. '<|end|>' → logprob: -15.491249084472656

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.670925358776003e-05
    2. ' ' → logprob: -9.875066757202148
    3. '2' → logprob: -11.750066757202148
    4. '<|end|>' → logprob: -12.500066757202148
    5. '<' → logprob: -13.500066757202148
    6. '```' → logprob: -13.750066757202148
    7. ' <' → logprob: -15.687566757202148
    8. '  ' → logprob: -15.812566757202148
    9. '<len' → logprob: -15.875066757202148
    10. '-' → logprob: -16.43756675720215

Token 87: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06450286507606506
    2. '<' → logprob: -2.8145029544830322
    3. ' ' → logprob: -6.689502716064453
    4. '<len' → logprob: -6.814502716064453
    5. ' ==' → logprob: -9.564502716064453
    6. '<n' → logprob: -10.564502716064453
    7. '<size' → logprob: -10.814502716064453
    8. '==' → logprob: -11.939502716064453
    9. ')' → logprob: -12.064502716064453
    10. '[' → logprob: -12.252002716064453

Token 88: ' len' (ID: 4631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39800310134887695
    2. ' n' → logprob: -1.148003101348877
    3. 'len' → logprob: -4.898003101348877
    4. ' len' → logprob: -5.648003101348877
    5. ' ' → logprob: -10.398002624511719
    6. '   ' → logprob: -10.773002624511719
    7. '	n' → logprob: -11.148002624511719
    8. '  ' → logprob: -12.773002624511719
    9. '<|end|>' → logprob: -12.773002624511719
    10. '	len' → logprob: -13.148002624511719

Token 89: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0010966418776661158
    2. '(b' → logprob: -7.251096725463867
    3. '(' → logprob: -8.126096725463867
    4. 'a' → logprob: -9.626096725463867
    5. '(ai' → logprob: -11.001096725463867
    6. '(s' → logprob: -13.376096725463867
    7. ' (' → logprob: -13.501096725463867
    8. 'b' → logprob: -13.501096725463867
    9. '(n' → logprob: -13.626096725463867
    10. ' a' → logprob: -14.751096725463867

Token 90: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07125487923622131
    2. '):' → logprob: -3.1962549686431885
    3. ' and' → logprob: -4.071254730224609
    4. '):
' → logprob: -5.321254730224609
    5. ' )' → logprob: -5.571254730224609
    6. 'and' → logprob: -6.321254730224609
    7. ' ):' → logprob: -9.07125473022461
    8. '):
' → logprob: -9.82125473022461
    9. ' ):
' → logprob: -10.32125473022461
    10. ':' → logprob: -10.69625473022461

Token 91: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.582553505897522
    2. '       ' → logprob: -1.707553505897522
    3. '           ' → logprob: -1.832553505897522
    4. ':
' → logprob: -2.5825533866882324
    5. ' and' → logprob: -4.207553386688232
    6. '<|end|>' → logprob: -6.207553386688232
    7. ' :' → logprob: -6.457553386688232
    8. ',' → logprob: -6.957553386688232
    9. ' :
' → logprob: -7.207553386688232
    10. '   ' → logprob: -7.457553386688232

Token 92: ' used' (ID: 2061)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.09778396040201187
    2. 'a' → logprob: -2.7227840423583984
    3. ' ai' → logprob: -4.097784042358398
    4. '               ' → logprob: -5.847784042358398
    5. ' 
' → logprob: -6.722784042358398
    6. '
' → logprob: -6.847784042358398
    7. '<|end|>' → logprob: -6.972784042358398
    8. '           ' → logprob: -7.097784042358398
    9. ' ' → logprob: -7.222784042358398
    10. 'ai' → logprob: -7.347784042358398

Token 93: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12682752311229706
    2. '=' → logprob: -2.2518274784088135
    3. ' +=' → logprob: -4.751827716827393
    4. '+=' → logprob: -5.251827716827393
    5. '+' → logprob: -11.251827239990234
    6. '2' → logprob: -12.001827239990234
    7. ' ' → logprob: -12.501827239990234
    8. ' +' → logprob: -13.751827239990234
    9. '  ' → logprob: -14.001827239990234
    10. 'a' → logprob: -14.126827239990234

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003690216923132539
    2. '=' → logprob: -5.628690242767334
    3. ' +=' → logprob: -9.378689765930176
    4. '+=' → logprob: -12.628689765930176
    5. ' ' → logprob: -13.628689765930176
    6. '=min' → logprob: -14.003689765930176
    7. ' -=' → logprob: -16.503690719604492
    8. '	' → logprob: -16.878690719604492
    9. '=max' → logprob: -17.378690719604492
    10. '2' → logprob: -17.628690719604492

Token 95: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10024097561836243
    2. ' min' → logprob: -2.35024094581604
    3. 'a' → logprob: -11.350240707397461
    4. 'max' → logprob: -11.600240707397461
    5. '	min' → logprob: -12.350240707397461
    6. 'rem' → logprob: -12.600240707397461
    7. '   ' → logprob: -12.975240707397461
    8. ' a' → logprob: -14.600240707397461
    9. '=min' → logprob: -14.600240707397461
    10. ' rem' → logprob: -14.725240707397461

Token 96: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00933408085256815
    2. '(rem' → logprob: -4.759334087371826
    3. '(' → logprob: -7.509334087371826
    4. '(ai' → logprob: -8.884333610534668
    5. ' (' → logprob: -11.134333610534668
    6. 'a' → logprob: -11.759333610534668
    7. 'rem' → logprob: -13.259333610534668
    8. '(rest' → logprob: -13.509333610534668
    9. ' a' → logprob: -13.884333610534668
    10. '(arr' → logprob: -14.134333610534668

Token 97: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.125005722045898
    3. 'i' → logprob: -16.2500057220459
    4. '[I' → logprob: -17.1250057220459
    5. ' [' → logprob: -18.0000057220459
    6. '[
' → logprob: -18.2500057220459
    7. '[a' → logprob: -18.6250057220459
    8. '[n' → logprob: -19.3750057220459
    9. '   ' → logprob: -19.5000057220459
    10. '[j' → logprob: -19.6250057220459

Token 98: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006825724616646767
    2. ' +' → logprob: -5.006825923919678
    3. '[' → logprob: -9.63182544708252
    4. '   ' → logprob: -10.88182544708252
    5. '+i' → logprob: -11.75682544708252
    6. '1' → logprob: -11.88182544708252
    7. '[i' → logprob: -12.50682544708252
    8. ' ' → logprob: -13.13182544708252
    9. '+
' → logprob: -13.88182544708252
    10. ']' → logprob: -14.25682544708252

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028302724240347743
    2. '+' → logprob: -8.750283241271973
    3. ']' → logprob: -10.250283241271973
    4. ' ' → logprob: -10.500283241271973
    5. '   ' → logprob: -10.875283241271973
    6. '])' → logprob: -11.125283241271973
    7. 'i' → logprob: -11.375283241271973
    8. ')' → logprob: -12.625283241271973
    9. '-' → logprob: -13.000283241271973
    10. '[i' → logprob: -13.250283241271973

Token 100: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06371217221021652
    2. '],' → logprob: -2.8137121200561523
    3. ' ,' → logprob: -6.813712120056152
    4. '),' → logprob: -7.813712120056152
    5. '   ' → logprob: -9.063712120056152
    6. '},' → logprob: -10.438712120056152
    7. '‌,' → logprob: -11.063712120056152
    8. ' ' → logprob: -11.313712120056152
    9. ']' → logprob: -11.313712120056152
    10. ' ],' → logprob: -11.688712120056152

Token 101: ' rem' (ID: 1662)
  Prédit: ' rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rem' → logprob: -0.0009119403548538685
    2. 'rem' → logprob: -7.000911712646484
    3. '(rem' → logprob: -15.125911712646484
    4. '_rem' → logprob: -16.625911712646484
    5. ' ' → logprob: -16.750911712646484
    6. 'Rem' → logprob: -16.875911712646484
    7. ' ' → logprob: -17.500911712646484
    8. ')' → logprob: -17.750911712646484
    9. 'b' → logprob: -18.750911712646484
    10. '    ' → logprob: -18.750911712646484

Token 102: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25297191739082336
    2. ')' → logprob: -1.502971887588501
    3. ')
' → logprob: -6.87797212600708
    4. ')

' → logprob: -12.502971649169922
    5. '       ' → logprob: -12.752971649169922
    6. ' )
' → logprob: -12.877971649169922
    7. '           ' → logprob: -13.252971649169922
    8. ' )' → logprob: -14.627971649169922
    9. '   ' → logprob: -15.627971649169922
    10. ')

' → logprob: -16.502971649169922

Token 103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.549094021320343
    2. '
' → logprob: -0.924094021320343
    3. '       ' → logprob: -3.7990939617156982
    4. '            
' → logprob: -6.799094200134277
    5. '        
' → logprob: -7.424094200134277
    6. '   ' → logprob: -8.424094200134277
    7. '<|end|>' → logprob: -8.424094200134277
    8. '
' → logprob: -8.674094200134277
    9. '    
' → logprob: -8.674094200134277
    10. '  
' → logprob: -8.924094200134277

Token 104: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.35359230637550354
    2. ' a' → logprob: -1.6035922765731812
    3. 'a' → logprob: -2.9785923957824707
    4. '           ' → logprob: -3.7285923957824707
    5. 'ans' (adapté à ' ans') → logprob: -4.103592395782471
    6. '       ' → logprob: -6.853592395782471
    7. '
' → logprob: -6.853592395782471
    8. ' 
' → logprob: -6.978592395782471
    9. '   ' → logprob: -7.478592395782471
    10. '	ans' → logprob: -7.728592395782471

Token 105: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.012515892274677753
    2. '+=' → logprob: -4.387516021728516
    3. '+' → logprob: -12.512516021728516
    4. ' +' → logprob: -14.512516021728516
    5. '    ' → logprob: -14.762516021728516
    6. '<|end|>' → logprob: -15.012516021728516
    7. '+='' → logprob: -15.262516021728516
    8. ' -=' → logprob: -15.387516021728516
    9. ']+=' → logprob: -15.387516021728516
    10. '   ' → logprob: -15.762516021728516

Token 106: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.0067156096920371056
    2. 'used' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.881715774536133
    4. '    ' → logprob: -16.756715774536133
    5. '   ' → logprob: -16.756715774536133
    6. '_used' → logprob: -17.131715774536133
    7. ' ' → logprob: -17.256715774536133
    8. '.used' → logprob: -18.006715774536133
    9. ' usado' → logprob: -18.131715774536133
    10. 'Used' → logprob: -18.256715774536133

Token 107: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -15.75000286102295
    4. '  ' → logprob: -16.500003814697266
    5. '_' → logprob: -16.500003814697266
    6. '<|end|>' → logprob: -16.625003814697266
    7. '   ' → logprob: -16.750003814697266
    8. '₂' → logprob: -17.000003814697266
    9. '۲' → logprob: -18.125003814697266
    10. ')' → logprob: -18.500003814697266

Token 108: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20585481822490692
    2. '           ' → logprob: -1.7058547735214233
    3. '\n' → logprob: -5.955854892730713
    4. '       ' → logprob: -7.205854892730713
    5. '
' → logprob: -8.080854415893555
    6. '            
' → logprob: -8.830854415893555
    7. '<|end|>' → logprob: -9.080854415893555
    8. ' 
' → logprob: -9.330854415893555
    9. '   ' → logprob: -9.705854415893555
    10. 'newline' → logprob: -9.830854415893555

Token 109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006548931705765426
    2. '       ' → logprob: -8.125655174255371
    3. '   ' → logprob: -8.875655174255371
    4. 'a' → logprob: -9.250655174255371
    5. '<|end|>' → logprob: -10.750655174255371
    6. '               ' → logprob: -10.875655174255371
    7. 'print' → logprob: -10.875655174255371
    8. '```' → logprob: -11.000655174255371
    9. ' a' → logprob: -11.250655174255371
    10. '
' → logprob: -12.500655174255371

Token 110: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.10051655024290085
    2. ' a' → logprob: -2.3505165576934814
    3. '           ' → logprob: -8.600516319274902
    4. '   ' → logprob: -9.100516319274902
    5. '       ' → logprob: -12.350516319274902
    6. ' ' → logprob: -12.350516319274902
    7. '	a' → logprob: -12.975516319274902
    8. '    ' → logprob: -13.100516319274902
    9. '  ' → logprob: -14.725516319274902
    10. '               ' → logprob: -15.100516319274902

Token 111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -14.125001907348633
    3. '[a' → logprob: -14.625001907348633
    4. '   ' → logprob: -15.125001907348633
    5. 'i' → logprob: -15.500001907348633
    6. 'a' → logprob: -15.750001907348633
    7. '```' → logprob: -15.875001907348633
    8. ' ' → logprob: -17.000001907348633
    9. '
' → logprob: -17.000001907348633
    10. '  ' → logprob: -17.125001907348633

Token 112: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.7954958821064793e-05
    2. '+i' → logprob: -11.625018119812012
    3. ' +' → logprob: -12.000018119812012
    4. '+]' → logprob: -13.250018119812012
    5. '+
' → logprob: -14.750018119812012
    6. '   ' → logprob: -15.500018119812012
    7. '1' → logprob: -15.500018119812012
    8. ']' → logprob: -16.375017166137695
    9. '[' → logprob: -17.000017166137695
    10. ']+' → logprob: -17.500017166137695

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.25000286102295
    3. '<|end|>' → logprob: -14.62500286102295
    4. '+' → logprob: -14.87500286102295
    5. '   ' → logprob: -15.37500286102295
    6. '0' → logprob: -16.812503814697266
    7. '```' → logprob: -16.812503814697266
    8. '<|end|>' → logprob: -17.187503814697266
    9. '  ' → logprob: -17.375003814697266
    10. '2' → logprob: -17.625003814697266

Token 114: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.17773421108722687
    2. '-=' → logprob: -1.9277342557907104
    3. '-' → logprob: -4.302734375
    4. ')' → logprob: -6.052734375
    5. ']' → logprob: -7.552734375
    6. ' -' → logprob: -8.302734375
    7. '=' → logprob: -8.427734375
    8. ' ' → logprob: -8.552734375
    9. '    ' → logprob: -9.177734375
    10. '>' → logprob: -9.677734375

Token 115: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.12766440212726593
    2. ' -=' → logprob: -2.12766432762146
    3. '-' → logprob: -7.502664566040039
    4. '=' → logprob: -8.627664566040039
    5. ' =' → logprob: -13.002664566040039
    6. ' -' → logprob: -13.502664566040039
    7. ' ' → logprob: -13.627664566040039
    8. '+=' → logprob: -15.252664566040039
    9. ')' → logprob: -16.37766456604004
    10. '	' → logprob: -16.62766456604004

Token 116: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.00317783304490149
    2. ' used' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.128177642822266
    4. 'use' → logprob: -17.753177642822266
    5. '_used' → logprob: -17.753177642822266
    6. 'Used' → logprob: -18.378177642822266
    7. ' ' → logprob: -18.628177642822266
    8. '.used' → logprob: -18.628177642822266
    9. '-used' → logprob: -19.253177642822266
    10. '           ' → logprob: -20.003177642822266

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. 'used' → logprob: -17.875001907348633
    4. '  ' → logprob: -18.375001907348633
    5. '_' → logprob: -19.000001907348633
    6. ' used' → logprob: -19.625001907348633
    7. '₂' → logprob: -19.625001907348633
    8. '   ' → logprob: -19.750001907348633
    9. '```' → logprob: -19.875001907348633
    10. '-' → logprob: -20.125001907348633

Token 118: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5859920978546143
    2. 'if' → logprob: -2.0859920978546143
    3. 'print' → logprob: -2.0859920978546143
    4. '<|end|>' → logprob: -2.2109920978546143
    5. '
' → logprob: -2.7109920978546143
    6. '\n' → logprob: -4.960991859436035
    7. '    
' → logprob: -5.085991859436035
    8. ' if' → logprob: -6.585991859436035
    9. '```' → logprob: -6.835991859436035
    10. 'return' → logprob: -7.335991859436035

Token 120: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.040706340223550797
    2. 'return' → logprob: -3.4157063961029053
    3. '   ' → logprob: -5.040706157684326
    4. 'if' → logprob: -8.415706634521484
    5. ' print' → logprob: -9.040706634521484
    6. ' return' → logprob: -9.290706634521484
    7. '<|end|>' → logprob: -10.040706634521484
    8. '    
' → logprob: -10.540706634521484
    9. '```' → logprob: -10.540706634521484
    10. ' ' → logprob: -11.290706634521484

Token 121: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.04860224947333336
    2. '(' → logprob: -3.048602342605591
    3. '()' → logprob: -11.923602104187012
    4. ' (' → logprob: -12.423602104187012
    5. '(answer' → logprob: -13.673602104187012
    6. '('' → logprob: -13.798602104187012
    7. '(
' → logprob: -14.048602104187012
    8. '(`' → logprob: -14.923602104187012
    9. 'ans' → logprob: -15.298602104187012
    10. '(f' → logprob: -15.423602104187012

Token 122: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -15.000000953674316
    4. ')`' → logprob: -17.125001907348633
    5. '`)' → logprob: -17.875001907348633
    6. '')' → logprob: -18.250001907348633
    7. '()' → logprob: -18.375001907348633
    8. '))' → logprob: -19.125001907348633
    9. '")' → logprob: -19.250001907348633
    10. '）' → logprob: -20.125001907348633

Token 123: 'if' (ID: 366)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.36268219351768494
    2. '
' → logprob: -2.2376821041107178
    3. '<|end|>' → logprob: -2.4876821041107178
    4. 'if' → logprob: -2.6126821041107178
    5. '\' → logprob: -3.7376821041107178
    6. '```' → logprob: -4.987682342529297
    7. 'main' → logprob: -5.487682342529297
    8. ' ' → logprob: -6.987682342529297
    9. 'n' → logprob: -7.237682342529297
    10. ' if' → logprob: -7.487682342529297

Token 124: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0025124046951532364
    2. '__' → logprob: -6.002512454986572
    3. ' ' → logprob: -10.377511978149414
    4. ' ' → logprob: -12.877511978149414
    5. '_' → logprob: -13.127511978149414
    6. ' _' → logprob: -14.252511978149414
    7. ' main' → logprob: -16.627511978149414
    8. ' ' → logprob: -16.627511978149414
    9. ' name' → logprob: -16.877511978149414
    10. ' True' → logprob: -17.127511978149414

Token 125: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01614885777235031
    2. ' ==' → logprob: -5.266149044036865
    3. '.__' → logprob: -5.266149044036865
    4. '==' → logprob: -5.766149044036865
    5. ' __' → logprob: -6.266149044036865
    6. '.' → logprob: -8.266148567199707
    7. '__.__' → logprob: -9.016148567199707
    8. '__.' → logprob: -9.391148567199707
    9. '_' → logprob: -9.516148567199707
    10. '[' → logprob: -10.516148567199707

Token 126: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.380904672667384e-05
    2. '__.__' → logprob: -10.500033378601074
    3. '==' → logprob: -12.625033378601074
    4. '_' → logprob: -13.750033378601074
    5. ' ==' → logprob: -14.500033378601074
    6. '__.' → logprob: -14.625033378601074
    7. '___' → logprob: -15.375033378601074
    8. '____' → logprob: -15.625033378601074
    9. ' __' → logprob: -15.750033378601074
    10. '__["' → logprob: -15.750033378601074

Token 127: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1482381671667099
    2. '==' → logprob: -2.273238182067871
    3. '__' → logprob: -3.398238182067871
    4. '=="' → logprob: -6.773238182067871
    5. '=='' → logprob: -9.523238182067871
    6. '=' → logprob: -10.648238182067871
    7. '.__' → logprob: -10.773238182067871
    8. '_' → logprob: -11.148238182067871
    9. '.' → logprob: -11.148238182067871
    10. '"' → logprob: -11.398238182067871

Token 128: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16025926172733307
    2. ''' → logprob: -1.9102592468261719
    3. '__' → logprob: -11.035259246826172
    4. ' "__' → logprob: -11.035259246826172
    5. ' '__' → logprob: -13.160259246826172
    6. '"user' → logprob: -15.285259246826172
    7. ''"' → logprob: -15.785259246826172
    8. '"name' → logprob: -16.410259246826172
    9. '"'' → logprob: -17.035259246826172
    10. '"_' → logprob: -17.035259246826172

Token 129: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.5716304410016164e-05
    2. 'name' → logprob: -10.250035285949707
    3. ' main' → logprob: -16.000036239624023
    4. '"' → logprob: -16.500036239624023
    5. '_main' → logprob: -17.125036239624023
    6. ''' → logprob: -20.125036239624023
    7. '__' → logprob: -20.125036239624023
    8. '-main' → logprob: -20.375036239624023
    9. '(main' → logprob: -20.375036239624023
    10. 'ma' → logprob: -20.750036239624023

Token 130: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.038122620433568954
    2. '__' → logprob: -3.2881226539611816
    3. '__':
' → logprob: -9.538122177124023
    4. '__.' → logprob: -12.163122177124023
    5. '__["' → logprob: -13.663122177124023
    6. '__.__' → logprob: -13.788122177124023
    7. '.' → logprob: -14.413122177124023
    8. '__:' → logprob: -14.788122177124023
    9. '_' → logprob: -15.538122177124023
    10. '__
' → logprob: -15.663122177124023

Token 131: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.005683934316039085
    2. 'main' → logprob: -5.880683898925781
    3. '   ' → logprob: -6.255683898925781
    4. '	main' → logprob: -7.755683898925781
    5. '    
' → logprob: -8.380683898925781
    6. ' 
' → logprob: -8.505683898925781
    7. '    ' → logprob: -10.755683898925781
    8. ' ' → logprob: -10.880683898925781
    9. ' ' → logprob: -11.380683898925781
    10. '  
' → logprob: -11.630683898925781

Token 132: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0380566380918026
    2. 'main' (adapté à ' main') → logprob: -3.2880566120147705
    3. '	main' → logprob: -11.163056373596191
    4. '   ' → logprob: -15.038056373596191
    5. ' ' → logprob: -15.413056373596191
    6. '(main' → logprob: -15.538056373596191
    7. '_main' → logprob: -15.663056373596191
    8. '.main' → logprob: -15.788056373596191
    9. 'Main' → logprob: -17.663057327270508
    10. ' 
' → logprob: -18.288057327270508

Token 133: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007187459850683808
    2. '(' → logprob: -7.375718593597412
    3. '()
' → logprob: -9.37571907043457
    4. '(
' → logprob: -12.50071907043457
    5. '()

' → logprob: -14.12571907043457
    6. '()`' → logprob: -14.25071907043457
    7. ' ()' → logprob: -14.62571907043457
    8. '();' → logprob: -15.00071907043457
    9. '()\' → logprob: -15.12571907043457
    10. '()">' → logprob: -15.37571907043457


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 131
Tokens correctement prédits (1ère position, stricte): 71
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 117
Précision stricte (1ère position): 54.20%
Précision adaptée (1ère position): 56.49%
Précision (top 10): 89.31%
================================================================================
