================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
As = list(map(int, input().split()))
for i in range(len(As)):
    As[i] -= 1
Bs = list(map(int, input().split()))
Cs = list(map(int, input().split()))
ans = 0
APrev = -100
i = 0
while i < N:
    A = As[i]
    ans += Bs[A]
    if APrev == A - 1:
        ans += Cs[APrev]
    APrev = A
    i += 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'As' (ID: 2305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31470787525177
    2. 'if' → logprob: -2.1897077560424805
    3. 'i' → logprob: -3.3147077560424805
    4. 'a' → logprob: -3.6897077560424805
    5. 's' → logprob: -3.9397077560424805
    6. 'x' → logprob: -4.3147077560424805
    7. '*' → logprob: -4.8147077560424805
    8. 'f' → logprob: -4.9397077560424805
    9. '`' → logprob: -4.9397077560424805
    10. ')' → logprob: -4.9397077560424805

Token 6: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009497996419668198
    2. 'sum' → logprob: -6.509498119354248
    3. '=' → logprob: -6.634498119354248
    4. '[' → logprob: -7.134498119354248
    5. 't' → logprob: -7.134498119354248
    6. '_' → logprob: -7.259498119354248
    7. ' =' → logprob: -7.384498119354248
    8. 'm' → logprob: -7.759498119354248
    9. 'i' → logprob: -7.759498119354248
    10. 'um' → logprob: -7.759498119354248

Token 7: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2525639832019806
    2. ' list' → logprob: -1.6275639533996582
    3. '[list' → logprob: -4.252563953399658
    4. '[input' → logprob: -5.377563953399658
    5. ' [' → logprob: -5.752563953399658
    6. '[]' → logprob: -6.502563953399658
    7. '[' → logprob: -6.752563953399658
    8. ' []' → logprob: -7.002563953399658
    9. '[int' → logprob: -7.502563953399658
    10. 'input' → logprob: -7.627563953399658

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005505294539034367
    2. '(int' → logprob: -8.500550270080566
    3. '(input' → logprob: -8.875550270080566
    4. '(range' → logprob: -9.375550270080566
    5. '(
' → logprob: -10.875550270080566
    6. '(N' → logprob: -11.250550270080566
    7. '(`' → logprob: -11.500550270080566
    8. '()' → logprob: -11.625550270080566
    9. '((' → logprob: -11.625550270080566
    10. '(as' → logprob: -11.750550270080566

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008924061432480812
    2. '(' → logprob: -4.7589240074157715
    3. '(str' → logprob: -8.63392448425293
    4. 'int' → logprob: -9.88392448425293
    5. '(input' → logprob: -10.38392448425293
    6. '<int' → logprob: -11.00892448425293
    7. '(lambda' → logprob: -11.38392448425293
    8. '(
' → logprob: -12.00892448425293
    9. '```' → logprob: -12.50892448425293
    10. '=int' → logprob: -12.50892448425293

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014253178611397743
    2. '(' → logprob: -4.76425313949585
    3. ',input' → logprob: -5.26425313949585
    4. ',' → logprob: -8.639253616333008
    5. '(int' → logprob: -9.514253616333008
    6. 'input' → logprob: -10.014253616333008
    7. '=input' → logprob: -10.264253616333008
    8. '<input' → logprob: -10.764253616333008
    9. ' (' → logprob: -10.889253616333008
    10. '```' → logprob: -11.014253616333008

Token 11: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31328898668289185
    2. 'input' → logprob: -1.313288927078247
    3. '(input' → logprob: -10.688288688659668
    4. ',input' → logprob: -13.188288688659668
    5. ')' → logprob: -13.813288688659668
    6. ' ' → logprob: -14.438288688659668
    7. '=input' → logprob: -14.813288688659668
    8. '	input' → logprob: -15.688288688659668
    9. '<input' → logprob: -16.438289642333984
    10. ' )' → logprob: -16.813289642333984

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.37925809621810913
    2. '()' → logprob: -1.879258155822754
    3. '()))' → logprob: -1.879258155822754
    4. '().' → logprob: -5.629258155822754
    5. '(' → logprob: -5.879258155822754
    6. '()));' → logprob: -6.754258155822754
    7. '());' → logprob: -7.379258155822754
    8. '(()' → logprob: -7.754258155822754
    9. '()>' → logprob: -7.754258155822754
    10. '())))' → logprob: -8.379258155822754

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000217006730963476
    2. 'strip' → logprob: -8.75021743774414
    3. 'rstrip' → logprob: -9.75021743774414
    4. ' split' → logprob: -16.00021743774414
    5. 'spl' → logprob: -16.37521743774414
    6. '(split' → logprob: -16.50021743774414
    7. 's' → logprob: -20.00021743774414
    8. ')' → logprob: -20.12521743774414
    9. 'read' → logprob: -20.12521743774414
    10. '.split' → logprob: -20.50021743774414

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.48269909620285034
    2. ')' → logprob: -1.7326991558074951
    3. '(' → logprob: -2.232699155807495
    4. '()))' → logprob: -2.607699155807495
    5. '())' → logprob: -4.482698917388916
    6. '('' → logprob: -4.732698917388916
    7. ')))' → logprob: -6.232698917388916
    8. '()' → logprob: -6.357698917388916
    9. '(','' → logprob: -7.482698917388916
    10. ''))' → logprob: -7.982698917388916

Token 15: 'for' (ID: 1938)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8100301027297974
    2. 'for' → logprob: -1.9350301027297974
    3. 'A' → logprob: -2.560029983520508
    4. 'c' → logprob: -2.685029983520508
    5. 'count' → logprob: -3.185029983520508
    6. 'a' → logprob: -3.310029983520508
    7. 'd' → logprob: -3.310029983520508
    8. 'dp' → logprob: -3.560029983520508
    9. 'sum' → logprob: -3.685029983520508
    10. 'result' → logprob: -4.060029983520508

Token 16: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.015057619661092758
    2. ' ' → logprob: -4.265057563781738
    3. '_' → logprob: -7.640057563781738
    4. ' _' → logprob: -8.515057563781738
    5. 'i' → logprob: -8.890057563781738
    6. '  ' → logprob: -10.265057563781738
    7. ' x' → logprob: -11.640057563781738
    8. ' ' → logprob: -11.640057563781738
    9. ' a' → logprob: -12.515057563781738
    10. ' ‌' → logprob: -12.515057563781738

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3778668940067291
    2. 'in' → logprob: -1.2528668642044067
    3. ' ' → logprob: -3.6278669834136963
    4. '  ' → logprob: -6.502866744995117
    5. ' i' → logprob: -8.002866744995117
    6. ' n' → logprob: -9.127866744995117
    7. '_' → logprob: -9.127866744995117
    8. 'n' → logprob: -9.252866744995117
    9. ')' → logprob: -10.127866744995117
    10. '	in' → logprob: -10.627866744995117

Token 18: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06197440251708031
    2. 'range' → logprob: -2.811974287033081
    3. '	range' → logprob: -12.81197452545166
    4. ' ' → logprob: -13.31197452545166
    5. '(range' → logprob: -13.93697452545166
    6. ' xrange' → logprob: -14.56197452545166
    7. '_range' → logprob: -15.06197452545166
    8. 'Range' → logprob: -15.43697452545166
    9. '.range' → logprob: -15.43697452545166
    10. ')' → logprob: -16.561973571777344

Token 19: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009790678508579731
    2. '(N' → logprob: -4.634790897369385
    3. ' (' → logprob: -11.009790420532227
    4. '(len' → logprob: -12.009790420532227
    5. '(n' → logprob: -12.259790420532227
    6. '(
' → logprob: -13.009790420532227
    7. '(i' → logprob: -13.884790420532227
    8. ' ' → logprob: -13.884790420532227
    9. '((' → logprob: -14.384790420532227
    10. '(`' → logprob: -14.634790420532227

Token 20: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.635164754698053e-05
    2. '(A' → logprob: -10.500066757202148
    3. 'As' → logprob: -10.625066757202148
    4. '(N' → logprob: -11.875066757202148
    5. '(s' → logprob: -13.375066757202148
    6. '(as' → logprob: -13.500066757202148
    7. ')' → logprob: -13.875066757202148
    8. '(S' → logprob: -14.250066757202148
    9. '(
' → logprob: -14.875066757202148
    10. ' As' → logprob: -15.000066757202148

Token 21: 'As' (ID: 2305)
  Prédit: 'As'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'As' → logprob: -6.051066520740278e-05
    2. ' As' → logprob: -10.250060081481934
    3. 'A' → logprob: -10.625060081481934
    4. '_As' → logprob: -14.375060081481934
    5. ')' → logprob: -16.37506103515625
    6. 'as' → logprob: -16.87506103515625
    7. 'AS' → logprob: -17.25006103515625
    8. 'At' → logprob: -17.50006103515625
    9. '(' → logprob: -17.50006103515625
    10. 'Ass' → logprob: -18.37506103515625

Token 22: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.048096686601638794
    2. '):' → logprob: -3.5480966567993164
    3. '))' → logprob: -4.048096656799316
    4. ')):
' → logprob: -7.798096656799316
    5. ')' → logprob: -8.923096656799316
    6. ' ' → logprob: -10.423096656799316
    7. ' ))' → logprob: -10.548096656799316
    8. '-' → logprob: -10.673096656799316
    9. ' ):' → logprob: -10.798096656799316
    10. ':' → logprob: -11.173096656799316

Token 23: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.051443085074424744
    2. '   ' → logprob: -3.301443099975586
    3. '    ' → logprob: -5.301443099975586
    4. ' if' → logprob: -5.926443099975586
    5. 'if' → logprob: -6.551443099975586
    6. '_' → logprob: -7.426443099975586
    7. '<|end|>' → logprob: -7.426443099975586
    8. '  ' → logprob: -7.551443099975586
    9. '[' → logprob: -7.801443099975586
    10. ' ' → logprob: -7.926443099975586

Token 24: ' As' (ID: 1877)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5364497900009155
    2. 'if' → logprob: -1.2864497900009155
    3. '   ' → logprob: -2.661449909210205
    4. '    ' → logprob: -3.536449909210205
    5. 'print' → logprob: -4.786449909210205
    6. ' ' → logprob: -5.036449909210205
    7. 'i' → logprob: -5.286449909210205
    8. '_' → logprob: -5.536449909210205
    9. ' print' → logprob: -5.536449909210205
    10. ' i' → logprob: -6.036449909210205

Token 25: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20167507231235504
    2. '[i' → logprob: -1.7016750574111938
    3. '[]' → logprob: -9.826675415039062
    4. '.append' → logprob: -9.951675415039062
    5. '[...]' → logprob: -10.326675415039062
    6. '\[' → logprob: -10.326675415039062
    7. '[:]' → logprob: -11.326675415039062
    8. '[A' → logprob: -11.701675415039062
    9. '```' → logprob: -11.701675415039062
    10. '[I' → logprob: -11.951675415039062

Token 26: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02079528383910656
    2. '+' → logprob: -4.7707953453063965
    3. ' )' → logprob: -5.0207953453063965
    4. '+=' → logprob: -6.2707953453063965
    5. '=' → logprob: -6.7707953453063965
    6. '*' → logprob: -7.0207953453063965
    7. ' +=' → logprob: -7.2707953453063965
    8. '-' → logprob: -8.895794868469238
    9. ']' → logprob: -8.895794868469238
    10. '**' → logprob: -9.270794868469238

Token 27: ' -=' (ID: 12583)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42838147282600403
    2. '+=' → logprob: -2.3033814430236816
    3. '*' → logprob: -2.6783814430236816
    4. ' +=' → logprob: -3.1783814430236816
    5. ' =' → logprob: -3.5533814430236816
    6. '+' → logprob: -3.6783814430236816
    7. ' ' → logprob: -3.6783814430236816
    8. ' *=' → logprob: -4.053381443023682
    9. '*=' → logprob: -4.303381443023682
    10. '%' → logprob: -4.553381443023682

Token 28: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006239352747797966
    2. 'i' → logprob: -5.756239414215088
    3. ' ' → logprob: -6.131239414215088
    4. '2' → logprob: -8.25623893737793
    5. ' i' → logprob: -8.88123893737793
    6. 'N' → logprob: -9.13123893737793
    7. '3' → logprob: -9.50623893737793
    8. 'As' → logprob: -9.50623893737793
    9. '10' → logprob: -9.75623893737793
    10. '0' → logprob: -10.38123893737793

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006877713603898883
    2. 'i' → logprob: -7.875687599182129
    3. ' ' → logprob: -8.625687599182129
    4. '2' → logprob: -10.000687599182129
    5. 'As' → logprob: -10.750687599182129
    6. '3' → logprob: -11.000687599182129
    7. 'A' → logprob: -11.500687599182129
    8. 'N' → logprob: -11.625687599182129
    9. '0' → logprob: -12.000687599182129
    10. '10' → logprob: -12.375687599182129

Token 30: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3959722518920898
    2. '
' → logprob: -1.7709722518920898
    3. '\n' → logprob: -1.7709722518920898
    4. '<|end|>' → logprob: -1.7709722518920898
    5. '```' → logprob: -2.77097225189209
    6. 'if' → logprob: -3.02097225189209
    7. ' if' → logprob: -3.39597225189209
    8. ' ' → logprob: -3.89597225189209
    9. ' for' → logprob: -4.02097225189209
    10. '\' → logprob: -4.02097225189209

Token 31: 'Bs' (ID: 63814)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21110057830810547
    2. 'for' → logprob: -2.5861005783081055
    3. '<|end|>' → logprob: -2.7111005783081055
    4. 'if' → logprob: -4.4611005783081055
    5. '```' → logprob: -4.4611005783081055
    6. '\n' → logprob: -5.3361005783081055
    7. ' if' → logprob: -5.7111005783081055
    8. ' for' → logprob: -5.7111005783081055
    9. ' ' → logprob: -6.0861005783081055
    10. ' 
' → logprob: -6.0861005783081055

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0639410987496376
    2. '=' → logprob: -2.81394100189209
    3. 's' → logprob: -6.68894100189209
    4. '[' → logprob: -7.43894100189209
    5. '[]' → logprob: -10.81394100189209
    6. '[i' → logprob: -10.81394100189209
    7. '.' → logprob: -10.81394100189209
    8. ')' → logprob: -11.18894100189209
    9. '=[]' → logprob: -11.56394100189209
    10. '_' → logprob: -11.81394100189209

Token 33: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08200772106647491
    2. ' [' → logprob: -3.082007646560669
    3. '[]' → logprob: -3.582007646560669
    4. 'As' → logprob: -6.207007884979248
    5. '[len' → logprob: -7.082007884979248
    6. 'list' → logprob: -7.332007884979248
    7. ' []' → logprob: -7.332007884979248
    8. '[list' → logprob: -8.33200740814209
    9. ' list' → logprob: -8.83200740814209
    10. ' As' → logprob: -9.20700740814209

Token 34: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.06270220130681992
    2. '(' → logprob: -2.812702178955078
    3. '(B' → logprob: -8.062702178955078
    4. '(int' → logprob: -8.187702178955078
    5. '(range' → logprob: -9.562702178955078
    6. '(
' → logprob: -11.562702178955078
    7. '()' → logprob: -11.812702178955078
    8. '(len' → logprob: -11.937702178955078
    9. '(filter' → logprob: -12.062702178955078
    10. '(input' → logprob: -12.312702178955078

Token 35: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002484692493453622
    2. '(' → logprob: -6.0024847984313965
    3. '<int' → logprob: -12.252484321594238
    4. 'int' → logprob: -13.627484321594238
    5. '[int' → logprob: -13.877484321594238
    6. ' (' → logprob: -14.502484321594238
    7. '=int' → logprob: -14.627484321594238
    8. '(lambda' → logprob: -15.002484321594238
    9. '(str' → logprob: -15.377484321594238
    10. '```' → logprob: -15.752484321594238

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22514130175113678
    2. ',input' → logprob: -1.7251412868499756
    3. '(input' → logprob: -4.225141525268555
    4. '(' → logprob: -4.850141525268555
    5. ',(' → logprob: -7.600141525268555
    6. ',int' → logprob: -8.225141525268555
    7. 'input' → logprob: -9.975141525268555
    8. ' ,' → logprob: -10.225141525268555
    9. ')' → logprob: -10.225141525268555
    10. '),' → logprob: -10.475141525268555

Token 37: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.577046811580658
    2. 'input' → logprob: -0.827046811580658
    3. '(input' → logprob: -6.827046871185303
    4. ',input' → logprob: -11.327046394348145
    5. '=input' → logprob: -12.702046394348145
    6. '(' → logprob: -13.327046394348145
    7. '	input' → logprob: -13.577046394348145
    8. '[input' → logprob: -13.577046394348145
    9. '<input' → logprob: -13.827046394348145
    10. ')' → logprob: -14.077046394348145

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0017471733735874295
    2. '()' → logprob: -6.376747131347656
    3. '(.' → logprob: -10.626747131347656
    4. '(' → logprob: -11.001747131347656
    5. '.' → logprob: -13.626747131347656
    6. ' ().' → logprob: -14.251747131347656
    7. '())' → logprob: -14.751747131347656
    8. ')' → logprob: -14.876747131347656
    9. '()).' → logprob: -15.251747131347656
    10. ').' → logprob: -15.251747131347656

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.4849443838757e-06
    2. '(split' → logprob: -13.375004768371582
    3. 'strip' → logprob: -13.500004768371582
    4. ' split' → logprob: -14.125004768371582
    5. ')' → logprob: -15.125004768371582
    6. 'spl' → logprob: -15.250004768371582
    7. 'rstrip' → logprob: -16.125003814697266
    8. '```' → logprob: -16.875003814697266
    9. 'plit' → logprob: -17.625003814697266
    10. '_split' → logprob: -18.000003814697266

Token 40: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07925944030284882
    2. '()))' → logprob: -2.8292593955993652
    3. '()' → logprob: -4.454259395599365
    4. ')' → logprob: -5.329259395599365
    5. '))' → logprob: -7.454259395599365
    6. '()));' → logprob: -10.579259872436523
    7. '(' → logprob: -10.704259872436523
    8. ' ())' → logprob: -11.329259872436523
    9. '());' → logprob: -12.204259872436523
    10. '()`' → logprob: -12.704259872436523

Token 41: 'Cs' (ID: 41710)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006400037091225386
    2. '\n' → logprob: -8.500639915466309
    3. ' for' → logprob: -8.500639915466309
    4. ')' → logprob: -9.750639915466309
    5. '```' → logprob: -10.125639915466309
    6. '[' → logprob: -10.250639915466309
    7. '(' → logprob: -10.375639915466309
    8. '
' → logprob: -11.250639915466309
    9. '\' → logprob: -11.500639915466309
    10. '<|end|>' → logprob: -11.875639915466309

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09374543279409409
    2. '=' → logprob: -2.468745470046997
    3. '[' → logprob: -5.468745231628418
    4. '[i' → logprob: -7.968745231628418
    5. ')' → logprob: -9.593745231628418
    6. 's' → logprob: -10.468745231628418
    7. ' =[' → logprob: -10.468745231628418
    8. '=[' → logprob: -10.843745231628418
    9. '=[]' → logprob: -11.343745231628418
    10. '[]' → logprob: -11.343745231628418

Token 43: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6570426225662231
    2. 'list' → logprob: -1.4070426225662231
    3. ' [' → logprob: -2.0320425033569336
    4. '[' → logprob: -3.2820425033569336
    5. ' []' → logprob: -3.2820425033569336
    6. '[]' → logprob: -3.6570425033569336
    7. ' Bs' → logprob: -5.657042503356934
    8. '[list' → logprob: -7.532042503356934
    9. 'Bs' → logprob: -7.907042503356934
    10. '[B' → logprob: -10.157042503356934

Token 44: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03461495414376259
    2. '(map' → logprob: -4.1596150398254395
    3. '(int' → logprob: -4.5346150398254395
    4. '(list' → logprob: -5.4096150398254395
    5. '((' → logprob: -6.1596150398254395
    6. ' (' → logprob: -8.284614562988281
    7. '(range' → logprob: -8.659614562988281
    8. '(len' → logprob: -9.034614562988281
    9. '(tuple' → logprob: -9.284614562988281
    10. '(.' → logprob: -9.534614562988281

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.3226136767771095e-05
    2. 'int' → logprob: -10.375042915344238
    3. '=int' → logprob: -11.875042915344238
    4. '<int' → logprob: -12.875042915344238
    5. ',int' → logprob: -13.625042915344238
    6. '[int' → logprob: -15.000042915344238
    7. ' (' → logprob: -15.375042915344238
    8. '(' → logprob: -15.750042915344238
    9. '(lambda' → logprob: -15.875042915344238
    10. ')' → logprob: -16.000043869018555

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0904894471168518
    2. ',int' → logprob: -2.840489387512207
    3. '(int' → logprob: -3.590489387512207
    4. '(' → logprob: -8.215489387512207
    5. 'int' → logprob: -8.965489387512207
    6. '   ' → logprob: -10.215489387512207
    7. ' ,' → logprob: -10.340489387512207
    8. '<int' → logprob: -11.090489387512207
    9. ',input' → logprob: -11.215489387512207
    10. ',(' → logprob: -11.340489387512207

Token 47: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0010774685069918633
    2. ' int' → logprob: -7.376077651977539
    3. 'input' → logprob: -7.876077651977539
    4. '(int' → logprob: -9.626077651977539
    5. ' input' → logprob: -12.376077651977539
    6. '[int' → logprob: -15.001077651977539
    7. '<int' → logprob: -15.126077651977539
    8. '=int' → logprob: -16.75107765197754
    9. ',int' → logprob: -16.87607765197754
    10. '	int' → logprob: -17.87607765197754

Token 48: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8060662150382996
    2. '().' → logprob: -1.6810662746429443
    3. '()))' → logprob: -1.8060662746429443
    4. '())' → logprob: -2.6810662746429443
    5. '(int' → logprob: -2.8060662746429443
    6. '(' → logprob: -3.3060662746429443
    7. '))' → logprob: -4.681066036224365
    8. ')' → logprob: -5.181066036224365
    9. '```' → logprob: -5.431066036224365
    10. 'int' → logprob: -5.556066036224365

Token 49: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.166338137816638e-05
    2. ')' → logprob: -10.500031471252441
    3. '))' → logprob: -13.375031471252441
    4. '(split' → logprob: -13.875031471252441
    5. 'spl' → logprob: -14.500031471252441
    6. 'strip' → logprob: -15.250031471252441
    7. ' split' → logprob: -15.375031471252441
    8. '())' → logprob: -15.750031471252441
    9. '()' → logprob: -15.875031471252441
    10. 's' → logprob: -16.250032424926758

Token 50: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3644982576370239
    2. '()))' → logprob: -1.239498257637024
    3. '()' → logprob: -4.489498138427734
    4. ')' → logprob: -6.114498138427734
    5. '())' → logprob: -6.239498138427734
    6. '()))
' → logprob: -7.864498138427734
    7. '))
' → logprob: -9.364498138427734
    8. '(' → logprob: -10.489498138427734
    9. '()));' → logprob: -11.489498138427734
    10. ' ))' → logprob: -12.364498138427734

Token 51: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8309503793716431
    2. 'answer' → logprob: -2.0809502601623535
    3. 'dp' → logprob: -2.4559502601623535
    4. 'result' → logprob: -2.4559502601623535
    5. 'D' → logprob: -2.8309502601623535
    6. 'count' → logprob: -3.4559502601623535
    7. 'for' → logprob: -3.5809502601623535
    8. 'counts' → logprob: -3.5809502601623535
    9. 'score' → logprob: -3.7059502601623535
    10. 'res' → logprob: -3.9559502601623535

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033689845353364944
    2. '=' → logprob: -3.4086897373199463
    3. ' +=' → logprob: -10.408689498901367
    4. ' ' → logprob: -12.408689498901367
    5. ')' → logprob: -13.158689498901367
    6. '_' → logprob: -13.283689498901367
    7. '[' → logprob: -13.283689498901367
    8. 's' → logprob: -14.033689498901367
    9. '(' → logprob: -14.158689498901367
    10. '+=' → logprob: -15.033689498901367

Token 53: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02342470921576023
    2. ' ' → logprob: -3.7734246253967285
    3. '[' → logprob: -9.648425102233887
    4. ' [' → logprob: -9.773425102233887
    5. ' sum' → logprob: -10.898425102233887
    6. '[]' → logprob: -11.273425102233887
    7. 'sum' → logprob: -11.273425102233887
    8. '1' → logprob: -13.023425102233887
    9. '[int' → logprob: -13.398425102233887
    10. ' ' → logprob: -13.960925102233887

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.625075340270996
    3. 'sum' → logprob: -12.000075340270996
    4. 'int' → logprob: -14.437575340270996
    5. ' ' → logprob: -14.937575340270996
    6. 's' → logprob: -15.187575340270996
    7. '[' → logprob: -15.562575340270996
    8. '(' → logprob: -15.750075340270996
    9. '`' → logprob: -15.875075340270996
    10. ' sum' → logprob: -16.12507438659668

Token 55: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014966767048463225
    2. ' for' → logprob: -9.000149726867676
    3. '
' → logprob: -10.875149726867676
    4. '\n' → logprob: -12.125149726867676
    5. '```' → logprob: -14.375149726867676
    6. '\' → logprob: -14.625149726867676
    7. '	for' → logprob: -15.375149726867676
    8. '<|end|>' → logprob: -15.750149726867676
    9. '' → logprob: -16.37514877319336
    10. '[' → logprob: -16.62514877319336

Token 56: 'AP' (ID: 2685)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.248469718324486e-05
    2. ' for' → logprob: -11.250022888183594
    3. '```' → logprob: -12.750022888183594
    4. ')' → logprob: -13.375022888183594
    5. 'count' → logprob: -13.375022888183594
    6. 'counts' → logprob: -15.125022888183594
    7. 'i' → logprob: -15.250022888183594
    8. 's' → logprob: -15.500022888183594
    9. 'b' → logprob: -15.625022888183594
    10. 'For' → logprob: -15.625022888183594

Token 57: 'rev' (ID: 25656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5701271891593933
    2. '=' → logprob: -1.445127248764038
    3. 's' → logprob: -2.695127248764038
    4. 'i' → logprob: -4.195127010345459
    5. 'oints' → logprob: -4.195127010345459
    6. '_sum' → logprob: -4.195127010345459
    7. '_count' → logprob: -4.320127010345459
    8. 'S' → logprob: -4.320127010345459
    9. 'len' → logprob: -5.070127010345459
    10. '_' → logprob: -5.195127010345459

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0386015884578228
    2. '=' → logprob: -3.2886016368865967
    3. ']' → logprob: -8.663601875305176
    4. '_idx' → logprob: -9.288601875305176
    5. '_' → logprob: -9.788601875305176
    6. '[' → logprob: -10.038601875305176
    7. 'd' → logprob: -10.163601875305176
    8. '_index' → logprob: -10.413601875305176
    9. 's' → logprob: -10.538601875305176
    10. ')' → logprob: -11.288601875305176

Token 59: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2496095895767212
    2. '0' → logprob: -2.2496094703674316
    3. 'As' → logprob: -2.2496094703674316
    4. ' -' → logprob: -5.249609470367432
    5. 'None' → logprob: -5.999609470367432
    6. ' As' → logprob: -6.499609470367432
    7. 'Bs' → logprob: -8.37460994720459
    8. ' ' → logprob: -8.74960994720459
    9. '-As' → logprob: -8.87460994720459
    10. '[' → logprob: -10.24960994720459

Token 60: '100' (ID: 1353)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.966313281329349e-05
    2. '2' → logprob: -10.875049591064453
    3. ' ' → logprob: -11.500049591064453
    4. '100' → logprob: -11.500049591064453
    5. '10' → logprob: -12.250049591064453
    6. '-' → logprob: -13.375049591064453
    7. '999' → logprob: -14.062549591064453
    8. '```' → logprob: -14.500049591064453
    9. '5' → logprob: -15.437549591064453
    10. '11' → logprob: -15.625049591064453

Token 61: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35205936431884766
    2. ' for' → logprob: -1.2270593643188477
    3. '
' → logprob: -6.102059364318848
    4. '<|end|>' → logprob: -7.727059364318848
    5. '0' → logprob: -7.977059364318848
    6. ' 
' → logprob: -8.102059364318848
    7. '```' → logprob: -9.352059364318848
    8. '\' → logprob: -9.977059364318848
    9. '  
' → logprob: -10.102059364318848
    10. '\n' → logprob: -10.102059364318848

Token 62: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013737134635448456
    2. ' for' → logprob: -4.513737201690674
    3. '<|end|>' → logprob: -6.513737201690674
    4. '
' → logprob: -6.763737201690674
    5. '```' → logprob: -10.763736724853516
    6. '<|end|>' → logprob: -11.138736724853516
    7. '\n' → logprob: -12.263736724853516
    8. ' 
' → logprob: -13.013736724853516
    9. '	for' → logprob: -14.013736724853516
    10. '\' → logprob: -14.013736724853516

Token 63: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5107664465904236
    2. '=' → logprob: -1.5107665061950684
    3. ' =' → logprob: -2.0107665061950684
    4. 'f' → logprob: -3.2607665061950684
    5. ' ' → logprob: -5.760766506195068
    6. 's' → logprob: -7.010766506195068
    7. 'nd' → logprob: -7.135766506195068
    8. 'nt' → logprob: -7.260766506195068
    9. '+' → logprob: -7.385766506195068
    10. ' n' → logprob: -8.01076602935791

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10021507740020752
    2. ' ' → logprob: -2.350214958190918
    3. '1' → logprob: -12.225214958190918
    4. ' -' → logprob: -14.475214958190918
    5. '   ' → logprob: -14.600214958190918
    6. '  ' → logprob: -14.600214958190918
    7. 'N' → logprob: -14.975214958190918
    8. 'len' → logprob: -14.975214958190918
    9. ' len' → logprob: -15.100214958190918
    10. ' N' → logprob: -15.662714958190918

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000850605487357825
    2. ' ' → logprob: -7.375850677490234
    3. '1' → logprob: -9.250850677490234
    4. '-' → logprob: -9.500850677490234
    5. 'N' → logprob: -10.125850677490234
    6. ' -' → logprob: -12.750850677490234
    7. 'len' → logprob: -12.750850677490234
    8. '2' → logprob: -13.375850677490234
    9. '100' → logprob: -13.500850677490234
    10. 'i' → logprob: -13.750850677490234

Token 66: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01786016672849655
    2. 'while' → logprob: -4.892859935760498
    3. '<|end|>' → logprob: -5.517859935760498
    4. ' while' → logprob: -6.017859935760498
    5. '\n' → logprob: -6.517859935760498
    6. ' 
' → logprob: -6.642859935760498
    7. '' → logprob: -8.517860412597656
    8. '
' → logprob: -8.642860412597656
    9. '  
' → logprob: -8.642860412597656
    10. '<|end|>' → logprob: -9.142860412597656

Token 67: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005590294953435659
    2. 'while' → logprob: -5.505590438842773
    3. ' 
' → logprob: -7.380590438842773
    4. ' while' → logprob: -7.755590438842773
    5. '\n' → logprob: -9.005590438842773
    6. '
' → logprob: -9.005590438842773
    7. '<|end|>' → logprob: -9.130590438842773
    8. '' → logprob: -10.380590438842773
    9. '  
' → logprob: -10.630590438842773
    10. 'for' → logprob: -10.755590438842773

Token 68: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.048661284148693085
    2. 'i' → logprob: -3.048661231994629
    3. 'True' → logprob: -10.423661231994629
    4. ' True' → logprob: -10.923661231994629
    5. ' ' → logprob: -11.173661231994629
    6. '(i' → logprob: -12.673661231994629
    7. '	i' → logprob: -12.923661231994629
    8. 'N' → logprob: -13.173661231994629
    9. ' ' → logprob: -13.548661231994629
    10. ' N' → logprob: -14.048661231994629

Token 69: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.024062197655439377
    2. '<' → logprob: -3.774062156677246
    3. ' ' → logprob: -7.274062156677246
    4. ' <=' → logprob: -9.399062156677246
    5. '<len' → logprob: -10.774062156677246
    6. '<n' → logprob: -11.399062156677246
    7. '<=' → logprob: -13.024062156677246
    8. ' <
' → logprob: -13.899062156677246
    9. '[' → logprob: -14.024062156677246
    10. ' !=' → logprob: -14.149062156677246

Token 70: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.09001541882753372
    2. ' N' → logprob: -2.465015411376953
    3. 'len' → logprob: -7.215015411376953
    4. ' len' → logprob: -8.215015411376953
    5. ' ' → logprob: -9.840015411376953
    6. 'n' → logprob: -12.090015411376953
    7. '   ' → logprob: -12.590015411376953
    8. '  ' → logprob: -13.715015411376953
    9. 'Ns' → logprob: -13.715015411376953
    10. ' ' → logprob: -14.090015411376953

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005801965016871691
    2. ':
' → logprob: -7.750580310821533
    3. ' :' → logprob: -8.875579833984375
    4. ' and' → logprob: -11.875579833984375
    5. ' :
' → logprob: -13.750579833984375
    6. 'and' → logprob: -14.125579833984375
    7. ':

' → logprob: -15.625579833984375
    8. ' ' → logprob: -15.750579833984375
    9. '+:' → logprob: -16.000579833984375
    10. ':
' → logprob: -16.250579833984375

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12333802878856659
    2. ' if' → logprob: -2.873337984085083
    3. '<|end|>' → logprob: -3.748337984085083
    4. ' ' → logprob: -3.998337984085083
    5. '
' → logprob: -5.123338222503662
    6. '    ' → logprob: -5.498338222503662
    7. ' 
' → logprob: -5.998338222503662
    8. '    
' → logprob: -6.623338222503662
    9. '<|end|>' → logprob: -7.123338222503662
    10. '```' → logprob: -7.248338222503662

Token 73: ' A' (ID: 355)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1743483990430832
    2. 'if' → logprob: -2.0493483543395996
    3. ' ' → logprob: -4.4243483543396
    4. ' j' → logprob: -5.2993483543396
    5. '   ' → logprob: -5.9243483543396
    6. '    ' → logprob: -6.1743483543396
    7. ' A' → logprob: -6.5493483543396
    8. 'j' → logprob: -6.6743483543396
    9. 'AP' → logprob: -7.5493483543396
    10. '```' → logprob: -7.5493483543396

Token 74: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0631234347820282
    2. '[i' → logprob: -2.8131234645843506
    3. 'Prev' → logprob: -7.5631232261657715
    4. '[' → logprob: -8.18812370300293
    5. ' =' → logprob: -8.93812370300293
    6. 'i' → logprob: -9.06312370300293
    7. 'As' → logprob: -10.18812370300293
    8. '=' → logprob: -11.31312370300293
    9. '[s' → logprob: -11.68812370300293
    10. '```' → logprob: -11.81312370300293

Token 75: ' As' (ID: 1877)
  Prédit: 'As'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'As' → logprob: -0.03805446997284889
    2. ' As' → logprob: -3.2880544662475586
    3. 's' → logprob: -11.663054466247559
    4. '_As' → logprob: -13.163054466247559
    5. 'A' → logprob: -14.413054466247559
    6. ' ' → logprob: -14.913054466247559
    7. 'Bs' → logprob: -15.038054466247559
    8. '   ' → logprob: -15.038054466247559
    9. 'Cs' → logprob: -15.538054466247559
    10. 'as' → logprob: -16.163055419921875

Token 76: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.0722858102526516e-05
    2. '[' → logprob: -10.250041007995605
    3. ' [' → logprob: -13.000041007995605
    4. '```' → logprob: -13.500041007995605
    5. 'i' → logprob: -14.125041007995605
    6. '   ' → logprob: -15.625041007995605
    7. '[I' → logprob: -15.625041007995605
    8. '[A' → logprob: -15.750041007995605
    9. ' ' → logprob: -16.00004005432129
    10. '\[' → logprob: -16.00004005432129

Token 77: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.034120362251996994
    2. ']
' → logprob: -3.4091203212738037
    3. ' ]' → logprob: -8.034120559692383
    4. ']+' → logprob: -10.034120559692383
    5. ']
' → logprob: -10.284120559692383
    6. ' ]
' → logprob: -10.784120559692383
    7. ']

' → logprob: -11.159120559692383
    8. ')' → logprob: -11.534120559692383
    9. '])' → logprob: -11.784120559692383
    10. ')]' → logprob: -12.659120559692383

Token 78: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5110673904418945
    2. 'if' → logprob: -1.5110673904418945
    3. '   ' → logprob: -1.7610673904418945
    4. ' ' → logprob: -5.7610673904418945
    5. '+' → logprob: -7.0110673904418945
    6. '    ' → logprob: -7.3860673904418945
    7. '
' → logprob: -7.3860673904418945
    8. '<|end|>' → logprob: -7.3860673904418945
    9. '	if' → logprob: -8.136067390441895
    10. ',' → logprob: -8.636067390441895

Token 79: ' ans' (ID: 3345)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4009048044681549
    2. ' ' → logprob: -1.5259047746658325
    3. 'if' → logprob: -2.275904893875122
    4. ' 
' → logprob: -5.650904655456543
    5. ' i' → logprob: -6.150904655456543
    6. '
' → logprob: -6.775904655456543
    7. '   ' → logprob: -7.400904655456543
    8. 'i' → logprob: -8.025904655456543
    9. '    ' → logprob: -8.150904655456543
    10. '+' → logprob: -8.150904655456543

Token 80: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12809669971466064
    2. '+=' → logprob: -2.128096580505371
    3. '+' → logprob: -6.878096580505371
    4. '+=(' → logprob: -9.378096580505371
    5. '++' → logprob: -11.003096580505371
    6. ' +' → logprob: -11.128096580505371
    7. ']+=' → logprob: -12.003096580505371
    8. ' =' → logprob: -12.503096580505371
    9. ' ' → logprob: -13.503096580505371
    10. '1' → logprob: -13.628096580505371

Token 81: ' Bs' (ID: 117553)
  Prédit: 'Cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cs' → logprob: -0.47174257040023804
    2. 'Bs' → logprob: -1.2217426300048828
    3. '1' → logprob: -2.846742630004883
    4. 'BC' → logprob: -5.471742630004883
    5. 'Bc' → logprob: -5.596742630004883
    6. ' Cs' → logprob: -5.846742630004883
    7. ' Bs' → logprob: -5.971742630004883
    8. ' ' → logprob: -6.346742630004883
    9. 'B' → logprob: -6.721742630004883
    10. 'abs' → logprob: -6.846742630004883

Token 82: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.012390851974487305
    2. '[' → logprob: -4.762391090393066
    3. '[C' → logprob: -5.637391090393066
    4. '[B' → logprob: -9.887391090393066
    5. '[i' → logprob: -10.137391090393066
    6. '[a' → logprob: -10.762391090393066
    7. ' [' → logprob: -10.887391090393066
    8. '[
' → logprob: -11.387391090393066
    9. 'A' → logprob: -11.762391090393066
    10. '[P' → logprob: -12.387391090393066

Token 83: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015373330563306808
    2. ' ]' → logprob: -5.015373229980469
    3. ')' → logprob: -5.390373229980469
    4. ']+' → logprob: -6.515373229980469
    5. '])' → logprob: -7.015373229980469
    6. '+' → logprob: -7.515373229980469
    7. ']
' → logprob: -7.640373229980469
    8. '[i' → logprob: -8.640373229980469
    9. ' +' → logprob: -9.390373229980469
    10. ' )' → logprob: -9.515373229980469

Token 84: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01750096306204796
    2. '+' → logprob: -4.392500877380371
    3. ' if' → logprob: -6.017500877380371
    4. ' +' → logprob: -6.892500877380371
    5. 'i' → logprob: -7.267500877380371
    6. '
' → logprob: -8.142500877380371
    7. '+C' → logprob: -8.267500877380371
    8. '+i' → logprob: -9.642500877380371
    9. ' ' → logprob: -10.017500877380371
    10. '+
' → logprob: -10.142500877380371

Token 85: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.015744805335998535
    2. 'i' → logprob: -4.390744686126709
    3. '+' → logprob: -6.140744686126709
    4. '+C' → logprob: -7.765744686126709
    5. ' if' → logprob: -8.765745162963867
    6. 'C' → logprob: -8.765745162963867
    7. '+i' → logprob: -9.515745162963867
    8. 'Cs' → logprob: -10.140745162963867
    9. ' +' → logprob: -10.140745162963867
    10. '
' → logprob: -10.765745162963867

Token 86: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.11066842079162598
    2. ' As' → logprob: -2.860668420791626
    3. ' i' → logprob: -4.235668182373047
    4. 'A' → logprob: -4.360668182373047
    5. 'As' → logprob: -4.610668182373047
    6. ' ' → logprob: -5.485668182373047
    7. ' AP' → logprob: -5.860668182373047
    8. ' Ap' → logprob: -7.235668182373047
    9. 'AP' → logprob: -7.485668182373047
    10. '   ' → logprob: -7.610668182373047

Token 87: 'Prev' (ID: 34559)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5852504968643188
    2. ' ==' → logprob: -0.8352504968643188
    3. ' !=' → logprob: -5.460250377655029
    4. '!=' → logprob: -5.460250377655029
    5. ' ' → logprob: -8.085250854492188
    6. '-' → logprob: -9.085250854492188
    7. 'Prev' → logprob: -9.210250854492188
    8. '=' → logprob: -9.335250854492188
    9. '>' → logprob: -9.960250854492188
    10. ' -' → logprob: -10.335250854492188

Token 88: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.24637435376644135
    2. ' ==' → logprob: -1.8713743686676025
    3. '!=' → logprob: -2.9963743686676025
    4. ' !=' → logprob: -4.621374130249023
    5. '+' → logprob: -6.371374130249023
    6. '<' → logprob: -7.371374130249023
    7. '>' → logprob: -7.496374130249023
    8. ' ' → logprob: -7.621374130249023
    9. '>=' → logprob: -7.621374130249023
    10. ' +' → logprob: -8.746374130249023

Token 89: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6342169642448425
    2. ' A' → logprob: -0.7592169642448425
    3. ' ' → logprob: -6.634216785430908
    4. 'As' → logprob: -8.884217262268066
    5. 'C' → logprob: -10.259217262268066
    6. '   ' → logprob: -10.509217262268066
    7. '  ' → logprob: -11.134217262268066
    8. ' C' → logprob: -11.634217262268066
    9. ' As' → logprob: -11.634217262268066
    10. ' -' → logprob: -11.759217262268066

Token 90: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6310003399848938
    2. 'and' → logprob: -1.006000280380249
    3. ' and' → logprob: -2.381000280380249
    4. ':
' → logprob: -4.881000518798828
    5. ' ' → logprob: -7.006000518798828
    6. 's' → logprob: -7.256000518798828
    7. '+' → logprob: -9.006000518798828
    8. 'Cs' → logprob: -9.381000518798828
    9. ':
' → logprob: -10.131000518798828
    10. '  ' → logprob: -10.131000518798828

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023257357999682426
    2. ' ' → logprob: -3.773257255554199
    3. '+' → logprob: -12.3982572555542
    4. '<|end|>' → logprob: -12.6482572555542
    5. '0' → logprob: -13.2732572555542
    6. '-' → logprob: -14.0232572555542
    7. '  ' → logprob: -14.3982572555542
    8. '   ' → logprob: -14.5232572555542
    9. '2' → logprob: -15.3982572555542
    10. '>' → logprob: -16.023258209228516

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000182921823579818
    2. ' ' → logprob: -8.62518310546875
    3. '<|end|>' → logprob: -13.37518310546875
    4. '-' → logprob: -13.75018310546875
    5. '0' → logprob: -15.37518310546875
    6. '   ' → logprob: -15.62518310546875
    7. '  ' → logprob: -15.62518310546875
    8. '+' → logprob: -16.12518310546875
    9. '<|end|>' → logprob: -17.50018310546875
    10. '2' → logprob: -17.87518310546875

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03459606692194939
    2. ':
' → logprob: -3.4095959663391113
    3. 'and' → logprob: -7.284595966339111
    4. ' and' → logprob: -8.28459644317627
    5. ':
' → logprob: -12.65959644317627
    6. '   ' → logprob: -12.78459644317627
    7. ':

' → logprob: -14.03459644317627
    8. ' ' → logprob: -14.15959644317627
    9. '):
' → logprob: -14.78459644317627
    10. ''s' → logprob: -15.03459644317627

Token 94: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3941735327243805
    2. ':
' → logprob: -1.894173502922058
    3. 'and' → logprob: -2.2691736221313477
    4. '   ' → logprob: -3.3941736221313477
    5. ' and' → logprob: -3.7691736221313477
    6. 'ans' → logprob: -5.019173622131348
    7. '       ' → logprob: -5.019173622131348
    8. ' ' → logprob: -7.519173622131348
    9. '	ans' → logprob: -8.019173622131348
    10. '+' → logprob: -8.144173622131348

Token 95: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0005581548321060836
    2. ' ans' → logprob: -7.875558376312256
    3. '	ans' → logprob: -9.125557899475098
    4. ' ' → logprob: -11.000557899475098
    5. 'answer' → logprob: -11.125557899475098
    6. '   ' → logprob: -11.375557899475098
    7. '       ' → logprob: -11.750557899475098
    8. '           ' → logprob: -12.750557899475098
    9. '(ans' → logprob: -12.875557899475098
    10. '+' → logprob: -13.125557899475098

Token 96: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16024871170520782
    2. ' +=' → logprob: -1.9102487564086914
    3. ']+=' → logprob: -11.160248756408691
    4. '+' → logprob: -11.910248756408691
    5. '+='' → logprob: -13.660248756408691
    6. '+="' → logprob: -13.910248756408691
    7. '+=(' → logprob: -14.535248756408691
    8. ' +' → logprob: -15.285248756408691
    9. '   ' → logprob: -15.410248756408691
    10. '	' → logprob: -15.535248756408691

Token 97: ' Cs' (ID: 85135)
  Prédit: 'Cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cs' → logprob: -5.676981345459353e-06
    2. ' Cs' → logprob: -12.875005722045898
    3. 'CS' → logprob: -13.000005722045898
    4. '(Cs' → logprob: -14.250005722045898
    5. '   ' → logprob: -16.8750057220459
    6. 'C' → logprob: -16.8750057220459
    7. 'Cc' → logprob: -17.0000057220459
    8. 'Css' → logprob: -18.0000057220459
    9. 'cs' → logprob: -18.1250057220459
    10. 'Cp' → logprob: -18.5000057220459

Token 98: '[' (ID: 58)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.5291275978088379
    2. '[' → logprob: -0.9041275978088379
    3. 'A' → logprob: -5.779127597808838
    4. 'AP' → logprob: -5.904127597808838
    5. '(A' → logprob: -9.77912712097168
    6. '(AP' → logprob: -10.27912712097168
    7. 'Ap' → logprob: -10.90412712097168
    8. 'As' → logprob: -11.02912712097168
    9. '[i' → logprob: -11.15412712097168
    10. ' A' → logprob: -11.52912712097168

Token 99: 'AP' (ID: 2685)
  Prédit: 'AP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AP' → logprob: -0.28222042322158813
    2. 'A' → logprob: -1.4072203636169434
    3. 'i' → logprob: -7.782220363616943
    4. 'Ap' → logprob: -8.157220840454102
    5. 'As' → logprob: -8.782220840454102
    6. ' A' → logprob: -9.032220840454102
    7. 'a' → logprob: -10.282220840454102
    8. 'AS' → logprob: -11.532220840454102
    9. 'ap' → logprob: -11.907220840454102
    10. '-' → logprob: -12.157220840454102

Token 100: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -4.47757811343763e-05
    2. 'Rev' → logprob: -10.125044822692871
    3. ' rev' → logprob: -13.250044822692871
    4. 'Prev' → logprob: -14.250044822692871
    5. 'r' → logprob: -14.375044822692871
    6. 'REV' → logprob: -14.500044822692871
    7. 'ev' → logprob: -15.000044822692871
    8. 're' → logprob: -15.125044822692871
    9. '_rev' → logprob: -15.625044822692871
    10. 'rv' → logprob: -15.750044822692871

Token 101: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00038598617538809776
    2. ' ]' → logprob: -7.875385761260986
    3. '+' → logprob: -12.750386238098145
    4. ']
' → logprob: -14.000386238098145
    5. '])' → logprob: -15.250386238098145
    6. ')' → logprob: -15.375386238098145
    7. ' -' → logprob: -15.500386238098145
    8. '<|end|>' → logprob: -15.500386238098145
    9. ']int' → logprob: -15.500386238098145
    10. '-' → logprob: -15.625386238098145

Token 102: '   ' (ID: 271)
  Prédit: 'AP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AP' → logprob: -0.31380563974380493
    2. '   ' → logprob: -1.3138055801391602
    3. '       ' → logprob: -8.56380558013916
    4. ' ' → logprob: -9.68880558013916
    5. 'Ap' → logprob: -9.81380558013916
    6. '
' → logprob: -9.93880558013916
    7. 'i' → logprob: -10.31380558013916
    8. ' AP' → logprob: -10.31380558013916
    9. ' i' → logprob: -10.43880558013916
    10. '  ' → logprob: -10.43880558013916

Token 103: ' A' (ID: 355)
  Prédit: 'AP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AP' → logprob: -0.012168655171990395
    2. '   ' → logprob: -4.762168884277344
    3. 'else' → logprob: -5.887168884277344
    4. 'i' → logprob: -7.762168884277344
    5. ' else' → logprob: -9.137168884277344
    6. ' i' → logprob: -9.262168884277344
    7. ' AP' → logprob: -9.762168884277344
    8. '       ' → logprob: -10.637168884277344
    9. ' ' → logprob: -11.012168884277344
    10. '  ' → logprob: -11.512168884277344

Token 104: 'Prev' (ID: 34559)
  Prédit: 'Prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prev' → logprob: -0.0161480363458395
    2. ' =' → logprob: -4.891148090362549
    3. '=' → logprob: -5.766148090362549
    4. 'prev' → logprob: -6.266148090362549
    5. '_prev' → logprob: -6.516148090362549
    6. 'P' → logprob: -7.266148090362549
    7. '   ' → logprob: -7.891148090362549
    8. 'p' → logprob: -8.76614761352539
    9. ' ' → logprob: -9.01614761352539
    10. '  ' → logprob: -9.01614761352539

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132624924182892
    2. '=' → logprob: -1.3132624626159668
    3. '=i' → logprob: -14.688262939453125
    4. '＝' → logprob: -15.688262939453125
    5. ' ' → logprob: -16.688262939453125
    6. ',' → logprob: -17.188262939453125
    7. '=A' → logprob: -17.563262939453125
    8. ' =)' → logprob: -17.688262939453125
    9. '.=' → logprob: -19.063262939453125
    10. '=}' → logprob: -19.188262939453125

Token 106: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0031827057246118784
    2. ' A' → logprob: -5.753182888031006
    3. 'As' → logprob: -12.253182411193848
    4. 'a' → logprob: -16.003183364868164
    5. '	A' → logprob: -17.128183364868164
    6. ' As' → logprob: -17.628183364868164
    7. '<|end|>' → logprob: -18.128183364868164
    8. ' ' → logprob: -18.878183364868164
    9. 'i' → logprob: -18.878183364868164
    10. '   ' → logprob: -19.003183364868164

Token 107: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.48126497864723206
    2. '   ' → logprob: -0.9812649488449097
    3. ' i' → logprob: -4.981265068054199
    4. '	i' → logprob: -8.8562650680542
    5. '
' → logprob: -9.8562650680542
    6. ' ' → logprob: -10.1062650680542
    7. '[i' → logprob: -10.8562650680542
    8. '```' → logprob: -10.9812650680542
    9. '``' → logprob: -12.1062650680542
    10. '  
' → logprob: -12.1062650680542

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012990460963919759
    2. 'i' → logprob: -6.751298904418945
    3. ' i' → logprob: -9.001298904418945
    4. '```' → logprob: -13.001298904418945
    5. ' ' → logprob: -13.751298904418945
    6. '	i' → logprob: -14.251298904418945
    7. '[i' → logprob: -15.001298904418945
    8. '  ' → logprob: -15.126298904418945
    9. '   ' → logprob: -15.126298904418945
    10. '
' → logprob: -15.251298904418945

Token 109: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00987614318728447
    2. '   ' → logprob: -5.009876251220703
    3. ' i' → logprob: -5.759876251220703
    4. '	i' → logprob: -12.634876251220703
    5. '  ' → logprob: -15.009876251220703
    6. ' ' → logprob: -15.009876251220703
    7. '```' → logprob: -15.384876251220703
    8. '
' → logprob: -15.759876251220703
    9. '    
' → logprob: -17.634876251220703
    10. '``' → logprob: -18.384876251220703

Token 110: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.43318191170692444
    2. '+=' → logprob: -1.433181881904602
    3. '+' → logprob: -2.1831820011138916
    4. ' +' → logprob: -8.433181762695312
    5. ' ' → logprob: -9.558181762695312
    6. '++' → logprob: -11.183181762695312
    7. '=' → logprob: -11.558181762695312
    8. '1' → logprob: -12.058181762695312
    9. '+i' → logprob: -13.433181762695312
    10. '+++' → logprob: -13.558181762695312

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.500019073486328
    4. '```' → logprob: -16.750019073486328
    5. '  ' → logprob: -18.000019073486328
    6. '１' → logprob: -18.625019073486328
    7. '+' → logprob: -19.250019073486328
    8. '<|end|>' → logprob: -19.375019073486328
    9. '۱' → logprob: -20.125019073486328
    10. '
' → logprob: -20.500019073486328

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -18.75
    4. '   ' → logprob: -19.375
    5. '１' → logprob: -20.125
    6. '+' → logprob: -21.9375
    7. '۱' → logprob: -22.375
    8. '१' → logprob: -22.4375
    9. '  ' → logprob: -22.5625
    10. '<|end|>' → logprob: -22.625

Token 113: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.6537622034084052e-05
    2. ' print' → logprob: -11.25002670288086
    3. '
' → logprob: -11.50002670288086
    4. '<|end|>' → logprob: -12.87502670288086
    5. '```' → logprob: -14.37502670288086
    6. ')' → logprob: -15.75002670288086
    7. '#print' → logprob: -16.62502670288086
    8. '.print' → logprob: -17.37502670288086
    9. '(print' → logprob: -17.50002670288086
    10. '#' → logprob: -18.25002670288086

Token 114: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3782830137643032e-05
    2. ' print' → logprob: -11.25001335144043
    3. '```' → logprob: -14.50001335144043
    4. '
' → logprob: -15.62501335144043
    5. ')' → logprob: -17.12501335144043
    6. '#print' → logprob: -18.25001335144043
    7. 'Print' → logprob: -19.00001335144043
    8. '``' → logprob: -19.25001335144043
    9. '.print' → logprob: -19.50001335144043
    10. '#' → logprob: -20.00001335144043

Token 115: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04901208356022835
    2. '(ans' → logprob: -3.0490121841430664
    3. '()' → logprob: -7.799012184143066
    4. ' (' → logprob: -12.174012184143066
    5. '("("' → logprob: -12.924012184143066
    6. '('' → logprob: -13.049012184143066
    7. '(
' → logprob: -13.799012184143066
    8. '((' → logprob: -14.049012184143066
    9. '(`' → logprob: -14.549012184143066
    10. '(sum' → logprob: -14.549012184143066

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.0
    3. '))' → logprob: -17.625
    4. ')
' → logprob: -17.75
    5. ')`' → logprob: -18.0
    6. '+' → logprob: -19.625
    7. '）' → logprob: -19.875
    8. ')}' → logprob: -20.125
    9. '),' → logprob: -20.875
    10. '`)' → logprob: -21.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 114
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 47
Tokens correctement prédits (top 10): 98
Précision stricte (1ère position): 38.60%
Précision adaptée (1ère position): 41.23%
Précision (top 10): 85.96%
================================================================================
