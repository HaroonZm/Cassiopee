================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline
sys.setrecursionlimit(10**6)
from collections import deque

n, m = map(int, input().split())

if m % 2 == 1:
    print(-1)
    exit()

AB = [[int(x) for x in input().split()] for _ in range(m)]
repn = [[] for _ in range(n + 1)]
for a, b in AB:
    repn[a].append(b)
    repn[b].append(a)

tree = [set() for _ in range(n + 1)]
visited = [False] * (n + 1)
visited[1] = True
q = deque([1])

while q:
    u = q.popleft()
    for v in repn[u]:
        if visited[v]:
            continue
        visited[v] = True
        tree[u].add(v)
        tree[v].add(u)
        q.append(v)

degree = [0] * (n + 1)
ans = []

for a, b in AB:
    if b in tree[a]:
        continue
    ans.append('{} {}'.format(a, b))
    degree[a] += 1

def dfs(u = 1, parent = None):
    for v in tree[u]:
        if v == parent:
            continue
        dfs(v, u)
        if degree[v] % 2 == 0:
            ans.append('{} {}'.format(u, v))
            degree[u] += 1
        else:
            ans.append('{} {}'.format(v, u))
            degree[v] += 1

dfs()

print('\n'.join(ans))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5787745714187622
    2. '.' → logprob: -0.9537745714187622
    3. 'import' → logprob: -3.9537744522094727
    4. '\' → logprob: -4.828774452209473
    5. 'newline' → logprob: -4.953774452209473
    6. '
' → logprob: -5.203774452209473
    7. '<|end|>' → logprob: -5.328774452209473
    8. '```' → logprob: -5.578774452209473
    9. '' → logprob: -6.828774452209473
    10. '<|end|>' → logprob: -6.953774452209473

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0056168390437960625
    2. '.' → logprob: -5.255616664886475
    3. ' (' → logprob: -9.255617141723633
    4. '(
' → logprob: -9.380617141723633
    5. ')' → logprob: -9.755617141723633
    6. '()' → logprob: -10.005617141723633
    7. '[' → logprob: -11.005617141723633
    8. '('' → logprob: -11.130617141723633
    9. ' ' → logprob: -11.630617141723633
    10. '=' → logprob: -11.755617141723633

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.018345076590776443
    2. 'sys' → logprob: -4.018344879150391
    3. ' input' → logprob: -8.76834487915039
    4. 'input' → logprob: -10.39334487915039
    5. ' ' → logprob: -12.51834487915039
    6. '	sys' → logprob: -12.89334487915039
    7. '=sys' → logprob: -13.39334487915039
    8. '(sys' → logprob: -14.01834487915039
    9. ' system' → logprob: -15.39334487915039
    10. ' lambda' → logprob: -16.01834487915039

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013695230009034276
    2. ' .' → logprob: -7.376369476318359
    3. '.stdin' → logprob: -7.751369476318359
    4. '.import' → logprob: -9.25136947631836
    5. '.readline' → logprob: -9.50136947631836
    6. '.
' → logprob: -10.12636947631836
    7. '.argv' → logprob: -10.37636947631836
    8. '.stdout' → logprob: -11.37636947631836
    9. '.input' → logprob: -11.50136947631836
    10. '.exit' → logprob: -12.00136947631836

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.653124988079071
    2. '.readline' → logprob: -0.778124988079071
    3. '.read' → logprob: -3.903125047683716
    4. '.Read' → logprob: -10.403124809265137
    5. '.readlines' → logprob: -10.403124809265137
    6. 'read' → logprob: -10.528124809265137
    7. '```' → logprob: -11.528124809265137
    8. ' .' → logprob: -11.653124809265137
    9. '.\' → logprob: -12.653124809265137
    10. '.buffer' → logprob: -13.028124809265137

Token 8: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02467985637485981
    2. '(' → logprob: -4.149679660797119
    3. '()
' → logprob: -5.524679660797119
    4. '
' → logprob: -6.399679660797119
    5. '(
' → logprob: -6.774679660797119
    6. '\n' → logprob: -7.524679660797119
    7. '()\' → logprob: -7.649679660797119
    8. '\' → logprob: -8.274680137634277
    9. '().' → logprob: -8.274680137634277
    10. '()

' → logprob: -9.024680137634277

Token 9: 'sys' (ID: 17324)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10097796469926834
    2. '(' → logprob: -2.350977897644043
    3. '().' → logprob: -8.100977897644043
    4. '()
' → logprob: -8.350977897644043
    5. '(
' → logprob: -9.725977897644043
    6. '()

' → logprob: -9.975977897644043
    7. '()\' → logprob: -10.100977897644043
    8. '#' → logprob: -11.600977897644043
    9. '())' → logprob: -11.725977897644043
    10. ')' → logprob: -11.725977897644043

Token 10: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.145118848304264e-05
    2. '.readline' → logprob: -11.250051498413086
    3. '.exit' → logprob: -11.625051498413086
    4. '.stdout' → logprob: -12.125051498413086
    5. '.write' → logprob: -12.375051498413086
    6. ' .' → logprob: -12.375051498413086
    7. '.stdin' → logprob: -13.250051498413086
    8. '.stderr' → logprob: -13.375051498413086
    9. '."""' → logprob: -13.500051498413086
    10. '.setdefault' → logprob: -13.625051498413086

Token 11: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.04109564423561096
    2. 'limit' → logprob: -4.541095733642578
    3. 's' → logprob: -5.041095733642578
    4. '_rec' → logprob: -5.291095733642578
    5. '_' → logprob: -5.541095733642578
    6. '_limit' → logprob: -6.041095733642578
    7. 'trace' → logprob: -6.166095733642578
    8. 'set' → logprob: -6.416095733642578
    9. '_version' → logprob: -6.666095733642578
    10. 'execution' → logprob: -6.791095733642578

Token 12: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.10794641077518463
    2. 'limit' → logprob: -2.4829463958740234
    3. 'urs' → logprob: -4.482946395874023
    4. '_limit' → logprob: -5.982946395874023
    5. 'ur' → logprob: -6.107946395874023
    6. 'ursive' → logprob: -6.482946395874023
    7. 'ut' → logprob: -7.982946395874023
    8. 'u' → logprob: -8.357946395874023
    9. 't' → logprob: -8.982946395874023
    10. 'set' → logprob: -9.107946395874023

Token 13: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.005259014666080475
    2. '_limit' → logprob: -5.255259037017822
    3. ' limit' → logprob: -10.630258560180664
    4. '_depth' → logprob: -14.630258560180664
    5. 'depth' → logprob: -15.005258560180664
    6. 'lim' → logprob: -15.630258560180664
    7. 'Limit' → logprob: -17.005258560180664
    8. '-limit' → logprob: -17.005258560180664
    9. '(limit' → logprob: -17.005258560180664
    10. '_LIMIT' → logprob: -18.380258560180664

Token 14: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.127333340875339e-06
    2. ' (' → logprob: -13.250003814697266
    3. '(
' → logprob: -14.000003814697266
    4. '(

' → logprob: -14.500003814697266
    5. '((' → logprob: -15.000003814697266
    6. '()' → logprob: -15.625003814697266
    7. '("("' → logprob: -16.375003814697266
    8. '(`' → logprob: -16.500003814697266
    9. '```' → logprob: -17.000003814697266
    10. '40' → logprob: -17.125003814697266

Token 15: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011067868210375309
    2. '100' → logprob: -4.511067867279053
    3. ' ' → logprob: -11.511068344116211
    4. '1' → logprob: -12.636068344116211
    5. '500' → logprob: -12.761068344116211
    6. '300' → logprob: -13.136068344116211
    7. '400' → logprob: -13.886068344116211
    8. '200' → logprob: -15.011068344116211
    9. '999' → logprob: -15.511068344116211
    10. '250' → logprob: -15.761068344116211

Token 16: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.014375632628798485
    2. '6' → logprob: -4.514375686645508
    3. '0' → logprob: -6.014375686645508
    4. '8' → logprob: -7.639375686645508
    5. '5' → logprob: -8.264375686645508
    6. '07' → logprob: -9.514375686645508
    7. '**' → logprob: -10.264375686645508
    8. '00' → logprob: -11.139375686645508
    9. '9' → logprob: -11.764375686645508
    10. '000' → logprob: -12.014375686645508

Token 17: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.062372419983148575
    2. '9' → logprob: -2.8123724460601807
    3. '8' → logprob: -7.812372207641602
    4. '6' → logprob: -17.0623722076416
    5. ' ' → logprob: -17.6873722076416
    6. '```' → logprob: -18.5623722076416
    7. '**' → logprob: -18.8123722076416
    8. '  ' → logprob: -20.1873722076416
    9. '``' → logprob: -20.5623722076416
    10. '   ' → logprob: -20.5623722076416

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -13.875000953674316
    3. ')
' → logprob: -16.000001907348633
    4. '))' → logprob: -16.250001907348633
    5. ' ' → logprob: -17.875001907348633
    6. '```' → logprob: -17.875001907348633
    7. '**' → logprob: -18.125001907348633
    8. '')' → logprob: -18.125001907348633
    9. '*' → logprob: -18.375001907348633
    10. '）' → logprob: -18.500001907348633

Token 19: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4417451322078705
    2. '\' → logprob: -2.3167450428009033
    3. 'n' → logprob: -2.3167450428009033
    4. '\n' → logprob: -2.6917450428009033
    5. '' → logprob: -3.4417450428009033
    6. '
' → logprob: -4.066745281219482
    7. 'd' → logprob: -4.191745281219482
    8. '

' → logprob: -4.691745281219482
    9. '#' → logprob: -5.191745281219482
    10. 'a' → logprob: -5.691745281219482

Token 20: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.0033224381040781736
    2. 'collections' → logprob: -6.128322601318359
    3. ' math' → logprob: -6.878322601318359
    4. ' itertools' → logprob: -10.12832260131836
    5. ' functools' → logprob: -10.37832260131836
    6. ' ' → logprob: -10.50332260131836
    7. ' collection' → logprob: -12.62832260131836
    8. ' sys' → logprob: -13.00332260131836
    9. ' io' → logprob: -14.00332260131836
    10. ' typing' → logprob: -14.12832260131836

Token 21: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.07482162863016129
    2. 'import' → logprob: -2.824821710586548
    3. '.' → logprob: -4.949821472167969
    4. ' ' → logprob: -5.199821472167969
    5. '<|end|>' → logprob: -10.074821472167969
    6. ' .' → logprob: -10.824821472167969
    7. '	import' → logprob: -10.949821472167969
    8. ' defaultdict' → logprob: -11.574821472167969
    9. ' space' → logprob: -11.574821472167969
    10. '```' → logprob: -11.699821472167969

Token 22: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.048694103956222534
    2. ' defaultdict' → logprob: -3.298694133758545
    3. 'deque' → logprob: -4.548694133758545
    4. ' de' → logprob: -11.548693656921387
    5. ' default' → logprob: -13.548693656921387
    6. 'default' → logprob: -13.548693656921387
    7. 'de' → logprob: -14.173693656921387
    8. ' ' → logprob: -14.423693656921387
    9. ' abc' → logprob: -14.548693656921387
    10. ' Counter' → logprob: -15.173693656921387

Token 23: '

' (ID: 279)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5261001586914062
    2. 'n' → logprob: -2.2761001586914062
    3. '
' → logprob: -2.4011001586914062
    4. 'def' → logprob: -2.6511001586914062
    5. '\' → logprob: -3.4011001586914062
    6. '' → logprob: -3.4011001586914062
    7. '

' → logprob: -3.9011001586914062
    8. 'deque' → logprob: -4.151100158691406
    9. '#' → logprob: -4.776100158691406
    10. '```' → logprob: -4.901100158691406

Token 24: 'n' (ID: 77)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13752669095993042
    2. 'n' → logprob: -2.637526750564575
    3. 'def' → logprob: -3.012526750564575
    4. 'N' → logprob: -6.262526512145996
    5. 'b' → logprob: -6.512526512145996
    6. '\' → logprob: -6.637526512145996
    7. 'q' → logprob: -7.012526512145996
    8. 'a' → logprob: -7.262526512145996
    9. 'class' → logprob: -8.012526512145996
    10. 'D' → logprob: -8.512526512145996

Token 25: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5349329113960266
    2. ' ' → logprob: -1.4099328517913818
    3. '=' → logprob: -1.7849328517913818
    4. ',' → logprob: -6.659933090209961
    5. ' ,' → logprob: -7.909933090209961
    6. ')' → logprob: -8.784933090209961
    7. '<|end|>' → logprob: -9.659933090209961
    8. ' )' → logprob: -9.784933090209961
    9. ' =)' → logprob: -9.784933090209961
    10. '.' → logprob: -9.909933090209961

Token 26: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5792878866195679
    2. ' m' → logprob: -0.8292878866195679
    3. ' k' → logprob: -6.329288005828857
    4. 'k' → logprob: -6.704288005828857
    5. ' ' → logprob: -8.0792875289917
    6. 'r' → logprob: -12.4542875289917
    7. 'q' → logprob: -12.8292875289917
    8. ' r' → logprob: -12.8292875289917
    9. ' q' → logprob: -12.9542875289917
    10. 'space' → logprob: -13.3292875289917

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22567510604858398
    2. '=' → logprob: -1.600675106048584
    3. ',' → logprob: -8.350675582885742
    4. '=input' → logprob: -11.350675582885742
    5. ' ' → logprob: -11.725675582885742
    6. ' ,' → logprob: -12.975675582885742
    7. '=int' → logprob: -14.100675582885742
    8. '<|end|>' → logprob: -14.100675582885742
    9. ' =
' → logprob: -14.475675582885742
    10. ')' → logprob: -14.600675582885742

Token 28: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0067925783805549145
    2. 'map' → logprob: -5.0067925453186035
    3. ' ' → logprob: -9.506793022155762
    4. ' input' → logprob: -13.131793022155762
    5. ' list' → logprob: -14.881793022155762
    6. '0' → logprob: -15.381793022155762
    7. 'input' → logprob: -16.006792068481445
    8. '	map' → logprob: -16.006792068481445
    9. ' ' → logprob: -16.881792068481445
    10. '  ' → logprob: -17.381792068481445

Token 29: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037330954801291227
    2. '(lambda' → logprob: -6.253733158111572
    3. '(int' → logprob: -6.753733158111572
    4. '(input' → logprob: -8.503732681274414
    5. '(str' → logprob: -8.628732681274414
    6. '<|end|>' → logprob: -9.378732681274414
    7. '(user' → logprob: -10.503732681274414
    8. ' (' → logprob: -11.253732681274414
    9. '((' → logprob: -11.628732681274414
    10. '(token' → logprob: -12.003732681274414

Token 30: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15595082938671112
    2. '(input' → logprob: -2.2809507846832275
    3. ',' → logprob: -3.4059507846832275
    4. ',input' → logprob: -5.030951023101807
    5. '(sys' → logprob: -6.405951023101807
    6. '(int' → logprob: -7.905951023101807
    7. ')' → logprob: -9.030950546264648
    8. ' ,' → logprob: -9.780950546264648
    9. '(str' → logprob: -9.905950546264648
    10. 'input' → logprob: -9.905950546264648

Token 31: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10021474957466125
    2. 'input' → logprob: -2.350214719772339
    3. ' sys' → logprob: -12.475214958190918
    4. ' ' → logprob: -12.600214958190918
    5. '(input' → logprob: -15.225214958190918
    6. 'sys' → logprob: -15.350214958190918
    7. '=input' → logprob: -16.2252140045166
    8. '	input' → logprob: -16.4752140045166
    9. ',input' → logprob: -16.4752140045166
    10. '```' → logprob: -17.3502140045166

Token 32: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7298595905303955
    2. '().' → logprob: -1.3548595905303955
    3. '())' → logprob: -1.3548595905303955
    4. '(' → logprob: -6.604859352111816
    5. '('' → logprob: -8.104859352111816
    6. ')' → logprob: -9.229859352111816
    7. '()))' → logprob: -9.479859352111816
    8. '());' → logprob: -9.979859352111816
    9. '(),' → logprob: -10.354859352111816
    10. '()]' → logprob: -10.729859352111816

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011698764748871326
    2. 'strip' → logprob: -4.5116987228393555
    3. 'rstrip' → logprob: -7.3866987228393555
    4. ')' → logprob: -10.761698722839355
    5. '(split' → logprob: -12.761698722839355
    6. 'read' → logprob: -12.761698722839355
    7. '())' → logprob: -13.511698722839355
    8. 'spl' → logprob: -14.136698722839355
    9. ' split' → logprob: -14.261698722839355
    10. 'plit' → logprob: -14.261698722839355

Token 34: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018768629524856806
    2. '))' → logprob: -8.625187873840332
    3. '())' → logprob: -12.750187873840332
    4. '()' → logprob: -13.250187873840332
    5. '(' → logprob: -13.750187873840332
    6. '),' → logprob: -13.875187873840332
    7. '`)' → logprob: -15.125187873840332
    8. ')`' → logprob: -15.500187873840332
    9. ' )' → logprob: -15.875187873840332
    10. ')))' → logprob: -15.875187873840332

Token 35: 'if' (ID: 366)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.001694461447186768
    2. 'g' → logprob: -6.501694679260254
    3. ' graph' → logprob: -9.251694679260254
    4. 'arr' → logprob: -11.001694679260254
    5. 'grid' → logprob: -11.126694679260254
    6. 'tree' → logprob: -11.626694679260254
    7. 'edges' → logprob: -12.001694679260254
    8. 'board' → logprob: -12.251694679260254
    9. 'parent' → logprob: -12.251694679260254
    10. 'gr' → logprob: -12.501694679260254

Token 36: ' m' (ID: 284)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07300040870904922
    2. ' ' → logprob: -2.948000431060791
    3. ' m' → logprob: -4.198000431060791
    4. 'n' → logprob: -6.698000431060791
    5. ' not' → logprob: -6.698000431060791
    6. 'm' → logprob: -8.322999954223633
    7. ' (' → logprob: -9.572999954223633
    8. ' ' → logprob: -9.947999954223633
    9. ' ‌' → logprob: -10.322999954223633
    10. ' space' → logprob: -10.572999954223633

Token 37: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.45974621176719666
    2. ' ==' → logprob: -1.209746241569519
    3. ' ' → logprob: -3.2097461223602295
    4. '>' → logprob: -3.9597461223602295
    5. ' <' → logprob: -5.209746360778809
    6. '==' → logprob: -6.209746360778809
    7. ' !=' → logprob: -6.834746360778809
    8. ' =' → logprob: -7.459746360778809
    9. '  ' → logprob: -7.709746360778809
    10. '=' → logprob: -7.834746360778809

Token 38: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6942054033279419
    2. ' ' → logprob: -0.6942054033279419
    3. ' n' → logprob: -7.319205284118652
    4. '3' → logprob: -8.819205284118652
    5. 'n' → logprob: -9.069205284118652
    6. '=' → logprob: -10.319205284118652
    7. '4' → logprob: -10.444205284118652
    8. '10' → logprob: -11.694205284118652
    9. '6' → logprob: -11.819205284118652
    10. '1' → logprob: -11.819205284118652

Token 39: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006729457061737776
    2. 'n' → logprob: -5.131729602813721
    3. '3' → logprob: -8.006729125976562
    4. '10' → logprob: -8.631729125976562
    5. ' ' → logprob: -9.131729125976562
    6. '==' → logprob: -10.131729125976562
    7. '4' → logprob: -10.631729125976562
    8. '6' → logprob: -10.881729125976562
    9. '7' → logprob: -11.006729125976562
    10. ' n' → logprob: -11.256729125976562

Token 40: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09643368422985077
    2. '==' → logprob: -2.596433639526367
    3. ' !=' → logprob: -4.596433639526367
    4. ':' → logprob: -6.346433639526367
    5. ' :' → logprob: -6.346433639526367
    6. '=' → logprob: -6.471433639526367
    7. '!=' → logprob: -6.721433639526367
    8. ' =' → logprob: -7.346433639526367
    9. ' ' → logprob: -7.971433639526367
    10. '0' → logprob: -10.971433639526367

Token 41: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22795240581035614
    2. '0' → logprob: -1.6029523611068726
    3. '1' → logprob: -5.977952480316162
    4. ' ' → logprob: -14.102952003479004
    5. '  ' → logprob: -14.477952003479004
    6. ''' → logprob: -15.415452003479004
    7. '=' → logprob: -15.540452003479004
    8. ':' → logprob: -16.29045295715332
    9. '   ' → logprob: -16.66545295715332
    10. ' =' → logprob: -16.85295295715332

Token 42: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06306971609592438
    2. '1' → logprob: -2.8130698204040527
    3. ' ' → logprob: -6.813069820404053
    4. '2' → logprob: -15.063069343566895
    5. '  ' → logprob: -15.125569343566895
    6. ':' → logprob: -15.125569343566895
    7. '```' → logprob: -15.375569343566895
    8. ')' → logprob: -15.563069343566895
    9. 'n' → logprob: -15.813069343566895
    10. '!' → logprob: -16.43807029724121

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031923281494528055
    2. ' :' → logprob: -5.75319242477417
    3. ':
' → logprob: -11.253191947937012
    4. '):' → logprob: -14.753191947937012
    5. ' :
' → logprob: -15.253191947937012
    6. ')' → logprob: -15.753191947937012
    7. ':return' → logprob: -16.003192901611328
    8. ',' → logprob: -16.378192901611328
    9. '=' → logprob: -16.378192901611328
    10. ':**' → logprob: -16.503192901611328

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1161383390426636
    2. 'print' → logprob: -1.3661383390426636
    3. ':' → logprob: -1.7411383390426636
    4. ' print' → logprob: -1.8661383390426636
    5. '\n' → logprob: -2.741138458251953
    6. ' ' → logprob: -5.241138458251953
    7. ':
' → logprob: -5.616138458251953
    8. ' :' → logprob: -5.991138458251953
    9. '\' → logprob: -6.116138458251953
    10. ')' → logprob: -6.116138458251953

Token 45: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6973198056221008
    2. ' print' → logprob: -0.6973198056221008
    3. '   ' → logprob: -5.822319984436035
    4. ' ' → logprob: -7.447319984436035
    5. '\n' → logprob: -8.822319984436035
    6. '    ' → logprob: -9.197319984436035
    7. 'pr' → logprob: -9.447319984436035
    8. '0' → logprob: -9.822319984436035
    9. ' prin' → logprob: -10.322319984436035
    10. ' -' → logprob: -10.447319984436035

Token 46: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17747919261455536
    2. '(-' → logprob: -2.1774792671203613
    3. '("' → logprob: -3.0524792671203613
    4. '('' → logprob: -6.677479267120361
    5. '0' → logprob: -8.177478790283203
    6. '((' → logprob: -8.427478790283203
    7. '()' → logprob: -9.927478790283203
    8. '("(' → logprob: -9.927478790283203
    9. '("-' → logprob: -10.177478790283203
    10. '("("' → logprob: -10.677478790283203

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '2' → logprob: -12.875003814697266
    3. ' ' → logprob: -14.625003814697266
    4. ')' → logprob: -14.875003814697266
    5. '```' → logprob: -16.000003814697266
    6. '-' → logprob: -17.062503814697266
    7. '１' → logprob: -17.250003814697266
    8. '11' → logprob: -17.250003814697266
    9. '0' → logprob: -17.375003814697266
    10. '   ' → logprob: -17.500003814697266

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012511172099038959
    2. ')
' → logprob: -9.00012493133545
    3. ' )' → logprob: -13.87512493133545
    4. '))' → logprob: -15.37512493133545
    5. ')
' → logprob: -15.87512493133545
    6. ')

' → logprob: -16.750125885009766
    7. ')`' → logprob: -16.875125885009766
    8. '()' → logprob: -17.000125885009766
    9. ')return' → logprob: -17.125125885009766
    10. '')' → logprob: -17.500125885009766

Token 49: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.019377080723643303
    2. '\n' → logprob: -4.8943772315979
    3. ' else' → logprob: -5.1443772315979
    4. '
' → logprob: -6.6443772315979
    5. ')' → logprob: -6.7693772315979
    6. '```' → logprob: -6.7693772315979
    7. '\' → logprob: -7.1443772315979
    8. 'elif' → logprob: -8.019376754760742
    9. ' 
' → logprob: -8.394376754760742
    10. '   ' → logprob: -9.019376754760742

Token 50: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4349629580974579
    2. 'exit' (adapté à ' exit') → logprob: -1.0599629878997803
    3. '   ' → logprob: -6.309962749481201
    4. ' exit' → logprob: -6.309962749481201
    5. '	exit' → logprob: -6.559962749481201
    6. 'elif' → logprob: -8.18496322631836
    7. ' else' → logprob: -8.55996322631836
    8. 'quit' → logprob: -8.68496322631836
    9. '    
' → logprob: -9.18496322631836
    10. '_exit' → logprob: -9.43496322631836

Token 51: '()

' (ID: 5874)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3743741512298584
    2. '
' → logprob: -1.7493741512298584
    3. 'n' → logprob: -3.1243741512298584
    4. ')' → logprob: -3.6243741512298584
    5. '\' → logprob: -3.8743741512298584
    6. ' 
' → logprob: -4.2493743896484375
    7. '  
' → logprob: -4.9993743896484375
    8. 'else' → logprob: -5.3743743896484375
    9. '' → logprob: -5.7493743896484375
    10. '```' → logprob: -5.7493743896484375

Token 52: 'AB' (ID: 2912)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9096701741218567
    2. 'd' → logprob: -1.409670114517212
    3. 'b' → logprob: -2.284670114517212
    4. 'visited' → logprob: -2.909670114517212
    5. 'a' → logprob: -3.409670114517212
    6. 'distance' → logprob: -3.784670114517212
    7. 'dist' → logprob: -4.159670352935791
    8. 'else' → logprob: -4.659670352935791
    9. 'edges' → logprob: -4.659670352935791
    10. 'queue' → logprob: -5.034670352935791

Token 53: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3673812448978424
    2. ' =' → logprob: -1.24238121509552
    3. 's' → logprob: -3.9923813343048096
    4. '=[]' → logprob: -8.99238109588623
    5. '[]' → logprob: -9.24238109588623
    6. 'S' → logprob: -10.11738109588623
    7. '_' → logprob: -11.36738109588623
    8. ',' → logprob: -12.36738109588623
    9. ' ' → logprob: -12.36738109588623
    10. '[' → logprob: -12.49238109588623

Token 54: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0069210343062877655
    2. '[]' → logprob: -5.25692081451416
    3. '[int' → logprob: -7.13192081451416
    4. '[list' → logprob: -7.38192081451416
    5. '[input' → logprob: -9.38192081451416
    6. '[array' → logprob: -10.13192081451416
    7. 'deque' → logprob: -10.75692081451416
    8. '[i' → logprob: -10.88192081451416
    9. ' [' → logprob: -11.13192081451416
    10. '[str' → logprob: -11.25692081451416

Token 55: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11928030848503113
    2. '*' → logprob: -3.1192803382873535
    3. 'int' → logprob: -3.3692803382873535
    4. ']' → logprob: -4.2442803382873535
    5. ']*' → logprob: -4.4942803382873535
    6. 'list' → logprob: -5.6192803382873535
    7. 'False' → logprob: -6.2442803382873535
    8. ']int' → logprob: -6.6192803382873535
    9. 'tuple' → logprob: -7.2442803382873535
    10. 'map' → logprob: -7.8692803382873535

Token 56: '(x' (ID: 4061)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.5279124975204468
    2. '()' → logprob: -1.7779124975204468
    3. '(x' → logprob: -2.0279126167297363
    4. '(input' → logprob: -3.0279126167297363
    5. '(' → logprob: -3.1529126167297363
    6. ']' → logprob: -4.902912616729736
    7. '(),' → logprob: -5.152912616729736
    8. ']()' → logprob: -6.402912616729736
    9. ',' → logprob: -7.277912616729736
    10. '(i' → logprob: -7.527912616729736

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18042056262493134
    2. '()' → logprob: -2.0554206371307373
    3. '())' → logprob: -3.3054206371307373
    4. 'for' → logprob: -8.430420875549316
    5. '(' → logprob: -9.930420875549316
    6. 'input' → logprob: -10.430420875549316
    7. '(),' → logprob: -11.555420875549316
    8. '(x' → logprob: -11.805420875549316
    9. '()]' → logprob: -11.805420875549316
    10. ')]' → logprob: -12.305420875549316

Token 58: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.353066086769104
    2. '()' → logprob: -1.603066086769104
    3. ' for' → logprob: -2.6030659675598145
    4. ')' → logprob: -3.8530659675598145
    5. ']' → logprob: -7.7280659675598145
    6. '()]' → logprob: -8.603066444396973
    7. '(x' → logprob: -9.103066444396973
    8. '(' → logprob: -9.728066444396973
    9. '())' → logprob: -10.353066444396973
    10. 'input' → logprob: -11.103066444396973

Token 59: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.29050806164741516
    2. ' x' → logprob: -1.6655080318450928
    3. '_' → logprob: -3.1655080318450928
    4. ' in' → logprob: -4.040508270263672
    5. 'in' → logprob: -6.540508270263672
    6. ' ' → logprob: -7.415508270263672
    7. 'input' → logprob: -7.665508270263672
    8. ' _' → logprob: -8.415508270263672
    9. '<|end|>' → logprob: -9.040508270263672
    10. '<|end|>' → logprob: -9.165508270263672

Token 60: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759750008583069
    2. ' in' → logprob: -0.8259750008583069
    3. 'input' → logprob: -11.57597541809082
    4. 'x' → logprob: -12.07597541809082
    5. ' ' → logprob: -12.07597541809082
    6. 'inp' → logprob: -12.95097541809082
    7. 'import' → logprob: -13.45097541809082
    8. ')' → logprob: -13.57597541809082
    9. '	in' → logprob: -13.70097541809082
    10. 'i' → logprob: -13.82597541809082

Token 61: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008619658648967743
    2. ' input' → logprob: -4.758619785308838
    3. 'range' → logprob: -13.38361930847168
    4. 'in' → logprob: -13.63361930847168
    5. '(input' → logprob: -14.13361930847168
    6. ' ' → logprob: -14.25861930847168
    7. '	input' → logprob: -16.00861930847168
    8. '_input' → logprob: -16.25861930847168
    9. '=input' → logprob: -16.38361930847168
    10. 'i' → logprob: -16.50861930847168

Token 62: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3856492842023727e-06
    2. '()' → logprob: -13.625000953674316
    3. ' ().' → logprob: -17.125001907348633
    4. '.split' → logprob: -17.250001907348633
    5. '(' → logprob: -17.250001907348633
    6. '()]' → logprob: -17.500001907348633
    7. '()].' → logprob: -18.125001907348633
    8. 'split' → logprob: -18.250001907348633
    9. '.' → logprob: -18.500001907348633
    10. '.readline' → logprob: -20.125001907348633

Token 63: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0016263832803815603
    2. 'strip' → logprob: -6.501626491546631
    3. 'rstrip' → logprob: -9.001626014709473
    4. ' split' → logprob: -14.501626014709473
    5. '(split' → logprob: -15.376626014709473
    6. 'spl' → logprob: -16.62662696838379
    7. 's' → logprob: -18.87662696838379
    8. ' ' → logprob: -19.00162696838379
    9. '.split' → logprob: -19.12662696838379
    10. ' strip' → logprob: -19.37662696838379

Token 64: '()]' (ID: 59063)
  Prédit: '()]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.006717974785715342
    2. '()' → logprob: -5.006718158721924
    3. '(' → logprob: -13.256717681884766
    4. '()],' → logprob: -14.506717681884766
    5. '()]
' → logprob: -16.256717681884766
    6. '())' → logprob: -16.506717681884766
    7. '()][' → logprob: -16.881717681884766
    8. '()].' → logprob: -17.006717681884766
    9. '()}' → logprob: -17.381717681884766
    10. '()>' → logprob: -17.381717681884766

Token 65: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16561613976955414
    2. ' for' → logprob: -2.040616035461426
    3. '()' → logprob: -4.040616035461426
    4. ']' → logprob: -5.540616035461426
    5. '()]' → logprob: -6.915616035461426
    6. '	for' → logprob: -9.790616035461426
    7. ' ' → logprob: -9.915616035461426
    8. ')' → logprob: -10.665616035461426
    9. ' ]' → logprob: -11.165616035461426
    10. ' ()' → logprob: -11.790616035461426

Token 66: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.306841105222702
    2. 'range' → logprob: -1.8068411350250244
    3. ' range' → logprob: -2.3068411350250244
    4. '_range' → logprob: -7.931840896606445
    5. ' _' → logprob: -9.931840896606445
    6. '(range' → logprob: -10.181840896606445
    7. '	range' → logprob: -10.681840896606445
    8. ' ' → logprob: -11.806840896606445
    9. ' in' → logprob: -12.181840896606445
    10. 'in' → logprob: -13.431840896606445

Token 67: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3663131892681122
    2. 'in' → logprob: -1.6163132190704346
    3. ' in' → logprob: -2.2413132190704346
    4. ' range' → logprob: -6.6163129806518555
    5. 'n' → logprob: -8.241312980651855
    6. 'm' → logprob: -9.991312980651855
    7. '(range' → logprob: -10.366312980651855
    8. ' ' → logprob: -10.866312980651855
    9. 'r' → logprob: -11.616312980651855
    10. 'ange' → logprob: -11.741312980651855

Token 68: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000194361709873192
    2. ' range' → logprob: -8.625194549560547
    3. '[' → logprob: -12.000194549560547
    4. '   ' → logprob: -13.000194549560547
    5. ' ' → logprob: -13.250194549560547
    6. 'r' → logprob: -13.875194549560547
    7. '(range' → logprob: -13.875194549560547
    8. '	range' → logprob: -14.125194549560547
    9. '  ' → logprob: -14.250194549560547
    10. 'rang' → logprob: -15.125194549560547

Token 69: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0003421375877223909
    2. 'm' → logprob: -8.62534236907959
    3. '(' → logprob: -9.00034236907959
    4. '(n' → logprob: -10.25034236907959
    5. ' (' → logprob: -13.37534236907959
    6. '(M' → logprob: -13.62534236907959
    7. '((' → logprob: -15.75034236907959
    8. ' m' → logprob: -15.75034236907959
    9. '	m' → logprob: -15.87534236907959
    10. '   ' → logprob: -16.250341415405273

Token 70: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0305563285946846
    2. ']' → logprob: -3.5305564403533936
    3. ')' → logprob: -7.1555562019348145
    4. '])' → logprob: -10.905556678771973
    5. '])]' → logprob: -13.155556678771973
    6. '}]' → logprob: -14.280556678771973
    7. ')])' → logprob: -14.280556678771973
    8. ']]' → logprob: -14.405556678771973
    9. ')],' → logprob: -14.405556678771973
    10. ']
' → logprob: -14.780556678771973

Token 71: 'rep' (ID: 17407)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16659006476402283
    2. '<|end|>' → logprob: -2.7915899753570557
    3. '\n' → logprob: -3.4165899753570557
    4. '[' → logprob: -4.541590213775635
    5. 'dp' → logprob: -4.541590213775635
    6. 'd' → logprob: -5.041590213775635
    7. 'n' → logprob: -5.416590213775635
    8. ' 
' → logprob: -5.791590213775635
    9. '
' → logprob: -5.916590213775635
    10. '' → logprob: -6.041590213775635

Token 72: 'n' (ID: 77)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37148621678352356
    2. 'r' → logprob: -2.121486186981201
    3. ' =' → logprob: -2.746486186981201
    4. 'ort' → logprob: -3.871486186981201
    5. 'os' → logprob: -4.121486186981201
    6. 'o' → logprob: -4.121486186981201
    7. '=[]
' → logprob: -4.871486186981201
    8. 'resent' → logprob: -4.996486186981201
    9. '=[' → logprob: -4.996486186981201
    10. 'len' → logprob: -4.996486186981201

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2550767660140991
    2. 'l' → logprob: -2.6300768852233887
    3. '=' → logprob: -2.8800768852233887
    4. 'et' → logprob: -3.6300768852233887
    5. '=[' → logprob: -3.8800768852233887
    6. 'o' → logprob: -4.630076885223389
    7. 't' → logprob: -5.005076885223389
    8. 'ort' → logprob: -5.255076885223389
    9. '=set' → logprob: -5.380076885223389
    10. '=[]
' → logprob: -5.755076885223389

Token 74: ' [[]' (ID: 182908)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0067371129989624
    2. '[n' → logprob: -1.3817371129989624
    3. '[' → logprob: -1.7567371129989624
    4. ' [' → logprob: -2.631737232208252
    5. '{}' → logprob: -2.881737232208252
    6. '{' → logprob: -3.381737232208252
    7. '[-' → logprob: -3.631737232208252
    8. ' n' → logprob: -4.756737232208252
    9. ' [-' → logprob: -5.381737232208252
    10. ' {}' → logprob: -6.506737232208252

Token 75: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4116227924823761
    2. 'for' → logprob: -1.1616227626800537
    3. '(n' → logprob: -4.411623001098633
    4. ']' → logprob: -4.661623001098633
    5. ')' → logprob: -6.786623001098633
    6. 'n' → logprob: -7.911623001098633
    7. ',n' → logprob: -8.536623001098633
    8. ',' → logprob: -8.786623001098633
    9. '()' → logprob: -8.911623001098633
    10. ' (' → logprob: -9.286623001098633

Token 76: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38871628046035767
    2. ' range' → logprob: -1.263716220855713
    3. 'range' → logprob: -3.638716220855713
    4. ' _' → logprob: -4.888716220855713
    5. '(range' → logprob: -5.638716220855713
    6. ' in' → logprob: -6.513716220855713
    7. '(' → logprob: -8.638716697692871
    8. ' ' → logprob: -8.638716697692871
    9. '_range' → logprob: -8.763716697692871
    10. '	range' → logprob: -9.888716697692871

Token 77: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014500412158668041
    2. 'in' → logprob: -4.389500617980957
    3. ' range' → logprob: -6.514500617980957
    4. ' in' → logprob: -7.639500617980957
    5. 'n' → logprob: -11.139500617980957
    6. '(range' → logprob: -11.639500617980957
    7. '	range' → logprob: -14.139500617980957
    8. ' ' → logprob: -14.139500617980957
    9. '_' → logprob: -14.889500617980957
    10. '0' → logprob: -15.639500617980957

Token 78: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06200622022151947
    2. ' range' → logprob: -2.8120062351226807
    3. '(range' → logprob: -10.437005996704102
    4. 'n' → logprob: -12.187005996704102
    5. ' ' → logprob: -13.937005996704102
    6. 'r' → logprob: -14.062005996704102
    7. '	range' → logprob: -14.437005996704102
    8. '   ' → logprob: -14.437005996704102
    9. 'rang' → logprob: -14.687005996704102
    10. 'ran' → logprob: -15.312005996704102

Token 79: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000937547127250582
    2. '(range' → logprob: -7.375937461853027
    3. '(' → logprob: -8.125937461853027
    4. ' range' → logprob: -12.125937461853027
    5. 'range' → logprob: -12.250937461853027
    6. ' (' → logprob: -13.000937461853027
    7. '((' → logprob: -13.250937461853027
    8. '(m' → logprob: -15.125937461853027
    9. '(N' → logprob: -15.875937461853027
    10. 'n' → logprob: -15.875937461853027

Token 80: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00018625585653353482
    2. '+' → logprob: -8.8751859664917
    3. ')' → logprob: -11.0001859664917
    4. ']' → logprob: -11.5001859664917
    5. ' )' → logprob: -11.6251859664917
    6. ')]
' → logprob: -11.8751859664917
    7. ')]

' → logprob: -14.3751859664917
    8. ' ]' → logprob: -14.5001859664917
    9. '>]' → logprob: -14.6251859664917
    10. '])' → logprob: -15.0001859664917

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0053414395079016685
    2. ' ' → logprob: -5.380341529846191
    3. '2' → logprob: -7.255341529846191
    4. '3' → logprob: -12.005341529846191
    5. '0' → logprob: -13.630341529846191
    6. '10' → logprob: -13.630341529846191
    7. '7' → logprob: -13.755341529846191
    8. '5' → logprob: -13.942841529846191
    9. '6' → logprob: -14.442841529846191
    10. '4' → logprob: -14.442841529846191

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034380643046461046
    2. '2' → logprob: -8.625344276428223
    3. ' ' → logprob: -8.750344276428223
    4. '3' → logprob: -13.500344276428223
    5. '7' → logprob: -13.750344276428223
    6. '10' → logprob: -14.687844276428223
    7. '5' → logprob: -14.687844276428223
    8. '１' → logprob: -14.812844276428223
    9. '6' → logprob: -14.875344276428223
    10. '0' → logprob: -15.062844276428223

Token 83: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005971334408968687
    2. ']' → logprob: -5.130971431732178
    3. '])' → logprob: -11.13097095489502
    4. ')' → logprob: -11.38097095489502
    5. '])]' → logprob: -11.88097095489502
    6. ' ]' → logprob: -12.63097095489502
    7. '>]' → logprob: -13.25597095489502
    8. '}]' → logprob: -13.75597095489502
    9. ']]' → logprob: -14.25597095489502
    10. ')]
' → logprob: -14.38097095489502

Token 84: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027019262313842773
    2. 'dp' → logprob: -4.777019500732422
    3. 'dist' → logprob: -5.402019500732422
    4. 'distance' → logprob: -6.027019500732422
    5. 'rep' → logprob: -6.152019500732422
    6. 'answer' → logprob: -6.902019500732422
    7. 'rev' → logprob: -7.402019500732422
    8. 'res' → logprob: -7.527019500732422
    9. 'visited' → logprob: -7.527019500732422
    10. 'degree' → logprob: -7.652019500732422

Token 85: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.11472658067941666
    2. 'a' → logprob: -2.3647265434265137
    3. ' i' → logprob: -4.989726543426514
    4. ' u' → logprob: -5.864726543426514
    5. 'A' → logprob: -6.489726543426514
    6. ' A' → logprob: -6.989726543426514
    7. 'i' → logprob: -7.239726543426514
    8. 'u' → logprob: -7.739726543426514
    9. ' _' → logprob: -7.864726543426514
    10. ' ' → logprob: -8.614727020263672

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030997619032859802
    2. ' ,' → logprob: -6.6280999183654785
    3. ',b' → logprob: -7.0030999183654785
    4. ' in' → logprob: -7.7530999183654785
    5. 'b' → logprob: -8.00309944152832
    6. 'a' → logprob: -10.62809944152832
    7. ',_' → logprob: -10.75309944152832
    8. '_,' → logprob: -11.50309944152832
    9. ' b' → logprob: -11.50309944152832
    10. ' ' → logprob: -11.87809944152832

Token 87: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007099286303855479
    2. ' b' → logprob: -7.2507100105285645
    3. '_b' → logprob: -18.750709533691406
    4. '	b' → logprob: -20.625709533691406
    5. ' ' → logprob: -21.000709533691406
    6. 'B' → logprob: -21.625709533691406
    7. ',b' → logprob: -22.000709533691406
    8. ')b' → logprob: -22.250709533691406
    9. '>b' → logprob: -22.250709533691406
    10. 'bc' → logprob: -23.375709533691406

Token 88: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25211939215660095
    2. ' in' → logprob: -1.5021194219589233
    3. ',' → logprob: -8.877119064331055
    4. ' ' → logprob: -10.877119064331055
    5. ',in' → logprob: -11.752119064331055
    6. '	in' → logprob: -11.877119064331055
    7. 'In' → logprob: -12.627119064331055
    8. '_in' → logprob: -13.002119064331055
    9. 'a' → logprob: -13.252119064331055
    10. '  ' → logprob: -13.377119064331055

Token 89: ' AB' (ID: 16520)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.003177952254191041
    2. ' AB' → logprob: -5.753178119659424
    3. ' ' → logprob: -16.003177642822266
    4. '_AB' → logprob: -16.378177642822266
    5. 'A' → logprob: -18.753177642822266
    6. '[' → logprob: -19.003177642822266
    7. 'ab' → logprob: -19.003177642822266
    8. 'AD' → logprob: -19.628177642822266
    9. '   ' → logprob: -19.753177642822266
    10. '  ' → logprob: -20.003177642822266

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3425219549390022e-05
    2. ':
' → logprob: -12.37501335144043
    3. '):' → logprob: -13.00001335144043
    4. ':**' → logprob: -13.00001335144043
    5. '.' → logprob: -14.12501335144043
    6. ',' → logprob: -14.25001335144043
    7. 'in' → logprob: -15.00001335144043
    8. ''s' → logprob: -15.00001335144043
    9. '.append' → logprob: -15.12501335144043
    10. '```' → logprob: -15.12501335144043

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004952781833708286
    2. ' rep' → logprob: -6.379952907562256
    3. '       ' → logprob: -6.754952907562256
    4. 'rep' → logprob: -7.379952907562256
    5. '
' → logprob: -7.504952907562256
    6. '    
' → logprob: -7.879952907562256
    7. '	rep' → logprob: -8.629952430725098
    8. ' ' → logprob: -9.379952430725098
    9. '```' → logprob: -9.629952430725098
    10. ' 
' → logprob: -9.629952430725098

Token 92: ' rep' (ID: 2449)
  Prédit: ' rep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rep' → logprob: -0.044033218175172806
    2. 'rep' (adapté à ' rep') → logprob: -3.1690332889556885
    3. '   ' → logprob: -6.919033050537109
    4. '	rep' → logprob: -10.16903305053711
    5. '
' → logprob: -13.41903305053711
    6. '(rep' → logprob: -13.54403305053711
    7. ' ' → logprob: -14.04403305053711
    8. '_rep' → logprob: -14.41903305053711
    9. '```' → logprob: -14.54403305053711
    10. '       ' → logprob: -14.66903305053711

Token 93: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. '%n' → logprob: -17.0
    3. '<n' → logprob: -17.375
    4. '[n' → logprob: -17.5
    5. '	n' → logprob: -18.0
    6. ')n' → logprob: -18.375
    7. '```' → logprob: -18.5
    8. ' n' → logprob: -18.75
    9. 'ن' → logprob: -19.0
    10. '``' → logprob: -19.0

Token 94: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.408677290892228e-05
    2. '[b' → logprob: -9.7500638961792
    3. '[' → logprob: -12.1250638961792
    4. 'a' → logprob: -15.1250638961792
    5. ' [' → logprob: -18.125064849853516
    6. '[A' → logprob: -19.500064849853516
    7. 'b' → logprob: -20.375064849853516
    8. '   ' → logprob: -20.625064849853516
    9. '[u' → logprob: -20.875064849853516
    10. '[int' → logprob: -21.125064849853516

Token 95: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0005835341871716082
    2. ']' → logprob: -7.500583648681641
    3. ' ].' → logprob: -10.75058364868164
    4. '.append' → logprob: -12.00058364868164
    5. '.' → logprob: -13.00058364868164
    6. ').' → logprob: -14.75058364868164
    7. ''].' → logprob: -16.62558364868164
    8. ' ' → logprob: -17.00058364868164
    9. '   ' → logprob: -17.00058364868164
    10. '.]' → logprob: -17.00058364868164

Token 96: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.935296834039036e-06
    2. ' append' → logprob: -12.87500286102295
    3. 'appen' → logprob: -15.12500286102295
    4. '.append' → logprob: -18.000003814697266
    5. 'app' → logprob: -18.500003814697266
    6. 'appe' → logprob: -18.750003814697266
    7. 'push' → logprob: -19.250003814697266
    8. 'Append' → logprob: -19.375003814697266
    9. 'ap' → logprob: -19.500003814697266
    10. ' ' → logprob: -19.500003814697266

Token 97: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.921253225300461e-05
    2. 'b' → logprob: -9.625069618225098
    3. '(' → logprob: -12.875069618225098
    4. ' b' → logprob: -14.625069618225098
    5. ' (' → logprob: -16.50006866455078
    6. '((' → logprob: -16.62506866455078
    7. ')b' → logprob: -17.75006866455078
    8. '(
' → logprob: -18.62506866455078
    9. '	b' → logprob: -18.62506866455078
    10. '(a' → logprob: -19.62506866455078

Token 98: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003277176001574844
    2. ')
' → logprob: -8.125328063964844
    3. ' )' → logprob: -10.375328063964844
    4. ' )
' → logprob: -16.125328063964844
    5. ')
' → logprob: -16.375328063964844
    6. '),' → logprob: -16.625328063964844
    7. ')

' → logprob: -16.875328063964844
    8. '   ' → logprob: -16.875328063964844
    9. ')a' → logprob: -17.750328063964844
    10. '<|end|>' → logprob: -18.125328063964844

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011079886928200722
    2. 'rep' → logprob: -4.511079788208008
    3. ' rep' → logprob: -10.511079788208008
    4. '	rep' → logprob: -12.886079788208008
    5. '```' → logprob: -14.011079788208008
    6. '(rep' → logprob: -14.386079788208008
    7. '       ' → logprob: -15.761079788208008
    8. 're' → logprob: -16.011079788208008
    9. '<|end|>' → logprob: -16.011079788208008
    10. '   ' → logprob: -16.136079788208008

Token 100: ' rep' (ID: 2449)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' (adapté à ' rep') → logprob: -0.06339378654956818
    2. ' rep' → logprob: -2.8133938312530518
    3. '   ' → logprob: -6.563393592834473
    4. '	rep' → logprob: -11.688393592834473
    5. ' ' → logprob: -13.438393592834473
    6. 're' → logprob: -13.938393592834473
    7. '(rep' → logprob: -14.063393592834473
    8. '  ' → logprob: -14.313393592834473
    9. '_rep' → logprob: -14.688393592834473
    10. '.rep' → logprob: -14.813393592834473

Token 101: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.491498531133402e-06
    2. '[b' → logprob: -12.000009536743164
    3. 'b' → logprob: -12.750009536743164
    4. '[n' → logprob: -15.000009536743164
    5. '_n' → logprob: -17.750009536743164
    6. '[' → logprob: -18.250009536743164
    7. 'nb' → logprob: -19.375009536743164
    8. ' n' → logprob: -19.625009536743164
    9. 'ن' → logprob: -20.000009536743164
    10. '­n' → logprob: -20.000009536743164

Token 102: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.00000286102295
    3. '[a' → logprob: -14.62500286102295
    4. 'b' → logprob: -15.37500286102295
    5. ' [' → logprob: -19.000003814697266
    6. '[s' → logprob: -19.375003814697266
    7. '[B' → logprob: -19.875003814697266
    8. '	b' → logprob: -20.000003814697266
    9. '```' → logprob: -20.000003814697266
    10. ' ' → logprob: -20.500003814697266

Token 103: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.4899776577949524
    2. '.' → logprob: -1.1149775981903076
    3. ').' → logprob: -2.8649775981903076
    4. '.append' → logprob: -6.114977836608887
    5. ')' → logprob: -9.864977836608887
    6. ']' → logprob: -10.114977836608887
    7. '<|end|>' → logprob: -10.239977836608887
    8. ' .' → logprob: -10.489977836608887
    9. '.setdefault' → logprob: -11.114977836608887
    10. '}.' → logprob: -11.114977836608887

Token 104: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. 'a' → logprob: -15.5
    3. 'appen' → logprob: -16.125
    4. ' append' → logprob: -16.25
    5. '.append' → logprob: -17.375
    6. 'app' → logprob: -17.625
    7. '	append' → logprob: -17.875
    8. '```' → logprob: -18.875
    9. '_append' → logprob: -20.0
    10. 'add' → logprob: -20.125

Token 105: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0003364158037584275
    2. '(' → logprob: -8.000336647033691
    3. 'a' → logprob: -14.625336647033691
    4. '(
' → logprob: -14.750336647033691
    5. ' (' → logprob: -16.250335693359375
    6. '(A' → logprob: -19.125335693359375
    7. '(

' → logprob: -19.500335693359375
    8. '(s' → logprob: -20.250335693359375
    9. '((' → logprob: -20.500335693359375
    10. '()' → logprob: -21.125335693359375

Token 106: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ')
' → logprob: -12.625005722045898
    3. ' )' → logprob: -13.000005722045898
    4. ')n' → logprob: -17.2500057220459
    5. ')

' → logprob: -17.5000057220459
    6. '))' → logprob: -18.1250057220459
    7. ')`' → logprob: -18.3750057220459
    8. '`)' → logprob: -18.5000057220459
    9. ')return' → logprob: -18.7500057220459
    10. '),' → logprob: -18.7500057220459

Token 107: 'tree' (ID: 19816)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5066588521003723
    2. 'visited' → logprob: -2.1316587924957275
    3. 'dp' → logprob: -2.5066587924957275
    4. 'depth' → logprob: -2.8816587924957275
    5. 'color' → logprob: -3.0066587924957275
    6. 'from' → logprob: -3.8816587924957275
    7. 'q' → logprob: -4.131659030914307
    8. 'distance' → logprob: -4.881659030914307
    9. 'ans' → logprob: -4.881659030914307
    10. 'colors' → logprob: -5.256659030914307

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.032835640013217926
    2. '=' → logprob: -4.032835483551025
    3. 's' → logprob: -5.657835483551025
    4. '=[]' → logprob: -6.157835483551025
    5. '_' → logprob: -6.907835483551025
    6. 'dist' → logprob: -7.407835483551025
    7. '_edges' → logprob: -7.407835483551025
    8. '_depth' → logprob: -7.407835483551025
    9. '=[' → logprob: -7.532835483551025
    10. '_nodes' → logprob: -7.657835483551025

Token 109: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08064639568328857
    2. '[-' → logprob: -3.205646514892578
    3. ' [' → logprob: -4.330646514892578
    4. '[]' → logprob: -4.830646514892578
    5. ' [[]' → logprob: -4.830646514892578
    6. '[[' → logprob: -5.580646514892578
    7. 'deque' → logprob: -5.830646514892578
    8. ' [-' → logprob: -8.455646514892578
    9. '[n' → logprob: -8.580646514892578
    10. ' deque' → logprob: -9.080646514892578

Token 110: 'set' (ID: 977)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7862383127212524
    2. '-' → logprob: -1.0362383127212524
    3. '[]' → logprob: -1.7862383127212524
    4. 'False' → logprob: -4.036238193511963
    5. '[' → logprob: -6.161238193511963
    6. 'set' → logprob: -6.536238193511963
    7. '[-' → logprob: -8.286238670349121
    8. '[]
' → logprob: -9.161238670349121
    9. 'True' → logprob: -9.411238670349121
    10. ']' → logprob: -9.786238670349121

Token 111: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018154975026845932
    2. '()]' → logprob: -4.018155097961426
    3. '()
' → logprob: -13.268155097961426
    4. ' ()' → logprob: -14.268155097961426
    5. '(range' → logprob: -14.393155097961426
    6. '(' → logprob: -14.768155097961426
    7. '()

' → logprob: -15.268155097961426
    8. '(),' → logprob: -15.268155097961426
    9. '()}' → logprob: -15.643155097961426
    10. '())' → logprob: -15.768155097961426

Token 112: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01772221550345421
    2. 'for' → logprob: -4.267722129821777
    3. ' for' → logprob: -5.642722129821777
    4. '()]' → logprob: -12.517722129821777
    5. ' ()' → logprob: -12.767722129821777
    6. ']' → logprob: -13.767722129821777
    7. '(' → logprob: -14.642722129821777
    8. ' ' → logprob: -14.892722129821777
    9. ')' → logprob: -15.017722129821777
    10. '	for' → logprob: -15.642722129821777

Token 113: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1512608528137207
    2. ' range' → logprob: -1.1512608528137207
    3. '(range' → logprob: -1.7762608528137207
    4. ' _' → logprob: -1.9012608528137207
    5. 'range' → logprob: -3.2762608528137207
    6. '(' → logprob: -5.026260852813721
    7. '(_' → logprob: -5.901260852813721
    8. ' (' → logprob: -6.776260852813721
    9. '_range' → logprob: -8.026260375976562
    10. ' in' → logprob: -8.401260375976562

Token 114: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31501471996307373
    2. ' range' → logprob: -1.3150147199630737
    3. ' in' → logprob: -6.440014839172363
    4. '(range' → logprob: -9.065014839172363
    5. 'in' → logprob: -10.190014839172363
    6. ' ' → logprob: -14.565014839172363
    7. '(' → logprob: -15.315014839172363
    8. '_range' → logprob: -15.440014839172363
    9. '	range' → logprob: -15.440014839172363
    10. 'ange' → logprob: -15.690014839172363

Token 115: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.576018214225769
    2. ' range' → logprob: -0.826018214225769
    3. '(range' → logprob: -9.451018333435059
    4. '	range' → logprob: -16.201017379760742
    5. ' ' → logprob: -16.826017379760742
    6. '   ' → logprob: -18.076017379760742
    7. 'n' → logprob: -18.326017379760742
    8. '_range' → logprob: -18.951017379760742
    9. '.range' → logprob: -19.451017379760742
    10. 'ran' → logprob: -19.576017379760742

Token 116: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00020091790065634996
    2. '(' → logprob: -9.000201225280762
    3. '(range' → logprob: -10.000201225280762
    4. ' (' → logprob: -10.875201225280762
    5. 'range' → logprob: -11.625201225280762
    6. '((' → logprob: -13.375201225280762
    7. ' range' → logprob: -13.500201225280762
    8. 'n' → logprob: -14.250201225280762
    9. '(len' → logprob: -15.875201225280762
    10. ' n' → logprob: -16.375200271606445

Token 117: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006717974785715342
    2. ' +' → logprob: -5.006718158721924
    3. ')]' → logprob: -13.506717681884766
    4. '+
' → logprob: -14.631717681884766
    5. ')' → logprob: -14.881717681884766
    6. ' ' → logprob: -15.131717681884766
    7. '＋' → logprob: -16.256717681884766
    8. '+)' → logprob: -16.881717681884766
    9. ')])' → logprob: -17.756717681884766
    10. '1' → logprob: -17.881717681884766

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018518301658332348
    2. ' ' → logprob: -8.625185012817383
    3. '(' → logprob: -13.000185012817383
    4. '   ' → logprob: -13.250185012817383
    5. ')' → logprob: -14.750185012817383
    6. '0' → logprob: -15.000185012817383
    7. '```' → logprob: -15.500185012817383
    8. '  ' → logprob: -16.312685012817383
    9. '2' → logprob: -16.500185012817383
    10. '])' → logprob: -16.562685012817383

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7146746763028204e-05
    2. ' ' → logprob: -10.25003719329834
    3. '(' → logprob: -14.62503719329834
    4. '   ' → logprob: -15.00003719329834
    5. '0' → logprob: -15.12503719329834
    6. '2' → logprob: -15.37503719329834
    7. '```' → logprob: -16.500036239624023
    8. '])' → logprob: -16.562536239624023
    9. 'range' → logprob: -16.812536239624023
    10. '+' → logprob: -16.812536239624023

Token 120: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6118764281272888
    2. ']' → logprob: -1.3618764877319336
    3. ')]' → logprob: -1.6118764877319336
    4. '])' → logprob: -6.236876487731934
    5. ')])' → logprob: -11.861876487731934
    6. ' )' → logprob: -12.736876487731934
    7. '])]' → logprob: -12.986876487731934
    8. ' ]' → logprob: -13.111876487731934
    9. ')
' → logprob: -13.361876487731934
    10. ']
' → logprob: -13.736876487731934

Token 121: 'visited' (ID: 52453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7295907139778137
    2. 'visited' → logprob: -1.229590654373169
    3. 'from' → logprob: -3.104590654373169
    4. 'color' → logprob: -3.229590654373169
    5. 'dist' → logprob: -3.354590654373169
    6. 'queue' → logprob: -4.104590892791748
    7. 'depth' → logprob: -4.229590892791748
    8. 'q' → logprob: -4.354590892791748
    9. 'degree' → logprob: -4.604590892791748
    10. 'stack' → logprob: -4.729590892791748

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043006736785173416
    2. '=' → logprob: -3.168006658554077
    3. ' ' → logprob: -12.293006896972656
    4. '[' → logprob: -13.668006896972656
    5. ' =[' → logprob: -14.043006896972656
    6. ',' → logprob: -14.543006896972656
    7. ')' → logprob: -16.293006896972656
    8. '＝' → logprob: -16.293006896972656
    9. ']' → logprob: -16.418006896972656
    10. '=[' → logprob: -16.668006896972656

Token 123: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005626845522783697
    2. ' [' → logprob: -7.50056266784668
    3. '[n' → logprob: -11.75056266784668
    4. 'set' → logprob: -13.62556266784668
    5. '[node' → logprob: -14.75056266784668
    6. '   ' → logprob: -16.75056266784668
    7. '[int' → logprob: -16.75056266784668
    8. '[start' → logprob: -17.00056266784668
    9. '[now' → logprob: -17.50056266784668
    10. ' ' → logprob: -17.62556266784668

Token 124: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.004948985762894154
    2. '0' → logprob: -6.00494909286499
    3. ' False' → logprob: -6.00494909286499
    4. '(False' → logprob: -12.879948616027832
    5. ' ' → logprob: -13.754948616027832
    6. '   ' → logprob: -16.62994956970215
    7. 'True' → logprob: -17.50494956970215
    8. '
' → logprob: -18.12994956970215
    9. '-' → logprob: -18.37994956970215
    10. '[' → logprob: -18.62994956970215

Token 125: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2399837076663971
    2. ' for' → logprob: -1.6149836778640747
    3. 'for' → logprob: -4.364983558654785
    4. ']*(' → logprob: -6.864983558654785
    5. ']*' → logprob: -7.614983558654785
    6. ' ]' → logprob: -8.989983558654785
    7. ']+' → logprob: -10.614983558654785
    8. '(n' → logprob: -10.739983558654785
    9. ' ' → logprob: -11.114983558654785
    10. '*' → logprob: -11.364983558654785

Token 126: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10100287199020386
    2. ' *' → logprob: -3.1010029315948486
    3. ' for' → logprob: -3.4760029315948486
    4. '(n' → logprob: -4.8510026931762695
    5. '+' → logprob: -5.6010026931762695
    6. '*(' → logprob: -5.7260026931762695
    7. 'for' → logprob: -5.9760026931762695
    8. ',' → logprob: -7.2260026931762695
    9. ']' → logprob: -7.2260026931762695
    10. ')' → logprob: -7.6010026931762695

Token 127: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001933992956764996
    2. ' (' → logprob: -6.251934051513672
    3. '(' → logprob: -12.251934051513672
    4. '((' → logprob: -14.876934051513672
    5. '(N' → logprob: -16.376934051513672
    6. '0' → logprob: -16.876934051513672
    7. '   ' → logprob: -16.876934051513672
    8. ' ' → logprob: -17.501934051513672
    9. '(len' → logprob: -17.501934051513672
    10. 'n' → logprob: -17.876934051513672

Token 128: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.010234917514026165
    2. ' (' → logprob: -5.135234832763672
    3. 'n' → logprob: -5.510234832763672
    4. '(' → logprob: -8.635234832763672
    5. ' n' → logprob: -10.010234832763672
    6. '   ' → logprob: -11.510234832763672
    7. '((' → logprob: -12.260234832763672
    8. '
' → logprob: -12.760234832763672
    9. ' ' → logprob: -13.010234832763672
    10. ')' → logprob: -13.135234832763672

Token 129: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011048642918467522
    2. ' +' → logprob: -4.511048793792725
    3. '+
' → logprob: -14.386048316955566
    4. '1' → logprob: -16.136049270629883
    5. '＋' → logprob: -16.511049270629883
    6. ' +
' → logprob: -16.886049270629883
    7. '
' → logprob: -17.886049270629883
    8. '()+' → logprob: -19.011049270629883
    9. ' ' → logprob: -19.511049270629883
    10. '```' → logprob: -20.011049270629883

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018518301658332348
    2. ' ' → logprob: -8.625185012817383
    3. '7' → logprob: -12.625185012817383
    4. '2' → logprob: -14.125185012817383
    5. '   ' → logprob: -14.625185012817383
    6. '```' → logprob: -15.187685012817383
    7. '
' → logprob: -15.687685012817383
    8. '  ' → logprob: -16.687685012817383
    9. ')' → logprob: -16.750185012817383
    10. '１' → logprob: -16.875185012817383

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8074162653647363e-05
    2. ' ' → logprob: -11.250018119812012
    3. '(' → logprob: -12.500018119812012
    4. '(n' → logprob: -14.250018119812012
    5. '7' → logprob: -15.625018119812012
    6. '+' → logprob: -15.875018119812012
    7. '6' → logprob: -16.000017166137695
    8. '   ' → logprob: -16.125017166137695
    9. ' (' → logprob: -16.875017166137695
    10. '2' → logprob: -17.000017166137695

Token 132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. ')
' → logprob: -11.62501049041748
    3. ' )' → logprob: -13.75001049041748
    4. ')

' → logprob: -15.87501049041748
    5. ')
' → logprob: -16.125009536743164
    6. '```' → logprob: -17.125009536743164
    7. '))' → logprob: -17.375009536743164
    8. ')`' → logprob: -17.500009536743164
    9. '),' → logprob: -18.500009536743164
    10. '`)' → logprob: -18.875009536743164

Token 133: 'visited' (ID: 52453)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9362132549285889
    2. 'queue' → logprob: -1.3112132549285889
    3. 'for' → logprob: -1.6862132549285889
    4. 'q' → logprob: -2.311213254928589
    5. 'from' → logprob: -3.686213254928589
    6. 'stack' → logprob: -3.936213254928589
    7. 'dist' → logprob: -6.436213493347168
    8. 'deque' → logprob: -6.436213493347168
    9. 'que' → logprob: -6.811213493347168
    10. 'depth' → logprob: -7.061213493347168

Token 134: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '0' → logprob: -14.875001907348633
    3. ' [' → logprob: -14.875001907348633
    4. '[
' → logprob: -15.250001907348633
    5. '1' → logprob: -15.375001907348633
    6. '\[' → logprob: -15.500001907348633
    7. ']' → logprob: -15.625001907348633
    8. '```' → logprob: -16.125001907348633
    9. ',' → logprob: -16.875001907348633
    10. '[:]' → logprob: -17.000001907348633

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11291632801294327
    2. '0' → logprob: -2.2379162311553955
    3. ' ' → logprob: -9.862915992736816
    4. 'a' → logprob: -11.237915992736816
    5. '(' → logprob: -11.862915992736816
    6. ')' → logprob: -11.862915992736816
    7. '2' → logprob: -12.362915992736816
    8. '[' → logprob: -12.612915992736816
    9. ']' → logprob: -13.112915992736816
    10. '-' → logprob: -13.737915992736816

Token 136: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.133198283147067e-05
    2. ' ]' → logprob: -10.375051498413086
    3. ']=' → logprob: -10.875051498413086
    4. ')' → logprob: -14.375051498413086
    5. '=' → logprob: -15.625051498413086
    6. ' =' → logprob: -16.125051498413086
    7. '[' → logprob: -16.375051498413086
    8. ']
' → logprob: -16.500051498413086
    9. '])' → logprob: -17.000051498413086
    10. 'True' → logprob: -17.375051498413086

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687410950660706
    2. '=' → logprob: -1.1368740797042847
    3. '=True' → logprob: -12.761874198913574
    4. ' ' → logprob: -15.761874198913574
    5. '＝' → logprob: -17.136873245239258
    6. '=true' → logprob: -17.261873245239258
    7. ',' → logprob: -17.386873245239258
    8. ')' → logprob: -17.386873245239258
    9. '=False' → logprob: -17.886873245239258
    10. ']' → logprob: -18.261873245239258

Token 138: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015024791937321424
    2. ' True' → logprob: -6.501502513885498
    3. 'False' → logprob: -15.50150203704834
    4. '1' → logprob: -17.501502990722656
    5. '(True' → logprob: -18.501502990722656
    6. '0' → logprob: -18.751502990722656
    7. ' ' → logprob: -18.876502990722656
    8. '   ' → logprob: -20.751502990722656
    9. '[' → logprob: -20.751502990722656
    10. '=True' → logprob: -22.001502990722656

Token 139: '
' (ID: 198)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.06297770887613297
    2. 'q' → logprob: -2.9379777908325195
    3. 'stack' → logprob: -5.5629777908325195
    4. 'dq' → logprob: -6.3129777908325195
    5. 'deque' → logprob: -7.0629777908325195
    6. ' queue' → logprob: -7.3129777908325195
    7. 'for' → logprob: -8.06297779083252
    8. 'que' → logprob: -8.18797779083252
    9. 'from' → logprob: -9.43797779083252
    10. 'd' → logprob: -9.56297779083252

Token 140: 'q' (ID: 80)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.603866696357727
    2. 'q' → logprob: -0.853866696357727
    3. 'dq' → logprob: -3.9788665771484375
    4. 'que' → logprob: -5.6038665771484375
    5. 'deque' → logprob: -5.8538665771484375
    6. 'stack' → logprob: -6.8538665771484375
    7. 'from' → logprob: -7.6038665771484375
    8. 'd' → logprob: -8.478866577148438
    9. 'Q' → logprob: -8.853866577148438
    10. ' queue' → logprob: -8.978866577148438

Token 141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688158988952637
    2. ' =' → logprob: -1.1368815898895264
    3. 'ue' → logprob: -11.511881828308105
    4. 'u' → logprob: -15.011881828308105
    5. ' ' → logprob: -16.51188087463379
    6. 'e' → logprob: -16.63688087463379
    7. 'deque' → logprob: -17.51188087463379
    8. '=q' → logprob: -17.51188087463379
    9. '＝' → logprob: -17.63688087463379
    10. '.' → logprob: -18.13688087463379

Token 142: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.00020354038861114532
    2. ' deque' → logprob: -8.500203132629395
    3. 'Deque' → logprob: -19.00020408630371
    4. 'collections' → logprob: -20.37520408630371
    5. '```' → logprob: -20.50020408630371
    6. 'de' → logprob: -20.75020408630371
    7. 'dq' → logprob: -21.37520408630371
    8. '   ' → logprob: -21.75020408630371
    9. ' ' → logprob: -22.37520408630371
    10. '	de' → logprob: -22.75020408630371

Token 143: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.04515959322452545
    2. '()' → logprob: -3.2951595783233643
    3. '([(' → logprob: -5.045159816741943
    4. '(' → logprob: -7.420159816741943
    5. '((' → logprob: -10.920159339904785
    6. '([]' → logprob: -11.045159339904785
    7. '()
' → logprob: -11.670159339904785
    8. '[(' → logprob: -12.170159339904785
    9. '[' → logprob: -13.170159339904785
    10. '()

' → logprob: -14.170159339904785

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.652451464906335e-05
    2. '(' → logprob: -11.250016212463379
    3. ' ' → logprob: -12.625016212463379
    4. '   ' → logprob: -16.375017166137695
    5. '１' → logprob: -18.500017166137695
    6. ' (' → logprob: -18.687517166137695
    7. '
' → logprob: -18.875017166137695
    8. '```' → logprob: -19.375017166137695
    9. '[' → logprob: -19.437517166137695
    10. ')' → logprob: -19.687517166137695

Token 145: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00030817187507636845
    2. ')' → logprob: -8.3753080368042
    3. '])
' → logprob: -9.6253080368042
    4. ')])' → logprob: -11.8753080368042
    5. ' ])' → logprob: -13.3753080368042
    6. '])

' → logprob: -14.0003080368042
    7. '))' → logprob: -14.0003080368042
    8. ')]' → logprob: -14.1253080368042
    9. '])
' → logprob: -15.2503080368042
    10. ')
' → logprob: -15.5003080368042

Token 146: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.008626751601696014
    2. ' while' → logprob: -4.758626937866211
    3. '```' → logprob: -12.383626937866211
    4. 'While' → logprob: -12.633626937866211
    5. '	while' → logprob: -13.133626937866211
    6. '
' → logprob: -14.008626937866211
    7. '   ' → logprob: -14.133626937866211
    8. ')' → logprob: -14.508626937866211
    9. '<|end|>' → logprob: -15.133626937866211
    10. 'for' → logprob: -16.25862693786621

Token 147: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.008615754544734955
    2. ' q' → logprob: -4.758615970611572
    3. '	q' → logprob: -14.633615493774414
    4. 'len' → logprob: -14.758615493774414
    5. ' ' → logprob: -15.633615493774414
    6. ' len' → logprob: -15.758615493774414
    7. '   ' → logprob: -16.258615493774414
    8. '(q' → logprob: -16.883615493774414
    9. '  ' → logprob: -18.258615493774414
    10. '_q' → logprob: -18.383615493774414

Token 148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023739850148558617
    2. '):' → logprob: -6.127374172210693
    3. ':
' → logprob: -9.877373695373535
    4. '.p' → logprob: -10.127373695373535
    5. '>:' → logprob: -10.502373695373535
    6. '():' → logprob: -10.877373695373535
    7. '.append' → logprob: -11.627373695373535
    8. '.' → logprob: -11.877373695373535
    9. ']:' → logprob: -11.877373695373535
    10. '.pop' → logprob: -12.002373695373535

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053682029247283936
    2. ' v' → logprob: -3.0536820888519287
    3. ' node' → logprob: -5.67868185043335
    4. ' current' → logprob: -7.05368185043335
    5. ' u' → logprob: -7.92868185043335
    6. '    
' → logprob: -8.678682327270508
    7. ' x' → logprob: -9.678682327270508
    8. 'v' → logprob: -9.803682327270508
    9. ' cur' → logprob: -10.803682327270508
    10. ' p' → logprob: -10.928682327270508

Token 150: ' u' (ID: 337)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6432835459709167
    2. 'u' (adapté à ' u') → logprob: -1.1432836055755615
    3. 'cur' → logprob: -2.8932836055755615
    4. ' v' → logprob: -3.3932836055755615
    5. ' u' → logprob: -3.6432836055755615
    6. 'x' → logprob: -4.018283367156982
    7. 'node' → logprob: -5.018283367156982
    8. ' cur' → logprob: -5.393283367156982
    9. 'current' → logprob: -5.768283367156982
    10. ' node' → logprob: -6.143283367156982

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408437728881836
    2. ' =' → logprob: -0.9740843772888184
    3. '=q' → logprob: -11.849084854125977
    4. '＝' → logprob: -16.599084854125977
    5. '=u' → logprob: -16.849084854125977
    6. ' =
' → logprob: -17.349084854125977
    7. ')' → logprob: -17.599084854125977
    8. '=
' → logprob: -17.599084854125977
    9. ' ' → logprob: -17.849084854125977
    10. 'q' → logprob: -18.224084854125977

Token 152: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.01416398212313652
    2. ' q' → logprob: -4.264163970947266
    3. '	q' → logprob: -15.139163970947266
    4. ' ' → logprob: -16.264163970947266
    5. '   ' → logprob: -16.639163970947266
    6. '
' → logprob: -17.889163970947266
    7. 'u' → logprob: -18.514163970947266
    8. '_q' → logprob: -18.514163970947266
    9. '.q' → logprob: -18.889163970947266
    10. '  ' → logprob: -19.014163970947266

Token 153: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -2.47495681833243e-05
    2. '.pop' → logprob: -11.125024795532227
    3. '.' → logprob: -11.625024795532227
    4. 'p' → logprob: -14.000024795532227
    5. ' .' → logprob: -16.000024795532227
    6. '   ' → logprob: -16.875024795532227
    7. 'opleft' → logprob: -17.125024795532227
    8. ').' → logprob: -18.125024795532227
    9. '.dequeue' → logprob: -18.625024795532227
    10. '.q' → logprob: -18.750024795532227

Token 154: 'opleft' (ID: 182170)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.38688570261001587
    2. 'opleft' → logprob: -1.136885643005371
    3. 'ople' → logprob: -12.386885643005371
    4. 'opt' → logprob: -12.636885643005371
    5. 'opf' → logprob: -13.136885643005371
    6. 'opl' → logprob: -13.386885643005371
    7. 'p' → logprob: -13.761885643005371
    8. 'o' → logprob: -13.886885643005371
    9. 'pop' → logprob: -14.761885643005371
    10. 'opup' → logprob: -15.136885643005371

Token 155: '()
' (ID: 1234)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6296653747558594
    2. ')' → logprob: -1.5046653747558594
    3. '()' → logprob: -2.0046653747558594
    4. '()
' → logprob: -2.2546653747558594
    5. '
' → logprob: -5.629665374755859
    6. '   ' → logprob: -6.504665374755859
    7. '())
' → logprob: -8.87966537475586
    8. 'for' → logprob: -9.00466537475586
    9. '```' → logprob: -10.37966537475586
    10. ')
' → logprob: -10.62966537475586

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33430564403533936
    2. 'for' → logprob: -1.8343056440353394
    3. ' for' → logprob: -2.084305763244629
    4. '    
' → logprob: -10.084305763244629
    5. '	for' → logprob: -12.334305763244629
    6. '   ' → logprob: -14.834305763244629
    7. '
' → logprob: -15.834305763244629
    8. ' 
' → logprob: -15.959305763244629
    9. '```' → logprob: -16.209304809570312
    10. ' ' → logprob: -16.334304809570312

Token 157: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005667338264174759
    2. '   ' → logprob: -8.000566482543945
    3. ' for' → logprob: -8.375566482543945
    4. '	for' → logprob: -14.750566482543945
    5. '    
' → logprob: -14.750566482543945
    6. '
' → logprob: -16.125566482543945
    7. ' ' → logprob: -17.125566482543945
    8. '  ' → logprob: -19.000566482543945
    9. '  
' → logprob: -19.000566482543945
    10. '```' → logprob: -19.500566482543945

Token 158: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0035150181502103806
    2. 'w' → logprob: -5.878515243530273
    3. ' v' → logprob: -8.003515243530273
    4. 'nv' → logprob: -8.253515243530273
    5. 'nx' → logprob: -9.503515243530273
    6. 'vv' → logprob: -11.878515243530273
    7. ' w' → logprob: -11.878515243530273
    8. 'x' → logprob: -12.003515243530273
    9. ' nxt' → logprob: -12.503515243530273
    10. 'to' → logprob: -13.003515243530273

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06197754293680191
    2. 'in' → logprob: -2.8119776248931885
    3. ' ' → logprob: -11.68697738647461
    4. '	in' → logprob: -14.18697738647461
    5. '   ' → logprob: -15.31197738647461
    6. '  ' → logprob: -15.43697738647461
    7. ',' → logprob: -16.18697738647461
    8. ' ' → logprob: -16.81197738647461
    9. '    ' → logprob: -17.43697738647461
    10. ')' → logprob: -17.56197738647461

Token 160: ' rep' (ID: 2449)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.02997078001499176
    2. ' rep' → logprob: -3.52997088432312
    3. 're' → logprob: -8.5299711227417
    4. '	rep' → logprob: -11.4049711227417
    5. '   ' → logprob: -12.2799711227417
    6. 'repr' → logprob: -13.0299711227417
    7. 'repid' → logprob: -13.0299711227417
    8. 'r' → logprob: -14.1549711227417
    9. '  ' → logprob: -14.1549711227417
    10. '
' → logprob: -15.1549711227417

Token 161: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.008129963040119e-06
    2. '[u' → logprob: -12.500003814697266
    3. '[n' → logprob: -15.375003814697266
    4. 'u' → logprob: -17.000003814697266
    5. ' n' → logprob: -17.750003814697266
    6. '[' → logprob: -18.000003814697266
    7. 'н' → logprob: -18.375003814697266
    8. '   ' → logprob: -18.625003814697266
    9. '```' → logprob: -19.500003814697266
    10. '	n' → logprob: -19.500003814697266

Token 162: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.875
    3. 'u' → logprob: -15.875
    4. '   ' → logprob: -17.625
    5. ' [' → logprob: -17.75
    6. '[v' → logprob: -18.375
    7. '(u' → logprob: -20.25
    8. '	u' → logprob: -20.875
    9. '```' → logprob: -20.875
    10. '[
' → logprob: -21.0

Token 163: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.008506429381668568
    2. ']:
' → logprob: -5.1335062980651855
    3. ']' → logprob: -6.1335062980651855
    4. '):' → logprob: -8.508506774902344
    5. ':' → logprob: -8.758506774902344
    6. ']:
' → logprob: -10.883506774902344
    7. '):
' → logprob: -11.258506774902344
    8. ']):' → logprob: -12.383506774902344
    9. '   ' → logprob: -12.508506774902344
    10. ' ]' → logprob: -13.383506774902344

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012945238268002868
    2. ' if' → logprob: -6.8762946128845215
    3. 'if' → logprob: -9.251294136047363
    4. '   ' → logprob: -9.376294136047363
    5. '    ' → logprob: -10.251294136047363
    6. '        
' → logprob: -12.001294136047363
    7. ',' → logprob: -12.001294136047363
    8. ' ' → logprob: -12.251294136047363
    9. '	   ' → logprob: -12.251294136047363
    10. '```' → logprob: -12.376294136047363

Token 165: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3658822774887085
    2. 'if' (adapté à ' if') → logprob: -1.3658822774887085
    3. '       ' → logprob: -3.115882396697998
    4. '           ' → logprob: -4.990882396697998
    5. '   ' → logprob: -9.36588191986084
    6. '        ' → logprob: -10.99088191986084
    7. '	if' → logprob: -11.86588191986084
    8. '```' → logprob: -13.11588191986084
    9. '	       ' → logprob: -13.11588191986084
    10. '    ' → logprob: -13.24088191986084

Token 166: ' visited' (ID: 18416)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.12708380818367004
    2. ' not' → logprob: -2.1270837783813477
    3. 'visited' → logprob: -8.877083778381348
    4. ' visited' → logprob: -12.002083778381348
    5. '!' → logprob: -13.002083778381348
    6. '(not' → logprob: -13.127083778381348
    7. '	not' → logprob: -13.127083778381348
    8. 'v' → logprob: -13.377083778381348
    9. '   ' → logprob: -13.627083778381348
    10. 'n' → logprob: -15.127083778381348

Token 167: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.500000953674316
    3. '==' → logprob: -16.5
    4. 'v' → logprob: -16.625
    5. '[u' → logprob: -16.875
    6. '   ' → logprob: -17.5
    7. '[V' → logprob: -18.625
    8. ' [' → logprob: -18.75
    9. '	v' → logprob: -19.125
    10. '
' → logprob: -19.25

Token 168: ']:
' (ID: 22152)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.49084028601646423
    2. ']' → logprob: -1.4908403158187866
    3. ']==' → logprob: -2.240840196609497
    4. ' ==' → logprob: -3.490840196609497
    5. ')' → logprob: -3.865840196609497
    6. ']:' → logprob: -6.990840435028076
    7. '   ' → logprob: -7.240840435028076
    8. ')==' → logprob: -7.240840435028076
    9. '):' → logprob: -7.365840435028076
    10. ' ]' → logprob: -7.740840435028076

Token 169: '           ' (ID: 352)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.48402783274650574
    2. '           ' → logprob: -0.9840278625488281
    3. 'continue' → logprob: -4.734027862548828
    4. '	continue' → logprob: -7.859027862548828
    5. ':
' → logprob: -8.109027862548828
    6. ':' → logprob: -8.109027862548828
    7. ' continues' → logprob: -9.984027862548828
    8. '       ' → logprob: -10.359027862548828
    9. '_continue' → logprob: -10.984027862548828
    10. ' continued' → logprob: -11.859027862548828

Token 170: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.30846473574638367
    2. 'continue' (adapté à ' continue') → logprob: -1.433464765548706
    3. '           ' → logprob: -3.808464765548706
    4. '               ' → logprob: -5.683464527130127
    5. '       ' → logprob: -7.183464527130127
    6. ' tree' → logprob: -8.683465003967285
    7. 'tree' → logprob: -8.683465003967285
    8. '   ' → logprob: -8.933465003967285
    9. '	continue' → logprob: -9.558465003967285
    10. ' continues' → logprob: -10.808465003967285

Token 171: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01966584101319313
    2. '
' → logprob: -4.019665718078613
    3. '        
' → logprob: -7.394665718078613
    4. 'visited' → logprob: -7.394665718078613
    5. ' visited' → logprob: -9.019665718078613
    6. ' 
' → logprob: -9.769665718078613
    7. '
' → logprob: -10.894665718078613
    8. 'n' → logprob: -11.269665718078613
    9. '```' → logprob: -11.269665718078613
    10. '\n' → logprob: -11.394665718078613

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009860326535999775
    2. '
' → logprob: -5.259860515594482
    3. 'visited' → logprob: -6.634860515594482
    4. ' tree' → logprob: -6.884860515594482
    5. ' visited' → logprob: -6.884860515594482
    6. '        
' → logprob: -7.509860515594482
    7. '   ' → logprob: -8.634860038757324
    8. 'tree' → logprob: -8.884860038757324
    9. ' 
' → logprob: -8.884860038757324
    10. '           ' → logprob: -9.509860038757324

Token 173: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.034676097333431244
    2. '       ' → logprob: -3.6596760749816895
    3. ' visited' → logprob: -4.9096760749816895
    4. 'tree' → logprob: -7.4096760749816895
    5. '           ' → logprob: -8.159676551818848
    6. '   ' → logprob: -10.034676551818848
    7. ' tree' → logprob: -10.659676551818848
    8. '```' → logprob: -13.034676551818848
    9. 'q' → logprob: -14.034676551818848
    10. 'queue' → logprob: -14.409676551818848

Token 174: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -12.500003814697266
    3. '[u' → logprob: -16.125003814697266
    4. 'v' → logprob: -16.375003814697266
    5. ' [' → logprob: -16.875003814697266
    6. '```' → logprob: -17.500003814697266
    7. '[val' → logprob: -18.250003814697266
    8. '[node' → logprob: -18.625003814697266
    9. '[i' → logprob: -19.000003814697266
    10. '[V' → logprob: -19.375003814697266

Token 175: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.12258882028982e-05
    2. ']=' → logprob: -9.75006103515625
    3. ' ]' → logprob: -13.62506103515625
    4. '=' → logprob: -13.62506103515625
    5. ' =' → logprob: -15.37506103515625
    6. ')' → logprob: -16.25006103515625
    7. ']
' → logprob: -16.50006103515625
    8. '=True' → logprob: -17.62506103515625
    9. 'True' → logprob: -17.87506103515625
    10. '   ' → logprob: -18.62506103515625

Token 176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022726893424988
    2. ' =' → logprob: -1.9102272987365723
    3. '=True' → logprob: -12.785226821899414
    4. 'True' → logprob: -15.410226821899414
    5. ']' → logprob: -17.160226821899414
    6. ' ' → logprob: -17.160226821899414
    7. ',' → logprob: -17.785226821899414
    8. '[' → logprob: -18.035226821899414
    9. '   ' → logprob: -18.410226821899414
    10. '＝' → logprob: -18.410226821899414

Token 177: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009114635176956654
    2. ' True' → logprob: -7.000911235809326
    3. '(True' → logprob: -19.625911712646484
    4. '   ' → logprob: -21.875911712646484
    5. '=True' → logprob: -22.250911712646484
    6. 'true' → logprob: -22.250911712646484
    7. 'False' → logprob: -22.625911712646484
    8. '
' → logprob: -22.750911712646484
    9. '1' → logprob: -23.000911712646484
    10. 'TRUE' → logprob: -24.750911712646484

Token 178: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15844577550888062
    2. '       ' → logprob: -2.4084458351135254
    3. ' 
' → logprob: -3.2834458351135254
    4. '        
' → logprob: -4.908445835113525
    5. '  
' → logprob: -5.533445835113525
    6. '<|end|>' → logprob: -5.658445835113525
    7. '    
' → logprob: -6.533445835113525
    8. '
' → logprob: -7.158445835113525
    9. '   ' → logprob: -7.783445835113525
    10. '```' → logprob: -8.408445358276367

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021134300157427788
    2. 'tree' → logprob: -4.021134376525879
    3. '   ' → logprob: -6.646134376525879
    4. ' tree' → logprob: -6.771134376525879
    5. '
' → logprob: -8.646134376525879
    6. '```' → logprob: -8.896134376525879
    7. '	tree' → logprob: -9.646134376525879
    8. '           ' → logprob: -9.896134376525879
    9. 'q' → logprob: -10.146134376525879
    10. '        
' → logprob: -11.271134376525879

Token 180: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -2.3080716346157715e-05
    2. 'q' → logprob: -11.625022888183594
    3. 'queue' → logprob: -11.750022888183594
    4. '   ' → logprob: -12.875022888183594
    5. ' tree' → logprob: -13.375022888183594
    6. '       ' → logprob: -13.875022888183594
    7. '	tree' → logprob: -14.625022888183594
    8. '
' → logprob: -15.750022888183594
    9. '```' → logprob: -16.250022888183594
    10. '(tree' → logprob: -16.500022888183594

Token 181: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.375
    3. '[v' → logprob: -18.25
    4. 'u' → logprob: -19.375
    5. ' [' → logprob: -21.375
    6. '	u' → logprob: -21.625
    7. '[user' → logprob: -21.75
    8. '```' → logprob: -21.875
    9. '[a' → logprob: -22.0
    10. '[i' → logprob: -22.375

Token 182: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.7954958821064793e-05
    2. '.add' → logprob: -11.375018119812012
    3. ']' → logprob: -12.250018119812012
    4. '.' → logprob: -14.125018119812012
    5. ').' → logprob: -15.250018119812012
    6. '   ' → logprob: -15.750018119812012
    7. '}.' → logprob: -16.000017166137695
    8. ' ].' → logprob: -16.125017166137695
    9. '.append' → logprob: -16.625017166137695
    10. '[' → logprob: -18.000017166137695

Token 183: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -5.512236498361744e-07
    2. '.add' → logprob: -15.125000953674316
    3. 'append' → logprob: -16.25
    4. ' add' → logprob: -16.5
    5. '	add' → logprob: -19.5
    6. '_add' → logprob: -20.25
    7. '(add' → logprob: -21.125
    8. ')add' → logprob: -21.125
    9. 'adde' → logprob: -22.0
    10. 'Add' → logprob: -23.375

Token 184: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.000017166137695
    3. ' (' → logprob: -18.000017166137695
    4. 'v' → logprob: -18.625017166137695
    5. '((' → logprob: -19.000017166137695
    6. '(
' → logprob: -19.875017166137695
    7. '(V' → logprob: -22.000017166137695
    8. '	v' → logprob: -22.250017166137695
    9. '()' → logprob: -22.375017166137695
    10. '(u' → logprob: -22.500017166137695

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07921726256608963
    2. ')
' → logprob: -2.5792171955108643
    3. '       ' → logprob: -8.079216957092285
    4. ')
' → logprob: -11.329216957092285
    5. ' )' → logprob: -13.204216957092285
    6. ')v' → logprob: -14.204216957092285
    7. ' )
' → logprob: -14.204216957092285
    8. '<|end|>' → logprob: -14.579216957092285
    9. '),' → logprob: -14.829216957092285
    10. '   ' → logprob: -15.079216957092285

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00376005913130939
    2. 'q' → logprob: -5.628759860992432
    3. ' q' → logprob: -9.12876033782959
    4. '	q' → logprob: -11.00376033782959
    5. '	' → logprob: -11.75376033782959
    6. '        
' → logprob: -12.00376033782959
    7. '
' → logprob: -12.00376033782959
    8. '   ' → logprob: -12.62876033782959
    9. ',q' → logprob: -12.62876033782959
    10. ',' → logprob: -13.00376033782959

Token 187: ' tree' (ID: 8165)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.05511651560664177
    2. 'tree' (adapté à ' tree') → logprob: -2.9301164150238037
    3. '       ' → logprob: -9.305116653442383
    4. '   ' → logprob: -9.680116653442383
    5. 'queue' → logprob: -10.555116653442383
    6. ' q' → logprob: -10.555116653442383
    7. ' tree' → logprob: -11.555116653442383
    8. '	q' → logprob: -12.805116653442383
    9. 'v' → logprob: -12.930116653442383
    10. '           ' → logprob: -13.305116653442383

Token 188: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.27099974633893e-05
    2. '[u' → logprob: -11.375012397766113
    3. 'v' → logprob: -14.000012397766113
    4. '[' → logprob: -14.875012397766113
    5. '```' → logprob: -17.87501335144043
    6. '[t' → logprob: -18.75001335144043
    7. '<v' → logprob: -18.87501335144043
    8. '(v' → logprob: -18.87501335144043
    9. ' [' → logprob: -19.00001335144043
    10. '[val' → logprob: -19.37501335144043

Token 189: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00032354547875002027
    2. ').' → logprob: -8.625323295593262
    3. '[u' → logprob: -9.500323295593262
    4. '}.' → logprob: -10.375323295593262
    5. '.' → logprob: -10.750323295593262
    6. ']' → logprob: -11.375323295593262
    7. '[' → logprob: -13.000323295593262
    8. '   ' → logprob: -13.750323295593262
    9. ' ].' → logprob: -14.250323295593262
    10. 'u' → logprob: -14.875323295593262

Token 190: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -6.704273118884885e-07
    2. '.add' → logprob: -15.000000953674316
    3. ' add' → logprob: -15.625000953674316
    4. 'u' → logprob: -16.25
    5. 'set' → logprob: -18.0
    6. '	add' → logprob: -18.375
    7. '(add' → logprob: -18.75
    8. '1' → logprob: -18.875
    9. ')add' → logprob: -19.0
    10. ' ' → logprob: -19.25

Token 191: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -8.77627644513268e-06
    2. '(' → logprob: -12.125008583068848
    3. 'u' → logprob: -12.625008583068848
    4. '(
' → logprob: -17.500009536743164
    5. '[u' → logprob: -18.000009536743164
    6. ' (' → logprob: -19.375009536743164
    7. '()' → logprob: -19.750009536743164
    8. '	u' → logprob: -19.875009536743164
    9. '((' → logprob: -20.000009536743164
    10. '(v' → logprob: -20.125009536743164

Token 192: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00767122209072113
    2. ')
' → logprob: -4.882671356201172
    3. '       ' → logprob: -10.257671356201172
    4. '<|end|>' → logprob: -10.757671356201172
    5. ')
' → logprob: -12.882671356201172
    6. ' )' → logprob: -13.382671356201172
    7. ')n' → logprob: -14.132671356201172
    8. '```' → logprob: -14.757671356201172
    9. '   ' → logprob: -14.882671356201172
    10. ')return' → logprob: -15.007671356201172

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008697715820744634
    2. 'q' → logprob: -7.1258697509765625
    3. ',' → logprob: -10.875869750976562
    4. '   ' → logprob: -11.500869750976562
    5. ',q' → logprob: -11.500869750976562
    6. ' q' → logprob: -11.750869750976562
    7. '```' → logprob: -12.250869750976562
    8. '
' → logprob: -12.750869750976562
    9. '	q' → logprob: -13.000869750976562
    10. '<|end|>' → logprob: -13.125869750976562

Token 194: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -2.2127087504486553e-05
    2. ' q' → logprob: -10.875021934509277
    3. '       ' → logprob: -12.875021934509277
    4. '
' → logprob: -15.000021934509277
    5. '   ' → logprob: -15.875021934509277
    6. '	q' → logprob: -17.000022888183594
    7. '           ' → logprob: -17.125022888183594
    8. '```' → logprob: -18.250022888183594
    9. '        
' → logprob: -18.750022888183594
    10. '[q' → logprob: -18.875022888183594

Token 195: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.084206375409849e-05
    2. '.' → logprob: -10.375041007995605
    3. '.extend' → logprob: -12.250041007995605
    4. '.put' → logprob: -13.125041007995605
    5. '.enqueue' → logprob: -13.625041007995605
    6. '.p' → logprob: -14.250041007995605
    7. '.push' → logprob: -14.625041007995605
    8. ' .' → logprob: -16.00004005432129
    9. 'append' → logprob: -16.25004005432129
    10. '().' → logprob: -16.62504005432129

Token 196: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00010950337309623137
    2. '(' → logprob: -9.125109672546387
    3. '((' → logprob: -15.250109672546387
    4. '(
' → logprob: -15.875109672546387
    5. ' (' → logprob: -16.37510871887207
    6. 'v' → logprob: -18.25010871887207
    7. '()' → logprob: -18.37510871887207
    8. '(V' → logprob: -18.50010871887207
    9. '(value' → logprob: -18.87510871887207
    10. '(`' → logprob: -19.37510871887207

Token 197: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0802738870552275e-05
    2. ')
' → logprob: -11.50001049041748
    3. ' )' → logprob: -15.37501049041748
    4. '       ' → logprob: -16.125011444091797
    5. ')v' → logprob: -16.250011444091797
    6. '   ' → logprob: -16.375011444091797
    7. '))' → logprob: -17.000011444091797
    8. '`)' → logprob: -17.750011444091797
    9. ')`' → logprob: -17.750011444091797
    10. '）' → logprob: -18.500011444091797

Token 198: 'degree' (ID: 98659)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5736320614814758
    2. 'depth' → logprob: -1.448632001876831
    3. 'dist' → logprob: -2.823632001876831
    4. 'parent' → logprob: -3.323632001876831
    5. 'def' → logprob: -3.573632001876831
    6. 'path' → logprob: -4.57363224029541
    7. 'answer' → logprob: -4.69863224029541
    8. 'color' → logprob: -4.82363224029541
    9. 'par' → logprob: -4.94863224029541
    10. 'stack' → logprob: -5.07363224029541

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020605772733688354
    2. '=' → logprob: -3.8956058025360107
    3. '[' → logprob: -11.14560604095459
    4. 's' → logprob: -11.14560604095459
    5. '_' → logprob: -11.27060604095459
    6. ')' → logprob: -12.14560604095459
    7. '=[' → logprob: -12.27060604095459
    8. '[]' → logprob: -12.89560604095459
    9. ' =[' → logprob: -12.89560604095459
    10. '(' → logprob: -13.14560604095459

Token 200: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5805838704109192
    2. '[len' → logprob: -0.8305838704109192
    3. ' [' → logprob: -6.0805840492248535
    4. '[n' → logprob: -6.8305840492248535
    5. '[u' → logprob: -6.9555840492248535
    6. '[node' → logprob: -8.705583572387695
    7. '[min' → logprob: -10.455583572387695
    8. '[v' → logprob: -10.705583572387695
    9. '[length' → logprob: -11.080583572387695
    10. '[count' → logprob: -11.330583572387695

Token 201: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4742056131362915
    2. '0' → logprob: -0.9742056131362915
    3. ' len' → logprob: -9.09920597076416
    4. '(len' → logprob: -11.09920597076416
    5. ' ' → logprob: -13.84920597076416
    6. '	len' → logprob: -15.84920597076416
    7. '[len' → logprob: -15.97420597076416
    8. '(' → logprob: -15.97420597076416
    9. 'False' → logprob: -16.724205017089844
    10. 'deg' → logprob: -17.349205017089844

Token 202: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7439060211181641
    2. 'for' → logprob: -0.9939060211181641
    3. ' for' → logprob: -1.868906021118164
    4. '(n' → logprob: -9.118906021118164
    5. ']*(' → logprob: -9.368906021118164
    6. '+' → logprob: -10.243906021118164
    7. '[' → logprob: -10.868906021118164
    8. '   ' → logprob: -11.118906021118164
    9. '(' → logprob: -11.118906021118164
    10. ']+' → logprob: -11.493906021118164

Token 203: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6662682890892029
    2. 'for' → logprob: -0.7912682890892029
    3. ' for' → logprob: -3.7912683486938477
    4. '+' → logprob: -5.541268348693848
    5. ' *' → logprob: -5.541268348693848
    6. '*(' → logprob: -6.291268348693848
    7. '(n' → logprob: -7.916268348693848
    8. ']' → logprob: -8.166268348693848
    9. ')' → logprob: -9.541268348693848
    10. '   ' → logprob: -10.541268348693848

Token 204: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.584239938296378e-06
    2. ' (' → logprob: -12.250007629394531
    3. '(len' → logprob: -13.250007629394531
    4. '(' → logprob: -14.000007629394531
    5. '((' → logprob: -16.37500762939453
    6. '(N' → logprob: -18.12500762939453
    7. 'n' → logprob: -18.12500762939453
    8. '   ' → logprob: -19.25000762939453
    9. '(
' → logprob: -19.62500762939453
    10. '(num' → logprob: -19.62500762939453

Token 205: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016113899648189545
    2. '(n' → logprob: -4.141113758087158
    3. ' n' → logprob: -9.516114234924316
    4. ' (' → logprob: -12.641114234924316
    5. 'len' → logprob: -14.016114234924316
    6. '   ' → logprob: -14.016114234924316
    7. '(' → logprob: -14.266114234924316
    8. '	n' → logprob: -15.516114234924316
    9. '(len' → logprob: -15.891114234924316
    10. '
' → logprob: -16.26611328125

Token 206: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010337610729038715
    2. ' +' → logprob: -6.876033782958984
    3. '+
' → logprob: -14.001033782958984
    4. '＋' → logprob: -15.876033782958984
    5. '1' → logprob: -17.626033782958984
    6. '```' → logprob: -17.751033782958984
    7. '
' → logprob: -18.501033782958984
    8. '[' → logprob: -18.501033782958984
    9. ')' → logprob: -18.751033782958984
    10. ' +
' → logprob: -18.876033782958984

Token 207: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.125016212463379
    3. '(' → logprob: -14.750016212463379
    4. '   ' → logprob: -15.375016212463379
    5. '(n' → logprob: -15.500016212463379
    6. '2' → logprob: -17.500015258789062
    7. '
' → logprob: -17.625015258789062
    8. '```' → logprob: -18.000015258789062
    9. '(m' → logprob: -18.375015258789062
    10. '  ' → logprob: -18.500015258789062

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.75000286102295
    3. '(' → logprob: -13.87500286102295
    4. '(n' → logprob: -14.37500286102295
    5. '2' → logprob: -17.250001907348633
    6. 'n' → logprob: -17.250001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '(m' → logprob: -18.375001907348633
    9. '+' → logprob: -19.125001907348633
    10. '3' → logprob: -19.250001907348633

Token 209: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.062079161405563354
    2. ')' → logprob: -2.8120791912078857
    3. ')
' → logprob: -9.187079429626465
    4. ')

' → logprob: -11.812079429626465
    5. ' )
' → logprob: -13.562079429626465
    6. '
' → logprob: -14.812079429626465
    7. ')`
' → logprob: -17.06207847595215
    8. ' )' → logprob: -17.18707847595215
    9. ')

' → logprob: -17.81207847595215
    10. '```' → logprob: -18.43707847595215

Token 210: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014358828775584698
    2. 'stack' → logprob: -9.000144004821777
    3. 'def' → logprob: -12.000144004821777
    4. ' for' → logprob: -12.500144004821777
    5. 'queue' → logprob: -12.875144004821777
    6. 'parent' → logprob: -13.750144004821777
    7. 'leaf' → logprob: -13.750144004821777
    8. 'answer' → logprob: -14.000144004821777
    9. 'from' → logprob: -14.000144004821777
    10. 'ans' → logprob: -14.375144004821777

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5762326717376709
    2. ' =' → logprob: -0.8262326717376709
    3. '[' → logprob: -8.32623291015625
    4. ',' → logprob: -11.20123291015625
    5. '_' → logprob: -11.57623291015625
    6. ' ' → logprob: -11.82623291015625
    7. '=[' → logprob: -12.20123291015625
    8. ' =[' → logprob: -12.57623291015625
    9. '=[]' → logprob: -13.07623291015625
    10. '[:]' → logprob: -13.57623291015625

Token 212: ' []

' (ID: 32833)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.915059506893158
    2. '0' → logprob: -1.0400595664978027
    3. '[]' → logprob: -1.4150595664978027
    4. '[n' → logprob: -6.790059566497803
    5. '[]
' → logprob: -7.540059566497803
    6. '[-' → logprob: -7.915059566497803
    7. '{}' → logprob: -8.665059089660645
    8. '[m' → logprob: -8.665059089660645
    9. 'set' → logprob: -9.040059089660645
    10. '[int' → logprob: -9.165059089660645

Token 213: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005574395763687789
    2. 'for' → logprob: -7.5005574226379395
    3. 'stack' → logprob: -12.500557899475098
    4. ' def' → logprob: -14.125557899475098
    5. ' for' → logprob: -17.12555694580078
    6. 'dfs' → logprob: -17.75055694580078
    7. 'q' → logprob: -18.25055694580078
    8. '```' → logprob: -18.50055694580078
    9. 'visited' → logprob: -19.25055694580078
    10. '   ' → logprob: -19.50055694580078

Token 214: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.16834904253482819
    2. 'i' → logprob: -1.918349027633667
    3. 'v' → logprob: -5.043349266052246
    4. 'node' → logprob: -7.043349266052246
    5. ' u' → logprob: -7.543349266052246
    6. 'x' → logprob: -9.168349266052246
    7. ' i' → logprob: -9.293349266052246
    8. ' node' → logprob: -12.043349266052246
    9. ' v' → logprob: -12.043349266052246
    10. 'cur' → logprob: -12.168349266052246

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.074278824031353
    2. 'in' → logprob: -2.8242788314819336
    3. ' in' → logprob: -4.449278831481934
    4. ',b' → logprob: -8.824278831481934
    5. ' ,' → logprob: -9.074278831481934
    6. ',_' → logprob: -9.449278831481934
    7. 'b' → logprob: -10.074278831481934
    8. 'a' → logprob: -10.199278831481934
    9. 's' → logprob: -10.949278831481934
    10. '[' → logprob: -11.199278831481934

Token 216: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001170225441455841
    2. ' b' → logprob: -6.7511701583862305
    3. ',b' → logprob: -18.126171112060547
    4. '	b' → logprob: -18.251171112060547
    5. '_b' → logprob: -18.751171112060547
    6. ' ' → logprob: -20.001171112060547
    7. 'a' → logprob: -20.876171112060547
    8. '```' → logprob: -21.001171112060547
    9. ',' → logprob: -21.126171112060547
    10. '(b' → logprob: -21.251171112060547

Token 217: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22553163766860962
    2. ' in' → logprob: -1.6005315780639648
    3. ',' → logprob: -9.225531578063965
    4. ' ' → logprob: -11.475531578063965
    5. '	in' → logprob: -12.975531578063965
    6. '   ' → logprob: -13.225531578063965
    7. '[' → logprob: -13.850531578063965
    8. '  ' → logprob: -14.475531578063965
    9. ')' → logprob: -14.475531578063965
    10. ' ,' → logprob: -14.663031578063965

Token 218: ' AB' (ID: 16520)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.00020401719666551799
    2. ' AB' → logprob: -8.500204086303711
    3. '_AB' → logprob: -16.00020408630371
    4. 'tree' → logprob: -16.37520408630371
    5. '   ' → logprob: -16.62520408630371
    6. ' ' → logprob: -16.62520408630371
    7. 'ab' → logprob: -16.87520408630371
    8. '[' → logprob: -17.50020408630371
    9. 'rep' → logprob: -17.87520408630371
    10. '  ' → logprob: -18.12520408630371

Token 219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038048259913921356
    2. ':
' → logprob: -3.288048267364502
    3. ',' → logprob: -13.038047790527344
    4. ':

' → logprob: -13.413047790527344
    5. '   ' → logprob: -14.038047790527344
    6. '[' → logprob: -14.413047790527344
    7. '):
' → logprob: -14.788047790527344
    8. '):' → logprob: -14.913047790527344
    9. ':
' → logprob: -15.038047790527344
    10. ' :' → logprob: -15.413047790527344

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6944835782051086
    2. 'degree' → logprob: -0.6944835782051086
    3. 'if' → logprob: -7.319483757019043
    4. ' degree' → logprob: -7.444483757019043
    5. '       ' → logprob: -10.069483757019043
    6. ' if' → logprob: -11.194483757019043
    7. '```' → logprob: -11.944483757019043
    8. '    
' → logprob: -12.569483757019043
    9. '.degree' → logprob: -12.569483757019043
    10. '_degree' → logprob: -12.944483757019043

Token 221: ' if' (ID: 538)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.018444545567035675
    2. 'if' (adapté à ' if') → logprob: -4.018444538116455
    3. '   ' → logprob: -8.268445014953613
    4. 'ans' → logprob: -11.018445014953613
    5. ' degree' → logprob: -11.518445014953613
    6. 'answer' → logprob: -13.018445014953613
    7. 'deg' → logprob: -13.643445014953613
    8. 'print' → logprob: -14.143445014953613
    9. '```' → logprob: -14.518445014953613
    10. 'for' → logprob: -14.518445014953613

Token 222: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31746500730514526
    2. 'a' → logprob: -1.94246506690979
    3. ' b' → logprob: -2.31746506690979
    4. ' a' → logprob: -4.317464828491211
    5. '(a' → logprob: -4.692464828491211
    6. '(b' → logprob: -5.692464828491211
    7. ' (' → logprob: -6.817464828491211
    8. 'degree' → logprob: -6.942464828491211
    9. 'len' → logprob: -7.692464828491211
    10. 'not' → logprob: -7.942464828491211

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4564971327781677
    2. 'in' → logprob: -1.2064971923828125
    3. ' not' → logprob: -2.8314971923828125
    4. 'not' → logprob: -4.9564971923828125
    5. ' <' → logprob: -7.8314971923828125
    6. ' ' → logprob: -7.8314971923828125
    7. '>' → logprob: -8.456497192382812
    8. '<' → logprob: -9.581497192382812
    9. ' >' → logprob: -9.831497192382812
    10. '   ' → logprob: -10.331497192382812

Token 224: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0001825642102630809
    2. ' tree' → logprob: -8.625182151794434
    3. '   ' → logprob: -13.375182151794434
    4. '	tree' → logprob: -14.125182151794434
    5. 'rep' → logprob: -15.875182151794434
    6. ' ' → logprob: -16.00018310546875
    7. '(tree' → logprob: -16.50018310546875
    8. 'tre' → logprob: -16.62518310546875
    9. 'table' → logprob: -17.25018310546875
    10. '  ' → logprob: -17.25018310546875

Token 225: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.2113979209971149e-05
    2. 'a' → logprob: -11.375012397766113
    3. '[b' → logprob: -15.500012397766113
    4. '[' → logprob: -16.000011444091797
    5. '   ' → logprob: -16.375011444091797
    6. '[u' → logprob: -17.125011444091797
    7. ' [' → logprob: -17.750011444091797
    8. ' a' → logprob: -18.000011444091797
    9. '<a' → logprob: -18.125011444091797
    10. '[
' → logprob: -18.625011444091797

Token 226: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.36112481355667114
    2. ']:
' → logprob: -1.4861247539520264
    3. ']' → logprob: -2.9861247539520264
    4. '   ' → logprob: -4.3611249923706055
    5. '):
' → logprob: -5.7361249923706055
    6. '):' → logprob: -5.8611249923706055
    7. ' ]' → logprob: -6.3611249923706055
    8. '[' → logprob: -6.9861249923706055
    9. '[a' → logprob: -6.9861249923706055
    10. ':' → logprob: -7.1111249923706055

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02867412380874157
    2. '   ' → logprob: -3.7786741256713867
    3. 'degree' → logprob: -5.278674125671387
    4. ' degree' → logprob: -9.028674125671387
    5. ':
' → logprob: -9.153674125671387
    6. ':' → logprob: -10.653674125671387
    7. '
' → logprob: -10.778674125671387
    8. '```' → logprob: -11.403674125671387
    9. '           ' → logprob: -11.903674125671387
    10. '):
' → logprob: -12.528674125671387

Token 228: ' continue' (ID: 4901)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.02557476982474327
    2. '   ' → logprob: -4.400574684143066
    3. '       ' → logprob: -4.400574684143066
    4. 'ans' → logprob: -7.775574684143066
    5. '           ' → logprob: -8.900574684143066
    6. ' degree' → logprob: -9.275574684143066
    7. 'answer' → logprob: -10.400574684143066
    8. 'continue' (adapté à ' continue') → logprob: -12.525574684143066
    9. '```' → logprob: -12.650574684143066
    10. 'if' → logprob: -13.025574684143066

Token 229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008806372061371803
    2. 'degree' → logprob: -4.883806228637695
    3. 'ans' → logprob: -7.508806228637695
    4. '
' → logprob: -8.008806228637695
    5. '    
' → logprob: -8.633806228637695
    6. 'if' → logprob: -10.633806228637695
    7. 'answer' → logprob: -10.883806228637695
    8. '       ' → logprob: -11.008806228637695
    9. ' degree' → logprob: -11.258806228637695
    10. 'else' → logprob: -11.258806228637695

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003532367292791605
    2. 'degree' → logprob: -5.878532409667969
    3. '
' → logprob: -7.753532409667969
    4. '    
' → logprob: -8.628532409667969
    5. ' degree' → logprob: -10.128532409667969
    6. 'ans' → logprob: -10.503532409667969
    7. '       ' → logprob: -11.753532409667969
    8. '        
' → logprob: -12.128532409667969
    9. '```' → logprob: -12.253532409667969
    10. 'answer' → logprob: -12.503532409667969

Token 231: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.6496016979217529
    2. 'degree' → logprob: -0.7746016979217529
    3. '   ' → logprob: -4.399601936340332
    4. 'if' → logprob: -6.274601936340332
    5. 'answer' → logprob: -7.399601936340332
    6. 'print' → logprob: -7.774601936340332
    7. 'for' → logprob: -8.149601936340332
    8. 'deg' → logprob: -8.774601936340332
    9. ' degree' → logprob: -8.899601936340332
    10. ' ans' → logprob: -8.899601936340332

Token 232: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.043231088668107986
    2. '.' → logprob: -3.1682310104370117
    3. ' .' → logprob: -9.168231010437012
    4. '.extend' → logprob: -9.293231010437012
    5. '.add' → logprob: -11.293231010437012
    6. '.push' → logprob: -12.043231010437012
    7. '.app' → logprob: -12.793231010437012
    8. '.ap' → logprob: -12.793231010437012
    9. ' +=' → logprob: -13.293231010437012
    10. '.=' → logprob: -13.418231010437012

Token 233: '('{}' (ID: 179645)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0008247529622167349
    2. '(' → logprob: -8.000824928283691
    3. '(a' → logprob: -8.500824928283691
    4. '(b' → logprob: -8.625824928283691
    5. '([' → logprob: -9.625824928283691
    6. '(f' → logprob: -10.375824928283691
    7. '(((' → logprob: -12.750824928283691
    8. '(('' → logprob: -14.125824928283691
    9. '(ab' → logprob: -14.250824928283691
    10. '('' → logprob: -14.375824928283691

Token 234: ' {}'.' (ID: 62777)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.038838066160678864
    2. 'a' → logprob: -3.5388381481170654
    3. '(' → logprob: -5.538837909698486
    4. ' a' → logprob: -5.913837909698486
    5. ' (' → logprob: -7.163837909698486
    6. '{}' → logprob: -7.413837909698486
    7. '({' → logprob: -7.913837909698486
    8. '('{}' → logprob: -8.538838386535645
    9. '')' → logprob: -9.288838386535645
    10. '{' → logprob: -9.663838386535645

Token 235: 'format' (ID: 4078)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4331693947315216
    2. 'a' → logprob: -1.0581693649291992
    3. 'ab' → logprob: -6.558169364929199
    4. 'b' → logprob: -6.558169364929199
    5. '(b' → logprob: -6.808169364929199
    6. '(str' → logprob: -8.0581693649292
    7. '(ab' → logprob: -9.4331693649292
    8. 'str' → logprob: -10.1831693649292
    9. ' (' → logprob: -10.6831693649292
    10. ')' → logprob: -11.4331693649292

Token 236: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008665982633829117
    2. 'b' → logprob: -4.758666038513184
    3. ' a' → logprob: -10.008666038513184
    4. '   ' → logprob: -12.883666038513184
    5. ' b' → logprob: -12.883666038513184
    6. '(a' → logprob: -13.633666038513184
    7. '(b' → logprob: -16.758665084838867
    8. ',a' → logprob: -17.383665084838867
    9. '	a' → logprob: -17.508665084838867
    10. ')a' → logprob: -17.883665084838867

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039388787001371384
    2. ',b' → logprob: -3.28938889503479
    3. ' ,' → logprob: -6.664388656616211
    4. ' b' → logprob: -10.039388656616211
    5. ',a' → logprob: -11.164388656616211
    6. 'b' → logprob: -11.664388656616211
    7. ',
' → logprob: -13.664388656616211
    8. ')' → logprob: -14.289388656616211
    9. ','' → logprob: -14.414388656616211
    10. ''' → logprob: -14.664388656616211

Token 238: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0067154900170862675
    2. ' b' → logprob: -5.006715297698975
    3. '   ' → logprob: -17.256715774536133
    4. ')b' → logprob: -17.256715774536133
    5. ' ' → logprob: -17.381715774536133
    6. 'a' → logprob: -17.631715774536133
    7. '    ' → logprob: -17.881715774536133
    8. ')' → logprob: -17.881715774536133
    9. '	b' → logprob: -18.256715774536133
    10. ''b' → logprob: -18.256715774536133

Token 239: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5767018795013428
    2. '))' → logprob: -0.8267018795013428
    3. '))
' → logprob: -7.826702117919922
    4. ')
' → logprob: -7.951702117919922
    5. ')}' → logprob: -13.076702117919922
    6. ''))' → logprob: -13.451702117919922
    7. '   ' → logprob: -13.576702117919922
    8. ')))' → logprob: -13.701702117919922
    9. ')\' → logprob: -14.076702117919922
    10. ' )' → logprob: -14.326702117919922

Token 240: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5954025387763977
    2. 'for' → logprob: -1.220402479171753
    3. '
' → logprob: -1.970402479171753
    4. '<|end|>' → logprob: -5.095402717590332
    5. '\n' → logprob: -5.595402717590332
    6. ' for' → logprob: -6.345402717590332
    7. 'degree' → logprob: -7.845402717590332
    8. 'if' → logprob: -7.970402717590332
    9. '  
' → logprob: -8.095402717590332
    10. ')' → logprob: -8.095402717590332

Token 241: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' (adapté à ' degree') → logprob: -0.001697557047009468
    2. 'for' → logprob: -6.751697540283203
    3. '   ' → logprob: -8.126697540283203
    4. 'print' → logprob: -9.126697540283203
    5. 'if' → logprob: -9.376697540283203
    6. ' degree' → logprob: -11.376697540283203
    7. 'ans' → logprob: -12.001697540283203
    8. 'answer' → logprob: -13.126697540283203
    9. 'visited' → logprob: -13.126697540283203
    10. '       ' → logprob: -13.126697540283203

Token 242: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -9.686778503237292e-05
    2. '[b' → logprob: -9.875097274780273
    3. 'a' → logprob: -10.500097274780273
    4. '[u' → logprob: -11.625097274780273
    5. '[' → logprob: -12.000097274780273
    6. '[v' → logprob: -13.000097274780273
    7. '```' → logprob: -16.000097274780273
    8. '[d' → logprob: -16.375097274780273
    9. '[o' → logprob: -17.125097274780273
    10. '\[' → logprob: -17.250097274780273

Token 243: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.43091100454330444
    2. '+' → logprob: -1.5559110641479492
    3. ' +=' → logprob: -3.180911064147949
    4. ']' → logprob: -3.305911064147949
    5. ']+=' → logprob: -3.680911064147949
    6. ')' → logprob: -3.930911064147949
    7. '[' → logprob: -4.180911064147949
    8. '   ' → logprob: -8.05591106414795
    9. ')+' → logprob: -8.93091106414795
    10. ']+' → logprob: -9.30591106414795

Token 244: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008883053436875343
    2. '[' → logprob: -5.008882999420166
    3. ' +=' → logprob: -6.508882999420166
    4. '+' → logprob: -7.508882999420166
    5. ']+=' → logprob: -9.133883476257324
    6. '-=' → logprob: -12.258883476257324
    7. '+='' → logprob: -12.633883476257324
    8. '=' → logprob: -12.758883476257324
    9. '   ' → logprob: -13.133883476257324
    10. '[i' → logprob: -13.633883476257324

Token 245: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '2' → logprob: -18.2500057220459
    4. '   ' → logprob: -19.8125057220459
    5. '+' → logprob: -19.9375057220459
    6. '１' → logprob: -19.9375057220459
    7. '-' → logprob: -20.0000057220459
    8. '```' → logprob: -20.2500057220459
    9. '0' → logprob: -21.0000057220459
    10. '۱' → logprob: -21.0625057220459

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '2' → logprob: -16.125003814697266
    4. '-' → logprob: -17.250003814697266
    5. '```' → logprob: -18.625003814697266
    6. 'a' → logprob: -18.937503814697266
    7. '１' → logprob: -19.125003814697266
    8. '0' → logprob: -19.750003814697266
    9. '   ' → logprob: -19.875003814697266
    10. '+' → logprob: -20.000003814697266

Token 247: '

' (ID: 279)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.19460132718086243
    2. ' degree' → logprob: -1.94460129737854
    3. '   ' → logprob: -3.44460129737854
    4. ' ' → logprob: -7.444601535797119
    5. '<|end|>' → logprob: -7.944601535797119
    6. ' 
' → logprob: -8.444601058959961
    7. '  ' → logprob: -8.819601058959961
    8. ' ,' → logprob: -9.069601058959961
    9. ',' → logprob: -9.194601058959961
    10. ')' → logprob: -9.569601058959961

Token 248: 'def' (ID: 1314)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.023642346262931824
    2. '   ' → logprob: -4.273642539978027
    3. 'for' → logprob: -4.773642539978027
    4. ' for' → logprob: -7.648642539978027
    5. ' degree' → logprob: -7.898642539978027
    6. 'if' → logprob: -9.773642539978027
    7. ' ' → logprob: -11.023642539978027
    8. '```' → logprob: -11.023642539978027
    9. '.degree' → logprob: -12.023642539978027
    10. ' if' → logprob: -12.148642539978027

Token 249: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.0017569332849234343
    2. 'dfs' → logprob: -6.3767571449279785
    3. ' solve' → logprob: -10.37675666809082
    4. ' find' → logprob: -12.00175666809082
    5. ' check' → logprob: -12.12675666809082
    6. ' bfs' → logprob: -12.87675666809082
    7. ' e' → logprob: -13.00175666809082
    8. ' l' → logprob: -13.87675666809082
    9. ' count' → logprob: -14.00175666809082
    10. ' ' → logprob: -14.00175666809082

Token 250: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0007997421780601144
    2. '(' → logprob: -7.875799655914307
    3. '(node' → logprob: -8.375800132751465
    4. '(v' → logprob: -8.750800132751465
    5. ' (' → logprob: -11.375800132751465
    6. '(x' → logprob: -11.875800132751465
    7. '(a' → logprob: -12.500800132751465
    8. '(
' → logprob: -12.625800132751465
    9. '(s' → logprob: -13.250800132751465
    10. '(i' → logprob: -14.000800132751465

Token 251: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -3.130576806142926e-05
    2. ' ,' → logprob: -11.000031471252441
    3. ',u' → logprob: -11.375031471252441
    4. 'u' → logprob: -13.500031471252441
    5. ',v' → logprob: -14.125031471252441
    6. '   ' → logprob: -15.000031471252441
    7. '):' → logprob: -15.125031471252441
    8. ',k' → logprob: -16.625030517578125
    9. ',
' → logprob: -17.125030517578125
    10. ' u' → logprob: -17.250030517578125

Token 252: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009286141721531749
    2. ' ' → logprob: -7.0009284019470215
    3. '0' → logprob: -11.12592887878418
    4. ',' → logprob: -13.62592887878418
    5. ')' → logprob: -14.75092887878418
    6. '   ' → logprob: -15.25092887878418
    7. 'u' → logprob: -15.50092887878418
    8. '2' → logprob: -16.37592887878418
    9. '(' → logprob: -16.37592887878418
    10. ' u' → logprob: -16.87592887878418

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.967624019831419e-05
    2. ' ' → logprob: -9.750060081481934
    3. '0' → logprob: -14.375060081481934
    4. ')' → logprob: -15.500060081481934
    5. ',' → logprob: -15.875060081481934
    6. 'u' → logprob: -16.000059127807617
    7. '   ' → logprob: -16.125059127807617
    8. '
' → logprob: -17.125059127807617
    9. '  ' → logprob: -17.125059127807617
    10. '2' → logprob: -18.250059127807617

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055106814950704575
    2. '):' → logprob: -3.0551068782806396
    3. '):
' → logprob: -5.0551066398620605
    4. ',u' → logprob: -9.680107116699219
    5. ')' → logprob: -10.055107116699219
    6. ' ,' → logprob: -12.180107116699219
    7. '):
' → logprob: -12.805107116699219
    8. '   ' → logprob: -13.430107116699219
    9. ' ):' → logprob: -13.805107116699219
    10. 'u' → logprob: -13.805107116699219

Token 255: ' parent' (ID: 5980)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.014328032732009888
    2. ' p' → logprob: -4.2643280029296875
    3. 'parent' → logprob: -9.639328002929688
    4. ' parent' → logprob: -9.889328002929688
    5. 'par' → logprob: -10.514328002929688
    6. '-' → logprob: -11.389328002929688
    7. ' -' → logprob: -12.764328002929688
    8. ' par' → logprob: -13.264328002929688
    9. 'v' → logprob: -13.514328002929688
    10. ' ' → logprob: -13.889328002929688

Token 256: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3945882320404053
    2. '=' → logprob: -1.5195882320404053
    3. '):
' → logprob: -2.8945882320404053
    4. '):' → logprob: -3.6445882320404053
    5. '=-' → logprob: -4.019588470458984
    6. '=None' → logprob: -5.019588470458984
    7. ' =' → logprob: -7.644588470458984
    8. '   ' → logprob: -8.269588470458984
    9. ' ,' → logprob: -9.644588470458984
    10. ')' → logprob: -9.894588470458984

Token 257: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6948999166488647
    2. '0' → logprob: -0.6948999166488647
    3. ' -' → logprob: -6.944900035858154
    4. ' ' → logprob: -7.194900035858154
    5. 'None' → logprob: -10.319899559020996
    6. '   ' → logprob: -12.944899559020996
    7. ' None' → logprob: -14.069899559020996
    8. '1' → logprob: -14.444899559020996
    9. '  ' → logprob: -15.694899559020996
    10. '−' → logprob: -15.944899559020996

Token 258: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4741462171077728
    2. '):
' → logprob: -0.9741462469100952
    3. ')' → logprob: -10.349145889282227
    4. '):
' → logprob: -10.724145889282227
    5. ',' → logprob: -11.349145889282227
    6. '):

' → logprob: -13.224145889282227
    7. ':' → logprob: -14.349145889282227
    8. '   ' → logprob: -14.724145889282227
    9. ' ):' → logprob: -15.099145889282227
    10. ' ):
' → logprob: -15.599145889282227

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.608069121837616
    2. ' for' → logprob: -0.858069121837616
    3. 'for' → logprob: -3.7330691814422607
    4. ' total' → logprob: -5.733068943023682
    5. 'total' → logprob: -7.108068943023682
    6. 'degree' → logprob: -7.108068943023682
    7. ' degree' → logprob: -7.233068943023682
    8. ' s' → logprob: -7.358068943023682
    9. ' stack' → logprob: -8.60806941986084
    10. ' if' → logprob: -8.60806941986084

Token 260: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06234532222151756
    2. 'res' → logprob: -3.312345266342163
    3. ' for' → logprob: -5.312345504760742
    4. 'total' → logprob: -5.312345504760742
    5. '   ' → logprob: -5.562345504760742
    6. 'sum' → logprob: -6.062345504760742
    7. 'ret' → logprob: -6.562345504760742
    8. 'child' → logprob: -6.937345504760742
    9. 's' → logprob: -7.062345504760742
    10. 'odd' → logprob: -7.062345504760742

Token 261: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005243833642452955
    2. 'w' → logprob: -5.25524377822876
    3. 'child' → logprob: -12.630244255065918
    4. ' v' → logprob: -13.005244255065918
    5. 'nv' → logprob: -13.255244255065918
    6. 'c' → logprob: -13.255244255065918
    7. 'wv' → logprob: -15.755244255065918
    8. 'vw' → logprob: -15.880244255065918
    9. 'to' → logprob: -16.0052433013916
    10. 'x' → logprob: -16.0052433013916

Token 262: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10028818249702454
    2. 'in' → logprob: -2.350288152694702
    3. ' ' → logprob: -10.225288391113281
    4. '	in' → logprob: -10.725288391113281
    5. '   ' → logprob: -11.600288391113281
    6. '    ' → logprob: -11.600288391113281
    7. '  ' → logprob: -13.100288391113281
    8. ',' → logprob: -13.725288391113281
    9. ' в' → logprob: -15.537788391113281
    10. '
' → logprob: -15.787788391113281

Token 263: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.04876256734132767
    2. ' tree' → logprob: -3.048762559890747
    3. 'list' → logprob: -9.298762321472168
    4. ' list' → logprob: -9.798762321472168
    5. '(tree' → logprob: -11.548762321472168
    6. '	tree' → logprob: -12.048762321472168
    7. 'range' → logprob: -12.298762321472168
    8. 'tre' → logprob: -13.298762321472168
    9. ' range' → logprob: -13.423762321472168
    10. 'sorted' → logprob: -13.548762321472168

Token 264: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.8961017202818766e-05
    2. 'u' → logprob: -9.750059127807617
    3. '
' → logprob: -16.000059127807617
    4. '	u' → logprob: -16.375059127807617
    5. '   ' → logprob: -16.500059127807617
    6. '(u' → logprob: -16.875059127807617
    7. '```' → logprob: -17.375059127807617
    8. '

' → logprob: -17.500059127807617
    9. '[' → logprob: -17.750059127807617
    10. '[
' → logprob: -17.875059127807617

Token 265: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8563764691352844
    2. '):
' → logprob: -1.1063764095306396
    3. ':
' → logprob: -1.7313764095306396
    4. '):' → logprob: -3.3563764095306396
    5. ']:
' → logprob: -3.7313764095306396
    6. ']:' → logprob: -4.981376647949219
    7. ']' → logprob: -7.106376647949219
    8. '():
' → logprob: -8.106376647949219
    9. '   ' → logprob: -8.731376647949219
    10. ')' → logprob: -8.981376647949219

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5090463161468506
    2. 'if' → logprob: -1.5090463161468506
    3. ' if' → logprob: -2.0090463161468506
    4. '   ' → logprob: -3.1340463161468506
    5. ',' → logprob: -9.38404655456543
    6. '	if' → logprob: -11.38404655456543
    7. '```' → logprob: -11.63404655456543
    8. ':
' → logprob: -11.88404655456543
    9. '    ' → logprob: -12.13404655456543
    10. ':' → logprob: -12.25904655456543

Token 267: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014228497631847858
    2. ' if' → logprob: -4.514228343963623
    3. '       ' → logprob: -5.764228343963623
    4. '   ' → logprob: -10.264228820800781
    5. 'dfs' → logprob: -13.014228820800781
    6. '	if' → logprob: -15.389228820800781
    7. ' ' → logprob: -15.639228820800781
    8. '           ' → logprob: -16.38922882080078
    9. '    ' → logprob: -16.38922882080078
    10. '```' → logprob: -16.88922882080078

Token 268: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07956995069980621
    2. ' v' → logprob: -2.5795700550079346
    3. 'visited' → logprob: -7.7045698165893555
    4. ' not' → logprob: -9.079569816589355
    5. ' visited' → logprob: -9.329569816589355
    6. 'not' → logprob: -10.704569816589355
    7. ' ' → logprob: -13.579569816589355
    8. '	v' → logprob: -13.829569816589355
    9. '   ' → logprob: -14.204569816589355
    10. '    ' → logprob: -15.517069816589355

Token 269: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5760231018066406
    2. '==' → logprob: -0.8260231018066406
    3. ' !=' → logprob: -9.95102310180664
    4. '!=' → logprob: -10.32602310180664
    5. '=' → logprob: -13.45102310180664
    6. '==
' → logprob: -14.32602310180664
    7. ' ' → logprob: -15.45102310180664
    8. 'is' → logprob: -15.57602310180664
    9. 'v' → logprob: -15.70102310180664
    10. ']==' → logprob: -15.82602310180664

Token 270: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.006715370807796717
    2. ' parent' → logprob: -5.006715297698975
    3. '	parent' → logprob: -18.506715774536133
    4. '(parent' → logprob: -18.756715774536133
    5. ' ' → logprob: -18.881715774536133
    6. '   ' → logprob: -19.256715774536133
    7. ',parent' → logprob: -21.131715774536133
    8. 'paren' → logprob: -21.631715774536133
    9. '[parent' → logprob: -21.631715774536133
    10. 'p' → logprob: -21.756715774536133

Token 271: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8771311044692993
    2. '           ' → logprob: -1.0021311044692993
    3. ' or' → logprob: -2.3771309852600098
    4. ':' → logprob: -2.5021309852600098
    5. '       ' → logprob: -3.2521309852600098
    6. 'continue' → logprob: -6.25213098526001
    7. '   ' → logprob: -7.25213098526001
    8. ' continue' → logprob: -7.62713098526001
    9. '          ' → logprob: -9.502131462097168
    10. 'or' → logprob: -9.502131462097168

Token 272: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08212807774543762
    2. '       ' → logprob: -3.4571280479431152
    3. 'continue' → logprob: -3.8321280479431152
    4. ' continue' → logprob: -4.332128047943115
    5. ':
' → logprob: -4.832128047943115
    6. ':' → logprob: -5.582128047943115
    7. ',' → logprob: -8.457128524780273
    8. '   ' → logprob: -8.707128524780273
    9. ' or' → logprob: -8.957128524780273
    10. 'dfs' → logprob: -9.707128524780273

Token 273: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.1043352484703064
    2. ' continue' → logprob: -2.354335308074951
    3. '       ' → logprob: -5.979335308074951
    4. '           ' → logprob: -6.479335308074951
    5. '               ' → logprob: -10.979334831237793
    6. '   ' → logprob: -11.354334831237793
    7. '	continue' → logprob: -11.604334831237793
    8. 'contin' → logprob: -11.729334831237793
    9. 'return' → logprob: -12.729334831237793
    10. 'continu' → logprob: -13.729334831237793

Token 274: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03325868025422096
    2. ':' → logprob: -3.7832586765289307
    3. '   ' → logprob: -5.53325891494751
    4. ':
' → logprob: -5.78325891494751
    5. '<|end|>' → logprob: -6.90825891494751
    6. '
' → logprob: -7.40825891494751
    7. '        
' → logprob: -7.65825891494751
    8. '           ' → logprob: -9.158258438110352
    9. ',' → logprob: -9.283258438110352
    10. '  
' → logprob: -9.533258438110352

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2755213975906372
    2. '   ' → logprob: -2.0255212783813477
    3. '
' → logprob: -2.5255212783813477
    4. 'degree' → logprob: -4.275521278381348
    5. 'dfs' → logprob: -4.900521278381348
    6. ' degree' → logprob: -5.525521278381348
    7. ' dfs' → logprob: -6.400521278381348
    8. '        
' → logprob: -7.650521278381348
    9. '    
' → logprob: -8.275521278381348
    10. 'depth' → logprob: -8.400521278381348

Token 276: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.605806827545166
    2. 'degree' → logprob: -1.355806827545166
    3. '   ' → logprob: -2.980806827545166
    4. 'res' → logprob: -3.730806827545166
    5. 'deg' → logprob: -3.730806827545166
    6. 'd' → logprob: -3.980806827545166
    7. 'ret' → logprob: -4.105806827545166
    8. 'cnt' → logprob: -4.355806827545166
    9. 'child' → logprob: -4.730806827545166
    10. 'depth' → logprob: -5.355806827545166

Token 277: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -3.214019307051785e-05
    2. '(' → logprob: -10.375032424926758
    3. 'v' → logprob: -15.000032424926758
    4. ' (' → logprob: -15.125032424926758
    5. '(u' → logprob: -15.625032424926758
    6. '(
' → logprob: -16.500032424926758
    7. ',v' → logprob: -18.375032424926758
    8. '```' → logprob: -18.500032424926758
    9. '()' → logprob: -18.875032424926758
    10. '[v' → logprob: -19.000032424926758

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005374244065023959
    2. ',v' → logprob: -8.125537872314453
    3. ' ,' → logprob: -8.875537872314453
    4. 'v' → logprob: -9.375537872314453
    5. ',u' → logprob: -11.750537872314453
    6. 'u' → logprob: -12.250537872314453
    7. ')' → logprob: -13.250537872314453
    8. ' v' → logprob: -13.375537872314453
    9. '   ' → logprob: -14.625537872314453
    10. '	v' → logprob: -16.625537872314453

Token 279: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -6.64708495605737e-05
    2. ' u' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.500066757202148
    4. '	u' → logprob: -16.12506675720215
    5. '[u' → logprob: -18.25006675720215
    6. '       ' → logprob: -18.50006675720215
    7. '
' → logprob: -18.50006675720215
    8. ')' → logprob: -18.87506675720215
    9. '    ' → logprob: -19.62506675720215
    10. '<u' → logprob: -20.37506675720215

Token 280: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029841667041182518
    2. ')' → logprob: -3.529841661453247
    3. '       ' → logprob: -10.029841423034668
    4. '   ' → logprob: -11.029841423034668
    5. ' )
' → logprob: -11.029841423034668
    6. ')
' → logprob: -11.654841423034668
    7. ')

' → logprob: -12.154841423034668
    8. ' )' → logprob: -14.779841423034668
    9. ')v' → logprob: -15.279841423034668
    10. ')`
' → logprob: -17.654842376708984

Token 281: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36648058891296387
    2. '       ' → logprob: -1.2414805889129639
    3. 'degree' → logprob: -4.366480827331543
    4. 'if' → logprob: -6.366480827331543
    5. '
' → logprob: -6.991480827331543
    6. ' degree' → logprob: -7.116480827331543
    7. ' if' → logprob: -7.241480827331543
    8. '```' → logprob: -7.741480827331543
    9. 'for' → logprob: -8.491480827331543
    10. ' for' → logprob: -9.491480827331543

Token 282: ' if' (ID: 538)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.1369335949420929
    2. 'if' (adapté à ' if') → logprob: -2.1369335651397705
    3. '       ' → logprob: -4.63693380355835
    4. '   ' → logprob: -8.886933326721191
    5. ' degree' → logprob: -10.136933326721191
    6. 'deg' → logprob: -10.386933326721191
    7. ' if' → logprob: -11.136933326721191
    8. 'd' → logprob: -11.136933326721191
    9. '        
' → logprob: -11.636933326721191
    10. '           ' → logprob: -12.136933326721191

Token 283: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.009880982339382172
    2. '(de' → logprob: -5.009881019592285
    3. ' degree' → logprob: -5.759881019592285
    4. ' (' → logprob: -12.134881019592285
    5. '   ' → logprob: -13.634881019592285
    6. '(' → logprob: -14.384881019592285
    7. 'deg' → logprob: -15.009881019592285
    8. '(d' → logprob: -15.259881019592285
    9. ' ' → logprob: -15.634881019592285
    10. 'len' → logprob: -15.759881019592285

Token 284: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.008669407106935978
    2. '[u' → logprob: -4.758669376373291
    3. 'v' → logprob: -9.88366985321045
    4. '[' → logprob: -12.88366985321045
    5. ' [' → logprob: -14.00866985321045
    6. 'u' → logprob: -15.38366985321045
    7. '(v' → logprob: -16.258668899536133
    8. ' v' → logprob: -16.883668899536133
    9. '   ' → logprob: -18.133668899536133
    10. '	v' → logprob: -18.508668899536133

Token 285: ']' (ID: 60)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4317933917045593
    2. ')' → logprob: -1.306793451309204
    3. '%' → logprob: -2.556793451309204
    4. ']' → logprob: -7.056793212890625
    5. ')%' → logprob: -7.431793212890625
    6. ' )' → logprob: -7.806793212890625
    7. ' ' → logprob: -8.806793212890625
    8. ' ' → logprob: -9.306793212890625
    9. '}' → logprob: -9.431793212890625
    10. '>' → logprob: -9.806793212890625

Token 286: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.004100604448467493
    2. ' %' → logprob: -5.504100799560547
    3. '>' → logprob: -11.379100799560547
    4. '%
' → logprob: -12.379100799560547
    5. ' ' → logprob: -12.629100799560547
    6. '```' → logprob: -13.379100799560547
    7. '
' → logprob: -14.754100799560547
    8. ' ' → logprob: -14.879100799560547
    9. '1' → logprob: -15.629100799560547
    10. '&' → logprob: -15.629100799560547

Token 287: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004102623555809259
    2. ' ' → logprob: -5.50410270690918
    3. '```' → logprob: -11.12910270690918
    4. '==' → logprob: -12.50410270690918
    5. '   ' → logprob: -13.37910270690918
    6. '=' → logprob: -13.75410270690918
    7. '  ' → logprob: -14.12910270690918
    8. '(' → logprob: -14.37910270690918
    9. '[' → logprob: -15.25410270690918
    10. '>' → logprob: -15.50410270690918

Token 288: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -11.000021934509277
    3. '```' → logprob: -13.500021934509277
    4. '   ' → logprob: -14.625021934509277
    5. '202' → logprob: -14.625021934509277
    6. '222' → logprob: -15.312521934509277
    7. '200' → logprob: -15.312521934509277
    8. '22' → logprob: -15.375021934509277
    9. '26' → logprob: -15.687521934509277
    10. '  ' → logprob: -15.687521934509277

Token 289: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.042175427079200745
    2. ' ==' → logprob: -3.292175531387329
    3. '!=' → logprob: -5.66717529296875
    4. ' !=' → logprob: -7.41717529296875
    5. '1' → logprob: -10.91717529296875
    6. '()==' → logprob: -11.54217529296875
    7. ':' → logprob: -11.54217529296875
    8. ')==' → logprob: -11.91717529296875
    9. '==
' → logprob: -11.91717529296875
    10. '===' → logprob: -12.41717529296875

Token 290: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48016873002052307
    2. '1' → logprob: -0.9801687002182007
    3. ' ' → logprob: -5.10516881942749
    4. '```' → logprob: -12.480168342590332
    5. '   ' → logprob: -13.105168342590332
    6. '==' → logprob: -13.605168342590332
    7. '=' → logprob: -14.980168342590332
    8. '
' → logprob: -15.980168342590332
    9. ' ==' → logprob: -16.23016929626465
    10. '!=' → logprob: -16.48016929626465

Token 291: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1605336219072342
    2. '0' → logprob: -1.9105336666107178
    3. ' ' → logprob: -8.160533905029297
    4. '2' → logprob: -11.160533905029297
    5. '```' → logprob: -12.160533905029297
    6. '   ' → logprob: -13.848033905029297
    7. '01' → logprob: -14.348033905029297
    8. 'continue' → logprob: -15.660533905029297
    9. '<|end|>' → logprob: -16.035533905029297
    10. '!' → logprob: -16.160533905029297

Token 292: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1813354194164276
    2. ':
' → logprob: -2.05633544921875
    3. '           ' → logprob: -3.43133544921875
    4. '       ' → logprob: -5.43133544921875
    5. '   ' → logprob: -7.80633544921875
    6. '):
' → logprob: -8.18133544921875
    7. '):' → logprob: -8.55633544921875
    8. ')' → logprob: -9.18133544921875
    9. ' :' → logprob: -9.43133544921875
    10. '=' → logprob: -10.68133544921875

Token 293: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0297396183013916
    2. '       ' → logprob: -1.1547396183013916
    3. 'degree' → logprob: -1.1547396183013916
    4. '   ' → logprob: -4.7797393798828125
    5. ' degree' → logprob: -5.6547393798828125
    6. '```' → logprob: -7.6547393798828125
    7. '
' → logprob: -9.279739379882812
    8. '               ' → logprob: -10.529739379882812
    9. 'continue' → logprob: -11.029739379882812
    10. ' ' → logprob: -11.154739379882812

Token 294: ' ans' (ID: 3345)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.07106537371873856
    2. '           ' → logprob: -3.0710654258728027
    3. ' degree' → logprob: -4.321065425872803
    4. '       ' → logprob: -5.571065425872803
    5. '   ' → logprob: -5.571065425872803
    6. '               ' → logprob: -7.821065425872803
    7. 'ans' (adapté à ' ans') → logprob: -7.946065425872803
    8. '            
' → logprob: -9.071064949035645
    9. '
' → logprob: -9.446064949035645
    10. 'answer' → logprob: -9.696064949035645

Token 295: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017313449643552303
    2. '.' → logprob: -6.5017313957214355
    3. 'append' → logprob: -8.626730918884277
    4. '.pop' → logprob: -10.251730918884277
    5. '.remove' → logprob: -11.626730918884277
    6. ' .' → logprob: -12.751730918884277
    7. '.extend' → logprob: -14.251730918884277
    8. '].' → logprob: -15.251730918884277
    9. '   ' → logprob: -15.376730918884277
    10. '.app' → logprob: -15.501730918884277

Token 296: '('{}' (ID: 179645)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.38736826181411743
    2. ''' → logprob: -1.6373682022094727
    3. '('{}' → logprob: -2.3873682022094727
    4. '(f' → logprob: -3.3873682022094727
    5. 'f' → logprob: -7.012368202209473
    6. ''f' → logprob: -10.262368202209473
    7. '(' → logprob: -10.387368202209473
    8. '`' → logprob: -11.262368202209473
    9. '"' → logprob: -12.137368202209473
    10. '("{}' → logprob: -12.637368202209473

Token 297: ' {}'.' (ID: 62777)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.06177036091685295
    2. 'v' → logprob: -3.811770439147949
    3. ''' → logprob: -3.936770439147949
    4. '{}' → logprob: -4.561770439147949
    5. ' {}' → logprob: -5.436770439147949
    6. '(v' → logprob: -6.186770439147949
    7. ' u' → logprob: -7.686770439147949
    8. ' '' → logprob: -8.06177043914795
    9. ' {}'.' → logprob: -8.43677043914795
    10. 'u' → logprob: -9.18677043914795

Token 298: 'format' (ID: 4078)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.12801258265972137
    2. '(u' → logprob: -2.1280126571655273
    3. 'format' → logprob: -7.378012657165527
    4. '(format' → logprob: -8.878012657165527
    5. '.format' → logprob: -9.253012657165527
    6. ' (' → logprob: -9.378012657165527
    7. '(' → logprob: -9.753012657165527
    8. '(a' → logprob: -10.253012657165527
    9. ''(' → logprob: -10.628012657165527
    10. '(f' → logprob: -12.253012657165527

Token 299: '(u' (ID: 17057)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04543711617588997
    2. 'u' → logprob: -3.1704370975494385
    3. '(v' → logprob: -6.670437335968018
    4. ' v' → logprob: -7.045437335968018
    5. '(u' → logprob: -8.42043685913086
    6. ' u' → logprob: -9.67043685913086
    7. 'a' → logprob: -11.92043685913086
    8. '   ' → logprob: -12.92043685913086
    9. 'b' → logprob: -14.42043685913086
    10. ' (' → logprob: -14.42043685913086

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036799011286348104
    2. ',v' → logprob: -8.000368118286133
    3. ' ,' → logprob: -11.375368118286133
    4. 'v' → logprob: -11.375368118286133
    5. ' v' → logprob: -11.750368118286133
    6. '',' → logprob: -13.875368118286133
    7. ',b' → logprob: -14.500368118286133
    8. ',
' → logprob: -16.500368118286133
    9. 'b' → logprob: -16.875368118286133
    10. '   ' → logprob: -17.125368118286133

Token 301: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.003177952254191041
    2. ' v' → logprob: -5.753178119659424
    3. '    ' → logprob: -16.753177642822266
    4. '   ' → logprob: -17.003177642822266
    5. '	v' → logprob: -17.003177642822266
    6. '           ' → logprob: -18.253177642822266
    7. ' ' → logprob: -18.378177642822266
    8. '  ' → logprob: -18.503177642822266
    9. '       ' → logprob: -19.003177642822266
    10. '[v' → logprob: -19.628177642822266

Token 302: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4795147180557251
    2. '))
' → logprob: -0.9795147180557251
    3. ')' → logprob: -5.4795145988464355
    4. ')
' → logprob: -6.7295145988464355
    5. '       ' → logprob: -10.354515075683594
    6. '))
' → logprob: -11.729515075683594
    7. '   ' → logprob: -11.854515075683594
    8. '           ' → logprob: -12.479515075683594
    9. ''))' → logprob: -13.854515075683594
    10. ''))
' → logprob: -13.979515075683594

Token 303: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3243003189563751
    2. '           ' → logprob: -1.3243002891540527
    3. 'degree' → logprob: -4.699300289154053
    4. 'else' → logprob: -6.574300289154053
    5. '   ' → logprob: -7.949300289154053
    6. ' degree' → logprob: -9.324300765991211
    7. ' else' → logprob: -11.324300765991211
    8. '```' → logprob: -11.699300765991211
    9. '        
' → logprob: -13.199300765991211
    10. ',' → logprob: -13.324300765991211

Token 304: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' (adapté à ' degree') → logprob: -0.0004450892156455666
    2. '           ' → logprob: -8.000445365905762
    3. ' degree' → logprob: -9.500445365905762
    4. '       ' → logprob: -10.875445365905762
    5. '   ' → logprob: -11.125445365905762
    6. '               ' → logprob: -14.625445365905762
    7. '.degree' → logprob: -15.750445365905762
    8. ' ' → logprob: -16.375444412231445
    9. '
' → logprob: -16.375444412231445
    10. '_degree' → logprob: -17.000444412231445

Token 305: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.07889485359191895
    2. '[v' → logprob: -2.578894853591919
    3. '[' → logprob: -13.07889461517334
    4. '[a' → logprob: -13.82889461517334
    5. 'u' → logprob: -14.20389461517334
    6. 'v' → logprob: -14.45389461517334
    7. '```' → logprob: -15.45389461517334
    8. '[x' → logprob: -16.328895568847656
    9. '[w' → logprob: -16.828895568847656
    10. ' [' → logprob: -16.828895568847656

Token 306: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6221444010734558
    2. ']+=' → logprob: -1.2471444606781006
    3. ')' → logprob: -1.8721444606781006
    4. ']' → logprob: -4.1221442222595215
    5. ' +=' → logprob: -5.4971442222595215
    6. '[' → logprob: -6.6221442222595215
    7. ')+' → logprob: -8.62214469909668
    8. '[v' → logprob: -9.62214469909668
    9. '   ' → logprob: -10.12214469909668
    10. '+' → logprob: -10.49714469909668

Token 307: ' +=' (ID: 2757)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.04266204312443733
    2. '+=' → logprob: -3.5426621437072754
    3. '[u' → logprob: -4.417662143707275
    4. '[' → logprob: -7.667662143707275
    5. ' +=' → logprob: -8.292661666870117
    6. ']+=' → logprob: -11.042661666870117
    7. '[a' → logprob: -11.542661666870117
    8. '[i' → logprob: -12.167661666870117
    9. '[x' → logprob: -12.542661666870117
    10. '+' → logprob: -13.167661666870117

Token 308: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '2' → logprob: -15.500008583068848
    4. '   ' → logprob: -17.37500762939453
    5. '0' → logprob: -18.75000762939453
    6. '１' → logprob: -19.68750762939453
    7. '+' → logprob: -19.87500762939453
    8. '۱' → logprob: -20.12500762939453
    9. '```' → logprob: -20.31250762939453
    10. '-' → logprob: -20.50000762939453

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. '2' → logprob: -14.750000953674316
    4. '   ' → logprob: -19.375001907348633
    5. '１' → logprob: -20.000001907348633
    6. '۱' → logprob: -20.250001907348633
    7. '+' → logprob: -20.562501907348633
    8. '```' → logprob: -20.875001907348633
    9. '0' → logprob: -21.125001907348633
    10. '-' → logprob: -21.500001907348633

Token 310: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3769398331642151
    2. '<|end|>' → logprob: -2.0019397735595703
    3. 'if' → logprob: -2.6269397735595703
    4. '       ' → logprob: -2.7519397735595703
    5. ' if' → logprob: -3.2519397735595703
    6. ')' → logprob: -6.87693977355957
    7. '    ' → logprob: -7.50193977355957
    8. 'for' → logprob: -7.50193977355957
    9. ' ' → logprob: -7.62693977355957
    10. '  ' → logprob: -7.87693977355957

Token 311: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9960920810699463
    2. '<|end|>' → logprob: -1.2460920810699463
    3. ' if' → logprob: -1.4960920810699463
    4. '   ' → logprob: -2.7460920810699463
    5. '       ' → logprob: -2.9960920810699463
    6. ')' → logprob: -5.871091842651367
    7. '```' → logprob: -6.871091842651367
    8. '	if' → logprob: -8.746091842651367
    9. ' ' → logprob: -8.746091842651367
    10. '<|end|>' → logprob: -8.871091842651367

Token 312: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1417081654071808
    2. '   ' → logprob: -2.5167081356048584
    3. ' else' → logprob: -3.2667081356048584
    4. 'if' → logprob: -4.8917083740234375
    5. '       ' → logprob: -5.3917083740234375
    6. ' if' → logprob: -7.3917083740234375
    7. 'elif' → logprob: -7.8917083740234375
    8. '<|end|>' → logprob: -9.516708374023438
    9. '```' → logprob: -9.891708374023438
    10. ' ' → logprob: -10.266708374023438

Token 313: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037801723927259445
    2. ':' → logprob: -3.662801742553711
    3. ':
' → logprob: -5.162801742553711
    4. '   ' → logprob: -5.787801742553711
    5. '       ' → logprob: -6.412801742553711
    6. 'ans' → logprob: -7.787801742553711
    7. '```' → logprob: -8.287801742553711
    8. 'degree' → logprob: -9.412801742553711
    9. '          ' → logprob: -9.787801742553711
    10. '):
' → logprob: -10.287801742553711

Token 314: '           ' (ID: 352)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.22848168015480042
    2. '           ' → logprob: -1.728481650352478
    3. '   ' → logprob: -4.228481769561768
    4. ' ans' → logprob: -4.853481769561768
    5. '       ' → logprob: -6.228481769561768
    6. '	ans' → logprob: -6.478481769561768
    7. '```' → logprob: -7.478481769561768
    8. 'degree' → logprob: -9.22848129272461
    9. '(ans' → logprob: -9.97848129272461
    10. 'answer' → logprob: -10.10348129272461

Token 315: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0005458841915242374
    2. ' ans' → logprob: -7.750545978546143
    3. '           ' → logprob: -9.250545501708984
    4. '	ans' → logprob: -11.375545501708984
    5. '   ' → logprob: -12.500545501708984
    6. '(ans' → logprob: -14.250545501708984
    7. '            
' → logprob: -14.250545501708984
    8. 'degree' → logprob: -14.375545501708984
    9. 'answer' → logprob: -14.500545501708984
    10. '       ' → logprob: -15.000545501708984

Token 316: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001673061487963423
    2. 'append' → logprob: -9.125166893005371
    3. '.' → logprob: -9.750166893005371
    4. 'app' → logprob: -17.125167846679688
    5. ' .' → logprob: -17.375167846679688
    6. ' append' → logprob: -17.625167846679688
    7. '.app' → logprob: -18.000167846679688
    8. 'Append' → logprob: -18.125167846679688
    9. '           ' → logprob: -18.750167846679688
    10. '	append' → logprob: -19.125167846679688

Token 317: '('{}' (ID: 179645)
  Prédit: '('{}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('{}' → logprob: -0.005555793642997742
    2. ''' → logprob: -5.630555629730225
    3. '('' → logprob: -6.255555629730225
    4. ' '{}' → logprob: -11.005556106567383
    5. '(f' → logprob: -11.380556106567383
    6. 'f' → logprob: -12.380556106567383
    7. '(' → logprob: -14.755556106567383
    8. ' ('' → logprob: -15.005556106567383
    9. '("{}' → logprob: -15.005556106567383
    10. '   ' → logprob: -15.255556106567383

Token 318: ' {}'.' (ID: 62777)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.17847174406051636
    2. '{}' → logprob: -2.178471803665161
    3. ' '' → logprob: -3.678471803665161
    4. ''' → logprob: -4.928471565246582
    5. ' {}'.' → logprob: -5.053471565246582
    6. ' v' → logprob: -5.178471565246582
    7. 'v' → logprob: -5.928471565246582
    8. ' '{}' → logprob: -6.303471565246582
    9. ' f' → logprob: -7.428471565246582
    10. 'f' → logprob: -8.553471565246582

Token 319: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.10043741762638092
    2. ''' → logprob: -2.3504374027252197
    3. '.format' → logprob: -9.10043716430664
    4. ' format' → logprob: -9.35043716430664
    5. '(format' → logprob: -10.72543716430664
    6. ' '' → logprob: -12.97543716430664
    7. '{}' → logprob: -13.72543716430664
    8. '{}'.' → logprob: -13.85043716430664
    9. ''{' → logprob: -14.10043716430664
    10. '('{}' → logprob: -14.22543716430664

Token 320: '(v' (ID: 6932)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0010398367885500193
    2. '(v' → logprob: -6.876039981842041
    3. ' v' → logprob: -12.001039505004883
    4. '	v' → logprob: -15.001039505004883
    5. '   ' → logprob: -15.126039505004883
    6. 'u' → logprob: -16.501039505004883
    7. '[v' → logprob: -17.001039505004883
    8. '
' → logprob: -17.251039505004883
    9. '(' → logprob: -17.876039505004883
    10. ',v' → logprob: -18.126039505004883

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018345147836953402
    2. '',' → logprob: -6.376834392547607
    3. ' ,' → logprob: -9.501834869384766
    4. 'u' → logprob: -11.001834869384766
    5. ',u' → logprob: -11.001834869384766
    6. ''' → logprob: -11.126834869384766
    7. ',
' → logprob: -12.501834869384766
    8. '`,' → logprob: -13.126834869384766
    9. ' u' → logprob: -14.001834869384766
    10. ' ',' → logprob: -14.376834869384766

Token 322: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.011047814972698689
    2. ' u' → logprob: -4.511047840118408
    3. '	u' → logprob: -16.88604736328125
    4. ''u' → logprob: -17.63604736328125
    5. '   ' → logprob: -18.01104736328125
    6. ' ' → logprob: -18.26104736328125
    7. '           ' → logprob: -19.51104736328125
    8. '    ' → logprob: -19.51104736328125
    9. ',u' → logprob: -19.51104736328125
    10. '<|end|>' → logprob: -19.88604736328125

Token 323: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.21376961469650269
    2. '))
' → logprob: -1.9637696743011475
    3. ')' → logprob: -2.9637696743011475
    4. ')
' → logprob: -7.713769435882568
    5. ''))' → logprob: -10.338769912719727
    6. ')')
' → logprob: -11.213769912719727
    7. ''))
' → logprob: -11.713769912719727
    8. '')' → logprob: -12.463769912719727
    9. '   ' → logprob: -13.088769912719727
    10. ')))' → logprob: -13.713769912719727

Token 324: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06840851902961731
    2. 'degree' → logprob: -2.818408489227295
    3. ' degree' → logprob: -5.068408489227295
    4. '       ' → logprob: -9.943408966064453
    5. '   ' → logprob: -10.193408966064453
    6. '```' → logprob: -10.818408966064453
    7. '          ' → logprob: -11.693408966064453
    8. '
' → logprob: -12.193408966064453
    9. ' ' → logprob: -13.068408966064453
    10. '            
' → logprob: -13.318408966064453

Token 325: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' (adapté à ' degree') → logprob: -2.696889623621246e-06
    2. ' degree' → logprob: -13.25000286102295
    3. '           ' → logprob: -14.00000286102295
    4. '   ' → logprob: -17.375001907348633
    5. '       ' → logprob: -18.375001907348633
    6. '.degree' → logprob: -19.000001907348633
    7. '               ' → logprob: -20.375001907348633
    8. '
' → logprob: -21.125001907348633
    9. '```' → logprob: -21.750001907348633
    10. '_degree' → logprob: -21.875001907348633

Token 326: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.10020806640386581
    2. '[v' → logprob: -2.350208044052124
    3. '[' → logprob: -13.975208282470703
    4. 'u' → logprob: -15.350208282470703
    5. 'v' → logprob: -15.475208282470703
    6. '[a' → logprob: -16.600208282470703
    7. '```' → logprob: -17.475208282470703
    8. '[x' → logprob: -17.975208282470703
    9. '[y' → logprob: -18.475208282470703
    10. '[c' → logprob: -18.725208282470703

Token 327: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.9668090343475342
    2. '+=' → logprob: -0.9668090343475342
    3. ']' → logprob: -1.8418090343475342
    4. ']+=' → logprob: -2.841809034347534
    5. ')' → logprob: -4.091809272766113
    6. ' -=' → logprob: -6.091809272766113
    7. '[' → logprob: -6.716809272766113
    8. '            ' → logprob: -7.466809272766113
    9. '           ' → logprob: -7.716809272766113
    10. '    ' → logprob: -7.966809272766113

Token 328: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.039513468742370605
    2. ' +=' → logprob: -3.28951358795166
    3. '-=' → logprob: -6.78951358795166
    4. ' -=' → logprob: -8.16451358795166
    5. '   ' → logprob: -10.16451358795166
    6. '=' → logprob: -11.28951358795166
    7. ']+=' → logprob: -12.66451358795166
    8. '+' → logprob: -12.91451358795166
    9. '-' → logprob: -14.03951358795166
    10. '  ' → logprob: -14.16451358795166

Token 329: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '-' → logprob: -17.3750057220459
    4. '   ' → logprob: -18.6250057220459
    5. '
' → logprob: -19.5000057220459
    6. '+' → logprob: -19.6250057220459
    7. '0' → logprob: -20.0625057220459
    8. ' -' → logprob: -20.1250057220459
    9. '１' → logprob: -20.4375057220459
    10. '2' → logprob: -20.7500057220459

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.375000953674316
    3. '2' → logprob: -15.000000953674316
    4. '-' → logprob: -15.125000953674316
    5. '0' → logprob: -17.125001907348633
    6. '=' → logprob: -19.312501907348633
    7. '   ' → logprob: -19.375001907348633
    8. '```' → logprob: -19.750001907348633
    9. '!' → logprob: -19.875001907348633
    10. ' -' → logprob: -20.000001907348633

Token 331: '

' (ID: 279)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.04444754868745804
    2. ' degree' → logprob: -3.919447660446167
    3. '   ' → logprob: -4.294447422027588
    4. '<|end|>' → logprob: -5.544447422027588
    5. ')' → logprob: -5.794447422027588
    6. 'if' → logprob: -6.919447422027588
    7. 'dfs' → logprob: -7.044447422027588
    8. ' if' → logprob: -7.169447422027588
    9. '```' → logprob: -9.294447898864746
    10. ' dfs' → logprob: -10.169447898864746

Token 332: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.1637164789135568e-05
    2. ' dfs' → logprob: -11.375011444091797
    3. 'df' → logprob: -16.750011444091797
    4. 'print' → logprob: -17.000011444091797
    5. ')' → logprob: -17.500011444091797
    6. 'DFS' → logprob: -18.500011444091797
    7. '```' → logprob: -18.750011444091797
    8. 'dfa' → logprob: -18.875011444091797
    9. 'def' → logprob: -19.250011444091797
    10. '<|end|>' → logprob: -19.375011444091797

Token 333: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03806765750050545
    2. '(' → logprob: -3.288067579269409
    3. '(u' → logprob: -10.913067817687988
    4. '()(' → logprob: -12.288067817687988
    5. '()
' → logprob: -13.913067817687988
    6. '()`' → logprob: -14.038067817687988
    7. ' ()' → logprob: -14.413067817687988
    8. '();' → logprob: -14.913067817687988
    9. '().' → logprob: -15.413067817687988
    10. '())' → logprob: -16.413066864013672

Token 334: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03820144385099411
    2. 'print' → logprob: -3.288201332092285
    3. ' for' → logprob: -8.788201332092285
    4. '\n' → logprob: -12.538201332092285
    5. ''\' → logprob: -13.913201332092285
    6. 'if' → logprob: -14.163201332092285
    7. ' print' → logprob: -14.413201332092285
    8. '```' → logprob: -14.538201332092285
    9. '
' → logprob: -16.0382022857666
    10. '"\' → logprob: -16.0382022857666

Token 335: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.029761025682091713
    2. '(len' → logprob: -3.5297610759735107
    3. '("\' → logprob: -12.52976131439209
    4. '(*' → logprob: -12.65476131439209
    5. ''\' → logprob: -13.27976131439209
    6. 'len' → logprob: -13.52976131439209
    7. '(' → logprob: -14.90476131439209
    8. '('' → logprob: -15.52976131439209
    9. '()' → logprob: -17.404760360717773
    10. ' len' → logprob: -18.279760360717773

Token 336: 'n' (ID: 77)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.9044500589370728
    2. 'n' → logprob: -1.0294500589370728
    3. '\n' → logprob: -1.6544500589370728
    4. 'len' → logprob: -3.154449939727783
    5. '
' → logprob: -6.404449939727783
    6. '"\' → logprob: -6.529449939727783
    7. ''' → logprob: -7.529449939727783
    8. '(len' → logprob: -9.154450416564941
    9. '('\' → logprob: -9.529450416564941
    10. '\' → logprob: -9.779450416564941

Token 337: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.03523072227835655
    2. 'join' → logprob: -3.9102306365966797
    3. '.join' → logprob: -4.41023063659668
    4. '.' → logprob: -6.28523063659668
    5. '".' → logprob: -8.28523063659668
    6. '''.' → logprob: -8.53523063659668
    7. ').' → logprob: -9.53523063659668
    8. ''' → logprob: -11.53523063659668
    9. 'print' → logprob: -11.66023063659668
    10. ''\' → logprob: -11.78523063659668

Token 338: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -4.320199877838604e-07
    2. 'print' → logprob: -15.25
    3. ' join' → logprob: -16.0
    4. 'jo' → logprob: -17.125
    5. 'j' → logprob: -17.5
    6. ''.' → logprob: -18.875
    7. '```' → logprob: -20.0
    8. '.join' → logprob: -20.25
    9. '(join' → logprob: -20.75
    10. ')' → logprob: -21.625

Token 339: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00033558503491804004
    2. 'ans' → logprob: -8.000335693359375
    3. '(map' → logprob: -16.125335693359375
    4. ' ans' → logprob: -17.375335693359375
    5. '	ans' → logprob: -17.625335693359375
    6. '(str' → logprob: -20.125335693359375
    7. '_ans' → logprob: -20.125335693359375
    8. '(' → logprob: -20.250335693359375
    9. '(answer' → logprob: -20.500335693359375
    10. 'ANS' → logprob: -20.750335693359375

Token 340: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00871952436864376
    2. ')' → logprob: -4.758719444274902
    3. '()))' → logprob: -9.383719444274902
    4. '+' → logprob: -11.883719444274902
    5. ')+' → logprob: -12.383719444274902
    6. '())' → logprob: -12.383719444274902
    7. '()' → logprob: -12.508719444274902
    8. '))
' → logprob: -13.758719444274902
    9. ')))' → logprob: -14.758719444274902
    10. ''))' → logprob: -15.758719444274902


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 338
Tokens correctement prédits (1ère position, stricte): 134
Tokens correctement prédits (1ère position, avec adaptation): 150
Tokens correctement prédits (top 10): 303
Précision stricte (1ère position): 39.64%
Précision adaptée (1ère position): 44.38%
Précision (top 10): 89.64%
================================================================================
