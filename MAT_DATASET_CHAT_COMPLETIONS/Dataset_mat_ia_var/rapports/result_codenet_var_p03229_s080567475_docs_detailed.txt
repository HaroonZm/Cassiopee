================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from functools import lru_cache
from collections import deque

# Augmente la limite de récursion pour permettre des appels récursifs profonds
sys.setrecursionlimit(10**9)

# Constante pour le modulo utilisé dans certains problèmes, même si ici il ne sert pas
MOD = 10**9 + 7

def input():
    """
    Lit une ligne d'entrée standard et retire le saut de ligne final.
    Returns:
        str: la ligne lue sans le caractère de nouvelle ligne.
    """
    return sys.stdin.readline()[:-1]

def mi():
    """
    Lit une ligne d'entrée standard et convertit les éléments en entiers.
    Returns:
        map: itérateur des entiers de la ligne lue.
    """
    return map(int, input().split())

def ii():
    """
    Lit une ligne d'entrée standard et la convertit en entier.
    Returns:
        int: l'entier lu.
    """
    return int(input())

def i2(n):
    """
    Lit 'n' lignes contenant des entiers, convertit chaque ligne en une liste,
    puis transpose la matrice résultante.
    Args:
        n (int): nombre de lignes à lire.
    Returns:
        list: matrice transposée des valeurs lues.
    """
    tmp = [list(mi()) for i in range(n)]  # Lecture des lignes
    return [list(i) for i in zip(*tmp)]   # Transposition des lignes

# Lecture du nombre d'éléments et des valeurs du tableau
N = ii()
A = [ii() for _ in range(N)]

# Trie le tableau dans l'ordre croissant
A.sort()

# Initialisation des listes pour stocker différentes partitions du tableau
u1, u2 = [], []
l1, l2 = [], []

# Partition du tableau en parties basses et hautes selon deux manières différentes
for i in range(N):
    # Première partition : l1 prend la première moitié, u1 la seconde
    if i < N // 2:
        l1.append(A[i])
    else:
        u1.append(A[i])
    # Seconde partition : l2 prend la première moitié arrondie au supérieur, u2 le reste
    if i < (N + 1) // 2:
        l2.append(A[i])
    else:
        u2.append(A[i])

# Calcul du résultat selon que N est pair ou impair
if N % 2:
    # Si le nombre d'éléments est impair, on applique deux formules pour trouver la solution optimale
    # On considère les deux types de partitions et prend le maximum
    ans = max(
        (2 * sum(u1) - u1[0] - u1[1]) - 2 * sum(l1),
        2 * sum(u2) - (2 * sum(l2) - l2[-1] - l2[-2])
    )
else:
    # Si le nombre d'éléments est pair, on applique une seule formule
    ans = (2 * sum(u1) - u1[0]) - (2 * sum(l1) - l1[-1])

# Affiche la réponse calculée
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -16.875125885009766

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10131704062223434
    2. '\' → logprob: -3.6013169288635254
    3. '\n' → logprob: -3.9763169288635254
    4. 'import' → logprob: -4.351316928863525
    5. '<|end|>' → logprob: -4.601316928863525
    6. '```' → logprob: -4.726316928863525
    7. '
' → logprob: -4.976316928863525
    8. '

' → logprob: -5.476316928863525
    9. '<|end|>' → logprob: -6.601316928863525
    10. '' → logprob: -6.601316928863525

Token 6: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8090347051620483
    2. '\n' → logprob: -1.5590347051620483
    3. 'import' → logprob: -2.309034824371338
    4. '
' → logprob: -2.434034824371338
    5. '```' → logprob: -3.059034824371338
    6. '\' → logprob: -3.309034824371338
    7. '

' → logprob: -3.309034824371338
    8. '<|end|>' → logprob: -4.059034824371338
    9. ',' → logprob: -5.059034824371338
    10. '' → logprob: -5.934034824371338

Token 7: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.31208404898643494
    2. ' os' → logprob: -1.4370840787887573
    3. 'collections' → logprob: -4.687084197998047
    4. ' datetime' → logprob: -4.812084197998047
    5. ' itertools' → logprob: -5.687084197998047
    6. ' random' → logprob: -6.062084197998047
    7. 'os' → logprob: -6.437084197998047
    8. ' typing' → logprob: -6.562084197998047
    9. ' math' → logprob: -6.812084197998047
    10. ' numpy' → logprob: -7.187084197998047

Token 8: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.12741193175315857
    2. 'import' → logprob: -2.1274118423461914
    3. '.' → logprob: -8.377411842346191
    4. '	import' → logprob: -9.502411842346191
    5. '_import' → logprob: -9.502411842346191
    6. ' ' → logprob: -9.752411842346191
    7. '<|end|>' → logprob: -11.627411842346191
    8. ' .' → logprob: -12.002411842346191
    9. '.import' → logprob: -12.002411842346191
    10. ' ' → logprob: -12.252411842346191

Token 9: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2974672317504883
    2. 'l' → logprob: -1.7974672317504883
    3. ' wraps' → logprob: -3.2974672317504883
    4. 'reduce' → logprob: -4.047467231750488
    5. ' reduce' → logprob: -4.422467231750488
    6. ' partial' → logprob: -4.547467231750488
    7. 'wrap' → logprob: -4.922467231750488
    8. 'partial' → logprob: -5.047467231750488
    9. ' ' → logprob: -8.672467231750488
    10. 'cache' → logprob: -8.797467231750488

Token 10: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -1.6405310816480778e-05
    2. 'r' → logprob: -11.750016212463379
    3. 'ruz' → logprob: -12.625016212463379
    4. '_ru' → logprob: -13.750016212463379
    5. 'ambda' → logprob: -14.375016212463379
    6. 'u' → logprob: -14.625016212463379
    7. 'azy' → logprob: -14.875016212463379
    8. 'a' → logprob: -14.875016212463379
    9. 'rup' → logprob: -15.000016212463379
    10. 'ruff' → logprob: -15.250016212463379

Token 11: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.000596043246332556
    2. '_c' → logprob: -7.875596046447754
    3. '_' → logprob: -8.500596046447754
    4. '_ca' → logprob: -12.250596046447754
    5. 'cache' → logprob: -13.250596046447754
    6. '_cached' → logprob: -13.250596046447754
    7. 'c' → logprob: -14.625596046447754
    8. '_CACHE' → logprob: -14.625596046447754
    9. '```' → logprob: -14.750596046447754
    10. '_cash' → logprob: -14.750596046447754

Token 12: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0205895900726318
    2. 'import' → logprob: -1.6455895900726318
    3. 'def' → logprob: -1.7705895900726318
    4. '\' → logprob: -2.270589590072632
    5. '```' → logprob: -2.895589590072632
    6. '<|end|>' → logprob: -2.895589590072632
    7. '
' → logprob: -3.770589590072632
    8. '(' → logprob: -4.395589828491211
    9. '#' → logprob: -5.645589828491211
    10. '<|end|>' → logprob: -5.645589828491211

Token 13: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22606666386127472
    2. '@' → logprob: -2.8510665893554688
    3. 'import' → logprob: -3.1010665893554688
    4. '\' → logprob: -3.2260665893554688
    5. '\n' → logprob: -4.226066589355469
    6. '```' → logprob: -4.226066589355469
    7. '
' → logprob: -4.726066589355469
    8. '<|end|>' → logprob: -5.226066589355469
    9. 'd' → logprob: -5.476066589355469
    10. '#' → logprob: -5.726066589355469

Token 14: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.4876757860183716
    2. 'collections' → logprob: -1.4876757860183716
    3. ' typing' → logprob: -2.112675666809082
    4. 'typing' → logprob: -4.362675666809082
    5. ' itertools' → logprob: -4.987675666809082
    6. ' ' → logprob: -4.987675666809082
    7. ' operator' → logprob: -5.862675666809082
    8. 'os' → logprob: -6.112675666809082
    9. 'operator' → logprob: -6.237675666809082
    10. ' os' → logprob: -6.362675666809082

Token 15: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.11355405300855637
    2. ' import' → logprob: -2.238554000854492
    3. '.' → logprob: -7.863554000854492
    4. 'abc' → logprob: -8.613554000854492
    5. '```' → logprob: -9.488554000854492
    6. '	import' → logprob: -10.613554000854492
    7. '.import' → logprob: -11.488554000854492
    8. '_import' → logprob: -11.988554000854492
    9. 'from' → logprob: -12.113554000854492
    10. '<|end|>' → logprob: -12.488554000854492

Token 16: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.8847739696502686
    2. ' defaultdict' → logprob: -0.8847739696502686
    3. 'deque' → logprob: -1.7597739696502686
    4. ' abc' → logprob: -7.009774208068848
    5. ' named' → logprob: -7.509774208068848
    6. 'named' → logprob: -8.009774208068848
    7. 'abc' → logprob: -8.134774208068848
    8. 'default' → logprob: -8.509774208068848
    9. ' Counter' → logprob: -11.634774208068848
    10. 'de' → logprob: -12.009774208068848

Token 17: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.019927989691495895
    2. '
' → logprob: -4.019927978515625
    3. 'import' → logprob: -7.019927978515625
    4. '


' → logprob: -7.894927978515625
    5. '```' → logprob: -8.394927978515625
    6. '\n' → logprob: -9.394927978515625
    7. '<|end|>' → logprob: -9.894927978515625
    8. '



' → logprob: -10.519927978515625
    9. '
' → logprob: -10.769927978515625
    10. '#' → logprob: -11.394927978515625

Token 18: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.832145094871521
    2. '\' → logprob: -1.707145094871521
    3. 'd' → logprob: -2.0821452140808105
    4. 'class' → logprob: -2.4571452140808105
    5. '@' → logprob: -2.8321452140808105
    6. '```' → logprob: -2.8321452140808105
    7. '\n' → logprob: -3.8321452140808105
    8. '`' → logprob: -4.8321452140808105
    9. 'n' → logprob: -4.9571452140808105
    10. 'import' → logprob: -5.2071452140808105

Token 19: ' Aug' (ID: 6025)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4373241662979126
    2. ' ' → logprob: -1.1873241662979126
    3. 'def' → logprob: -3.937324047088623
    4. '#' → logprob: -4.187324047088623
    5. 'class' → logprob: -5.812324047088623
    6. 'D' → logprob: -5.812324047088623
    7. ' 

' → logprob: -6.312324047088623
    8. ' 
' → logprob: -6.562324047088623
    9. ' #' → logprob: -6.812324047088623
    10. '\' → logprob: -6.937324047088623

Token 20: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.04933314397931099
    2. 'mented' → logprob: -3.049333095550537
    3. 'mentation' → logprob: -7.299333095550537
    4. 'mentor' → logprob: -10.174333572387695
    5. 'm' → logprob: -10.924333572387695
    6. '#' → logprob: -12.674333572387695
    7. 'men' → logprob: -12.674333572387695
    8. ' ment' → logprob: -13.174333572387695
    9. 'ument' → logprob: -13.424333572387695
    10. 'ement' → logprob: -13.799333572387695

Token 21: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01917666383087635
    2. 'r' → logprob: -4.019176483154297
    3. 'z' → logprob: -7.769176483154297
    4. 's' → logprob: -7.894176483154297
    5. ' d' → logprob: -9.144176483154297
    6. 'nt' → logprob: -9.769176483154297
    7. 'ur' → logprob: -11.019176483154297
    8. '_' → logprob: -11.269176483154297
    9. 'ment' → logprob: -12.144176483154297
    10. '#' → logprob: -12.394176483154297

Token 22: ' limite' (ID: 48939)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7749360799789429
    2. 'performance' → logprob: -1.1499360799789429
    3. 'tail' → logprob: -1.7749360799789429
    4. 'product' → logprob: -4.899936199188232
    5. 'perform' → logprob: -5.274936199188232
    6. 't' → logprob: -5.399936199188232
    7. 'distance' → logprob: -5.399936199188232
    8. 'rapid' → logprob: -5.524936199188232
    9. 'pile' → logprob: -6.024936199188232
    10. 'fonction' → logprob: -6.149936199188232

Token 23: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6575843691825867
    2. '_' → logprob: -1.4075844287872314
    3. '_sys' → logprob: -2.7825844287872314
    4. ' d' → logprob: -2.9075844287872314
    5. ' de' → logprob: -3.2825844287872314
    6. 'sys' → logprob: -3.4075844287872314
    7. '_de' → logprob: -4.782584190368652
    8. ' sys' → logprob: -4.907584190368652
    9. ' _' → logprob: -5.282584190368652
    10. 'import' → logprob: -5.532584190368652

Token 24: ' réc' (ID: 36254)
  Prédit: ' réc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réc' → logprob: -0.7330265045166016
    2. 'rec' → logprob: -0.8580265045166016
    3. 'r' → logprob: -2.7330265045166016
    4. ' recursion' → logprob: -4.483026504516602
    5. '```' → logprob: -5.358026504516602
    6. 'la' → logprob: -5.608026504516602
    7. ' la' → logprob: -5.858026504516602
    8. 're' → logprob: -5.858026504516602
    9. '_rec' → logprob: -6.358026504516602
    10. 'ré' → logprob: -6.483026504516602

Token 25: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.016761546954512596
    2. 'ur' → logprob: -4.766761779785156
    3. 'urs' → logprob: -4.891761779785156
    4. 'ursive' → logprob: -8.641761779785156
    5. 'u' → logprob: -8.766761779785156
    6. 'urrence' → logprob: -8.891761779785156
    7. 'urse' → logprob: -9.641761779785156
    8. 'usion' → logprob: -10.891761779785156
    9. '**' → logprob: -12.141761779785156
    10. '```' → logprob: -12.141761779785156

Token 26: ' pour' (ID: 1930)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.0220539569854736
    2. ' sys' → logprob: -1.3970539569854736
    3. ' ' → logprob: -1.5220539569854736
    4. '_' → logprob: -3.2720539569854736
    5. 'import' → logprob: -3.5220539569854736
    6. 's' → logprob: -3.6470539569854736
    7. ' _' → logprob: -4.0220537185668945
    8. ' import' → logprob: -4.0220537185668945
    9. ' ,' → logprob: -4.7720537185668945
    10. '_sys' → logprob: -4.7720537185668945

Token 27: ' permettre' (ID: 55483)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.13302648067474365
    2. ' ' → logprob: -3.133026599884033
    3. ' permettre' → logprob: -3.633026599884033
    4. ' la' → logprob: -4.633026599884033
    5. ' les' → logprob: -4.633026599884033
    6. ' augmenter' → logprob: -5.008026599884033
    7. ' l' → logprob: -5.133026599884033
    8. ' python' → logprob: -5.883026599884033
    9. '100' → logprob: -6.008026599884033
    10. ' recursion' → logprob: -6.383026599884033

Token 28: ' des' (ID: 731)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3008509576320648
    2. ' des' → logprob: -1.6758509874343872
    3. ' l' → logprob: -3.4258508682250977
    4. ' de' → logprob: -4.050850868225098
    5. ' une' → logprob: -5.050850868225098
    6. ' la' → logprob: -5.300850868225098
    7. 'd' → logprob: -6.175850868225098
    8. ' a' → logprob: -6.300850868225098
    9. ' ' → logprob: -6.425850868225098
    10. ' un' → logprob: -6.425850868225098

Token 29: ' appels' (ID: 133870)
  Prédit: ' appels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appels' → logprob: -0.41501447558403015
    2. ' calcul' → logprob: -2.4150145053863525
    3. 'calcul' → logprob: -2.4150145053863525
    4. 'trait' → logprob: -3.0400145053863525
    5. 'app' → logprob: -3.5400145053863525
    6. ' traitements' → logprob: -3.6650145053863525
    7. 'appel' → logprob: -4.415014266967773
    8. ' solutions' → logprob: -4.665014266967773
    9. ' calculations' → logprob: -5.665014266967773
    10. '#' → logprob: -5.915014266967773

Token 30: ' réc' (ID: 36254)
  Prédit: ' réc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réc' → logprob: -0.3631439507007599
    2. 'r' → logprob: -1.4881439208984375
    3. ' profond' → logprob: -4.1131439208984375
    4. '_' → logprob: -4.4881439208984375
    5. ' plus' → logprob: -4.4881439208984375
    6. 'ré' → logprob: -4.8631439208984375
    7. ' ' → logprob: -5.2381439208984375
    8. 's' → logprob: -5.7381439208984375
    9. 'prof' → logprob: -5.9881439208984375
    10. '```' → logprob: -5.9881439208984375

Token 31: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.10105103254318237
    2. 'ursion' → logprob: -2.351051092147827
    3. 'ur' → logprob: -7.851050853729248
    4. 'ursive' → logprob: -7.851050853729248
    5. 'urrent' → logprob: -11.351051330566406
    6. 'урс' → logprob: -11.726051330566406
    7. '_' → logprob: -11.851051330566406
    8. 'urr' → logprob: -12.226051330566406
    9. '```' → logprob: -12.226051330566406
    10. 'usr' → logprob: -12.601051330566406

Token 32: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.2304365485906601
    2. 's' → logprob: -1.8554365634918213
    3. 'if' → logprob: -4.355436325073242
    4. 'ents' → logprob: -4.355436325073242
    5. 'urs' → logprob: -4.605436325073242
    6. 'ion' → logprob: -4.980436325073242
    7. 'is' → logprob: -6.355436325073242
    8. 'ent' → logprob: -6.605436325073242
    9. 'ions' → logprob: -7.230436325073242
    10. '##' → logprob: -7.355436325073242

Token 33: ' prof' (ID: 1915)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.18852286040782928
    2. ' sys' → logprob: -1.9385228157043457
    3. 'import' → logprob: -4.313522815704346
    4. '(sys' → logprob: -5.063522815704346
    5. ' profond' → logprob: -5.938522815704346
    6. 'deep' → logprob: -6.688522815704346
    7. '_sys' → logprob: -7.813522815704346
    8. ' deep' → logprob: -7.813522815704346
    9. '```' → logprob: -7.813522815704346
    10. '=sys' → logprob: -7.813522815704346

Token 34: 'onds' (ID: 20754)
  Prédit: 'onds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onds' → logprob: -0.013529938645660877
    2. 'ondes' → logprob: -4.6385297775268555
    3. 'onde' → logprob: -5.8885297775268555
    4. 'ond' → logprob: -7.0135297775268555
    5. 'on' → logprob: -9.638529777526855
    6. 'ons' → logprob: -12.013529777526855
    7. '_' → logprob: -12.388529777526855
    8. '```' → logprob: -12.763529777526855
    9. 'onda' → logprob: -13.263529777526855
    10. '
' → logprob: -13.638529777526855

Token 35: '
' (ID: 198)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.002031657611951232
    2. 'import' → logprob: -6.6270318031311035
    3. ' sys' → logprob: -7.7520318031311035
    4. '(sys' → logprob: -8.502031326293945
    5. '=sys' → logprob: -10.502031326293945
    6. '\' → logprob: -11.002031326293945
    7. '.sys' → logprob: -11.627031326293945
    8. '_sys' → logprob: -11.877031326293945
    9. '	sys' → logprob: -12.752031326293945
    10. '\n' → logprob: -12.877031326293945

Token 36: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.002702162368223071
    2. ' sys' → logprob: -6.377702236175537
    3. 'import' → logprob: -7.377702236175537
    4. '(sys' → logprob: -8.377701759338379
    5. '
' → logprob: -9.627701759338379
    6. '=sys' → logprob: -10.377701759338379
    7. '\' → logprob: -11.377701759338379
    8. '.sys' → logprob: -11.502701759338379
    9. '_sys' → logprob: -11.877701759338379
    10. '\n' → logprob: -12.377701759338379

Token 37: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.016078125685453415
    2. '.setdefault' → logprob: -4.891077995300293
    3. '.set' → logprob: -5.016077995300293
    4. ' .' → logprob: -6.391077995300293
    5. '.exit' → logprob: -10.266077995300293
    6. '.argv' → logprob: -10.266077995300293
    7. '.stdin' → logprob: -11.766077995300293
    8. '.stdout' → logprob: -11.891077995300293
    9. '.stderr' → logprob: -12.266077995300293
    10. '.append' → logprob: -12.641077995300293

Token 38: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.01142774149775505
    2. '_rec' → logprob: -4.511427879333496
    3. '_' → logprob: -9.011427879333496
    4. ' recursion' → logprob: -9.886427879333496
    5. '_recursive' → logprob: -10.261427879333496
    6. 'e' → logprob: -10.386427879333496
    7. ' _' → logprob: -10.636427879333496
    8. 'limit' → logprob: -10.636427879333496
    9. '_limit' → logprob: -10.761427879333496
    10. 'ault' → logprob: -12.011427879333496

Token 39: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -5.080963092041202e-06
    2. 'urs' → logprob: -13.500004768371582
    3. 'ur' → logprob: -13.750004768371582
    4. 'limit' → logprob: -14.125004768371582
    5. '_limit' → logprob: -14.250004768371582
    6. 'ursive' → logprob: -14.750004768371582
    7. 'usion' → logprob: -14.750004768371582
    8. '_' → logprob: -16.0000057220459
    9. 'ursor' → logprob: -17.0000057220459
    10. '```' → logprob: -17.5000057220459

Token 40: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.005297673400491476
    2. '_limit' → logprob: -5.255297660827637
    3. '_' → logprob: -10.255297660827637
    4. 'lim' → logprob: -11.380297660827637
    5. 'depth' → logprob: -11.880297660827637
    6. '_depth' → logprob: -12.630297660827637
    7. 'ault' → logprob: -13.005297660827637
    8. '_LIMIT' → logprob: -13.630297660827637
    9. 'ursion' → logprob: -13.755297660827637
    10. '-' → logprob: -14.630297660827637

Token 41: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.610702363715973e-06
    2. '(

' → logprob: -12.625009536743164
    3. '(
' → logprob: -12.750009536743164
    4. ' (' → logprob: -12.750009536743164
    5. '((' → logprob: -15.625009536743164
    6. '()' → logprob: -16.000009536743164
    7. '```' → logprob: -17.500009536743164
    8. '(int' → logprob: -17.875009536743164
    9. '(sys' → logprob: -18.375009536743164
    10. '('' → logprob: -18.625009536743164

Token 42: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5761026740074158
    2. '10' → logprob: -0.8261026740074158
    3. '500' → logprob: -9.451102256774902
    4. ' ' → logprob: -9.701102256774902
    5. '300' → logprob: -11.201102256774902
    6. '200' → logprob: -12.201102256774902
    7. '400' → logprob: -13.451102256774902
    8. '150' → logprob: -13.576102256774902
    9. '250' → logprob: -14.826102256774902
    10. '1' → logprob: -14.951102256774902

Token 43: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.16064174473285675
    2. '00' → logprob: -1.9106417894363403
    3. '**' → logprob: -9.03564167022705
    4. '6' → logprob: -9.16064167022705
    5. '4' → logprob: -9.28564167022705
    6. '5' → logprob: -9.66064167022705
    7. '7' → logprob: -10.78564167022705
    8. '007' → logprob: -11.53564167022705
    9. '005' → logprob: -12.66064167022705
    10. '006' → logprob: -13.53564167022705

Token 44: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0017378974007442594
    2. '6' → logprob: -6.50173807144165
    3. '9' → logprob: -8.376737594604492
    4. '8' → logprob: -12.126737594604492
    5. '**' → logprob: -19.251737594604492
    6. '4' → logprob: -19.501737594604492
    7. '5' → logprob: -20.251737594604492
    8. '```' → logprob: -20.376737594604492
    9. '

' → logprob: -22.376737594604492
    10. '+' → logprob: -22.376737594604492

Token 45: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.875001907348633
    3. '))' → logprob: -14.000001907348633
    4. ')
' → logprob: -16.000001907348633
    5. '0' → logprob: -17.625001907348633
    6. '),' → logprob: -17.750001907348633
    7. ')))' → logprob: -18.125001907348633
    8. '4' → logprob: -19.000001907348633
    9. '6' → logprob: -19.125001907348633
    10. ')

' → logprob: -19.125001907348633

Token 46: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.28393593430519104
    2. '
' → logprob: -1.4089359045028687
    3. 'def' → logprob: -6.533936023712158
    4. '
' → logprob: -6.908936023712158
    5. 'class' → logprob: -8.783935546875
    6. '


' → logprob: -9.533935546875
    7. '#' → logprob: -10.283935546875
    8. '```' → logprob: -10.533935546875
    9. '

' → logprob: -11.033935546875
    10. '\n' → logprob: -12.283935546875

Token 47: ' Const' (ID: 19594)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05884162709116936
    2. 'class' → logprob: -3.4338417053222656
    3. '#' → logprob: -3.9338417053222656
    4. '@' → logprob: -6.058841705322266
    5. ' def' → logprob: -6.433841705322266
    6. 'MAX' → logprob: -7.933841705322266
    7. ' class' → logprob: -8.433841705322266
    8. 'CACHE' → logprob: -8.558841705322266
    9. 'max' → logprob: -9.308841705322266
    10. 'INF' → logprob: -9.433841705322266

Token 48: 'ante' (ID: 2116)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.3878631889820099
    2. 'ANTS' → logprob: -2.1378631591796875
    3. 'ANT' → logprob: -3.0128631591796875
    4. 's' → logprob: -3.0128631591796875
    5. 'S' → logprob: -3.1378631591796875
    6. 'ants' → logprob: -3.5128631591796875
    7. 'EPS' → logprob: -5.7628631591796875
    8. 'E' → logprob: -5.8878631591796875
    9. '_MAX' → logprob: -6.0128631591796875
    10. 'PI' → logprob: -6.0128631591796875

Token 49: ' pour' (ID: 1930)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5791729688644409
    2. ' =' → logprob: -1.829172968864441
    3. 'MAX' → logprob: -2.3291730880737305
    4. 's' → logprob: -2.7041730880737305
    5. 'PI' → logprob: -3.0791730880737305
    6. ':' → logprob: -4.0791730880737305
    7. '_MAX' → logprob: -4.3291730880737305
    8. '_PI' → logprob: -4.5791730880737305
    9. '_' → logprob: -5.2041730880737305
    10. '=' → logprob: -5.8291730880737305

Token 50: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9675361514091492
    2. 'la' → logprob: -1.467536211013794
    3. 'le' → logprob: -1.717536211013794
    4. 'l' → logprob: -2.342536211013794
    5. ' le' → logprob: -3.092536211013794
    6. ' l' → logprob: -3.592536211013794
    7. 'les' → logprob: -4.592535972595215
    8. 'MOD' → logprob: -4.592535972595215
    9. 'pi' → logprob: -5.467535972595215
    10. 'mod' → logprob: -5.467535972595215

Token 51: ' modulo' (ID: 112372)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5406232476234436
    2. 'mod' → logprob: -0.9156232476234436
    3. 'max' → logprob: -5.040623188018799
    4. 'maximum' → logprob: -6.290623188018799
    5. 'calcul' → logprob: -6.415623188018799
    6. ' nombre' → logprob: -6.790623188018799
    7. 'module' → logprob: -7.290623188018799
    8. 'nb' → logprob: -7.915623188018799
    9. 'cache' → logprob: -8.040623664855957
    10. 'n' → logprob: -8.290623664855957

Token 52: ' utilisé' (ID: 53138)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.2136390507221222
    2. ' MOD' → logprob: -2.9636390209198
    3. ' ' → logprob: -3.2136390209198
    4. '%' → logprob: -3.5886390209198
    5. '_' → logprob: -3.7136390209198
    6. '_MOD' → logprob: -4.088639259338379
    7. ' %' → logprob: -4.213639259338379
    8. '\' → logprob: -6.338639259338379
    9. ' =' → logprob: -6.463639259338379
    10. ' _' → logprob: -6.713639259338379

Token 53: ' dans' (ID: 2671)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.3380706012248993
    2. ':' → logprob: -2.3380706310272217
    3. ' ' → logprob: -2.4630706310272217
    4. '%' → logprob: -3.5880706310272217
    5. 'MOD' → logprob: -4.338070392608643
    6. '100' → logprob: -4.713070392608643
    7. ' =' → logprob: -5.213070392608643
    8. ' %' → logprob: -5.213070392608643
    9. '```' → logprob: -5.463070392608643
    10. '_' → logprob: -5.463070392608643

Token 54: ' certains' (ID: 30681)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7404334545135498
    2. ' ' → logprob: -0.9904334545135498
    3. ' l' → logprob: -2.99043345451355
    4. ' le' → logprob: -2.99043345451355
    5. ' la' → logprob: -4.115433692932129
    6. 'les' → logprob: -5.615433692932129
    7. ' the' → logprob: -5.740433692932129
    8. 'l' → logprob: -5.865433692932129
    9. ' code' → logprob: -5.990433692932129
    10. '100' → logprob: -6.115433692932129

Token 55: ' problèmes' (ID: 49822)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.9052734971046448
    2. 'calcul' → logprob: -1.0302734375
    3. ' calculations' → logprob: -2.2802734375
    4. ' cas' → logprob: -3.5302734375
    5. ' problèmes' → logprob: -3.7802734375
    6. ' problems' → logprob: -4.1552734375
    7. 'mod' → logprob: -4.4052734375
    8. 'pro' → logprob: -4.7802734375
    9. ' computations' → logprob: -5.0302734375
    10. 'cas' → logprob: -5.2802734375

Token 56: ',' (ID: 11)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.03501906991004944
    2. ' MOD' → logprob: -4.4100189208984375
    3. '_MOD' → logprob: -4.9100189208984375
    4. ' :' → logprob: -4.9100189208984375
    5. ':' → logprob: -5.4100189208984375
    6. '%' → logprob: -7.1600189208984375
    7. '\' → logprob: -7.7850189208984375
    8. '```' → logprob: -8.160018920898438
    9. ' :
' → logprob: -8.660018920898438
    10. 'mod' → logprob: -8.785018920898438

Token 57: ' même' (ID: 9679)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.544552743434906
    2. ' ' → logprob: -1.7945528030395508
    3. ' MOD' → logprob: -1.7945528030395508
    4. 'mod' → logprob: -3.544552803039551
    5. ' modulo' → logprob: -3.544552803039551
    6. ' mod' → logprob: -4.544552803039551
    7. '100' → logprob: -5.044552803039551
    8. ' souvent' → logprob: -5.794552803039551
    9. '10' → logprob: -6.169552803039551
    10. ' often' → logprob: -6.544552803039551

Token 58: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -0.40951767563819885
    2. ' si' → logprob: -1.1595176458358765
    3. 'if' → logprob: -4.409517765045166
    4. 's' → logprob: -5.784517765045166
    5. ' if' → logprob: -5.784517765045166
    6. '```' → logprob: -6.784517765045166
    7. '#' → logprob: -7.284517765045166
    8. 'though' → logprob: -7.784517765045166
    9. '_si' → logprob: -7.784517765045166
    10. 'import' → logprob: -9.034517288208008

Token 59: ' ici' (ID: 27994)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.7110278010368347
    2. '0' → logprob: -1.4610278606414795
    3. ' False' → logprob: -1.4610278606414795
    4. 'not' → logprob: -3.9610278606414795
    5. ' not' → logprob: -5.2110276222229
    6. 'pas' → logprob: -5.9610276222229
    7. 'non' → logprob: -6.2110276222229
    8. '100' → logprob: -6.3360276222229
    9. ' pas' → logprob: -6.3360276222229
    10. ' ' → logprob: -6.5860276222229

Token 60: ' il' (ID: 1793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6777961850166321
    2. '0' → logprob: -2.4277961254119873
    3. '100' → logprob: -2.5527961254119873
    4. 'le' → logprob: -3.1777961254119873
    5. '_' → logprob: -3.5527961254119873
    6. ' on' → logprob: -3.6777961254119873
    7. ' le' → logprob: -3.6777961254119873
    8. '=' → logprob: -3.8027961254119873
    9. ' elle' → logprob: -3.9277961254119873
    10. ' il' → logprob: -4.177796363830566

Token 61: ' ne' (ID: 453)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6204544901847839
    2. 'n' → logprob: -1.7454545497894287
    3. '#' → logprob: -1.8704545497894287
    4. '=' → logprob: -2.3704545497894287
    5. ' est' → logprob: -4.24545431137085
    6. 'est' → logprob: -4.37045431137085
    7. ' =' → logprob: -5.37045431137085
    8. ' semble' → logprob: -6.37045431137085
    9. ' is' → logprob: -6.49545431137085
    10. 'n't' → logprob: -7.24545431137085

Token 62: ' sert' (ID: 52405)
  Prédit: ' semble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' semble' → logprob: -1.099051833152771
    2. 'pas' → logprob: -1.224051833152771
    3. '=' → logprob: -1.724051833152771
    4. 's' → logprob: -2.9740519523620605
    5. '#' → logprob: -3.3490519523620605
    6. 'n' → logprob: -3.3490519523620605
    7. 'est' → logprob: -4.2240519523620605
    8. '```' → logprob: -4.7240519523620605
    9. 'sera' → logprob: -4.9740519523620605
    10. 'semble' → logprob: -4.9740519523620605

Token 63: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.34899646043777466
    2. 'pas' → logprob: -1.4739964008331299
    3. ' à' → logprob: -3.09899640083313
    4. 'à' → logprob: -4.098996639251709
    5. 'a' → logprob: -6.723996639251709
    6. ' que' → logprob: -6.848996639251709
    7. ' ' → logprob: -8.47399616241455
    8. ' qu' → logprob: -8.59899616241455
    9. ' probablement' → logprob: -8.59899616241455
    10. ' a' → logprob: -9.72399616241455

Token 64: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1304465532302856
    2. ',' → logprob: -1.3804465532302856
    3. '100' → logprob: -2.255446434020996
    4. 'MOD' → logprob: -2.380446434020996
    5. '_' → logprob: -3.005446434020996
    6. '.' → logprob: -3.880446434020996
    7. ' =' → logprob: -4.005446434020996
    8. ':' → logprob: -4.130446434020996
    9. '0' → logprob: -4.755446434020996
    10. '\n' → logprob: -4.880446434020996

Token 65: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.004177767783403397
    2. ' MOD' → logprob: -5.504177570343018
    3. '_MOD' → logprob: -10.254178047180176
    4. ' modulo' → logprob: -11.504178047180176
    5. '.MOD' → logprob: -11.629178047180176
    6. '```' → logprob: -11.629178047180176
    7. 'MD' → logprob: -12.254178047180176
    8. 'mod' → logprob: -12.254178047180176
    9. '

' → logprob: -12.629178047180176
    10. 'MODULE' → logprob: -12.754178047180176

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021983087062836
    2. '=' → logprob: -2.3502197265625
    3. ',' → logprob: -12.2252197265625
    4. '_' → logprob: -13.7252197265625
    5. ' ' → logprob: -13.8502197265625
    6. ' ' → logprob: -13.9752197265625
    7. ')' → logprob: -14.1002197265625
    8. '.' → logprob: -14.3502197265625
    9. ':' → logprob: -14.4752197265625
    10. ' =
' → logprob: -14.8502197265625

Token 67: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02169625088572502
    2. ' ' → logprob: -4.021696090698242
    3. '100' → logprob: -5.646696090698242
    4. '1' → logprob: -11.646696090698242
    5. '998' → logprob: -13.146696090698242
    6. 'int' → logprob: -16.271696090698242
    7. '123' → logprob: -16.646696090698242
    8. '0' → logprob: -17.146696090698242
    9. '109' → logprob: -17.771696090698242
    10. '2' → logprob: -18.021696090698242

Token 68: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001932205050252378
    2. '100' → logprob: -6.251932144165039
    3. '1' → logprob: -12.876932144165039
    4. ' ' → logprob: -14.751932144165039
    5. 'int' → logprob: -15.001932144165039
    6. '998' → logprob: -15.251932144165039
    7. '(' → logprob: -18.37693214416504
    8. '123' → logprob: -18.37693214416504
    9. '109' → logprob: -18.50193214416504
    10. '0' → logprob: -19.00193214416504

Token 69: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.20179113745689392
    2. '**' → logprob: -1.7017911672592163
    3. '09' → logprob: -7.951791286468506
    4. '```' → logprob: -11.576790809631348
    5. '0' → logprob: -12.326790809631348
    6. '7' → logprob: -12.576790809631348
    7. ' ' → logprob: -12.701790809631348
    8. '*' → logprob: -13.826790809631348
    9. '6' → logprob: -13.951790809631348
    10. '^' → logprob: -14.076790809631348

Token 70: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.125
    3. '10' → logprob: -21.0
    4. '```' → logprob: -21.125
    5. ' ' → logprob: -21.75
    6. '7' → logprob: -22.125
    7. '18' → logprob: -22.125
    8. '19' → logprob: -22.625
    9. '4' → logprob: -22.75
    10. '+' → logprob: -22.75

Token 71: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00042292833677493036
    2. ' +' → logprob: -7.875422954559326
    3. '7' → logprob: -10.125422477722168
    4. '+
' → logprob: -13.125422477722168
    5. '9' → logprob: -15.250422477722168
    6. ' plus' → logprob: -15.875422477722168
    7. '```' → logprob: -16.125423431396484
    8. '＋' → logprob: -16.375423431396484
    9. '+

' → logprob: -16.625423431396484
    10. 'plus' → logprob: -16.750423431396484

Token 72: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -16.375
    3. ' ' → logprob: -17.375
    4. '9' → logprob: -18.125
    5. '07' → logprob: -19.75
    6. '```' → logprob: -20.0
    7. '   ' → logprob: -21.5
    8. '' → logprob: -21.875
    9. '67' → logprob: -22.5
    10. '  ' → logprob: -22.875

Token 73: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '```' → logprob: -20.625
    3. '۷' → logprob: -22.875
    4. '

' → logprob: -22.875
    5. '07' → logprob: -23.0
    6. '+' → logprob: -23.125
    7. ' ' → logprob: -23.375
    8. '   ' → logprob: -23.625
    9. '७' → logprob: -23.75
    10. '٧' → logprob: -23.75

Token 74: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5252282619476318
    2. '
' → logprob: -0.9002282619476318
    3. '#' → logprob: -7.275228500366211
    4. '
' → logprob: -7.525228500366211
    5. '```' → logprob: -7.525228500366211
    6. '


' → logprob: -9.150228500366211
    7. '' → logprob: -9.275228500366211
    8. '\n' → logprob: -9.775228500366211
    9. '\' → logprob: -10.775228500366211
    10. '



' → logprob: -11.525228500366211

Token 75: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1818625032901764
    2. '

' → logprob: -1.931862473487854
    3. 'def' → logprob: -4.3068623542785645
    4. 'class' → logprob: -4.9318623542785645
    5. '
' → logprob: -8.306862831115723
    6. '#' → logprob: -8.431862831115723
    7. '```' → logprob: -9.306862831115723
    8. '\' → logprob: -10.056862831115723
    9. '\n' → logprob: -10.306862831115723
    10. '


' → logprob: -10.931862831115723

Token 76: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0069354744628071785
    2. ' space' → logprob: -5.5069355964660645
    3. '_' → logprob: -7.7569355964660645
    4. ' f' → logprob: -8.006935119628906
    5. ' dfs' → logprob: -8.256935119628906
    6. ' factorial' → logprob: -8.256935119628906
    7. ' fibonacci' → logprob: -8.631935119628906
    8. ' ' → logprob: -8.631935119628906
    9. ' calculate' → logprob: -8.881935119628906
    10. ' a' → logprob: -9.006935119628906

Token 77: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2767540216445923
    2. '()' → logprob: -2.0267539024353027
    3. '():' → logprob: -2.2767539024353027
    4. '("")' → logprob: -6.026753902435303
    5. '("("' → logprob: -6.651753902435303
    6. '40' → logprob: -7.151753902435303
    7. '(`' → logprob: -7.901753902435303
    8. '('' → logprob: -8.026754379272461
    9. '_parent' → logprob: -8.401754379272461
    10. '("' → logprob: -8.651754379272461

Token 78: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1456148773431778
    2. '().' → logprob: -2.5206148624420166
    3. ' =' → logprob: -3.6456148624420166
    4. ' ' → logprob: -4.895615100860596
    5. '=' → logprob: -5.395615100860596
    6. '(' → logprob: -5.520615100860596
    7. '.' → logprob: -5.770615100860596
    8. ')' → logprob: -6.520615100860596
    9. '():' → logprob: -6.520615100860596
    10. ' ()' → logprob: -6.895615100860596

Token 79: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6244143843650818
    2. ' sys' → logprob: -1.4994144439697266
    3. 'sys' → logprob: -1.9994144439697266
    4. ' return' → logprob: -2.2494144439697266
    5. 'input' → logprob: -8.624414443969727
    6. ' input' → logprob: -10.499414443969727
    7. 'raw' → logprob: -10.499414443969727
    8. ' ' → logprob: -11.249414443969727
    9. '__' → logprob: -11.624414443969727
    10. 'super' → logprob: -12.374414443969727

Token 80: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.02926553227007389
    2. 'return' → logprob: -3.7792656421661377
    3. '   ' → logprob: -5.404265403747559
    4. ' ' → logprob: -7.154265403747559
    5. '"""' → logprob: -8.279265403747559
    6. ' pass' → logprob: -8.904265403747559
    7. ' """' → logprob: -9.029265403747559
    8. '  ' → logprob: -10.154265403747559
    9. '    ' → logprob: -10.404265403747559
    10. ' ' → logprob: -10.654265403747559

Token 81: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3921911120414734
    2. ' return' → logprob: -1.1421911716461182
    3. '"""' → logprob: -6.517190933227539
    4. '   ' → logprob: -6.767190933227539
    5. ' ' → logprob: -6.892190933227539
    6. 'Return' → logprob: -8.142190933227539
    7. 'r' → logprob: -8.142190933227539
    8. ' pass' → logprob: -8.392190933227539
    9. 'pass' → logprob: -8.767190933227539
    10. 'ret' → logprob: -9.642190933227539

Token 82: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0032080153468996286
    2. '().' → logprob: -6.378208160400391
    3. ' une' → logprob: -7.003208160400391
    4. ' la' → logprob: -9.00320816040039
    5. ' ' → logprob: -10.00320816040039
    6. '()`' → logprob: -10.00320816040039
    7. '():' → logprob: -10.12820816040039
    8. ' un' → logprob: -10.37820816040039
    9. ' line' → logprob: -10.62820816040039
    10. ' =' → logprob: -10.62820816040039

Token 83: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.025591736659407616
    2. 'ligne' → logprob: -4.150591850280762
    3. ' chaîne' → logprob: -5.275591850280762
    4. 'l' → logprob: -6.400591850280762
    5. ' ' → logprob: -6.525591850280762
    6. ' line' → logprob: -7.400591850280762
    7. ' chaine' → logprob: -9.025591850280762
    8. ' l' → logprob: -9.150591850280762
    9. 'line' → logprob: -9.400591850280762
    10. ' string' → logprob: -9.650591850280762

Token 84: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08650103211402893
    2. '   ' → logprob: -3.211501121520996
    3. ' ' → logprob: -4.586501121520996
    4. '.' → logprob: -4.836501121520996
    5. 'user' → logprob: -5.836501121520996
    6. ' de' → logprob: -6.211501121520996
    7. '(' → logprob: -6.586501121520996
    8. '<|end|>' → logprob: -6.711501121520996
    9. ' complète' → logprob: -6.836501121520996
    10. '  ' → logprob: -6.836501121520996

Token 85: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.5822409987449646
    2. ''entrée' → logprob: -0.8322409987449646
    3. 'e' → logprob: -5.707241058349609
    4. '’entrée' → logprob: -6.457241058349609
    5. ' entrée' → logprob: -7.332241058349609
    6. ''' → logprob: -8.58224105834961
    7. ' input' → logprob: -8.70724105834961
    8. ''ent' → logprob: -9.45724105834961
    9. 'input' → logprob: -9.45724105834961
    10. ''utilisateur' → logprob: -10.08224105834961

Token 86: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24196217954158783
    2. '   ' → logprob: -2.241962194442749
    3. '.' → logprob: -3.366962194442749
    4. ' ' → logprob: -3.741962194442749
    5. '().' → logprob: -5.11696195602417
    6. ')' → logprob: -5.36696195602417
    7. ',' → logprob: -5.36696195602417
    8. '  ' → logprob: -5.49196195602417
    9. '\n' → logprob: -5.61696195602417
    10. '"""' → logprob: -5.86696195602417

Token 87: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18343493342399597
    2. '   ' → logprob: -2.1834349632263184
    3. '.' → logprob: -3.8084349632263184
    4. ' ' → logprob: -4.933434963226318
    5. '().' → logprob: -5.058434963226318
    6. ',' → logprob: -5.558434963226318
    7. '():' → logprob: -5.933434963226318
    8. ')' → logprob: -6.183434963226318
    9. '(' → logprob: -6.183434963226318
    10. '  ' → logprob: -6.933434963226318

Token 88: ' retire' (ID: 48410)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.9553712606430054
    2. 'rstrip' → logprob: -1.7053712606430054
    3. ' ren' → logprob: -2.330371379852295
    4. ' retourne' → logprob: -2.455371379852295
    5. ' return' → logprob: -2.705371379852295
    6. ' la' → logprob: -2.830371379852295
    7. ' sup' → logprob: -3.580371379852295
    8. ' strip' → logprob: -4.080371379852295
    9. 'ren' → logprob: -4.080371379852295
    10. '.strip' → logprob: -4.330371379852295

Token 89: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1134145259857178
    2. ' les' → logprob: -1.4884145259857178
    3. ' l' → logprob: -1.8634145259857178
    4. 'l' → logprob: -2.1134145259857178
    5. ' ' → logprob: -2.6134145259857178
    6. 'le' → logprob: -3.4884145259857178
    7. ' le' → logprob: -3.7384145259857178
    8. '  ' → logprob: -4.613414764404297
    9. '\' → logprob: -4.988414764404297
    10. 'les' → logprob: -5.488414764404297

Token 90: ' saut' (ID: 111480)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.515535831451416
    2. 's' → logprob: -1.390535831451416
    3. ' \' → logprob: -3.390535831451416
    4. ' trailing' → logprob: -3.765535831451416
    5. 'es' → logprob: -4.390535831451416
    6. ' espace' → logprob: -4.515535831451416
    7. 'esp' → logprob: -4.515535831451416
    8. ' ' → logprob: -4.765535831451416
    9. 'car' → logprob: -5.015535831451416
    10. '\s' → logprob: -5.015535831451416

Token 91: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11414872854948044
    2. 'de' → logprob: -2.2391486167907715
    3. 'd' → logprob: -7.3641486167907715
    4. '\n' → logprob: -8.23914909362793
    5. '\' → logprob: -9.61414909362793
    6. ' \' → logprob: -10.11414909362793
    7. 'line' → logprob: -10.11414909362793
    8. '_de' → logprob: -10.36414909362793
    9. ' ' → logprob: -10.48914909362793
    10. 'final' → logprob: -10.61414909362793

Token 92: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.08443057537078857
    2. ' ligne' → logprob: -2.834430694580078
    3. ' ' → logprob: -4.709430694580078
    4. 'l' → logprob: -5.334430694580078
    5. 'line' → logprob: -5.334430694580078
    6. 'la' → logprob: -6.209430694580078
    7. '\n' → logprob: -7.084430694580078
    8. ' la' → logprob: -7.834430694580078
    9. '```' → logprob: -10.084430694580078
    10. 'lin' → logprob: -10.334430694580078

Token 93: ' final' (ID: 1721)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.03109363280236721
    2. '   ' → logprob: -4.031093597412109
    3. '.' → logprob: -5.406093597412109
    4. ' ' → logprob: -6.156093597412109
    5. 'rstrip' → logprob: -7.031093597412109
    6. '    
' → logprob: -7.281093597412109
    7. '.rstrip' → logprob: -7.406093597412109
    8. '"\' → logprob: -7.781093597412109
    9. '\' → logprob: -7.781093597412109
    10. '.strip' → logprob: -8.03109359741211

Token 94: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.009948492050171
    2. ')' → logprob: -1.259948492050171
    3. '\n' → logprob: -1.509948492050171
    4. '()' → logprob: -2.509948492050171
    5. '.' → logprob: -4.00994873046875
    6. ' ' → logprob: -5.38494873046875
    7. 'return' → logprob: -5.50994873046875
    8. ' )' → logprob: -6.00994873046875
    9. ' return' → logprob: -6.00994873046875
    10. ':return' → logprob: -6.00994873046875

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5395527482032776
    2. '"""' → logprob: -1.0395526885986328
    3. 'return' → logprob: -3.914552688598633
    4. ' return' → logprob: -4.539552688598633
    5. ')' → logprob: -4.789552688598633
    6. ' ' → logprob: -4.914552688598633
    7. '\n' → logprob: -5.039552688598633
    8. ' """' → logprob: -5.664552688598633
    9. '""' → logprob: -6.539552688598633
    10. '    
' → logprob: -6.914552688598633

Token 96: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13591858744621277
    2. '   ' → logprob: -2.510918617248535
    3. ' return' → logprob: -3.385918617248535
    4. '"""' → logprob: -5.510918617248535
    5. ')' → logprob: -6.135918617248535
    6. ':return' → logprob: -6.260918617248535
    7. '.strip' → logprob: -6.760918617248535
    8. ' ' → logprob: -6.885918617248535
    9. 'rstrip' → logprob: -7.510918617248535
    10. 'strip' → logprob: -8.385918617248535

Token 97: ':
' (ID: 734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5911673903465271
    2. ' input' → logprob: -2.091167449951172
    3. ' sys' → logprob: -2.716167449951172
    4. '   ' → logprob: -2.716167449951172
    5. 'input' → logprob: -3.466167449951172
    6. ' ' → logprob: -3.591167449951172
    7. ' self' → logprob: -3.591167449951172
    8. ' str' → logprob: -3.591167449951172
    9. '    ' → logprob: -3.966167449951172
    10. ' line' → logprob: -4.841167449951172

Token 98: '       ' (ID: 309)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2618846297264099
    2. ' input' → logprob: -1.7618846893310547
    3. 'input' → logprob: -3.7618846893310547
    4. '   ' → logprob: -4.011884689331055
    5. 'sys' → logprob: -4.136884689331055
    6. '    ' → logprob: -8.511884689331055
    7. ' ' → logprob: -8.761884689331055
    8. 's' → logprob: -9.136884689331055
    9. ' ' → logprob: -9.136884689331055
    10. ' `' → logprob: -9.386884689331055

Token 99: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.6458670496940613
    2. 'input' → logprob: -0.8958670496940613
    3. ' input' → logprob: -3.145867109298706
    4. ' str' → logprob: -4.020866870880127
    5. 'sys' → logprob: -5.395866870880127
    6. ' sys' → logprob: -7.145866870880127
    7. 's' → logprob: -7.895866870880127
    8. 'line' → logprob: -8.645867347717285
    9. 'string' → logprob: -8.770867347717285
    10. 'raw' → logprob: -9.020867347717285

Token 100: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2455288171768188
    2. ')' → logprob: -1.6205288171768188
    3. '()' → logprob: -1.9955288171768188
    4. '<|end|>' → logprob: -2.8705286979675293
    5. '    ' → logprob: -2.9955286979675293
    6. ' ' → logprob: -3.3705286979675293
    7. ':' → logprob: -3.3705286979675293
    8. 'return' → logprob: -3.6205286979675293
    9. ':return' → logprob: -3.7455286979675293
    10. '""' → logprob: -4.120528697967529

Token 101: ' la' (ID: 557)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5163788199424744
    2. 'input' → logprob: -1.5163788795471191
    3. ' sys' → logprob: -2.016378879547119
    4. '   ' → logprob: -4.266378879547119
    5. 'sys' → logprob: -4.391378879547119
    6. ' ' → logprob: -4.641378879547119
    7. ' return' → logprob: -4.766378879547119
    8. '    ' → logprob: -6.141378879547119
    9. 'return' → logprob: -7.266378879547119
    10. ' raw' → logprob: -8.266378402709961

Token 102: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.10397443920373917
    2. ' ligne' → logprob: -2.9789743423461914
    3. 'chaine' → logprob: -3.6039743423461914
    4. ' chaine' → logprob: -4.228974342346191
    5. ' string' → logprob: -5.978974342346191
    6. ' prochaine' → logprob: -7.228974342346191
    7. 'ligne' → logprob: -7.353974342346191
    8. ' input' → logprob: -7.478974342346191
    9. 'entrée' → logprob: -7.978974342346191
    10. ' sais' → logprob: -8.478974342346191

Token 103: ' l' (ID: 305)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9791872501373291
    2. '   ' → logprob: -1.354187250137329
    3. '<|end|>' → logprob: -1.979187250137329
    4. ' complète' → logprob: -2.479187250137329
    5. ' ' → logprob: -3.354187250137329
    6. ' de' → logprob: -3.604187250137329
    7. '    ' → logprob: -4.22918701171875
    8. '  ' → logprob: -4.35418701171875
    9. ' suivante' → logprob: -4.72918701171875
    10. ' récup' → logprob: -5.22918701171875

Token 104: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.5440996289253235
    2. 'ine' → logprob: -1.6690995693206787
    3. 'u' → logprob: -2.0440995693206787
    4. 'e' → logprob: -2.7940995693206787
    5. 'igne' → logprob: -3.6690995693206787
    6. '   ' → logprob: -5.669099807739258
    7. 'inea' → logprob: -5.794099807739258
    8. 'ne' → logprob: -6.044099807739258
    9. 'iné' → logprob: -6.419099807739258
    10. 'ecture' → logprob: -7.044099807739258

Token 105: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20057207345962524
    2. '\n' → logprob: -2.0755720138549805
    3. '    
' → logprob: -3.8255720138549805
    4. '    ' → logprob: -4.2005720138549805
    5. '  ' → logprob: -5.2005720138549805
    6. ' ' → logprob: -5.4505720138549805
    7. '<|end|>' → logprob: -6.4505720138549805
    8. '\' → logprob: -6.8255720138549805
    9. '  
' → logprob: -6.8255720138549805
    10. 'newline' → logprob: -7.0755720138549805

Token 106: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.0542386770248413
    2. ' le' → logprob: -1.5542386770248413
    3. ' trailing' → logprob: -1.9292386770248413
    4. ' la' → logprob: -2.179238796234131
    5. ' ' → logprob: -2.679238796234131
    6. '\n' → logprob: -3.804238796234131
    7. 'l' → logprob: -4.179238796234131
    8. ' newline' → logprob: -4.679238796234131
    9. ' ' → logprob: -4.804238796234131
    10. ' the' → logprob: -4.929238796234131

Token 107: ' caractère' (ID: 80509)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.03386629372835159
    2. 'car' → logprob: -3.7838664054870605
    3. 's' → logprob: -5.2838664054870605
    4. ' saut' → logprob: -6.2838664054870605
    5. ''\' → logprob: -7.1588664054870605
    6. ' \' → logprob: -7.4088664054870605
    7. '\' → logprob: -7.6588664054870605
    8. '\x' → logprob: -8.158865928649902
    9. ' trailing' → logprob: -8.408865928649902
    10. ' caractère' → logprob: -8.658865928649902

Token 108: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.29940253496170044
    2. '\n' → logprob: -1.5494024753570557
    3. ''\' → logprob: -3.6744024753570557
    4. ' '\' → logprob: -4.799402713775635
    5. '`\' → logprob: -5.049402713775635
    6. ' \' → logprob: -5.299402713775635
    7. 'de' → logprob: -7.549402713775635
    8. '"\' → logprob: -7.924402713775635
    9. ' ' → logprob: -9.049402236938477
    10. '\' → logprob: -9.674402236938477

Token 109: ' nouvelle' (ID: 24562)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.017874812707304955
    2. ''\' → logprob: -4.267874717712402
    3. '`\' → logprob: -6.642874717712402
    4. '"\' → logprob: -7.142874717712402
    5. ' \' → logprob: -7.767874717712402
    6. ' '\' → logprob: -7.892874717712402
    7. 'newline' → logprob: -7.892874717712402
    8. '\' → logprob: -9.017874717712402
    9. ' newline' → logprob: -9.267874717712402
    10. ' ' → logprob: -9.767874717712402

Token 110: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.20364975929260254
    2. 'ligne' → logprob: -1.7036497592926025
    3. ' ' → logprob: -6.828649520874023
    4. 'line' → logprob: -7.203649520874023
    5. ' line' → logprob: -8.828649520874023
    6. 'l' → logprob: -9.328649520874023
    7. '\n' → logprob: -9.453649520874023
    8. '_l' → logprob: -10.578649520874023
    9. '_' → logprob: -11.078649520874023
    10. ' ' → logprob: -11.578649520874023

Token 111: '.
' (ID: 558)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.02343926765024662
    2. '   ' → logprob: -4.398439407348633
    3. '"\' → logprob: -5.273439407348633
    4. ''\' → logprob: -6.148439407348633
    5. '\' → logprob: -7.523439407348633
    6. '    
' → logprob: -7.648439407348633
    7. 'newline' → logprob: -7.648439407348633
    8. '
' → logprob: -7.648439407348633
    9. '  
' → logprob: -8.148439407348633
    10. ' ' → logprob: -8.398439407348633

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7085241079330444
    2. '"""' → logprob: -0.7085241079330444
    3. '\n' → logprob: -4.708524227142334
    4. '"' → logprob: -6.333524227142334
    5. '""' → logprob: -6.458524227142334
    6. ' """' → logprob: -7.333524227142334
    7. ')' → logprob: -7.333524227142334
    8. ' ' → logprob: -7.583524227142334
    9. '"""
' → logprob: -7.833524227142334
    10. '"\' → logprob: -7.958524227142334

Token 113: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.15031330287456512
    2. '\n' → logprob: -2.400313377380371
    3. ')' → logprob: -3.775313377380371
    4. '""' → logprob: -4.525313377380371
    5. '   ' → logprob: -4.775313377380371
    6. ' return' → logprob: -6.525313377380371
    7. ' """' → logprob: -6.650313377380371
    8. '"""
' (adapté à ' """
') → logprob: -7.275313377380371
    9. '\' → logprob: -7.400313377380371
    10. '"' → logprob: -7.525313377380371

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037032817490398884
    2. 'return' → logprob: -5.7537031173706055
    3. ' return' → logprob: -7.6287031173706055
    4. '   ' → logprob: -11.628703117370605
    5. '    ' → logprob: -11.753703117370605
    6. '    
' → logprob: -11.753703117370605
    7. '       ' → logprob: -12.753703117370605
    8. 'r' → logprob: -13.003703117370605
    9. ' ' → logprob: -13.003703117370605
    10. ' ' → logprob: -13.128703117370605

Token 115: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00011284107313258573
    2. ' return' → logprob: -9.125112533569336
    3. '   ' → logprob: -13.250112533569336
    4. 'ret' → logprob: -13.750112533569336
    5. 'try' → logprob: -15.250112533569336
    6. 'import' → logprob: -15.500112533569336
    7. 'line' → logprob: -15.625112533569336
    8. 'raw' → logprob: -15.625112533569336
    9. 'r' → logprob: -16.625112533569336
    10. '    
' → logprob: -17.000112533569336

Token 116: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.313321053981781
    2. 'sys' → logprob: -1.3133211135864258
    3. 'input' → logprob: -10.188321113586426
    4. ' input' → logprob: -10.813321113586426
    5. '	sys' → logprob: -14.438321113586426
    6. ' ' → logprob: -14.688321113586426
    7. '=sys' → logprob: -15.188321113586426
    8. '(sys' → logprob: -15.813321113586426
    9. 'super' → logprob: -17.06332015991211
    10. ' ' → logprob: -17.18832015991211

Token 117: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00012689977302215993
    2. '.stdout' → logprob: -9.250126838684082
    3. '.' → logprob: -10.625126838684082
    4. '.readline' → logprob: -12.875126838684082
    5. '.std' → logprob: -12.875126838684082
    6. '.argv' → logprob: -14.125126838684082
    7. '.__' → logprob: -15.375126838684082
    8. '._' → logprob: -16.3751277923584
    9. '.stderr' → logprob: -16.7501277923584
    10. 'stdin' → logprob: -16.8751277923584

Token 118: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.0802738870552275e-05
    2. '.' → logprob: -11.62501049041748
    3. '.read' → logprob: -13.25001049041748
    4. '.buffer' → logprob: -17.375011444091797
    5. '.readlines' → logprob: -18.125011444091797
    6. ' readline' → logprob: -18.125011444091797
    7. 'read' → logprob: -19.250011444091797
    8. '.rstrip' → logprob: -19.750011444091797
    9. '```' → logprob: -20.750011444091797
    10. '().' → logprob: -20.750011444091797

Token 119: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06197262182831764
    2. '()' → logprob: -2.8119726181030273
    3. '(' → logprob: -12.436972618103027
    4. ' ().' → logprob: -14.936972618103027
    5. ' ()' → logprob: -15.811972618103027
    6. '()\' → logprob: -16.061973571777344
    7. '.rstrip' → logprob: -16.311973571777344
    8. '()[' → logprob: -16.811973571777344
    9. '().__' → logprob: -16.936973571777344
    10. 'rstrip' → logprob: -17.061973571777344

Token 120: '[:-' (ID: 63556)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004866430535912514
    2. '()' → logprob: -5.379866600036621
    3. '.rstrip' → logprob: -9.379866600036621
    4. '.strip' → logprob: -9.629866600036621
    5. '[:-' → logprob: -9.879866600036621
    6. '(' → logprob: -10.629866600036621
    7. '.' → logprob: -11.004866600036621
    8. ' ().' → logprob: -13.254866600036621
    9. 'rstrip' → logprob: -13.629866600036621
    10. ' .' → logprob: -14.254866600036621

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -19.5
    4. '
' → logprob: -20.0
    5. '   ' → logprob: -20.5
    6. '\n' → logprob: -21.125
    7. '１' → logprob: -22.0
    8. '``' → logprob: -22.125
    9. '  ' → logprob: -22.25
    10. '\' → logprob: -22.375

Token 122: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.759734732331708e-05
    2. '<|end|>' → logprob: -11.625017166137695
    3. ')
' → logprob: -12.875017166137695
    4. ']' → logprob: -12.875017166137695
    5. '）' → logprob: -13.250017166137695
    6. ' )' → logprob: -14.375017166137695
    7. ')return' → logprob: -15.375017166137695
    8. '')' → logprob: -16.000017166137695
    9. '}' → logprob: -16.000017166137695
    10. '<|end|>' → logprob: -16.250017166137695

Token 123: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21579529345035553
    2. '
' → logprob: -1.9657952785491943
    3. '

' → logprob: -2.9657952785491943
    4. '#' → logprob: -6.965795516967773
    5. '@' → logprob: -7.090795516967773
    6. '\' → logprob: -8.465795516967773
    7. '```' → logprob: -9.340795516967773
    8. '\n' → logprob: -9.465795516967773
    9. '  
' → logprob: -9.715795516967773
    10. '<|end|>' → logprob: -9.965795516967773

Token 124: ' mi' (ID: 3997)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05264558643102646
    2. ' factorial' → logprob: -4.177645683288574
    3. ' solve' → logprob: -4.552645683288574
    4. '_' → logprob: -4.677645683288574
    5. ' calculate' → logprob: -5.927645683288574
    6. ' ' → logprob: -6.302645683288574
    7. ' bfs' → logprob: -6.677645683288574
    8. ' factor' → logprob: -6.677645683288574
    9. ' parse' → logprob: -6.927645683288574
    10. ' compute' → logprob: -7.052645683288574

Token 125: '():
' (ID: 8595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003553385380655527
    2. 'nus' → logprob: -6.25355339050293
    3. 'nim' → logprob: -7.87855339050293
    4. 'nd' → logprob: -8.62855339050293
    5. 'ns' → logprob: -9.00355339050293
    6. 'nut' → logprob: -9.00355339050293
    7. 'ne' → logprob: -9.12855339050293
    8. 'nu' → logprob: -9.12855339050293
    9. 'num' → logprob: -9.12855339050293
    10. 'nable' → logprob: -9.25355339050293

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5528907775878906
    2. ':' → logprob: -1.3028907775878906
    3. 'int' → logprob: -3.4278907775878906
    4. ':int' → logprob: -3.5528907775878906
    5. ' return' → logprob: -3.6778907775878906
    6. '():' → logprob: -4.052890777587891
    7. '(int' → logprob: -4.427890777587891
    8. 'return' → logprob: -5.052890777587891
    9. ':
' → logprob: -5.052890777587891
    10. '):' → logprob: -5.177890777587891

Token 127: ' """
' (ID: 7037)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4983981251716614
    2. 'return' → logprob: -0.9983981251716614
    3. '   ' → logprob: -3.9983980655670166
    4. ' ' → logprob: -6.248398303985596
    5. 'int' → logprob: -6.623398303985596
    6. 'n' → logprob: -7.373398303985596
    7. ' 
' → logprob: -7.748398303985596
    8. '	return' → logprob: -8.248397827148438
    9. '    
' → logprob: -8.373397827148438
    10. 'eturn' → logprob: -8.498397827148438

Token 128: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5946455597877502
    2. 'n' → logprob: -1.7196455001831055
    3. 'nt' → logprob: -2.7196455001831055
    4. 'map' → logprob: -2.8446455001831055
    5. ' map' → logprob: -3.3446455001831055
    6. '   ' → logprob: -3.3446455001831055
    7. 'int' → logprob: -3.3446455001831055
    8. ' return' → logprob: -3.5946455001831055
    9. 'eturn' → logprob: -4.8446455001831055
    10. 'ret' → logprob: -6.5946455001831055

Token 129: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.046115078032016754
    2. ' return' → logprob: -3.5461151599884033
    3. 'n' → logprob: -4.796114921569824
    4. 'r' → logprob: -5.046114921569824
    5. 'ret' → logprob: -7.171114921569824
    6. 'int' → logprob: -8.546114921569824
    7. 'm' → logprob: -9.171114921569824
    8. '   ' → logprob: -9.296114921569824
    9. 'i' → logprob: -9.546114921569824
    10. 'Return' → logprob: -9.796114921569824

Token 130: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10007724165916443
    2. ' une' → logprob: -3.3500771522521973
    3. 'int' → logprob: -3.9750771522521973
    4. ' un' → logprob: -3.9750771522521973
    5. '():' → logprob: -5.225077152252197
    6. 'n' → logprob: -5.225077152252197
    7. 'nt' → logprob: -5.600077152252197
    8. 'une' → logprob: -6.725077152252197
    9. ':' → logprob: -6.850077152252197
    10. ')' → logprob: -6.975077152252197

Token 131: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -1.095216989517212
    2. 'ligne' → logprob: -1.095216989517212
    3. 'int' → logprob: -1.970216989517212
    4. '()' → logprob: -2.345216989517212
    5. 'n' → logprob: -2.845216989517212
    6. 'nt' → logprob: -4.470216751098633
    7. 'l' → logprob: -4.470216751098633
    8. 'line' → logprob: -5.470216751098633
    9. ' line' → logprob: -6.220216751098633
    10. ' ()' → logprob: -6.970216751098633

Token 132: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09127001464366913
    2. '().' → logprob: -2.4662699699401855
    3. ')' → logprob: -7.5912699699401855
    4. '()
' → logprob: -7.7162699699401855
    5. 'de' → logprob: -7.9662699699401855
    6. '())' → logprob: -8.591270446777344
    7. '.strip' → logprob: -8.966270446777344
    8. 'n' → logprob: -9.091270446777344
    9. 'int' → logprob: -9.841270446777344
    10. '.' → logprob: -9.841270446777344

Token 133: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.16163520514965057
    2. ''entrée' → logprob: -1.911635160446167
    3. 'input' → logprob: -7.536635398864746
    4. ' entrée' → logprob: -8.411635398864746
    5. '’entrée' → logprob: -8.411635398864746
    6. 'entr' → logprob: -9.161635398864746
    7. 'ent' → logprob: -9.661635398864746
    8. 'put' → logprob: -10.036635398864746
    9. 'e' → logprob: -10.161635398864746
    10. 'Entr' → logprob: -10.286635398864746

Token 134: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08144372701644897
    2. '().' → logprob: -2.5814437866210938
    3. '()
' → logprob: -6.831443786621094
    4. ')' → logprob: -7.831443786621094
    5. '   ' → logprob: -9.081443786621094
    6. '())' → logprob: -9.081443786621094
    7. 'int' → logprob: -9.206443786621094
    8. '.strip' → logprob: -9.206443786621094
    9. ',' → logprob: -9.456443786621094
    10. '.' → logprob: -9.581443786621094

Token 135: ' et' (ID: 859)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009343295358121395
    2. '()' → logprob: -5.009343147277832
    3. '.split' → logprob: -7.009343147277832
    4. ').' → logprob: -7.134343147277832
    5. ')' → logprob: -7.134343147277832
    6. '.' → logprob: -9.634343147277832
    7. '   ' → logprob: -11.384343147277832
    8. '()
' → logprob: -11.634343147277832
    9. ' .' → logprob: -11.634343147277832
    10. '.strip' → logprob: -11.759343147277832

Token 136: ' convert' (ID: 8452)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4383939504623413
    2. ' return' → logprob: -1.1883939504623413
    3. ' retourne' → logprob: -3.438394069671631
    4. 'ret' → logprob: -5.313394069671631
    5. 'eturn' → logprob: -5.313394069671631
    6. ' ren' → logprob: -5.688394069671631
    7. 'ren' → logprob: -5.938394069671631
    8. ' la' → logprob: -8.063393592834473
    9. 'int' → logprob: -8.188393592834473
    10. ' retour' → logprob: -8.313393592834473

Token 137: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0001370320824207738
    2. 'i' → logprob: -9.000137329101562
    3. ' it' → logprob: -12.250137329101562
    4. '()' → logprob: -12.375137329101562
    5. 't' → logprob: -12.625137329101562
    6. 'iert' → logprob: -15.250137329101562
    7. 'e' → logprob: -15.375137329101562
    8. 'ît' → logprob: -15.875137329101562
    9. 'return' → logprob: -16.000137329101562
    10. 'et' → logprob: -16.000137329101562

Token 138: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7028512954711914
    2. ' en' → logprob: -0.7028512954711914
    3. 'en' → logprob: -4.827851295471191
    4. 'la' → logprob: -7.327851295471191
    5. ' ()' → logprob: -8.202851295471191
    6. '   ' → logprob: -8.452851295471191
    7. ' la' → logprob: -9.327851295471191
    8. 'l' → logprob: -9.577851295471191
    9. ' l' → logprob: -9.702851295471191
    10. ' un' → logprob: -9.827851295471191

Token 139: ' éléments' (ID: 57375)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.7272862792015076
    2. 'ent' → logprob: -1.8522863388061523
    3. 'en' → logprob: -2.1022863388061523
    4. 'la' → logprob: -2.1022863388061523
    5. 'entrée' → logprob: -3.7272863388061523
    6. 'int' → logprob: -4.227286338806152
    7. ' entier' → logprob: -4.352286338806152
    8. '()' → logprob: -4.602286338806152
    9. ' la' → logprob: -5.227286338806152
    10. 'l' → logprob: -5.227286338806152

Token 140: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.07415830343961716
    2. '()' → logprob: -2.699158191680908
    3. 'en' → logprob: -5.574158191680908
    4. '().' → logprob: -8.949158668518066
    5. '   ' → logprob: -9.574158668518066
    6. '(en' → logprob: -9.949158668518066
    7. '_en' → logprob: -10.574158668518066
    8. ' ' → logprob: -10.824158668518066
    9. '()[' → logprob: -11.449158668518066
    10. '[]' → logprob: -11.574158668518066

Token 141: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.9429764151573181
    2. 'ent' → logprob: -1.567976474761963
    3. 'int' → logprob: -2.192976474761963
    4. ' integers' → logprob: -2.192976474761963
    5. 'ints' → logprob: -2.317976474761963
    6. ' int' → logprob: -3.317976474761963
    7. 'inte' → logprob: -3.817976474761963
    8. ' list' → logprob: -4.817976474761963
    9. ' liste' → logprob: -5.942976474761963
    10. 'list' → logprob: -6.067976474761963

Token 142: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.002301674336194992
    2. 'te' → logprob: -6.5023016929626465
    3. 'ti' → logprob: -8.127301216125488
    4. ' t' → logprob: -9.252301216125488
    5. ' te' → logprob: -10.002301216125488
    6. ' map' → logprob: -10.002301216125488
    7. 'teger' → logprob: -10.252301216125488
    8. 'tiers' → logprob: -10.502301216125488
    9. 'tir' → logprob: -10.752301216125488
    10. '	t' → logprob: -10.877301216125488

Token 143: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031557343900203705
    2. '().' → logprob: -6.003155708312988
    3. ' ()' → logprob: -7.753155708312988
    4. '():' → logprob: -9.378155708312988
    5. '()[' → logprob: -10.628155708312988
    6. '(' → logprob: -10.753155708312988
    7. '.' → logprob: -10.753155708312988
    8. '[]' → logprob: -10.878155708312988
    9. '()
' → logprob: -11.128155708312988
    10. 'split' → logprob: -11.378155708312988

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0906715989112854
    2. ' return' → logprob: -3.2156715393066406
    3. 'return' → logprob: -3.4656715393066406
    4. '()' → logprob: -4.715671539306641
    5. ' ' → logprob: -6.465671539306641
    6. '[]' → logprob: -6.715671539306641
    7. '    
' → logprob: -6.715671539306641
    8. '()
' → logprob: -7.340671539306641
    9. '	return' → logprob: -7.840671539306641
    10. ')' → logprob: -8.46567153930664

Token 145: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5154259204864502
    2. 'return' → logprob: -1.2654259204864502
    3. ' return' → logprob: -2.14042592048645
    4. ' ' → logprob: -7.015425682067871
    5. '()' → logprob: -7.515425682067871
    6. '    
' → logprob: -7.890425682067871
    7. '	return' → logprob: -8.515425682067871
    8. '  
' → logprob: -8.765425682067871
    9. '
' → logprob: -8.890425682067871
    10. '()
' → logprob: -9.015425682067871

Token 146: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03780654817819595
    2. ':' → logprob: -3.537806510925293
    3. '()' → logprob: -5.287806510925293
    4. '():
' → logprob: -7.162806510925293
    5. '   ' → logprob: -7.287806510925293
    6. ':list' → logprob: -7.537806510925293
    7. '[' → logprob: -8.537806510925293
    8. '()[' → logprob: -8.537806510925293
    9. '[]' → logprob: -8.787806510925293
    10. ' list' → logprob: -9.287806510925293

Token 147: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04503743350505829
    2. ' list' → logprob: -3.4200375080108643
    3. ' map' → logprob: -5.420037269592285
    4. 'list' → logprob: -5.920037269592285
    5. ' []' → logprob: -6.170037269592285
    6. '    ' → logprob: -7.295037269592285
    7. '[]' → logprob: -7.420037269592285
    8. '  ' → logprob: -8.295037269592285
    9. 'map' → logprob: -8.295037269592285
    10. ' ' → logprob: -9.045037269592285

Token 148: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.38717660307884216
    2. 'list' → logprob: -1.1371766328811646
    3. 'List' → logprob: -8.512176513671875
    4. '   ' → logprob: -10.012176513671875
    5. ' map' → logprob: -10.262176513671875
    6. 'map' (adapté à ' map') → logprob: -11.262176513671875
    7. ' List' → logprob: -12.012176513671875
    8. ' tuple' → logprob: -13.512176513671875
    9. 'lis' → logprob: -14.387176513671875
    10. ' liste' → logprob: -14.387176513671875

Token 149: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04617062583565712
    2. '(lambda' → logprob: -3.171170711517334
    3. '(int' → logprob: -6.046170711517334
    4. '(str' → logprob: -8.171170234680176
    5. '(
' → logprob: -8.296170234680176
    6. '(list' → logprob: -9.296170234680176
    7. '(object' → logprob: -9.671170234680176
    8. '(None' → logprob: -10.421170234680176
    9. '(

' → logprob: -10.796170234680176
    10. '(return' → logprob: -11.546170234680176

Token 150: ' it' (ID: 480)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.12700875103473663
    2. 'map' → logprob: -2.1270086765289307
    3. '   ' → logprob: -10.502008438110352
    4. 'm' → logprob: -10.627008438110352
    5. ' ' → logprob: -10.627008438110352
    6. '	map' → logprob: -13.752008438110352
    7. ' ' → logprob: -13.877008438110352
    8. '  ' → logprob: -14.002008438110352
    9. '(map' → logprob: -14.627008438110352
    10. ' m' → logprob: -14.877008438110352

Token 151: 'érateur' (ID: 108528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03493330627679825
    2. '(int' → logprob: -3.90993332862854
    3. '(map' → logprob: -5.284933090209961
    4. '(
' → logprob: -6.034933090209961
    5. '(lambda' → logprob: -6.284933090209961
    6. ' map' → logprob: -6.409933090209961
    7. 'map' → logprob: -6.659933090209961
    8. '<int' → logprob: -7.034933090209961
    9. '_map' → logprob: -8.534933090209961
    10. 'int' → logprob: -9.034933090209961

Token 152: ' des' (ID: 731)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5499114990234375
    2. '(' → logprob: -0.9249114990234375
    3. '(lambda' → logprob: -3.9249114990234375
    4. '<int' → logprob: -5.6749114990234375
    5. '[int' → logprob: -6.5499114990234375
    6. '(
' → logprob: -6.7999114990234375
    7. '(map' → logprob: -8.799911499023438
    8. '=int' → logprob: -9.299911499023438
    9. '(str' → logprob: -9.299911499023438
    10. '(object' → logprob: -9.549911499023438

Token 153: ' ent' (ID: 1121)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.13152647018432617
    2. 'int' → logprob: -2.256526470184326
    3. ' map' → logprob: -4.006526470184326
    4. 'map' → logprob: -8.506526947021484
    5. '[int' → logprob: -9.881526947021484
    6. ' ints' → logprob: -10.631526947021484
    7. ' ' → logprob: -11.131526947021484
    8. ' integers' → logprob: -11.631526947021484
    9. 'inte' → logprob: -11.756526947021484
    10. 'ints' → logprob: -11.881526947021484

Token 154: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00022022522171027958
    2. 'ier' → logprob: -9.12522029876709
    3. 'ints' → logprob: -10.25022029876709
    4. 'ières' → logprob: -10.37522029876709
    5. 'eurs' → logprob: -12.00022029876709
    6. 'eg' → logprob: -12.12522029876709
    7. 'gers' → logprob: -12.12522029876709
    8. 'ière' → logprob: -12.25022029876709
    9. 'i' → logprob: -12.37522029876709
    10. 'ieurs' → logprob: -12.75022029876709

Token 155: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9866021871566772
    2. '(int' → logprob: -1.1116021871566772
    3. '(' → logprob: -1.2366021871566772
    4. '(
' → logprob: -5.111602306365967
    5. '(map' → logprob: -7.486602306365967
    6. '   ' → logprob: -7.986602306365967
    7. 'int' → logprob: -8.486601829528809
    8. '<int' → logprob: -8.986601829528809
    9. '()
' → logprob: -9.486601829528809
    10. '[int' → logprob: -9.861601829528809

Token 156: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4752669334411621
    2. ' int' → logprob: -0.9752669334411621
    3. ' map' → logprob: -7.725266933441162
    4. ' la' → logprob: -8.22526741027832
    5. 'ints' → logprob: -9.10026741027832
    6. ' ' → logprob: -9.60026741027832
    7. '(int' → logprob: -9.72526741027832
    8. 'map' → logprob: -9.85026741027832
    9. '[int' → logprob: -10.10026741027832
    10. 'str' → logprob: -10.35026741027832

Token 157: ' ligne' (ID: 19583)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4702592194080353
    2. ' input' → logprob: -1.345259189605713
    3. 'ligne' → logprob: -2.970259189605713
    4. ' ligne' → logprob: -3.845259189605713
    5. 'liste' → logprob: -4.345259189605713
    6. 'list' → logprob: -4.345259189605713
    7. ' liste' → logprob: -5.095259189605713
    8. 'map' → logprob: -5.720259189605713
    9. ' map' → logprob: -6.470259189605713
    10. ' list' → logprob: -6.970259189605713

Token 158: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00581976817920804
    2. '(' → logprob: -5.755819797515869
    3. '   ' → logprob: -6.630819797515869
    4. '(int' → logprob: -7.380819797515869
    5. '()
' → logprob: -8.630819320678711
    6. 'int' → logprob: -8.880819320678711
    7. ' ()' → logprob: -9.005819320678711
    8. 'def' → logprob: -10.380819320678711
    9. '().' → logprob: -10.630819320678711
    10. '(
' → logprob: -10.630819320678711

Token 159: 'ue' (ID: 466)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.10629460960626602
    2. 'ines' → logprob: -3.231294631958008
    3. 'igne' → logprob: -4.106294631958008
    4. 'iné' → logprob: -4.356294631958008
    5. 'inea' → logprob: -5.106294631958008
    6. 'e' → logprob: -5.356294631958008
    7. '   ' → logprob: -5.606294631958008
    8. 'inie' → logprob: -5.731294631958008
    9. 'in' → logprob: -6.106294631958008
    10. 'ignes' → logprob: -6.106294631958008

Token 160: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008195740170776844
    2. '   ' → logprob: -5.508195877075195
    3. '(' → logprob: -5.758195877075195
    4. '()
' → logprob: -7.508195877075195
    5. ' ()' → logprob: -9.508195877075195
    6. 'return' → logprob: -9.508195877075195
    7. ')' → logprob: -9.883195877075195
    8. 'def' → logprob: -10.133195877075195
    9. '(
' → logprob: -10.883195877075195
    10. '()`' → logprob: -11.008195877075195

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07561186701059341
    2. 'return' → logprob: -3.4506118297576904
    3. ' return' → logprob: -4.2006120681762695
    4. '    
' → logprob: -4.5756120681762695
    5. '()' → logprob: -5.7006120681762695
    6. ' ' → logprob: -5.7006120681762695
    7. ' 
' → logprob: -5.9506120681762695
    8. '    ' → logprob: -6.4506120681762695
    9. '  ' → logprob: -6.9506120681762695
    10. ')' → logprob: -7.2006120681762695

Token 162: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6068614721298218
    2. 'return' → logprob: -1.1068614721298218
    3. ' return' → logprob: -2.1068615913391113
    4. ')' → logprob: -6.856861591339111
    5. '    
' → logprob: -7.106861591339111
    6. '
' → logprob: -8.606861114501953
    7. '	return' → logprob: -8.731861114501953
    8. ' 
' → logprob: -9.231861114501953
    9. ':return' → logprob: -9.231861114501953
    10. ' ' → logprob: -9.731861114501953

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023070288822054863
    2. 'return' → logprob: -3.8980703353881836
    3. ' return' → logprob: -6.023070335388184
    4. '   ' → logprob: -9.898070335388184
    5. '	return' → logprob: -10.523070335388184
    6. ' ' → logprob: -11.898070335388184
    7. '    
' → logprob: -12.273070335388184
    8. '  ' → logprob: -12.773070335388184
    9. '       ' → logprob: -13.148070335388184
    10. '    ' → logprob: -13.148070335388184

Token 164: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012673631310462952
    2. ' return' → logprob: -4.387673854827881
    3. 'map' → logprob: -9.012673377990723
    4. '   ' → logprob: -10.512673377990723
    5. 'ret' → logprob: -12.262673377990723
    6. ' map' → logprob: -12.387673377990723
    7. ' ' → logprob: -12.887673377990723
    8. 'm' → logprob: -13.387673377990723
    9. 'r' → logprob: -14.387673377990723
    10. '  ' → logprob: -14.887673377990723

Token 165: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.04860168322920799
    2. ' map' → logprob: -3.0486016273498535
    3. '   ' → logprob: -12.048602104187012
    4. '  ' → logprob: -12.673602104187012
    5. ' ' → logprob: -13.048602104187012
    6. 'm' → logprob: -13.173602104187012
    7. '	map' → logprob: -13.798602104187012
    8. '(map' → logprob: -16.048601150512695
    9. '    ' → logprob: -16.923601150512695
    10. ' ' → logprob: -18.298601150512695

Token 166: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005816269549541175
    2. '(' → logprob: -7.500581741333008
    3. 'int' → logprob: -10.500581741333008
    4. '(
' → logprob: -15.375581741333008
    5. '[int' → logprob: -15.375581741333008
    6. '<int' → logprob: -15.625581741333008
    7. '```' → logprob: -15.750581741333008
    8. ' int' → logprob: -15.875581741333008
    9. '=int' → logprob: -16.750581741333008
    10. ' (' → logprob: -17.000581741333008

Token 167: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.35952380299568176
    2. ',' → logprob: -1.6095237731933594
    3. '(input' → logprob: -2.4845237731933594
    4. ',input' → logprob: -4.734523773193359
    5. '(' → logprob: -5.109523773193359
    6. ')' → logprob: -6.234523773193359
    7. ' (' → logprob: -6.984523773193359
    8. 'sys' → logprob: -7.484523773193359
    9. 'input' → logprob: -8.98452377319336
    10. '(),' → logprob: -9.23452377319336

Token 168: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1800777018070221
    2. ' input' → logprob: -1.8050776720046997
    3. 'sys' → logprob: -8.43007755279541
    4. ' sys' → logprob: -9.18007755279541
    5. '(input' → logprob: -12.55507755279541
    6. ')' → logprob: -13.05507755279541
    7. ' ' → logprob: -13.05507755279541
    8. '	input' → logprob: -13.68007755279541
    9. '   ' → logprob: -14.30507755279541
    10. ',input' → logprob: -15.11757755279541

Token 169: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00021760274830739945
    2. '()' → logprob: -8.50021743774414
    3. '())' → logprob: -11.37521743774414
    4. ' ().' → logprob: -13.25021743774414
    5. '()
' → logprob: -14.87521743774414
    6. ')' → logprob: -15.37521743774414
    7. '(' → logprob: -15.87521743774414
    8. ' ()' → logprob: -16.37521743774414
    9. ' ' → logprob: -17.50021743774414
    10. '()`' → logprob: -17.75021743774414

Token 170: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020389800192788243
    2. 'strip' → logprob: -8.500204086303711
    3. ' split' → logprob: -15.875204086303711
    4. 'spl' → logprob: -16.00020408630371
    5. 's' → logprob: -16.50020408630371
    6. 'rstrip' → logprob: -17.12520408630371
    7. 'sp' → logprob: -17.75020408630371
    8. '(split' → logprob: -18.37520408630371
    9. '.split' → logprob: -20.00020408630371
    10. '_split' → logprob: -21.87520408630371

Token 171: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0013360745506361127
    2. '()' → logprob: -6.751336097717285
    3. ')' → logprob: -8.751336097717285
    4. '(' → logprob: -12.126336097717285
    5. ' ())' → logprob: -14.001336097717285
    6. '()))' → logprob: -14.126336097717285
    7. '())
' → logprob: -15.251336097717285
    8. '()]' → logprob: -16.37633514404297
    9. '());' → logprob: -16.50133514404297
    10. '(),' → logprob: -16.50133514404297

Token 172: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05971319228410721
    2. 'd' → logprob: -3.684713125228882
    3. '\' → logprob: -3.934713125228882
    4. '\n' → logprob: -5.184713363647461
    5. '#' → logprob: -5.309713363647461
    6. 'n' → logprob: -6.434713363647461
    7. '<|end|>' → logprob: -8.559713363647461
    8. '
' → logprob: -8.809713363647461
    9. 'de' → logprob: -9.434713363647461
    10. '    
' → logprob: -9.559713363647461

Token 173: ' ii' (ID: 28354)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.1628552675247192
    2. 'm' → logprob: -1.5378552675247192
    3. 'i' → logprob: -1.9128552675247192
    4. ' main' → logprob: -2.2878551483154297
    5. 'p' → logprob: -3.1628551483154297
    6. 's' → logprob: -3.6628551483154297
    7. 'n' → logprob: -3.7878551483154297
    8. 'ii' → logprob: -3.9128551483154297
    9. 'solve' → logprob: -4.03785514831543
    10. 'int' → logprob: -4.03785514831543

Token 174: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07491286844015121
    2. '()' → logprob: -2.6999127864837646
    3. 'n' → logprob: -5.574913024902344
    4. '():
' → logprob: -7.074913024902344
    5. 'nt' → logprob: -9.199913024902344
    6. ' ()' → logprob: -9.699913024902344
    7. 'ut' → logprob: -9.949913024902344
    8. 'u' → logprob: -10.199913024902344
    9. ' ():' → logprob: -10.449913024902344
    10. '()>' → logprob: -11.074913024902344

Token 175: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0012349952012300491
    2. '():
' → logprob: -7.501235008239746
    3. ':' → logprob: -8.001235008239746
    4. '()' → logprob: -8.001235008239746
    5. '):' → logprob: -12.001235008239746
    6. ' ():' → logprob: -12.501235008239746
    7. ':
' → logprob: -14.501235008239746
    8. '(' → logprob: -14.751235008239746
    9. '():
' → logprob: -15.626235008239746
    10. 'int' → logprob: -16.12623405456543

Token 176: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10456065088510513
    2. 'int' → logprob: -3.479560613632202
    3. 'return' → logprob: -3.729560613632202
    4. ' return' → logprob: -4.104560852050781
    5. '    ' → logprob: -4.354560852050781
    6. ' ' → logprob: -5.479560852050781
    7. '    
' → logprob: -5.604560852050781
    8. ':' → logprob: -6.479560852050781
    9. ' 
' → logprob: -6.729560852050781
    10. '  ' → logprob: -7.229560852050781

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011420666240155697
    2. ')' → logprob: -4.761420726776123
    3. '"""' → logprob: -6.761420726776123
    4. '()' → logprob: -7.261420726776123
    5. 'def' → logprob: -8.511420249938965
    6. 'return' → logprob: -8.761420249938965
    7. '```' → logprob: -9.011420249938965
    8. '):' → logprob: -9.136420249938965
    9. ' return' → logprob: -9.636420249938965
    10. ':' → logprob: -10.011420249938965

Token 178: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007511387579143047
    2. '   ' → logprob: -5.382511615753174
    3. ' return' → logprob: -6.507511615753174
    4. 'def' → logprob: -7.007511615753174
    5. 'int' → logprob: -7.882511615753174
    6. '"""' → logprob: -10.382511138916016
    7. '
' → logprob: -11.257511138916016
    8. '()' → logprob: -11.257511138916016
    9. '    
' → logprob: -11.632511138916016
    10. '```' → logprob: -11.757511138916016

Token 179: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.226443812251091
    2. 'int' → logprob: -1.6014437675476074
    3. 'n' → logprob: -8.476444244384766
    4. 'nt' → logprob: -8.601444244384766
    5. '()
' → logprob: -8.601444244384766
    6. '():' → logprob: -8.851444244384766
    7. '(int' → logprob: -9.851444244384766
    8. 'input' → logprob: -10.476444244384766
    9. '=int' → logprob: -10.476444244384766
    10. 't' → logprob: -11.101444244384766

Token 180: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9877657890319824
    2. '():' → logprob: -1.3627657890319824
    3. 'ligne' → logprob: -1.7377657890319824
    4. 'n' → logprob: -2.6127657890319824
    5. 'int' → logprob: -2.9877657890319824
    6. 'l' → logprob: -3.2377657890319824
    7. ' ligne' → logprob: -3.6127657890319824
    8. 'line' → logprob: -5.987765789031982
    9. 'e' → logprob: -7.362765789031982
    10. '()
' → logprob: -8.36276626586914

Token 181: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -4.3464544432936236e-05
    2. '()
' → logprob: -11.500043869018555
    3. '()>' → logprob: -11.750043869018555
    4. '().' → logprob: -12.500043869018555
    5. '(' → logprob: -12.625043869018555
    6. '()[' → logprob: -13.000043869018555
    7. '()<' → logprob: -13.000043869018555
    8. ' ()' → logprob: -13.500043869018555
    9. '():' → logprob: -13.500043869018555
    10. '()==' → logprob: -14.125043869018555

Token 182: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4725533127784729
    2. 'entrée' → logprob: -1.5975532531738281
    3. 'n' → logprob: -2.222553253173828
    4. ''entrée' → logprob: -2.972553253173828
    5. ' input' → logprob: -5.597553253173828
    6. '()' → logprob: -5.597553253173828
    7. 'put' → logprob: -5.722553253173828
    8. 'code' → logprob: -7.097553253173828
    9. '’entrée' → logprob: -7.222553253173828
    10. '_input' → logprob: -7.222553253173828

Token 183: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010652327910065651
    2. '()
' → logprob: -9.875106811523438
    3. ' ()' → logprob: -11.375106811523438
    4. '():' → logprob: -11.500106811523438
    5. '(){' → logprob: -12.125106811523438
    6. '().' → logprob: -12.375106811523438
    7. '()<' → logprob: -12.625106811523438
    8. 'standard' → logprob: -12.875106811523438
    9. '()>' → logprob: -13.375106811523438
    10. 's' → logprob: -13.375106811523438

Token 184: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001982044894248247
    2. '():' → logprob: -6.37698221206665
    3. 'def' → logprob: -8.501981735229492
    4. '()
' → logprob: -11.126981735229492
    5. '().' → logprob: -11.376981735229492
    6. ':' → logprob: -11.751981735229492
    7. ' ()' → logprob: -11.876981735229492
    8. ')' → logprob: -12.501981735229492
    9. '():
' → logprob: -12.626981735229492
    10. '(){' → logprob: -12.626981735229492

Token 185: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2992549538612366
    2. 'int' → logprob: -2.049254894256592
    3. 'n' → logprob: -2.799254894256592
    4. ' return' → logprob: -2.924254894256592
    5. 'convert' → logprob: -5.299254894256592
    6. ' int' → logprob: -6.299254894256592
    7. ' retourne' → logprob: -6.299254894256592
    8. 'eturn' → logprob: -6.299254894256592
    9. 'ren' → logprob: -7.049254894256592
    10. 'returns' → logprob: -7.174254894256592

Token 186: ' convert' (ID: 8452)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2469438314437866
    2. 'n' → logprob: -1.4969438314437866
    3. ' return' → logprob: -1.7469438314437866
    4. 'return' → logprob: -1.8719438314437866
    5. 'eturn' → logprob: -1.9969438314437866
    6. ' int' → logprob: -5.246943950653076
    7. 'nt' → logprob: -5.246943950653076
    8. '=int' → logprob: -6.121943950653076
    9. 'convert' → logprob: -6.246943950653076
    10. 'r' → logprob: -6.871943950653076

Token 187: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -9.849109119386412e-06
    2. ' it' → logprob: -12.250009536743164
    3. 'i' → logprob: -13.750009536743164
    4. 't' → logprob: -13.875009536743164
    5. 'ert' → logprob: -14.375009536743164
    6. 'ît' → logprob: -14.375009536743164
    7. 'ist' → logprob: -15.250009536743164
    8. 'ит' → logprob: -15.750009536743164
    9. '_it' → logprob: -15.875009536743164
    10. 'ït' → logprob: -15.875009536743164

Token 188: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.04323839396238327
    2. 'en' → logprob: -3.168238401412964
    3. '()' → logprob: -9.293238639831543
    4. 'int' → logprob: -9.418238639831543
    5. '   ' → logprob: -10.543238639831543
    6. ' in' → logprob: -11.543238639831543
    7. ' à' → logprob: -11.918238639831543
    8. 'in' → logprob: -12.668238639831543
    9. '(int' → logprob: -12.793238639831543
    10. 'ent' → logprob: -13.168238639831543

Token 189: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015245062531903386
    2. ' int' → logprob: -6.501524448394775
    3. 'ent' → logprob: -11.001524925231934
    4. 'integer' → logprob: -13.376524925231934
    5. 'n' → logprob: -14.126524925231934
    6. 'nt' → logprob: -14.126524925231934
    7. '<int' → logprob: -14.251524925231934
    8. '=int' → logprob: -14.626524925231934
    9. '[int' → logprob: -15.251524925231934
    10. ':int' → logprob: -15.376524925231934

Token 190: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -5.7053759519476444e-05
    2. '()
' → logprob: -10.250057220458984
    3. '().' → logprob: -12.125057220458984
    4. ' ()' → logprob: -12.250057220458984
    5. 'def' → logprob: -12.625057220458984
    6. ')' → logprob: -12.875057220458984
    7. '():' → logprob: -13.250057220458984
    8. '   ' → logprob: -13.875057220458984
    9. '(' → logprob: -14.250057220458984
    10. '()`' → logprob: -14.625057220458984

Token 191: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5308271646499634
    2. '   ' → logprob: -1.1558271646499634
    3. '():' → logprob: -2.780827045440674
    4. '()
' → logprob: -3.905827045440674
    5. '():
' → logprob: -4.780827045440674
    6. ')' → logprob: -5.655827045440674
    7. 'return' → logprob: -6.905827045440674
    8. ' return' → logprob: -7.780827045440674
    9. ':
' → logprob: -7.905827045440674
    10. ':' → logprob: -8.155827522277832

Token 192: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006758829578757286
    2. 'return' → logprob: -5.381758689880371
    3. ' return' → logprob: -6.756758689880371
    4. ')' → logprob: -7.756758689880371
    5. ' ' → logprob: -9.006758689880371
    6. ':return' → logprob: -9.381758689880371
    7. '  ' → logprob: -9.506758689880371
    8. '()' → logprob: -10.006758689880371
    9. '
' → logprob: -10.381758689880371
    10. '    ' → logprob: -10.381758689880371

Token 193: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.13369320333003998
    2. '()' → logprob: -2.133693218231201
    3. ':' → logprob: -5.258693218231201
    4. ' ()' → logprob: -6.883693218231201
    5. ' ():' → logprob: -8.258692741394043
    6. '   ' → logprob: -9.258692741394043
    7. ' :' → logprob: -9.383692741394043
    8. '(' → logprob: -10.508692741394043
    9. '():
' → logprob: -11.008692741394043
    10. ' =' → logprob: -11.758692741394043

Token 194: '       ' (ID: 309)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.013510769233107567
    2. '   ' → logprob: -5.013510704040527
    3. ' int' → logprob: -5.013510704040527
    4. '(int' → logprob: -9.138510704040527
    5. ':int' → logprob: -11.638510704040527
    6. '=int' → logprob: -13.013510704040527
    7. ' ' → logprob: -13.763510704040527
    8. 'return' → logprob: -14.013510704040527
    9. '  ' → logprob: -14.013510704040527
    10. '    ' → logprob: -14.138510704040527

Token 195: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.0015024791937321424
    2. ' int' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.126502990722656
    4. 'i' → logprob: -20.751502990722656
    5. ' ' → logprob: -21.251502990722656
    6. '(int' → logprob: -21.376502990722656
    7. '  ' → logprob: -21.501502990722656
    8. ':int' → logprob: -21.626502990722656
    9. '    ' → logprob: -21.876502990722656
    10. 'in' → logprob: -21.876502990722656

Token 196: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.64311683177948
    2. '():' → logprob: -0.76811683177948
    3. '()' → logprob: -4.6431169509887695
    4. ' :' → logprob: -8.14311695098877
    5. ':
' → logprob: -9.14311695098877
    6. '   ' → logprob: -9.26811695098877
    7. ':int' → logprob: -9.26811695098877
    8. '():
' → logprob: -9.64311695098877
    9. '):' → logprob: -10.51811695098877
    10. ' =' → logprob: -10.51811695098877

Token 197: ' l' (ID: 305)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06197093799710274
    2. 'int' → logprob: -2.8119709491729736
    3. '   ' → logprob: -13.186970710754395
    4. ' ' → logprob: -14.311970710754395
    5. '(int' → logprob: -15.561970710754395
    6. '	int' → logprob: -15.811970710754395
    7. '    ' → logprob: -16.43697166442871
    8. ' ' → logprob: -16.43697166442871
    9. '  ' → logprob: -16.56197166442871
    10. '=int' → logprob: -16.81197166442871

Token 198: ''ent' (ID: 53422)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -1.184719443321228
    2. 'int' → logprob: -1.309719443321228
    3. 'e' → logprob: -1.934719443321228
    4. '=int' → logprob: -2.9347195625305176
    5. 'input' → logprob: -3.0597195625305176
    6. '   ' → logprob: -3.6847195625305176
    7. 'en' → logprob: -3.9347195625305176
    8. 'ent' → logprob: -4.184719562530518
    9. 'ecture' → logprob: -4.184719562530518
    10. 'ire' → logprob: -4.559719562530518

Token 199: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.13198162615299225
    2. 'e' → logprob: -2.506981611251831
    3. 'eger' → logprob: -4.75698184967041
    4. 'ière' → logprob: -4.75698184967041
    5. 'er' → logprob: -5.13198184967041
    6. 'érieur' → logprob: -5.25698184967041
    7. 'égr' → logprob: -5.63198184967041
    8. 'i' → logprob: -6.25698184967041
    9. 'iere' → logprob: -7.13198184967041
    10. ')' → logprob: -7.13198184967041

Token 200: ' lu' (ID: 8620)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004541486850939691
    2. ')' → logprob: -8.50045394897461
    3. '()
' → logprob: -8.62545394897461
    4. ' ()' → logprob: -11.00045394897461
    5. '<|end|>' → logprob: -11.50045394897461
    6. '   ' → logprob: -11.62545394897461
    7. '(' → logprob: -11.62545394897461
    8. '()`' → logprob: -12.50045394897461
    9. '().' → logprob: -12.62545394897461
    10. 'def' → logprob: -12.62545394897461

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01353604905307293
    2. ')' → logprob: -4.388535976409912
    3. 'return' → logprob: -7.888535976409912
    4. '()' → logprob: -8.88853645324707
    5. '    
' → logprob: -8.88853645324707
    6. ' return' → logprob: -9.26353645324707
    7. ')
' → logprob: -10.13853645324707
    8. 'def' → logprob: -10.26353645324707
    9. '  
' → logprob: -10.26353645324707
    10. ' ' → logprob: -10.76353645324707

Token 203: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024311232846230268
    2. 'return' → logprob: -8.750243186950684
    3. ')' → logprob: -9.750243186950684
    4. ' return' → logprob: -11.000243186950684
    5. '    ' → logprob: -12.875243186950684
    6. '"""' → logprob: -13.000243186950684
    7. '```' → logprob: -13.750243186950684
    8. '  ' → logprob: -14.125243186950684
    9. ' ' → logprob: -14.375243186950684
    10. '   ' → logprob: -14.375243186950684

Token 204: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10035645216703415
    2. '   ' → logprob: -2.350356340408325
    3. ' return' → logprob: -8.975356101989746
    4. 'int' → logprob: -10.725356101989746
    5. '  ' → logprob: -14.975356101989746
    6. '```' → logprob: -15.225356101989746
    7. '	return' → logprob: -15.600356101989746
    8. 'ret' → logprob: -15.600356101989746
    9. '    
' → logprob: -15.725356101989746
    10. ' ' → logprob: -16.100357055664062

Token 205: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.8802491215174086e-05
    2. ' return' → logprob: -11.125028610229492
    3. 'int' → logprob: -11.250028610229492
    4. '   ' → logprob: -13.875028610229492
    5. '
' → logprob: -17.750028610229492
    6. 'try' → logprob: -17.750028610229492
    7. 'ret' → logprob: -18.250028610229492
    8. '	return' → logprob: -19.750028610229492
    9. '    
' → logprob: -20.625028610229492
    10. 'eturn' → logprob: -20.750028610229492

Token 206: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0052360063418745995
    2. 'int' → logprob: -5.2552361488342285
    3. ' ' → logprob: -13.38023567199707
    4. ' in' → logprob: -15.00523567199707
    5. '  ' → logprob: -16.25523567199707
    6. '(int' → logprob: -16.63023567199707
    7. ' ' → logprob: -16.75523567199707
    8. ' i' → logprob: -16.75523567199707
    9. '	int' → logprob: -17.25523567199707
    10. '   ' → logprob: -18.38023567199707

Token 207: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04859691113233566
    2. '(' → logprob: -3.0485968589782715
    3. '(sys' → logprob: -12.04859733581543
    4. '()' → logprob: -13.42359733581543
    5. ' (' → logprob: -13.79859733581543
    6. '(
' → logprob: -14.42359733581543
    7. '(inp' → logprob: -16.04859733581543
    8. '(open' → logprob: -16.17359733581543
    9. '(in' → logprob: -16.42359733581543
    10. 'input' → logprob: -16.42359733581543

Token 208: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0003485745983198285
    2. '()' → logprob: -8.000349044799805
    3. '()))' → logprob: -12.000349044799805
    4. ')' → logprob: -12.500349044799805
    5. ' ())' → logprob: -13.250349044799805
    6. '())
' → logprob: -13.750349044799805
    7. '().' → logprob: -15.750349044799805
    8. '();)' → logprob: -16.500349044799805
    9. '(' → logprob: -16.750349044799805
    10. '()
' → logprob: -17.125349044799805

Token 209: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00016563729150220752
    2. '#' → logprob: -9.750165939331055
    3. 'class' → logprob: -10.125165939331055
    4. 'n' → logprob: -10.750165939331055
    5. '\' → logprob: -11.250165939331055
    6. 'd' → logprob: -11.625165939331055
    7. '
' → logprob: -11.750165939331055
    8. '@' → logprob: -12.375165939331055
    9. 'from' → logprob: -12.750165939331055
    10. '\n' → logprob: -13.000165939331055

Token 210: ' i' (ID: 575)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1081472635269165
    2. ' solve' → logprob: -2.983147144317627
    3. 'main' → logprob: -3.733147144317627
    4. 'solve' → logprob: -4.983147144317627
    5. ' dfs' → logprob: -5.108147144317627
    6. 's' → logprob: -5.608147144317627
    7. ' ma' → logprob: -6.108147144317627
    8. ' bfs' → logprob: -6.358147144317627
    9. 'dfs' → logprob: -6.983147144317627
    10. ' factor' → logprob: -7.358147144317627

Token 211: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9823175072669983
    2. 'n' → logprob: -1.1073174476623535
    3. 's' → logprob: -1.4823174476623535
    4. 'l' → logprob: -3.9823174476623535
    5. 'a' → logprob: -4.6073174476623535
    6. 'p' → logprob: -4.9823174476623535
    7. 'nit' → logprob: -5.4823174476623535
    8. 'm' → logprob: -5.7323174476623535
    9. 'ni' → logprob: -6.1073174476623535
    10. 'nt' → logprob: -6.2323174476623535

Token 212: '(n' (ID: 2406)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.36049309372901917
    2. '()' → logprob: -1.7354930639266968
    3. 'n' → logprob: -2.2354931831359863
    4. 'p' → logprob: -4.610493183135986
    5. 't' → logprob: -6.235493183135986
    6. '2' → logprob: -6.360493183135986
    7. 'l' → logprob: -6.735493183135986
    8. 'v' → logprob: -6.735493183135986
    9. 'tuple' → logprob: -7.610493183135986
    10. 'd' → logprob: -8.110492706298828

Token 213: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002854328602552414
    2. ',' → logprob: -6.502854347229004
    3. ')' → logprob: -6.752854347229004
    4. '):
' → logprob: -9.502854347229004
    5. ':' → logprob: -10.127854347229004
    6. ' ):' → logprob: -10.752854347229004
    7. '():' → logprob: -11.252854347229004
    8. ',n' → logprob: -11.502854347229004
    9. 's' → logprob: -11.752854347229004
    10. '):

' → logprob: -13.627854347229004

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24422402679920197
    2. ':' → logprob: -1.7442240715026855
    3. ':
' → logprob: -3.9942240715026855
    4. 'def' → logprob: -5.2442240715026855
    5. 'for' → logprob: -5.4942240715026855
    6. '(' → logprob: -5.9942240715026855
    7. 'return' → logprob: -6.2442240715026855
    8. '(n' → logprob: -6.6192240715026855
    9. 's' → logprob: -6.7442240715026855
    10. ',' → logprob: -7.1192240715026855

Token 215: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1262635588645935
    2. '   ' → logprob: -2.7512636184692383
    3. ' return' → logprob: -4.376263618469238
    4. 'for' → logprob: -4.501263618469238
    5. 'arr' → logprob: -4.501263618469238
    6. '"""
' (adapté à ' """
') → logprob: -4.626263618469238
    7. 'def' → logprob: -6.251263618469238
    8. 'ret' → logprob: -6.376263618469238
    9. 'res' → logprob: -6.626263618469238
    10. 'r' → logprob: -6.751263618469238

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21812692284584045
    2. '"""
' → logprob: -2.4681270122528076
    3. ' """
' → logprob: -3.0931270122528076
    4. '"""' → logprob: -3.2181270122528076
    5. '"' → logprob: -4.4681267738342285
    6. ' """' → logprob: -4.9681267738342285
    7. 'def' → logprob: -5.4681267738342285
    8. '    ' → logprob: -7.0931267738342285
    9. ' def' → logprob: -7.3431267738342285
    10. ' for' → logprob: -7.5931267738342285

Token 217: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0115114450454712
    2. 'return' → logprob: -1.1365114450454712
    3. '"""
' → logprob: -2.0115113258361816
    4. ' return' → logprob: -2.3865113258361816
    5. 'for' → logprob: -3.5115113258361816
    6. ' """
' → logprob: -3.8865113258361816
    7. ' for' → logprob: -4.386511325836182
    8. '"""' → logprob: -4.761511325836182
    9. '   ' → logprob: -4.886511325836182
    10. ' def' → logprob: -5.511511325836182

Token 218: ' '' (ID: 461)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.26731038093566895
    2. 'n' → logprob: -2.142310380935669
    3. '[n' → logprob: -3.142310380935669
    4. ' n' → logprob: -4.14231014251709
    5. 's' → logprob: -4.76731014251709
    6. 'range' → logprob: -5.01731014251709
    7. 'def' → logprob: -5.26731014251709
    8. ')' → logprob: -5.39231014251709
    9. '[]' → logprob: -5.51731014251709
    10. '
' → logprob: -5.76731014251709

Token 219: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029083523899316788
    2. 'range' → logprob: -3.654083490371704
    3. ' n' → logprob: -7.154083728790283
    4. '(n' → logprob: -7.279083728790283
    5. '[n' → logprob: -8.029083251953125
    6. ' range' → logprob: -8.404083251953125
    7. ')' → logprob: -8.404083251953125
    8. '
' → logprob: -8.779083251953125
    9. ')n' → logprob: -9.154083251953125
    10. 'int' → logprob: -9.404083251953125

Token 220: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5798919200897217
    2. '()' → logprob: -0.9548919200897217
    3. 'l' → logprob: -4.079892158508301
    4. ' lignes' → logprob: -4.204892158508301
    5. 'lines' → logprob: -4.454892158508301
    6. '(n' → logprob: -5.204892158508301
    7. '():' → logprob: -5.954892158508301
    8. ' lines' → logprob: -6.829892158508301
    9. 'n' → logprob: -7.829892158508301
    10. '(lines' → logprob: -8.2048921585083

Token 221: ' lignes' (ID: 81687)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.6715008020401001
    2. '(' → logprob: -2.1715006828308105
    3. '(n' → logprob: -2.2965006828308105
    4. '()' → logprob: -2.5465006828308105
    5. 'lines' → logprob: -2.5465006828308105
    6. '():' → logprob: -3.6715006828308105
    7. ' lignes' → logprob: -3.6715006828308105
    8. '(lines' → logprob: -4.6715006828308105
    9. ' =' → logprob: -4.7965006828308105
    10. '_lines' → logprob: -5.0465006828308105

Token 222: ' contenant' (ID: 131049)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1302243322134018
    2. ',' → logprob: -3.6302242279052734
    3. 'de' → logprob: -3.6302242279052734
    4. ' de' → logprob: -3.7552242279052734
    5. ')' → logprob: -4.880224227905273
    6. ':' → logprob: -5.005224227905273
    7. '(lines' → logprob: -5.505224227905273
    8. 'et' → logprob: -5.630224227905273
    9. '(' → logprob: -6.130224227905273
    10. ' :' → logprob: -6.255224227905273

Token 223: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.18699824810028076
    2. ' deux' → logprob: -2.9369983673095703
    3. ' ' → logprob: -3.0619983673095703
    4. 'des' → logprob: -4.18699836730957
    5. '[]' → logprob: -4.81199836730957
    6. ' une' → logprob: -4.93699836730957
    7. ' la' → logprob: -5.06199836730957
    8. ' les' → logprob: -5.06199836730957
    9. '()' → logprob: -5.18699836730957
    10. ' two' → logprob: -5.68699836730957

Token 224: ' ent' (ID: 1121)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -1.107019305229187
    2. ' ent' → logprob: -1.732019305229187
    3. 'int' → logprob: -1.982019305229187
    4. 'de' → logprob: -2.2320194244384766
    5. 'ent' → logprob: -2.2320194244384766
    6. ' int' → logprob: -3.7320194244384766
    7. 'ints' → logprob: -4.232019424438477
    8. '2' → logprob: -4.232019424438477
    9. 'list' → logprob: -4.607019424438477
    10. ' integers' → logprob: -4.732019424438477

Token 225: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -8.721228368813172e-05
    2. 'i' → logprob: -10.125086784362793
    3. 'ières' → logprob: -10.250086784362793
    4. 'ier' → logprob: -11.750086784362793
    5. '   ' → logprob: -13.125086784362793
    6. 'ers' → logprob: -13.375086784362793
    7. 'gers' → logprob: -17.00008773803711
    8. 'ié' → logprob: -17.12508773803711
    9. ' i' → logprob: -17.50008773803711
    10. 'ires' → logprob: -18.00008773803711

Token 226: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1910783052444458
    2. 'def' → logprob: -1.6910783052444458
    3. ',' → logprob: -1.8160783052444458
    4. '(' → logprob: -2.3160781860351562
    5. '()' → logprob: -2.8160781860351562
    6. '   ' → logprob: -2.8160781860351562
    7. ' et' → logprob: -4.066078186035156
    8. '[]' → logprob: -4.066078186035156
    9. 'et' → logprob: -4.191078186035156
    10. '.' → logprob: -4.316078186035156

Token 227: ' convert' (ID: 8452)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5929679870605469
    2. ' return' → logprob: -0.9679679870605469
    3. '    ' → logprob: -3.967967987060547
    4. ' def' → logprob: -4.217967987060547
    5. ' lines' → logprob: -4.842967987060547
    6. 'return' → logprob: -5.217967987060547
    7. '    
' → logprob: -5.217967987060547
    8. ' 
' → logprob: -5.592967987060547
    9. ' ' → logprob: -6.342967987060547
    10. 'def' → logprob: -6.592967987060547

Token 228: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.004313330166041851
    2. 'issant' → logprob: -6.2543134689331055
    3. '```' → logprob: -6.5043134689331055
    4. 'issent' → logprob: -8.629313468933105
    5. '_it' → logprob: -9.129313468933105
    6. 'is' → logprob: -9.254313468933105
    7. '   ' → logprob: -9.379313468933105
    8. ' it' → logprob: -9.504313468933105
    9. '_' → logprob: -9.879313468933105
    10. '#' → logprob: -10.004313468933105

Token 229: ' chaque' (ID: 21194)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6158723831176758
    2. 'each' → logprob: -1.7408723831176758
    3. ' chaque' → logprob: -2.115872383117676
    4. ' chacune' → logprob: -3.615872383117676
    5. '   ' → logprob: -3.740872383117676
    6. 'le' → logprob: -3.865872383117676
    7. '[]' → logprob: -4.115872383117676
    8. '_' → logprob: -4.115872383117676
    9. 'ch' → logprob: -4.490872383117676
    10. ' each' → logprob: -5.115872383117676

Token 230: ' ligne' (ID: 19583)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.794761061668396
    2. '[' → logprob: -1.419761061668396
    3. '_' → logprob: -1.669761061668396
    4. 's' → logprob: -3.6697611808776855
    5. 'liste' → logprob: -4.4197611808776855
    6. ' [' → logprob: -5.0447611808776855
    7. ']' → logprob: -5.0447611808776855
    8. ' []' → logprob: -5.1697611808776855
    9. 'ligne' → logprob: -5.1697611808776855
    10. 'l' → logprob: -5.4197611808776855

Token 231: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.26206669211387634
    2. 'en' → logprob: -2.012066602706909
    3. '[]' → logprob: -3.387066602706909
    4. '   ' → logprob: -4.137066841125488
    5. 'def' → logprob: -4.887066841125488
    6. '[' → logprob: -5.012066841125488
    7. '(' → logprob: -5.137066841125488
    8. '=' → logprob: -5.637066841125488
    9. ' =' → logprob: -5.637066841125488
    10. 'à' → logprob: -6.012066841125488

Token 232: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03846967965364456
    2. 'liste' → logprob: -3.7884697914123535
    3. '[' → logprob: -4.7884697914123535
    4. '[list' → logprob: -6.0384697914123535
    5. '[List' → logprob: -6.6634697914123535
    6. '[]' → logprob: -7.0384697914123535
    7. '[n' → logprob: -7.6634697914123535
    8. 'List' → logprob: -7.7884697914123535
    9. 'lists' → logprob: -8.038469314575195
    10. '[int' → logprob: -8.288469314575195

Token 233: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.037994321435689926
    2. 'liste' → logprob: -3.412994384765625
    3. ' list' → logprob: -5.787994384765625
    4. 'List' → logprob: -7.662994384765625
    5. 'tuple' → logprob: -7.787994384765625
    6. ' liste' → logprob: -8.787994384765625
    7. '[]' → logprob: -9.662994384765625
    8. 'Liste' → logprob: -10.662994384765625
    9. 'lis' → logprob: -11.037994384765625
    10. '[' → logprob: -11.162994384765625

Token 234: ',
' (ID: 412)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11282315850257874
    2. ' de' → logprob: -3.362823247909546
    3. '[int' → logprob: -4.112823009490967
    4. '[List' → logprob: -4.112823009490967
    5. ' of' → logprob: -4.612823009490967
    6. '[
' → logprob: -4.737823009490967
    7. ' des' → logprob: -5.237823009490967
    8. '[]' → logprob: -5.487823009490967
    9. '[list' → logprob: -5.737823009490967
    10. '   ' → logprob: -5.987823009490967

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20110315084457397
    2. '[
' → logprob: -2.7011032104492188
    3. 'def' → logprob: -2.9511032104492188
    4. '[]' → logprob: -3.9511032104492188
    5. ' et' → logprob: -4.076103210449219
    6. ' and' → logprob: -5.326103210449219
    7. '[' → logprob: -5.326103210449219
    8. 'et' → logprob: -5.451103210449219
    9. ' def' → logprob: -6.076103210449219
    10. '[]
' → logprob: -6.451103210449219

Token 236: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5305278897285461
    2. '[]' → logprob: -1.2805278301239014
    3. 'def' → logprob: -2.9055278301239014
    4. '[
' → logprob: -3.4055278301239014
    5. '[' → logprob: -3.5305278301239014
    6. '[]
' → logprob: -5.9055280685424805
    7. 'list' → logprob: -6.2805280685424805
    8. 'et' → logprob: -6.5305280685424805
    9. 'liste' → logprob: -6.6555280685424805
    10. '[][]' → logprob: -7.0305280685424805

Token 237: ' transpose' (ID: 119046)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7920967936515808
    2. ' [' → logprob: -0.7920967936515808
    3. '[
' → logprob: -4.2920966148376465
    4. '[]' → logprob: -4.4170966148376465
    5. 'return' → logprob: -4.5420966148376465
    6. ' yield' → logprob: -4.6670966148376465
    7. '   ' → logprob: -4.7920966148376465
    8. ' return' → logprob: -4.9170966148376465
    9. 'yield' → logprob: -5.0420966148376465
    10. '.append' → logprob: -5.1670966148376465

Token 238: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0472639799118042
    2. '([' → logprob: -1.6722639799118042
    3. '(n' → logprob: -1.9222639799118042
    4. '(' → logprob: -2.0472640991210938
    5. '<|end|>' → logprob: -2.7972640991210938
    6. '[n' → logprob: -4.047264099121094
    7. '   ' → logprob: -4.297264099121094
    8. '(
' → logprob: -4.297264099121094
    9. '[
' → logprob: -4.547264099121094
    10. '([
' → logprob: -4.672264099121094

Token 239: ' matr' (ID: 25095)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.2169584333896637
    2. 'liste' → logprob: -1.9669584035873413
    3. ' list' → logprob: -3.341958522796631
    4. 'list' → logprob: -5.216958522796631
    5. 's' → logprob: -5.716958522796631
    6. ' matr' → logprob: -6.466958522796631
    7. ' listes' → logprob: -6.591958522796631
    8. 'mat' → logprob: -6.841958522796631
    9. 'import' → logprob: -7.091958522796631
    10. 'lists' → logprob: -7.091958522796631

Token 240: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.17214058339595795
    2. 'rice' → logprob: -2.172140598297119
    3. 'ix' → logprob: -3.172140598297119
    4. 'rix' → logprob: -7.422140598297119
    5. 'ices' → logprob: -8.047140121459961
    6. 'ixe' → logprob: -8.047140121459961
    7. 'rices' → logprob: -8.797140121459961
    8. 'ic' → logprob: -8.922140121459961
    9. 'ée' → logprob: -9.172140121459961
    10. 'atrice' → logprob: -9.172140121459961

Token 241: ' résult' (ID: 31657)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.465498924255371
    2. ' des' → logprob: -1.965498924255371
    3. '(n' → logprob: -1.965498924255371
    4. ',' → logprob: -2.090498924255371
    5. ' (' → logprob: -2.590498924255371
    6. '   ' → logprob: -2.715498924255371
    7. 'def' → logprob: -3.090498924255371
    8. '(
' → logprob: -3.465498924255371
    9. '(' → logprob: -3.465498924255371
    10. '[' → logprob: -4.090498924255371

Token 242: 'ante' (ID: 2116)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5918728709220886
    2. 'ice' → logprob: -1.8418729305267334
    3. 'ée' → logprob: -2.0918729305267334
    4. 'é' → logprob: -3.5918729305267334
    5. 've' → logprob: -3.5918729305267334
    6. 'ce' → logprob: -3.9668729305267334
    7. '"""
' → logprob: -4.091872692108154
    8. 'rice' → logprob: -4.216872692108154
    9. '   ' → logprob: -4.341872692108154
    10. ''''
' → logprob: -4.841872692108154

Token 243: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0855422019958496
    2. '.' → logprob: -1.4605422019958496
    3. ',' → logprob: -2.2105422019958496
    4. ':' → logprob: -2.4605422019958496
    5. 'def' → logprob: -2.4605422019958496
    6. '.
' → logprob: -3.8355422019958496
    7. ' et' → logprob: -4.08554220199585
    8. '(n' → logprob: -4.08554220199585
    9. ':
' → logprob: -4.21054220199585
    10. ' en' → logprob: -4.58554220199585

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8613767027854919
    2. '\n' → logprob: -1.2363767623901367
    3. '
' → logprob: -1.7363767623901367
    4. '    
' → logprob: -2.8613767623901367
    5. '  
' → logprob: -3.6113767623901367
    6. 'def' → logprob: -4.736376762390137
    7. ' 
' → logprob: -5.361376762390137
    8. '"""
' → logprob: -5.986376762390137
    9. '\' → logprob: -6.236376762390137
    10. '```' → logprob: -6.486376762390137

Token 245: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6951217651367188
    2. '
' → logprob: -1.4451217651367188
    3. 'def' → logprob: -2.1951217651367188
    4. '  
' → logprob: -3.1951217651367188
    5. '    
' → logprob: -3.4451217651367188
    6. ' 
' → logprob: -3.9451217651367188
    7. ':' → logprob: -4.070121765136719
    8. '\n' → logprob: -4.195121765136719
    9. ':
' → logprob: -4.570121765136719
    10. '```' → logprob: -5.445121765136719

Token 246: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6655277609825134
    2. '(n' → logprob: -0.7905277609825134
    3. '):' → logprob: -4.290527820587158
    4. '   ' → logprob: -5.165527820587158
    5. '):
' → logprob: -5.165527820587158
    6. ':
' → logprob: -5.790527820587158
    7. ' :' → logprob: -5.915527820587158
    8. ' (' → logprob: -6.915527820587158
    9. ')' → logprob: -8.79052734375
    10. '(
' → logprob: -9.41552734375

Token 247: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.814166784286499
    2. 'n' → logprob: -1.064166784286499
    3. ' n' → logprob: -1.564166784286499
    4. '	n' → logprob: -6.064167022705078
    5. '    
' → logprob: -9.189167022705078
    6. '    ' → logprob: -9.814167022705078
    7. ' self' → logprob: -9.939167022705078
    8. '
' → logprob: -10.189167022705078
    9. '(n' → logprob: -10.189167022705078
    10. ')' → logprob: -10.564167022705078

Token 248: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.000204851632588543
    2. ' n' → logprob: -8.875205039978027
    3. 'self' → logprob: -10.375205039978027
    4. '   ' → logprob: -10.625205039978027
    5. 'int' → logprob: -12.125205039978027
    6. ')' → logprob: -13.125205039978027
    7. 'num' → logprob: -14.250205039978027
    8. '	n' → logprob: -14.375205039978027
    9. '):
' → logprob: -15.750205039978027
    10. '):' → logprob: -16.37520408630371

Token 249: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07311145216226578
    2. ':' → logprob: -2.6981115341186523
    3. ')' → logprob: -5.948111534118652
    4. '):
' → logprob: -8.073111534118652
    5. ':int' → logprob: -8.448111534118652
    6. ' ):' → logprob: -10.823111534118652
    7. ' :' → logprob: -12.448111534118652
    8. '=' → logprob: -12.823111534118652
    9. ',' → logprob: -13.323111534118652
    10. '):

' → logprob: -13.573111534118652

Token 250: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00014728360110893846
    2. '):' → logprob: -9.375146865844727
    3. ' int' → logprob: -10.875146865844727
    4. '):
' → logprob: -11.125146865844727
    5. ')' → logprob: -11.250146865844727
    6. ':int' → logprob: -11.500146865844727
    7. '=int' → logprob: -12.500146865844727
    8. '[int' → logprob: -13.875146865844727
    9. '   ' → logprob: -15.000146865844727
    10. ':' → logprob: -15.750146865844727

Token 251: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004045394714921713
    2. ')' → logprob: -5.629045486450195
    3. '):
' → logprob: -7.754045486450195
    4. ':' → logprob: -11.379045486450195
    5. ' ):' → logprob: -12.629045486450195
    6. '):
' → logprob: -14.629045486450195
    7. '):

' → logprob: -15.004045486450195
    8. ',' → logprob: -15.254045486450195
    9. '   ' → logprob: -15.629045486450195
    10. ' ' → logprob: -16.254045486450195

Token 252: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2966359555721283
    2. ' int' → logprob: -1.4216359853744507
    3. '   ' → logprob: -4.79663610458374
    4. ')' → logprob: -5.79663610458374
    5. '):
' → logprob: -6.42163610458374
    6. '[int' → logprob: -7.54663610458374
    7. '<|end|>' → logprob: -7.67163610458374
    8. '):' → logprob: -8.171635627746582
    9. ':int' → logprob: -8.296635627746582
    10. '    ' → logprob: -8.796635627746582

Token 253: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04380481690168381
    2. ' de' → logprob: -3.793804883956909
    3. ')' → logprob: -4.29380464553833
    4. ' =' → logprob: -6.04380464553833
    5. ' des' → logprob: -6.16880464553833
    6. '):' → logprob: -7.41880464553833
    7. '=int' → logprob: -8.043805122375488
    8. '=n' → logprob: -8.418805122375488
    9. ' d' → logprob: -8.918805122375488
    10. '_des' → logprob: -9.168805122375488

Token 254: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.7175631523132324
    2. 'l' → logprob: -0.8425631523132324
    3. ' lines' → logprob: -3.5925631523132324
    4. ' ' → logprob: -3.5925631523132324
    5. ')' → logprob: -3.8425631523132324
    6. 'lines' → logprob: -5.842563152313232
    7. ' )' → logprob: -8.09256362915039
    8. ' lign' → logprob: -8.21756362915039
    9. ' ' → logprob: -8.34256362915039
    10. ' linhas' → logprob: -8.46756362915039

Token 255: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07285057753324509
    2. ')' → logprob: -3.072850465774536
    3. '):
' → logprob: -3.947850465774536
    4. '   ' → logprob: -5.572850704193115
    5. '=' → logprob: -7.822850704193115
    6. 'def' → logprob: -9.197850227355957
    7. ' ):' → logprob: -9.197850227355957
    8. ',' → logprob: -10.197850227355957
    9. '<|end|>' → logprob: -10.447850227355957
    10. ':' → logprob: -10.447850227355957

Token 256: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.47813141345977783
    2. 'l' → logprob: -0.9781314134597778
    3. 'read' → logprob: -6.853131294250488
    4. 'Lire' → logprob: -7.728131294250488
    5. ' read' → logprob: -7.853131294250488
    6. 'import' → logprob: -8.103131294250488
    7. 'int' → logprob: -8.228131294250488
    8. 'lit' → logprob: -8.603131294250488
    9. 'r' → logprob: -8.603131294250488
    10. 'coder' → logprob: -8.728131294250488

Token 257: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3222981095314026
    2. ')' → logprob: -1.5722980499267578
    3. '):
' → logprob: -2.697298049926758
    4. '   ' → logprob: -7.697298049926758
    5. ')
' → logprob: -9.947298049926758
    6. '):
' → logprob: -10.322298049926758
    7. '):

' → logprob: -12.572298049926758
    8. '
' → logprob: -12.572298049926758
    9. ',' → logprob: -12.697298049926758
    10. '),' → logprob: -13.072298049926758

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040904100984334946
    2. '    
' → logprob: -4.1659040451049805
    3. '
' → logprob: -4.7909040451049805
    4. ')' → logprob: -4.9159040451049805
    5. '  
' → logprob: -5.4159040451049805
    6. '"""
' → logprob: -6.0409040451049805
    7. '```' → logprob: -7.5409040451049805
    8. ' 
' → logprob: -7.7909040451049805
    9. '"""' → logprob: -8.04090404510498
    10. ')
' → logprob: -8.29090404510498

Token 259: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07732729613780975
    2. '    
' → logprob: -3.327327251434326
    3. '
' → logprob: -3.702327251434326
    4. ')' → logprob: -4.827327251434326
    5. '```' → logprob: -6.077327251434326
    6. ')
' → logprob: -6.827327251434326
    7. ' 
' → logprob: -6.952327251434326
    8. '  
' → logprob: -8.327327728271484
    9. '"""
' → logprob: -8.452327728271484
    10. '    ' → logprob: -8.452327728271484

Token 260: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6624727249145508
    2. ' list' → logprob: -1.7874727249145508
    3. '   ' → logprob: -2.162472724914551
    4. ' :' → logprob: -2.412472724914551
    5. ' [
' → logprob: -2.412472724914551
    6. ' [' → logprob: -2.537472724914551
    7. 'List' → logprob: -2.912472724914551
    8. '    ' → logprob: -3.162472724914551
    9. ' List' → logprob: -3.412472724914551
    10. '[' → logprob: -3.537472724914551

Token 261: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6098704934120178
    2. ' [' → logprob: -0.8598704934120178
    3. ' [
' → logprob: -4.484870433807373
    4. '[' → logprob: -4.609870433807373
    5. '[List' → logprob: -5.609870433807373
    6. '[
' → logprob: -5.859870433807373
    7. '[list' → logprob: -5.859870433807373
    8. ' list' → logprob: -6.984870433807373
    9. ' [[' → logprob: -7.484870433807373
    10. '[n' → logprob: -8.359870910644531

Token 262: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.037326160818338394
    2. 'List' → logprob: -3.7873260974884033
    3. ' list' → logprob: -4.287326335906982
    4. ' List' → logprob: -8.412325859069824
    5. '[list' → logprob: -11.412325859069824
    6. '   ' → logprob: -13.412325859069824
    7. '[List' → logprob: -13.412325859069824
    8. '[[' → logprob: -13.912325859069824
    9. 'lis' → logprob: -14.037325859069824
    10. '_list' → logprob: -14.037325859069824

Token 263: ':' (ID: 25)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.24021708965301514
    2. ':' → logprob: -1.9902170896530151
    3. '[List' → logprob: -3.2402172088623047
    4. ' of' → logprob: -3.3652172088623047
    5. '(list' → logprob: -6.615217208862305
    6. 'of' → logprob: -7.365217208862305
    7. '   ' → logprob: -7.740217208862305
    8. ':
' → logprob: -8.115217208862305
    9. '[' → logprob: -8.240217208862305
    10. 'Of' → logprob: -10.115217208862305

Token 264: ' matr' (ID: 25095)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3596082031726837
    2. '[list' → logprob: -1.4846081733703613
    3. 'list' → logprob: -2.7346081733703613
    4. '[List' → logprob: -5.234608173370361
    5. '[[' → logprob: -6.484608173370361
    6. ' [' → logprob: -6.734608173370361
    7. ' [[' → logprob: -7.484608173370361
    8. '   ' → logprob: -7.609608173370361
    9. 'List' → logprob: -7.609608173370361
    10. '[' → logprob: -8.48460865020752

Token 265: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.03754548728466034
    2. 'ices' → logprob: -3.4125454425811768
    3. '[]' → logprob: -6.912545680999756
    4. 'ix' → logprob: -7.162545680999756
    5. 'rice' → logprob: -7.662545680999756
    6. 'ize' → logprob: -7.787545680999756
    7. '[' → logprob: -8.037545204162598
    8. 'iz' → logprob: -8.662545204162598
    9. '[
' → logprob: -8.912545204162598
    10. '[]
' → logprob: -9.037545204162598

Token 266: ' trans' (ID: 1643)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.5423276424407959
    2. ' de' → logprob: -1.792327642440796
    3. '[List' → logprob: -3.167327642440796
    4. ' of' → logprob: -3.167327642440796
    5. ':' → logprob: -3.292327642440796
    6. ' des' → logprob: -3.667327642440796
    7. '   ' → logprob: -3.792327642440796
    8. '[' → logprob: -3.917327642440796
    9. ' trans' → logprob: -4.042327880859375
    10. '(list' → logprob: -4.542327880859375

Token 267: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00028505371301434934
    2. 'posé' → logprob: -8.500285148620605
    3. 'pose' → logprob: -10.000285148620605
    4. '_pos' → logprob: -11.750285148620605
    5. 'p' → logprob: -11.750285148620605
    6. 'os' → logprob: -12.000285148620605
    7. 'posed' → logprob: -12.875285148620605
    8. '[pos' → logprob: -13.250285148620605
    9. '
' → logprob: -13.375285148620605
    10. '#' → logprob: -14.000285148620605

Token 268: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0005096645909361541
    2. 'é' → logprob: -8.375509262084961
    3. 'e' → logprob: -9.000509262084961
    4. 'ed' → logprob: -9.375509262084961
    5. 'ee' → logprob: -10.375509262084961
    6. 'ées' → logprob: -11.000509262084961
    7. '[' → logprob: -11.750509262084961
    8. 'os' → logprob: -12.000509262084961
    9. 'éd' → logprob: -14.000509262084961
    10. 'pos' → logprob: -14.000509262084961

Token 269: ' des' (ID: 731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0805517435073853
    2. '   ' → logprob: -1.0805517435073853
    3. '[List' → logprob: -2.3305516242980957
    4. ':
' → logprob: -2.8305516242980957
    5. '[list' → logprob: -3.5805516242980957
    6. ' =' → logprob: -3.7055516242980957
    7. '[
' → logprob: -3.8305516242980957
    8. '
' → logprob: -3.9555516242980957
    9. '[' → logprob: -3.9555516242980957
    10. ']' → logprob: -4.705551624298096

Token 270: ' valeurs' (ID: 73668)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9615866541862488
    2. '[[' → logprob: -1.7115867137908936
    3. '[int' → logprob: -2.2115867137908936
    4. '[list' → logprob: -2.4615867137908936
    5. 'lists' → logprob: -2.5865867137908936
    6. '[n' → logprob: -2.8365867137908936
    7. 'l' → logprob: -3.7115867137908936
    8. '[' → logprob: -3.7115867137908936
    9. '[
' → logprob: -4.2115864753723145
    10. 'n' → logprob: -4.5865864753723145

Token 271: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26254457235336304
    2. ' de' → logprob: -3.012544631958008
    3. ' des' → logprob: -3.137544631958008
    4. '
' → logprob: -3.762544631958008
    5. '[n' → logprob: -4.012544631958008
    6. 'import' → logprob: -4.637544631958008
    7. '```' → logprob: -4.637544631958008
    8. '[i' → logprob: -4.887544631958008
    9. 'de' → logprob: -4.887544631958008
    10. ' ' → logprob: -4.887544631958008

Token 272: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.0014857008354738355
    2. 'ignes' → logprob: -7.251485824584961
    3. 'u' → logprob: -7.876485824584961
    4. 'ue' → logprob: -8.501485824584961
    5. 'us' → logprob: -9.251485824584961
    6. 'is' → logprob: -9.751485824584961
    7. 'igne' → logprob: -11.501485824584961
    8. 'es' → logprob: -12.126485824584961
    9. 'istes' → logprob: -12.376485824584961
    10. '
' → logprob: -12.876485824584961

Token 273: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2337790727615356
    2. ':
' → logprob: -1.3587790727615356
    3. '
' → logprob: -1.6087790727615356
    4. '   ' → logprob: -1.8587790727615356
    5. ':' → logprob: -2.983778953552246
    6. '=' → logprob: -3.608778953552246
    7. '    
' → logprob: -5.358778953552246
    8. ' =
' → logprob: -6.108778953552246
    9. '):
' → logprob: -6.108778953552246
    10. '=
' → logprob: -6.608778953552246

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004948035813868046
    2. '    
' → logprob: -5.504948139190674
    3. '
' → logprob: -7.129948139190674
    4. '  
' → logprob: -10.879947662353516
    5. '   
' → logprob: -11.379947662353516
    6. ' 
' → logprob: -11.879947662353516
    7. '```' → logprob: -11.879947662353516
    8. '):
' → logprob: -12.254947662353516
    9. '    ' → logprob: -12.504947662353516
    10. ')' → logprob: -12.879947662353516

Token 275: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004418963100761175
    2. '    
' → logprob: -5.754418849945068
    3. '
' → logprob: -7.379418849945068
    4. ')' → logprob: -8.129419326782227
    5. '    ' → logprob: -9.629419326782227
    6. '```' → logprob: -9.629419326782227
    7. '"""
' (adapté à ' """
') → logprob: -9.879419326782227
    8. '   
' → logprob: -10.379419326782227
    9. ')
' → logprob: -10.879419326782227
    10. '):
' → logprob: -11.004419326782227

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001480697887018323
    2. 'matrix' → logprob: -7.001480579376221
    3. ' matrix' → logprob: -8.251481056213379
    4. 'mat' → logprob: -8.626481056213379
    5. 'data' → logprob: -10.626481056213379
    6. ' mat' → logprob: -11.126481056213379
    7. 'return' → logprob: -11.376481056213379
    8. '	matrix' → logprob: -11.376481056213379
    9. 'result' → logprob: -11.876481056213379
    10. 'res' → logprob: -12.001481056213379

Token 277: ' tmp' (ID: 8919)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.7665427327156067
    2. 'return' → logprob: -1.391542673110962
    3. 'mat' → logprob: -1.891542673110962
    4. 'a' → logprob: -3.391542673110962
    5. 'arr' → logprob: -3.891542673110962
    6. 'res' → logprob: -4.016542911529541
    7. 'lines' → logprob: -4.141542911529541
    8. 'l' → logprob: -4.641542911529541
    9. 'm' → logprob: -4.766542911529541
    10. 'lst' → logprob: -4.766542911529541

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4747011363506317
    2. ' =' → logprob: -0.9747011661529541
    3. '=[]' → logprob: -7.849700927734375
    4. '=[]
' → logprob: -9.099700927734375
    5. '=[' → logprob: -9.474700927734375
    6. ' =[' → logprob: -11.349700927734375
    7. ',' → logprob: -11.474700927734375
    8. ' ' → logprob: -11.599700927734375
    9. '_' → logprob: -12.599700927734375
    10. '[' → logprob: -12.849700927734375

Token 279: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.4004715383052826
    2. '[' → logprob: -1.150471568107605
    3. '[n' → logprob: -5.1504716873168945
    4. '[i' → logprob: -6.1504716873168945
    5. '[array' → logprob: -6.4004716873168945
    6. '[input' → logprob: -7.0254716873168945
    7. '[int' → logprob: -7.1504716873168945
    8. '[np' → logprob: -7.9004716873168945
    9. '[List' → logprob: -8.150471687316895
    10. ' [' → logprob: -8.275471687316895

Token 280: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.020848644897341728
    2. 'mi' → logprob: -3.8958487510681152
    3. '[' → logprob: -9.395848274230957
    4. ' list' → logprob: -9.770848274230957
    5. 'li' → logprob: -10.145848274230957
    6. 'i' → logprob: -10.270848274230957
    7. 'ii' → logprob: -10.395848274230957
    8. '[i' → logprob: -11.020848274230957
    9. '[list' → logprob: -11.145848274230957
    10. 'tuple' → logprob: -11.770848274230957

Token 281: '(mi' (ID: 165288)
  Prédit: '(mi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mi' → logprob: -0.06246817111968994
    2. '(map' → logprob: -2.8124680519104004
    3. 'mi' → logprob: -7.8124680519104
    4. '(ii' → logprob: -9.812468528747559
    5. 'map' → logprob: -10.687468528747559
    6. '(m' → logprob: -12.187468528747559
    7. '(i' → logprob: -12.687468528747559
    8. ']' → logprob: -12.937468528747559
    9. '(ma' → logprob: -13.312468528747559
    10. '()' → logprob: -13.562468528747559

Token 282: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16072580218315125
    2. '(n' → logprob: -1.9107258319854736
    3. '()' → logprob: -8.535725593566895
    4. '(' → logprob: -8.535725593566895
    5. '(i' → logprob: -9.785725593566895
    6. '()))' → logprob: -11.160725593566895
    7. 'n' → logprob: -11.535725593566895
    8. '())
' → logprob: -11.660725593566895
    9. ')' → logprob: -11.785725593566895
    10. ' ())' → logprob: -12.160725593566895

Token 283: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16626515984535217
    2. ' for' → logprob: -1.9162651300430298
    3. '()' → logprob: -5.16626501083374
    4. '(n' → logprob: -8.416265487670898
    5. '   ' → logprob: -9.916265487670898
    6. ')' → logprob: -10.541265487670898
    7. '(' → logprob: -11.666265487670898
    8. '	for' → logprob: -12.291265487670898
    9. 'n' → logprob: -12.916265487670898
    10. ']' → logprob: -13.666265487670898

Token 284: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008006958523765206
    2. ' _' → logprob: -7.875800609588623
    3. ' range' → logprob: -8.125801086425781
    4. 'range' → logprob: -9.375801086425781
    5. '_range' → logprob: -10.250801086425781
    6. ' in' → logprob: -13.375801086425781
    7. 'i' → logprob: -14.250801086425781
    8. '_i' → logprob: -14.500801086425781
    9. '_in' → logprob: -14.500801086425781
    10. ' ' → logprob: -14.750801086425781

Token 285: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4383377134799957
    2. 'in' → logprob: -1.1883376836776733
    3. 'range' → logprob: -4.063337802886963
    4. ' range' → logprob: -4.063337802886963
    5. 'n' → logprob: -5.063337802886963
    6. '(' → logprob: -5.188337802886963
    7. '(range' → logprob: -6.313337802886963
    8. ' ' → logprob: -6.813337802886963
    9. '(n' → logprob: -7.563337802886963
    10. '_' → logprob: -8.063337326049805

Token 286: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007100477814674377
    2. ' range' → logprob: -7.2507100105285645
    3. '	range' → logprob: -16.500709533691406
    4. 'rang' → logprob: -16.875709533691406
    5. '(range' → logprob: -17.625709533691406
    6. '_' → logprob: -18.500709533691406
    7. 'ran' → logprob: -19.000709533691406
    8. ' ' → logprob: -19.250709533691406
    9. '_range' → logprob: -19.500709533691406
    10. '
' → logprob: -19.500709533691406

Token 287: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004529566504061222
    2. '(' → logprob: -7.750452995300293
    3. '(
' → logprob: -11.000452995300293
    4. 'n' → logprob: -12.125452995300293
    5. ' n' → logprob: -15.750452995300293
    6. ' (' → logprob: -17.750452041625977
    7. '	n' → logprob: -18.750452041625977
    8. '(

' → logprob: -18.875452041625977
    9. ')n' → logprob: -19.625452041625977
    10. '(nt' → logprob: -20.500452041625977

Token 288: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.1517960956552997e-05
    2. ']' → logprob: -12.000011444091797
    3. ')' → logprob: -12.625011444091797
    4. ')]
' → logprob: -14.125011444091797
    5. ' )' → logprob: -14.875011444091797
    6. ')],' → logprob: -15.625011444091797
    7. '   ' → logprob: -15.625011444091797
    8. '])]' → logprob: -16.125011444091797
    9. ')].' → logprob: -16.625011444091797
    10. '])' → logprob: -16.750011444091797

Token 289: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12688642740249634
    2. '   ' → logprob: -2.2518863677978516
    3. 'return' → logprob: -5.251886367797852
    4. '\n' → logprob: -5.626886367797852
    5. '    
' → logprob: -6.501886367797852
    6. ' return' → logprob: -6.876886367797852
    7. '' → logprob: -7.876886367797852
    8. '
' → logprob: -8.001886367797852
    9. '  
' → logprob: -8.001886367797852
    10. ')' → logprob: -8.126886367797852

Token 290: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06743024289608002
    2. 'return' → logprob: -3.317430257797241
    3. '   ' → logprob: -5.067430019378662
    4. ')' → logprob: -5.442430019378662
    5. ' return' → logprob: -5.692430019378662
    6. ']' → logprob: -5.817430019378662
    7. '' → logprob: -5.942430019378662
    8. ' ' → logprob: -6.067430019378662
    9. '  
' → logprob: -6.692430019378662
    10. 'transpose' → logprob: -6.942430019378662

Token 291: ' Lecture' (ID: 106534)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.309012770652771
    2. 'return' → logprob: -2.1840128898620605
    3. ' range' → logprob: -2.4340128898620605
    4. ' for' → logprob: -4.4340128898620605
    5. 'range' → logprob: -4.5590128898620605
    6. ' ' → logprob: -4.6840128898620605
    7. ']' → logprob: -4.6840128898620605
    8. ' zip' → logprob: -4.9340128898620605
    9. '
' → logprob: -5.4340128898620605
    10. '0' → logprob: -5.9340128898620605

Token 292: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4232398271560669
    2. ' de' → logprob: -1.798239827156067
    3. ' range' → logprob: -3.0482397079467773
    4. ' for' → logprob: -3.2982397079467773
    5. ' complète' → logprob: -3.6732397079467773
    6. '(n' → logprob: -4.173239707946777
    7. 'range' → logprob: -4.173239707946777
    8. '(range' → logprob: -5.048239707946777
    9. ')' → logprob: -5.548239707946777
    10. ' n' → logprob: -5.798239707946777

Token 293: ' lignes' (ID: 81687)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0984271913766861
    2. ' n' → logprob: -2.4734272956848145
    3. ' lignes' → logprob: -5.5984272956848145
    4. 'range' → logprob: -6.3484272956848145
    5. 'l' → logprob: -6.4734272956848145
    6. ' range' → logprob: -6.8484272956848145
    7. ' lines' → logprob: -7.5984272956848145
    8. ' ' → logprob: -7.9734272956848145
    9. 'lines' → logprob: -8.723426818847656
    10. 'i' → logprob: -8.848426818847656

Token 294: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0375702865421772
    2. '
' → logprob: -4.537570476531982
    3. ')' → logprob: -5.287570476531982
    4. 'transpose' → logprob: -5.412570476531982
    5. '   ' → logprob: -5.537570476531982
    6. '<|end|>' → logprob: -5.912570476531982
    7. ']
' → logprob: -6.287570476531982
    8. '[' → logprob: -6.787570476531982
    9. 'return' → logprob: -6.912570476531982
    10. ' ' → logprob: -7.037570476531982

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1989445984363556
    2. 'return' → logprob: -2.073944568634033
    3. ' return' → logprob: -2.948944568634033
    4. '
' → logprob: -6.448944568634033
    5. ')' → logprob: -7.823944568634033
    6. '    
' → logprob: -8.948945045471191
    7. 'import' → logprob: -9.948945045471191
    8. ')
' → logprob: -10.448945045471191
    9. '	return' → logprob: -10.448945045471191
    10. '```' → logprob: -11.073945045471191

Token 296: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2823711633682251
    2. ' return' → logprob: -1.407371163368225
    3. '   ' → logprob: -6.7823710441589355
    4. '
' → logprob: -9.782371520996094
    5. 'trans' → logprob: -12.032371520996094
    6. '```' → logprob: -12.282371520996094
    7. 'import' → logprob: -12.532371520996094
    8. ' ' → logprob: -12.782371520996094
    9. 'z' → logprob: -12.782371520996094
    10. '    
' → logprob: -13.407371520996094

Token 297: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.290541410446167
    2. '[list' → logprob: -1.540541410446167
    3. ' list' → logprob: -3.290541410446167
    4. '[' → logprob: -7.915541648864746
    5. ' [' → logprob: -8.415541648864746
    6. '[[' → logprob: -10.290541648864746
    7. '(list' → logprob: -11.040541648864746
    8. '[List' → logprob: -13.290541648864746
    9. '[len' → logprob: -13.540541648864746
    10. '[l' → logprob: -14.540541648864746

Token 298: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011077526025474072
    2. '[list' → logprob: -4.511077404022217
    3. '[i' → logprob: -11.261077880859375
    4. '[*' → logprob: -11.886077880859375
    5. ' list' → logprob: -12.386077880859375
    6. '[' → logprob: -13.261077880859375
    7. '[j' → logprob: -13.261077880859375
    8. '(list' → logprob: -13.761077880859375
    9. '[col' → logprob: -15.011077880859375
    10. '[t' → logprob: -15.886077880859375

Token 299: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2244429588317871
    2. '(col' → logprob: -1.974442958831787
    3. '(i' → logprob: -3.224442958831787
    4. '(row' → logprob: -3.849442958831787
    5. '(t' → logprob: -7.849442958831787
    6. 'col' → logprob: -8.224443435668945
    7. '(z' → logprob: -8.974443435668945
    8. '(a' → logprob: -9.099443435668945
    9. '(column' → logprob: -9.849443435668945
    10. '(' → logprob: -10.349443435668945

Token 300: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.22115378081798553
    2. '(row' → logprob: -2.721153736114502
    3. 'row' → logprob: -3.721153736114502
    4. 't' → logprob: -4.096153736114502
    5. 'x' → logprob: -4.096153736114502
    6. '(col' → logprob: -4.221153736114502
    7. 'r' → logprob: -4.346153736114502
    8. ')' → logprob: -4.721153736114502
    9. 'col' → logprob: -4.846153736114502
    10. '(t' → logprob: -4.971153736114502

Token 301: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.450117290019989
    2. ' for' → logprob: -1.4501173496246338
    3. '(zip' → logprob: -2.200117349624634
    4. '(x' → logprob: -4.575117111206055
    5. '(row' → logprob: -6.575117111206055
    6. 'zip' → logprob: -6.700117111206055
    7. '(z' → logprob: -7.075117111206055
    8. '(range' → logprob: -7.575117111206055
    9. '(i' → logprob: -7.700117111206055
    10. '(tmp' → logprob: -7.825117111206055

Token 302: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01014275848865509
    2. ' i' → logprob: -5.010142803192139
    3. ' zip' → logprob: -6.260142803192139
    4. 'zip' → logprob: -6.510142803192139
    5. 'z' → logprob: -11.38514232635498
    6. '(zip' → logprob: -12.51014232635498
    7. ' ' → logprob: -12.76014232635498
    8. '(i' → logprob: -14.01014232635498
    9. '	i' → logprob: -14.01014232635498
    10. 'range' → logprob: -14.13514232635498

Token 303: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3869313597679138
    2. 'in' → logprob: -1.1369314193725586
    3. '
' → logprob: -10.386931419372559
    4. 'zip' → logprob: -11.136931419372559
    5. 'z' → logprob: -11.886931419372559
    6. ' ' → logprob: -13.136931419372559
    7. ']' → logprob: -13.636931419372559
    8. '(zip' → logprob: -14.011931419372559
    9. ' zip' → logprob: -14.386931419372559
    10. ')' → logprob: -14.511931419372559

Token 304: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -7.827200897736475e-05
    2. ' zip' → logprob: -9.500078201293945
    3. '(zip' → logprob: -13.000078201293945
    4. '
' → logprob: -14.000078201293945
    5. '.zip' → logprob: -16.250078201293945
    6. 'z' → logprob: -16.500078201293945
    7. '_zip' → logprob: -19.500078201293945
    8. '   ' → logprob: -19.500078201293945
    9. 'Zip' → logprob: -20.000078201293945
    10. ' ' → logprob: -20.125078201293945

Token 305: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -1.4259644558478612e-05
    2. '(*)' → logprob: -11.250014305114746
    3. '(' → logprob: -13.625014305114746
    4. '(
' → logprob: -18.87501335144043
    5. '*' → logprob: -19.00001335144043
    6. '(*(' → logprob: -19.62501335144043
    7. '(

' → logprob: -19.75001335144043
    8. ' (*' → logprob: -20.12501335144043
    9. '(\' → logprob: -22.12501335144043
    10. '_long' → logprob: -22.50001335144043

Token 306: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.6240566083070007e-06
    2. '(tmp' → logprob: -14.000001907348633
    3. ' tmp' → logprob: -14.625001907348633
    4. '[tmp' → logprob: -16.625001907348633
    5. '$tmp' → logprob: -17.000001907348633
    6. '
' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.500001907348633
    8. 'temp' → logprob: -17.750001907348633
    9. '	tmp' → logprob: -17.875001907348633
    10. 'zip' → logprob: -18.500001907348633

Token 307: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.688212614681106e-05
    2. ')' → logprob: -11.625017166137695
    3. ']' → logprob: -12.000017166137695
    4. ')]
' → logprob: -13.750017166137695
    5. ' )' → logprob: -14.500017166137695
    6. '])]' → logprob: -17.375017166137695
    7. '))' → logprob: -17.500017166137695
    8. ')]

' → logprob: -17.750017166137695
    9. ')])' → logprob: -17.750017166137695
    10. ' ' → logprob: -18.000017166137695

Token 308: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: ' Trans' (ID: 5515)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5415489673614502
    2. 'transpose' → logprob: -1.2915489673614502
    3. 'zip' → logprob: -2.41654896736145
    4. '#' → logprob: -3.79154896736145
    5. ' return' → logprob: -3.91654896736145
    6. 'list' → logprob: -5.916548728942871
    7. ' zip' → logprob: -6.291548728942871
    8. '.transpose' → logprob: -6.541548728942871
    9. 'trans' → logprob: -6.541548728942871
    10. ' transpose' → logprob: -6.916548728942871

Token 311: 'position' (ID: 4504)
  Prédit: 'pose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pose' → logprob: -0.0009022884769365191
    2. 'poser' → logprob: -7.12590217590332
    3. 'pos' → logprob: -9.75090217590332
    4. 'ponse' → logprob: -11.37590217590332
    5. 'posé' → logprob: -11.50090217590332
    6. 'poste' → logprob: -12.12590217590332
    7. 'post' → logprob: -12.37590217590332
    8. 'posite' → logprob: -13.00090217590332
    9. 'posing' → logprob: -13.37590217590332
    10. 'posed' → logprob: -13.50090217590332

Token 312: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: ' lignes' (ID: 81687)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -6.56364209135063e-05
    2. 'lists' → logprob: -10.625065803527832
    3. ' tmp' → logprob: -10.750065803527832
    4. 'list' → logprob: -12.375065803527832
    5. '[tmp' → logprob: -12.375065803527832
    6. 'lines' → logprob: -13.125065803527832
    7. 'rows' → logprob: -13.500065803527832
    8. 'l' → logprob: -13.750065803527832
    9. '(tmp' → logprob: -14.125065803527832
    10. '
' → logprob: -14.125065803527832

Token 314: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 315: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11978358030319214
    2. '#' → logprob: -2.869783639907837
    3. '<|end|>' → logprob: -3.619783639907837
    4. '
' → logprob: -3.744783639907837
    5. '\' → logprob: -6.244783401489258
    6. '\n' → logprob: -7.119783401489258
    7. '<|end|>' → logprob: -7.369783401489258
    8. '

' → logprob: -7.494783401489258
    9. '[' → logprob: -7.869783401489258
    10. '```' → logprob: -8.244783401489258

Token 316: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11256849020719528
    2. '#' → logprob: -2.3625683784484863
    3. 'class' → logprob: -4.487568378448486
    4. 'import' → logprob: -7.737568378448486
    5. 'from' → logprob: -8.112568855285645
    6. '"""' → logprob: -10.487568855285645
    7. ' def' → logprob: -10.612568855285645
    8. 'de' → logprob: -10.862568855285645
    9. '<|end|>' → logprob: -10.862568855285645
    10. 'data' → logprob: -10.987568855285645

Token 317: ' du' (ID: 1462)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38472384214401245
    2. '()' → logprob: -1.5097239017486572
    3. 't' → logprob: -3.0097239017486572
    4. '(n' → logprob: -3.7597239017486572
    5. '(' → logprob: -4.884723663330078
    6. 'a' → logprob: -5.384723663330078
    7. '(
' → logprob: -6.384723663330078
    8. 'data' → logprob: -6.384723663330078
    9. 'q' → logprob: -6.509723663330078
    10. '#' → logprob: -6.759723663330078

Token 318: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006998809054493904
    2. ' n' → logprob: -5.3819990158081055
    3. 't' → logprob: -7.0069990158081055
    4. 'def' → logprob: -7.3819990158081055
    5. 'N' → logprob: -7.8819990158081055
    6. 'nombre' → logprob: -8.381999015808105
    7. '#' → logprob: -9.881999015808105
    8. ' nombre' → logprob: -10.131999015808105
    9. 'a' → logprob: -10.256999015808105
    10. ' t' → logprob: -10.631999015808105

Token 319: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32547757029533386
    2. '=' → logprob: -1.7004776000976562
    3. '_' → logprob: -2.8254776000976562
    4. 'n' → logprob: -4.450477600097656
    5. 'de' → logprob: -4.825477600097656
    6. 'd' → logprob: -5.325477600097656
    7. 's' → logprob: -6.075477600097656
    8. 'des' → logprob: -6.200477600097656
    9. '_n' → logprob: -6.950477600097656
    10. 'def' → logprob: -6.950477600097656

Token 320: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3527122735977173
    2. 'élé' → logprob: -2.8527121543884277
    3. 's' → logprob: -3.4777121543884277
    4. ' test' → logprob: -3.6027121543884277
    5. '_cases' → logprob: -3.6027121543884277
    6. 'cases' → logprob: -3.8527121543884277
    7. 'test' → logprob: -4.227712154388428
    8. ' ' → logprob: -4.602712154388428
    9. '_s' → logprob: -4.727712154388428
    10. 't' → logprob: -4.727712154388428

Token 321: 'élé' (ID: 15228)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.6295763254165649
    2. 'tests' → logprob: -1.629576325416565
    3. 'cases' → logprob: -2.0045762062072754
    4. 'l' → logprob: -3.0045762062072754
    5. 'cas' → logprob: -3.2545762062072754
    6. 'élé' → logprob: -4.004576206207275
    7. 't' → logprob: -5.254576206207275
    8. 'queries' → logprob: -5.504576206207275
    9. 'ét' → logprob: -5.754576206207275
    10. '_tests' → logprob: -6.379576206207275

Token 322: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.014100275933742523
    2. 'éments' → logprob: -4.389100074768066
    3. 'ements' → logprob: -6.514100074768066
    4. 'ment' → logprob: -10.139100074768066
    5. 'èves' → logprob: -10.764100074768066
    6. 'm' → logprob: -11.514100074768066
    7. 'ém' → logprob: -11.764100074768066
    8. 'v' → logprob: -12.014100074768066
    9. '#' → logprob: -12.014100074768066
    10. 'é' → logprob: -12.264100074768066

Token 323: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0013888046378269792
    2. 'N' → logprob: -6.751389026641846
    3. '()' → logprob: -9.626388549804688
    4. '(n' → logprob: -9.876388549804688
    5. '()
' → logprob: -10.376388549804688
    6. ' =' → logprob: -11.126388549804688
    7. '
' → logprob: -11.376388549804688
    8. '=' → logprob: -11.376388549804688
    9. ' n' → logprob: -11.501388549804688
    10. '(
' → logprob: -11.876388549804688

Token 324: ' des' (ID: 731)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6067643761634827
    2. 'lst' → logprob: -2.106764316558838
    3. 'a' → logprob: -2.481764316558838
    4. 'data' → logprob: -2.731764316558838
    5. 'la' → logprob: -3.481764316558838
    6. ' la' → logprob: -3.481764316558838
    7. ' data' → logprob: -3.731764316558838
    8. 'les' → logprob: -4.106764316558838
    9. 'values' → logprob: -4.356764316558838
    10. 'n' → logprob: -4.356764316558838

Token 325: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.045770466327667236
    2. ' valeurs' → logprob: -4.045770645141602
    3. 'data' → logprob: -5.670770645141602
    4. 'd' → logprob: -5.670770645141602
    5. 'values' → logprob: -5.670770645141602
    6. 'a' → logprob: -5.795770645141602
    7. ' données' → logprob: -6.170770645141602
    8. 'vals' → logprob: -6.170770645141602
    9. 'tab' → logprob: -6.545770645141602
    10. ' val' → logprob: -6.670770645141602

Token 326: ' du' (ID: 1462)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0037895082496106625
    2. '
' → logprob: -6.25378942489624
    3. 'N' → logprob: -6.37878942489624
    4. '(n' → logprob: -9.128789901733398
    5. ' n' → logprob: -11.378789901733398
    6. '()
' → logprob: -11.378789901733398
    7. '```' → logprob: -11.628789901733398
    8. '

' → logprob: -12.878789901733398
    9. 'a' → logprob: -13.003789901733398
    10. 't' → logprob: -13.253789901733398

Token 327: ' tableau' (ID: 67053)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.4890719950199127
    2. ' tableau' → logprob: -1.8640719652175903
    3. ' tableaux' → logprob: -2.86407208442688
    4. 'tab' → logprob: -3.48907208442688
    5. 'input' → logprob: -4.239071846008301
    6. 'inputs' → logprob: -4.364071846008301
    7. 'n' → logprob: -4.364071846008301
    8. 'd' → logprob: -4.364071846008301
    9. ' table' → logprob: -4.739071846008301
    10. '```' → logprob: -4.864071846008301

Token 328: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006986384280025959
    2. '
' → logprob: -5.256986618041992
    3. 'N' → logprob: -6.381986618041992
    4. '```' → logprob: -11.256986618041992
    5. '(n' → logprob: -11.631986618041992
    6. '

' → logprob: -11.756986618041992
    7. ' n' → logprob: -12.381986618041992
    8. 't' → logprob: -12.631986618041992
    9. 'a' → logprob: -12.881986618041992
    10. '_n' → logprob: -13.131986618041992

Token 329: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004666745662689209
    2. 'N' → logprob: -5.379666805267334
    3. '
' → logprob: -10.379666328430176
    4. ' n' → logprob: -12.504666328430176
    5. '_n' → logprob: -13.254666328430176
    6. 'def' → logprob: -13.254666328430176
    7. 't' → logprob: -13.504666328430176
    8. '#' → logprob: -13.629666328430176
    9. '```' → logprob: -13.754666328430176
    10. '(n' → logprob: -14.004666328430176

Token 330: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009148012613877654
    2. '=' → logprob: -7.750914573669434
    3. ' =' → logprob: -7.875914573669434
    4. ' ,' → logprob: -9.625914573669434
    5. ',N' → logprob: -10.375914573669434
    6. ',n' → logprob: -12.625914573669434
    7. ',
' → logprob: -13.750914573669434
    8. ',M' → logprob: -14.750914573669434
    9. ',m' → logprob: -14.750914573669434
    10. ',K' → logprob: -14.875914573669434

Token 331: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.14718283712863922
    2. ' ii' → logprob: -2.0221829414367676
    3. 'int' → logprob: -5.522182941436768
    4. ' int' → logprob: -7.647182941436768
    5. ' ' → logprob: -11.77218246459961
    6. 'II' → logprob: -12.64718246459961
    7. '(ii' → logprob: -12.64718246459961
    8. 'i' → logprob: -12.77218246459961
    9. ' II' → logprob: -13.14718246459961
    10. ' i' → logprob: -13.77218246459961

Token 332: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07889925688505173
    2. '()
' → logprob: -2.5788991451263428
    3. '()
' → logprob: -12.578899383544922
    4. '(' → logprob: -13.328899383544922
    5. ' ()' → logprob: -13.703899383544922
    6. '()\' → logprob: -13.828899383544922
    7. '()

' → logprob: -14.328899383544922
    8. ')' → logprob: -14.453899383544922
    9. '();' → logprob: -14.703899383544922
    10. '(
' → logprob: -15.078899383544922

Token 333: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06736773252487183
    2. 'arr' → logprob: -3.3173677921295166
    3. 'a' → logprob: -3.5673677921295166
    4. 'data' → logprob: -8.567367553710938
    5. 'values' → logprob: -9.317367553710938
    6. 'lst' → logprob: -9.442367553710938
    7. 'vals' → logprob: -9.442367553710938
    8. 'L' → logprob: -10.317367553710938
    9. 'v' → logprob: -10.567367553710938
    10. '```' → logprob: -10.567367553710938

Token 334: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11356161534786224
    2. '=' → logprob: -2.2385616302490234
    3. '.' → logprob: -7.613561630249023
    4. ',' → logprob: -9.113561630249023
    5. '[' → logprob: -9.238561630249023
    6. '[:]' → logprob: -11.613561630249023
    7. ' ' → logprob: -11.863561630249023
    8. ')' → logprob: -12.238561630249023
    9. ' =
' → logprob: -12.613561630249023
    10. ' =[' → logprob: -12.863561630249023

Token 335: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.13174256682395935
    2. ' list' → logprob: -2.131742477416992
    3. 'li' → logprob: -5.881742477416992
    4. 'mi' → logprob: -6.756742477416992
    5. ' li' → logprob: -7.881742477416992
    6. ' [' → logprob: -8.631742477416992
    7. '[' → logprob: -8.756742477416992
    8. ' mi' → logprob: -9.381742477416992
    9. '[list' → logprob: -10.631742477416992
    10. '[i' → logprob: -11.756742477416992

Token 336: 'ii' (ID: 3573)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.057630520313978195
    2. 'ii' → logprob: -2.9326305389404297
    3. '*' → logprob: -5.93263053894043
    4. 'i' → logprob: -10.05763053894043
    5. '0' → logprob: -11.18263053894043
    6. ']' → logprob: -11.30763053894043
    7. ' ii' → logprob: -11.93263053894043
    8. ' int' → logprob: -12.05763053894043
    9. 'iii' → logprob: -13.30763053894043
    10. ']int' → logprob: -13.80763053894043

Token 337: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0206720617134124e-05
    2. '()]' → logprob: -11.62501049041748
    3. '()
' → logprob: -14.12501049041748
    4. ' ()' → logprob: -15.12501049041748
    5. ')' → logprob: -16.375009536743164
    6. '())' → logprob: -16.375009536743164
    7. '(' → logprob: -18.000009536743164
    8. ']()' → logprob: -18.000009536743164
    9. '（）' → logprob: -19.000009536743164
    10. '()]
' → logprob: -19.000009536743164

Token 338: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013699039816856384
    2. 'for' → logprob: -4.763699054718018
    3. ' for' → logprob: -5.388699054718018
    4. ')' → logprob: -7.638699054718018
    5. ' ()' → logprob: -11.76369857788086
    6. '()]' → logprob: -12.13869857788086
    7. ']' → logprob: -12.26369857788086
    8. ')]' → logprob: -13.88869857788086
    9. '()
' → logprob: -13.88869857788086
    10. '	for' → logprob: -14.01369857788086

Token 339: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6403651237487793
    2. ' range' → logprob: -0.8903651237487793
    3. 'range' → logprob: -2.8903651237487793
    4. ' _' → logprob: -5.015365123748779
    5. '_range' → logprob: -8.640365600585938
    6. ' in' → logprob: -11.515365600585938
    7. ' ' → logprob: -11.890365600585938
    8. '	range' → logprob: -12.265365600585938
    9. '   ' → logprob: -14.015365600585938
    10. '  ' → logprob: -14.015365600585938

Token 340: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05336574465036392
    2. ' range' → logprob: -3.053365707397461
    3. '_' → logprob: -6.053365707397461
    4. 'in' → logprob: -6.428365707397461
    5. ' in' → logprob: -7.178365707397461
    6. '_range' → logprob: -10.803365707397461
    7. ' ' → logprob: -11.803365707397461
    8. 'i' → logprob: -12.553365707397461
    9. '	range' → logprob: -12.928365707397461
    10. '(range' → logprob: -13.553365707397461

Token 341: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '	range' → logprob: -18.751171112060547
    4. 'rang' → logprob: -19.001171112060547
    5. '(range' → logprob: -19.376171112060547
    6. ' ' → logprob: -20.376171112060547
    7. '  ' → logprob: -20.876171112060547
    8. '_' → logprob: -21.126171112060547
    9. '   ' → logprob: -21.126171112060547
    10. 'r' → logprob: -21.501171112060547

Token 342: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -9.849109119386412e-06
    2. 'N' → logprob: -11.875009536743164
    3. '(' → logprob: -12.875009536743164
    4. '(
' → logprob: -15.375009536743164
    5. ' (' → logprob: -19.125009536743164
    6. '(n' → logprob: -19.375009536743164
    7. '	N' → logprob: -20.250009536743164
    8. '
' → logprob: -20.375009536743164
    9. ' N' → logprob: -20.500009536743164
    10. '((' → logprob: -20.875009536743164

Token 343: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013810492237098515
    2. ')' → logprob: -9.375138282775879
    3. ']' → logprob: -9.875138282775879
    4. ')]
' → logprob: -13.500138282775879
    5. ')
' → logprob: -16.000137329101562
    6. ' )' → logprob: -16.125137329101562
    7. ']
' → logprob: -17.000137329101562
    8. '])' → logprob: -17.375137329101562
    9. ' ]' → logprob: -17.625137329101562
    10. ')],' → logprob: -17.625137329101562

Token 344: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05571438744664192
    2. '#' → logprob: -3.6807143688201904
    3. 'dp' → logprob: -5.0557146072387695
    4. 'def' → logprob: -5.6807146072387695
    5. 'A' → logprob: -5.6807146072387695
    6. ' 
' → logprob: -5.8057146072387695
    7. 'a' → logprob: -5.9307146072387695
    8. '<|end|>' → logprob: -6.5557146072387695
    9. 'd' → logprob: -6.6807146072387695
    10. 'for' → logprob: -6.8057146072387695

Token 345: ' Trie' (ID: 131955)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4152441918849945
    2. '#' → logprob: -2.5402441024780273
    3. 'max' → logprob: -3.0402441024780273
    4. 'count' → logprob: -3.1652441024780273
    5. 'A' → logprob: -3.2902441024780273
    6. 'from' → logprob: -3.4152441024780273
    7. 'freq' → logprob: -4.415244102478027
    8. 'ans' → logprob: -4.665244102478027
    9. 'cnt' → logprob: -4.790244102478027
    10. 'def' → logprob: -4.915244102478027

Token 346: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2617572844028473
    2. 'd' → logprob: -1.511757254600525
    3. 's' → logprob: -5.5117573738098145
    4. ' A' → logprob: -5.8867573738098145
    5. '()' → logprob: -6.8867573738098145
    6. 'r' → logprob: -7.7617573738098145
    7. '   ' → logprob: -7.8867573738098145
    8. ' =' → logprob: -8.011756896972656
    9. '(A' → logprob: -8.261756896972656
    10. '=' → logprob: -9.011756896972656

Token 347: ' tableau' (ID: 67053)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.025413360446691513
    2. ' A' → logprob: -3.7754132747650146
    3. ' tableau' → logprob: -6.775413513183594
    4. 's' → logprob: -7.400413513183594
    5. 'a' → logprob: -8.525413513183594
    6. ' array' → logprob: -10.525413513183594
    7. ')' → logprob: -10.525413513183594
    8. 'array' → logprob: -10.650413513183594
    9. 'sorted' → logprob: -11.025413513183594
    10. 'table' → logprob: -11.025413513183594

Token 348: ' dans' (ID: 2671)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003878338960930705
    2. '()
' → logprob: -6.003878116607666
    3. '()' → logprob: -7.503878116607666
    4. '.sort' → logprob: -8.003878593444824
    5. '(A' → logprob: -8.878878593444824
    6. ' A' → logprob: -9.253878593444824
    7. '(
' → logprob: -9.753878593444824
    8. '.' → logprob: -10.003878593444824
    9. '=' → logprob: -10.128878593444824
    10. ' =' → logprob: -10.128878593444824

Token 349: ' l' (ID: 305)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.580518364906311
    2. 'A' → logprob: -2.0805182456970215
    3. 'l' → logprob: -2.2055182456970215
    4. ' A' → logprob: -2.3305182456970215
    5. ' reverse' → logprob: -2.7055182456970215
    6. ')' → logprob: -4.3305182456970215
    7. ' l' → logprob: -4.9555182456970215
    8. 'sorted' → logprob: -5.3305182456970215
    9. 's' → logprob: -5.4555182456970215
    10. '.reverse' → logprob: -6.3305182456970215

Token 350: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.8097038865089417
    2. 'e' → logprob: -0.9347038865089417
    3. 'A' → logprob: -2.809703826904297
    4. 'a' → logprob: -3.809703826904297
    5. 'é' → logprob: -3.934703826904297
    6. 'es' → logprob: -4.559703826904297
    7. 'ordre' → logprob: -4.809703826904297
    8. '_' → logprob: -5.559703826904297
    9. ''espace' → logprob: -5.684703826904297
    10. ''' → logprob: -5.809703826904297

Token 351: ' cro' (ID: 11270)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.06643473356962204
    2. 'A' → logprob: -3.066434621810913
    3. 'asc' → logprob: -4.691434860229492
    4. 'sorted' → logprob: -6.441434860229492
    5. '(A' → logprob: -6.566434860229492
    6. ' A' → logprob: -7.316434860229492
    7. 'ascending' → logprob: -7.316434860229492
    8. 'reverse' → logprob: -7.441434860229492
    9. 'desc' → logprob: -7.441434860229492
    10. 'def' → logprob: -7.566434860229492

Token 352: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.0017158739501610398
    2. 'issante' → logprob: -7.626715660095215
    3. 'ss' → logprob: -8.251715660095215
    4. 'issent' → logprob: -8.376715660095215
    5. 'c' → logprob: -8.751715660095215
    6. 'is' → logprob: -8.876715660095215
    7. 'iss' → logprob: -9.251715660095215
    8. 'ant' → logprob: -9.876715660095215
    9. 'cent' → logprob: -10.001715660095215
    10. 'nt' → logprob: -10.126715660095215

Token 353: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.4140441635390744e-05
    2. '
' → logprob: -11.625014305114746
    3. ' A' → logprob: -12.750014305114746
    4. 's' → logprob: -13.750014305114746
    5. ':
' → logprob: -14.500014305114746
    6. ':' → logprob: -15.750014305114746
    7. 'a' → logprob: -15.750014305114746
    8. '.
' → logprob: -16.12501335144043
    9. ',
' → logprob: -16.75001335144043
    10. ',' → logprob: -16.87501335144043

Token 354: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.320199877838604e-07
    2. ' A' → logprob: -14.75
    3. 'a' → logprob: -21.125
    4. '
' → logprob: -21.75
    5. '	A' → logprob: -22.25
    6. '```' → logprob: -22.75
    7. '#' → logprob: -22.875
    8. 'sorted' → logprob: -23.0
    9. '   ' → logprob: -24.125
    10. ' ' → logprob: -24.875

Token 355: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.023246755823493004
    2. '.' → logprob: -3.7732467651367188
    3. ' .' → logprob: -15.398246765136719
    4. '.s' → logprob: -15.648246765136719
    5. '.sorted' → logprob: -15.648246765136719
    6. '.=' → logprob: -15.773246765136719
    7. 'sort' → logprob: -15.773246765136719
    8. '=' → logprob: -15.898246765136719
    9. ').' → logprob: -16.77324676513672
    10. '.
' → logprob: -17.02324676513672

Token 356: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25878477096557617
    2. '
' → logprob: -1.7587847709655762
    3. '<|end|>' → logprob: -3.508784770965576
    4. '()
' → logprob: -4.008784770965576
    5. '#' → logprob: -6.133784770965576
    6. '(' → logprob: -6.508784770965576
    7. ')' → logprob: -6.758784770965576
    8. '(
' → logprob: -7.508784770965576
    9. '<|end|>' → logprob: -8.008785247802734
    10. '()

' → logprob: -8.133785247802734

Token 357: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7278896570205688
    2. 'max' → logprob: -1.7278896570205688
    3. 'def' → logprob: -1.9778896570205688
    4. 'dp' → logprob: -2.1028895378112793
    5. 'count' → logprob: -2.8528895378112793
    6. 'for' → logprob: -3.1028895378112793
    7. 'i' → logprob: -3.3528895378112793
    8. 'res' → logprob: -3.7278895378112793
    9. 'answer' → logprob: -3.8528895378112793
    10. 'k' → logprob: -4.102889537811279

Token 358: ' Initial' (ID: 9209)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.319263219833374
    2. 'if' → logprob: -2.569263219833374
    3. 'left' → logprob: -2.569263219833374
    4. 'count' → logprob: -2.819263219833374
    5. 'for' → logprob: -2.819263219833374
    6. 'max' → logprob: -2.819263219833374
    7. '#' → logprob: -2.944263219833374
    8. 'ans' → logprob: -3.194263219833374
    9. 'res' → logprob: -3.319263219833374
    10. 'from' → logprob: -3.444263219833374

Token 359: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.30805861949920654
    2. 'ise' → logprob: -2.558058738708496
    3. 'isation' → logprob: -3.308058738708496
    4. 'ement' → logprob: -3.808058738708496
    5. 'ization' → logprob: -3.808058738708496
    6. 'e' → logprob: -4.058058738708496
    7. 'iser' → logprob: -4.183058738708496
    8. 'ze' → logprob: -4.433058738708496
    9. '_' → logprob: -5.183058738708496
    10. 'max' → logprob: -5.183058738708496

Token 360: ' des' (ID: 731)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1797691285610199
    2. 'max' → logprob: -3.4297690391540527
    3. 'res' → logprob: -3.8047690391540527
    4. 'count' → logprob: -3.9297690391540527
    5. ' dp' → logprob: -4.179769039154053
    6. 'ans' → logprob: -4.179769039154053
    7. 'best' → logprob: -4.429769039154053
    8. ' ans' → logprob: -4.554769039154053
    9. 'c' → logprob: -5.054769039154053
    10. 'answer' → logprob: -5.304769039154053

Token 361: ' listes' (ID: 179198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15744119882583618
    2. 'count' → logprob: -3.5324411392211914
    3. 'diff' → logprob: -3.6574411392211914
    4. 'res' → logprob: -4.032441139221191
    5. 'cnt' → logprob: -4.282441139221191
    6. 'max' → logprob: -4.907441139221191
    7. 'ans' → logprob: -4.907441139221191
    8. ' dp' → logprob: -4.907441139221191
    9. 'd' → logprob: -5.407441139221191
    10. 'c' → logprob: -5.782441139221191

Token 362: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09479623287916183
    2. 'cnt' → logprob: -3.8447961807250977
    3. 'count' → logprob: -4.094796180725098
    4. 'max' → logprob: -4.719796180725098
    5. 'even' → logprob: -5.344796180725098
    6. 'min' → logprob: -5.344796180725098
    7. 'ans' → logprob: -5.844796180725098
    8. 'prefix' → logprob: -5.969796180725098
    9. 'left' → logprob: -5.969796180725098
    10. 'diff' → logprob: -6.344796180725098

Token 363: ' stock' (ID: 6546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6147610545158386
    2. 'les' → logprob: -2.1147611141204834
    3. 'l' → logprob: -2.2397611141204834
    4. 'g' → logprob: -3.1147611141204834
    5. 'la' → logprob: -3.3647611141204834
    6. 'comp' → logprob: -3.7397611141204834
    7. 'le' → logprob: -3.8647611141204834
    8. 'diff' → logprob: -4.239760875701904
    9. 'res' → logprob: -4.614760875701904
    10. 'prefix' → logprob: -4.864760875701904

Token 364: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00046546570956707
    2. '[]' → logprob: -8.875465393066406
    3. '_' → logprob: -9.375465393066406
    4. '   ' → logprob: -9.750465393066406
    5. '()' → logprob: -10.625465393066406
    6. 'e' → logprob: -10.750465393066406
    7. 'A' → logprob: -10.875465393066406
    8. '=' → logprob: -11.125465393066406
    9. ' des' → logprob: -11.125465393066406
    10. '[' → logprob: -11.250465393066406

Token 365: ' différentes' (ID: 41398)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.803054690361023
    2. 'dp' → logprob: -0.928054690361023
    3. 'l' → logprob: -3.1780548095703125
    4. 'res' → logprob: -4.0530548095703125
    5. 'left' → logprob: -4.1780548095703125
    6. ' les' → logprob: -4.1780548095703125
    7. 'la' → logprob: -5.0530548095703125
    8. 'le' → logprob: -5.0530548095703125
    9. 'ans' → logprob: -5.1780548095703125
    10. 'diff' → logprob: -5.1780548095703125

Token 366: ' partitions' (ID: 89097)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.119857907295227
    2. 'val' → logprob: -1.369857907295227
    3. 'part' → logprob: -1.869857907295227
    4. 'diff' → logprob: -2.8698577880859375
    5. 'dp' → logprob: -3.8698577880859375
    6. 'long' → logprob: -4.1198577880859375
    7. 'versions' → logprob: -4.1198577880859375
    8. 'som' → logprob: -4.2448577880859375
    9. 'com' → logprob: -4.4948577880859375
    10. ' sommes' → logprob: -4.6198577880859375

Token 367: ' du' (ID: 1462)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.7501208782196045
    2. 'dp' → logprob: -1.7501208782196045
    3. 'part' → logprob: -1.8751208782196045
    4. 'even' → logprob: -2.2501208782196045
    5. 'G' → logprob: -2.8751208782196045
    6. 'L' → logprob: -3.5001208782196045
    7. 'partition' → logprob: -3.5001208782196045
    8. 'parts' → logprob: -3.7501208782196045
    9. 'S' → logprob: -3.8751208782196045
    10. 'P' → logprob: -4.000121116638184

Token 368: ' tableau' (ID: 67053)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.08083488047122955
    2. ' tableau' → logprob: -2.5808348655700684
    3. 'A' → logprob: -6.455834865570068
    4. '```' → logprob: -9.080835342407227
    5. 'array' → logprob: -9.830835342407227
    6. 'a' → logprob: -10.205835342407227
    7. 'tabl' → logprob: -10.580835342407227
    8. ' table' → logprob: -10.580835342407227
    9. 'tab' → logprob: -10.705835342407227
    10. 'liste' → logprob: -11.080835342407227

Token 369: '
' (ID: 198)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.644309401512146
    2. 'L' → logprob: -1.769309401512146
    3. 'B' → logprob: -2.8943095207214355
    4. 'even' → logprob: -2.8943095207214355
    5. 'part' → logprob: -3.3943095207214355
    6. 'S' → logprob: -3.6443095207214355
    7. 'small' → logprob: -4.6443095207214355
    8. 'E' → logprob: -4.7693095207214355
    9. 'sm' → logprob: -4.7693095207214355
    10. 'P' → logprob: -4.7693095207214355

Token 370: 'u' (ID: 84)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6794966459274292
    2. 'L' → logprob: -1.9294966459274292
    3. 'B' → logprob: -2.1794967651367188
    4. 'even' → logprob: -2.1794967651367188
    5. 'part' → logprob: -4.054496765136719
    6. 'A' → logprob: -4.429496765136719
    7. 'S' → logprob: -4.679496765136719
    8. 'less' → logprob: -4.929496765136719
    9. 'dp' → logprob: -4.929496765136719
    10. 'ans' → logprob: -5.179496765136719

Token 371: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6623000502586365
    2. 'p' → logprob: -1.5373001098632812
    3. 's' → logprob: -2.6623001098632812
    4. 'n' → logprob: -2.6623001098632812
    5. 'A' → logprob: -3.5373001098632812
    6. 'pper' → logprob: -4.287300109863281
    7. '1' → logprob: -4.537300109863281
    8. '0' → logprob: -4.662300109863281
    9. 'nique' → logprob: -4.662300109863281
    10. 'l' → logprob: -4.787300109863281

Token 372: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2467874139547348
    2. ',' → logprob: -1.621787428855896
    3. '=' → logprob: -3.9967873096466064
    4. '1' → logprob: -6.9967875480651855
    5. '=[]' → logprob: -6.9967875480651855
    6. ' ,' → logprob: -7.9967875480651855
    7. ',u' → logprob: -8.621787071228027
    8. '=[]
' → logprob: -8.996787071228027
    9. 's' → logprob: -9.496787071228027
    10. '0' → logprob: -9.996787071228027

Token 373: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.03830323368310928
    2. ' u' → logprob: -3.2883031368255615
    3. 'v' → logprob: -9.41330337524414
    4. ' =' → logprob: -10.41330337524414
    5. ' ' → logprob: -10.66330337524414
    6. '	u' → logprob: -10.91330337524414
    7. '=' → logprob: -11.47580337524414
    8. 's' → logprob: -11.66330337524414
    9. '=[]' → logprob: -11.66330337524414
    10. 'd' → logprob: -11.72580337524414

Token 374: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002571673830971122
    2. '3' → logprob: -9.25025749206543
    3. '0' → logprob: -10.25025749206543
    4. '1' → logprob: -10.37525749206543
    5. ',' → logprob: -10.37525749206543
    6. ' =' → logprob: -10.62525749206543
    7. '23' → logprob: -11.75025749206543
    8. 'u' → logprob: -12.50025749206543
    9. '12' → logprob: -12.62525749206543
    10. '=' → logprob: -12.75025749206543

Token 375: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38857680559158325
    2. ' =' → logprob: -1.3885767459869385
    3. '=' → logprob: -2.6385767459869385
    4. ',u' → logprob: -7.013576984405518
    5. ' ,' → logprob: -9.01357650756836
    6. '=u' → logprob: -10.88857650756836
    7. 'u' → logprob: -11.38857650756836
    8. '=[]' → logprob: -11.38857650756836
    9. '=[],' → logprob: -11.76357650756836
    10. ' ' → logprob: -12.51357650756836

Token 376: ' [],' (ID: 22188)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.0005581548321060836
    2. '[]' → logprob: -7.750558376312256
    3. ' [],' → logprob: -9.500557899475098
    4. '[' → logprob: -10.000557899475098
    5. '[]
' → logprob: -12.125557899475098
    6. '[],
' → logprob: -14.000557899475098
    7. '([],' → logprob: -14.875557899475098
    8. '[]

' → logprob: -15.375557899475098
    9. ',' → logprob: -15.625557899475098
    10. '0' → logprob: -15.750557899475098

Token 377: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.15388202667236328
    2. ' []' → logprob: -2.1538820266723633
    3. 'u' → logprob: -4.403882026672363
    4. '[],' → logprob: -4.653882026672363
    5. ' [],' → logprob: -5.403882026672363
    6. ' u' → logprob: -8.778882026672363
    7. '[]
' → logprob: -9.903882026672363
    8. '[' → logprob: -10.403882026672363
    9. '[u' → logprob: -10.528882026672363
    10. ' ' → logprob: -10.778882026672363

Token 378: 'l' (ID: 75)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22397558391094208
    2. 'u' → logprob: -2.098975658416748
    3. 'i' → logprob: -2.973975658416748
    4. 'idx' → logprob: -4.723975658416748
    5. ' for' → logprob: -5.223975658416748
    6. 'a' → logprob: -6.348975658416748
    7. 's' → logprob: -7.098975658416748
    8. 'j' → logprob: -7.098975658416748
    9. 'c' → logprob: -7.348975658416748
    10. 'm' → logprob: -7.348975658416748

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.352172613143921
    2. ',' → logprob: -1.477172613143921
    3. ' =' → logprob: -1.602172613143921
    4. '=' → logprob: -2.227172613143921
    5. 'eft' → logprob: -2.602172613143921
    6. 'e' → logprob: -3.102172613143921
    7. 'en' → logprob: -3.977172613143921
    8. 'u' → logprob: -4.3521728515625
    9. '=[]' → logprob: -4.8521728515625
    10. 'a' → logprob: -4.8521728515625

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01756538823246956
    2. '=' → logprob: -4.5175652503967285
    3. ' =' → logprob: -5.5175652503967285
    4. ' ,' → logprob: -6.2675652503967285
    5. '=[]' → logprob: -8.642565727233887
    6. ',l' → logprob: -9.267565727233887
    7. ',u' → logprob: -9.517565727233887
    8. 'u' → logprob: -9.517565727233887
    9. '1' → logprob: -9.892565727233887
    10. '=[],' → logprob: -10.017565727233887

Token 381: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.029778027907013893
    2. ' l' → logprob: -3.529778003692627
    3. '[]' → logprob: -10.904778480529785
    4. '=[]' → logprob: -13.029778480529785
    5. ' =' → logprob: -13.529778480529785
    6. ' []' → logprob: -13.529778480529785
    7. ' ' → logprob: -13.654778480529785
    8. ',' → logprob: -14.654778480529785
    9. '	l' → logprob: -14.779778480529785
    10. 'u' → logprob: -15.029778480529785

Token 382: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07531185448169708
    2. '1' → logprob: -2.7003118991851807
    3. '=[]' → logprob: -5.325311660766602
    4. 'ist' → logprob: -8.950311660766602
    5. '=[]
' → logprob: -9.325311660766602
    6. '[]' → logprob: -9.575311660766602
    7. '=[],' → logprob: -9.825311660766602
    8. '=' → logprob: -10.075311660766602
    9. ' =' → logprob: -11.075311660766602
    10. ',' → logprob: -11.075311660766602

Token 383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20641985535621643
    2. ' =' → logprob: -1.706419825553894
    3. ',' → logprob: -5.331419944763184
    4. '=[],' → logprob: -9.206419944763184
    5. '=[]' → logprob: -9.956419944763184
    6. ' ,' → logprob: -11.831419944763184
    7. ' ' → logprob: -14.706419944763184
    8. '=[]
' → logprob: -14.831419944763184
    9. ',u' → logprob: -15.456419944763184
    10. '＝' → logprob: -16.581418991088867

Token 384: ' [],' (ID: 22188)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.0012479700380936265
    2. '[]' → logprob: -6.876247882843018
    3. ' [],' → logprob: -8.626248359680176
    4. '0' → logprob: -10.501248359680176
    5. ',' → logprob: -12.751248359680176
    6. '[' → logprob: -13.001248359680176
    7. '[]
' → logprob: -13.126248359680176
    8. '1' → logprob: -14.876248359680176
    9. '[],
' → logprob: -15.126248359680176
    10. 'A' → logprob: -16.00124740600586

Token 385: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02327040582895279
    2. ' []' → logprob: -3.77327036857605
    3. '[]
' → logprob: -11.023270606994629
    4. '[],' → logprob: -12.523270606994629
    5. '[]}' → logprob: -13.148270606994629
    6. '[]

' → logprob: -14.148270606994629
    7. ' ' → logprob: -14.273270606994629
    8. '[])' → logprob: -14.523270606994629
    9. '[' → logprob: -15.273270606994629
    10. '[]>' → logprob: -15.648270606994629

Token 386: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005169243086129427
    2. 'i' → logprob: -5.38016939163208
    3. 'idx' → logprob: -8.755168914794922
    4. ' for' → logprob: -8.880168914794922
    5. 'u' → logprob: -9.130168914794922
    6. '#' → logprob: -10.130168914794922
    7. 'if' → logprob: -10.880168914794922
    8. 'n' → logprob: -11.255168914794922
    9. '=' → logprob: -11.380168914794922
    10. 'max' → logprob: -12.005168914794922

Token 387: ' Partition' (ID: 100394)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006041608285158873
    2. 'i' → logprob: -5.756041526794434
    3. 'idx' → logprob: -7.256041526794434
    4. '#' → logprob: -7.381041526794434
    5. 'def' → logprob: -8.006041526794434
    6. 'max' → logprob: -9.256041526794434
    7. 'mid' → logprob: -9.256041526794434
    8. 'u' → logprob: -9.381041526794434
    9. 'total' → logprob: -9.381041526794434
    10. 's' → logprob: -9.756041526794434

Token 388: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8191635608673096
    2. '=' → logprob: -1.0691635608673096
    3. ' =' → logprob: -1.6941635608673096
    4. ' for' → logprob: -4.1941633224487305
    5. 'if' → logprob: -6.3191633224487305
    6. 'idx' → logprob: -6.3191633224487305
    7. 'i' → logprob: -6.4441633224487305
    8. 's' → logprob: -6.5691633224487305
    9. '#' → logprob: -6.5691633224487305
    10. 'A' → logprob: -6.8191633224487305

Token 389: ' tableau' (ID: 67053)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.007244772277772427
    2. 'for' → logprob: -5.88224458694458
    3. ' A' → logprob: -6.00724458694458
    4. 'range' → logprob: -6.50724458694458
    5. ' range' → logprob: -8.632245063781738
    6. ' for' → logprob: -8.882245063781738
    7. 'a' → logprob: -11.007245063781738
    8. '#' → logprob: -11.132245063781738
    9. 'u' → logprob: -11.132245063781738
    10. 'array' → logprob: -11.257245063781738

Token 390: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0483187735080719
    2. '=' → logprob: -3.673318862915039
    3. ' for' → logprob: -4.298318862915039
    4. ' =' → logprob: -5.173318862915039
    5. ':' → logprob: -6.423318862915039
    6. ':
' → logprob: -8.048318862915039
    7. 'i' → logprob: -8.173318862915039
    8. '=
' → logprob: -9.173318862915039
    9. 'mid' → logprob: -10.048318862915039
    10. '#' → logprob: -10.923318862915039

Token 391: ' parties' (ID: 13531)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7826148867607117
    2. 'A' → logprob: -1.4076149463653564
    3. 'u' → logprob: -1.9076149463653564
    4. ' deux' → logprob: -3.0326149463653564
    5. 'mo' → logprob: -3.9076149463653564
    6. 'fonction' → logprob: -3.9076149463653564
    7. '2' → logprob: -4.032614707946777
    8. '[' → logprob: -4.532614707946777
    9. 'prem' → logprob: -5.907614707946777
    10. '```' → logprob: -6.157614707946777

Token 392: ' bass' (ID: 26405)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.7369725108146667
    2. ' ég' → logprob: -1.4869725704193115
    3. 'g' → logprob: -2.3619725704193115
    4. 'u' → logprob: -2.4869725704193115
    5. 'for' → logprob: -4.236972332000732
    6. 'pivot' → logprob: -4.611972332000732
    7. 'eg' → logprob: -4.736972332000732
    8. 'en' → logprob: -4.861972332000732
    9. 'inf' → logprob: -4.861972332000732
    10. 'ug' → logprob: -4.986972332000732

Token 393: 'es' (ID: 268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0006771695916540921
    2. 'es' → logprob: -8.125677108764648
    3. 'se' → logprob: -8.375677108764648
    4. 's' → logprob: -10.500677108764648
    5. 'é' → logprob: -10.500677108764648
    6. '[e' → logprob: -11.000677108764648
    7. '[' → logprob: -11.125677108764648
    8. 't' → logprob: -12.000677108764648
    9. '
' → logprob: -12.000677108764648
    10. 'ée' → logprob: -12.125677108764648

Token 394: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5938510894775391
    2. 'et' → logprob: -1.593851089477539
    3. 'for' → logprob: -2.718851089477539
    4. 'u' → logprob: -2.843851089477539
    5. 'A' → logprob: -2.968851089477539
    6. ' et' → logprob: -3.468851089477539
    7. ' and' → logprob: -5.218851089477539
    8. 'pour' → logprob: -5.218851089477539
    9. ' (' → logprob: -5.593851089477539
    10. 'and' → logprob: -5.593851089477539

Token 395: ' haut' (ID: 28223)
  Prédit: ' haut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' haut' → logprob: -0.20819243788719177
    2. 'ha' → logprob: -1.7081924676895142
    3. 'haut' → logprob: -5.208192348480225
    4. ' ' → logprob: -8.458192825317383
    5. ' hauts' → logprob: -8.458192825317383
    6. 'b' → logprob: -8.708192825317383
    7. ' ' → logprob: -9.333192825317383
    8. ' élev' → logprob: -9.583192825317383
    9. '```' → logprob: -9.583192825317383
    10. '  ' → logprob: -9.833192825317383

Token 396: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.15909750759601593
    2. 'e' → logprob: -2.03409743309021
    3. '
' → logprob: -5.284097671508789
    4. 'et' → logprob: -5.909097671508789
    5. 's' → logprob: -6.159097671508789
    6. 'tes' → logprob: -6.534097671508789
    7. ' et' → logprob: -6.784097671508789
    8. '```' → logprob: -7.034097671508789
    9. '   ' → logprob: -7.409097671508789
    10. 'de' → logprob: -8.409097671508789

Token 397: ' selon' (ID: 27571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08489619195461273
    2. 'mid' → logprob: -3.3348960876464844
    3. 'pour' → logprob: -4.459896087646484
    4. 'pivot' → logprob: -4.584896087646484
    5. 'half' → logprob: -4.709896087646484
    6. 'm' → logprob: -5.459896087646484
    7. 'middle' → logprob: -5.834896087646484
    8. ' for' → logprob: -6.709896087646484
    9. 'i' → logprob: -6.709896087646484
    10. 'n' → logprob: -6.959896087646484

Token 398: ' deux' (ID: 10301)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.159935712814331
    2. 'N' → logprob: -1.534935712814331
    3. 'la' → logprob: -1.909935712814331
    4. ' la' → logprob: -2.409935712814331
    5. 'l' → logprob: -2.659935712814331
    6. 'le' → logprob: -3.284935712814331
    7. ' N' → logprob: -3.409935712814331
    8. 'A' → logprob: -3.659935712814331
    9. 'leur' → logprob: -3.784935712814331
    10. ' le' → logprob: -4.40993595123291

Token 399: ' man' (ID: 873)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.4000136852264404
    2. 'p' → logprob: -1.5250136852264404
    3. 'mil' → logprob: -2.1500136852264404
    4. 'points' → logprob: -2.4000136852264404
    5. 'pivot' → logprob: -2.9000136852264404
    6. 'c' → logprob: -3.5250136852264404
    7. ' indices' → logprob: -3.5250136852264404
    8. 'mo' → logprob: -3.6500136852264404
    9. 'm' → logprob: -3.6500136852264404
    10. 'for' → logprob: -3.7750136852264404

Token 400: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.005955464672297239
    2. 't' → logprob: -6.255955696105957
    3. 'di' → logprob: -6.380955696105957
    4. 'd' → logprob: -7.505955696105957
    5. 'ieres' → logprob: -7.505955696105957
    6. 'tes' → logprob: -8.255955696105957
    7. 'iers' → logprob: -8.630955696105957
    8. 'ti' → logprob: -9.130955696105957
    9. 'des' → logprob: -9.380955696105957
    10. 'ches' → logprob: -9.630955696105957

Token 401: ' différentes' (ID: 41398)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2732248306274414
    2. ':' → logprob: -1.8982248306274414
    3. 'pour' → logprob: -3.6482248306274414
    4. 'i' → logprob: -4.398224830627441
    5. '#' → logprob: -4.398224830627441
    6. '=' → logprob: -4.773224830627441
    7. 'mid' → logprob: -4.773224830627441
    8. ':
' → logprob: -5.523224830627441
    9. 'de' → logprob: -6.148224830627441
    10. 'u' → logprob: -6.523224830627441

Token 402: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2099609375
    2. 'mid' → logprob: -2.7099609375
    3. '
' → logprob: -2.9599609375
    4. 'i' → logprob: -4.2099609375
    5. ':' → logprob: -4.3349609375
    6. ' for' → logprob: -5.2099609375
    7. 'idx' → logprob: -5.3349609375
    8. '#' → logprob: -5.5849609375
    9. 'pivot' → logprob: -5.5849609375
    10. 'u' → logprob: -5.7099609375

Token 403: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3939403295516968
    2. 'mid' → logprob: -1.2689403295516968
    3. 'm' → logprob: -3.8939404487609863
    4. 'half' → logprob: -4.268940448760986
    5. ' for' → logprob: -5.268940448760986
    6. 'i' → logprob: -6.268940448760986
    7. 'u' → logprob: -7.893940448760986
    8. 'middle' → logprob: -8.143939971923828
    9. 'cut' → logprob: -8.143939971923828
    10. 'pivot' → logprob: -8.268939971923828

Token 404: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09380752593278885
    2. 'i' → logprob: -3.0938074588775635
    3. ' a' → logprob: -3.8438074588775635
    4. ' x' → logprob: -4.218807697296143
    5. 'a' → logprob: -5.343807697296143
    6. 'x' → logprob: -6.718807697296143
    7. ' ' → logprob: -6.968807697296143
    8. ' v' → logprob: -7.468807697296143
    9. 'v' → logprob: -9.593807220458984
    10. ' _' → logprob: -9.593807220458984

Token 405: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04314328357577324
    2. 'in' → logprob: -3.1681432723999023
    3. ',' → logprob: -9.543143272399902
    4. ' ' → logprob: -10.043143272399902
    5. ' i' → logprob: -12.293143272399902
    6. '   ' → logprob: -12.293143272399902
    7. 'n' → logprob: -12.418143272399902
    8. '  ' → logprob: -13.168143272399902
    9. ' ,' → logprob: -13.418143272399902
    10. '	in' → logprob: -13.543143272399902

Token 406: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0789010226726532
    2. 'range' → logprob: -2.5789010524749756
    3. ' ' → logprob: -12.453901290893555
    4. '	range' → logprob: -13.203901290893555
    5. '(range' → logprob: -13.578901290893555
    6. '   ' → logprob: -14.078901290893555
    7. ' r' → logprob: -14.453901290893555
    8. '  ' → logprob: -14.703901290893555
    9. ' rang' → logprob: -15.328901290893555
    10. ' ran' → logprob: -15.328901290893555

Token 407: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.005826652981340885
    2. '(' → logprob: -5.255826473236084
    3. '((' → logprob: -7.755826473236084
    4. '(n' → logprob: -9.880826950073242
    5. '(len' → logprob: -10.005826950073242
    6. '(
' → logprob: -10.380826950073242
    7. 'N' → logprob: -10.630826950073242
    8. ' (' → logprob: -12.880826950073242
    9. '(u' → logprob: -13.380826950073242
    10. '()' → logprob: -13.630826950073242

Token 408: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3350280821323395
    2. '):' → logprob: -1.835028052330017
    3. '//' → logprob: -2.0850281715393066
    4. ' //' → logprob: -7.335028171539307
    5. ')' → logprob: -9.835027694702148
    6. ':' → logprob: -11.085027694702148
    7. '   ' → logprob: -11.835027694702148
    8. '):
' → logprob: -11.835027694702148
    9. '-' → logprob: -12.460027694702148
    10. '):

' → logprob: -12.585027694702148

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08714620023965836
    2. ':' → logprob: -2.962146282196045
    3. ' if' → logprob: -4.212146282196045
    4. ' ' → logprob: -4.462146282196045
    5. '    
' → logprob: -6.587146282196045
    6. ' 
' → logprob: -6.712146282196045
    7. '    ' → logprob: -7.337146282196045
    8. ' :' → logprob: -7.712146282196045
    9. '<|end|>' → logprob: -7.962146282196045
    10. 'if' → logprob: -8.212145805358887

Token 410: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47642797231674194
    2. ' if' → logprob: -0.9764279723167419
    3. '   ' → logprob: -6.101428031921387
    4. 'u' → logprob: -10.726428031921387
    5. ' u' → logprob: -10.976428031921387
    6. 'i' → logprob: -11.101428031921387
    7. '    ' → logprob: -11.476428031921387
    8. ' i' → logprob: -11.601428031921387
    9. ' 
' → logprob: -11.601428031921387
    10. ' ' → logprob: -11.726428031921387

Token 411: ' Première' (ID: 179764)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3136637508869171
    2. ' if' → logprob: -1.3136637210845947
    3. ' u' → logprob: -8.688663482666016
    4. 'u' → logprob: -9.313663482666016
    5. '   ' → logprob: -9.438663482666016
    6. 'x' → logprob: -11.438663482666016
    7. ' ' → logprob: -11.563663482666016
    8. ' A' → logprob: -12.063663482666016
    9. 'i' → logprob: -12.188663482666016
    10. 'A' → logprob: -12.313663482666016

Token 412: ' partition' (ID: 31512)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27412039041519165
    2. ' if' → logprob: -1.5241203308105469
    3. 'u' → logprob: -4.399120330810547
    4. ' u' → logprob: -5.649120330810547
    5. '   ' → logprob: -5.649120330810547
    6. ' ' → logprob: -7.524120330810547
    7. '1' → logprob: -7.649120330810547
    8. ':' → logprob: -7.899120330810547
    9. 'i' → logprob: -8.524120330810547
    10. ')' → logprob: -8.524120330810547

Token 413: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2350122332572937
    2. ' if' → logprob: -1.9850122928619385
    3. '   ' → logprob: -3.2350122928619385
    4. 'if' → logprob: -3.7350122928619385
    5. ':
' → logprob: -5.610012054443359
    6. ' :' → logprob: -6.735012054443359
    7. 'u' → logprob: -7.235012054443359
    8. ' ' → logprob: -7.360012054443359
    9. ')' → logprob: -7.360012054443359
    10. '<|end|>' → logprob: -7.610012054443359

Token 414: ' l' (ID: 305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4314609467983246
    2. ' if' → logprob: -1.056460976600647
    3. '   ' → logprob: -6.556460857391357
    4. ' u' → logprob: -7.431460857391357
    5. 'u' → logprob: -7.681460857391357
    6. ' i' → logprob: -9.181461334228516
    7. '    ' → logprob: -9.681461334228516
    8. 'i' → logprob: -9.681461334228516
    9. ' ' → logprob: -11.306461334228516
    10. '    
' → logprob: -11.931461334228516

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03622179105877876
    2. 'ow' → logprob: -4.411221981048584
    3. 'if' → logprob: -4.536221981048584
    4. 'e' → logprob: -5.786221981048584
    5. 'ower' → logprob: -5.786221981048584
    6. 'ess' → logprob: -6.911221981048584
    7. 'i' → logprob: -7.161221981048584
    8. '```' → logprob: -7.411221981048584
    9. 'en' → logprob: -7.536221981048584
    10. 'es' → logprob: -7.661221981048584

Token 416: ' prend' (ID: 37463)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008665036410093307
    2. '.' → logprob: -4.758665084838867
    3. '.ap' → logprob: -10.758665084838867
    4. '.app' → logprob: -11.383665084838867
    5. ' .' → logprob: -11.883665084838867
    6. 'append' → logprob: -13.008665084838867
    7. '.extend' → logprob: -13.883665084838867
    8. ').' → logprob: -13.883665084838867
    9. '.a' → logprob: -14.008665084838867
    10. ',' → logprob: -14.008665084838867

Token 417: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03554680943489075
    2. ' A' → logprob: -3.9105467796325684
    3. '[i' → logprob: -5.285546779632568
    4. 'i' → logprob: -5.535546779632568
    5. '[]' → logprob: -6.410546779632568
    6. 'u' → logprob: -6.535546779632568
    7. '   ' → logprob: -7.160546779632568
    8. '[' → logprob: -8.160547256469727
    9. ' i' → logprob: -8.285547256469727
    10. '[A' → logprob: -8.285547256469727

Token 418: ' première' (ID: 23423)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02478906325995922
    2. ' A' → logprob: -4.399788856506348
    3. 'i' → logprob: -4.649788856506348
    4. '[i' → logprob: -6.899788856506348
    5. ' i' → logprob: -8.274788856506348
    6. '0' → logprob: -8.399788856506348
    7. 'u' → logprob: -8.649788856506348
    8. ' ' → logprob: -9.024788856506348
    9. '   ' → logprob: -9.149788856506348
    10. '[' → logprob: -9.274788856506348

Token 419: ' moitié' (ID: 93216)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21593093872070312
    2. 'N' → logprob: -2.340930938720703
    3. ' i' → logprob: -2.965930938720703
    4. ' N' → logprob: -4.090930938720703
    5. '[i' → logprob: -4.590930938720703
    6. ' moitié' → logprob: -4.965930938720703
    7. ' (' → logprob: -6.215930938720703
    8. 'half' → logprob: -6.715930938720703
    9. '(i' → logprob: -6.840930938720703
    10. 'u' → logprob: -7.090930938720703

Token 420: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8723013401031494
    2. ',' → logprob: -1.2473013401031494
    3. ' if' → logprob: -1.4973013401031494
    4. '   ' → logprob: -2.8723013401031494
    5. 'u' → logprob: -5.49730110168457
    6. ' si' → logprob: -5.74730110168457
    7. ' ' → logprob: -6.99730110168457
    8. 'i' → logprob: -7.24730110168457
    9. '+' → logprob: -7.49730110168457
    10. ';' → logprob: -7.62230110168457

Token 421: ' u' (ID: 337)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2493584156036377
    2. ' l' → logprob: -1.2493584156036377
    3. ' u' → logprob: -1.4993584156036377
    4. 'u' → logprob: -1.6243584156036377
    5. '   ' → logprob: -6.124358177185059
    6. 'A' → logprob: -6.624358177185059
    7. '    ' → logprob: -6.999358177185059
    8. '    
' → logprob: -7.874358177185059
    9. ' 
' → logprob: -8.624358177185059
    10. ' A' → logprob: -9.249358177185059

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.039380647242069244
    2. '2' → logprob: -3.2893805503845215
    3. '.append' → logprob: -6.6643805503845215
    4. 'append' → logprob: -10.41438102722168
    5. '```' → logprob: -12.66438102722168
    6. '   ' → logprob: -12.91438102722168
    7. ' ' → logprob: -13.03938102722168
    8. ',' → logprob: -13.16438102722168
    9. ' +=' → logprob: -13.53938102722168
    10. '=' → logprob: -13.53938102722168

Token 423: ' la' (ID: 557)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.012321392074227333
    2. 'append' → logprob: -4.637321472167969
    3. '.' → logprob: -6.012321472167969
    4. ' append' → logprob: -9.887321472167969
    5. 'app' → logprob: -10.512321472167969
    6. ' .' → logprob: -11.387321472167969
    7. '.extend' → logprob: -11.637321472167969
    8. ' prend' → logprob: -12.637321472167969
    9. '_append' → logprob: -12.762321472167969
    10. '.app' → logprob: -13.262321472167969

Token 424: ' seconde' (ID: 66204)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.5075734257698059
    2. 'de' → logprob: -1.1325733661651611
    3. ' seconde' → logprob: -2.757573366165161
    4. ' deuxième' → logprob: -5.25757360458374
    5. 'prem' → logprob: -5.50757360458374
    6. 'second' → logprob: -6.63257360458374
    7. 'part' → logprob: -8.132573127746582
    8. 'der' → logprob: -8.507573127746582
    9. 'suite' → logprob: -8.507573127746582
    10. ' ' → logprob: -8.757573127746582

Token 425: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07325126975774765
    2. ',' → logprob: -3.948251247406006
    3. ' if' → logprob: -4.323251247406006
    4. 'if' → logprob: -4.323251247406006
    5. '<|end|>' → logprob: -4.823251247406006
    6. '
' → logprob: -5.073251247406006
    7. ' ' → logprob: -5.698251247406006
    8. '  ' → logprob: -6.573251247406006
    9. ';' → logprob: -6.823251247406006
    10. '[' → logprob: -6.948251247406006

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0563092976808548
    2. ' if' → logprob: -3.306309223175049
    3. 'if' → logprob: -4.306309223175049
    4. '
' → logprob: -5.931309223175049
    5. ',' → logprob: -7.181309223175049
    6. '    
' → logprob: -7.931309223175049
    7. ' ' → logprob: -8.431309700012207
    8. '  ' → logprob: -8.931309700012207
    9. ':' → logprob: -9.056309700012207
    10. '```' → logprob: -9.806309700012207

Token 427: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006632947828620672
    2. ' if' → logprob: -5.3816328048706055
    3. 'l' → logprob: -6.5066328048706055
    4. '   ' → logprob: -7.8816328048706055
    5. 'u' → logprob: -9.631632804870605
    6. 'i' → logprob: -10.006632804870605
    7. ' l' → logprob: -11.131632804870605
    8. '```' → logprob: -12.131632804870605
    9. '
' → logprob: -13.631632804870605
    10. ' i' → logprob: -13.881632804870605

Token 428: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5232279300689697
    2. 'i' → logprob: -0.8982279300689697
    3. '   ' → logprob: -9.39822769165039
    4. ' ' → logprob: -11.27322769165039
    5. '	i' → logprob: -12.77322769165039
    6. 'N' → logprob: -13.14822769165039
    7. ' N' → logprob: -14.02322769165039
    8. ' ' → logprob: -14.27322769165039
    9. '  ' → logprob: -14.39822769165039
    10. '    ' → logprob: -14.64822769165039

Token 429: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4332619905471802
    2. ' <' → logprob: -1.0582619905471802
    3. '<N' → logprob: -5.558261871337891
    4. ' ' → logprob: -7.808261871337891
    5. '<n' → logprob: -9.30826187133789
    6. '<size' → logprob: -9.68326187133789
    7. '<len' → logprob: -10.05826187133789
    8. '<num' → logprob: -10.68326187133789
    9. '<
' → logprob: -11.30826187133789
    10. '<int' → logprob: -11.43326187133789

Token 430: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01262783631682396
    2. ' N' → logprob: -4.387627601623535
    3. '(N' → logprob: -10.012627601623535
    4. '   ' → logprob: -10.137627601623535
    5. ' ' → logprob: -10.762627601623535
    6. ' (' → logprob: -11.637627601623535
    7. '(' → logprob: -13.262627601623535
    8. '	N' → logprob: -14.137627601623535
    9. '  ' → logprob: -14.262627601623535
    10. '
' → logprob: -15.262627601623535

Token 431: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0010743727907538414
    2. ' //' → logprob: -6.876074314117432
    3. '#' → logprob: -11.00107479095459
    4. '1' → logprob: -11.75107479095459
    5. '/' → logprob: -12.12607479095459
    6. '2' → logprob: -12.50107479095459
    7. '
' → logprob: -13.00107479095459
    8. '   ' → logprob: -13.00107479095459
    9. '```' → logprob: -13.75107479095459
    10. '//
' → logprob: -14.50107479095459

Token 432: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.578184497309849e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.000085830688477
    4. '```' → logprob: -15.875085830688477
    5. '
' → logprob: -16.250085830688477
    6. '4' → logprob: -16.375085830688477
    7. '  ' → logprob: -16.375085830688477
    8. '3' → logprob: -17.000085830688477
    9. ')' → logprob: -17.500085830688477
    10. '۲' → logprob: -17.812585830688477

Token 433: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8074162653647363e-05
    2. ' ' → logprob: -11.000018119812012
    3. '1' → logprob: -15.250018119812012
    4. '   ' → logprob: -15.375018119812012
    5. '3' → logprob: -15.500018119812012
    6. '```' → logprob: -15.500018119812012
    7. '4' → logprob: -15.625018119812012
    8. '
' → logprob: -16.687517166137695
    9. '  ' → logprob: -16.812517166137695
    10. ')' → logprob: -16.875017166137695

Token 434: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6933941841125488
    2. ':
' → logprob: -0.6933941841125488
    3. '):
' → logprob: -8.56839370727539
    4. '   ' → logprob: -10.81839370727539
    5. '):' → logprob: -11.06839370727539
    6. ':l' → logprob: -12.19339370727539
    7. ':
' → logprob: -12.31839370727539
    8. ')' → logprob: -12.94339370727539
    9. ' :
' → logprob: -13.19339370727539
    10. ' and' → logprob: -13.44339370727539

Token 435: '       ' (ID: 309)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6749069690704346
    2. '   ' → logprob: -0.7999069690704346
    3. '       ' → logprob: -3.5499069690704346
    4. ' l' → logprob: -4.4249067306518555
    5. '	l' → logprob: -7.4249067306518555
    6. '```' → logprob: -10.049906730651855
    7. '
' → logprob: -10.299906730651855
    8. ',l' → logprob: -11.549906730651855
    9. ' ' → logprob: -11.799906730651855
    10. ',' → logprob: -12.299906730651855

Token 436: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -1.0445127372804563e-05
    2. ' l' → logprob: -11.62501049041748
    3. '   ' → logprob: -13.50001049041748
    4. '	l' → logprob: -18.500009536743164
    5. '       ' → logprob: -20.625009536743164
    6. '_l' → logprob: -20.875009536743164
    7. '
' → logprob: -21.125009536743164
    8. 'u' → logprob: -21.375009536743164
    9. '    ' → logprob: -22.375009536743164
    10. ' ' → logprob: -22.500009536743164

Token 437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.250000953674316
    3. '```' → logprob: -15.750000953674316
    4. 'l' → logprob: -16.75
    5. '   ' → logprob: -16.75
    6. ' ' → logprob: -17.125
    7. '１' → logprob: -17.3125
    8. '`' → logprob: -18.125
    9. '
' → logprob: -18.3125
    10. 'i' → logprob: -18.8125

Token 438: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008631349541246891
    2. '.' → logprob: -4.758631229400635
    3. '1' → logprob: -12.008631706237793
    4. ' .' → logprob: -12.633631706237793
    5. '.app' → logprob: -13.008631706237793
    6. '.ap' → logprob: -13.258631706237793
    7. '.push' → logprob: -13.633631706237793
    8. '.add' → logprob: -14.383631706237793
    9. '.Append' → logprob: -14.883631706237793
    10. ').' → logprob: -15.008631706237793

Token 439: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.000494533043820411
    2. 'A' → logprob: -7.625494480133057
    3. '(' → logprob: -12.250494956970215
    4. '(
' → logprob: -13.375494956970215
    5. ' A' → logprob: -16.3754940032959
    6. '(a' → logprob: -17.8754940032959
    7. '	A' → logprob: -18.0004940032959
    8. '((' → logprob: -18.0004940032959
    9. '   ' → logprob: -18.3754940032959
    10. ' (' → logprob: -19.0004940032959

Token 440: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.282920129597187e-05
    2. 'i' → logprob: -12.000012397766113
    3. '[' → logprob: -12.625012397766113
    4. '(i' → logprob: -13.500012397766113
    5. ')' → logprob: -13.875012397766113
    6. ' [' → logprob: -14.500012397766113
    7. ' i' → logprob: -16.00001335144043
    8. '   ' → logprob: -16.25001335144043
    9. ')[' → logprob: -16.37501335144043
    10. ')i' → logprob: -16.37501335144043

Token 441: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38881731033325195
    2. '])' → logprob: -1.263817310333252
    3. ')
' → logprob: -3.513817310333252
    4. '])
' → logprob: -4.888817310333252
    5. '))' → logprob: -7.013817310333252
    6. ' )' → logprob: -7.263817310333252
    7. ' ])' → logprob: -8.388816833496094
    8. '   ' → logprob: -9.013816833496094
    9. ' )
' → logprob: -9.263816833496094
    10. ']' → logprob: -10.013816833496094

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005154181271791458
    2. ' else' → logprob: -5.755154132843018
    3. 'else' → logprob: -6.380154132843018
    4. ')' → logprob: -9.005154609680176
    5. '       ' → logprob: -9.755154609680176
    6. '    
' → logprob: -10.505154609680176
    7. '<|end|>' → logprob: -10.505154609680176
    8. '	else' → logprob: -12.005154609680176
    9. '
' → logprob: -12.130154609680176
    10. '  ' → logprob: -12.255154609680176

Token 443: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5264067649841309
    2. ' else' → logprob: -1.5264067649841309
    3. '   ' → logprob: -1.6514067649841309
    4. 'elif' → logprob: -9.651407241821289
    5. '	else' → logprob: -10.026407241821289
    6. ' ' → logprob: -10.901407241821289
    7. '    
' → logprob: -11.151407241821289
    8. ')' → logprob: -11.151407241821289
    9. ' elif' → logprob: -12.026407241821289
    10. '       ' → logprob: -12.401407241821289

Token 444: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17243339121341705
    2. ':
' → logprob: -2.297433376312256
    3. '       ' → logprob: -2.922433376312256
    4. '   ' → logprob: -5.547433376312256
    5. ' :
' → logprob: -9.672433853149414
    6. ' :' → logprob: -9.797433853149414
    7. '      ' → logprob: -11.672433853149414
    8. '    ' → logprob: -12.172433853149414
    9. 'u' → logprob: -12.297433853149414
    10. '     ' → logprob: -12.547433853149414

Token 445: '       ' (ID: 309)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.4136106073856354
    2. '       ' → logprob: -1.663610577583313
    3. 'u' → logprob: -1.913610577583313
    4. '   ' → logprob: -6.538610458374023
    5. '	u' → logprob: -8.413610458374023
    6. ' ' → logprob: -11.163610458374023
    7. '    ' → logprob: -11.413610458374023
    8. '      ' → logprob: -12.038610458374023
    9. '     ' → logprob: -12.163610458374023
    10. ',u' → logprob: -12.538610458374023

Token 446: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.011057252995669842
    2. ' u' → logprob: -4.511057376861572
    3. '   ' → logprob: -12.136056900024414
    4. '	u' → logprob: -12.636056900024414
    5. '       ' → logprob: -14.636056900024414
    6. '    ' → logprob: -16.511056900024414
    7. ' ' → logprob: -16.636056900024414
    8. '  ' → logprob: -16.886056900024414
    9. '    
' → logprob: -17.636056900024414
    10. ' ' → logprob: -18.261056900024414

Token 447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.875
    3. ' ' → logprob: -16.75
    4. '.append' → logprob: -16.75
    5. '   ' → logprob: -16.75
    6. '```' → logprob: -17.25
    7. '
' → logprob: -18.0625
    8. '_' → logprob: -18.0625
    9. '  ' → logprob: -18.375
    10. '[' → logprob: -18.4375

Token 448: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009145628428086638
    2. '.' → logprob: -7.000914573669434
    3. ' .' → logprob: -13.000914573669434
    4. 'append' → logprob: -15.250914573669434
    5. '.ap' → logprob: -16.000913619995117
    6. '.app' → logprob: -16.000913619995117
    7. '.push' → logprob: -16.500913619995117
    8. ').' → logprob: -16.625913619995117
    9. '.extend' → logprob: -16.875913619995117
    10. '.setdefault' → logprob: -16.875913619995117

Token 449: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0001238004770129919
    2. '(' → logprob: -9.000123977661133
    3. '(
' → logprob: -15.625123977661133
    4. ' (' → logprob: -16.125123977661133
    5. 'A' → logprob: -16.375123977661133
    6. '((' → logprob: -18.750123977661133
    7. '(a' → logprob: -19.625123977661133
    8. '('' → logprob: -20.625123977661133
    9. '(

' → logprob: -20.875123977661133
    10. '(
' → logprob: -21.000123977661133

Token 450: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.249780638725497e-05
    2. '[' → logprob: -10.750032424926758
    3. ')' → logprob: -12.500032424926758
    4. ' [' → logprob: -13.000032424926758
    5. '[N' → logprob: -13.250032424926758
    6. '(i' → logprob: -13.750032424926758
    7. '[A' → logprob: -14.625032424926758
    8. ')[' → logprob: -14.750032424926758
    9. 'i' → logprob: -14.875032424926758
    10. ']' → logprob: -14.875032424926758

Token 451: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00016682932619005442
    2. ')' → logprob: -9.125166893005371
    3. ']' → logprob: -10.250166893005371
    4. '])
' → logprob: -11.250166893005371
    5. ' ])' → logprob: -12.125166893005371
    6. ')]' → logprob: -13.375166893005371
    7. ')])' → logprob: -13.875166893005371
    8. '))' → logprob: -15.125166893005371
    9. ']))' → logprob: -15.625166893005371
    10. '])]' → logprob: -15.625166893005371

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014519213698804379
    2. '
' → logprob: -5.264519214630127
    3. ' ' → logprob: -5.639519214630127
    4. '<|end|>' → logprob: -6.014519214630127
    5. '  
' → logprob: -6.639519214630127
    6. '    
' → logprob: -7.139519214630127
    7. '  ' → logprob: -7.389519214630127
    8. 'for' → logprob: -9.264518737792969
    9. '```' → logprob: -9.514518737792969
    10. '    ' → logprob: -9.889518737792969

Token 453: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04383894056081772
    2. ' ' → logprob: -4.043838977813721
    3. '
' → logprob: -4.543838977813721
    4. '#' (adapté à ' #') → logprob: -5.418838977813721
    5. '    
' → logprob: -6.293838977813721
    6. '  
' → logprob: -6.293838977813721
    7. 'for' → logprob: -6.418838977813721
    8. '  ' → logprob: -6.668838977813721
    9. ')' → logprob: -6.918838977813721
    10. '<|end|>' → logprob: -6.918838977813721

Token 454: ' Se' (ID: 1550)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0664065033197403
    2. '   ' → logprob: -3.066406488418579
    3. '#' → logprob: -4.691406726837158
    4. ' if' → logprob: -4.816406726837158
    5. ' ' → logprob: -8.44140625
    6. '```' → logprob: -10.19140625
    7. '  ' → logprob: -10.31640625
    8. ' #' → logprob: -10.44140625
    9. '    ' → logprob: -11.19140625
    10. '
' → logprob: -11.69140625

Token 455: 'conde' (ID: 50435)
  Prédit: 'cond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cond' → logprob: -0.39325419068336487
    2. 'conde' → logprob: -1.1432541608810425
    3. 'c' → logprob: -6.643254280090332
    4. 'm' → logprob: -7.018254280090332
    5. 'con' → logprob: -7.143254280090332
    6. '```' → logprob: -7.393254280090332
    7. '#' → logprob: -7.518254280090332
    8. 'elif' → logprob: -8.018254280090332
    9. 'condition' → logprob: -8.143254280090332
    10. 'l' → logprob: -8.393254280090332

Token 456: ' partition' (ID: 31512)
  Prédit: ' partition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partition' → logprob: -0.6368401050567627
    2. 'partition' → logprob: -0.7618401050567627
    3. ' if' → logprob: -6.011839866638184
    4. 'if' → logprob: -7.261839866638184
    5. 'part' → logprob: -8.136839866638184
    6. ' ' → logprob: -8.136839866638184
    7. '_partition' → logprob: -8.636839866638184
    8. ':' → logprob: -9.386839866638184
    9. '   ' → logprob: -9.386839866638184
    10. ' :' → logprob: -10.511839866638184

Token 457: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12846212089061737
    2. ' :' → logprob: -2.128462076187134
    3. ' if' → logprob: -7.128462314605713
    4. ' :
' → logprob: -8.378461837768555
    5. 'if' → logprob: -8.503461837768555
    6. ':
' → logprob: -8.503461837768555
    7. '   ' → logprob: -9.878461837768555
    8. ' =' → logprob: -11.628461837768555
    9. ' ' → logprob: -11.628461837768555
    10. '```' → logprob: -11.878461837768555

Token 458: ' l' (ID: 305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2816644310951233
    2. ' if' → logprob: -1.6566643714904785
    3. '   ' → logprob: -3.1566643714904785
    4. 'l' → logprob: -5.5316643714904785
    5. 'u' → logprob: -6.0316643714904785
    6. ' l' → logprob: -6.0316643714904785
    7. ' u' → logprob: -6.4066643714904785
    8. 'i' → logprob: -8.031664848327637
    9. ' i' → logprob: -8.031664848327637
    10. '```' → logprob: -8.031664848327637

Token 459: '2' (ID: 17)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5396323800086975
    2. 'if' → logprob: -0.9146323800086975
    3. 'cond' → logprob: -5.164632320404053
    4. 'lf' → logprob: -6.289632320404053
    5. ' i' → logprob: -6.789632320404053
    6. 'i' → logprob: -6.789632320404053
    7. 'elif' → logprob: -6.914632320404053
    8. 'l' → logprob: -6.914632320404053
    9. '1' → logprob: -7.414632320404053
    10. '   ' → logprob: -7.414632320404053

Token 460: ' prend' (ID: 37463)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.012572279199957848
    2. '.' → logprob: -4.387572288513184
    3. ' .' → logprob: -11.137572288513184
    4. '   ' → logprob: -11.137572288513184
    5. 'append' → logprob: -11.387572288513184
    6. '.extend' → logprob: -11.762572288513184
    7. 'if' → logprob: -13.012572288513184
    8. ',' → logprob: -13.012572288513184
    9. '.app' → logprob: -13.012572288513184
    10. '.
' → logprob: -13.262572288513184

Token 461: ' la' (ID: 557)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.5376829504966736
    2. 'A' → logprob: -0.9126829504966736
    3. 'l' → logprob: -4.662683010101318
    4. 'u' → logprob: -6.162683010101318
    5. '(' → logprob: -6.912683010101318
    6. '(u' → logprob: -7.037683010101318
    7. '([' → logprob: -8.41268253326416
    8. '([]' → logprob: -8.78768253326416
    9. ' A' → logprob: -8.91268253326416
    10. '[A' → logprob: -8.91268253326416

Token 462: ' première' (ID: 23423)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18230774998664856
    2. 'l' → logprob: -2.432307720184326
    3. '[]' → logprob: -3.557307720184326
    4. '[i' → logprob: -3.682307720184326
    5. 'u' → logprob: -5.432307720184326
    6. 'i' → logprob: -5.432307720184326
    7. '[N' → logprob: -5.807307720184326
    8. ' A' → logprob: -6.057307720184326
    9. 'N' → logprob: -6.432307720184326
    10. '[' → logprob: -6.557307720184326

Token 463: ' moitié' (ID: 93216)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.7087981700897217
    2. 'i' → logprob: -1.9587981700897217
    3. 'N' → logprob: -2.0837981700897217
    4. ' (' → logprob: -2.4587981700897217
    5. 'half' → logprob: -2.4587981700897217
    6. ' N' → logprob: -2.7087981700897217
    7. ' moitié' → logprob: -2.7087981700897217
    8. ' i' → logprob: -2.8337981700897217
    9. '(i' → logprob: -3.5837981700897217
    10. 'moins' → logprob: -3.7087981700897217

Token 464: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06695864349603653
    2. ' if' → logprob: -3.1919586658477783
    3. ',' → logprob: -4.316958427429199
    4. 'if' → logprob: -4.816958427429199
    5. '<|end|>' → logprob: -6.566958427429199
    6. ' and' → logprob: -8.9419584274292
    7. ' ' → logprob: -9.3169584274292
    8. '  ' → logprob: -9.6919584274292
    9. ' et' → logprob: -9.8169584274292
    10. ' ,' → logprob: -9.8169584274292

Token 465: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.03821384906768799
    2. 'ondi' → logprob: -3.2882137298583984
    3. 'on' → logprob: -9.288213729858398
    4. 'ont' → logprob: -10.163213729858398
    5. 'ondissement' → logprob: -11.038213729858398
    6. 'ound' → logprob: -11.538213729858398
    7. 'êt' → logprob: -11.913213729858398
    8. 'onde' → logprob: -12.913213729858398
    9. 'o' → logprob: -13.288213729858398
    10. 'онд' → logprob: -13.788213729858398

Token 466: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.03375888243317604
    2. 'i' → logprob: -3.4087588787078857
    3. 'is' → logprob: -9.533759117126465
    4. 'ies' → logprob: -11.533759117126465
    5. 'y' → logprob: -11.783759117126465
    6. 'e' → logprob: -12.033759117126465
    7. '
' → logprob: -12.158759117126465
    8. '...' → logprob: -13.033759117126465
    9. '[i' → logprob: -13.283759117126465
    10. '+' → logprob: -14.033759117126465

Token 467: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40949076414108276
    2. '+' → logprob: -1.5344908237457275
    3. ' vers' → logprob: -3.1594908237457275
    4. 'if' → logprob: -3.9094908237457275
    5. 'up' → logprob: -3.9094908237457275
    6. 'plus' → logprob: -5.409490585327148
    7. ',' → logprob: -5.534490585327148
    8. '-' → logprob: -5.784490585327148
    9. 'down' → logprob: -5.784490585327148
    10. '       ' → logprob: -6.284490585327148

Token 468: ' supérieur' (ID: 98491)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.0875152051448822
    2. 'mil' → logprob: -3.212515115737915
    3. 'bas' → logprob: -4.712515354156494
    4. 'haut' → logprob: -5.087515354156494
    5. ' supérieur' → logprob: -5.337515354156494
    6. 'plus' → logprob: -5.837515354156494
    7. 'ent' → logprob: -5.962515354156494
    8. 'centre' → logprob: -6.087515354156494
    9. 'b' → logprob: -6.337515354156494
    10. 'int' → logprob: -6.462515354156494

Token 469: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0062243938446045
    2. 'if' → logprob: -1.0062243938446045
    3. ' if' → logprob: -1.7562243938446045
    4. ',' → logprob: -2.5062243938446045
    5. '+' → logprob: -5.506224632263184
    6. ' (' → logprob: -6.006224632263184
    7. 'i' → logprob: -7.006224632263184
    8. 'up' → logprob: -7.131224632263184
    9. ' ,' → logprob: -7.256224632263184
    10. ' ' → logprob: -7.631224632263184

Token 470: ' u' (ID: 337)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5717090368270874
    2. '   ' → logprob: -0.9467090368270874
    3. 'if' → logprob: -3.196709156036377
    4. ' ' → logprob: -5.821709156036377
    5. ' i' → logprob: -6.696709156036377
    6. ' and' → logprob: -7.821709156036377
    7. '  ' → logprob: -7.946709156036377
    8. '    ' → logprob: -8.196708679199219
    9. ' et' → logprob: -8.696708679199219
    10. '<|end|>' → logprob: -8.696708679199219

Token 471: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.968312951968983e-06
    2. '```' → logprob: -12.250009536743164
    3. '1' → logprob: -13.250009536743164
    4. '   ' → logprob: -14.062509536743164
    5. ' ' → logprob: -14.500009536743164
    6. '₂' → logprob: -15.000009536743164
    7. '``' → logprob: -15.750009536743164
    8. 'u' → logprob: -15.937509536743164
    9. '
' → logprob: -16.250009536743164
    10. '  ' → logprob: -16.437509536743164

Token 472: ' le' (ID: 505)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011087823659181595
    2. '.' → logprob: -6.876108646392822
    3. '   ' → logprob: -9.62610912322998
    4. 'append' → logprob: -12.62610912322998
    5. ' .' → logprob: -12.62610912322998
    6. '.setdefault' → logprob: -13.50110912322998
    7. '.app' → logprob: -15.12610912322998
    8. 'if' → logprob: -15.37610912322998
    9. '.extend' → logprob: -15.37610912322998
    10. '.ap' → logprob: -15.62610912322998

Token 473: ' reste' (ID: 26769)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.29436033964157104
    2. ' reste' → logprob: -2.794360399246216
    3. 'else' → logprob: -2.919360399246216
    4. 'reste' → logprob: -3.544360399246216
    5. 'rest' → logprob: -3.669360399246216
    6. 'i' → logprob: -3.919360399246216
    7. 'N' → logprob: -4.044360160827637
    8. '   ' → logprob: -4.419360160827637
    9. ' A' → logprob: -5.044360160827637
    10. '[i' → logprob: -5.294360160827637

Token 474: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002020355314016342
    2. ' if' → logprob: -6.627020359039307
    3. '<|end|>' → logprob: -8.002019882202148
    4. ',' → logprob: -8.502019882202148
    5. ':' → logprob: -9.752019882202148
    6. ' ' → logprob: -10.752019882202148
    7. '  ' → logprob: -11.252019882202148
    8. '```' → logprob: -11.502019882202148
    9. '    ' → logprob: -11.627019882202148
    10. '    
' → logprob: -11.877019882202148

Token 475: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014382332563400269
    2. ' if' → logprob: -4.389382362365723
    3. 'if' → logprob: -6.764382362365723
    4. '```' → logprob: -8.389382362365723
    5. ' ' → logprob: -9.014382362365723
    6. '  ' → logprob: -9.139382362365723
    7. '    
' → logprob: -9.639382362365723
    8. '<|end|>' → logprob: -9.889382362365723
    9. '
' → logprob: -10.139382362365723
    10. ',' → logprob: -10.639382362365723

Token 476: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7321233749389648
    2. ' if' → logprob: -1.2321233749389648
    3. '   ' → logprob: -1.4821233749389648
    4. '```' → logprob: -9.357123374938965
    5. ' ' → logprob: -9.607123374938965
    6. ' i' → logprob: -9.857123374938965
    7. 'i' → logprob: -10.732123374938965
    8. '	if' → logprob: -10.982123374938965
    9. '  ' → logprob: -11.607123374938965
    10. '    ' → logprob: -11.857123374938965

Token 477: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14274822175502777
    2. 'i' → logprob: -2.0177481174468994
    3. '   ' → logprob: -9.89274787902832
    4. '(i' → logprob: -12.14274787902832
    5. '	i' → logprob: -12.14274787902832
    6. ' ' → logprob: -12.39274787902832
    7. '  ' → logprob: -13.39274787902832
    8. ' ' → logprob: -13.51774787902832
    9. '    ' → logprob: -14.45524787902832
    10. '```' → logprob: -14.70524787902832

Token 478: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14294663071632385
    2. '<' → logprob: -2.017946720123291
    3. '<N' → logprob: -8.642946243286133
    4. ' ' → logprob: -9.892946243286133
    5. ' >=' → logprob: -10.767946243286133
    6. '<n' → logprob: -12.267946243286133
    7. '>=' → logprob: -12.392946243286133
    8. '<size' → logprob: -12.767946243286133
    9. '<len' → logprob: -13.705446243286133
    10. '<int' → logprob: -13.955446243286133

Token 479: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3889952600002289
    2. ' (' → logprob: -1.1389952898025513
    3. '(n' → logprob: -6.388995170593262
    4. '(int' → logprob: -9.263995170593262
    5. '(len' → logprob: -9.388995170593262
    6. '(math' → logprob: -9.388995170593262
    7. ' -' → logprob: -10.013995170593262
    8. '-' → logprob: -10.138995170593262
    9. '((' → logprob: -11.138995170593262
    10. ' ' → logprob: -11.513995170593262

Token 480: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.20976302027702332
    2. 'N' → logprob: -1.7097630500793457
    3. ' (' → logprob: -4.834763050079346
    4. ' N' → logprob: -8.334762573242188
    5. '   ' → logprob: -10.084762573242188
    6. '(' → logprob: -10.959762573242188
    7. ' ' → logprob: -11.334762573242188
    8. '(n' → logprob: -11.459762573242188
    9. '
' → logprob: -12.334762573242188
    10. '+' → logprob: -12.584762573242188

Token 481: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1630191057920456
    2. ' +' → logprob: -1.913019061088562
    3. ' //' → logprob: -7.038019180297852
    4. '//' → logprob: -7.163019180297852
    5. ' ' → logprob: -8.038019180297852
    6. '1' → logprob: -8.163019180297852
    7. '2' → logprob: -8.538019180297852
    8. ')' → logprob: -8.913019180297852
    9. '   ' → logprob: -9.788019180297852
    10. '3' → logprob: -10.413019180297852

Token 482: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.620622712536715e-05
    2. ' ' → logprob: -10.000045776367188
    3. '
' → logprob: -15.750045776367188
    4. '3' → logprob: -15.750045776367188
    5. '2' → logprob: -16.000045776367188
    6. '   ' → logprob: -16.125045776367188
    7. '0' → logprob: -16.750045776367188
    8. '```' → logprob: -16.875045776367188
    9. '(' → logprob: -17.750045776367188
    10. '+' → logprob: -18.437545776367188

Token 483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '3' → logprob: -15.750000953674316
    3. '0' → logprob: -15.875000953674316
    4. '2' → logprob: -16.375
    5. '
' → logprob: -16.375
    6. '```' → logprob: -18.125
    7. ' ' → logprob: -18.75
    8. '4' → logprob: -18.75
    9. '   ' → logprob: -19.25
    10. '(' → logprob: -19.25

Token 484: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030322402715682983
    2. ')//' → logprob: -3.530322313308716
    3. ' )' → logprob: -7.780322551727295
    4. '//' → logprob: -8.905322074890137
    5. ' //' → logprob: -12.405322074890137
    6. ')
' → logprob: -12.780322074890137
    7. '2' → logprob: -13.280322074890137
    8. '```' → logprob: -13.530322074890137
    9. ')>>' → logprob: -13.530322074890137
    10. '   ' → logprob: -14.030322074890137

Token 485: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.17030899226665497
    2. ' //' → logprob: -2.045309066772461
    3. ')' → logprob: -3.670309066772461
    4. ')//' → logprob: -7.420309066772461
    5. '2' → logprob: -7.545309066772461
    6. '#' → logprob: -8.670309066772461
    7. '```' → logprob: -8.670309066772461
    8. ' ' → logprob: -8.795309066772461
    9. '1' → logprob: -9.795309066772461
    10. '
' → logprob: -10.670309066772461

Token 486: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010334034450352192
    2. ' ' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.251033782958984
    4. '```' → logprob: -16.313533782958984
    5. '  ' → logprob: -16.501033782958984
    6. '1' → logprob: -16.751033782958984
    7. '

' → logprob: -16.813533782958984
    8. '
' → logprob: -17.063533782958984
    9. '
' → logprob: -18.376033782958984
    10. ')' → logprob: -18.376033782958984

Token 487: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004311460361350328
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -16.062931060791016
    4. '
' → logprob: -16.187931060791016
    5. '```' → logprob: -16.750431060791016
    6. '1' → logprob: -17.250431060791016
    7. '  ' → logprob: -17.375431060791016
    8. '

' → logprob: -17.500431060791016
    9. '۲' → logprob: -17.562931060791016
    10. '２' → logprob: -17.812931060791016

Token 488: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.027498237788677216
    2. ':' → logprob: -3.777498245239258
    3. '):
' → logprob: -5.902498245239258
    4. '   ' → logprob: -6.527498245239258
    5. '):' → logprob: -11.152498245239258
    6. '():
' → logprob: -11.902498245239258
    7. '       ' → logprob: -11.902498245239258
    8. ':l' → logprob: -11.902498245239258
    9. ':
' → logprob: -12.902498245239258
    10. ' l' → logprob: -12.902498245239258

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05804533138871193
    2. '   ' → logprob: -3.0580453872680664
    3. 'l' → logprob: -4.683045387268066
    4. ' l' → logprob: -8.808045387268066
    5. '	l' → logprob: -12.183045387268066
    6. ' ' → logprob: -12.808045387268066
    7. '  ' → logprob: -13.308045387268066
    8. '      ' → logprob: -14.058045387268066
    9. '     ' → logprob: -14.308045387268066
    10. '```' → logprob: -14.683045387268066

Token 490: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -7.886803359724581e-05
    2. ' l' → logprob: -9.750079154968262
    3. '   ' → logprob: -10.875079154968262
    4. '	l' → logprob: -14.000079154968262
    5. 'u' → logprob: -14.500079154968262
    6. '_l' → logprob: -16.125078201293945
    7. '       ' → logprob: -16.250078201293945
    8. '  ' → logprob: -18.625078201293945
    9. '    ' → logprob: -18.875078201293945
    10. '[l' → logprob: -18.875078201293945

Token 491: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -18.125
    3. '₂' → logprob: -18.5
    4. '２' → logprob: -18.875
    5. '```' → logprob: -19.125
    6. '_' → logprob: -19.125
    7. 'i' → logprob: -19.375
    8. '۲' → logprob: -19.5
    9. '   ' → logprob: -20.1875
    10. 'a' → logprob: -20.25

Token 492: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.692145012086257e-05
    2. '.' → logprob: -10.000046730041504
    3. '.app' → logprob: -14.250046730041504
    4. '.setdefault' → logprob: -15.125046730041504
    5. '.ap' → logprob: -15.875046730041504
    6. '.add' → logprob: -16.00004768371582
    7. '.push' → logprob: -16.50004768371582
    8. 'append' → logprob: -16.87504768371582
    9. ' .' → logprob: -17.00004768371582
    10. '.Append' → logprob: -17.62504768371582

Token 493: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -5.848420551046729e-05
    2. 'A' → logprob: -9.7500581741333
    3. '(
' → logprob: -16.500059127807617
    4. '(' → logprob: -17.875059127807617
    5. '[A' → logprob: -19.000059127807617
    6. '((' → logprob: -19.125059127807617
    7. '```' → logprob: -19.250059127807617
    8. '   ' → logprob: -19.375059127807617
    9. ' (' → logprob: -19.750059127807617
    10. ' A' → logprob: -20.000059127807617

Token 494: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -12.500005722045898
    3. 'i' → logprob: -14.375005722045898
    4. ' [' → logprob: -15.000005722045898
    5. '[I' → logprob: -15.000005722045898
    6. '(i' → logprob: -16.2500057220459
    7. ')' → logprob: -17.2500057220459
    8. '[A' → logprob: -17.3750057220459
    9. '[
' → logprob: -17.7500057220459
    10. '[j' → logprob: -17.7500057220459

Token 495: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12709514796733856
    2. ')
' → logprob: -2.1270952224731445
    3. '   ' → logprob: -9.002095222473145
    4. ')
' → logprob: -11.127095222473145
    5. ' )' → logprob: -11.502095222473145
    6. ']' → logprob: -11.502095222473145
    7. '])' → logprob: -12.627095222473145
    8. ' )
' → logprob: -13.002095222473145
    9. ')

' → logprob: -14.002095222473145
    10. ' ' → logprob: -14.377095222473145

Token 496: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002562137378845364
    2. 'else' → logprob: -8.375256538391113
    3. ' else' → logprob: -10.625256538391113
    4. '<|end|>' → logprob: -14.375256538391113
    5. '```' → logprob: -15.125256538391113
    6. '	else' → logprob: -16.000255584716797
    7. ')' → logprob: -16.000255584716797
    8. '   ' → logprob: -16.500255584716797
    9. '  ' → logprob: -16.625255584716797
    10. '       ' → logprob: -17.750255584716797

Token 497: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2616782784461975
    2. 'else' (adapté à ' else') → logprob: -1.5116782188415527
    3. ' else' → logprob: -4.636678218841553
    4. '	else' → logprob: -12.011678695678711
    5. ')' → logprob: -13.011678695678711
    6. ' ' → logprob: -13.636678695678711
    7. '  ' → logprob: -14.136678695678711
    8. '   ' → logprob: -15.261678695678711
    9. '<|end|>' → logprob: -15.261678695678711
    10. '       ' → logprob: -15.386678695678711

Token 498: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37066808342933655
    2. ':' → logprob: -1.2456680536270142
    3. ':
' → logprob: -3.8706681728363037
    4. '   ' → logprob: -6.870667934417725
    5. ')' → logprob: -10.745668411254883
    6. '.' → logprob: -11.620668411254883
    7. 'u' → logprob: -11.745668411254883
    8. '      ' → logprob: -11.745668411254883
    9. '):
' → logprob: -11.870668411254883
    10. ' u' → logprob: -11.995668411254883

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019379887729883194
    2. 'u' → logprob: -4.01938009262085
    3. ' u' → logprob: -6.76938009262085
    4. '   ' → logprob: -9.644379615783691
    5. '	u' → logprob: -11.269379615783691
    6. '      ' → logprob: -13.644379615783691
    7. '     ' → logprob: -14.519379615783691
    8. ',u' → logprob: -15.019379615783691
    9. '[u' → logprob: -15.144379615783691
    10. ' ' → logprob: -15.644379615783691

Token 500: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -1.9027791495318525e-05
    2. '   ' → logprob: -11.250019073486328
    3. ' u' → logprob: -12.250019073486328
    4. '       ' → logprob: -14.125019073486328
    5. '	u' → logprob: -15.000019073486328
    6. '    ' → logprob: -17.750019073486328
    7. '  ' → logprob: -17.875019073486328
    8. '[u' → logprob: -18.375019073486328
    9. '    
' → logprob: -18.625019073486328
    10. '        ' → logprob: -19.000019073486328

Token 501: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. '1' → logprob: -12.625003814697266
    3. 'u' → logprob: -16.000003814697266
    4. '   ' → logprob: -16.375003814697266
    5. '２' → logprob: -16.750003814697266
    6. '```' → logprob: -17.375003814697266
    7. '.append' → logprob: -17.687503814697266
    8. '[' → logprob: -18.125003814697266
    9. 'l' → logprob: -18.125003814697266
    10. ' ' → logprob: -18.312503814697266

Token 502: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.7848862373502925e-05
    2. '.' → logprob: -10.500027656555176
    3. 'append' → logprob: -16.125028610229492
    4. ' .' → logprob: -16.375028610229492
    5. '.app' → logprob: -16.875028610229492
    6. '.Append' → logprob: -17.875028610229492
    7. '.push' → logprob: -18.375028610229492
    8. ').' → logprob: -19.375028610229492
    9. '.add' → logprob: -19.375028610229492
    10. '.ap' → logprob: -19.750028610229492

Token 503: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.9981420336989686e-05
    2. '(' → logprob: -11.375020027160645
    3. 'A' → logprob: -11.750020027160645
    4. '(
' → logprob: -14.875020027160645
    5. '[A' → logprob: -16.625019073486328
    6. ' (' → logprob: -17.000019073486328
    7. ')' → logprob: -17.125019073486328
    8. '   ' → logprob: -17.875019073486328
    9. ' A' → logprob: -19.375019073486328
    10. '```' → logprob: -19.625019073486328

Token 504: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00034535606391727924
    2. 'i' → logprob: -8.250345230102539
    3. 'A' → logprob: -10.375345230102539
    4. '(i' → logprob: -10.875345230102539
    5. '[' → logprob: -11.125345230102539
    6. '[A' → logprob: -11.125345230102539
    7. ')' → logprob: -13.500345230102539
    8. ']' → logprob: -14.000345230102539
    9. ')i' → logprob: -14.875345230102539
    10. '{i' → logprob: -15.000345230102539

Token 505: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02190188504755497
    2. ')' → logprob: -3.896901845932007
    3. ')]' → logprob: -7.271902084350586
    4. ']' → logprob: -7.521902084350586
    5. ')])' → logprob: -9.646902084350586
    6. '])
' → logprob: -10.646902084350586
    7. '])]' → logprob: -10.646902084350586
    8. ' ])' → logprob: -13.021902084350586
    9. '))' → logprob: -13.271902084350586
    10. ']))' → logprob: -13.521902084350586

Token 506: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2612813711166382
    2. '<|end|>' → logprob: -1.5112813711166382
    3. 'for' → logprob: -1.6362813711166382
    4. '#' → logprob: -2.1362814903259277
    5. 'print' → logprob: -2.8862814903259277
    6. 'result' → logprob: -3.3862814903259277
    7. 'def' → logprob: -3.8862814903259277
    8. ')' → logprob: -4.261281490325928
    9. '```' → logprob: -4.386281490325928
    10. 'answer' → logprob: -4.636281490325928

Token 507: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3158552646636963
    2. 'diff' → logprob: -2.6908552646636963
    3. '#' → logprob: -2.9408552646636963
    4. 'max' → logprob: -3.0658552646636963
    5. 'res' → logprob: -3.9408552646636963
    6. 'if' → logprob: -4.315855026245117
    7. 'result' → logprob: -4.815855026245117
    8. 'min' → logprob: -4.815855026245117
    9. 'm' → logprob: -4.815855026245117
    10. 'u' → logprob: -4.940855026245117

Token 508: ' du' (ID: 1462)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.868088960647583
    2. 'max' → logprob: -1.618088960647583
    3. 'l' → logprob: -2.368088960647583
    4. 'u' → logprob: -2.493088960647583
    5. 'min' → logprob: -2.743088960647583
    6. 'd' → logprob: -2.993088960647583
    7. '#' → logprob: -3.368088960647583
    8. 'res' → logprob: -4.868088722229004
    9. 'dif' → logprob: -5.118088722229004
    10. 'result' → logprob: -5.118088722229004

Token 509: ' résultat' (ID: 62556)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.938805103302002
    2. 'diff' → logprob: -0.938805103302002
    3. 'res' → logprob: -2.313805103302002
    4. 'result' → logprob: -2.938805103302002
    5. 'sum' → logprob: -3.938805103302002
    6. 's' → logprob: -4.063805103302002
    7. 'ans' → logprob: -4.563805103302002
    8. 'answer' → logprob: -5.938805103302002
    9. 'print' → logprob: -6.313805103302002
    10. 'min' → logprob: -6.438805103302002

Token 510: ' selon' (ID: 27571)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.394943505525589
    2. 'ans' → logprob: -1.8949434757232666
    3. 'result' → logprob: -3.1449434757232666
    4. 'r' → logprob: -3.2699434757232666
    5. 'diff' → logprob: -3.2699434757232666
    6. 'max' → logprob: -4.269943714141846
    7. 'answer' → logprob: -4.519943714141846
    8. 's' → logprob: -4.894943714141846
    9. 'print' → logprob: -5.019943714141846
    10. 'x' → logprob: -5.769943714141846

Token 511: ' que' (ID: 661)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3520817160606384
    2. 'abs' → logprob: -2.852081775665283
    3. 'u' → logprob: -3.102081775665283
    4. '(N' → logprob: -3.477081775665283
    5. '(max' → logprob: -3.477081775665283
    6. 'la' → logprob: -3.602081775665283
    7. 'l' → logprob: -3.727081775665283
    8. 'len' → logprob: -3.852081775665283
    9. '(u' → logprob: -3.977081775665283
    10. '#' → logprob: -4.977081775665283

Token 512: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.035638950765132904
    2. ' N' → logprob: -3.7856390476226807
    3. 'le' → logprob: -5.910638809204102
    4. 'la' → logprob: -6.035638809204102
    5. 'l' → logprob: -6.285638809204102
    6. 'len' → logprob: -6.285638809204102
    7. ' le' → logprob: -6.910638809204102
    8. ' la' → logprob: -7.285638809204102
    9. 'u' → logprob: -7.410638809204102
    10. '(N' → logprob: -7.785638809204102

Token 513: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.05560602247714996
    2. ' %' → logprob: -2.9306061267852783
    3. '==' → logprob: -8.6806058883667
    4. '<|end|>' → logprob: -9.0556058883667
    5. '#' → logprob: -9.3056058883667
    6. ' ==' → logprob: -9.8056058883667
    7. '%
' → logprob: -10.1806058883667
    8. ' ' → logprob: -10.5556058883667
    9. '
' → logprob: -10.7431058883667
    10. '>' → logprob: -10.8056058883667

Token 514: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.02891642600297928
    2. 'pa' → logprob: -4.278916358947754
    3. '1' → logprob: -5.278916358947754
    4. '2' → logprob: -5.778916358947754
    5. 'imp' → logprob: -5.778916358947754
    6. 'im' → logprob: -7.278916358947754
    7. 'even' → logprob: -7.653916358947754
    8. 'par' → logprob: -7.653916358947754
    9. 'pairs' → logprob: -7.653916358947754
    10. 'p' → logprob: -9.153916358947754

Token 515: ' ou' (ID: 2031)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09318693727254868
    2. ' if' → logprob: -3.468186855316162
    3. '=' → logprob: -3.718186855316162
    4. 'or' → logprob: -4.718186855316162
    5. ' or' → logprob: -4.843186855316162
    6. '*' → logprob: -5.468186855316162
    7. ' =' → logprob: -5.843186855316162
    8. ',' → logprob: -6.343186855316162
    9. '#' → logprob: -6.468186855316162
    10. ' ' → logprob: -6.843186855316162

Token 516: ' impair' (ID: 64113)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.010032536461949348
    2. 'im' → logprob: -5.010032653808594
    3. 'odd' → logprob: -6.510032653808594
    4. ' impair' → logprob: -6.635032653808594
    5. '1' → logprob: -8.510032653808594
    6. '#' → logprob: -9.385032653808594
    7. '```' → logprob: -9.635032653808594
    8. ' imp' → logprob: -10.385032653808594
    9. '2' → logprob: -10.635032653808594
    10. 'non' → logprob: -10.885032653808594

Token 517: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1466381847858429
    2. 'res' → logprob: -2.2716381549835205
    3. 'result' → logprob: -4.0216383934021
    4. 'ans' → logprob: -4.3966383934021
    5. 'diff' → logprob: -6.6466383934021
    6. 'answer' → logprob: -7.1466383934021
    7. 'r' → logprob: -8.521637916564941
    8. 'ret' → logprob: -8.771637916564941
    9. 'rés' → logprob: -9.021637916564941
    10. 's' → logprob: -9.396637916564941

Token 518: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0487273745238781
    2. 'res' → logprob: -3.29872727394104
    3. 'ans' → logprob: -5.298727512359619
    4. 'result' → logprob: -5.298727512359619
    5. 'diff' → logprob: -8.173727035522461
    6. 'answer' → logprob: -8.923727035522461
    7. 'r' → logprob: -10.173727035522461
    8. 'max' → logprob: -10.423727035522461
    9. 'rés' → logprob: -10.548727035522461
    10. 'ret' → logprob: -10.923727035522461

Token 519: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.10025542229413986
    2. 'N' → logprob: -2.3502554893493652
    3. ' ' → logprob: -9.975255012512207
    4. '  ' → logprob: -13.975255012512207
    5. '   ' → logprob: -14.725255012512207
    6. ' ' → logprob: -14.975255012512207
    7. ' (' → logprob: -15.100255012512207
    8. '(N' → logprob: -16.225255966186523
    9. '	N' → logprob: -16.350255966186523
    10. ' len' → logprob: -16.475255966186523

Token 520: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6931551098823547
    2. ' %' → logprob: -0.6931551098823547
    3. ' %
' → logprob: -12.943155288696289
    4. ' ' → logprob: -12.943155288696289
    5. ' ' → logprob: -14.068155288696289
    6. '%
' → logprob: -14.068155288696289
    7. '```' → logprob: -14.943155288696289
    8. '==' → logprob: -15.068155288696289
    9. '   ' → logprob: -15.568155288696289
    10. '2' → logprob: -15.568155288696289

Token 521: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0059290360659360886
    2. ' ' → logprob: -5.130928993225098
    3. '==' → logprob: -15.380928993225098
    4. '=' → logprob: -16.380929946899414
    5. '```' → logprob: -16.380929946899414
    6. '1' → logprob: -17.755929946899414
    7. '  ' → logprob: -17.755929946899414
    8. '3' → logprob: -18.130929946899414
    9. ' ==' → logprob: -18.380929946899414
    10. '   ' → logprob: -19.130929946899414

Token 522: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '```' → logprob: -18.000001907348633
    5. '  ' → logprob: -18.125001907348633
    6. '4' → logprob: -18.125001907348633
    7. '==' → logprob: -18.500001907348633
    8. '
' → logprob: -19.062501907348633
    9. '3' → logprob: -19.312501907348633
    10. '1' → logprob: -19.750001907348633

Token 523: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01106221228837967
    2. ' ==' → logprob: -4.511062145233154
    3. '=' → logprob: -11.386062622070312
    4. '==
' → logprob: -13.386062622070312
    5. '0' → logprob: -14.636062622070312
    6. '!=' → logprob: -14.886062622070312
    7. '===' → logprob: -15.386062622070312
    8. '()==' → logprob: -15.386062622070312
    9. ')==' → logprob: -15.886062622070312
    10. ':' → logprob: -15.886062622070312

Token 524: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09309624880552292
    2. ':
' → logprob: -2.4680962562561035
    3. 'print' → logprob: -6.2180962562561035
    4. '   ' → logprob: -6.2180962562561035
    5. ' print' → logprob: -9.968095779418945
    6. ' :' → logprob: -10.843095779418945
    7. 'result' → logprob: -10.843095779418945
    8. '=' → logprob: -11.718095779418945
    9. '.' → logprob: -11.968095779418945
    10. 'res' → logprob: -12.468095779418945

Token 525: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.041256945580244064
    2. 'res' → logprob: -3.916256904602051
    3. 'for' → logprob: -5.041256904602051
    4. 'result' → logprob: -5.666256904602051
    5. 'ans' → logprob: -5.791256904602051
    6. 'r' → logprob: -6.166256904602051
    7. 'u' → logprob: -6.541256904602051
    8. 'm' → logprob: -7.416256904602051
    9. 'x' → logprob: -7.541256904602051
    10. '#' (adapté à ' #') → logprob: -7.916256904602051

Token 526: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.060101550072431564
    2. 'res' → logprob: -3.8101015090942383
    3. 'u' → logprob: -4.810101509094238
    4. 'l' → logprob: -5.185101509094238
    5. 'result' → logprob: -5.560101509094238
    6. 'r' → logprob: -5.810101509094238
    7. 'for' → logprob: -5.810101509094238
    8. 'm' → logprob: -6.185101509094238
    9. 'ans' → logprob: -6.185101509094238
    10. 'mid' → logprob: -6.310101509094238

Token 527: ' le' (ID: 505)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.76073157787323
    2. 'N' → logprob: -1.63573157787323
    3. ' u' → logprob: -2.3857316970825195
    4. 'u' → logprob: -2.3857316970825195
    5. 'len' → logprob: -2.6357316970825195
    6. ' len' → logprob: -3.0107316970825195
    7. ' ' → logprob: -5.1357316970825195
    8. 'l' → logprob: -5.5107316970825195
    9. '#' → logprob: -5.6357316970825195
    10. 'True' → logprob: -5.7607316970825195

Token 528: ' nombre' (ID: 9733)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0389666557312012
    2. 'len' → logprob: -1.0389666557312012
    3. '#' → logprob: -2.288966655731201
    4. 'result' → logprob: -2.913966655731201
    5. 'print' → logprob: -3.913966655731201
    6. 'rés' → logprob: -3.913966655731201
    7. 'mil' → logprob: -3.913966655731201
    8. 'u' → logprob: -4.163966655731201
    9. 'nombre' → logprob: -4.288966655731201
    10. 'max' → logprob: -4.663966655731201

Token 529: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7576268315315247
    2. 'est' → logprob: -0.8826268315315247
    3. 'pair' → logprob: -3.38262677192688
    4. 's' → logprob: -3.88262677192688
    5. '#' → logprob: -4.007627010345459
    6. ' est' → logprob: -4.007627010345459
    7. 'N' → logprob: -5.632627010345459
    8. 'n' → logprob: -6.007627010345459
    9. ' d' → logprob: -6.132627010345459
    10. '_pairs' → logprob: -6.132627010345459

Token 530: ''' (ID: 6)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4378441572189331
    2. 'élé' → logprob: -1.562844157218933
    3. 's' → logprob: -3.5628442764282227
    4. '#' → logprob: -3.5628442764282227
    5. 'u' → logprob: -3.6878442764282227
    6. '_' → logprob: -3.9378442764282227
    7. 'A' → logprob: -4.437844276428223
    8. ' éléments' → logprob: -4.687844276428223
    9. ''est' → logprob: -5.187844276428223
    10. 'est' → logprob: -5.312844276428223

Token 531: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0013505916576832533
    2. 'elements' → logprob: -7.626350402832031
    3. '#' → logprob: -8.001350402832031
    4. ' éléments' → logprob: -8.376350402832031
    5. 'él' → logprob: -9.001350402832031
    6. 'é' → logprob: -9.501350402832031
    7. 'el' → logprob: -10.501350402832031
    8. 'A' → logprob: -11.251350402832031
    9. 'lements' → logprob: -11.751350402832031
    10. '1' → logprob: -12.376350402832031

Token 532: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.16437287628650665
    2. 'lements' → logprob: -2.7893729209899902
    3. 'éments' → logprob: -3.4143729209899902
    4. 'lé' → logprob: -3.7893729209899902
    5. 'ements' → logprob: -3.9143729209899902
    6. 't' → logprob: -5.53937292098999
    7. 'es' → logprob: -6.28937292098999
    8. 'iments' → logprob: -6.66437292098999
    9. 'im' → logprob: -7.03937292098999
    10. 'ment' → logprob: -7.16437292098999

Token 533: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.011364213190972805
    2. ' est' → logprob: -4.761363983154297
    3. '==' → logprob: -6.886363983154297
    4. '>=' → logprob: -7.261363983154297
    5. '>' → logprob: -7.636363983154297
    6. 'is' → logprob: -9.386363983154297
    7. ' ==' → logprob: -9.511363983154297
    8. '%' → logprob: -9.511363983154297
    9. ' is' → logprob: -9.761363983154297
    10. 'es' → logprob: -10.011363983154297

Token 534: ' impair' (ID: 64113)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.13679033517837524
    2. 'im' → logprob: -2.8867902755737305
    3. ' impair' → logprob: -2.8867902755737305
    4. 'pair' → logprob: -4.2617902755737305
    5. 'odd' → logprob: -6.2617902755737305
    6. ' imp' → logprob: -8.38679027557373
    7. '_' → logprob: -11.13679027557373
    8. 'strict' → logprob: -11.76179027557373
    9. ' pair' → logprob: -11.88679027557373
    10. '#' → logprob: -12.13679027557373

Token 535: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24346065521240234
    2. '   ' → logprob: -1.8684606552124023
    3. ':
' → logprob: -2.8684606552124023
    4. ',' → logprob: -5.618460655212402
    5. ' :' → logprob: -7.493460655212402
    6. ' and' → logprob: -7.868460655212402
    7. ' :
' → logprob: -9.368460655212402
    8. 'print' → logprob: -9.618460655212402
    9. 'and' → logprob: -10.618460655212402
    10. ' ,' → logprob: -10.743460655212402

Token 536: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13415218889713287
    2. 'res' → logprob: -2.7591521739959717
    3. 'result' → logprob: -4.259152412414551
    4. 'm' → logprob: -4.759152412414551
    5. 'for' → logprob: -5.009152412414551
    6. 'u' → logprob: -5.134152412414551
    7. 'mid' → logprob: -5.259152412414551
    8. '#' → logprob: -5.384152412414551
    9. 'r' → logprob: -5.634152412414551
    10. 'ans' → logprob: -6.009152412414551

Token 537: ' applique' (ID: 180579)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08835429698228836
    2. ' print' → logprob: -3.4633543491363525
    3. 'pr' → logprob: -4.088354110717773
    4. '#' → logprob: -4.213354110717773
    5. 'continue' → logprob: -5.088354110717773
    6. 'aff' → logprob: -5.588354110717773
    7. ' continue' → logprob: -6.463354110717773
    8. 'met' → logprob: -6.838354110717773
    9. 'a' → logprob: -7.088354110717773
    10. ' #' → logprob: -7.463354110717773

Token 538: ' deux' (ID: 10301)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.3688292503356934
    2. 'l' → logprob: -1.4938292503356934
    3. 'max' → logprob: -1.4938292503356934
    4. ' u' → logprob: -2.8688292503356934
    5. 'len' → logprob: -2.8688292503356934
    6. 'min' → logprob: -2.8688292503356934
    7. ' l' → logprob: -3.3688292503356934
    8. ' max' → logprob: -3.6188292503356934
    9. 'sum' → logprob: -4.243829250335693
    10. 'print' → logprob: -4.868829250335693

Token 539: ' form' (ID: 1625)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5946024656295776
    2. '#' → logprob: -1.9696024656295776
    3. 's' → logprob: -2.344602584838867
    4. 'pass' → logprob: -3.469602584838867
    5. ' for' → logprob: -3.594602584838867
    6. 'print' → logprob: -3.719602584838867
    7. 'som' → logprob: -3.969602584838867
    8. 'mé' → logprob: -4.344602584838867
    9. 'm' → logprob: -4.594602584838867
    10. 'diff' → logprob: -4.594602584838867

Token 540: 'ules' (ID: 3787)
  Prédit: 'ules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ules' → logprob: -0.079713836312294
    2. 'u' → logprob: -3.579713821411133
    3. '```' → logprob: -4.079713821411133
    4. 'es' → logprob: -4.829713821411133
    5. 'ulas' → logprob: -5.454713821411133
    6. 'ule' → logprob: -5.704713821411133
    7. '_' → logprob: -6.204713821411133
    8. '**' → logprob: -6.579713821411133
    9. '``' → logprob: -6.579713821411133
    10. '[' → logprob: -6.829713821411133

Token 541: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44019705057144165
    2. '   ' → logprob: -1.4401969909667969
    3. ':
' → logprob: -3.190196990966797
    4. 'result' → logprob: -3.440196990966797
    5. 'res' → logprob: -4.565196990966797
    6. 'for' → logprob: -4.690196990966797
    7. 'print' → logprob: -5.315196990966797
    8. ' =' → logprob: -5.690196990966797
    9. '=' → logprob: -5.815196990966797
    10. ' for' → logprob: -6.065196990966797

Token 542: ' trouver' (ID: 23195)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.3379607200622559
    2. 'max' → logprob: -1.4629607200622559
    3. 'calcul' → logprob: -1.8379607200622559
    4. 'le' → logprob: -2.462960720062256
    5. ' calcul' → logprob: -3.087960720062256
    6. 'la' → logprob: -3.462960720062256
    7. 'l' → logprob: -3.712960720062256
    8. 'min' → logprob: -3.712960720062256
    9. 'cal' → logprob: -4.087960720062256
    10. ' u' → logprob: -4.087960720062256

Token 543: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.17902256548404694
    2. 'u' → logprob: -3.4290225505828857
    3. 'ans' → logprob: -3.9290225505828857
    4. 'min' → logprob: -4.054022789001465
    5. '(max' → logprob: -4.054022789001465
    6. '2' → logprob: -4.554022789001465
    7. 'res' → logprob: -4.554022789001465
    8. 'le' → logprob: -4.679022789001465
    9. 'l' → logprob: -4.929022789001465
    10. '(N' → logprob: -5.054022789001465

Token 544: ' solution' (ID: 7578)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3103671967983246
    2. 'ré' → logprob: -2.4353671073913574
    3. 'maximum' → logprob: -2.8103671073913574
    4. 'diff' → logprob: -3.3103671073913574
    5. ' max' → logprob: -4.060367107391357
    6. 's' → logprob: -4.435367107391357
    7. 'rés' → logprob: -4.560367107391357
    8. 'answer' → logprob: -4.685367107391357
    9. ' maximum' → logprob: -5.560367107391357
    10. 'result' → logprob: -5.560367107391357

Token 545: ' optimale' (ID: 72604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22542060911655426
    2. ':' → logprob: -2.1004207134246826
    3. 'res' → logprob: -3.8504207134246826
    4. ' =' → logprob: -4.3504204750061035
    5. 'r' → logprob: -4.4754204750061035
    6. 'result' → logprob: -4.4754204750061035
    7. ':
' → logprob: -5.3504204750061035
    8. 'print' → logprob: -5.8504204750061035
    9. '=' → logprob: -6.1004204750061035
    10. 's' → logprob: -6.1004204750061035

Token 546: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37933894991874695
    2. ':' → logprob: -2.2543389797210693
    3. 'result' → logprob: -2.6293389797210693
    4. 'res' → logprob: -3.0043389797210693
    5. ':
' → logprob: -3.2543389797210693
    6. 'print' → logprob: -3.5043389797210693
    7. 'max' → logprob: -5.50433874130249
    8. '
' → logprob: -6.00433874130249
    9. 'answer' → logprob: -6.00433874130249
    10. 'r' → logprob: -6.50433874130249

Token 547: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5767470002174377
    2. 'result' → logprob: -1.576746940612793
    3. 'r' → logprob: -2.451746940612793
    4. '   ' → logprob: -3.201746940612793
    5. 'ans' → logprob: -3.326746940612793
    6. 'print' → logprob: -3.701746940612793
    7. '
' → logprob: -4.201746940612793
    8. 'answer' → logprob: -4.701746940612793
    9. 'ret' → logprob: -5.451746940612793
    10. 'R' → logprob: -5.451746940612793

Token 548: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6996456980705261
    2. 'res' → logprob: -0.9496456980705261
    3. 'print' → logprob: -2.574645757675171
    4. 'r' → logprob: -4.574645519256592
    5. 'result' → logprob: -4.949645519256592
    6. 'x' → logprob: -5.074645519256592
    7. 'answer' → logprob: -5.199645519256592
    8. 'a' → logprob: -6.199645519256592
    9. 'ret' → logprob: -6.449645519256592
    10. '
' → logprob: -7.074645519256592

Token 549: ' On' (ID: 2160)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4229385256767273
    2. 'ans' → logprob: -2.047938585281372
    3. 'r' → logprob: -2.297938585281372
    4. 'print' → logprob: -2.672938585281372
    5. 'result' → logprob: -4.297938346862793
    6. 'x' → logprob: -4.547938346862793
    7. 'a' → logprob: -5.547938346862793
    8. 'answer' → logprob: -5.922938346862793
    9. 'diff' → logprob: -6.297938346862793
    10. 's' → logprob: -6.547938346862793

Token 550: ' considère' (ID: 176437)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05538341403007507
    2. 'continue' → logprob: -3.9303834438323975
    3. ' print' → logprob: -4.430383205413818
    4. 'p' → logprob: -5.430383205413818
    5. 'pr' → logprob: -5.805383205413818
    6. '#' → logprob: -5.805383205413818
    7. ' continue' → logprob: -6.555383205413818
    8. 'r' → logprob: -6.680383205413818
    9. 'res' → logprob: -6.805383205413818
    10. 's' → logprob: -6.805383205413818

Token 551: ' les' (ID: 1341)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.8396612405776978
    2. 'max' → logprob: -1.3396612405776978
    3. ' u' → logprob: -2.589661121368408
    4. 'u' → logprob: -3.089661121368408
    5. ' la' → logprob: -3.089661121368408
    6. 'min' → logprob: -3.839661121368408
    7. ' l' → logprob: -3.839661121368408
    8. ' ' → logprob: -3.839661121368408
    9. ' min' → logprob: -3.964661121368408
    10. 'l' → logprob: -4.964661121368408

Token 552: ' deux' (ID: 10301)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.43871647119522095
    2. ' max' → logprob: -1.6887164115905762
    3. 'min' → logprob: -2.813716411590576
    4. 'u' → logprob: -3.313716411590576
    5. ' u' → logprob: -4.313716411590576
    6. 'diff' → logprob: -4.438716411590576
    7. ' min' → logprob: -4.938716411590576
    8. 'abs' → logprob: -5.188716411590576
    9. 'maximum' → logprob: -5.688716411590576
    10. 'val' → logprob: -5.688716411590576

Token 553: ' types' (ID: 6009)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1245003938674927
    2. 'res' → logprob: -1.4995003938674927
    3. 'val' → logprob: -1.8745003938674927
    4. 'result' → logprob: -2.499500274658203
    5. 'form' → logprob: -2.999500274658203
    6. 'max' → logprob: -3.249500274658203
    7. 'som' → logprob: -4.124500274658203
    8. 'diff' → logprob: -4.249500274658203
    9. 'm' → logprob: -4.374500274658203
    10. 'c' → logprob: -4.624500274658203

Token 554: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.40219083428382874
    2. 'd' → logprob: -1.4021908044815063
    3. ' de' → logprob: -2.902190923690796
    4. '#' → logprob: -4.027190685272217
    5. ' d' → logprob: -5.527190685272217
    6. 'max' → logprob: -6.152190685272217
    7. 'u' → logprob: -6.527190685272217
    8. 'diff' → logprob: -6.902190685272217
    9. '   ' → logprob: -7.152190685272217
    10. 's' → logprob: -7.277190685272217

Token 555: ' partitions' (ID: 89097)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partition' → logprob: -1.1818678379058838
    2. 'part' → logprob: -1.5568678379058838
    3. 'max' → logprob: -2.431867837905884
    4. 's' → logprob: -2.431867837905884
    5. 'cou' → logprob: -2.931867837905884
    6. 'diff' → logprob: -3.056867837905884
    7. 'maximum' → logprob: -3.806867837905884
    8. 'val' → logprob: -4.181867599487305
    9. 'm' → logprob: -4.181867599487305
    10. 'mé' → logprob: -4.306867599487305

Token 556: ' et' (ID: 859)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9417706727981567
    2. 'result' → logprob: -1.5667706727981567
    3. '
' → logprob: -1.9417706727981567
    4. 'r' → logprob: -2.316770553588867
    5. 's' → logprob: -3.441770553588867
    6. 'max' → logprob: -3.816770553588867
    7. '   ' → logprob: -4.191770553588867
    8. '#' → logprob: -4.566770553588867
    9. 'm' → logprob: -4.691770553588867
    10. 'answer' → logprob: -4.816770553588867

Token 557: ' prend' (ID: 37463)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03653871268033981
    2. ' print' → logprob: -4.911538600921631
    3. ' calc' → logprob: -5.411538600921631
    4. 'calc' → logprob: -5.411538600921631
    5. 'calcul' → logprob: -5.536538600921631
    6. 'cho' → logprob: -5.661538600921631
    7. 'max' → logprob: -6.286538600921631
    8. 'pr' → logprob: -6.286538600921631
    9. 'cal' → logprob: -6.661538600921631
    10. 'aff' → logprob: -6.661538600921631

Token 558: ' le' (ID: 505)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2213386595249176
    2. 'max' → logprob: -1.7213386297225952
    3. ' la' → logprob: -4.096338748931885
    4. ' min' → logprob: -7.221338748931885
    5. ' ' → logprob: -7.721338748931885
    6. ' le' → logprob: -7.721338748931885
    7. 'min' → logprob: -8.096338272094727
    8. '   ' → logprob: -8.096338272094727
    9. 'r' → logprob: -8.221338272094727
    10. '=max' → logprob: -9.471338272094727

Token 559: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.002091615227982402
    2. 'min' → logprob: -6.502091407775879
    3. ' max' → logprob: -7.752091407775879
    4. 'maximum' → logprob: -8.877091407775879
    5. 'minimum' → logprob: -11.002091407775879
    6. ' maximum' → logprob: -13.627091407775879
    7. 'ma' → logprob: -14.752091407775879
    8. 'm' → logprob: -15.002091407775879
    9. '(max' → logprob: -16.002092361450195
    10. 'me' → logprob: -16.252092361450195

Token 560: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3306012451648712
    2. 'res' → logprob: -1.4556012153625488
    3. '   ' → logprob: -3.455601215362549
    4. ':' → logprob: -5.705601215362549
    5. 'answer' → logprob: -6.080601215362549
    6. 'r' → logprob: -6.205601215362549
    7. 'print' → logprob: -6.205601215362549
    8. 'max' → logprob: -6.580601215362549
    9. '(
' → logprob: -7.080601215362549
    10. '
' → logprob: -7.205601215362549

Token 561: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5186512470245361
    2. 'res' → logprob: -1.5186512470245361
    3. 'result' → logprob: -1.8936512470245361
    4. 'r' → logprob: -4.268651008605957
    5. 'ans' → logprob: -4.643651008605957
    6. 'answer' → logprob: -4.768651008605957
    7. '
' → logprob: -7.018651008605957
    8. 'ret' → logprob: -8.268651008605957
    9. '```' → logprob: -8.268651008605957
    10. 'a' → logprob: -8.518651008605957

Token 562: ' ans' (ID: 3345)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6556961536407471
    2. 'print' → logprob: -1.155696153640747
    3. 'ans' (adapté à ' ans') → logprob: -2.155696153640747
    4. 'r' → logprob: -3.780696153640747
    5. 'result' → logprob: -3.905696153640747
    6. 'answer' → logprob: -5.655695915222168
    7. 'x' → logprob: -6.655695915222168
    8. 'ret' → logprob: -7.530695915222168
    9. 'a' → logprob: -8.280695915222168
    10. 'max' → logprob: -8.405695915222168

Token 563: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12923896312713623
    2. '=' → logprob: -2.129239082336426
    3. '1' → logprob: -6.129239082336426
    4. '_' → logprob: -9.004239082336426
    5. '=max' → logprob: -13.504239082336426
    6. ' ' → logprob: -13.754239082336426
    7. 's' → logprob: -14.504239082336426
    8. ' ' → logprob: -14.879239082336426
    9. '_=' → logprob: -15.004239082336426
    10. '＝' → logprob: -15.129239082336426

Token 564: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2740369141101837
    2. ' max' → logprob: -1.6490368843078613
    3. '(max' → logprob: -3.5240368843078613
    4. 'u' → logprob: -4.774036884307861
    5. '(u' → logprob: -5.524036884307861
    6. ' (' → logprob: -6.649036884307861
    7. ' u' → logprob: -6.899036884307861
    8. 'min' → logprob: -7.149036884307861
    9. 'l' → logprob: -7.274036884307861
    10. '(' → logprob: -7.899036884307861

Token 565: '(
' (ID: 1607)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.25237199664115906
    2. '((' → logprob: -2.0023720264434814
    3. '(' → logprob: -3.7523720264434814
    4. '(max' → logprob: -4.127371788024902
    5. '(abs' → logprob: -4.252371788024902
    6. '(
' → logprob: -4.377371788024902
    7. '(sum' → logprob: -4.627371788024902
    8. '(l' → logprob: -5.127371788024902
    9. '(min' → logprob: -5.627371788024902
    10. 'u' → logprob: -7.002371788024902

Token 566: '       ' (ID: 309)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.23726853728294373
    2. 'u' → logprob: -1.9872685670852661
    3. 'abs' → logprob: -4.737268447875977
    4. '(min' → logprob: -4.737268447875977
    5. '(max' → logprob: -4.862268447875977
    6. 'sum' → logprob: -5.237268447875977
    7. '(l' → logprob: -5.237268447875977
    8. ' (' → logprob: -5.237268447875977
    9. '(abs' → logprob: -5.237268447875977
    10. 'max' → logprob: -5.237268447875977

Token 567: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.5169895887374878
    2. 'u' → logprob: -1.1419895887374878
    3. 'max' → logprob: -4.141989707946777
    4. 'abs' → logprob: -4.266989707946777
    5. 'min' → logprob: -4.516989707946777
    6. '(min' → logprob: -4.641989707946777
    7. '(max' → logprob: -4.766989707946777
    8. '(' (adapté à ' (') → logprob: -5.641989707946777
    9. '(abs' → logprob: -5.641989707946777
    10. '(l' → logprob: -5.891989707946777

Token 568: '2' (ID: 17)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.28479939699172974
    2. 'l' → logprob: -2.659799337387085
    3. 'max' → logprob: -2.659799337387085
    4. 'sum' → logprob: -2.909799337387085
    5. 'min' → logprob: -3.909799337387085
    6. '(u' → logprob: -4.034799575805664
    7. 'abs' → logprob: -5.534799575805664
    8. '(max' → logprob: -5.784799575805664
    9. '(min' → logprob: -6.159799575805664
    10. '(l' → logprob: -6.159799575805664

Token 569: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9208186268806458
    2. ' *' → logprob: -1.170818567276001
    3. '*u' → logprob: -1.295818567276001
    4. '*(' → logprob: -4.29581880569458
    5. '*l' → logprob: -5.54581880569458
    6. 'u' → logprob: -9.295818328857422
    7. '**' → logprob: -9.420818328857422
    8. ')' → logprob: -10.545818328857422
    9. '*n' → logprob: -10.545818328857422
    10. '*i' → logprob: -10.670818328857422

Token 570: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8769770264625549
    2. 'l' → logprob: -1.7519769668579102
    3. 'min' → logprob: -1.7519769668579102
    4. '(min' → logprob: -2.87697696685791
    5. 'max' → logprob: -3.00197696685791
    6. 'u' → logprob: -3.62697696685791
    7. '(l' → logprob: -3.75197696685791
    8. 'len' → logprob: -3.87697696685791
    9. '(sum' → logprob: -3.87697696685791
    10. '(u' → logprob: -4.12697696685791

Token 571: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.4359603226184845
    2. '(l' → logprob: -1.060960292816162
    3. 'u' → logprob: -5.560960292816162
    4. 'l' → logprob: -5.810960292816162
    5. '(' → logprob: -8.81096076965332
    6. '([' → logprob: -9.56096076965332
    7. '((' → logprob: -10.31096076965332
    8. '(i' → logprob: -11.06096076965332
    9. '[u' → logprob: -11.18596076965332
    10. '(
' → logprob: -11.43596076965332

Token 572: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04859691113233566
    2. '2' → logprob: -3.0485968589782715
    3. ')' → logprob: -12.61109733581543
    4. '
' → logprob: -14.11109733581543
    5. '```' → logprob: -14.42359733581543
    6. '(' → logprob: -14.67359733581543
    7. '_' → logprob: -14.92359733581543
    8. '[' → logprob: -15.11109733581543
    9. '``' → logprob: -15.11109733581543
    10. '

' → logprob: -15.17359733581543

Token 573: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017915592761710286
    2. '[i' → logprob: -7.251791477203369
    3. ')-' → logprob: -7.751791477203369
    4. '[' → logprob: -8.626791954040527
    5. '[:' → logprob: -8.876791954040527
    6. ' )' → logprob: -9.251791954040527
    7. '))' → logprob: -9.376791954040527
    8. '[k' → logprob: -10.751791954040527
    9. '   ' → logprob: -10.876791954040527
    10. '[:-' → logprob: -11.001791954040527

Token 574: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12792499363422394
    2. '-' → logprob: -2.127924919128418
    3. ')' → logprob: -7.127924919128418
    4. '+' → logprob: -9.502924919128418
    5. ' ' → logprob: -9.877924919128418
    6. ' +' → logprob: -11.252924919128418
    7. ' )' → logprob: -11.252924919128418
    8. '[' → logprob: -11.502924919128418
    9. ')-' → logprob: -12.002924919128418
    10. '  ' → logprob: -12.252924919128418

Token 575: ' u' (ID: 337)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.003173314267769456
    2. '2' → logprob: -6.753173351287842
    3. ' sum' → logprob: -6.753173351287842
    4. '(sum' → logprob: -7.503173351287842
    5. 'N' → logprob: -8.753172874450684
    6. '(' → logprob: -10.128172874450684
    7. '(N' → logprob: -10.628172874450684
    8. '   ' → logprob: -11.003172874450684
    9. ')' → logprob: -11.628172874450684
    10. '1' → logprob: -11.878172874450684

Token 576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06352602690458298
    2. '2' → logprob: -3.313525915145874
    3. 'm' → logprob: -3.813525915145874
    4. 'l' → logprob: -6.313526153564453
    5. 'n' → logprob: -7.688526153564453
    6. 'sum' → logprob: -8.688526153564453
    7. 'p' → logprob: -9.376026153564453
    8. '(' → logprob: -9.876026153564453
    9. 'u' → logprob: -10.063526153564453
    10. 's' → logprob: -10.376026153564453

Token 577: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24187110364437103
    2. '[-' → logprob: -1.7418711185455322
    3. '[len' → logprob: -4.741870880126953
    4. ')' → logprob: -4.741870880126953
    5. 'len' → logprob: -4.991870880126953
    6. '1' → logprob: -6.241870880126953
    7. '2' → logprob: -6.491870880126953
    8. '#' → logprob: -6.804370880126953
    9. 'sum' → logprob: -6.866870880126953
    10. '[i' → logprob: -7.429370880126953

Token 578: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002224364085122943
    2. '-' → logprob: -6.127224445343018
    3. ' ' → logprob: -10.62722396850586
    4. '1' → logprob: -12.75222396850586
    5. ' -' → logprob: -12.75222396850586
    6. '   ' → logprob: -13.00222396850586
    7. '#' → logprob: -13.18972396850586
    8. '[' → logprob: -13.37722396850586
    9. '
' → logprob: -14.06472396850586
    10. '(' → logprob: -14.43972396850586

Token 579: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2337331771850586
    2. ')' → logprob: -1.3587331771850586
    3. '[' → logprob: -1.6087331771850586
    4. '])' → logprob: -1.6087331771850586
    5. '-' → logprob: -3.7337331771850586
    6. ' -' → logprob: -5.608733177185059
    7. ')])' → logprob: -5.608733177185059
    8. ')]' → logprob: -5.733733177185059
    9. '))' → logprob: -5.733733177185059
    10. ']),' → logprob: -5.858733177185059

Token 580: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8932175040245056
    2. ' -' → logprob: -0.8932175040245056
    3. '-' → logprob: -1.7682175636291504
    4. '+' → logprob: -6.26821756362915
    5. '[' → logprob: -6.26821756362915
    6. ' )' → logprob: -6.26821756362915
    7. '),' → logprob: -6.39321756362915
    8. ')-' → logprob: -7.01821756362915
    9. ' +' → logprob: -7.76821756362915
    10. ')-(' → logprob: -7.89321756362915

Token 581: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5765834450721741
    2. 'l' → logprob: -0.8265834450721741
    3. ' l' → logprob: -8.951583862304688
    4. '(u' → logprob: -8.951583862304688
    5. '(l' → logprob: -9.076583862304688
    6. ' u' → logprob: -9.201583862304688
    7. 'sum' → logprob: -9.451583862304688
    8. '(' → logprob: -10.326583862304688
    9. '2' → logprob: -11.201583862304688
    10. 'max' → logprob: -11.326583862304688

Token 582: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00427296943962574
    2. '-' → logprob: -6.254272937774658
    3. '[-' → logprob: -6.254272937774658
    4. '2' → logprob: -8.379273414611816
    5. '0' → logprob: -8.754273414611816
    6. '(-' → logprob: -12.004273414611816
    7. '][-' → logprob: -12.254273414611816
    8. 'len' → logprob: -12.379273414611816
    9. '```' → logprob: -12.754273414611816
    10. '[' → logprob: -12.879273414611816

Token 583: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.729906196298543e-06
    2. '[' → logprob: -11.625009536743164
    3. '][-' → logprob: -14.500009536743164
    4. '   ' → logprob: -16.000009536743164
    5. '-' → logprob: -16.250009536743164
    6. '1' → logprob: -17.625009536743164
    7. '[
' → logprob: -18.375009536743164
    8. ' [-' → logprob: -18.500009536743164
    9. '```' → logprob: -18.625009536743164
    10. '
' → logprob: -18.625009536743164

Token 584: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004050514253322035
    2. '1' → logprob: -7.8754048347473145
    3. ' -' → logprob: -10.875405311584473
    4. '   ' → logprob: -13.250405311584473
    5. '-
' → logprob: -14.000405311584473
    6. '[-' → logprob: -14.000405311584473
    7. '-l' → logprob: -14.250405311584473
    8. '
' → logprob: -14.875405311584473
    9. ']-' → logprob: -15.125405311584473
    10. '2' → logprob: -15.250405311584473

Token 585: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004188687074929476
    2. '])' → logprob: -7.129188537597656
    3. ')])' → logprob: -7.379188537597656
    4. ']' → logprob: -7.504188537597656
    5. ' )' → logprob: -7.754188537597656
    6. '))' → logprob: -7.879188537597656
    7. '[' → logprob: -8.129188537597656
    8. ')
' → logprob: -8.754188537597656
    9. ' -' → logprob: -8.754188537597656
    10. '-' → logprob: -8.879188537597656

Token 586: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6773015260696411
    2. '+' → logprob: -0.9273015260696411
    3. ')' → logprob: -3.0523014068603516
    4. '<|end|>' → logprob: -3.4273014068603516
    5. ' +
' → logprob: -4.927301406860352
    6. '+
' → logprob: -5.927301406860352
    7. ' -' → logprob: -6.302301406860352
    8. ',' → logprob: -6.552301406860352
    9. '-' → logprob: -6.927301406860352
    10. '   ' → logprob: -7.802301406860352

Token 587: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6618366241455078
    2. 'sum' → logprob: -1.0368366241455078
    3. '(sum' → logprob: -2.661836624145508
    4. '2' → logprob: -2.911836624145508
    5. ' sum' → logprob: -6.911836624145508
    6. '(N' → logprob: -7.036836624145508
    7. '(l' → logprob: -7.286836624145508
    8. ' (' → logprob: -7.536836624145508
    9. '((' → logprob: -7.786836624145508
    10. '(min' → logprob: -8.161836624145508

Token 588: '2' (ID: 17)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6345486640930176
    2. '(' → logprob: -1.1345486640930176
    3. '(sum' → logprob: -2.0095486640930176
    4. '2' → logprob: -4.759548664093018
    5. '((' → logprob: -6.384548664093018
    6. ' sum' → logprob: -7.009548664093018
    7. '(l' → logprob: -7.259548664093018
    8. '(N' → logprob: -7.634548664093018
    9. ' (' → logprob: -7.884548664093018
    10. '(
' → logprob: -8.13454818725586

Token 589: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4770450294017792
    2. '*' → logprob: -0.9770450592041016
    3. '*(' → logprob: -5.977045059204102
    4. '(' → logprob: -8.852045059204102
    5. 'sum' → logprob: -9.102045059204102
    6. ' sum' → logprob: -10.477045059204102
    7. ' (' → logprob: -10.602045059204102
    8. ')' → logprob: -10.602045059204102
    9. '(sum' → logprob: -10.727045059204102
    10. ' ' → logprob: -10.727045059204102

Token 590: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0006089136004447937
    2. ' sum' → logprob: -7.625608921051025
    3. '(sum' → logprob: -9.125608444213867
    4. '
' → logprob: -12.000608444213867
    5. 'max' → logprob: -12.875608444213867
    6. '(' → logprob: -14.125608444213867
    7. ' (' → logprob: -14.125608444213867
    8. '   ' → logprob: -15.000608444213867
    9. 'min' → logprob: -15.125608444213867
    10. '  ' → logprob: -15.500608444213867

Token 591: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0010431708069518209
    2. 'l' → logprob: -7.626043319702148
    3. '(u' → logprob: -7.751043319702148
    4. '(' → logprob: -9.251043319702148
    5. '(
' → logprob: -11.251043319702148
    6. 'u' → logprob: -11.876043319702148
    7. ' (' → logprob: -13.001043319702148
    8. ' l' → logprob: -13.126043319702148
    9. '	l' → logprob: -13.376043319702148
    10. '((' → logprob: -15.001043319702148

Token 592: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.69315105676651
    2. '2' → logprob: -0.69315105676651
    3. '[' → logprob: -14.193151473999023
    4. 'o' → logprob: -14.943151473999023
    5. 'ist' → logprob: -15.068151473999023
    6. 'a' → logprob: -15.318151473999023
    7. '```' → logprob: -15.630651473999023
    8. '(' → logprob: -15.818151473999023
    9. '_' → logprob: -16.130651473999023
    10. 't' → logprob: -16.193151473999023

Token 593: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001169152557849884
    2. '[' → logprob: -7.626169204711914
    3. ')+' → logprob: -8.251169204711914
    4. ')
' → logprob: -9.001169204711914
    5. '),' → logprob: -9.376169204711914
    6. '   ' → logprob: -9.501169204711914
    7. ' )' → logprob: -10.001169204711914
    8. '[:-' → logprob: -10.501169204711914
    9. '[:' → logprob: -11.251169204711914
    10. '))' → logprob: -11.501169204711914

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2796802520751953
    2. ' +' → logprob: -1.2796802520751953
    3. '+' → logprob: -1.6546802520751953
    4. '(' → logprob: -2.4046802520751953
    5. ' (' → logprob: -2.4046802520751953
    6. '+
' → logprob: -3.9046802520751953
    7. '   ' → logprob: -4.279680252075195
    8. '2' → logprob: -4.779680252075195
    9. ' +
' → logprob: -5.029680252075195
    10. '0' → logprob: -5.279680252075195

Token 595: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009971986524760723
    2. ' (' → logprob: -4.634972095489502
    3. '2' → logprob: -9.634971618652344
    4. '       ' → logprob: -9.759971618652344
    5. '((' → logprob: -9.759971618652344
    6. '   ' → logprob: -11.634971618652344
    7. '(
' → logprob: -12.384971618652344
    8. 'max' → logprob: -12.384971618652344
    9. '(u' → logprob: -12.509971618652344
    10. ' ' → logprob: -12.634971618652344

Token 596: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07974805682897568
    2. ' (' → logprob: -2.5797481536865234
    3. '       ' → logprob: -7.954748153686523
    4. '2' → logprob: -8.454748153686523
    5. '   ' → logprob: -9.579748153686523
    6. 'max' → logprob: -9.829748153686523
    7. '((' → logprob: -9.954748153686523
    8. '(u' → logprob: -10.829748153686523
    9. '        ' → logprob: -10.954748153686523
    10. ' ' → logprob: -11.204748153686523

Token 597: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6931508779525757
    2. ' *' → logprob: -0.6931508779525757
    3. ' ' → logprob: -13.693150520324707
    4. ' ' → logprob: -14.068150520324707
    5. '**' → logprob: -14.318150520324707
    6. '*(' → logprob: -15.068150520324707
    7. '   ' → logprob: -15.068150520324707
    8. ')' → logprob: -16.318151473999023
    9. '*s' → logprob: -16.568151473999023
    10. '```' → logprob: -16.568151473999023

Token 598: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.054476749151945114
    2. '(sum' → logprob: -3.054476737976074
    3. ' sum' → logprob: -5.179476737976074
    4. ' (' → logprob: -8.429476737976074
    5. '(s' → logprob: -11.679476737976074
    6. '(' → logprob: -12.804476737976074
    7. 'max' → logprob: -13.054476737976074
    8. '(max' → logprob: -13.429476737976074
    9. '((' → logprob: -13.929476737976074
    10. 'ans' → logprob: -14.054476737976074

Token 599: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0026194164529442787
    2. '(l' → logprob: -6.00261926651001
    3. 'u' → logprob: -9.127619743347168
    4. '(' → logprob: -10.627619743347168
    5. 'l' → logprob: -12.252619743347168
    6. '((' → logprob: -14.127619743347168
    7. '(o' → logprob: -14.627619743347168
    8. '(a' → logprob: -14.627619743347168
    9. '[u' → logprob: -14.627619743347168
    10. ' (' → logprob: -14.877619743347168

Token 600: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021176543668843806
    2. '1' → logprob: -8.500211715698242
    3. '(' → logprob: -12.625211715698242
    4. 'u' → logprob: -13.500211715698242
    5. '(u' → logprob: -13.750211715698242
    6. '_' → logprob: -14.500211715698242
    7. '[' → logprob: -15.375211715698242
    8. ')' → logprob: -15.562711715698242
    9. '([' → logprob: -15.562711715698242
    10. ' ' → logprob: -16.062711715698242

Token 601: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.6457742175552994e-05
    2. ' )' → logprob: -10.375056266784668
    3. ')-' → logprob: -11.250056266784668
    4. '[' → logprob: -12.625056266784668
    5. '-' → logprob: -13.125056266784668
    6. ')
' → logprob: -13.375056266784668
    7. ' ' → logprob: -13.625056266784668
    8. '   ' → logprob: -13.875056266784668
    9. '')' → logprob: -14.250056266784668
    10. ' -' → logprob: -15.000056266784668

Token 602: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.041595496237277985
    2. '-' → logprob: -3.291595458984375
    3. ')' → logprob: -5.666595458984375
    4. ' ' → logprob: -10.291595458984375
    5. ')-' → logprob: -11.041595458984375
    6. ' )' → logprob: -11.541595458984375
    7. '+' → logprob: -11.916595458984375
    8. ' +' → logprob: -12.541595458984375
    9. '()' → logprob: -12.666595458984375
    10. '   ' → logprob: -12.791595458984375

Token 603: ' (' (ID: 350)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0164645910263062
    2. 'l' → logprob: -1.1414645910263062
    3. ' u' → logprob: -2.0164647102355957
    4. ' l' → logprob: -2.3914647102355957
    5. '2' → logprob: -3.2664647102355957
    6. '(' → logprob: -3.5164647102355957
    7. ' (' → logprob: -4.266464710235596
    8. '(u' → logprob: -5.141464710235596
    9. ' ' → logprob: -5.641464710235596
    10. '(l' → logprob: -6.016464710235596

Token 604: '2' (ID: 17)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4715578556060791
    2. 'l' → logprob: -1.096557855606079
    3. '2' → logprob: -3.846557855606079
    4. ' u' → logprob: -4.9715576171875
    5. '(u' → logprob: -5.2215576171875
    6. ' l' → logprob: -5.5965576171875
    7. '(l' → logprob: -6.4715576171875
    8. '(' → logprob: -6.7215576171875
    9. '1' → logprob: -6.9715576171875
    10. ' (' → logprob: -8.3465576171875

Token 605: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4821265935897827
    2. '*' → logprob: -0.9821265935897827
    3. '*l' → logprob: -4.857126712799072
    4. '*u' → logprob: -9.232126235961914
    5. 'l' → logprob: -9.857126235961914
    6. '*(' → logprob: -10.482126235961914
    7. ' ' → logprob: -10.982126235961914
    8. ' l' → logprob: -11.482126235961914
    9. ')' → logprob: -11.982126235961914
    10. 'sum' → logprob: -12.107126235961914

Token 606: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.08583083748817444
    2. 'l' → logprob: -2.8358309268951416
    3. ' sum' → logprob: -3.8358309268951416
    4. ' l' → logprob: -7.5858306884765625
    5. '*l' → logprob: -8.085830688476562
    6. '*' → logprob: -8.210830688476562
    7. ' *' → logprob: -8.585830688476562
    8. 'u' → logprob: -8.835830688476562
    9. '(sum' → logprob: -9.085830688476562
    10. '(l' → logprob: -9.210830688476562

Token 607: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00024727347772568464
    2. '(u' → logprob: -9.00024700164795
    3. 'l' → logprob: -9.12524700164795
    4. '(' → logprob: -11.75024700164795
    5. ' (' → logprob: -13.00024700164795
    6. '(
' → logprob: -13.50024700164795
    7. '	l' → logprob: -13.75024700164795
    8. ')' → logprob: -14.62524700164795
    9. 'u' → logprob: -14.75024700164795
    10. '
' → logprob: -15.62524700164795

Token 608: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9743012671824545e-05
    2. '1' → logprob: -10.875020027160645
    3. '(' → logprob: -15.500020027160645
    4. '_' → logprob: -16.187519073486328
    5. ' ' → logprob: -16.437519073486328
    6. '₂' → logprob: -16.500019073486328
    7. ')' → logprob: -16.937519073486328
    8. 's' → logprob: -17.312519073486328
    9. '
' → logprob: -17.375019073486328
    10. '２' → logprob: -17.375019073486328

Token 609: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01433379016816616
    2. '[' → logprob: -4.389333724975586
    3. '+' → logprob: -7.264333724975586
    4. ' )' → logprob: -8.264333724975586
    5. '))' → logprob: -8.264333724975586
    6. '()' → logprob: -8.264333724975586
    7. ')-' → logprob: -9.264333724975586
    8. '[]' → logprob: -9.889333724975586
    9. ' +' → logprob: -9.889333724975586
    10. '   ' → logprob: -10.389333724975586

Token 610: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6143833994865417
    2. ' -' → logprob: -1.2393834590911865
    3. '+' → logprob: -2.8643834590911865
    4. '-' → logprob: -2.9893834590911865
    5. ' +' → logprob: -2.9893834590911865
    6. '()' → logprob: -5.114383220672607
    7. '   ' → logprob: -6.989383220672607
    8. ' ' → logprob: -7.114383220672607
    9. '[' → logprob: -7.114383220672607
    10. ')-' → logprob: -7.114383220672607

Token 611: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02157014235854149
    2. ' l' → logprob: -3.8965702056884766
    3. 'u' → logprob: -7.521570205688477
    4. '(' → logprob: -8.146570205688477
    5. '(l' → logprob: -9.146570205688477
    6. ' u' → logprob: -10.396570205688477
    7. ' (' → logprob: -10.771570205688477
    8. '(u' → logprob: -11.396570205688477
    9. '   ' → logprob: -12.021570205688477
    10. '2' → logprob: -12.021570205688477

Token 612: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005950483493506908
    2. '1' → logprob: -5.255950450897217
    3. '[' → logprob: -7.755950450897217
    4. '0' → logprob: -8.630950927734375
    5. '[-' → logprob: -9.255950927734375
    6. ' ' → logprob: -12.755950927734375
    7. '```' → logprob: -13.005950927734375
    8. '(' → logprob: -13.005950927734375
    9. '   ' → logprob: -13.255950927734375
    10. '
' → logprob: -13.505950927734375

Token 613: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009306333377026021
    2. '[-' → logprob: -7.1259307861328125
    3. '0' → logprob: -9.500930786132812
    4. ' [' → logprob: -10.375930786132812
    5. '   ' → logprob: -11.750930786132812
    6. '```' → logprob: -13.000930786132812
    7. '[len' → logprob: -13.000930786132812
    8. '
' → logprob: -13.500930786132812
    9. '[
' → logprob: -13.625930786132812
    10. ')[' → logprob: -13.875930786132812

Token 614: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.041768160182983e-05
    2. '2' → logprob: -9.625080108642578
    3. '0' → logprob: -12.125080108642578
    4. ' ' → logprob: -12.250080108642578
    5. '(' → logprob: -13.937580108642578
    6. '   ' → logprob: -14.062580108642578
    7. '  ' → logprob: -14.500080108642578
    8. '```' → logprob: -14.937580108642578
    9. '
' → logprob: -15.250080108642578
    10. '3' → logprob: -16.000080108642578

Token 615: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1602402776479721
    2. '])' → logprob: -2.1602401733398438
    3. ')])' → logprob: -3.9102401733398438
    4. '))' → logprob: -5.160240173339844
    5. ' )' → logprob: -6.285240173339844
    6. '+' → logprob: -6.910240173339844
    7. ')]' → logprob: -7.035240173339844
    8. ']))' → logprob: -7.410240173339844
    9. ')
' → logprob: -7.535240173339844
    10. '-' → logprob: -8.160240173339844

Token 616: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033862028270959854
    2. '-' → logprob: -4.658862113952637
    3. '))' → logprob: -4.658862113952637
    4. '+' → logprob: -5.408862113952637
    5. ' )' → logprob: -5.533862113952637
    6. '[' → logprob: -6.283862113952637
    7. ' -' → logprob: -6.908862113952637
    8. '[-' → logprob: -7.033862113952637
    9. ')))' → logprob: -7.283862113952637
    10. ')
' → logprob: -7.783862113952637

Token 617: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.024588674306869507
    2. ' l' → logprob: -4.149588584899902
    3. '1' → logprob: -4.774588584899902
    4. 'u' → logprob: -10.524588584899902
    5. '(l' → logprob: -11.024588584899902
    6. '   ' → logprob: -11.399588584899902
    7. '(' → logprob: -12.149588584899902
    8. ' ' → logprob: -12.274588584899902
    9. ' u' → logprob: -13.024588584899902
    10. '	l' → logprob: -13.149588584899902

Token 618: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004907185211777687
    2. '1' → logprob: -7.625490665435791
    3. '[' → logprob: -14.00049114227295
    4. '[-' → logprob: -14.00049114227295
    5. 'ambda' → logprob: -15.00049114227295
    6. '(' → logprob: -15.93799114227295
    7. 'a' → logprob: -16.375490188598633
    8. 'ast' → logprob: -16.750490188598633
    9. 'l' → logprob: -17.062990188598633
    10. 'r' → logprob: -17.125490188598633

Token 619: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0010777069255709648
    2. '[' → logprob: -6.876077651977539
    3. '1' → logprob: -10.501077651977539
    4. '   ' → logprob: -13.001077651977539
    5. '][-' → logprob: -13.126077651977539
    6. '```' → logprob: -13.126077651977539
    7. '[
' → logprob: -13.251077651977539
    8. '2' → logprob: -13.251077651977539
    9. '
' → logprob: -13.501077651977539
    10. '])' → logprob: -13.626077651977539

Token 620: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42898184061050415
    2. '1' → logprob: -1.0539817810058594
    3. '0' → logprob: -8.30398178100586
    4. ' ' → logprob: -11.30398178100586
    5. '   ' → logprob: -12.17898178100586
    6. '```' → logprob: -12.61648178100586
    7. '(' → logprob: -12.86648178100586
    8. 'len' → logprob: -12.92898178100586
    9. '3' → logprob: -13.49148178100586
    10. '-' → logprob: -13.67898178100586

Token 621: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5622203946113586
    2. ')' → logprob: -0.9372203946113586
    3. ')])' → logprob: -3.437220335006714
    4. '))' → logprob: -5.812220573425293
    5. ']))' → logprob: -6.312220573425293
    6. '])
' → logprob: -7.812220573425293
    7. ')]' → logprob: -7.937220573425293
    8. ')
' → logprob: -8.312220573425293
    9. ')))' → logprob: -9.312220573425293
    10. ']' → logprob: -9.312220573425293

Token 622: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003724006237462163
    2. '   ' → logprob: -8.000371932983398
    3. ')
' → logprob: -10.500371932983398
    4. '`)' → logprob: -12.875371932983398
    5. ' )' → logprob: -13.375371932983398
    6. '))' → logprob: -14.125371932983398
    7. '):' → logprob: -14.750371932983398
    8. '#' → logprob: -14.875371932983398
    9. ')**' → logprob: -14.875371932983398
    10. ')#' → logprob: -15.125371932983398

Token 623: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.860340752406046e-05
    2. ')
' (adapté à ' )
') → logprob: -10.3750581741333
    3. '   ' → logprob: -10.6250581741333
    4. ' )' → logprob: -13.3750581741333
    5. ')

' → logprob: -14.3750581741333
    6. ')#' → logprob: -15.1250581741333
    7. '):' → logprob: -16.125059127807617
    8. ' ' → logprob: -16.375059127807617
    9. '#' → logprob: -16.375059127807617
    10. '```' → logprob: -16.625059127807617

Token 624: 'else' (ID: 2807)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018565983918961138
    2. ')' → logprob: -9.3751859664917
    3. '<|end|>' → logprob: -9.5001859664917
    4. ' print' → logprob: -11.1251859664917
    5. '
' → logprob: -12.0001859664917
    6. '```' → logprob: -13.2501859664917
    7. '#' → logprob: -13.5001859664917
    8. '#print' → logprob: -14.2501859664917
    9. 'return' → logprob: -14.5001859664917
    10. '   ' → logprob: -15.7501859664917

Token 625: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0380435548722744
    2. ':
' → logprob: -3.28804349899292
    3. '   ' → logprob: -13.913043975830078
    4. ':

' → logprob: -14.663043975830078
    5. ':
' → logprob: -14.788043975830078
    6. ' :' → logprob: -15.038043975830078
    7. ' :
' → logprob: -17.038043975830078
    8. '=' → logprob: -18.288043975830078
    9. ':#' → logprob: -18.663043975830078
    10. '{' → logprob: -18.788043975830078

Token 626: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04941758140921593
    2. '   ' → logprob: -3.049417495727539
    3. '#' → logprob: -7.174417495727539
    4. ' ans' → logprob: -10.799417495727539
    5. '	ans' → logprob: -11.049417495727539
    6. '
' → logprob: -11.424417495727539
    7. '(ans' → logprob: -12.299417495727539
    8. 'answer' → logprob: -12.674417495727539
    9. '{
' → logprob: -12.799417495727539
    10. '```' → logprob: -12.799417495727539

Token 627: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0017196849221363664
    2. '#' (adapté à ' #') → logprob: -6.3767194747924805
    3. 'answer' → logprob: -12.12671947479248
    4. '   ' → logprob: -12.62671947479248
    5. 'print' → logprob: -13.12671947479248
    6. '
' → logprob: -13.12671947479248
    7. ' ans' → logprob: -13.25171947479248
    8. '(ans' → logprob: -13.62671947479248
    9. 'anst' → logprob: -14.87671947479248
    10. '	ans' → logprob: -15.12671947479248

Token 628: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007880675257183611
    2. '#' → logprob: -7.25078821182251
    3. '   ' → logprob: -9.875787734985352
    4. 'answer' → logprob: -11.750787734985352
    5. '
' → logprob: -12.250787734985352
    6. ' ans' → logprob: -12.375787734985352
    7. 'l' → logprob: -12.500787734985352
    8. '(ans' → logprob: -13.250787734985352
    9. 'u' → logprob: -14.250787734985352
    10. 'a' → logprob: -14.500787734985352

Token 629: ' le' (ID: 505)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08816996216773987
    2. ' N' → logprob: -2.588170051574707
    3. '#' → logprob: -5.838170051574707
    4. 'ans' → logprob: -6.338170051574707
    5. '   ' → logprob: -6.463170051574707
    6. ' ans' → logprob: -7.213170051574707
    7. '
' → logprob: -7.713170051574707
    8. 'u' → logprob: -8.213170051574707
    9. 'True' → logprob: -8.213170051574707
    10. 'not' → logprob: -8.713170051574707

Token 630: ' nombre' (ID: 9733)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.19293378293514252
    2. '#' → logprob: -2.0679337978363037
    3. 'ans' → logprob: -3.3179337978363037
    4. 'pass' → logprob: -5.817933559417725
    5. 'else' → logprob: -5.942933559417725
    6. '   ' → logprob: -5.942933559417725
    7. ' N' → logprob: -6.067933559417725
    8. '
' → logprob: -8.192934036254883
    9. 'n' → logprob: -8.192934036254883
    10. ' ans' → logprob: -8.317934036254883

Token 631: ' d' (ID: 272)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.324178010225296
    2. '   ' → logprob: -1.8241779804229736
    3. ' %' → logprob: -3.3241779804229736
    4. ':' → logprob: -3.8241779804229736
    5. '=' → logprob: -4.199178218841553
    6. ' ==' → logprob: -4.949178218841553
    7. ' %=' → logprob: -5.199178218841553
    8. ' =' → logprob: -5.324178218841553
    9. '==' → logprob: -5.699178218841553
    10. ' +=' → logprob: -6.074178218841553

Token 632: ''' (ID: 6)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.060314808040857315
    2. '_' → logprob: -3.685314893722534
    3. '_elements' → logprob: -3.810314893722534
    4. '=' → logprob: -4.935314655303955
    5. '==' → logprob: -6.935314655303955
    6. 'élé' → logprob: -7.435314655303955
    7. '_even' → logprob: -7.810314655303955
    8. '>' → logprob: -7.935314655303955
    9. ' %' → logprob: -8.185315132141113
    10. 'est' → logprob: -8.185315132141113

Token 633: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.07550022751092911
    2. 'elements' → logprob: -2.700500249862671
    3. '#' → logprob: -6.200500011444092
    4. 'elem' → logprob: -7.325500011444092
    5. '1' → logprob: -7.700500011444092
    6. 'ele' → logprob: -7.950500011444092
    7. '2' → logprob: -8.20050048828125
    8. 'el' → logprob: -8.32550048828125
    9. 'él' → logprob: -8.45050048828125
    10. 'é' → logprob: -8.57550048828125

Token 634: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -1.1429696083068848
    2. 'ements' → logprob: -1.7679696083068848
    3. 'f' → logprob: -2.0179696083068848
    4. 't' → logprob: -3.5179696083068848
    5. 'lements' → logprob: -3.6429696083068848
    6. 'ts' → logprob: -3.6429696083068848
    7. 'ents' → logprob: -4.017969608306885
    8. ']' → logprob: -4.142969608306885
    9. 'iments' → logprob: -4.142969608306885
    10. 'éments' → logprob: -4.142969608306885

Token 635: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3179449737071991
    2. '   ' → logprob: -2.0679450035095215
    3. '==' → logprob: -2.3179450035095215
    4. '=' → logprob: -3.5679450035095215
    5. '>' → logprob: -4.6929450035095215
    6. '>=' → logprob: -5.1929450035095215
    7. ' ==' → logprob: -6.4429450035095215
    8. ':
' → logprob: -6.5679450035095215
    9. '<=' → logprob: -8.317944526672363
    10. ' =' → logprob: -8.442944526672363

Token 636: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.0018846115563064814
    2. 'even' → logprob: -6.626884460449219
    3. 'pairs' → logprob: -8.626884460449219
    4. '   ' → logprob: -9.001884460449219
    5. ' pair' → logprob: -9.501884460449219
    6. 'imp' → logprob: -10.126884460449219
    7. 'pari' → logprob: -10.126884460449219
    8. 'égal' → logprob: -11.376884460449219
    9. 'Pair' → logprob: -11.501884460449219
    10. '0' → logprob: -11.501884460449219

Token 637: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2994452118873596
    2. '   ' → logprob: -1.4244451522827148
    3. ':
' → logprob: -4.049445152282715
    4. 'ans' → logprob: -7.674445152282715
    5. '{' → logprob: -10.049445152282715
    6. '(ans' → logprob: -10.424445152282715
    7. 'print' → logprob: -10.924445152282715
    8. '):' → logprob: -10.924445152282715
    9. '    
' → logprob: -10.924445152282715
    10. '#' → logprob: -11.049445152282715

Token 638: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.061471760272979736
    2. '#' → logprob: -3.311471700668335
    3. '   ' → logprob: -3.811471700668335
    4. ' ans' → logprob: -7.436471939086914
    5. '
' → logprob: -8.311471939086914
    6. 'answer' → logprob: -9.436471939086914
    7. 'print' → logprob: -9.686471939086914
    8. '	ans' → logprob: -10.561471939086914
    9. '(ans' → logprob: -11.311471939086914
    10. ' #' → logprob: -12.061471939086914

Token 639: ' applique' (ID: 180579)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4625542163848877
    2. '   ' → logprob: -1.2125542163848877
    3. '#' → logprob: -2.7125542163848877
    4. 'ans' → logprob: -6.837553977966309
    5. '
' → logprob: -7.462553977966309
    6. '```' → logprob: -7.462553977966309
    7. 'continue' → logprob: -7.712553977966309
    8. 'for' → logprob: -7.962553977966309
    9. 'pass' → logprob: -8.087553977966309
    10. '#print' → logprob: -8.087553977966309

Token 640: ' une' (ID: 2463)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.3413259983062744
    2. '2' → logprob: -1.8413259983062744
    3. 'print' → logprob: -1.8413259983062744
    4. 'max' → logprob: -1.8413259983062744
    5. '(
' → logprob: -2.5913259983062744
    6. '(' → logprob: -2.8413259983062744
    7. '#' → logprob: -3.2163259983062744
    8. '   ' → logprob: -3.4663259983062744
    9. 'sum' → logprob: -3.8413259983062744
    10. 'abs' → logprob: -4.091325759887695

Token 641: ' seule' (ID: 41983)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8160611391067505
    2. 'ans' → logprob: -0.9410611391067505
    3. 'for' → logprob: -3.816061019897461
    4. 'print' → logprob: -3.941061019897461
    5. '   ' → logprob: -4.066061019897461
    6. '
' → logprob: -4.066061019897461
    7. 'max' → logprob: -4.566061019897461
    8. 'diff' → logprob: -4.691061019897461
    9. ' ans' → logprob: -4.816061019897461
    10. 'continue' → logprob: -4.816061019897461

Token 642: ' formule' (ID: 84316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3314208388328552
    2. 'form' → logprob: -1.8314208984375
    3. 'ans' → logprob: -3.0814208984375
    4. '   ' → logprob: -3.7064208984375
    5. ':
' → logprob: -4.0814208984375
    6. '#' → logprob: -4.9564208984375
    7. ' formule' → logprob: -5.3314208984375
    8. 'formula' → logprob: -5.3314208984375
    9. 'print' → logprob: -5.7064208984375
    10. '(ans' → logprob: -5.7064208984375

Token 643: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03387827426195145
    2. 'ans' → logprob: -3.5338783264160156
    3. ':' → logprob: -5.908878326416016
    4. ':
' → logprob: -7.408878326416016
    5. '(ans' → logprob: -8.033878326416016
    6. '
' → logprob: -8.283878326416016
    7. '	ans' → logprob: -9.408878326416016
    8. '    
' → logprob: -9.908878326416016
    9. ' ans' → logprob: -10.158878326416016
    10. '```' → logprob: -11.158878326416016

Token 644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4963039755821228
    2. 'ans' → logprob: -0.9963039755821228
    3. ':' → logprob: -3.8713040351867676
    4. ':
' → logprob: -7.871304035186768
    5. ' ans' → logprob: -8.49630355834961
    6. '	ans' → logprob: -8.49630355834961
    7. 'answer' → logprob: -8.74630355834961
    8. '(ans' → logprob: -9.24630355834961
    9. 'print' → logprob: -10.37130355834961
    10. '_ans' → logprob: -11.49630355834961

Token 645: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -5.407366916188039e-05
    2. 'print' → logprob: -10.750054359436035
    3. '
' → logprob: -11.250054359436035
    4. '#' → logprob: -11.875054359436035
    5. 'answer' → logprob: -11.875054359436035
    6. '   ' → logprob: -12.500054359436035
    7. ' ans' → logprob: -13.750054359436035
    8. '(ans' → logprob: -15.250054359436035
    9. '	ans' → logprob: -15.875054359436035
    10. '    
' → logprob: -15.875054359436035

Token 646: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193527340888977
    2. ' =' → logprob: -1.5019352436065674
    3. ' =
' → logprob: -12.751935005187988
    4. '=
' → logprob: -13.126935005187988
    5. ':' → logprob: -14.376935005187988
    6. '=

' → logprob: -14.751935005187988
    7. ' ' → logprob: -16.001935958862305
    8. '=int' → logprob: -16.126935958862305
    9. ' =
' → logprob: -17.251935958862305
    10. '＝' → logprob: -17.501935958862305

Token 647: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07888923585414886
    2. '(' → logprob: -2.8288891315460205
    3. 'sum' → logprob: -4.7038893699646
    4. ' ' → logprob: -5.9538893699646
    5. '(sum' → logprob: -6.4538893699646
    6. 'max' → logprob: -6.4538893699646
    7. ' (' → logprob: -6.9538893699646
    8. '   ' → logprob: -8.328888893127441
    9. '(max' → logprob: -8.328888893127441
    10. '(A' → logprob: -9.078888893127441

Token 648: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009091986576095223
    2. 'sum' → logprob: -7.625909328460693
    3. '(' → logprob: -7.875909328460693
    4. ' ' → logprob: -11.125908851623535
    5. '(sum' → logprob: -11.125908851623535
    6. ')' → logprob: -12.625908851623535
    7. 'max' → logprob: -12.750908851623535
    8. '   ' → logprob: -13.500908851623535
    9. 'u' → logprob: -14.500908851623535
    10. '3' → logprob: -14.625908851623535

Token 649: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1269315630197525
    2. '*' → logprob: -2.126931667327881
    3. ' ' → logprob: -12.876931190490723
    4. ' ' → logprob: -14.876931190490723
    5. '**' → logprob: -15.626931190490723
    6. '*s' → logprob: -15.876931190490723
    7. ' *
' → logprob: -16.25193214416504
    8. ' **' → logprob: -16.25193214416504
    9. '*(' → logprob: -17.37693214416504
    10. '*out' → logprob: -17.75193214416504

Token 650: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0067208209075033665
    2. ' sum' → logprob: -5.006721019744873
    3. '(sum' → logprob: -12.131720542907715
    4. ' ' → logprob: -17.63172149658203
    5. 'max' → logprob: -17.63172149658203
    6. '
' → logprob: -17.75672149658203
    7. ' ' → logprob: -18.13172149658203
    8. ' (' → logprob: -18.25672149658203
    9. '	sum' → logprob: -18.38172149658203
    10. '.sum' → logprob: -18.75672149658203

Token 651: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -7.266944157890975e-05
    2. 'u' → logprob: -9.625072479248047
    3. '(' → logprob: -12.500072479248047
    4. '(A' → logprob: -13.250072479248047
    5. '(
' → logprob: -15.250072479248047
    6. ' (' → logprob: -15.625072479248047
    7. '(up' → logprob: -16.125072479248047
    8. '(U' → logprob: -16.375072479248047
    9. ' u' → logprob: -16.750072479248047
    10. '(l' → logprob: -16.750072479248047

Token 652: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18000443279743195
    2. '1' → logprob: -1.8050044775009155
    3. ')' → logprob: -8.305004119873047
    4. '
' → logprob: -13.305004119873047
    5. ')]' → logprob: -13.680004119873047
    6. '```' → logprob: -13.930004119873047
    7. '[:' → logprob: -14.055004119873047
    8. 's' → logprob: -14.180004119873047
    9. ']' → logprob: -14.305004119873047
    10. ' ' → logprob: -14.367504119873047

Token 653: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005653033731505275
    2. ' )' → logprob: -8.000565528869629
    3. ' -' → logprob: -9.000565528869629
    4. ')-' → logprob: -9.625565528869629
    5. '-' → logprob: -10.625565528869629
    6. '   ' → logprob: -12.000565528869629
    7. ' ' → logprob: -12.875565528869629
    8. ')-(' → logprob: -13.500565528869629
    9. '#' → logprob: -13.875565528869629
    10. '[' → logprob: -13.875565528869629

Token 654: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.021099397912621498
    2. '-' → logprob: -4.39609956741333
    3. ')' → logprob: -4.77109956741333
    4. ' )' → logprob: -9.896099090576172
    5. ')-' → logprob: -10.896099090576172
    6. ' ' → logprob: -11.771099090576172
    7. '   ' → logprob: -13.521099090576172
    8. ' -
' → logprob: -14.146099090576172
    9. ')-(' → logprob: -14.271099090576172
    10. '-)' → logprob: -14.521099090576172

Token 655: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.927148699760437
    2. '(' → logprob: -1.427148699760437
    3. ' u' → logprob: -1.927148699760437
    4. '(u' → logprob: -2.1771488189697266
    5. ' (' → logprob: -2.6771488189697266
    6. '2' → logprob: -3.6771488189697266
    7. 'l' → logprob: -5.052148818969727
    8. ' l' → logprob: -6.427148818969727
    9. '(l' → logprob: -6.677148818969727
    10. ' ' → logprob: -6.927148818969727

Token 656: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013544410467147827
    2. 'u' → logprob: -4.51354455947876
    3. '[' → logprob: -7.01354455947876
    4. '(u' → logprob: -7.63854455947876
    5. ' u' → logprob: -7.88854455947876
    6. '(' → logprob: -7.88854455947876
    7. '[u' → logprob: -8.888544082641602
    8. '0' → logprob: -9.638544082641602
    9. 'len' → logprob: -9.638544082641602
    10. '2' → logprob: -10.763544082641602

Token 657: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.596781946020201e-05
    2. '[-' → logprob: -10.250045776367188
    3. '0' → logprob: -11.750045776367188
    4. '[len' → logprob: -14.375045776367188
    5. ')' → logprob: -14.750045776367188
    6. ' [' → logprob: -15.250045776367188
    7. '#' → logprob: -15.500045776367188
    8. '```' → logprob: -15.625045776367188
    9. ')[' → logprob: -15.875045776367188
    10. '.' → logprob: -16.125045776367188

Token 658: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000261216628132388
    2. '2' → logprob: -8.750261306762695
    3. '1' → logprob: -9.750261306762695
    4. ' ' → logprob: -10.625261306762695
    5. '[' → logprob: -11.125261306762695
    6. '   ' → logprob: -12.875261306762695
    7. '#' → logprob: -14.125261306762695
    8. '-' → logprob: -15.062761306762695
    9. '00' → logprob: -15.500261306762695
    10. '(' → logprob: -15.500261306762695

Token 659: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3708648979663849
    2. ' -' → logprob: -1.3708648681640625
    3. ']' → logprob: -3.4958648681640625
    4. '-' → logprob: -4.2458648681640625
    5. '[' → logprob: -4.7458648681640625
    6. ' )' → logprob: -6.6208648681640625
    7. ' ' → logprob: -7.9958648681640625
    8. '])' → logprob: -7.9958648681640625
    9. ')-' → logprob: -8.745864868164062
    10. ']-' → logprob: -8.870864868164062

Token 660: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03379565104842186
    2. '-' → logprob: -3.4087955951690674
    3. ' ' → logprob: -9.658795356750488
    4. ')' → logprob: -10.658795356750488
    5. '+' → logprob: -11.158795356750488
    6. '   ' → logprob: -11.283795356750488
    7. ' +' → logprob: -11.408795356750488
    8. '```' → logprob: -12.033795356750488
    9. '<|end|>' → logprob: -12.658795356750488
    10. ' ' → logprob: -13.033795356750488

Token 661: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6333445906639099
    2. ' ' → logprob: -0.7583445906639099
    3. ' (' → logprob: -7.883344650268555
    4. '(' → logprob: -8.008344650268555
    5. '1' → logprob: -11.008344650268555
    6. ' ' → logprob: -11.133344650268555
    7. '0' → logprob: -14.133344650268555
    8. '  ' → logprob: -14.508344650268555
    9. '   ' → logprob: -15.133344650268555
    10. 'u' → logprob: -15.383344650268555

Token 662: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0336923822760582
    2. ' ' → logprob: -3.4086923599243164
    3. '(' → logprob: -10.408692359924316
    4. '   ' → logprob: -11.783692359924316
    5. ' (' → logprob: -12.158692359924316
    6. '  ' → logprob: -13.283692359924316
    7. '    ' → logprob: -14.158692359924316
    8. '1' → logprob: -14.783692359924316
    9. ' ' → logprob: -15.846192359924316
    10. ')' → logprob: -16.096193313598633

Token 663: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10049865394830704
    2. '*' → logprob: -2.350498676300049
    3. ' ' → logprob: -8.22549819946289
    4. ' ' → logprob: -10.72549819946289
    5. '<|end|>' → logprob: -14.10049819946289
    6. ' ' → logprob: -14.97549819946289
    7. ')' → logprob: -15.72549819946289
    8. ' ‌' → logprob: -15.72549819946289
    9. '**' → logprob: -15.85049819946289
    10. ' **' → logprob: -15.97549819946289

Token 664: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0485873706638813
    2. ' sum' → logprob: -3.0485873222351074
    3. '(sum' → logprob: -18.423587799072266
    4. '
' → logprob: -19.298587799072266
    5. ' ' → logprob: -20.423587799072266
    6. '	sum' → logprob: -20.798587799072266
    7. ' ' → logprob: -21.048587799072266
    8. '.sum' → logprob: -21.298587799072266
    9. '   ' → logprob: -22.798587799072266
    10. ' 
' → logprob: -22.798587799072266

Token 665: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -5.9153885558771435e-06
    2. '(' → logprob: -12.750005722045898
    3. ' (' → logprob: -13.250005722045898
    4. 'l' → logprob: -14.375005722045898
    5. '(u' → logprob: -14.750005722045898
    6. ' l' → logprob: -15.625005722045898
    7. '(L' → logprob: -17.5000057220459
    8. '	l' → logprob: -17.8750057220459
    9. '(
' → logprob: -18.1250057220459
    10. '(s' → logprob: -19.2500057220459

Token 666: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. '2' → logprob: -12.25001049041748
    3. ')' → logprob: -13.75001049041748
    4. 'l' → logprob: -14.00001049041748
    5. '(' → logprob: -14.43751049041748
    6. '```' → logprob: -14.81251049041748
    7. 'u' → logprob: -14.93751049041748
    8. '(u' → logprob: -15.37501049041748
    9. '[' → logprob: -15.62501049041748
    10. ' ' → logprob: -16.062509536743164

Token 667: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1608808934688568
    2. '[' → logprob: -1.9108809232711792
    3. '   ' → logprob: -8.035881042480469
    4. ' )' → logprob: -9.910881042480469
    5. ')+' → logprob: -10.035881042480469
    6. '))' → logprob: -10.410881042480469
    7. ')-' → logprob: -10.410881042480469
    8. ')[' → logprob: -10.535881042480469
    9. '#' → logprob: -11.035881042480469
    10. ')
' → logprob: -11.160881042480469

Token 668: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08221307396888733
    2. ' -' → logprob: -3.2072131633758545
    3. ' +' → logprob: -4.082212924957275
    4. '[' → logprob: -4.332212924957275
    5. '-' → logprob: -5.832212924957275
    6. '+' → logprob: -5.957212924957275
    7. ' )' → logprob: -6.582212924957275
    8. '   ' → logprob: -7.582212924957275
    9. '#' → logprob: -8.207213401794434
    10. ')
' → logprob: -9.082213401794434

Token 669: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.003281452227383852
    2. ' l' → logprob: -5.753281593322754
    3. 'u' → logprob: -9.378281593322754
    4. '1' → logprob: -11.753281593322754
    5. '   ' → logprob: -13.003281593322754
    6. '	l' → logprob: -13.253281593322754
    7. ' u' → logprob: -13.378281593322754
    8. '(l' → logprob: -13.503281593322754
    9. '(' → logprob: -13.753281593322754
    10. '0' → logprob: -14.128281593322754

Token 670: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1798538714647293
    2. 'l' → logprob: -1.804853916168213
    3. '[' → logprob: -10.554853439331055
    4. '[l' → logprob: -10.554853439331055
    5. ' l' → logprob: -10.929853439331055
    6. '[-' → logprob: -11.429853439331055
    7. 'u' → logprob: -11.804853439331055
    8. '2' → logprob: -12.054853439331055
    9. '   ' → logprob: -13.367353439331055
    10. '	l' → logprob: -13.367353439331055

Token 671: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.2020513117313385
    2. '[' → logprob: -1.7020512819290161
    3. '1' → logprob: -7.952051162719727
    4. '0' → logprob: -8.577051162719727
    5. '```' → logprob: -10.202051162719727
    6. '-' → logprob: -10.577051162719727
    7. '   ' → logprob: -11.827051162719727
    8. '[
' → logprob: -11.952051162719727
    9. '2' → logprob: -12.077051162719727
    10. '][-' → logprob: -12.452051162719727

Token 672: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1557283111615106e-05
    2. '2' → logprob: -10.500041961669922
    3. ' ' → logprob: -12.375041961669922
    4. '   ' → logprob: -12.625041961669922
    5. '```' → logprob: -13.312541961669922
    6. '-' → logprob: -13.875041961669922
    7. '[' → logprob: -14.812541961669922
    8. '
' → logprob: -14.812541961669922
    9. ']' → logprob: -14.937541961669922
    10. '(' → logprob: -15.375041961669922

Token 673: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5460312962532043
    2. ')' → logprob: -0.9210312962532043
    3. '[-' → logprob: -4.671031475067139
    4. '[' → logprob: -5.671031475067139
    5. '-' → logprob: -5.921031475067139
    6. ' ])' → logprob: -6.296031475067139
    7. ']' → logprob: -6.671031475067139
    8. ')])' → logprob: -6.796031475067139
    9. ' )' → logprob: -7.421031475067139
    10. '-)' → logprob: -7.421031475067139

Token 674: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7432603272027336e-06
    2. '
' → logprob: -13.750001907348633
    3. ' print' → logprob: -15.250001907348633
    4. '#print' → logprob: -15.750001907348633
    5. '```' → logprob: -15.750001907348633
    6. '#' → logprob: -17.875001907348633
    7. '(print' → logprob: -18.125001907348633
    8. 'pr' → logprob: -19.125001907348633
    9. ')' → logprob: -19.125001907348633
    10. '.print' → logprob: -19.500001907348633

Token 675: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.0
    3. '```' → logprob: -20.125
    4. 'pr' → logprob: -20.5
    5. '
' → logprob: -21.5
    6. 'prin' → logprob: -22.75
    7. '#print' → logprob: -23.375
    8. 'for' → logprob: -23.875
    9. 'printf' → logprob: -24.75
    10. 'prit' → logprob: -24.875

Token 676: 'iche' (ID: 7509)
  Prédit: 'ich'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ich' → logprob: -0.6535196304321289
    2. 'icher' → logprob: -1.903519630432129
    3. 'print' → logprob: -1.903519630432129
    4. '#' → logprob: -2.778519630432129
    5. '```' → logprob: -2.778519630432129
    6. 'ichage' → logprob: -3.278519630432129
    7. 'f' → logprob: -4.903519630432129
    8. 'iche' → logprob: -5.653519630432129
    9. '   ' → logprob: -5.653519630432129
    10. '``' → logprob: -5.903519630432129

Token 677: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0033773379400372505
    2. '(' → logprob: -5.753377437591553
    3. 'print' → logprob: -9.378376960754395
    4. 'ans' → logprob: -9.503376960754395
    5. 'n' → logprob: -11.003376960754395
    6. '(
' → logprob: -11.253376960754395
    7. 'f' → logprob: -13.378376960754395
    8. '(answer' → logprob: -13.378376960754395
    9. '(n' → logprob: -13.628376960754395
    10. 'nt' → logprob: -13.753376960754395

Token 678: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.29815801978111267
    2. '(ans' → logprob: -1.548158049583435
    3. 'ns' → logprob: -4.298158168792725
    4. 'print' → logprob: -4.423158168792725
    5. 'n' → logprob: -4.423158168792725
    6. '(' → logprob: -5.923158168792725
    7. 's' → logprob: -6.048158168792725
    8. 'result' → logprob: -7.048158168792725
    9. 'answer' → logprob: -7.173158168792725
    10. 'nt' → logprob: -7.548158168792725

Token 679: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7120533811976202e-05
    2. '```' → logprob: -11.000017166137695
    3. '
' → logprob: -15.250017166137695
    4. '``' → logprob: -16.375017166137695
    5. ' print' → logprob: -16.750017166137695
    6. '#print' → logprob: -20.375017166137695
    7. '`
' → logprob: -21.000017166137695
    8. '(print' → logprob: -21.125017166137695
    9. '`' → logprob: -21.750017166137695
    10. 'println' → logprob: -22.375017166137695

Token 680: 'ée' (ID: 2894)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.07596780359745026
    2. 'e' → logprob: -3.075967788696289
    3. 'print' → logprob: -3.700967788696289
    4. ' print' → logprob: -7.450967788696289
    5. 'é' → logprob: -7.575967788696289
    6. '#print' → logprob: -8.575967788696289
    7. 'ite' → logprob: -9.075967788696289
    8. 'te' → logprob: -9.200967788696289
    9. 'ert' → logprob: -9.325967788696289
    10. '
' → logprob: -9.450967788696289

Token 681: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.607391408877447e-05
    2. '```' → logprob: -10.250036239624023
    3. '
' → logprob: -14.750036239624023
    4. '``' → logprob: -15.875036239624023
    5. ' print' → logprob: -17.250036239624023
    6. '#print' → logprob: -21.000036239624023
    7. '(print' → logprob: -21.500036239624023
    8. '  
' → logprob: -22.625036239624023
    9. '`
' → logprob: -22.750036239624023
    10. '    
' → logprob: -22.875036239624023

Token 682: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -13.750000953674316
    3. '``' → logprob: -20.625001907348633
    4. '
' → logprob: -21.250001907348633
    5. ' print' → logprob: -21.500001907348633
    6. 'pr' → logprob: -23.625001907348633
    7. '`' → logprob: -24.375001907348633
    8. 'prin' → logprob: -25.250001907348633
    9. '-print' → logprob: -25.500001907348633
    10. 'prit' → logprob: -25.875001907348633

Token 683: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.008619185537099838
    2. '(' → logprob: -4.75861930847168
    3. '(
' → logprob: -13.00861930847168
    4. 'ans' → logprob: -13.75861930847168
    5. '()' → logprob: -14.88361930847168
    6. ' (' → logprob: -15.25861930847168
    7. '(abs' → logprob: -15.38361930847168
    8. '(answer' → logprob: -15.50861930847168
    9. '('' → logprob: -16.00861930847168
    10. '(f' → logprob: -16.50861930847168

Token 684: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')`' → logprob: -13.87500286102295
    3. '()' → logprob: -14.00000286102295
    4. '())' → logprob: -14.75000286102295
    5. ' )' → logprob: -15.00000286102295
    6. '))' → logprob: -16.500001907348633
    7. ')
' → logprob: -16.500001907348633
    8. '`)' → logprob: -16.625001907348633
    9. '')' → logprob: -18.125001907348633
    10. '(' → logprob: -18.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 682
Tokens correctement prédits (1ère position, stricte): 214
Tokens correctement prédits (1ère position, avec adaptation): 230
Tokens correctement prédits (top 10): 436
Précision stricte (1ère position): 31.38%
Précision adaptée (1ère position): 33.72%
Précision (top 10): 63.93%
================================================================================
