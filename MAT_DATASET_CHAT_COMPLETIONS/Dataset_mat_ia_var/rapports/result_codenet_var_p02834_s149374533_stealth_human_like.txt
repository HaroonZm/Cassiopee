================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter, defaultdict, deque
import sys
import bisect
import math
import itertools
import string
import queue
import copy
# numpy and scipy - not currently using
from itertools import permutations, combinations
from heapq import heappop, heappush
#input = sys.stdin.readline
sys.setrecursionlimit(10**8)
mod = 1000000007

# Quick input functions. Somewhat cryptic but makes things easy for me
def inp():
    return int(input())
def inpm():
    # expecting two (or more) ints on one line
    return map(int, input().split())
def inpl():
    return list(map(int, input().split()))
def inpls():
    return list(input().split())
def inplm(n):  # get n lines, one int per line
    return [int(input()) for _ in range(n)]
def inpll(n):  # get n lines of int lists
    # wish Python had typed lists...
    return [list(map(int, input().split())) for _ in range(n)]

def bfs(start, n, graph):
    visited = [False for _ in range(n)]
    dist = [0]*n
    queue2 = deque()
    queue2.append(start)
    visited[start] = True
    while len(queue2):  # probably more pythonic to just "while queue2"
        curr = queue2.pop()
        for ne in range(len(graph[curr])):
            nex = graph[curr][ne]
            if visited[nex]:
                continue
            dist[nex] = dist[curr] + 1
            visited[nex] = True
            queue2.append(nex)
    return dist

def main():
    n, u, v = inpm()
    # main graph for some tree?
    g = [[] for _ in range(n)]
    g1 = [[] for _ in range(n)]
    ab = []
    for _ in range(n-1):
        a, b = inpm()
        a -= 1
        b -= 1
        g[a].append(b)
        g[b].append(a)
        ab.append((a, b))
    dist = bfs(u-1, n, g)
    path = [v-1]
    q2 = deque([v-1])
    d = dist[v-1] - 1
    while q2:
        at = q2.pop()
        for nt in range(len(g[at])):
            nxt = g[at][nt]
            if dist[nxt] == d:
                d -= 1
                path.append(nxt)
                q2.append(nxt)
    ans = int(len(path) / 2) - 1
    path = path[::-1]  # why not just reverse with slicing?
    for i in range(n-1):
        e1, e2 = ab[i]
        # skip the path edge in middle
        if (e1, e2) == (path[ans], path[ans+1]) or (e2, e1) == (path[ans], path[ans+1]):
            continue
        g1[e1].append(e2)
        g1[e2].append(e1)
    dist1 = bfs(path[ans], n, g1)
    xx = ans + max(dist1)
    if len(path) % 2 == 1:
        xx += 1  # is this off-by-one?
    print(xx)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.086537480354309
    2. 'deque' → logprob: -1.086537480354309
    3. 'abc' → logprob: -1.836537480354309
    4. 'Counter' → logprob: -2.4615373611450195
    5. ' defaultdict' → logprob: -2.7115373611450195
    6. 'named' → logprob: -5.4615373611450195
    7. ' Counter' → logprob: -5.5865373611450195
    8. ' abc' → logprob: -6.0865373611450195
    9. ' deque' → logprob: -6.4615373611450195
    10. '```' → logprob: -6.8365373611450195

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000610690622124821
    2. '\(' → logprob: -8.0006103515625
    3. '```' → logprob: -9.3756103515625
    4. '.' → logprob: -9.6256103515625
    5. '(
' → logprob: -10.3756103515625
    6. '\' → logprob: -10.5006103515625
    7. '`' → logprob: -10.8756103515625
    8. 'a' → logprob: -11.6256103515625
    9. ' (' → logprob: -11.7506103515625
    10. '()' → logprob: -12.2506103515625

Token 5: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.022046269848942757
    2. 'default' → logprob: -4.022046089172363
    3. 'deque' → logprob: -5.772046089172363
    4. ' deque' → logprob: -7.272046089172363
    5. 'Ordered' → logprob: -11.147046089172363
    6. ' Ordered' → logprob: -11.147046089172363
    7. ' abc' → logprob: -11.147046089172363
    8. ' default' → logprob: -11.147046089172363
    9. 'abc' → logprob: -11.647046089172363
    10. 'named' → logprob: -11.647046089172363

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14772142469882965
    2. '\' → logprob: -3.022721529006958
    3. '\n' → logprob: -3.272721529006958
    4. '.' → logprob: -4.647721290588379
    5. ',' → logprob: -4.647721290588379
    6. '(
' → logprob: -4.897721290588379
    7. ' ' → logprob: -5.147721290588379
    8. '' → logprob: -5.397721290588379
    9. 'newline' → logprob: -5.772721290588379
    10. '
' → logprob: -6.147721290588379

Token 7: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.4560668468475342
    2. ' Ordered' → logprob: -1.4560668468475342
    3. 'deque' → logprob: -2.331066846847534
    4. 'Ordered' → logprob: -4.206067085266113
    5. ' abc' → logprob: -4.581067085266113
    6. ' ' → logprob: -4.831067085266113
    7. ' named' → logprob: -6.831067085266113
    8. ' defaultdict' → logprob: -7.081067085266113
    9. ' Chain' → logprob: -8.206067085266113
    10. ' itertools' → logprob: -8.581067085266113

Token 8: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011610999703407288
    2. '.' → logprob: -5.386610984802246
    3. '\' → logprob: -6.261610984802246
    4. '```' → logprob: -6.886610984802246
    5. ',' → logprob: -7.011610984802246
    6. '(
' → logprob: -7.261610984802246
    7. '\(' → logprob: -7.511610984802246
    8. '\n' → logprob: -7.636610984802246
    9. '[' → logprob: -8.136610984802246
    10. ' (' → logprob: -8.386610984802246

Token 9: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3644074499607086
    2. '\n' → logprob: -2.364407539367676
    3. '(
' → logprob: -3.239407539367676
    4. '\' → logprob: -3.364407539367676
    5. ',' → logprob: -3.614407539367676
    6. '```' → logprob: -3.739407539367676
    7. '
' → logprob: -4.114407539367676
    8. 'import' → logprob: -4.239407539367676
    9. '' → logprob: -4.364407539367676
    10. '`' → logprob: -4.739407539367676

Token 10: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.4005751311779022
    2. ' sys' → logprob: -1.4005751609802246
    3. ' itertools' → logprob: -2.9005751609802246
    4. ' re' → logprob: -3.7755751609802246
    5. ' collections' → logprob: -6.400575160980225
    6. ' json' → logprob: -6.650575160980225
    7. ' heap' → logprob: -6.775575160980225
    8. ' math' → logprob: -7.150575160980225
    9. ' numpy' → logprob: -7.775575160980225
    10. 're' → logprob: -9.400574684143066

Token 11: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11890875548124313
    2. '\n' → logprob: -3.368908643722534
    3. '\' → logprob: -3.493908643722534
    4. '```' → logprob: -3.868908643722534
    5. '
' → logprob: -4.618908882141113
    6. '.
' → logprob: -5.118908882141113
    7. '[' → logprob: -5.493908882141113
    8. ',' → logprob: -6.243908882141113
    9. '`' → logprob: -7.368908882141113
    10. 'import' → logprob: -7.493908882141113

Token 12: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.048884835094213486
    2. '\' → logprob: -4.548884868621826
    3. '.
' → logprob: -4.548884868621826
    4. '\n' → logprob: -4.923884868621826
    5. '```' → logprob: -5.048884868621826
    6. '
' → logprob: -6.048884868621826
    7. ',' → logprob: -6.298884868621826
    8. 'import' → logprob: -6.423884868621826
    9. 'def' → logprob: -6.798884868621826
    10. '`' → logprob: -6.923884868621826

Token 13: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.001741935731843114
    2. 'os' → logprob: -6.501741886138916
    3. ' itertools' → logprob: -8.876742362976074
    4. ' re' → logprob: -10.251742362976074
    5. ' math' → logprob: -10.626742362976074
    6. ' collections' → logprob: -10.751742362976074
    7. ' heap' → logprob: -11.501742362976074
    8. ' threading' → logprob: -12.626742362976074
    9. ' io' → logprob: -13.251742362976074
    10. 're' → logprob: -13.876742362976074

Token 14: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.869639476761222e-05
    2. 'ected' → logprob: -11.125039100646973
    3. 'ection' → logprob: -11.500039100646973
    4. 't' → logprob: -12.250039100646973
    5. 'ects' → logprob: -12.500039100646973
    6. 'ective' → logprob: -12.750039100646973
    7. 'n' → logprob: -14.000039100646973
    8. 'ector' → logprob: -14.750039100646973
    9. 'ectl' → logprob: -15.125039100646973
    10. '```' → logprob: -15.375039100646973

Token 15: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5511116981506348
    2. '

' → logprob: -1.5511116981506348
    3. '```' → logprob: -2.8011116981506348
    4. '\n' → logprob: -3.0511116981506348
    5. '\' → logprob: -3.1761116981506348
    6. '
' → logprob: -4.426111698150635
    7. 'newline' → logprob: -4.801111698150635
    8. '' → logprob: -4.801111698150635
    9. '.' → logprob: -5.176111698150635
    10. '[' → logprob: -5.426111698150635

Token 16: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1680375337600708
    2. '\' → logprob: -1.6680375337600708
    3. '#' → logprob: -1.7930375337600708
    4. '\n' → logprob: -2.1680374145507812
    5. '
' → logprob: -2.7930374145507812
    6. '

' → logprob: -3.1680374145507812
    7. '```' → logprob: -3.9180374145507812
    8. '' → logprob: -3.9180374145507812
    9. '.' → logprob: -4.293037414550781
    10. 'import' → logprob: -4.293037414550781

Token 17: ' math' (ID: 13324)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.40056896209716797
    2. ' math' → logprob: -1.150568962097168
    3. ' itertools' → logprob: -4.400568962097168
    4. 'heap' → logprob: -6.775568962097168
    5. 'math' → logprob: -9.025568962097168
    6. ' threading' → logprob: -9.650568962097168
    7. ' collections' → logprob: -12.900568962097168
    8. ' functools' → logprob: -13.150568962097168
    9. ' random' → logprob: -14.275568962097168
    10. ' re' → logprob: -14.400568962097168

Token 18: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.65433669090271
    2. '
' → logprob: -1.15433669090271
    3. '\n' → logprob: -3.15433669090271
    4. '' → logprob: -3.77933669090271
    5. '\' → logprob: -4.029336929321289
    6. '.' → logprob: -4.279336929321289
    7. 'import' → logprob: -4.404336929321289
    8. 'def' → logprob: -4.529336929321289
    9. '```' → logprob: -4.779336929321289
    10. '<|end|>' → logprob: -4.779336929321289

Token 19: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8874577283859253
    2. '

' → logprob: -1.2624577283859253
    3. '\n' → logprob: -1.6374577283859253
    4. '```' → logprob: -3.387457847595215
    5. '\' → logprob: -3.887457847595215
    6. 'import' → logprob: -4.262457847595215
    7. '' → logprob: -4.512457847595215
    8. 'def' → logprob: -5.012457847595215
    9. '#' → logprob: -5.137457847595215
    10. ',' → logprob: -5.512457847595215

Token 20: ' itertools' (ID: 103178)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.06478825956583023
    2. ' itertools' → logprob: -3.064788341522217
    3. ' random' → logprob: -4.689788341522217
    4. 'heap' → logprob: -5.689788341522217
    5. ' os' → logprob: -6.314788341522217
    6. 'random' → logprob: -7.314788341522217
    7. ' functools' → logprob: -8.064787864685059
    8. ' statistics' → logprob: -8.439787864685059
    9. ' operator' → logprob: -8.439787864685059
    10. ' threading' → logprob: -9.564787864685059

Token 21: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2946319580078125
    2. '\n' → logprob: -2.0446319580078125
    3. '\' → logprob: -3.1696319580078125
    4. '
' → logprob: -3.2946319580078125
    5. '<|end|>' → logprob: -3.7946319580078125
    6. '#' → logprob: -5.4196319580078125
    7. '

' → logprob: -5.5446319580078125
    8. 'import' → logprob: -5.5446319580078125
    9. '' → logprob: -6.0446319580078125
    10. ',' → logprob: -6.2946319580078125

Token 22: 'import' (ID: 561)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9206949472427368
    2. 'def' → logprob: -1.6706949472427368
    3. '\' → logprob: -1.9206949472427368
    4. '
' → logprob: -2.4206948280334473
    5. 'd' → logprob: -3.0456948280334473
    6. '' → logprob: -3.5456948280334473
    7. '\n' → logprob: -3.5456948280334473
    8. '```' → logprob: -3.9206948280334473
    9. '.' → logprob: -4.295694828033447
    10. 'import' → logprob: -4.420694828033447

Token 23: ' string' (ID: 1621)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.7950246930122375
    2. 'heap' → logprob: -1.0450246334075928
    3. ' operator' → logprob: -2.5450246334075928
    4. 'operator' → logprob: -2.6700246334075928
    5. ' functools' → logprob: -3.6700246334075928
    6. 'random' → logprob: -5.045024871826172
    7. 'fra' → logprob: -5.295024871826172
    8. 'fun' → logprob: -5.420024871826172
    9. 'os' → logprob: -5.670024871826172
    10. ' os' → logprob: -6.545024871826172

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3499026596546173
    2. '

' → logprob: -2.599902629852295
    3. '\n' → logprob: -2.724902629852295
    4. 'import' → logprob: -2.974902629852295
    5. '#' → logprob: -3.349902629852295
    6. '<|end|>' → logprob: -3.349902629852295
    7. '```' → logprob: -4.349902629852295
    8. ',' → logprob: -4.724902629852295
    9. '\' → logprob: -5.849902629852295
    10. '' → logprob: -6.099902629852295

Token 25: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8087376952171326
    2. '
' → logprob: -1.0587377548217773
    3. '#' → logprob: -2.3087377548217773
    4. '\' → logprob: -3.3087377548217773
    5. '

' → logprob: -3.4337377548217773
    6. '' → logprob: -4.933737754821777
    7. 'import' → logprob: -5.058737754821777
    8. 'def' → logprob: -5.058737754821777
    9. '.' → logprob: -5.558737754821777
    10. '<|end|>' → logprob: -5.933737754821777

Token 26: ' queue' (ID: 13661)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.9466021060943604
    2. ' random' → logprob: -1.5716021060943604
    3. 're' → logprob: -1.8216021060943604
    4. ' re' → logprob: -2.3216021060943604
    5. ' heap' → logprob: -3.1966021060943604
    6. 'os' → logprob: -3.4466021060943604
    7. ' os' → logprob: -3.4466021060943604
    8. 'heap' → logprob: -4.071601867675781
    9. 'collections' → logprob: -5.321601867675781
    10. ' functools' → logprob: -5.321601867675781

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0314358472824097
    2. '<|end|>' → logprob: -1.0314358472824097
    3. '.' → logprob: -2.406435966491699
    4. '

' → logprob: -2.531435966491699
    5. 'import' → logprob: -2.781435966491699
    6. '\n' → logprob: -4.031435966491699
    7. '#' → logprob: -4.156435966491699
    8. '\' → logprob: -5.156435966491699
    9. '<|end|>' → logprob: -5.406435966491699
    10. '```' → logprob: -5.531435966491699

Token 28: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4914640784263611
    2. '

' → logprob: -1.9914641380310059
    3. '.' → logprob: -2.366464138031006
    4. '#' → logprob: -2.991464138031006
    5. '\n' → logprob: -3.116464138031006
    6. 'import' → logprob: -3.366464138031006
    7. '<|end|>' → logprob: -4.866464138031006
    8. '' → logprob: -5.491464138031006
    9. '\' → logprob: -5.741464138031006
    10. ',' → logprob: -6.116464138031006

Token 29: ' copy' (ID: 5150)
  Prédit: ' threading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' threading' → logprob: -0.5706325173377991
    2. ' random' → logprob: -1.8206324577331543
    3. ' heap' → logprob: -2.0706324577331543
    4. 'random' → logprob: -2.5706324577331543
    5. 'heap' → logprob: -2.8206324577331543
    6. 'thread' → logprob: -5.820632457733154
    7. ' os' → logprob: -6.320632457733154
    8. 'time' → logprob: -6.820632457733154
    9. ' multiprocessing' → logprob: -6.820632457733154
    10. ' functools' → logprob: -6.945632457733154

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8527743220329285
    2. '#' → logprob: -1.8527743816375732
    3. '

' → logprob: -1.9777743816375732
    4. '.' → logprob: -2.3527743816375732
    5. '<|end|>' → logprob: -2.3527743816375732
    6. '\n' → logprob: -3.4777743816375732
    7. '\' → logprob: -4.352774143218994
    8. '' → logprob: -4.477774143218994
    9. 'import' → logprob: -4.602774143218994
    10. '```' → logprob: -5.102774143218994

Token 31: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9012894630432129
    2. '

' → logprob: -1.401289463043213
    3. '#' → logprob: -2.151289463043213
    4. '\n' → logprob: -2.526289463043213
    5. 'import' → logprob: -3.401289463043213
    6. '<|end|>' → logprob: -3.526289463043213
    7. '```' → logprob: -3.776289463043213
    8. '.' → logprob: -3.901289463043213
    9. 'def' → logprob: -4.401289463043213
    10. '\' → logprob: -4.401289463043213

Token 32: ' numpy' (ID: 19529)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9723002314567566
    2. '\' → logprob: -1.7223002910614014
    3. 'def' → logprob: -1.8473002910614014
    4. ' ' → logprob: -3.0973002910614014
    5. '\n' → logprob: -3.2223002910614014
    6. '
' → logprob: -3.3473002910614014
    7. '<|end|>' → logprob: -3.8473002910614014
    8. '_' → logprob: -3.9723002910614014
    9. ' 

' → logprob: -3.9723002910614014
    10. ' 
' → logprob: -4.347300052642822

Token 33: ' and' (ID: 326)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0799151360988617
    2. ' import' → logprob: -2.9549150466918945
    3. '<|end|>' → logprob: -4.5799150466918945
    4. '.' → logprob: -4.8299150466918945
    5. ',' → logprob: -6.0799150466918945
    6. ' as' → logprob: -6.2049150466918945
    7. '```' → logprob: -6.7049150466918945
    8. '<|end|>' → logprob: -8.454915046691895
    9. '
' → logprob: -8.704915046691895
    10. '_' → logprob: -9.454915046691895

Token 34: ' scipy' (ID: 68933)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.02121541276574135
    2. 'p' → logprob: -4.396215438842773
    3. ' scipy' → logprob: -4.771215438842773
    4. ' matplotlib' → logprob: -8.896215438842773
    5. ' random' → logprob: -10.646215438842773
    6. 'sc' → logprob: -12.146215438842773
    7. 'random' → logprob: -12.271215438842773
    8. ' sys' → logprob: -12.521215438842773
    9. ' panda' → logprob: -13.021215438842773
    10. ' p' → logprob: -13.146215438842773

Token 35: ' -' (ID: 533)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1741710603237152
    2. ' import' → logprob: -2.674170970916748
    3. '<|end|>' → logprob: -2.924170970916748
    4. ' ' → logprob: -3.674170970916748
    5. ',' → logprob: -5.049170970916748
    6. '<|end|>' → logprob: -6.549170970916748
    7. '```' → logprob: -6.674170970916748
    8. ' 
' → logprob: -7.299170970916748
    9. '.' → logprob: -7.424170970916748
    10. '_' → logprob: -8.424171447753906

Token 36: ' not' (ID: 625)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3236747086048126
    2. 'import' → logprob: -2.0736746788024902
    3. ' ' → logprob: -2.5736746788024902
    4. ' numpy' → logprob: -3.4486746788024902
    5. ' scipy' → logprob: -4.44867467880249
    6. '<|end|>' → logprob: -4.82367467880249
    7. ' not' → logprob: -5.32367467880249
    8. ' #' → logprob: -5.44867467880249
    9. ' as' → logprob: -5.94867467880249
    10. ',' → logprob: -6.57367467880249

Token 37: ' currently' (ID: 6821)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.05274103209376335
    2. ' supported' → logprob: -4.302741050720215
    3. ' available' → logprob: -5.052741050720215
    4. ' ' → logprob: -5.052741050720215
    5. ' installed' → logprob: -5.427741050720215
    6. ' sure' → logprob: -5.677741050720215
    7. ' imported' → logprob: -6.052741050720215
    8. ' yet' → logprob: -6.052741050720215
    9. ' included' → logprob: -6.552741050720215
    10. ' planned' → logprob: -6.927741050720215

Token 38: ' using' (ID: 2360)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.27596983313560486
    2. 'import' → logprob: -1.9009698629379272
    3. ' used' → logprob: -2.5259697437286377
    4. 'supported' → logprob: -5.150969982147217
    5. 'available' → logprob: -6.400969982147217
    6. 'in' → logprob: -7.275969982147217
    7. 'needed' → logprob: -7.400969982147217
    8. 'installed' → logprob: -7.650969982147217
    9. 'planned' → logprob: -7.775969982147217
    10. 'implemented' → logprob: -8.025969505310059

Token 39: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7007459402084351
    2. '#' → logprob: -1.575745940208435
    3. '<|end|>' → logprob: -1.825745940208435
    4. '\n' → logprob: -2.7007460594177246
    5. '

' → logprob: -3.8257460594177246
    6. '' → logprob: -4.325746059417725
    7. '\' → logprob: -4.700746059417725
    8. '```' → logprob: -5.575746059417725
    9. 'import' → logprob: -5.700746059417725
    10. '<|end|>' → logprob: -5.700746059417725

Token 40: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' itertools' (ID: 103178)
  Prédit: ' numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.049639247357845306
    2. ' collections' → logprob: -3.7996392250061035
    3. 'numpy' → logprob: -4.5496392250061035
    4. ' math' → logprob: -4.7996392250061035
    5. ' scipy' → logprob: -6.2996392250061035
    6. ' ' → logprob: -6.5496392250061035
    7. ' ' → logprob: -6.6746392250061035
    8. 'collections' → logprob: -6.7996392250061035
    9. ' sklearn' → logprob: -7.0496392250061035
    10. ' itertools' → logprob: -8.174639701843262

Token 42: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.027510419487953186
    2. ' ' → logprob: -4.277510643005371
    3. 'import' → logprob: -4.777510643005371
    4. '.' → logprob: -5.527510643005371
    5. ' itertools' → logprob: -8.027510643005371
    6. ' .' → logprob: -8.277510643005371
    7. '.groupby' → logprob: -9.902510643005371
    8. '.import' → logprob: -10.027510643005371
    9. '	import' → logprob: -10.527510643005371
    10. '_import' → logprob: -10.777510643005371

Token 43: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.9703628420829773
    2. 'com' → logprob: -1.845362901687622
    3. ' accumulate' → logprob: -1.970362901687622
    4. 'product' → logprob: -2.470362901687622
    5. 'acc' → logprob: -2.845362901687622
    6. ' combinations' → logprob: -2.970362901687622
    7. ' product' → logprob: -3.095362901687622
    8. 'per' → logprob: -3.220362901687622
    9. ' chain' → logprob: -4.470362663269043
    10. ' group' → logprob: -4.595362663269043

Token 44: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7229371070861816
    2. '
' → logprob: -1.4729371070861816
    3. '<|end|>' → logprob: -1.4729371070861816
    4. '.' → logprob: -4.222937107086182
    5. ',' → logprob: -4.347937107086182
    6. '\' → logprob: -4.722937107086182
    7. '<|end|>' → logprob: -5.597937107086182
    8. '' → logprob: -5.722937107086182
    9. '(' → logprob: -5.847937107086182
    10. '(
' → logprob: -6.597937107086182

Token 45: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.08090788125991821
    2. 'product' → logprob: -3.2059078216552734
    3. ' combinations' → logprob: -3.4559078216552734
    4. ' product' → logprob: -5.205907821655273
    5. '	com' → logprob: -9.830907821655273
    6. 'comb' → logprob: -10.705907821655273
    7. 'chain' → logprob: -10.830907821655273
    8. '```' → logprob: -11.330907821655273
    9. 'cycle' → logprob: -11.455907821655273
    10. 'acc' → logprob: -11.580907821655273

Token 46: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23770999908447266
    2. '\n' → logprob: -2.4877099990844727
    3. '<|end|>' → logprob: -2.7377099990844727
    4. 'import' → logprob: -3.7377099990844727
    5. '

' → logprob: -4.112709999084473
    6. '#' → logprob: -4.737709999084473
    7. '\' → logprob: -5.737709999084473
    8. '```' → logprob: -6.112709999084473
    9. '' → logprob: -6.612709999084473
    10. '<|end|>' → logprob: -6.737709999084473

Token 48: ' heap' (ID: 37237)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9493739008903503
    2. ' collections' → logprob: -1.6993739604949951
    3. ' functools' → logprob: -2.074373960494995
    4. 'collections' → logprob: -2.449373960494995
    5. ' heap' → logprob: -2.574373960494995
    6. ' operator' → logprob: -3.074373960494995
    7. 'math' → logprob: -3.074373960494995
    8. 'heap' → logprob: -4.324373722076416
    9. ' fractions' → logprob: -4.449373722076416
    10. ' typing' → logprob: -4.949373722076416

Token 49: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'queue' → logprob: -18.375
    3. ' queue' → logprob: -19.375
    4. 'n' → logprob: -19.625
    5. 'import' → logprob: -19.75
    6. 'e' → logprob: -20.5
    7. '/' → logprob: -20.5
    8. '```' → logprob: -20.625
    9. 's' → logprob: -20.75
    10. 'o' → logprob: -21.125

Token 50: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0019404153572395444
    2. 'import' → logprob: -6.2519402503967285
    3. ' ' → logprob: -11.751940727233887
    4. '	import' → logprob: -13.126940727233887
    5. '<|end|>' → logprob: -14.251940727233887
    6. ' imports' → logprob: -15.001940727233887
    7. '_import' → logprob: -15.626940727233887
    8. ' importar' → logprob: -15.626940727233887
    9. ' Import' → logprob: -15.876940727233887
    10. ' space' → logprob: -16.12693977355957

Token 51: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.08113807439804077
    2. 'he' → logprob: -2.5811381340026855
    3. ' heap' → logprob: -6.8311381340026855
    4. 'heap' → logprob: -6.9561381340026855
    5. ' ' → logprob: -9.081137657165527
    6. 'import' → logprob: -10.456137657165527
    7. '```' → logprob: -10.831137657165527
    8. '.he' → logprob: -11.456137657165527
    9. ' n' → logprob: -11.581137657165527
    10. 'nl' → logprob: -11.831137657165527

Token 52: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.014176673255860806
    2. 'ap' → logprob: -4.264176845550537
    3. 'a' → logprob: -11.264176368713379
    4. 'aq' → logprob: -16.264177322387695
    5. 'ап' → logprob: -17.014177322387695
    6. '```' → logprob: -17.139177322387695
    7. 'q' → logprob: -17.514177322387695
    8. '[' → logprob: -18.389177322387695
    9. 'aps' → logprob: -18.514177322387695
    10. 'appen' → logprob: -18.764177322387695

Token 53: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.018150178715586662
    2. 'op' → logprob: -4.018150329589844
    3. 'u' → logprob: -16.893150329589844
    4. 'us' → logprob: -16.893150329589844
    5. '```' → logprob: -17.143150329589844
    6. '   ' → logprob: -17.268150329589844
    7. 'o' → logprob: -17.643150329589844
    8. 'ut' → logprob: -17.768150329589844
    9. '[' → logprob: -17.768150329589844
    10. '

' → logprob: -17.893150329589844

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01904742605984211
    2. 'import' → logprob: -4.144047260284424
    3. 'he' → logprob: -6.519047260284424
    4. ' ' → logprob: -7.269047260284424
    5. ' ,' → logprob: -7.519047260284424
    6. ' he' → logprob: -9.019047737121582
    7. ' and' → logprob: -10.269047737121582
    8. '<|end|>' → logprob: -10.269047737121582
    9. '  ' → logprob: -10.894047737121582
    10. ' import' → logprob: -11.394047737121582

Token 55: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.47580721974372864
    2. 'he' → logprob: -0.9758071899414062
    3. 'heap' → logprob: -6.475807189941406
    4. ' heap' → logprob: -8.600807189941406
    5. '```' → logprob: -13.725807189941406
    6. ' heaps' → logprob: -13.850807189941406
    7. '.he' → logprob: -14.100807189941406
    8. '_he' → logprob: -14.850807189941406
    9. ' ' → logprob: -15.100807189941406
    10. 'hef' → logprob: -15.100807189941406

Token 56: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.054500666621607e-06
    2. 'ap' → logprob: -12.75000286102295
    3. ' app' → logprob: -17.375003814697266
    4. 'APP' → logprob: -17.750003814697266
    5. 'a' → logprob: -18.125003814697266
    6. '	app' → logprob: -18.250003814697266
    7. '(app' → logprob: -18.750003814697266
    8. 'appen' → logprob: -19.125003814697266
    9. 'App' → logprob: -19.375003814697266
    10. 'append' → logprob: -19.875003814697266

Token 57: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0002614550176076591
    2. 'op' → logprob: -8.250261306762695
    3. 'push' → logprob: -16.000261306762695
    4. 'sh' → logprob: -18.375261306762695
    5. 'p' → logprob: -18.875261306762695
    6. 'USH' → logprob: -20.500261306762695
    7. 'us' → logprob: -21.125261306762695
    8. 'osh' → logprob: -21.375261306762695
    9. 'o' → logprob: -21.625261306762695
    10. '```' → logprob: -21.625261306762695

Token 58: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4665375053882599
    2. '<|end|>' → logprob: -2.0915374755859375
    3. 'import' → logprob: -2.3415374755859375
    4. 'def' → logprob: -3.2165374755859375
    5. '

' → logprob: -3.3415374755859375
    6. '\n' → logprob: -3.4665374755859375
    7. '#' → logprob: -3.7165374755859375
    8. '\' → logprob: -4.9665374755859375
    9. '' → logprob: -5.8415374755859375
    10. 'n' → logprob: -6.2165374755859375

Token 60: 'input' (ID: 2586)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11345658451318741
    2. '<|end|>' → logprob: -2.9884564876556396
    3. '#' → logprob: -3.4884564876556396
    4. ' 
' → logprob: -4.863456726074219
    5. 'n' → logprob: -5.613456726074219
    6. '\' → logprob: -5.988456726074219
    7. 'import' → logprob: -6.113456726074219
    8. 'def' → logprob: -6.113456726074219
    9. '<|end|>' → logprob: -6.488456726074219
    10. 'd' → logprob: -6.863456726074219

Token 61: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03343970328569412
    2. ' =' → logprob: -4.408439636230469
    3. '(' → logprob: -4.533439636230469
    4. '=' → logprob: -4.908439636230469
    5. 's' → logprob: -6.283439636230469
    6. 'def' → logprob: -8.658439636230469
    7. '<|end|>' → logprob: -9.158439636230469
    8. '<|end|>' → logprob: -9.408439636230469
    9. 'data' → logprob: -9.658439636230469
    10. '().' → logprob: -10.408439636230469

Token 62: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9162145853042603
    2. ' input' → logprob: -1.4162145853042603
    3. ' sys' → logprob: -1.4162145853042603
    4. 'sys' → logprob: -2.1662144660949707
    5. ' lambda' → logprob: -10.416214942932129
    6. 'lambda' → logprob: -10.666214942932129
    7. '=input' → logprob: -11.541214942932129
    8. '	sys' → logprob: -12.041214942932129
    9. '=sys' → logprob: -12.041214942932129
    10. ' ' → logprob: -12.166214942932129

Token 63: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.004023307003080845
    2. '.stdout' → logprob: -5.87902307510376
    3. '.' → logprob: -6.87902307510376
    4. '.std' → logprob: -10.254023551940918
    5. '.setdefault' → logprob: -10.254023551940918
    6. 'stdin' → logprob: -10.254023551940918
    7. '.readline' → logprob: -10.629023551940918
    8. '.stderr' → logprob: -10.629023551940918
    9. '.argv' → logprob: -10.879023551940918
    10. '.version' → logprob: -12.129023551940918

Token 64: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22860194742679596
    2. '.readline' → logprob: -1.6036019325256348
    3. '.read' → logprob: -5.978601932525635
    4. '.stdin' → logprob: -7.603601932525635
    5. '.setdefault' → logprob: -10.603602409362793
    6. '.readlines' → logprob: -10.728602409362793
    7. '.stdout' → logprob: -11.103602409362793
    8. '<|end|>' → logprob: -11.103602409362793
    9. '.write' → logprob: -11.478602409362793
    10. 'read' → logprob: -11.478602409362793

Token 65: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5912472605705261
    2. '
' → logprob: -1.591247320175171
    3. 'def' → logprob: -1.966247320175171
    4. '\' → logprob: -3.091247320175171
    5. '#' → logprob: -3.216247320175171
    6. '<|end|>' → logprob: -5.466247081756592
    7. '

' → logprob: -5.716247081756592
    8. 'd' → logprob: -5.966247081756592
    9. '' → logprob: -5.966247081756592
    10. 'n' → logprob: -6.841247081756592

Token 66: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10727404057979584
    2. 'def' → logprob: -2.607274055480957
    3. '

' → logprob: -3.982274055480957
    4. '\n' → logprob: -5.982274055480957
    5. '<|end|>' → logprob: -6.107274055480957
    6. '#' → logprob: -6.357274055480957
    7. '\' → logprob: -7.232274055480957
    8. '' → logprob: -7.482274055480957
    9. '
' → logprob: -7.857274055480957
    10. '<|end|>' → logprob: -8.482274055480957

Token 67: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00122070184443146
    2. '.stdin' → logprob: -7.376220703125
    3. '.readline' → logprob: -8.251220703125
    4. '.stdout' → logprob: -8.376220703125
    5. '.exit' → logprob: -10.001220703125
    6. '.stderr' → logprob: -11.001220703125
    7. '.argv' → logprob: -11.376220703125
    8. '.`' → logprob: -12.376220703125
    9. ' .' → logprob: -12.501220703125
    10. '.write' → logprob: -13.001220703125

Token 68: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.004426201339811087
    2. 'ursion' → logprob: -6.129426002502441
    3. '_rec' → logprob: -7.004426002502441
    4. 'limit' → logprob: -7.629426002502441
    5. 'ult' → logprob: -8.129426002502441
    6. 'set' → logprob: -8.629426002502441
    7. '_limit' → logprob: -9.129426002502441
    8. 'ault' → logprob: -10.004426002502441
    9. ' recursion' → logprob: -10.004426002502441
    10. 'execution' → logprob: -10.379426002502441

Token 69: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0026124019641429186
    2. 'limit' → logprob: -6.127612590789795
    3. 'urs' → logprob: -7.877612590789795
    4. 'ur' → logprob: -10.252612113952637
    5. 'ursive' → logprob: -12.377612113952637
    6. 'urst' → logprob: -13.002612113952637
    7. 'urf' → logprob: -13.377612113952637
    8. 'limits' → logprob: -14.002612113952637
    9. 'all' → logprob: -14.752612113952637
    10. 'usr' → logprob: -14.752612113952637

Token 70: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -3.5954712075181305e-05
    2. '_limit' → logprob: -10.250036239624023
    3. 'depth' → logprob: -16.125036239624023
    4. 'lim' → logprob: -16.375036239624023
    5. '.limit' → logprob: -16.500036239624023
    6. '-limit' → logprob: -16.500036239624023
    7. ' limit' → logprob: -17.125036239624023
    8. '-' → logprob: -18.000036239624023
    9. 'Limit' → logprob: -18.625036239624023
    10. '_LIMIT' → logprob: -18.750036239624023

Token 71: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.36574100604048e-06
    2. '(
' → logprob: -12.875004768371582
    3. ' (' → logprob: -14.125004768371582
    4. '(

' → logprob: -14.625004768371582
    5. '((' → logprob: -15.125004768371582
    6. '()' → logprob: -15.875004768371582
    7. '```' → logprob: -17.375003814697266
    8. '(int' → logprob: -17.625003814697266
    9. ')' → logprob: -18.000003814697266
    10. '(
' → logprob: -18.125003814697266

Token 72: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02327762544155121
    2. '100' → logprob: -3.773277521133423
    3. '200' → logprob: -11.523277282714844
    4. ' ' → logprob: -12.023277282714844
    5. '300' → logprob: -12.148277282714844
    6. '999' → logprob: -12.523277282714844
    7. '400' → logprob: -12.523277282714844
    8. '500' → logprob: -13.523277282714844
    9. '250' → logprob: -13.773277282714844
    10. '410' → logprob: -14.773277282714844

Token 73: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.4485774636268616
    2. '**' → logprob: -1.0735774040222168
    3. '8' → logprob: -4.573577404022217
    4. '00' → logprob: -5.448577404022217
    5. '0' → logprob: -6.198577404022217
    6. '6' → logprob: -6.698577404022217
    7. '07' → logprob: -6.948577404022217
    8. '9' → logprob: -7.573577404022217
    9. '```' → logprob: -8.948577880859375
    10. '007' → logprob: -9.573577880859375

Token 74: '8' (ID: 23)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.12718899548053741
    2. '9' → logprob: -2.1271889209747314
    3. '8' → logprob: -8.252188682556152
    4. '6' → logprob: -15.752188682556152
    5. '```' → logprob: -16.62718963623047
    6. '**' → logprob: -17.12718963623047
    7. ')' → logprob: -19.00218963623047
    8. ' ' → logprob: -20.12718963623047
    9. '

' → logprob: -20.12718963623047
    10. '​' → logprob: -20.25218963623047

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.875000953674316
    3. ')
' → logprob: -14.750000953674316
    4. '))' → logprob: -18.125001907348633
    5. ')
' → logprob: -18.625001907348633
    6. '
' → logprob: -18.750001907348633
    7. ')`' → logprob: -19.250001907348633
    8. '),' → logprob: -19.625001907348633
    9. ')

' → logprob: -19.625001907348633
    10. ' ' → logprob: -20.500001907348633

Token 76: 'mod' (ID: 4847)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04903184249997139
    2. '

' → logprob: -3.1740317344665527
    3. '
' → logprob: -5.799031734466553
    4. '\n' → logprob: -6.799031734466553
    5. '#' → logprob: -7.299031734466553
    6. '' → logprob: -7.549031734466553
    7. 'def' → logprob: -8.049032211303711
    8. 'n' → logprob: -9.174032211303711
    9. '\' → logprob: -9.674032211303711
    10. '


' → logprob: -10.424032211303711

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029931673780083656
    2. '=' → logprob: -3.5299317836761475
    3. ' ' → logprob: -9.279932022094727
    4. '_' → logprob: -10.404932022094727
    5. '.' → logprob: -11.029932022094727
    6. ',' → logprob: -11.279932022094727
    7. ' =)' → logprob: -12.154932022094727
    8. ' =
' → logprob: -12.404932022094727
    9. '<|end|>' → logprob: -12.404932022094727
    10. '  ' → logprob: -12.529932022094727

Token 78: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25195205211639404
    2. '10' → logprob: -1.501952052116394
    3. '100' → logprob: -11.501952171325684
    4. '1' → logprob: -11.501952171325684
    5. '998' → logprob: -13.501952171325684
    6. ' ' → logprob: -14.001952171325684
    7. 'int' → logprob: -15.251952171325684
    8. '109' → logprob: -15.876952171325684
    9. ' int' → logprob: -16.751951217651367
    10. '999' → logprob: -17.126951217651367

Token 79: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001291904947720468
    2. '100' → logprob: -6.751291751861572
    3. '1' → logprob: -9.37629222869873
    4. '998' → logprob: -10.25129222869873
    5. ' ' → logprob: -13.62629222869873
    6. 'int' → logprob: -15.37629222869873
    7. '(' → logprob: -15.75129222869873
    8. '999' → logprob: -16.751291275024414
    9. '```' → logprob: -17.501291275024414
    10. '109' → logprob: -17.751291275024414

Token 80: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.023949192836880684
    2. '9' → logprob: -4.648949146270752
    3. '**' → logprob: -4.773949146270752
    4. '+' → logprob: -6.648949146270752
    5. '09' → logprob: -6.773949146270752
    6. '0' → logprob: -7.023949146270752
    7. '*' → logprob: -7.273949146270752
    8. '00' → logprob: -7.273949146270752
    9. '%' → logprob: -8.27394962310791
    10. '07' → logprob: -8.77394962310791

Token 81: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.002622385509312153
    2. '007' → logprob: -7.127622604370117
    3. '7' → logprob: -7.252622604370117
    4. '07' → logprob: -7.752622604370117
    5. '00' → logprob: -7.877622604370117
    6. '19' → logprob: -8.502622604370117
    7. '0' → logprob: -9.627622604370117
    8. '+' → logprob: -11.002622604370117
    9. ' ' → logprob: -11.752622604370117
    10. '9' → logprob: -13.252622604370117

Token 82: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.3782830137643032e-05
    2. '+' → logprob: -11.50001335144043
    3. '9' → logprob: -12.62501335144043
    4. '07' → logprob: -15.37501335144043
    5. '0' → logprob: -17.62501335144043
    6. '```' → logprob: -17.62501335144043
    7. ' +' → logprob: -17.87501335144043
    8. ' ' → logprob: -18.12501335144043
    9. '19' → logprob: -19.00001335144043
    10. '79' → logprob: -19.37501335144043

Token 83: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023514728993177414
    2. '

' → logprob: -4.773514747619629
    3. 'def' → logprob: -5.523514747619629
    4. '\n' → logprob: -5.523514747619629
    5. '
' → logprob: -5.898514747619629
    6. '' → logprob: -6.523514747619629
    7. 'n' → logprob: -7.273514747619629
    8. '<|end|>' → logprob: -7.398514747619629
    9. '\' → logprob: -8.273514747619629
    10. ' 
' → logprob: -8.398514747619629

Token 84: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8498660922050476
    2. 'def' → logprob: -0.8498660922050476
    3. 'n' → logprob: -2.5998661518096924
    4. '
' → logprob: -3.0998661518096924
    5. 'class' → logprob: -4.224865913391113
    6. '#' → logprob: -4.974865913391113
    7. '\' → logprob: -6.474865913391113
    8. '\n' → logprob: -7.224865913391113
    9. 'de' → logprob: -7.599865913391113
    10. '

' → logprob: -7.849865913391113

Token 85: ' Quick' (ID: 23584)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3064431846141815
    2. 'def' → logprob: -1.931443214416504
    3. '#' → logprob: -2.306443214416504
    4. 'n' → logprob: -4.931443214416504
    5. ' ' → logprob: -5.431443214416504
    6. 'class' → logprob: -6.056443214416504
    7. 'de' → logprob: -6.306443214416504
    8. 'a' → logprob: -7.181443214416504
    9. '_' → logprob: -7.556443214416504
    10. 'i' → logprob: -8.306443214416504

Token 86: ' input' (ID: 3422)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.15163491666316986
    2. '_' → logprob: -2.776634931564331
    3. '_sort' → logprob: -3.651634931564331
    4. 'ly' → logprob: -4.026634693145752
    5. '=' → logprob: -4.276634693145752
    6. ' ' → logprob: -4.526634693145752
    7. ' sort' → logprob: -6.151634693145752
    8. ' =' → logprob: -6.401634693145752
    9. 'sum' → logprob: -7.026634693145752
    10. 's' → logprob: -7.151634693145752

Token 87: ' functions' (ID: 9964)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08828804641962051
    2. '=' → logprob: -3.5882880687713623
    3. ' =' → logprob: -3.7132880687713623
    4. ':' → logprob: -4.588287830352783
    5. 's' → logprob: -4.588287830352783
    6. '(' → logprob: -4.713287830352783
    7. '_' → logprob: -7.213287830352783
    8. ',' → logprob: -7.588287830352783
    9. 'def' → logprob: -8.213288307189941
    10. '<|end|>' → logprob: -8.213288307189941

Token 88: '.' (ID: 13)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28499871492385864
    2. '
' → logprob: -1.5349986553192139
    3. '\' → logprob: -4.034998893737793
    4. 'd' → logprob: -4.909998893737793
    5. '\n' → logprob: -5.909998893737793
    6. ':' → logprob: -6.909998893737793
    7. '```' → logprob: -7.284998893737793
    8. 'n' → logprob: -7.284998893737793
    9. '' → logprob: -7.784998893737793
    10. '

' → logprob: -7.909998893737793

Token 89: ' Some' (ID: 6083)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.034511666744947433
    2. 'd' → logprob: -3.5345115661621094
    3. '
' → logprob: -6.034511566162109
    4. 'de' → logprob: -6.784511566162109
    5. '\' → logprob: -7.784511566162109
    6. ' def' → logprob: -7.784511566162109
    7. ' de' → logprob: -8.90951156616211
    8. 'n' → logprob: -9.28451156616211
    9. ' 
' → logprob: -10.53451156616211
    10. '\n' → logprob: -10.65951156616211

Token 90: 'what' (ID: 13347)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2283305525779724
    2. 'def' → logprob: -1.9783306121826172
    3. '=' → logprob: -2.978330612182617
    4. '_' → logprob: -5.103330612182617
    5. ' def' → logprob: -5.978330612182617
    6. ' ' → logprob: -6.978330612182617
    7. ' lines' → logprob: -7.353330612182617
    8. '()' → logprob: -7.728330612182617
    9. '\' → logprob: -7.978330612182617
    10. ':' → logprob: -8.103330612182617

Token 91: ' crypt' (ID: 14204)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6720298528671265
    2. 'fast' → logprob: -1.5470298528671265
    3. 'optimized' → logprob: -2.547029972076416
    4. ' faster' → logprob: -3.172029972076416
    5. 'slow' → logprob: -3.422029972076416
    6. 'sl' → logprob: -3.922029972076416
    7. ' optimized' → logprob: -4.172029972076416
    8. 'like' → logprob: -4.422029972076416
    9. ' fast' → logprob: -4.672029972076416
    10. ' slow' → logprob: -4.672029972076416

Token 92: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -2.6060808522743173e-05
    2. 'ed' → logprob: -10.750025749206543
    3. '```' → logprob: -13.375025749206543
    4. 'i' → logprob: -13.500025749206543
    5. 'ically' → logprob: -14.250025749206543
    6. 'ique' → logprob: -14.375025749206543
    7. 'ical' → logprob: -16.37502670288086
    8. '`' → logprob: -16.50002670288086
    9. '#' → logprob: -16.62502670288086
    10. 'def' → logprob: -17.00002670288086

Token 93: ' but' (ID: 889)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3447166085243225
    2. '
' → logprob: -1.8447165489196777
    3. ':' → logprob: -2.4697165489196777
    4. 'd' → logprob: -4.344716548919678
    5. '```' → logprob: -4.469716548919678
    6. '_' → logprob: -4.719716548919678
    7. '\' → logprob: -5.469716548919678
    8. '#' → logprob: -6.344716548919678
    9. ',' → logprob: -6.469716548919678
    10. '\n' → logprob: -6.594716548919678

Token 94: ' makes' (ID: 4787)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39107581973075867
    2. ' useful' → logprob: -2.516075849533081
    3. 'fast' → logprob: -2.766075849533081
    4. ' fast' → logprob: -3.516075849533081
    5. ' very' → logprob: -4.141075611114502
    6. 'use' → logprob: -4.516075611114502
    7. 'very' → logprob: -4.641075611114502
    8. ' necessary' → logprob: -4.891075611114502
    9. ' standard' → logprob: -4.891075611114502
    10. ' efficient' → logprob: -4.891075611114502

Token 95: ' things' (ID: 3283)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7000666856765747
    2. ' it' → logprob: -1.5750666856765747
    3. 'input' → logprob: -2.325066566467285
    4. ' ' → logprob: -2.825066566467285
    5. ' life' → logprob: -3.075066566467285
    6. ' the' → logprob: -3.200066566467285
    7. ' sense' → logprob: -4.450066566467285
    8. ' reading' → logprob: -4.950066566467285
    9. 'it' → logprob: -5.200066566467285
    10. 's' → logprob: -5.450066566467285

Token 96: ' easy' (ID: 4224)
  Prédit: ' faster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faster' → logprob: -0.10197143256664276
    2. ' fast' → logprob: -3.101971387863159
    3. ' ' → logprob: -4.226971626281738
    4. 'fast' → logprob: -4.226971626281738
    5. ' easier' → logprob: -5.476971626281738
    6. ' a' → logprob: -5.476971626281738
    7. '_' → logprob: -5.726971626281738
    8. 's' → logprob: -5.851971626281738
    9. ' shorter' → logprob: -6.476971626281738
    10. ' much' → logprob: -6.601971626281738

Token 97: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27538827061653137
    2. '
' → logprob: -1.525388240814209
    3. '_' → logprob: -4.275388240814209
    4. '```' → logprob: -6.025388240814209
    5. ':' → logprob: -6.150388240814209
    6. '

' → logprob: -6.650388240814209
    7. '\' → logprob: -7.025388240814209
    8. 'de' → logprob: -8.025388717651367
    9. 'n' → logprob: -8.150388717651367
    10. '\n' → logprob: -8.275388717651367

Token 98: ' me' (ID: 668)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6224008202552795
    2. '_' → logprob: -0.8724008202552795
    3. 'in' → logprob: -4.997400760650635
    4. 'a' → logprob: -5.122400760650635
    5. 's' → logprob: -5.372400760650635
    6. 'b' → logprob: -5.372400760650635
    7. 'int' → logprob: -5.622400760650635
    8. 'n' → logprob: -5.622400760650635
    9. 'fast' → logprob: -6.747400760650635
    10. 'me' → logprob: -6.997400760650635

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1863393932580948
    2. 'def' → logprob: -1.8113393783569336
    3. '

' → logprob: -6.061339378356934
    4. '_' → logprob: -7.186339378356934
    5. '```' → logprob: -7.186339378356934
    6. '\' → logprob: -7.311339378356934
    7. 'd' → logprob: -7.686339378356934
    8. '\n' → logprob: -7.811339378356934
    9. '
' → logprob: -8.186339378356934
    10. '' → logprob: -8.436339378356934

Token 100: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04178426414728165
    2. '
' → logprob: -3.2917842864990234
    3. ' 
' → logprob: -6.541784286499023
    4. 'd' → logprob: -7.291784286499023
    5. ' def' → logprob: -7.916784286499023
    6. '\' → logprob: -8.041784286499023
    7. 'de' → logprob: -8.291784286499023
    8. 'n' → logprob: -8.541784286499023
    9. '```' → logprob: -8.916784286499023
    10. '

' → logprob: -9.791784286499023

Token 101: ' inp' (ID: 64450)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6662420034408569
    2. ' in' → logprob: -1.541242003440857
    3. 'input' → logprob: -2.4162421226501465
    4. ' inp' → logprob: -2.5412421226501465
    5. ' i' → logprob: -2.9162421226501465
    6. 'in' → logprob: -4.0412421226501465
    7. ' ri' → logprob: -4.9162421226501465
    8. 'i' → logprob: -5.2912421226501465
    9. ' ' → logprob: -5.2912421226501465
    10. 'inp' → logprob: -5.4162421226501465

Token 102: '():
' (ID: 8595)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -7.64839569455944e-05
    2. '():' → logprob: -9.750076293945312
    3. '():
' → logprob: -12.000076293945312
    4. 'u' → logprob: -12.000076293945312
    5. '()' → logprob: -13.375076293945312
    6. '(' → logprob: -13.500076293945312
    7. ' ut' → logprob: -13.625076293945312
    8. 'uts' → logprob: -13.875076293945312
    9. 't' → logprob: -16.000076293945312
    10. 'ут' → logprob: -16.250076293945312

Token 103: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.013332580216228962
    2. '()' → logprob: -4.388332366943359
    3. ' ():' → logprob: -7.388332366943359
    4. ' ()' → logprob: -8.88833236694336
    5. '():
' → logprob: -10.01333236694336
    6. '(' → logprob: -11.38833236694336
    7. ':' → logprob: -12.63833236694336
    8. ' :' → logprob: -13.38833236694336
    9. '):' → logprob: -14.01333236694336
    10. '().' → logprob: -14.13833236694336

Token 104: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.39882010221481323
    2. ' return' → logprob: -1.148820161819458
    3. 'int' → logprob: -4.523819923400879
    4. ' int' → logprob: -7.398819923400879
    5. '   ' → logprob: -8.398819923400879
    6. ' ' → logprob: -9.648819923400879
    7. 'input' → logprob: -10.148819923400879
    8. ' input' → logprob: -11.023819923400879
    9. '()' → logprob: -11.648819923400879
    10. 'map' → logprob: -11.648819923400879

Token 105: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.15109491348266602
    2. ' int' → logprob: -2.151094913482666
    3. ' sys' → logprob: -4.651094913482666
    4. ' input' → logprob: -5.276094913482666
    5. 'input' → logprob: -5.276094913482666
    6. 'sys' → logprob: -6.026094913482666
    7. ' map' → logprob: -7.026094913482666
    8. 'map' → logprob: -7.651094913482666
    9. ' list' → logprob: -9.276094436645508
    10. 'list' → logprob: -9.401094436645508

Token 106: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3871425688266754
    2. '(input' → logprob: -1.137142539024353
    3. '(sys' → logprob: -8.262142181396484
    4. '(
' → logprob: -11.637142181396484
    5. 'input' → logprob: -13.262142181396484
    6. '()' → logprob: -14.012142181396484
    7. '((' → logprob: -14.512142181396484
    8. '(inp' → logprob: -15.012142181396484
    9. '(

' → logprob: -15.262142181396484
    10. ' (' → logprob: -15.512142181396484

Token 107: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0006377388490363955
    2. '().' → logprob: -7.625637531280518
    3. '()' → logprob: -8.875638008117676
    4. ' ())' → logprob: -12.125638008117676
    5. '())
' → logprob: -13.625638008117676
    6. '(' → logprob: -13.875638008117676
    7. '();)' → logprob: -14.375638008117676
    8. '()))' → logprob: -14.625638008117676
    9. ')' → logprob: -15.000638008117676
    10. '());' → logprob: -15.250638008117676

Token 108: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03630709648132324
    2. '(' → logprob: -4.286307334899902
    3. '()
' → logprob: -4.286307334899902
    4. '()\' → logprob: -5.911307334899902
    5. '\n' → logprob: -6.161307334899902
    6. '
' → logprob: -6.911307334899902
    7. '(
' → logprob: -6.911307334899902
    8. '()

' → logprob: -7.161307334899902
    9. 'def' → logprob: -8.661307334899902
    10. '\' → logprob: -9.536307334899902

Token 109: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7644090056419373
    2. 'in' → logprob: -1.639409065246582
    3. 'str' → logprob: -1.889409065246582
    4. 'list' → logprob: -3.264409065246582
    5. 'ip' → logprob: -3.514409065246582
    6. 'st' → logprob: -4.014409065246582
    7. 'm' → logprob: -4.264409065246582
    8. ' list' → logprob: -4.389409065246582
    9. 'ints' → logprob: -4.514409065246582
    10. 'int' → logprob: -5.264409065246582

Token 110: 'pm' (ID: 6991)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.013430788181722164
    2. 'p' → logprob: -4.638430595397949
    3. 't' → logprob: -5.638430595397949
    4. 'pt' → logprob: -9.38843059539795
    5. 'puts' → logprob: -11.01343059539795
    6. 's' → logprob: -12.88843059539795
    7. 'pu' → logprob: -13.01343059539795
    8. 'f' → logprob: -14.26343059539795
    9. 'pi' → logprob: -14.51343059539795
    10. 'pute' → logprob: -14.63843059539795

Token 111: '():
' (ID: 8595)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.39196401834487915
    2. '()' → logprob: -1.1419639587402344
    3. '():' → logprob: -6.141963958740234
    4. 'ul' → logprob: -7.266963958740234
    5. '()]' → logprob: -7.891963958740234
    6. 'ut' → logprob: -8.141963958740234
    7. '().' → logprob: -8.391963958740234
    8. '())' → logprob: -8.391963958740234
    9. '()>' → logprob: -8.641963958740234
    10. 'a' → logprob: -8.766963958740234

Token 112: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0037879657465964556
    2. '():
' → logprob: -5.628787994384766
    3. ' ():' → logprob: -9.253787994384766
    4. '()' → logprob: -9.628787994384766
    5. '().' → logprob: -11.128787994384766
    6. '()[' → logprob: -12.753787994384766
    7. ':' → logprob: -13.003787994384766
    8. 'list' → logprob: -13.253787994384766
    9. '():

' → logprob: -13.503787994384766
    10. '):' → logprob: -13.878787994384766

Token 113: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.34510543942451477
    2. 'list' → logprob: -1.5951054096221924
    3. 'map' → logprob: -3.0951054096221924
    4. ' return' → logprob: -3.9701054096221924
    5. ' list' → logprob: -4.3451056480407715
    6. ' map' → logprob: -4.5951056480407715
    7. 'lambda' → logprob: -6.5951056480407715
    8. '   ' → logprob: -8.595105171203613
    9. 'tuple' → logprob: -9.470105171203613
    10. ' lambda' → logprob: -10.470105171203613

Token 114: ' expecting' (ID: 35885)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.016710780560970306
    2. 'list' → logprob: -4.3917107582092285
    3. 'map' → logprob: -5.7667107582092285
    4. ' return' → logprob: -7.0167107582092285
    5. ' list' → logprob: -9.516711235046387
    6. ' map' → logprob: -10.641711235046387
    7. 's' → logprob: -11.391711235046387
    8. 'lambda' → logprob: -11.516711235046387
    9. 'r' → logprob: -11.766711235046387
    10. '[' → logprob: -12.016711235046387

Token 115: ' two' (ID: 1920)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.21346266567707062
    2. 'list' → logprob: -2.3384625911712646
    3. '()' → logprob: -2.7134625911712646
    4. '().' → logprob: -3.7134625911712646
    5. 'map' → logprob: -5.713462829589844
    6. '):' → logprob: -7.963462829589844
    7. 'lambda' → logprob: -8.088462829589844
    8. '()[' → logprob: -8.213462829589844
    9. ' list' → logprob: -8.588462829589844
    10. '():
' → logprob: -8.963462829589844

Token 116: ' (' (ID: 350)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3810432553291321
    2. '()' → logprob: -1.5060431957244873
    3. '):' → logprob: -3.0060431957244873
    4. ' integers' → logprob: -4.256043434143066
    5. ')' → logprob: -4.756043434143066
    6. 's' → logprob: -5.506043434143066
    7. ':' → logprob: -5.756043434143066
    8. 'return' → logprob: -6.006043434143066
    9. '():
' → logprob: -6.256043434143066
    10. ' ()' → logprob: -6.256043434143066

Token 117: 'or' (ID: 267)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021511798724532127
    2. '):' → logprob: -4.146512031555176
    3. ' integers' → logprob: -6.396512031555176
    4. 'int' → logprob: -6.896512031555176
    5. '=int' → logprob: -7.146512031555176
    6. 'ints' → logprob: -7.146512031555176
    7. ' )' → logprob: -7.896512031555176
    8. ')return' → logprob: -8.021512031555176
    9. ']int' → logprob: -9.271512031555176
    10. '()' → logprob: -9.646512031555176

Token 118: ' more' (ID: 945)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.4078606069087982
    2. ' more' → logprob: -1.4078606367111206
    3. ')' → logprob: -2.407860517501831
    4. '_more' → logprob: -8.90786075592041
    5. 'More' → logprob: -10.15786075592041
    6. ' )' → logprob: -10.40786075592041
    7. '):' → logprob: -11.65786075592041
    8. '...)' → logprob: -11.78286075592041
    9. '...' → logprob: -11.90786075592041
    10. 'n' → logprob: -12.53286075592041

Token 119: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12307455390691757
    2. '()' → logprob: -2.873074531555176
    3. '):' → logprob: -2.998074531555176
    4. '())' → logprob: -4.873074531555176
    5. ' )' → logprob: -7.623074531555176
    6. '():' → logprob: -7.998074531555176
    7. ' integers' → logprob: -8.123074531555176
    8. 'int' → logprob: -9.123074531555176
    9. '=int' → logprob: -9.373074531555176
    10. '=' → logprob: -9.623074531555176

Token 120: ' ints' (ID: 121629)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10308410972356796
    2. '():' → logprob: -2.353084087371826
    3. ' ()' → logprob: -7.478084087371826
    4. '(' → logprob: -7.728084087371826
    5. 's' → logprob: -7.978084087371826
    6. '().' → logprob: -8.478084564208984
    7. ':' → logprob: -8.478084564208984
    8. ')' → logprob: -8.603084564208984
    9. 'return' → logprob: -8.978084564208984
    10. '*' → logprob: -9.103084564208984

Token 121: ' on' (ID: 402)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.028089195489883423
    2. '()' → logprob: -3.6530892848968506
    3. '().' → logprob: -6.7780890464782715
    4. '():
' → logprob: -8.15308952331543
    5. '()[' → logprob: -8.40308952331543
    6. ':' → logprob: -10.65308952331543
    7. '(' → logprob: -10.77808952331543
    8. ' ():' → logprob: -10.90308952331543
    9. '()*' → logprob: -11.15308952331543
    10. ' ()' → logprob: -11.15308952331543

Token 122: ' one' (ID: 1001)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3348829448223114
    2. '()' → logprob: -1.9598829746246338
    3. 'input' → logprob: -2.834882974624634
    4. ' one' → logprob: -3.209882974624634
    5. ' a' → logprob: -4.209882736206055
    6. ' the' → logprob: -4.459882736206055
    7. '().' → logprob: -5.084882736206055
    8. ' line' → logprob: -5.334882736206055
    9. 'line' → logprob: -6.334882736206055
    10. ' ()' → logprob: -6.709882736206055

Token 123: ' line' (ID: 2543)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6274990439414978
    2. ' line' → logprob: -1.0024991035461426
    3. 'line' → logprob: -2.3774991035461426
    4. '().' → logprob: -5.377499103546143
    5. 'input' → logprob: -7.377499103546143
    6. '(' → logprob: -8.502498626708984
    7. '_line' → logprob: -8.627498626708984
    8. '())' → logprob: -8.627498626708984
    9. ' input' → logprob: -8.752498626708984
    10. '(line' → logprob: -9.752498626708984

Token 124: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6817061901092529
    2. '().' → logprob: -1.181706190109253
    3. '():' → logprob: -1.681706190109253
    4. '():
' → logprob: -7.431706428527832
    5. '   ' → logprob: -8.306706428527832
    6. ' ()' → logprob: -9.181706428527832
    7. ':' → logprob: -9.431706428527832
    8. '.split' → logprob: -9.681706428527832
    9. '(' → logprob: -9.806706428527832
    10. ')' → logprob: -10.181706428527832

Token 125: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07012005150318146
    2. '()' → logprob: -3.320120096206665
    3. '():
' → logprob: -3.820120096206665
    4. '   ' → logprob: -5.195119857788086
    5. ':' → logprob: -6.320119857788086
    6. '().' → logprob: -6.945119857788086
    7. 'return' → logprob: -7.195119857788086
    8. '):' → logprob: -8.945119857788086
    9. ':
' → logprob: -9.695119857788086
    10. '=' → logprob: -9.945119857788086

Token 126: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.034002844244241714
    2. ' return' → logprob: -3.9090027809143066
    3. 'map' → logprob: -4.909002780914307
    4. 'list' → logprob: -5.284002780914307
    5. ' map' → logprob: -7.784002780914307
    6. ' list' → logprob: -8.159003257751465
    7. '   ' → logprob: -8.534003257751465
    8. 'm' → logprob: -12.784003257751465
    9. 's' → logprob: -12.784003257751465
    10. ' ' → logprob: -12.784003257751465

Token 127: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.13563498854637146
    2. 'list' → logprob: -2.1356348991394043
    3. ' map' → logprob: -5.135634899139404
    4. ' list' → logprob: -5.885634899139404
    5. '[' → logprob: -12.760635375976562
    6. 'tuple' → logprob: -13.510635375976562
    7. '[list' → logprob: -13.760635375976562
    8. '	map' → logprob: -14.510635375976562
    9. '   ' → logprob: -14.885635375976562
    10. '(map' → logprob: -15.510635375976562

Token 128: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00020461321400944144
    2. '(' → logprob: -8.500205039978027
    3. 'int' → logprob: -13.875205039978027
    4. '<int' → logprob: -17.12520408630371
    5. '(
' → logprob: -17.37520408630371
    6. '(in' → logprob: -17.37520408630371
    7. '(i' → logprob: -17.75020408630371
    8. '[int' → logprob: -18.00020408630371
    9. '```' → logprob: -18.12520408630371
    10. ' (' → logprob: -18.62520408630371

Token 129: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.38873592019081116
    2. ',' → logprob: -1.1387358903884888
    3. '(input' → logprob: -7.013735771179199
    4. ' ,' → logprob: -7.638735771179199
    5. 'input' → logprob: -8.5137357711792
    6. '(' → logprob: -8.5137357711792
    7. ')' → logprob: -10.5137357711792
    8. ' (' → logprob: -11.2637357711792
    9. ',int' → logprob: -11.6387357711792
    10. ',(' → logprob: -11.7637357711792

Token 130: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0205561351031065
    2. ' input' → logprob: -3.8955562114715576
    3. ')' → logprob: -11.520556449890137
    4. ' ' → logprob: -12.770556449890137
    5. '   ' → logprob: -14.645556449890137
    6. ',input' → logprob: -15.020556449890137
    7. '  ' → logprob: -15.520556449890137
    8. '	input' → logprob: -15.895556449890137
    9. '(input' → logprob: -16.14555549621582
    10. '<input' → logprob: -16.27055549621582

Token 131: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.246537173457909e-06
    2. '()' → logprob: -12.500003814697266
    3. ' ().' → logprob: -14.625003814697266
    4. '(' → logprob: -16.500003814697266
    5. ')' → logprob: -19.000003814697266
    6. '())' → logprob: -19.250003814697266
    7. '.split' → logprob: -19.250003814697266
    8. 'split' → logprob: -19.750003814697266
    9. '().'' → logprob: -20.375003814697266
    10. '.' → logprob: -20.500003814697266

Token 132: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018156498670578003
    2. 'strip' → logprob: -4.0181565284729
    3. 'rstrip' → logprob: -12.143156051635742
    4. ' split' → logprob: -14.393156051635742
    5. 'spl' → logprob: -15.143156051635742
    6. '(split' → logprob: -15.393156051635742
    7. ')' → logprob: -15.518156051635742
    8. ' strip' → logprob: -17.018156051635742
    9. 'read' → logprob: -17.268156051635742
    10. 's' → logprob: -17.893156051635742

Token 133: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004031976219266653
    2. ')' → logprob: -6.004032135009766
    3. '()' → logprob: -6.504032135009766
    4. '()))' → logprob: -10.254032135009766
    5. '))' → logprob: -11.504032135009766
    6. '(' → logprob: -12.129032135009766
    7. '())
' → logprob: -12.379032135009766
    8. ' ())' → logprob: -13.004032135009766
    9. ' )' → logprob: -15.629032135009766
    10. '()
' → logprob: -16.379032135009766

Token 134: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16807053983211517
    2. 'def' → logprob: -2.5430705547332764
    3. ' 
' → logprob: -3.4180705547332764
    4. '<|end|>' → logprob: -3.5430705547332764
    5. '\n' → logprob: -4.793070316314697
    6. '  
' → logprob: -6.168070316314697
    7. '\' → logprob: -6.293070316314697
    8. 'newline' → logprob: -8.043070793151855
    9. '<|end|>' → logprob: -8.043070793151855
    10. '    
' → logprob: -8.168070793151855

Token 135: ' in' (ID: 306)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.5798887014389038
    2. 'in' → logprob: -0.9548887014389038
    3. ' ins' → logprob: -3.4548888206481934
    4. ' in' → logprob: -4.454888820648193
    5. 'instr' → logprob: -4.829888820648193
    6. 'insp' → logprob: -6.579888820648193
    7. 'input' → logprob: -7.329888820648193
    8. ' instr' → logprob: -7.954888820648193
    9. 'insu' → logprob: -7.954888820648193
    10. 'inst' → logprob: -8.079888343811035

Token 136: 'pl' (ID: 528)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6112052202224731
    2. 'p' → logprob: -0.9862052202224731
    3. 'put' → logprob: -3.3612051010131836
    4. 'pl' → logprob: -4.236205101013184
    5. 's' → logprob: -4.486205101013184
    6. 'list' → logprob: -4.861205101013184
    7. 'pt' → logprob: -5.861205101013184
    8. 'l' → logprob: -5.986205101013184
    9. 'plist' → logprob: -6.111205101013184
    10. 'lst' → logprob: -6.486205101013184

Token 137: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.018965670838952065
    2. '():
' → logprob: -4.143965721130371
    3. 'ist' → logprob: -6.268965721130371
    4. '()' → logprob: -7.268965721130371
    5. 'ine' → logprob: -8.643965721130371
    6. '():
' → logprob: -9.143965721130371
    7. 'st' → logprob: -10.393965721130371
    8. '():

' → logprob: -10.893965721130371
    9. ' ():' → logprob: -14.143965721130371
    10. 'ines' → logprob: -14.768965721130371

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02579297497868538
    2. '():' → logprob: -4.025793075561523
    3. '():
' → logprob: -5.650793075561523
    4. '):' → logprob: -6.025793075561523
    5. '):
' → logprob: -7.400793075561523
    6. ':' → logprob: -7.400793075561523
    7. '()' → logprob: -8.525793075561523
    8. ':
' → logprob: -9.775793075561523
    9. '  ' → logprob: -9.900793075561523
    10. ' ' → logprob: -10.150793075561523

Token 139: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.027673820033669472
    2. '   ' → logprob: -4.402673721313477
    3. 'return' (adapté à ' return') → logprob: -4.402673721313477
    4. ' list' → logprob: -6.027673721313477
    5. 'map' → logprob: -8.027673721313477
    6. ' return' → logprob: -11.027673721313477
    7. 'lambda' → logprob: -11.652673721313477
    8. '[list' → logprob: -11.777673721313477
    9. 'def' → logprob: -12.027673721313477
    10. '[]
' → logprob: -12.027673721313477

Token 140: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0010468624532222748
    2. ' list' → logprob: -7.251046657562256
    3. '[list' → logprob: -8.001047134399414
    4. '[' → logprob: -14.126047134399414
    5. '=list' → logprob: -14.626047134399414
    6. '(list' → logprob: -15.251047134399414
    7. '	list' → logprob: -16.126047134399414
    8. '[int' → logprob: -16.376047134399414
    9. ':list' → logprob: -17.501047134399414
    10. '[input' → logprob: -17.501047134399414

Token 141: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00428662309423089
    2. '(' → logprob: -5.504286766052246
    3. '(int' → logprob: -8.504286766052246
    4. 'map' → logprob: -12.379286766052246
    5. ' map' → logprob: -15.129286766052246
    6. '(
' → logprob: -15.254286766052246
    7. ' (' → logprob: -15.379286766052246
    8. '(input' → logprob: -15.629286766052246
    9. '(

' → logprob: -16.00428581237793
    10. '(list' → logprob: -17.00428581237793

Token 142: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -11.250027656555176
    3. 'int' → logprob: -11.250027656555176
    4. '(str' → logprob: -14.250027656555176
    5. '<int' → logprob: -14.625027656555176
    6. '=int' → logprob: -16.25002670288086
    7. '[int' → logprob: -16.75002670288086
    8. ']int' → logprob: -16.75002670288086
    9. ',int' → logprob: -17.25002670288086
    10. '(list' → logprob: -17.37502670288086

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01656048372387886
    2. ',input' → logprob: -4.1415605545043945
    3. '(input' → logprob: -7.6415605545043945
    4. 'input' → logprob: -10.266560554504395
    5. '(' → logprob: -11.891560554504395
    6. ' ,' → logprob: -13.016560554504395
    7. ',(' → logprob: -14.266560554504395
    8. ')' → logprob: -14.766560554504395
    9. ' input' → logprob: -15.016560554504395
    10. ',int' → logprob: -15.016560554504395

Token 144: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38689517974853516
    2. 'input' → logprob: -1.1368951797485352
    3. '(input' → logprob: -10.761895179748535
    4. ',input' → logprob: -14.261895179748535
    5. '	input' → logprob: -14.386895179748535
    6. ' ' → logprob: -14.636895179748535
    7. '=input' → logprob: -14.761895179748535
    8. '<input' → logprob: -15.136895179748535
    9. '_input' → logprob: -15.261895179748535
    10. '[input' → logprob: -16.01189422607422

Token 145: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.319370302458992e-06
    2. '()' → logprob: -12.250005722045898
    3. '())' → logprob: -16.0000057220459
    4. ')' → logprob: -16.6250057220459
    5. '().__' → logprob: -16.6250057220459
    6. '(' → logprob: -17.0000057220459
    7. '()))' → logprob: -17.1250057220459
    8. '))' → logprob: -17.7500057220459
    9. ',' → logprob: -18.6250057220459
    10. '(),' → logprob: -18.8750057220459

Token 146: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.4849443838757e-06
    2. '(split' → logprob: -12.875004768371582
    3. 'strip' → logprob: -13.875004768371582
    4. ' split' → logprob: -14.625004768371582
    5. 'spl' → logprob: -15.125004768371582
    6. ')' → logprob: -15.875004768371582
    7. 'rstrip' → logprob: -16.875003814697266
    8. 'plit' → logprob: -18.250003814697266
    9. 'decode' → logprob: -20.125003814697266
    10. '_split' → logprob: -20.250003814697266

Token 147: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6976421475410461
    2. '()))' → logprob: -0.6976421475410461
    3. '()' → logprob: -5.4476423263549805
    4. '())' → logprob: -9.19764232635498
    5. '(' → logprob: -10.19764232635498
    6. '()))
' → logprob: -10.69764232635498
    7. ')' → logprob: -11.44764232635498
    8. ' ))' → logprob: -13.57264232635498
    9. '()));' → logprob: -13.69764232635498
    10. '()))

' → logprob: -13.82264232635498

Token 148: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.706253707408905
    2. '
' → logprob: -0.956253707408905
    3. '<|end|>' → logprob: -2.33125376701355
    4. '#' → logprob: -4.456253528594971
    5. '\n' → logprob: -5.081253528594971
    6. '\' → logprob: -5.956253528594971
    7. '<|end|>' → logprob: -6.456253528594971
    8. '

' → logprob: -7.956253528594971
    9. 'newline' → logprob: -7.956253528594971
    10. '  
' → logprob: -8.081254005432129

Token 149: ' in' (ID: 306)
  Prédit: ' ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ins' → logprob: -0.5620393753051758
    2. 'ins' → logprob: -1.3120393753051758
    3. ' instr' → logprob: -2.187039375305176
    4. 'instr' → logprob: -3.312039375305176
    5. 'in' → logprob: -5.437039375305176
    6. ' in' → logprob: -5.562039375305176
    7. ' st' → logprob: -6.937039375305176
    8. 'str' → logprob: -7.312039375305176
    9. 'insu' → logprob: -7.812039375305176
    10. 'st' → logprob: -8.312039375305176

Token 150: 'pls' (ID: 118628)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06596444547176361
    2. 'p' → logprob: -3.690964460372925
    3. 't' → logprob: -3.940964460372925
    4. 'put' → logprob: -4.440964221954346
    5. 'ps' → logprob: -6.065964221954346
    6. 'str' → logprob: -6.565964221954346
    7. 'l' → logprob: -7.440964221954346
    8. 'f' → logprob: -7.440964221954346
    9. 'pl' → logprob: -7.690964221954346
    10. 'q' → logprob: -8.065964698791504

Token 151: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0013520221691578627
    2. '()' → logprob: -7.251351833343506
    3. '():
' → logprob: -7.376351833343506
    4. ' ():' → logprob: -11.251352310180664
    5. '():

' → logprob: -14.001352310180664
    6. '():
' → logprob: -14.626352310180664
    7. ' ()' → logprob: -15.126352310180664
    8. ':' → logprob: -15.376352310180664
    9. 's' → logprob: -15.626352310180664
    10. '()[' → logprob: -15.751352310180664

Token 152: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6849845051765442
    2. '():' → logprob: -1.1849844455718994
    3. '():
' → logprob: -1.9349844455718994
    4. 'return' → logprob: -3.1849844455718994
    5. '   ' → logprob: -5.9349846839904785
    6. '()
' → logprob: -7.8099846839904785
    7. 'def' → logprob: -8.30998420715332
    8. ' return' → logprob: -8.68498420715332
    9. '()[' → logprob: -8.68498420715332
    10. ' ()' → logprob: -8.93498420715332

Token 153: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.39752742648124695
    2. 'input' → logprob: -1.1475274562835693
    3. ' list' → logprob: -5.02252721786499
    4. ' input' → logprob: -5.89752721786499
    5. 'str' → logprob: -7.39752721786499
    6. '   ' → logprob: -7.64752721786499
    7. '[input' → logprob: -9.397527694702148
    8. 'string' → logprob: -10.022527694702148
    9. 'map' → logprob: -10.522527694702148
    10. ' ' → logprob: -12.397527694702148

Token 154: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.57662034034729
    2. 'input' → logprob: -0.82662034034729
    3. '[input' → logprob: -7.701620101928711
    4. ' list' → logprob: -8.951620101928711
    5. ' input' → logprob: -9.451620101928711
    6. 'string' → logprob: -11.826620101928711
    7. '[list' → logprob: -11.951620101928711
    8. '(input' → logprob: -12.951620101928711
    9. 'map' → logprob: -13.451620101928711
    10. 'str' → logprob: -13.826620101928711

Token 155: '(input' (ID: 10054)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.31345394253730774
    2. '(input' → logprob: -1.6884539127349854
    3. '(' → logprob: -2.6884539127349854
    4. '(str' → logprob: -4.1884541511535645
    5. '(string' → logprob: -8.188453674316406
    6. '(list' → logprob: -8.313453674316406
    7. '(lambda' → logprob: -8.813453674316406
    8. '(s' → logprob: -9.063453674316406
    9. '(strings' → logprob: -9.188453674316406
    10. '(tuple' → logprob: -9.938453674316406

Token 156: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006398799829185009
    2. '())' → logprob: -5.256398677825928
    3. '()' → logprob: -6.756398677825928
    4. '(' → logprob: -15.506399154663086
    5. '()))' → logprob: -15.631399154663086
    6. '()[' → logprob: -15.756399154663086
    7. ' ().' → logprob: -16.381399154663086
    8. '()]' → logprob: -16.756399154663086
    9. '());' → logprob: -16.881399154663086
    10. ' ())' → logprob: -17.131399154663086

Token 157: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3133043944835663
    2. 'strip' → logprob: -1.3133044242858887
    3. 'rstrip' → logprob: -10.06330394744873
    4. ')' → logprob: -16.938304901123047
    5. 'spl' → logprob: -17.438304901123047
    6. ' split' → logprob: -17.938304901123047
    7. 'str' → logprob: -17.938304901123047
    8. ' strip' → logprob: -17.938304901123047
    9. '(split' → logprob: -19.813304901123047
    10. 's' → logprob: -20.438304901123047

Token 158: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002925638109445572
    2. '()' → logprob: -6.002925872802734
    3. ')' → logprob: -7.752925872802734
    4. '(' → logprob: -11.502925872802734
    5. '()))' → logprob: -12.377925872802734
    6. ' ())' → logprob: -13.002925872802734
    7. '())
' → logprob: -13.377925872802734
    8. '()]' → logprob: -14.377925872802734
    9. '();)' → logprob: -14.752925872802734
    10. '()[' → logprob: -15.127925872802734

Token 159: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9030283689498901
    2. 'def' → logprob: -0.9030283689498901
    3. '<|end|>' → logprob: -2.1530284881591797
    4. '\n' → logprob: -3.7780284881591797
    5. '#' → logprob: -3.9030284881591797
    6. '\' → logprob: -4.15302848815918
    7. '()' → logprob: -6.02802848815918
    8. '<|end|>' → logprob: -6.27802848815918
    9. ' 
' → logprob: -6.40302848815918
    10. ' ' → logprob: -6.40302848815918

Token 160: ' in' (ID: 306)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0630077123641968
    2. 's' → logprob: -1.5630077123641968
    3. 'in' → logprob: -1.8130077123641968
    4. 'ins' → logprob: -2.3130078315734863
    5. ' input' → logprob: -2.8130078315734863
    6. 'str' → logprob: -3.4380078315734863
    7. 'int' → logprob: -3.6880078315734863
    8. 'inp' → logprob: -4.313007831573486
    9. 'instr' → logprob: -4.563007831573486
    10. 'inf' → logprob: -5.313007831573486

Token 161: 'pl' (ID: 528)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.34612536430358887
    2. 'p' → logprob: -1.3461253643035889
    3. 'put' → logprob: -3.471125364303589
    4. 'pt' → logprob: -7.596125602722168
    5. 's' → logprob: -7.721125602722168
    6. 'puts' → logprob: -9.346125602722168
    7. 'pu' → logprob: -9.596125602722168
    8. 'pi' → logprob: -9.721125602722168
    9. 'pl' → logprob: -10.721125602722168
    10. 'a' → logprob: -12.221125602722168

Token 162: 'm' (ID: 76)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000817369669675827
    2. 's' → logprob: -7.50081729888916
    3. 'st' → logprob: -9.62581729888916
    4. 'ist' → logprob: -9.75081729888916
    5. '():' → logprob: -9.75081729888916
    6. ' ()' → logprob: -11.00081729888916
    7. '()]' → logprob: -11.00081729888916
    8. 'n' → logprob: -11.87581729888916
    9. '()[' → logprob: -12.25081729888916
    10. '();' → logprob: -12.75081729888916

Token 163: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00160138716455549
    2. '():
' → logprob: -6.501601219177246
    3. '()' → logprob: -9.251601219177246
    4. ' ():' → logprob: -13.001601219177246
    5. '():

' → logprob: -14.626601219177246
    6. '():
' → logprob: -15.001601219177246
    7. 'def' → logprob: -16.501602172851562
    8. ' ()' → logprob: -18.126602172851562
    9. '()
' → logprob: -18.376602172851562
    10. '()):
' → logprob: -18.751602172851562

Token 164: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009765983559191227
    2. '):
' → logprob: -7.0009765625
    3. ')' → logprob: -9.7509765625
    4. ' ):' → logprob: -12.7509765625
    5. '):
' → logprob: -13.7509765625
    6. '=' → logprob: -13.8759765625
    7. '():' → logprob: -14.3759765625
    8. '=None' → logprob: -14.7509765625
    9. ',' → logprob: -15.5009765625
    10. ':' → logprob: -15.6259765625

Token 165: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015554478159174323
    2. '	return' → logprob: -6.876555442810059
    3. '
' → logprob: -8.501555442810059
    4. ' return' → logprob: -8.626555442810059
    5. '    
' → logprob: -9.626555442810059
    6. 'return' → logprob: -10.251555442810059
    7. '    ' → logprob: -11.751555442810059
    8. ' ' → logprob: -12.126555442810059
    9. '  ' → logprob: -12.501555442810059
    10. '	   ' → logprob: -13.001555442810059

Token 166: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1549005508422852
    2. '   ' → logprob: -1.1549005508422852
    3. ':
' → logprob: -1.4049005508422852
    4. ' return' → logprob: -2.654900550842285
    5. 'return' → logprob: -3.404900550842285
    6. ':return' → logprob: -5.404900550842285
    7. '	return' → logprob: -5.779900550842285
    8. '():' → logprob: -6.279900550842285
    9. ':list' → logprob: -6.404900550842285
    10. ' ' → logprob: -7.029900550842285

Token 167: ' get' (ID: 717)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.46167057752609253
    2. ' return' → logprob: -1.2116706371307373
    3. '[' → logprob: -2.8366706371307373
    4. '   ' → logprob: -5.711670398712158
    5. ' [' → logprob: -5.711670398712158
    6. 'def' → logprob: -6.586670398712158
    7. '[list' → logprob: -6.586670398712158
    8. '[]' → logprob: -7.086670398712158
    9. 'list' → logprob: -7.586670398712158
    10. '[int' → logprob: -7.586670398712158

Token 168: ' n' (ID: 297)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.5848792195320129
    2. '[' → logprob: -1.4598791599273682
    3. '[int' → logprob: -2.334879159927368
    4. 'list' → logprob: -3.084879159927368
    5. '(n' → logprob: -4.334879398345947
    6. 'n' → logprob: -4.334879398345947
    7. '_list' → logprob: -4.834879398345947
    8. '[list' → logprob: -4.959879398345947
    9. '[]' → logprob: -5.459879398345947
    10. ' [' → logprob: -5.709879398345947

Token 169: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -1.1511837244033813
    2. '():' → logprob: -1.2761837244033813
    3. '()' → logprob: -2.151183605194092
    4. 'list' → logprob: -2.276183605194092
    5. '_list' → logprob: -2.901183605194092
    6. ' lines' → logprob: -3.026183605194092
    7. 'lists' → logprob: -3.651183605194092
    8. '_lines' → logprob: -4.401183605194092
    9. ' lists' → logprob: -5.151183605194092
    10. '(' → logprob: -5.526183605194092

Token 170: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7766599655151367
    2. '():' → logprob: -1.1516599655151367
    3. '   ' → logprob: -2.6516599655151367
    4. '():
' → logprob: -3.2766599655151367
    5. '=[]' → logprob: -3.7766599655151367
    6. ':
' → logprob: -4.026659965515137
    7. '[]' → logprob: -4.151659965515137
    8. '=' → logprob: -5.026659965515137
    9. '([]' → logprob: -5.026659965515137
    10. '):' → logprob: -5.151659965515137

Token 171: ' one' (ID: 1001)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2208559662103653
    2. ' return' → logprob: -2.095855951309204
    3. 'return' → logprob: -3.345855951309204
    4. '[' → logprob: -4.220856189727783
    5. ' [' → logprob: -4.970856189727783
    6. '    ' → logprob: -5.595856189727783
    7. '[]' → logprob: -5.720856189727783
    8. ' ' → logprob: -6.220856189727783
    9. '[
' → logprob: -6.345856189727783
    10. 'def' → logprob: -6.970856189727783

Token 172: ' int' (ID: 677)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.2188255786895752
    2. 'list' → logprob: -1.8438255786895752
    3. ' list' → logprob: -2.218825578689575
    4. ' per' → logprob: -2.968825578689575
    5. 'each' → logprob: -2.968825578689575
    6. 'per' → logprob: -2.968825578689575
    7. ' by' → logprob: -3.343825578689575
    8. ' of' → logprob: -3.468825578689575
    9. 'at' → logprob: -3.593825578689575
    10. '   ' → logprob: -3.718825578689575

Token 173: ' per' (ID: 777)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.495434433221817
    2. '()' → logprob: -1.7454344034194946
    3. '():
' → logprob: -2.120434522628784
    4. '[]' → logprob: -3.370434522628784
    5. '():' → logprob: -4.120434284210205
    6. '_list' → logprob: -4.245434284210205
    7. '()
' → logprob: -5.370434284210205
    8. '=[]' → logprob: -5.370434284210205
    9. 'ist' → logprob: -5.745434284210205
    10. ' =' → logprob: -5.870434284210205

Token 174: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04882625862956047
    2. ' line' → logprob: -3.048826217651367
    3. '	line' → logprob: -9.048826217651367
    4. 'input' → logprob: -10.173826217651367
    5. ' ' → logprob: -10.423826217651367
    6. '   ' → logprob: -11.173826217651367
    7. ')' → logprob: -11.423826217651367
    8. '_line' → logprob: -11.798826217651367
    9. 'def' → logprob: -11.923826217651367
    10. '  ' → logprob: -12.423826217651367

Token 175: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8621220588684082
    2. '():' → logprob: -0.8621220588684082
    3. '(n' → logprob: -2.362122058868408
    4. '):' → logprob: -3.362122058868408
    5. ':
' → logprob: -4.737122058868408
    6. '():
' → logprob: -5.112122058868408
    7. '   ' → logprob: -5.612122058868408
    8. '(' → logprob: -5.612122058868408
    9. ' :' → logprob: -6.362122058868408
    10. ')' → logprob: -7.737122058868408

Token 176: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12213969230651855
    2. ':' → logprob: -2.9971396923065186
    3. '(' → logprob: -3.1221396923065186
    4. ':
' → logprob: -4.247139930725098
    5. '():' → logprob: -5.872139930725098
    6. '   ' → logprob: -6.622139930725098
    7. ' :' → logprob: -7.497139930725098
    8. '(
' → logprob: -7.747139930725098
    9. '():
' → logprob: -8.122139930725098
    10. 'n' → logprob: -8.997139930725098

Token 177: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7655236124992371
    2. '   ' → logprob: -1.0155236721038818
    3. 'return' (adapté à ' return') → logprob: -1.7655236721038818
    4. ' res' → logprob: -7.765523433685303
    5. 'res' → logprob: -8.015523910522461
    6. '	return' → logprob: -8.390523910522461
    7. 'arr' → logprob: -9.265523910522461
    8. ' ' → logprob: -9.515523910522461
    9. ' l' → logprob: -9.640523910522461
    10. 'r' → logprob: -9.765523910522461

Token 178: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.17745822668075562
    2. '[' → logprob: -1.9274582862854004
    3. ' [' → logprob: -4.9274582862854
    4. '[int' → logprob: -5.1774582862854
    5. '[in' → logprob: -5.6774582862854
    6. '[l' → logprob: -8.177457809448242
    7. '[List' → logprob: -8.677457809448242
    8. '[n' → logprob: -8.927457809448242
    9. '[input' → logprob: -9.302457809448242
    10. '[line' → logprob: -10.427457809448242

Token 179: 'int' (ID: 491)
  Prédit: 'inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inp' → logprob: -0.6326946020126343
    2. 'int' → logprob: -0.7576946020126343
    3. ' inp' → logprob: -9.757694244384766
    4. ' int' → logprob: -11.757694244384766
    5. 'in' → logprob: -11.882694244384766
    6. '(inp' → logprob: -12.632694244384766
    7. 'input' → logprob: -12.632694244384766
    8. '   ' → logprob: -13.007694244384766
    9. 'ints' → logprob: -13.382694244384766
    10. 'inn' → logprob: -13.507694244384766

Token 180: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -4.906711546937004e-05
    2. 'input' → logprob: -10.125048637390137
    3. '(' → logprob: -12.000048637390137
    4. '()' → logprob: -13.250048637390137
    5. '(inp' → logprob: -14.875048637390137
    6. '(in' → logprob: -15.125048637390137
    7. '(sys' → logprob: -15.375048637390137
    8. '(
' → logprob: -16.250049591064453
    9. '(int' → logprob: -17.375049591064453
    10. '(

' → logprob: -17.875049591064453

Token 181: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00010413920972496271
    2. '()' → logprob: -9.750103950500488
    3. '().' → logprob: -10.250103950500488
    4. '()]' → logprob: -12.250103950500488
    5. '())
' → logprob: -12.750103950500488
    6. ' ())' → logprob: -13.625103950500488
    7. ')' → logprob: -14.250103950500488
    8. '(' → logprob: -14.625103950500488
    9. '()
' → logprob: -15.375103950500488
    10. '()))' → logprob: -17.000104904174805

Token 182: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04559668153524399
    2. 'for' → logprob: -3.1705965995788574
    3. ')' → logprob: -6.420596599578857
    4. ' for' → logprob: -7.045596599578857
    5. '   ' → logprob: -10.420597076416016
    6. '	for' → logprob: -10.795597076416016
    7. ' ()' → logprob: -11.295597076416016
    8. '()]' → logprob: -11.420597076416016
    9. ']' → logprob: -12.045597076416016
    10. '())' → logprob: -12.170597076416016

Token 183: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003221150254830718
    2. '_i' → logprob: -8.625322341918945
    3. ' _' → logprob: -8.875322341918945
    4. 'i' → logprob: -13.375322341918945
    5. '_range' → logprob: -14.250322341918945
    6. ' i' → logprob: -15.500322341918945
    7. '_in' → logprob: -16.250322341918945
    8. ' ' → logprob: -17.375322341918945
    9. '_
' → logprob: -17.500322341918945
    10. '_n' → logprob: -17.500322341918945

Token 184: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.40920519828796387
    2. ' in' → logprob: -1.7842051982879639
    3. 'in' → logprob: -2.034205198287964
    4. ' range' → logprob: -3.534205198287964
    5. '_' → logprob: -5.159205436706543
    6. 'i' → logprob: -6.409205436706543
    7. ' ' → logprob: -8.284205436706543
    8. ' _' → logprob: -8.659205436706543
    9. '_range' → logprob: -10.909205436706543
    10. 'n' → logprob: -11.034205436706543

Token 185: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.505351095460355e-05
    2. ' range' → logprob: -9.500075340270996
    3. '	range' → logprob: -17.25007438659668
    4. '(range' → logprob: -17.87507438659668
    5. 'rang' → logprob: -18.37507438659668
    6. '_' → logprob: -18.62507438659668
    7. '_range' → logprob: -18.75007438659668
    8. 'ran' → logprob: -18.87507438659668
    9. 'ra' → logprob: -19.00007438659668
    10. 'r' → logprob: -20.12507438659668

Token 186: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.2723104848410003e-05
    2. '(' → logprob: -10.750022888183594
    3. 'n' → logprob: -13.625022888183594
    4. '(
' → logprob: -17.500022888183594
    5. ' n' → logprob: -20.625022888183594
    6. ' (' → logprob: -20.750022888183594
    7. '((' → logprob: -21.000022888183594
    8. '(N' → logprob: -21.125022888183594
    9. ')n' → logprob: -22.000022888183594
    10. '(

' → logprob: -22.250022888183594

Token 187: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.153795766294934e-06
    2. ']' → logprob: -12.125005722045898
    3. ')]
' → logprob: -14.875005722045898
    4. ')' → logprob: -15.625005722045898
    5. '])]' → logprob: -17.2500057220459
    6. '])' → logprob: -17.3750057220459
    7. ')],' → logprob: -17.5000057220459
    8. '   ' → logprob: -17.6250057220459
    9. '()]' → logprob: -17.7500057220459
    10. ')])' → logprob: -17.8750057220459

Token 188: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32520994544029236
    2. '<|end|>' → logprob: -1.3252099752426147
    3. '
' → logprob: -5.325210094451904
    4. '#' → logprob: -5.575210094451904
    5. '<|end|>' → logprob: -6.700210094451904
    6. '```' → logprob: -6.700210094451904
    7. '\' → logprob: -8.450209617614746
    8. ' def' → logprob: -9.325209617614746
    9. ')' → logprob: -9.450209617614746
    10. 'newline' → logprob: -10.200209617614746

Token 189: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.24813419580459595
    2. 'ins' → logprob: -2.498134136199951
    3. ' in' → logprob: -3.248134136199951
    4. 'instr' → logprob: -3.498134136199951
    5. 'inp' → logprob: -3.748134136199951
    6. 'out' → logprob: -4.498134136199951
    7. 'input' → logprob: -5.123134136199951
    8. ' instr' → logprob: -5.998134136199951
    9. ' ins' → logprob: -5.998134136199951
    10. ' inp' → logprob: -5.998134136199951

Token 190: 'pll' (ID: 187560)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.02984883449971676
    2. 'p' → logprob: -4.279849052429199
    3. 'pm' → logprob: -4.904849052429199
    4. 'l' → logprob: -5.279849052429199
    5. 'pls' → logprob: -6.529849052429199
    6. 'pr' → logprob: -7.904849052429199
    7. 'pll' → logprob: -8.6548490524292
    8. 'plt' → logprob: -9.1548490524292
    9. 'lm' → logprob: -9.1548490524292
    10. 'ps' → logprob: -9.2798490524292

Token 191: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.600714161526412e-05
    2. '(' → logprob: -10.125076293945312
    3. '():' → logprob: -10.250076293945312
    4. ' (' → logprob: -15.125076293945312
    5. '(m' → logprob: -16.250076293945312
    6. 'n' → logprob: -16.750076293945312
    7. '()' → logprob: -17.250076293945312
    8. '(l' → logprob: -17.375076293945312
    9. '():
' → logprob: -17.500076293945312
    10. '((' → logprob: -18.125076293945312

Token 192: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001546883606351912
    2. '(n' → logprob: -6.626546859741211
    3. '):
' → logprob: -8.501546859741211
    4. ' ):' → logprob: -11.376546859741211
    5. ')' → logprob: -12.751546859741211
    6. '):
' → logprob: -13.501546859741211
    7. '():' → logprob: -14.126546859741211
    8. ':' → logprob: -14.501546859741211
    9. 'n' → logprob: -15.126546859741211
    10. '   ' → logprob: -15.501546859741211

Token 193: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5655284523963928
    2. '(n' → logprob: -1.065528392791748
    3. ' return' → logprob: -3.190528392791748
    4. '[n' → logprob: -4.065528392791748
    5. 'return' → logprob: -4.690528392791748
    6. ' [' → logprob: -4.940528392791748
    7. ' ' → logprob: -5.065528392791748
    8. ' n' → logprob: -6.315528392791748
    9. ' (' → logprob: -6.315528392791748
    10. '  ' → logprob: -7.065528392791748

Token 194: ' #' (ID: 1069)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.9459299445152283
    2. '[list' → logprob: -1.320930004119873
    3. '[' → logprob: -1.695930004119873
    4. 'return' → logprob: -2.820930004119873
    5. '[List' → logprob: -3.195930004119873
    6. '   ' → logprob: -3.695930004119873
    7. '[int' → logprob: -4.070930004119873
    8. ' [' → logprob: -5.695930004119873
    9. '[len' → logprob: -5.695930004119873
    10. ' return' → logprob: -5.945930004119873

Token 195: ' get' (ID: 717)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1446702480316162
    2. ' return' → logprob: -2.019670248031616
    3. '[n' → logprob: -7.519670486450195
    4. '[list' → logprob: -8.019670486450195
    5. '[]' → logprob: -8.519670486450195
    6. 'list' → logprob: -8.519670486450195
    7. ' [' → logprob: -8.644670486450195
    8. '[' → logprob: -9.019670486450195
    9. '#' → logprob: -9.644670486450195
    10. '[line' → logprob: -9.769670486450195

Token 196: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13118623197078705
    2. ' n' → logprob: -2.1311862468719482
    3. '[n' → logprob: -5.631186008453369
    4. '(n' → logprob: -8.006186485290527
    5. ' [' → logprob: -8.131186485290527
    6. '	n' → logprob: -11.881186485290527
    7. ' in' → logprob: -12.006186485290527
    8. 'list' → logprob: -12.006186485290527
    9. ' ' → logprob: -12.381186485290527
    10. ' (' → logprob: -12.631186485290527

Token 197: ' lines' (ID: 8698)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.023036742582917213
    2. 'lines' → logprob: -4.148036956787109
    3. '_lines' → logprob: -5.523036956787109
    4. ' lines' → logprob: -6.273036956787109
    5. '(lines' → logprob: -7.023036956787109
    6. '(' → logprob: -9.64803695678711
    7. '	lines' → logprob: -10.27303695678711
    8. 'Lines' → logprob: -10.52303695678711
    9. 's' → logprob: -11.27303695678711
    10. ' (' → logprob: -11.52303695678711

Token 198: ' of' (ID: 328)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0014879583613947034
    2. '(' → logprob: -6.626487731933594
    3. '<|end|>' → logprob: -8.876487731933594
    4. '<|end|>' → logprob: -12.376487731933594
    5. 'n' → logprob: -12.626487731933594
    6. 's' → logprob: -13.126487731933594
    7. 'def' → logprob: -13.251487731933594
    8. ' ' → logprob: -13.626487731933594
    9. ' of' → logprob: -14.126487731933594
    10. ' (' → logprob: -14.126487731933594

Token 199: ' int' (ID: 677)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05373862385749817
    2. 'tuple' → logprob: -3.053738594055176
    3. 'lists' → logprob: -5.928738594055176
    4. '(tuple' → logprob: -7.303738594055176
    5. ' tuple' → logprob: -7.428738594055176
    6. ' list' → logprob: -7.803738594055176
    7. '(list' → logprob: -8.178738594055176
    8. '[' → logprob: -9.053738594055176
    9. '(int' → logprob: -9.428738594055176
    10. 'int' → logprob: -9.428738594055176

Token 200: ' lists' (ID: 19471)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17245857417583466
    2. 'lists' → logprob: -2.2974586486816406
    3. '_lists' → logprob: -4.047458648681641
    4. 'list' → logprob: -4.297458648681641
    5. '_list' → logprob: -4.797458648681641
    6. ' lists' → logprob: -5.047458648681641
    7. '()' → logprob: -5.297458648681641
    8. '(input' → logprob: -6.047458648681641
    9. 'List' → logprob: -6.422458648681641
    10. 'input' → logprob: -6.672458648681641

Token 201: '
' (ID: 198)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.051066520740278e-05
    2. '   ' → logprob: -10.375060081481934
    3. '(' → logprob: -10.750060081481934
    4. 'n' → logprob: -12.625060081481934
    5. 'def' → logprob: -13.125060081481934
    6. ':' → logprob: -14.250060081481934
    7. ' (' → logprob: -14.500060081481934
    8. '):' → logprob: -14.875060081481934
    9. '(
' → logprob: -15.250060081481934
    10. '[n' → logprob: -15.625060081481934

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05074181407690048
    2. '(n' → logprob: -3.0507419109344482
    3. ':' → logprob: -7.175741672515869
    4. 'return' → logprob: -7.925741672515869
    5. ' return' → logprob: -8.175742149353027
    6. 'n' → logprob: -8.300742149353027
    7. ':
' → logprob: -8.800742149353027
    8. ' ' → logprob: -9.675742149353027
    9. '  ' → logprob: -9.800742149353027
    10. 'def' → logprob: -9.925742149353027

Token 203: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09400644898414612
    2. 'return' → logprob: -2.8440065383911133
    3. '[in' → logprob: -4.094006538391113
    4. '   ' → logprob: -4.344006538391113
    5. '[list' → logprob: -7.344006538391113
    6. ' [' → logprob: -7.969006538391113
    7. '[line' → logprob: -8.469006538391113
    8. '[n' → logprob: -8.719006538391113
    9. ' return' → logprob: -8.969006538391113
    10. '[ind' → logprob: -9.844006538391113

Token 204: ' wish' (ID: 8115)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.032155271619558334
    2. ' return' → logprob: -3.5321552753448486
    3. '   ' → logprob: -6.0321550369262695
    4. ' ' → logprob: -14.65715503692627
    5. '	return' → logprob: -14.78215503692627
    6. 'result' → logprob: -14.90715503692627
    7. '  ' → logprob: -15.90715503692627
    8. '
' → logprob: -16.032155990600586
    9. 'def' → logprob: -16.657155990600586
    10. 'ret' → logprob: -17.407155990600586

Token 205: ' Python' (ID: 26534)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7619619965553284
    2. 'def' → logprob: -1.8869619369506836
    3. '   ' → logprob: -2.3869619369506836
    4. '[' → logprob: -2.8869619369506836
    5. '_list' → logprob: -2.8869619369506836
    6. 'list' → logprob: -3.2619619369506836
    7. 'to' → logprob: -3.6369619369506836
    8. ' return' → logprob: -4.386961936950684
    9. 'return' → logprob: -4.511961936950684
    10. '(n' → logprob: -4.511961936950684

Token 206: ' had' (ID: 1458)
  Prédit: ' had'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' had' → logprob: -0.14360752701759338
    2. 'had' → logprob: -3.1436076164245605
    3. ' could' → logprob: -3.5186076164245605
    4. ''s' → logprob: -3.6436076164245605
    5. 'could' → logprob: -3.7686076164245605
    6. 'to' → logprob: -6.2686076164245605
    7. ' to' → logprob: -6.3936076164245605
    8. '3' → logprob: -7.0186076164245605
    9. ' has' → logprob: -7.0186076164245605
    10. ' didn't' → logprob: -7.1436076164245605

Token 207: ' typed' (ID: 58806)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1998357772827148
    2. 'something' → logprob: -1.4498357772827148
    3. 'type' → logprob: -2.324835777282715
    4. '[n' → logprob: -2.699835777282715
    5. 'yield' → logprob: -2.699835777282715
    6. '[a' → logprob: -3.199835777282715
    7. '[' → logprob: -3.324835777282715
    8. '"' → logprob: -4.074835777282715
    9. 'mult' → logprob: -4.449835777282715
    10. '   ' → logprob: -4.699835777282715

Token 208: ' lists' (ID: 19471)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5401674509048462
    2. 'List' → logprob: -2.1651673316955566
    3. ' lists' → logprob: -2.6651673316955566
    4. 'return' → logprob: -3.4151673316955566
    5. '```' → logprob: -3.4151673316955566
    6. ' return' → logprob: -3.5401673316955566
    7. ' annotations' → logprob: -3.7901673316955566
    8. 'annotations' → logprob: -3.7901673316955566
    9. 'lists' → logprob: -4.415167331695557
    10. 's' → logprob: -4.790167331695557

Token 209: '...
' (ID: 4908)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0947146937251091
    2. 'def' → logprob: -2.469714641571045
    3. '(n' → logprob: -5.469714641571045
    4. ',' → logprob: -8.344715118408203
    5. '<|end|>' → logprob: -8.344715118408203
    6. ' for' → logprob: -8.469715118408203
    7. '    ' → logprob: -8.844715118408203
    8. '(' → logprob: -8.844715118408203
    9. ')' → logprob: -8.969715118408203
    10. ':' → logprob: -9.844715118408203

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.656383680412546e-05
    2. 'return' → logprob: -10.125046730041504
    3. ' return' → logprob: -12.000046730041504
    4. '   ' → logprob: -15.750046730041504
    5. '	return' → logprob: -16.125045776367188
    6. '```' → logprob: -17.375045776367188
    7. '  ' → logprob: -17.625045776367188
    8. '       ' → logprob: -18.000045776367188
    9. '    ' → logprob: -18.375045776367188
    10. ' ' → logprob: -18.625045776367188

Token 211: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05248010903596878
    2. '   ' → logprob: -3.0524802207946777
    3. ' return' → logprob: -5.552480220794678
    4. '	return' → logprob: -12.05247974395752
    5. ' ' → logprob: -14.55247974395752
    6. 'result' → logprob: -15.17747974395752
    7. '  ' → logprob: -15.17747974395752
    8. 'ret' → logprob: -15.42747974395752
    9. '    ' → logprob: -16.302480697631836
    10. 'res' → logprob: -17.052480697631836

Token 212: ' [' (ID: 723)
  Prédit: '[in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[in' → logprob: -0.02341306395828724
    2. '[' → logprob: -4.023413181304932
    3. '[list' → logprob: -5.273413181304932
    4. ' [' → logprob: -10.023412704467773
    5. '[List' → logprob: -10.398412704467773
    6. '[line' → logprob: -10.648412704467773
    7. '[input' → logprob: -11.773412704467773
    8. '[int' → logprob: -12.023412704467773
    9. '[len' → logprob: -12.773412704467773
    10. '[out' → logprob: -13.273412704467773

Token 213: 'list' (ID: 2641)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931794285774231
    2. 'list' → logprob: -0.6931794285774231
    3. ' list' → logprob: -10.9431791305542
    4. ' in' → logprob: -11.6931791305542
    5. 'tuple' → logprob: -12.8181791305542
    6. 'int' → logprob: -13.9431791305542
    7. 'List' → logprob: -13.9431791305542
    8. '(list' → logprob: -14.5681791305542
    9. 'map' → logprob: -14.6931791305542
    10. 'li' → logprob: -15.9431791305542

Token 214: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -13.500003814697266
    3. 'map' → logprob: -13.500003814697266
    4. '(int' → logprob: -14.375003814697266
    5. '(in' → logprob: -14.750003814697266
    6. ' map' → logprob: -18.000003814697266
    7. '.map' → logprob: -18.375003814697266
    8. '	map' → logprob: -18.875003814697266
    9. '(
' → logprob: -19.250003814697266
    10. '()' → logprob: -19.375003814697266

Token 215: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008680520579218864
    2. 'int' → logprob: -4.75868034362793
    3. '[int' → logprob: -10.25868034362793
    4. '<int' → logprob: -11.63368034362793
    5. ']int' → logprob: -11.63368034362793
    6. ',int' → logprob: -11.75868034362793
    7. ' int' → logprob: -13.13368034362793
    8. '=int' → logprob: -13.38368034362793
    9. ')' → logprob: -14.25868034362793
    10. ':int' → logprob: -14.88368034362793

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08250520378351212
    2. ',input' → logprob: -2.582505226135254
    3. 'input' → logprob: -5.832505226135254
    4. '(input' → logprob: -7.332505226135254
    5. ' ,' → logprob: -11.207505226135254
    6. '(' → logprob: -12.332505226135254
    7. ' input' → logprob: -12.457505226135254
    8. ' (' → logprob: -14.207505226135254
    9. '(),' → logprob: -14.707505226135254
    10. ',(' → logprob: -15.332505226135254

Token 217: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804447129368782
    2. ' input' → logprob: -3.2880444526672363
    3. '   ' → logprob: -13.413044929504395
    4. ' ' → logprob: -13.913044929504395
    5. '(input' → logprob: -14.663044929504395
    6. '<input' → logprob: -16.413043975830078
    7. '	input' → logprob: -17.288043975830078
    8. '    ' → logprob: -17.538043975830078
    9. '  ' → logprob: -17.663043975830078
    10. ',input' → logprob: -17.913043975830078

Token 218: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -16.5
    3. ' ().' → logprob: -16.875
    4. '(' → logprob: -17.25
    5. '   ' → logprob: -18.125
    6. '.' → logprob: -19.25
    7. ' ' → logprob: -19.375
    8. '()))' → logprob: -20.625
    9. '()
' → logprob: -20.625
    10. '()[' → logprob: -21.125

Token 219: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8624639324116288e-06
    2. ' split' → logprob: -13.875001907348633
    3. 'spl' → logprob: -14.125001907348633
    4. '(split' → logprob: -17.375001907348633
    5. 's' → logprob: -17.750001907348633
    6. 'strip' → logprob: -17.875001907348633
    7. '   ' → logprob: -19.375001907348633
    8. ')' → logprob: -19.375001907348633
    9. ' ' → logprob: -19.500001907348633
    10. 'rstrip' → logprob: -21.250001907348633

Token 220: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.001174747827462852
    2. '))' → logprob: -7.0011749267578125
    3. '()))
' → logprob: -8.501174926757812
    4. '(n' → logprob: -10.501174926757812
    5. '()' → logprob: -10.626174926757812
    6. '(' → logprob: -12.876174926757812
    7. '())).' → logprob: -13.376174926757812
    8. '()
' → logprob: -13.376174926757812
    9. '())' → logprob: -14.626174926757812
    10. '()));' → logprob: -14.751174926757812

Token 221: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23274710774421692
    2. '()' → logprob: -1.9827470779418945
    3. 'for' → logprob: -3.4827470779418945
    4. '(n' → logprob: -3.8577470779418945
    5. '   ' → logprob: -4.3577470779418945
    6. ' for' → logprob: -5.3577470779418945
    7. 'n' → logprob: -8.607747077941895
    8. ' ' → logprob: -8.982747077941895
    9. '())' → logprob: -8.982747077941895
    10. ' )' → logprob: -10.107747077941895

Token 222: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.6656825866666622e-05
    2. ' _' → logprob: -11.25002670288086
    3. '_range' → logprob: -11.25002670288086
    4. ' range' → logprob: -15.00002670288086
    5. '_i' → logprob: -16.37502670288086
    6. ' in' → logprob: -17.00002670288086
    7. 'range' → logprob: -17.00002670288086
    8. '_
' → logprob: -17.25002670288086
    9. '_in' → logprob: -18.50002670288086
    10. '_=' → logprob: -18.75002670288086

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5221644043922424
    2. 'range' → logprob: -1.0221643447875977
    3. 'in' → logprob: -3.2721643447875977
    4. ' range' → logprob: -5.022164344787598
    5. '_' → logprob: -6.022164344787598
    6. '_range' → logprob: -11.772164344787598
    7. ' _' → logprob: -13.522164344787598
    8. ' ' → logprob: -14.897164344787598
    9. '(range' → logprob: -15.022164344787598
    10. '	range' → logprob: -15.647164344787598

Token 224: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. '(range' → logprob: -17.375017166137695
    4. '_range' → logprob: -17.625017166137695
    5. '_' → logprob: -19.500017166137695
    6. '	range' → logprob: -20.125017166137695
    7. 'in' → logprob: -22.750017166137695
    8. 'x' → logprob: -23.375017166137695
    9. '.range' → logprob: -23.625017166137695
    10. 'rang' → logprob: -23.875017166137695

Token 225: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20141500234603882
    2. 'n' → logprob: -1.7014150619506836
    3. ' n' → logprob: -13.951415061950684
    4. '(' → logprob: -14.201415061950684
    5. 'range' → logprob: -16.826414108276367
    6. '	n' → logprob: -17.576414108276367
    7. '_n' → logprob: -17.576414108276367
    8. ' (' → logprob: -19.451414108276367
    9. ')n' → logprob: -19.576414108276367
    10. '(
' → logprob: -20.451414108276367

Token 226: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001601539261173457
    2. ')' → logprob: -9.250160217285156
    3. ']' → logprob: -9.750160217285156
    4. ')]
' → logprob: -13.250160217285156
    5. '   ' → logprob: -13.750160217285156
    6. '])' → logprob: -14.000160217285156
    7. '])]' → logprob: -14.375160217285156
    8. ')])' → logprob: -15.125160217285156
    9. '()]' → logprob: -15.250160217285156
    10. ' )' → logprob: -15.375160217285156

Token 227: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00844318326562643
    2. 'class' → logprob: -4.883443355560303
    3. '#' → logprob: -7.133443355560303
    4. 'n' → logprob: -10.758442878723145
    5. 'd' → logprob: -11.633442878723145
    6. '
' → logprob: -13.383442878723145
    7. 'a' → logprob: -13.508442878723145
    8. 'from' → logprob: -14.008442878723145
    9. 'import' → logprob: -14.258442878723145
    10. 'de' → logprob: -14.633442878723145

Token 228: ' bfs' (ID: 147571)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.39288130402565
    2. 'main' → logprob: -1.6428812742233276
    3. ' solve' → logprob: -2.767881393432617
    4. 'solve' → logprob: -3.392881393432617
    5. ' gcd' → logprob: -5.267881393432617
    6. 's' → logprob: -5.767881393432617
    7. 'dfs' → logprob: -6.017881393432617
    8. ' binary' → logprob: -6.392881393432617
    9. ' dfs' → logprob: -6.392881393432617
    10. 'factor' → logprob: -6.517881393432617

Token 229: '(start' (ID: 20008)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.9221985936164856
    2. '(' → logprob: -1.1721985340118408
    3. '(start' → logprob: -2.297198534011841
    4. '(q' → logprob: -2.797198534011841
    5. '(root' → logprob: -3.047198534011841
    6. '(node' → logprob: -3.422198534011841
    7. '(s' → logprob: -3.797198534011841
    8. '():' → logprob: -4.42219877243042
    9. '(graph' → logprob: -4.67219877243042
    10. ' (' → logprob: -6.17219877243042

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1967746466398239
    2. '):' → logprob: -1.8217746019363403
    3. '(start' → logprob: -4.321774482727051
    4. ',start' → logprob: -5.696774482727051
    5. '):
' → logprob: -9.19677448272705
    6. ' ):' → logprob: -10.19677448272705
    7. ')' → logprob: -10.32177448272705
    8. '   ' → logprob: -11.57177448272705
    9. '[start' → logprob: -11.69677448272705
    10. ',s' → logprob: -12.07177448272705

Token 231: ' n' (ID: 297)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.03256313502788544
    2. ' graph' → logprob: -3.5325632095336914
    3. 'adj' → logprob: -6.032563209533691
    4. ' adj' → logprob: -9.032563209533691
    5. 'visited' → logprob: -9.282563209533691
    6. 'g' → logprob: -9.532563209533691
    7. 'G' → logprob: -9.782563209533691
    8. 'edges' → logprob: -10.407563209533691
    9. 'neighbors' → logprob: -11.907563209533691
    10. ' edges' → logprob: -12.407563209533691

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07028873264789581
    2. '):' → logprob: -2.69528865814209
    3. '):
' → logprob: -8.07028865814209
    4. ' ,' → logprob: -11.57028865814209
    5. '):
' → logprob: -11.69528865814209
    6. ')' → logprob: -12.44528865814209
    7. '   ' → logprob: -12.44528865814209
    8. ',start' → logprob: -12.44528865814209
    9. ' ):' → logprob: -12.44528865814209
    10. ',node' → logprob: -13.82028865814209

Token 233: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0967278853058815
    2. 'adj' → logprob: -2.7217278480529785
    3. 'edges' → logprob: -3.7217278480529785
    4. ' graph' → logprob: -6.9717278480529785
    5. 'g' → logprob: -7.0967278480529785
    6. 'G' → logprob: -8.221728324890137
    7. 'neighbors' → logprob: -9.721728324890137
    8. ' edges' → logprob: -9.971728324890137
    9. ' adj' → logprob: -10.096728324890137
    10. 'graphs' → logprob: -10.846728324890137

Token 234: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.082794189453125
    2. ',' → logprob: -2.582794189453125
    3. '):
' → logprob: -5.582794189453125
    4. '):
' → logprob: -9.332794189453125
    5. ')' → logprob: -10.207794189453125
    6. ' ):' → logprob: -12.457794189453125
    7. '):

' → logprob: -13.707794189453125
    8. ':' → logprob: -13.957794189453125
    9. ' ,' → logprob: -14.332794189453125
    10. '   ' → logprob: -15.082794189453125

Token 235: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023883074522018433
    2. ':
' → logprob: -4.148882865905762
    3. '   ' → logprob: -5.148882865905762
    4. '	queue' → logprob: -6.898882865905762
    5. '):' → logprob: -8.023882865905762
    6. 'queue' → logprob: -8.398882865905762
    7. ' queue' → logprob: -8.648882865905762
    8. '(queue' → logprob: -9.148882865905762
    9. '):
' → logprob: -9.648882865905762
    10. ',' → logprob: -10.398882865905762

Token 236: ' visited' (ID: 18416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11567973345518112
    2. 'visited' (adapté à ' visited') → logprob: -3.1156797409057617
    3. 'q' → logprob: -3.8656797409057617
    4. 'queue' → logprob: -3.9906797409057617
    5. ' visited' → logprob: -4.240679740905762
    6. ' queue' → logprob: -4.990679740905762
    7. ' q' → logprob: -5.615679740905762
    8. ' ' → logprob: -8.365679740905762
    9. '  ' → logprob: -8.740679740905762
    10. 'dist' → logprob: -9.865679740905762

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759525299072266
    2. ' =' → logprob: -0.8259525299072266
    3. ',' → logprob: -12.950952529907227
    4. '[' → logprob: -12.950952529907227
    5. '=[' → logprob: -12.950952529907227
    6. '[start' → logprob: -13.200952529907227
    7. '=set' → logprob: -13.825952529907227
    8. ' ' → logprob: -13.950952529907227
    9. '   ' → logprob: -14.200952529907227
    10. '	' → logprob: -14.700952529907227

Token 238: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0023417542688548565
    2. 'set' → logprob: -6.2523417472839355
    3. 'deque' → logprob: -8.002342224121094
    4. ' [' → logprob: -9.752342224121094
    5. '{' → logprob: -11.002342224121094
    6. '[start' → logprob: -14.252342224121094
    7. '[n' → logprob: -14.377342224121094
    8. '[a' → logprob: -14.627342224121094
    9. '[-' → logprob: -14.752342224121094
    10. ' set' → logprob: -15.002342224121094

Token 239: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.465036105713807e-06
    2. '0' → logprob: -12.500007629394531
    3. ' False' → logprob: -12.500007629394531
    4. '(False' → logprob: -19.37500762939453
    5. 'True' → logprob: -20.50000762939453
    6. '   ' → logprob: -22.12500762939453
    7. '
' → logprob: -23.12500762939453
    8. '=False' → logprob: -23.37500762939453
    9. 'F' → logprob: -23.50000762939453
    10. '[' → logprob: -23.75000762939453

Token 240: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01955479010939598
    2. ']*' → logprob: -4.019554615020752
    3. ' for' → logprob: -7.269554615020752
    4. ']*(' → logprob: -7.644554615020752
    5. 'for' → logprob: -8.39455509185791
    6. ']+' → logprob: -13.26955509185791
    7. ' ]' → logprob: -14.14455509185791
    8. ')' → logprob: -15.76955509185791
    9. 'n' → logprob: -16.769554138183594
    10. '(n' → logprob: -16.894554138183594

Token 241: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0549178272485733
    2. ' _' → logprob: -2.929917812347412
    3. ' in' → logprob: -10.67991828918457
    4. ' i' → logprob: -12.30491828918457
    5. '(' → logprob: -13.05491828918457
    6. 'in' → logprob: -13.30491828918457
    7. ' ' → logprob: -13.80491828918457
    8. 'range' → logprob: -14.05491828918457
    9. ' range' → logprob: -14.42991828918457
    10. '_range' → logprob: -14.80491828918457

Token 242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2536746859550476
    2. 'in' → logprob: -1.5036747455596924
    3. 'range' → logprob: -6.753674507141113
    4. ' range' → logprob: -7.878674507141113
    5. ' ' → logprob: -9.128674507141113
    6. '_' → logprob: -9.753674507141113
    7. ' _' → logprob: -11.003674507141113
    8. 'i' → logprob: -11.378674507141113
    9. 'n' → logprob: -13.503674507141113
    10. ' i' → logprob: -13.753674507141113

Token 243: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804171830415726
    2. ' range' → logprob: -3.288041830062866
    3. '(range' → logprob: -15.913042068481445
    4. '_' → logprob: -16.663042068481445
    5. '_range' → logprob: -17.038042068481445
    6. '	range' → logprob: -17.413042068481445
    7. ' ' → logprob: -18.788042068481445
    8. 'n' → logprob: -18.913042068481445
    9. ')' → logprob: -19.163042068481445
    10. ']' → logprob: -19.538042068481445

Token 244: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00015669701679144055
    2. '(range' → logprob: -9.25015640258789
    3. 'range' → logprob: -10.37515640258789
    4. '(' → logprob: -10.62515640258789
    5. 'n' → logprob: -12.50015640258789
    6. ' range' → logprob: -13.62515640258789
    7. ' (' → logprob: -16.50015640258789
    8. '(
' → logprob: -18.00015640258789
    9. '((' → logprob: -18.25015640258789
    10. ' n' → logprob: -18.62515640258789

Token 245: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6936307549476624
    2. ')]' → logprob: -0.6936307549476624
    3. ']
' → logprob: -8.568631172180176
    4. ')' → logprob: -8.818631172180176
    5. ' ]' → logprob: -9.568631172180176
    6. ')]
' → logprob: -9.693631172180176
    7. '])' → logprob: -12.318631172180176
    8. '>]' → logprob: -13.068631172180176
    9. '+' → logprob: -13.318631172180176
    10. ']

' → logprob: -13.693631172180176

Token 246: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5465282797813416
    2. '   ' → logprob: -1.6715283393859863
    3. '
' → logprob: -2.0465283393859863
    4. ' visited' → logprob: -2.4215283393859863
    5. ' queue' → logprob: -5.546528339385986
    6. '    
' → logprob: -5.796528339385986
    7. '<|end|>' → logprob: -5.796528339385986
    8. 'queue' → logprob: -6.671528339385986
    9. ' 
' → logprob: -6.921528339385986
    10. ')' → logprob: -7.296528339385986

Token 247: ' dist' (ID: 3601)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.06683220714330673
    2. 'q' → logprob: -2.8168323040008545
    3. ' queue' → logprob: -6.066832065582275
    4. '   ' → logprob: -6.691832065582275
    5. 'deque' → logprob: -7.441832065582275
    6. 'visited' → logprob: -8.691832542419434
    7. 'dist' (adapté à ' dist') → logprob: -8.691832542419434
    8. 'from' → logprob: -9.066832542419434
    9. '
' → logprob: -9.316832542419434
    10. 'dq' → logprob: -9.441832542419434

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14304718375205994
    2. ' =' → logprob: -2.0180470943450928
    3. '[' → logprob: -8.268047332763672
    4. 'ances' → logprob: -10.018047332763672
    5. '[start' → logprob: -10.143047332763672
    6. '   ' → logprob: -11.768047332763672
    7. 'ance' → logprob: -12.268047332763672
    8. ']' → logprob: -12.393047332763672
    9. ' ' → logprob: -13.018047332763672
    10. '=[' → logprob: -13.143047332763672

Token 249: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7107458114624023
    2. '[-' → logprob: -0.7107458114624023
    3. ' [' → logprob: -4.210745811462402
    4. ' [-' → logprob: -5.960745811462402
    5. '[n' → logprob: -11.085745811462402
    6. '[int' → logprob: -11.960745811462402
    7. '[in' → logprob: -13.335745811462402
    8. '[node' → logprob: -13.460745811462402
    9. '[len' → logprob: -13.960745811462402
    10. '[start' → logprob: -14.210745811462402

Token 250: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008746589301154017
    2. 'math' → logprob: -8.125874519348145
    3. '0' → logprob: -8.375874519348145
    4. '-inf' → logprob: -8.625874519348145
    5. 'float' → logprob: -8.875874519348145
    6. ' -' → logprob: -10.750874519348145
    7. '-m' → logprob: -13.375874519348145
    8. '[-' → logprob: -13.500874519348145
    9. 'None' → logprob: -13.500874519348145
    10. ' math' → logprob: -14.125874519348145

Token 251: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07089637219905853
    2. 'for' → logprob: -2.6958963871002197
    3. ']' → logprob: -7.070896148681641
    4. ']*' → logprob: -9.57089614868164
    5. '	for' → logprob: -10.82089614868164
    6. ' ]' → logprob: -11.82089614868164
    7. ')' → logprob: -12.19589614868164
    8. ' ' → logprob: -12.44589614868164
    9. '   ' → logprob: -13.32089614868164
    10. ']*(' → logprob: -14.19589614868164

Token 252: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.531315314830863e-06
    2. ' n' → logprob: -12.750003814697266
    3. '(n' → logprob: -14.375003814697266
    4. '	n' → logprob: -19.625003814697266
    5. '_n' → logprob: -21.375003814697266
    6. '   ' → logprob: -21.500003814697266
    7. '
' → logprob: -21.625003814697266
    8. '(' → logprob: -21.750003814697266
    9. ')n' → logprob: -22.875003814697266
    10. ' ' → logprob: -23.750003814697266

Token 253: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009462807327508926
    2. '   ' → logprob: -6.134462833404541
    3. ' 
' → logprob: -6.134462833404541
    4. '    
' → logprob: -6.259462833404541
    5. '  
' → logprob: -7.009462833404541
    6. '<|end|>' → logprob: -7.259462833404541
    7. '' → logprob: -7.384462833404541
    8. '\n' → logprob: -7.509462833404541
    9. '
' → logprob: -9.009462356567383
    10. '	
' → logprob: -9.509462356567383

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1712494045495987
    2. '
' → logprob: -1.9212493896484375
    3. '    
' → logprob: -5.2962493896484375
    4. ' queue' → logprob: -5.7962493896484375
    5. '	queue' → logprob: -6.7962493896484375
    6. '<|end|>' → logprob: -7.1712493896484375
    7. '  
' → logprob: -7.9212493896484375
    8. ' 
' → logprob: -8.796249389648438
    9. ' visited' → logprob: -8.921249389648438
    10. 'queue' → logprob: -9.546249389648438

Token 255: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.2259996086359024
    2. 'q' → logprob: -1.9759995937347412
    3. '   ' → logprob: -2.975999593734741
    4. ' queue' → logprob: -4.60099983215332
    5. 'visited' → logprob: -6.47599983215332
    6. ' q' → logprob: -7.60099983215332
    7. 'deque' → logprob: -8.47599983215332
    8. 'dq' → logprob: -8.97599983215332
    9. '    
' → logprob: -9.60099983215332
    10. 'from' → logprob: -9.60099983215332

Token 256: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0898890346288681
    2. ' =' → logprob: -2.4648890495300293
    3. '=[]' → logprob: -7.464889049530029
    4. '.Queue' → logprob: -8.714888572692871
    5. '.' → logprob: -8.839888572692871
    6. '.append' → logprob: -11.089888572692871
    7. '(queue' → logprob: -11.464888572692871
    8. '(' → logprob: -11.839888572692871
    9. 'q' → logprob: -12.339888572692871
    10. ')' → logprob: -12.464888572692871

Token 257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1807193011045456
    2. ' =' → logprob: -1.805719256401062
    3. '.append' → logprob: -7.180719375610352
    4. '=[]' → logprob: -9.180719375610352
    5. '.' → logprob: -9.555719375610352
    6. '.Queue' → logprob: -11.805719375610352
    7. '(queue' → logprob: -11.930719375610352
    8. ')' → logprob: -12.555719375610352
    9. '.=' → logprob: -12.680719375610352
    10. ',' → logprob: -12.930719375610352

Token 258: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0007106438861228526
    2. ' deque' → logprob: -7.250710487365723
    3. 'queue' → logprob: -14.250710487365723
    4. 'de' → logprob: -16.37571144104004
    5. 'collections' → logprob: -19.37571144104004
    6. 'Deque' → logprob: -20.62571144104004
    7. ' queue' → logprob: -20.75071144104004
    8. '	de' → logprob: -21.25071144104004
    9. 'que' → logprob: -22.12571144104004
    10. ' ' → logprob: -22.25071144104004

Token 259: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16059443354606628
    2. '([' → logprob: -1.9105944633483887
    3. '()
' → logprob: -8.28559398651123
    4. '([(' → logprob: -9.53559398651123
    5. '(' → logprob: -11.03559398651123
    6. '([]' → logprob: -11.16059398651123
    7. '()

' → logprob: -11.78559398651123
    8. '(start' → logprob: -13.03559398651123
    9. '[' → logprob: -13.78559398651123
    10. '()\' → logprob: -14.16059398651123

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.254994660615921
    2. '(queue' → logprob: -1.6299946308135986
    3. ' queue' → logprob: -4.004994869232178
    4. 'queue' → logprob: -5.129994869232178
    5. '	queue' → logprob: -5.879994869232178
    6. '<|end|>' → logprob: -7.004994869232178
    7. '.queue' → logprob: -8.87999439239502
    8. ')' → logprob: -9.00499439239502
    9. '    
' → logprob: -9.00499439239502
    10. '  ' → logprob: -9.00499439239502

Token 261: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.008632768876850605
    2. ' queue' → logprob: -4.758632659912109
    3. '   ' → logprob: -11.13363265991211
    4. '	queue' → logprob: -12.75863265991211
    5. '(queue' → logprob: -14.75863265991211
    6. '.queue' → logprob: -16.13363265991211
    7. 'visited' → logprob: -16.25863265991211
    8. 'deque' → logprob: -16.38363265991211
    9. 'que' → logprob: -16.88363265991211
    10. '  ' → logprob: -17.00863265991211

Token 262: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.747814349073451e-05
    2. '.append' → logprob: -11.125017166137695
    3. '()' → logprob: -13.875017166137695
    4. '```' → logprob: -14.500017166137695
    5. 'append' → logprob: -15.125017166137695
    6. '_' → logprob: -15.125017166137695
    7. '().' → logprob: -15.500017166137695
    8. '₂' → logprob: -15.875017166137695
    9. '_append' → logprob: -16.125017166137695
    10. '.extend' → logprob: -16.375017166137695

Token 263: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006311862962320447
    2. '.' → logprob: -7.375631332397461
    3. '.put' → logprob: -13.750631332397461
    4. 'append' → logprob: -14.000631332397461
    5. '.extend' → logprob: -14.125631332397461
    6. '.enqueue' → logprob: -14.125631332397461
    7. '.ap' → logprob: -14.750631332397461
    8. '.app' → logprob: -15.375631332397461
    9. '().' → logprob: -15.500631332397461
    10. ').' → logprob: -15.875631332397461

Token 264: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -8.220573363360018e-05
    2. '(' → logprob: -9.500082015991211
    3. '((' → logprob: -12.500082015991211
    4. 'start' → logprob: -12.625082015991211
    5. '(s' → logprob: -15.500082015991211
    6. ' (' → logprob: -17.12508201599121
    7. '[start' → logprob: -17.62508201599121
    8. '(
' → logprob: -17.87508201599121
    9. '(begin' → logprob: -18.62508201599121
    10. '(end' → logprob: -18.87508201599121

Token 265: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9504606825648807e-05
    2. ')
' → logprob: -11.375019073486328
    3. ' )' → logprob: -11.750019073486328
    4. '))' → logprob: -16.875019073486328
    5. ')

' → logprob: -17.375019073486328
    6. ')return' → logprob: -17.750019073486328
    7. ')#' → logprob: -18.000019073486328
    8. '),' → logprob: -18.125019073486328
    9. ')`' → logprob: -18.125019073486328
    10. '<|end|>' → logprob: -18.500019073486328

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22536656260490417
    2. '
' → logprob: -1.8503665924072266
    3. '<|end|>' → logprob: -4.350366592407227
    4. '    
' → logprob: -4.725366592407227
    5. 'visited' → logprob: -4.975366592407227
    6. ' 
' → logprob: -4.975366592407227
    7. '  
' → logprob: -5.850366592407227
    8. ' visited' → logprob: -5.975366592407227
    9. ')' → logprob: -6.850366592407227
    10. ' while' → logprob: -7.350366592407227

Token 267: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.001601983094587922
    2. 'while' → logprob: -6.5016021728515625
    3. '   ' → logprob: -9.376602172851562
    4. ' visited' → logprob: -11.126602172851562
    5. ' while' → logprob: -16.126602172851562
    6. '    
' → logprob: -16.626602172851562
    7. '
' → logprob: -17.876602172851562
    8. '  ' → logprob: -18.501602172851562
    9. ' 
' → logprob: -19.001602172851562
    10. '	while' → logprob: -19.376602172851562

Token 268: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0001234428636962548
    2. '[' → logprob: -9.000123023986816
    3. '[end' → logprob: -18.125123977661133
    4. '[s' → logprob: -18.750123977661133
    5. ' [' → logprob: -18.875123977661133
    6. '```' → logprob: -19.125123977661133
    7. '[state' → logprob: -19.750123977661133
    8. '[current' → logprob: -19.875123977661133
    9. '[now' → logprob: -20.125123977661133
    10. '[source' → logprob: -20.875123977661133

Token 269: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.327856630785391e-05
    2. ']=' → logprob: -9.625082969665527
    3. ' ]' → logprob: -11.000082969665527
    4. '=' → logprob: -15.125082969665527
    5. ')' → logprob: -16.375083923339844
    6. ' =' → logprob: -16.625083923339844
    7. ' ' → logprob: -18.625083923339844
    8. ']
' → logprob: -18.625083923339844
    9. '=True' → logprob: -19.125083923339844
    10. '[' → logprob: -19.750083923339844

Token 270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004086828324943781
    2. ' =' → logprob: -5.504086971282959
    3. '=True' → logprob: -11.7540864944458
    4. ']' → logprob: -15.6290864944458
    5. 'True' → logprob: -15.6290864944458
    6. ')' → logprob: -15.7540864944458
    7. '=False' → logprob: -16.504087448120117
    8. ']=' → logprob: -17.379087448120117
    9. ')=' → logprob: -18.004087448120117
    10. '=

' → logprob: -18.879087448120117

Token 271: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019286326132714748
    2. ' True' → logprob: -6.251928806304932
    3. '(True' → logprob: -19.626928329467773
    4. '1' → logprob: -20.626928329467773
    5. 'Tr' → logprob: -21.626928329467773
    6. '=True' → logprob: -21.751928329467773
    7. 'False' → logprob: -22.751928329467773
    8. ' ' → logprob: -23.501928329467773
    9. '   ' → logprob: -23.876928329467773
    10. 'true' → logprob: -24.126928329467773

Token 272: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020079657435417175
    2. '   ' → logprob: -4.770079612731934
    3. '<|end|>' → logprob: -4.770079612731934
    4. '    
' → logprob: -6.895079612731934
    5. '  
' → logprob: -7.770079612731934
    6. ' while' → logprob: -7.895079612731934
    7. ' 
' → logprob: -8.020079612731934
    8. '```' → logprob: -8.645079612731934
    9. 'while' → logprob: -8.770079612731934
    10. '<|end|>' → logprob: -9.020079612731934

Token 273: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011569277383387089
    2. '   ' → logprob: -5.636569499969482
    3. ' while' → logprob: -5.886569499969482
    4. '<|end|>' → logprob: -6.136569499969482
    5. '    
' → logprob: -6.886569499969482
    6. 'while' → logprob: -7.386569499969482
    7. ' 
' → logprob: -7.636569499969482
    8. '  
' → logprob: -7.761569499969482
    9. '	while' → logprob: -8.386569023132324
    10. '	
' → logprob: -10.011569023132324

Token 274: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.009337982162833214
    2. ' while' → logprob: -4.759337902069092
    3. '   ' → logprob: -7.259337902069092
    4. '	while' → logprob: -10.88433837890625
    5. 'While' → logprob: -15.13433837890625
    6. '
' → logprob: -15.38433837890625
    7. '    
' → logprob: -16.25933837890625
    8. '```' → logprob: -16.75933837890625
    9. '  ' → logprob: -17.25933837890625
    10. ' 
' → logprob: -17.25933837890625

Token 275: ' len' (ID: 4631)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.3137339651584625
    2. 'queue' → logprob: -1.3137339353561401
    3. 'len' → logprob: -8.68873405456543
    4. '(queue' → logprob: -8.68873405456543
    5. ' len' → logprob: -9.06373405456543
    6. '	queue' → logprob: -11.06373405456543
    7. 'que' → logprob: -13.31373405456543
    8. ' ' → logprob: -13.93873405456543
    9. 'Queue' → logprob: -15.18873405456543
    10. '(len' → logprob: -15.43873405456543

Token 276: '(queue' (ID: 72316)
  Prédit: '(queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -2.2603901015827432e-05
    2. 'queue' → logprob: -10.750022888183594
    3. ' queue' → logprob: -14.125022888183594
    4. '(' → logprob: -15.000022888183594
    5. ' (' → logprob: -16.750022888183594
    6. '	queue' → logprob: -17.000022888183594
    7. 'Queue' → logprob: -19.500022888183594
    8. '(
' → logprob: -19.750022888183594
    9. '(query' → logprob: -19.750022888183594
    10. '.queue' → logprob: -20.000022888183594

Token 277: '2' (ID: 17)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.20347265899181366
    2. '(queue' → logprob: -1.70347261428833
    3. ' queue' → logprob: -6.20347261428833
    4. '	queue' → logprob: -10.953473091125488
    5. '2' → logprob: -11.578473091125488
    6. 'deque' → logprob: -13.328473091125488
    7. '>' → logprob: -13.578473091125488
    8. '()>' → logprob: -13.703473091125488
    9. ')' → logprob: -13.828473091125488
    10. '.queue' → logprob: -13.953473091125488

Token 278: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05931907519698143
    2. ')>' → logprob: -3.434319019317627
    3. '>' → logprob: -4.309319019317627
    4. ' >' → logprob: -5.309319019317627
    5. '):' → logprob: -5.559319019317627
    6. '()>' → logprob: -6.059319019317627
    7. '()' → logprob: -7.434319019317627
    8. ' )' → logprob: -9.059319496154785
    9. '):
' → logprob: -11.684319496154785
    10. ' ' → logprob: -11.809319496154785

Token 279: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5623024702072144
    2. '   ' → logprob: -1.5623024702072144
    3. ' u' → logprob: -2.937302589416504
    4. ' node' → logprob: -3.062302589416504
    5. ' current' → logprob: -3.312302589416504
    6. 'u' → logprob: -3.312302589416504
    7. 'v' → logprob: -4.062302589416504
    8. ' v' → logprob: -4.187302589416504
    9. 'node' → logprob: -4.812302589416504
    10. 'current' → logprob: -5.437302589416504

Token 280: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7485523223876953
    2. 'node' → logprob: -1.4985523223876953
    3. ' node' → logprob: -2.3735523223876953
    4. 'current' → logprob: -2.7485523223876953
    5. 'u' → logprob: -2.9985523223876953
    6. 'v' → logprob: -3.6235523223876953
    7. ' current' → logprob: -3.7485523223876953
    8. ' u' → logprob: -3.8735523223876953
    9. 'cur' → logprob: -4.373552322387695
    10. 'curr' → logprob: -5.123552322387695

Token 281: ' probably' (ID: 7038)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -1.0611289739608765
    2. ' u' → logprob: -1.8111289739608765
    3. 'node' → logprob: -1.8111289739608765
    4. '   ' → logprob: -2.561129093170166
    5. 'u' → logprob: -2.811129093170166
    6. 'current' → logprob: -2.936129093170166
    7. ' current' → logprob: -2.936129093170166
    8. 'cur' → logprob: -3.561129093170166
    9. 'curr' → logprob: -3.561129093170166
    10. ' curr' → logprob: -4.686129093170166

Token 282: ' more' (ID: 945)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.48856207728385925
    2. ' queue' → logprob: -1.4885621070861816
    3. ' not' → logprob: -3.2385621070861816
    4. 'not' → logprob: -3.3635621070861816
    5. 'True' → logprob: -3.8635621070861816
    6. '(queue' → logprob: -3.8635621070861816
    7. '   ' → logprob: -3.9885621070861816
    8. ' True' → logprob: -4.613562107086182
    9. 'continue' → logprob: -5.488562107086182
    10. 'while' → logprob: -6.238562107086182

Token 283: ' python' (ID: 22752)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0472675561904907
    2. ' >' → logprob: -1.1722675561904907
    3. ' <=' → logprob: -2.047267436981201
    4. ' than' → logprob: -2.672267436981201
    5. '<=' → logprob: -2.672267436981201
    6. '=' → logprob: -4.422267436981201
    7. '   ' → logprob: -4.672267436981201
    8. ':' → logprob: -4.922267436981201
    9. ' <' → logprob: -4.922267436981201
    10. '(queue' → logprob: -5.422267436981201

Token 284: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -7.52919222577475e-05
    2. 'atic' → logprob: -11.125075340270996
    3. '>' → logprob: -11.500075340270996
    4. '   ' → logprob: -11.750075340270996
    5. ' than' → logprob: -11.875075340270996
    6. 'ically' → logprob: -12.125075340270996
    7. 'ics' → logprob: -12.375075340270996
    8. '3' → logprob: -12.500075340270996
    9. ' >' → logprob: -13.125075340270996
    10. '=' → logprob: -13.250075340270996

Token 285: ' to' (ID: 316)
  Prédit: ' than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.7519311308860779
    2. ' to' → logprob: -1.5019311904907227
    3. ':' → logprob: -1.8769311904907227
    4. '   ' → logprob: -2.3769311904907227
    5. '       ' → logprob: -4.376931190490723
    6. ',' → logprob: -4.751931190490723
    7. '.' → logprob: -5.126931190490723
    8. '    ' → logprob: -5.251931190490723
    9. '=' → logprob: -5.251931190490723
    10. ' if' → logprob: -5.751931190490723

Token 286: ' just' (ID: 1327)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.661740779876709
    2. 'pop' → logprob: -1.536740779876709
    3. 'queue' → logprob: -2.036740779876709
    4. 'for' → logprob: -2.286740779876709
    5. ' queue' → logprob: -4.536740779876709
    6. ' while' → logprob: -4.911740779876709
    7. 'use' → logprob: -5.161740779876709
    8. ' pop' → logprob: -5.786740779876709
    9. ' use' → logprob: -5.911740779876709
    10. 'write' → logprob: -6.286740779876709

Token 287: ' "' (ID: 392)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01324023399502039
    2. ' while' → logprob: -4.638240337371826
    3. 'write' → logprob: -6.263240337371826
    4. 'queue' → logprob: -6.763240337371826
    5. 'use' → logprob: -9.013239860534668
    6. ' write' → logprob: -9.138239860534668
    7. ' queue' → logprob: -9.388239860534668
    8. ' use' → logprob: -9.763239860534668
    9. 'do' → logprob: -11.138239860534668
    10. '   ' → logprob: -11.638239860534668

Token 288: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03943118825554848
    2. 'queue' → logprob: -3.289431095123291
    3. ' while' → logprob: -7.164431095123291
    4. ' queue' → logprob: -7.539431095123291
    5. 'for' → logprob: -9.91443157196045
    6. 'pop' → logprob: -11.28943157196045
    7. '(queue' → logprob: -12.41443157196045
    8. 'not' → logprob: -12.53943157196045
    9. 'deque' → logprob: -12.66443157196045
    10. 'if' → logprob: -12.91443157196045

Token 289: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6932812333106995
    2. ' queue' → logprob: -0.6932812333106995
    3. '(queue' → logprob: -9.068281173706055
    4. '	queue' → logprob: -11.568281173706055
    5. 'len' → logprob: -12.818281173706055
    6. ' len' → logprob: -13.318281173706055
    7. ' ' → logprob: -13.443281173706055
    8. 'que' → logprob: -13.818281173706055
    9. '   ' → logprob: -14.068281173706055
    10. '  ' → logprob: -15.068281173706055

Token 290: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.493430894101039e-05
    2. '"' → logprob: -10.500075340270996
    3. ':' → logprob: -10.875075340270996
    4. '":' → logprob: -10.875075340270996
    5. ':"' → logprob: -12.000075340270996
    6. '```' → logprob: -14.000075340270996
    7. '_' → logprob: -14.250075340270996
    8. 's' → logprob: -14.375075340270996
    9. '":"' → logprob: -16.00007438659668
    10. '[' → logprob: -16.06257438659668

Token 291: '"
' (ID: 1092)
  Prédit: ':"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':"' → logprob: -0.642691433429718
    2. ':' → logprob: -0.767691433429718
    3. '":' → logprob: -5.392691612243652
    4. '"' → logprob: -5.517691612243652
    5. '":"' → logprob: -7.267691612243652
    6. '):' → logprob: -8.142691612243652
    7. ':;"' → logprob: -8.142691612243652
    8. ':"
' → logprob: -10.517691612243652
    9. ':**' → logprob: -10.892691612243652
    10. '">' → logprob: -11.017691612243652

Token 292: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.675222635269165
    2. '       ' → logprob: -0.925222635269165
    3. '   ' → logprob: -2.925222635269165
    4. ',' → logprob: -4.175222396850586
    5. '):' → logprob: -4.425222396850586
    6. ' :' → logprob: -4.550222396850586
    7. ':
' → logprob: -7.050222396850586
    8. ')' → logprob: -7.675222396850586
    9. '<|end|>' → logprob: -7.925222396850586
    10. '):
' → logprob: -8.425222396850586

Token 293: ' curr' (ID: 10495)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.6748785376548767
    2. 'cur' → logprob: -1.7998785972595215
    3. 'current' → logprob: -2.2998785972595215
    4. 'u' → logprob: -2.4248785972595215
    5. 'curr' (adapté à ' curr') → logprob: -2.7998785972595215
    6. 'v' → logprob: -3.4248785972595215
    7. ' node' → logprob: -3.7998785972595215
    8. '   ' → logprob: -4.9248785972595215
    9. ' current' → logprob: -5.2998785972595215
    10. ' u' → logprob: -5.5498785972595215

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.386875182390213
    2. '=' → logprob: -1.1368751525878906
    3. ' ' → logprob: -12.88687515258789
    4. ',' → logprob: -14.51187515258789
    5. ' =
' → logprob: -14.63687515258789
    6. ')' → logprob: -15.13687515258789
    7. '_' → logprob: -15.76187515258789
    8. '	' → logprob: -16.13687515258789
    9. ')=' → logprob: -16.76187515258789
    10. ' ' → logprob: -17.51187515258789

Token 295: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.03804333135485649
    2. ' queue' → logprob: -3.288043260574341
    3. 'que' → logprob: -13.788043022155762
    4. '	queue' → logprob: -14.288043022155762
    5. 'deque' → logprob: -15.163043022155762
    6. '(queue' → logprob: -17.038043975830078
    7. ' que' → logprob: -18.163043975830078
    8. '.queue' → logprob: -19.538043975830078
    9. ' ' → logprob: -19.663043975830078
    10. 'qu' → logprob: -19.913043975830078

Token 296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. '.append' → logprob: -13.000004768371582
    3. '.p' → logprob: -13.375004768371582
    4. 'p' → logprob: -14.875004768371582
    5. '```' → logprob: -15.250004768371582
    6. 'append' → logprob: -15.750004768371582
    7. '   ' → logprob: -16.2500057220459
    8. 'opleft' → logprob: -16.6250057220459
    9. 'deque' → logprob: -17.0000057220459
    10. '[' → logprob: -17.3750057220459

Token 297: '.pop' (ID: 15746)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -13.50000286102295
    3. '.pop' → logprob: -14.00000286102295
    4. 'p' → logprob: -15.00000286102295
    5. '   ' → logprob: -16.125001907348633
    6. ' .' → logprob: -16.500001907348633
    7. '```' → logprob: -18.125001907348633
    8. 'opleft' → logprob: -18.750001907348633
    9. '.append' → logprob: -19.750001907348633
    10. ' p' → logprob: -19.875001907348633

Token 298: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0042638275772333145
    2. 'left' → logprob: -5.504263877868652
    3. '(' → logprob: -8.754263877868652
    4. '()
' → logprob: -12.254263877868652
    5. 'le' → logprob: -12.379263877868652
    6. '())' → logprob: -12.504263877868652
    7. 'Left' → logprob: -12.629263877868652
    8. ')' → logprob: -12.754263877868652
    9. 'lef' → logprob: -13.379263877868652
    10. 'opleft' → logprob: -13.379263877868652

Token 299: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7815298438072205
    2. '       ' → logprob: -1.2815299034118652
    3. '   ' → logprob: -2.4065299034118652
    4. 'for' → logprob: -2.7815299034118652
    5. ' for' → logprob: -3.4065299034118652
    6. '    
' → logprob: -3.6565299034118652
    7. '        
' → logprob: -4.156529903411865
    8. ')' → logprob: -5.156529903411865
    9. 'if' → logprob: -5.281529903411865
    10. '<|end|>' → logprob: -5.281529903411865

Token 300: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06494066119194031
    2. ' for' → logprob: -2.8149406909942627
    3. '   ' → logprob: -6.189940452575684
    4. 'if' → logprob: -7.064940452575684
    5. ' if' → logprob: -10.064940452575684
    6. '       ' → logprob: -11.064940452575684
    7. '	for' → logprob: -12.814940452575684
    8. '    
' → logprob: -13.564940452575684
    9. '```' → logprob: -14.689940452575684
    10. '    ' → logprob: -15.314940452575684

Token 301: ' ne' (ID: 453)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.03760116919875145
    2. ' neighbor' → logprob: -4.162600994110107
    3. 'ne' → logprob: -4.912600994110107
    4. 'nei' → logprob: -5.037600994110107
    5. 'nbr' → logprob: -6.037600994110107
    6. 'node' → logprob: -6.412600994110107
    7. 'adj' → logprob: -7.412600994110107
    8. ' nei' → logprob: -7.537600994110107
    9. ' neigh' → logprob: -7.537600994110107
    10. ' nxt' → logprob: -7.787600994110107

Token 302: ' in' (ID: 306)
  Prédit: 'igh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'igh' → logprob: -0.5832215547561646
    2. 'ighbor' → logprob: -0.8332215547561646
    3. 'ighbour' → logprob: -4.958221435546875
    4. 'ighbors' → logprob: -9.333221435546875
    5. 'ig' → logprob: -9.833221435546875
    6. 'i' → logprob: -9.833221435546875
    7. 'gh' → logprob: -10.958221435546875
    8. 'ight' → logprob: -11.708221435546875
    9. 'ighborhood' → logprob: -12.958221435546875
    10. 'ighbours' → logprob: -13.208221435546875

Token 303: ' range' (ID: 3352)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.029766689985990524
    2. ' graph' → logprob: -3.529766798019409
    3. '	graph' → logprob: -11.779767036437988
    4. 'raph' → logprob: -12.029767036437988
    5. '(graph' → logprob: -12.904767036437988
    6. 'range' → logprob: -16.029766082763672
    7. ' range' → logprob: -18.404766082763672
    8. '   ' → logprob: -18.529766082763672
    9. ' ' → logprob: -18.529766082763672
    10. '.graph' → logprob: -19.154766082763672

Token 304: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.7351170778274536
    2. '(n' → logprob: -1.1101170778274536
    3. 'len' → logprob: -1.8601170778274536
    4. 'n' → logprob: -3.860116958618164
    5. 'graph' → logprob: -4.860116958618164
    6. '(' → logprob: -6.110116958618164
    7. 'raph' → logprob: -6.360116958618164
    8. '(graph' → logprob: -6.610116958618164
    9. 'cy' → logprob: -7.610116958618164
    10. 'r' → logprob: -9.735116958618164

Token 305: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.00672566844150424
    2. 'graph' → logprob: -5.006725788116455
    3. ' graph' → logprob: -12.006725311279297
    4. 'raph' → logprob: -13.131725311279297
    5. '(queue' → logprob: -14.256725311279297
    6. '	graph' → logprob: -14.506725311279297
    7. 'Graph' → logprob: -15.006725311279297
    8. '(' → logprob: -15.131725311279297
    9. ' (' → logprob: -16.131725311279297
    10. 's' → logprob: -16.131725311279297

Token 306: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -6.146429223008454e-05
    2. 'curr' → logprob: -10.12506103515625
    3. '(curr' → logprob: -10.87506103515625
    4. '[cur' → logprob: -13.50006103515625
    5. '[' → logprob: -14.62506103515625
    6. ' [' → logprob: -15.75006103515625
    7. '	curr' → logprob: -15.87506103515625
    8. ' curr' → logprob: -16.25006103515625
    9. '[node' → logprob: -16.87506103515625
    10. '[current' → logprob: -16.87506103515625

Token 307: '])):
' (ID: 145266)
  Prédit: '[curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -0.0215898584574461
    2. ')):' → logprob: -4.271589756011963
    3. ']))' → logprob: -5.646589756011963
    4. '])):
' → logprob: -6.146589756011963
    5. ')):
' → logprob: -7.271589756011963
    6. '[' → logprob: -7.271589756011963
    7. ']):' → logprob: -9.271590232849121
    8. '))' → logprob: -9.396590232849121
    9. 'curr' → logprob: -9.646590232849121
    10. ')):
' → logprob: -10.271590232849121

Token 308: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.523679256439209
    2. ' if' → logprob: -1.648679256439209
    3. '   ' → logprob: -1.773679256439209
    4. ':
' → logprob: -1.898679256439209
    5. '           ' → logprob: -2.273679256439209
    6. 'if' → logprob: -2.898679256439209
    7. '):
' → logprob: -3.148679256439209
    8. '):' → logprob: -3.773679256439209
    9. '       ' → logprob: -3.898679256439209
    10. ' :' → logprob: -4.648679256439209

Token 309: ' nex' (ID: 92763)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10198402404785156
    2. 'if' → logprob: -2.3519840240478516
    3. ' queue' → logprob: -7.601984024047852
    4. '   ' → logprob: -7.726984024047852
    5. ')' → logprob: -8.101984024047852
    6. ' ' → logprob: -8.726984024047852
    7. ' 
' → logprob: -10.101984024047852
    8. ':' → logprob: -10.226984024047852
    9. '
' → logprob: -10.476984024047852
    10. '1' → logprob: -10.476984024047852

Token 310: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00019817621796391904
    2. '=' → logprob: -9.250198364257812
    3. ' =' → logprob: -10.000198364257812
    4. '   ' → logprob: -11.750198364257812
    5. 's' → logprob: -11.875198364257812
    6. 'bors' → logprob: -12.000198364257812
    7. 'ts' → logprob: -12.125198364257812
    8. '=t' → logprob: -12.125198364257812
    9. '#' → logprob: -12.750198364257812
    10. '	t' → logprob: -13.000198364257812

Token 311: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.14274419844150543
    2. ' graph' → logprob: -2.017744302749634
    3. '	graph' → logprob: -9.892744064331055
    4. '(graph' → logprob: -11.767744064331055
    5. 'queue' → logprob: -12.267744064331055
    6. '   ' → logprob: -13.017744064331055
    7. '0' → logprob: -13.517744064331055
    8. '.graph' → logprob: -14.267744064331055
    9. ' queue' → logprob: -14.392744064331055
    10. 'graphql' → logprob: -15.142744064331055

Token 312: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -2.975612187583465e-05
    2. 'curr' → logprob: -10.625029563903809
    3. '[cur' → logprob: -12.625029563903809
    4. '[' → logprob: -14.250029563903809
    5. '(curr' → logprob: -14.250029563903809
    6. '[current' → logprob: -16.125030517578125
    7. ' [' → logprob: -16.125030517578125
    8. ' curr' → logprob: -16.375030517578125
    9. '[c' → logprob: -16.375030517578125
    10. ')[' → logprob: -16.625030517578125

Token 313: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011847573332488537
    2. '[curr' → logprob: -4.636847496032715
    3. '[' → logprob: -6.761847496032715
    4. ']' → logprob: -7.386847496032715
    5. ' ][' → logprob: -8.761847496032715
    6. ')][' → logprob: -10.261847496032715
    7. ']][' → logprob: -10.636847496032715
    8. 'curr' → logprob: -10.636847496032715
    9. '])' → logprob: -10.761847496032715
    10. '[cur' → logprob: -10.886847496032715

Token 314: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.00010068230039905757
    2. ' ne' → logprob: -10.000101089477539
    3. 'curr' → logprob: -10.125101089477539
    4. 'se' → logprob: -12.375101089477539
    5. '
' → logprob: -13.625101089477539
    6. '(ne' → logprob: -13.625101089477539
    7. '[' → logprob: -13.750101089477539
    8. '   ' → logprob: -14.000101089477539
    9. 'n' → logprob: -14.312601089477539
    10. '```' → logprob: -14.312601089477539

Token 315: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5872419476509094
    2. '       ' → logprob: -0.9622419476509094
    3. ']
' → logprob: -3.0872418880462646
    4. ')' → logprob: -4.712242126464844
    5. '           ' → logprob: -5.712242126464844
    6. ')]' → logprob: -6.462242126464844
    7. '])' → logprob: -6.962242126464844
    8. ' ]' → logprob: -7.712242126464844
    9. ')
' → logprob: -8.337242126464844
    10. '<|end|>' → logprob: -8.587242126464844

Token 316: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5849727392196655
    2. '           ' → logprob: -0.8349727392196655
    3. ' if' → logprob: -5.459972858428955
    4. '<|end|>' → logprob: -5.709972858428955
    5. ',' → logprob: -8.209972381591797
    6. '
' → logprob: -8.334972381591797
    7. '   ' → logprob: -8.709972381591797
    8. 'if' → logprob: -9.084972381591797
    9. '            
' → logprob: -9.084972381591797
    10. ' 
' → logprob: -9.334972381591797

Token 317: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3234764039516449
    2. 'if' (adapté à ' if') → logprob: -1.4484764337539673
    3. '       ' → logprob: -3.8234763145446777
    4. '           ' → logprob: -3.9484763145446777
    5. '   ' → logprob: -8.948476791381836
    6. '
' → logprob: -9.323476791381836
    7. '            
' → logprob: -10.823476791381836
    8. '	if' → logprob: -10.823476791381836
    9. ')' → logprob: -12.323476791381836
    10. '	       ' → logprob: -12.323476791381836

Token 318: ' visited' (ID: 18416)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.38722190260887146
    2. ' not' → logprob: -1.1372219324111938
    3. 'visited' → logprob: -8.262222290039062
    4. ' visited' → logprob: -10.262222290039062
    5. '(not' → logprob: -10.387222290039062
    6. '	not' → logprob: -11.512222290039062
    7. 'n' → logprob: -11.637222290039062
    8. '!' → logprob: -12.637222290039062
    9. '   ' → logprob: -12.887222290039062
    10. ' ' → logprob: -14.887222290039062

Token 319: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.190178904333152e-05
    2. '[' → logprob: -10.500031471252441
    3. 'n' → logprob: -12.750031471252441
    4. '[next' → logprob: -14.000031471252441
    5. ' [' → logprob: -16.250032424926758
    6. '```' → logprob: -16.250032424926758
    7. '[curr' → logprob: -16.250032424926758
    8. '	n' → logprob: -17.250032424926758
    9. '   ' → logprob: -17.625032424926758
    10. '[
' → logprob: -17.875032424926758

Token 320: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0003589416155591607
    2. 'x' → logprob: -8.750358581542969
    3. 'e' → logprob: -8.875358581542969
    4. '[x' → logprob: -10.875358581542969
    5. '[' → logprob: -11.000358581542969
    6. '[n' → logprob: -11.875358581542969
    7. 'n' → logprob: -12.000358581542969
    8. 'ext' → logprob: -12.500358581542969
    9. '[e' → logprob: -12.500358581542969
    10. 'exc' → logprob: -13.625358581542969

Token 321: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38730499148368835
    2. ']==' → logprob: -1.1373050212860107
    3. '==' → logprob: -8.01230525970459
    4. ' ]' → logprob: -10.38730525970459
    5. ']:' → logprob: -10.51230525970459
    6. ')==' → logprob: -11.13730525970459
    7. ' ==' → logprob: -11.63730525970459
    8. ')' → logprob: -12.13730525970459
    9. ']!=' → logprob: -12.26230525970459
    10. '[' → logprob: -12.51230525970459

Token 322: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2622329294681549
    2. ' continue' → logprob: -2.137233018875122
    3. ':' → logprob: -2.387233018875122
    4. 'continue' → logprob: -4.387232780456543
    5. '	continue' → logprob: -5.512232780456543
    6. ':
' → logprob: -6.012232780456543
    7. '           ' → logprob: -6.887232780456543
    8. ' continues' → logprob: -8.012232780456543
    9. '_continue' → logprob: -8.762232780456543
    10. '==' → logprob: -9.637232780456543

Token 323: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.03314797952771187
    2. '               ' → logprob: -3.9081480503082275
    3. 'continue' (adapté à ' continue') → logprob: -4.533147811889648
    4. '	continue' → logprob: -6.908147811889648
    5. '                   ' → logprob: -7.283147811889648
    6. '           ' → logprob: -9.658147811889648
    7. '_continue' → logprob: -11.158147811889648
    8. ' continues' → logprob: -13.033147811889648
    9. '	           ' → logprob: -13.033147811889648
    10. '			' → logprob: -13.408147811889648

Token 324: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01277921162545681
    2. '
' → logprob: -4.887779235839844
    3. '            
' → logprob: -6.262779235839844
    4. '<|end|>' → logprob: -6.512779235839844
    5. '       ' → logprob: -7.137779235839844
    6. '               ' → logprob: -7.887779235839844
    7. 'n' → logprob: -8.637779235839844
    8. '\n' → logprob: -9.762779235839844
    9. '                
' → logprob: -9.762779235839844
    10. '  
' → logprob: -10.012779235839844

Token 325: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011577287688851357
    2. '            
' → logprob: -5.136577129364014
    3. '               ' → logprob: -6.261577129364014
    4. ' 
' → logprob: -6.761577129364014
    5. '<|end|>' → logprob: -7.261577129364014
    6. '       ' → logprob: -7.386577129364014
    7. '                
' → logprob: -8.261577606201172
    8. 'n' → logprob: -8.386577606201172
    9. '
' → logprob: -8.886577606201172
    10. ' ' → logprob: -9.261577606201172

Token 326: ' dist' (ID: 3601)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.37399008870124817
    2. '           ' → logprob: -1.3739900588989258
    3. 'visited' → logprob: -2.873990058898926
    4. ' queue' → logprob: -6.998990058898926
    5. '       ' → logprob: -7.623990058898926
    6. '   ' → logprob: -7.623990058898926
    7. '            
' → logprob: -8.248990058898926
    8. ' 
' → logprob: -9.498990058898926
    9. 'Visited' → logprob: -9.873990058898926
    10. '
' → logprob: -10.498990058898926

Token 327: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.735893965815194e-05
    2. '[' → logprob: -11.000017166137695
    3. 'n' → logprob: -15.250017166137695
    4. '[next' → logprob: -16.125017166137695
    5. ' [' → logprob: -16.875017166137695
    6. '	n' → logprob: -17.000017166137695
    7. '(n' → logprob: -17.000017166137695
    8. '][' → logprob: -17.125017166137695
    9. '```' → logprob: -17.250017166137695
    10. '[N' → logprob: -17.625017166137695

Token 328: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00016945181414484978
    2. 'x' → logprob: -8.75016975402832
    3. '[' → logprob: -12.62516975402832
    4. 'n' → logprob: -12.87516975402832
    5. '[n' → logprob: -13.12516975402832
    6. '```' → logprob: -14.12516975402832
    7. '[x' → logprob: -14.25016975402832
    8. ']' → logprob: -14.50016975402832
    9. 'e' → logprob: -14.62516975402832
    10. '][' → logprob: -15.50016975402832

Token 329: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003048415994271636
    2. ']=' → logprob: -6.253048419952393
    3. ' =' → logprob: -7.628048419952393
    4. '=' → logprob: -7.753048419952393
    5. ' ]' → logprob: -8.628047943115234
    6. '[' → logprob: -11.253047943115234
    7. ')' → logprob: -11.628047943115234
    8. ']+=' → logprob: -13.253047943115234
    9. ')=' → logprob: -15.253047943115234
    10. ']
' → logprob: -16.378047943115234

Token 330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. ')' → logprob: -17.22520637512207
    4. '.=' → logprob: -17.22520637512207
    5. '+=' → logprob: -17.35020637512207
    6. '[' → logprob: -17.47520637512207
    7. ',' → logprob: -18.97520637512207
    8. ']' → logprob: -18.97520637512207
    9. ')=' → logprob: -19.10020637512207
    10. '＝' → logprob: -19.10020637512207

Token 331: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00015920029545668513
    2. ' dist' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.37515926361084
    4. 'curr' → logprob: -16.000158309936523
    5. '	dist' → logprob: -16.375158309936523
    6. 'd' → logprob: -18.750158309936523
    7. '(dist' → logprob: -19.125158309936523
    8. ' ' → logprob: -19.250158309936523
    9. '1' → logprob: -20.000158309936523
    10. '  ' → logprob: -20.125158309936523

Token 332: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -1.0564331205387134e-05
    2. 'curr' → logprob: -11.50001049041748
    3. '[' → logprob: -16.000011444091797
    4. '(curr' → logprob: -16.125011444091797
    5. '	curr' → logprob: -16.500011444091797
    6. ' curr' → logprob: -17.125011444091797
    7. '[current' → logprob: -19.625011444091797
    8. '[cur' → logprob: -19.625011444091797
    9. ' [' → logprob: -19.875011444091797
    10. '```' → logprob: -20.125011444091797

Token 333: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04858884960412979
    2. ']+' → logprob: -3.048588752746582
    3. '+' → logprob: -14.048588752746582
    4. '[' → logprob: -15.298588752746582
    5. ']+=' → logprob: -15.298588752746582
    6. ' ]' → logprob: -15.423588752746582
    7. '+]' → logprob: -17.2985897064209
    8. ')' → logprob: -18.6735897064209
    9. ']
' → logprob: -18.9235897064209
    10. '[n' → logprob: -18.9235897064209

Token 334: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002614550176076591
    2. ' +' → logprob: -8.250261306762695
    3. '+
' → logprob: -17.250261306762695
    4. '+[' → logprob: -17.750261306762695
    5. '[' → logprob: -17.875261306762695
    6. ']+' → logprob: -18.000261306762695
    7. ' plus' → logprob: -18.000261306762695
    8. '()+' → logprob: -18.625261306762695
    9. 'plus' → logprob: -18.625261306762695
    10. '1' → logprob: -19.125261306762695

Token 335: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.500001907348633
    4. '```' → logprob: -20.750001907348633
    5. '  ' → logprob: -21.750001907348633
    6. '
' → logprob: -21.750001907348633
    7. '<|end|>' → logprob: -22.250001907348633
    8. '۱' → logprob: -23.000001907348633
    9. '	' → logprob: -23.125001907348633
    10. '' → logprob: -23.250001907348633

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '
' → logprob: -20.25
    4. '   ' → logprob: -21.125
    5. '```' → logprob: -21.125
    6. '[' → logprob: -22.5
    7. '۱' → logprob: -22.625
    8. '' → logprob: -22.875
    9. '+' → logprob: -22.875
    10. '১' → logprob: -23.375

Token 337: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.771655115589965e-05
    2. '
' → logprob: -12.125018119812012
    3. '               ' → logprob: -12.750018119812012
    4. ',' → logprob: -13.000018119812012
    5. '            
' → logprob: -13.125018119812012
    6. '          ' → logprob: -13.750018119812012
    7. '```' → logprob: -14.000018119812012
    8. 'visited' → logprob: -14.250018119812012
    9. '<|end|>' → logprob: -14.250018119812012
    10. '		' → logprob: -14.750018119812012

Token 338: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002320106839761138
    2. '
' → logprob: -6.377320289611816
    3. ' queue' → logprob: -8.502320289611816
    4. '       ' → logprob: -8.627320289611816
    5. 'queue' → logprob: -9.502320289611816
    6. '            
' → logprob: -10.002320289611816
    7. '   ' → logprob: -10.377320289611816
    8. '               ' → logprob: -10.752320289611816
    9. '(queue' → logprob: -11.502320289611816
    10. '          ' → logprob: -11.627320289611816

Token 339: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0032080153468996286
    2. 'queue' → logprob: -5.753208160400391
    3. ' visited' → logprob: -11.12820816040039
    4. '       ' → logprob: -11.75320816040039
    5. '           ' → logprob: -12.25320816040039
    6. '   ' → logprob: -12.87820816040039
    7. ' queue' → logprob: -15.25320816040039
    8. '```' → logprob: -16.25320816040039
    9. '               ' → logprob: -17.00320816040039
    10. 'visit' → logprob: -17.62820816040039

Token 340: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.125001907348633
    3. ' [' → logprob: -16.875001907348633
    4. '```' → logprob: -17.000001907348633
    5. 'n' → logprob: -18.125001907348633
    6. '(n' → logprob: -19.250001907348633
    7. '\[' → logprob: -20.125001907348633
    8. '[N' → logprob: -20.250001907348633
    9. '	n' → logprob: -20.500001907348633
    10. '[t' → logprob: -21.250001907348633

Token 341: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0062253717333078384
    2. 'x' → logprob: -5.1312255859375
    3. 'n' → logprob: -8.7562255859375
    4. '[n' → logprob: -9.1312255859375
    5. 'e' → logprob: -11.1312255859375
    6. '[x' → logprob: -11.8812255859375
    7. '[' → logprob: -12.1312255859375
    8. '   ' → logprob: -14.3812255859375
    9. '```' → logprob: -14.5062255859375
    10. '[e' → logprob: -15.2562255859375

Token 342: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00047654795343987644
    2. '[n' → logprob: -8.125476837158203
    3. ']=' → logprob: -8.750476837158203
    4. '=' → logprob: -11.875476837158203
    5. ' =' → logprob: -12.000476837158203
    6. ' ]' → logprob: -12.875476837158203
    7. '[' → logprob: -12.875476837158203
    8. 'n' → logprob: -13.375476837158203
    9. '=n' → logprob: -14.250476837158203
    10. ')' → logprob: -14.500476837158203

Token 343: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025114046409726143
    2. '[n' → logprob: -4.025114059448242
    3. ' =' → logprob: -5.025114059448242
    4. '=True' → logprob: -8.650114059448242
    5. '[' → logprob: -8.650114059448242
    6. '=n' → logprob: -11.525114059448242
    7. ']' → logprob: -13.275114059448242
    8. '```' → logprob: -13.525114059448242
    9. 'n' → logprob: -13.900114059448242
    10. ']=' → logprob: -14.025114059448242

Token 344: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -9.615255839889869e-05
    2. ' True' → logprob: -9.250096321105957
    3. '(True' → logprob: -18.75009536743164
    4. '=True' → logprob: -19.87509536743164
    5. 'False' → logprob: -23.12509536743164
    6. '1' → logprob: -23.50009536743164
    7. '.True' → logprob: -23.50009536743164
    8. 'true' → logprob: -24.00009536743164
    9. '[' → logprob: -24.62509536743164
    10. '
' → logprob: -24.75009536743164

Token 345: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014508290914818645
    2. '
' → logprob: -6.751451015472412
    3. '<|end|>' → logprob: -8.751450538635254
    4. ' queue' → logprob: -10.376450538635254
    5. '            
' → logprob: -10.876450538635254
    6. ',' → logprob: -11.251450538635254
    7. '		' → logprob: -11.501450538635254
    8. '(queue' → logprob: -11.501450538635254
    9. 'queue' → logprob: -11.751450538635254
    10. ')' → logprob: -12.376450538635254

Token 346: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00038837024476379156
    2. '		' → logprob: -8.500388145446777
    3. ' queue' → logprob: -9.750388145446777
    4. '```' → logprob: -9.750388145446777
    5. 'queue' → logprob: -11.125388145446777
    6. '	queue' → logprob: -11.250388145446777
    7. '	       ' → logprob: -11.500388145446777
    8. '   ' → logprob: -12.000388145446777
    9. '(queue' → logprob: -12.125388145446777
    10. '<|end|>' → logprob: -12.500388145446777

Token 347: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.0015051016816869378
    2. ' queue' → logprob: -6.501504898071289
    3. '   ' → logprob: -13.376504898071289
    4. '	queue' → logprob: -14.501504898071289
    5. '       ' → logprob: -15.001504898071289
    6. 'deque' → logprob: -15.376504898071289
    7. '           ' → logprob: -16.50150489807129
    8. '```' → logprob: -17.12650489807129
    9. '(queue' → logprob: -17.62650489807129
    10. '.queue' → logprob: -17.62650489807129

Token 348: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.15310683415737e-05
    2. '.append' → logprob: -11.000021934509277
    3. 'append' → logprob: -12.375021934509277
    4. '```' → logprob: -14.625021934509277
    5. 'Append' → logprob: -17.25002098083496
    6. 'app' → logprob: -17.37502098083496
    7. '   ' → logprob: -18.25002098083496
    8. 'p' → logprob: -18.37502098083496
    9. '.extend' → logprob: -18.62502098083496
    10. '_append' → logprob: -19.12502098083496

Token 349: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006677598576061428
    2. 'append' → logprob: -7.750667572021484
    3. '.p' → logprob: -8.875667572021484
    4. '.' → logprob: -9.250667572021484
    5. '```' → logprob: -14.750667572021484
    6. '_append' → logprob: -15.375667572021484
    7. ' append' → logprob: -15.500667572021484
    8. '.extend' → logprob: -15.625667572021484
    9. '	append' → logprob: -16.000667572021484
    10. 'Append' → logprob: -16.875667572021484

Token 350: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.012597242370247841
    2. 'left' → logprob: -4.38759708404541
    3. '(' → logprob: -9.63759708404541
    4. 'n' → logprob: -10.76259708404541
    5. '(left' → logprob: -15.13759708404541
    6. '	n' → logprob: -16.262598037719727
    7. 'le' → logprob: -16.262598037719727
    8. '(
' → logprob: -16.387598037719727
    9. '<n' → logprob: -16.512598037719727
    10. '[n' → logprob: -16.512598037719727

Token 351: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -9.088346359931165e-07
    2. 'e' → logprob: -14.875000953674316
    3. '(ex' → logprob: -15.000000953674316
    4. 'x' → logprob: -15.625000953674316
    5. '```' → logprob: -17.875
    6. '[' → logprob: -18.75
    7. 'exc' → logprob: -19.25
    8. 'ew' → logprob: -19.25
    9. '``' → logprob: -19.375
    10. 'exa' → logprob: -20.25

Token 352: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.3822154111694545e-05
    2. ')
' → logprob: -10.500043869018555
    3. '<|end|>' → logprob: -11.625043869018555
    4. ')return' → logprob: -12.500043869018555
    5. ' )' → logprob: -13.000043869018555
    6. '())' → logprob: -15.625043869018555
    7. '<|end|>' → logprob: -15.625043869018555
    8. '),' → logprob: -16.000043869018555
    9. '   ' → logprob: -16.125043869018555
    10. '```' → logprob: -16.250043869018555

Token 353: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 355: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.56102097814437e-05
    2. ' dist' → logprob: -10.000045776367188
    3. '(dist' → logprob: -15.875045776367188
    4. '	dist' → logprob: -19.000045776367188
    5. '   ' → logprob: -20.750045776367188
    6. 'distance' → logprob: -20.875045776367188
    7. '_dist' → logprob: -21.375045776367188
    8. 'd' → logprob: -21.750045776367188
    9. ' ' → logprob: -21.750045776367188
    10. 'diff' → logprob: -22.250045776367188

Token 356: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 358: ' main' (ID: 2758)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.12850257754325867
    2. ' main' → logprob: -2.753502607345581
    3. ' d' → logprob: -3.378502607345581
    4. 'dfs' → logprob: -4.753502368927002
    5. ' solve' → logprob: -5.128502368927002
    6. ' df' → logprob: -5.503502368927002
    7. 'd' → logprob: -6.628502368927002
    8. ' bfs' → logprob: -7.378502368927002
    9. '_d' → logprob: -7.628502368927002
    10. ' ' → logprob: -7.878502368927002

Token 359: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.4849443838757e-06
    2. ' ():' → logprob: -12.500004768371582
    3. '():
' → logprob: -14.875004768371582
    4. '()' → logprob: -15.625004768371582
    5. '(' → logprob: -15.750004768371582
    6. '(":' → logprob: -18.125003814697266
    7. '()>' → logprob: -18.500003814697266
    8. '():
' → logprob: -18.750003814697266
    9. '(:' → logprob: -19.000003814697266
    10. '().' → logprob: -19.500003814697266

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0043396796099841595
    2. 'n' → logprob: -6.004339694976807
    3. ' n' → logprob: -7.004339694976807
    4. '(n' → logprob: -7.754339694976807
    5. '    ' → logprob: -8.254339218139648
    6. '	n' → logprob: -9.254339218139648
    7. '    
' → logprob: -9.879339218139648
    8. '<|end|>' → logprob: -9.879339218139648
    9. '#' → logprob: -10.754339218139648
    10. '()' → logprob: -11.754339218139648

Token 361: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.002910192823037505
    2. '   ' → logprob: -6.127910137176514
    3. ' n' → logprob: -7.252910137176514
    4. 't' → logprob: -11.502910614013672
    5. '	n' → logprob: -12.752910614013672
    6. '#' → logprob: -13.252910614013672
    7. 'pass' → logprob: -14.127910614013672
    8. ' pass' → logprob: -14.877910614013672
    9. '```' → logprob: -15.127910614013672
    10. '    
' → logprob: -15.752910614013672

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3995586633682251
    2. ' =' → logprob: -1.149558663368225
    3. '=' → logprob: -4.3995585441589355
    4. ',n' → logprob: -9.524559020996094
    5. ' ,' → logprob: -9.649559020996094
    6. '=int' → logprob: -9.649559020996094
    7. ',k' → logprob: -9.649559020996094
    8. ',m' → logprob: -11.399559020996094
    9. ' ' → logprob: -12.149559020996094
    10. ',q' → logprob: -12.149559020996094

Token 363: ' u' (ID: 337)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.22981861233711243
    2. 'k' → logprob: -1.60481858253479
    3. ' m' → logprob: -6.229818820953369
    4. 'q' → logprob: -6.479818820953369
    5. ' k' → logprob: -7.229818820953369
    6. ' =' → logprob: -9.854818344116211
    7. '=' → logprob: -9.979818344116211
    8. 'x' → logprob: -11.354818344116211
    9. 'd' → logprob: -11.354818344116211
    10. ' q' → logprob: -11.729818344116211

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2753276526927948
    2. '=' → logprob: -1.6503276824951172
    3. ' =' → logprob: -3.025327682495117
    4. ',v' → logprob: -9.525327682495117
    5. ' ,' → logprob: -10.025327682495117
    6. 'n' → logprob: -12.150327682495117
    7. 'p' → logprob: -12.150327682495117
    8. 'v' → logprob: -12.400327682495117
    9. ' ' → logprob: -12.400327682495117
    10. ')' → logprob: -12.525327682495117

Token 365: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.45848218582978e-06
    2. 'k' → logprob: -14.25000286102295
    3. 'x' → logprob: -14.25000286102295
    4. 'r' → logprob: -14.87500286102295
    5. 'd' → logprob: -15.37500286102295
    6. ' v' → logprob: -15.62500286102295
    7. 'w' → logprob: -15.75000286102295
    8. 'f' → logprob: -16.000001907348633
    9. 'vv' → logprob: -18.000001907348633
    10. '_v' → logprob: -18.000001907348633

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858816787600517
    2. ' =' → logprob: -3.048588275909424
    3. ',' → logprob: -15.048587799072266
    4. '=input' → logprob: -15.548587799072266
    5. ')' → logprob: -16.173587799072266
    6. ')=' → logprob: -16.923587799072266
    7. '＝' → logprob: -17.423587799072266
    8. '=list' → logprob: -18.173587799072266
    9. '=line' → logprob: -18.298587799072266
    10. '=sys' → logprob: -18.798587799072266

Token 367: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.03830001875758171
    2. ' in' → logprob: -3.288300037384033
    3. ' map' → logprob: -8.788299560546875
    4. 'map' → logprob: -9.288299560546875
    5. 'inp' → logprob: -11.663299560546875
    6. ' inp' → logprob: -13.538299560546875
    7. '	in' → logprob: -13.788299560546875
    8. ' ' → logprob: -14.163299560546875
    9. 'input' → logprob: -14.163299560546875
    10. '   ' → logprob: -15.538299560546875

Token 368: 'pm' (ID: 6991)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.2057795226573944
    2. 'pm' → logprob: -1.7057795524597168
    3. 'p' → logprob: -5.455779552459717
    4. 'plt' → logprob: -10.080779075622559
    5. 'pll' → logprob: -10.455779075622559
    6. 'pls' → logprob: -11.955779075622559
    7. 'pmn' → logprob: -12.080779075622559
    8. 'pr' → logprob: -14.455779075622559
    9. 'ppm' → logprob: -15.205779075622559
    10. 'plit' → logprob: -15.330779075622559

Token 369: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008335703751072288
    2. '()
' → logprob: -7.125833511352539
    3. ' ()' → logprob: -11.750833511352539
    4. '(' → logprob: -12.125833511352539
    5. '   ' → logprob: -12.375833511352539
    6. ')' → logprob: -12.625833511352539
    7. '();' → logprob: -13.000833511352539
    8. '()
' → logprob: -13.750833511352539
    9. '())' → logprob: -13.875833511352539
    10. '()\' → logprob: -13.875833511352539

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5327081084251404
    2. 'graph' → logprob: -0.9077081084251404
    3. '	graph' → logprob: -5.407708168029785
    4. ' graph' → logprob: -5.657708168029785
    5. '<|end|>' → logprob: -7.157708168029785
    6. '    
' → logprob: -7.657708168029785
    7. '
' → logprob: -8.782708168029785
    8. '(graph' → logprob: -9.407708168029785
    9. '_graph' → logprob: -10.782708168029785
    10. '```' → logprob: -11.157708168029785

Token 371: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -8.061054359131958e-06
    2. '   ' → logprob: -12.250007629394531
    3. 'u' → logprob: -13.750007629394531
    4. ' graph' → logprob: -14.000007629394531
    5. 'n' → logprob: -14.500007629394531
    6. 'g' → logprob: -15.250007629394531
    7. 'edges' → logprob: -15.625007629394531
    8. '	graph' → logprob: -15.750007629394531
    9. 'gr' → logprob: -16.37500762939453
    10. 'graphs' → logprob: -17.37500762939453

Token 372: ' main' (ID: 2758)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -7.493430894101039e-05
    2. ' graph' → logprob: -9.875075340270996
    3. '   ' → logprob: -10.750075340270996
    4. '	graph' → logprob: -14.500075340270996
    5. 'u' → logprob: -14.625075340270996
    6. 'g' → logprob: -15.125075340270996
    7. 'n' → logprob: -15.375075340270996
    8. 'edges' → logprob: -15.625075340270996
    9. 'Graph' → logprob: -16.62507438659668
    10. '#' → logprob: -17.00007438659668

Token 373: ' graph' (ID: 7465)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20092405378818512
    2. 'graph' → logprob: -1.825924038887024
    3. '_graph' → logprob: -4.950923919677734
    4. ' graph' → logprob: -5.325923919677734
    5. 'def' → logprob: -6.200923919677734
    6. '<|end|>' → logprob: -6.325923919677734
    7. '#' → logprob: -6.950923919677734
    8. '   ' → logprob: -7.075923919677734
    9. '()
' → logprob: -7.325923919677734
    10. '(graph' → logprob: -7.575923919677734

Token 374: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16027896106243134
    2. '=' → logprob: -1.9102789163589478
    3. 'graph' → logprob: -10.785279273986816
    4. '   ' → logprob: -11.035279273986816
    5. '=[]' → logprob: -11.660279273986816
    6. 'raph' → logprob: -12.910279273986816
    7. '=[]
' → logprob: -13.410279273986816
    8. '={}' → logprob: -14.035279273986816
    9. ' ' → logprob: -14.285279273986816
    10. ',' → logprob: -14.410279273986816

Token 375: ' some' (ID: 1236)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.102725625038147
    2. 'b' → logprob: -1.227725625038147
    3. 'main' → logprob: -2.6027255058288574
    4. 'edges' → logprob: -2.6027255058288574
    5. 'graph' → logprob: -2.6027255058288574
    6. 'u' → logprob: -3.7277255058288574
    7. 'neighbors' → logprob: -3.7277255058288574
    8. 'adj' → logprob: -3.8527255058288574
    9. 'und' → logprob: -4.727725505828857
    10. 'the' → logprob: -4.852725505828857

Token 376: ' tree' (ID: 8165)
  Prédit: 'reason'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reason' → logprob: -0.7743697762489319
    2. 'graph' → logprob: -1.649369716644287
    3. 'thing' → logprob: -2.024369716644287
    4. 'range' → logprob: -2.399369716644287
    5. ' reason' → logprob: -3.149369716644287
    6. 'def' → logprob: -4.399369716644287
    7. 'kind' → logprob: -5.149369716644287
    8. 'n' → logprob: -5.399369716644287
    9. '_reason' → logprob: -5.524369716644287
    10. 'edges' → logprob: -5.649369716644287

Token 377: '?
' (ID: 3901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6795673966407776
    2. ' =' → logprob: -0.8045673966407776
    3. '=' → logprob: -3.304567337036133
    4. 'graph' → logprob: -4.804567337036133
    5. '[]' → logprob: -8.054567337036133
    6. ' graph' → logprob: -8.679567337036133
    7. '[' → logprob: -9.429567337036133
    8. 'edges' → logprob: -9.554567337036133
    9. '(graph' → logprob: -10.054567337036133
    10. ' edges' → logprob: -10.304567337036133

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40241411328315735
    2. 'graph' → logprob: -1.152414083480835
    3. ' graph' → logprob: -4.277414321899414
    4. '	graph' → logprob: -6.527414321899414
    5. '(graph' → logprob: -9.902414321899414
    6. '    
' → logprob: -11.027414321899414
    7. '
' → logprob: -12.652414321899414
    8. '.graph' → logprob: -12.902414321899414
    9. '_graph' → logprob: -13.152414321899414
    10. '  ' → logprob: -13.152414321899414

Token 379: ' g' (ID: 329)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.000206401280593127
    2. ' graph' → logprob: -9.125205993652344
    3. '   ' → logprob: -9.250205993652344
    4. '	graph' → logprob: -13.625205993652344
    5. 'Graph' → logprob: -17.875205993652344
    6. '(graph' → logprob: -17.875205993652344
    7. 'graphs' → logprob: -17.875205993652344
    8. 'edges' → logprob: -18.250205993652344
    9. 'gra' → logprob: -18.500205993652344
    10. 'gr' → logprob: -18.500205993652344

Token 380: ' =' (ID: 314)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.0004458044422790408
    2. ' =' → logprob: -8.000445365905762
    3. '=' → logprob: -9.750445365905762
    4. 'r' → logprob: -10.000445365905762
    5. 'rap' → logprob: -12.250445365905762
    6. 'raf' → logprob: -14.375445365905762
    7. 'graph' → logprob: -15.000445365905762
    8. 'ra' → logprob: -15.250445365905762
    9. 'raphic' → logprob: -15.375445365905762
    10. 'raphics' → logprob: -15.500445365905762

Token 381: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017662165919318795
    2. 'default' → logprob: -6.501766204833984
    3. ' [[]' → logprob: -8.251766204833984
    4. '[[' → logprob: -13.251766204833984
    5. '{' → logprob: -13.751766204833984
    6. '[]' → logprob: -16.626766204833984
    7. ' defaultdict' → logprob: -17.001766204833984
    8. '[n' → logprob: -17.001766204833984
    9. '[['' → logprob: -17.876766204833984
    10. '"default' → logprob: -18.501766204833984

Token 382: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20142124593257904
    2. ' for' → logprob: -1.7014212608337402
    3. '   ' → logprob: -12.576420783996582
    4. '()' → logprob: -12.701420783996582
    5. ']' → logprob: -14.951420783996582
    6. '	for' → logprob: -14.951420783996582
    7. ' ' → logprob: -15.576420783996582
    8. ')' → logprob: -15.576420783996582
    9. '
' → logprob: -15.701420783996582
    10. 'n' → logprob: -15.701420783996582

Token 383: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3242490291595459
    2. '_' → logprob: -1.324249029159546
    3. ' range' → logprob: -4.699249267578125
    4. 'in' → logprob: -6.449249267578125
    5. '(range' → logprob: -9.199249267578125
    6. 'i' → logprob: -9.699249267578125
    7. ' in' → logprob: -10.324249267578125
    8. ' _' → logprob: -10.449249267578125
    9. '_range' → logprob: -11.199249267578125
    10. '0' → logprob: -13.449249267578125

Token 384: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.40071362257003784
    2. 'in' → logprob: -1.1507136821746826
    3. ' in' → logprob: -4.4007134437561035
    4. ' range' → logprob: -6.5257134437561035
    5. 'n' → logprob: -12.025713920593262
    6. '(range' → logprob: -12.900713920593262
    7. 'i' → logprob: -13.025713920593262
    8. ' ' → logprob: -13.775713920593262
    9. '0' → logprob: -14.650713920593262
    10. 'x' → logprob: -15.275713920593262

Token 385: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024758970830589533
    2. ' range' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.25247573852539
    4. '(range' → logprob: -16.37747573852539
    5. ' ' → logprob: -17.62747573852539
    6. 'r' → logprob: -18.87747573852539
    7. '  ' → logprob: -19.25247573852539
    8. '	range' → logprob: -19.25247573852539
    9. 'rang' → logprob: -20.00247573852539
    10. '    ' → logprob: -20.25247573852539

Token 386: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.176947600673884e-05
    2. 'n' → logprob: -10.750021934509277
    3. '(' → logprob: -15.375021934509277
    4. ' (' → logprob: -18.75002098083496
    5. ' n' → logprob: -18.87502098083496
    6. '((' → logprob: -20.25002098083496
    7. '	n' → logprob: -20.75002098083496
    8. ')n' → logprob: -21.25002098083496
    9. '(
' → logprob: -21.50002098083496
    10. '(N' → logprob: -21.75002098083496

Token 387: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00024751186720095575
    2. ']' → logprob: -8.375247955322266
    3. ')' → logprob: -11.500247955322266
    4. ')]
' → logprob: -12.000247955322266
    5. ']
' → logprob: -15.250247955322266
    6. ')]
' → logprob: -15.625247955322266
    7. '])' → logprob: -16.750247955322266
    8. ' )' → logprob: -17.000247955322266
    9. ')]

' → logprob: -17.000247955322266
    10. ' ]' → logprob: -17.125247955322266

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005606581107713282
    2. 'for' → logprob: -8.250560760498047
    3. ' for' → logprob: -8.750560760498047
    4. '<|end|>' → logprob: -8.875560760498047
    5. '...' → logprob: -15.000560760498047
    6. '	for' → logprob: -15.000560760498047
    7. '<|end|>' → logprob: -16.125560760498047
    8. '    
' → logprob: -16.125560760498047
    9. '```' → logprob: -16.500560760498047
    10. '  ' → logprob: -17.250560760498047

Token 389: ' g' (ID: 329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00321336486376822
    2. '   ' → logprob: -5.753213405609131
    3. ' for' → logprob: -10.253212928771973
    4. '	for' → logprob: -14.753212928771973
    5. '  ' → logprob: -19.87821388244629
    6. '    
' → logprob: -20.12821388244629
    7. ' ' → logprob: -21.25321388244629
    8. '```' → logprob: -22.00321388244629
    9. 'For' → logprob: -22.87821388244629
    10. '_for' → logprob: -23.25321388244629

Token 390: '1' (ID: 16)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.3026250898838043
    2. ' =' → logprob: -2.5526251792907715
    3. '[' → logprob: -3.1776251792907715
    4. 'for' → logprob: -3.5526251792907715
    5. '[n' → logprob: -3.5526251792907715
    6. 'u' → logprob: -4.5526251792907715
    7. '.' → logprob: -4.6776251792907715
    8. '=' → logprob: -4.8026251792907715
    9. '[v' → logprob: -4.9276251792907715
    10. 'g' → logprob: -5.1776251792907715

Token 391: ' =' (ID: 314)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.11013776808977127
    2. ' =' → logprob: -2.860137701034546
    3. '=' → logprob: -4.860137939453125
    4. '[' → logprob: -5.110137939453125
    5. 'for' → logprob: -5.235137939453125
    6. '[v' → logprob: -5.360137939453125
    7. 'n' → logprob: -5.485137939453125
    8. '[n' → logprob: -5.485137939453125
    9. 'u' → logprob: -5.735137939453125
    10. '   ' → logprob: -5.860137939453125

Token 392: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29753848910331726
    2. ' [[]' → logprob: -2.4225385189056396
    3. 'copy' → logprob: -2.9225385189056396
    4. 'g' → logprob: -3.1725385189056396
    5. '[g' → logprob: -3.1725385189056396
    6. '[]' → logprob: -3.9225385189056396
    7. '[[' → logprob: -5.0475382804870605
    8. 'default' → logprob: -6.0475382804870605
    9. '[u' → logprob: -6.7975382804870605
    10. '[n' → logprob: -7.9225382804870605

Token 393: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759869813919067
    2. ' for' → logprob: -0.8259869813919067
    3. '(n' → logprob: -10.450986862182617
    4. ')' → logprob: -11.575986862182617
    5. 'n' → logprob: -12.950986862182617
    6. '	for' → logprob: -13.200986862182617
    7. ',' → logprob: -13.325986862182617
    8. ' n' → logprob: -13.950986862182617
    9. '(' → logprob: -14.575986862182617
    10. ' (' → logprob: -14.700986862182617

Token 394: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019595235586166382
    2. ' range' → logprob: -4.269595146179199
    3. '_range' → logprob: -6.019595146179199
    4. 'range' → logprob: -6.394595146179199
    5. ' _' → logprob: -6.644595146179199
    6. '(range' → logprob: -11.2695951461792
    7. '_n' → logprob: -14.0195951461792
    8. 'n' → logprob: -14.5195951461792
    9. '(n' → logprob: -15.3945951461792
    10. '_in' → logprob: -15.8945951461792

Token 395: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003466673369985074
    2. ' range' → logprob: -8.000347137451172
    3. '(n' → logprob: -12.125347137451172
    4. '(range' → logprob: -12.250347137451172
    5. 'n' → logprob: -13.750347137451172
    6. '(' → logprob: -18.250347137451172
    7. '_range' → logprob: -18.500347137451172
    8. 'rang' → logprob: -18.500347137451172
    9. '	range' → logprob: -19.125347137451172
    10. '   ' → logprob: -20.750347137451172

Token 396: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0110715227201581
    2. ' range' → logprob: -4.511071681976318
    3. 'n' → logprob: -11.51107120513916
    4. '(range' → logprob: -11.63607120513916
    5. '(n' → logprob: -12.26107120513916
    6. '   ' → logprob: -16.761072158813477
    7. ' n' → logprob: -16.886072158813477
    8. '_range' → logprob: -17.636072158813477
    9. '	range' → logprob: -18.386072158813477
    10. ' ' → logprob: -18.886072158813477

Token 397: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001331190811470151
    2. 'n' → logprob: -6.626331329345703
    3. ' (' → logprob: -13.001331329345703
    4. ' n' → logprob: -13.126331329345703
    5. '(' → logprob: -15.001331329345703
    6. '   ' → logprob: -15.751331329345703
    7. '
' → logprob: -16.126331329345703
    8. 'range' → logprob: -16.251331329345703
    9. '(u' → logprob: -16.501331329345703
    10. ')' → logprob: -16.751331329345703

Token 398: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.026996053755283356
    2. ']' → logprob: -4.40199613571167
    3. ')' → logprob: -4.77699613571167
    4. ')]
' → logprob: -5.27699613571167
    5. ']
' → logprob: -7.27699613571167
    6. '   ' → logprob: -9.401995658874512
    7. ')
' → logprob: -9.526995658874512
    8. ')]

' → logprob: -12.901995658874512
    9. ')]
' → logprob: -13.401995658874512
    10. ' )' → logprob: -14.776995658874512

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002231021411716938
    2. 'for' → logprob: -6.252231121063232
    3. ' for' → logprob: -8.127230644226074
    4. '	for' → logprob: -12.627230644226074
    5. '<|end|>' → logprob: -12.627230644226074
    6. '    
' → logprob: -15.127230644226074
    7. '
' → logprob: -17.25223159790039
    8. '```' → logprob: -17.75223159790039
    9. '<|end|>' → logprob: -17.75223159790039
    10. '   ' → logprob: -17.75223159790039

Token 400: ' ab' (ID: 692)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001025895617203787
    2. '   ' → logprob: -9.500102996826172
    3. ' for' → logprob: -10.500102996826172
    4. '	for' → logprob: -15.875102996826172
    5. '    
' → logprob: -17.875102996826172
    6. '
' → logprob: -20.375102996826172
    7. '  ' → logprob: -21.500102996826172
    8. '```' → logprob: -21.625102996826172
    9. '#' → logprob: -22.125102996826172
    10. ' ' → logprob: -22.250102996826172

Token 401: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42955952882766724
    2. ' =' → logprob: -1.0545594692230225
    3. '=[]' → logprob: -7.304559707641602
    4. '_' → logprob: -9.554559707641602
    5. 's' → logprob: -9.679559707641602
    6. 'for' → logprob: -10.804559707641602
    7. '[]' → logprob: -11.554559707641602
    8. '=[]
' → logprob: -12.429559707641602
    9. '1' → logprob: -12.804559707641602
    10. ' ' → logprob: -13.054559707641602

Token 402: ' []
' (ID: 8911)
  Prédit: '[in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[in' → logprob: -0.33567389845848083
    2. 'in' → logprob: -1.4606739282608032
    3. '[' → logprob: -2.9606738090515137
    4. ' [' → logprob: -7.585673809051514
    5. '[]' → logprob: -7.585673809051514
    6. ' in' → logprob: -8.960674285888672
    7. '[int' → logprob: -10.710674285888672
    8. '[list' → logprob: -10.710674285888672
    9. '[input' → logprob: -10.835674285888672
    10. '(in' → logprob: -11.085674285888672

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004087659064680338
    2. 'for' → logprob: -5.754087448120117
    3. ' for' → logprob: -7.004087448120117
    4. '	for' → logprob: -14.004087448120117
    5. '<|end|>' → logprob: -14.504087448120117
    6. '    
' → logprob: -16.254087448120117
    7. '  ' → logprob: -17.129087448120117
    8. '<|end|>' → logprob: -18.129087448120117
    9. ' ' → logprob: -18.254087448120117
    10. '   ' → logprob: -18.754087448120117

Token 404: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005244429688900709
    2. ' for' → logprob: -5.505244255065918
    3. '   ' → logprob: -6.755244255065918
    4. '	for' → logprob: -14.630244255065918
    5. '    
' → logprob: -17.255245208740234
    6. ' ' → logprob: -17.630245208740234
    7. '  ' → logprob: -18.005245208740234
    8. '    ' → logprob: -19.880245208740234
    9. '
' → logprob: -20.005245208740234
    10. ' 
' → logprob: -20.255245208740234

Token 405: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005959240952506661
    2. ' _' → logprob: -7.500596046447754
    3. '_i' → logprob: -10.250596046447754
    4. ' i' → logprob: -12.375596046447754
    5. 'i' → logprob: -12.875596046447754
    6. '_range' → logprob: -15.000596046447754
    7. ' in' → logprob: -15.250596046447754
    8. ' range' → logprob: -16.500595092773438
    9. '__' → logprob: -17.000595092773438
    10. ' ' → logprob: -17.375595092773438

Token 406: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3870161771774292
    2. ' in' → logprob: -1.1370161771774292
    3. 'range' → logprob: -9.137016296386719
    4. ' ' → logprob: -10.762016296386719
    5. 'i' → logprob: -11.512016296386719
    6. 'n' → logprob: -12.887016296386719
    7. ' _' → logprob: -14.512016296386719
    8. '  ' → logprob: -14.762016296386719
    9. 'ine' → logprob: -14.887016296386719
    10. ' i' → logprob: -15.012016296386719

Token 407: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008228530059568584
    2. ' range' → logprob: -7.125823020935059
    3. 'in' → logprob: -11.000823020935059
    4. '(range' → logprob: -13.625823020935059
    5. ' in' → logprob: -15.375823020935059
    6. ' ' → logprob: -17.000822067260742
    7. 'r' → logprob: -17.125822067260742
    8. '	range' → logprob: -17.125822067260742
    9. 'rang' → logprob: -17.125822067260742
    10. '(' → logprob: -17.625822067260742

Token 408: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.786196975852363e-05
    2. 'n' → logprob: -10.250038146972656
    3. '(' → logprob: -13.000038146972656
    4. ' (' → logprob: -16.250038146972656
    5. ' n' → logprob: -16.875038146972656
    6. '(
' → logprob: -18.125038146972656
    7. '   ' → logprob: -18.500038146972656
    8. '(int' → logprob: -18.625038146972656
    9. '((' → logprob: -18.625038146972656
    10. '	n' → logprob: -18.750038146972656

Token 409: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04858839511871338
    2. ' -' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.673588752746582
    4. '1' → logprob: -14.923588752746582
    5. ' ' → logprob: -16.048587799072266
    6. '   ' → logprob: -17.048587799072266
    7. ')' → logprob: -17.048587799072266
    8. '  ' → logprob: -17.298587799072266
    9. '
' → logprob: -17.298587799072266
    10. '()-' → logprob: -17.798587799072266

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.625003814697266
    4. ')' → logprob: -17.750003814697266
    5. '１' → logprob: -18.250003814697266
    6. '   ' → logprob: -18.375003814697266
    7. '2' → logprob: -18.562503814697266
    8. '১' → logprob: -18.875003814697266
    9. '۱' → logprob: -19.000003814697266
    10. 'from' → logprob: -19.312503814697266

Token 411: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07988002896308899
    2. '):' → logprob: -2.5798799991607666
    3. '):
' → logprob: -8.204879760742188
    4. ':' → logprob: -8.204879760742188
    5. '   ' → logprob: -8.704879760742188
    6. '():
' → logprob: -9.079879760742188
    7. ':
' → logprob: -9.454879760742188
    8. ')' → logprob: -9.704879760742188
    9. ' ):
' → logprob: -11.579879760742188
    10. ',' → logprob: -12.829879760742188

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0039403135888278484
    2. 'a' → logprob: -5.878940105438232
    3. '   ' → logprob: -6.878940105438232
    4. ' a' → logprob: -9.25394058227539
    5. '	a' → logprob: -13.00394058227539
    6. '	   ' → logprob: -13.50394058227539
    7. 'ab' → logprob: -13.75394058227539
    8. '    ' → logprob: -13.75394058227539
    9. 'r' → logprob: -14.25394058227539
    10. '      ' → logprob: -14.75394058227539

Token 413: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00010044389637187123
    2. ' a' → logprob: -9.750100135803223
    3. '   ' → logprob: -10.125100135803223
    4. 'x' → logprob: -13.750100135803223
    5. '	a' → logprob: -14.250100135803223
    6. 'A' → logprob: -16.00010108947754
    7. 'u' → logprob: -16.25010108947754
    8. '_a' → logprob: -17.25010108947754
    9. ' ' → logprob: -18.25010108947754
    10. '    
' → logprob: -18.75010108947754

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04871545359492302
    2. ',b' → logprob: -3.048715353012085
    3. 'b' → logprob: -9.298715591430664
    4. ' ,' → logprob: -10.298715591430664
    5. ',v' → logprob: -13.298715591430664
    6. ',u' → logprob: -14.798715591430664
    7. ',s' → logprob: -15.548715591430664
    8. ' b' → logprob: -15.673715591430664
    9. '_,' → logprob: -16.048715591430664
    10. ',a' → logprob: -16.423715591430664

Token 415: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002613358374219388
    2. ' b' → logprob: -8.250261306762695
    3. '_b' → logprob: -20.000261306762695
    4. '	b' → logprob: -20.375261306762695
    5. ',b' → logprob: -21.125261306762695
    6. '<|end|>' → logprob: -21.750261306762695
    7. '>b' → logprob: -22.125261306762695
    8. ' ' → logprob: -22.875261306762695
    9. '*b' → logprob: -23.000261306762695
    10. ' ' → logprob: -23.000261306762695

Token 416: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759398937225342
    2. ' =' → logprob: -0.8259398937225342
    3. '=in' → logprob: -15.700940132141113
    4. ',' → logprob: -15.825940132141113
    5. '   ' → logprob: -16.450939178466797
    6. '＝' → logprob: -16.700939178466797
    7. ' ' → logprob: -17.700939178466797
    8. '    ' → logprob: -18.200939178466797
    9. '=input' → logprob: -18.825939178466797
    10. '	' → logprob: -19.075939178466797

Token 417: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.004553661681711674
    2. ' in' → logprob: -5.50455379486084
    3. 'map' → logprob: -7.75455379486084
    4. ' map' → logprob: -10.12955379486084
    5. 'inp' → logprob: -12.25455379486084
    6. ' ' → logprob: -14.75455379486084
    7. '   ' → logprob: -15.00455379486084
    8. '	in' → logprob: -15.12955379486084
    9. 'list' → logprob: -15.25455379486084
    10. 'tuple' → logprob: -15.75455379486084

Token 418: 'pm' (ID: 6991)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.0297680776566267
    2. 'pm' → logprob: -3.5297679901123047
    3. 'p' → logprob: -11.529767990112305
    4. 'm' → logprob: -12.529767990112305
    5. 'plt' → logprob: -13.029767990112305
    6. 'pls' → logprob: -14.654767990112305
    7. ' pl' → logprob: -14.904767990112305
    8. 'pt' → logprob: -15.029767990112305
    9. 'pll' → logprob: -15.154767990112305
    10. 'map' → logprob: -15.404767990112305

Token 419: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0896884202957153
    2. '       ' → logprob: -1.0896884202957153
    3. '()' → logprob: -1.2146884202957153
    4. '<|end|>' → logprob: -4.089688301086426
    5. '()
' → logprob: -5.339688301086426
    6. '   ' → logprob: -6.214688301086426
    7. '<|end|>' → logprob: -6.214688301086426
    8. 'a' → logprob: -6.214688301086426
    9. ')
' → logprob: -7.339688301086426
    10. '
' → logprob: -7.839688301086426

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007942587835714221
    2. '   ' → logprob: -7.625794410705566
    3. '<|end|>' → logprob: -8.250794410705566
    4. 'a' → logprob: -11.625794410705566
    5. ',' → logprob: -12.125794410705566
    6. '	' → logprob: -12.250794410705566
    7. '
' → logprob: -12.250794410705566
    8. '#' → logprob: -12.500794410705566
    9. '```' → logprob: -12.500794410705566
    10. ' ' → logprob: -12.750794410705566

Token 421: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0866151675581932
    2. 'a' (adapté à ' a') → logprob: -2.5866150856018066
    3. '       ' → logprob: -5.211615085601807
    4. ' a' → logprob: -6.211615085601807
    5. 'g' → logprob: -8.711615562438965
    6. '	a' → logprob: -10.086615562438965
    7. ' g' → logprob: -11.211615562438965
    8. 'ab' → logprob: -12.336615562438965
    9. '  ' → logprob: -12.961615562438965
    10. '    ' → logprob: -13.086615562438965

Token 422: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.1664104163646698
    2. '-=' → logprob: -1.9164104461669922
    3. '-' → logprob: -5.166410446166992
    4. ',' → logprob: -7.916410446166992
    5. ' -' → logprob: -10.291410446166992
    6. ' =' → logprob: -10.666410446166992
    7. '   ' → logprob: -10.916410446166992
    8. ',a' → logprob: -11.916410446166992
    9. 'a' → logprob: -12.041410446166992
    10. '=' → logprob: -12.041410446166992

Token 423: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.50000762939453
    4. '```' → logprob: -19.62500762939453
    5. '<|end|>' → logprob: -19.87500762939453
    6. '[' → logprob: -21.06250762939453
    7. '۱' → logprob: -21.12500762939453
    8. '...' → logprob: -21.50000762939453
    9. '  ' → logprob: -21.56250762939453
    10. '
' → logprob: -21.56250762939453

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -19.0
    4. '```' → logprob: -20.375
    5. '１' → logprob: -21.625
    6. '۱' → logprob: -22.0
    7. '১' → logprob: -22.5625
    8. '[' → logprob: -22.75
    9. '१' → logprob: -23.0
    10. '`' → logprob: -23.0

Token 425: '
' (ID: 198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.32192227244377136
    2. '<|end|>' → logprob: -1.5719223022460938
    3. '       ' → logprob: -3.1969223022460938
    4. ' b' → logprob: -4.571922302246094
    5. '
' → logprob: -4.821922302246094
    6. ',' → logprob: -5.196922302246094
    7. ',b' → logprob: -6.696922302246094
    8. '   ' → logprob: -7.946922302246094
    9. ';' → logprob: -8.571922302246094
    10. '```' → logprob: -8.696922302246094

Token 426: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08147547394037247
    2. '       ' → logprob: -2.5814754962921143
    3. ' b' → logprob: -6.831475257873535
    4. '<|end|>' → logprob: -7.081475257873535
    5. '   ' → logprob: -8.331475257873535
    6. '
' → logprob: -8.581475257873535
    7. '	b' → logprob: -9.206475257873535
    8. '        
' → logprob: -10.331475257873535
    9. '#' → logprob: -10.831475257873535
    10. '```' → logprob: -11.081475257873535

Token 427: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -1.9862216504407115e-05
    2. ' b' → logprob: -11.000020027160645
    3. '       ' → logprob: -12.750020027160645
    4. '   ' → logprob: -15.750020027160645
    5. '	b' → logprob: -19.625019073486328
    6. ' ' → logprob: -22.375019073486328
    7. '    ' → logprob: -22.750019073486328
    8. '  ' → logprob: -23.750019073486328
    9. '        ' → logprob: -23.875019073486328
    10. ' ' → logprob: -24.000019073486328

Token 428: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.09048116207122803
    2. '-=' → logprob: -2.4654812812805176
    3. '-' → logprob: -6.590481281280518
    4. '=' → logprob: -8.96548080444336
    5. ' ' → logprob: -10.71548080444336
    6. ' -' → logprob: -12.21548080444336
    7. '<|end|>' → logprob: -12.96548080444336
    8. ' =' → logprob: -13.34048080444336
    9. '   ' → logprob: -13.46548080444336
    10. ')' → logprob: -13.84048080444336

Token 429: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011049231514334679
    2. ' ' → logprob: -4.511049270629883
    3. '<|end|>' → logprob: -13.761049270629883
    4. '   ' → logprob: -15.261049270629883
    5. '```' → logprob: -16.698549270629883
    6. '  ' → logprob: -17.448549270629883
    7. '<|end|>' → logprob: -17.698549270629883
    8. '=' → logprob: -17.761049270629883
    9. '-' → logprob: -17.948549270629883
    10. '    ' → logprob: -18.011049270629883

Token 430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '<|end|>' → logprob: -17.5000057220459
    4. '```' → logprob: -18.5000057220459
    5. '   ' → logprob: -19.3125057220459
    6. '۱' → logprob: -19.5000057220459
    7. '１' → logprob: -20.0625057220459
    8. '
' → logprob: -20.1875057220459
    9. '১' → logprob: -20.6875057220459
    10. '2' → logprob: -20.9375057220459

Token 431: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018975384533405304
    2. '   ' → logprob: -4.143975257873535
    3. 'g' → logprob: -6.018975257873535
    4. '
' → logprob: -8.518975257873535
    5. '<|end|>' → logprob: -8.893975257873535
    6. ' g' → logprob: -9.768975257873535
    7. ',' → logprob: -10.643975257873535
    8. '	g' → logprob: -11.143975257873535
    9. '        
' → logprob: -11.268975257873535
    10. '#' → logprob: -11.768975257873535

Token 432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030031390488147736
    2. '   ' → logprob: -5.878003120422363
    3. 'g' → logprob: -8.628003120422363
    4. ' g' → logprob: -11.378003120422363
    5. 'ab' → logprob: -12.378003120422363
    6. ' ab' → logprob: -13.753003120422363
    7. ' ' → logprob: -14.128003120422363
    8. 'a' → logprob: -14.503003120422363
    9. '<|end|>' → logprob: -14.878003120422363
    10. '	g' → logprob: -15.253003120422363

Token 433: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -7.839121826691553e-05
    2. 'ab' → logprob: -9.500078201293945
    3. '   ' → logprob: -12.875078201293945
    4. 'a' → logprob: -14.250078201293945
    5. ' g' → logprob: -15.375078201293945
    6. '	g' → logprob: -17.250078201293945
    7. 'ag' → logprob: -19.500078201293945
    8. '```' → logprob: -19.875078201293945
    9. '       ' → logprob: -20.125078201293945
    10. '#g' → logprob: -20.375078201293945

Token 434: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.749814019713085e-06
    2. 'a' → logprob: -12.250006675720215
    3. '[g' → logprob: -13.875006675720215
    4. '[u' → logprob: -14.375006675720215
    5. '[' → logprob: -15.625006675720215
    6. '[b' → logprob: -16.37500762939453
    7. '1' → logprob: -16.50000762939453
    8. ' [' → logprob: -18.25000762939453
    9. '[A' → logprob: -18.62500762939453
    10. '```' → logprob: -19.62500762939453

Token 435: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.3663626305060461e-05
    2. ']' → logprob: -11.87501335144043
    3. '.append' → logprob: -12.12501335144043
    4. ' ].' → logprob: -13.87501335144043
    5. '.' → logprob: -15.87501335144043
    6. '[a' → logprob: -16.75001335144043
    7. '[' → logprob: -17.00001335144043
    8. '   ' → logprob: -17.25001335144043
    9. '[].' → logprob: -17.87501335144043
    10. ').' → logprob: -18.12501335144043

Token 436: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.25
    3. '.append' → logprob: -17.75
    4. 'appen' → logprob: -19.375
    5. 'app' → logprob: -20.625
    6. '_append' → logprob: -22.0
    7. '	append' → logprob: -22.125
    8. 'Append' → logprob: -22.5
    9. 'add' → logprob: -23.0
    10. 'push' → logprob: -23.625

Token 437: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -5.836499985889532e-05
    2. 'b' → logprob: -9.7500581741333
    3. '	b' → logprob: -19.500059127807617
    4. ' b' → logprob: -21.000059127807617
    5. '(' → logprob: -21.125059127807617
    6. '(
' → logprob: -22.625059127807617
    7. '[b' → logprob: -23.000059127807617
    8. ')b' → logprob: -23.000059127807617
    9. '(a' → logprob: -23.250059127807617
    10. '_b' → logprob: -23.250059127807617

Token 438: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760300159454346
    2. ')
' → logprob: -0.8260300159454346
    3. ')
' → logprob: -9.326029777526855
    4. '       ' → logprob: -14.326029777526855
    5. ')

' → logprob: -14.826029777526855
    6. ')b' → logprob: -15.451029777526855
    7. ' )
' → logprob: -15.951029777526855
    8. '   ' → logprob: -16.326030731201172
    9. ' )' → logprob: -16.826030731201172
    10. '),' → logprob: -16.826030731201172

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03662123531103134
    2. 'g' → logprob: -3.411621332168579
    3. ' g' → logprob: -6.53662109375
    4. '   ' → logprob: -6.66162109375
    5. '<|end|>' → logprob: -8.66162109375
    6. '	g' → logprob: -10.78662109375
    7. ',' → logprob: -11.16162109375
    8. ' ' → logprob: -11.53662109375
    9. 'b' → logprob: -12.28662109375
    10. ',g' → logprob: -12.41162109375

Token 440: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -1.3856492842023727e-06
    2. ' g' → logprob: -13.625000953674316
    3. '       ' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.125001907348633
    5. 'b' → logprob: -19.625001907348633
    6. '	g' → logprob: -19.750001907348633
    7. '#g' → logprob: -20.500001907348633
    8. '```' → logprob: -20.750001907348633
    9. '_g' → logprob: -21.125001907348633
    10. '.g' → logprob: -22.375001907348633

Token 441: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.4974866644479334e-05
    2. 'b' → logprob: -12.250015258789062
    3. '1' → logprob: -12.500015258789062
    4. '[g' → logprob: -12.750015258789062
    5. '[' → logprob: -12.875015258789062
    6. '[a' → logprob: -14.000015258789062
    7. '[s' → logprob: -16.625015258789062
    8. '[u' → logprob: -17.250015258789062
    9. '```' → logprob: -17.375015258789062
    10. ' [' → logprob: -18.875015258789062

Token 442: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.017218617722392082
    2. '.append' → logprob: -4.392218589782715
    3. ').' → logprob: -5.642218589782715
    4. '.' → logprob: -6.892218589782715
    5. ' .' → logprob: -10.017218589782715
    6. '[].' → logprob: -10.517218589782715
    7. ']' → logprob: -10.767218589782715
    8. '[' → logprob: -11.517218589782715
    9. ')' → logprob: -11.767218589782715
    10. '.setdefault' → logprob: -11.767218589782715

Token 443: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: 0.0
    2. 'appen' → logprob: -17.375
    3. ' append' → logprob: -17.875
    4. '.append' → logprob: -18.5
    5. 'app' → logprob: -19.625
    6. 'a' → logprob: -20.375
    7. '	append' → logprob: -20.625
    8. 'prepend' → logprob: -23.0
    9. 'add' → logprob: -23.5
    10. 'Append' → logprob: -23.5

Token 444: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.981667537620524e-06
    2. 'a' → logprob: -13.250001907348633
    3. '(
' → logprob: -16.375001907348633
    4. '(' → logprob: -17.000001907348633
    5. '(A' → logprob: -20.625001907348633
    6. ' (' → logprob: -21.250001907348633
    7. '(ai' → logprob: -22.875001907348633
    8. '[a' → logprob: -23.000001907348633
    9. '((' → logprob: -23.000001907348633
    10. 's' → logprob: -23.000001907348633

Token 445: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009328982559964061
    2. ')
' → logprob: -7.125932693481445
    3. '       ' → logprob: -9.125932693481445
    4. '<|end|>' → logprob: -11.000932693481445
    5. '   ' → logprob: -14.000932693481445
    6. ')#' → logprob: -14.875932693481445
    7. '),' → logprob: -15.000932693481445
    8. ')n' → logprob: -15.375932693481445
    9. ',' → logprob: -15.500932693481445
    10. ' )' → logprob: -15.625932693481445

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001314295077463612
    2. '<|end|>' → logprob: -9.625131607055664
    3. '   ' → logprob: -10.125131607055664
    4. 'g' → logprob: -11.500131607055664
    5. '
' → logprob: -12.000131607055664
    6. '	' → logprob: -12.750131607055664
    7. '```' → logprob: -13.250131607055664
    8. '        
' → logprob: -14.125131607055664
    9. ' g' → logprob: -14.250131607055664
    10. '#' → logprob: -14.625131607055664

Token 447: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' (adapté à ' ab') → logprob: -0.20559006929397583
    2. 'g' → logprob: -2.705590009689331
    3. '   ' → logprob: -2.830590009689331
    4. '       ' → logprob: -2.830590009689331
    5. ' ab' → logprob: -6.95559024810791
    6. 'a' → logprob: -10.20559024810791
    7. ' g' → logprob: -10.33059024810791
    8. '        
' → logprob: -12.45559024810791
    9. '  ' → logprob: -12.83059024810791
    10. ' ' → logprob: -12.83059024810791

Token 448: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0029236339032649994
    2. '.' → logprob: -5.877923488616943
    3. '.app' → logprob: -9.377923965454102
    4. '.ap' → logprob: -10.502923965454102
    5. '.setdefault' → logprob: -13.502923965454102
    6. '.extend' → logprob: -13.627923965454102
    7. '.add' → logprob: -13.877923965454102
    8. '.Append' → logprob: -14.377923965454102
    9. ').' → logprob: -14.502923965454102
    10. '​.' → logprob: -14.752923965454102

Token 449: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.003610282437875867
    2. '(a' → logprob: -5.753610134124756
    3. '(' → logprob: -7.753610134124756
    4. '([' → logprob: -12.753610610961914
    5. '(b' → logprob: -15.128610610961914
    6. '(
' → logprob: -16.878610610961914
    7. '(ab' → logprob: -17.253610610961914
    8. '({' → logprob: -17.753610610961914
    9. '(A' → logprob: -17.878610610961914
    10. ' (' → logprob: -18.128610610961914

Token 450: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0280383548888494e-06
    2. ' a' → logprob: -14.000000953674316
    3. '(a' → logprob: -16.625001907348633
    4. '   ' → logprob: -16.875001907348633
    5. ')a' → logprob: -18.750001907348633
    6. '	a' → logprob: -19.000001907348633
    7. '_a' → logprob: -20.500001907348633
    8. ' ' → logprob: -20.875001907348633
    9. ')' → logprob: -20.875001907348633
    10. 'а' → logprob: -21.125001907348633

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06205720454454422
    2. ',b' → logprob: -2.8120572566986084
    3. ' ,' → logprob: -9.812057495117188
    4. ',
' → logprob: -10.312057495117188
    5. 'b' → logprob: -14.562057495117188
    6. ',a' → logprob: -15.062057495117188
    7. ',v' → logprob: -16.062057495117188
    8. ',g' → logprob: -16.562057495117188
    9. '‌,' → logprob: -16.812057495117188
    10. ' ' → logprob: -17.062057495117188

Token 452: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009115827269852161
    2. ' b' → logprob: -7.000911712646484
    3. ')b' → logprob: -16.875911712646484
    4. ')' → logprob: -18.500911712646484
    5. '<|end|>' → logprob: -18.500911712646484
    6. '   ' → logprob: -19.000911712646484
    7. '	b' → logprob: -19.125911712646484
    8. ' ' → logprob: -20.375911712646484
    9. '    ' → logprob: -21.375911712646484
    10. '       ' → logprob: -22.000911712646484

Token 453: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47408488392829895
    2. '))' → logprob: -0.9740848541259766
    3. ')
' → logprob: -12.599084854125977
    4. '))
' → logprob: -13.099084854125977
    5. ')}' → logprob: -13.974084854125977
    6. ')))' → logprob: -14.349084854125977
    7. ' )' → logprob: -15.224084854125977
    8. '),' → logprob: -15.974084854125977
    9. ' ))' → logprob: -16.099084854125977
    10. '));' → logprob: -16.349084854125977

Token 454: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 455: ' dist' (ID: 3601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.294987291097641
    2. 'u' → logprob: -2.169987201690674
    3. 'dist' (adapté à ' dist') → logprob: -2.544987201690674
    4. 'for' → logprob: -3.169987201690674
    5. 'd' → logprob: -4.669987201690674
    6. 'uv' → logprob: -5.919987201690674
    7. 'v' → logprob: -6.044987201690674
    8. '#' → logprob: -6.669987201690674
    9. ' for' → logprob: -7.044987201690674
    10. 'distance' → logprob: -7.169987201690674

Token 456: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.12591056525707245
    2. '_u' → logprob: -2.250910520553589
    3. ' =' → logprob: -4.750910758972168
    4. '1' → logprob: -6.000910758972168
    5. 'from' → logprob: -7.375910758972168
    6. '=' → logprob: -7.750910758972168
    7. 'v' → logprob: -8.750910758972168
    8. 's' → logprob: -9.125910758972168
    9. 'U' → logprob: -9.250910758972168
    10. '   ' → logprob: -9.250910758972168

Token 457: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002632430987432599
    2. ' bfs' → logprob: -8.250263214111328
    3. '[b' → logprob: -14.000263214111328
    4. '   ' → logprob: -14.000263214111328
    5. ' ' → logprob: -16.875263214111328
    6. '  ' → logprob: -16.875263214111328
    7. 'bf' → logprob: -17.250263214111328
    8. 'f' → logprob: -17.500263214111328
    9. '(b' → logprob: -17.500263214111328
    10. 'bs' → logprob: -18.000263214111328

Token 458: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0015345009742304683
    2. '(v' → logprob: -6.501534461975098
    3. '(' → logprob: -10.376534461975098
    4. 'v' → logprob: -14.876534461975098
    5. 'u' → logprob: -14.876534461975098
    6. '(s' → logprob: -16.001535415649414
    7. '(
' → logprob: -16.501535415649414
    8. '(g' → logprob: -17.126535415649414
    9. '(n' → logprob: -17.501535415649414
    10. '[u' → logprob: -17.876535415649414

Token 459: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.048633236438035965
    2. ' -' → logprob: -3.048633337020874
    3. ',' → logprob: -11.173633575439453
    4. ' ' → logprob: -11.423633575439453
    5. '   ' → logprob: -11.548633575439453
    6. '[' → logprob: -12.673633575439453
    7. '1' → logprob: -13.048633575439453
    8. '```' → logprob: -13.298633575439453
    9. '0' → logprob: -13.923633575439453
    10. ' ,' → logprob: -14.423633575439453

Token 460: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -11.875007629394531
    3. ')' → logprob: -15.125007629394531
    4. ',' → logprob: -15.625007629394531
    5. '```' → logprob: -17.50000762939453
    6. '2' → logprob: -17.62500762939453
    7. '
' → logprob: -18.18750762939453
    8. '   ' → logprob: -18.75000762939453
    9. '۱' → logprob: -18.81250762939453
    10. '

' → logprob: -19.18750762939453

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030709904967807233
    2. ',n' → logprob: -8.625307083129883
    3. ' ,' → logprob: -9.000307083129883
    4. ',v' → logprob: -13.000307083129883
    5. ',g' → logprob: -14.250307083129883
    6. '   ' → logprob: -14.500307083129883
    7. ')' → logprob: -14.500307083129883
    8. '	' → logprob: -16.750307083129883
    9. ',
' → logprob: -17.000307083129883
    10. '0' → logprob: -17.250307083129883

Token 462: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.165027217415627e-05
    2. ' n' → logprob: -10.750021934509277
    3. '	n' → logprob: -16.50002098083496
    4. ')n' → logprob: -17.87502098083496
    5. '   ' → logprob: -19.12502098083496
    6. 'len' → logprob: -19.75002098083496
    7. ')' → logprob: -21.75002098083496
    8. ',n' → logprob: -22.12502098083496
    9. '_n' → logprob: -22.50002098083496
    10. '<n' → logprob: -22.75002098083496

Token 463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.97155623533763e-05
    2. ',g' → logprob: -9.625089645385742
    3. ' ,' → logprob: -10.750089645385742
    4. 'g' → logprob: -13.375089645385742
    5. ')' → logprob: -14.750089645385742
    6. '   ' → logprob: -16.250089645385742
    7. ',
' → logprob: -16.500089645385742
    8. '```' → logprob: -17.000089645385742
    9. ' g' → logprob: -17.625089645385742
    10. ' ' → logprob: -18.750089645385742

Token 464: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -7.941850526549388e-06
    2. ' g' → logprob: -11.750007629394531
    3. ')' → logprob: -17.62500762939453
    4. '   ' → logprob: -18.50000762939453
    5. '	g' → logprob: -19.25000762939453
    6. '(g' → logprob: -19.50000762939453
    7. '_g' → logprob: -19.75000762939453
    8. '[g' → logprob: -20.37500762939453
    9. 'b' → logprob: -20.75000762939453
    10. '#g' → logprob: -21.12500762939453

Token 465: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0045961495488882065
    2. ')
' → logprob: -5.50459623336792
    3. '1' → logprob: -7.62959623336792
    4. ')
' → logprob: -11.129595756530762
    5. ')

' → logprob: -11.629595756530762
    6. ' )' → logprob: -12.254595756530762
    7. ')#' → logprob: -13.754595756530762
    8. '   ' → logprob: -14.754595756530762
    9. ')`' → logprob: -14.879595756530762
    10. ')v' → logprob: -15.254595756530762

Token 466: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.019040998071432114
    2. '   ' → logprob: -4.019041061401367
    3. ' dist' → logprob: -7.644041061401367
    4. 'd' → logprob: -8.269041061401367
    5. 'distance' → logprob: -10.269041061401367
    6. '	dist' → logprob: -10.519041061401367
    7. 'rev' → logprob: -11.144041061401367
    8. 'b' → logprob: -11.644041061401367
    9. 'depth' → logprob: -11.769041061401367
    10. 'dv' → logprob: -11.769041061401367

Token 467: ' path' (ID: 3104)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00067323591792956
    2. 'd' → logprob: -7.875673294067383
    3. '   ' → logprob: -9.625673294067383
    4. ' dist' → logprob: -10.000673294067383
    5. 'b' → logprob: -10.500673294067383
    6. 'dis' → logprob: -11.250673294067383
    7. '#' → logprob: -11.375673294067383
    8. 'print' → logprob: -11.500673294067383
    9. 'res' → logprob: -11.500673294067383
    10. 'rev' → logprob: -11.500673294067383

Token 468: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1430126577615738
    2. '=' → logprob: -2.018012762069702
    3. '_' → logprob: -9.018013000488281
    4. 's' → logprob: -10.143013000488281
    5. 'dist' → logprob: -10.143013000488281
    6. '=[]' → logprob: -10.518013000488281
    7. '_length' → logprob: -10.893013000488281
    8. '_len' → logprob: -10.893013000488281
    9. ',' → logprob: -11.518013000488281
    10. 'length' → logprob: -12.018013000488281

Token 469: ' [' (ID: 723)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.825481116771698
    2. '[]' → logprob: -1.3254811763763428
    3. '[u' → logprob: -1.5754811763763428
    4. '[]
' → logprob: -2.8254811763763428
    5. '[' → logprob: -3.7004811763763428
    6. '[b' → logprob: -5.950480937957764
    7. 'deque' → logprob: -6.075480937957764
    8. '[d' → logprob: -9.450481414794922
    9. '[n' → logprob: -9.450481414794922
    10. '[]

' → logprob: -9.575481414794922

Token 470: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.043393753468990326
    2. 'u' → logprob: -3.168393850326538
    3. 'dist' → logprob: -8.293394088745117
    4. '(v' → logprob: -10.293394088745117
    5. ']' → logprob: -10.668394088745117
    6. '0' → logprob: -10.918394088745117
    7. 'ab' → logprob: -11.293394088745117
    8. ' v' → logprob: -11.793394088745117
    9. '[v' → logprob: -11.793394088745117
    10. '(u' → logprob: -12.043394088745117

Token 471: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010341187007725239
    2. ' -' → logprob: -6.876034259796143
    3. '   ' → logprob: -15.251033782958984
    4. ']' → logprob: -15.251033782958984
    5. '()-' → logprob: -15.501033782958984
    6. ' ' → logprob: -16.001033782958984
    7. '1' → logprob: -16.001033782958984
    8. ')' → logprob: -16.001033782958984
    9. '[' → logprob: -16.376033782958984
    10. '-
' → logprob: -16.376033782958984

Token 472: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.625001907348633
    3. '2' → logprob: -16.375001907348633
    4. '   ' → logprob: -16.500001907348633
    5. '-' → logprob: -17.500001907348633
    6. '```' → logprob: -17.500001907348633
    7. ']' → logprob: -18.437501907348633
    8. ')' → logprob: -18.625001907348633
    9. '
' → logprob: -19.562501907348633
    10. '۱' → logprob: -20.000001907348633

Token 473: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006694287294521928
    2. ']
' → logprob: -7.375669479370117
    3. ' ]' → logprob: -10.375669479370117
    4. ']

' → logprob: -12.500669479370117
    5. ')' → logprob: -12.625669479370117
    6. ']
' → logprob: -12.625669479370117
    7. ')]' → logprob: -14.375669479370117
    8. ',' → logprob: -15.375669479370117
    9. '];' → logprob: -16.125669479370117
    10. '()]' → logprob: -16.500669479370117

Token 474: '   ' (ID: 271)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -1.0940755605697632
    2. ' while' → logprob: -1.2190755605697632
    3. 'while' → logprob: -1.2190755605697632
    4. 'current' → logprob: -3.3440756797790527
    5. '[curr' → logprob: -4.469075679779053
    6. ' curr' → logprob: -4.844075679779053
    7. ' current' → logprob: -5.594075679779053
    8. '
' → logprob: -5.719075679779053
    9. ',' → logprob: -5.844075679779053
    10. 'x' → logprob: -6.469075679779053

Token 475: ' q' (ID: 2335)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09380676597356796
    2. 'curr' → logprob: -2.593806743621826
    3. 'current' → logprob: -4.468806743621826
    4. ' while' → logprob: -5.968806743621826
    5. 'cur' → logprob: -7.468806743621826
    6. 'prev' → logprob: -9.843807220458984
    7. '
' → logprob: -9.968807220458984
    8. 'p' → logprob: -9.968807220458984
    9. ' curr' → logprob: -10.593807220458984
    10. 'last' → logprob: -11.093807220458984

Token 476: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6640964150428772
    2. '=' → logprob: -0.7890964150428772
    3. 'u' → logprob: -3.7890963554382324
    4. '=u' → logprob: -5.914096355438232
    5. 'ue' → logprob: -6.539096355438232
    6. 'v' → logprob: -7.414096355438232
    7. '=v' → logprob: -7.414096355438232
    8. 'uer' → logprob: -7.414096355438232
    9. '=q' → logprob: -7.539096355438232
    10. '=p' → logprob: -7.914096355438232

Token 477: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6039010286331177
    2. '=' → logprob: -0.9789010286331177
    3. 'ue' → logprob: -2.603900909423828
    4. 'u' → logprob: -6.603900909423828
    5. '=[]' → logprob: -7.228900909423828
    6. '2' → logprob: -7.728900909423828
    7. 'deque' → logprob: -8.103900909423828
    8. '.append' → logprob: -8.728900909423828
    9. '=u' → logprob: -9.353900909423828
    10. 'uer' → logprob: -9.353900909423828

Token 478: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.2253410518169403
    2. '[' → logprob: -2.2253410816192627
    3. '[u' → logprob: -3.3503410816192627
    4. '[v' → logprob: -3.8503410816192627
    5. 'dist' → logprob: -3.9753410816192627
    6. '[g' → logprob: -4.975340843200684
    7. 'g' → logprob: -5.600340843200684
    8. 'v' → logprob: -6.475340843200684
    9. '[path' → logprob: -6.600340843200684
    10. 'path' → logprob: -7.100340843200684

Token 479: '([' (ID: 5194)
  Prédit: '(path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.21775227785110474
    2. '()
' → logprob: -2.34275221824646
    3. '()' → logprob: -2.84275221824646
    4. '([' → logprob: -3.21775221824646
    5. 'path' → logprob: -7.217752456665039
    6. '(' → logprob: -8.967752456665039
    7. '([(' → logprob: -8.967752456665039
    8. '(q' → logprob: -9.717752456665039
    9. '()

' → logprob: -9.842752456665039
    10. '[path' → logprob: -10.092752456665039

Token 480: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4750582277774811
    2. 'path' → logprob: -0.9750581979751587
    3. '(path' → logprob: -7.475058078765869
    4. '(v' → logprob: -7.975058078765869
    5. ' path' → logprob: -10.100058555603027
    6. ' v' → logprob: -11.600058555603027
    7. '(' → logprob: -12.850058555603027
    8. 'dist' → logprob: -12.975058555603027
    9. 'u' → logprob: -13.350058555603027
    10. 'q' → logprob: -13.350058555603027

Token 481: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.12258882028982e-05
    2. ' -' → logprob: -9.75006103515625
    3. '()-' → logprob: -13.62506103515625
    4. '1' → logprob: -14.75006103515625
    5. '2' → logprob: -15.37506103515625
    6. ' ' → logprob: -15.50006103515625
    7. '[' → logprob: -15.50006103515625
    8. '])' → logprob: -16.00006103515625
    9. ')' → logprob: -16.12506103515625
    10. '   ' → logprob: -16.25006103515625

Token 482: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007142199319787323
    2. '2' → logprob: -7.250714302062988
    3. ' ' → logprob: -12.625714302062988
    4. '```' → logprob: -14.813214302062988
    5. '-' → logprob: -15.938214302062988
    6. '   ' → logprob: -16.063213348388672
    7. ')' → logprob: -17.000713348388672
    8. '۱' → logprob: -17.438213348388672
    9. ']' → logprob: -17.500713348388672
    10. '
' → logprob: -17.813213348388672

Token 483: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0620160847902298
    2. '])
' → logprob: -2.812016010284424
    3. '])
' → logprob: -10.937016487121582
    4. ' ])' → logprob: -11.062016487121582
    5. '])

' → logprob: -11.562016487121582
    6. ' ])
' → logprob: -12.937016487121582
    7. ')' → logprob: -13.562016487121582
    8. ')])' → logprob: -14.687016487121582
    9. ')
' → logprob: -14.937016487121582
    10. ']);' → logprob: -15.187016487121582

Token 484: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008417297154664993
    2. ' while' → logprob: -5.008417129516602
    3. 'while' → logprob: -6.758417129516602
    4. ')' → logprob: -8.633417129516602
    5. '	while' → logprob: -8.758417129516602
    6. '
' → logprob: -9.383417129516602
    7. '    
' → logprob: -10.133417129516602
    8. '```' → logprob: -10.133417129516602
    9. ',' → logprob: -11.383417129516602
    10. '<|end|>' → logprob: -11.508417129516602

Token 485: ' d' (ID: 272)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0681358352303505
    2. 'parent' → logprob: -2.8181357383728027
    3. 'visited' → logprob: -5.818135738372803
    4. 'prev' → logprob: -5.943135738372803
    5. 'parents' → logprob: -7.818135738372803
    6. 'found' → logprob: -9.443136215209961
    7. 'used' → logprob: -11.318136215209961
    8. '   ' → logprob: -11.443136215209961
    9. 'par' → logprob: -11.443136215209961
    10. 'came' → logprob: -11.693136215209961

Token 486: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.10610058158636093
    2. 'ef' → logprob: -2.856100559234619
    3. 'st' → logprob: -3.731100559234619
    4. 'ep' → logprob: -5.606100559234619
    5. ' =' → logprob: -5.856100559234619
    6. 'istance' → logprob: -5.981100559234619
    7. 'f' → logprob: -6.231100559234619
    8. 'p' → logprob: -6.731100559234619
    9. 'is' → logprob: -6.856100559234619
    10. 'ists' → logprob: -6.981100559234619

Token 487: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3983207046985626
    2. '{' → logprob: -1.7733206748962402
    3. '[' → logprob: -2.3983206748962402
    4. '[-' → logprob: -2.7733206748962402
    5. '{-' → logprob: -6.14832067489624
    6. '{}' → logprob: -6.89832067489624
    7. 'default' → logprob: -6.89832067489624
    8. 'dict' → logprob: -7.27332067489624
    9. '0' → logprob: -8.648321151733398
    10. '{}
' → logprob: -9.273321151733398

Token 488: '[v' (ID: 36561)
  Prédit: '[path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[path' → logprob: -0.4440753757953644
    2. '[q' → logprob: -1.569075345993042
    3. '<|end|>' → logprob: -2.944075345993042
    4. '.copy' → logprob: -3.319075345993042
    5. 'path' → logprob: -3.944075345993042
    6. 'q' → logprob: -4.069075584411621
    7. '[:]' → logprob: -4.319075584411621
    8. '
' → logprob: -5.319075584411621
    9. '[' → logprob: -6.194075584411621
    10. '[v' → logprob: -6.694075584411621

Token 489: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.5332478142227046e-05
    2. ' -' → logprob: -11.250015258789062
    3. ']' → logprob: -14.125015258789062
    4. ']-' → logprob: -14.250015258789062
    5. '1' → logprob: -15.000015258789062
    6. '2' → logprob: -15.625015258789062
    7. '()-' → logprob: -15.875015258789062
    8. '<|end|>' → logprob: -16.000015258789062
    9. '[' → logprob: -16.750015258789062
    10. '   ' → logprob: -17.000015258789062

Token 490: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.013994814362377e-05
    2. ' ' → logprob: -10.37505054473877
    3. '2' → logprob: -11.12505054473877
    4. '   ' → logprob: -13.81255054473877
    5. '```' → logprob: -13.87505054473877
    6. '-' → logprob: -14.37505054473877
    7. ']' → logprob: -15.56255054473877
    8. ')' → logprob: -16.437549591064453
    9. ',' → logprob: -16.500049591064453
    10. '       ' → logprob: -16.687549591064453

Token 491: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01078062690794468
    2. ']
' → logprob: -4.6357808113098145
    3. '])' → logprob: -7.0107808113098145
    4. ' ]' → logprob: -9.885780334472656
    5. ')' → logprob: -10.635780334472656
    6. ')]' → logprob: -11.135780334472656
    7. '])
' → logprob: -11.385780334472656
    8. ']-' → logprob: -12.385780334472656
    9. ']
' → logprob: -12.510780334472656
    10. ']>' → logprob: -12.635780334472656

Token 492: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.374129980802536
    2. '-' → logprob: -1.3741300106048584
    3. '+' → logprob: -3.4991300106048584
    4. '<|end|>' → logprob: -4.124129772186279
    5. 'while' → logprob: -5.249129772186279
    6. ')' → logprob: -5.624129772186279
    7. ' while' → logprob: -6.874129772186279
    8. ' -' → logprob: -7.499129772186279
    9. '   ' → logprob: -7.749129772186279
    10. ' 
' → logprob: -8.124130249023438

Token 493: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003721622342709452
    2. ' ' → logprob: -8.375371932983398
    3. '0' → logprob: -9.250371932983398
    4. 'dist' → logprob: -10.125371932983398
    5. '2' → logprob: -13.125371932983398
    6. ' dist' → logprob: -13.625371932983398
    7. '   ' → logprob: -14.000371932983398
    8. 'b' → logprob: -15.625371932983398
    9. '...' → logprob: -15.875371932983398
    10. '
' → logprob: -16.1253719329834

Token 494: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010652327910065651
    2. 'dist' → logprob: -9.250106811523438
    3. ' ' → logprob: -11.625106811523438
    4. '0' → logprob: -14.500106811523438
    5. '   ' → logprob: -14.625106811523438
    6. '2' → logprob: -15.875106811523438
    7. ' dist' → logprob: -16.250106811523438
    8. 'b' → logprob: -16.375106811523438
    9. '
' → logprob: -16.875106811523438
    10. 'd' → logprob: -17.375106811523438

Token 495: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16381867229938507
    2. 'while' → logprob: -1.9138187170028687
    3. ' while' → logprob: -5.663818836212158
    4. ')' → logprob: -9.413818359375
    5. '
' → logprob: -10.788818359375
    6. '	while' → logprob: -11.538818359375
    7. '```' → logprob: -13.163818359375
    8. '    
' → logprob: -13.538818359375
    9. 'for' → logprob: -14.038818359375
    10. ',' → logprob: -14.288818359375

Token 496: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.30680742859840393
    2. ' while' → logprob: -1.6818073987960815
    3. '   ' → logprob: -2.556807518005371
    4. '	while' → logprob: -7.806807518005371
    5. ')' → logprob: -8.806807518005371
    6. '
' → logprob: -10.806807518005371
    7. ',' → logprob: -11.806807518005371
    8. '```' → logprob: -12.056807518005371
    9. '    
' → logprob: -12.181807518005371
    10. 'prev' → logprob: -12.181807518005371

Token 497: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00684585003182292
    2. ' while' → logprob: -5.006845951080322
    3. '   ' → logprob: -9.381845474243164
    4. 'prev' → logprob: -10.256845474243164
    5. 'for' → logprob: -12.006845474243164
    6. '	while' → logprob: -12.881845474243164
    7. 'curr' → logprob: -13.881845474243164
    8. '```' → logprob: -15.256845474243164
    9. 'p' → logprob: -15.631845474243164
    10. 'parent' → logprob: -15.631845474243164

Token 498: ' q' (ID: 2335)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07326378673315048
    2. 'q' → logprob: -2.8232638835906982
    3. 'len' → logprob: -5.198263645172119
    4. ' d' → logprob: -5.448263645172119
    5. ' q' → logprob: -6.948263645172119
    6. 'path' → logprob: -8.573264122009277
    7. ' len' → logprob: -8.698264122009277
    8. ' path' → logprob: -10.573264122009277
    9. 'queue' → logprob: -11.323264122009277
    10. 'dist' → logprob: -11.323264122009277

Token 499: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. '```' → logprob: -13.50000286102295
    3. '_' → logprob: -15.06250286102295
    4. '
' → logprob: -15.25000286102295
    5. '۲' → logprob: -15.81250286102295
    6. '₂' → logprob: -16.125001907348633
    7. '[' → logprob: -16.687501907348633
    8. '.append' → logprob: -16.750001907348633
    9. '' → logprob: -16.875001907348633
    10. '２' → logprob: -16.937501907348633

Token 500: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001597460824996233
    2. ' and' → logprob: -6.8765974044799805
    3. ':
' → logprob: -7.8765974044799805
    4. 'and' → logprob: -9.12659740447998
    5. '.pop' → logprob: -10.50159740447998
    6. '[' → logprob: -11.12659740447998
    7. '):' → logprob: -11.50159740447998
    8. '():' → logprob: -11.75159740447998
    9. '>:' → logprob: -13.00159740447998
    10. 'pop' → logprob: -13.12659740447998

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031254932284355164
    2. '   ' → logprob: -3.656255006790161
    3. 'curr' → logprob: -5.781254768371582
    4. ' curr' → logprob: -6.906254768371582
    5. '```' → logprob: -8.531254768371582
    6. '	curr' → logprob: -9.031254768371582
    7. 'current' → logprob: -9.281254768371582
    8. ' current' → logprob: -9.406254768371582
    9. '[curr' → logprob: -9.406254768371582
    10. '    ' → logprob: -9.906254768371582

Token 502: ' at' (ID: 540)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.030974026769399643
    2. 'cur' → logprob: -3.5309739112854004
    3. 'x' → logprob: -7.9059739112854
    4. 'current' → logprob: -8.155974388122559
    5. 'node' → logprob: -8.280974388122559
    6. 'c' → logprob: -8.655974388122559
    7. ' curr' → logprob: -9.030974388122559
    8. 'cu' → logprob: -11.780974388122559
    9. '   ' → logprob: -12.030974388122559
    10. 'pos' → logprob: -13.655974388122559

Token 503: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03372212126851082
    2. ' =' → logprob: -3.408722162246704
    3. '=q' → logprob: -10.283721923828125
    4. '.pop' → logprob: -11.533721923828125
    5. '.append' → logprob: -11.533721923828125
    6. ' ' → logprob: -11.783721923828125
    7. '.=' → logprob: -11.908721923828125
    8. '.' → logprob: -12.408721923828125
    9. 'q' → logprob: -14.033721923828125
    10. '	' → logprob: -14.783721923828125

Token 504: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00011105302110081539
    2. ' q' → logprob: -9.125110626220703
    3. 'path' → logprob: -13.250110626220703
    4. 'queue' → logprob: -15.250110626220703
    5. '	q' → logprob: -18.500110626220703
    6. ' path' → logprob: -19.500110626220703
    7. '[q' → logprob: -19.625110626220703
    8. 'deque' → logprob: -19.750110626220703
    9. 'd' → logprob: -20.000110626220703
    10. 'None' → logprob: -20.500110626220703

Token 505: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.180258191714529e-06
    2. '.pop' → logprob: -12.875008583068848
    3. 'p' → logprob: -13.375008583068848
    4. '.p' → logprob: -13.875008583068848
    5. '.append' → logprob: -14.562508583068848
    6. '```' → logprob: -14.562508583068848
    7. 'pop' → logprob: -15.000008583068848
    8. 'q' → logprob: -15.125008583068848
    9. '
' → logprob: -15.187508583068848
    10. '[' → logprob: -15.437508583068848

Token 506: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.005400122608989477
    2. '.p' → logprob: -5.50540018081665
    3. 'pop' → logprob: -7.38040018081665
    4. '.' → logprob: -7.50540018081665
    5. '[-' → logprob: -8.880399703979492
    6. '.append' → logprob: -13.130399703979492
    7. ' .' → logprob: -13.255399703979492
    8. 'p' → logprob: -13.380399703979492
    9. '   ' → logprob: -13.630399703979492
    10. '.
' → logprob: -14.380399703979492

Token 507: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06011435016989708
    2. '()
' → logprob: -2.9351143836975098
    3. '()' → logprob: -5.93511438369751
    4. 'for' → logprob: -6.31011438369751
    5. '
' → logprob: -8.185113906860352
    6. ' for' → logprob: -8.435113906860352
    7. '   ' → logprob: -9.560113906860352
    8. 'while' → logprob: -10.060113906860352
    9. 'if' → logprob: -10.685113906860352
    10. ')
' → logprob: -10.935113906860352

Token 508: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10093507915735245
    2. 'for' → logprob: -2.3509349822998047
    3. '   ' → logprob: -7.725934982299805
    4. ' for' → logprob: -8.850934982299805
    5. 'found' → logprob: -9.225934982299805
    6. 'if' → logprob: -10.225934982299805
    7. '	for' → logprob: -11.975934982299805
    8. ' found' → logprob: -14.350934982299805
    9. '           ' → logprob: -14.600934982299805
    10. 'next' → logprob: -15.350934982299805

Token 509: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0026502134278416634
    2. 'found' → logprob: -6.002650260925293
    3. '       ' → logprob: -8.752650260925293
    4. '   ' → logprob: -11.252650260925293
    5. 'if' → logprob: -13.127650260925293
    6. '	for' → logprob: -14.377650260925293
    7. ' for' → logprob: -14.627650260925293
    8. 'Found' → logprob: -15.127650260925293
    9. 'flag' → logprob: -16.502649307250977
    10. '	found' → logprob: -17.502649307250977

Token 510: ' nt' (ID: 7646)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.7280815839767456
    2. 'nx' → logprob: -1.1030815839767456
    3. 'n' → logprob: -2.478081703186035
    4. 'x' → logprob: -2.728081703186035
    5. 'to' → logprob: -4.353081703186035
    6. 'nei' → logprob: -4.478081703186035
    7. 'w' → logprob: -5.603081703186035
    8. 'i' → logprob: -6.603081703186035
    9. 'nbr' → logprob: -6.603081703186035
    10. 'node' → logprob: -6.978081703186035

Token 511: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2520233988761902
    2. 'in' → logprob: -1.502023458480835
    3. 'n' → logprob: -9.752023696899414
    4. ' ' → logprob: -11.252023696899414
    5. 's' → logprob: -12.502023696899414
    6. 'e' → logprob: -12.877023696899414
    7. 'i' → logprob: -12.877023696899414
    8. '	in' → logprob: -13.502023696899414
    9. 'x' → logprob: -13.752023696899414
    10. ' ' → logprob: -13.752023696899414

Token 512: ' range' (ID: 3352)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00011915886716451496
    2. ' g' → logprob: -9.12511920928955
    3. 'range' → logprob: -11.75011920928955
    4. '	g' → logprob: -13.75011920928955
    5. 'graph' → logprob: -14.50011920928955
    6. '   ' → logprob: -14.62511920928955
    7. ' range' → logprob: -16.125118255615234
    8. '[g' → logprob: -16.625118255615234
    9. ' ' → logprob: -16.875118255615234
    10. '(g' → logprob: -17.500118255615234

Token 513: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.10020732134580612
    2. 'len' → logprob: -2.3502073287963867
    3. ' len' → logprob: -14.350207328796387
    4. '[len' → logprob: -16.60020637512207
    5. '	len' → logprob: -16.85020637512207
    6. '(' → logprob: -17.85020637512207
    7. '<len' → logprob: -18.10020637512207
    8. ',len' → logprob: -18.10020637512207
    9. '=len' → logprob: -18.47520637512207
    10. '   ' → logprob: -19.47520637512207

Token 514: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -2.045823566731997e-05
    2. '(graph' → logprob: -11.125020027160645
    3. 'g' → logprob: -12.125020027160645
    4. '(' → logprob: -16.62502098083496
    5. 'graph' → logprob: -17.12502098083496
    6. ')' → logprob: -18.50002098083496
    7. ' g' → logprob: -18.50002098083496
    8. '	g' → logprob: -18.87502098083496
    9. '[g' → logprob: -18.87502098083496
    10. '(
' → logprob: -19.00002098083496

Token 515: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.273621405242011e-05
    2. 'at' → logprob: -10.375032424926758
    3. '(at' → logprob: -14.625032424926758
    4. ' at' → logprob: -15.250032424926758
    5. ' [' → logprob: -15.625032424926758
    6. '	at' → logprob: -15.875032424926758
    7. 'At' → logprob: -16.125032424926758
    8. '```' → logprob: -16.125032424926758
    9. '[a' → logprob: -16.500032424926758
    10. '   ' → logprob: -16.625032424926758

Token 516: 'at' (ID: 266)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06997223198413849
    2. 'at' → logprob: -2.694972276687622
    3. 'g' → logprob: -11.444972038269043
    4. '(at' → logprob: -11.694972038269043
    5. ' at' → logprob: -11.944972038269043
    6. '	at' → logprob: -12.694972038269043
    7. '   ' → logprob: -12.819972038269043
    8. ' [' → logprob: -13.444972038269043
    9. 'a' → logprob: -14.444972038269043
    10. '
' → logprob: -14.569972038269043

Token 517: '])):
' (ID: 145266)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.982598602771759
    2. ']))' → logprob: -1.1075985431671143
    3. '])):
' → logprob: -1.2325985431671143
    4. ')):' → logprob: -6.357598781585693
    5. ']' → logprob: -6.857598781585693
    6. ']):' → logprob: -8.357598304748535
    7. ')):
' → logprob: -8.357598304748535
    8. '(at' → logprob: -9.107598304748535
    9. 'at' → logprob: -9.107598304748535
    10. '))' → logprob: -9.107598304748535

Token 518: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05650996416807175
    2. '           ' → logprob: -3.9315099716186523
    3. ':
' → logprob: -4.681509971618652
    4. ':' → logprob: -5.056509971618652
    5. '):
' → logprob: -5.306509971618652
    6. '   ' → logprob: -5.431509971618652
    7. '	       ' → logprob: -6.056509971618652
    8. '):' → logprob: -6.181509971618652
    9. '	   ' → logprob: -6.806509971618652
    10. ')' → logprob: -7.181509971618652

Token 519: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4329792261123657
    2. 'nx' → logprob: -1.1829792261123657
    3. 'ne' → logprob: -4.557979106903076
    4. 'to' → logprob: -4.557979106903076
    5. 'next' → logprob: -5.307979106903076
    6. ' nxt' → logprob: -5.557979106903076
    7. 'nei' → logprob: -5.557979106903076
    8. '   ' → logprob: -5.932979106903076
    9. 'nbr' → logprob: -5.932979106903076
    10. ' nex' → logprob: -6.932979106903076

Token 520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740920662879944
    2. ' =' → logprob: -0.9740920662879944
    3. '   ' → logprob: -12.099092483520508
    4. '=g' → logprob: -12.349092483520508
    5. 'n' → logprob: -13.599092483520508
    6. '    ' → logprob: -13.974092483520508
    7. '=n' → logprob: -14.599092483520508
    8. ' ' → logprob: -14.599092483520508
    9. 'g' → logprob: -15.224092483520508
    10. '_=' → logprob: -15.224092483520508

Token 521: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0003368926409166306
    2. ' g' → logprob: -8.000336647033691
    3. '   ' → logprob: -13.500336647033691
    4. '	g' → logprob: -18.125337600708008
    5. ' ' → logprob: -18.875337600708008
    6. '_g' → logprob: -19.750337600708008
    7. '  ' → logprob: -20.000337600708008
    8. '(g' → logprob: -20.125337600708008
    9. '    ' → logprob: -20.500337600708008
    10. '[g' → logprob: -21.125337600708008

Token 522: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.318681188422488e-05
    2. 'at' → logprob: -11.25001335144043
    3. 'At' → logprob: -17.00001335144043
    4. '[
' → logprob: -17.37501335144043
    5. ' at' → logprob: -17.62501335144043
    6. ' [' → logprob: -17.87501335144043
    7. 'g' → logprob: -18.00001335144043
    8. '```' → logprob: -18.12501335144043
    9. '   ' → logprob: -18.62501335144043
    10. '	at' → logprob: -18.87501335144043

Token 523: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0040807779878377914
    2. '[' → logprob: -5.504080772399902
    3. ' at' → logprob: -13.254080772399902
    4. '	at' → logprob: -14.504080772399902
    5. '(at' → logprob: -17.75408172607422
    6. '   ' → logprob: -18.00408172607422
    7. '```' → logprob: -18.50408172607422
    8. 'At' → logprob: -18.75408172607422
    9. 'ат' → logprob: -18.87908172607422
    10. '.at' → logprob: -19.25408172607422

Token 524: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.682846287731081e-05
    2. 'at' → logprob: -9.875066757202148
    3. '][' → logprob: -11.125066757202148
    4. '[
' → logprob: -15.875066757202148
    5. ' [' → logprob: -15.875066757202148
    6. ')[' → logprob: -16.62506675720215
    7. ']' → logprob: -16.62506675720215
    8. '   ' → logprob: -16.87506675720215
    9. 'At' → logprob: -16.87506675720215
    10. '```' → logprob: -17.37506675720215

Token 525: 'nt' (ID: 578)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.2233183042553719e-05
    2. '[' → logprob: -11.875012397766113
    3. ' at' → logprob: -12.250012397766113
    4. '	at' → logprob: -15.375012397766113
    5. 'nt' → logprob: -15.875012397766113
    6. '(at' → logprob: -17.000011444091797
    7. '   ' → logprob: -18.625011444091797
    8. ']' → logprob: -18.875011444091797
    9. 'ат' → logprob: -19.000011444091797
    10. 'n' → logprob: -19.375011444091797

Token 526: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14747273921966553
    2. ']
' → logprob: -2.147472858428955
    3. '           ' → logprob: -4.897472858428955
    4. ')' → logprob: -5.147472858428955
    5. '])' → logprob: -5.272472858428955
    6. ')]' → logprob: -7.397472858428955
    7. ')
' → logprob: -7.647472858428955
    8. '       ' → logprob: -7.772472858428955
    9. '])
' → logprob: -8.272472381591797
    10. ']
' → logprob: -9.772472381591797

Token 527: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026164439041167498
    2. ' if' → logprob: -6.1276164054870605
    3. 'if' → logprob: -8.252616882324219
    4. '       ' → logprob: -9.002616882324219
    5. '	       ' → logprob: -11.377616882324219
    6. '   ' → logprob: -12.002616882324219
    7. ',' → logprob: -12.127616882324219
    8. '<|end|>' → logprob: -12.127616882324219
    9. '		' → logprob: -12.252616882324219
    10. '               ' → logprob: -12.377616882324219

Token 528: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0052618607878685
    2. '           ' → logprob: -5.2552618980407715
    3. ' if' → logprob: -10.505261421203613
    4. '	if' → logprob: -15.005261421203613
    5. '               ' → logprob: -15.630261421203613
    6. '   ' → logprob: -15.755261421203613
    7. '       ' → logprob: -16.63026237487793
    8. '	       ' → logprob: -16.63026237487793
    9. 'If' → logprob: -17.00526237487793
    10. '		' → logprob: -18.00526237487793

Token 529: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.961759259458631e-06
    2. 'd' → logprob: -12.750004768371582
    3. ' dist' → logprob: -14.000004768371582
    4. '	dist' → logprob: -14.875004768371582
    5. 'visited' → logprob: -15.750004768371582
    6. '(dist' → logprob: -15.875004768371582
    7. 'n' → logprob: -16.0000057220459
    8. 'distance' → logprob: -16.1250057220459
    9. 'not' → logprob: -16.1250057220459
    10. '   ' → logprob: -16.3750057220459

Token 530: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00019293125660624355
    2. '[' → logprob: -8.625192642211914
    3. 'n' → logprob: -12.000192642211914
    4. '[x' → logprob: -12.375192642211914
    5. '[next' → logprob: -13.875192642211914
    6. ' [' → logprob: -14.250192642211914
    7. ']' → logprob: -15.500192642211914
    8. '][' → logprob: -15.750192642211914
    9. '   ' → logprob: -15.875192642211914
    10. '	n' → logprob: -16.250192642211914

Token 531: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.001158438972197473
    2. 'x' → logprob: -7.001158237457275
    3. 't' → logprob: -8.376158714294434
    4. '[' → logprob: -12.376158714294434
    5. 'n' → logprob: -12.376158714294434
    6. '[n' → logprob: -13.001158714294434
    7. '```' → logprob: -13.376158714294434
    8. '[t' → logprob: -13.501158714294434
    9. '[x' → logprob: -13.876158714294434
    10. 'ext' → logprob: -14.626158714294434

Token 532: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1002994030714035
    2. ' ==' → logprob: -2.35029935836792
    3. '!=' → logprob: -9.725299835205078
    4. ']==' → logprob: -10.975299835205078
    5. '=' → logprob: -12.100299835205078
    6. '+' → logprob: -13.100299835205078
    7. ')==' → logprob: -13.350299835205078
    8. ' !=' → logprob: -13.475299835205078
    9. ' ' → logprob: -14.100299835205078
    10. '()==' → logprob: -14.100299835205078

Token 533: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008678389713168144
    2. ' ==' → logprob: -4.758678436279297
    3. '=' → logprob: -9.883678436279297
    4. '!=' → logprob: -11.758678436279297
    5. '+' → logprob: -13.133678436279297
    6. '==
' → logprob: -13.383678436279297
    7. ']==' → logprob: -15.133678436279297
    8. '<' → logprob: -15.258678436279297
    9. '===' → logprob: -15.633678436279297
    10. '>=' → logprob: -16.008678436279297

Token 534: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.306760805164231e-05
    2. ' d' → logprob: -11.50001335144043
    3. '   ' → logprob: -13.75001335144043
    4. '	d' → logprob: -13.87501335144043
    5. '           ' → logprob: -15.25001335144043
    6. 'dist' → logprob: -15.62501335144043
    7. ' ' → logprob: -16.37501335144043
    8. '    ' → logprob: -16.62501335144043
    9. '       ' → logprob: -16.62501335144043
    10. '     ' → logprob: -17.00001335144043

Token 535: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11874648928642273
    2. ' and' → logprob: -2.243746519088745
    3. ':
' → logprob: -5.868746280670166
    4. 'and' → logprob: -5.993746280670166
    5. ' :' → logprob: -7.618746280670166
    6. '):' → logprob: -11.118746757507324
    7. '               ' → logprob: -11.118746757507324
    8. '           ' → logprob: -11.493746757507324
    9. ' :
' → logprob: -11.743746757507324
    10. '<|end|>' → logprob: -11.743746757507324

Token 536: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0517997071146965
    2. ' path' → logprob: -3.426799774169922
    3. 'path' → logprob: -4.051799774169922
    4. '           ' → logprob: -8.051799774169922
    5. ' q' → logprob: -9.551799774169922
    6. 'q' → logprob: -10.301799774169922
    7. '                   ' → logprob: -10.676799774169922
    8. ' and' → logprob: -10.801799774169922
    9. '```' → logprob: -10.926799774169922
    10. ' if' → logprob: -11.301799774169922

Token 537: ' d' (ID: 272)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.010911519639194012
    2. 'q' → logprob: -5.135911464691162
    3. '               ' → logprob: -6.260911464691162
    4. '           ' → logprob: -6.510911464691162
    5. ' path' → logprob: -7.010911464691162
    6. '   ' → logprob: -7.885911464691162
    7. 'if' → logprob: -9.01091194152832
    8. '       ' → logprob: -9.63591194152832
    9. '                   ' → logprob: -9.88591194152832
    10. ' q' → logprob: -10.76091194152832

Token 538: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.26392683386802673
    2. '-=' → logprob: -1.5139268636703491
    3. '=' → logprob: -5.013926982879639
    4. ' =' → logprob: -5.263926982879639
    5. '-' → logprob: -9.38892650604248
    6. ' +=' → logprob: -11.76392650604248
    7. '+=' → logprob: -12.13892650604248
    8. ',' → logprob: -12.26392650604248
    9. '=-' → logprob: -13.26392650604248
    10. ' ==' → logprob: -13.76392650604248

Token 539: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -20.125001907348633
    4. '   ' → logprob: -20.750001907348633
    5. '<|end|>' → logprob: -21.750001907348633
    6. '۱' → logprob: -22.750001907348633
    7. '```' → logprob: -23.125001907348633
    8. '0' → logprob: -23.250001907348633
    9. '１' → logprob: -23.750001907348633
    10. '2' → logprob: -24.000001907348633

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '<|end|>' → logprob: -17.625
    4. '   ' → logprob: -19.625
    5. '```' → logprob: -19.875
    6. '           ' → logprob: -21.0
    7. '۱' → logprob: -21.5625
    8. '<|end|>' → logprob: -21.75
    9. '
' → logprob: -21.875
    10. '2' → logprob: -22.25

Token 541: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013503533555194736
    2. 'q' → logprob: -6.876350402832031
    3. ' q' → logprob: -8.876350402832031
    4. '       ' → logprob: -9.626350402832031
    5. '			' → logprob: -10.251350402832031
    6. '           ' → logprob: -10.376350402832031
    7. 'path' → logprob: -11.376350402832031
    8. '                   ' → logprob: -11.751350402832031
    9. '   ' → logprob: -12.501350402832031
    10. 'queue' → logprob: -12.626350402832031

Token 542: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022838378790766
    2. 'path' → logprob: -7.502284049987793
    3. ' q' → logprob: -7.502284049987793
    4. ' path' → logprob: -7.752284049987793
    5. 'q' → logprob: -8.002284049987793
    6. '       ' → logprob: -8.002284049987793
    7. '           ' → logprob: -10.627284049987793
    8. '                   ' → logprob: -11.502284049987793
    9. '              ' → logprob: -12.127284049987793
    10. ',' → logprob: -12.127284049987793

Token 543: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.027841005474328995
    2. 'q' → logprob: -3.777841091156006
    3. ' path' → logprob: -6.527841091156006
    4. '           ' → logprob: -6.652841091156006
    5. '       ' → logprob: -7.027841091156006
    6. '               ' → logprob: -7.152841091156006
    7. ' q' → logprob: -9.027840614318848
    8. '   ' → logprob: -10.402840614318848
    9. 'queue' → logprob: -12.652840614318848
    10. '                   ' → logprob: -13.277840614318848

Token 544: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00018887832993641496
    2. '.' → logprob: -8.625188827514648
    3. '.insert' → logprob: -12.000188827514648
    4. ' .' → logprob: -13.375188827514648
    5. '.app' → logprob: -13.750188827514648
    6. '.extend' → logprob: -15.000188827514648
    7. 'append' → logprob: -15.750188827514648
    8. '.pop' → logprob: -16.87518882751465
    9. '.ap' → logprob: -17.12518882751465
    10. '.push' → logprob: -17.12518882751465

Token 545: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.5954712075181305e-05
    2. '(' → logprob: -10.250036239624023
    3. '(
' → logprob: -15.125036239624023
    4. 'n' → logprob: -15.125036239624023
    5. '(x' → logprob: -18.875036239624023
    6. '(nx' → logprob: -19.000036239624023
    7. ' (' → logprob: -19.750036239624023
    8. '(next' → logprob: -19.875036239624023
    9. '((' → logprob: -20.250036239624023
    10. '(

' → logprob: -21.000036239624023

Token 546: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -3.650518920039758e-06
    2. 't' → logprob: -13.000003814697266
    3. 'x' → logprob: -13.625003814697266
    4. '[' → logprob: -16.125003814697266
    5. 'ext' → logprob: -17.875003814697266
    6. '```' → logprob: -18.125003814697266
    7. '[t' → logprob: -18.500003814697266
    8. '(t' → logprob: -18.625003814697266
    9. ')' → logprob: -19.625003814697266
    10. '(' → logprob: -19.875003814697266

Token 547: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3347375988960266
    2. ')' → logprob: -1.9597375392913818
    3. ')
' → logprob: -1.9597375392913818
    4. '       ' → logprob: -6.709737777709961
    5. '
' → logprob: -7.709737777709961
    6. '<|end|>' → logprob: -7.709737777709961
    7. '           ' → logprob: -8.084737777709961
    8. '                   ' → logprob: -9.209737777709961
    9. '),' → logprob: -10.709737777709961
    10. ')
' → logprob: -10.959737777709961

Token 548: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00032628714689053595
    2. '       ' → logprob: -8.250326156616211
    3. '           ' → logprob: -10.875326156616211
    4. '                   ' → logprob: -11.250326156616211
    5. '<|end|>' → logprob: -11.500326156616211
    6. '                       ' → logprob: -11.750326156616211
    7. '			' → logprob: -12.875326156616211
    8. '   ' → logprob: -13.000326156616211
    9. '              ' → logprob: -13.375326156616211
    10. 'q' → logprob: -13.625326156616211

Token 549: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.00027694785967469215
    2. '               ' → logprob: -9.000276565551758
    3. ' q' → logprob: -9.750276565551758
    4. '           ' → logprob: -10.000276565551758
    5. '       ' → logprob: -10.375276565551758
    6. '   ' → logprob: -11.500276565551758
    7. 'break' → logprob: -12.500276565551758
    8. '                   ' → logprob: -13.000276565551758
    9. 'queue' → logprob: -13.250276565551758
    10. '	q' → logprob: -14.875276565551758

Token 550: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. '.append' → logprob: -13.250001907348633
    3. '```' → logprob: -17.125001907348633
    4. 'append' → logprob: -17.375001907348633
    5. '_' → logprob: -17.625001907348633
    6. 'q' → logprob: -18.000001907348633
    7. '₂' → logprob: -18.500001907348633
    8. '.push' → logprob: -18.625001907348633
    9. 'queue' → logprob: -19.250001907348633
    10. '۲' → logprob: -19.625001907348633

Token 551: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002294778823852539
    2. 'append' → logprob: -6.377294540405273
    3. '.' → logprob: -7.502294540405273
    4. '.clear' → logprob: -10.752294540405273
    5. '=' → logprob: -11.627294540405273
    6. '.extend' → logprob: -12.002294540405273
    7. '.app' → logprob: -13.502294540405273
    8. 'app' → logprob: -14.502294540405273
    9. ' append' → logprob: -14.877294540405273
    10. '.push' → logprob: -15.377294540405273

Token 552: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.4849443838757e-06
    2. 'left' → logprob: -13.125004768371582
    3. '(path' → logprob: -14.125004768371582
    4. 'path' → logprob: -14.375004768371582
    5. 'n' → logprob: -14.625004768371582
    6. '(' → logprob: -14.875004768371582
    7. '(nx' → logprob: -15.750004768371582
    8. '(next' → logprob: -16.750003814697266
    9. '(nt' → logprob: -16.750003814697266
    10. '((' → logprob: -19.000003814697266

Token 553: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0015890118665993214
    2. 't' → logprob: -6.501588821411133
    3. 'x' → logprob: -9.626588821411133
    4. '(t' → logprob: -12.251588821411133
    5. 'nt' → logprob: -12.751588821411133
    6. '```' → logprob: -12.751588821411133
    7. '(' → logprob: -13.001588821411133
    8. 'т' → logprob: -13.126588821411133
    9. '(n' → logprob: -14.001588821411133
    10. 'tx' → logprob: -14.376588821411133

Token 554: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029805339872837067
    2. ')
' → logprob: -3.5298054218292236
    3. '               ' → logprob: -10.154805183410645
    4. ')return' → logprob: -11.529805183410645
    5. ')
' → logprob: -13.404805183410645
    6. ' )' → logprob: -13.779805183410645
    7. ')

' → logprob: -14.154805183410645
    8. '<|end|>' → logprob: -14.529805183410645
    9. '           ' → logprob: -14.654805183410645
    10. '       ' → logprob: -15.154805183410645

Token 555: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 556: ' ans' (ID: 3345)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 557: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016048327088356018
    2. '=' → logprob: -4.141048431396484
    3. ' ' → logprob: -11.641048431396484
    4. ',' → logprob: -13.641048431396484
    5. '_' → logprob: -13.766048431396484
    6. ' +=' → logprob: -14.391048431396484
    7. '1' → logprob: -14.766048431396484
    8. '   ' → logprob: -15.141048431396484
    9. '2' → logprob: -15.266048431396484
    10. '[' → logprob: -15.266048431396484

Token 558: ' int' (ID: 677)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2119501680135727
    2. ' dist' → logprob: -2.2119500637054443
    3. '0' → logprob: -2.7119500637054443
    4. 'max' → logprob: -5.211950302124023
    5. ' ' → logprob: -5.461950302124023
    6. '-' → logprob: -5.961950302124023
    7. ' max' → logprob: -6.586950302124023
    8. '(dist' → logprob: -7.586950302124023
    9. ' -' → logprob: -8.586950302124023
    10. '-dist' → logprob: -8.711950302124023

Token 559: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06051689386367798
    2. '(dist' → logprob: -3.435516834259033
    3. '()' → logprob: -4.060516834259033
    4. '(math' → logprob: -5.810516834259033
    5. '(path' → logprob: -6.310516834259033
    6. 'dist' → logprob: -6.560516834259033
    7. '(max' → logprob: -7.185516834259033
    8. '((' → logprob: -7.685516834259033
    9. '1' → logprob: -8.060517311096191
    10. '32' → logprob: -8.185517311096191

Token 560: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.006243026349693537
    2. '(ab' → logprob: -5.2562432289123535
    3. '(g' → logprob: -7.7562432289123535
    4. '(dist' → logprob: -8.131242752075195
    5. '(ans' → logprob: -9.006242752075195
    6. '(set' → logprob: -9.131242752075195
    7. 'path' → logprob: -11.006242752075195
    8. '(' → logprob: -11.631242752075195
    9. '(mod' → logprob: -12.131242752075195
    10. '(distance' → logprob: -12.506242752075195

Token 561: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10974185913801193
    2. ')-' → logprob: -2.8597419261932373
    3. '()' → logprob: -3.8597419261932373
    4. '())' → logprob: -4.109741687774658
    5. '()-' → logprob: -5.359741687774658
    6. '-' → logprob: -6.109741687774658
    7. ' -' → logprob: -7.734741687774658
    8. ' )' → logprob: -8.109742164611816
    9. '*' → logprob: -8.359742164611816
    10. ')
' → logprob: -8.484742164611816

Token 562: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26537376642227173
    2. ')-' → logprob: -2.015373706817627
    3. '-' → logprob: -2.640373706817627
    4. ' -' → logprob: -4.015373706817627
    5. '/' → logprob: -4.765373706817627
    6. '*' → logprob: -7.640373706817627
    7. '//' → logprob: -8.140374183654785
    8. ' /' → logprob: -8.265374183654785
    9. ' )' → logprob: -8.265374183654785
    10. ')
' → logprob: -8.640374183654785

Token 563: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010331686353310943
    2. ' ' → logprob: -6.876033306121826
    3. '3' → logprob: -16.376033782958984
    4. '1' → logprob: -16.501033782958984
    5. '  ' → logprob: -16.501033782958984
    6. '
' → logprob: -17.126033782958984
    7. '   ' → logprob: -18.126033782958984
    8. '```' → logprob: -18.501033782958984
    9. ' ' → logprob: -18.501033782958984
    10. '(' → logprob: -18.751033782958984

Token 564: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010330495424568653
    2. ' ' → logprob: -6.876032829284668
    3. '3' → logprob: -16.376033782958984
    4. '
' → logprob: -16.626033782958984
    5. '  ' → logprob: -17.001033782958984
    6. '```' → logprob: -17.251033782958984
    7. '1' → logprob: -17.501033782958984
    8. '

' → logprob: -18.001033782958984
    9. '   ' → logprob: -18.251033782958984
    10. ')' → logprob: -18.376033782958984

Token 565: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0047857495956122875
    2. '+' → logprob: -6.004785537719727
    3. ')+' → logprob: -6.754785537719727
    4. '-' → logprob: -7.754785537719727
    5. ')
' → logprob: -8.129785537719727
    6. ' )' → logprob: -8.504785537719727
    7. ' +' → logprob: -9.254785537719727
    8. ' -' → logprob: -9.879785537719727
    9. ')-' → logprob: -10.254785537719727
    10. '+)' → logprob: -11.379785537719727

Token 566: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40756338834762573
    2. 'print' → logprob: -1.5325634479522705
    3. ' print' → logprob: -2.7825634479522705
    4. '
' → logprob: -3.1575634479522705
    5. '<|end|>' → logprob: -4.532563209533691
    6. ' ' → logprob: -7.157563209533691
    7. '	print' → logprob: -7.407563209533691
    8. ')' → logprob: -7.532563209533691
    9. '#' → logprob: -8.407563209533691
    10. '  ' → logprob: -8.407563209533691

Token 567: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00141440040897578
    2. ' ' → logprob: -6.7514142990112305
    3. '0' → logprob: -8.37641429901123
    4. '2' → logprob: -12.50141429901123
    5. 'len' → logprob: -12.50141429901123
    6. '(' → logprob: -12.87641429901123
    7. 'mod' → logprob: -14.62641429901123
    8. 'ans' → logprob: -14.75141429901123
    9. 'dist' → logprob: -14.75141429901123
    10. '-' → logprob: -14.87641429901123

Token 568: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010690123308449984
    2. '0' → logprob: -6.876069068908691
    3. ' ' → logprob: -11.126069068908691
    4. '(' → logprob: -11.376069068908691
    5. 'int' → logprob: -12.251069068908691
    6. 'len' → logprob: -13.126069068908691
    7. '2' → logprob: -13.626069068908691
    8. 'dist' → logprob: -14.876069068908691
    9. 'ans' → logprob: -15.001069068908691
    10. 'mod' → logprob: -15.376069068908691

Token 569: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38152411580085754
    2. '
' → logprob: -1.3815240859985352
    3. 'print' → logprob: -2.881524085998535
    4. '<|end|>' → logprob: -5.506524085998535
    5. ' print' → logprob: -5.756524085998535
    6. ' if' → logprob: -6.756524085998535
    7. ')' → logprob: -8.006524085998535
    8. 'if' → logprob: -8.131524085998535
    9. '+' → logprob: -8.381524085998535
    10. '
' → logprob: -8.631524085998535

Token 570: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13805994391441345
    2. 'print' → logprob: -2.3880598545074463
    3. '
' → logprob: -3.8880598545074463
    4. '<|end|>' → logprob: -4.263060092926025
    5. ')' → logprob: -6.513060092926025
    6. 'if' → logprob: -7.888060092926025
    7. ' print' → logprob: -8.513059616088867
    8. 'return' → logprob: -8.638059616088867
    9. '	print' → logprob: -9.513059616088867
    10. ' if' → logprob: -10.013059616088867

Token 571: ' path' (ID: 3104)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010798193514347076
    2. 'if' → logprob: -5.01079797744751
    3. '   ' → logprob: -5.88579797744751
    4. 'return' → logprob: -7.26079797744751
    5. '
' → logprob: -7.88579797744751
    6. ' if' → logprob: -9.635798454284668
    7. ' print' → logprob: -9.885798454284668
    8. '<|end|>' → logprob: -10.510798454284668
    9. 'for' → logprob: -11.010798454284668
    10. '	print' → logprob: -11.135798454284668

Token 572: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 573: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.027140621095895767
    2. 'list' → logprob: -4.2771406173706055
    3. ' path' → logprob: -5.0271406173706055
    4. 'set' → logprob: -6.2771406173706055
    5. '[]' → logprob: -6.4021406173706055
    6. '[path' → logprob: -6.7771406173706055
    7. 'sorted' → logprob: -7.5271406173706055
    8. '[' → logprob: -8.152140617370605
    9. 're' → logprob: -8.277140617370605
    10. '[::-' → logprob: -8.777140617370605

Token 574: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0005411197198554873
    2. '[' → logprob: -7.8755412101745605
    3. '[:]' → logprob: -9.000540733337402
    4. '[:-' → logprob: -10.750540733337402
    5. '.reverse' → logprob: -11.875540733337402
    6. '.' → logprob: -12.750540733337402
    7. '[:' → logprob: -12.875540733337402
    8. ' [' → logprob: -14.125540733337402
    9. '#' → logprob: -14.500540733337402
    10. '[
' → logprob: -14.500540733337402

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6893143653869629
    2. ')' → logprob: -0.8143143653869629
    3. '])' → logprob: -4.814314365386963
    4. '`)' → logprob: -4.814314365386963
    5. ']' → logprob: -5.064314365386963
    6. '(reverse' → logprob: -5.564314365386963
    7. '[::-' → logprob: -5.689314365386963
    8. '#' → logprob: -5.689314365386963
    9. '```' → logprob: -5.814314365386963
    10. '<|end|>' → logprob: -6.064314365386963

Token 576: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12528783082962036
    2. ']' → logprob: -2.6252877712249756
    3. '<|end|>' → logprob: -3.2502877712249756
    4. '   ' → logprob: -5.125288009643555
    5. '<|end|>' → logprob: -8.875288009643555
    6. '
' → logprob: -9.750288009643555
    7. '}' → logprob: -9.750288009643555
    8. '#' → logprob: -9.750288009643555
    9. ' )' → logprob: -9.875288009643555
    10. '```' → logprob: -10.250288009643555

Token 577: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.742784857749939
    2. '<|end|>' → logprob: -0.992784857749939
    3. '
' → logprob: -1.992784857749939
    4. 'print' → logprob: -4.4927849769592285
    5. ')' → logprob: -5.4927849769592285
    6. '```' → logprob: -7.4927849769592285
    7. '<|end|>' → logprob: -7.8677849769592285
    8. 'for' → logprob: -7.9927849769592285
    9. '    
' → logprob: -8.99278450012207
    10. ' for' → logprob: -9.11778450012207

Token 578: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 579: ' why' (ID: 4436)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 580: ' not' (ID: 625)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 581: ' just' (ID: 1327)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21716433763504028
    2. 'print' → logprob: -2.5921642780303955
    3. '
' → logprob: -2.9671642780303955
    4. '<|end|>' → logprob: -3.2171642780303955
    5. 'for' → logprob: -4.342164516448975
    6. ' for' → logprob: -4.717164516448975
    7. 'while' → logprob: -6.342164516448975
    8. '    
' → logprob: -7.092164516448975
    9. '```' → logprob: -7.217164516448975
    10. ' print' → logprob: -7.467164516448975

Token 582: ' reverse' (ID: 18199)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.07318688929080963
    2. 'reverse' → logprob: -3.5731868743896484
    3. ' path' → logprob: -3.9481868743896484
    4. 'append' → logprob: -4.698186874389648
    5. 'list' → logprob: -5.323186874389648
    6. 'pop' → logprob: -5.573186874389648
    7. 'extend' → logprob: -6.823186874389648
    8. ' reverse' → logprob: -7.073186874389648
    9. 'g' → logprob: -7.073186874389648
    10. 're' → logprob: -7.323186874389648

Token 583: ' with' (ID: 483)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04919084161520004
    2. '()
' → logprob: -3.4241907596588135
    3. '()?' → logprob: -4.924190998077393
    4. '<|end|>' → logprob: -5.174190998077393
    5. '?' → logprob: -7.174190998077393
    6. '   ' → logprob: -7.549190998077393
    7. '
' → logprob: -7.924190998077393
    8. '...' → logprob: -8.549190521240234
    9. '<|end|>' → logprob: -8.674190521240234
    10. 'path' → logprob: -9.549190521240234

Token 584: ' slicing' (ID: 161002)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.14134404063224792
    2. '[::-' → logprob: -2.1413440704345703
    3. 'reverse' → logprob: -4.76634407043457
    4. '[path' → logprob: -5.89134407043457
    5. 're' → logprob: -7.14134407043457
    6. ' path' → logprob: -7.14134407043457
    7. '.reverse' → logprob: -7.64134407043457
    8. 'list' → logprob: -7.89134407043457
    9. '`' → logprob: -8.01634407043457
    10. '[' → logprob: -9.26634407043457

Token 585: '?
' (ID: 3901)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 586: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06468703597784042
    2. 'print' → logprob: -2.9396870136260986
    3. 'for' → logprob: -5.064687252044678
    4. 'return' → logprob: -7.189687252044678
    5. '<|end|>' → logprob: -7.189687252044678
    6. ')' → logprob: -8.06468677520752
    7. 'if' → logprob: -8.18968677520752
    8. ' for' → logprob: -8.31468677520752
    9. '    
' → logprob: -8.56468677520752
    10. '```' → logprob: -8.68968677520752

Token 587: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3956906497478485
    2. 'print' → logprob: -1.395690679550171
    3. '   ' → logprob: -2.770690679550171
    4. 'u' → logprob: -5.020690441131592
    5. ' for' → logprob: -5.520690441131592
    6. 'if' → logprob: -5.770690441131592
    7. 'return' → logprob: -7.020690441131592
    8. 'while' → logprob: -8.02069091796875
    9. 'ans' → logprob: -8.14569091796875
    10. '#' → logprob: -8.52069091796875

Token 588: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25135916471481323
    2. 'i' → logprob: -2.126359224319458
    3. ' x' → logprob: -2.876359224319458
    4. 'x' → logprob: -4.126358985900879
    5. '_' → logprob: -4.876358985900879
    6. ' _' → logprob: -5.376358985900879
    7. ' p' → logprob: -6.001358985900879
    8. ' e' → logprob: -6.376358985900879
    9. 'e' → logprob: -6.751358985900879
    10. '(i' → logprob: -6.751358985900879

Token 589: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02444443106651306
    2. 'in' → logprob: -3.774444341659546
    3. ' ' → logprob: -7.149444580078125
    4. ',' → logprob: -8.399444580078125
    5. 'n' → logprob: -9.649444580078125
    6. '  ' → logprob: -10.149444580078125
    7. '   ' → logprob: -10.774444580078125
    8. ' i' → logprob: -11.274444580078125
    9. '(' → logprob: -11.399444580078125
    10. '	in' → logprob: -11.649444580078125

Token 590: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023508677259087563
    2. ' range' → logprob: -4.023508548736572
    3. 'path' → logprob: -5.273508548736572
    4. 'ab' → logprob: -9.02350902557373
    5. ' path' → logprob: -10.39850902557373
    6. 'len' → logprob: -11.27350902557373
    7. 'in' → logprob: -11.64850902557373
    8. '(range' → logprob: -12.14850902557373
    9. '   ' → logprob: -12.39850902557373
    10. 're' → logprob: -12.39850902557373

Token 591: '(n' (ID: 2406)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.08178650587797165
    2. '(ans' → logprob: -2.7067863941192627
    3. '(' → logprob: -5.081786632537842
    4. 'len' → logprob: -5.706786632537842
    5. '(n' → logprob: -6.456786632537842
    6. 'ans' → logprob: -7.456786632537842
    7. '1' → logprob: -10.081786155700684
    8. '(int' → logprob: -10.706786155700684
    9. 'n' → logprob: -11.331786155700684
    10. ' len' → logprob: -12.206786155700684

Token 592: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5276457071304321
    2. '):
' → logprob: -0.9026457071304321
    3. '-' → logprob: -5.652645587921143
    4. '   ' → logprob: -7.402645587921143
    5. ')' → logprob: -8.2776460647583
    6. ' -' → logprob: -9.4026460647583
    7. '):
' → logprob: -11.4026460647583
    8. 'n' → logprob: -12.2776460647583
    9. ' ):' → logprob: -12.4026460647583
    10. ':' → logprob: -12.5276460647583

Token 593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.111979357432574e-05
    2. '2' → logprob: -9.87507152557373
    3. '-' → logprob: -12.00007152557373
    4. ' ' → logprob: -12.00007152557373
    5. '   ' → logprob: -13.00007152557373
    6. '```' → logprob: -13.68757152557373
    7. ')' → logprob: -14.62507152557373
    8. 'len' → logprob: -14.68757152557373
    9. '(' → logprob: -15.06257152557373
    10. '       ' → logprob: -15.31257152557373

Token 594: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0065648602321743965
    2. '):' → logprob: -5.131565093994141
    3. ':
' → logprob: -8.38156509399414
    4. '   ' → logprob: -8.63156509399414
    5. ':' → logprob: -8.88156509399414
    6. ')' → logprob: -9.88156509399414
    7. '):
' → logprob: -10.50656509399414
    8. ' ):
' → logprob: -12.63156509399414
    9. ',' → logprob: -13.38156509399414
    10. '       ' → logprob: -13.50656509399414

Token 595: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20232070982456207
    2. '       ' → logprob: -1.7023206949234009
    3. ' if' → logprob: -7.952320575714111
    4. 'if' → logprob: -8.32732105255127
    5. '<|end|>' → logprob: -8.82732105255127
    6. 'a' → logprob: -9.82732105255127
    7. '	   ' → logprob: -11.07732105255127
    8. '    ' → logprob: -11.32732105255127
    9. 'b' → logprob: -11.45232105255127
    10. ',' → logprob: -11.45232105255127

Token 596: ' e' (ID: 319)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2681625485420227
    2. 'if' → logprob: -1.643162488937378
    3. '       ' → logprob: -4.018162727355957
    4. '   ' → logprob: -4.143162727355957
    5. 'x' → logprob: -5.393162727355957
    6. 'u' → logprob: -5.893162727355957
    7. ' if' → logprob: -7.893162727355957
    8. 'for' → logprob: -9.518162727355957
    9. 'print' → logprob: -9.518162727355957
    10. ' a' → logprob: -9.643162727355957

Token 597: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48467162251472473
    2. ' =' → logprob: -1.2346715927124023
    3. '=' → logprob: -3.1096715927124023
    4. 'f' → logprob: -3.4846715927124023
    5. ',a' → logprob: -5.359671592712402
    6. '=a' → logprob: -5.609671592712402
    7. 'for' → logprob: -6.109671592712402
    8. ',' → logprob: -6.234671592712402
    9. 'if' → logprob: -6.234671592712402
    10. '_a' → logprob: -6.609671592712402

Token 598: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12188287079334259
    2. '=' → logprob: -2.996882915496826
    3. ' =' → logprob: -3.371882915496826
    4. ',e' → logprob: -4.246882915496826
    5. ',a' → logprob: -4.746882915496826
    6. 'a' → logprob: -5.121882915496826
    7. ' ,' → logprob: -7.371882915496826
    8. ',v' → logprob: -8.621882438659668
    9. 'e' → logprob: -8.871882438659668
    10. '=e' → logprob: -9.496882438659668

Token 599: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0011708177626132965
    2. ' e' → logprob: -6.751170635223389
    3. '	e' → logprob: -15.376171112060547
    4. '   ' → logprob: -15.626171112060547
    5. '_e' → logprob: -16.001171112060547
    6. ',e' → logprob: -17.376171112060547
    7. '  ' → logprob: -17.626171112060547
    8. ' ' → logprob: -17.876171112060547
    9. '_' → logprob: -18.376171112060547
    10. '    ' → logprob: -18.501171112060547

Token 600: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023917861108202487
    2. '=' → logprob: -9.500239372253418
    3. '1' → logprob: -9.625239372253418
    4. 'e' → logprob: -9.750239372253418
    5. ' =' → logprob: -10.750239372253418
    6. '_' → logprob: -11.750239372253418
    7. '=e' → logprob: -11.875239372253418
    8. 'b' → logprob: -14.375239372253418
    9. '=_' → logprob: -14.750239372253418
    10. '₂' → logprob: -14.750239372253418

Token 601: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020720958709717
    2. ' =' → logprob: -2.3502073287963867
    3. ',' → logprob: -14.600207328796387
    4. '   ' → logprob: -16.97520637512207
    5. ')=' → logprob: -16.97520637512207
    6. ')' → logprob: -17.35020637512207
    7. '    ' → logprob: -17.85020637512207
    8. ' ' → logprob: -17.97520637512207
    9. '=
' → logprob: -18.10020637512207
    10. '<|end|>' → logprob: -18.35020637512207

Token 602: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.004081009421497583
    2. ' ab' → logprob: -5.504080772399902
    3. '   ' → logprob: -13.004080772399902
    4. '(ab' → logprob: -15.379080772399902
    5. 'path' → logprob: -17.25408172607422
    6. '_ab' → logprob: -17.37908172607422
    7. '  ' → logprob: -17.87908172607422
    8. 'a' → logprob: -17.87908172607422
    9. ' ' → logprob: -18.00408172607422
    10. 'abs' → logprob: -18.62908172607422

Token 603: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5405271053314209
    2. '=' → logprob: -0.9155271053314209
    3. ' =' → logprob: -4.16552734375
    4. 'i' → logprob: -6.66552734375
    5. '=i' → logprob: -8.66552734375
    6. 'e' → logprob: -8.91552734375
    7. '[e' → logprob: -10.16552734375
    8. '       ' → logprob: -10.54052734375
    9. '=e' → logprob: -10.79052734375
    10. '   ' → logprob: -11.04052734375

Token 604: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3062804639339447
    2. ']' → logprob: -1.431280493736267
    3. ')
' → logprob: -4.181280612945557
    4. ')' → logprob: -4.681280612945557
    5. ']
' → logprob: -9.056280136108398
    6. '])' → logprob: -10.056280136108398
    7. '])
' → logprob: -10.556280136108398
    8. '[' → logprob: -10.681280136108398
    9. '
' → logprob: -11.181280136108398
    10. ']

' → logprob: -11.431280136108398

Token 605: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00503356009721756
    2. 'if' → logprob: -5.880033493041992
    3. '   ' → logprob: -6.505033493041992
    4. ' if' → logprob: -7.255033493041992
    5. '<|end|>' → logprob: -11.255033493041992
    6. 'e' → logprob: -12.880033493041992
    7. '	if' → logprob: -14.005033493041992
    8. ' ' → logprob: -14.005033493041992
    9. '	' → logprob: -14.380033493041992
    10. ',' → logprob: -14.505033493041992

Token 606: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18094363808631897
    2. '       ' → logprob: -1.8059436082839966
    3. '   ' → logprob: -7.305943489074707
    4. 'e' → logprob: -8.680943489074707
    5. ' if' → logprob: -9.055943489074707
    6. 'u' → logprob: -9.055943489074707
    7. 'for' → logprob: -10.555943489074707
    8. 'x' → logprob: -10.930943489074707
    9. 'g' → logprob: -10.930943489074707
    10. 'a' → logprob: -11.055943489074707

Token 607: ' skip' (ID: 16677)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10490771383047104
    2. '   ' → logprob: -2.479907751083374
    3. 'g' → logprob: -4.854907512664795
    4. '       ' → logprob: -4.979907512664795
    5. ' if' → logprob: -7.229907512664795
    6. 'u' → logprob: -8.354907989501953
    7. 'print' → logprob: -9.229907989501953
    8. 'e' → logprob: -10.229907989501953
    9. ' g' → logprob: -10.479907989501953
    10. 'v' → logprob: -11.479907989501953

Token 608: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4002409279346466
    2. 'if' → logprob: -1.1502408981323242
    3. '       ' → logprob: -4.775240898132324
    4. '   ' → logprob: -5.775240898132324
    5. 'e' → logprob: -6.900240898132324
    6. '<|end|>' → logprob: -8.150240898132324
    7. 'continue' → logprob: -9.400240898132324
    8. ' e' → logprob: -9.525240898132324
    9. 'for' → logprob: -10.275240898132324
    10. '...' → logprob: -10.275240898132324

Token 609: ' path' (ID: 3104)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0071202609688043594
    2. ' if' → logprob: -5.132120132446289
    3. 'continue' → logprob: -7.257120132446289
    4. 'e' → logprob: -8.257120132446289
    5. '   ' → logprob: -9.132120132446289
    6. '#' → logprob: -10.382120132446289
    7. '       ' → logprob: -11.007120132446289
    8. 'i' → logprob: -11.132120132446289
    9. 'print' → logprob: -11.632120132446289
    10. ' continue' → logprob: -12.007120132446289

Token 610: ' edge' (ID: 11165)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11353182047605515
    2. 'if' → logprob: -2.9885318279266357
    3. '   ' → logprob: -3.2385318279266357
    4. '       ' → logprob: -4.363531589508057
    5. ',' → logprob: -6.613531589508057
    6. '<|end|>' → logprob: -6.738531589508057
    7. ' =' → logprob: -7.238531589508057
    8. ':' → logprob: -7.988531589508057
    9. ' for' → logprob: -8.238532066345215
    10. ' ' → logprob: -8.238532066345215

Token 611: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25986248254776
    2. ' if' → logprob: -2.0098624229431152
    3. '   ' → logprob: -2.5098624229431152
    4. '<|end|>' → logprob: -5.259862422943115
    5. 'if' → logprob: -5.509862422943115
    6. ' ' → logprob: -6.634862422943115
    7. ':' → logprob: -6.759862422943115
    8. ',' → logprob: -7.384862422943115
    9. '	if' → logprob: -8.634862899780273
    10. '
' → logprob: -9.134862899780273

Token 612: ' middle' (ID: 10006)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.14754392206668854
    2. 'g' → logprob: -2.8975439071655273
    3. ' path' → logprob: -3.5225439071655273
    4. 'if' → logprob: -3.6475439071655273
    5. ' g' → logprob: -4.147543907165527
    6. 'e' → logprob: -5.772543907165527
    7. '   ' → logprob: -6.022543907165527
    8. ' if' → logprob: -6.647543907165527
    9. 'ans' → logprob: -7.897543907165527
    10. '[path' → logprob: -8.022543907165527

Token 613: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3113214373588562
    2. '   ' → logprob: -1.561321496963501
    3. ' if' → logprob: -3.061321496963501
    4. 'if' → logprob: -5.311321258544922
    5. '<|end|>' → logprob: -5.561321258544922
    6. ' ' → logprob: -7.061321258544922
    7. ',' → logprob: -7.686321258544922
    8. '  ' → logprob: -8.436321258544922
    9. '	if' → logprob: -9.186321258544922
    10. '    ' → logprob: -9.561321258544922

Token 614: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25814396142959595
    2. ' if' → logprob: -2.133143901824951
    3. '   ' → logprob: -2.258143901824951
    4. 'if' → logprob: -5.758143901824951
    5. '	if' → logprob: -7.383143901824951
    6. '	' → logprob: -8.38314437866211
    7. '<|end|>' → logprob: -8.38314437866211
    8. '```' → logprob: -9.63314437866211
    9. ' ' → logprob: -9.75814437866211
    10. '    ' → logprob: -9.88314437866211

Token 615: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.033132538199424744
    2. ' if' → logprob: -3.533132553100586
    3. '   ' → logprob: -5.908132553100586
    4. '       ' → logprob: -7.408132553100586
    5. '	if' → logprob: -10.033132553100586
    6. 'continue' → logprob: -12.283132553100586
    7. 'for' → logprob: -13.658132553100586
    8. '```' → logprob: -13.908132553100586
    9. ' ' → logprob: -15.033132553100586
    10. 'e' → logprob: -15.283132553100586

Token 616: ' (' (ID: 350)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.06777095794677734
    2. 'e' → logprob: -3.0677709579467773
    3. '((' → logprob: -4.942770957946777
    4. ' (' → logprob: -5.192770957946777
    5. '{' → logprob: -5.942770957946777
    6. '(path' → logprob: -6.442770957946777
    7. '(' → logprob: -7.317770957946777
    8. ' e' → logprob: -7.692770957946777
    9. 'path' → logprob: -8.317770957946777
    10. '(
' → logprob: -8.817770957946777

Token 617: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08932000398635864
    2. '(e' → logprob: -2.464319944381714
    3. 'path' → logprob: -9.339320182800293
    4. ' e' → logprob: -9.339320182800293
    5. '   ' → logprob: -9.964320182800293
    6. '((' → logprob: -10.089320182800293
    7. ' (' → logprob: -10.214320182800293
    8. '(path' → logprob: -10.964320182800293
    9. '(' → logprob: -11.214320182800293
    10. ' ' → logprob: -11.714320182800293

Token 618: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. '
' → logprob: -13.187509536743164
    3. '[' → logprob: -13.937509536743164
    4. '[e' → logprob: -13.937509536743164
    5. 'e' → logprob: -14.187509536743164
    6. '```' → logprob: -14.562509536743164
    7. 's' → logprob: -15.000009536743164
    8. '
' → logprob: -15.000009536743164
    9. ')' → logprob: -15.187509536743164
    10. '   ' → logprob: -15.625009536743164

Token 619: ',' (ID: 11)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4757320284843445
    2. ' ==' → logprob: -1.2257320880889893
    3. ',' → logprob: -2.4757320880889893
    4. ',e' → logprob: -7.35073184967041
    5. 'e' → logprob: -9.60073184967041
    6. 'in' → logprob: -9.60073184967041
    7. ' in' → logprob: -9.85073184967041
    8. ',path' → logprob: -10.10073184967041
    9. ' ,' → logprob: -10.22573184967041
    10. ')==' → logprob: -12.85073184967041

Token 620: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -7.290784560609609e-05
    2. ' e' → logprob: -9.625072479248047
    3. 'path' → logprob: -12.125072479248047
    4. ')e' → logprob: -14.625072479248047
    5. ')' → logprob: -15.250072479248047
    6. '<|end|>' → logprob: -15.750072479248047
    7. '
' → logprob: -15.875072479248047
    8. '   ' → logprob: -16.000072479248047
    9. ' ' → logprob: -16.250072479248047
    10. '	e' → logprob: -16.375072479248047

Token 621: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. 's' → logprob: -13.12500286102295
    3. '1' → logprob: -15.00000286102295
    4. ' ' → logprob: -15.12500286102295
    5. 'e' → logprob: -15.87500286102295
    6. ')' → logprob: -17.125003814697266
    7. ',' → logprob: -17.250003814697266
    8. '_' → logprob: -17.375003814697266
    9. 'path' → logprob: -17.625003814697266
    10. '₂' → logprob: -17.875003814697266

Token 622: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23990651965141296
    2. '==' → logprob: -1.7399065494537354
    3. ')==' → logprob: -3.8649065494537354
    4. ' ==' → logprob: -4.114906311035156
    5. ' in' → logprob: -8.489906311035156
    6. ' )' → logprob: -9.114906311035156
    7. 'in' → logprob: -9.989906311035156
    8. '!=' → logprob: -10.364906311035156
    9. ' not' → logprob: -10.614906311035156
    10. ']==' → logprob: -11.114906311035156

Token 623: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.035807471722364426
    2. ' ==' → logprob: -3.9108073711395264
    3. ' in' → logprob: -4.4108076095581055
    4. 'in' → logprob: -6.0358076095581055
    5. ' not' → logprob: -8.160807609558105
    6. '!=' → logprob: -8.660807609558105
    7. 'not' → logprob: -9.035807609558105
    8. '==(' → logprob: -11.285807609558105
    9. '=' → logprob: -11.410807609558105
    10. ' !=' → logprob: -12.910807609558105

Token 624: ' (' (ID: 350)
  Prédit: '(path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.07632814347743988
    2. ' (' → logprob: -2.8263280391693115
    3. 'path' → logprob: -4.576328277587891
    4. ' path' → logprob: -5.576328277587891
    5. '(e' → logprob: -9.32632827758789
    6. '   ' → logprob: -10.45132827758789
    7. '(' → logprob: -11.20132827758789
    8. '(ab' → logprob: -11.20132827758789
    9. '(a' → logprob: -12.32632827758789
    10. '(p' → logprob: -12.45132827758789

Token 625: 'path' (ID: 4189)
  Prédit: 'path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.002587073715403676
    2. ' path' → logprob: -6.127586841583252
    3. '(path' → logprob: -7.877586841583252
    4. ')' → logprob: -11.62758731842041
    5. '   ' → logprob: -12.00258731842041
    6. '
' → logprob: -12.75258731842041
    7. ' (' → logprob: -13.62758731842041
    8. '	path' → logprob: -14.00258731842041
    9. 'pat' → logprob: -14.75258731842041
    10. ' ' → logprob: -15.00258731842041

Token 626: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3913241922855377
    2. '[i' → logprob: -1.8913241624832153
    3. '0' → logprob: -2.266324281692505
    4. '[-' → logprob: -3.391324281692505
    5. 'ans' → logprob: -3.891324281692505
    6. 'i' → logprob: -5.016324043273926
    7. '[len' → logprob: -5.141324043273926
    8. '-' → logprob: -7.641324043273926
    9. 'len' → logprob: -8.016324043273926
    10. '1' → logprob: -8.016324043273926

Token 627: 'ans' (ID: 616)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4374547600746155
    2. 'i' → logprob: -1.4374547004699707
    3. 'ans' → logprob: -2.1874547004699707
    4. ' ' → logprob: -6.687454700469971
    5. '-' → logprob: -7.062454700469971
    6. '1' → logprob: -7.937454700469971
    7. 'len' → logprob: -7.937454700469971
    8. ' i' → logprob: -8.062455177307129
    9. ' ans' → logprob: -8.062455177307129
    10. '   ' → logprob: -8.312455177307129

Token 628: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.01643502712249756
    2. '[' → logprob: -4.141435146331787
    3. '   ' → logprob: -8.766434669494629
    4. '-' → logprob: -8.891434669494629
    5. ' ' → logprob: -10.141434669494629
    6. ']' → logprob: -10.641434669494629
    7. '[-' → logprob: -11.391434669494629
    8. ' ],' → logprob: -11.641434669494629
    9. '[i' → logprob: -12.391434669494629
    10. '),' → logprob: -13.016434669494629

Token 629: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -1.0683535037969705e-05
    2. ' path' → logprob: -11.50001049041748
    3. '   ' → logprob: -14.62501049041748
    4. '	path' → logprob: -18.375011444091797
    5. 'pat' → logprob: -18.750011444091797
    6. '
' → logprob: -19.375011444091797
    7. ' ' → logprob: -19.750011444091797
    8. '  ' → logprob: -19.875011444091797
    9. '[path' → logprob: -19.875011444091797
    10. '       ' → logprob: -20.250011444091797

Token 630: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. 'ans' → logprob: -14.375000953674316
    3. '[
' → logprob: -16.625
    4. '(ans' → logprob: -17.25
    5. '[(' → logprob: -17.375
    6. '   ' → logprob: -17.375
    7. '```' → logprob: -17.75
    8. '1' → logprob: -18.625
    9. '
' → logprob: -18.875
    10. ')' → logprob: -19.25

Token 631: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00014692598779220134
    2. '[' → logprob: -8.875146865844727
    3. '(ans' → logprob: -12.125146865844727
    4. ' ans' → logprob: -13.875146865844727
    5. '	ans' → logprob: -14.750146865844727
    6. '
' → logprob: -16.125146865844727
    7. '   ' → logprob: -17.000146865844727
    8. '_ans' → logprob: -17.000146865844727
    9. '(' → logprob: -17.625146865844727
    10. ' ' → logprob: -18.000146865844727

Token 632: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0038019767962396145
    2. '[' → logprob: -5.8788018226623535
    3. 'ans' → logprob: -7.6288018226623535
    4. ' +' → logprob: -8.003802299499512
    5. '])' → logprob: -8.753802299499512
    6. '(ans' → logprob: -11.878802299499512
    7. '   ' → logprob: -12.128802299499512
    8. ']' → logprob: -13.753802299499512
    9. '1' → logprob: -14.003802299499512
    10. ' ans' → logprob: -14.253802299499512

Token 633: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.625001907348633
    4. 'ans' → logprob: -17.250001907348633
    5. '  ' → logprob: -18.875001907348633
    6. ')' → logprob: -19.750001907348633
    7. '+' → logprob: -20.000001907348633
    8. '```' → logprob: -20.375001907348633
    9. ']' → logprob: -20.500001907348633
    10. '-' → logprob: -21.000001907348633

Token 634: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ' )' → logprob: -11.37501335144043
    3. ')
' → logprob: -14.62501335144043
    4. ' or' → logprob: -14.87501335144043
    5. '):' → logprob: -15.25001335144043
    6. '')' → logprob: -15.37501335144043
    7. '):
' → logprob: -15.75001335144043
    8. '")' → logprob: -15.75001335144043
    9. '`)' → logprob: -16.62501335144043
    10. '   ' → logprob: -17.00001335144043

Token 635: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0036648025270551443
    2. 'or' → logprob: -5.628664970397949
    3. '<|end|>' → logprob: -10.50366497039795
    4. '	or' → logprob: -11.00366497039795
    5. '       ' → logprob: -12.00366497039795
    6. ':' → logprob: -12.50366497039795
    7. '           ' → logprob: -12.62866497039795
    8. ' ' → logprob: -13.37866497039795
    9. ' and' → logprob: -13.50366497039795
    10. ')' → logprob: -13.62866497039795

Token 636: ' (' (ID: 350)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.38691264390945435
    2. ' (' → logprob: -1.1369125843048096
    3. '       ' → logprob: -10.38691234588623
    4. '           ' → logprob: -12.51191234588623
    5. ' ' → logprob: -13.26191234588623
    6. '   ' → logprob: -13.26191234588623
    7. '        ' → logprob: -13.38691234588623
    8. '(' → logprob: -14.51191234588623
    9. '    ' → logprob: -14.76191234588623
    10. '          ' → logprob: -15.13691234588623

Token 637: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00283210352063179
    2. ' e' → logprob: -6.002831935882568
    3. '(e' → logprob: -8.002832412719727
    4. ')e' → logprob: -11.752832412719727
    5. '           ' → logprob: -12.502832412719727
    6. '   ' → logprob: -13.002832412719727
    7. '       ' → logprob: -13.252832412719727
    8. '	e' → logprob: -13.377832412719727
    9. ' (' → logprob: -13.877832412719727
    10. '    ' → logprob: -14.002832412719727

Token 638: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004664015024900436
    2. '1' → logprob: -5.379663944244385
    3. '[' → logprob: -10.129664421081543
    4. 'e' → logprob: -13.879664421081543
    5. '```' → logprob: -14.004664421081543
    6. '[path' → logprob: -14.754664421081543
    7. 'ans' → logprob: -14.879664421081543
    8. 's' → logprob: -15.129664421081543
    9. '   ' → logprob: -15.504664421081543
    10. 'path' → logprob: -16.192163467407227

Token 639: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9504606825648807e-05
    2. ',
' → logprob: -11.750019073486328
    3. ' ,' → logprob: -12.375019073486328
    4. ',e' → logprob: -12.500019073486328
    5. '==' → logprob: -14.125019073486328
    6. '<|end|>' → logprob: -14.500019073486328
    7. 'e' → logprob: -14.625019073486328
    8. ')' → logprob: -14.750019073486328
    9. ',path' → logprob: -15.000019073486328
    10. '=' → logprob: -15.875019073486328

Token 640: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007183587644249201
    2. 'path' → logprob: -5.25718355178833
    3. ' e' → logprob: -6.25718355178833
    4. ' path' → logprob: -10.382184028625488
    5. ')e' → logprob: -15.757184028625488
    6. '```' → logprob: -17.632183074951172
    7. '[path' → logprob: -17.757183074951172
    8. ')' → logprob: -17.757183074951172
    9. '	e' → logprob: -17.882183074951172
    10. '_path' → logprob: -17.882183074951172

Token 641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016263832803815603
    2. '[' → logprob: -6.501626491546631
    3. 'path' → logprob: -9.126626014709473
    4. '[path' → logprob: -12.626626014709473
    5. '[
' → logprob: -13.626626014709473
    6. '_' → logprob: -13.626626014709473
    7. '
' → logprob: -13.751626014709473
    8. 'ans' → logprob: -13.751626014709473
    9. 'e' → logprob: -13.751626014709473
    10. ',' → logprob: -14.251626014709473

Token 642: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010961651569232345
    2. ')==' → logprob: -6.876096248626709
    3. '==' → logprob: -10.00109577178955
    4. ' ==' → logprob: -11.25109577178955
    5. ' )' → logprob: -12.37609577178955
    6. ']==' → logprob: -15.37609577178955
    7. ']' → logprob: -15.75109577178955
    8. ')=' → logprob: -16.251096725463867
    9. '),' → logprob: -16.626096725463867
    10. ')
' → logprob: -17.251096725463867

Token 643: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.13124342262744904
    2. ')' → logprob: -2.7562434673309326
    3. ' ==' → logprob: -3.0062434673309326
    4. ')==' → logprob: -4.6312432289123535
    5. ']==' → logprob: -8.756243705749512
    6. '==(' → logprob: -9.756243705749512
    7. ']' → logprob: -11.381243705749512
    8. '==
' → logprob: -11.881243705749512
    9. '=' → logprob: -11.881243705749512
    10. '```' → logprob: -13.256243705749512

Token 644: ' (' (ID: 350)
  Prédit: '(path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.0015024791937321424
    2. ' (' → logprob: -6.501502513885498
    3. '(paths' → logprob: -17.251502990722656
    4. '   ' → logprob: -17.876502990722656
    5. '(PATH' → logprob: -17.876502990722656
    6. '(Path' → logprob: -18.126502990722656
    7. '[path' → logprob: -18.126502990722656
    8. '(' → logprob: -19.001502990722656
    9. ' ' → logprob: -19.001502990722656
    10. '(p' → logprob: -19.376502990722656

Token 645: 'path' (ID: 4189)
  Prédit: 'path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5760946273803711
    2. '(path' → logprob: -0.8260946273803711
    3. ' path' → logprob: -8.826094627380371
    4. '[path' → logprob: -12.451094627380371
    5. ' (' → logprob: -12.826094627380371
    6. '   ' → logprob: -14.451094627380371
    7. '"path' → logprob: -14.826094627380371
    8. ',path' → logprob: -15.076094627380371
    9. '	path' → logprob: -16.076095581054688
    10. ':path' → logprob: -16.076095581054688

Token 646: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. 'ans' → logprob: -16.25
    3. '   ' → logprob: -17.0
    4. ' [' → logprob: -17.25
    5. '[
' → logprob: -18.25
    6. '```' → logprob: -18.25
    7. '(ans' → logprob: -18.625
    8. ' ' → logprob: -18.625
    9. '
' → logprob: -19.5
    10. '       ' → logprob: -19.625

Token 647: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0001129602751461789
    2. '[' → logprob: -9.125112533569336
    3. ' ans' → logprob: -13.125112533569336
    4. '(ans' → logprob: -13.625112533569336
    5. '   ' → logprob: -14.625112533569336
    6. '	ans' → logprob: -15.500112533569336
    7. '_ans' → logprob: -16.625112533569336
    8. ' ' → logprob: -17.500112533569336
    9. '```' → logprob: -18.500112533569336
    10. '           ' → logprob: -18.750112533569336

Token 648: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014334144070744514
    2. '],' → logprob: -5.014334201812744
    3. ',' → logprob: -5.264334201812744
    4. '[' → logprob: -6.264334201812744
    5. '+,' → logprob: -8.014333724975586
    6. ' +' → logprob: -9.014333724975586
    7. '][' → logprob: -11.014333724975586
    8. '   ' → logprob: -11.264333724975586
    9. '+
' → logprob: -11.764333724975586
    10. ']' → logprob: -11.889333724975586

Token 649: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5759454369544983
    2. ' path' → logprob: -0.8259454369544983
    3. '[path' → logprob: -13.450945854187012
    4. '(path' → logprob: -13.575945854187012
    5. ' ' → logprob: -14.575945854187012
    6. '	path' → logprob: -14.825945854187012
    7. '"path' → logprob: -14.825945854187012
    8. ',path' → logprob: -14.950945854187012
    9. '_path' → logprob: -15.200945854187012
    10. 'Path' → logprob: -15.325945854187012

Token 650: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15649522840976715
    2. '+' → logprob: -2.4064953327178955
    3. 'ans' → logprob: -2.9064953327178955
    4. '   ' → logprob: -10.156495094299316
    5. '(ans' → logprob: -11.781495094299316
    6. '```' → logprob: -12.531495094299316
    7. '[
' → logprob: -12.906495094299316
    8. '_ans' → logprob: -13.031495094299316
    9. ' ans' → logprob: -13.156495094299316
    10. '	ans' → logprob: -13.656495094299316

Token 651: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00029756641015410423
    2. '[' → logprob: -9.250297546386719
    3. ' ans' → logprob: -9.250297546386719
    4. '+' → logprob: -9.750297546386719
    5. '   ' → logprob: -10.500297546386719
    6. '(ans' → logprob: -11.375297546386719
    7. '	ans' → logprob: -12.375297546386719
    8. '_ans' → logprob: -13.625297546386719
    9. 'a' → logprob: -14.000297546386719
    10. ' ' → logprob: -15.500297546386719

Token 652: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.607391408877447e-05
    2. '[' → logprob: -10.500036239624023
    3. '1' → logprob: -12.875036239624023
    4. '   ' → logprob: -13.375036239624023
    5. ' +' → logprob: -13.625036239624023
    6. '+
' → logprob: -13.875036239624023
    7. '])' → logprob: -14.000036239624023
    8. '+]' → logprob: -14.750036239624023
    9. '+)' → logprob: -15.250036239624023
    10. 'ans' → logprob: -16.000036239624023

Token 653: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. '+' → logprob: -12.875003814697266
    3. ' ' → logprob: -13.625003814697266
    4. '   ' → logprob: -15.375003814697266
    5. '```' → logprob: -17.125003814697266
    6. '
' → logprob: -17.437503814697266
    7. 'i' → logprob: -17.812503814697266
    8. '[' → logprob: -18.687503814697266
    9. '  ' → logprob: -18.875003814697266
    10. '2' → logprob: -18.937503814697266

Token 654: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12849827110767365
    2. '):
' → logprob: -2.1284983158111572
    3. ')' → logprob: -6.503498077392578
    4. '):
' → logprob: -10.253498077392578
    5. ':' → logprob: -11.003498077392578
    6. '):

' → logprob: -11.753498077392578
    7. '       ' → logprob: -12.128498077392578
    8. '   ' → logprob: -12.878498077392578
    9. ':
' → logprob: -14.003498077392578
    10. ' ):' → logprob: -14.378498077392578

Token 655: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1496640145778656
    2. '           ' → logprob: -2.5246639251708984
    3. ' continue' → logprob: -3.3996639251708984
    4. 'continue' → logprob: -3.7746639251708984
    5. '	continue' → logprob: -6.274663925170898
    6. ':' → logprob: -8.024663925170898
    7. ':
' → logprob: -9.524663925170898
    8. '	       ' → logprob: -9.649663925170898
    9. '_continue' → logprob: -9.774663925170898
    10. '   ' → logprob: -10.024663925170898

Token 656: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49980494379997253
    2. 'continue' (adapté à ' continue') → logprob: -0.9998049736022949
    3. '   ' → logprob: -4.249804973602295
    4. '           ' → logprob: -4.624804973602295
    5. ' continue' → logprob: -6.749804973602295
    6. '	continue' → logprob: -9.124804496765137
    7. '               ' → logprob: -10.749804496765137
    8. '```' → logprob: -11.249804496765137
    9. 'contin' → logprob: -12.499804496765137
    10. 'continu' → logprob: -13.249804496765137

Token 657: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052029918879270554
    2. 'print' → logprob: -3.427029848098755
    3. '   ' → logprob: -4.052030086517334
    4. 'g' → logprob: -8.177029609680176
    5. 'else' → logprob: -8.177029609680176
    6. '```' → logprob: -8.677029609680176
    7. '           ' → logprob: -9.802029609680176
    8. 'for' → logprob: -10.927029609680176
    9. 'e' → logprob: -12.052029609680176
    10. ' print' → logprob: -12.177029609680176

Token 658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03657905012369156
    2. 'g' → logprob: -3.786579132080078
    3. '   ' → logprob: -4.911579132080078
    4. 'print' → logprob: -5.286579132080078
    5. 'e' → logprob: -7.786579132080078
    6. '```' → logprob: -9.036579132080078
    7. 'for' → logprob: -9.161579132080078
    8. 'he' → logprob: -9.786579132080078
    9. 'else' → logprob: -10.161579132080078
    10. 'if' → logprob: -10.661579132080078

Token 659: ' g' (ID: 329)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22967252135276794
    2. 'g' (adapté à ' g') → logprob: -1.7296725511550903
    3. '   ' → logprob: -3.604672431945801
    4. 'print' → logprob: -8.1046724319458
    5. 'e' → logprob: -8.2296724319458
    6. '```' → logprob: -10.2296724319458
    7. '	g' → logprob: -10.9796724319458
    8. ' g' → logprob: -11.9796724319458
    9. 'he' → logprob: -12.1046724319458
    10. 'u' → logprob: -12.2296724319458

Token 660: '1' (ID: 16)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.00046498890151269734
    2. '[g' → logprob: -7.875464916229248
    3. 'e' → logprob: -10.250465393066406
    4. '[' → logprob: -10.625465393066406
    5. 'g' → logprob: -11.375465393066406
    6. '1' → logprob: -11.500465393066406
    7. ' [' → logprob: -14.125465393066406
    8. '\[' → logprob: -15.000465393066406
    9. '```' → logprob: -15.125465393066406
    10. '[u' → logprob: -15.125465393066406

Token 661: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.00010318557906430215
    2. '[' → logprob: -9.250102996826172
    3. 'e' → logprob: -12.250102996826172
    4. '[g' → logprob: -13.500102996826172
    5. '```' → logprob: -15.500102996826172
    6. '[a' → logprob: -16.000102996826172
    7. '\[' → logprob: -16.750102996826172
    8. ' [' → logprob: -17.125102996826172
    9. '(e' → logprob: -17.125102996826172
    10. '[(' → logprob: -17.250102996826172

Token 662: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001329287188127637
    2. '[i' → logprob: -7.37632942199707
    3. '[e' → logprob: -7.87632942199707
    4. '[' → logprob: -9.12632942199707
    5. '```' → logprob: -10.12632942199707
    6. '2' → logprob: -10.75132942199707
    7. 'i' → logprob: -10.87632942199707
    8. '[a' → logprob: -11.00132942199707
    9. '][' → logprob: -11.25132942199707
    10. 'dge' → logprob: -11.37632942199707

Token 663: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -4.203409844194539e-05
    2. ']' → logprob: -10.125041961669922
    3. '.append' → logprob: -13.625041961669922
    4. ' ].' → logprob: -15.250041961669922
    5. ').' → logprob: -15.500041961669922
    6. '.' → logprob: -15.750041961669922
    7. '   ' → logprob: -17.125041961669922
    8. 'append' → logprob: -17.750041961669922
    9. '],' → logprob: -18.875041961669922
    10. '       ' → logprob: -19.000041961669922

Token 664: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. 'appen' → logprob: -15.875
    3. '.append' → logprob: -16.5
    4. ' append' → logprob: -17.0
    5. '	append' → logprob: -18.25
    6. 'extend' → logprob: -18.375
    7. 'app' → logprob: -19.25
    8. 'Append' → logprob: -20.375
    9. 'insert' → logprob: -21.0
    10. 'push' → logprob: -21.125

Token 665: '(e' (ID: 3454)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.002822943264618516
    2. '(e' → logprob: -5.8778228759765625
    3. ' e' → logprob: -12.002822875976562
    4. '   ' → logprob: -12.252822875976562
    5. '	e' → logprob: -12.627822875976562
    6. '(' → logprob: -13.252822875976562
    7. '(
' → logprob: -14.627822875976562
    8. '
' → logprob: -14.627822875976562
    9. ' ' → logprob: -15.002822875976562
    10. '    ' → logprob: -16.127822875976562

Token 666: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -17.0
    3. 's' → logprob: -18.375
    4. 'e' → logprob: -19.0
    5. 'g' → logprob: -19.0
    6. '[' → logprob: -19.125
    7. 'c' → logprob: -19.25
    8. 'x' → logprob: -19.25
    9. 'v' → logprob: -19.75
    10. 'f' → logprob: -20.0

Token 667: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10096697509288788
    2. ')
' → logprob: -2.3509669303894043
    3. '       ' → logprob: -7.225966930389404
    4. ')
' → logprob: -10.975967407226562
    5. ')e' → logprob: -11.225967407226562
    6. ' )' → logprob: -14.850967407226562
    7. '   ' → logprob: -14.850967407226562
    8. '<|end|>' → logprob: -15.475967407226562
    9. '),' → logprob: -15.600967407226562
    10. ')

' → logprob: -15.850967407226562

Token 668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.8828707804204896e-05
    2. '   ' → logprob: -10.375048637390137
    3. 'g' → logprob: -11.125048637390137
    4. ' g' → logprob: -14.000048637390137
    5. '<|end|>' → logprob: -14.000048637390137
    6. ' ' → logprob: -14.500048637390137
    7. '           ' → logprob: -16.125049591064453
    8. '	' → logprob: -16.375049591064453
    9. '```' → logprob: -16.500049591064453
    10. ',' → logprob: -16.625049591064453

Token 669: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.00016194197814911604
    2. '       ' → logprob: -8.875162124633789
    3. ' g' → logprob: -10.875162124633789
    4. 'e' → logprob: -12.750162124633789
    5. '	g' → logprob: -15.750162124633789
    6. '   ' → logprob: -16.12516212463379
    7. '           ' → logprob: -17.87516212463379
    8. '        ' → logprob: -18.25016212463379
    9. '.g' → logprob: -18.62516212463379
    10. '      ' → logprob: -18.75016212463379

Token 670: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002646735229063779
    2. '[e' → logprob: -8.250265121459961
    3. 'e' → logprob: -13.750265121459961
    4. '2' → logprob: -14.375265121459961
    5. 's' → logprob: -14.875265121459961
    6. '[' → logprob: -14.875265121459961
    7. '[s' → logprob: -15.125265121459961
    8. '```' → logprob: -15.250265121459961
    9. '[g' → logprob: -15.875265121459961
    10. '[f' → logprob: -16.12526512145996

Token 671: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -1.5048530030981055e-06
    2. 'e' → logprob: -14.000001907348633
    3. '[' → logprob: -14.250001907348633
    4. '```' → logprob: -17.625001907348633
    5. '[s' → logprob: -18.375001907348633
    6. '[a' → logprob: -19.375001907348633
    7. '[
' → logprob: -20.250001907348633
    8. 's' → logprob: -20.375001907348633
    9. '[i' → logprob: -20.500001907348633
    10. '][' → logprob: -20.750001907348633

Token 672: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. '2' → logprob: -12.750003814697266
    3. '0' → logprob: -15.250003814697266
    4. 's' → logprob: -15.250003814697266
    5. '```' → logprob: -15.875003814697266
    6. 'e' → logprob: -16.250003814697266
    7. '[' → logprob: -16.750003814697266
    8. 'append' → logprob: -17.187503814697266
    9. '.append' → logprob: -17.250003814697266
    10. 'i' → logprob: -17.312503814697266

Token 673: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -2.7491250875755213e-05
    2. ']' → logprob: -10.625027656555176
    3. '[e' → logprob: -13.625027656555176
    4. '.append' → logprob: -14.250027656555176
    5. ').' → logprob: -14.375027656555176
    6. ' ].' → logprob: -14.875027656555176
    7. '[' → logprob: -16.50002670288086
    8. '.' → logprob: -16.75002670288086
    9. 'e' → logprob: -17.12502670288086
    10. '}.' → logprob: -17.75002670288086

Token 674: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.125
    3. 'appen' → logprob: -16.125
    4. ' append' → logprob: -17.5
    5. '	append' → logprob: -19.5
    6. 'add' → logprob: -21.5
    7. 'app' → logprob: -21.625
    8. '1' → logprob: -21.875
    9. '```' → logprob: -22.0
    10. 'prepend' → logprob: -22.5

Token 675: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.01817324012517929
    2. 'e' → logprob: -4.0181732177734375
    3. '1' → logprob: -10.893173217773438
    4. '(' → logprob: -13.518173217773438
    5. ' e' → logprob: -13.768173217773438
    6. ')e' → logprob: -14.268173217773438
    7. '[e' → logprob: -14.643173217773438
    8. '	e' → logprob: -14.768173217773438
    9. 's' → logprob: -14.768173217773438
    10. '```' → logprob: -15.643173217773438

Token 676: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. 'e' → logprob: -11.125015258789062
    3. 's' → logprob: -16.000015258789062
    4. ' e' → logprob: -17.500015258789062
    5. '```' → logprob: -17.875015258789062
    6. '１' → logprob: -19.000015258789062
    7. '۱' → logprob: -19.000015258789062
    8. '   ' → logprob: -19.000015258789062
    9. '१' → logprob: -19.125015258789062
    10. '১' → logprob: -19.562515258789062

Token 677: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.125210297293961e-05
    2. ')
' → logprob: -10.250081062316895
    3. '<|end|>' → logprob: -10.375081062316895
    4. ')return' → logprob: -11.500081062316895
    5. '       ' → logprob: -13.750081062316895
    6. ')#' → logprob: -13.875081062316895
    7. '```' → logprob: -14.625081062316895
    8. '   ' → logprob: -15.125081062316895
    9. ')

' → logprob: -15.500081062316895
    10. '<|end|>' → logprob: -15.625081062316895

Token 678: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05773022398352623
    2. '   ' → logprob: -3.182730197906494
    3. 'd' → logprob: -4.307730197906494
    4. 'def' → logprob: -8.057730674743652
    5. 'from' → logprob: -8.307730674743652
    6. 'distance' → logprob: -8.807730674743652
    7. ' dist' → logprob: -9.182730674743652
    8. 'for' → logprob: -10.057730674743652
    9. 'b' → logprob: -10.182730674743652
    10. 'dp' → logprob: -10.307730674743652

Token 679: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0924990326166153
    2. 'd' → logprob: -2.592499017715454
    3. 'def' → logprob: -5.217499256134033
    4. 'du' → logprob: -5.467499256134033
    5. 'ds' → logprob: -7.217499256134033
    6. 'dis' → logprob: -7.592499256134033
    7. 'da' → logprob: -7.592499256134033
    8. 'dp' → logprob: -7.717499256134033
    9. 'dd' → logprob: -7.967499256134033
    10. 'from' → logprob: -8.467498779296875

Token 680: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3522597849369049
    2. '1' → logprob: -1.7272597551345825
    3. '=' → logprob: -2.352259874343872
    4. '2' → logprob: -3.977259874343872
    5. 'g' → logprob: -6.227259635925293
    6. 'u' → logprob: -6.602259635925293
    7. '_' → logprob: -7.477259635925293
    8. 'v' → logprob: -7.852259635925293
    9. '=g' → logprob: -7.977259635925293
    10. 's' → logprob: -8.602259635925293

Token 681: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1128835380077362
    2. '=' → logprob: -2.2378835678100586
    3. 'u' → logprob: -10.862883567810059
    4. '1' → logprob: -10.862883567810059
    5. '=u' → logprob: -12.112883567810059
    6. '=g' → logprob: -12.487883567810059
    7. '=b' → logprob: -12.612883567810059
    8. '=v' → logprob: -13.237883567810059
    9. 'v' → logprob: -13.362883567810059
    10. 'b' → logprob: -13.487883567810059

Token 682: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.2020991056924686e-05
    2. ' bfs' → logprob: -10.500032424926758
    3. '[b' → logprob: -12.500032424926758
    4. 'dist' → logprob: -15.375032424926758
    5. '   ' → logprob: -15.750032424926758
    6. 'dfs' → logprob: -16.375032424926758
    7. '[' → logprob: -16.625032424926758
    8. '(b' → logprob: -16.875032424926758
    9. ' ' → logprob: -17.875032424926758
    10. '  ' → logprob: -18.000032424926758

Token 683: '(path' (ID: 10993)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.7865702509880066
    2. '(u' → logprob: -1.1615703105926514
    3. '(path' → logprob: -1.9115703105926514
    4. '(ans' → logprob: -2.9115703105926514
    5. '(' → logprob: -3.5365703105926514
    6. '(n' → logprob: -10.41157054901123
    7. '((' → logprob: -10.66157054901123
    8. 'ans' → logprob: -10.66157054901123
    9. 'u' → logprob: -10.66157054901123
    10. '(a' → logprob: -10.91157054901123

Token 684: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04423007741570473
    2. '[-' → logprob: -3.2942299842834473
    3. '0' → logprob: -5.169229984283447
    4. 'ans' → logprob: -8.919230461120605
    5. '(ans' → logprob: -9.169230461120605
    6. '[v' → logprob: -9.919230461120605
    7. '[path' → logprob: -9.919230461120605
    8. '[u' → logprob: -10.044230461120605
    9. '(' → logprob: -10.169230461120605
    10. '1' → logprob: -11.544230461120605

Token 685: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3938801884651184
    2. '0' → logprob: -1.1438801288604736
    3. '-' → logprob: -5.018880367279053
    4. '(ans' → logprob: -8.768879890441895
    5. '1' → logprob: -10.018879890441895
    6. ' ans' → logprob: -10.143879890441895
    7. 'len' → logprob: -10.893879890441895
    8. '   ' → logprob: -11.018879890441895
    9. '(' → logprob: -11.518879890441895
    10. '[' → logprob: -11.768879890441895

Token 686: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3153390884399414
    2. '[-' → logprob: -1.3153390884399414
    3. '(ans' → logprob: -6.440339088439941
    4. '(' → logprob: -8.690339088439941
    5. 'ans' → logprob: -8.940339088439941
    6. '0' → logprob: -9.440339088439941
    7. '+' → logprob: -10.440339088439941
    8. '[len' → logprob: -10.815339088439941
    9. '1' → logprob: -11.190339088439941
    10. '(-' → logprob: -11.190339088439941

Token 687: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005935313180088997
    2. ' n' → logprob: -5.130935192108154
    3. 'len' → logprob: -12.505935668945312
    4. '   ' → logprob: -13.005935668945312
    5. '    ' → logprob: -15.505935668945312
    6. ' len' → logprob: -15.630935668945312
    7. '	n' → logprob: -16.005935668945312
    8. '0' → logprob: -16.755935668945312
    9. ' ' → logprob: -17.130935668945312
    10. ')' → logprob: -17.380935668945312

Token 688: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011391390580683947
    2. ' ,' → logprob: -9.500113487243652
    3. ',g' → logprob: -10.250113487243652
    4. 'g' → logprob: -12.875113487243652
    5. '   ' → logprob: -14.250113487243652
    6. ' g' → logprob: -14.500113487243652
    7. ',n' → logprob: -18.62511444091797
    8. ',
' → logprob: -19.12511444091797
    9. '_,' → logprob: -20.50011444091797
    10. '  ' → logprob: -20.62511444091797

Token 689: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0008046258008107543
    2. ' g' → logprob: -7.125804424285889
    3. '   ' → logprob: -16.500804901123047
    4. '	g' → logprob: -17.250804901123047
    5. '_g' → logprob: -19.125804901123047
    6. '[g' → logprob: -20.000804901123047
    7. '#g' → logprob: -20.000804901123047
    8. '.g' → logprob: -20.625804901123047
    9. ' ' → logprob: -21.000804901123047
    10. ')' → logprob: -21.250804901123047

Token 690: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3120038501219824e-05
    2. 'g' → logprob: -9.875053405761719
    3. ')' → logprob: -13.625053405761719
    4. ' g' → logprob: -15.750053405761719
    5. ' ' → logprob: -15.750053405761719
    6. 's' → logprob: -16.87505340576172
    7. ',' → logprob: -17.50005340576172
    8. '   ' → logprob: -17.75005340576172
    9. '_' → logprob: -18.37505340576172
    10. '`' → logprob: -18.50005340576172

Token 691: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06198852136731148
    2. ')' → logprob: -2.811988592147827
    3. ')
' → logprob: -10.936988830566406
    4. '   ' → logprob: -13.311988830566406
    5. ')[' → logprob: -13.811988830566406
    6. ')

' → logprob: -14.936988830566406
    7. ' )
' → logprob: -16.811988830566406
    8. ')`
' → logprob: -17.936988830566406
    9. '[' → logprob: -18.186988830566406
    10. ').' → logprob: -18.561988830566406

Token 692: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004770803265273571
    2. '   ' → logprob: -5.504770755767822
    3. 'answer' → logprob: -7.879770755767822
    4. 'ans' → logprob: -8.12977123260498
    5. ' print' → logprob: -12.12977123260498
    6. 'result' → logprob: -12.25477123260498
    7. 'res' → logprob: -13.00477123260498
    8. 'dist' → logprob: -13.25477123260498
    9. 'ret' → logprob: -14.00477123260498
    10. '```' → logprob: -14.00477123260498

Token 693: ' xx' (ID: 44242)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.652451464906335e-05
    2. 'ans' → logprob: -12.500016212463379
    3. '   ' → logprob: -13.000016212463379
    4. 'answer' → logprob: -13.000016212463379
    5. 'dist' → logprob: -13.375016212463379
    6. 'res' → logprob: -13.375016212463379
    7. 'return' → logprob: -13.875016212463379
    8. 'max' → logprob: -14.000016212463379
    9. '#print' → logprob: -14.250016212463379
    10. 'for' → logprob: -14.375016212463379

Token 694: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0768718346953392
    2. '=' → logprob: -2.826871871948242
    3. 'x' → logprob: -4.326871871948242
    4. '=max' → logprob: -6.826871871948242
    5. ',' → logprob: -8.576871871948242
    6. 'max' → logprob: -9.076871871948242
    7. '1' → logprob: -9.451871871948242
    8. ' ' → logprob: -10.576871871948242
    9. 'a' → logprob: -11.076871871948242
    10. 'ans' → logprob: -11.326871871948242

Token 695: ' ans' (ID: 3345)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.020425794646143913
    2. 'dist' → logprob: -4.395425796508789
    3. '0' → logprob: -4.895425796508789
    4. ' max' → logprob: -9.270425796508789
    5. '(max' → logprob: -9.270425796508789
    6. '-' → logprob: -9.770425796508789
    7. 'min' → logprob: -10.520425796508789
    8. 'int' → logprob: -10.770425796508789
    9. 'path' → logprob: -11.270425796508789
    10. '[max' → logprob: -11.270425796508789

Token 696: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.714140772819519
    2. '<|end|>' → logprob: -0.964140772819519
    3. ' =' → logprob: -2.8391408920288086
    4. ' +' → logprob: -3.8391408920288086
    5. '=' → logprob: -3.8391408920288086
    6. ',' → logprob: -5.214140892028809
    7. '<|end|>' → logprob: -5.464140892028809
    8. '+=' → logprob: -5.589140892028809
    9. ' +=' → logprob: -5.714140892028809
    10. '-' → logprob: -6.214140892028809

Token 697: ' max' (ID: 2999)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2964131832122803
    2. 'dist' → logprob: -1.4214131832122803
    3. '(dist' → logprob: -5.046413421630859
    4. 'b' → logprob: -6.171413421630859
    5. 'max' → logprob: -6.671413421630859
    6. ' dist' → logprob: -6.671413421630859
    7. '(' → logprob: -6.796413421630859
    8. 'len' → logprob: -6.796413421630859
    9. '   ' → logprob: -8.42141342163086
    10. 'int' → logprob: -8.54641342163086

Token 698: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.00000286102295
    3. 'dist' → logprob: -14.12500286102295
    4. '([' → logprob: -16.750003814697266
    5. '((' → logprob: -17.625003814697266
    6. '(d' → logprob: -18.250003814697266
    7. '	dist' → logprob: -18.750003814697266
    8. '(distance' → logprob: -19.375003814697266
    9. '_dist' → logprob: -19.750003814697266
    10. '(
' → logprob: -19.875003814697266

Token 699: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '(dist' → logprob: -16.125
    3. 'dist' → logprob: -18.75
    4. '１' → logprob: -18.75
    5. ')' → logprob: -18.875
    6. ' ' → logprob: -19.375
    7. '(path' → logprob: -19.75
    8. '```' → logprob: -20.4375
    9. '(' → logprob: -20.5625
    10. '१' → logprob: -21.1875

Token 700: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010235205991193652
    2. ')+' → logprob: -7.126023292541504
    3. '(path' → logprob: -8.876023292541504
    4. '(' → logprob: -10.751023292541504
    5. '[path' → logprob: -11.001023292541504
    6. '[' → logprob: -11.126023292541504
    7. ')-' → logprob: -12.251023292541504
    8. ')>' → logprob: -12.751023292541504
    9. ')*' → logprob: -13.251023292541504
    10. '))' → logprob: -13.376023292541504

Token 701: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 702: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0233075562864542
    2. '   ' → logprob: -3.7733075618743896
    3. ' print' → logprob: -9.898307800292969
    4. '	print' → logprob: -12.023307800292969
    5. 'return' → logprob: -13.148307800292969
    6. '```' → logprob: -13.273307800292969
    7. '<|end|>' → logprob: -13.648307800292969
    8. '#print' → logprob: -14.773307800292969
    9. '    
' → logprob: -15.773307800292969
    10. '  ' → logprob: -16.64830780029297

Token 703: ' len' (ID: 4631)
  Prédit: ' xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' xx' → logprob: -0.7616668343544006
    2. 'xx' → logprob: -1.0116667747497559
    3. ' u' → logprob: -2.261666774749756
    4. 'u' → logprob: -3.011666774749756
    5. '(xx' → logprob: -5.261666774749756
    6. 'v' → logprob: -5.886666774749756
    7. ' v' → logprob: -6.636666774749756
    8. ' ans' → logprob: -6.761666774749756
    9. ' dist' → logprob: -7.136666774749756
    10. ' path' → logprob: -7.261666774749756

Token 704: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.00016945181414484978
    2. 'path' → logprob: -8.75016975402832
    3. '(' → logprob: -11.62516975402832
    4. ' path' → logprob: -14.75016975402832
    5. ' (' → logprob: -15.50016975402832
    6. '(x' → logprob: -15.75016975402832
    7. '(sys' → logprob: -16.00016975402832
    8. '(p' → logprob: -16.25016975402832
    9. '(
' → logprob: -16.37516975402832
    10. '(g' → logprob: -16.50016975402832

Token 705: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03879930451512337
    2. ')>' → logprob: -3.288799285888672
    3. '>' → logprob: -7.663799285888672
    4. '[' → logprob: -8.413799285888672
    5. ' >' → logprob: -10.663799285888672
    6. ')<' → logprob: -11.413799285888672
    7. ' )' → logprob: -11.413799285888672
    8. ')==' → logprob: -11.663799285888672
    9. ')>
' → logprob: -12.288799285888672
    10. '   ' → logprob: -13.663799285888672

Token 706: ' %' (ID: 1851)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2585117220878601
    2. ' >' → logprob: -1.6335117816925049
    3. '==' → logprob: -4.258511543273926
    4. ' ==' → logprob: -5.258511543273926
    5. '[' → logprob: -6.258511543273926
    6. '<' → logprob: -6.258511543273926
    7. '<=' → logprob: -6.258511543273926
    8. ' <=' → logprob: -6.383511543273926
    9. ':' → logprob: -6.633511543273926
    10. ' <' → logprob: -6.758511543273926

Token 707: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0823945552110672
    2. ' ' → logprob: -2.582394599914551
    3. '==' → logprob: -5.957394599914551
    4. '=' → logprob: -7.457394599914551
    5. ' ==' → logprob: -8.83239459991455
    6. '>' → logprob: -9.33239459991455
    7. '!' → logprob: -10.95739459991455
    8. ' ' → logprob: -11.08239459991455
    9. '3' → logprob: -11.45739459991455
    10. '```' → logprob: -11.70739459991455

Token 708: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009003812447190285
    2. ' ' → logprob: -7.2509002685546875
    3. '==' → logprob: -8.875900268554688
    4. '>' → logprob: -11.000900268554688
    5. '=' → logprob: -11.250900268554688
    6. '3' → logprob: -12.125900268554688
    7. '!=' → logprob: -12.375900268554688
    8. '!' → logprob: -12.875900268554688
    9. '```' → logprob: -13.125900268554688
    10. '1' → logprob: -13.500900268554688

Token 709: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4315173029899597
    2. '!=' → logprob: -1.4315173625946045
    3. ' ==' → logprob: -2.8065173625946045
    4. ' !=' → logprob: -3.6815173625946045
    5. '>' → logprob: -3.9315173625946045
    6. ':' → logprob: -5.306517124176025
    7. ' >' → logprob: -7.931517124176025
    8. ')' → logprob: -8.681517601013184
    9. '()==' → logprob: -8.806517601013184
    10. '=' → logprob: -8.806517601013184

Token 710: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14622116088867188
    2. '1' → logprob: -2.021221160888672
    3. ' ' → logprob: -5.646221160888672
    4. '==' → logprob: -12.958721160888672
    5. '=' → logprob: -13.146221160888672
    6. '2' → logprob: -13.583721160888672
    7. '  ' → logprob: -14.271221160888672
    8. '   ' → logprob: -14.333721160888672
    9. '```' → logprob: -14.458721160888672
    10. ' ==' → logprob: -15.583721160888672

Token 711: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11366918683052063
    2. '1' → logprob: -2.2386691570281982
    3. '2' → logprob: -7.238669395446777
    4. ' ' → logprob: -8.988669395446777
    5. '==' → logprob: -13.676169395446777
    6. '```' → logprob: -14.113669395446777
    7. '=' → logprob: -15.051169395446777
    8. '  ' → logprob: -15.926169395446777
    9. '   ' → logprob: -16.05116844177246
    10. ' ==' → logprob: -16.11366844177246

Token 712: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028920015320181847
    2. '==' → logprob: -4.1539201736450195
    3. ' ==' → logprob: -5.0289201736450195
    4. ':
' → logprob: -5.7789201736450195
    5. '>' → logprob: -7.0289201736450195
    6. ' :' → logprob: -7.1539201736450195
    7. ' and' → logprob: -7.4039201736450195
    8. '!=' → logprob: -8.52892017364502
    9. ' !=' → logprob: -8.65392017364502
    10. '   ' → logprob: -8.77892017364502

Token 713: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00858384370803833
    2. 'xx' → logprob: -5.258584022521973
    3. ' xx' → logprob: -5.883584022521973
    4. '       ' → logprob: -8.383584022521973
    5. ':' → logprob: -8.383584022521973
    6. '```' → logprob: -10.883584022521973
    7. ' and' → logprob: -11.133584022521973
    8. 'print' → logprob: -11.383584022521973
    9. ' print' → logprob: -11.633584022521973
    10. '  ' → logprob: -11.633584022521973

Token 714: ' xx' (ID: 44242)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' (adapté à ' xx') → logprob: -0.005834118463099003
    2. 'print' → logprob: -5.505834102630615
    3. ' xx' → logprob: -6.880834102630615
    4. '   ' → logprob: -7.255834102630615
    5. ' print' → logprob: -11.505834579467773
    6. '```' → logprob: -12.505834579467773
    7. '(xx' → logprob: -12.755834579467773
    8. 'xxx' → logprob: -13.505834579467773
    9. '
' → logprob: -13.755834579467773
    10. '.xx' → logprob: -15.380834579467773

Token 715: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31359970569610596
    2. '-=' → logprob: -1.438599705696106
    3. ' -=' → logprob: -4.313599586486816
    4. ' +=' → logprob: -4.438599586486816
    5. '=' → logprob: -5.063599586486816
    6. '-' → logprob: -8.563599586486816
    7. ' =' → logprob: -8.688599586486816
    8. '+' → logprob: -11.063599586486816
    9. '*=' → logprob: -11.438599586486816
    10. ' ' → logprob: -12.438599586486816

Token 716: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010585333220660686
    2. '0' → logprob: -7.126058578491211
    3. ' ' → logprob: -8.376058578491211
    4. '2' → logprob: -11.001058578491211
    5. 'mod' → logprob: -13.751058578491211
    6. 'dist' → logprob: -14.001058578491211
    7. '-' → logprob: -14.251058578491211
    8. '10' → logprob: -14.313558578491211
    9. '3' → logprob: -14.501058578491211
    10. '   ' → logprob: -15.063558578491211

Token 717: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017652629176154733
    2. '0' → logprob: -6.376765251159668
    3. '2' → logprob: -10.501765251159668
    4. ' ' → logprob: -11.376765251159668
    5. 'dist' → logprob: -11.501765251159668
    6. 'mod' → logprob: -11.876765251159668
    7. '-' → logprob: -12.876765251159668
    8. '3' → logprob: -14.126765251159668
    9. 'math' → logprob: -14.376765251159668
    10. '10' → logprob: -14.876765251159668

Token 718: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06497495621442795
    2. 'print' → logprob: -2.8149750232696533
    3. 'if' → logprob: -6.064974784851074
    4. '<|end|>' → logprob: -7.439974784851074
    5. ' print' → logprob: -10.439974784851074
    6. '
' → logprob: -11.064974784851074
    7. '```' → logprob: -11.189974784851074
    8. '	print' → logprob: -11.314974784851074
    9. 'return' → logprob: -11.939974784851074
    10. ' if' → logprob: -12.439974784851074

Token 719: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.252067506313324
    2. 'print' → logprob: -1.5020675659179688
    3. ' print' → logprob: -9.252067565917969
    4. '<|end|>' → logprob: -10.502067565917969
    5. '	print' → logprob: -11.627067565917969
    6. '```' → logprob: -13.252067565917969
    7. 'return' → logprob: -13.752067565917969
    8. 'if' → logprob: -13.877067565917969
    9. '#print' → logprob: -14.252067565917969
    10. '       ' → logprob: -14.377067565917969

Token 720: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11726350337266922
    2. 'print' → logprob: -2.2422635555267334
    3. 'return' → logprob: -6.492263317108154
    4. '<|end|>' → logprob: -6.617263317108154
    5. ' print' → logprob: -6.742263317108154
    6. ' return' → logprob: -8.367263793945312
    7. '#' → logprob: -9.617263793945312
    8. '       ' → logprob: -10.367263793945312
    9. '```' → logprob: -11.117263793945312
    10. 'pass' → logprob: -11.242263793945312

Token 721: ' this' (ID: 495)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.6607872247695923
    2. '#' → logprob: -2.0357871055603027
    3. ' path' → logprob: -2.2857871055603027
    4. ' not' → logprob: -3.0357871055603027
    5. 'path' → logprob: -3.0357871055603027
    6. 'pass' → logprob: -3.1607871055603027
    7. 'x' → logprob: -3.4107871055603027
    8. 'not' → logprob: -3.7857871055603027
    9. ' the' → logprob: -4.285787105560303
    10. ' xx' → logprob: -5.035787105560303

Token 722: ' off' (ID: 1277)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 723: '-by' (ID: 23541)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031088663265109062
    2. '<|end|>' → logprob: -3.5310885906219482
    3. 'print' → logprob: -7.281088829040527
    4. '<|end|>' → logprob: -8.781088829040527
    5. '.' → logprob: -9.031088829040527
    6. '#' → logprob: -10.156088829040527
    7. '...' → logprob: -10.156088829040527
    8. ')' → logprob: -10.156088829040527
    9. '[]' → logprob: -10.406088829040527
    10. '       ' → logprob: -10.406088829040527

Token 724: '-one' (ID: 28925)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001800365629605949
    2. 'one' → logprob: -6.376800537109375
    3. 'by' → logprob: -10.001800537109375
    4. ' one' → logprob: -10.626800537109375
    5. ' ' → logprob: -11.251800537109375
    6. '2' → logprob: -11.501800537109375
    7. '0' → logprob: -13.001800537109375
    8. '```' → logprob: -13.876800537109375
    9. '-one' → logprob: -14.001800537109375
    10. '-by' → logprob: -14.251800537109375

Token 725: '?
' (ID: 3901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004943289794027805
    2. '<|end|>' → logprob: -5.879943370819092
    3. 'print' → logprob: -6.254943370819092
    4. '
' → logprob: -8.754942893981934
    5. '```' → logprob: -11.004942893981934
    6. '<|end|>' → logprob: -11.879942893981934
    7. ' print' → logprob: -12.004942893981934
    8. 'if' → logprob: -12.129942893981934
    9. '       ' → logprob: -12.379942893981934
    10. '    
' → logprob: -12.379942893981934

Token 726: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 727: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16115093231201172
    2. 'if' → logprob: -1.9111509323120117
    3. '   ' → logprob: -7.786150932312012
    4. 'return' → logprob: -7.911150932312012
    5. '<|end|>' → logprob: -9.536150932312012
    6. ' print' → logprob: -10.911150932312012
    7. 'main' → logprob: -11.286150932312012
    8. '#' → logprob: -11.411150932312012
    9. ' if' → logprob: -11.536150932312012
    10. '```' → logprob: -11.661150932312012

Token 728: '(xx' (ID: 161745)
  Prédit: '(xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xx' → logprob: -4.961759259458631e-06
    2. 'xx' → logprob: -12.250004768371582
    3. '(x' → logprob: -15.625004768371582
    4. '(max' → logprob: -17.0000057220459
    5. '(' → logprob: -17.3750057220459
    6. ' xx' → logprob: -18.8750057220459
    7. '((' → logprob: -18.8750057220459
    8. '(abs' → logprob: -20.5000057220459
    9. '(len' → logprob: -20.8750057220459
    10. ' (' → logprob: -20.8750057220459

Token 729: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ' )' → logprob: -12.250005722045898
    3. ')
' → logprob: -13.875005722045898
    4. ')`' → logprob: -16.2500057220459
    5. '))' → logprob: -17.0000057220459
    6. ')#' → logprob: -17.2500057220459
    7. '   ' → logprob: -18.0000057220459
    8. '`)' → logprob: -18.2500057220459
    9. ')}' → logprob: -18.6250057220459
    10. '+' → logprob: -19.2500057220459

Token 730: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001227276516146958
    2. 'main' → logprob: -9.625123023986816
    3. ' if' → logprob: -10.625123023986816
    4. '#' → logprob: -11.500123023986816
    5. '
' → logprob: -11.625123023986816
    6. '```' → logprob: -12.125123023986816
    7. '<|end|>' → logprob: -12.375123023986816
    8. 'return' → logprob: -13.500123023986816
    9. '  
' → logprob: -14.000123023986816
    10. '    
' → logprob: -15.500123023986816

Token 731: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5760166645050049
    2. ' __' → logprob: -0.8260166645050049
    3. '_' → logprob: -9.951016426086426
    4. '_name' → logprob: -11.076016426086426
    5. '___' → logprob: -12.201016426086426
    6. 'name' → logprob: -12.951016426086426
    7. '(__' → logprob: -13.576016426086426
    8. 'if' → logprob: -14.076016426086426
    9. '/__' → logprob: -14.201016426086426
    10. '.__' → logprob: -14.451016426086426

Token 732: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005441620480269194
    2. ' ==' → logprob: -6.005441665649414
    3. '_' → logprob: -6.505441665649414
    4. ' __' → logprob: -6.755441665649414
    5. '==' → logprob: -8.380441665649414
    6. '_name' → logprob: -10.755441665649414
    7. '.__' → logprob: -11.130441665649414
    8. '___' → logprob: -11.630441665649414
    9. '____' → logprob: -12.505441665649414
    10. '=="' → logprob: -12.755441665649414

Token 733: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.696889623621246e-06
    2. '__.__' → logprob: -13.00000286102295
    3. '__.' → logprob: -15.62500286102295
    4. '==' → logprob: -16.000001907348633
    5. '_' → logprob: -17.125001907348633
    6. '__
' → logprob: -17.625001907348633
    7. '____' → logprob: -18.250001907348633
    8. '__('' → logprob: -18.500001907348633
    9. '___' → logprob: -18.625001907348633
    10. ' __' → logprob: -18.625001907348633

Token 734: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2548249363899231
    2. '__' → logprob: -1.7548248767852783
    3. ' ==' → logprob: -3.1298248767852783
    4. '=="' → logprob: -4.879825115203857
    5. '=='' → logprob: -8.0048246383667
    6. '=' → logprob: -8.3798246383667
    7. '==
' → logprob: -9.2548246383667
    8. '_' → logprob: -11.3798246383667
    9. '===' → logprob: -11.8798246383667
    10. ' =="' → logprob: -13.3798246383667

Token 735: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014185246080160141
    2. ''' → logprob: -4.264185428619385
    3. '__' → logprob: -10.889184951782227
    4. ' "__' → logprob: -12.764184951782227
    5. ' '__' → logprob: -16.014184951782227
    6. ''"' → logprob: -17.514184951782227
    7. '"name' → logprob: -17.639184951782227
    8. '   ' → logprob: -17.764184951782227
    9. '"user' → logprob: -17.889184951782227
    10. '"'' → logprob: -18.139184951782227

Token 736: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.07742472738027573
    2. '__' → logprob: -3.0774247646331787
    3. '"' → logprob: -3.5774247646331787
    4. ''' → logprob: -7.7024245262146
    5. 'name' → logprob: -10.952425003051758
    6. '__
' → logprob: -12.952425003051758
    7. '_main' → logprob: -13.202425003051758
    8. ' main' → logprob: -13.452425003051758
    9. '__":
' → logprob: -14.327425003051758
    10. '"name' → logprob: -14.452425003051758

Token 737: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20222312211990356
    2. '__' → logprob: -1.7022230625152588
    3. '__':
' → logprob: -7.577223300933838
    4. '__:' → logprob: -8.20222282409668
    5. '__.' → logprob: -11.57722282409668
    6. '__["' → logprob: -11.95222282409668
    7. '__.__' → logprob: -13.20222282409668
    8. '__",' → logprob: -13.57722282409668
    9. '():
' → logprob: -14.07722282409668
    10. '__("' → logprob: -14.20222282409668

Token 738: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14431358873844147
    2. 'main' → logprob: -2.3943135738372803
    3. '	main' → logprob: -3.1443135738372803
    4. ' main' → logprob: -10.14431381225586
    5. '   ' → logprob: -11.64431381225586
    6. '	Main' → logprob: -13.39431381225586
    7. '_main' → logprob: -14.14431381225586
    8. '    
' → logprob: -15.01931381225586
    9. ' ' → logprob: -15.01931381225586
    10. '```' → logprob: -15.26931381225586

Token 739: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '	main' → logprob: -18.25
    4. '(main' → logprob: -23.375
    5. '_main' → logprob: -24.0
    6. '   ' → logprob: -24.625
    7. '.main' → logprob: -25.0
    8. 'mainwindow' → logprob: -26.875
    9. '/main' → logprob: -27.125
    10. 'import' → logprob: -27.125

Token 740: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 738
Tokens correctement prédits (1ère position, stricte): 271
Tokens correctement prédits (1ère position, avec adaptation): 300
Tokens correctement prédits (top 10): 575
Précision stricte (1ère position): 36.72%
Précision adaptée (1ère position): 40.65%
Précision (top 10): 77.91%
================================================================================
