================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import accumulate, islice, count

n = int(input())
H = list(map(int, input().split()))

def clever_count(seq):
    pairs = zip(seq, [float('-inf')] + seq)
    mark = list(map(lambda x: int(x[0] >= x[1]), pairs))
    # Replace first with 1 because initial comparison is always true
    mark[0] = 1
    return sum(accumulate(mark, func=lambda x, y: y if y == 1 and seq[mark.index(y)] >= max(seq[:mark.index(y)+1]) else 0))

# Create another iterable that yields current max so far for comparison
running_max = list(accumulate(H, max))
ans = 1 + sum(map(lambda p: int(p[0] >= p[1]), zip(H[1:], running_max[:-1])))
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006976079195737839
    2. '(lambda' → logprob: -5.131976127624512
    3. ' (' → logprob: -7.756976127624512
    4. ',' → logprob: -8.506976127624512
    5. '```' → logprob: -9.256976127624512
    6. '.' → logprob: -9.381976127624512
    7. 'def' → logprob: -9.506976127624512
    8. '(
' → logprob: -10.256976127624512
    9. 'lambda' → logprob: -10.756976127624512
    10. '\(' → logprob: -10.881976127624512

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6086577773094177
    2. 'import' → logprob: -0.8586577773094177
    3. '.' → logprob: -3.4836578369140625
    4. '.import' → logprob: -6.7336578369140625
    5. ' .' → logprob: -9.358657836914062
    6. '	import' → logprob: -9.733657836914062
    7. '.im' → logprob: -10.108657836914062
    8. '_import' → logprob: -10.483657836914062
    9. ' ' → logprob: -10.483657836914062
    10. '<|end|>' → logprob: -11.358657836914062

Token 8: ' accumulate' (ID: 74226)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.0864453315734863
    2. 'count' → logprob: -1.0864453315734863
    3. 'acc' → logprob: -2.3364453315734863
    4. 'cycle' → logprob: -2.7114453315734863
    5. ' group' → logprob: -2.8364453315734863
    6. 'chain' → logprob: -2.9614453315734863
    7. 'com' → logprob: -4.211445331573486
    8. ' cycle' → logprob: -4.836445331573486
    9. 'product' → logprob: -4.961445331573486
    10. ' chain' → logprob: -5.211445331573486

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0316426083445549
    2. '\' → logprob: -4.906642436981201
    3. '\n' → logprob: -5.156642436981201
    4. 'def' → logprob: -5.281642436981201
    5. '(
' → logprob: -5.531642436981201
    6. ',' → logprob: -5.781642436981201
    7. '#' → logprob: -6.031642436981201
    8. '.' → logprob: -7.656642436981201
    9. '`' → logprob: -7.656642436981201
    10. '\(' → logprob: -7.906642436981201

Token 10: ' is' (ID: 382)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.5756515860557556
    2. ' group' → logprob: -1.5756516456604004
    3. 'chain' → logprob: -2.4506516456604004
    4. ' chain' → logprob: -2.4506516456604004
    5. 'com' → logprob: -3.9506516456604004
    6. 'product' → logprob: -4.4506516456604
    7. 'count' → logprob: -4.5756516456604
    8. ' product' → logprob: -5.3256516456604
    9. 'cycle' → logprob: -5.9506516456604
    10. 'compress' → logprob: -6.5756516456604

Token 11: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -8.93579563125968e-05
    2. 'l' → logprob: -10.250089645385742
    3. 'lic' → logprob: -11.000089645385742
    4. '```' → logprob: -12.250089645385742
    5. 'land' → logprob: -12.500089645385742
    6. 'n' → logprob: -12.500089645385742
    7. '#' → logprob: -12.625089645385742
    8. '
' → logprob: -12.875089645385742
    9. 'liced' → logprob: -13.125089645385742
    10. '

' → logprob: -13.250089645385742

Token 12: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02015899308025837
    2. '(
' → logprob: -4.395158767700195
    3. ',' → logprob: -5.645158767700195
    4. '\' → logprob: -6.645158767700195
    5. '.' → logprob: -7.020158767700195
    6. 'def' → logprob: -7.520158767700195
    7. '\n' → logprob: -7.645158767700195
    8. '`' → logprob: -8.770158767700195
    9. '\(' → logprob: -8.895158767700195
    10. '```' → logprob: -9.145158767700195

Token 13: ' count' (ID: 3605)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -1.3340001106262207
    2. 'group' → logprob: -1.4590001106262207
    3. 'count' → logprob: -1.7090001106262207
    4. ' chain' → logprob: -1.9590001106262207
    5. ' group' → logprob: -3.0840001106262207
    6. 'cycle' → logprob: -3.3340001106262207
    7. 'take' → logprob: -3.7090001106262207
    8. 'com' → logprob: -4.459000110626221
    9. ' cycle' → logprob: -4.584000110626221
    10. ' count' → logprob: -4.709000110626221

Token 14: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15928010642528534
    2. '\' → logprob: -2.9092800617218018
    3. '(
' → logprob: -2.9092800617218018
    4. '\n' → logprob: -3.7842800617218018
    5. 'def' → logprob: -5.284280300140381
    6. '[' → logprob: -6.534280300140381
    7. ',' → logprob: -6.659280300140381
    8. '```' → logprob: -6.784280300140381
    9. '`' → logprob: -7.034280300140381
    10. '.' → logprob: -7.159280300140381

Token 15: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04948905110359192
    2. '(
' → logprob: -3.6744890213012695
    3. 'd' → logprob: -4.5494890213012695
    4. 'def' → logprob: -5.6744890213012695
    5. '#' → logprob: -6.0494890213012695
    6. ',' → logprob: -6.4244890213012695
    7. '\' → logprob: -6.7994890213012695
    8. '_' → logprob: -7.1744890213012695
    9. '`' → logprob: -7.9244890213012695
    10. 'a' → logprob: -7.9244890213012695

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33590269088745117
    2. '=' → logprob: -1.5859026908874512
    3. '_' → logprob: -3.085902690887451
    4. ' ' → logprob: -4.210902690887451
    5. 'u' → logprob: -5.085902690887451
    6. 'umber' → logprob: -5.585902690887451
    7. 'um' → logprob: -5.835902690887451
    8. ',' → logprob: -6.335902690887451
    9. ')' → logprob: -7.085902690887451
    10. '  ' → logprob: -7.210902690887451

Token 17: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0060060597024858
    2. '10' → logprob: -5.381006240844727
    3. '0' → logprob: -7.631006240844727
    4. '1' → logprob: -8.006006240844727
    5. '100' → logprob: -8.256006240844727
    6. ' int' → logprob: -9.131006240844727
    7. '5' → logprob: -9.506006240844727
    8. '20' → logprob: -9.756006240844727
    9. '50' → logprob: -11.131006240844727
    10. 'int' → logprob: -11.756006240844727

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00021903318702243268
    2. '('' → logprob: -9.250219345092773
    3. '(n' → logprob: -10.000219345092773
    4. '()' → logprob: -11.375219345092773
    5. '(
' → logprob: -11.500219345092773
    6. '<|end|>' → logprob: -11.500219345092773
    7. '(`' → logprob: -11.875219345092773
    8. '(input' → logprob: -11.875219345092773
    9. ' (' → logprob: -12.000219345092773
    10. '```' → logprob: -12.500219345092773

Token 19: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9410136342048645
    2. '(' → logprob: -1.1910135746002197
    3. ')' → logprob: -1.4410135746002197
    4. '())' → logprob: -2.6910135746002197
    5. '))' → logprob: -8.06601333618164
    6. '(
' → logprob: -8.19101333618164
    7. '(()' → logprob: -8.56601333618164
    8. '('' → logprob: -8.81601333618164
    9. '(

' → logprob: -9.06601333618164
    10. '(`' → logprob: -9.31601333618164

Token 20: 'H' (ID: 39)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4628433287143707
    2. ' ' → logprob: -2.962843418121338
    3. 's' → logprob: -2.962843418121338
    4. 'result' → logprob: -2.962843418121338
    5. 'for' → logprob: -3.087843418121338
    6. '(' → logprob: -3.837843418121338
    7. '[' → logprob: -4.087843418121338
    8. 'a' → logprob: -4.087843418121338
    9. ' 
' → logprob: -4.462843418121338
    10. ',' → logprob: -4.462843418121338

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.058568477630615234
    2. ' =' → logprob: -3.9335684776306152
    3. '[i' → logprob: -4.558568477630615
    4. '[]' → logprob: -4.933568477630615
    5. ')' → logprob: -5.308568477630615
    6. '=' → logprob: -5.933568477630615
    7. '[:]' → logprob: -6.183568477630615
    8. ' ' → logprob: -6.433568477630615
    9. ' heights' → logprob: -6.683568477630615
    10. 's' → logprob: -6.933568477630615

Token 22: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3445534408092499
    2. ' [' → logprob: -1.9695534706115723
    3. 'list' → logprob: -1.9695534706115723
    4. '[' → logprob: -4.844553470611572
    5. ' []' → logprob: -6.094553470611572
    6. '[list' → logprob: -6.219553470611572
    7. '[]' → logprob: -9.219552993774414
    8. '[int' → logprob: -9.594552993774414
    9. '[input' → logprob: -9.719552993774414
    10. ' ' → logprob: -10.094552993774414

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10303303599357605
    2. '(range' → logprob: -2.9780330657958984
    3. '(map' → logprob: -4.103033065795898
    4. '(acc' → logprob: -4.228033065795898
    5. '(is' → logprob: -4.728033065795898
    6. '(int' → logprob: -6.478033065795898
    7. '(filter' → logprob: -6.853033065795898
    8. '()' → logprob: -7.353033065795898
    9. '(input' → logprob: -7.478033065795898
    10. '(count' → logprob: -8.353033065795898

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.035128410905599594
    2. '(' → logprob: -3.410128355026245
    3. '(str' → logprob: -7.160128593444824
    4. '(lambda' → logprob: -7.535128593444824
    5. '(input' → logprob: -9.160128593444824
    6. '(float' → logprob: -10.910128593444824
    7. '(eval' → logprob: -11.160128593444824
    8. 'int' → logprob: -11.410128593444824
    9. '<int' → logprob: -12.285128593444824
    10. '(
' → logprob: -12.285128593444824

Token 25: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.027959253638982773
    2. ',input' → logprob: -3.7779593467712402
    3. '(' → logprob: -5.77795934677124
    4. ',' → logprob: -6.52795934677124
    5. 'input' → logprob: -9.277958869934082
    6. '(eval' → logprob: -11.777958869934082
    7. '=input' → logprob: -11.777958869934082
    8. ' (' → logprob: -12.277958869934082
    9. ' ,' → logprob: -12.277958869934082
    10. ')' → logprob: -12.527958869934082

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03376660868525505
    2. ' input' → logprob: -3.408766508102417
    3. 'str' → logprob: -10.283766746520996
    4. '(input' → logprob: -10.408766746520996
    5. ',input' → logprob: -10.783766746520996
    6. 'range' → logprob: -11.283766746520996
    7. ')' → logprob: -11.533766746520996
    8. 'list' → logprob: -12.533766746520996
    9. 'lambda' → logprob: -12.783766746520996
    10. ' ' → logprob: -13.158766746520996

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.9153885558771435e-06
    2. '.split' → logprob: -13.375005722045898
    3. 'split' → logprob: -13.500005722045898
    4. '(' → logprob: -14.000005722045898
    5. '()' → logprob: -14.500005722045898
    6. ' .' → logprob: -15.000005722045898
    7. '()))' → logprob: -15.375005722045898
    8. ' ().' → logprob: -15.500005722045898
    9. '()));' → logprob: -16.1250057220459
    10. ')' → logprob: -16.1250057220459

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.20603168499656e-05
    2. 'strip' → logprob: -9.750061988830566
    3. ' split' → logprob: -13.125061988830566
    4. '(split' → logprob: -13.750061988830566
    5. 'rstrip' → logprob: -14.500061988830566
    6. 'spl' → logprob: -16.250062942504883
    7. ')' → logprob: -17.625062942504883
    8. 's' → logprob: -18.250062942504883
    9. 'read' → logprob: -18.750062942504883
    10. '.split' → logprob: -18.750062942504883

Token 29: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.14745144546031952
    2. ')' → logprob: -2.022451400756836
    3. '()))' → logprob: -6.022451400756836
    4. ')))' → logprob: -6.647451400756836
    5. '(' → logprob: -7.522451400756836
    6. '())' → logprob: -8.522451400756836
    7. '),' → logprob: -8.522451400756836
    8. ''))' → logprob: -11.022451400756836
    9. '(','' → logprob: -11.397451400756836
    10. ',' → logprob: -11.647451400756836

Token 30: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14539845287799835
    2. 's' → logprob: -3.5203983783721924
    3. 'd' → logprob: -3.6453983783721924
    4. 'dp' → logprob: -4.3953986167907715
    5. '_' → logprob: -4.5203986167907715
    6. '#' → logprob: -4.6453986167907715
    7. '
' → logprob: -4.8953986167907715
    8. 'a' → logprob: -5.1453986167907715
    9. 'c' → logprob: -5.1453986167907715
    10. 'result' → logprob: -5.7703986167907715

Token 31: ' clever' (ID: 42218)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4667104482650757
    2. ' prefix' → logprob: -3.2167105674743652
    3. ' accumulate' → logprob: -3.2167105674743652
    4. ' longest' → logprob: -3.3417105674743652
    5. ' factorial' → logprob: -3.4667105674743652
    6. ' ' → logprob: -3.9667105674743652
    7. ' count' → logprob: -4.091710567474365
    8. ' maximum' → logprob: -4.341710567474365
    9. ' is' → logprob: -4.341710567474365
    10. ' min' → logprob: -4.341710567474365

Token 32: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3077083230018616
    2. '_sum' → logprob: -2.682708263397217
    3. '_factor' → logprob: -3.557708263397217
    4. '_cut' → logprob: -3.807708263397217
    5. '_sort' → logprob: -3.932708263397217
    6. '_max' → logprob: -4.307708263397217
    7. '_merge' → logprob: -4.432708263397217
    8. '_(' → logprob: -4.682708263397217
    9. '_suffix' → logprob: -4.807708263397217
    10. '_concat' → logprob: -5.182708263397217

Token 33: '(seq' (ID: 78669)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06242864951491356
    2. '(s' → logprob: -3.5624287128448486
    3. 's' → logprob: -4.1874284744262695
    4. '_' → logprob: -5.4374284744262695
    5. '(H' → logprob: -6.1874284744262695
    6. '(_' → logprob: -6.6874284744262695
    7. '_sub' → logprob: -7.0624284744262695
    8. '(n' → logprob: -7.3124284744262695
    9. '_occ' → logprob: -7.3124284744262695
    10. '_s' → logprob: -7.4374284744262695

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5778383612632751
    2. ',' → logprob: -0.8278383612632751
    3. ')' → logprob: -6.95283842086792
    4. '(' → logprob: -7.95283842086792
    5. '):
' → logprob: -8.452837944030762
    6. ' ):' → logprob: -9.452837944030762
    7. '   ' → logprob: -9.452837944030762
    8. ' ,' → logprob: -9.952837944030762
    9. ')):' → logprob: -10.202837944030762
    10. '():' → logprob: -10.827837944030762

Token 35: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1913069635629654
    2. '   ' → logprob: -2.1913070678710938
    3. ' :' → logprob: -3.6913070678710938
    4. '(' → logprob: -3.9413070678710938
    5. '_' → logprob: -5.316307067871094
    6. ' ' → logprob: -5.691307067871094
    7. ':
' → logprob: -6.566307067871094
    8. ')' → logprob: -6.941307067871094
    9. '):' → logprob: -6.941307067871094
    10. '    ' → logprob: -6.941307067871094

Token 36: ' pairs' (ID: 24702)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.24164186418056488
    2. ' acc' → logprob: -2.7416417598724365
    3. 'stack' → logprob: -3.1166417598724365
    4. ' count' → logprob: -3.6166417598724365
    5. ' counter' → logprob: -4.741641998291016
    6. '   ' → logprob: -4.741641998291016
    7. ' max' → logprob: -4.866641998291016
    8. 'acc' → logprob: -4.991641998291016
    9. 'count' → logprob: -5.116641998291016
    10. ' cnt' → logprob: -5.366641998291016

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06225715950131416
    2. '=' → logprob: -2.9372570514678955
    3. '(' → logprob: -5.437257289886475
    4. '   ' → logprob: -6.562257289886475
    5. ' ' → logprob: -7.687257289886475
    6. ')' → logprob: -7.812257289886475
    7. ',' → logprob: -8.437256813049316
    8. '=[]' → logprob: -8.937256813049316
    9. '  ' → logprob: -9.437256813049316
    10. '_count' → logprob: -9.562256813049316

Token 38: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -1.527247428894043
    2. ' []' → logprob: -1.902247428894043
    3. ' list' → logprob: -2.027247428894043
    4. '[]' → logprob: -2.027247428894043
    5. ' [(' → logprob: -2.527247428894043
    6. '[(' → logprob: -2.527247428894043
    7. ' accumulate' → logprob: -2.777247428894043
    8. ' (' → logprob: -3.527247428894043
    9. 'list' → logprob: -4.027247428894043
    10. ' reduce' → logprob: -4.527247428894043

Token 39: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.005510738585144281
    2. '(' → logprob: -5.3805108070373535
    3. '(H' → logprob: -7.6305108070373535
    4. '(count' → logprob: -8.380510330200195
    5. '(is' → logprob: -9.630510330200195
    6. '(range' → logprob: -10.005510330200195
    7. '(sequence' → logprob: -10.755510330200195
    8. '(acc' → logprob: -11.755510330200195
    9. '(
' → logprob: -11.880510330200195
    10. '(se' → logprob: -12.130510330200195

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1269930899143219
    2. '(seq' → logprob: -2.376993179321289
    3. ' ,' → logprob: -4.126993179321289
    4. '   ' → logprob: -5.376993179321289
    5. '(' → logprob: -5.876993179321289
    6. '    ' → logprob: -6.751993179321289
    7. ' (' → logprob: -7.751993179321289
    8. ' ' → logprob: -8.376993179321289
    9. ')' → logprob: -8.626993179321289
    10. '      ' → logprob: -8.626993179321289

Token 41: ' [' (ID: 723)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.6501607298851013
    2. 'is' → logprob: -0.7751607298851013
    3. ' is' → logprob: -4.650160789489746
    4. ' seq' → logprob: -5.275160789489746
    5. 'acc' → logprob: -6.650160789489746
    6. '   ' → logprob: -7.525160789489746
    7. ' ' → logprob: -8.150160789489746
    8. 'list' → logprob: -8.900160789489746
    9. '(seq' → logprob: -9.150160789489746
    10. 'sequence' → logprob: -9.275160789489746

Token 42: 'float' (ID: 7829)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8964024782180786
    2. '0' → logprob: -1.3964024782180786
    3. '1' → logprob: -2.021402359008789
    4. 'x' → logprob: -2.021402359008789
    5. 'seq' → logprob: -3.021402359008789
    6. 'float' → logprob: -5.521402359008789
    7. 's' → logprob: -5.896402359008789
    8. 'True' → logprob: -6.021402359008789
    9. ' ' → logprob: -6.271402359008789
    10. 'i' → logprob: -6.271402359008789

Token 43: '('-' (ID: 33343)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.002179169561713934
    2. '("' → logprob: -6.627179145812988
    3. '('-' → logprob: -7.377179145812988
    4. '('+' → logprob: -8.627179145812988
    5. '(' → logprob: -11.127179145812988
    6. ''' → logprob: -11.377179145812988
    7. '(i' → logprob: -11.877179145812988
    8. '("-' → logprob: -12.627179145812988
    9. '   ' → logprob: -12.752179145812988
    10. 'inf' → logprob: -13.377179145812988

Token 44: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -3.292907877039397e-06
    2. 'in' → logprob: -13.12500286102295
    3. '1' → logprob: -15.12500286102295
    4. ''' → logprob: -15.37500286102295
    5. 'info' → logprob: -16.375003814697266
    6. ' inf' → logprob: -16.500003814697266
    7. '∞' → logprob: -16.500003814697266
    8. ''in' → logprob: -16.750003814697266
    9. 'Inf' → logprob: -16.875003814697266
    10. '100' → logprob: -17.125003814697266

Token 45: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014884408563375473
    2. '')]' → logprob: -4.5148844718933105
    3. ')' → logprob: -6.1398844718933105
    4. ']' → logprob: -7.2648844718933105
    5. ')])' → logprob: -7.2648844718933105
    6. '')' → logprob: -9.389883995056152
    7. '),' → logprob: -9.889883995056152
    8. '])]' → logprob: -10.139883995056152
    9. '")]' → logprob: -10.889883995056152
    10. ' )' → logprob: -11.264883995056152

Token 46: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07250982522964478
    2. ',' → logprob: -3.072509765625
    3. ']' → logprob: -4.697509765625
    4. ' )' → logprob: -5.447509765625
    5. '])' → logprob: -6.572509765625
    6. '),' → logprob: -6.697509765625
    7. ' ,' → logprob: -7.447509765625
    8. ')+' → logprob: -7.447509765625
    9. ' for' → logprob: -7.572509765625
    10. '+' → logprob: -7.822509765625

Token 47: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.22717031836509705
    2. 'list' → logprob: -1.6021703481674194
    3. ' seq' → logprob: -7.102170467376709
    4. ' list' → logprob: -7.102170467376709
    5. '[' → logprob: -10.47716999053955
    6. ' ' → logprob: -11.22716999053955
    7. '   ' → logprob: -11.22716999053955
    8. 'lst' → logprob: -11.35216999053955
    9. '[:-' → logprob: -11.60216999053955
    10. 'sequence' → logprob: -11.97716999053955

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4305969774723053
    2. '[:-' → logprob: -1.055596947669983
    3. '[' → logprob: -6.305596828460693
    4. '[:' → logprob: -10.305597305297852
    5. ')
' → logprob: -10.680597305297852
    6. ' )' → logprob: -12.055597305297852
    7. '))' → logprob: -13.930597305297852
    8. ')`' → logprob: -14.055597305297852
    9. ');' → logprob: -14.555597305297852
    10. '1' → logprob: -14.930597305297852

Token 49: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14258573949337006
    2. '   ' → logprob: -2.3925857543945312
    3. ')
' → logprob: -3.7675857543945312
    4. '
' → logprob: -5.392585754394531
    5. ',' → logprob: -5.392585754394531
    6. ' ' → logprob: -6.142585754394531
    7. ':' → logprob: -6.267585754394531
    8. '	' → logprob: -7.517585754394531
    9. ' )' → logprob: -7.642585754394531
    10. 'def' → logprob: -7.767585754394531

Token 50: ' mark' (ID: 1983)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2545722723007202
    2. ':' → logprob: -2.3795723915100098
    3. ')
' → logprob: -3.6295723915100098
    4. ',' → logprob: -4.00457239151001
    5. '
' → logprob: -4.25457239151001
    6. '):' → logprob: -4.25457239151001
    7. 'def' → logprob: -4.50457239151001
    8. '):
' → logprob: -4.50457239151001
    9. ':
' → logprob: -4.75457239151001
    10. '   ' → logprob: -5.62957239151001

Token 51: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43892231583595276
    2. '=' → logprob: -1.8139222860336304
    3. 'ed' → logprob: -2.06392240524292
    4. ' =' → logprob: -3.18892240524292
    5. 'ers' → logprob: -4.06392240524292
    6. '=s' → logprob: -5.31392240524292
    7. ' ' → logprob: -7.81392240524292
    8. 'down' → logprob: -7.93892240524292
    9. 'eds' → logprob: -9.063921928405762
    10. 'er' → logprob: -9.313921928405762

Token 52: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9091668725013733
    2. ' [' → logprob: -1.0341668128967285
    3. '[i' → logprob: -2.9091668128967285
    4. '[]' → logprob: -2.9091668128967285
    5. '0' → logprob: -4.0341668128967285
    6. '(lambda' → logprob: -4.1591668128967285
    7. 'list' → logprob: -4.7841668128967285
    8. ' (' → logprob: -4.9091668128967285
    9. '[int' → logprob: -4.9091668128967285
    10. '[(' → logprob: -5.0341668128967285

Token 53: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.3883473873138428
    2. '(acc' → logprob: -1.1383473873138428
    3. '(' → logprob: -7.263347625732422
    4. '(p' → logprob: -8.263347625732422
    5. '(pair' → logprob: -9.138347625732422
    6. '(filter' → logprob: -9.263347625732422
    7. '()' → logprob: -9.763347625732422
    8. '(is' → logprob: -10.013347625732422
    9. '(zip' → logprob: -10.013347625732422
    10. '(it' → logprob: -10.263347625732422

Token 54: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0008588159107603133
    2. '(' → logprob: -7.875858783721924
    3. '(int' → logprob: -8.125859260559082
    4. 'lambda' → logprob: -8.875859260559082
    5. '(operator' → logprob: -10.750859260559082
    6. '(max' → logprob: -11.500859260559082
    7. '   ' → logprob: -13.000859260559082
    8. 'int' → logprob: -13.500859260559082
    9. '=lambda' → logprob: -13.625859260559082
    10. ')' → logprob: -13.625859260559082

Token 55: ' x' (ID: 1215)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.4349926710128784
    2. 'lambda' → logprob: -1.1849926710128784
    3. ' lambda' → logprob: -3.059992790222168
    4. '=lambda' → logprob: -10.559992790222168
    5. '(' → logprob: -10.684992790222168
    6. ' (' → logprob: -11.059992790222168
    7. '   ' → logprob: -11.309992790222168
    8. ',' → logprob: -12.684992790222168
    9. ')' → logprob: -12.934992790222168
    10. ':' → logprob: -13.059992790222168

Token 56: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002782885218039155
    2. ',' → logprob: -7.002782821655273
    3. ' :' → logprob: -7.377782821655273
    4. 'lambda' → logprob: -7.627782821655273
    5. '=lambda' → logprob: -7.752782821655273
    6. '(lambda' → logprob: -8.877782821655273
    7. ' lambda' → logprob: -9.752782821655273
    8. ':
' → logprob: -10.502782821655273
    9. 'ambda' → logprob: -10.752782821655273
    10. '<|end|>' → logprob: -11.377782821655273

Token 57: ' int' (ID: 677)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8622528314590454
    2. 'lambda' → logprob: -1.3622528314590454
    3. 'x' → logprob: -1.9872528314590454
    4. ' lambda' → logprob: -2.112252712249756
    5. ' max' → logprob: -3.737252712249756
    6. '(lambda' → logprob: -4.362252712249756
    7. 'max' → logprob: -4.612252712249756
    8. 'int' → logprob: -4.862252712249756
    9. ' int' → logprob: -5.362252712249756
    10. 'operator' → logprob: -6.737252712249756

Token 58: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05367661267518997
    2. 'x' → logprob: -3.0536766052246094
    3. '(' → logprob: -5.428676605224609
    4. ' x' → logprob: -7.428676605224609
    5. ' ' → logprob: -11.05367660522461
    6. '   ' → logprob: -11.42867660522461
    7. ' (' → logprob: -11.80367660522461
    8. ')' → logprob: -11.92867660522461
    9. '(
' → logprob: -12.05367660522461
    10. '	x' → logprob: -12.17867660522461

Token 59: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.35837464465294e-05
    2. '>' → logprob: -10.250043869018555
    3. '[]' → logprob: -12.000043869018555
    4. '[]>' → logprob: -14.875043869018555
    5. '0' → logprob: -15.000043869018555
    6. '1' → logprob: -15.000043869018555
    7. '>[' → logprob: -15.125043869018555
    8. ' ' → logprob: -15.500043869018555
    9. 'and' → logprob: -16.750043869018555
    10. '[
' → logprob: -17.000043869018555

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.504040356958285e-05
    2. '1' → logprob: -9.750064849853516
    3. ' ' → logprob: -12.250064849853516
    4. '[' → logprob: -14.125064849853516
    5. '>' → logprob: -14.625064849853516
    6. '-' → logprob: -15.125064849853516
    7. '   ' → logprob: -16.000064849853516
    8. '(' → logprob: -16.500064849853516
    9. '2' → logprob: -17.562564849853516
    10. '```' → logprob: -17.687564849853516

Token 61: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.014030463062226772
    2. ' >' → logprob: -4.389030456542969
    3. '>x' → logprob: -6.764030456542969
    4. ' ' → logprob: -8.514030456542969
    5. '>=' → logprob: -10.139030456542969
    6. ')' → logprob: -10.389030456542969
    7. '">' → logprob: -10.764030456542969
    8. ')>' → logprob: -11.264030456542969
    9. '[' → logprob: -11.389030456542969
    10. '<' → logprob: -12.264030456542969

Token 62: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0511290468275547
    2. ' >' → logprob: -3.551129102706909
    3. '>x' → logprob: -3.926129102706909
    4. '>=' → logprob: -7.30112886428833
    5. ' ' → logprob: -7.67612886428833
    6. '<' → logprob: -9.426129341125488
    7. 'x' → logprob: -10.426129341125488
    8. '<=' → logprob: -10.426129341125488
    9. '">' → logprob: -10.801129341125488
    10. ' >=' → logprob: -10.801129341125488

Token 63: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005544631858356297
    2. ' x' → logprob: -7.50055456161499
    3. ' ' → logprob: -14.250554084777832
    4. 'max' → logprob: -15.000554084777832
    5. '0' → logprob: -15.625554084777832
    6. '   ' → logprob: -16.37555503845215
    7. ')x' → logprob: -16.37555503845215
    8. '	x' → logprob: -16.62555503845215
    9. ')' → logprob: -16.87555503845215
    10. '
' → logprob: -17.25055503845215

Token 64: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0621822215616703
    2. '[' → logprob: -2.8121821880340576
    3. ' ' → logprob: -8.687182426452637
    4. ')' → logprob: -11.812182426452637
    5. '```' → logprob: -11.812182426452637
    6. ' [' → logprob: -12.062182426452637
    7. '.' → logprob: -12.562182426452637
    8. '   ' → logprob: -12.937182426452637
    9. '0' → logprob: -13.062182426452637
    10. ',' → logprob: -13.312182426452637

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020473242329899222
    2. '0' → logprob: -8.625205039978027
    3. '[' → logprob: -11.000205039978027
    4. '-' → logprob: -12.750205039978027
    5. ' ' → logprob: -12.875205039978027
    6. '   ' → logprob: -13.875205039978027
    7. '.' → logprob: -15.062705039978027
    8. '```' → logprob: -15.062705039978027
    9. '' → logprob: -15.562705039978027
    10. ')' → logprob: -15.875205039978027

Token 66: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0008828802965581417
    2. ')),' → logprob: -7.250883102416992
    3. ' ),' → logprob: -9.375883102416992
    4. ')' → logprob: -9.875883102416992
    5. '[' → logprob: -11.750883102416992
    6. '   ' → logprob: -12.125883102416992
    7. '))),' → logprob: -12.625883102416992
    8. ')))' → logprob: -12.750883102416992
    9. ' ' → logprob: -13.000883102416992
    10. '))' → logprob: -13.125883102416992

Token 67: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.001972765428945422
    2. ' pairs' → logprob: -6.251972675323486
    3. 'zip' → logprob: -11.001973152160645
    4. 'p' → logprob: -11.376973152160645
    5. 'enumer' → logprob: -12.001973152160645
    6. '   ' → logprob: -12.751973152160645
    7. 're' → logprob: -12.876973152160645
    8. 'pair' → logprob: -13.751973152160645
    9. 'seq' → logprob: -14.251973152160645
    10. ' zip' → logprob: -14.251973152160645

Token 68: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.016795074567198753
    2. '))
' → logprob: -4.1417951583862305
    3. ')' → logprob: -7.3917951583862305
    4. '   ' → logprob: -9.51679515838623
    5. ')))' → logprob: -9.89179515838623
    6. '))

' → logprob: -11.89179515838623
    7. '))
' → logprob: -12.39179515838623
    8. ' ))' → logprob: -12.39179515838623
    9. ' ' → logprob: -13.26679515838623
    10. ')
' → logprob: -13.64179515838623

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6032085418701172
    2. ')' → logprob: -1.1032085418701172
    3. '
' → logprob: -3.478208541870117
    4. ')
' → logprob: -3.603208541870117
    5. ',' → logprob: -3.978208541870117
    6. ' ' → logprob: -4.103208541870117
    7. '    
' → logprob: -5.353208541870117
    8. '[' → logprob: -5.603208541870117
    9. 'def' → logprob: -6.103208541870117
    10. ',
' → logprob: -6.353208541870117

Token 70: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6053245067596436
    2. 'return' → logprob: -1.7303245067596436
    3. 'acc' → logprob: -2.2303245067596436
    4. 'prefix' → logprob: -2.2303245067596436
    5. 'result' → logprob: -4.355324745178223
    6. 'res' → logprob: -4.730324745178223
    7. ' return' → logprob: -4.980324745178223
    8. ' acc' → logprob: -4.980324745178223
    9. ' prefix' → logprob: -5.105324745178223
    10. 'c' → logprob: -5.730324745178223

Token 71: ' Replace' (ID: 54839)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.7390590906143188
    2. 'prefix' → logprob: -1.8640590906143188
    3. ' acc' → logprob: -2.1140589714050293
    4. 'acc' → logprob: -2.4890589714050293
    5. ' return' → logprob: -2.9890589714050293
    6. '   ' → logprob: -3.1140589714050293
    7. ' prefix' → logprob: -3.2390589714050293
    8. 'c' → logprob: -3.4890589714050293
    9. 'for' → logprob: -3.4890589714050293
    10. 'cum' → logprob: -3.8640589714050293

Token 72: ' first' (ID: 1577)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.1583506464958191
    2. ' mark' → logprob: -2.908350706100464
    3. 'max' → logprob: -3.658350706100464
    4. '(mark' → logprob: -4.158350467681885
    5. 'the' → logprob: -5.033350467681885
    6. 'all' → logprob: -5.033350467681885
    7. '   ' → logprob: -5.033350467681885
    8. ' the' → logprob: -5.158350467681885
    9. 'return' → logprob: -5.658350467681885
    10. 'with' → logprob: -6.033350467681885

Token 73: ' with' (ID: 483)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.2898420989513397
    2. '=' → logprob: -2.164842128753662
    3. ' =' → logprob: -3.039842128753662
    4. '0' → logprob: -3.164842128753662
    5. ' mark' → logprob: -3.539842128753662
    6. 'element' → logprob: -5.539842128753662
    7. '(mark' → logprob: -6.164842128753662
    8. ' with' → logprob: -6.664842128753662
    9. 'value' → logprob: -6.664842128753662
    10. ' element' → logprob: -6.789842128753662

Token 74: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0554943084716797
    2. ' mark' → logprob: -1.1804943084716797
    3. ' ' → logprob: -1.4304943084716797
    4. 'mark' → logprob: -2.9304943084716797
    5. '1' → logprob: -3.5554943084716797
    6. ' max' → logprob: -4.93049430847168
    7. ' [' → logprob: -6.18049430847168
    8. ' int' → logprob: -6.18049430847168
    9. 'int' → logprob: -6.43049430847168
    10. 'max' → logprob: -6.55549430847168

Token 75: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.536516547203064
    2. '1' → logprob: -1.286516547203064
    3. 'mark' → logprob: -2.0365166664123535
    4. 'len' → logprob: -6.1615166664123535
    5. 'int' → logprob: -6.2865166664123535
    6. 'max' → logprob: -7.1615166664123535
    7. 'float' → logprob: -7.1615166664123535
    8. ' ' → logprob: -7.2865166664123535
    9. '[' → logprob: -7.5365166664123535
    10. ' mark' → logprob: -7.5365166664123535

Token 76: ' because' (ID: 2236)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.522848904132843
    2. '   ' → logprob: -1.0228488445281982
    3. ' mark' → logprob: -3.3978488445281982
    4. '
' → logprob: -4.522849082946777
    5. 'marks' → logprob: -7.272849082946777
    6. ',' → logprob: -7.272849082946777
    7. '(mark' → logprob: -7.647849082946777
    8. '[' → logprob: -8.022849082946777
    9. '.mark' → logprob: -8.647849082946777
    10. ')' → logprob: -8.647849082946777

Token 77: ' initial' (ID: 4871)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5879960656166077
    2. ' the' → logprob: -1.587996006011963
    3. 'it' → logprob: -2.712996006011963
    4. 'mark' → logprob: -3.462996006011963
    5. 'we' → logprob: -3.712996006011963
    6. 'seq' → logprob: -3.712996006011963
    7. ' it' → logprob: -4.087996006011963
    8. 'it's' → logprob: -4.212996006011963
    9. ' mark' → logprob: -4.462996006011963
    10. 'there' → logprob: -4.712996006011963

Token 78: ' comparison' (ID: 19211)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.021976403892040253
    2. 'element' → logprob: -4.646976470947266
    3. 'value' → logprob: -5.771976470947266
    4. ' mark' → logprob: -5.771976470947266
    5. 'max' → logprob: -6.021976470947266
    6. 'def' → logprob: -6.521976470947266
    7. '_mark' → logprob: -7.771976470947266
    8. 'peak' → logprob: -8.646976470947266
    9. '#' → logprob: -8.896976470947266
    10. 'position' → logprob: -9.396976470947266

Token 79: ' is' (ID: 382)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.06791520863771439
    2. ' mark' → logprob: -2.817915201187134
    3. ' is' → logprob: -5.817915439605713
    4. '[' → logprob: -7.567915439605713
    5. ',' → logprob: -7.692915439605713
    6. '<|end|>' → logprob: -8.067914962768555
    7. '   ' → logprob: -8.192914962768555
    8. '.mark' → logprob: -8.567914962768555
    9. '(mark' → logprob: -9.067914962768555
    10. ' at' → logprob: -9.192914962768555

Token 80: ' always' (ID: 3324)
  Prédit: ' always'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' always' → logprob: -0.7713343501091003
    2. 'always' → logprob: -1.0213344097137451
    3. 'False' → logprob: -3.271334409713745
    4. 'with' → logprob: -3.521334409713745
    5. 'not' → logprob: -3.771334409713745
    6. ' with' → logprob: -4.021334171295166
    7. 'false' → logprob: -4.521334171295166
    8. 'invalid' → logprob: -4.646334171295166
    9. ' not' → logprob: -4.896334171295166
    10. 'incorrect' → logprob: -5.021334171295166

Token 81: ' true' (ID: 1343)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01879137009382248
    2. ' True' → logprob: -4.268791198730469
    3. 'False' → logprob: -6.018791198730469
    4. '1' → logprob: -6.393791198730469
    5. 'true' → logprob: -7.768791198730469
    6. 'valid' → logprob: -10.143791198730469
    7. 'correct' → logprob: -11.018791198730469
    8. ' valid' → logprob: -11.768791198730469
    9. ' true' → logprob: -11.768791198730469
    10. ' False' → logprob: -12.018791198730469

Token 82: '
' (ID: 198)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.43622469902038574
    2. '   ' → logprob: -1.0612246990203857
    3. ' mark' → logprob: -4.936224937438965
    4. ')' → logprob: -9.561224937438965
    5. ',' → logprob: -9.811224937438965
    6. '[' → logprob: -10.311224937438965
    7. '```' → logprob: -10.311224937438965
    8. ' ' → logprob: -10.686224937438965
    9. '.mark' → logprob: -11.061224937438965
    10. '(mark' → logprob: -11.061224937438965

Token 83: '   ' (ID: 271)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.36691221594810486
    2. '   ' → logprob: -1.2419122457504272
    3. ' mark' → logprob: -4.241912364959717
    4. '
' → logprob: -6.241912364959717
    5. '[' → logprob: -7.866912364959717
    6. ',' → logprob: -7.866912364959717
    7. '```' → logprob: -7.991912364959717
    8. ')' → logprob: -8.366911888122559
    9. '(mark' → logprob: -9.241911888122559
    10. '.mark' → logprob: -9.491911888122559

Token 84: ' mark' (ID: 1983)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' (adapté à ' mark') → logprob: -0.23026205599308014
    2. '   ' → logprob: -2.105262041091919
    3. ' mark' → logprob: -2.480262041091919
    4. ' ' → logprob: -10.23026180267334
    5. '
' → logprob: -11.23026180267334
    6. '_mark' → logprob: -11.48026180267334
    7. '.mark' → logprob: -11.48026180267334
    8. ',' → logprob: -11.48026180267334
    9. 'marks' → logprob: -11.48026180267334
    10. '(mark' → logprob: -11.85526180267334

Token 85: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. '=' → logprob: -13.62500286102295
    3. '\[' → logprob: -14.00000286102295
    4. ' [' → logprob: -14.62500286102295
    5. ' =' → logprob: -15.25000286102295
    6. '```' → logprob: -15.37500286102295
    7. '[-' → logprob: -17.250003814697266
    8. '=[' → logprob: -17.750003814697266
    9. '   ' → logprob: -18.500003814697266
    10. '
' → logprob: -18.750003814697266

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '[' → logprob: -15.500003814697266
    4. '1' → logprob: -17.125003814697266
    5. '<|end|>' → logprob: -17.375003814697266
    6. '00' → logprob: -18.375003814697266
    7. ']' → logprob: -18.375003814697266
    8. '=' → logprob: -18.625003814697266
    9. '۰' → logprob: -18.625003814697266
    10. ')' → logprob: -19.000003814697266

Token 87: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024404549039900303
    2. ']=' → logprob: -6.127440452575684
    3. '=' → logprob: -8.377440452575684
    4. ' ]' → logprob: -10.627440452575684
    5. ' =' → logprob: -14.002440452575684
    6. '`]' → logprob: -16.87744140625
    7. ']+=' → logprob: -17.25244140625
    8. ')]' → logprob: -17.37744140625
    9. ')' → logprob: -17.62744140625
    10. '[' → logprob: -17.75244140625

Token 88: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003177952254191041
    2. ' =' → logprob: -5.753178119659424
    3. '=

' → logprob: -15.628177642822266
    4. '=}' → logprob: -16.378177642822266
    5. '＝' → logprob: -17.753177642822266
    6. ']=' → logprob: -18.253177642822266
    7. ']' → logprob: -18.378177642822266
    8. '=
' → logprob: -19.003177642822266
    9. ')=' → logprob: -19.128177642822266
    10. '.=' → logprob: -19.253177642822266

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014013137842994183
    2. ' ' → logprob: -8.875140190124512
    3. '0' → logprob: -16.625139236450195
    4. '   ' → logprob: -17.125139236450195
    5. 'int' → logprob: -18.000139236450195
    6. '```' → logprob: -18.375139236450195
    7. '`' → logprob: -18.500139236450195
    8. '۱' → logprob: -18.875139236450195
    9. '<|end|>' → logprob: -19.000139236450195
    10. '  ' → logprob: -19.375139236450195

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'int' → logprob: -18.625
    4. '`' → logprob: -18.75
    5. '```' → logprob: -19.0
    6. '0' → logprob: -19.25
    7. '۱' → logprob: -19.375
    8. '   ' → logprob: -20.0
    9. '' → logprob: -20.3125
    10. '１' → logprob: -20.5625

Token 91: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3700791597366333
    2. '
' → logprob: -1.2450791597366333
    3. '<|end|>' → logprob: -4.495079040527344
    4. '    
' → logprob: -5.495079040527344
    5. '\n' → logprob: -6.620079040527344
    6. ' ' → logprob: -7.245079040527344
    7. '  
' → logprob: -7.245079040527344
    8. ')' → logprob: -7.245079040527344
    9. ' for' → logprob: -7.870079040527344
    10. '<|end|>' → logprob: -8.120079040527344

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028979429975152016
    2. '
' → logprob: -4.028979301452637
    3. 'return' → logprob: -5.528979301452637
    4. '    
' → logprob: -6.278979301452637
    5. ')' → logprob: -6.903979301452637
    6. 'result' → logprob: -7.153979301452637
    7. 'for' → logprob: -7.278979301452637
    8. 'acc' → logprob: -7.903979301452637
    9. ' return' → logprob: -8.278979301452637
    10. ' for' → logprob: -8.278979301452637

Token 93: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39835384488105774
    2. 'return' (adapté à ' return') → logprob: -1.8983538150787354
    3. 'prefix' → logprob: -2.3983538150787354
    4. 'c' → logprob: -4.0233540534973145
    5. 'acc' → logprob: -4.0233540534973145
    6. 'res' → logprob: -4.6483540534973145
    7. ' return' → logprob: -4.6483540534973145
    8. 'result' → logprob: -5.0233540534973145
    9. ' prefix' → logprob: -5.1483540534973145
    10. 'dp' → logprob: -6.0233540534973145

Token 94: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.35757914185523987
    2. 'reduce' → logprob: -1.9825791120529175
    3. ' sum' → logprob: -2.482579231262207
    4. 'list' → logprob: -2.857579231262207
    5. ' list' → logprob: -4.732579231262207
    6. ' reduce' → logprob: -4.982579231262207
    7. 'max' → logprob: -5.732579231262207
    8. ' max' → logprob: -6.982579231262207
    9. 'len' → logprob: -7.732579231262207
    10. 'mark' → logprob: -7.732579231262207

Token 95: '(acc' (ID: 82668)
  Prédit: '(mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mark' → logprob: -0.0026701882015913725
    2. '(' → logprob: -6.2526702880859375
    3. '([' → logprob: -8.377670288085938
    4. '(map' → logprob: -8.502670288085938
    5. '(m' → logprob: -8.877670288085938
    6. 'mark' → logprob: -10.002670288085938
    7. '(x' → logprob: -10.502670288085938
    8. '(list' → logprob: -10.752670288085938
    9. '((' → logprob: -10.752670288085938
    10. '(marker' → logprob: -11.502670288085938

Token 96: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.00035119339008815587
    2. 'om' → logprob: -8.625350952148438
    3. 'ulate' → logprob: -9.125350952148438
    4. 'um' → logprob: -10.375350952148438
    5. 'elate' → logprob: -11.375350952148438
    6. 'umul' → logprob: -11.875350952148438
    7. 'el' → logprob: -12.875350952148438
    8. 'ount' → logprob: -12.875350952148438
    9. 'ol' → logprob: -13.375350952148438
    10. 'uminate' → logprob: -14.000350952148438

Token 97: '(mark' (ID: 126438)
  Prédit: '(mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mark' → logprob: -0.11560040712356567
    2. '(lambda' → logprob: -2.240600347518921
    3. ')' → logprob: -6.7406005859375
    4. '(' → logprob: -7.1156005859375
    5. 'mark' → logprob: -7.6156005859375
    6. ' mark' → logprob: -9.8656005859375
    7. 'lambda' → logprob: -9.9906005859375
    8. ' (' → logprob: -10.1156005859375
    9. '(marker' → logprob: -10.2406005859375
    10. '((' → logprob: -10.3656005859375

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07642289996147156
    2. '))' → logprob: -2.701422929763794
    3. 'lambda' → logprob: -6.076422691345215
    4. ' ,' → logprob: -6.326422691345215
    5. '(lambda' → logprob: -7.201422691345215
    6. ' lambda' → logprob: -7.576422691345215
    7. ' ))' → logprob: -8.326422691345215
    8. ')' → logprob: -8.451422691345215
    9. ' ' → logprob: -8.701422691345215
    10. '   ' → logprob: -9.076422691345215

Token 99: ' func' (ID: 4660)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.16170264780521393
    2. ' lambda' → logprob: -1.9117026329040527
    3. 'max' → logprob: -7.411702632904053
    4. '(lambda' → logprob: -7.661702632904053
    5. 'operator' → logprob: -8.286703109741211
    6. ' max' → logprob: -9.536703109741211
    7. ')' → logprob: -9.786703109741211
    8. ' operator' → logprob: -12.036703109741211
    9. ' ' → logprob: -12.536703109741211
    10. '=lambda' → logprob: -12.661703109741211

Token 100: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.002455322304740548
    2. '=' → logprob: -6.627455234527588
    3. 'lambda' → logprob: -7.377455234527588
    4. ')' → logprob: -9.252455711364746
    5. 'ambda' → logprob: -9.502455711364746
    6. '=int' → logprob: -10.002455711364746
    7. 'er' → logprob: -10.002455711364746
    8. 'operator' → logprob: -10.002455711364746
    9. '<|end|>' → logprob: -10.002455711364746
    10. 'b' → logprob: -10.127455711364746

Token 101: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.44941896200180054
    2. ' a' → logprob: -1.6994190216064453
    3. 'x' → logprob: -2.1994190216064453
    4. 'a' → logprob: -3.3244190216064453
    5. ' acc' → logprob: -3.5744190216064453
    6. 'acc' → logprob: -6.449419021606445
    7. ' s' → logprob: -7.324419021606445
    8. 's' → logprob: -7.824419021606445
    9. ' lambda' → logprob: -7.949419021606445
    10. ' self' → logprob: -8.449419021606445

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012996421428397298
    2. ',x' → logprob: -6.751299858093262
    3. ' ,' → logprob: -9.501299858093262
    4. ',n' → logprob: -10.501299858093262
    5. '=lambda' → logprob: -11.876299858093262
    6. '<|end|>' → logprob: -13.251299858093262
    7. ',user' → logprob: -13.376299858093262
    8. ',p' → logprob: -13.376299858093262
    9. 'lambda' → logprob: -13.501299858093262
    10. ',y' → logprob: -13.626299858093262

Token 103: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12693451344966888
    2. ' y' → logprob: -2.12693452835083
    3. 'x' → logprob: -12.876934051513672
    4. '	y' → logprob: -13.251934051513672
    5. ' ' → logprob: -13.876934051513672
    6. ',y' → logprob: -15.126934051513672
    7. ' x' → logprob: -15.751934051513672
    8. 'a' → logprob: -15.876934051513672
    9. '   ' → logprob: -15.876934051513672
    10. '  ' → logprob: -16.126934051513672

Token 104: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0045045348815619946
    2. ' :' → logprob: -5.629504680633545
    3. ',' → logprob: -7.629504680633545
    4. '=lambda' → logprob: -8.129504203796387
    5. 'lambda' → logprob: -9.754504203796387
    6. '   ' → logprob: -10.754504203796387
    7. '=' → logprob: -11.504504203796387
    8. ' ' → logprob: -11.754504203796387
    9. ' lambda' → logprob: -11.754504203796387
    10. ':
' → logprob: -12.879504203796387

Token 105: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.39245590567588806
    2. ' x' → logprob: -1.1424559354782104
    3. ' max' → logprob: -6.1424560546875
    4. 'max' → logprob: -6.7674560546875
    5. 'lambda' → logprob: -6.8924560546875
    6. ' lambda' → logprob: -7.8924560546875
    7. ' (' → logprob: -8.1424560546875
    8. ' ' → logprob: -8.1424560546875
    9. '   ' → logprob: -9.1424560546875
    10. '(x' → logprob: -9.7674560546875

Token 106: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03685277700424194
    2. '+' → logprob: -4.411852836608887
    3. ' +' → logprob: -4.536852836608887
    4. 'if' → logprob: -4.661852836608887
    5. '=' → logprob: -7.036852836608887
    6. ':' → logprob: -7.536852836608887
    7. ' *' → logprob: -7.911852836608887
    8. ' ' → logprob: -7.911852836608887
    9. ',' → logprob: -8.286852836608887
    10. '*' → logprob: -8.411852836608887

Token 107: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7818155884742737
    2. 'y' → logprob: -1.031815528869629
    3. ' y' → logprob: -2.031815528869629
    4. ' x' → logprob: -3.156815528869629
    5. ' not' → logprob: -4.656815528869629
    6. 'not' → logprob: -5.906815528869629
    7. '(not' → logprob: -9.406815528869629
    8. '(x' → logprob: -10.281815528869629
    9. '(y' → logprob: -11.031815528869629
    10. ' (' → logprob: -11.406815528869629

Token 108: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1129494458436966
    2. ' >' → logprob: -2.8629493713378906
    3. '>=' → logprob: -3.6129493713378906
    4. 'else' → logprob: -4.362949371337891
    5. ' else' → logprob: -5.612949371337891
    6. '>x' → logprob: -5.737949371337891
    7. '==' → logprob: -6.612949371337891
    8. ' >=' → logprob: -6.737949371337891
    9. '<' → logprob: -9.11294937133789
    10. 'x' → logprob: -9.36294937133789

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.041106514632701874
    2. '0' → logprob: -3.2911064624786377
    3. ' ' → logprob: -5.791106700897217
    4. '   ' → logprob: -12.791106224060059
    5. '  ' → logprob: -14.478606224060059
    6. 'int' → logprob: -14.603606224060059
    7. 'x' → logprob: -15.291106224060059
    8. '2' → logprob: -15.416106224060059
    9. ' x' → logprob: -15.416106224060059
    10. 'y' → logprob: -16.166107177734375

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018769729882478714
    2. '0' → logprob: -4.01876974105835
    3. ' ' → logprob: -7.39376974105835
    4. '   ' → logprob: -13.393769264221191
    5. '  ' → logprob: -14.268769264221191
    6. '2' → logprob: -14.331269264221191
    7. ')' → logprob: -15.643769264221191
    8. 'x' → logprob: -15.956269264221191
    9. '<|end|>' → logprob: -16.081270217895508
    10. '```' → logprob: -16.268770217895508

Token 111: ' and' (ID: 326)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12711583077907562
    2. 'else' → logprob: -2.1271157264709473
    3. ' or' → logprob: -8.752116203308105
    4. ' ' → logprob: -11.502116203308105
    5. '   ' → logprob: -12.002116203308105
    6. 'or' → logprob: -12.752116203308105
    7. ' and' → logprob: -13.127116203308105
    8. '	else' → logprob: -13.127116203308105
    9. ',' → logprob: -13.752116203308105
    10. '    ' → logprob: -13.877116203308105

Token 112: ' seq' (ID: 26775)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01610182411968708
    2. ' x' → logprob: -4.141101837158203
    3. 'not' → logprob: -10.641101837158203
    4. ' not' → logprob: -10.891101837158203
    5. '0' → logprob: -11.391101837158203
    6. 'mark' → logprob: -12.141101837158203
    7. ' ' → logprob: -12.891101837158203
    8. ' mark' → logprob: -13.516101837158203
    9. '   ' → logprob: -13.766101837158203
    10. '  ' → logprob: -14.266101837158203

Token 113: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1336868554353714
    2. '[count' → logprob: -2.7586867809295654
    3. '[x' → logprob: -3.5086867809295654
    4. '[len' → logprob: -4.0086870193481445
    5. '[n' → logprob: -5.7586870193481445
    6. '   ' → logprob: -6.2586870193481445
    7. '.index' → logprob: -6.3836870193481445
    8. '>' → logprob: -6.3836870193481445
    9. ')' → logprob: -7.3836870193481445
    10. '==' → logprob: -7.8836870193481445

Token 114: 'mark' (ID: 5037)
  Prédit: 'mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.7485874891281128
    2. '0' → logprob: -1.8735874891281128
    3. '[' → logprob: -2.2485876083374023
    4. 'seq' → logprob: -2.6235876083374023
    5. 'len' → logprob: -2.6235876083374023
    6. '1' → logprob: -3.6235876083374023
    7. '   ' → logprob: -3.9985876083374023
    8. 'H' → logprob: -3.9985876083374023
    9. 'x' → logprob: -4.748587608337402
    10. ']' → logprob: -5.498587608337402

Token 115: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.02429097145795822
    2. '[' → logprob: -4.899291038513184
    3. 'x' → logprob: -5.149291038513184
    4. '0' → logprob: -5.399291038513184
    5. 'index' → logprob: -5.649291038513184
    6. '==' → logprob: -7.274291038513184
    7. '[x' → logprob: -7.399291038513184
    8. ']' → logprob: -7.524291038513184
    9. '   ' → logprob: -8.524291038513184
    10. '.count' → logprob: -8.524291038513184

Token 116: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.22529691457748413
    2. 'y' → logprob: -2.100296974182129
    3. '(x' → logprob: -3.225296974182129
    4. '(mark' → logprob: -3.850296974182129
    5. 'x' → logprob: -4.975296974182129
    6. '(' → logprob: -5.600296974182129
    7. 'mark' → logprob: -5.725296974182129
    8. ']' → logprob: -6.225296974182129
    9. '(lambda' → logprob: -7.850296974182129
    10. ' y' → logprob: -7.975296974182129

Token 117: ')]' (ID: 15710)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.6294301748275757
    2. ')' → logprob: -1.2544301748275757
    3. ')]' → logprob: -2.2544302940368652
    4. '-' → logprob: -3.1294302940368652
    5. ')-' → logprob: -4.129430294036865
    6. '):' → logprob: -4.879430294036865
    7. ')==' → logprob: -6.254430294036865
    8. ' -' → logprob: -7.004430294036865
    9. '==' → logprob: -7.129430294036865
    10. 'y' → logprob: -7.254430294036865

Token 118: ' >=' (ID: 5064)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9176657795906067
    2. ' else' → logprob: -1.042665719985962
    3. 'else' → logprob: -1.917665719985962
    4. ' +' → logprob: -3.042665719985962
    5. '==' → logprob: -3.417665719985962
    6. '>=' → logprob: -4.417665958404541
    7. '>' → logprob: -6.042665958404541
    8. '-' → logprob: -6.542665958404541
    9. ' ==' → logprob: -6.667665958404541
    10. ' >=' → logprob: -7.167665958404541

Token 119: ' max' (ID: 2999)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.3562231659889221
    2. 'x' → logprob: -1.2312231063842773
    3. 'max' → logprob: -6.231223106384277
    4. ' seq' → logprob: -6.231223106384277
    5. 'mark' → logprob: -6.481223106384277
    6. ' x' → logprob: -6.981223106384277
    7. 'acc' → logprob: -7.481223106384277
    8. '(seq' → logprob: -8.106223106384277
    9. 'y' → logprob: -9.231223106384277
    10. '0' → logprob: -9.731223106384277

Token 120: '(seq' (ID: 78669)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.01623659022152424
    2. '([' → logprob: -5.016236782073975
    3. 'x' → logprob: -5.391236782073975
    4. '(' → logprob: -5.766236782073975
    5. '((' → logprob: -6.516236782073975
    6. ' (' → logprob: -9.141236305236816
    7. '[x' → logprob: -9.891236305236816
    8. '(acc' → logprob: -10.141236305236816
    9. '   ' → logprob: -11.141236305236816
    10. '[' → logprob: -11.141236305236816

Token 121: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.08749248087406158
    2. ',' → logprob: -2.9624924659729004
    3. ')' → logprob: -4.0874924659729
    4. '   ' → logprob: -5.7124924659729
    5. '),' → logprob: -5.9624924659729
    6. ' else' → logprob: -6.2124924659729
    7. '[' → logprob: -6.2124924659729
    8. ':' → logprob: -6.7124924659729
    9. ' ,' → logprob: -7.2124924659729
    10. 'else' → logprob: -7.5874924659729

Token 122: 'mark' (ID: 5037)
  Prédit: 'mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.011577999219298363
    2. ' mark' → logprob: -5.76157808303833
    3. 'len' → logprob: -5.76157808303833
    4. 'seq' → logprob: -6.01157808303833
    5. '   ' → logprob: -7.26157808303833
    6. '[' → logprob: -8.011577606201172
    7. '0' → logprob: -8.136577606201172
    8. 'acc' → logprob: -8.136577606201172
    9. ' ' → logprob: -8.386577606201172
    10. '(mark' → logprob: -8.511577606201172

Token 123: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.001193798496387899
    2. 'index' → logprob: -7.501194000244141
    3. '[:' → logprob: -7.876194000244141
    4. '[' → logprob: -8.87619400024414
    5. '1' → logprob: -11.00119400024414
    6. '0' → logprob: -11.12619400024414
    7. '.mark' → logprob: -11.62619400024414
    8. '.' → logprob: -11.75119400024414
    9. '   ' → logprob: -12.00119400024414
    10. '(' → logprob: -12.12619400024414

Token 124: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.4174307584762573
    2. '(mark' → logprob: -1.4174307584762573
    3. 'y' → logprob: -2.917430877685547
    4. '(x' → logprob: -4.167430877685547
    5. '(' → logprob: -4.667430877685547
    6. '[' → logprob: -4.917430877685547
    7. 'mark' → logprob: -5.167430877685547
    8. '([' → logprob: -6.292430877685547
    9. '+' → logprob: -6.792430877685547
    10. ']' → logprob: -7.417430877685547

Token 125: ')+' (ID: 16161)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7539487481117249
    2. ']),' → logprob: -1.37894868850708
    3. '])+' → logprob: -2.50394868850708
    4. '+' → logprob: -2.87894868850708
    5. ')]' → logprob: -3.62894868850708
    6. '()' → logprob: -4.12894868850708
    7. '])]' → logprob: -4.12894868850708
    8. ']+' → logprob: -4.25394868850708
    9. ')])' → logprob: -4.37894868850708
    10. ']))' → logprob: -4.62894868850708

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020973898062948138
    2. 'y' → logprob: -9.87520980834961
    3. 'mark' → logprob: -9.87520980834961
    4. ' ' → logprob: -10.50020980834961
    5. '2' → logprob: -10.62520980834961
    6. 'x' → logprob: -11.12520980834961
    7. '+' → logprob: -11.62520980834961
    8. 'len' → logprob: -11.62520980834961
    9. '0' → logprob: -12.00020980834961
    10. '(' → logprob: -12.87520980834961

Token 127: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0029024742543697357
    2. ']))' → logprob: -7.127902507781982
    3. ')' → logprob: -7.502902507781982
    4. ')])' → logprob: -7.502902507781982
    5. ' ])' → logprob: -8.252902030944824
    6. 'else' → logprob: -8.252902030944824
    7. ' else' → logprob: -9.502902030944824
    8. '   ' → logprob: -9.752902030944824
    9. '))' → logprob: -9.877902030944824
    10. '])
' → logprob: -10.002902030944824

Token 128: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06532733887434006
    2. 'else' → logprob: -3.3153274059295654
    3. ')' → logprob: -3.6903274059295654
    4. '))' → logprob: -7.190327167510986
    5. ' )' → logprob: -7.815327167510986
    6. ' ' → logprob: -9.065327644348145
    7. '   ' → logprob: -9.065327644348145
    8. ',' → logprob: -9.315327644348145
    9. '),' → logprob: -9.315327644348145
    10. '    ' → logprob: -9.565327644348145

Token 129: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0622522346675396
    2. ' x' → logprob: -2.9372522830963135
    3. 'y' → logprob: -5.312252044677734
    4. ' y' → logprob: -6.812252044677734
    5. '0' → logprob: -7.187252044677734
    6. 'lambda' → logprob: -8.187252044677734
    7. 'max' → logprob: -9.437252044677734
    8. ' lambda' → logprob: -10.062252044677734
    9. '1' → logprob: -10.187252044677734
    10. ' ' → logprob: -10.437252044677734

Token 130: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.725664496421814
    2. 'y' → logprob: -0.725664496421814
    3. '0' → logprob: -4.1006646156311035
    4. '1' → logprob: -5.1006646156311035
    5. ' y' → logprob: -5.2256646156311035
    6. ' x' → logprob: -5.9756646156311035
    7. 'max' → logprob: -6.8506646156311035
    8. ' ' → logprob: -9.600664138793945
    9. 'mark' → logprob: -9.850664138793945
    10. 'lambda' → logprob: -10.100664138793945

Token 131: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16356261074543
    2. ',' → logprob: -2.038562536239624
    3. ')' → logprob: -4.413562774658203
    4. ' ))' → logprob: -5.788562774658203
    5. ')))' → logprob: -5.788562774658203
    6. ' ,' → logprob: -7.288562774658203
    7. ',
' → logprob: -7.663562774658203
    8. '),' → logprob: -8.038562774658203
    9. ',x' → logprob: -8.413562774658203
    10. '   ' → logprob: -8.538562774658203

Token 132: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03002307377755642
    2. '(' → logprob: -4.530023097991943
    3. '<|end|>' → logprob: -4.530023097991943
    4. '[' → logprob: -5.780023097991943
    5. '#' → logprob: -6.030023097991943
    6. ' ' → logprob: -7.655023097991943
    7. '(
' → logprob: -7.655023097991943
    8. '
' → logprob: -8.155022621154785
    9. ':' → logprob: -8.280022621154785
    10. '<|end|>' → logprob: -8.405022621154785

Token 133: ' Create' (ID: 6585)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16416814923286438
    2. '<|end|>' → logprob: -2.539168119430542
    3. 'n' → logprob: -3.914168119430542
    4. '[' → logprob: -4.664168357849121
    5. 'def' → logprob: -5.039168357849121
    6. ' ' → logprob: -5.039168357849121
    7. ' n' → logprob: -5.289168357849121
    8. '#' → logprob: -5.539168357849121
    9. ' clever' → logprob: -5.664168357849121
    10. ' )' → logprob: -5.789168357849121

Token 134: ' another' (ID: 3613)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2857179641723633
    2. 'ranges' → logprob: -1.5357179641723633
    3. 'pairs' → logprob: -2.0357179641723633
    4. ' an' → logprob: -2.4107179641723633
    5. 'acc' → logprob: -3.4107179641723633
    6. ' a' → logprob: -3.5357179641723633
    7. 'range' → logprob: -3.7857179641723633
    8. 'an' → logprob: -3.9107179641723633
    9. 'prefix' → logprob: -4.535717964172363
    10. 's' → logprob: -4.535717964172363

Token 135: ' iterable' (ID: 113880)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05439953878521919
    2. 'sequence' → logprob: -4.929399490356445
    3. ' version' → logprob: -5.179399490356445
    4. 'version' → logprob: -5.179399490356445
    5. 'list' → logprob: -5.304399490356445
    6. 'line' → logprob: -5.554399490356445
    7. 'token' → logprob: -5.679399490356445
    8. 'n' → logprob: -5.929399490356445
    9. 'function' → logprob: -6.304399490356445
    10. 'pairs' → logprob: -6.429399490356445

Token 136: ' that' (ID: 484)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0955910682678223
    2. 's' → logprob: -2.2205910682678223
    3. 'seq' → logprob: -2.7205910682678223
    4. '(seq' → logprob: -2.8455910682678223
    5. '(range' → logprob: -2.9705910682678223
    6. '(
' → logprob: -2.9705910682678223
    7. 'pairs' → logprob: -3.0955910682678223
    8. 'for' → logprob: -3.2205910682678223
    9. 'acc' → logprob: -3.8455910682678223
    10. '(iter' → logprob: -3.9705910682678223

Token 137: ' yields' (ID: 59684)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.0719729661941528
    2. 'rep' → logprob: -1.8219729661941528
    3. 'marks' → logprob: -2.4469728469848633
    4. 'contains' → logprob: -3.1969728469848633
    5. 'enumer' → logprob: -3.5719728469848633
    6. 'contin' → logprob: -3.6969728469848633
    7. 'comb' → logprob: -3.8219728469848633
    8. 'tracks' → logprob: -3.8219728469848633
    9. 'captures' → logprob: -3.8219728469848633
    10. ' marks' → logprob: -3.9469728469848633

Token 138: ' current' (ID: 2208)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5292384624481201
    2. 'True' → logprob: -2.27923846244812
    3. '(True' → logprob: -2.65423846244812
    4. 'pairs' → logprob: -3.15423846244812
    5. '(' → logprob: -3.52923846244812
    6. ' from' → logprob: -3.65423846244812
    7. ' True' → logprob: -3.65423846244812
    8. '(n' → logprob: -4.029238700866699
    9. 'H' → logprob: -4.279238700866699
    10. ' (' → logprob: -4.529238700866699

Token 139: ' max' (ID: 2999)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.353912591934204
    2. '_height' → logprob: -1.603912591934204
    3. '_value' → logprob: -2.228912591934204
    4. '_max' → logprob: -2.353912591934204
    5. 'max' → logprob: -2.728912591934204
    6. 'value' → logprob: -3.353912591934204
    7. '_index' → logprob: -4.103912353515625
    8. ' maxima' → logprob: -4.103912353515625
    9. ' value' → logprob: -4.228912353515625
    10. 'height' → logprob: -4.478912353515625

Token 140: ' so' (ID: 813)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6818048357963562
    2. 's' → logprob: -1.681804895401001
    3. 'from' → logprob: -2.056804895401001
    4. ',' → logprob: -3.681804895401001
    5. '(max' → logprob: -3.931804895401001
    6. 'current' → logprob: -4.181804656982422
    7. 'value' → logprob: -4.431804656982422
    8. 'for' → logprob: -4.431804656982422
    9. '_' → logprob: -4.556804656982422
    10. 'values' → logprob: -4.681804656982422

Token 141: ' far' (ID: 4150)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7684361934661865
    2. 'for' → logprob: -1.7684361934661865
    3. 'def' → logprob: -2.6434361934661865
    4. '#' → logprob: -3.0184361934661865
    5. 'max' → logprob: -3.3934361934661865
    6. ' for' → logprob: -3.6434361934661865
    7. 'that' → logprob: -3.7684361934661865
    8. ' that' → logprob: -3.8934361934661865
    9. 'zip' → logprob: -4.143436431884766
    10. 'H' → logprob: -4.143436431884766

Token 142: ' for' (ID: 395)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2177555412054062
    2. 'current' → logprob: -2.4677555561065674
    3. 'def' → logprob: -3.8427555561065674
    4. ',' → logprob: -4.467755317687988
    5. 'running' → logprob: -4.467755317687988
    6. 'c' → logprob: -4.842755317687988
    7. 'curr' → logprob: -4.842755317687988
    8. 'from' → logprob: -4.842755317687988
    9. 'prefix' → logprob: -4.967755317687988
    10. ' max' → logprob: -4.967755317687988

Token 143: ' comparison' (ID: 19211)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seq' → logprob: -1.0700347423553467
    2. 'H' → logprob: -1.4450347423553467
    3. 'each' → logprob: -2.5700347423553467
    4. 'h' → logprob: -2.6950347423553467
    5. '_' → logprob: -2.8200347423553467
    6. 'x' → logprob: -2.9450347423553467
    7. ' seq' → logprob: -3.6950347423553467
    8. 'elem' → logprob: -3.9450347423553467
    9. 'the' → logprob: -4.320034980773926
    10. ' each' → logprob: -4.445034980773926

Token 144: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07895412296056747
    2. 'current' → logprob: -2.8289542198181152
    3. 'curr' → logprob: -5.828954219818115
    4. 'def' → logprob: -5.953954219818115
    5. 'running' → logprob: -5.953954219818115
    6. 'cur' → logprob: -6.078954219818115
    7. 'prefix' → logprob: -6.453954219818115
    8. 'c' → logprob: -6.453954219818115
    9. 'cum' → logprob: -7.453954219818115
    10. ' max' → logprob: -7.703954219818115

Token 145: 'running' (ID: 61557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5044466257095337
    2. 'def' → logprob: -1.6294466257095337
    3. '<|end|>' → logprob: -2.254446506500244
    4. 'pairs' → logprob: -2.879446506500244
    5. ' for' → logprob: -3.004446506500244
    6. ',' → logprob: -3.129446506500244
    7. 'for' → logprob: -3.254446506500244
    8. '[' → logprob: -3.379446506500244
    9. 'acc' → logprob: -3.879446506500244
    10. 'from' → logprob: -3.879446506500244

Token 146: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.005838857498019934
    2. 'max' → logprob: -5.255838871002197
    3. '_' → logprob: -8.255838394165039
    4. '=' → logprob: -8.630838394165039
    5. ' =' → logprob: -9.130838394165039
    6. 'Max' → logprob: -10.755838394165039
    7. '=max' → logprob: -11.005838394165039
    8. '_=' → logprob: -12.755838394165039
    9. '_vals' → logprob: -13.005838394165039
    10. 's' → logprob: -13.005838394165039

Token 147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17979730665683746
    2. ' =' → logprob: -1.8047972917556763
    3. 's' → logprob: -10.304797172546387
    4. '=list' → logprob: -12.054797172546387
    5. ',' → logprob: -12.179797172546387
    6. '(' → logprob: -13.304797172546387
    7. '=max' → logprob: -13.679797172546387
    8. ' ' → logprob: -13.804797172546387
    9. ')' → logprob: -13.804797172546387
    10. '_' → logprob: -14.554797172546387

Token 148: ' list' (ID: 1562)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.015269787982106209
    2. 'list' → logprob: -4.640269756317139
    3. ' accumulate' → logprob: -6.015269756317139
    4. 'is' → logprob: -6.515269756317139
    5. '(acc' → logprob: -7.015269756317139
    6. 'scan' → logprob: -8.640270233154297
    7. 'it' → logprob: -9.265270233154297
    8. '[' → logprob: -9.640270233154297
    9. '[]' → logprob: -9.890270233154297
    10. ' list' → logprob: -10.015270233154297

Token 149: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0004032634024042636
    2. 'acc' → logprob: -7.87540340423584
    3. '(ac' → logprob: -11.62540340423584
    4. '(' → logprob: -11.75040340423584
    5. '(is' → logprob: -12.62540340423584
    6. '(t' → logprob: -14.00040340423584
    7. '(it' → logprob: -14.25040340423584
    8. '	acc' → logprob: -15.25040340423584
    9. '()' → logprob: -15.62540340423584
    10. '(
' → logprob: -15.62540340423584

Token 150: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0026244083419442177
    2. 'um' → logprob: -6.37762451171875
    3. 'ulate' → logprob: -7.00262451171875
    4. 'om' → logprob: -12.00262451171875
    5. 'uate' → logprob: -13.50262451171875
    6. '(' → logprob: -14.12762451171875
    7. '(count' → logprob: -14.50262451171875
    8. '=' → logprob: -14.87762451171875
    9. '(acc' → logprob: -15.00262451171875
    10. 'ul' → logprob: -15.12762451171875

Token 151: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.010999838821589947
    2. 'H' → logprob: -4.88599967956543
    3. '(seq' → logprob: -6.38599967956543
    4. ',' → logprob: -7.26099967956543
    5. ',H' → logprob: -7.63599967956543
    6. 'seq' → logprob: -8.38599967956543
    7. 'n' → logprob: -9.38599967956543
    8. '(n' → logprob: -9.38599967956543
    9. ')' → logprob: -9.88599967956543
    10. ')(' → logprob: -10.51099967956543

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027228486724197865
    2. '))' → logprob: -6.75272274017334
    3. ')))' → logprob: -7.12772274017334
    4. ',max' → logprob: -7.50272274017334
    5. 'lambda' → logprob: -9.62772274017334
    6. ' ,' → logprob: -10.00272274017334
    7. '),' → logprob: -11.00272274017334
    8. 'max' → logprob: -11.12772274017334
    9. ',key' → logprob: -11.12772274017334
    10. ',
' → logprob: -12.00272274017334

Token 153: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.007357086520642042
    2. 'lambda' → logprob: -5.007357120513916
    3. ' max' → logprob: -7.632357120513916
    4. 'func' → logprob: -8.882356643676758
    5. ' lambda' → logprob: -11.507356643676758
    6. ' ' → logprob: -13.632356643676758
    7. '(lambda' → logprob: -13.757356643676758
    8. '(max' → logprob: -13.757356643676758
    9. '=max' → logprob: -13.882356643676758
    10. ')' → logprob: -14.132356643676758

Token 154: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005852030590176582
    2. '))
' → logprob: -7.625585079193115
    3. '))

' → logprob: -9.875585556030273
    4. ')))' → logprob: -10.500585556030273
    5. ')' → logprob: -11.750585556030273
    6. ' ))' → logprob: -12.500585556030273
    7. '()))' → logprob: -13.250585556030273
    8. '));' → logprob: -13.500585556030273
    9. ',' → logprob: -13.750585556030273
    10. ')),' → logprob: -14.750585556030273

Token 155: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.42539551854133606
    2. '<|end|>' → logprob: -2.3003954887390137
    3. 'for' → logprob: -2.5503954887390137
    4. ')' → logprob: -3.3003954887390137
    5. 'count' → logprob: -3.9253954887390137
    6. 'print' → logprob: -4.300395488739014
    7. 'current' → logprob: -4.425395488739014
    8. 'pairs' → logprob: -4.550395488739014
    9. 'next' → logprob: -4.675395488739014
    10. 'prev' → logprob: -5.175395488739014

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17990335822105408
    2. '=' → logprob: -1.8049033880233765
    3. ')' → logprob: -9.679903030395508
    4. '_' → logprob: -10.054903030395508
    5. ',' → logprob: -11.054903030395508
    6. ' ' → logprob: -11.679903030395508
    7. ':' → logprob: -11.804903030395508
    8. ' =
' → logprob: -11.929903030395508
    9. ' ' → logprob: -12.304903030395508
    10. '(' → logprob: -13.304903030395508

Token 157: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06340709328651428
    2. ' clever' → logprob: -4.063406944274902
    3. 'max' → logprob: -4.438406944274902
    4. ' ' → logprob: -4.438406944274902
    5. ' max' → logprob: -4.813406944274902
    6. 'cle' → logprob: -5.563406944274902
    7. ' sum' → logprob: -6.188406944274902
    8. 'sum' → logprob: -6.313406944274902
    9. 'reduce' → logprob: -6.438406944274902
    10. 'len' → logprob: -6.938406944274902

Token 158: '1' (ID: 16)
  Prédit: 'cle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.2878012955188751
    2. '0' → logprob: -1.6628012657165527
    3. 'sum' → logprob: -3.6628012657165527
    4. 'max' → logprob: -3.9128012657165527
    5. 'reduce' → logprob: -4.912801265716553
    6. 'len' → logprob: -5.412801265716553
    7. ' clever' → logprob: -6.787801265716553
    8. 'n' → logprob: -8.037801742553711
    9. 'list' → logprob: -8.412801742553711
    10. '1' → logprob: -8.787801742553711

Token 159: ' +' (ID: 659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21754015982151031
    2. ' for' → logprob: -1.7175401449203491
    3. '
' → logprob: -4.342540264129639
    4. '<|end|>' → logprob: -5.967540264129639
    5. ',' → logprob: -8.59253978729248
    6. ')' → logprob: -9.34253978729248
    7. '<|end|>' → logprob: -10.09253978729248
    8. 'prev' → logprob: -10.59253978729248
    9. ',
' → logprob: -11.09253978729248
    10. 'i' → logprob: -11.96753978729248

Token 160: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.057568278163671494
    2. 'max' → logprob: -3.057568311691284
    3. ' sum' → logprob: -5.307568073272705
    4. 'reduce' → logprob: -6.057568073272705
    5. 'len' → logprob: -6.807568073272705
    6. ' max' → logprob: -7.932568073272705
    7. 'list' → logprob: -9.182568550109863
    8. 'running' → logprob: -10.807568550109863
    9. 'H' → logprob: -10.932568550109863
    10. 'n' → logprob: -11.682568550109863

Token 161: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.440496027469635
    2. '(h' → logprob: -1.6904959678649902
    3. '(mark' → logprob: -2.4404959678649902
    4. '(H' → logprob: -3.6904959678649902
    5. '(x' → logprob: -3.6904959678649902
    6. '((' → logprob: -4.44049596786499
    7. '(i' → logprob: -4.56549596786499
    8. '([' → logprob: -5.19049596786499
    9. '(int' → logprob: -5.81549596786499
    10. '(map' → logprob: -6.31549596786499

Token 162: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.00024965754710137844
    2. '(' → logprob: -8.625249862670898
    3. '(int' → logprob: -9.625249862670898
    4. 'lambda' → logprob: -12.750249862670898
    5. '(
' → logprob: -14.250249862670898
    6. ' (' → logprob: -15.000249862670898
    7. '(operator' → logprob: -16.1252498626709
    8. '   ' → logprob: -16.5002498626709
    9. '(l' → logprob: -16.7502498626709
    10. '(bool' → logprob: -17.0002498626709

Token 163: ' p' (ID: 275)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.30252590775489807
    2. ' i' → logprob: -1.8025258779525757
    3. ' h' → logprob: -2.9275259971618652
    4. ' idx' → logprob: -4.552525997161865
    5. 'x' → logprob: -4.677525997161865
    6. ' lambda' → logprob: -4.927525997161865
    7. ' y' → logprob: -5.927525997161865
    8. 'h' → logprob: -6.052525997161865
    9. ' H' → logprob: -6.177525997161865
    10. 'lambda' → logprob: -6.927525997161865

Token 164: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03286806121468544
    2. ' :' → logprob: -3.5328681468963623
    3. 'lambda' → logprob: -6.407867908477783
    4. ' lambda' → logprob: -7.157867908477783
    5. '(lambda' → logprob: -8.032868385314941
    6. ',' → logprob: -8.657868385314941
    7. '   ' → logprob: -10.657868385314941
    8. ' p' → logprob: -10.657868385314941
    9. ':
' → logprob: -10.657868385314941
    10. '=lambda' → logprob: -11.032868385314941

Token 165: ' int' (ID: 677)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.19545722007751465
    2. ' p' → logprob: -1.8204572200775146
    3. 'H' → logprob: -4.945457458496094
    4. 'lambda' → logprob: -5.695457458496094
    5. ' lambda' → logprob: -6.320457458496094
    6. ' H' → logprob: -6.445457458496094
    7. 'int' → logprob: -7.445457458496094
    8. ' (' → logprob: -8.320457458496094
    9. ' int' → logprob: -8.945457458496094
    10. '(' → logprob: -9.070457458496094

Token 166: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7015349268913269
    2. '(p' → logprob: -1.0765349864959717
    3. ' p' → logprob: -1.9515349864959717
    4. '(' → logprob: -4.576534748077393
    5. '(H' → logprob: -5.451534748077393
    6. ' (' → logprob: -5.576534748077393
    7. '(
' → logprob: -6.826534748077393
    8. 'H' → logprob: -7.076534748077393
    9. ' H' → logprob: -8.07653522491455
    10. '((' → logprob: -8.82653522491455

Token 167: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0989198163151741
    2. ' >=' → logprob: -3.5989198684692383
    3. ' >' → logprob: -3.8489198684692383
    4. '>' → logprob: -3.9739198684692383
    5. ' ==' → logprob: -4.598919868469238
    6. '==' → logprob: -5.098919868469238
    7. '>=' → logprob: -5.223919868469238
    8. ' ' → logprob: -6.723919868469238
    9. ' and' → logprob: -7.598919868469238
    10. ')' → logprob: -7.973919868469238

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11370760202407837
    2. '1' → logprob: -2.2387075424194336
    3. ' ' → logprob: -7.488707542419434
    4. '[' → logprob: -9.238707542419434
    5. 'p' → logprob: -9.363707542419434
    6. '>' → logprob: -10.676207542419434
    7. ']' → logprob: -10.926207542419434
    8. 'H' → logprob: -11.363707542419434
    9. ' p' → logprob: -11.613707542419434
    10. '
' → logprob: -12.113707542419434

Token 169: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20161420106887817
    2. ' >' → logprob: -1.8266141414642334
    3. ']' → logprob: -5.0766143798828125
    4. '>=' → logprob: -5.4516143798828125
    5. ' p' → logprob: -6.2016143798828125
    6. '<' → logprob: -6.4516143798828125
    7. '[' → logprob: -6.5766143798828125
    8. ' >=' → logprob: -6.7016143798828125
    9. 'p' → logprob: -6.8266143798828125
    10. '<p' → logprob: -7.0766143798828125

Token 170: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8821673393249512
    2. '>=' → logprob: -1.2571673393249512
    3. ' >' → logprob: -2.007167339324951
    4. ' >=' → logprob: -2.257167339324951
    5. '==' → logprob: -3.257167339324951
    6. ' p' → logprob: -4.757167339324951
    7. ' ==' → logprob: -4.882167339324951
    8. '[' → logprob: -6.257167339324951
    9. 'p' → logprob: -6.632167339324951
    10. ')' → logprob: -6.882167339324951

Token 171: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01605595462024212
    2. ' p' → logprob: -4.141056060791016
    3. ' running' → logprob: -12.141056060791016
    4. 'max' → logprob: -12.516056060791016
    5. 'running' → logprob: -12.891056060791016
    6. ' ' → logprob: -13.141056060791016
    7. '1' → logprob: -13.266056060791016
    8. ' max' → logprob: -13.391056060791016
    9. '
' → logprob: -13.828556060791016
    10. '0' → logprob: -14.266056060791016

Token 172: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6385135054588318
    2. '1' → logprob: -0.7635135054588318
    3. 'p' → logprob: -5.638513565063477
    4. ' ' → logprob: -7.388513565063477
    5. ' running' → logprob: -7.763513565063477
    6. 'running' → logprob: -7.888513565063477
    7. ' [' → logprob: -8.138513565063477
    8. ' p' → logprob: -9.013513565063477
    9. '0' → logprob: -9.201013565063477
    10. ')' → logprob: -9.263513565063477

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011635973118245602
    2. 'p' → logprob: -4.511635780334473
    3. ' ' → logprob: -8.636635780334473
    4. ' p' → logprob: -8.636635780334473
    5. 'running' → logprob: -9.636635780334473
    6. ' running' → logprob: -9.949135780334473
    7. '[' → logprob: -10.011635780334473
    8. '0' → logprob: -10.386635780334473
    9. ']' → logprob: -12.199135780334473
    10. 'r' → logprob: -12.199135780334473

Token 174: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3178040087223053
    2. ',' → logprob: -1.317803978919983
    3. ' and' → logprob: -6.317803859710693
    4. ' ),' → logprob: -7.067803859710693
    5. ')' → logprob: -7.567803859710693
    6. ' ,' → logprob: -7.942803859710693
    7. ')),' → logprob: -8.067804336547852
    8. 'and' → logprob: -8.442804336547852
    9. '),
' → logprob: -9.317804336547852
    10. '[' → logprob: -9.567804336547852

Token 175: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.34863752126693726
    2. ' zip' → logprob: -1.223637580871582
    3. 'is' → logprob: -9.598637580871582
    4. '   ' → logprob: -9.848637580871582
    5. '(zip' → logprob: -10.223637580871582
    6. ' is' → logprob: -11.348637580871582
    7. '    ' → logprob: -11.973637580871582
    8. 'list' → logprob: -13.098637580871582
    9. '       ' → logprob: -13.098637580871582
    10. ' ' → logprob: -13.223637580871582

Token 176: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.005645047873258591
    2. '(r' → logprob: -5.630645275115967
    3. '(' → logprob: -7.380645275115967
    4. '(n' → logprob: -7.880645275115967
    5. '(zip' → logprob: -8.505644798278809
    6. 'H' → logprob: -8.630644798278809
    7. '(count' → logprob: -8.755644798278809
    8. '(is' → logprob: -8.880644798278809
    9. ' (' → logprob: -9.130644798278809
    10. '(h' → logprob: -9.630644798278809

Token 177: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04906907677650452
    2. ',r' → logprob: -3.5490691661834717
    3. ' ,' → logprob: -4.674068927764893
    4. '(r' → logprob: -5.049068927764893
    5. '[' → logprob: -6.549068927764893
    6. ' running' → logprob: -6.674068927764893
    7. ' (' → logprob: -8.54906940460205
    8. 'running' → logprob: -8.67406940460205
    9. '(' → logprob: -9.29906940460205
    10. ',[' → logprob: -9.79906940460205

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6099597811698914
    2. 'running' → logprob: -0.9849597811698914
    3. ',' → logprob: -3.484959840774536
    4. ' running' → logprob: -3.984959840774536
    5. '[' → logprob: -4.234959602355957
    6. 'range' → logprob: -4.734959602355957
    7. 'n' → logprob: -6.234959602355957
    8. '[:-' → logprob: -6.359959602355957
    9. 'run' → logprob: -6.484959602355957
    10. '(' → logprob: -6.984959602355957

Token 179: ':],' (ID: 117284)
  Prédit: ':],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':],' → logprob: -0.19825762510299683
    2. ',' → logprob: -2.4482576847076416
    3. '],' → logprob: -2.6982576847076416
    4. ':' → logprob: -4.4482574462890625
    5. '[' → logprob: -4.8232574462890625
    6. ':,' → logprob: -6.1982574462890625
    7. '),' → logprob: -6.8232574462890625
    8. ':]' → logprob: -7.9482574462890625
    9. '(' → logprob: -8.073257446289062
    10. '(n' → logprob: -8.198257446289062

Token 180: ' running' (ID: 6788)
  Prédit: ' running'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' running' → logprob: -0.0897909626364708
    2. 'running' → logprob: -2.4647910594940186
    3. ' H' → logprob: -7.7147908210754395
    4. 'H' → logprob: -8.464791297912598
    5. ' is' → logprob: -9.339791297912598
    6. '   ' → logprob: -10.589791297912598
    7. '    ' → logprob: -11.089791297912598
    8. 'run' → logprob: -11.339791297912598
    9. 'is' → logprob: -11.464791297912598
    10. ' run' → logprob: -11.527291297912598

Token 181: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00023250321100931615
    2. 'max' → logprob: -8.375232696533203
    3. 'Max' → logprob: -14.500232696533203
    4. '[max' → logprob: -15.750232696533203
    5. '(max' → logprob: -16.000232696533203
    6. '_' → logprob: -16.125232696533203
    7. '__' → logprob: -16.375232696533203
    8. '[' → logprob: -16.375232696533203
    9. '=' → logprob: -16.500232696533203
    10. '_m' → logprob: -16.500232696533203

Token 182: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.014640211127698421
    2. ')))' → logprob: -4.2646403312683105
    3. '[' → logprob: -8.389639854431152
    4. '[:' → logprob: -8.764639854431152
    5. '))' → logprob: -10.264639854431152
    6. '))))' → logprob: -11.014639854431152
    7. ')' → logprob: -11.139639854431152
    8. ')));' → logprob: -11.264639854431152
    9. '[:]' → logprob: -12.014639854431152
    10. ',' → logprob: -13.639639854431152

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015908108616713434
    2. '-' → logprob: -8.75015926361084
    3. ' -' → logprob: -15.12515926361084
    4. ' ' → logprob: -15.37515926361084
    5. '])' → logprob: -17.375158309936523
    6. '```' → logprob: -18.125158309936523
    7. ']))' → logprob: -18.375158309936523
    8. ']' → logprob: -18.625158309936523
    9. '   ' → logprob: -18.750158309936523
    10. '
' → logprob: -19.375158309936523

Token 184: '])))
' (ID: 146875)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0005364707321859896
    2. '))))' → logprob: -8.125536918640137
    3. ')' → logprob: -9.125536918640137
    4. ')))
' → logprob: -9.250536918640137
    5. '))' → logprob: -11.125536918640137
    6. ')));' → logprob: -11.500536918640137
    7. ')))

' → logprob: -12.000536918640137
    8. '))).' → logprob: -13.375536918640137
    9. ' ' → logprob: -14.250536918640137
    10. ')))
' → logprob: -14.625536918640137

Token 185: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002348292153328657
    2. ')' → logprob: -6.12734842300415
    3. ' print' → logprob: -9.877347946166992
    4. ')
' → logprob: -9.877347946166992
    5. '
' → logprob: -10.252347946166992
    6. '<|end|>' → logprob: -11.627347946166992
    7. 'for' → logprob: -12.627347946166992
    8. '#print' → logprob: -13.002347946166992
    9. '(print' → logprob: -13.502347946166992
    10. '#' → logprob: -13.502347946166992

Token 186: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00012856863031629473
    2. '(' → logprob: -9.000128746032715
    3. 'ans' → logprob: -13.125128746032715
    4. '(n' → logprob: -13.875128746032715
    5. '(sum' → logprob: -14.250128746032715
    6. '(len' → logprob: -14.250128746032715
    7. '(max' → logprob: -15.250128746032715
    8. '(answer' → logprob: -15.375128746032715
    9. '()' → logprob: -15.500128746032715
    10. '(
' → logprob: -15.875128746032715

Token 187: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009136092266999185
    2. '))' → logprob: -7.000913619995117
    3. ')`' → logprob: -14.250913619995117
    4. ' )' → logprob: -14.500913619995117
    5. '`)' → logprob: -15.250913619995117
    6. ')
' → logprob: -15.250913619995117
    7. ')))' → logprob: -15.625913619995117
    8. '})' → logprob: -16.500913619995117
    9. '+' → logprob: -17.000913619995117
    10. ')}' → logprob: -17.125913619995117


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 185
Tokens correctement prédits (1ère position, stricte): 68
Tokens correctement prédits (1ère position, avec adaptation): 69
Tokens correctement prédits (top 10): 129
Précision stricte (1ère position): 36.76%
Précision adaptée (1ère position): 37.30%
Précision (top 10): 69.73%
================================================================================
