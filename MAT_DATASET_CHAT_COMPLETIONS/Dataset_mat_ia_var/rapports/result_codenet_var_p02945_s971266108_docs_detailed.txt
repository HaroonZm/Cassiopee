================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    """
    Lit une ligne de l'entrée standard, sépare la ligne en deux entiers et les retourne.

    Returns:
        tuple: Un tuple contenant deux entiers (A, B) extraits de l'entrée utilisateur.
    """
    # Lire la ligne de l'utilisateur, séparer par espaces, convertir chaque partie en int
    A, B = list(map(int, input().split()))
    return A, B

def compute_max_operation(A, B):
    """
    Calcule et retourne la valeur maximale parmi la somme, la différence et le produit de A et B.

    Args:
        A (int): Premier entier.
        B (int): Deuxième entier.

    Returns:
        int: La plus grande valeur parmi A+B, A-B et A*B.
    """
    # Calculer toutes les opérations possibles
    addition = A + B
    soustraction = A - B
    multiplication = A * B
    # Retourner la plus grande valeur parmi les trois
    return max(addition, soustraction, multiplication)

def main():
    """
    Fonction principale du programme qui orchestre la lecture des données,
    le calcul du résultat et son affichage.
    """
    # Lire les deux entiers depuis l'entrée utilisateur
    A, B = read_input()
    # Calculer la valeur maximale parmi toutes les opérations
    maximum = compute_max_operation(A, B)
    # Afficher le résultat à l'utilisateur
    print(maximum)

# Exécuter la fonction principale si ce fichier est exécuté comme script principal
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032630343921482563
    2. '_' → logprob: -6.003262996673584
    3. '():' → logprob: -7.878262996673584
    4. '(:' → logprob: -8.628263473510742
    5. '(_:' → logprob: -9.503263473510742
    6. '```' → logprob: -9.878263473510742
    7. ':' → logprob: -10.253263473510742
    8. ' (' → logprob: -10.878263473510742
    9. '(_' → logprob: -11.253263473510742
    10. '()' → logprob: -12.378263473510742

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7947481870651245
    2. '\' → logprob: -1.6697481870651245
    3. '   ' → logprob: -1.7947481870651245
    4. '\n' → logprob: -1.9197481870651245
    5. ':' → logprob: -5.044748306274414
    6. '``' → logprob: -5.169748306274414
    7. '<|end|>' → logprob: -5.169748306274414
    8. '    
' → logprob: -5.294748306274414
    9. '
' → logprob: -5.794748306274414
    10. '    ' → logprob: -5.919748306274414

Token 5: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5171149969100952
    2. '   ' → logprob: -1.3921149969100952
    3. 'input' → logprob: -2.7671151161193848
    4. '```' → logprob: -3.0171151161193848
    5. 'data' → logprob: -4.267115116119385
    6. 'r' → logprob: -5.267115116119385
    7. 'pass' → logprob: -5.392115116119385
    8. '\' → logprob: -5.642115116119385
    9. 'text' → logprob: -6.017115116119385
    10. '    ' → logprob: -6.017115116119385

Token 6: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.34103673696517944
    2. '   ' → logprob: -1.8410367965698242
    3. 'Reads' → logprob: -2.591036796569824
    4. 'Read' → logprob: -3.341036796569824
    5. ' Reads' → logprob: -5.591036796569824
    6. '""' → logprob: -5.591036796569824
    7. ' reads' → logprob: -5.841036796569824
    8. 'Returns' → logprob: -6.091036796569824
    9. ''''' → logprob: -6.841036796569824
    10. '       ' → logprob: -6.841036796569824

Token 7: ' Lit' (ID: 45595)
  Prédit: 'Read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Read' → logprob: -0.493565171957016
    2. 'Reads' → logprob: -1.1185652017593384
    3. '"""' → logprob: -3.743565082550049
    4. '   ' → logprob: -4.243565082550049
    5. 'Return' → logprob: -5.618565082550049
    6. '       ' → logprob: -5.743565082550049
    7. 'Returns' → logprob: -5.868565082550049
    8. 'Get' → logprob: -6.493565082550049
    9. 'T' → logprob: -6.618565082550049
    10. 'R' → logprob: -6.743565082550049

Token 8: ' une' (ID: 2463)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.039792463183403015
    2. 'er' → logprob: -4.664792537689209
    3. ' e' → logprob: -4.664792537689209
    4. ' les' → logprob: -4.664792537689209
    5. ' le' → logprob: -6.664792537689209
    6. ' inputs' → logprob: -6.664792537689209
    7. ' ' → logprob: -6.914792537689209
    8. '()' → logprob: -7.039792537689209
    9. ' input' → logprob: -7.164792537689209
    10. 'é' → logprob: -7.289792537689209

Token 9: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6354326009750366
    2. 'entrée' → logprob: -1.5104326009750366
    3. ' entrée' → logprob: -2.260432720184326
    4. ' ' → logprob: -3.135432720184326
    5. ' ligne' → logprob: -3.510432720184326
    6. 'chaine' → logprob: -3.635432720184326
    7. ' chaine' → logprob: -4.260432720184326
    8. '   ' → logprob: -4.635432720184326
    9. 'cha' → logprob: -4.635432720184326
    10. 'ligne' → logprob: -5.135432720184326

Token 10: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13001960515975952
    2. '\n' → logprob: -2.2550196647644043
    3. ' de' → logprob: -4.880019664764404
    4. ' et' → logprob: -5.630019664764404
    5. '\' → logprob: -6.255019664764404
    6. ' ' → logprob: -7.505019664764404
    7. ',' → logprob: -8.255019187927246
    8. '    ' → logprob: -8.255019187927246
    9. '    
' → logprob: -8.630019187927246
    10. '.' → logprob: -8.755019187927246

Token 11: ' l' (ID: 305)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -1.5563572645187378
    2. ' code' → logprob: -2.0563573837280273
    3. ' texte' → logprob: -2.0563573837280273
    4. ' l' → logprob: -2.1813573837280273
    5. ' input' → logprob: -2.1813573837280273
    6. 'entrée' → logprob: -2.4313573837280273
    7. 'code' → logprob: -2.5563573837280273
    8. 'l' → logprob: -2.6813573837280273
    9. 'input' → logprob: -3.1813573837280273
    10. 's' → logprob: -4.806357383728027

Token 12: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.13628751039505005
    2. 'a' → logprob: -2.7612874507904053
    3. 'entrée' → logprob: -3.7612874507904053
    4. ''' → logprob: -3.7612874507904053
    5. 'input' → logprob: -5.261287689208984
    6. 'e' → logprob: -5.261287689208984
    7. ''utilisateur' → logprob: -5.636287689208984
    8. ' input' → logprob: -6.636287689208984
    9. ' entrée' → logprob: -7.761287689208984
    10. '’entrée' → logprob: -7.886287689208984

Token 13: ' standard' (ID: 7024)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5225095748901367
    2. '\n' → logprob: -1.6475095748901367
    3. ' standard' → logprob: -2.0225095748901367
    4. '.' → logprob: -2.0225095748901367
    5. '   ' → logprob: -2.2725095748901367
    6. ' de' → logprob: -3.2725095748901367
    7. ' ,' → logprob: -3.5225095748901367
    8. ' en' → logprob: -3.6475095748901367
    9. ' stdin' → logprob: -4.147509574890137
    10. '\' → logprob: -4.272509574890137

Token 14: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04004698619246483
    2. '\n' → logprob: -3.5400469303131104
    3. '    ' → logprob: -5.6650471687316895
    4. ' ' → logprob: -5.9150471687316895
    5. ',' → logprob: -6.7900471687316895
    6. '.' → logprob: -7.1650471687316895
    7. '\' → logprob: -7.5400471687316895
    8. '  ' → logprob: -8.290046691894531
    9. '    
' → logprob: -8.415046691894531
    10. ' \' → logprob: -9.040046691894531

Token 15: ' sé' (ID: 7462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2083156853914261
    2. ' et' → logprob: -3.08331561088562
    3. ' retourne' → logprob: -3.08331561088562
    4. ' return' → logprob: -3.95831561088562
    5. ' ren' → logprob: -3.95831561088562
    6. ' puis' → logprob: -3.95831561088562
    7. ' tokenize' → logprob: -4.208315849304199
    8. ' en' → logprob: -5.708315849304199
    9. '    ' → logprob: -5.958315849304199
    10. 'return' → logprob: -5.958315849304199

Token 16: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -1.3002949953079224
    2. 'q' → logprob: -1.8002949953079224
    3. 'rie' → logprob: -1.8002949953079224
    4. 'c' → logprob: -2.175294876098633
    5. 'quence' → logprob: -2.800294876098633
    6. 'e' → logprob: -3.175294876098633
    7. 'ur' → logprob: -4.050294876098633
    8. 'lection' → logprob: -4.175294876098633
    9. 'cur' → logprob: -4.300294876098633
    10. 'a' → logprob: -4.300294876098633

Token 17: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.13414916396141052
    2. 'les' → logprob: -3.0091490745544434
    3. '   ' → logprob: -3.6341490745544434
    4. ' la' → logprob: -3.7591490745544434
    5. 'la' → logprob: -4.259149074554443
    6. ' en' → logprob: -4.759149074554443
    7. ' le' → logprob: -7.259149074554443
    8. 's' → logprob: -8.009149551391602
    9. ' par' → logprob: -8.009149551391602
    10. 'en' → logprob: -8.134149551391602

Token 18: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.7529173493385315
    2. ' ligne' → logprob: -0.8779173493385315
    3. 'chaine' → logprob: -3.1279172897338867
    4. ' phrase' → logprob: -4.127917289733887
    5. ' chaîne' → logprob: -4.377917289733887
    6. 'phrase' → logprob: -5.127917289733887
    7. ' lignes' → logprob: -5.502917289733887
    8. 'entrée' → logprob: -5.752917289733887
    9. '   ' → logprob: -5.877917289733887
    10. ' ' → logprob: -6.002917289733887

Token 19: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.5259881615638733
    2. ' en' → logprob: -1.1509881019592285
    3. ' par' → logprob: -2.7759881019592285
    4. 'par' → logprob: -3.9009881019592285
    5. '   ' → logprob: -4.6509881019592285
    6. ',' → logprob: -9.025988578796387
    7. ' ,' → logprob: -9.775988578796387
    8. ' ' → logprob: -9.775988578796387
    9. ' et' → logprob: -9.775988578796387
    10. 'au' → logprob: -9.775988578796387

Token 20: ' deux' (ID: 10301)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5197099447250366
    2. 'tokens' → logprob: -1.3947099447250366
    3. ' tokens' → logprob: -2.519710063934326
    4. ' mots' → logprob: -3.019710063934326
    5. '   ' → logprob: -4.269710063934326
    6. 'mot' → logprob: -5.519710063934326
    7. '```' → logprob: -5.769710063934326
    8. ' ' → logprob: -6.144710063934326
    9. ' morceaux' → logprob: -6.394710063934326
    10. 'token' → logprob: -7.269710063934326

Token 21: ' ent' (ID: 1121)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.5988489389419556
    2. 'm' → logprob: -1.8488489389419556
    3. ' parties' → logprob: -1.8488489389419556
    4. 'tokens' → logprob: -2.098848819732666
    5. ' chaînes' → logprob: -2.348848819732666
    6. 'élé' → logprob: -3.098848819732666
    7. ' mots' → logprob: -3.223848819732666
    8. 'variables' → logprob: -3.723848819732666
    9. ' variables' → logprob: -3.848848819732666
    10. ' par' → logprob: -3.973848819732666

Token 22: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.23313704133033752
    2. 'ités' → logprob: -1.7331370115280151
    3. 'r' → logprob: -3.8581371307373047
    4. 'rés' → logprob: -5.858137130737305
    5. 'êtes' → logprob: -6.358137130737305
    6. 'ières' → logprob: -6.983137130737305
    7. 't' → logprob: -7.233137130737305
    8. 'ries' → logprob: -7.358137130737305
    9. 'ées' → logprob: -7.983137130737305
    10. '```' → logprob: -8.358137130737305

Token 23: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.174172043800354
    2. '   ' → logprob: -2.9241719245910645
    3. ' ' → logprob: -3.4241719245910645
    4. ')' → logprob: -3.7991719245910645
    5. ' ,' → logprob: -4.6741719245910645
    6. ' et' → logprob: -4.7991719245910645
    7. ''' → logprob: -4.7991719245910645
    8. 's' → logprob: -5.4241719245910645
    9. ' )' → logprob: -5.6741719245910645
    10. '`' → logprob: -6.0491719245910645

Token 24: ' les' (ID: 1341)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.21713143587112427
    2. ' les' → logprob: -2.0921313762664795
    3. ' return' → logprob: -3.7171313762664795
    4. 'return' → logprob: -3.8421313762664795
    5. '   ' → logprob: -4.217131614685059
    6. ' ren' → logprob: -5.342131614685059
    7. 'ret' → logprob: -5.967131614685059
    8. ' returns' → logprob: -6.717131614685059
    9. ' retourner' → logprob: -8.092131614685059
    10. '    ' → logprob: -8.217131614685059

Token 25: ' retourne' (ID: 178818)
  Prédit: ' retourne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.5036331415176392
    2. ' return' → logprob: -1.1286331415176392
    3. 'return' → logprob: -3.5036330223083496
    4. ' continue' → logprob: -5.25363302230835
    5. ' ' → logprob: -5.37863302230835
    6. 's' → logprob: -5.75363302230835
    7. 'r' → logprob: -5.87863302230835
    8. ' retourner' → logprob: -6.12863302230835
    9. ' ren' → logprob: -6.25363302230835
    10. ',' → logprob: -6.25363302230835

Token 26: '.

' (ID: 364)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4154539108276367
    2. ' ' → logprob: -1.7904539108276367
    3. ' ,' → logprob: -2.7904539108276367
    4. '   ' → logprob: -3.1654539108276367
    5. '.' → logprob: -4.415453910827637
    6. '\n' → logprob: -4.415453910827637
    7. ')' → logprob: -4.665453910827637
    8. '```' → logprob: -4.790453910827637
    9. '\' → logprob: -5.415453910827637
    10. ' en' → logprob: -5.415453910827637

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009737669490277767
    2. '```' → logprob: -4.884737491607666
    3. '"""' → logprob: -7.134737491607666
    4. ')' → logprob: -7.884737491607666
    5. '\n' → logprob: -8.009737968444824
    6. '`' → logprob: -8.384737968444824
    7. '"""
' → logprob: -9.509737968444824
    8. '\' → logprob: -10.259737968444824
    9. '"' → logprob: -10.259737968444824
    10. '    ' → logprob: -10.384737968444824

Token 28: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09121614694595337
    2. 'return' → logprob: -2.8412160873413086
    3. ' return' → logprob: -4.716216087341309
    4. '"""' → logprob: -5.216216087341309
    5. '```' → logprob: -5.591216087341309
    6. 'n' → logprob: -6.466216087341309
    7. 'r' → logprob: -6.591216087341309
    8. ')' → logprob: -6.591216087341309
    9. ' """' → logprob: -7.216216087341309
    10. '    ' → logprob: -7.466216087341309

Token 29: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.2710086107254028
    2. ' ' → logprob: -1.5210086107254028
    3. ' )' → logprob: -1.7710086107254028
    4. ' int' → logprob: -2.2710084915161133
    5. ' ):' → logprob: -2.3960084915161133
    6. ')' → logprob: -3.3960084915161133
    7. '   ' → logprob: -3.7710084915161133
    8. ' integers' → logprob: -4.271008491516113
    9. ' ' → logprob: -4.396008491516113
    10. ' `' → logprob: -4.896008491516113

Token 30: '       ' (ID: 309)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.39348533749580383
    2. ' Tuple' → logprob: -1.6434853076934814
    3. ' int' → logprob: -2.1434853076934814
    4. 'int' → logprob: -5.0184855461120605
    5. '   ' → logprob: -6.1434855461120605
    6. 'tuple' → logprob: -6.1434855461120605
    7. 'Tuple' → logprob: -6.6434855461120605
    8. ' (' → logprob: -7.2684855461120605
    9. '    ' → logprob: -7.3934855461120605
    10. '(int' → logprob: -8.393485069274902

Token 31: ' tuple' (ID: 31311)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9824717044830322
    2. 'tuple' (adapté à ' tuple') → logprob: -1.1074717044830322
    3. ' tuple' → logprob: -1.8574717044830322
    4. 'Tuple' → logprob: -2.1074717044830322
    5. ' Tuple' → logprob: -4.732471466064453
    6. ' int' → logprob: -5.107471466064453
    7. '(int' → logprob: -6.232471466064453
    8. '(tuple' → logprob: -7.607471466064453
    9. '   ' → logprob: -9.232471466064453
    10. 'a' → logprob: -10.357471466064453

Token 32: ':' (ID: 25)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.07551503926515579
    2. '(int' → logprob: -2.700515031814575
    3. '<int' → logprob: -6.075515270233154
    4. ' (' → logprob: -6.450515270233154
    5. ' of' → logprob: -7.450515270233154
    6. ':' → logprob: -8.075514793395996
    7. '[' → logprob: -8.075514793395996
    8. '<|end|>' → logprob: -8.700514793395996
    9. '(' → logprob: -8.950514793395996
    10. 'int' → logprob: -9.950514793395996

Token 33: ' Un' (ID: 1367)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16600781679153442
    2. '(int' → logprob: -1.9160077571868896
    3. ' int' → logprob: -5.291007995605469
    4. 'int' → logprob: -8.416007995605469
    5. '(tuple' → logprob: -9.166007995605469
    6. '[int' → logprob: -9.416007995605469
    7. ' tuple' → logprob: -9.791007995605469
    8. ' two' → logprob: -9.916007995605469
    9. '<int' → logprob: -9.916007995605469
    10. ' ' → logprob: -10.041007995605469

Token 34: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.2823416590690613
    2. ' entier' → logprob: -2.282341718673706
    3. ' (' → logprob: -2.657341718673706
    4. ' int' → logprob: -3.532341718673706
    5. ' ' → logprob: -4.032341480255127
    6. ' des' → logprob: -4.907341480255127
    7. '(int' → logprob: -5.157341480255127
    8. 'e' → logprob: -5.907341480255127
    9. ' espace' → logprob: -6.032341480255127
    10. 'ent' → logprob: -6.407341480255127

Token 35: ' contenant' (ID: 131049)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6515083312988281
    2. '(int' → logprob: -1.7765083312988281
    3. ' des' → logprob: -1.9015083312988281
    4. '<int' → logprob: -2.776508331298828
    5. '<|end|>' → logprob: -3.901508331298828
    6. '[int' → logprob: -4.026508331298828
    7. ' de' → logprob: -4.026508331298828
    8. '(' → logprob: -4.401508331298828
    9. ' of' → logprob: -4.401508331298828
    10. ' d' → logprob: -5.151508331298828

Token 36: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.0330502949655056
    2. ' les' → logprob: -4.033050060272217
    3. ' (' → logprob: -5.283050060272217
    4. 'de' → logprob: -5.408050060272217
    5. ' two' → logprob: -5.783050060272217
    6. ' ' → logprob: -7.783050060272217
    7. ' ' → logprob: -8.033050537109375
    8. ' l' → logprob: -8.158050537109375
    9. '(' → logprob: -8.283050537109375
    10. ' le' → logprob: -8.783050537109375

Token 37: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.022706646472215652
    2. ' espaces' → logprob: -4.897706508636475
    3. 'ent' → logprob: -5.397706508636475
    4. ' integers' → logprob: -5.772706508636475
    5. ' int' → logprob: -5.897706508636475
    6. '_ent' → logprob: -6.022706508636475
    7. '_' → logprob: -7.272706508636475
    8. ' entier' → logprob: -7.522706508636475
    9. 'int' → logprob: -8.022706985473633
    10. ' nombres' → logprob: -8.647706985473633

Token 38: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0015984143828973174
    2. 'ier' → logprob: -6.876598358154297
    3. 'i' → logprob: -8.251598358154297
    4. 'ers' → logprob: -9.376598358154297
    5. 'ières' → logprob: -9.376598358154297
    6. 'er' → logprob: -9.501598358154297
    7. ',' → logprob: -10.626598358154297
    8. 'ière' → logprob: -11.126598358154297
    9. '```' → logprob: -12.251598358154297
    10. 't' → logprob: -13.001598358154297

Token 39: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06448107212781906
    2. ')' → logprob: -2.814481019973755
    3. '),' → logprob: -7.439481258392334
    4. '   ' → logprob: -7.939481258392334
    5. '(' → logprob: -8.189480781555176
    6. ',
' → logprob: -8.314480781555176
    7. 's' → logprob: -8.814480781555176
    8. '()' → logprob: -8.814480781555176
    9. ' ,' → logprob: -8.939480781555176
    10. ',)' → logprob: -9.564480781555176

Token 40: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17357325553894043
    2. ' a' → logprob: -2.7985732555389404
    3. ' int' → logprob: -4.0485734939575195
    4. 'ent' → logprob: -4.1735734939575195
    5. 'int' → logprob: -4.1735734939575195
    6. 'x' → logprob: -4.4235734939575195
    7. ' x' → logprob: -4.7985734939575195
    8. ' ent' → logprob: -5.0485734939575195
    9. ')' → logprob: -5.2985734939575195
    10. ' n' → logprob: -5.5485734939575195

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.598092684522271e-05
    2. ')' → logprob: -10.125056266784668
    3. ',)' → logprob: -11.875056266784668
    4. ' ,' → logprob: -12.125056266784668
    5. ',
' → logprob: -14.000056266784668
    6. ',int' → logprob: -14.625056266784668
    7. '),' → logprob: -14.625056266784668
    8. 'a' → logprob: -15.250056266784668
    9. 'A' → logprob: -15.500056266784668
    10. ',A' → logprob: -15.750056266784668

Token 42: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.08979368954896927
    2. 'B' → logprob: -2.4647936820983887
    3. ' ' → logprob: -7.839793682098389
    4. '  ' → logprob: -7.964793682098389
    5. ',' → logprob: -10.339794158935547
    6. ' ' → logprob: -10.589794158935547
    7. 's' → logprob: -11.339794158935547
    8. ' ,' → logprob: -11.714794158935547
    9. ')' → logprob: -11.839794158935547
    10. '```' → logprob: -12.714794158935547

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -14.625001907348633
    3. '`)' → logprob: -15.125001907348633
    4. ')`' → logprob: -15.125001907348633
    5. ').' → logprob: -15.500001907348633
    6. '   ' → logprob: -15.500001907348633
    7. ',' → logprob: -16.125001907348633
    8. '),' → logprob: -16.125001907348633
    9. '```' → logprob: -16.125001907348633
    10. '")' → logprob: -16.375001907348633

Token 44: ' extr' (ID: 15674)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36106133460998535
    2. '   ' → logprob: -1.2360613346099854
    3. '    
' → logprob: -5.611061096191406
    4. '```' → logprob: -6.111061096191406
    5. ')
' → logprob: -6.236061096191406
    6. '
' → logprob: -6.611061096191406
    7. ' )' → logprob: -7.611061096191406
    8. '\n' → logprob: -7.611061096191406
    9. ' ' → logprob: -7.861061096191406
    10. ',' → logprob: -8.486061096191406

Token 45: 'aits' (ID: 46641)
  Prédit: 'aits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aits' → logprob: -0.43065863847732544
    2. 'a' → logprob: -1.0556585788726807
    3. 'ai' → logprob: -7.18065881729126
    4. 'ait' → logprob: -8.055658340454102
    5. 'aites' → logprob: -8.055658340454102
    6. 'acts' → logprob: -8.680658340454102
    7. 'act' → logprob: -9.430658340454102
    8. 'ais' → logprob: -9.430658340454102
    9. 'air' → logprob: -10.430658340454102
    10. '   ' → logprob: -10.430658340454102

Token 46: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1047387570142746
    2. '   ' → logprob: -2.979738712310791
    3. ' ' → logprob: -3.979738712310791
    4. ' des' → logprob: -4.104738712310791
    5. ')' → logprob: -5.604738712310791
    6. ' d' → logprob: -6.104738712310791
    7. ' from' → logprob: -6.104738712310791
    8. 'de' → logprob: -6.729738712310791
    9. '    ' → logprob: -7.354738712310791
    10. ' à' → logprob: -7.604738712310791

Token 47: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6426876783370972
    2. ' l' → logprob: -1.5176876783370972
    3. 'l' → logprob: -2.0176877975463867
    4. ' ' → logprob: -2.6426877975463867
    5. 'la' → logprob: -3.3926877975463867
    6. ' input' → logprob: -4.392687797546387
    7. ' ' → logprob: -6.142687797546387
    8. 'input' → logprob: -7.017687797546387
    9. ' une' → logprob: -7.517687797546387
    10. ' the' → logprob: -8.642687797546387

Token 48: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06777597963809967
    2. ''entrée' → logprob: -2.9427759647369385
    3. ''' → logprob: -5.067776203155518
    4. 'e' → logprob: -5.192776203155518
    5. ''a' → logprob: -7.692776203155518
    6. ' a' → logprob: -9.56777572631836
    7. 'entrée' → logprob: -9.69277572631836
    8. '_' → logprob: -9.81777572631836
    9. 'input' → logprob: -9.94277572631836
    10. 'u' → logprob: -10.31777572631836

Token 49: ' utilisateur' (ID: 115595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6293812990188599
    2. ')' → logprob: -1.1293812990188599
    3. ' )' → logprob: -3.0043811798095703
    4. '    
' → logprob: -4.25438117980957
    5. '```' → logprob: -4.50438117980957
    6. '`' → logprob: -4.62938117980957
    7. ',' → logprob: -4.62938117980957
    8. '.' → logprob: -4.75438117980957
    9. '    ' → logprob: -4.87938117980957
    10. ' ' → logprob: -5.00438117980957

Token 50: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49142518639564514
    2. '   ' → logprob: -0.9914251565933228
    3. '```' → logprob: -4.991425037384033
    4. '):' → logprob: -5.866425037384033
    5. '\n' → logprob: -5.991425037384033
    6. '    
' → logprob: -7.116425037384033
    7. '\' → logprob: -7.366425037384033
    8. '"""' → logprob: -7.491425037384033
    9. ')
' → logprob: -7.616425037384033
    10. ')\' → logprob: -7.991425037384033

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11382953077554703
    2. '"""' → logprob: -2.6138296127319336
    3. '\n' → logprob: -3.9888296127319336
    4. '"""
' → logprob: -4.613829612731934
    5. '```' → logprob: -5.988829612731934
    6. ')' → logprob: -6.988829612731934
    7. '"' → logprob: -7.363829612731934
    8. '""' → logprob: -7.488829612731934
    9. '\' → logprob: -7.613829612731934
    10. '"\' → logprob: -7.863829612731934

Token 52: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34276890754699707
    2. '"""' → logprob: -1.467768907546997
    3. '"""
' (adapté à ' """
') → logprob: -3.467768907546997
    4. '```' → logprob: -3.842768907546997
    5. ')' → logprob: -5.592768669128418
    6. '""' → logprob: -6.717768669128418
    7. '\n' → logprob: -6.842768669128418
    8. '    
' → logprob: -7.842768669128418
    9. '
' → logprob: -9.217768669128418
    10. '   
' → logprob: -9.342768669128418

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00047071068547666073
    2. 'return' → logprob: -8.500471115112305
    3. '    
' → logprob: -9.625471115112305
    4. '       ' → logprob: -10.250471115112305
    5. '\n' → logprob: -10.250471115112305
    6. 'input' → logprob: -10.375471115112305
    7. '    ' → logprob: -10.500471115112305
    8. 'a' → logprob: -11.500471115112305
    9. 'try' → logprob: -11.500471115112305
    10. '
' → logprob: -11.500471115112305

Token 54: ' #' (ID: 1069)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3771662414073944
    2. '   ' → logprob: -1.5021662712097168
    3. 'return' → logprob: -2.752166271209717
    4. 'input' → logprob: -4.502166271209717
    5. 'try' → logprob: -5.127166271209717
    6. ' line' → logprob: -5.377166271209717
    7. 'A' → logprob: -5.502166271209717
    8. 'a' → logprob: -7.502166271209717
    9. 'l' → logprob: -8.127165794372559
    10. 'data' → logprob: -8.377165794372559

Token 55: ' Lire' (ID: 57624)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5914511680603027
    2. ' line' → logprob: -0.9664511680603027
    3. 'input' → logprob: -3.3414511680603027
    4. ' input' → logprob: -4.341451168060303
    5. '   ' → logprob: -5.091451168060303
    6. 'ligne' → logprob: -5.466451168060303
    7. 'l' → logprob: -6.216451168060303
    8. ' ligne' → logprob: -6.341451168060303
    9. 'data' → logprob: -6.841451168060303
    10. ' data' → logprob: -7.466451168060303

Token 56: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7304865121841431
    2. ' input' → logprob: -0.7304865121841431
    3. 'input' → logprob: -3.6054863929748535
    4. ' l' → logprob: -5.1054863929748535
    5. ' la' → logprob: -7.3554863929748535
    6. ' a' → logprob: -7.7304863929748535
    7. ' line' → logprob: -7.8554863929748535
    8. '_' → logprob: -8.105486869812012
    9. ' )' → logprob: -8.230486869812012
    10. '  ' → logprob: -8.230486869812012

Token 57: ' ligne' (ID: 19583)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9183897972106934
    2. ' ligne' → logprob: -1.6683897972106934
    3. ' input' → logprob: -1.9183897972106934
    4. 'l' → logprob: -2.1683897972106934
    5. 'ligne' → logprob: -2.4183897972106934
    6. 'line' → logprob: -3.9183897972106934
    7. ' line' → logprob: -4.043389797210693
    8. '   ' → logprob: -4.043389797210693
    9. ' ' → logprob: -5.293389797210693
    10. 'int' → logprob: -7.418389797210693

Token 58: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034717784728854895
    2. '    ' → logprob: -6.628471851348877
    3. ' ' → logprob: -7.128471851348877
    4. '  ' → logprob: -8.128471374511719
    5. 's' → logprob: -8.628471374511719
    6. 'input' → logprob: -8.753471374511719
    7. ' =' → logprob: -8.878471374511719
    8. '       ' → logprob: -9.378471374511719
    9. ' de' → logprob: -9.878471374511719
    10. '_' → logprob: -9.878471374511719

Token 59: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.054467495530843735
    2. 'input' → logprob: -3.0544674396514893
    3. ' l' → logprob: -5.429467678070068
    4. 'l' → logprob: -6.804467678070068
    5. ' ' → logprob: -8.80446720123291
    6. 'entrée' → logprob: -9.05446720123291
    7. ' code' → logprob: -10.80446720123291
    8. '   ' → logprob: -11.17946720123291
    9. ' entrée' → logprob: -11.17946720123291
    10. ' la' → logprob: -11.42946720123291

Token 60: ''utilisateur' (ID: 140803)
  Prédit: ''entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.3354160785675049
    2. 'entrée' → logprob: -1.8354160785675049
    3. 'input' → logprob: -2.085416078567505
    4. ' entrée' → logprob: -7.835415840148926
    5. ' input' → logprob: -8.085415840148926
    6. 'stdin' → logprob: -9.085415840148926
    7. '_input' → logprob: -9.335415840148926
    8. '’entrée' → logprob: -9.585415840148926
    9. '   ' → logprob: -9.960415840148926
    10. ''utilisateur' → logprob: -10.835415840148926

Token 61: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000929091009311378
    2. '    
' → logprob: -7.50092887878418
    3. 'input' → logprob: -8.62592887878418
    4. ' line' → logprob: -10.12592887878418
    5. ' input' → logprob: -10.37592887878418
    6. '    ' → logprob: -10.50092887878418
    7. '       ' → logprob: -10.62592887878418
    8. '  ' → logprob: -11.12592887878418
    9. ' ' → logprob: -11.25092887878418
    10. 'line' → logprob: -11.75092887878418

Token 62: ' sé' (ID: 7462)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.363581120967865
    2. ' ligne' → logprob: -1.9885811805725098
    3. ' input' → logprob: -2.2385811805725098
    4. '   ' → logprob: -3.1135811805725098
    5. 'line' → logprob: -5.48858118057251
    6. 'input' → logprob: -5.73858118057251
    7. 'ligne' → logprob: -6.11358118057251
    8. ' data' → logprob: -6.86358118057251
    9. '    ' → logprob: -6.98858118057251
    10. 's' → logprob: -7.23858118057251

Token 63: 'parer' (ID: 48041)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.45898565649986267
    2. 'parer' → logprob: -1.208985686302185
    3. 'pare' → logprob: -2.8339855670928955
    4. '   ' → logprob: -6.208985805511475
    5. '_par' → logprob: -6.208985805511475
    6. 'paration' → logprob: -6.333985805511475
    7. 'para' → logprob: -7.083985805511475
    8. 'parent' → logprob: -7.458985805511475
    9. 'Par' → logprob: -7.583985805511475
    10. 'parate' → logprob: -7.833985805511475

Token 64: ' par' (ID: 686)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.40943408012390137
    2. ' ' → logprob: -2.0344340801239014
    3. ' les' → logprob: -2.7844340801239014
    4. ' l' → logprob: -3.5344340801239014
    5. ' en' → logprob: -3.5344340801239014
    6. '   ' → logprob: -4.2844343185424805
    7. 'input' → logprob: -4.4094343185424805
    8. ' input' → logprob: -4.5344343185424805
    9. '()' → logprob: -4.9094343185424805
    10. 'la' → logprob: -5.2844343185424805

Token 65: ' espaces' (ID: 98361)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.3677228689193726
    2. ' ' → logprob: -1.7427228689193726
    3. ' un' → logprob: -2.367722988128662
    4. ' l' → logprob: -2.492722988128662
    5. ' espace' → logprob: -2.617722988128662
    6. ''espace' → logprob: -2.617722988128662
    7. ' '' → logprob: -2.992722988128662
    8. 'un' → logprob: -3.617722988128662
    9. 'space' → logprob: -3.742722988128662
    10. ''un' → logprob: -3.742722988128662

Token 66: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03484880551695824
    2. '    
' → logprob: -3.534848690032959
    3. ',' → logprob: -6.659848690032959
    4. 'input' → logprob: -7.409848690032959
    5. '   
' → logprob: -7.409848690032959
    6. '    ' → logprob: -7.909848690032959
    7. 's' → logprob: -8.034849166870117
    8. ' line' → logprob: -8.159849166870117
    9. ' 
' → logprob: -8.284849166870117
    10. '     
' → logprob: -8.534849166870117

Token 67: ' convertir' (ID: 79223)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9328926205635071
    2. ' input' → logprob: -0.9328926205635071
    3. 'input' → logprob: -2.6828925609588623
    4. '   ' → logprob: -2.9328925609588623
    5. ' data' → logprob: -4.307892799377441
    6. 'line' → logprob: -4.682892799377441
    7. 'data' → logprob: -4.807892799377441
    8. ' tokens' → logprob: -5.057892799377441
    9. ' ligne' → logprob: -5.307892799377441
    10. ' split' → logprob: -5.307892799377441

Token 68: ' chaque' (ID: 21194)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.2610076367855072
    2. ' la' → logprob: -2.13600754737854
    3. '   ' → logprob: -3.88600754737854
    4. ' et' → logprob: -4.261007785797119
    5. ' l' → logprob: -4.886007785797119
    6. 'en' → logprob: -5.011007785797119
    7. 'l' → logprob: -5.136007785797119
    8. ' les' → logprob: -5.136007785797119
    9. ' le' → logprob: -5.261007785797119
    10. 'e' → logprob: -5.511007785797119

Token 69: ' partie' (ID: 22139)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' token' → logprob: -1.0791534185409546
    2. ' élément' → logprob: -1.8291534185409546
    3. 'élé' → logprob: -2.204153537750244
    4. ' ' → logprob: -2.204153537750244
    5. ' en' → logprob: -3.204153537750244
    6. 'int' → logprob: -3.329153537750244
    7. ' element' → logprob: -3.454153537750244
    8. ' mot' → logprob: -3.579153537750244
    9. ' i' → logprob: -3.579153537750244
    10. ' part' → logprob: -3.829153537750244

Token 70: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0273404121398926
    2. ' en' → logprob: -1.2773404121398926
    3. '   ' → logprob: -1.7773404121398926
    4. 's' → logprob: -3.0273404121398926
    5. ' ' → logprob: -3.2773404121398926
    6. ',' → logprob: -3.6523404121398926
    7. '    ' → logprob: -4.027340412139893
    8. '[:]' → logprob: -5.027340412139893
    9. ' )' → logprob: -5.152340412139893
    10. '[]' → logprob: -5.277340412139893

Token 71: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4387741982936859
    2. 'int' → logprob: -1.0637742280960083
    3. ' des' → logprob: -4.938774108886719
    4. 'ent' → logprob: -6.438774108886719
    5. ' ent' → logprob: -7.563774108886719
    6. ' integers' → logprob: -8.313774108886719
    7. 'des' → logprob: -8.563774108886719
    8. 'inte' → logprob: -9.563774108886719
    9. ' entier' → logprob: -9.688774108886719
    10. '[int' → logprob: -10.688774108886719

Token 72: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07090058922767639
    2. '    
' → logprob: -2.9459006786346436
    3. ',' → logprob: -5.6959004402160645
    4. '   
' → logprob: -5.9459004402160645
    5. 'input' → logprob: -6.5709004402160645
    6. '    ' → logprob: -6.5709004402160645
    7. ' ' → logprob: -6.5709004402160645
    8. 's' → logprob: -6.6959004402160645
    9. 'return' → logprob: -6.8209004402160645
    10. '     
' → logprob: -7.4459004402160645

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007178491447120905
    2. '    
' → logprob: -5.13217830657959
    3. 'input' → logprob: -7.50717830657959
    4. 'return' → logprob: -8.88217830657959
    5. 'n' → logprob: -9.38217830657959
    6. '   
' → logprob: -9.63217830657959
    7. 's' → logprob: -9.88217830657959
    8. '
' → logprob: -10.00717830657959
    9. '    ' → logprob: -10.00717830657959
    10. 'tokens' → logprob: -10.25717830657959

Token 74: ' A' (ID: 355)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.4126125574111938
    2. 'input' → logprob: -1.9126125574111938
    3. ' parts' → logprob: -2.0376124382019043
    4. 'parts' → logprob: -2.0376124382019043
    5. '   ' → logprob: -2.2876124382019043
    6. 'data' → logprob: -2.6626124382019043
    7. 'line' → logprob: -3.4126124382019043
    8. ' return' → logprob: -3.4126124382019043
    9. ' line' → logprob: -3.5376124382019043
    10. 'values' → logprob: -4.037612438201904

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005649457452818751
    2. ' ,' → logprob: -7.625565052032471
    3. ' =' → logprob: -10.125564575195312
    4. '=' → logprob: -10.375564575195312
    5. 's' → logprob: -13.250564575195312
    6. ')' → logprob: -14.250564575195312
    7. ' ' → logprob: -14.500564575195312
    8. ',a' → logprob: -15.000564575195312
    9. ',A' → logprob: -15.000564575195312
    10. ',s' → logprob: -15.500564575195312

Token 76: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.013252581469714642
    2. 'B' → logprob: -4.3882527351379395
    3. ' ' → logprob: -7.2632527351379395
    4. ' ' → logprob: -10.638252258300781
    5. '<|end|>' → logprob: -11.388252258300781
    6. '  ' → logprob: -13.138252258300781
    7. '    ' → logprob: -14.513252258300781
    8. ' ' → logprob: -14.513252258300781
    9. ' ,' → logprob: -14.888252258300781
    10. ' =' → logprob: -14.888252258300781

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014209930785000324
    2. '=' → logprob: -4.264209747314453
    3. ',' → logprob: -10.014209747314453
    4. ' =
' → logprob: -14.389209747314453
    5. ' ' → logprob: -15.639209747314453
    6. '<|end|>' → logprob: -15.889209747314453
    7. '=input' → logprob: -16.014209747314453
    8. ')' → logprob: -16.014209747314453
    9. ' ,' → logprob: -16.014209747314453
    10. '   ' → logprob: -16.639209747314453

Token 78: ' list' (ID: 1562)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0025039594620466232
    2. 'map' → logprob: -6.002503871917725
    3. ' list' → logprob: -10.752504348754883
    4. ' [' → logprob: -13.252504348754883
    5. ' input' → logprob: -13.377504348754883
    6. ' ' → logprob: -13.752504348754883
    7. ' tuple' → logprob: -13.877504348754883
    8. ' ' → logprob: -14.877504348754883
    9. '	map' → logprob: -14.877504348754883
    10. '[' → logprob: -15.002504348754883

Token 79: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0007566197891719639
    2. '(' → logprob: -7.250756740570068
    3. '(input' → logprob: -10.00075626373291
    4. '(int' → logprob: -14.25075626373291
    5. 'map' → logprob: -14.62575626373291
    6. ' map' → logprob: -16.250757217407227
    7. '(
' → logprob: -16.375757217407227
    8. ' (' → logprob: -17.500757217407227
    9. '	map' → logprob: -18.000757217407227
    10. '(s' → logprob: -18.375757217407227

Token 80: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10107731819152832
    2. '(' → logprob: -2.3510773181915283
    3. 'int' → logprob: -7.476077079772949
    4. '(
' → logprob: -8.85107707977295
    5. ' int' → logprob: -9.60107707977295
    6. '(str' → logprob: -9.85107707977295
    7. ' (' → logprob: -11.22607707977295
    8. '<int' → logprob: -11.72607707977295
    9. '(input' → logprob: -12.10107707977295
    10. '=int' → logprob: -12.72607707977295

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3208812475204468
    2. ',input' → logprob: -1.6958812475204468
    3. '(input' → logprob: -2.8208813667297363
    4. 'input' → logprob: -3.6958813667297363
    5. '(' → logprob: -5.820881366729736
    6. '   ' → logprob: -6.320881366729736
    7. ' ,' → logprob: -6.820881366729736
    8. ' input' → logprob: -7.445881366729736
    9. ' (' → logprob: -10.070880889892578
    10. ' ' → logprob: -10.320880889892578

Token 82: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6936671137809753
    2. ' input' → logprob: -0.6936671137809753
    3. '   ' → logprob: -7.818666934967041
    4. '(input' → logprob: -9.9436674118042
    5. ',input' → logprob: -10.6936674118042
    6. ')' → logprob: -11.3186674118042
    7. ' ' → logprob: -11.6936674118042
    8. '```' → logprob: -11.9436674118042
    9. '	input' → logprob: -12.1936674118042
    10. '=input' → logprob: -12.6936674118042

Token 83: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011147680692374706
    2. '()' → logprob: -4.511147499084473
    3. '()))' → logprob: -9.886147499084473
    4. '())' → logprob: -10.636147499084473
    5. '(' → logprob: -11.886147499084473
    6. ')' → logprob: -12.761147499084473
    7. '())))' → logprob: -12.761147499084473
    8. '()
' → logprob: -12.886147499084473
    9. '()));' → logprob: -12.886147499084473
    10. ' ().' → logprob: -13.636147499084473

Token 84: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03804412856698036
    2. 'strip' → logprob: -3.2880442142486572
    3. 'rstrip' → logprob: -13.163043975830078
    4. ' split' → logprob: -14.163043975830078
    5. 'spl' → logprob: -17.288043975830078
    6. ' strip' → logprob: -17.288043975830078
    7. '(split' → logprob: -17.413043975830078
    8. ')' → logprob: -18.163043975830078
    9. '.split' → logprob: -19.413043975830078
    10. ' ' → logprob: -19.788043975830078

Token 85: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.24321100115776062
    2. '()' → logprob: -1.618211030960083
    3. '())' → logprob: -4.743210792541504
    4. '))' → logprob: -5.618210792541504
    5. '())))' → logprob: -5.618210792541504
    6. '(' → logprob: -6.743210792541504
    7. ')))' → logprob: -8.118210792541504
    8. ')' → logprob: -9.243210792541504
    9. '()));' → logprob: -10.118210792541504
    10. '()))
' → logprob: -10.993210792541504

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3652452230453491
    2. '
' → logprob: -1.7402452230453491
    3. '    
' → logprob: -2.3652453422546387
    4. '<|end|>' → logprob: -4.240245342254639
    5. 'return' → logprob: -4.740245342254639
    6. '\n' → logprob: -5.115245342254639
    7. ' return' → logprob: -6.365245342254639
    8. '  
' → logprob: -6.865245342254639
    9. ' 
' → logprob: -6.865245342254639
    10. '   
' → logprob: -7.240245342254639

Token 87: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28506818413734436
    2. '
' → logprob: -2.0350682735443115
    3. '<|end|>' → logprob: -3.0350682735443115
    4. 'return' (adapté à ' return') → logprob: -3.1600682735443115
    5. '    
' → logprob: -4.285068035125732
    6. ' return' → logprob: -4.660068035125732
    7. '  
' → logprob: -7.160068035125732
    8. '	return' → logprob: -7.535068035125732
    9. ' 
' → logprob: -7.785068035125732
    10. '   
' → logprob: -8.03506851196289

Token 88: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.40481820702552795
    2. ' (' → logprob: -1.6548181772232056
    3. '(' → logprob: -2.154818296432495
    4. '(A' → logprob: -3.779818296432495
    5. ' ' → logprob: -6.154818058013916
    6. 'A' → logprob: -7.029818058013916
    7. '(
' → logprob: -12.279818534851074
    8. ' ' → logprob: -12.404818534851074
    9. '	A' → logprob: -13.029818534851074
    10. '  ' → logprob: -14.154818534851074

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00594716751947999
    2. ' ,' → logprob: -5.130947113037109
    3. ',B' → logprob: -11.13094711303711
    4. ' ' → logprob: -13.75594711303711
    5. ',A' → logprob: -13.75594711303711
    6. '‌,' → logprob: -14.75594711303711
    7. ',
' → logprob: -15.38094711303711
    8. '   ' → logprob: -15.38094711303711
    9. '    ' → logprob: -15.75594711303711
    10. ',b' → logprob: -16.00594711303711

Token 90: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.013221407309174538
    2. 'B' → logprob: -4.513221263885498
    3. ' ' → logprob: -6.138221263885498
    4. ' ' → logprob: -11.513221740722656
    5. ' 
' → logprob: -14.013221740722656
    6. '<|end|>' → logprob: -14.513221740722656
    7. ''' → logprob: -15.263221740722656
    8. '```' → logprob: -15.763221740722656
    9. ' ‌' → logprob: -15.888221740722656
    10. '`' → logprob: -16.138221740722656

Token 91: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10768141597509384
    2. '<|end|>' → logprob: -2.6076815128326416
    3. '

' → logprob: -3.8576815128326416
    4. '```' → logprob: -5.7326812744140625
    5. '\n' → logprob: -6.7326812744140625
    6. 'def' → logprob: -7.1076812744140625
    7. '<|end|>' → logprob: -7.4826812744140625
    8. 'newline' → logprob: -8.232681274414062
    9. '
' → logprob: -8.482681274414062
    10. '' → logprob: -8.482681274414062

Token 92: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029978875070810318
    2. '

' → logprob: -4.1549787521362305
    3. 'def' → logprob: -5.2799787521362305
    4. '<|end|>' → logprob: -5.5299787521362305
    5. '\n' → logprob: -6.0299787521362305
    6. '```' → logprob: -6.5299787521362305
    7. '#' → logprob: -8.52997875213623
    8. '' → logprob: -8.90497875213623
    9. '
' → logprob: -8.90497875213623
    10. 'newline' → logprob: -9.27997875213623

Token 93: ' compute' (ID: 23864)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.29455381631851196
    2. ' compute' → logprob: -1.9195537567138672
    3. ' process' → logprob: -3.044553756713867
    4. ' add' → logprob: -4.419553756713867
    5. ' write' → logprob: -4.544553756713867
    6. ' main' → logprob: -4.794553756713867
    7. ' sum' → logprob: -5.044553756713867
    8. ' read' → logprob: -5.294553756713867
    9. ' solve' → logprob: -5.294553756713867
    10. ' space' → logprob: -5.294553756713867

Token 94: '_max' (ID: 13731)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.1332581341266632
    2. '_' → logprob: -2.758258104324341
    3. '_factor' → logprob: -4.13325834274292
    4. '_result' → logprob: -5.00825834274292
    5. '_area' → logprob: -5.00825834274292
    6. '_difference' → logprob: -5.38325834274292
    7. '_max' → logprob: -5.50825834274292
    8. '_distance' → logprob: -5.88325834274292
    9. '_total' → logprob: -6.13325834274292
    10. '_product' → logprob: -6.25825834274292

Token 95: '_operation' (ID: 77985)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.32525575160980225
    2. '_' → logprob: -2.325255870819092
    3. '_difference' → logprob: -2.700255870819092
    4. '_diff' → logprob: -3.325255870819092
    5. '_sub' → logprob: -3.950255870819092
    6. '_product' → logprob: -4.700255870819092
    7. '_div' → logprob: -4.950255870819092
    8. '_pair' → logprob: -5.575255870819092
    9. '_area' → logprob: -5.700255870819092
    10. '_distance' → logprob: -5.825255870819092

Token 96: '(A' (ID: 10706)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.05389915406703949
    2. '(' → logprob: -3.678899049758911
    3. '(A' → logprob: -4.30389928817749
    4. '()' → logprob: -5.42889928817749
    5. '(a' → logprob: -5.80389928817749
    6. '_count' → logprob: -6.05389928817749
    7. '_value' → logprob: -6.92889928817749
    8. '():
' → logprob: -7.17889928817749
    9. ' ():' → logprob: -7.55389928817749
    10. 's' → logprob: -7.67889928817749

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0046955798752605915
    2. ' ,' → logprob: -5.629695415496826
    3. '):' → logprob: -7.379695415496826
    4. ',B' → logprob: -7.879695415496826
    5. '_,' → logprob: -10.629695892333984
    6. ')' → logprob: -11.129695892333984
    7. ':' → logprob: -11.754695892333984
    8. ' ' → logprob: -11.879695892333984
    9. '   ' → logprob: -11.879695892333984
    10. '  ' → logprob: -12.379695892333984

Token 98: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6326195001602173
    2. ' B' → logprob: -0.7576195001602173
    3. ' ' → logprob: -11.007619857788086
    4. '   ' → logprob: -13.632619857788086
    5. ' ' → logprob: -14.257619857788086
    6. '  ' → logprob: -14.882619857788086
    7. 'b' → logprob: -15.007619857788086
    8. 'def' → logprob: -15.257619857788086
    9. '    ' → logprob: -15.382619857788086
    10. ')' → logprob: -16.007619857788086

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021093101531732827
    2. ')' → logprob: -8.875210762023926
    3. ':' → logprob: -9.750210762023926
    4. '):
' → logprob: -12.625210762023926
    5. ',' → logprob: -12.875210762023926
    6. ' ):' → logprob: -13.000210762023926
    7. '():' → logprob: -13.500210762023926
    8. '   ' → logprob: -13.500210762023926
    9. '=' → logprob: -14.750210762023926
    10. '**' → logprob: -15.125210762023926

Token 100: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0546906515955925
    2. '   ' → logprob: -3.0546905994415283
    3. ' :' → logprob: -5.679690837860107
    4. ':
' → logprob: -6.179690837860107
    5. ' :
' → logprob: -8.92969036102295
    6. ' ' → logprob: -9.30469036102295
    7. '():' → logprob: -9.42969036102295
    8. '  ' → logprob: -10.05469036102295
    9. '    ' → logprob: -10.05469036102295
    10. '):' → logprob: -10.30469036102295

Token 101: ' """
' (ID: 7037)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2701563537120819
    2. '   ' → logprob: -2.6451563835144043
    3. 'max' → logprob: -2.7701563835144043
    4. ' if' → logprob: -3.5201563835144043
    5. ' 
' → logprob: -4.020156383514404
    6. ' result' → logprob: -4.020156383514404
    7. ' ' → logprob: -4.395156383514404
    8. '    ' → logprob: -5.270156383514404
    9. 'result' → logprob: -5.395156383514404
    10. ' return' → logprob: -5.770156383514404

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08605661243200302
    2. ' """
' → logprob: -3.336056709289551
    3. ' max' → logprob: -4.086056709289551
    4. '    ' → logprob: -4.836056709289551
    5. '"""
' → logprob: -4.836056709289551
    6. ' """' → logprob: -5.586056709289551
    7. '"' → logprob: -5.836056709289551
    8. 'max' → logprob: -6.211056709289551
    9. '"""' → logprob: -6.211056709289551
    10. 'Calcul' → logprob: -7.211056709289551

Token 103: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2195652276277542
    2. ' max' → logprob: -2.0945651531219482
    3. ' 
' → logprob: -3.8445651531219482
    4. 'Calcul' → logprob: -4.094565391540527
    5. ' """
' → logprob: -4.469565391540527
    6. ' """' → logprob: -5.219565391540527
    7. ' Calcul' → logprob: -5.969565391540527
    8. 'max' → logprob: -6.094565391540527
    9. '    
' → logprob: -6.344565391540527
    10. ' maximum' → logprob: -6.469565391540527

Token 104: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.28651976585388184
    2. 'cul' → logprob: -1.4115197658538818
    3. 'c' → logprob: -5.911520004272461
    4. 'culate' → logprob: -6.036520004272461
    5. 'cules' → logprob: -9.786520004272461
    6. 'cula' → logprob: -10.161520004272461
    7. '
' → logprob: -10.786520004272461
    8. 'cular' → logprob: -10.786520004272461
    9. '```' → logprob: -10.786520004272461
    10. 'cu' → logprob: -11.036520004272461

Token 105: ' et' (ID: 859)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.6729356050491333
    2. ' le' → logprob: -1.7979356050491333
    3. '   ' → logprob: -2.1729354858398438
    4. '_max' → logprob: -2.2979354858398438
    5. 'max' → logprob: -2.4229354858398438
    6. ' max' → logprob: -2.5479354858398438
    7. ' l' → logprob: -2.6729354858398438
    8. '_' → logprob: -3.1729354858398438
    9. ' ' → logprob: -3.4229354858398438
    10. ' (' → logprob: -3.6729354858398438

Token 106: ' retourne' (ID: 178818)
  Prédit: ' ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ren' → logprob: -0.7192837595939636
    2. ' retourne' → logprob: -1.3442838191986084
    3. ' return' → logprob: -1.5942838191986084
    4. 'return' → logprob: -3.4692838191986084
    5. ' returns' → logprob: -4.719283580780029
    6. 'ren' → logprob: -5.594283580780029
    7. '   ' → logprob: -7.094283580780029
    8. ' ' → logprob: -7.219283580780029
    9. 'returns' → logprob: -7.219283580780029
    10. 'ret' → logprob: -7.594283580780029

Token 107: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7179439067840576
    2. ' le' → logprob: -1.4679439067840576
    3. ' l' → logprob: -1.7179439067840576
    4. ' max' → logprob: -3.2179439067840576
    5. 'max' → logprob: -4.092944145202637
    6. '   ' → logprob: -4.467944145202637
    7. ' ' → logprob: -4.592944145202637
    8. ' the' → logprob: -4.717944145202637
    9. '<|end|>' → logprob: -6.092944145202637
    10. 'A' → logprob: -6.717944145202637

Token 108: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.7532389760017395
    2. ' plus' → logprob: -1.1282389163970947
    3. ' somme' → logprob: -2.1282389163970947
    4. 'plus' → logprob: -3.5032389163970947
    5. ' maximum' → logprob: -4.128239154815674
    6. 's' → logprob: -4.253239154815674
    7. 'val' → logprob: -5.753239154815674
    8. ' meilleure' → logprob: -5.753239154815674
    9. ' maximale' → logprob: -5.753239154815674
    10. 'max' → logprob: -5.878239154815674

Token 109: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.011154049076139927
    2. ' max' → logprob: -5.2611541748046875
    3. ' maximum' → logprob: -5.7611541748046875
    4. 'max' → logprob: -6.3861541748046875
    5. '   ' → logprob: -8.011154174804688
    6. ' maximal' → logprob: -8.261154174804688
    7. ' optimale' → logprob: -9.136154174804688
    8. ' de' → logprob: -9.386154174804688
    9. 'maximum' → logprob: -9.636154174804688
    10. ' minimale' → logprob: -9.636154174804688

Token 110: ' parmi' (ID: 51713)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8194951415061951
    2. ' entre' → logprob: -0.9444951415061951
    3. ' possible' → logprob: -2.31949520111084
    4. ' de' → logprob: -3.31949520111084
    5. ' between' → logprob: -4.06949520111084
    6. 'possible' → logprob: -5.69449520111084
    7. 'entre' → logprob: -5.69449520111084
    8. ' (' → logprob: -5.81949520111084
    9. '(' → logprob: -6.06949520111084
    10. ' ' → logprob: -6.69449520111084

Token 111: ' la' (ID: 557)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.36387601494789124
    2. 'A' → logprob: -1.2388759851455688
    3. '[
' → logprob: -5.738875865936279
    4. '[A' → logprob: -6.113875865936279
    5. '   ' → logprob: -6.238875865936279
    6. ' les' → logprob: -6.488875865936279
    7. ' [' → logprob: -6.488875865936279
    8. ' [
' → logprob: -6.613875865936279
    9. '[' → logprob: -6.738875865936279
    10. ' ' → logprob: -7.238875865936279

Token 112: ' somme' (ID: 64484)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6706905961036682
    2. ' A' → logprob: -2.1706905364990234
    3. '[A' → logprob: -2.1706905364990234
    4. '[' → logprob: -2.2956905364990234
    5. '[
' → logprob: -2.4206905364990234
    6. 'B' → logprob: -4.170690536499023
    7. ' [' → logprob: -4.670690536499023
    8. ' ' → logprob: -4.920690536499023
    9. ' B' → logprob: -5.045690536499023
    10. ' following' → logprob: -5.295690536499023

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36981457471847534
    2. '   ' → logprob: -1.7448146343231201
    3. ' des' → logprob: -3.49481463432312
    4. ' A' → logprob: -3.86981463432312
    5. '(A' → logprob: -3.86981463432312
    6. ' (' → logprob: -3.99481463432312
    7. 'A' → logprob: -4.369814395904541
    8. ' de' → logprob: -4.869814395904541
    9. ' ,' → logprob: -4.994814395904541
    10. ' et' → logprob: -5.619814395904541

Token 114: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.03865618631243706
    2. '<|end|>' → logprob: -3.663656234741211
    3. 'la' → logprob: -4.663656234741211
    4. 'diff' → logprob: -6.913656234741211
    5. '   ' → logprob: -7.163656234741211
    6. 'the' → logprob: -8.163656234741211
    7. ' the' → logprob: -8.413656234741211
    8. 'l' → logprob: -8.788656234741211
    9. 'difference' → logprob: -9.538656234741211
    10. ' l' → logprob: -10.163656234741211

Token 115: ' différence' (ID: 79196)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.06948525458574295
    2. ' différence' → logprob: -3.1944851875305176
    3. 's' → logprob: -4.194485187530518
    4. 'produ' → logprob: -5.194485187530518
    5. 'difference' → logprob: -6.319485187530518
    6. 'sou' → logprob: -6.819485187530518
    7. ' produit' → logprob: -7.069485187530518
    8. 'multip' → logprob: -7.944485187530518
    9. ' diff' → logprob: -8.194485664367676
    10. ' somme' → logprob: -8.694485664367676

Token 116: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0707520991563797
    2. '<|end|>' → logprob: -3.0707521438598633
    3. ' ,' → logprob: -4.820752143859863
    4. ' A' → logprob: -5.070752143859863
    5. ' (' → logprob: -6.070752143859863
    6. '   ' → logprob: -6.445752143859863
    7. 'A' → logprob: -6.445752143859863
    8. ' des' → logprob: -7.570752143859863
    9. '(A' → logprob: -7.945752143859863
    10. ' ' → logprob: -8.445752143859863

Token 117: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.266147643327713
    2. ' le' → logprob: -2.5161476135253906
    3. ' la' → logprob: -2.6411476135253906
    4. 'la' → logprob: -3.1411476135253906
    5. '<|end|>' → logprob: -3.8911476135253906
    6. '   ' → logprob: -5.016147613525391
    7. 'l' → logprob: -5.516147613525391
    8. 'product' → logprob: -6.141147613525391
    9. ' produit' → logprob: -6.391147613525391
    10. 'the' → logprob: -7.516147613525391

Token 118: ' produit' (ID: 29429)
  Prédit: ' produit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.06203983351588249
    2. 'produ' → logprob: -2.812039852142334
    3. '   ' → logprob: -10.687039375305176
    4. 'Produit' → logprob: -11.312039375305176
    5. 'multip' → logprob: -12.062039375305176
    6. 'product' → logprob: -12.062039375305176
    7. 'prod' → logprob: -12.187039375305176
    8. ' ' → logprob: -12.437039375305176
    9. '  ' → logprob: -12.687039375305176
    10. ' produits' → logprob: -12.687039375305176

Token 119: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.48711082339286804
    2. ' entre' → logprob: -1.3621108531951904
    3. ' de' → logprob: -2.7371108531951904
    4. '   ' → logprob: -3.2371108531951904
    5. ' between' → logprob: -5.112110614776611
    6. ' (' → logprob: -5.487110614776611
    7. ' possible' → logprob: -5.737110614776611
    8. ' ' → logprob: -6.112110614776611
    9. 'des' → logprob: -6.362110614776611
    10. ' A' → logprob: -6.737110614776611

Token 120: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.12883725762367249
    2. 'A' → logprob: -2.1288373470306396
    3. ' ' → logprob: -6.8788371086120605
    4. ' les' → logprob: -7.1288371086120605
    5. 'les' → logprob: -10.253837585449219
    6. 'l' → logprob: -11.503837585449219
    7. ' ' → logprob: -11.753837585449219
    8. '  ' → logprob: -12.503837585449219
    9. '(A' → logprob: -12.753837585449219
    10. ' ces' → logprob: -13.253837585449219

Token 121: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2184382826089859
    2. ' et' → logprob: -2.4684383869171143
    3. '<|end|>' → logprob: -3.0934383869171143
    4. ' ,' → logprob: -3.8434383869171143
    5. ' ' → logprob: -3.9684383869171143
    6. ' and' → logprob: -4.093438148498535
    7. 'et' → logprob: -5.218438148498535
    8. '+' → logprob: -6.218438148498535
    9. 'and' → logprob: -7.343438148498535
    10. '  ' → logprob: -8.093438148498535

Token 122: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.05490609258413315
    2. 'B' → logprob: -2.929906129837036
    3. ' ' → logprob: -10.804905891418457
    4. '<|end|>' → logprob: -13.054905891418457
    5. '   ' → logprob: -14.304905891418457
    6. '  ' → logprob: -15.429905891418457
    7. '	B' → logprob: -15.679905891418457
    8. '```' → logprob: -16.429906845092773
    9. ',' → logprob: -16.679906845092773
    10. '<B' → logprob: -16.804906845092773

Token 123: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041915394365787506
    2. ',' → logprob: -4.041915416717529
    3. '.' → logprob: -4.416915416717529
    4. ':' → logprob: -4.791915416717529
    5. ' :' → logprob: -6.291915416717529
    6. '    
' → logprob: -7.916915416717529
    7. 'def' → logprob: -8.916914939880371
    8. ':
' → logprob: -8.916914939880371
    9. ' ,' → logprob: -9.291914939880371
    10. ',
' → logprob: -9.416914939880371

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16983634233474731
    2. ' 
' → logprob: -2.5448362827301025
    3. '    
' → logprob: -2.9198362827301025
    4. '  
' → logprob: -5.044836521148682
    5. '   
' → logprob: -5.169836521148682
    6. ' ' → logprob: -5.669836521148682
    7. '\n' → logprob: -5.919836521148682
    8. '     
' → logprob: -6.669836521148682
    9. ':' → logprob: -6.919836521148682
    10. '    ' → logprob: -7.169836521148682

Token 125: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038325704634189606
    2. '    
' → logprob: -3.913325786590576
    3. ' 
' → logprob: -4.788325786590576
    4. '    ' → logprob: -6.163325786590576
    5. 'result' → logprob: -6.538325786590576
    6. '     
' → logprob: -6.788325786590576
    7. ' operations' → logprob: -7.038325786590576
    8. ' result' → logprob: -7.038325786590576
    9. '   
' → logprob: -7.163325786590576
    10. '
' → logprob: -7.538325786590576

Token 126: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9588513374328613
    2. '(A' → logprob: -1.3338513374328613
    3. ':' → logprob: -1.8338513374328613
    4. '   ' → logprob: -1.9588513374328613
    5. '):' → logprob: -3.5838513374328613
    6. ' (' → logprob: -4.333851337432861
    7. '):
' → logprob: -5.583851337432861
    8. ')' → logprob: -5.708851337432861
    9. ' :' → logprob: -6.208851337432861
    10. '(' → logprob: -7.083851337432861

Token 127: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05308735370635986
    2. ' A' → logprob: -3.0530872344970703
    3. 'A' → logprob: -5.42808723449707
    4. '    ' → logprob: -9.55308723449707
    5. '  ' → logprob: -11.30308723449707
    6. ' ' → logprob: -11.55308723449707
    7. '       ' → logprob: -12.92808723449707
    8. '    
' → logprob: -13.67808723449707
    9. '	A' → logprob: -14.55308723449707
    10. ' self' → logprob: -15.30308723449707

Token 128: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0806899443268776
    2. ' A' → logprob: -3.0806899070739746
    3. '   ' → logprob: -3.4556899070739746
    4. ' ' → logprob: -10.830690383911133
    5. '  ' → logprob: -12.580690383911133
    6. '	A' → logprob: -13.705690383911133
    7. '
' → logprob: -14.205690383911133
    8. 'int' → logprob: -14.330690383911133
    9. '    ' → logprob: -15.080690383911133
    10. '       ' → logprob: -15.205690383911133

Token 129: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030948311905376613
    2. ' ,' → logprob: -8.125309944152832
    3. ',
' → logprob: -12.000309944152832
    4. '<|end|>' → logprob: -12.625309944152832
    5. '   ' → logprob: -13.250309944152832
    6. ',B' → logprob: -13.500309944152832
    7. ',int' → logprob: -14.750309944152832
    8. ',A' → logprob: -15.250309944152832
    9. 'int' → logprob: -16.375308990478516
    10. '<|end|>' → logprob: -17.500308990478516

Token 130: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018238209187984467
    2. ' int' → logprob: -4.018238067626953
    3. ',int' → logprob: -10.143238067626953
    4. '   ' → logprob: -10.643238067626953
    5. ',' → logprob: -11.018238067626953
    6. '):' → logprob: -12.518238067626953
    7. ':int' → logprob: -13.268238067626953
    8. ')' → logprob: -13.893238067626953
    9. ' ,' → logprob: -14.268238067626953
    10. '):
' → logprob: -14.393238067626953

Token 131: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.901345038088039e-05
    2. ' ,' → logprob: -9.375099182128906
    3. '<|end|>' → logprob: -12.250099182128906
    4. ',
' → logprob: -12.750099182128906
    5. '   ' → logprob: -13.000099182128906
    6. '),' → logprob: -14.000099182128906
    7. ',A' → logprob: -14.125099182128906
    8. '):' → logprob: -14.125099182128906
    9. ')' → logprob: -14.250099182128906
    10. ',int' → logprob: -14.375099182128906

Token 132: ' Premier' (ID: 27686)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.8462039232254028
    2. ' int' → logprob: -1.2212039232254028
    3. '   ' → logprob: -2.2212038040161133
    4. 'int' → logprob: -2.8462038040161133
    5. 'B' → logprob: -3.3462038040161133
    6. '    ' → logprob: -3.4712038040161133
    7. ' ' → logprob: -3.7212038040161133
    8. '<|end|>' → logprob: -4.846203804016113
    9. ' A' → logprob: -4.971203804016113
    10. 'A' → logprob: -7.096203804016113

Token 133: ' entier' (ID: 80473)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.703538179397583
    2. ',' → logprob: -0.953538179397583
    3. '   ' → logprob: -2.328538179397583
    4. '<|end|>' → logprob: -4.453537940979004
    5. '),' → logprob: -5.703537940979004
    6. '       ' → logprob: -5.953537940979004
    7. '):' → logprob: -6.828537940979004
    8. ' ,' → logprob: -7.078537940979004
    9. '<|end|>' → logprob: -7.203537940979004
    10. '):
' → logprob: -7.453537940979004

Token 135: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0074351816438138485
    2. 'B' → logprob: -5.507435321807861
    3. ' B' → logprob: -6.257435321807861
    4. '    ' → logprob: -7.257435321807861
    5. ' ' → logprob: -7.507435321807861
    6. '  ' → logprob: -9.882434844970703
    7. '       ' → logprob: -10.132434844970703
    8. ' ' → logprob: -10.382434844970703
    9. '    
' → logprob: -10.882434844970703
    10. '     ' → logprob: -11.757434844970703

Token 136: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.25903406739234924
    2. ' B' → logprob: -1.7590340375900269
    3. '   ' → logprob: -2.8840341567993164
    4. ' ' → logprob: -9.634034156799316
    5. '  ' → logprob: -11.634034156799316
    6. '       ' → logprob: -12.259034156799316
    7. '    ' → logprob: -13.259034156799316
    8. ' ' → logprob: -14.009034156799316
    9. '	B' → logprob: -14.384034156799316
    10. 'A' → logprob: -15.384034156799316

Token 137: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.030024003237485886
    2. '(int' → logprob: -3.5300240516662598
    3. ':int' → logprob: -9.030023574829102
    4. ':' → logprob: -9.655023574829102
    5. '=int' → logprob: -10.655023574829102
    6. 'int' → logprob: -10.780023574829102
    7. '   ' → logprob: -11.030023574829102
    8. ')' → logprob: -11.280023574829102
    9. '[int' → logprob: -11.780023574829102
    10. ' int' → logprob: -12.155023574829102

Token 138: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0017043406842276454
    2. ' int' → logprob: -6.376704216003418
    3. '   ' → logprob: -13.751704216003418
    4. '(int' → logprob: -15.126704216003418
    5. ' ' → logprob: -15.876704216003418
    6. '[int' → logprob: -16.001705169677734
    7. ')' → logprob: -16.251705169677734
    8. ':int' → logprob: -16.251705169677734
    9. '  ' → logprob: -16.376705169677734
    10. '<int' → logprob: -16.626705169677734

Token 139: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009113786742091179
    2. 'int' → logprob: -4.884113788604736
    3. '(int' → logprob: -7.634113788604736
    4. ')' → logprob: -7.884113788604736
    5. ' int' → logprob: -8.634113311767578
    6. '   ' → logprob: -8.634113311767578
    7. ':' → logprob: -8.884113311767578
    8. ':int' → logprob: -9.259113311767578
    9. '[int' → logprob: -10.884113311767578
    10. ' ):' → logprob: -11.009113311767578

Token 140: ' Deux' (ID: 92086)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2028788924217224
    2. 'int' → logprob: -1.7028789520263672
    3. '   ' → logprob: -6.952878952026367
    4. '(int' → logprob: -7.952878952026367
    5. 'Second' → logprob: -9.577878952026367
    6. '[int' → logprob: -11.202878952026367
    7. ':int' → logprob: -11.327878952026367
    8. ' Second' → logprob: -11.827878952026367
    9. ' second' → logprob: -11.827878952026367
    10. ')' → logprob: -11.952878952026367

Token 141: 'ième' (ID: 41126)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1123970746994019
    2. ' int' → logprob: -1.4873970746994019
    3. 'ent' → logprob: -1.7373970746994019
    4. ' entier' → logprob: -1.9873970746994019
    5. ' ent' → logprob: -2.4873971939086914
    6. '   ' → logprob: -3.2373971939086914
    7. ':int' → logprob: -5.487397193908691
    8. ' ' → logprob: -6.112397193908691
    9. ':' → logprob: -6.737397193908691
    10. '(int' → logprob: -7.487397193908691

Token 142: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.685314953327179
    2. 'int' → logprob: -0.810314953327179
    3. ' entier' → logprob: -3.560314893722534
    4. ':int' → logprob: -4.435315132141113
    5. 'ent' → logprob: -5.935315132141113
    6. ':' → logprob: -6.310315132141113
    7. '   ' → logprob: -6.810315132141113
    8. ')' → logprob: -6.935315132141113
    9. '):' → logprob: -7.060315132141113
    10. ' ent' → logprob: -7.310315132141113

Token 143: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8582040071487427
    2. ')' → logprob: -1.2332040071487427
    3. '):
' → logprob: -1.4832040071487427
    4. '   ' → logprob: -2.858203887939453
    5. '):

' → logprob: -9.358203887939453
    6. '
' → logprob: -9.483203887939453
    7. ')
' → logprob: -9.483203887939453
    8. ':' → logprob: -10.233203887939453
    9. '```' → logprob: -10.233203887939453
    10. '):
' → logprob: -10.608203887939453

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0778423324227333
    2. '
' → logprob: -3.0778422355651855
    3. '    
' → logprob: -4.3278422355651855
    4. 'Returns' → logprob: -4.3278422355651855
    5. ' 
' → logprob: -7.3278422355651855
    6. ')' → logprob: -7.8278422355651855
    7. ' Returns' → logprob: -7.9528422355651855
    8. '"""
' → logprob: -8.577842712402344
    9. ')
' → logprob: -8.577842712402344
    10. '  
' → logprob: -8.827842712402344

Token 145: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.013816619291901588
    2. '   ' → logprob: -4.513816833496094
    3. '
' → logprob: -6.763816833496094
    4. '"""
' → logprob: -7.263816833496094
    5. ' Returns' → logprob: -7.638816833496094
    6. 'returns' → logprob: -8.638816833496094
    7. 'return' → logprob: -9.263816833496094
    8. '    
' → logprob: -9.638816833496094
    9. '"""' → logprob: -10.263816833496094
    10. '```' → logprob: -10.263816833496094

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013620486482977867
    2. ' :' → logprob: -4.888620376586914
    3. ':int' → logprob: -5.888620376586914
    4. ' int' → logprob: -6.513620376586914
    5. 'int' → logprob: -7.638620376586914
    6. '<|end|>' → logprob: -8.013620376586914
    7. '(int' → logprob: -8.263620376586914
    8. '   ' → logprob: -8.763620376586914
    9. ':
' → logprob: -9.138620376586914
    10. '[int' → logprob: -9.638620376586914

Token 147: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4967685639858246
    2. ' max' → logprob: -1.746768593788147
    3. '    ' → logprob: -2.2467684745788574
    4. '   ' → logprob: -2.3717684745788574
    5. 'int' → logprob: -4.496768474578857
    6. 'max' → logprob: -5.621768474578857
    7. '       ' → logprob: -6.246768474578857
    8. ' 
' → logprob: -7.996768474578857
    9. '    
' → logprob: -8.621768951416016
    10. ' ' → logprob: -8.621768951416016

Token 148: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.023270519450306892
    2. ' int' → logprob: -3.773270606994629
    3. '   ' → logprob: -10.648270606994629
    4. 'max' → logprob: -14.648270606994629
    5. '```' → logprob: -15.398270606994629
    6. '  ' → logprob: -16.273269653320312
    7. '(int' → logprob: -16.398269653320312
    8. ' 
' → logprob: -16.398269653320312
    9. '	int' → logprob: -16.648269653320312
    10. ' ' → logprob: -17.023269653320312

Token 149: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10428939014673233
    2. ' max' → logprob: -2.6042892932891846
    3. 'max' → logprob: -3.8542892932891846
    4. '   ' → logprob: -6.229289531707764
    5. '=max' → logprob: -7.104289531707764
    6. ' :' → logprob: -7.479289531707764
    7. ' =' → logprob: -9.104289054870605
    8. ':max' → logprob: -9.479289054870605
    9. ')' → logprob: -9.604289054870605
    10. '(max' → logprob: -9.604289054870605

Token 150: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.6192242503166199
    2. ' max' → logprob: -1.3692243099212646
    3. 'La' → logprob: -2.2442243099212646
    4. '   ' → logprob: -2.9942243099212646
    5. ' Le' → logprob: -3.8692243099212646
    6. ' la' → logprob: -3.8692243099212646
    7. 'max' → logprob: -5.3692240715026855
    8. 'Le' → logprob: -5.9942240715026855
    9. ' maximum' → logprob: -7.1192240715026855
    10. ' le' → logprob: -7.3692240715026855

Token 151: ' plus' (ID: 2932)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.06900382786989212
    2. 'val' → logprob: -2.8190038204193115
    3. ' plus' → logprob: -5.694004058837891
    4. ' val' → logprob: -5.819004058837891
    5. ' maximum' → logprob: -8.44400405883789
    6. ' maximale' → logprob: -8.81900405883789
    7. ' ' → logprob: -9.56900405883789
    8. '   ' → logprob: -10.06900405883789
    9. ' meilleure' → logprob: -10.19400405883789
    10. ' value' → logprob: -10.31900405883789

Token 152: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.03635295853018761
    2. 'gr' → logprob: -3.5363528728485107
    3. ' élevée' → logprob: -5.66135311126709
    4. 'grand' → logprob: -6.66135311126709
    5. ' haute' → logprob: -7.41135311126709
    6. ' grand' → logprob: -7.41135311126709
    7. 'é' → logprob: -8.78635311126709
    8. '_gr' → logprob: -9.41135311126709
    9. ' large' → logprob: -10.16135311126709
    10. ' grandes' → logprob: -10.28635311126709

Token 153: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.44299429655075073
    2. ' valeur' → logprob: -1.1929943561553955
    3. ' des' → logprob: -2.9429943561553955
    4. ' val' → logprob: -6.692994117736816
    5. 'des' → logprob: -8.192994117736816
    6. 'value' → logprob: -9.067994117736816
    7. '_val' → logprob: -9.567994117736816
    8. ' ' → logprob: -10.317994117736816
    9. ' value' → logprob: -11.067994117736816
    10. 'Vale' → logprob: -11.067994117736816

Token 154: ' parmi' (ID: 51713)
  Prédit: ' parmi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parmi' → logprob: -0.3444780111312866
    2. 'par' → logprob: -1.9694780111312866
    3. ' des' → logprob: -2.719478130340576
    4. ' par' → logprob: -3.094478130340576
    5. ' possible' → logprob: -3.719478130340576
    6. ' among' → logprob: -4.844478130340576
    7. ' entre' → logprob: -5.594478130340576
    8. 'possible' → logprob: -6.719478130340576
    9. ' obten' → logprob: -6.969478130340576
    10. 'des' → logprob: -7.594478130340576

Token 155: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5836781859397888
    2. 'A' → logprob: -0.8336781859397888
    3. '[A' → logprob: -5.333678245544434
    4. '(A' → logprob: -6.583678245544434
    5. ' (' → logprob: -7.583678245544434
    6. ' [' → logprob: -7.708678245544434
    7. '   ' → logprob: -8.083678245544434
    8. '[' → logprob: -9.083678245544434
    9. '[
' → logprob: -9.833678245544434
    10. ' ' → logprob: -9.958678245544434

Token 156: '+B' (ID: 185895)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.35246384143829346
    2. '+' → logprob: -1.2274638414382935
    3. '+B' → logprob: -5.602463722229004
    4. '+A' → logprob: -8.102463722229004
    5. ' plus' → logprob: -12.102463722229004
    6. '+,' → logprob: -12.727463722229004
    7. 'plus' → logprob: -12.727463722229004
    8. ',' → logprob: -12.727463722229004
    9. ' ' → logprob: -13.227463722229004
    10. ' ' → logprob: -13.977463722229004

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021956947166472673
    2. ' ,' → logprob: -6.252195835113525
    3. 'A' → logprob: -8.752195358276367
    4. ',
' → logprob: -9.752195358276367
    5. ',A' → logprob: -10.002195358276367
    6. ' A' → logprob: -12.752195358276367
    7. '   ' → logprob: -13.377195358276367
    8. ',

' → logprob: -15.377195358276367
    9. ' ,
' → logprob: -16.127195358276367
    10. 's' → logprob: -16.377195358276367

Token 158: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3871537148952484
    2. 'A' → logprob: -1.1371537446975708
    3. '   ' → logprob: -8.887153625488281
    4. ' ' → logprob: -9.012153625488281
    5. '	A' → logprob: -12.137153625488281
    6. '  ' → logprob: -12.387153625488281
    7. '    ' → logprob: -12.762153625488281
    8. ',A' → logprob: -12.887153625488281
    9. ' ' → logprob: -13.137153625488281
    10. ',' → logprob: -13.137153625488281

Token 159: '-B' (ID: 8287)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0877465009689331
    2. '-B' → logprob: -2.5877466201782227
    3. ' -' → logprob: -4.837746620178223
    4. '*' → logprob: -7.212746620178223
    5. ' ' → logprob: -9.337746620178223
    6. '<|end|>' → logprob: -9.837746620178223
    7. 'B' → logprob: -11.962746620178223
    8. '+' → logprob: -13.587746620178223
    9. ',' → logprob: -13.962746620178223
    10. ' B' → logprob: -13.962746620178223

Token 160: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002516442909836769
    2. ' ,' → logprob: -6.002516269683838
    3. 'A' → logprob: -11.127516746520996
    4. ',A' → logprob: -11.252516746520996
    5. ' et' → logprob: -12.252516746520996
    6. '   ' → logprob: -12.502516746520996
    7. ',
' → logprob: -13.377516746520996
    8. 's' → logprob: -14.502516746520996
    9. ' and' → logprob: -14.627516746520996
    10. ' A' → logprob: -14.752516746520996

Token 161: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.20148654282093048
    2. 'A' → logprob: -1.701486587524414
    3. ' ' → logprob: -9.576486587524414
    4. ' ' → logprob: -13.576486587524414
    5. '   ' → logprob: -14.201486587524414
    6. '<|end|>' → logprob: -14.826486587524414
    7. 'AB' → logprob: -15.076486587524414
    8. ' (' → logprob: -15.201486587524414
    9. '	A' → logprob: -15.201486587524414
    10. '  ' → logprob: -15.201486587524414

Token 162: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -3.082895273109898e-05
    2. ' *' → logprob: -10.500030517578125
    3. 'B' → logprob: -13.375030517578125
    4. '*b' → logprob: -14.750030517578125
    5. '+B' → logprob: -14.875030517578125
    6. '+' → logprob: -15.750030517578125
    7. '**' → logprob: -16.000030517578125
    8. ',' → logprob: -16.250030517578125
    9. '*,' → logprob: -16.250030517578125
    10. '*
' → logprob: -16.250030517578125

Token 163: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.204720582696609e-05
    2. ' B' → logprob: -9.875052452087402
    3. ' ' → logprob: -15.375052452087402
    4. '<|end|>' → logprob: -16.125051498413086
    5. '*' → logprob: -16.250051498413086
    6. '```' → logprob: -18.062551498413086
    7. 'b' → logprob: -18.437551498413086
    8. '   ' → logprob: -18.500051498413086
    9. '_B' → logprob: -18.687551498413086
    10. '`' → logprob: -18.750051498413086

Token 164: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00195979792624712
    2. '
' → logprob: -7.001959800720215
    3. ')' → logprob: -7.501959800720215
    4. '.' → logprob: -8.126959800720215
    5. '```' → logprob: -9.751959800720215
    6. '    
' → logprob: -10.251959800720215
    7. ')
' → logprob: -10.501959800720215
    8. ',' → logprob: -10.501959800720215
    9. 'def' → logprob: -11.001959800720215
    10. '.
' → logprob: -12.001959800720215

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004070209339261055
    2. '
' → logprob: -5.754070281982422
    3. '    
' → logprob: -7.379070281982422
    4. ')' → logprob: -8.754070281982422
    5. '   
' → logprob: -10.879070281982422
    6. ')
' → logprob: -11.004070281982422
    7. '"""
' → logprob: -11.379070281982422
    8. 'def' → logprob: -11.504070281982422
    9. '"""' → logprob: -11.504070281982422
    10. '  
' → logprob: -11.504070281982422

Token 166: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005342144053429365
    2. '
' → logprob: -5.38034200668335
    3. '    
' → logprob: -8.255342483520508
    4. ')' → logprob: -8.380342483520508
    5. '"""' → logprob: -8.630342483520508
    6. '"""
' (adapté à ' """
') → logprob: -10.880342483520508
    7. ')
' → logprob: -11.130342483520508
    8. '```' → logprob: -12.255342483520508
    9. '   
' → logprob: -12.630342483520508
    10. ' 
' → logprob: -13.130342483520508

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3675936460494995
    2. ' results' → logprob: -2.867593765258789
    3. 'values' → logprob: -2.867593765258789
    4. 'results' → logprob: -2.867593765258789
    5. ' max' → logprob: -3.492593765258789
    6. 'max' → logprob: -3.617593765258789
    7. ' values' → logprob: -3.867593765258789
    8. 'result' → logprob: -4.242593765258789
    9. ' result' → logprob: -4.867593765258789
    10. 'operations' → logprob: -4.867593765258789

Token 168: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24987202882766724
    2. 'results' → logprob: -2.1248719692230225
    3. ' return' → logprob: -3.3748719692230225
    4. 'max' → logprob: -3.7498719692230225
    5. '   ' → logprob: -3.8748719692230225
    6. 'values' → logprob: -4.749872207641602
    7. 'result' → logprob: -4.749872207641602
    8. ' results' → logprob: -5.749872207641602
    9. 'operations' → logprob: -7.124872207641602
    10. ' max' → logprob: -7.749872207641602

Token 169: ' Calcul' (ID: 57243)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7362099289894104
    2. ' max' → logprob: -1.6112098693847656
    3. 'values' → logprob: -2.2362098693847656
    4. 'result' → logprob: -3.1112098693847656
    5. 'results' → logprob: -3.3612098693847656
    6. 'return' → logprob: -3.7362098693847656
    7. 'operations' → logprob: -3.7362098693847656
    8. ' return' → logprob: -4.236209869384766
    9. 'vals' → logprob: -4.611209869384766
    10. 'ops' → logprob: -4.736209869384766

Token 170: 'er' (ID: 259)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029089784249663353
    2. ' max' → logprob: -4.90408992767334
    3. 'max' → logprob: -5.27908992767334
    4. 's' → logprob: -5.52908992767334
    5. ' return' → logprob: -5.52908992767334
    6. 'result' → logprob: -6.15408992767334
    7. ' result' → logprob: -6.40408992767334
    8. 'return' → logprob: -6.77908992767334
    9. 'er' → logprob: -7.90408992767334
    10. 'A' → logprob: -8.15408992767334

Token 171: ' toutes' (ID: 17502)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4431575834751129
    2. 'max' → logprob: -1.0681575536727905
    3. ' return' → logprob: -4.69315767288208
    4. '   ' → logprob: -6.44315767288208
    5. 'return' → logprob: -6.44315767288208
    6. ' result' → logprob: -7.31815767288208
    7. 'result' → logprob: -7.44315767288208
    8. ' maximum' → logprob: -8.693157196044922
    9. 's' → logprob: -8.818157196044922
    10. ' res' → logprob: -8.943157196044922

Token 172: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5576693415641785
    2. ' les' → logprob: -0.9326693415641785
    3. '   ' → logprob: -3.9326694011688232
    4. 'operations' → logprob: -5.432669162750244
    5. 'max' → logprob: -6.307669162750244
    6. '[' → logprob: -6.307669162750244
    7. ' ' → logprob: -7.057669162750244
    8. 's' → logprob: -7.307669162750244
    9. '_operations' → logprob: -7.807669162750244
    10. '  ' → logprob: -7.807669162750244

Token 173: ' opérations' (ID: 102793)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.21011996269226074
    2. '[val' → logprob: -3.2101199626922607
    3. '[max' → logprob: -3.5851199626922607
    4. '[' → logprob: -3.5851199626922607
    5. 'values' → logprob: -3.8351199626922607
    6. 'options' → logprob: -4.21012020111084
    7. '[
' → logprob: -4.21012020111084
    8. 'max' → logprob: -4.83512020111084
    9. 'operations' → logprob: -4.96012020111084
    10. 'op' → logprob: -5.08512020111084

Token 174: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05399922654032707
    2. 'results' → logprob: -3.803999185562134
    3. '
' → logprob: -4.178999423980713
    4. 'operations' → logprob: -5.428999423980713
    5. ' results' → logprob: -5.928999423980713
    6. 'values' → logprob: -6.053999423980713
    7. 'result' → logprob: -6.553999423980713
    8. ' operations' → logprob: -6.928999423980713
    9. '    
' → logprob: -7.553999423980713
    10. 'ops' → logprob: -8.178998947143555

Token 175: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0934438556432724
    2. '
' → logprob: -3.2184438705444336
    3. 'results' → logprob: -3.5934438705444336
    4. ' results' → logprob: -4.968443870544434
    5. 'result' → logprob: -5.593443870544434
    6. '    
' → logprob: -6.093443870544434
    7. 'operations' → logprob: -6.343443870544434
    8. 'ops' → logprob: -6.343443870544434
    9. 'values' → logprob: -6.843443870544434
    10. 'vals' → logprob: -7.343443870544434

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017164133489131927
    2. 'operations' → logprob: -5.01716423034668
    3. 'results' → logprob: -5.51716423034668
    4. '
' → logprob: -6.51716423034668
    5. '    
' → logprob: -6.64216423034668
    6. 'result' → logprob: -7.26716423034668
    7. 'values' → logprob: -7.26716423034668
    8. 'ops' → logprob: -7.39216423034668
    9. ' operations' → logprob: -7.51716423034668
    10. ' results' → logprob: -8.39216423034668

Token 177: ' addition' (ID: 5856)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.49541231989860535
    2. ' results' → logprob: -1.3704123497009277
    3. 'operations' → logprob: -2.8704123497009277
    4. '   ' → logprob: -3.3704123497009277
    5. ' operations' → logprob: -4.370412349700928
    6. 'values' → logprob: -4.745412349700928
    7. 'ops' → logprob: -4.745412349700928
    8. 'result' → logprob: -4.995412349700928
    9. ' ops' → logprob: -6.120412349700928
    10. ' values' → logprob: -6.245412349700928

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24237632751464844
    2. ',' → logprob: -2.2423763275146484
    3. '=' → logprob: -2.3673763275146484
    4. '_result' → logprob: -5.117376327514648
    5. '_' → logprob: -5.492376327514648
    6. '_val' → logprob: -6.242376327514648
    7. 's' → logprob: -6.992376327514648
    8. '   ' → logprob: -7.117376327514648
    9. ' ' → logprob: -7.242376327514648
    10. '_value' → logprob: -7.742376327514648

Token 179: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3868776261806488
    2. 'A' → logprob: -1.1368776559829712
    3. '   ' → logprob: -12.38687801361084
    4. ' ' → logprob: -13.26187801361084
    5. '	A' → logprob: -14.88687801361084
    6. '(A' → logprob: -15.76187801361084
    7. '  ' → logprob: -16.511877059936523
    8. ' ' → logprob: -17.011877059936523
    9. '=A' → logprob: -18.261877059936523
    10. '_A' → logprob: -18.324377059936523

Token 180: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.007007217034697533
    2. '+' → logprob: -5.007007122039795
    3. '+B' → logprob: -8.257007598876953
    4. ' ' → logprob: -10.507007598876953
    5. '+b' → logprob: -12.632007598876953
    6. ' ' → logprob: -14.757007598876953
    7. ' +
' → logprob: -14.757007598876953
    8. '+A' → logprob: -15.382007598876953
    9. ' plus' → logprob: -15.632007598876953
    10. '<|end|>' → logprob: -15.632007598876953

Token 181: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.026301342993974686
    2. ' B' → logprob: -3.651301383972168
    3. '<|end|>' → logprob: -13.901301383972168
    4. ' ' → logprob: -15.901301383972168
    5. '	B' → logprob: -17.40130043029785
    6. '   ' → logprob: -18.40130043029785
    7. 'b' → logprob: -19.15130043029785
    8. ',' → logprob: -19.27630043029785
    9. '<|end|>' → logprob: -19.40130043029785
    10. '_B' → logprob: -19.65130043029785

Token 182: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02301938645541668
    2. '   ' → logprob: -3.898019313812256
    3. '    
' → logprob: -6.398019313812256
    4. 'addition' → logprob: -8.773019790649414
    5. '
' → logprob: -8.898019790649414
    6. '  
' → logprob: -9.023019790649414
    7. ',' → logprob: -9.398019790649414
    8. ' 
' → logprob: -9.648019790649414
    9. '   
' → logprob: -10.023019790649414
    10. ',
' → logprob: -10.023019790649414

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049926310777664185
    2. '
' → logprob: -3.424926280975342
    3. ' subtraction' → logprob: -4.799926280975342
    4. '    
' → logprob: -5.174926280975342
    5. 'diff' → logprob: -7.299926280975342
    6. '  ' → logprob: -7.799926280975342
    7. ' ' → logprob: -8.6749267578125
    8. '  
' → logprob: -8.7999267578125
    9. ',' → logprob: -9.0499267578125
    10. 'difference' → logprob: -9.0499267578125

Token 184: ' sou' (ID: 4069)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.08737299591302872
    2. 'sou' (adapté à ' sou') → logprob: -2.5873730182647705
    3. 'difference' → logprob: -5.212372779846191
    4. 's' → logprob: -6.212372779846191
    5. 'diff' → logprob: -6.962372779846191
    6. 'subtract' → logprob: -10.712372779846191
    7. ' subtraction' → logprob: -11.587372779846191
    8. 'multip' → logprob: -12.462372779846191
    9. '   ' → logprob: -12.712372779846191
    10. ' sou' → logprob: -13.587372779846191

Token 185: 'straction' (ID: 79887)
  Prédit: 'straction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'straction' → logprob: -0.0001951961312443018
    2. 'traction' → logprob: -9.250195503234863
    3. 'stra' → logprob: -9.750195503234863
    4. 'str' → logprob: -10.750195503234863
    5. 'b' → logprob: -11.625195503234863
    6. 'bs' → logprob: -12.250195503234863
    7. 'stract' → logprob: -12.375195503234863
    8. '   ' → logprob: -15.500195503234863
    9. 's' → logprob: -15.625195503234863
    10. 'bst' → logprob: -15.875195503234863

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02054247073829174
    2. '=' → logprob: -3.8955423831939697
    3. '   ' → logprob: -15.02054214477539
    4. ' ' → logprob: -16.14554214477539
    5. 's' → logprob: -16.52054214477539
    6. '=A' → logprob: -18.02054214477539
    7. ' ' → logprob: -18.64554214477539
    8. ',' → logprob: -18.77054214477539
    9. 'a' → logprob: -19.39554214477539
    10. '_' → logprob: -19.52054214477539

Token 187: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.061970487236976624
    2. 'A' → logprob: -2.8119704723358154
    3. '	A' → logprob: -13.811970710754395
    4. ' ' → logprob: -14.186970710754395
    5. '   ' → logprob: -14.436970710754395
    6. ' (' → logprob: -15.311970710754395
    7. ' ' → logprob: -15.811970710754395
    8. '(A' → logprob: -15.811970710754395
    9. '_A' → logprob: -17.436969757080078
    10. '(' → logprob: -17.686969757080078

Token 188: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02325817570090294
    2. '-' → logprob: -3.7732582092285156
    3. ' ' → logprob: -11.773258209228516
    4. ' ' → logprob: -12.398258209228516
    5. ' minus' → logprob: -15.398258209228516
    6. '_' → logprob: -15.523258209228516
    7. '[' → logprob: -16.148258209228516
    8. ' -
' → logprob: -16.585758209228516
    9. ' B' → logprob: -17.023258209228516
    10. 'minus' → logprob: -17.710758209228516

Token 189: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.16022463142871857
    2. ' B' → logprob: -1.9102246761322021
    3. ' ' → logprob: -15.160224914550781
    4. '   ' → logprob: -15.910224914550781
    5. '<|end|>' → logprob: -17.03522491455078
    6. '	B' → logprob: -17.53522491455078
    7. 'b' → logprob: -18.78522491455078
    8. '  ' → logprob: -19.53522491455078
    9. '    ' → logprob: -19.91022491455078
    10. ' ' → logprob: -19.91022491455078

Token 190: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4430168867111206
    2. '   ' → logprob: -1.0680168867111206
    3. '    
' → logprob: -4.31801700592041
    4. '  
' → logprob: -8.69301700592041
    5. 'addition' → logprob: -8.69301700592041
    6. 'multip' → logprob: -9.44301700592041
    7. ' multiplication' → logprob: -9.69301700592041
    8. ' 
' → logprob: -9.81801700592041
    9. ',' → logprob: -10.19301700592041
    10. '```' → logprob: -10.44301700592041

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11060619354248047
    2. 'multip' → logprob: -2.3606061935424805
    3. '
' → logprob: -5.1106061935424805
    4. '    
' → logprob: -6.2356061935424805
    5. ' multiplication' → logprob: -6.7356061935424805
    6. 'produ' → logprob: -7.7356061935424805
    7. 'product' → logprob: -8.48560619354248
    8. ' multip' → logprob: -8.98560619354248
    9. 'mul' → logprob: -9.23560619354248
    10. 'prod' → logprob: -9.73560619354248

Token 192: ' multiplication' (ID: 86340)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.015744570642709732
    2. 'produ' → logprob: -4.265744686126709
    3. ' multiplication' → logprob: -6.640744686126709
    4. ' produit' → logprob: -8.39074420928955
    5. 'production' → logprob: -10.89074420928955
    6. 'product' → logprob: -11.01574420928955
    7. 'mult' → logprob: -12.76574420928955
    8. 'prod' → logprob: -13.26574420928955
    9. ' multip' → logprob: -13.51574420928955
    10. '   ' → logprob: -13.64074420928955

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889363914728165
    2. '=' → logprob: -2.5788936614990234
    3. '   ' → logprob: -12.703893661499023
    4. '=A' → logprob: -14.703893661499023
    5. ' ' → logprob: -15.078893661499023
    6. 's' → logprob: -17.328893661499023
    7. 'A' → logprob: -17.453893661499023
    8. ' A' → logprob: -18.328893661499023
    9. ' =
' → logprob: -18.578893661499023
    10. 'a' → logprob: -18.953893661499023

Token 194: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.4740830957889557
    2. 'A' → logprob: -0.9740830659866333
    3. '   ' → logprob: -12.099082946777344
    4. ' ' → logprob: -15.099082946777344
    5. '	A' → logprob: -15.224082946777344
    6. '  ' → logprob: -17.349082946777344
    7. ' ' → logprob: -17.849082946777344
    8. 'a' → logprob: -17.974082946777344
    9. '_A' → logprob: -19.599082946777344
    10. '    ' → logprob: -19.849082946777344

Token 195: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10021152347326279
    2. '*' → logprob: -2.3502116203308105
    3. ' ' → logprob: -12.350211143493652
    4. ' ' → logprob: -14.725211143493652
    5. ' *
' → logprob: -16.97521209716797
    6. 'B' → logprob: -17.97521209716797
    7. '_' → logprob: -17.97521209716797
    8. '**' → logprob: -18.10021209716797
    9. ' **' → logprob: -18.72521209716797
    10. '*A' → logprob: -18.72521209716797

Token 196: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0067161982879042625
    2. ' B' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.631715774536133
    4. '<|end|>' → logprob: -15.006715774536133
    5. '	B' → logprob: -17.506715774536133
    6. '   ' → logprob: -17.756715774536133
    7. '_B' → logprob: -18.506715774536133
    8. '  ' → logprob: -18.756715774536133
    9. '```' → logprob: -19.381715774536133
    10. '>B' → logprob: -19.506715774536133

Token 197: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1690485179424286
    2. '   ' → logprob: -1.919048547744751
    3. '    
' → logprob: -4.794048309326172
    4. '
' → logprob: -8.544048309326172
    5. '  
' → logprob: -8.919048309326172
    6. 'max' → logprob: -10.169048309326172
    7. 'return' → logprob: -10.294048309326172
    8. '

' → logprob: -10.419048309326172
    9. '
    
' → logprob: -10.794048309326172
    10. '   
' → logprob: -10.919048309326172

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1380162239074707
    2. '
' → logprob: -2.2630162239074707
    3. '    
' → logprob: -3.8880162239074707
    4. 'return' → logprob: -6.013016223907471
    5. 'max' → logprob: -6.513016223907471
    6. '  
' → logprob: -9.138015747070312
    7. 'result' → logprob: -9.513015747070312
    8. ' return' → logprob: -9.763015747070312
    9. 'results' → logprob: -9.763015747070312
    10. '   
' → logprob: -10.138015747070312

Token 199: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.42362120747566223
    2. '   ' → logprob: -1.7986211776733398
    3. ' return' → logprob: -2.17362117767334
    4. 'max' → logprob: -3.29862117767334
    5. '#' (adapté à ' #') → logprob: -4.17362117767334
    6. '
' → logprob: -4.79862117767334
    7. 'result' → logprob: -6.17362117767334
    8. ' max' → logprob: -6.79862117767334
    9. '    
' → logprob: -6.92362117767334
    10. 'maximum' → logprob: -7.79862117767334

Token 200: ' Retour' (ID: 146830)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.19013644754886627
    2. 'return' → logprob: -2.065136432647705
    3. ' max' → logprob: -3.690136432647705
    4. 'max' → logprob: -4.565136432647705
    5. '   ' → logprob: -5.815136432647705
    6. ' result' → logprob: -6.065136432647705
    7. ' maximum' → logprob: -6.065136432647705
    8. 'result' → logprob: -7.190136432647705
    9. '#' → logprob: -7.190136432647705
    10. ' retourner' → logprob: -8.065136909484863

Token 201: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.009530111216008663
    2. '   ' → logprob: -5.009530067443848
    3. 'ne' → logprob: -6.509530067443848
    4. 'er' → logprob: -7.009530067443848
    5. 'n' → logprob: -8.134530067443848
    6. 'nner' → logprob: -10.259530067443848
    7. 'neur' → logprob: -10.259530067443848
    8. ' ner' → logprob: -11.884530067443848
    9. 'return' → logprob: -12.134530067443848
    10. ' return' → logprob: -12.134530067443848

Token 202: ' la' (ID: 557)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.018171953037381172
    2. 'max' → logprob: -4.018171787261963
    3. '   ' → logprob: -11.018172264099121
    4. ' maximum' → logprob: -12.893172264099121
    5. '	max' → logprob: -13.893172264099121
    6. '(max' → logprob: -14.268172264099121
    7. ' maxi' → logprob: -14.768172264099121
    8. ' ' → logprob: -15.018172264099121
    9. '[max' → logprob: -15.893172264099121
    10. ' ' → logprob: -15.893172264099121

Token 203: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.38689056038856506
    2. ' max' → logprob: -1.1368905305862427
    3. ' maximum' → logprob: -11.261890411376953
    4. '(max' → logprob: -13.136890411376953
    5. 'maximum' → logprob: -13.261890411376953
    6. '[max' → logprob: -14.386890411376953
    7. '   ' → logprob: -14.636890411376953
    8. ' maximale' → logprob: -15.136890411376953
    9. '=max' → logprob: -15.136890411376953
    10. ' maxi' → logprob: -15.136890411376953

Token 204: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.14469118416309357
    2. 'max' → logprob: -2.644691228866577
    3. 'gr' → logprob: -3.769691228866577
    4. '_gr' → logprob: -4.644690990447998
    5. '_' → logprob: -5.019690990447998
    6. 'grand' → logprob: -5.144690990447998
    7. '_large' → logprob: -5.769690990447998
    8. '_max' → logprob: -6.019690990447998
    9. ' élevée' → logprob: -6.394690990447998
    10. ' max' → logprob: -6.519690990447998

Token 205: ' valeur' (ID: 41664)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6552112102508545
    2. 'val' → logprob: -1.4052112102508545
    3. ' de' → logprob: -2.6552112102508545
    4. 'des' → logprob: -2.9052112102508545
    5. ' valeur' → logprob: -3.1552112102508545
    6. '_val' → logprob: -3.5302112102508545
    7. 'de' → logprob: -4.280211448669434
    8. '_value' → logprob: -5.030211448669434
    9. 'value' → logprob: -5.405211448669434
    10. '_' → logprob: -5.655211448669434

Token 206: ' parmi' (ID: 51713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19773922860622406
    2. 'max' → logprob: -2.3227391242980957
    3. ' max' → logprob: -2.9477391242980957
    4. 'return' → logprob: -3.9477391242980957
    5. ' return' → logprob: -5.322739124298096
    6. '(max' → logprob: -5.947739124298096
    7. '=max' → logprob: -6.947739124298096
    8. '    
' → logprob: -7.197739124298096
    9. '
' → logprob: -8.197739601135254
    10. ',' → logprob: -10.572739601135254

Token 207: ' les' (ID: 1341)
  Prédit: 'addition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'addition' → logprob: -0.5483372807502747
    2. ' addition' → logprob: -1.1733372211456299
    3. '[' → logprob: -2.29833722114563
    4. 'add' → logprob: -5.173337459564209
    5. '(add' → logprob: -5.798337459564209
    6. ' [' → logprob: -6.298337459564209
    7. '   ' → logprob: -6.673337459564209
    8. ' add' → logprob: -7.923337459564209
    9. '```' → logprob: -9.67333698272705
    10. ' (' → logprob: -10.42333698272705

Token 208: ' trois' (ID: 25564)
  Prédit: ' trois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trois' → logprob: -0.019671805202960968
    2. 'tro' → logprob: -4.51967191696167
    3. ' three' → logprob: -5.26967191696167
    4. '[' → logprob: -6.51967191696167
    5. '3' → logprob: -7.26967191696167
    6. ' [' → logprob: -7.64467191696167
    7. 'three' → logprob: -8.019671440124512
    8. ' tro' → logprob: -9.394671440124512
    9. ' valeurs' → logprob: -9.769671440124512
    10. ' opérations' → logprob: -9.769671440124512

Token 209: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7352924942970276
    2. 'return' → logprob: -1.3602924346923828
    3. '   ' → logprob: -1.4852924346923828
    4. ' max' → logprob: -3.735292434692383
    5. ' return' → logprob: -4.610292434692383
    6. '    
' → logprob: -6.485292434692383
    7. '
' → logprob: -6.610292434692383
    8. '(max' → logprob: -7.985292434692383
    9. '=max' → logprob: -9.110292434692383
    10. ',' → logprob: -9.485292434692383

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02127573825418949
    2. 'return' → logprob: -4.521275520324707
    3. ' return' → logprob: -5.146275520324707
    4. '
' → logprob: -5.521275520324707
    5. '    
' → logprob: -8.021275520324707
    6. '```' → logprob: -11.146275520324707
    7. '  
' → logprob: -12.521275520324707
    8. '  ' → logprob: -13.646275520324707
    9. 'max' → logprob: -13.771275520324707
    10. ' 
' → logprob: -13.896275520324707

Token 211: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.18829329311847687
    2. ' return' → logprob: -2.438293218612671
    3. 'max' → logprob: -2.938293218612671
    4. '   ' → logprob: -3.688293218612671
    5. ' max' → logprob: -5.06329345703125
    6. '```' → logprob: -11.43829345703125
    7. '
' → logprob: -12.31329345703125
    8. '    
' → logprob: -12.81329345703125
    9. ' ' → logprob: -13.31329345703125
    10. '  ' → logprob: -13.81329345703125

Token 212: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5759400725364685
    2. ' max' → logprob: -0.8259400725364685
    3. '	max' → logprob: -14.950940132141113
    4. '(max' → logprob: -15.950940132141113
    5. ' ' → logprob: -16.825939178466797
    6. '   ' → logprob: -17.200939178466797
    7. '[max' → logprob: -17.325939178466797
    8. ' ' → logprob: -18.950939178466797
    9. '=max' → logprob: -19.450939178466797
    10. ' maxi' → logprob: -19.575939178466797

Token 213: '(add' (ID: 40159)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38690099120140076
    2. '(add' → logprob: -1.1369010210037231
    3. '(A' → logprob: -11.386900901794434
    4. ' (' → logprob: -12.011900901794434
    5. 'addition' → logprob: -12.386900901794434
    6. '(
' → logprob: -12.511900901794434
    7. 'add' → logprob: -14.386900901794434
    8. '(a' → logprob: -14.511900901794434
    9. '(

' → logprob: -14.761900901794434
    10. '(ad' → logprob: -14.761900901794434

Token 214: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -6.392202976712724e-06
    2. 'tion' → logprob: -13.625006675720215
    3. 'iction' → logprob: -13.875006675720215
    4. 'it' → logprob: -14.000006675720215
    5. ' addition' → logprob: -14.125006675720215
    6. '   ' → logprob: -14.500006675720215
    7. 'iton' → logprob: -15.125006675720215
    8. 'ction' → logprob: -15.250006675720215
    9. 'addition' → logprob: -15.250006675720215
    10. ' ' → logprob: -15.875006675720215

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019472026033326983
    2. ' ,' → logprob: -6.251947402954102
    3. ',s' → logprob: -11.001947402954102
    4. ',
' → logprob: -13.501947402954102
    5. 'sou' → logprob: -15.501947402954102
    6. 's' → logprob: -15.876947402954102
    7. ',

' → logprob: -16.3769474029541
    8. ')' → logprob: -17.0019474029541
    9. ' ,
' → logprob: -17.1269474029541
    10. ',m' → logprob: -17.2519474029541

Token 216: ' sou' (ID: 4069)
  Prédit: ' sou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sou' → logprob: -0.029812512919306755
    2. 'sou' → logprob: -3.5298125743865967
    3. ' ' → logprob: -10.404812812805176
    4. 's' → logprob: -10.904812812805176
    5. ' ' → logprob: -11.779812812805176
    6. ' Sou' → logprob: -12.904812812805176
    7. ' sout' → logprob: -14.279812812805176
    8. ' sul' → logprob: -14.654812812805176
    9. 'Sou' → logprob: -14.779812812805176
    10. '(s' → logprob: -15.529812812805176

Token 217: 'straction' (ID: 79887)
  Prédit: 'straction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'straction' → logprob: -0.00021057340200059116
    2. 'str' → logprob: -9.625210762023926
    3. 'traction' → logprob: -10.125210762023926
    4. 'stra' → logprob: -10.250210762023926
    5. 'stract' → logprob: -10.625210762023926
    6. 'struction' → logprob: -11.500210762023926
    7. 'p' → logprob: -11.625210762023926
    8. 'ct' → logprob: -11.875210762023926
    9. 'bst' → logprob: -12.625210762023926
    10. 'st' → logprob: -12.750210762023926

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006095519755035639
    2. ',m' → logprob: -5.6310954093933105
    3. 'multip' → logprob: -6.6310954093933105
    4. ' ,' → logprob: -6.7560954093933105
    5. 'Multip' → logprob: -12.631095886230469
    6. ' multip' → logprob: -12.631095886230469
    7. 'm' → logprob: -13.506095886230469
    8. ' multiplication' → logprob: -13.631095886230469
    9. ',
' → logprob: -14.756095886230469
    10. ')' → logprob: -15.631095886230469

Token 219: ' multiplication' (ID: 86340)
  Prédit: ' multiplication'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiplication' → logprob: -0.5759581923484802
    2. 'multip' → logprob: -0.8259581923484802
    3. ' multip' → logprob: -11.450958251953125
    4. ' multiplic' → logprob: -11.825958251953125
    5. 'mult' → logprob: -15.325958251953125
    6. ' multiprocessing' → logprob: -15.700958251953125
    7. 'multiply' → logprob: -16.200958251953125
    8. 'Multip' → logprob: -16.325958251953125
    9. ' ' → logprob: -16.450958251953125
    10. 'mul' → logprob: -17.075958251953125

Token 220: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -15.875000953674316
    4. '}' → logprob: -18.625001907348633
    5. ')}' → logprob: -18.625001907348633
    6. '))' → logprob: -18.750001907348633
    7. '),' → logprob: -19.000001907348633
    8. ')return' → logprob: -19.375001907348633
    9. '<|end|>' → logprob: -19.500001907348633
    10. ')`' → logprob: -20.000001907348633

Token 221: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0031794982496649027
    2. 'if' → logprob: -5.753179550170898
    3. '
' → logprob: -14.003179550170898
    4. '```' → logprob: -15.003179550170898
    5. '    
' → logprob: -15.628179550170898
    6. '  
' → logprob: -15.628179550170898
    7. 'print' → logprob: -16.0031795501709
    8. ' def' → logprob: -17.0031795501709
    9. '<|end|>' → logprob: -17.0031795501709
    10. ' if' → logprob: -17.1281795501709

Token 222: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.012707178480923176
    2. 'main' → logprob: -4.512707233428955
    3. ' print' → logprob: -7.137707233428955
    4. ' solve' → logprob: -7.762707233428955
    5. ' write' → logprob: -8.762706756591797
    6. 'print' → logprob: -9.512706756591797
    7. ' display' → logprob: -9.512706756591797
    8. ' calculate' → logprob: -10.387706756591797
    9. 'solve' → logprob: -10.512706756591797
    10. ' compute' → logprob: -11.387706756591797

Token 223: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.0087516784551553e-05
    2. ' ():' → logprob: -11.75001049041748
    3. '():
' → logprob: -13.12501049041748
    4. '()' → logprob: -15.87501049041748
    5. '():
' → logprob: -17.625009536743164
    6. '(' → logprob: -18.375009536743164
    7. '_' → logprob: -19.000009536743164
    8. '(":' → logprob: -20.375009536743164
    9. '():

' → logprob: -20.500009536743164
    10. '()>' → logprob: -20.500009536743164

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006223713047802448
    2. '    
' → logprob: -5.506223678588867
    3. '
' → logprob: -6.381223678588867
    4. '<|end|>' → logprob: -8.631223678588867
    5. 'A' → logprob: -9.131223678588867
    6. 'def' → logprob: -10.756223678588867
    7. '<|end|>' → logprob: -10.881223678588867
    8. 'input' → logprob: -10.881223678588867
    9. '  
' → logprob: -11.131223678588867
    10. '```' → logprob: -11.631223678588867

Token 225: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02676663175225258
    2. 'A' → logprob: -3.776766538619995
    3. ' A' → logprob: -5.651766777038574
    4. '  ' → logprob: -13.776766777038574
    5. ' ' → logprob: -13.901766777038574
    6. '    
' → logprob: -14.651766777038574
    7. '	A' → logprob: -15.026766777038574
    8. '
' → logprob: -15.151766777038574
    9. '       ' → logprob: -15.651766777038574
    10. '    ' → logprob: -15.776766777038574

Token 226: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.38920098543167114
    2. '   ' → logprob: -1.1392009258270264
    3. ' A' → logprob: -6.3892011642456055
    4. '
' → logprob: -8.014201164245605
    5. '  ' → logprob: -8.889201164245605
    6. '    
' → logprob: -9.389201164245605
    7. ' ' → logprob: -10.014201164245605
    8. '#' → logprob: -11.014201164245605
    9. 'def' → logprob: -11.764201164245605
    10. '  
' → logprob: -12.139201164245605

Token 227: ' Fonction' (ID: 189149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037877365946769714
    2. ' A' → logprob: -3.912877321243286
    3. 'A' → logprob: -4.412877559661865
    4. '#' → logprob: -5.662877559661865
    5. ' #' → logprob: -6.787877559661865
    6. '    
' → logprob: -9.162877082824707
    7. '    ' → logprob: -9.287877082824707
    8. ' ' → logprob: -10.287877082824707
    9. '  ' → logprob: -10.412877082824707
    10. ' input' → logprob: -10.787877082824707

Token 228: ' principale' (ID: 68926)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.42064523696899414
    2. ' principale' → logprob: -2.545645236968994
    3. ' de' → logprob: -2.670645236968994
    4. ' main' → logprob: -2.920645236968994
    5. ' ' → logprob: -3.045645236968994
    6. ' def' → logprob: -3.545645236968994
    7. 'def' → logprob: -3.795645236968994
    8. '   ' → logprob: -4.045645236968994
    9. ' ' → logprob: -5.920645236968994
    10. '  ' → logprob: -5.920645236968994

Token 229: ' du' (ID: 1462)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.16323459148406982
    2. '():
' → logprob: -2.0382347106933594
    3. ':' → logprob: -4.288234710693359
    4. '   ' → logprob: -5.913234710693359
    5. '()' → logprob: -6.163234710693359
    6. 'def' → logprob: -6.663234710693359
    7. ':
' → logprob: -7.663234710693359
    8. '
' → logprob: -10.91323471069336
    9. '()
' → logprob: -11.53823471069336
    10. ' :' → logprob: -11.78823471069336

Token 230: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.604875385761261
    2. ' programme' → logprob: -0.854875385761261
    3. 'program' → logprob: -4.104875564575195
    4. ' script' → logprob: -4.979875564575195
    5. ' program' → logprob: -5.979875564575195
    6. 'script' → logprob: -6.104875564575195
    7. ' code' → logprob: -8.354875564575195
    8. 'code' → logprob: -9.604875564575195
    9. 'programm' → logprob: -10.604875564575195
    10. '_program' → logprob: -11.479875564575195

Token 231: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003782500745728612
    2. ':' → logprob: -6.003782272338867
    3. '
' → logprob: -7.628782272338867
    4. ':
' → logprob: -8.003782272338867
    5. 'def' → logprob: -8.878782272338867
    6. '():' → logprob: -9.003782272338867
    7. '():
' → logprob: -9.503782272338867
    8. '    
' → logprob: -9.878782272338867
    9. '```' → logprob: -10.128782272338867
    10. '()' → logprob: -11.003782272338867

Token 232: ' orch' (ID: 64344)
  Prédit: ' lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lit' → logprob: -0.02900281921029091
    2. ' appelle' → logprob: -4.154002666473389
    3. 'if' → logprob: -5.404002666473389
    4. 'lit' → logprob: -6.529002666473389
    5. ' utilise' → logprob: -6.654002666473389
    6. ' récup' → logprob: -6.779002666473389
    7. 'def' → logprob: -6.904002666473389
    8. ' ex' → logprob: -7.404002666473389
    9. ' if' → logprob: -7.779002666473389
    10. '   ' → logprob: -7.779002666473389

Token 233: 'estre' (ID: 39655)
  Prédit: 'estre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'estre' → logprob: -5.319370302458992e-06
    2. 'estra' → logprob: -13.000005722045898
    3. 'estr' → logprob: -13.250005722045898
    4. 'este' → logprob: -14.125005722045898
    5. 'es' → logprob: -15.000005722045898
    6. 'est' → logprob: -15.875005722045898
    7. 'e' → logprob: -18.1250057220459
    8. 'estate' → logprob: -18.5000057220459
    9. 'estres' → logprob: -18.6250057220459
    10. 'istre' → logprob: -18.7500057220459

Token 234: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.311819463968277
    2. ' l' → logprob: -1.5618194341659546
    3. '   ' → logprob: -3.186819553375244
    4. ' le' → logprob: -4.936819553375244
    5. 'l' → logprob: -5.061819553375244
    6. ' the' → logprob: -6.686819553375244
    7. 'def' → logprob: -7.311819553375244
    8. ' ' → logprob: -8.186819076538086
    9. '()' → logprob: -8.436819076538086
    10. ' les' → logprob: -8.561819076538086

Token 235: ' lecture' (ID: 31993)
  Prédit: 'lecture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lecture' → logprob: -0.4035647511482239
    2. ' lecture' → logprob: -1.403564691543579
    3. 'ex' → logprob: -2.653564691543579
    4. 'execution' → logprob: -5.278564929962158
    5. 'suite' → logprob: -5.528564929962158
    6. 'lect' → logprob: -6.028564929962158
    7. 'log' → logprob: -6.778564929962158
    8. 'fonction' → logprob: -7.403564929962158
    9. 'gestion' → logprob: -7.653564929962158
    10. ' logique' → logprob: -8.028564453125

Token 236: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1195700466632843
    2. ' des' → logprob: -2.994570016860962
    3. ',' → logprob: -3.994570016860962
    4. '    ' → logprob: -4.744570255279541
    5. ' ' → logprob: -4.869570255279541
    6. '_' → logprob: -4.869570255279541
    7. '  ' → logprob: -5.494570255279541
    8. '()' → logprob: -5.619570255279541
    9. ' de' → logprob: -5.744570255279541
    10. 'des' → logprob: -6.119570255279541

Token 237: ' données' (ID: 30580)
  Prédit: ' données'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.8696249723434448
    2. ' entr' → logprob: -1.2446249723434448
    3. ' inputs' → logprob: -1.6196249723434448
    4. 'inputs' → logprob: -3.2446250915527344
    5. 'A' → logprob: -4.619625091552734
    6. ' input' → logprob: -4.744625091552734
    7. 'entr' → logprob: -4.744625091552734
    8. 'entrée' → logprob: -4.994625091552734
    9. 'input' → logprob: -5.369625091552734
    10. ' A' → logprob: -5.619625091552734

Token 238: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0914696604013443
    2. '   ' → logprob: -2.4664697647094727
    3. ' ,' → logprob: -6.216469764709473
    4. ' et' → logprob: -8.341469764709473
    5. ' d' → logprob: -9.216469764709473
    6. ' ' → logprob: -9.966469764709473
    7. 'd' → logprob: -10.716469764709473
    8. 'input' → logprob: -10.966469764709473
    9. '    ' → logprob: -11.341469764709473
    10. ',
' → logprob: -11.466469764709473

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16203269362449646
    2. ' l' → logprob: -2.5370326042175293
    3. ' la' → logprob: -3.0370326042175293
    4. ' le' → logprob: -4.662032604217529
    5. 'l' → logprob: -5.162032604217529
    6. ' leur' → logprob: -6.787032604217529
    7. ' calculates' → logprob: -7.162032604217529
    8. '    ' → logprob: -7.287032604217529
    9. 'calcul' → logprob: -7.537032604217529
    10. 'ex' → logprob: -8.037033081054688

Token 240: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1041528731584549
    2. ' la' → logprob: -2.6041529178619385
    3. ' le' → logprob: -4.604152679443359
    4. ' puis' → logprob: -5.354152679443359
    5. ' l' → logprob: -5.979152679443359
    6. 'la' → logprob: -6.604152679443359
    7. ' et' → logprob: -7.104152679443359
    8. 'le' (adapté à ' le') → logprob: -7.229152679443359
    9. '    
' → logprob: -7.229152679443359
    10. 'l' → logprob: -7.354152679443359

Token 241: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.04089861735701561
    2. 'calcul' → logprob: -3.290898561477661
    3. ' traitement' → logprob: -6.04089879989624
    4. '   ' → logprob: -8.915898323059082
    5. 'trait' → logprob: -9.040898323059082
    6. 'cal' → logprob: -9.165898323059082
    7. 'calc' → logprob: -10.415898323059082
    8. ' calc' → logprob: -10.665898323059082
    9. ' résultat' → logprob: -11.665898323059082
    10. 'Calcul' → logprob: -11.665898323059082

Token 242: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1339953988790512
    2. '   ' → logprob: -2.508995294570923
    3. ' et' → logprob: -3.383995294570923
    4. ' des' → logprob: -5.008995532989502
    5. ' de' → logprob: -6.508995532989502
    6. ' ,' → logprob: -6.633995532989502
    7. ' du' → logprob: -8.758995056152344
    8. '    ' → logprob: -9.633995056152344
    9. 'et' → logprob: -9.633995056152344
    10. 'de' → logprob: -9.633995056152344

Token 243: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -1.2852234840393066
    2. 'max' → logprob: -1.7852234840393066
    3. 'maximum' → logprob: -1.7852234840393066
    4. ' maximum' → logprob: -1.9102234840393066
    5. 'result' → logprob: -2.0352234840393066
    6. 'rés' → logprob: -2.2852234840393066
    7. ' max' → logprob: -5.660223484039307
    8. ' resultat' → logprob: -6.535223484039307
    9. ' result' → logprob: -7.285223484039307
    10. 'res' → logprob: -7.285223484039307

Token 244: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06292296946048737
    2. '   ' → logprob: -3.187922954559326
    3. ' et' → logprob: -4.062922954559326
    4. ' ,' → logprob: -6.187922954559326
    5. ' ' → logprob: -8.187923431396484
    6. 'et' → logprob: -10.062923431396484
    7. ',
' → logprob: -10.437923431396484
    8. '    ' → logprob: -10.437923431396484
    9. '  ' → logprob: -10.687923431396484
    10. ' de' → logprob: -11.062923431396484

Token 245: ' son' (ID: 2391)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.04634067416191101
    2. 'l' → logprob: -4.046340465545654
    3. '   ' → logprob: -4.171340465545654
    4. ' son' → logprob: -5.296340465545654
    5. '    ' → logprob: -6.796340465545654
    6. ' la' → logprob: -7.046340465545654
    7. ' leur' → logprob: -7.046340465545654
    8. ' ' → logprob: -7.171340465545654
    9. '	l' → logprob: -7.296340465545654
    10. 'aff' → logprob: -7.296340465545654

Token 246: ' affich' (ID: 90179)
  Prédit: ' affich'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affich' → logprob: -0.0018367796437814832
    2. 'aff' → logprob: -6.501836776733398
    3. ' affiche' → logprob: -8.626836776733398
    4. ''aff' → logprob: -9.376836776733398
    5. ' aff' → logprob: -11.126836776733398
    6. ' afficher' → logprob: -11.376836776733398
    7. ' ' → logprob: -11.376836776733398
    8. '_aff' → logprob: -11.501836776733398
    9. ' print' → logprob: -11.751836776733398
    10. '’aff' → logprob: -12.876836776733398

Token 247: 'age' (ID: 477)
  Prédit: 'ichage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.1630796641111374
    2. 'age' → logprob: -1.9130796194076538
    3. 'ich' → logprob: -6.413079738616943
    4. 'iche' → logprob: -7.288079738616943
    5. 'ach' → logprob: -8.413079261779785
    6. '   ' → logprob: -8.663079261779785
    7. ' age' → logprob: -9.538079261779785
    8. ' ach' → logprob: -10.913079261779785
    9. 'ache' → logprob: -11.538079261779785
    10. ' ache' → logprob: -12.288079261779785

Token 248: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00672448705881834
    2. '.' → logprob: -6.0067243576049805
    3. '():' → logprob: -6.3817243576049805
    4. ':' → logprob: -6.5067243576049805
    5. '()' → logprob: -7.2567243576049805
    6. '():
' → logprob: -8.50672435760498
    7. '    
' → logprob: -10.50672435760498
    8. ',' → logprob: -10.75672435760498
    9. 'def' → logprob: -11.13172435760498
    10. '):' → logprob: -11.38172435760498

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000467730569653213
    2. '    
' → logprob: -7.875467777252197
    3. '
' → logprob: -9.375467300415039
    4. '  
' → logprob: -14.000467300415039
    5. '   
' → logprob: -14.500467300415039
    6. 'A' → logprob: -14.750467300415039
    7. ' 
' → logprob: -15.000467300415039
    8. '```' → logprob: -16.00046730041504
    9. '       ' → logprob: -16.12546730041504
    10. 'def' → logprob: -16.25046730041504

Token 250: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0058477348648011684
    2. '
' → logprob: -5.505847930908203
    3. '    
' → logprob: -6.380847930908203
    4. '```' → logprob: -10.005847930908203
    5. '  
' → logprob: -11.505847930908203
    6. '   
' → logprob: -12.505847930908203
    7. 'A' → logprob: -12.755847930908203
    8. 'def' → logprob: -13.005847930908203
    9. ' 
' → logprob: -13.130847930908203
    10. 'input' → logprob: -14.130847930908203

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016030559781938791
    2. 'A' → logprob: -6.501603126525879
    3. ' A' → logprob: -9.251603126525879
    4. '    
' → logprob: -13.251603126525879
    5. '
' → logprob: -13.626603126525879
    6. '  ' → logprob: -14.001603126525879
    7. '    ' → logprob: -14.751603126525879
    8. ' ' → logprob: -15.751603126525879
    9. '	A' → logprob: -16.001602172851562
    10. '   ' → logprob: -16.626602172851562

Token 252: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10800943523645401
    2. '   ' → logprob: -2.3580093383789062
    3. ' A' → logprob: -4.858009338378906
    4. ' ' → logprob: -12.608009338378906
    5. '  ' → logprob: -12.858009338378906
    6. '	A' → logprob: -15.233009338378906
    7. '#' (adapté à ' #') → logprob: -15.858009338378906
    8. '
' → logprob: -16.608009338378906
    9. '    
' → logprob: -16.858009338378906
    10. '    ' → logprob: -16.858009338378906

Token 253: ' Lire' (ID: 57624)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002717022318392992
    2. ' A' → logprob: -6.002717018127441
    3. '   ' → logprob: -8.377717018127441
    4. '#' → logprob: -11.502717018127441
    5. 'def' → logprob: -14.627717018127441
    6. ' ' → logprob: -14.627717018127441
    7. '  ' → logprob: -15.377717018127441
    8. '       ' → logprob: -17.002717971801758
    9. 'input' → logprob: -17.127717971801758
    10. 'a' → logprob: -17.877717971801758

Token 254: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6399922966957092
    2. ' A' → logprob: -0.7649922966957092
    3. '   ' → logprob: -5.0149922370910645
    4. '()' → logprob: -8.139992713928223
    5. ' ' → logprob: -8.514992713928223
    6. '(A' → logprob: -9.139992713928223
    7. '  ' → logprob: -9.764992713928223
    8. ' (' → logprob: -10.514992713928223
    9. ',' → logprob: -11.639992713928223
    10. '(' → logprob: -12.264992713928223

Token 255: ' deux' (ID: 10301)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018337352201342583
    2. ' A' → logprob: -4.018337249755859
    3. 'a' → logprob: -9.76833724975586
    4. ' ' → logprob: -10.76833724975586
    5. '   ' → logprob: -10.76833724975586
    6. '  ' → logprob: -11.14333724975586
    7. ' inputs' → logprob: -11.14333724975586
    8. 'ent' → logprob: -11.26833724975586
    9. 'inputs' → logprob: -11.64333724975586
    10. 'def' → logprob: -11.76833724975586

Token 256: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.03675119951367378
    2. 'ent' → logprob: -3.5367512702941895
    3. ' nombres' → logprob: -5.6617512702941895
    4. ' valeurs' → logprob: -6.4117512702941895
    5. ' integers' → logprob: -7.1617512702941895
    6. ' entier' → logprob: -7.9117512702941895
    7. 'val' → logprob: -8.411750793457031
    8. 'A' → logprob: -8.661750793457031
    9. ' variables' → logprob: -9.911750793457031
    10. ' A' → logprob: -10.161750793457031

Token 257: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.002506578341126442
    2. 't' → logprob: -6.377506732940674
    3. '   ' → logprob: -7.502506732940674
    4. 'ents' → logprob: -9.627506256103516
    5. 'ers' → logprob: -9.877506256103516
    6. 'ints' → logprob: -10.752506256103516
    7. 'ier' → logprob: -10.877506256103516
    8. 'ants' → logprob: -11.127506256103516
    9. 'ts' → logprob: -11.252506256103516
    10. 'ti' → logprob: -11.752506256103516

Token 258: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020553220063447952
    2. ' A' → logprob: -4.395553112030029
    3. 'A' → logprob: -4.895553112030029
    4. ',' → logprob: -8.145553588867188
    5. '    
' → logprob: -9.145553588867188
    6. '
' → logprob: -10.145553588867188
    7. '  ' → logprob: -10.145553588867188
    8. ' ' → logprob: -10.770553588867188
    9. '    ' → logprob: -12.270553588867188
    10. '	A' → logprob: -12.270553588867188

Token 259: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8622682094573975
    2. ' l' → logprob: -1.3622682094573975
    3. ' input' → logprob: -1.4872682094573975
    4. 'input' → logprob: -2.3622682094573975
    5. ' la' → logprob: -8.362268447875977
    6. '   ' → logprob: -8.612268447875977
    7. 'la' → logprob: -8.737268447875977
    8. '_input' → logprob: -8.737268447875977
    9. ' ' → logprob: -8.987268447875977
    10. ' standard' → logprob: -8.987268447875977

Token 260: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.09609728306531906
    2. 'entrée' → logprob: -2.596097230911255
    3. 'input' → logprob: -4.221097469329834
    4. ''utilisateur' → logprob: -6.596097469329834
    5. ''' → logprob: -8.096096992492676
    6. ' input' → logprob: -8.221096992492676
    7. ' entrée' → logprob: -9.221096992492676
    8. '_input' → logprob: -9.596096992492676
    9. 'a' → logprob: -10.096096992492676
    10. 'e' → logprob: -10.221096992492676

Token 261: ' utilisateur' (ID: 115595)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5565541982650757
    2. '   ' → logprob: -1.5565541982650757
    3. ' A' → logprob: -1.9315541982650757
    4. '()' → logprob: -2.9315543174743652
    5. ' standard' → logprob: -5.306554317474365
    6. ',' → logprob: -5.431554317474365
    7. '(A' → logprob: -5.931554317474365
    8. ' ' → logprob: -6.931554317474365
    9. 'standard' → logprob: -7.181554317474365
    10. '_' → logprob: -7.306554317474365

Token 262: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005620515905320644
    2. 'A' → logprob: -5.50562047958374
    3. ' A' → logprob: -6.63062047958374
    4. '    
' → logprob: -9.130620956420898
    5. '
' → logprob: -9.505620956420898
    6. '  ' → logprob: -10.880620956420898
    7. '  
' → logprob: -12.380620956420898
    8. ' ' → logprob: -12.630620956420898
    9. '<|end|>' → logprob: -12.755620956420898
    10. ',' → logprob: -12.880620956420898

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004418013151735067
    2. 'A' → logprob: -5.754417896270752
    3. ' A' → logprob: -6.754417896270752
    4. '    
' → logprob: -10.00441837310791
    5. '  ' → logprob: -11.50441837310791
    6. ' ' → logprob: -12.00441837310791
    7. '    ' → logprob: -12.50441837310791
    8. '
' → logprob: -12.87941837310791
    9. '	A' → logprob: -13.62941837310791
    10. ',' → logprob: -13.87941837310791

Token 264: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.3166445791721344
    2. ' A' → logprob: -1.316644549369812
    3. '   ' → logprob: -5.691644668579102
    4. ' ' → logprob: -13.316644668579102
    5. '	A' → logprob: -14.191644668579102
    6. '  ' → logprob: -14.441644668579102
    7. '    ' → logprob: -16.8166446685791
    8. ' ' → logprob: -17.1916446685791
    9. '```' → logprob: -17.3166446685791
    10. '       ' → logprob: -17.8166446685791

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ',B' → logprob: -11.62501335144043
    3. ' ,' → logprob: -12.37501335144043
    4. '<|end|>' → logprob: -15.75001335144043
    5. '‌,' → logprob: -17.37501335144043
    6. 'B' → logprob: -17.50001335144043
    7. '   ' → logprob: -18.12501335144043
    8. ',
' → logprob: -18.50001335144043
    9. ',A' → logprob: -18.75001335144043
    10. ',\
' → logprob: -19.00001335144043

Token 266: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.000920869642868638
    2. 'B' → logprob: -7.00092077255249
    3. ' ' → logprob: -11.625921249389648
    4. ' ' → logprob: -15.625921249389648
    5. '   ' → logprob: -16.12592124938965
    6. '<|end|>' → logprob: -16.25092124938965
    7. '    ' → logprob: -17.25092124938965
    8. '  ' → logprob: -18.00092124938965
    9. ')' → logprob: -18.25092124938965
    10. 'space' → logprob: -18.62592124938965

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029761482030153275
    2. '=' → logprob: -3.529761552810669
    3. '   ' → logprob: -11.65476131439209
    4. ')' → logprob: -13.65476131439209
    5. '<|end|>' → logprob: -14.65476131439209
    6. ',' → logprob: -15.02976131439209
    7. '    ' → logprob: -15.27976131439209
    8. ' =
' → logprob: -16.404762268066406
    9. ' =)' → logprob: -17.029762268066406
    10. ' ' → logprob: -17.029762268066406

Token 268: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.01814994215965271
    2. 'read' → logprob: -4.0181498527526855
    3. '	read' → logprob: -17.143150329589844
    4. '(read' → logprob: -19.518150329589844
    5. ' write' → logprob: -21.518150329589844
    6. '   ' → logprob: -21.518150329589844
    7. '_read' → logprob: -21.518150329589844
    8. '.read' → logprob: -21.768150329589844
    9. ' ' → logprob: -22.143150329589844
    10. ' reads' → logprob: -22.143150329589844

Token 269: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0007115975022315979
    2. '_' → logprob: -7.250711441040039
    3. ' _' → logprob: -14.250711441040039
    4. '_inputs' → logprob: -15.250711441040039
    5. '_output' → logprob: -15.625711441040039
    6. '_in' → logprob: -15.875711441040039
    7. '_Input' → logprob: -16.25071144104004
    8. '_user' → logprob: -16.87571144104004
    9. '_INPUT' → logprob: -17.50071144104004
    10. ')' → logprob: -18.12571144104004

Token 270: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009139667963609099
    2. '()
' → logprob: -7.000914096832275
    3. '()
' → logprob: -13.500913619995117
    4. '()

' → logprob: -13.875913619995117
    5. '()\' → logprob: -15.875913619995117
    6. '()`' → logprob: -17.000913619995117
    7. '   ' → logprob: -17.625913619995117
    8. '()"' → logprob: -18.500913619995117
    9. '())' → logprob: -19.000913619995117
    10. '(' → logprob: -19.000913619995117

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6411890387535095
    2. '
' → logprob: -0.7661890387535095
    3. 'result' → logprob: -5.266189098358154
    4. '    
' → logprob: -5.766189098358154
    5. ' result' → logprob: -9.016188621520996
    6. '  
' → logprob: -10.266188621520996
    7. '
' → logprob: -10.391188621520996
    8. '```' → logprob: -10.766188621520996
    9. '\n' → logprob: -11.766188621520996
    10. '   
' → logprob: -12.141188621520996

Token 272: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2883380651473999
    2. 'result' → logprob: -1.6633380651474
    3. '
' → logprob: -2.9133381843566895
    4. ' result' → logprob: -5.1633381843566895
    5. '    
' → logprob: -7.2883381843566895
    6. '#' (adapté à ' #') → logprob: -9.413337707519531
    7. '```' → logprob: -9.663337707519531
    8. '	result' → logprob: -10.788337707519531
    9. ' resultat' → logprob: -11.038337707519531
    10. '  
' → logprob: -11.038337707519531

Token 273: ' Calcul' (ID: 57243)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5248637199401855
    2. ' result' → logprob: -0.8998637199401855
    3. ' resultat' → logprob: -7.1498637199401855
    4. ' max' → logprob: -8.024864196777344
    5. ' résultat' → logprob: -8.774864196777344
    6. '   ' → logprob: -8.774864196777344
    7. 'max' → logprob: -9.274864196777344
    8. 'rés' → logprob: -9.274864196777344
    9. '#' → logprob: -10.024864196777344
    10. 'res' → logprob: -10.524864196777344

Token 274: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0012805953156203032
    2. '   ' → logprob: -7.251280784606934
    3. '_result' → logprob: -7.876280784606934
    4. ' =' → logprob: -9.376280784606934
    5. 'result' → logprob: -9.626280784606934
    6. ' result' → logprob: -10.876280784606934
    7. 'ate' → logprob: -12.251280784606934
    8. ' resultat' → logprob: -12.626280784606934
    9. '=' → logprob: -12.751280784606934
    10. 'ateur' → logprob: -13.001280784606934

Token 275: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7881374359130859
    2. ' result' → logprob: -1.538137435913086
    3. ' la' → logprob: -2.038137435913086
    4. '_result' → logprob: -2.538137435913086
    5. ' le' → logprob: -3.163137435913086
    6. 'max' → logprob: -3.538137435913086
    7. '_max' → logprob: -4.038137435913086
    8. ' max' → logprob: -4.038137435913086
    9. 'le' → logprob: -5.663137435913086
    10. ' l' → logprob: -5.913137435913086

Token 276: ' valeur' (ID: 41664)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0721750557422638
    2. 'max' → logprob: -2.9471750259399414
    3. ' result' → logprob: -4.197175025939941
    4. ' max' → logprob: -6.947175025939941
    5. 'rés' → logprob: -7.322175025939941
    6. ' resultat' → logprob: -8.822175025939941
    7. 'res' → logprob: -9.697175025939941
    8. ' maximale' → logprob: -9.947175025939941
    9. 'val' → logprob: -10.072175025939941
    10. 'maximum' → logprob: -10.322175025939941

Token 277: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.6967563629150391
    2. 'max' → logprob: -0.9467563629150391
    3. '_max' → logprob: -2.196756362915039
    4. '   ' → logprob: -6.571756362915039
    5. ' max' → logprob: -7.821756362915039
    6. '_' → logprob: -8.446756362915039
    7. ' maxim' → logprob: -8.946756362915039
    8. ' optimale' → logprob: -9.196756362915039
    9. ' =' → logprob: -9.696756362915039
    10. 'maximum' → logprob: -9.696756362915039

Token 278: ' parmi' (ID: 51713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18947604298591614
    2. 'result' → logprob: -2.5644760131835938
    3. ' result' → logprob: -2.6894760131835938
    4. ' =' → logprob: -3.6894760131835938
    5. 'max' → logprob: -6.689476013183594
    6. ' max' → logprob: -7.189476013183594
    7. '=' → logprob: -8.314476013183594
    8. ' resultat' → logprob: -9.314476013183594
    9. '_result' → logprob: -9.439476013183594
    10. ' maximale' → logprob: -10.064476013183594

Token 279: ' toutes' (ID: 17502)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6198938488960266
    2. ' compute' → logprob: -1.1198937892913818
    3. 'A' → logprob: -2.369893789291382
    4. 'compute' → logprob: -3.494893789291382
    5. ' les' → logprob: -5.494894027709961
    6. '   ' → logprob: -5.494894027709961
    7. '(A' → logprob: -6.494894027709961
    8. ' ' → logprob: -6.994894027709961
    9. ' la' → logprob: -7.119894027709961
    10. ' le' → logprob: -8.994894027709961

Token 280: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3234197199344635
    2. ' les' → logprob: -1.3234196901321411
    3. '([' → logprob: -5.323419570922852
    4. '   ' → logprob: -5.698419570922852
    5. '(A' → logprob: -7.573419570922852
    6. '(' → logprob: -7.823419570922852
    7. ' celles' → logprob: -8.323419570922852
    8. ' ' → logprob: -8.698419570922852
    9. 'l' → logprob: -9.573419570922852
    10. '```' → logprob: -9.948419570922852

Token 281: ' opérations' (ID: 102793)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.09168493002653122
    2. ' opérations' → logprob: -2.4666848182678223
    3. 'operations' → logprob: -6.091684818267822
    4. 'oper' → logprob: -8.71668529510498
    5. ' op' → logprob: -9.34168529510498
    6. ''op' → logprob: -9.84168529510498
    7. '```' → logprob: -10.34168529510498
    8. ' opér' → logprob: -10.71668529510498
    9. '   ' → logprob: -10.71668529510498
    10. ' ' → logprob: -10.84168529510498

Token 282: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030842842534184456
    2. 'result' → logprob: -3.6558427810668945
    3. ' result' → logprob: -5.4058427810668945
    4. 'max' → logprob: -11.030842781066895
    5. '
' → logprob: -11.530842781066895
    6. '    
' → logprob: -12.780842781066895
    7. ' resultat' → logprob: -13.030842781066895
    8. '(result' → logprob: -13.405842781066895
    9. ' max' → logprob: -13.530842781066895
    10. '_result' → logprob: -13.780842781066895

Token 283: '   ' (ID: 271)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.8116899132728577
    2. '   ' → logprob: -0.9366899132728577
    3. 'result' → logprob: -1.811689853668213
    4. ' max' → logprob: -8.311690330505371
    5. 'max' → logprob: -8.811690330505371
    6. ' resultat' → logprob: -8.936690330505371
    7. ' résultat' → logprob: -11.061690330505371
    8. ' res' → logprob: -11.561690330505371
    9. 'res' → logprob: -12.186690330505371
    10. '_result' → logprob: -12.436690330505371

Token 284: ' maximum' (ID: 10562)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.004315110854804516
    2. ' result' → logprob: -5.50431489944458
    3. 'max' → logprob: -8.504315376281738
    4. 'res' → logprob: -11.254315376281738
    5. 'print' → logprob: -11.754315376281738
    6. ' max' → logprob: -12.629315376281738
    7. '   ' → logprob: -12.754315376281738
    8. ' resultat' → logprob: -12.754315376281738
    9. 'C' → logprob: -13.129315376281738
    10. 'rés' → logprob: -14.379315376281738

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11667579412460327
    2. '_operation' → logprob: -2.366675853729248
    3. '=' → logprob: -4.491675853729248
    4. '_value' → logprob: -5.866675853729248
    5. '_val' → logprob: -6.991675853729248
    6. '_op' → logprob: -7.241675853729248
    7. '_' → logprob: -7.741675853729248
    8. '_result' → logprob: -8.99167537689209
    9. '=_' → logprob: -9.86667537689209
    10. '   ' → logprob: -10.86667537689209

Token 286: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.06196768581867218
    2. ' compute' → logprob: -2.811967611312866
    3. '.compute' → logprob: -19.686967849731445
    4. '   ' → logprob: -19.936967849731445
    5. '_compute' → logprob: -20.561967849731445
    6. 'calculate' → logprob: -20.936967849731445
    7. 'computer' → logprob: -21.186967849731445
    8. ' ' → logprob: -21.186967849731445
    9. 'comput' → logprob: -22.436967849731445
    10. 'max' → logprob: -23.936967849731445

Token 287: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -4.842555426876061e-06
    2. 'max' → logprob: -12.250004768371582
    3. '(max' → logprob: -19.3750057220459
    4. 'Max' → logprob: -19.3750057220459
    5. '_MAX' → logprob: -19.6250057220459
    6. ' max' → logprob: -20.0000057220459
    7. '_min' → logprob: -20.2500057220459
    8. '_' → logprob: -20.6250057220459
    9. '_Max' → logprob: -21.8750057220459
    10. '```' → logprob: -22.3750057220459

Token 288: '_operation' (ID: 77985)
  Prédit: '_operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operation' → logprob: -6.704273118884885e-07
    2. 'operation' → logprob: -14.750000953674316
    3. '_operator' → logprob: -16.875
    4. '_max' → logprob: -17.0
    5. '_operations' → logprob: -17.75
    6. '_oper' → logprob: -18.0
    7. '_op' → logprob: -18.0
    8. '(operation' → logprob: -18.375
    9. '_OPERATION' → logprob: -18.375
    10. 'Operation' → logprob: -18.5

Token 289: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -16.1250057220459
    4. '(B' → logprob: -17.3750057220459
    5. '(
' → logprob: -17.8750057220459
    6. '   ' → logprob: -18.6250057220459
    7. '(I' → logprob: -19.2500057220459
    8. '(C' → logprob: -19.5000057220459
    9. '(E' → logprob: -19.7500057220459
    10. '(AST' → logprob: -20.2500057220459

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001940040965564549
    2. ',B' → logprob: -8.87519359588623
    3. ' ,' → logprob: -9.87519359588623
    4. '   ' → logprob: -13.75019359588623
    5. 'B' → logprob: -14.37519359588623
    6. ' ' → logprob: -15.12519359588623
    7. ',
' → logprob: -15.25019359588623
    8. ',A' → logprob: -15.37519359588623
    9. ')' → logprob: -16.500194549560547
    10. ',b' → logprob: -16.625194549560547

Token 291: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07889066636562347
    2. ' B' → logprob: -2.578890562057495
    3. '   ' → logprob: -14.703890800476074
    4. ' ' → logprob: -15.078890800476074
    5. ')' → logprob: -16.453889846801758
    6. 'b' → logprob: -17.328889846801758
    7. '<|end|>' → logprob: -17.453889846801758
    8. '    ' → logprob: -17.828889846801758
    9. '	B' → logprob: -18.078889846801758
    10. '  ' → logprob: -18.641389846801758

Token 292: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005358502268791199
    2. ')
' → logprob: -5.255358695983887
    3. '   ' → logprob: -9.005358695983887
    4. ')
' → logprob: -13.380358695983887
    5. '()' → logprob: -15.755358695983887
    6. ' )' → logprob: -16.50535774230957
    7. ')

' → logprob: -16.63035774230957
    8. ' ' → logprob: -17.63035774230957
    9. '())' → logprob: -17.88035774230957
    10. ')`' → logprob: -18.25535774230957

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08021971583366394
    2. '
' → logprob: -2.5802197456359863
    3. '    
' → logprob: -6.705219745635986
    4. 'print' → logprob: -9.455219268798828
    5. '```' → logprob: -11.455219268798828
    6. '  
' → logprob: -12.205219268798828
    7. '\n' → logprob: -12.580219268798828
    8. '' → logprob: -13.455219268798828
    9. '
' → logprob: -13.580219268798828
    10. ' print' → logprob: -13.705219268798828

Token 294: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05739789083600044
    2. 'print' → logprob: -3.0573978424072266
    3. '
' → logprob: -4.807397842407227
    4. ' print' → logprob: -7.432397842407227
    5. '    
' → logprob: -11.932397842407227
    6. '```' → logprob: -12.682397842407227
    7. '
' → logprob: -14.557397842407227
    8. '	print' → logprob: -15.307397842407227
    9. '\n' → logprob: -15.932397842407227
    10. '\' → logprob: -16.682397842407227

Token 295: ' Aff' (ID: 13741)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0789509266614914
    2. 'print' → logprob: -2.578950881958008
    3. '   ' → logprob: -9.703950881958008
    4. '```' → logprob: -16.703950881958008
    5. '	print' → logprob: -17.953950881958008
    6. 'pr' → logprob: -18.328950881958008
    7. ' prin' → logprob: -19.203950881958008
    8. 'Print' → logprob: -19.328950881958008
    9. ' return' → logprob: -19.703950881958008
    10. '    ' → logprob: -19.703950881958008

Token 296: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0005164555623196065
    2. '   ' → logprob: -8.500516891479492
    3. 'ich' → logprob: -8.625516891479492
    4. 'iche' → logprob: -9.500516891479492
    5. 'ichage' → logprob: -10.375516891479492
    6. '#' → logprob: -10.750516891479492
    7. 'ichier' → logprob: -13.875516891479492
    8. '  ' → logprob: -14.000516891479492
    9. '    ' → logprob: -14.250516891479492
    10. '```' → logprob: -14.250516891479492

Token 297: ' le' (ID: 505)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0009999402100220323
    2. '(' → logprob: -7.125999927520752
    3. 'maximum' → logprob: -8.87600040435791
    4. 'max' → logprob: -10.25100040435791
    5. '(f' → logprob: -11.00100040435791
    6. ' maximum' → logprob: -13.25100040435791
    7. '()' → logprob: -14.12600040435791
    8. '("' → logprob: -14.50100040435791
    9. '(
' → logprob: -15.25100040435791
    10. ' (' → logprob: -16.250999450683594

Token 298: ' résultat' (ID: 62556)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.31822240352630615
    2. ' maximum' → logprob: -1.4432224035263062
    3. '(max' → logprob: -3.5682225227355957
    4. '(' → logprob: -5.443222522735596
    5. ' résultat' → logprob: -6.193222522735596
    6. 'max' → logprob: -6.943222522735596
    7. 'result' → logprob: -7.568222522735596
    8. ' maximale' → logprob: -9.568222045898438
    9. ' resultat' → logprob: -10.068222045898438
    10. 'rés' → logprob: -10.193222045898438

Token 299: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01188692171126604
    2. 'print' → logprob: -4.886887073516846
    3. '(print' → logprob: -6.511887073516846
    4. '
' → logprob: -6.886887073516846
    5. ' print' → logprob: -7.136887073516846
    6. '(' → logprob: -7.261887073516846
    7. '    
' → logprob: -9.011886596679688
    8. '(max' → logprob: -9.761886596679688
    9. '(
' → logprob: -10.636886596679688
    10. '	print' → logprob: -11.386886596679688

Token 300: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0192475318908691
    2. ' l' → logprob: -1.3942475318908691
    3. '   ' → logprob: -1.8942475318908691
    4. ' la' → logprob: -2.769247531890869
    5. 'la' → logprob: -3.394247531890869
    6. ' print' → logprob: -3.519247531890869
    7. '_aff' → logprob: -3.644247531890869
    8. 'l' → logprob: -3.769247531890869
    9. 'aff' → logprob: -4.394247531890869
    10. ' ' → logprob: -4.644247531890869

Token 301: ''utilisateur' (ID: 140803)
  Prédit: ''écran'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.5947086811065674
    2. 'a' → logprob: -0.9697086811065674
    3. ''utilisateur' → logprob: -3.3447086811065674
    4. 'e' → logprob: -3.8447086811065674
    5. 'é' → logprob: -4.969708442687988
    6. '’écran' → logprob: -6.594708442687988
    7. 'i' → logprob: -7.344708442687988
    8. 'stdout' → logprob: -7.469708442687988
    9. ''aide' → logprob: -7.594708442687988
    10. 'eur' → logprob: -8.219708442687988

Token 302: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005341905169188976
    2. 'print' → logprob: -5.75534200668335
    3. ' print' → logprob: -6.75534200668335
    4. '
' → logprob: -7.25534200668335
    5. '(print' → logprob: -9.130341529846191
    6. '(' → logprob: -9.755341529846191
    7. '    
' → logprob: -9.880341529846191
    8. '```' → logprob: -10.380341529846191
    9. '\n' → logprob: -11.505341529846191
    10. '	print' → logprob: -11.755341529846191

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017100441036745906
    2. 'print' → logprob: -6.626709938049316
    3. ' print' → logprob: -7.876709938049316
    4. '```' → logprob: -12.626709938049316
    5. '
' → logprob: -13.751709938049316
    6. '    
' → logprob: -16.626710891723633
    7. '	print' → logprob: -17.001710891723633
    8. '   ' → logprob: -17.251710891723633
    9. '       ' → logprob: -18.251710891723633
    10. '\' → logprob: -18.501710891723633

Token 304: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04859191179275513
    2. ' print' → logprob: -3.0485918521881104
    3. '   ' → logprob: -12.298591613769531
    4. '```' → logprob: -17.92359161376953
    5. 'pr' → logprob: -18.92359161376953
    6. '	print' → logprob: -20.04859161376953
    7. 'Print' → logprob: -20.54859161376953
    8. '.print' → logprob: -21.42359161376953
    9. 'printf' → logprob: -21.42359161376953
    10. '(print' → logprob: -21.79859161376953

Token 305: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.10021012276411057
    2. '(' → logprob: -2.350210189819336
    3. '()' → logprob: -13.350210189819336
    4. '(f' → logprob: -14.350210189819336
    5. '(MAX' → logprob: -15.100210189819336
    6. ' (' → logprob: -15.100210189819336
    7. '(Max' → logprob: -15.350210189819336
    8. '(
' → logprob: -15.600210189819336
    9. '('' → logprob: -16.600210189819336
    10. 'maximum' → logprob: -16.725210189819336

Token 306: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.023975497111678123
    2. 'um' → logprob: -4.148975372314453
    3. '(max' → logprob: -5.773975372314453
    4. 'ax' → logprob: -6.148975372314453
    5. '   ' → logprob: -6.773975372314453
    6. 'maximum' → logprob: -7.398975372314453
    7. ')' → logprob: -8.148975372314453
    8. '(' → logprob: -8.398975372314453
    9. 'mum' → logprob: -9.648975372314453
    10. 'ium' → logprob: -10.523975372314453

Token 307: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')`' → logprob: -19.25
    5. '))' → logprob: -19.5
    6. '()' → logprob: -19.75
    7. '())' → logprob: -20.25
    8. '```' → logprob: -21.0
    9. ')}' → logprob: -21.125
    10. '')' → logprob: -21.125

Token 308: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02986677549779415
    2. '
' → logprob: -3.5298666954040527
    3. '\n' → logprob: -9.404867172241211
    4. ' if' → logprob: -11.279867172241211
    5. '```' → logprob: -11.529867172241211
    6. '<|end|>' → logprob: -12.779867172241211
    7. 'main' → logprob: -12.904867172241211
    8. '  
' → logprob: -13.404867172241211
    9. '\
' → logprob: -13.779867172241211
    10. '

' → logprob: -13.779867172241211

Token 309: ' Ex' (ID: 1771)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00033546582562848926
    2. ' if' → logprob: -8.000335693359375
    3. 'main' → logprob: -18.250335693359375
    4. '__' → logprob: -19.250335693359375
    5. 'If' → logprob: -19.875335693359375
    6. '```' → logprob: -20.125335693359375
    7. 'i' → logprob: -20.625335693359375
    8. '#' → logprob: -21.000335693359375
    9. '_' → logprob: -23.375335693359375
    10. 'ifdef' → logprob: -23.750335693359375

Token 310: 'éc' (ID: 5675)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07286565750837326
    2. 'ecute' → logprob: -2.8228657245635986
    3. 'ec' → logprob: -4.9478654861450195
    4. 'ecut' → logprob: -6.6978654861450195
    5. 'éc' → logprob: -6.9478654861450195
    6. 'ecu' → logprob: -7.3228654861450195
    7. 'e' → logprob: -7.4478654861450195
    8. 'ecution' → logprob: -8.94786548614502
    9. 'ecutable' → logprob: -9.57286548614502
    10. ' if' → logprob: -10.82286548614502

Token 311: 'uter' (ID: 23469)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24806863069534302
    2. 'ecute' → logprob: -1.6230685710906982
    3. 'ec' → logprob: -4.498068809509277
    4. 'ecut' → logprob: -4.998068809509277
    5. 'ute' → logprob: -7.123068809509277
    6. ' if' → logprob: -7.123068809509277
    7. 'ecution' → logprob: -7.373068809509277
    8. 'éc' → logprob: -7.623068809509277
    9. 'ecu' → logprob: -7.748068809509277
    10. 'uter' → logprob: -7.998068809509277

Token 312: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.022334832698106766
    2. ' if' → logprob: -4.022335052490234
    3. ' main' → logprob: -6.022335052490234
    4. 'main' → logprob: -6.397335052490234
    5. '(main' → logprob: -10.272335052490234
    6. '_main' → logprob: -10.647335052490234
    7. '(
' → logprob: -11.772335052490234
    8. '()' → logprob: -12.022335052490234
    9. '__' → logprob: -12.272335052490234
    10. '```' → logprob: -12.647335052490234

Token 313: ' fonction' (ID: 17610)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.20057031512260437
    2. 'if' → logprob: -2.4505703449249268
    3. 'main' → logprob: -2.4505703449249268
    4. ' if' → logprob: -5.950570106506348
    5. '__' → logprob: -5.950570106506348
    6. ' program' → logprob: -6.950570106506348
    7. '_main' → logprob: -7.450570106506348
    8. 'program' → logprob: -7.450570106506348
    9. ' programme' → logprob: -7.575570106506348
    10. ' script' → logprob: -7.700570106506348

Token 314: ' principale' (ID: 68926)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3314014971256256
    2. ' main' → logprob: -1.5814014673233032
    3. 'if' → logprob: -2.5814015865325928
    4. ' if' → logprob: -7.331401348114014
    5. 'principal' → logprob: -9.831401824951172
    6. ' principale' → logprob: -11.456401824951172
    7. ' principal' → logprob: -12.581401824951172
    8. '_main' → logprob: -13.331401824951172
    9. '__' → logprob: -13.831401824951172
    10. 'si' → logprob: -13.831401824951172

Token 315: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.253707617521286
    2. '
' → logprob: -1.5037076473236084
    3. ' if' → logprob: -6.378707408905029
    4. '

' → logprob: -9.878707885742188
    5. '
' → logprob: -10.878707885742188
    6. ' 
' → logprob: -13.003707885742188
    7. '  
' → logprob: -13.253707885742188
    8. '    
' → logprob: -13.253707885742188
    9. '```' → logprob: -13.378707885742188
    10. '\n' → logprob: -13.878707885742188

Token 316: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.693158745765686
    2. ' __' → logprob: -0.693158745765686
    3. ' ' → logprob: -11.943159103393555
    4. 'name' → logprob: -12.943159103393555
    5. '_name' → logprob: -13.443159103393555
    6. '_' → logprob: -14.193159103393555
    7. ' ' → logprob: -15.818159103393555
    8. '___' → logprob: -16.193159103393555
    9. '/__' → logprob: -16.193159103393555
    10. ' ' → logprob: -16.693159103393555

Token 317: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2015700340270996
    2. ' __' → logprob: -1.7015700340270996
    3. '_' → logprob: -9.826570510864258
    4. '.py' → logprob: -10.826570510864258
    5. ' ' → logprob: -11.076570510864258
    6. 'est' → logprob: -11.326570510864258
    7. ' ==' → logprob: -11.576570510864258
    8. 'if' → logprob: -11.701570510864258
    9. '_name' → logprob: -11.826570510864258
    10. ' (__' → logprob: -12.201570510864258

Token 318: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.27799418568611145
    2. ' __' → logprob: -1.652994155883789
    3. 'est' → logprob: -3.402994155883789
    4. ' est' → logprob: -4.777994155883789
    5. ' ==' → logprob: -5.152994155883789
    6. '==' → logprob: -6.027994155883789
    7. 'name' → logprob: -7.902994155883789
    8. 'if' → logprob: -8.527994155883789
    9. ' is' → logprob: -8.902994155883789
    10. ' ' → logprob: -9.152994155883789

Token 319: ' exécut' (ID: 165350)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.22583776712417603
    2. '__' → logprob: -1.6008377075195312
    3. '_name' → logprob: -8.100837707519531
    4. 'name' → logprob: -10.475837707519531
    5. '_' → logprob: -10.850837707519531
    6. '_le' → logprob: -10.975837707519531
    7. ' exécut' → logprob: -11.225837707519531
    8. ' _' → logprob: -11.975837707519531
    9. ' "__' → logprob: -12.100837707519531
    10. '_main' → logprob: -12.725837707519531

Token 320: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04547492787241936
    2. 'é' → logprob: -3.1704750061035156
    3. ' __' → logprob: -6.670475006103516
    4. '_' → logprob: -7.920475006103516
    5. ' en' → logprob: -8.045475006103516
    6. 'd' → logprob: -8.795475006103516
    7. '   ' → logprob: -9.170475006103516
    8. 'ed' → logprob: -9.545475006103516
    9. 'able' → logprob: -10.670475006103516
    10. 'if' → logprob: -10.670475006103516

Token 321: ' comme' (ID: 7971)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.038105178624391556
    2. '__' → logprob: -4.038105010986328
    3. ' directement' → logprob: -5.038105010986328
    4. 'direct' → logprob: -5.288105010986328
    5. ' __' → logprob: -5.538105010986328
    6. '_direct' → logprob: -6.788105010986328
    7. '_en' → logprob: -7.288105010986328
    8. '```' → logprob: -7.413105010986328
    9. ' directly' → logprob: -7.538105010986328
    10. ' comme' → logprob: -8.038105010986328

Token 322: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.28802457451820374
    2. ' __' → logprob: -1.4130245447158813
    3. ' le' → logprob: -5.538024425506592
    4. ' un' → logprob: -5.913024425506592
    5. '_le' → logprob: -10.16302490234375
    6. ' l' → logprob: -10.28802490234375
    7. 'un' → logprob: -10.28802490234375
    8. ' ' → logprob: -10.66302490234375
    9. ' script' → logprob: -11.03802490234375
    10. 'le' → logprob: -11.53802490234375

Token 323: ' principal' (ID: 10589)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.528805673122406
    2. 'if' → logprob: -0.903805673122406
    3. ' if' → logprob: -5.528805732727051
    4. '

' → logprob: -7.528805732727051
    5. '\n' → logprob: -7.778805732727051
    6. ' 
' → logprob: -8.15380573272705
    7. '```' → logprob: -8.52880573272705
    8. '  
' → logprob: -9.15380573272705
    9. '    
' → logprob: -10.27880573272705
    10. ':
' → logprob: -10.27880573272705

Token 324: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07173765450716019
    2. 'if' → logprob: -2.696737766265869
    3. '

' → logprob: -6.571737766265869
    4. ' if' → logprob: -8.196737289428711
    5. ' 
' → logprob: -10.071737289428711
    6. '
' → logprob: -10.321737289428711
    7. '  
' → logprob: -10.696737289428711
    8. '    
' → logprob: -11.696737289428711
    9. '\n' → logprob: -11.696737289428711
    10. '```' → logprob: -12.321737289428711

Token 325: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.7432603272027336e-06
    2. ' if' → logprob: -13.500001907348633
    3. '
' → logprob: -15.250001907348633
    4. '```' → logprob: -17.625001907348633
    5. 'i' → logprob: -21.000001907348633
    6. '\n' → logprob: -21.125001907348633
    7. '\
' → logprob: -21.875001907348633
    8. '\' → logprob: -22.375001907348633
    9. '  
' → logprob: -22.500001907348633
    10. '

' → logprob: -22.500001907348633

Token 326: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0016275715315714478
    2. '__' → logprob: -6.626627445220947
    3. ' ' → logprob: -8.376627922058105
    4. ' ' → logprob: -9.626627922058105
    5. ' ' → logprob: -13.251627922058105
    6. ' _' → logprob: -13.626627922058105
    7. ' ‌' → logprob: -14.126627922058105
    8. ' ​' → logprob: -14.501627922058105
    9. '<|end|>' → logprob: -15.376627922058105
    10. '_' → logprob: -15.501627922058105

Token 327: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10372799634933472
    2. '__' → logprob: -2.7287280559539795
    3. ' __' → logprob: -4.1037278175354
    4. '==' → logprob: -4.2287278175354
    5. 'name' → logprob: -6.3537278175354
    6. '=="' → logprob: -8.728728294372559
    7. ' =="' → logprob: -9.478728294372559
    8. '_' → logprob: -10.228728294372559
    9. '=='' → logprob: -10.353728294372559
    10. ' =' → logprob: -10.853728294372559

Token 328: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.5048530030981055e-06
    2. '==' → logprob: -13.625001907348633
    3. '_' → logprob: -15.625001907348633
    4. '___' → logprob: -16.750001907348633
    5. '____' → logprob: -17.000001907348633
    6. '__.__' → logprob: -17.750001907348633
    7. ' ==' → logprob: -18.000001907348633
    8. '__
' → logprob: -18.750001907348633
    9. ' __' → logprob: -18.875001907348633
    10. '=="' → logprob: -19.375001907348633

Token 329: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0036593338008970022
    2. '==' → logprob: -5.878659248352051
    3. ' ==' → logprob: -7.253659248352051
    4. '=="' → logprob: -8.87865924835205
    5. '=='' → logprob: -12.75365924835205
    6. '_' → logprob: -13.00365924835205
    7. '=' → logprob: -14.00365924835205
    8. '___' → logprob: -14.25365924835205
    9. ' __' → logprob: -15.75365924835205
    10. '____' → logprob: -16.128660202026367

Token 330: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3153824806213379
    2. ''' → logprob: -1.315382480621338
    3. ' "__' → logprob: -6.315382480621338
    4. ' '__' → logprob: -8.44038200378418
    5. '__' → logprob: -9.69038200378418
    6. ' "' → logprob: -10.56538200378418
    7. ' '' → logprob: -12.19038200378418
    8. '"user' → logprob: -14.31538200378418
    9. ' __' → logprob: -15.94038200378418
    10. ''s' → logprob: -16.56538200378418

Token 331: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. 'name' → logprob: -17.75
    4. '_main' → logprob: -20.125
    5. '	main' → logprob: -20.75
    6. 'ma' → logprob: -21.25
    7. 'mai' → logprob: -22.5
    8. 'maine' → logprob: -23.0
    9. '-main' → logprob: -24.0
    10. 'm' → logprob: -24.0

Token 332: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008615399710834026
    2. '__":
' → logprob: -4.758615493774414
    3. '__["' → logprob: -15.008615493774414
    4. '__("' → logprob: -15.633615493774414
    5. '_"' → logprob: -15.758615493774414
    6. '"' → logprob: -16.383615493774414
    7. '__':
' → logprob: -16.383615493774414
    8. '__",' → logprob: -16.883615493774414
    9. '```' → logprob: -17.883615493774414
    10. '_' → logprob: -17.883615493774414

Token 333: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.24455499649047852
    2. '__' → logprob: -1.7445549964904785
    3. ' "__' → logprob: -3.4945549964904785
    4. ' __' → logprob: -4.8695549964904785
    5. ' main' → logprob: -6.2445549964904785
    6. ''' → logprob: -6.9945549964904785
    7. '   ' → logprob: -7.4945549964904785
    8. 'main' → logprob: -7.6195549964904785
    9. ' '__' → logprob: -8.61955451965332
    10. '_main' → logprob: -10.61955451965332

Token 334: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.547789674485102e-05
    2. ' main' → logprob: -10.250035285949707
    3. '	main' → logprob: -19.750036239624023
    4. '   ' → logprob: -20.375036239624023
    5. '_main' → logprob: -23.125036239624023
    6. '.main' → logprob: -24.125036239624023
    7. 'Main' → logprob: -24.250036239624023
    8. '(main' → logprob: -24.625036239624023
    9. 'mai' → logprob: -25.750036239624023
    10. 'ma' → logprob: -26.000036239624023

Token 335: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5585308074951172
    2. '
' → logprob: -1.5585308074951172
    3. '<|end|>' → logprob: -1.5585308074951172
    4. '\n' → logprob: -6.308530807495117
    5. '```' → logprob: -6.558530807495117
    6. '()
' → logprob: -6.683530807495117
    7. ')' → logprob: -6.808530807495117
    8. '(' → logprob: -7.308530807495117
    9. '<|end|>' → logprob: -8.558530807495117
    10. '(
' → logprob: -9.058530807495117


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 333
Tokens correctement prédits (1ère position, stricte): 126
Tokens correctement prédits (1ère position, avec adaptation): 134
Tokens correctement prédits (top 10): 244
Précision stricte (1ère position): 37.84%
Précision adaptée (1ère position): 40.24%
Précision (top 10): 73.27%
================================================================================
