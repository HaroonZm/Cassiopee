================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())   # On récupère le nombre de lignes
dico = {}
for truc in range(N):
    s = input()
    # pas besoin de vérifier si la clé y est déjà, on écrase
    dico[s] = True

print(len(list(dico)))  # On affiche juste le nombre d'éléments uniques, ça devrait suffire
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00035798799945041537
    2. '('' → logprob: -8.750357627868652
    3. '(N' → logprob: -9.125357627868652
    4. ''' → logprob: -11.000357627868652
    5. '(input' → logprob: -11.125357627868652
    6. '(
' → logprob: -11.250357627868652
    7. '()' → logprob: -11.375357627868652
    8. '("("' → logprob: -11.375357627868652
    9. '```' → logprob: -12.125357627868652
    10. '(`' → logprob: -12.375357627868652

Token 4: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4827296733856201
    2. ')' → logprob: -0.9827296733856201
    3. '()' → logprob: -5.107729911804199
    4. '())' → logprob: -6.732729911804199
    5. '(
' → logprob: -7.732729911804199
    6. '```' → logprob: -8.7327299118042
    7. '))' → logprob: -9.1077299118042
    8. '")' → logprob: -9.3577299118042
    9. '')' → logprob: -9.4827299118042
    10. '(

' → logprob: -9.9827299118042

Token 5: '  ' (ID: 256)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4905118942260742
    2. 'if' → logprob: -1.7405118942260742
    3. '\n' → logprob: -2.490511894226074
    4. '#' → logprob: -3.865511894226074
    5. 's' → logprob: -3.865511894226074
    6. '```' → logprob: -4.365511894226074
    7. '`' → logprob: -4.490511894226074
    8. '\' → logprob: -4.740511894226074
    9. ')' → logprob: -4.990511894226074
    10. 'print' → logprob: -5.115511894226074

Token 6: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2549606561660767
    2. 's' → logprob: -1.3799606561660767
    3. 'a' → logprob: -2.629960536956787
    4. '#' (adapté à ' #') → logprob: -2.629960536956787
    5. 'i' → logprob: -2.754960536956787
    6. '\n' → logprob: -2.879960536956787
    7. '[' → logprob: -3.379960536956787
    8. ' ' → logprob: -3.629960536956787
    9. 'if' → logprob: -3.754960536956787
    10. 'x' → logprob: -4.379960536956787

Token 7: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015723925083875656
    2. 'for' → logprob: -5.890723705291748
    3. ')' → logprob: -6.265723705291748
    4. ' \' → logprob: -6.515723705291748
    5. '<|end|>' → logprob: -6.765723705291748
    6. '\' → logprob: -7.015723705291748
    7. ' for' → logprob: -7.140723705291748
    8. ' )' → logprob: -7.140723705291748
    9. '#' → logprob: -7.140723705291748
    10. 'n' → logprob: -7.390723705291748

Token 8: ' récup' (ID: 62856)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0031934010330587626
    2. 'es' → logprob: -6.253193378448486
    3. 'ly' → logprob: -6.878193378448486
    4. 'el' → logprob: -9.378193855285645
    5. 'the' → logprob: -10.128193855285645
    6. 'line' → logprob: -10.378193855285645
    7. 'eline' → logprob: -11.378193855285645
    8. 't' → logprob: -11.503193855285645
    9. 'u' → logprob: -11.878193855285645
    10. 'l' → logprob: -12.003193855285645

Token 9: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.003335275687277317
    2. 'è' → logprob: -7.003335475921631
    3. 'p' → logprob: -7.378335475921631
    4. '```' → logprob: -7.628335475921631
    5. '`' → logprob: -8.003334999084473
    6. '\' → logprob: -8.628334999084473
    7. 'èrent' → logprob: -9.003334999084473
    8. 'ére' → logprob: -9.378334999084473
    9. '**' → logprob: -9.503334999084473
    10. 'er' → logprob: -9.503334999084473

Token 10: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016116833314299583
    2. 'l' → logprob: -4.641116619110107
    3. ' l' → logprob: -6.141116619110107
    4. '_' → logprob: -6.891116619110107
    5. ' la' → logprob: -7.391116619110107
    6. '  ' → logprob: -7.516116619110107
    7. ' ' → logprob: -8.016117095947266
    8. 's' → logprob: -8.141117095947266
    9. 'le' → logprob: -8.516117095947266
    10. ',' → logprob: -9.266117095947266

Token 11: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.042314037680625916
    2. ' nombre' → logprob: -3.417314052581787
    3. 'n' → logprob: -5.042314052581787
    4. ' ' → logprob: -7.042314052581787
    5. 'nom' → logprob: -8.042313575744629
    6. '\n' → logprob: -8.292313575744629
    7. 's' → logprob: -8.667313575744629
    8. 'a' → logprob: -9.542313575744629
    9. 'nb' → logprob: -9.667313575744629
    10. ' n' → logprob: -10.542313575744629

Token 12: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16808797419071198
    2. '_' → logprob: -3.043087959289551
    3. ')' → logprob: -3.168087959289551
    4. 's' → logprob: -3.793087959289551
    5. ' )' → logprob: -4.043087959289551
    6. '<|end|>' → logprob: -5.168087959289551
    7. '  ' → logprob: -5.543087959289551
    8. ' de' → logprob: -5.668087959289551
    9. ',' → logprob: -6.293087959289551
    10. 'd' → logprob: -6.543087959289551

Token 13: ' lignes' (ID: 81687)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.791591465473175
    2. ' notes' → logprob: -2.0415914058685303
    3. ' test' → logprob: -2.7915914058685303
    4. 'val' → logprob: -3.1665914058685303
    5. 'person' → logprob: -3.2915914058685303
    6. 'notes' → logprob: -3.4165914058685303
    7. 'é' → logprob: -3.6665914058685303
    8. ' participants' → logprob: -3.9165914058685303
    9. 'participants' → logprob: -3.9165914058685303
    10. ' cas' → logprob: -4.416591644287109

Token 14: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.09684234857559204
    2. '
' → logprob: -2.7218422889709473
    3. 'for' → logprob: -3.9718422889709473
    4. '\' → logprob: -6.096842288970947
    5. ' for' → logprob: -6.721842288970947
    6. '```' → logprob: -6.721842288970947
    7. 'newline' → logprob: -6.846842288970947
    8. '\r' → logprob: -7.596842288970947
    9. '#' → logprob: -8.471842765808105
    10. '<|end|>' → logprob: -8.596842765808105

Token 15: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011629493907094002
    2. ' for' → logprob: -5.136629581451416
    3. '\n' → logprob: -5.386629581451416
    4. '
' → logprob: -7.386629581451416
    5. 'n' → logprob: -8.636629104614258
    6. '#' → logprob: -9.886629104614258
    7. '\' → logprob: -10.011629104614258
    8. 's' → logprob: -10.261629104614258
    9. '```' → logprob: -10.386629104614258
    10. 'f' → logprob: -10.511629104614258

Token 16: 'ico' (ID: 2424)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8638356328010559
    2. ' =' → logprob: -1.1138355731964111
    3. '=' → logprob: -2.238835573196411
    4. 'e' → logprob: -2.488835573196411
    5. 'ic' → logprob: -4.48883581161499
    6. '[i' → logprob: -4.61383581161499
    7. 'a' → logprob: -4.86383581161499
    8. 'ata' → logprob: -5.11383581161499
    9. '[' → logprob: -5.36383581161499
    10. 'ict' → logprob: -5.61383581161499

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1292756348848343
    2. '=' → logprob: -3.1292755603790283
    3. ' =' → logprob: -3.2542755603790283
    4. '_' → logprob: -3.3792755603790283
    5. '[]' → logprob: -6.504275798797607
    6. 'd' → logprob: -7.504275798797607
    7. '\[' → logprob: -8.00427532196045
    8. ' ' → logprob: -8.50427532196045
    9. '[n' → logprob: -8.62927532196045
    10. '['' → logprob: -9.00427532196045

Token 18: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.004240212496370077
    2. ' {}' → logprob: -5.629240036010742
    3. 'dict' → logprob: -7.379240036010742
    4. ' dict' → logprob: -11.504240036010742
    5. '[]' → logprob: -12.629240036010742
    6. '{' → logprob: -13.879240036010742
    7. ' []' → logprob: -15.254240036010742
    8. '={}' → logprob: -15.254240036010742
    9. 'default' → logprob: -15.379240036010742
    10. '[' → logprob: -15.379240036010742

Token 19: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.061893280595541
    2. '
' → logprob: -3.1868932247161865
    3. '\n' → logprob: -5.061893463134766
    4. 'f' → logprob: -5.561893463134766
    5. ' for' → logprob: -5.561893463134766
    6. '\' → logprob: -6.311893463134766
    7. 'n' → logprob: -6.936893463134766
    8. '' → logprob: -7.436893463134766
    9. ' 
' → logprob: -7.936893463134766
    10. '```' → logprob: -8.061893463134766

Token 20: ' truc' (ID: 58342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00508634140715003
    2. ' i' → logprob: -5.630086421966553
    3. '  ' → logprob: -6.630086421966553
    4. ' _' → logprob: -9.505085945129395
    5. '_' → logprob: -10.380085945129395
    6. ' line' → logprob: -10.380085945129395
    7. 'i' → logprob: -12.005085945129395
    8. ' ligne' → logprob: -12.380085945129395
    9. ' N' → logprob: -12.755085945129395
    10. ' d' → logprob: -12.755085945129395

Token 21: ' in' (ID: 306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3091382682323456
    2. ' in' → logprob: -1.434138298034668
    3. '_' → logprob: -3.934138298034668
    4. '  ' → logprob: -5.809138298034668
    5. 'in' → logprob: -6.434138298034668
    6. '[' → logprob: -6.684138298034668
    7. '   ' → logprob: -7.059138298034668
    8. ' i' → logprob: -8.184138298034668
    9. ' en' → logprob: -8.309138298034668
    10. ' :' → logprob: -9.434138298034668

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11302854865789413
    2. 'range' → logprob: -2.2380285263061523
    3. ' input' → logprob: -8.863028526306152
    4. ' ' → logprob: -10.363028526306152
    5. 'input' → logprob: -11.113028526306152
    6. '(range' → logprob: -12.488028526306152
    7. 'rang' → logprob: -12.488028526306152
    8. '	range' → logprob: -13.238028526306152
    9. ' rang' → logprob: -13.363028526306152
    10. 'd' → logprob: -13.988028526306152

Token 23: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0026461677625775337
    2. '(N' → logprob: -6.002645969390869
    3. ' (' → logprob: -9.127646446228027
    4. '(len' → logprob: -10.752646446228027
    5. '(
' → logprob: -10.877646446228027
    6. '(n' → logprob: -11.002646446228027
    7. '(`' → logprob: -13.752646446228027
    8. '(

' → logprob: -13.877646446228027
    9. '(tr' → logprob: -14.252646446228027
    10. '(int' → logprob: -14.877646446228027

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012916672974824905
    2. ')' → logprob: -4.387916564941406
    3. ' ):' → logprob: -8.137916564941406
    4. ':' → logprob: -9.762916564941406
    5. '+' → logprob: -10.387916564941406
    6. '):
' → logprob: -11.137916564941406
    7. ' )' → logprob: -12.387916564941406
    8. ',' → logprob: -13.387916564941406
    9. '+:' → logprob: -14.012916564941406
    10. ' :' → logprob: -14.012916564941406

Token 25: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.8643999695777893
    2. '   ' → logprob: -1.4893999099731445
    3. ' ' → logprob: -1.4893999099731445
    4. ' :' → logprob: -2.8643999099731445
    5. ':' → logprob: -3.3643999099731445
    6. '     
' → logprob: -4.8643999099731445
    7. '    
' → logprob: -5.2393999099731445
    8. '  ' → logprob: -5.3643999099731445
    9. '[' → logprob: -5.3643999099731445
    10. ' :
' → logprob: -6.1143999099731445

Token 26: ' s' (ID: 265)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.620968759059906
    2. ' line' → logprob: -1.2459688186645508
    3. '    ' → logprob: -2.745968818664551
    4. '   ' → logprob: -2.995968818664551
    5. ' nom' → logprob: -4.245968818664551
    6. 'ligne' → logprob: -4.620968818664551
    7. ' input' → logprob: -4.745968818664551
    8. 'line' → logprob: -5.620968818664551
    9. ' data' → logprob: -5.620968818664551
    10. ' ' → logprob: -5.745968818664551

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2955152094364166
    2. 'tr' → logprob: -1.4205151796340942
    3. 'tring' → logprob: -5.170515060424805
    4. '=' → logprob: -5.545515060424805
    5. '=input' → logprob: -5.795515060424805
    6. 'trip' → logprob: -8.045515060424805
    7. 'input' → logprob: -8.295515060424805
    8. ' ' → logprob: -8.670515060424805
    9. '_' → logprob: -8.670515060424805
    10. 'trin' → logprob: -8.920515060424805

Token 28: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.14270615577697754
    2. 'input' → logprob: -2.0177061557769775
    3. ' ' → logprob: -11.392705917358398
    4. '=input' → logprob: -11.642705917358398
    5. '(input' → logprob: -12.767705917358398
    6. '	input' → logprob: -13.392705917358398
    7. ' str' → logprob: -13.642705917358398
    8. 'int' → logprob: -14.017705917358398
    9. 'str' → logprob: -14.142705917358398
    10. ' int' → logprob: -14.142705917358398

Token 29: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008280985057353973
    2. '(' → logprob: -4.8832807540893555
    3. ')' → logprob: -8.008280754089355
    4. '('' → logprob: -9.383280754089355
    5. '("")' → logprob: -10.258280754089355
    6. ''' → logprob: -10.383280754089355
    7. '```' → logprob: -10.383280754089355
    8. '())' → logprob: -10.508280754089355
    9. '("("' → logprob: -10.508280754089355
    10. '().' → logprob: -10.758280754089355

Token 30: '   ' (ID: 271)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.1256188601255417
    2. '.' → logprob: -2.7506189346313477
    3. ' =' → logprob: -3.5006189346313477
    4. '.strip' → logprob: -5.000618934631348
    5. 's' → logprob: -5.750618934631348
    6. '=' → logprob: -5.875618934631348
    7. ')' → logprob: -5.875618934631348
    8. '<|end|>' → logprob: -6.125618934631348
    9. '.s' → logprob: -6.375618934631348
    10. 'split' → logprob: -7.125618934631348

Token 31: ' #' (ID: 1069)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.5094755291938782
    2. ' =' → logprob: -1.3844754695892334
    3. '=' → logprob: -2.8844754695892334
    4. '.' → logprob: -3.2594754695892334
    5. 'split' → logprob: -4.2594757080078125
    6. 's' → logprob: -4.5094757080078125
    7. 'spl' → logprob: -5.2594757080078125
    8. '.strip' → logprob: -5.3844757080078125
    9. ')' → logprob: -5.5094757080078125
    10. '[' → logprob: -6.2594757080078125

Token 32: ' pas' (ID: 2173)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7360897660255432
    2. 'if' → logprob: -1.3610897064208984
    3. ' mots' → logprob: -3.1110897064208984
    4. ' parts' → logprob: -3.2360897064208984
    5. 'tokens' → logprob: -3.2360897064208984
    6. ' words' → logprob: -3.4860897064208984
    7. 'parts' → logprob: -3.7360897064208984
    8. 'words' → logprob: -3.9860897064208984
    9. 'for' → logprob: -4.236089706420898
    10. '   ' → logprob: -4.486089706420898

Token 33: ' besoin' (ID: 27703)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06495227664709091
    2. ' ' → logprob: -2.9399523735046387
    3. '    ' → logprob: -5.814952373504639
    4. ' s' → logprob: -6.314952373504639
    5. '   ' → logprob: -7.189952373504639
    6. 'space' → logprob: -7.314952373504639
    7. ' encore' → logprob: -7.314952373504639
    8. 'se' → logprob: -7.439952373504639
    9. 'sible' → logprob: -7.939952373504639
    10. 'sage' → logprob: -8.06495189666748

Token 34: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.090354323387146
    2. ' ' → logprob: -1.215354323387146
    3. ' d' → logprob: -2.4653544425964355
    4. '    ' → logprob: -2.5903544425964355
    5. '<|end|>' → logprob: -2.7153544425964355
    6. '   ' → logprob: -3.0903544425964355
    7. 'de' → logprob: -3.4653544425964355
    8. 'd' → logprob: -3.4653544425964355
    9. '  ' → logprob: -5.2153544425964355
    10. '.' → logprob: -5.2153544425964355

Token 35: ' vérifier' (ID: 93671)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0057883262634277
    2. 'faire' → logprob: -2.3807883262634277
    3. 'r' → logprob: -2.6307883262634277
    4. 's' → logprob: -2.7557883262634277
    5. 'contin' → logprob: -2.8807883262634277
    6. 'trait' → logprob: -3.2557883262634277
    7. 'l' → logprob: -3.7557883262634277
    8. 'd' → logprob: -4.005788326263428
    9. 'spl' → logprob: -4.255788326263428
    10. 'tr' → logprob: -4.380788326263428

Token 36: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6752404570579529
    2. ' if' → logprob: -1.6752405166625977
    3. ' si' → logprob: -2.5502405166625977
    4. 's' → logprob: -2.6752405166625977
    5. '<|end|>' → logprob: -3.5502405166625977
    6. ' s' → logprob: -3.5502405166625977
    7. '  ' → logprob: -3.8002405166625977
    8. 'if' → logprob: -4.175240516662598
    9. '_' → logprob: -4.425240516662598
    10. ' la' → logprob: -4.675240516662598

Token 37: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.47528690099716187
    2. 's' → logprob: -0.9752869009971619
    3. ' truc' → logprob: -7.600286960601807
    4. ' ' → logprob: -8.600286483764648
    5. ' le' → logprob: -8.600286483764648
    6. 'tr' → logprob: -9.225286483764648
    7. ' la' → logprob: -9.725286483764648
    8. ' '' → logprob: -10.537786483764648
    9. ' "' → logprob: -10.725286483764648
    10. ''s' → logprob: -11.100286483764648

Token 38: ' clé' (ID: 83188)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3012959957122803
    2. ' s' → logprob: -2.1762959957122803
    3. 'clé' → logprob: -2.8012959957122803
    4. ' clé' → logprob: -2.9262959957122803
    5. ' key' → logprob: -5.301296234130859
    6. ' mot' → logprob: -5.676296234130859
    7. 'key' → logprob: -5.676296234130859
    8. ' ' → logprob: -6.051296234130859
    9. 'mot' → logprob: -6.176296234130859
    10. 'cl' → logprob: -6.676296234130859

Token 39: ' y' (ID: 342)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9938446879386902
    2. ' existe' → logprob: -1.618844747543335
    3. ' in' → logprob: -1.743844747543335
    4. ' s' → logprob: -2.743844747543335
    5. ' ' → logprob: -3.243844747543335
    6. ' est' → logprob: -3.493844747543335
    7. ' is' → logprob: -3.493844747543335
    8. ' exists' → logprob: -3.618844747543335
    9. 'in' → logprob: -4.243844509124756
    10. ' ex' → logprob: -4.618844509124756

Token 40: ' est' (ID: 893)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.6751317977905273
    2. 'a' → logprob: -0.9251317977905273
    3. ''ex' → logprob: -3.9251317977905273
    4. ' existe' → logprob: -3.9251317977905273
    5. 'exist' → logprob: -4.425131797790527
    6. 'e' → logprob: -4.800131797790527
    7. 'eux' → logprob: -4.925131797790527
    8. 'es' → logprob: -5.050131797790527
    9. '_ex' → logprob: -5.925131797790527
    10. 'est' → logprob: -6.175131797790527

Token 41: ' déjà' (ID: 21229)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37836602330207825
    2. ''' → logprob: -2.628365993499756
    3. ' y' → logprob: -2.753365993499756
    4. 's' → logprob: -3.378365993499756
    5. ' in' → logprob: -3.378365993499756
    6. ' d' → logprob: -3.628365993499756
    7. '  ' → logprob: -4.003365993499756
    8. '   ' → logprob: -4.503365993499756
    9. ' '' → logprob: -4.878365993499756
    10. 'd' → logprob: -5.253365993499756

Token 42: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5792664289474487
    2. 'd' → logprob: -1.4542664289474487
    3. ' d' → logprob: -3.0792665481567383
    4. '<|end|>' → logprob: -3.0792665481567383
    5. '  ' → logprob: -3.2042665481567383
    6. '   ' → logprob: -3.7042665481567383
    7. 's' → logprob: -4.579266548156738
    8. ',' → logprob: -4.704266548156738
    9. '    ' → logprob: -5.579266548156738
    10. 'y' → logprob: -5.579266548156738

Token 43: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1755390167236328
    2. ' car' → logprob: -1.8005390167236328
    3. 'car' → logprob: -2.050539016723633
    4. '   ' → logprob: -2.175539016723633
    5. 'd' → logprob: -2.550539016723633
    6. '  ' → logprob: -2.675539016723633
    7. 's' → logprob: -3.425539016723633
    8. ' d' → logprob: -3.675539016723633
    9. ' puisque' → logprob: -4.675539016723633
    10. ' parce' → logprob: -5.050539016723633

Token 44: ' écr' (ID: 33691)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7651418447494507
    2. 'pe' → logprob: -1.5151418447494507
    3. ' peut' → logprob: -2.8901419639587402
    4. 'rem' → logprob: -3.0151419639587402
    5. 'é' → logprob: -3.2651419639587402
    6. 'aj' → logprob: -3.3901419639587402
    7. 'ra' → logprob: -3.5151419639587402
    8. 'pour' → logprob: -4.26514196395874
    9. ' a' → logprob: -4.51514196395874
    10. 'met' → logprob: -4.89014196395874

Token 45: 'ase' (ID: 618)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.2158159464597702
    2. 'ivit' → logprob: -2.840816020965576
    3. 't' → logprob: -3.215816020965576
    4. 'oit' → logprob: -4.090816020965576
    5. 'vit' → logprob: -4.090816020965576
    6. 'v' → logprob: -4.465816020965576
    7. 'ite' → logprob: -4.590816020965576
    8. 'e' → logprob: -5.340816020965576
    9. 'rit' → logprob: -5.340816020965576
    10. '#' → logprob: -5.590816020965576

Token 46: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6991366147994995
    2. 'd' → logprob: -1.4491366147994995
    3. ' ' → logprob: -1.8241366147994995
    4. 's' → logprob: -3.699136734008789
    5. '<|end|>' → logprob: -3.949136734008789
    6. '  ' → logprob: -4.074136734008789
    7. ')' → logprob: -4.324136734008789
    8. '[' → logprob: -4.574136734008789
    9. ' d' → logprob: -5.324136734008789
    10. '    ' → logprob: -5.449136734008789

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5130739808082581
    2. '[' → logprob: -1.5130739212036133
    3. 'd' → logprob: -2.7630739212036133
    4. ' ' → logprob: -3.6380739212036133
    5. 's' → logprob: -4.263073921203613
    6. '<|end|>' → logprob: -4.263073921203613
    7. ')' → logprob: -4.513073921203613
    8. '  ' → logprob: -4.513073921203613
    9. ']' → logprob: -4.888073921203613
    10. '[]' → logprob: -5.263073921203613

Token 48: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.3336242437362671
    2. '[' → logprob: -1.958624243736267
    3. ' ' → logprob: -2.2086243629455566
    4. '  ' → logprob: -4.583624362945557
    5. '   ' → logprob: -5.083624362945557
    6. ' d' → logprob: -5.208624362945557
    7. 's' → logprob: -5.958624362945557
    8. 'y' → logprob: -6.333624362945557
    9. ']' → logprob: -6.458624362945557
    10. ')' → logprob: -6.458624362945557

Token 49: 'ico' (ID: 2424)
  Prédit: 'ico'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ico' → logprob: -0.011183627881109715
    2. '[' → logprob: -4.511183738708496
    3. '[s' → logprob: -10.511183738708496
    4. '['' → logprob: -10.511183738708496
    5. '[c' → logprob: -10.761183738708496
    6. 'ic' → logprob: -11.386183738708496
    7. 'o' → logprob: -11.511183738708496
    8. 'eco' → logprob: -11.636183738708496
    9. '["' → logprob: -12.386183738708496
    10. '[i' → logprob: -12.386183738708496

Token 50: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.10030221194028854
    2. '[' → logprob: -2.350302219390869
    3. 's' → logprob: -10.475301742553711
    4. '[...]' → logprob: -11.475301742553711
    5. '[str' → logprob: -11.850301742553711
    6. '[]' → logprob: -12.100301742553711
    7. '[d' → logprob: -12.100301742553711
    8. ' [' → logprob: -12.100301742553711
    9. '[y' → logprob: -12.225301742553711
    10. '[f' → logprob: -12.225301742553711

Token 51: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008360736537724733
    2. ' ]' → logprob: -7.75083589553833
    3. ']=' → logprob: -7.87583589553833
    4. ']+=' → logprob: -11.375836372375488
    5. '']' → logprob: -11.625836372375488
    6. '"]' → logprob: -13.625836372375488
    7. '`]' → logprob: -14.125836372375488
    8. '[' → logprob: -14.250836372375488
    9. ')' → logprob: -14.625836372375488
    10. ')]' → logprob: -15.000836372375488

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31916025280952454
    2. ' =' → logprob: -1.3191602230072021
    3. '[' → logprob: -5.194160461425781
    4. ']' → logprob: -8.444160461425781
    5. ' ' → logprob: -10.819160461425781
    6. ']=' → logprob: -11.194160461425781
    7. '[:]' → logprob: -11.694160461425781
    8. 's' → logprob: -11.819160461425781
    9. ')' → logprob: -11.944160461425781
    10. '"' → logprob: -12.194160461425781

Token 53: ' True' (ID: 6432)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9472780227661133
    2. 'tr' → logprob: -1.1972780227661133
    3. '1' → logprob: -2.0722780227661133
    4. ' truc' → logprob: -2.5722780227661133
    5. '0' → logprob: -2.9472780227661133
    6. ' d' → logprob: -4.072278022766113
    7. 'True' → logprob: -4.447278022766113
    8. 's' → logprob: -4.572278022766113
    9. ' ' → logprob: -5.197278022766113
    10. 'tru' → logprob: -5.572278022766113

Token 54: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9519895315170288
    2. '\n' → logprob: -1.5769895315170288
    3. '<|end|>' → logprob: -1.5769895315170288
    4. ' ' → logprob: -2.7019896507263184
    5. '.' → logprob: -3.8269896507263184
    6. '  
' → logprob: -4.076989650726318
    7. ':' → logprob: -4.201989650726318
    8. '[' → logprob: -4.326989650726318
    9. '#' → logprob: -4.326989650726318
    10. '\' → logprob: -4.576989650726318

Token 55: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012606535165105015
    2. '("("' → logprob: -9.625125885009766
    3. '('' → logprob: -10.000125885009766
    4. '(s' → logprob: -12.375125885009766
    5. '(d' → logprob: -12.500125885009766
    6. '(
' → logprob: -13.375125885009766
    7. '()' → logprob: -13.625125885009766
    8. '(len' → logprob: -14.125125885009766
    9. '((' → logprob: -14.500125885009766
    10. 's' → logprob: -14.625125885009766

Token 57: '(list' (ID: 13116)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.2014751136302948
    2. '(' → logprob: -1.7014751434326172
    3. '(s' → logprob: -10.451475143432617
    4. ')' → logprob: -11.201475143432617
    5. '(
' → logprob: -11.326475143432617
    6. 'd' → logprob: -13.451475143432617
    7. ')d' → logprob: -13.451475143432617
    8. ' (' → logprob: -13.826475143432617
    9. '(

' → logprob: -13.826475143432617
    10. '(n' → logprob: -14.576475143432617

Token 58: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.38695889711380005
    2. '(' → logprob: -1.1369588375091553
    3. '(s' → logprob: -9.636959075927734
    4. '(
' → logprob: -11.386959075927734
    5. '(dict' → logprob: -13.011959075927734
    6. ')' → logprob: -13.386959075927734
    7. '()' → logprob: -13.511959075927734
    8. 'd' → logprob: -13.761959075927734
    9. ')d' → logprob: -13.886959075927734
    10. '((' → logprob: -14.511959075927734

Token 59: 'ico' (ID: 2424)
  Prédit: 'ico'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ico' → logprob: -4.961759259458631e-06
    2. 'o' → logprob: -13.625004768371582
    3. 'd' → logprob: -13.750004768371582
    4. 'ic' → logprob: -13.875004768371582
    5. 'co' → logprob: -14.375004768371582
    6. 'i' → logprob: -15.500004768371582
    7. '{' → logprob: -15.875004768371582
    8. 'cio' → logprob: -16.2500057220459
    9. 'icio' → logprob: -16.2500057220459
    10. '{"' → logprob: -16.2500057220459

Token 60: ')))' (ID: 15975)
  Prédit: '.keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -0.33805760741233826
    2. '))' → logprob: -1.4630576372146606
    3. '.values' → logprob: -3.213057518005371
    4. ')' → logprob: -4.838057518005371
    5. ')))' → logprob: -5.713057518005371
    6. '(d' → logprob: -6.213057518005371
    7. '()))' → logprob: -7.588057518005371
    8. '(' → logprob: -8.088057518005371
    9. '.' → logprob: -8.588057518005371
    10. 'keys' → logprob: -9.088057518005371

Token 61: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4872644543647766
    2. '.' → logprob: -1.6122643947601318
    3. '[' → logprob: -1.7372643947601318
    4. '<|end|>' → logprob: -5.862264633178711
    5. ' ' → logprob: -6.112264633178711
    6. '(' → logprob: -6.612264633178711
    7. '```' → logprob: -6.862264633178711
    8. '.keys' → logprob: -7.237264633178711
    9. '[
' → logprob: -7.862264633178711
    10. '#' → logprob: -8.362264633178711

Token 62: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3502424359321594
    2. '.' → logprob: -1.3502423763275146
    3. '[' → logprob: -3.7252423763275146
    4. '(' → logprob: -5.350242614746094
    5. '.keys' → logprob: -6.350242614746094
    6. '()' → logprob: -6.475242614746094
    7. 's' → logprob: -6.725242614746094
    8. '<|end|>' → logprob: -7.100242614746094
    9. '```' → logprob: -7.725242614746094
    10. ' ' → logprob: -7.725242614746094

Token 63: ' On' (ID: 2160)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49423715472221375
    2. '(' → logprob: -1.1192371845245361
    3. '()' → logprob: -2.869237184524536
    4. '\' → logprob: -5.619236946105957
    5. '(
' → logprob: -6.494236946105957
    6. '```' → logprob: -7.869236946105957
    7. '())' → logprob: -8.494236946105957
    8. ' ' → logprob: -8.869236946105957
    9. 's' → logprob: -8.994236946105957
    10. ' )' → logprob: -9.369236946105957

Token 64: ' affiche' (ID: 127479)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7401542663574219
    2. ')' → logprob: -0.8651542663574219
    3. 'print' → logprob: -2.615154266357422
    4. '.keys' → logprob: -5.490154266357422
    5. ' ' → logprob: -5.615154266357422
    6. '(' → logprob: -5.865154266357422
    7. '<|end|>' → logprob: -5.990154266357422
    8. '.print' → logprob: -6.240154266357422
    9. ' .' → logprob: -6.615154266357422
    10. ' )' → logprob: -6.865154266357422

Token 65: ' juste' (ID: 31553)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38058826327323914
    2. '(' → logprob: -1.2555882930755615
    3. ')' → logprob: -3.8805882930755615
    4. '(
' → logprob: -5.380588054656982
    5. 's' → logprob: -5.880588054656982
    6. '<|end|>' → logprob: -6.630588054656982
    7. ' ' → logprob: -7.005588054656982
    8. '(s' → logprob: -8.13058853149414
    9. '()
' → logprob: -8.13058853149414
    10. '(len' → logprob: -9.13058853149414

Token 66: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053308892995119095
    2. '(' → logprob: -3.0533089637756348
    3. '(
' → logprob: -7.178308963775635
    4. '<|end|>' → logprob: -7.178308963775635
    5. '[' → logprob: -7.303308963775635
    6. 's' → logprob: -7.553308963775635
    7. ' ' → logprob: -7.928308963775635
    8. '.' → logprob: -8.053308486938477
    9. '```' → logprob: -8.428308486938477
    10. '\' → logprob: -8.428308486938477

Token 67: ' nombre' (ID: 9733)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35776978731155396
    2. ' ' → logprob: -1.9827697277069092
    3. 'len' → logprob: -2.357769727706909
    4. 'd' → logprob: -3.357769727706909
    5. ' d' → logprob: -4.482769966125488
    6. ' len' → logprob: -4.607769966125488
    7. ' s' → logprob: -6.232769966125488
    8. 'es' → logprob: -6.232769966125488
    9. 'nombre' → logprob: -6.857769966125488
    10. 'e' → logprob: -6.982769966125488

Token 68: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04417386278510094
    2. '<|end|>' → logprob: -3.9191739559173584
    3. '(' → logprob: -4.669173717498779
    4. 's' → logprob: -5.044173717498779
    5. ' ' → logprob: -6.044173717498779
    6. '.' → logprob: -6.419173717498779
    7. '\' → logprob: -7.169173717498779
    8. '```' → logprob: -7.544173717498779
    9. '_' → logprob: -7.919173717498779
    10. 'newline' → logprob: -8.544174194335938

Token 69: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.27345186471939087
    2. ''' → logprob: -1.898451805114746
    3. 'es' → logprob: -3.648451805114746
    4. 'u' → logprob: -3.773451805114746
    5. ''e' → logprob: -4.523451805114746
    6. ''é' → logprob: -5.148451805114746
    7. ''u' → logprob: -5.398451805114746
    8. ''ent' → logprob: -5.648451805114746
    9. ''entrée' → logprob: -5.898451805114746
    10. 's' → logprob: -6.023451805114746

Token 70: 'élé' (ID: 15228)
  Prédit: 'lé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lé' → logprob: -0.5962494611740112
    2. 'élé' → logprob: -1.2212494611740112
    3. 'l' → logprob: -1.9712494611740112
    4. 'é' → logprob: -5.471249580383301
    5. 'lements' → logprob: -6.221249580383301
    6. 'cl' → logprob: -6.346249580383301
    7. 'él' → logprob: -6.721249580383301
    8. ''' → logprob: -7.096249580383301
    9. 'clé' → logprob: -7.096249580383301
    10. '```' → logprob: -7.596249580383301

Token 71: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.34887194633483887
    2. 'm' → logprob: -1.2238719463348389
    3. 'ment' → logprob: -8.973872184753418
    4. '```' → logprob: -9.723872184753418
    5. 'éments' → logprob: -10.223872184753418
    6. 'men' → logprob: -10.473872184753418
    7. 'me' → logprob: -10.723872184753418
    8. '' → logprob: -11.473872184753418
    9. ' ' → logprob: -11.598872184753418
    10. ' m' → logprob: -11.723872184753418

Token 72: ' uniques' (ID: 156848)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3806927800178528
    2. '[' → logprob: -1.505692720413208
    3. '.' → logprob: -2.505692720413208
    4. '<|end|>' → logprob: -5.130692958831787
    5. '```' → logprob: -6.380692958831787
    6. ' ' → logprob: -6.380692958831787
    7. '.keys' → logprob: -7.505692958831787
    8. '\' → logprob: -7.755692958831787
    9. '#' → logprob: -8.130692481994629
    10. 's' → logprob: -8.380692481994629

Token 73: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6650587320327759
    2. ')' → logprob: -0.9150587320327759
    3. '.' → logprob: -2.7900586128234863
    4. '<|end|>' → logprob: -4.165058612823486
    5. '#' → logprob: -6.415058612823486
    6. '(' → logprob: -6.665058612823486
    7. '\' → logprob: -7.040058612823486
    8. '```' → logprob: -7.165058612823486
    9. 's' → logprob: -7.415058612823486
    10. '{' → logprob: -7.915058612823486

Token 74: ' ça' (ID: 13590)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009821972344070673
    2. ')
' → logprob: -8.375982284545898
    3. '```' → logprob: -8.375982284545898
    4. '\n' → logprob: -8.625982284545898
    5. '<|end|>' → logprob: -9.375982284545898
    6. 'newline' → logprob: -9.750982284545898
    7. '
' → logprob: -10.250982284545898
    8. ' )' → logprob: -10.375982284545898
    9. '' → logprob: -11.250982284545898
    10. ' 
' → logprob: -11.375982284545898

Token 75: ' devrait' (ID: 52773)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41700753569602966
    2. '<|end|>' → logprob: -1.417007565498352
    3. ' ' → logprob: -3.0420074462890625
    4. '\' → logprob: -4.2920074462890625
    5. ' )' → logprob: -4.7920074462890625
    6. '<|end|>' → logprob: -4.9170074462890625
    7. '```' → logprob: -5.6670074462890625
    8. '\n' → logprob: -5.7920074462890625
    9. '+' → logprob: -6.1670074462890625
    10. '  ' → logprob: -6.1670074462890625

Token 76: ' suff' (ID: 9490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007330690510571003
    2. '\n' → logprob: -5.257330894470215
    3. '\' → logprob: -7.507330894470215
    4. '<|end|>' → logprob: -7.632330894470215
    5. '```' → logprob: -7.757330894470215
    6. 'newline' → logprob: -9.132330894470215
    7. ' ' → logprob: -9.382330894470215
    8. ')
' → logprob: -9.757330894470215
    9. ' )' → logprob: -10.257330894470215
    10. '  
' → logprob: -10.382330894470215

Token 77: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.3444534242153168
    2. 'aire' → logprob: -1.5944534540176392
    3. 'icient' → logprob: -3.2194533348083496
    4. 'ic' → logprob: -3.4694533348083496
    5. 'uire' → logprob: -5.34445333480835
    6. 'i' → logprob: -5.84445333480835
    7. 're' → logprob: -5.84445333480835
    8. 'ice' → logprob: -6.84445333480835
    9. 'icent' → logprob: -6.84445333480835
    10. 'ir' → logprob: -7.34445333480835


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 75
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 18.67%
Précision adaptée (1ère position): 20.00%
Précision (top 10): 48.00%
================================================================================
