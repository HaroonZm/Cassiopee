================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import re
from sys import stdin

def is_valid(s: str) -> bool:
    return bool(re.fullmatch(r'(?:[^L][^R])*[^L]?', s))

print('Yes' if is_valid(stdin.readline().rstrip()) else 'No')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' re' (ID: 322)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21177087724208832
    2. '.' → logprob: -2.96177077293396
    3. '[' → logprob: -3.33677077293396
    4. '```' → logprob: -3.46177077293396
    5. '\b' → logprob: -4.211771011352539
    6. '\' → logprob: -4.586771011352539
    7. '\.' → logprob: -4.711771011352539
    8. 'import' → logprob: -4.961771011352539
    9. '(' → logprob: -5.086771011352539
    10. '\s' → logprob: -5.336771011352539

Token 4: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.34211403131484985
    2. ' collections' → logprob: -1.967113971710205
    3. 'collections' → logprob: -3.717113971710205
    4. ' ' → logprob: -3.717113971710205
    5. ' sklearn' → logprob: -3.717113971710205
    6. ' nltk' → logprob: -3.967113971710205
    7. ' sys' → logprob: -4.592113971710205
    8. ' ' → logprob: -4.967113971710205
    9. 'os' → logprob: -5.092113971710205
    10. ' math' → logprob: -5.342113971710205

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.036216508597135544
    2. 'import' → logprob: -3.4112164974212646
    3. '.' → logprob: -6.536216735839844
    4. ' ' → logprob: -7.161216735839844
    5. '<|end|>' → logprob: -8.661216735839844
    6. '	import' → logprob: -9.786216735839844
    7. '<|end|>' → logprob: -10.286216735839844
    8. '```' → logprob: -10.911216735839844
    9. ' im' → logprob: -11.786216735839844
    10. '.import' → logprob: -12.411216735839844

Token 6: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.2310466468334198
    2. ' argv' → logprob: -1.9810466766357422
    3. 'exit' → logprob: -3.106046676635742
    4. ' exit' → logprob: -3.856046676635742
    5. 'stdout' → logprob: -6.981046676635742
    6. 'stdin' → logprob: -6.981046676635742
    7. ' stdin' → logprob: -8.356046676635742
    8. 'import' → logprob: -9.231046676635742
    9. 'stderr' → logprob: -9.231046676635742
    10. ' stdout' → logprob: -9.481046676635742

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7698534727096558
    2. 'for' → logprob: -1.0198534727096558
    3. '.' → logprob: -2.8948535919189453
    4. '
' → logprob: -2.8948535919189453
    5. 'import' → logprob: -4.019853591918945
    6. '

' → logprob: -4.394853591918945
    7. '```' → logprob: -4.769853591918945
    8. '' → logprob: -4.769853591918945
    9. '\' → logprob: -5.019853591918945
    10. '[' → logprob: -6.144853591918945

Token 8: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034656986594200134
    2. 'f' → logprob: -3.6596570014953613
    3. '`' → logprob: -6.034657001495361
    4. '.' → logprob: -6.909657001495361
    5. 'def' → logprob: -6.909657001495361
    6. '```' → logprob: -7.034657001495361
    7. 'data' → logprob: -7.659657001495361
    8. '
' → logprob: -7.784657001495361
    9. '\n' → logprob: -7.909657001495361
    10. 'd' → logprob: -8.284656524658203

Token 9: ' is' (ID: 382)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -1.0302278995513916
    2. ' ' → logprob: -1.2802278995513916
    3. ' process' → logprob: -2.0302278995513916
    4. ' parse' → logprob: -2.0302278995513916
    5. ' find' → logprob: -3.6552278995513916
    6. ' match' → logprob: -4.2802276611328125
    7. ' readline' → logprob: -4.2802276611328125
    8. ' tokenize' → logprob: -4.6552276611328125
    9. ' calculate' → logprob: -5.1552276611328125
    10. ' predict' → logprob: -5.5302276611328125

Token 10: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.08067388832569122
    2. '_pal' → logprob: -2.955673933029175
    3. '_identifier' → logprob: -5.205673694610596
    4. '_match' → logprob: -5.705673694610596
    5. '_' → logprob: -5.830673694610596
    6. '_email' → logprob: -6.080673694610596
    7. ' _' → logprob: -6.580673694610596
    8. '_prime' → logprob: -7.080673694610596
    9. '_variable' → logprob: -7.205673694610596
    10. ' valid' → logprob: -7.330673694610596

Token 11: '(s' (ID: 1858)
  Prédit: '_email'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_email' → logprob: -0.7496178150177002
    2. '_identifier' → logprob: -1.6246178150177002
    3. '_' → logprob: -1.9996178150177002
    4. '_username' → logprob: -2.9996178150177
    5. '_password' → logprob: -3.1246178150177
    6. '_name' → logprob: -3.6246178150177
    7. '_ip' → logprob: -3.8746178150177
    8. '_variable' → logprob: -3.9996178150177
    9. '_domain' → logprob: -4.499617576599121
    10. '_phone' → logprob: -5.624617576599121

Token 12: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003464413806796074
    2. ')' → logprob: -6.003464221954346
    3. ':' → logprob: -7.003464221954346
    4. '):
' → logprob: -10.003464698791504
    5. ' ):' → logprob: -11.128464698791504
    6. '):

' → logprob: -12.628464698791504
    7. ',' → logprob: -13.003464698791504
    8. '):
' → logprob: -13.128464698791504
    9. 's' → logprob: -13.378464698791504
    10. '[' → logprob: -13.878464698791504

Token 13: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.12693651020526886
    2. 'str' → logprob: -2.126936435699463
    3. ')' → logprob: -12.751936912536621
    4. ' ' → logprob: -13.501936912536621
    5. '[str' → logprob: -13.876936912536621
    6. 's' → logprob: -14.001936912536621
    7. 'string' → logprob: -14.376936912536621
    8. '	str' → logprob: -14.751936912536621
    9. ':str' → logprob: -14.751936912536621
    10. 'stri' → logprob: -15.251936912536621

Token 14: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9266199160483666e-05
    2. '):' → logprob: -11.750019073486328
    3. ' )' → logprob: -12.000019073486328
    4. ')->' → logprob: -12.250019073486328
    5. '`)' → logprob: -15.250019073486328
    6. '):
' → logprob: -17.000019073486328
    7. '   ' → logprob: -17.750019073486328
    8. '')' → logprob: -18.000019073486328
    9. ',' → logprob: -18.250019073486328
    10. '):

' → logprob: -18.250019073486328

Token 15: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015432257205247879
    2. '->' → logprob: -4.765432357788086
    3. '):' → logprob: -5.890432357788086
    4. ' ->' → logprob: -6.515432357788086
    5. ')' → logprob: -7.015432357788086
    6. ')->' → logprob: -7.140432357788086
    7. ':return' → logprob: -7.390432357788086
    8. '   ' → logprob: -9.140432357788086
    9. '():' → logprob: -9.890432357788086
    10. ':def' → logprob: -11.265432357788086

Token 16: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.16035716235637665
    2. 'bool' → logprob: -1.910357117652893
    3. ' ' → logprob: -10.285357475280762
    4. '	bool' → logprob: -10.535357475280762
    5. '<bool' → logprob: -10.535357475280762
    6. ' ' → logprob: -10.910357475280762
    7. ' str' → logprob: -12.035357475280762
    8. '  ' → logprob: -12.035357475280762
    9. '   ' → logprob: -12.285357475280762
    10. 'int' → logprob: -13.160357475280762

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010616567305987701
    2. '):' → logprob: -10.000105857849121
    3. ':return' → logprob: -10.000105857849121
    4. '():' → logprob: -11.875105857849121
    5. ' :' → logprob: -12.875105857849121
    6. ':**' → logprob: -13.375105857849121
    7. ':
' → logprob: -13.500105857849121
    8. ':def' → logprob: -13.875105857849121
    9. '   ' → logprob: -14.000105857849121
    10. '>:' → logprob: -15.375105857849121

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017517358355689794
    2. ' return' → logprob: -9.625175476074219
    3. ':' → logprob: -9.875175476074219
    4. '    
' → logprob: -10.500175476074219
    5. 'return' → logprob: -11.375175476074219
    6. '	return' → logprob: -12.750175476074219
    7. '):' → logprob: -12.875175476074219
    8. '^\' → logprob: -13.250175476074219
    9. ')' → logprob: -13.625175476074219
    10. '```' → logprob: -13.750175476074219

Token 19: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047538936138153076
    2. 'return' (adapté à ' return') → logprob: -3.672538995742798
    3. ' return' → logprob: -4.172538757324219
    4. '^[' → logprob: -6.047538757324219
    5. '```' → logprob: -7.297538757324219
    6. 'r' → logprob: -7.547538757324219
    7. ' if' → logprob: -8.047538757324219
    8. ' r' → logprob: -8.172538757324219
    9. '    ' → logprob: -8.172538757324219
    10. '^\' → logprob: -8.297538757324219

Token 20: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.7060036659240723
    2. ' re' → logprob: -1.3310036659240723
    3. 'bool' → logprob: -1.7060036659240723
    4. 're' → logprob: -2.8310036659240723
    5. ' True' → logprob: -7.331003665924072
    6. ' not' → logprob: -7.581003665924072
    7. '   ' → logprob: -8.706003189086914
    8. ' ' → logprob: -9.206003189086914
    9. 'True' → logprob: -9.581003189086914
    10. ' len' → logprob: -9.831003189086914

Token 21: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.01107033807784319
    2. '(' → logprob: -4.511070251464844
    3. 're' → logprob: -11.011070251464844
    4. '```' → logprob: -13.136070251464844
    5. '(
' → logprob: -13.511070251464844
    6. '((' → logprob: -14.261070251464844
    7. '\(' → logprob: -14.761070251464844
    8. '(r' → logprob: -15.261070251464844
    9. '(s' → logprob: -15.511070251464844
    10. ' (' → logprob: -15.636070251464844

Token 22: '.full' (ID: 43009)
  Prédit: '.match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -0.4786951243877411
    2. '.full' → logprob: -0.9786951541900635
    3. '.search' → logprob: -5.603694915771484
    4. '.' → logprob: -8.103694915771484
    5. '.compile' → logprob: -8.103694915771484
    6. '\.' → logprob: -8.228694915771484
    7. '.findall' → logprob: -11.103694915771484
    8. '.Match' → logprob: -11.228694915771484
    9. '```' → logprob: -11.978694915771484
    10. 'match' → logprob: -11.978694915771484

Token 23: 'match' (ID: 14893)
  Prédit: 'match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -6.392202976712724e-06
    2. '_match' → logprob: -13.000006675720215
    3. 'ma' → logprob: -13.250006675720215
    4. 'mat' → logprob: -14.000006675720215
    5. ' match' → logprob: -14.750006675720215
    6. 'search' → logprob: -15.000006675720215
    7. 'm' → logprob: -16.0000057220459
    8. 'math' → logprob: -16.2500057220459
    9. '.match' → logprob: -16.5000057220459
    10. '-match' → logprob: -16.5000057220459

Token 24: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -9.555654105497524e-05
    2. 'r' → logprob: -9.62509536743164
    3. '('[' → logprob: -11.50009536743164
    4. '(' → logprob: -11.75009536743164
    5. '[r' → logprob: -12.50009536743164
    6. '```' → logprob: -12.62509536743164
    7. '("[' → logprob: -13.87509536743164
    8. '(rb' → logprob: -14.12509536743164
    9. '   ' → logprob: -14.25009536743164
    10. '	r' → logprob: -15.12509536743164

Token 25: ''(' (ID: 117019)
  Prédit: '"['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"[' → logprob: -0.7346168160438538
    2. ''[' → logprob: -0.8596168160438538
    3. 'r' → logprob: -2.609616756439209
    4. '"\' → logprob: -5.109616756439209
    5. ''\' → logprob: -5.234616756439209
    6. '[r' → logprob: -5.484616756439209
    7. '(r' → logprob: -5.859616756439209
    8. '[' → logprob: -6.359616756439209
    9. '"' → logprob: -6.734616756439209
    10. ''' → logprob: -7.609616756439209

Token 26: '?:' (ID: 8528)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2571388483047485
    2. '[a' → logprob: -1.2571388483047485
    3. '\d' → logprob: -1.5071388483047485
    4. '[A' → logprob: -2.507138729095459
    5. '\' → logprob: -2.882138729095459
    6. 'a' → logprob: -4.007138729095459
    7. '0' → logprob: -4.257138729095459
    8. '[\' → logprob: -4.257138729095459
    9. '(\' → logprob: -5.882138729095459
    10. '([' → logprob: -6.132138729095459

Token 27: '[^' (ID: 74152)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0455673933029175
    2. '[a' → logprob: -1.4205673933029175
    3. '\d' → logprob: -1.5455673933029175
    4. '\' → logprob: -2.545567512512207
    5. '[A' → logprob: -3.045567512512207
    6. '0' → logprob: -3.670567512512207
    7. '[\' → logprob: -4.795567512512207
    8. 'a' → logprob: -4.920567512512207
    9. 'abc' → logprob: -5.045567512512207
    10. 'ab' → logprob: -6.420567512512207

Token 28: 'L' (ID: 43)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4877145290374756
    2. '0' → logprob: -1.8627145290374756
    3. '@' → logprob: -1.8627145290374756
    4. 'ae' → logprob: -1.9877145290374756
    5. '\s' → logprob: -2.7377145290374756
    6. '01' → logprob: -3.4877145290374756
    7. '()\' → logprob: -3.6127145290374756
    8. '\\' → logprob: -3.7377145290374756
    9. '"' → logprob: -3.7377145290374756
    10. '\d' → logprob: -3.9877145290374756

Token 29: '][' (ID: 2696)
  Prédit: 'RL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'RL' → logprob: -1.174787998199463
    2. 'L' → logprob: -1.299787998199463
    3. 'R' → logprob: -1.549787998199463
    4. 'LR' → logprob: -2.924787998199463
    5. 'OL' → logprob: -4.049787998199463
    6. ']*' → logprob: -4.174787998199463
    7. 'A' → logprob: -4.299787998199463
    8. 'O' → logprob: -4.549787998199463
    9. ']+' → logprob: -4.674787998199463
    10. 'S' → logprob: -4.799787998199463

Token 30: '^' (ID: 61)
  Prédit: 'RL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RL' → logprob: -0.42440640926361084
    2. 'LR' → logprob: -2.1744065284729004
    3. 'R' → logprob: -3.0494065284729004
    4. 'RS' → logprob: -3.7994065284729004
    5. 'PL' → logprob: -4.1744065284729
    6. '^' → logprob: -4.4244065284729
    7. 'A' → logprob: -4.4244065284729
    8. 'OL' → logprob: -4.6744065284729
    9. 'SR' → logprob: -4.6744065284729
    10. 'RP' → logprob: -4.6744065284729

Token 31: 'R' (ID: 49)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.0100325345993042
    2. 'RL' → logprob: -1.0100325345993042
    3. 'OL' → logprob: -2.6350326538085938
    4. 'LR' → logprob: -2.8850326538085938
    5. 'R' → logprob: -3.0100326538085938
    6. 'LO' → logprob: -3.8850326538085938
    7. 'PL' → logprob: -4.010032653808594
    8. 'O' → logprob: -4.635032653808594
    9. 'LL' → logprob: -4.760032653808594
    10. 'S' → logprob: -5.260032653808594

Token 32: '])*' (ID: 114661)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.8300319910049438
    2. ']*' → logprob: -1.2050319910049438
    3. ']+' → logprob: -2.8300318717956543
    4. 'LR' → logprob: -3.9550318717956543
    5. 'S' → logprob: -4.080031871795654
    6. 'F' → logprob: -4.080031871795654
    7. 'O' → logprob: -4.330031871795654
    8. ']*)' → logprob: -4.330031871795654
    9. 'RL' → logprob: -4.455031871795654
    10. 'B' → logprob: -4.580031871795654

Token 33: '[^' (ID: 74152)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.9524031281471252
    2. 'R' → logprob: -1.5774030685424805
    3. ')' → logprob: -1.7024030685424805
    4. '[' → logprob: -2.4524030685424805
    5. '))' → logprob: -2.8274030685424805
    6. '[^' → logprob: -4.2024030685424805
    7. 'RL' → logprob: -4.7024030685424805
    8. '?' → logprob: -5.0774030685424805
    9. '[L' → logprob: -5.4524030685424805
    10. '[R' → logprob: -5.7024030685424805

Token 34: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5405949354171753
    2. 'LR' → logprob: -0.9155949354171753
    3. 'RL' → logprob: -4.290595054626465
    4. 'R' → logprob: -5.790595054626465
    5. 'LL' → logprob: -9.853095054626465
    6. 'S' → logprob: -9.915595054626465
    7. 'LS' → logprob: -9.915595054626465
    8. ' LR' → logprob: -10.228095054626465
    9. ' L' → logprob: -10.290595054626465
    10. ']' → logprob: -10.415595054626465

Token 35: ']' (ID: 60)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.004016664810478687
    2. 'L' → logprob: -6.754016876220703
    3. ']*' → logprob: -7.379016876220703
    4. ']' → logprob: -7.504016876220703
    5. '^' → logprob: -7.504016876220703
    6. 'RL' → logprob: -7.754016876220703
    7. ']*)' → logprob: -9.129016876220703
    8. ' R' → logprob: -9.629016876220703
    9. '])' → logprob: -9.629016876220703
    10. '][' → logprob: -9.754016876220703

Token 36: '?',' (ID: 112976)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.34709689021110535
    2. ']*)' → logprob: -2.7220969200134277
    3. '^' → logprob: -3.0970969200134277
    4. ']*' → logprob: -3.2220969200134277
    5. '])' → logprob: -3.4720969200134277
    6. '][' → logprob: -3.4720969200134277
    7. ']' → logprob: -3.7220969200134277
    8. '[^' → logprob: -3.7220969200134277
    9. ']?' → logprob: -5.347096920013428
    10. '])*' → logprob: -5.472096920013428

Token 37: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20521225035190582
    2. ' s' → logprob: -1.7052122354507446
    3. '[^' → logprob: -6.205212116241455
    4. ' [' → logprob: -7.455212116241455
    5. '[s' → logprob: -8.330212593078613
    6. '[' → logprob: -8.580212593078613
    7. ')' → logprob: -8.830212593078613
    8. 'r' → logprob: -9.205212593078613
    9. ' ' → logprob: -9.455212593078613
    10. ' )' → logprob: -9.705212593078613

Token 38: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.34855446219444275
    2. ')' → logprob: -1.2235544919967651
    3. ')))' → logprob: -10.098554611206055
    4. ''))' → logprob: -10.348554611206055
    5. '))
' → logprob: -11.848554611206055
    6. ')\' → logprob: -12.098554611206055
    7. '),' → logprob: -12.598554611206055
    8. '"))' → logprob: -12.973554611206055
    9. ')
' → logprob: -13.098554611206055
    10. ')`' → logprob: -13.223554611206055

Token 39: 'print' (ID: 1598)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3479972183704376
    2. ')' → logprob: -1.9729971885681152
    3. '
' → logprob: -2.9729971885681152
    4. ':' → logprob: -3.2229971885681152
    5. '<|end|>' → logprob: -3.3479971885681152
    6. '\' → logprob: -4.847997188568115
    7. '\r' → logprob: -5.597997188568115
    8. ':
' → logprob: -5.972997188568115
    9. '#' → logprob: -6.472997188568115
    10. ')
' → logprob: -6.472997188568115

Token 40: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013572083844337612
    2. '('' → logprob: -9.37513542175293
    3. '("("' → logprob: -10.87513542175293
    4. '(print' → logprob: -11.50013542175293
    5. '()' → logprob: -12.62513542175293
    6. '(s' → logprob: -12.87513542175293
    7. '(stdin' → logprob: -13.25013542175293
    8. ' (' → logprob: -13.37513542175293
    9. '(read' → logprob: -14.00013542175293
    10. '(True' → logprob: -14.00013542175293

Token 41: 'Yes' (ID: 13022)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LR' → logprob: -1.0294115543365479
    2. 'L' → logprob: -1.7794115543365479
    3. 'LL' → logprob: -1.7794115543365479
    4. 'RL' → logprob: -2.529411554336548
    5. 'R' → logprob: -2.654411554336548
    6. 'P' → logprob: -3.404411554336548
    7. 'SR' → logprob: -3.779411554336548
    8. 'S' → logprob: -3.779411554336548
    9. ''.' → logprob: -4.404411315917969
    10. 'RR' → logprob: -4.529411315917969

Token 42: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5776634216308594
    2. '')' → logprob: -0.8276634216308594
    3. '!' → logprob: -7.577663421630859
    4. '\n' → logprob: -7.952663421630859
    5. ')' → logprob: -8.57766342163086
    6. ' or' → logprob: -8.57766342163086
    7. '!'' → logprob: -8.95266342163086
    8. ')'' → logprob: -9.57766342163086
    9. ' if' → logprob: -9.70266342163086
    10. '"' → logprob: -10.32766342163086

Token 43: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047588035464286804
    2. ' if' → logprob: -3.4225881099700928
    3. ',' → logprob: -4.672587871551514
    4. 'if' → logprob: -5.797587871551514
    5. '')' → logprob: -7.297587871551514
    6. '))' → logprob: -8.172588348388672
    7. ',)' → logprob: -8.547588348388672
    8. ' )' → logprob: -9.047588348388672
    9. '()' → logprob: -10.172588348388672
    10. ' or' → logprob: -10.297588348388672

Token 44: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.4750708043575287
    2. ' is' → logprob: -0.9750708341598511
    3. ' all' → logprob: -8.22507095336914
    4. ' any' → logprob: -8.22507095336914
    5. 'all' → logprob: -8.97507095336914
    6. '(is' → logprob: -9.35007095336914
    7. 'any' → logprob: -9.35007095336914
    8. ' not' → logprob: -10.35007095336914
    9. 'not' → logprob: -10.47507095336914
    10. ' ' → logprob: -10.60007095336914

Token 45: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -1.1472419600977446e-06
    2. '_val' → logprob: -14.625000953674316
    3. 'valid' → logprob: -15.000000953674316
    4. '_' → logprob: -15.750000953674316
    5. ' _' → logprob: -16.375001907348633
    6. ' valid' → logprob: -18.750001907348633
    7. '_v' → logprob: -18.750001907348633
    8. '_va' → logprob: -19.000001907348633
    9. '_VALID' → logprob: -19.375001907348633
    10. '_invalid' → logprob: -19.750001907348633

Token 46: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.7931524515151978
    2. '('' → logprob: -0.9181524515151978
    3. '(input' → logprob: -2.793152332305908
    4. '('(' → logprob: -3.043152332305908
    5. '(' → logprob: -3.793152332305908
    6. '(st' → logprob: -5.293152332305908
    7. '(s' → logprob: -5.418152332305908
    8. ' (' → logprob: -5.918152332305908
    9. '("("' → logprob: -6.043152332305908
    10. '("(' → logprob: -7.043152332305908

Token 47: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.024775344878435135
    2. '.read' → logprob: -3.774775266647339
    3. '.' → logprob: -7.024775505065918
    4. '().' → logprob: -7.524775505065918
    5. 'read' → logprob: -9.524775505065918
    6. ')' → logprob: -11.024775505065918
    7. ').' → logprob: -13.149775505065918
    8. '.Read' → logprob: -13.399775505065918
    9. '.readlines' → logprob: -13.899775505065918
    10. ' readline' → logprob: -14.024775505065918

Token 48: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10059341788291931
    2. '().' → logprob: -2.600593328475952
    3. '()' → logprob: -3.850593328475952
    4. '()).' → logprob: -9.850593566894531
    5. ' ())' → logprob: -10.100593566894531
    6. '(),' → logprob: -10.600593566894531
    7. ')' → logprob: -10.850593566894531
    8. '()))' → logprob: -10.975593566894531
    9. '()[' → logprob: -11.850593566894531
    10. '())
' → logprob: -12.350593566894531

Token 49: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06198235973715782
    2. 'rstrip' → logprob: -2.8119823932647705
    3. ' strip' → logprob: -11.811982154846191
    4. 'decode' → logprob: -12.561982154846191
    5. 'read' → logprob: -13.561982154846191
    6. ')' → logprob: -14.061982154846191
    7. 'startswith' → logprob: -14.061982154846191
    8. '```' → logprob: -15.311982154846191
    9. ' ' → logprob: -15.436982154846191
    10. 'rst' → logprob: -16.311983108520508

Token 50: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02342773787677288
    2. '('' → logprob: -4.148427963256836
    3. '()' → logprob: -5.023427963256836
    4. '()))' → logprob: -7.898427963256836
    5. '())
' → logprob: -8.898427963256836
    6. '(' → logprob: -9.648427963256836
    7. ')' → logprob: -9.773427963256836
    8. ' ())' → logprob: -9.773427963256836
    9. '("' → logprob: -10.648427963256836
    10. '()
' → logprob: -10.648427963256836

Token 51: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017611300572752953
    2. ' else' → logprob: -4.267611503601074
    3. 'else' → logprob: -5.767611503601074
    4. ' )' → logprob: -8.267611503601074
    5. '')' → logprob: -10.142611503601074
    6. '))' → logprob: -11.392611503601074
    7. ' ' → logprob: -13.392611503601074
    8. '==' → logprob: -13.517611503601074
    9. '`)' → logprob: -14.392611503601074
    10. ')`' → logprob: -14.642611503601074

Token 52: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012593822553753853
    2. ' '' → logprob: -4.387593746185303
    3. ' ' → logprob: -10.512594223022461
    4. '   ' → logprob: -10.637594223022461
    5. '('' → logprob: -11.012594223022461
    6. '"' → logprob: -12.512594223022461
    7. ')' → logprob: -12.887594223022461
    8. 'print' → logprob: -13.137594223022461
    9. ' ' → logprob: -13.512594223022461
    10. ' print' → logprob: -13.637594223022461

Token 53: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.0921942703134846e-05
    2. ''' → logprob: -11.75001049041748
    3. 'Yes' → logprob: -12.87501049041748
    4. '"No' → logprob: -15.00001049041748
    5. ' No' → logprob: -16.250011444091797
    6. '_No' → logprob: -18.250011444091797
    7. '>No' → logprob: -18.500011444091797
    8. 'NO' → logprob: -18.500011444091797
    9. '''' → logprob: -18.625011444091797
    10. '.No' → logprob: -19.750011444091797

Token 54: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.005253798794001341
    2. ')' → logprob: -5.255253791809082
    3. ''' → logprob: -11.630253791809082
    4. ''))' → logprob: -12.005253791809082
    5. '")' → logprob: -13.130253791809082
    6. '')
' → logprob: -13.130253791809082
    7. '}')' → logprob: -15.380253791809082
    8. '`)' → logprob: -15.755253791809082
    9. '’)' → logprob: -16.0052547454834
    10. '))' → logprob: -16.6302547454834


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 52
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 39
Précision stricte (1ère position): 34.62%
Précision adaptée (1ère position): 34.62%
Précision (top 10): 75.00%
================================================================================
