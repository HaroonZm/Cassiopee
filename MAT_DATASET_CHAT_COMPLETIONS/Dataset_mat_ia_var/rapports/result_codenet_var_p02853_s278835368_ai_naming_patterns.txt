================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_first_rank, input_second_rank = map(int, input().split())

prize_total = 0

rank_to_prize = {1: 300000, 2: 200000, 3: 100000}

if input_first_rank in rank_to_prize:
    prize_total += rank_to_prize[input_first_rank]
if input_second_rank in rank_to_prize:
    prize_total += rank_to_prize[input_second_rank]

if input_first_rank == 1 and input_second_rank == 1:
    prize_total += 400000

print(prize_total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_first' (ID: 29347)
  → Token d'amorce (pas de prédiction)

Token 2: '_rank' (ID: 52820)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7021634578704834
    2. '_' → logprob: -1.0771634578704834
    3. '(' → logprob: -2.2021634578704834
    4. '=' → logprob: -4.0771636962890625
    5. '.' → logprob: -4.4521636962890625
    6. ':' → logprob: -4.8271636962890625
    7. ')' → logprob: -5.0771636962890625
    8. '```' → logprob: -5.2021636962890625
    9. '_input' → logprob: -7.2021636962890625
    10. ' =' → logprob: -7.5771636962890625

Token 4: ' input' (ID: 3422)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8042494058609009
    2. '=' → logprob: -1.0542494058609009
    3. '_' → logprob: -2.6792492866516113
    4. '_input' → logprob: -3.1792492866516113
    5. ')' → logprob: -3.4292492866516113
    6. 'input' → logprob: -3.5542492866516113
    7. '.' → logprob: -5.054249286651611
    8. '```' → logprob: -5.054249286651611
    9. '=input' → logprob: -5.554249286651611
    10. ':' → logprob: -5.929249286651611

Token 5: '_second' (ID: 67724)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23788997530937195
    2. '.' → logprob: -2.2378900051116943
    3. '_' → logprob: -2.3628900051116943
    4. ')' → logprob: -5.987889766693115
    5. '=' → logprob: -5.987889766693115
    6. ',' → logprob: -6.112889766693115
    7. '(' → logprob: -6.487889766693115
    8. '```' → logprob: -7.362889766693115
    9. '._' → logprob: -8.237890243530273
    10. ':' → logprob: -8.737890243530273

Token 6: '_rank' (ID: 52820)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6186432838439941
    2. '=' → logprob: -2.118643283843994
    3. '[' → logprob: -2.243643283843994
    4. ',' → logprob: -2.368643283843994
    5. '.' → logprob: -2.368643283843994
    6. ')' → logprob: -4.368643283843994
    7. '+' → logprob: -4.618643283843994
    8. '(' → logprob: -4.743643283843994
    9. ' =' → logprob: -4.868643283843994
    10. '```' → logprob: -6.118643283843994

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0117131471633911
    2. '_' → logprob: -1.0117131471633911
    3. ',' → logprob: -1.8867131471633911
    4. '[' → logprob: -3.3867130279541016
    5. '.' → logprob: -3.5117130279541016
    6. '```' → logprob: -3.7617130279541016
    7. ')' → logprob: -4.261713027954102
    8. ' =' → logprob: -4.886713027954102
    9. '(' → logprob: -5.136713027954102
    10. '+' → logprob: -6.136713027954102

Token 8: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2889311611652374
    2. 'input' → logprob: -1.788931131362915
    3. ' map' → logprob: -2.788931131362915
    4. ' []' → logprob: -4.538931369781494
    5. ' ' → logprob: -5.788931369781494
    6. 'map' → logprob: -6.038931369781494
    7. ' None' → logprob: -6.288931369781494
    8. ' [' → logprob: -6.413931369781494
    9. ' list' → logprob: -7.288931369781494
    10. '[]' → logprob: -8.163930892944336

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07597608864307404
    2. '<|end|>' → logprob: -3.2009761333465576
    3. '(lambda' → logprob: -3.5759761333465576
    4. '```' → logprob: -6.3259758949279785
    5. '<|end|>' → logprob: -7.4509758949279785
    6. 'user' → logprob: -8.200976371765137
    7. ')' → logprob: -8.200976371765137
    8. '(token' → logprob: -8.450976371765137
    9. '(user' → logprob: -8.450976371765137
    10. '(int' → logprob: -8.825976371765137

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01602592132985592
    2. ')' → logprob: -4.391026020050049
    3. '(' → logprob: -6.016026020050049
    4. 'input' → logprob: -7.266026020050049
    5. '(user' → logprob: -8.51602554321289
    6. '<|end|>' → logprob: -10.76602554321289
    7. '(raw' → logprob: -10.89102554321289
    8. ' input' → logprob: -11.14102554321289
    9. '[input' → logprob: -11.26602554321289
    10. ',input' → logprob: -11.26602554321289

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011049231514334679
    2. ' input' → logprob: -4.511049270629883
    3. ')' → logprob: -13.886049270629883
    4. '(input' → logprob: -15.136049270629883
    5. '<input' → logprob: -15.886049270629883
    6. '```' → logprob: -16.761049270629883
    7. ',input' → logprob: -17.136049270629883
    8. '=input' → logprob: -17.761049270629883
    9. '	input' → logprob: -18.011049270629883
    10. '[input' → logprob: -18.386049270629883

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43093225359916687
    2. '().' → logprob: -1.1809322834014893
    3. '())' → logprob: -3.1809322834014893
    4. '(' → logprob: -7.68093204498291
    5. '()`' → logprob: -8.05593204498291
    6. '`()' → logprob: -8.30593204498291
    7. ')' → logprob: -8.43093204498291
    8. '('' → logprob: -10.05593204498291
    9. '();)' → logprob: -10.30593204498291
    10. '()(' → logprob: -10.43093204498291

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.764977686339989e-05
    2. 'strip' → logprob: -9.875057220458984
    3. 'rstrip' → logprob: -13.000057220458984
    4. 'spl' → logprob: -13.125057220458984
    5. ' split' → logprob: -13.375057220458984
    6. '(split' → logprob: -15.875057220458984
    7. 'startswith' → logprob: -16.750057220458984
    8. '```' → logprob: -17.750057220458984
    9. ')' → logprob: -18.125057220458984
    10. 'replace' → logprob: -18.375057220458984

Token 14: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03315236046910286
    2. ')' → logprob: -3.6581523418426514
    3. '()' → logprob: -5.7831525802612305
    4. '(' → logprob: -6.2831525802612305
    5. '()))' → logprob: -6.6581525802612305
    6. '))' → logprob: -7.6581525802612305
    7. '('' → logprob: -10.53315258026123
    8. ' ())' → logprob: -10.90815258026123
    9. '`)' → logprob: -11.03315258026123
    10. '`()' → logprob: -11.53315258026123

Token 15: 'pr' (ID: 638)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3040132522583008
    2. ',' → logprob: -2.179013252258301
    3. 'if' → logprob: -3.554013252258301
    4. ')' → logprob: -3.679013252258301
    5. '#' → logprob: -3.929013252258301
    6. '*' → logprob: -4.054013252258301
    7. '[' → logprob: -4.929013252258301
    8. '```' → logprob: -5.054013252258301
    9. ' ' → logprob: -5.179013252258301
    10. '_' → logprob: -5.179013252258301

Token 16: 'ize' (ID: 750)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001175343873910606
    2. 'print' → logprob: -7.251175403594971
    3. 'nt' → logprob: -7.751175403594971
    4. '```' → logprob: -11.001174926757812
    5. 'in' → logprob: -12.251174926757812
    6. '#' → logprob: -12.876174926757812
    7. 'i' → logprob: -12.876174926757812
    8. '#print' → logprob: -13.376174926757812
    9. 'import' → logprob: -13.751174926757812
    10. '[int' → logprob: -14.126174926757812

Token 17: '_total' (ID: 23814)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34047931432724
    2. 's' → logprob: -1.7154793739318848
    3. '1' → logprob: -3.2154793739318848
    4. '_levels' → logprob: -3.2154793739318848
    5. '_amount' → logprob: -5.215479373931885
    6. ' =' → logprob: -5.215479373931885
    7. '_s' → logprob: -6.465479373931885
    8. '_rank' → logprob: -6.715479373931885
    9. '_values' → logprob: -6.840479373931885
    10. '=' → logprob: -6.840479373931885

Token 18: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.19796329736709595
    2. ' =' → logprob: -1.9479632377624512
    3. '[' → logprob: -4.197963237762451
    4. '=' → logprob: -4.322963237762451
    5. ' ' → logprob: -5.697963237762451
    6. '+=' → logprob: -6.072963237762451
    7. '_' → logprob: -6.447963237762451
    8. '(' → logprob: -7.322963237762451
    9. '_space' → logprob: -8.57296371459961
    10. '+' → logprob: -9.19796371459961

Token 19: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19101610779762268
    2. ' ' → logprob: -1.9410160779953003
    3. 'input' → logprob: -4.06601619720459
    4. ' input' → logprob: -4.69101619720459
    5. '[' → logprob: -6.81601619720459
    6. ' [' → logprob: -7.19101619720459
    7. '100' → logprob: -7.69101619720459
    8. '{' → logprob: -8.19101619720459
    9. '[input' → logprob: -8.31601619720459
    10. 'int' → logprob: -8.81601619720459

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03966850787401199
    2. 'input' → logprob: -3.539668560028076
    3. '100' → logprob: -4.914668560028076
    4. '[' → logprob: -7.289668560028076
    5. '500' → logprob: -8.039668083190918
    6. ' ' → logprob: -8.539668083190918
    7. '10' → logprob: -8.664668083190918
    8. '{' → logprob: -8.914668083190918
    9. '(' → logprob: -9.164668083190918
    10. '200' → logprob: -9.164668083190918

Token 21: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03809095546603203
    2. '<|end|>' → logprob: -4.03809118270874
    3. 'if' → logprob: -5.03809118270874
    4. '
' → logprob: -5.53809118270874
    5. ' if' → logprob: -5.53809118270874
    6. '\n' → logprob: -5.91309118270874
    7. '' → logprob: -6.91309118270874
    8. '```' → logprob: -8.038090705871582
    9. '<|end|>' → logprob: -8.038090705871582
    10. ' 
' → logprob: -8.163090705871582

Token 22: 'rank' (ID: 30162)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010422171326354146
    2. '```' → logprob: -7.001042366027832
    3. ' if' → logprob: -10.001042366027832
    4. '\n' → logprob: -10.126042366027832
    5. '
' → logprob: -10.876042366027832
    6. 'for' → logprob: -11.501042366027832
    7. '``' → logprob: -11.501042366027832
    8. '`' → logprob: -12.876042366027832
    9. '\' → logprob: -14.376042366027832
    10. '' → logprob: -14.501042366027832

Token 23: '_to' (ID: 5089)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22665366530418396
    2. 's' → logprob: -2.476653575897217
    3. ' =' → logprob: -2.976653575897217
    4. ' ==' → logprob: -3.226653575897217
    5. '_s' → logprob: -4.726653575897217
    6. '_first' → logprob: -4.976653575897217
    7. ')' → logprob: -5.851653575897217
    8. '==' → logprob: -5.851653575897217
    9. '=' → logprob: -5.976653575897217
    10. ' ' → logprob: -7.226653575897217

Token 24: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.0007129086880013347
    2. '_points' → logprob: -8.750713348388672
    3. 'pr' → logprob: -9.000713348388672
    4. '_reward' → logprob: -9.125713348388672
    5. '_amount' → logprob: -9.125713348388672
    6. '_value' → logprob: -10.000713348388672
    7. '_price' → logprob: -10.125713348388672
    8. '_' → logprob: -10.500713348388672
    9. '_score' → logprob: -11.125713348388672
    10. '_bonus' → logprob: -11.125713348388672

Token 25: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.03421909362077713
    2. 'ze' → logprob: -3.4092190265655518
    3. 'izes' → logprob: -7.909219264984131
    4. 'iz' → logprob: -10.409218788146973
    5. 'zie' → logprob: -10.409218788146973
    6. 'izing' → logprob: -10.784218788146973
    7. 'z' → logprob: -11.284218788146973
    8. 'i' → logprob: -11.409218788146973
    9. 'e' → logprob: -11.909218788146973
    10. '1' → logprob: -12.034218788146973

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22567901015281677
    2. '=' → logprob: -1.6006790399551392
    3. '.get' → logprob: -8.725679397583008
    4. '[' → logprob: -9.850679397583008
    5. ' ' → logprob: -10.975679397583008
    6. 's' → logprob: -11.850679397583008
    7. '_' → logprob: -11.975679397583008
    8. '.setdefault' → logprob: -12.350679397583008
    9. '1' → logprob: -12.475679397583008
    10. '＝' → logprob: -13.475679397583008

Token 27: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.015338924713432789
    2. ' {' → logprob: -4.265338897705078
    3. '{
' → logprob: -6.765338897705078
    4. ' {
' → logprob: -11.515338897705078
    5. '{}' → logprob: -12.140338897705078
    6. '[' → logprob: -12.265338897705078
    7. '{

' → logprob: -13.890338897705078
    8. '{
' → logprob: -15.390338897705078
    9. '   ' → logprob: -16.265338897705078
    10. '```' → logprob: -16.390338897705078

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002235662890598178
    2. '0' → logprob: -6.3772358894348145
    3. ' ' → logprob: -8.127235412597656
    4. '   ' → logprob: -8.377235412597656
    5. '6' → logprob: -12.877235412597656
    6. '}' → logprob: -13.377235412597656
    7. '```' → logprob: -14.002235412597656
    8. '7' → logprob: -14.252235412597656
    9. '3' → logprob: -14.377235412597656
    10. '  ' → logprob: -14.877235412597656

Token 29: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.822646693966817e-06
    2. ' :' → logprob: -12.250007629394531
    3. '0' → logprob: -14.000007629394531
    4. '1' → logprob: -14.125007629394531
    5. '2' → logprob: -14.750007629394531
    6. '6' → logprob: -15.125007629394531
    7. ',' → logprob: -15.625007629394531
    8. '4' → logprob: -16.25000762939453
    9. '5' → logprob: -16.62500762939453
    10. '3' → logprob: -16.62500762939453

Token 30: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0995369628071785
    2. '100' → logprob: -2.974536895751953
    3. ' ' → logprob: -3.974536895751953
    4. '300' → logprob: -4.599536895751953
    5. '600' → logprob: -5.474536895751953
    6. '5' → logprob: -5.849536895751953
    7. '10' → logprob: -6.599536895751953
    8. '200' → logprob: -6.974536895751953
    9. '50' → logprob: -7.099536895751953
    10. '700' → logprob: -7.099536895751953

Token 31: '300' (ID: 4095)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.019297350198030472
    2. '100' → logprob: -5.269297122955322
    3. '5' → logprob: -5.894297122955322
    4. ' ' → logprob: -5.894297122955322
    5. '600' → logprob: -6.144297122955322
    6. '  ' → logprob: -6.769297122955322
    7. '150' → logprob: -6.769297122955322
    8. '300' → logprob: -7.394297122955322
    9. '   ' → logprob: -7.519297122955322
    10. '50' → logprob: -7.519297122955322

Token 32: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.1905273199081421
    2. ',' → logprob: -1.940527319908142
    3. '0' → logprob: -3.5655274391174316
    4. '00' → logprob: -6.690527439117432
    5. '},' → logprob: -8.690526962280273
    6. '}' → logprob: -9.440526962280273
    7. ' ,' → logprob: -10.815526962280273
    8. ',

' → logprob: -11.065526962280273
    9. ' ' → logprob: -11.440526962280273
    10. '```' → logprob: -11.940526962280273

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.77022064034827e-05
    2. ',
' → logprob: -10.250097274780273
    3. '0' → logprob: -10.625097274780273
    4. ' ,' → logprob: -11.000097274780273
    5. ',

' → logprob: -12.250097274780273
    6. '000' → logprob: -12.375097274780273
    7. '}' → logprob: -12.375097274780273
    8. ',
' → logprob: -13.250097274780273
    9. '00' → logprob: -13.875097274780273
    10. '```' → logprob: -14.000097274780273

Token 34: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012540136463940144
    2. ' ' → logprob: -4.637540340423584
    3. '200' → logprob: -6.887540340423584
    4. '300' → logprob: -7.262540340423584
    5. '1' → logprob: -8.137539863586426
    6. '500' → logprob: -8.137539863586426
    7. '100' → logprob: -8.887539863586426
    8. '700' → logprob: -10.012539863586426
    9. '150' → logprob: -10.012539863586426
    10. '0' → logprob: -10.137539863586426

Token 35: '2' (ID: 17)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.266837477684021
    2. '2' → logprob: -2.1418375968933105
    3. '150' → logprob: -3.6418375968933105
    4. '300' → logprob: -4.0168375968933105
    5. '250' → logprob: -4.0168375968933105
    6. '270' → logprob: -4.1418375968933105
    7. '100' → logprob: -4.6418375968933105
    8. '260' → logprob: -4.6418375968933105
    9. '500' → logprob: -5.5168375968933105
    10. '1' → logprob: -5.7668375968933105

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.578184497309849e-05
    2. ' :' → logprob: -9.500085830688477
    3. ',' → logprob: -11.750085830688477
    4. ' ' → logprob: -14.375085830688477
    5. '300' → logprob: -14.625085830688477
    6. '```' → logprob: -14.875085830688477
    7. ':,' → logprob: -14.875085830688477
    8. '000' → logprob: -15.250085830688477
    9. '0' → logprob: -15.375085830688477
    10. ':
' → logprob: -16.000085830688477

Token 37: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.4298512935638428
    2. '150' → logprob: -1.5548512935638428
    3. ' ' → logprob: -2.6798512935638428
    4. '250' → logprob: -3.0548512935638428
    5. '260' → logprob: -4.679851531982422
    6. '300' → logprob: -5.429851531982422
    7. '100' → logprob: -5.804851531982422
    8. '120' → logprob: -6.929851531982422
    9. '180' → logprob: -6.929851531982422
    10. '400' → logprob: -8.179851531982422

Token 38: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.22597773373126984
    2. '260' → logprob: -2.225977659225464
    3. '250' → logprob: -2.725977659225464
    4. '150' → logprob: -3.850977659225464
    5. '300' → logprob: -6.100977897644043
    6. '240' → logprob: -7.350977897644043
    7. '270' → logprob: -7.350977897644043
    8. '100' → logprob: -7.350977897644043
    9. '180' → logprob: -7.475977897644043
    10. '120' → logprob: -7.850977897644043

Token 39: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -1.0802738870552275e-05
    2. '00' → logprob: -11.50001049041748
    3. '0' → logprob: -14.87501049041748
    4. '```' → logprob: -16.000011444091797
    5. '_' → logprob: -16.625011444091797
    6. '001' → logprob: -16.875011444091797
    7. ' ' → logprob: -17.375011444091797
    8. '{' → logprob: -17.937511444091797
    9. '００' → logprob: -18.062511444091797
    10. '   ' → logprob: -18.375011444091797

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026264708139933646
    2. '}' → logprob: -8.875262260437012
    3. ' ,' → logprob: -9.125262260437012
    4. ',
' → logprob: -12.250262260437012
    5. ',

' → logprob: -12.625262260437012
    6. ' }' → logprob: -13.250262260437012
    7. ',...' → logprob: -14.250262260437012
    8. ' ' → logprob: -14.375262260437012
    9. '3' → logprob: -14.625262260437012
    10. ',
' → logprob: -14.750262260437012

Token 41: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.730729341506958
    2. '3' → logprob: -1.355729341506958
    3. '1' → logprob: -1.480729341506958
    4. '100' → logprob: -3.480729341506958
    5. '150' → logprob: -6.355729103088379
    6. '300' → logprob: -7.730729103088379
    7. '250' → logprob: -9.605729103088379
    8. '500' → logprob: -10.480729103088379
    9. '10' → logprob: -10.605729103088379
    10. '125' → logprob: -11.105729103088379

Token 42: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1504410058259964
    2. ' ' → logprob: -2.2754409313201904
    3. '100' → logprob: -3.5254409313201904
    4. '150' → logprob: -5.6504411697387695
    5. '1' → logprob: -6.0254411697387695
    6. '4' → logprob: -7.1504411697387695
    7. '300' → logprob: -7.7754411697387695
    8. '400' → logprob: -9.27544116973877
    9. '500' → logprob: -9.52544116973877
    10. '50' → logprob: -10.15044116973877

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005562512087635696
    2. '000' → logprob: -7.500556468963623
    3. '00' → logprob: -13.875555992126465
    4. '500' → logprob: -14.500555992126465
    5. ' :' → logprob: -15.000555992126465
    6. '300' → logprob: -15.250555992126465
    7. ',' → logprob: -15.500555992126465
    8. '100' → logprob: -15.625555992126465
    9. '250' → logprob: -15.875555992126465
    10. '```' → logprob: -16.00055694580078

Token 44: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.08041982352733612
    2. ' ' → logprob: -3.2054197788238525
    3. '150' → logprob: -3.4554197788238525
    4. '500' → logprob: -5.455420017242432
    5. '   ' → logprob: -8.080419540405273
    6. '```' → logprob: -8.580419540405273
    7. '"' → logprob: -9.705419540405273
    8. '300' → logprob: -9.830419540405273
    9. '120' → logprob: -10.330419540405273
    10. '  ' → logprob: -10.455419540405273

Token 45: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.06322605162858963
    2. '150' → logprob: -2.8132259845733643
    3. '500' → logprob: -7.063226222991943
    4. '120' → logprob: -9.813225746154785
    5. '{' → logprob: -9.938225746154785
    6. '10' → logprob: -9.938225746154785
    7. '1' → logprob: -10.063225746154785
    8. '   ' → logprob: -10.438225746154785
    9. ' ' → logprob: -10.563225746154785
    10. '(' → logprob: -10.688225746154785

Token 46: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -2.3199920178740285e-05
    2. '00' → logprob: -10.750022888183594
    3. '0' → logprob: -13.625022888183594
    4. '```' → logprob: -14.875022888183594
    5. '001' → logprob: -16.750022888183594
    6. '_' → logprob: -17.250022888183594
    7. '{' → logprob: -17.250022888183594
    8. '۰۰' → logprob: -18.187522888183594
    9. '００' → logprob: -18.437522888183594
    10. ' ' → logprob: -18.750022888183594

Token 47: '}

' (ID: 943)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04861779510974884
    2. '}' → logprob: -3.0486178398132324
    3. ' }' → logprob: -10.548617362976074
    4. ',
' → logprob: -13.048617362976074
    5. ' ,' → logprob: -13.798617362976074
    6. ',

' → logprob: -15.548617362976074
    7. '```' → logprob: -15.548617362976074
    8. ',...' → logprob: -15.673617362976074
    9. '},' → logprob: -16.29861831665039
    10. ' ' → logprob: -16.79861831665039

Token 48: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04996873065829277
    2. 'for' → logprob: -3.674968719482422
    3. '
' → logprob: -4.174968719482422
    4. '```' → logprob: -5.674968719482422
    5. ' if' → logprob: -5.924968719482422
    6. 'first' → logprob: -7.424968719482422
    7. '\n' → logprob: -7.924968719482422
    8. 'i' → logprob: -8.799968719482422
    9. '' → logprob: -8.924968719482422
    10. 'input' → logprob: -9.049968719482422

Token 49: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0013291679788380861
    2. 'input' → logprob: -6.626328945159912
    3. ' ' → logprob: -13.25132942199707
    4. '_input' → logprob: -15.25132942199707
    5. ' first' → logprob: -15.50132942199707
    6. ' rank' → logprob: -15.50132942199707
    7. ' user' → logprob: -15.87632942199707
    8. ' (' → logprob: -15.87632942199707
    9. '(input' → logprob: -16.00132942199707
    10. ' ' → logprob: -16.12632942199707

Token 50: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0007802037871442735
    2. '_' → logprob: -7.25078010559082
    3. '_second' → logprob: -10.25078010559082
    4. '```' → logprob: -11.37578010559082
    5. '_First' → logprob: -12.62578010559082
    6. '_FIRST' → logprob: -12.62578010559082
    7. 'First' → logprob: -12.75078010559082
    8. '_f' → logprob: -12.87578010559082
    9. ')_' → logprob: -13.37578010559082
    10. ''_' → logprob: -13.37578010559082

Token 51: '_rank' (ID: 52820)
  Prédit: '_rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rank' → logprob: -0.0001717166742309928
    2. '_' → logprob: -8.750171661376953
    3. '_first' → logprob: -12.000171661376953
    4. ' _' → logprob: -12.250171661376953
    5. '_r' → logprob: -13.375171661376953
    6. 'rank' → logprob: -15.875171661376953
    7. '_second' → logprob: -16.500171661376953
    8. '__' → logprob: -16.750171661376953
    9. '```' → logprob: -17.000171661376953
    10. '_f' → logprob: -17.250171661376953

Token 52: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01939169503748417
    2. '==' → logprob: -4.1443915367126465
    3. ' <=' → logprob: -5.8943915367126465
    4. ' in' → logprob: -7.6443915367126465
    5. ' ' → logprob: -10.144392013549805
    6. '<=' → logprob: -10.394392013549805
    7. ' >' → logprob: -11.269392013549805
    8. 'in' → logprob: -11.394392013549805
    9. '>' → logprob: -11.894392013549805
    10. ' !=' → logprob: -12.519392013549805

Token 53: ' rank' (ID: 10302)
  Prédit: ' rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rank' → logprob: -0.0031794982496649027
    2. 'rank' → logprob: -5.753179550170898
    3. '(rank' → logprob: -13.628179550170898
    4. ' ' → logprob: -15.003179550170898
    5. '_rank' → logprob: -16.0031795501709
    6. ' range' → logprob: -16.5031795501709
    7. ' ranks' → logprob: -16.8781795501709
    8. '.rank' → logprob: -18.7531795501709
    9. ' ' → logprob: -19.6281795501709
    10. 'range' → logprob: -19.7531795501709

Token 54: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00016027313540689647
    2. '_' → logprob: -9.500160217285156
    3. '_t' → logprob: -9.500160217285156
    4. '__' → logprob: -12.875160217285156
    5. '_-' → logprob: -12.875160217285156
    6. '_

' → logprob: -13.375160217285156
    7. ' _' → logprob: -13.625160217285156
    8. 's' → logprob: -14.125160217285156
    9. '-_' → logprob: -14.500160217285156
    10. '_top' → logprob: -15.000160217285156

Token 55: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -2.069664333248511e-05
    2. 'pr' → logprob: -10.875020980834961
    3. '_p' → logprob: -13.875020980834961
    4. '_' → logprob: -14.875020980834961
    5. '_rank' → logprob: -15.000020980834961
    6. 'Prize' → logprob: -17.00002098083496
    7. '_price' → logprob: -17.37502098083496
    8. '_place' → logprob: -17.87502098083496
    9. '\' → logprob: -18.12502098083496
    10. '_r' → logprob: -18.37502098083496

Token 56: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.0020365375094115734
    2. 'ze' → logprob: -6.2520365715026855
    3. 'izes' → logprob: -10.502036094665527
    4. 'i' → logprob: -10.877036094665527
    5. 'e' → logprob: -11.127036094665527
    6. 'iz' → logprob: -11.252036094665527
    7. 'z' → logprob: -12.377036094665527
    8. 'zie' → logprob: -12.502036094665527
    9. '```' → logprob: -12.502036094665527
    10. 'ized' → logprob: -13.377036094665527

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.8908587662735954e-05
    2. '):' → logprob: -11.500019073486328
    3. ' :' → logprob: -12.500019073486328
    4. ':
' → logprob: -13.000019073486328
    5. ':**' → logprob: -13.500019073486328
    6. ']:' → logprob: -14.875019073486328
    7. '}:' → logprob: -15.125019073486328
    8. ' and' → logprob: -15.250019073486328
    9. '>:' → logprob: -16.000019073486328
    10. 'and' → logprob: -17.000019073486328

Token 58: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19272951781749725
    2. '   ' → logprob: -2.3177294731140137
    3. ' prize' → logprob: -2.6927294731140137
    4. 'pr' → logprob: -5.192729473114014
    5. '	pr' → logprob: -6.567729473114014
    6. ':
' → logprob: -7.317729473114014
    7. ',' → logprob: -8.442729949951172
    8. ' :' → logprob: -8.442729949951172
    9. ')' → logprob: -8.692729949951172
    10. '(pr' → logprob: -8.817729949951172

Token 59: ' prize' (ID: 29528)
  Prédit: ' prize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prize' → logprob: -0.043570201843976974
    2. 'pr' → logprob: -3.1685702800750732
    3. '   ' → logprob: -7.668570041656494
    4. '	pr' → logprob: -9.918570518493652
    5. '
' → logprob: -10.793570518493652
    6. '(pr' → logprob: -11.293570518493652
    7. '_pr' → logprob: -11.918570518493652
    8. ' pr' → logprob: -12.543570518493652
    9. 'Prize' → logprob: -12.668570518493652
    10. '    
' → logprob: -13.168570518493652

Token 60: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.00010342398309148848
    2. '_' → logprob: -9.250102996826172
    3. '_to' → logprob: -12.375102996826172
    4. ' _' → logprob: -14.250102996826172
    5. '_t' → logprob: -14.625102996826172
    6. ')_' → logprob: -14.875102996826172
    7. '_tot' → logprob: -15.250102996826172
    8. 'total' → logprob: -15.500102996826172
    9. '__' → logprob: -15.625102996826172
    10. '_final' → logprob: -15.625102996826172

Token 61: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.003697581822052598
    2. '+=' → logprob: -5.628697395324707
    3. ' =' → logprob: -9.628697395324707
    4. '=' → logprob: -10.503697395324707
    5. '+' → logprob: -14.128697395324707
    6. ']+=' → logprob: -14.253697395324707
    7. ' ' → logprob: -14.628697395324707
    8. ' ' → logprob: -14.753697395324707
    9. ' -=' → logprob: -14.878697395324707
    10. '+='' → logprob: -15.253697395324707

Token 62: ' rank' (ID: 10302)
  Prédit: ' rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rank' → logprob: -0.20141470432281494
    2. 'rank' → logprob: -1.701414704322815
    3. '(rank' → logprob: -13.576415061950684
    4. ' ' → logprob: -16.826414108276367
    5. '_rank' → logprob: -17.826414108276367
    6. 'pr' → logprob: -18.576414108276367
    7. ' ' → logprob: -18.701414108276367
    8. '.rank' → logprob: -19.201414108276367
    9. '   ' → logprob: -19.326414108276367
    10. 'Rank' → logprob: -20.201414108276367

Token 63: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.002260759938508272
    2. '_first' → logprob: -6.127260684967041
    3. '_' → logprob: -10.2522611618042
    4. ')_' → logprob: -12.1272611618042
    5. '```' → logprob: -12.2522611618042
    6. ' _' → logprob: -12.3772611618042
    7. '_total' → logprob: -12.7522611618042
    8. '__' → logprob: -12.8772611618042
    9. '`' → logprob: -13.0022611618042
    10. '_t' → logprob: -13.3772611618042

Token 64: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.060750365257263184
    2. 'ize' → logprob: -3.3107504844665527
    3. 'pr' → logprob: -4.310750484466553
    4. 'ze' → logprob: -4.810750484466553
    5. '_p' → logprob: -7.935750484466553
    6. 'z' → logprob: -8.185750007629395
    7. 'e' → logprob: -9.685750007629395
    8. 'zie' → logprob: -10.685750007629395
    9. 'iz' → logprob: -10.935750007629395
    10. 'r' → logprob: -10.935750007629395

Token 65: 'ize' (ID: 750)
  Prédit: 'ze'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ze' → logprob: -0.578080415725708
    2. 'ize' → logprob: -0.828080415725708
    3. 'e' → logprob: -7.078080177307129
    4. 'z' → logprob: -7.953080177307129
    5. '```' → logprob: -8.578080177307129
    6. 'zie' → logprob: -8.953080177307129
    7. '[' → logprob: -9.578080177307129
    8. '   ' → logprob: -9.828080177307129
    9. '_to' → logprob: -9.953080177307129
    10. 'oze' → logprob: -10.203080177307129

Token 66: '[input' (ID: 157156)
  Prédit: '[input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.00012130453251302242
    2. '[' → logprob: -9.250121116638184
    3. '[first' → logprob: -10.625121116638184
    4. '[in' → logprob: -15.375121116638184
    5. '\[' → logprob: -15.500121116638184
    6. '```' → logprob: -16.5001220703125
    7. '(input' → logprob: -17.0001220703125
    8. '[
' → logprob: -17.1251220703125
    9. '[ip' → logprob: -17.2501220703125
    10. '[token' → logprob: -17.3751220703125

Token 67: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -2.935296834039036e-06
    2. '_second' → logprob: -12.87500286102295
    3. 'first' → logprob: -16.500003814697266
    4. ']_' → logprob: -17.500003814697266
    5. '```' → logprob: -17.750003814697266
    6. '_' → logprob: -18.125003814697266
    7. '_f' → logprob: -18.375003814697266
    8. '_FIRST' → logprob: -18.500003814697266
    9. 'First' → logprob: -18.625003814697266
    10. '[first' → logprob: -18.625003814697266

Token 68: '_rank' (ID: 52820)
  Prédit: '_rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rank' → logprob: -1.1756367712223437e-05
    2. '_first' → logprob: -11.500011444091797
    3. 'rank' → logprob: -13.500011444091797
    4. '_' → logprob: -16.750011444091797
    5. ' _' → logprob: -16.875011444091797
    6. '_r' → logprob: -17.250011444091797
    7. '_second' → logprob: -17.500011444091797
    8. '```' → logprob: -18.000011444091797
    9. ']_' → logprob: -18.875011444091797
    10. '_score' → logprob: -19.500011444091797

Token 69: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0691961869597435
    2. ')' → logprob: -2.8191962242126465
    3. '}' → logprob: -4.9441962242126465
    4. '])' → logprob: -10.694195747375488
    5. ' ]' → logprob: -10.944195747375488
    6. '）' → logprob: -11.444195747375488
    7. '']' → logprob: -11.819195747375488
    8. ']
' → logprob: -12.319195747375488
    9. ' }' → logprob: -12.569195747375488
    10. ' )' → logprob: -12.819195747375488

Token 70: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2674398422241211
    2. '
' → logprob: -1.642439842224121
    3. 'elif' → logprob: -4.642439842224121
    4. ' if' → logprob: -4.892439842224121
    5. '  
' → logprob: -5.142439842224121
    6. '    
' → logprob: -5.267439842224121
    7. ' 
' → logprob: -5.392439842224121
    8. '\n' → logprob: -5.892439842224121
    9. '```' → logprob: -6.017439842224121
    10. '
' → logprob: -6.892439842224121

Token 71: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.006723653059452772
    2. 'input' → logprob: -5.006723880767822
    3. ' ' → logprob: -12.131723403930664
    4. ' ' → logprob: -13.256723403930664
    5. '	input' → logprob: -14.631723403930664
    6. '(input' → logprob: -15.506723403930664
    7. '_input' → logprob: -15.631723403930664
    8. '<input' → logprob: -15.756723403930664
    9. '[input' → logprob: -16.881723403930664
    10. ' user' → logprob: -17.131723403930664

Token 72: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -1.0564331205387134e-05
    2. '_first' → logprob: -11.87501049041748
    3. '_' → logprob: -13.62501049041748
    4. ''_' → logprob: -14.12501049041748
    5. '_secondary' → logprob: -14.25001049041748
    6. '_seconds' → logprob: -15.25001049041748
    7. 'Second' → logprob: -15.62501049041748
    8. '"_' → logprob: -15.87501049041748
    9. 'second' → logprob: -16.000011444091797
    10. '```' → logprob: -16.250011444091797

Token 73: '_rank' (ID: 52820)
  Prédit: '_rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rank' → logprob: -9.729906196298543e-06
    2. '_' → logprob: -12.000009536743164
    3. ' _' → logprob: -13.375009536743164
    4. '_r' → logprob: -14.125009536743164
    5. '_second' → logprob: -14.125009536743164
    6. '_code' → logprob: -16.500009536743164
    7. '```' → logprob: -16.750009536743164
    8. '_first' → logprob: -17.000009536743164
    9. ''_' → logprob: -17.000009536743164
    10. 'rank' → logprob: -17.500009536743164

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006919850129634142
    2. 'in' → logprob: -5.006919860839844
    3. ' ' → logprob: -8.506919860839844
    4. ' ' → logprob: -13.631919860839844
    5. ' not' → logprob: -15.631919860839844
    6. '	in' → logprob: -15.881919860839844
    7. 'and' → logprob: -16.506919860839844
    8. '  ' → logprob: -16.506919860839844
    9. 'not' → logprob: -16.631919860839844
    10. 'space' → logprob: -16.944419860839844

Token 75: ' rank' (ID: 10302)
  Prédit: ' rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rank' → logprob: -0.2014196664094925
    2. 'rank' → logprob: -1.701419711112976
    3. ' ' → logprob: -12.701419830322266
    4. '(rank' → logprob: -13.326419830322266
    5. 'pr' → logprob: -13.951419830322266
    6. ' prize' → logprob: -15.076419830322266
    7. '_rank' → logprob: -16.451419830322266
    8. ' ' → logprob: -16.451419830322266
    9. 'r' → logprob: -17.201419830322266
    10. 'range' → logprob: -17.201419830322266

Token 76: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.531315314830863e-06
    2. 'o' → logprob: -13.375003814697266
    3. 'to' → logprob: -13.500003814697266
    4. 't' → logprob: -16.125003814697266
    5. 'ot' → logprob: -16.875003814697266
    6. 'ed' → logprob: -16.875003814697266
    7. '_' → logprob: -17.125003814697266
    8. 'To' → logprob: -17.125003814697266
    9. '```' → logprob: -17.125003814697266
    10. 'e' → logprob: -17.375003814697266

Token 77: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.00977981835603714
    2. 'pr' → logprob: -4.634779930114746
    3. 'rank' → logprob: -11.134779930114746
    4. '	pr' → logprob: -13.009779930114746
    5. '_rank' → logprob: -13.009779930114746
    6. 'Prize' → logprob: -14.134779930114746
    7. ' prize' → logprob: -14.134779930114746
    8. 'r' → logprob: -14.384779930114746
    9. '_p' → logprob: -14.759779930114746
    10. '_to' → logprob: -15.009779930114746

Token 78: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.2818702757358551
    2. 'ze' → logprob: -1.4068702459335327
    3. 'e' → logprob: -8.156869888305664
    4. '```' → logprob: -9.156869888305664
    5. 'oze' → logprob: -10.031869888305664
    6. 'r' → logprob: -10.281869888305664
    7. '   ' → logprob: -10.656869888305664
    8. '_to' → logprob: -10.781869888305664
    9. '[' → logprob: -10.906869888305664
    10. 'zie' → logprob: -10.906869888305664

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009122979827225208
    2. ':
' → logprob: -7.000912189483643
    3. ' :' → logprob: -15.2509126663208
    4. '[' → logprob: -15.8759126663208
    5. ':

' → logprob: -16.000911712646484
    6. ':
' → logprob: -16.000911712646484
    7. '   ' → logprob: -16.375911712646484
    8. '):' → logprob: -16.375911712646484
    9. ' :
' → logprob: -18.625911712646484
    10. '=' → logprob: -18.625911712646484

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014789039269089699
    2. 'pr' → logprob: -4.88978910446167
    3. ' prize' → logprob: -6.13978910446167
    4. '    ' → logprob: -6.63978910446167
    5. ' rank' → logprob: -6.76478910446167
    6. 'rank' → logprob: -6.88978910446167
    7. '       ' → logprob: -6.88978910446167
    8. ' ' → logprob: -9.264788627624512
    9. '  ' → logprob: -9.389788627624512
    10. '
' → logprob: -9.514788627624512

Token 81: ' prize' (ID: 29528)
  Prédit: ' prize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prize' → logprob: -0.057220473885536194
    2. ' rank' → logprob: -3.432220458984375
    3. 'pr' → logprob: -3.807220458984375
    4. 'rank' → logprob: -7.432220458984375
    5. ' pr' → logprob: -7.682220458984375
    6. '   ' → logprob: -10.932220458984375
    7. '(pr' → logprob: -11.807220458984375
    8. '	pr' → logprob: -12.807220458984375
    9. '    ' → logprob: -13.432220458984375
    10. ' ' → logprob: -13.932220458984375

Token 82: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -9.088346359931165e-07
    2. 'total' → logprob: -15.125000953674316
    3. '```' → logprob: -15.125000953674316
    4. '_' → logprob: -15.750000953674316
    5. 'Total' → logprob: -16.0
    6. '_tot' → logprob: -16.75
    7. ' _' → logprob: -17.375
    8. '_TOTAL' → logprob: -18.0
    9. '_Total' → logprob: -18.375
    10. '_to' → logprob: -18.625

Token 83: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04869251325726509
    2. '+=' → logprob: -3.048692464828491
    3. '+' → logprob: -9.79869270324707
    4. ' +' → logprob: -10.04869270324707
    5. ']+=' → logprob: -12.79869270324707
    6. '```' → logprob: -13.54869270324707
    7. ' ' → logprob: -13.92369270324707
    8. ' ' → logprob: -14.67369270324707
    9. '>' → logprob: -15.79869270324707
    10. '[' → logprob: -16.04869270324707

Token 84: ' rank' (ID: 10302)
  Prédit: ' rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rank' → logprob: -0.3868750035762787
    2. 'rank' → logprob: -1.136875033378601
    3. '(rank' → logprob: -12.51187515258789
    4. 'pr' → logprob: -15.51187515258789
    5. ' ' → logprob: -16.38687515258789
    6. '_rank' → logprob: -16.76187515258789
    7. '   ' → logprob: -17.63687515258789
    8. ' ' → logprob: -18.63687515258789
    9. '.rank' → logprob: -19.01187515258789
    10. ' prize' → logprob: -19.51187515258789

Token 85: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.9361264946837764e-07
    2. '_second' → logprob: -16.375
    3. 'to' → logprob: -18.5
    4. '_total' → logprob: -19.0
    5. '```' → logprob: -19.625
    6. ' _' → logprob: -19.625
    7. '_' → logprob: -20.0
    8. '_t' → logprob: -20.0
    9. '[_' → logprob: -20.5
    10. 'o' → logprob: -20.875

Token 86: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.32690826058387756
    2. 'pr' → logprob: -1.3269082307815552
    3. 'rank' → logprob: -4.326908111572266
    4. 'r' → logprob: -8.576908111572266
    5. ' prize' → logprob: -10.076908111572266
    6. 'z' → logprob: -10.576908111572266
    7. 'e' → logprob: -12.076908111572266
    8. 'Prize' → logprob: -12.076908111572266
    9. '_p' → logprob: -12.326908111572266
    10. 'p' → logprob: -12.326908111572266

Token 87: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.1136108860373497
    2. 'ze' → logprob: -2.2386109828948975
    3. 'e' → logprob: -7.613610744476318
    4. '_' → logprob: -9.863611221313477
    5. 'oze' → logprob: -10.238611221313477
    6. '[' → logprob: -10.363611221313477
    7. '_to' → logprob: -10.488611221313477
    8. '   ' → logprob: -11.113611221313477
    9. 'z' → logprob: -11.363611221313477
    10. 'aze' → logprob: -11.613611221313477

Token 88: '[input' (ID: 157156)
  Prédit: '[input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.0009226576657965779
    2. '[' → logprob: -7.000922679901123
    3. '[in' → logprob: -11.750922203063965
    4. '[first' → logprob: -14.000922203063965
    5. '```' → logprob: -14.500922203063965
    6. ' [' → logprob: -14.750922203063965
    7. '[data' → logprob: -15.250922203063965
    8. '\[' → logprob: -15.500922203063965
    9. '[...]' → logprob: -15.625922203063965
    10. '[
' → logprob: -16.12592315673828

Token 89: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -1.306760805164231e-05
    2. '_first' → logprob: -11.50001335144043
    3. 'second' → logprob: -13.50001335144043
    4. '_rank' → logprob: -13.62501335144043
    5. 'Second' → logprob: -16.50001335144043
    6. '```' → logprob: -16.62501335144043
    7. '[' → logprob: -17.62501335144043
    8. '_' → logprob: -17.87501335144043
    9. '_secondary' → logprob: -18.00001335144043
    10. '_SECOND' → logprob: -18.25001335144043

Token 90: '_rank' (ID: 52820)
  Prédit: '_rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rank' → logprob: -0.006721756421029568
    2. '_second' → logprob: -5.0067219734191895
    3. 'rank' → logprob: -12.131721496582031
    4. '_first' → logprob: -14.381721496582031
    5. '_r' → logprob: -16.00672149658203
    6. '```' → logprob: -16.00672149658203
    7. '_' → logprob: -16.38172149658203
    8. 'second' → logprob: -16.75672149658203
    9. '_s' → logprob: -17.88172149658203
    10. 'Rank' → logprob: -18.38172149658203

Token 91: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6537622034084052e-05
    2. '}' → logprob: -11.50002670288086
    3. ')
' → logprob: -11.75002670288086
    4. ' )' → logprob: -12.12502670288086
    5. '）' → logprob: -13.62502670288086
    6. ']' → logprob: -14.75002670288086
    7. '))' → logprob: -15.25002670288086
    8. ')}' → logprob: -15.25002670288086
    9. '```' → logprob: -15.25002670288086
    10. ')return' → logprob: -15.37502670288086

Token 92: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016551809676457196
    2. '
' → logprob: -8.875165939331055
    3. ' print' → logprob: -10.750165939331055
    4. '\n' → logprob: -13.750165939331055
    5. '```' → logprob: -14.000165939331055
    6. 'pr' → logprob: -14.375165939331055
    7. '\' → logprob: -15.000165939331055
    8. '+' → logprob: -15.125165939331055
    9. '
' → logprob: -15.125165939331055
    10. '#' → logprob: -15.250165939331055

Token 93: ' input' (ID: 3422)
  Prédit: ' prize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prize' → logprob: -0.03348835930228233
    2. ' input' → logprob: -3.6584882736206055
    3. 'pr' → logprob: -5.1584882736206055
    4. 'input' → logprob: -7.5334882736206055
    5. ' ' → logprob: -7.9084882736206055
    6. '(pr' → logprob: -8.658488273620605
    7. ' rank' → logprob: -9.533488273620605
    8. ' (' → logprob: -9.658488273620605
    9. ' pr' → logprob: -10.033488273620605
    10. '  ' → logprob: -10.158488273620605

Token 94: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0030138343572616577
    2. '_second' → logprob: -6.003013610839844
    3. '_' → logprob: -8.253013610839844
    4. '_total' → logprob: -8.253013610839844
    5. ' _' → logprob: -12.378013610839844
    6. '_f' → logprob: -13.003013610839844
    7. '_final' → logprob: -13.128013610839844
    8. ''_' → logprob: -13.253013610839844
    9. '```' → logprob: -13.378013610839844
    10. '__' → logprob: -13.503013610839844

Token 95: '_rank' (ID: 52820)
  Prédit: '_rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rank' → logprob: -3.7697225252486533e-06
    2. '_' → logprob: -14.000003814697266
    3. '_r' → logprob: -14.000003814697266
    4. '_second' → logprob: -14.125003814697266
    5. '_first' → logprob: -15.375003814697266
    6. '```' → logprob: -15.625003814697266
    7. 'rank' → logprob: -15.750003814697266
    8. ' _' → logprob: -16.500003814697266
    9. ''_' → logprob: -16.750003814697266
    10. '_score' → logprob: -16.875003814697266

Token 96: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5232557654380798
    2. ' ==' → logprob: -1.0232558250427246
    3. '!=' → logprob: -3.6482558250427246
    4. ' !=' → logprob: -3.8982558250427246
    5. '>' → logprob: -8.023255348205566
    6. ' ' → logprob: -8.148255348205566
    7. '<=' → logprob: -8.148255348205566
    8. '<' → logprob: -8.523255348205566
    9. ' <=' → logprob: -8.898255348205566
    10. ' <' → logprob: -9.023255348205566

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5336949229240417
    2. 'input' → logprob: -1.6586949825286865
    3. ' ' → logprob: -1.6586949825286865
    4. ' input' → logprob: -3.5336949825286865
    5. '2' → logprob: -5.908694744110107
    6. '3' → logprob: -8.283695220947266
    7. '0' → logprob: -8.783695220947266
    8. '6' → logprob: -9.971195220947266
    9. '7' → logprob: -10.096195220947266
    10. '100' → logprob: -10.346195220947266

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5779184699058533
    2. 'input' → logprob: -0.8279184699058533
    3. '2' → logprob: -7.202918529510498
    4. ' ' → logprob: -7.327918529510498
    5. ' input' → logprob: -8.20291805267334
    6. '0' → logprob: -9.32791805267334
    7. '3' → logprob: -9.82791805267334
    8. '(input' → logprob: -10.07791805267334
    9. '6' → logprob: -10.82791805267334
    10. '-' → logprob: -11.20291805267334

Token 99: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7530493140220642
    2. ' and' → logprob: -1.003049373626709
    3. ' or' → logprob: -1.878049373626709
    4. 'and' → logprob: -5.003049373626709
    5. ' :' → logprob: -6.253049373626709
    6. 'or' → logprob: -7.253049373626709
    7. ' ' → logprob: -10.37804889678955
    8. ':
' → logprob: -10.50304889678955
    9. ' ' → logprob: -13.12804889678955
    10. '>' → logprob: -13.25304889678955

Token 100: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3868789076805115
    2. 'input' → logprob: -1.1368789672851562
    3. ' ' → logprob: -12.511878967285156
    4. 'not' → logprob: -13.386878967285156
    5. ' not' → logprob: -13.636878967285156
    6. '  ' → logprob: -14.886878967285156
    7. '<input' → logprob: -15.011878967285156
    8. '   ' → logprob: -15.136878967285156
    9. '(input' → logprob: -15.761878967285156
    10. '	input' → logprob: -15.886878967285156

Token 101: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -2.5107177862082608e-05
    2. '_first' → logprob: -10.750024795532227
    3. 'second' → logprob: -12.875024795532227
    4. '_' → logprob: -14.000024795532227
    5. 'Second' → logprob: -16.750024795532227
    6. '_secondary' → logprob: -17.625024795532227
    7. ' _' → logprob: -18.375024795532227
    8. '```' → logprob: -18.375024795532227
    9. '_SECOND' → logprob: -18.625024795532227
    10. ' second' → logprob: -18.625024795532227

Token 102: '_rank' (ID: 52820)
  Prédit: '_rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rank' → logprob: -3.7697225252486533e-06
    2. 'rank' → logprob: -13.500003814697266
    3. '_r' → logprob: -13.750003814697266
    4. '_' → logprob: -14.000003814697266
    5. ' _' → logprob: -16.125003814697266
    6. '_second' → logprob: -16.500003814697266
    7. '```' → logprob: -16.750003814697266
    8. '_first' → logprob: -16.875003814697266
    9. '__' → logprob: -17.250003814697266
    10. 'Rank' → logprob: -17.625003814697266

Token 103: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6327283382415771
    2. ' ==' → logprob: -0.7577283382415771
    3. ' !=' → logprob: -9.632728576660156
    4. '!=' → logprob: -10.132728576660156
    5. ' ' → logprob: -11.382728576660156
    6. '<|end|>' → logprob: -12.132728576660156
    7. ' ' → logprob: -13.757728576660156
    8. ' <=' → logprob: -14.132728576660156
    9. '==
' → logprob: -14.257728576660156
    10. '```' → logprob: -14.257728576660156

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16475491225719452
    2. ' ' → logprob: -1.914754867553711
    3. '2' → logprob: -5.414754867553711
    4. '3' → logprob: -9.664754867553711
    5. '4' → logprob: -12.789754867553711
    6. '  ' → logprob: -13.727254867553711
    7. '<|end|>' → logprob: -13.852254867553711
    8. '   ' → logprob: -15.164754867553711
    9. '0' → logprob: -15.289754867553711
    10. '5' → logprob: -15.289754867553711

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027554957196116447
    2. '2' → logprob: -3.652554988861084
    3. ' ' → logprob: -6.777554988861084
    4. '3' → logprob: -9.152554512023926
    5. '4' → logprob: -12.777554512023926
    6. '  ' → logprob: -14.215054512023926
    7. '   ' → logprob: -14.277554512023926
    8. '```' → logprob: -14.277554512023926
    9. '5' → logprob: -14.527554512023926
    10. '0' → logprob: -14.652554512023926

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015177152818068862
    2. ':
' → logprob: -6.5015177726745605
    3. ' :' → logprob: -11.751517295837402
    4. ' and' → logprob: -12.126517295837402
    5. '   ' → logprob: -13.501517295837402
    6. 'and' → logprob: -15.376517295837402
    7. ':

' → logprob: -15.626517295837402
    8. ':
' → logprob: -16.12651824951172
    9. ' :
' → logprob: -16.25151824951172
    10. ' or' → logprob: -17.62651824951172

Token 107: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8122920393943787
    2. '   ' → logprob: -0.9372920393943787
    3. ':
' → logprob: -1.8122920989990234
    4. ' prize' → logprob: -7.687292098999023
    5. 'pr' → logprob: -8.687292098999023
    6. ' and' → logprob: -9.062292098999023
    7. ' :
' → logprob: -9.062292098999023
    8. ' :' → logprob: -9.062292098999023
    9. ':
' → logprob: -10.187292098999023
    10. ':

' → logprob: -10.562292098999023

Token 108: ' prize' (ID: 29528)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.4078150987625122
    2. ' prize' → logprob: -1.1578150987625122
    3. '   ' → logprob: -3.9078149795532227
    4. '
' → logprob: -8.157814979553223
    5. '	pr' → logprob: -8.907814979553223
    6. '    ' → logprob: -10.532814979553223
    7. '    
' → logprob: -10.657814979553223
    8. '(pr' → logprob: -10.782814979553223
    9. ' pr' → logprob: -10.782814979553223
    10. 'print' → logprob: -10.907814979553223

Token 109: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -5.512236498361744e-07
    2. 'total' → logprob: -14.750000953674316
    3. '_' → logprob: -16.625
    4. '_tot' → logprob: -17.25
    5. '_final' → logprob: -17.625
    6. '_to' → logprob: -18.0
    7. 'Total' → logprob: -18.875
    8. '```' → logprob: -19.0
    9. ' _' → logprob: -19.375
    10. '_TOTAL' → logprob: -19.5

Token 110: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.48810282349586487
    2. ' +=' → logprob: -0.9881027936935425
    3. ' *=' → logprob: -4.988102912902832
    4. '*=' → logprob: -5.113102912902832
    5. '=' → logprob: -7.113102912902832
    6. '*' → logprob: -9.113102912902832
    7. ' =' → logprob: -9.488102912902832
    8. ' //' → logprob: -11.113102912902832
    9. '+' → logprob: -11.113102912902832
    10. ' *' → logprob: -11.363102912902832

Token 111: ' ' (ID: 220)
  Prédit: '400'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -0.6329913139343262
    2. '500' → logprob: -1.5079913139343262
    3. ' ' → logprob: -2.257991313934326
    4. '300' → logprob: -2.382991313934326
    5. '700' → logprob: -3.507991313934326
    6. '100' → logprob: -4.132991313934326
    7. '200' → logprob: -5.882991313934326
    8. 'bonus' → logprob: -7.632991313934326
    9. '800' → logprob: -8.132991790771484
    10. 'pr' → logprob: -8.132991790771484

Token 112: '400' (ID: 4812)
  Prédit: '400'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -0.08238434791564941
    2. '500' → logprob: -3.4573843479156494
    3. '200' → logprob: -3.8323843479156494
    4. '300' → logprob: -4.20738410949707
    5. '100' → logprob: -4.95738410949707
    6. '700' → logprob: -5.70738410949707
    7. 'bonus' → logprob: -8.20738410949707
    8. 'additional' → logprob: -8.95738410949707
    9. '800' → logprob: -9.58238410949707
    10. ' ' → logprob: -10.08238410949707

Token 113: '000' (ID: 1302)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008489995263516903
    2. '
' → logprob: -5.008490085601807
    3. '<|end|>' → logprob: -6.508490085601807
    4. ' print' → logprob: -9.258489608764648
    5. ')' → logprob: -9.633489608764648
    6. '#' → logprob: -9.633489608764648
    7. '```' → logprob: -11.008489608764648
    8. '\n' → logprob: -12.133489608764648
    9. '(print' → logprob: -12.383489608764648
    10. 'else' → logprob: -12.508489608764648

Token 115: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006082972511649132
    2. '
' → logprob: -5.131083011627197
    3. ' print' → logprob: -9.506082534790039
    4. '```' → logprob: -10.381082534790039
    5. '<|end|>' → logprob: -11.131082534790039
    6. ')' → logprob: -11.131082534790039
    7. '#' → logprob: -12.006082534790039
    8. '
' → logprob: -12.381082534790039
    9. 'elif' → logprob: -14.006082534790039
    10. '#print' → logprob: -14.006082534790039

Token 116: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.4743496775627136
    2. '(' → logprob: -0.9743496775627136
    3. '()' → logprob: -8.474349975585938
    4. '('' → logprob: -10.099349975585938
    5. '("("' → logprob: -11.724349975585938
    6. '(pl' → logprob: -12.224349975585938
    7. '(f' → logprob: -12.599349975585938
    8. '((' → logprob: -13.724349975585938
    9. '(`' → logprob: -13.849349975585938
    10. '(p' → logprob: -14.224349975585938

Token 117: 'ize' (ID: 750)
  Prédit: 'ze'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ze' → logprob: -0.5765067934989929
    2. 'ize' → logprob: -0.8265067934989929
    3. 'z' → logprob: -7.951506614685059
    4. 't' → logprob: -8.701506614685059
    5. 'e' → logprob: -11.451506614685059
    6. 'nt' → logprob: -11.451506614685059
    7. 'IZE' → logprob: -11.951506614685059
    8. 'iz' → logprob: -12.201506614685059
    9. 'zie' → logprob: -12.576506614685059
    10. '
' → logprob: -12.951506614685059

Token 118: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.1472419600977446e-06
    2. ')_' → logprob: -14.375000953674316
    3. 'total' → logprob: -16.000001907348633
    4. ')' → logprob: -16.000001907348633
    5. '_tot' → logprob: -16.375001907348633
    6. '_' → logprob: -16.375001907348633
    7. '_first' → logprob: -17.000001907348633
    8. '_)' → logprob: -17.500001907348633
    9. '_t' → logprob: -18.000001907348633
    10. '_to' → logprob: -18.625001907348633

Token 119: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.625
    3. ')`' → logprob: -17.25
    4. ')
' → logprob: -17.625
    5. '))' → logprob: -18.875
    6. ')}' → logprob: -20.625
    7. '）' → logprob: -20.625
    8. '}' → logprob: -20.75
    9. '`)' → logprob: -21.25
    10. '),' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 117
Tokens correctement prédits (1ère position, stricte): 68
Tokens correctement prédits (1ère position, avec adaptation): 68
Tokens correctement prédits (top 10): 100
Précision stricte (1ère position): 58.12%
Précision adaptée (1ère position): 58.12%
Précision (top 10): 85.47%
================================================================================
