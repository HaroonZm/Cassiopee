================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import sub, floordiv
from itertools import count, islice

a, b = map(int, input().split())
delta = reduce(sub, (b, 1)), reduce(sub, (a, 1))
div = floordiv(*delta)
gen = (div + (1 if (b - 1) % (a - 1) else 0) for _ in count(0))
print(next(islice(gen, 0, 1)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005409015342593193
    2. '(lambda' → logprob: -5.880409240722656
    3. ' (' → logprob: -6.755409240722656
    4. '.' → logprob: -7.880409240722656
    5. ',' → logprob: -8.505409240722656
    6. ' ' → logprob: -8.880409240722656
    7. '\' → logprob: -8.880409240722656
    8. ''' → logprob: -9.005409240722656
    9. '(space' → logprob: -9.505409240722656
    10. '```' → logprob: -9.630409240722656

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0243254154920578
    2. 'import' → logprob: -3.899325370788574
    3. '.' → logprob: -5.774325370788574
    4. ' ' → logprob: -7.399325370788574
    5. ' .' → logprob: -10.149325370788574
    6. '	import' → logprob: -11.899325370788574
    7. '.import' → logprob: -12.774325370788574
    8. '<|end|>' → logprob: -13.274325370788574
    9. ' Import' → logprob: -13.649325370788574
    10. '_import' → logprob: -13.774325370788574

Token 8: ' sub' (ID: 1543)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1571701467037201
    2. ' import' → logprob: -2.282170057296753
    3. 'add' → logprob: -3.907170057296753
    4. ' mul' → logprob: -4.282170295715332
    5. ' ' → logprob: -5.532170295715332
    6. 'import' → logprob: -5.657170295715332
    7. 'mul' → logprob: -6.907170295715332
    8. ' item' → logprob: -7.407170295715332
    9. ' icon' → logprob: -9.157170295715332
    10. 'item' → logprob: -9.532170295715332

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0437198132276535
    2. '\' → logprob: -3.66871976852417
    3. '(
' → logprob: -5.16871976852417
    4. '\n' → logprob: -5.16871976852417
    5. ',' → logprob: -5.91871976852417
    6. '\(' → logprob: -7.04371976852417
    7. ')' → logprob: -7.41871976852417
    8. '`' → logprob: -8.043720245361328
    9. '(

' → logprob: -8.668720245361328
    10. 'def' → logprob: -8.793720245361328

Token 10: ' flo' (ID: 15037)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0591440387070179
    2. 'mul' → logprob: -3.4341440200805664
    3. ' add' → logprob: -4.434144020080566
    4. 'tr' → logprob: -4.809144020080566
    5. ' mul' → logprob: -5.684144020080566
    6. '```' → logprob: -7.559144020080566
    7. ' tr' → logprob: -7.684144020080566
    8. 'pow' → logprob: -8.559144020080566
    9. 'item' → logprob: -9.184144020080566
    10. 'getitem' → logprob: -9.309144020080566

Token 11: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.12700212001800537
    2. 'or' → logprob: -2.127002239227295
    3. 'o' → logprob: -10.002001762390137
    4. 'r' → logprob: -11.752001762390137
    5. 'orm' → logprob: -11.877001762390137
    6. 'od' → logprob: -11.877001762390137
    7. 'orld' → logprob: -13.252001762390137
    8. '```' → logprob: -13.502001762390137
    9. '(or' → logprob: -14.377001762390137
    10. 'ol' → logprob: -14.627001762390137

Token 12: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.75
    3. '_iv' → logprob: -17.625
    4. '_div' → logprob: -18.0
    5. 'ivid' → logprob: -18.375
    6. 'ivi' → logprob: -19.375
    7. 'vision' → logprob: -20.375
    8. 'ivs' → logprob: -20.875
    9. ' iv' → logprob: -21.0
    10. 'IV' → logprob: -21.0

Token 13: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4627523422241211
    2. '(' → logprob: -1.962752342224121
    3. ',
' → logprob: -3.087752342224121
    4. '(
' → logprob: -3.212752342224121
    5. '\n' → logprob: -3.587752342224121
    6. '
' → logprob: -3.712752342224121
    7. 'def' → logprob: -3.962752342224121
    8. '\' → logprob: -4.462752342224121
    9. '

' → logprob: -4.837752342224121
    10. '#' → logprob: -5.212752342224121

Token 14: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5566674470901489
    2. '(' → logprob: -1.306667447090149
    3. '(
' → logprob: -3.0566673278808594
    4. 'def' → logprob: -3.4316673278808594
    5. ',
' → logprob: -3.9316673278808594
    6. '#' → logprob: -4.806667327880859
    7. ')' → logprob: -5.056667327880859
    8. '`' → logprob: -5.181667327880859
    9. 'a' → logprob: -5.181667327880859
    10. '\' → logprob: -5.306667327880859

Token 15: ' itertools' (ID: 103178)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.022898226976394653
    2. ' math' → logprob: -4.397898197174072
    3. 'operator' → logprob: -4.647898197174072
    4. ' itertools' → logprob: -9.14789867401123
    5. ' operator' → logprob: -9.39789867401123
    6. 'random' → logprob: -9.64789867401123
    7. 'import' → logprob: -9.64789867401123
    8. 'collections' → logprob: -9.77289867401123
    9. ' fractions' → logprob: -9.89789867401123
    10. 'ast' → logprob: -10.02289867401123

Token 16: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.45428466796875
    2. ' import' → logprob: -1.07928466796875
    3. '.' → logprob: -3.70428466796875
    4. '.import' → logprob: -8.32928466796875
    5. ' ' → logprob: -9.07928466796875
    6. '	import' → logprob: -9.57928466796875
    7. ' .' → logprob: -9.70428466796875
    8. '<|end|>' → logprob: -10.20428466796875
    9. '.im' → logprob: -10.32928466796875
    10. '_import' → logprob: -10.45428466796875

Token 17: ' count' (ID: 3605)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.6099960803985596
    2. 'count' → logprob: -1.6099960803985596
    3. 'product' → logprob: -2.4849960803985596
    4. 'com' → logprob: -2.7349960803985596
    5. 'cycle' → logprob: -3.1099960803985596
    6. ' accumulate' → logprob: -3.8599960803985596
    7. 'chain' → logprob: -4.4849958419799805
    8. 'per' → logprob: -4.9849958419799805
    9. 'is' → logprob: -5.3599958419799805
    10. ' product' → logprob: -5.4849958419799805

Token 18: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.058823756873607635
    2. ',' → logprob: -3.683823823928833
    3. 'def' → logprob: -4.683823585510254
    4. '(
' → logprob: -5.183823585510254
    5. '\' → logprob: -5.308823585510254
    6. '\n' → logprob: -5.683823585510254
    7. 'for' → logprob: -6.433823585510254
    8. '#' → logprob: -6.808823585510254
    9. ')' → logprob: -7.183823585510254
    10. '*' → logprob: -7.308823585510254

Token 19: ' is' (ID: 382)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.5831223130226135
    2. ' take' → logprob: -2.0831222534179688
    3. 'cycle' → logprob: -2.5831222534179688
    4. ' cycle' → logprob: -2.8331222534179688
    5. 'acc' → logprob: -3.0831222534179688
    6. ' is' → logprob: -3.0831222534179688
    7. 'is' → logprob: -3.4581222534179688
    8. ' accumulate' → logprob: -4.083122253417969
    9. 'drop' → logprob: -4.708122253417969
    10. 'chain' → logprob: -5.333122253417969

Token 20: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.00011427151912357658
    2. 'lic' → logprob: -9.875114440917969
    3. 'l' → logprob: -10.250114440917969
    4. 'licing' → logprob: -12.375114440917969
    5. '```' → logprob: -12.500114440917969
    6. 'ice' → logprob: -12.875114440917969
    7. 'lices' → logprob: -13.000114440917969
    8. '

' → logprob: -13.250114440917969
    9. 'liced' → logprob: -13.625114440917969
    10. '#' → logprob: -13.625114440917969

Token 21: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07823651283979416
    2. '(
' → logprob: -3.7032365798950195
    3. 'def' → logprob: -4.3282365798950195
    4. ',' → logprob: -4.5782365798950195
    5. '#' → logprob: -4.8282365798950195
    6. '*' → logprob: -5.3282365798950195
    7. '[' → logprob: -5.3282365798950195
    8. 'd' → logprob: -6.7032365798950195
    9. '\' → logprob: -6.8282365798950195
    10. ',
' → logprob: -7.4532365798950195

Token 22: 'a' (ID: 64)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9482457041740417
    2. '#' → logprob: -2.0732457637786865
    3. 'def' → logprob: -2.1982457637786865
    4. '=' → logprob: -2.3232457637786865
    5. ',' → logprob: -2.5732457637786865
    6. '*' → logprob: -2.6982457637786865
    7. 'x' → logprob: -4.073245525360107
    8. '(
' → logprob: -4.323245525360107
    9. '.' → logprob: -4.448245525360107
    10. 'd' → logprob: -4.698245525360107

Token 23: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6465214490890503
    2. '(' → logprob: -2.39652156829834
    3. ',' → logprob: -2.39652156829834
    4. 's' → logprob: -2.64652156829834
    5. ' =' → logprob: -2.77152156829834
    6. '[' → logprob: -3.14652156829834
    7. '.' → logprob: -3.39652156829834
    8. 'r' → logprob: -3.52152156829834
    9. 'b' → logprob: -3.77152156829834
    10. '_' → logprob: -4.77152156829834

Token 24: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47459539771080017
    2. ' b' → logprob: -0.9745954275131226
    3. ' ' → logprob: -7.724595546722412
    4. ' =' → logprob: -11.349595069885254
    5. '=' → logprob: -11.474595069885254
    6. '*b' → logprob: -11.724595069885254
    7. ',' → logprob: -11.849595069885254
    8. '```' → logprob: -11.974595069885254
    9. ' *' → logprob: -12.349595069885254
    10. ',b' → logprob: -12.599595069885254

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021776851266622543
    2. '=' → logprob: -3.8967769145965576
    3. ',' → logprob: -6.7717766761779785
    4. ' ' → logprob: -9.896777153015137
    5. ' ,' → logprob: -10.521777153015137
    6. '  ' → logprob: -12.896777153015137
    7. ')' → logprob: -13.396777153015137
    8. '<|end|>' → logprob: -13.396777153015137
    9. '.' → logprob: -14.021777153015137
    10. '_' → logprob: -14.709277153015137

Token 26: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.036228686571121216
    2. '1' → logprob: -4.036228656768799
    3. '0' → logprob: -4.411228656768799
    4. '2' → logprob: -6.411228656768799
    5. '5' → logprob: -7.161228656768799
    6. ' map' → logprob: -7.411228656768799
    7. '10' → logprob: -7.536228656768799
    8. ' count' → logprob: -7.786228656768799
    9. '3' → logprob: -8.161229133605957
    10. ' (' → logprob: -8.161229133605957

Token 27: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1711539775133133
    2. '(int' → logprob: -2.421154022216797
    3. '(lambda' → logprob: -3.046154022216797
    4. '(str' → logprob: -3.921154022216797
    5. '(input' → logprob: -8.046154022216797
    6. '(range' → logprob: -8.796154022216797
    7. '(eval' → logprob: -9.421154022216797
    8. '<|end|>' → logprob: -9.421154022216797
    9. 'int' → logprob: -9.671154022216797
    10. '(list' → logprob: -9.796154022216797

Token 28: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11489248275756836
    2. '(' → logprob: -2.6148924827575684
    3. ')' → logprob: -3.4898924827575684
    4. 'input' → logprob: -5.489892482757568
    5. ',' → logprob: -8.989892959594727
    6. '('' → logprob: -9.114892959594727
    7. ',input' → logprob: -9.239892959594727
    8. '```' → logprob: -9.864892959594727
    9. ' input' → logprob: -10.114892959594727
    10. '()' → logprob: -10.239892959594727

Token 29: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25242024660110474
    2. ' input' → logprob: -1.50242018699646
    3. ')' → logprob: -8.127420425415039
    4. '(input' → logprob: -9.377420425415039
    5. 'open' → logprob: -10.877420425415039
    6. '=input' → logprob: -11.002420425415039
    7. ',input' → logprob: -11.127420425415039
    8. ' ' → logprob: -11.502420425415039
    9. '```' → logprob: -11.627420425415039
    10. ' )' → logprob: -11.877420425415039

Token 30: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4121062159538269
    2. '())' → logprob: -1.2871062755584717
    3. '(' → logprob: -3.7871062755584717
    4. '().' → logprob: -4.412106037139893
    5. ')' → logprob: -4.787106037139893
    6. '(()' → logprob: -5.037106037139893
    7. '()>' → logprob: -6.037106037139893
    8. '(),' → logprob: -6.162106037139893
    9. '());' → logprob: -6.162106037139893
    10. '('' → logprob: -6.912106037139893

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.113290095934644e-05
    2. 'strip' → logprob: -9.500081062316895
    3. ' split' → logprob: -12.250081062316895
    4. 'spl' → logprob: -14.125081062316895
    5. 'rstrip' → logprob: -15.125081062316895
    6. 's' → logprob: -15.625081062316895
    7. '(split' → logprob: -15.625081062316895
    8. ' ' → logprob: -16.37508201599121
    9. '().' → logprob: -17.00008201599121
    10. '```' → logprob: -17.75008201599121

Token 32: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49957314133644104
    2. '))' → logprob: -0.9995731115341187
    3. '())' → logprob: -3.749573230743408
    4. '()))' → logprob: -6.624573230743408
    5. '()' → logprob: -8.49957275390625
    6. '),' → logprob: -9.74957275390625
    7. ')))' → logprob: -10.87457275390625
    8. '(' → logprob: -11.87457275390625
    9. ')`' → logprob: -11.99957275390625
    10. ')
' → logprob: -12.87457275390625

Token 33: 'delta' (ID: 42200)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0911303758621216
    2. ')' → logprob: -1.7161303758621216
    3. 'for' → logprob: -2.216130256652832
    4. '\n' → logprob: -2.466130256652832
    5. '**' → logprob: -3.841130256652832
    6. ' if' → logprob: -3.966130256652832
    7. 'result' → logprob: -3.966130256652832
    8. '
' → logprob: -3.966130256652832
    9. 'print' → logprob: -4.091130256652832
    10. '```' → logprob: -4.091130256652832

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26623252034187317
    2. '=' → logprob: -1.8912324905395508
    3. 's' → logprob: -2.516232490539551
    4. '_' → logprob: -6.641232490539551
    5. ',' → logprob: -8.01623249053955
    6. ' ' → logprob: -8.64123249053955
    7. '_=' → logprob: -10.01623249053955
    8. 'a' → logprob: -10.39123249053955
    9. '1' → logprob: -10.39123249053955
    10. 'x' → logprob: -10.76623249053955

Token 35: ' reduce' (ID: 10389)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5884506106376648
    2. 'b' → logprob: -1.0884506702423096
    3. ' abs' → logprob: -2.7134506702423096
    4. 'abs' → logprob: -3.7134506702423096
    5. ' lambda' → logprob: -5.0884504318237305
    6. 'a' → logprob: -5.7134504318237305
    7. ' a' → logprob: -5.8384504318237305
    8. 'lambda' → logprob: -6.8384504318237305
    9. ' ' → logprob: -7.2134504318237305
    10. ' (' → logprob: -7.4634504318237305

Token 36: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.3240194618701935
    2. '(' → logprob: -1.324019432067871
    3. '(lambda' → logprob: -4.574019432067871
    4. '(f' → logprob: -8.199019432067871
    5. '(
' → logprob: -9.949019432067871
    6. '(operator' → logprob: -10.949019432067871
    7. '(Sub' → logprob: -11.199019432067871
    8. 'sub' → logprob: -11.324019432067871
    9. '(s' → logprob: -12.074019432067871
    10. ' (' → logprob: -12.824019432067871

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001269162748940289
    2. ',[' → logprob: -7.001269340515137
    3. ',map' → logprob: -9.251269340515137
    4. ',(' → logprob: -9.626269340515137
    5. ' ,' → logprob: -9.751269340515137
    6. ',a' → logprob: -10.376269340515137
    7. ',is' → logprob: -10.751269340515137
    8. '(' → logprob: -11.126269340515137
    9. '[' → logprob: -11.376269340515137
    10. ',
' → logprob: -12.126269340515137

Token 38: ' (' (ID: 350)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.7585688233375549
    2. '[' → logprob: -1.6335687637329102
    3. '[count' → logprob: -2.63356876373291
    4. 'range' → logprob: -2.88356876373291
    5. '(range' → logprob: -3.13356876373291
    6. '(a' → logprob: -3.38356876373291
    7. 'div' → logprob: -3.63356876373291
    8. ' [' → logprob: -3.75856876373291
    9. ' (' → logprob: -4.00856876373291
    10. '[b' → logprob: -4.13356876373291

Token 39: 'b' (ID: 65)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.19765950739383698
    2. 'map' → logprob: -2.947659492492676
    3. 'a' → logprob: -3.822659492492676
    4. 'div' → logprob: -3.947659492492676
    5. 'abs' → logprob: -4.197659492492676
    6. ' is' → logprob: -4.322659492492676
    7. '[' → logprob: -4.572659492492676
    8. 'b' → logprob: -4.947659492492676
    9. '(is' → logprob: -4.947659492492676
    10. 'int' → logprob: -5.447659492492676

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.854824423789978
    2. ' for' → logprob: -1.479824423789978
    3. ' -' → logprob: -2.1048245429992676
    4. '-' → logprob: -2.3548245429992676
    5. ' ' → logprob: -3.6048245429992676
    6. 'for' → logprob: -3.9798245429992676
    7. ' ,' → logprob: -4.354824542999268
    8. '-i' → logprob: -4.479824542999268
    9. 'a' → logprob: -4.604824542999268
    10. ' a' → logprob: -4.979824542999268

Token 41: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5235757231712341
    2. ' a' → logprob: -0.8985757231712341
    3. ' ' → logprob: -8.273575782775879
    4. '   ' → logprob: -10.523575782775879
    5. '	a' → logprob: -10.898575782775879
    6. '    ' → logprob: -11.023575782775879
    7. '-' → logprob: -11.023575782775879
    8. ',' → logprob: -11.148575782775879
    9. '  ' → logprob: -11.398575782775879
    10. ' *' → logprob: -11.523575782775879

Token 42: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001446611131541431
    2. ' a' → logprob: -8.875144958496094
    3. '1' → logprob: -13.875144958496094
    4. '   ' → logprob: -14.125144958496094
    5. ' ' → logprob: -14.625144958496094
    6. '-' → logprob: -15.250144958496094
    7. '  ' → logprob: -15.250144958496094
    8. '    ' → logprob: -15.625144958496094
    9. ',' → logprob: -15.750144958496094
    10. '0' → logprob: -15.750144958496094

Token 43: ')),' (ID: 12098)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16976290941238403
    2. '))' → logprob: -2.0447628498077393
    3. ')' → logprob: -5.169763088226318
    4. ' ))' → logprob: -5.419763088226318
    5. ' ,' → logprob: -5.544763088226318
    6. '),' → logprob: -5.794763088226318
    7. 'a' → logprob: -5.919763088226318
    8. '+' → logprob: -6.544763088226318
    9. '0' → logprob: -6.919763088226318
    10. ' +' → logprob: -7.169763088226318

Token 44: ' reduce' (ID: 10389)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9372968077659607
    2. '<|end|>' → logprob: -1.5622968673706055
    3. ')' → logprob: -1.8122968673706055
    4. '(' → logprob: -2.3122968673706055
    5. '0' → logprob: -2.6872968673706055
    6. ',' → logprob: -3.4372968673706055
    7. ' (' → logprob: -4.0622968673706055
    8. '[' → logprob: -5.1872968673706055
    9. ' ,' → logprob: -5.6872968673706055
    10. ' )' → logprob: -6.4372968673706055

Token 45: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.7647626399993896
    2. '(f' → logprob: -1.2647626399993896
    3. '(' → logprob: -1.3897626399993896
    4. 'sub' → logprob: -6.514762878417969
    5. '(s' → logprob: -7.014762878417969
    6. '(lambda' → logprob: -9.264762878417969
    7. '```' → logprob: -9.514762878417969
    8. '(space' → logprob: -9.764762878417969
    9. '(+' → logprob: -9.764762878417969
    10. '(div' → logprob: -9.889762878417969

Token 46: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7182215452194214
    2. ',' → logprob: -1.2182215452194214
    3. '(' → logprob: -1.7182215452194214
    4. '(b' → logprob: -3.968221664428711
    5. 'a' → logprob: -5.343221664428711
    6. ' (' → logprob: -5.343221664428711
    7. ' (,' → logprob: -5.593221664428711
    8. '(sub' → logprob: -7.093221664428711
    9. ',(' → logprob: -7.468221664428711
    10. ' ,' → logprob: -7.468221664428711

Token 47: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.21294929087162018
    2. '(' → logprob: -2.337949275970459
    3. ' (' → logprob: -2.587949275970459
    4. 'a' → logprob: -4.587949275970459
    5. '(b' → logprob: -5.212949275970459
    6. ' a' → logprob: -5.587949275970459
    7. ' b' → logprob: -9.087949752807617
    8. '(s' → logprob: -9.212949752807617
    9. ')' → logprob: -9.212949752807617
    10. ' ' → logprob: -9.712949752807617

Token 48: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015359950251877308
    2. 'b' → logprob: -4.515359878540039
    3. ' a' → logprob: -5.515359878540039
    4. ' b' → logprob: -8.515359878540039
    5. '(a' → logprob: -10.515359878540039
    6. ',' → logprob: -11.265359878540039
    7. ',a' → logprob: -11.890359878540039
    8. '1' → logprob: -12.015359878540039
    9. ' ' → logprob: -12.265359878540039
    10. '   ' → logprob: -12.765359878540039

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005348019185476005
    2. '1' → logprob: -8.250535011291504
    3. ' ,' → logprob: -8.875535011291504
    4. '-' → logprob: -10.500535011291504
    5. '))' → logprob: -10.500535011291504
    6. ')' → logprob: -11.000535011291504
    7. '2' → logprob: -11.250535011291504
    8. '),' → logprob: -12.125535011291504
    9. 'b' → logprob: -12.125535011291504
    10. '```' → logprob: -12.250535011291504

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07932616770267487
    2. ' ' → logprob: -2.7043261528015137
    3. '0' → logprob: -4.829326152801514
    4. 'b' → logprob: -7.454326152801514
    5. ' b' → logprob: -7.704326152801514
    6. '2' → logprob: -9.579326629638672
    7. ',' → logprob: -9.704326629638672
    8. '-' → logprob: -9.766826629638672
    9. ')' → logprob: -10.954326629638672
    10. ' -' → logprob: -11.016826629638672

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01346819382160902
    2. '0' → logprob: -4.888468265533447
    3. ' ' → logprob: -5.263468265533447
    4. 'b' → logprob: -8.388467788696289
    5. '2' → logprob: -8.513467788696289
    6. '-' → logprob: -9.388467788696289
    7. ',' → logprob: -9.513467788696289
    8. ' b' → logprob: -10.575967788696289
    9. ' -' → logprob: -11.950967788696289
    10. '   ' → logprob: -12.200967788696289

Token 52: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3885152041912079
    2. '))' → logprob: -1.1385152339935303
    3. '),' → logprob: -6.763514995574951
    4. ')))' → logprob: -8.51351547241211
    5. ')),' → logprob: -8.76351547241211
    6. '))
' → logprob: -10.51351547241211
    7. ' )' → logprob: -10.76351547241211
    8. ')
' → logprob: -10.88851547241211
    9. ')`' → logprob: -12.01351547241211
    10. '0' → logprob: -12.13851547241211

Token 53: 'div' (ID: 862)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2699713706970215
    2. ',' → logprob: -1.6449713706970215
    3. '<|end|>' → logprob: -4.2699713706970215
    4. '[' → logprob: -4.3949713706970215
    5. '(' → logprob: -5.8949713706970215
    6. ' ' → logprob: -6.1449713706970215
    7. '),' → logprob: -6.2699713706970215
    8. '#' → logprob: -6.8949713706970215
    9. '```' → logprob: -6.8949713706970215
    10. ',
' → logprob: -7.0199713706970215

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8591691255569458
    2. ' =' → logprob: -1.3591691255569458
    3. 's' → logprob: -2.1091690063476562
    4. 'er' → logprob: -2.7341690063476562
    5. 'f' → logprob: -3.3591690063476562
    6. 'flo' → logprob: -3.9841690063476562
    7. '_result' → logprob: -4.109169006347656
    8. '=f' → logprob: -4.234169006347656
    9. 'isor' → logprob: -4.484169006347656
    10. '_f' → logprob: -4.609169006347656

Token 55: ' flo' (ID: 15037)
  Prédit: 'flo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flo' → logprob: -0.2997729778289795
    2. ' flo' → logprob: -1.4247729778289795
    3. 'a' → logprob: -5.174773216247559
    4. 'b' → logprob: -5.924773216247559
    5. ' a' → logprob: -6.424773216247559
    6. ' lambda' → logprob: -6.674773216247559
    7. 'lambda' → logprob: -7.174773216247559
    8. 'f' → logprob: -7.299773216247559
    9. 'reduce' → logprob: -7.424773216247559
    10. ' delta' → logprob: -7.549773216247559

Token 56: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.13941752910614014
    2. 'r' → logprob: -2.1394176483154297
    3. 'rd' → logprob: -4.38941764831543
    4. ' r' → logprob: -14.01441764831543
    5. 'div' → logprob: -14.51441764831543
    6. 'ro' → logprob: -14.88941764831543
    7. 'rdf' → logprob: -15.26441764831543
    8. 'ard' → logprob: -15.38941764831543
    9. '	r' → logprob: -15.51441764831543
    10. 'rid' → logprob: -15.88941764831543

Token 57: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.0005068036844022572
    2. 'div' → logprob: -7.62550687789917
    3. ' div' → logprob: -11.500506401062012
    4. 'v' → logprob: -12.375506401062012
    5. ' iv' → logprob: -12.875506401062012
    6. 'Div' → logprob: -14.750506401062012
    7. '_div' → logprob: -15.375506401062012
    8. 'vis' → logprob: -16.000507354736328
    9. '​' → logprob: -16.125507354736328
    10. '```' → logprob: -16.250507354736328

Token 58: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023535802960395813
    2. '(a' → logprob: -4.77353572845459
    3. '(
' → logprob: -5.02353572845459
    4. ' (' → logprob: -6.64853572845459
    5. 'a' → logprob: -6.89853572845459
    6. '(delta' → logprob: -6.89853572845459
    7. '_' → logprob: -7.39853572845459
    8. '(b' → logprob: -7.64853572845459
    9. ' ' → logprob: -7.64853572845459
    10. ',' → logprob: -7.64853572845459

Token 59: 'delta' (ID: 42200)
  Prédit: 'delta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.17547710239887238
    2. '(delta' → logprob: -1.925477147102356
    3. '(a' → logprob: -5.050477027893066
    4. '(b' → logprob: -6.050477027893066
    5. 'a' → logprob: -6.175477027893066
    6. ' delta' → logprob: -6.550477027893066
    7. 'div' → logprob: -6.675477027893066
    8. '(' → logprob: -7.175477027893066
    9. 'b' → logprob: -8.050477027893066
    10. '(div' → logprob: -8.550477027893066

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012082771718269214
    2. ')
' → logprob: -9.250121116638184
    3. '))' → logprob: -10.875121116638184
    4. ')

' → logprob: -13.125121116638184
    5. ')
' → logprob: -14.250121116638184
    6. '),' → logprob: -14.500121116638184
    7. ' )' → logprob: -14.750121116638184
    8. ')))' → logprob: -14.875121116638184
    9. ')+' → logprob: -15.000121116638184
    10. ',' → logprob: -15.250121116638184

Token 61: 'gen' (ID: 2468)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0873858779668808
    2. '(' → logprob: -3.587385892868042
    3. ',' → logprob: -4.212385654449463
    4. 'for' → logprob: -5.087385654449463
    5. 'div' → logprob: -5.587385654449463
    6. 'result' → logprob: -5.962385654449463
    7. '#' → logprob: -6.087385654449463
    8. '_' → logprob: -6.087385654449463
    9. '[' → logprob: -6.087385654449463
    10. '*' → logprob: -6.087385654449463

Token 62: ' =' (ID: 314)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.10724877566099167
    2. ' =' → logprob: -2.3572487831115723
    3. '=' → logprob: -5.107248783111572
    4. 'ERATOR' → logprob: -7.482248783111572
    5. 'ator' → logprob: -8.607248306274414
    6. 'erat' → logprob: -9.357248306274414
    7. 'eral' → logprob: -10.732248306274414
    8. 'ar' → logprob: -10.857248306274414
    9. ' er' → logprob: -10.857248306274414
    10. ',' → logprob: -11.232248306274414

Token 63: ' (' (ID: 350)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7605222463607788
    2. ' count' → logprob: -1.0105222463607788
    3. ' is' → logprob: -2.2605223655700684
    4. 'is' → logprob: -2.7605223655700684
    5. '(count' → logprob: -7.635522365570068
    6. '(is' → logprob: -9.01052188873291
    7. ' ' → logprob: -9.76052188873291
    8. 'lambda' → logprob: -9.76052188873291
    9. ' (' → logprob: -10.01052188873291
    10. '	count' → logprob: -10.13552188873291

Token 64: 'div' (ID: 862)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22470007836818695
    2. 'i' → logprob: -1.9747000932693481
    3. 'next' → logprob: -4.099699974060059
    4. 'n' → logprob: -4.349699974060059
    5. 'is' → logprob: -4.474699974060059
    6. 'div' → logprob: -5.849699974060059
    7. 'abs' → logprob: -5.849699974060059
    8. '1' → logprob: -5.849699974060059
    9. 'flo' → logprob: -6.099699974060059
    10. '(i' → logprob: -6.599699974060059

Token 65: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7828076481819153
    2. ' for' → logprob: -1.6578075885772705
    3. '*i' → logprob: -1.6578075885772705
    4. '*' → logprob: -2.4078075885772705
    5. '**' → logprob: -3.7828075885772705
    6. 'for' → logprob: -3.9078075885772705
    7. '*n' → logprob: -5.15780782699585
    8. ' **' → logprob: -5.53280782699585
    9. ' +' → logprob: -5.65780782699585
    10. '+' → logprob: -5.78280782699585

Token 66: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1335985660552979
    2. 'x' → logprob: -1.8835985660552979
    3. ' i' → logprob: -1.8835985660552979
    4. '1' → logprob: -2.383598566055298
    5. ' x' → logprob: -2.383598566055298
    6. ' next' → logprob: -3.133598566055298
    7. ' ' → logprob: -3.133598566055298
    8. 'next' → logprob: -3.508598566055298
    9. 'n' → logprob: -4.383598327636719
    10. ' n' → logprob: -4.633598327636719

Token 67: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7996666431427002
    2. 'x' → logprob: -1.2996666431427002
    3. '1' → logprob: -2.0496666431427
    4. 'n' → logprob: -3.1746666431427
    5. 'next' → logprob: -3.2996666431427
    6. 'd' → logprob: -4.299666404724121
    7. '-' → logprob: -4.674666404724121
    8. 'b' → logprob: -4.674666404724121
    9. 'a' → logprob: -5.299666404724121
    10. 'c' → logprob: -5.299666404724121

Token 68: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09079276770353317
    2. ')*' → logprob: -2.965792655944824
    3. '*i' → logprob: -4.590792655944824
    4. ' for' → logprob: -5.215792655944824
    5. '*' → logprob: -5.590792655944824
    6. '))' → logprob: -5.715792655944824
    7. ' )' → logprob: -5.840792655944824
    8. ' *' → logprob: -5.840792655944824
    9. 'j' → logprob: -7.090792655944824
    10. ' ' → logprob: -7.465792655944824

Token 69: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0125375986099243
    2. ' i' → logprob: -1.5125375986099243
    3. 'x' → logprob: -1.8875375986099243
    4. 'i' → logprob: -2.1375374794006348
    5. ' n' → logprob: -3.8875374794006348
    6. ' not' → logprob: -3.8875374794006348
    7. ' (' → logprob: -4.637537479400635
    8. ' d' → logprob: -4.762537479400635
    9. '(i' → logprob: -4.762537479400635
    10. '(x' → logprob: -4.762537479400635

Token 70: 'b' (ID: 65)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4324439465999603
    2. 'i' → logprob: -1.4324439764022827
    3. 'n' → logprob: -3.557443857192993
    4. 'a' → logprob: -3.557443857192993
    5. 'b' → logprob: -4.432444095611572
    6. 'k' → logprob: -5.057444095611572
    7. 'd' → logprob: -5.182444095611572
    8. 'next' → logprob: -5.182444095611572
    9. ' x' → logprob: -5.432444095611572
    10. 'c' → logprob: -5.682444095611572

Token 71: ' -' (ID: 533)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.22110436856746674
    2. '%' → logprob: -2.221104383468628
    3. ' -' → logprob: -2.971104383468628
    4. '-' → logprob: -3.471104383468628
    5. ' ' → logprob: -5.721104145050049
    6. ' >=' → logprob: -6.596104145050049
    7. ')' → logprob: -7.721104145050049
    8. '>=' → logprob: -7.721104145050049
    9. ' >' → logprob: -8.096104621887207
    10. '%i' → logprob: -8.221104621887207

Token 72: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6688721179962158
    2. ' a' → logprob: -1.2938721179962158
    3. '1' → logprob: -2.043872117996216
    4. ' ' → logprob: -2.918872117996216
    5. 'i' → logprob: -4.168871879577637
    6. ' i' → logprob: -4.668871879577637
    7. ' (' → logprob: -6.793871879577637
    8. ')' → logprob: -7.043871879577637
    9. 'x' → logprob: -7.418871879577637
    10. '2' → logprob: -7.668871879577637

Token 73: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2167101502418518
    2. '1' → logprob: -2.216710090637207
    3. ' a' → logprob: -2.841710090637207
    4. 'i' → logprob: -4.466710090637207
    5. ' ' → logprob: -4.591710090637207
    6. ' i' → logprob: -6.716710090637207
    7. 'div' → logprob: -6.966710090637207
    8. 'b' → logprob: -7.591710090637207
    9. ')' → logprob: -7.841710090637207
    10. ' (' → logprob: -7.841710090637207

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002605975838378072
    2. ' )' → logprob: -6.50260591506958
    3. ')%' → logprob: -6.87760591506958
    4. '-' → logprob: -10.627606391906738
    5. '%' → logprob: -11.127606391906738
    6. ' ' → logprob: -11.377606391906738
    7. ')>=' → logprob: -12.377606391906738
    8. ' -' → logprob: -12.627606391906738
    9. ')

' → logprob: -13.127606391906738
    10. '```' → logprob: -13.690106391906738

Token 75: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016242099925875664
    2. ' )' → logprob: -4.516242027282715
    3. ')%' → logprob: -5.391242027282715
    4. '%' → logprob: -8.141242027282715
    5. ' %' → logprob: -8.766242027282715
    6. '-' → logprob: -9.641242027282715
    7. ' -' → logprob: -11.016242027282715
    8. ')>=' → logprob: -11.141242027282715
    9. ' ' → logprob: -11.266242027282715
    10. '```' → logprob: -11.766242027282715

Token 76: ' (' (ID: 350)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.3895784020423889
    2. ' div' → logprob: -1.1395783424377441
    3. 'a' → logprob: -7.139578342437744
    4. ' a' → logprob: -7.389578342437744
    5. ' (' → logprob: -7.514578342437744
    6. '(div' → logprob: -8.014578819274902
    7. ' ' → logprob: -8.389578819274902
    8. 'b' → logprob: -10.264578819274902
    9. '(a' → logprob: -10.264578819274902
    10. ' b' → logprob: -10.389578819274902

Token 77: 'a' (ID: 64)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.2602892518043518
    2. 'a' → logprob: -1.510289192199707
    3. ' div' → logprob: -5.135289192199707
    4. ' a' → logprob: -6.635289192199707
    5. '(a' → logprob: -8.385289192199707
    6. '(div' → logprob: -8.385289192199707
    7. 'flo' → logprob: -8.885289192199707
    8. 'b' → logprob: -8.885289192199707
    9. '*a' → logprob: -9.260289192199707
    10. '   ' → logprob: -10.135289192199707

Token 78: ' -' (ID: 533)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7903656959533691
    2. '==' → logprob: -1.2903656959533691
    3. ')' → logprob: -1.5403656959533691
    4. ' else' → logprob: -3.540365695953369
    5. ' ' → logprob: -4.790365695953369
    6. ' !=' → logprob: -5.165365695953369
    7. ')==' → logprob: -5.415365695953369
    8. ' )' → logprob: -5.665365695953369
    9. '!=' → logprob: -6.040365695953369
    10. '+' → logprob: -6.665365695953369

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015643771039322019
    2. ' ' → logprob: -6.5015645027160645
    3. '0' → logprob: -10.251564025878906
    4. ')' → logprob: -11.001564025878906
    5. '```' → logprob: -13.001564025878906
    6. 'b' → logprob: -13.751564025878906
    7. '   ' → logprob: -13.751564025878906
    8. '  ' → logprob: -13.814064025878906
    9. '[' → logprob: -14.564064025878906
    10. ' (' → logprob: -15.064064025878906

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.036621805280447006
    2. '0' → logprob: -3.4116218090057373
    3. ' ' → logprob: -6.036621570587158
    4. ')' → logprob: -7.911621570587158
    5. 'b' → logprob: -9.286622047424316
    6. '<|end|>' → logprob: -9.911622047424316
    7. '<|end|>' → logprob: -11.161622047424316
    8. '```' → logprob: -11.411622047424316
    9. 'a' → logprob: -11.536622047424316
    10. '   ' → logprob: -11.786622047424316

Token 81: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0400992631912231
    2. ')' → logprob: -1.1650992631912231
    3. ' ==' → logprob: -1.1650992631912231
    4. ' else' → logprob: -4.290099143981934
    5. ')==' → logprob: -5.540099143981934
    6. ' )' → logprob: -6.290099143981934
    7. ' ' → logprob: -6.915099143981934
    8. ' >=' → logprob: -7.540099143981934
    9. ' <' → logprob: -7.665099143981934
    10. ' !=' → logprob: -7.915099143981934

Token 82: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.08980774879455566
    2. '==' → logprob: -3.3398077487945557
    3. ' ==' → logprob: -3.7148077487945557
    4. 'else' → logprob: -3.8398077487945557
    5. ' !=' → logprob: -6.464807510375977
    6. ' ' → logprob: -6.714807510375977
    7. '!=' → logprob: -6.714807510375977
    8. ')' → logprob: -7.839807510375977
    9. '>' → logprob: -9.714807510375977
    10. '0' → logprob: -9.964807510375977

Token 83: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7441477179527283
    2. ' ' → logprob: -1.119147777557373
    3. '1' → logprob: -1.619147777557373
    4. ')' → logprob: -9.369147300720215
    5. '    ' → logprob: -10.744147300720215
    6. '   ' → logprob: -10.806647300720215
    7. '+' → logprob: -11.056647300720215
    8. '  ' → logprob: -11.244147300720215
    9. '-' → logprob: -11.681647300720215
    10. '2' → logprob: -11.681647300720215

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006377360317856073
    2. ' ' → logprob: -5.131377220153809
    3. '1' → logprob: -7.756377220153809
    4. '   ' → logprob: -11.756377220153809
    5. '  ' → logprob: -12.631377220153809
    6. ')' → logprob: -13.506377220153809
    7. '```' → logprob: -13.756377220153809
    8. '+' → logprob: -13.881377220153809
    9. '    ' → logprob: -14.131377220153809
    10. '2' → logprob: -14.256377220153809

Token 85: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053700223565101624
    2. ' for' → logprob: -3.3037002086639404
    3. 'for' → logprob: -4.5537004470825195
    4. '))' → logprob: -6.4287004470825195
    5. ' )' → logprob: -6.6787004470825195
    6. ' ' → logprob: -6.8037004470825195
    7. ')*' → logprob: -8.05370044708252
    8. '  ' → logprob: -8.67870044708252
    9. '),' → logprob: -9.17870044708252
    10. '   ' → logprob: -9.67870044708252

Token 86: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1631040722131729
    2. 'for' → logprob: -2.2881040573120117
    3. ')' → logprob: -3.0381040573120117
    4. ' ' → logprob: -7.413104057312012
    5. ' )' → logprob: -8.288104057312012
    6. '  ' → logprob: -9.288104057312012
    7. '   ' → logprob: -10.663104057312012
    8. ',' → logprob: -11.413104057312012
    9. '+' → logprob: -11.413104057312012
    10. '),' → logprob: -11.538104057312012

Token 87: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04321670159697533
    2. ' _' → logprob: -4.168216705322266
    3. ' count' → logprob: -5.543216705322266
    4. ' range' → logprob: -5.793216705322266
    5. ' i' → logprob: -5.793216705322266
    6. 'count' → logprob: -6.043216705322266
    7. ' is' → logprob: -6.168216705322266
    8. ' b' → logprob: -6.293216705322266
    9. 'i' → logprob: -6.418216705322266
    10. ' ' → logprob: -6.418216705322266

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00822837557643652
    2. 'in' → logprob: -4.883228302001953
    3. ' ' → logprob: -8.133228302001953
    4. '_' → logprob: -8.383228302001953
    5. ' _' → logprob: -10.758228302001953
    6. ')' → logprob: -10.883228302001953
    7. ' )' → logprob: -11.008228302001953
    8. '  ' → logprob: -11.383228302001953
    9. 'count' → logprob: -11.383228302001953
    10. '<|end|>' → logprob: -11.758228302001953

Token 89: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.43577131628990173
    2. 'is' → logprob: -1.6857713460922241
    3. ' count' → logprob: -2.1857712268829346
    4. ' is' → logprob: -3.0607712268829346
    5. 'range' → logprob: -5.060771465301514
    6. ' range' → logprob: -6.435771465301514
    7. '_' → logprob: -7.935771465301514
    8. ' ' → logprob: -8.560770988464355
    9. '	count' → logprob: -9.810770988464355
    10. '0' → logprob: -11.310770988464355

Token 90: '(' (ID: 7)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01148985419422388
    2. '(' → logprob: -4.6364898681640625
    3. '()' → logprob: -6.5114898681640625
    4. '(start' → logprob: -9.011489868164062
    5. '():' → logprob: -10.636489868164062
    6. '0' → logprob: -10.886489868164062
    7. ' ())' → logprob: -11.136489868164062
    8. '(None' → logprob: -11.261489868164062
    9. 'from' → logprob: -12.011489868164062
    10. '();)' → logprob: -12.136489868164062

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5212047100067139
    2. '1' → logprob: -1.2712047100067139
    3. '())' → logprob: -3.396204710006714
    4. 'a' → logprob: -3.771204710006714
    5. 'div' → logprob: -4.021204948425293
    6. '(' → logprob: -4.396204948425293
    7. 'b' → logprob: -4.646204948425293
    8. '()' → logprob: -4.896204948425293
    9. ')' → logprob: -5.146204948425293
    10. '10' → logprob: -5.521204948425293

Token 92: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006721655838191509
    2. ')' → logprob: -5.256721496582031
    3. '):' → logprob: -6.756721496582031
    4. ':' → logprob: -8.506721496582031
    5. ')))' → logprob: -10.506721496582031
    6. ',' → logprob: -10.631721496582031
    7. ')):' → logprob: -10.631721496582031
    8. ' ))' → logprob: -10.881721496582031
    9. '))
' → logprob: -11.506721496582031
    10. '),' → logprob: -12.131721496582031

Token 93: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39705440402030945
    2. '<|end|>' → logprob: -1.5220544338226318
    3. 'next' → logprob: -3.272054433822632
    4. '0' → logprob: -4.147054195404053
    5. 'print' → logprob: -4.522054195404053
    6. ':' → logprob: -4.647054195404053
    7. ' ' → logprob: -4.772054195404053
    8. ',' → logprob: -5.397054195404053
    9. '...' → logprob: -5.897054195404053
    10. '.' → logprob: -5.897054195404053

Token 94: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.14517782628536224
    2. '(' → logprob: -2.8951778411865234
    3. '(sum' → logprob: -3.2701778411865234
    4. '(*' → logprob: -4.145177841186523
    5. '(gen' → logprob: -4.270177841186523
    6. '(list' → logprob: -6.020177841186523
    7. '(tuple' → logprob: -6.020177841186523
    8. '(a' → logprob: -6.520177841186523
    9. '(*(' → logprob: -6.520177841186523
    10. '(len' → logprob: -6.645177841186523

Token 95: '(is' (ID: 16171)
  Prédit: '(gen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(gen' → logprob: -3.128163257315464e-07
    2. 'gen' → logprob: -15.625
    3. '(generator' → logprob: -16.625
    4. '(' → logprob: -18.125
    5. ' (' → logprob: -18.25
    6. ' gen' → logprob: -18.875
    7. '	gen' → logprob: -19.375
    8. ')' → logprob: -19.5
    9. ')(' → logprob: -19.75
    10. '(generate' → logprob: -20.0

Token 96: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -3.650518920039758e-06
    2. 'ice' → logprob: -13.250003814697266
    3. 'lace' → logprob: -13.875003814697266
    4. 'slice' → logprob: -14.625003814697266
    5. 'liced' → logprob: -16.000003814697266
    6. 'l' → logprob: -16.875003814697266
    7. '```' → logprob: -17.000003814697266
    8. 'li' → logprob: -17.000003814697266
    9. '(gen' → logprob: -17.625003814697266
    10. '   ' → logprob: -17.750003814697266

Token 97: '(gen' (ID: 80178)
  Prédit: '(gen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gen' → logprob: -1.0921942703134846e-05
    2. 'gen' → logprob: -11.50001049041748
    3. '	gen' → logprob: -14.50001049041748
    4. ' gen' → logprob: -15.37501049041748
    5. '/gen' → logprob: -16.875011444091797
    6. ')' → logprob: -18.000011444091797
    7. '_gen' → logprob: -18.125011444091797
    8. '(generator' → logprob: -18.500011444091797
    9. ')(' → logprob: -18.875011444091797
    10. '```' → logprob: -19.375011444091797

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009705372503958642
    2. '(' → logprob: -7.000970363616943
    3. ' ,' → logprob: -10.500970840454102
    4. ',b' → logprob: -12.250970840454102
    5. ')' → logprob: -12.625970840454102
    6. '(n' → logprob: -12.875970840454102
    7. '`,' → logprob: -13.125970840454102
    8. 'a' → logprob: -13.125970840454102
    9. '(),' → logprob: -13.250970840454102
    10. ',(' → logprob: -13.250970840454102

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.018487811088562
    2. 'a' → logprob: -1.143487811088562
    3. '10' → logprob: -2.3934879302978516
    4. '2' → logprob: -3.0184879302978516
    5. '3' → logprob: -3.5184879302978516
    6. ' a' → logprob: -3.5184879302978516
    7. ' ' → logprob: -3.6434879302978516
    8. 'b' → logprob: -3.8934879302978516
    9. '5' → logprob: -4.143487930297852
    10. '4' → logprob: -4.268487930297852

Token 100: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6301608085632324
    2. 'div' → logprob: -1.2551608085632324
    3. 'b' → logprob: -2.5051608085632324
    4. '1' → logprob: -3.0051608085632324
    5. '10' → logprob: -4.630160808563232
    6. '0' → logprob: -4.755160808563232
    7. 'delta' → logprob: -4.880160808563232
    8. '2' → logprob: -5.255160808563232
    9. ' div' → logprob: -5.630160808563232
    10. '3' → logprob: -5.755160808563232

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005124026210978627
    2. ' ,' → logprob: -8.37551212310791
    3. '1' → logprob: -9.50051212310791
    4. '))' → logprob: -9.75051212310791
    5. ')))' → logprob: -10.12551212310791
    6. '+' → logprob: -10.75051212310791
    7. ')' → logprob: -11.00051212310791
    8. '3' → logprob: -11.62551212310791
    9. ',None' → logprob: -11.62551212310791
    10. '),' → logprob: -12.00051212310791

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3148285150527954
    2. 'a' → logprob: -1.3148285150527954
    3. 'div' → logprob: -1.5648285150527954
    4. 'b' → logprob: -2.064828395843506
    5. ' div' → logprob: -2.689828395843506
    6. '10' → logprob: -4.314828395843506
    7. '2' → logprob: -4.439828395843506
    8. ' a' → logprob: -4.689828395843506
    9. ' b' → logprob: -4.814828395843506
    10. ' ' → logprob: -4.939828395843506

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24306592345237732
    2. '10' → logprob: -1.9930659532546997
    3. 'a' → logprob: -3.99306583404541
    4. '2' → logprob: -4.11806583404541
    5. '100' → logprob: -4.49306583404541
    6. '5' → logprob: -4.86806583404541
    7. 'div' → logprob: -4.86806583404541
    8. 'b' → logprob: -5.36806583404541
    9. '3' → logprob: -5.36806583404541
    10. '0' → logprob: -6.24306583404541

Token 104: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1272493600845337
    2. ')))' → logprob: -2.127249240875244
    3. ')' → logprob: -8.127249717712402
    4. '))
' → logprob: -11.127249717712402
    5. '))))' → logprob: -12.002249717712402
    6. ')))
' → logprob: -12.877249717712402
    7. '),' → logprob: -14.377249717712402
    8. '1' → logprob: -14.752249717712402
    9. '+' → logprob: -15.252249717712402
    10. ' ))' → logprob: -15.377249717712402


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 102
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 81
Précision stricte (1ère position): 31.37%
Précision adaptée (1ère position): 31.37%
Précision (top 10): 79.41%
================================================================================
