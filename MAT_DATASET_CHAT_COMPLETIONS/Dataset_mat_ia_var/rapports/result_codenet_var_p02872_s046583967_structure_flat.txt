================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from random import randint
from numpy import argmin
from scipy.sparse import csr_matrix
from scipy.sparse.csgraph import floyd_warshall
input = sys.stdin.buffer.readline

problem_b = True

V, E = map(int, input().split())

v_from = []
v_to = []
cost = []

for _ in range(E):
    u, v, d = map(int, input().split())
    v_from.append(u)
    v_to.append(v)
    cost.append(d)

graph = csr_matrix((cost, (v_from, v_to)), [V+1, V+1])
dist, predecessors = floyd_warshall(graph, directed=False, return_predecessors=True)
dist[dist == 0] = float('inf')

dist_min = list(map(argmin, dist))

if problem_b:
    input()

T_max = int(input())

time = 0
delivering = False
returning = False
last_return_time = 0
distination = 1
v_next = 1

order = []
end_order = set()

n = int(input())
t = [int(input().split()[1]) for _ in range(n)]
order.append(t)
if problem_b:
    [input() for _ in range(int(input()))]

while time < T_max:
    if delivering:
        print(v_next, flush=True)
        if problem_b:
            input()
            [input() for _ in range(int(input()))]
        remaining_next -= 1
        if remaining_next == 0:
            if v_next == 1:
                last_return_time = max(last_return_time,  time - randint(0, 200))
            end_order.add(v_next)
            next_temp = predecessors[distination, v_next]
            if next_temp != -9999:
                remaining_next = dist[v_next, next_temp]
                v_next = next_temp
        remaining_last -= 1
        if remaining_last == 0:
            if distination == 1:
                returning = False
                delivering = False
            elif not returning:
                idx = jdx = -1
                dist_temp_min_possession = 10**18
                dist_temp_min_not_possession = 10**18
                for i, o in enumerate(order):
                    if not o:
                        continue
                    if i <= last_return_time:
                        for j, dst in enumerate(o):
                            if dst in end_order:
                                o[j] = 0
                            else:
                                dist_temp = dist[v_next, dst]
                                if dist_temp < dist_temp_min_possession:
                                    dist_temp_min_possession = dist_temp
                                    idx = i
                                    jdx = j
                end_order = set()
                if dist_temp_min_possession < dist_temp_min_not_possession:
                    distination = order[idx].pop(jdx)
                    remaining_last = dist[v_next, distination]
                    next_temp = predecessors[distination, v_next]
                    remaining_next = dist[v_next, next_temp]
                    v_next = next_temp
                else:
                    returning = True
                    remaining_last = dist[distination, 1]
                    v_next = predecessors[1, distination]
                    remaining_next = dist[distination, v_next]
                    distination = 1
            time += 1
            if time < T_max:
                n = int(input())
                t = [int(input().split()[1]) for _ in range(n)]
                order.append(t)
                if problem_b:
                    [input() for _ in range(int(input()))]
        else:
            time += 1
            if time < T_max:
                n = int(input())
                t = [int(input().split()[1]) for _ in range(n)]
                order.append(t)
                if problem_b:
                    [input() for _ in range(int(input()))]
    else:
        last_return_time = time
        idx = jdx = -1
        remaining_last = 0
        dist_temp_min = 10**18
        for i, o in enumerate(order):
            if not o:
                continue
            for j, dst in enumerate(o):
                dist_temp = dist[1, dst] + abs(time - i) ** 2
                if dist_temp < dist_temp_min:
                    dist_temp_min = dist_temp
                    idx = i
                    jdx = j
        if idx == -1:
            print(-1, flush=True)
            if problem_b:
                input()
                [input() for _ in range(int(input()))]
            time += 1
            if time < T_max:
                n = int(input())
                t = [int(input().split()[1]) for _ in range(n)]
                order.append(t)
                if problem_b:
                    [input() for _ in range(int(input()))]
            continue
        distination = order[idx].pop(jdx)
        remaining_last = dist[1, distination]
        v_next = predecessors[distination, 1]
        remaining_next = dist[1, v_next]
        delivering = True
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' random' (ID: 7526)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01821877807378769
    2. 'os' → logprob: -4.143218994140625
    3. ' Py' → logprob: -7.768218994140625
    4. ' pathlib' → logprob: -7.768218994140625
    5. ' collections' → logprob: -7.893218994140625
    6. ' math' → logprob: -8.768218994140625
    7. 'collections' → logprob: -9.018218994140625
    8. ' ' → logprob: -9.143218994140625
    9. ' typing' → logprob: -9.643218994140625
    10. ' datetime' → logprob: -9.768218994140625

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.22716043889522552
    2. 'import' → logprob: -1.6021604537963867
    3. ' ' → logprob: -7.477160453796387
    4. '.' → logprob: -7.727160453796387
    5. '_import' → logprob: -7.977160453796387
    6. '_' → logprob: -8.852160453796387
    7. '<|end|>' → logprob: -8.977160453796387
    8. '```' → logprob: -10.102160453796387
    9. '	import' → logprob: -11.102160453796387
    10. 'space' → logprob: -11.477160453796387

Token 6: ' randint' (ID: 135439)
  Prédit: ' randint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' randint' → logprob: -0.029960831627249718
    2. ' choice' → logprob: -3.779960870742798
    3. ' random' → logprob: -5.904960632324219
    4. ' rand' → logprob: -6.029960632324219
    5. 'choice' → logprob: -7.154960632324219
    6. 'rand' → logprob: -7.279960632324219
    7. ' ' → logprob: -9.779960632324219
    8. 'random' → logprob: -11.154960632324219
    9. ' choices' → logprob: -11.529960632324219
    10. ' sample' → logprob: -12.029960632324219

Token 7: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5132726430892944
    2. '
' → logprob: -1.8882726430892944
    3. '\n' → logprob: -1.8882726430892944
    4. 'import' → logprob: -2.888272762298584
    5. '' → logprob: -4.388272762298584
    6. '(' → logprob: -5.138272762298584
    7. '\' → logprob: -5.388272762298584
    8. '```' → logprob: -5.388272762298584
    9. '<|end|>' → logprob: -5.888272762298584
    10. '


' → logprob: -6.013272762298584

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2285094261169434
    2. '\n' → logprob: -1.2285094261169434
    3. '

' → logprob: -2.1035094261169434
    4. '```' → logprob: -2.3535094261169434
    5. 'import' → logprob: -2.8535094261169434
    6. '' → logprob: -3.1035094261169434
    7. '\' → logprob: -3.2285094261169434
    8. ',' → logprob: -4.228509426116943
    9. '(' → logprob: -4.353509426116943
    10. '`' → logprob: -4.978509426116943

Token 9: ' numpy' (ID: 19529)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7325918078422546
    2. ' time' → logprob: -1.7325918674468994
    3. ' string' → logprob: -1.8575918674468994
    4. ' os' → logprob: -2.6075918674468994
    5. 'time' → logprob: -3.6075918674468994
    6. ' random' → logprob: -3.7325918674468994
    7. ' datetime' → logprob: -4.35759162902832
    8. ' itertools' → logprob: -4.35759162902832
    9. ' collections' → logprob: -4.85759162902832
    10. 'math' → logprob: -4.98259162902832

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.039759352803230286
    2. 'import' → logprob: -3.914759397506714
    3. '.' → logprob: -4.664759159088135
    4. '<|end|>' → logprob: -5.289759159088135
    5. ' as' → logprob: -6.164759159088135
    6. ' ' → logprob: -6.539759159088135
    7. '<|end|>' → logprob: -8.414759635925293
    8. '.linalg' → logprob: -8.414759635925293
    9. '.random' → logprob: -8.539759635925293
    10. '.ndarray' → logprob: -9.164759635925293

Token 11: ' arg' (ID: 2341)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.1293712705373764
    2. 'random' → logprob: -2.754371166229248
    3. ' array' → logprob: -3.004371166229248
    4. 'array' → logprob: -5.129371166229248
    5. ' randint' → logprob: -6.254371166229248
    6. 'rand' → logprob: -9.504371643066406
    7. ' rand' → logprob: -9.879371643066406
    8. ' choice' → logprob: -10.004371643066406
    9. ' ndarray' → logprob: -10.504371643066406
    10. '```' → logprob: -10.504371643066406

Token 12: 'min' (ID: 1493)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00032485672272741795
    2. 'min' → logprob: -8.875325202941895
    3. 'sort' → logprob: -9.375325202941895
    4. 'partition' → logprob: -9.500325202941895
    5. 'where' → logprob: -10.625325202941895
    6. 'top' → logprob: -16.000324249267578
    7. '_max' → logprob: -16.000324249267578
    8. 'MAX' → logprob: -16.125324249267578
    9. 'amax' → logprob: -16.125324249267578
    10. 'ort' → logprob: -16.750324249267578

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.596886932849884
    2. '

' → logprob: -1.9718868732452393
    3. '(' → logprob: -2.3468868732452393
    4. '\n' → logprob: -2.8468868732452393
    5. '(
' → logprob: -3.0968868732452393
    6. 'import' → logprob: -3.5968868732452393
    7. ',' → logprob: -4.096887111663818
    8. '\' → logprob: -4.346887111663818
    9. '' → logprob: -4.721887111663818
    10. 'def' → logprob: -4.846887111663818

Token 14: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6376073360443115
    2. 'import' → logprob: -1.8876073360443115
    3. '\n' → logprob: -1.8876073360443115
    4. '\' → logprob: -2.0126073360443115
    5. '```' → logprob: -2.5126073360443115
    6. 'def' → logprob: -2.6376073360443115
    7. '
' → logprob: -2.8876073360443115
    8. ',' → logprob: -3.3876073360443115
    9. '(
' → logprob: -3.6376073360443115
    10. '#' → logprob: -3.7626073360443115

Token 15: ' scipy' (ID: 68933)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8395828604698181
    2. ' sklearn' → logprob: -1.089582920074463
    3. ' scipy' → logprob: -2.339582920074463
    4. 'sk' → logprob: -2.464582920074463
    5. ' collections' → logprob: -4.214582920074463
    6. ' random' → logprob: -4.589582920074463
    7. ' numpy' → logprob: -4.964582920074463
    8. 'math' → logprob: -5.089582920074463
    9. ' itertools' → logprob: -5.339582920074463
    10. ' sk' → logprob: -6.339582920074463

Token 16: '.s' (ID: 640)
  Prédit: '.optimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.optimize' → logprob: -0.11266670376062393
    2. '.' → logprob: -2.987666606903076
    3. '.interpolate' → logprob: -4.362666606903076
    4. '.linalg' → logprob: -4.487666606903076
    5. '.cluster' → logprob: -4.737666606903076
    6. '.s' → logprob: -4.737666606903076
    7. '.stats' → logprob: -4.862666606903076
    8. ' .' → logprob: -5.862666606903076
    9. ' import' → logprob: -5.862666606903076
    10. '.special' → logprob: -7.612666606903076

Token 17: 'parse' (ID: 4841)
  Prédit: 'patial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patial' → logprob: -0.021317051723599434
    2. 'p' → logprob: -4.771317005157471
    3. 'pat' → logprob: -5.271317005157471
    4. 'parse' → logprob: -5.521317005157471
    5. 't' → logprob: -6.521317005157471
    6. 'pecial' → logprob: -7.146317005157471
    7. 'pa' → logprob: -7.896317005157471
    8. 'ignal' → logprob: -8.646317481994629
    9. 'pt' → logprob: -8.771317481994629
    10. 'earch' → logprob: -8.896317481994629

Token 18: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6288117170333862
    2. 'import' → logprob: -1.1288117170333862
    3. '.linalg' → logprob: -2.128811836242676
    4. '<|end|>' → logprob: -4.253811836242676
    5. '.c' → logprob: -6.128811836242676
    6. 'cs' → logprob: -6.503811836242676
    7. '_import' → logprob: -6.753811836242676
    8. '<|end|>' → logprob: -7.253811836242676
    9. 'matrix' → logprob: -7.503811836242676
    10. '	import' → logprob: -7.628811836242676

Token 19: ' csr' (ID: 162927)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'csr' → logprob: -0.4569222629070282
    2. ' csr' → logprob: -1.2069222927093506
    3. 'c' → logprob: -3.9569222927093506
    4. 'cs' → logprob: -4.5819220542907715
    5. 'l' → logprob: -5.0819220542907715
    6. ' co' → logprob: -5.3319220542907715
    7. 'co' → logprob: -5.3319220542907715
    8. ' c' → logprob: -5.3319220542907715
    9. ' lil' → logprob: -5.3319220542907715
    10. ' random' → logprob: -5.4569220542907715

Token 20: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.003672756254673004
    2. 'matrix' → logprob: -5.8786725997924805
    3. 'mat' → logprob: -7.1286725997924805
    4. '_mat' → logprob: -10.00367259979248
    5. 'atrix' → logprob: -11.75367259979248
    6. ' matrix' → logprob: -12.25367259979248
    7. 'Matrix' → logprob: -13.25367259979248
    8. 's' → logprob: -13.62867259979248
    9. 'm' → logprob: -13.62867259979248
    10. '矩' → logprob: -14.12867259979248

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.72780841588974
    2. '

' → logprob: -1.4778084754943848
    3. 'import' → logprob: -1.4778084754943848
    4. '\n' → logprob: -3.9778084754943848
    5. '' → logprob: -4.602808475494385
    6. '
' → logprob: -4.977808475494385
    7. 'def' → logprob: -5.227808475494385
    8. ' 

' → logprob: -5.977808475494385
    9. '#' → logprob: -5.977808475494385
    10. 'x' → logprob: -6.477808475494385

Token 22: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5717134475708008
    2. '\n' → logprob: -2.196713447570801
    3. '
' → logprob: -2.321713447570801
    4. '#' → logprob: -2.696713447570801
    5. 'def' → logprob: -2.821713447570801
    6. '

' → logprob: -3.821713447570801
    7. '' → logprob: -4.071713447570801
    8. ',' → logprob: -5.196713447570801
    9. '\' → logprob: -5.196713447570801
    10. 'n' → logprob: -5.321713447570801

Token 23: ' scipy' (ID: 68933)
  Prédit: ' sklearn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sklearn' → logprob: -0.5055721402168274
    2. 'sk' → logprob: -1.0055720806121826
    3. ' scipy' → logprob: -4.005572319030762
    4. ' collections' → logprob: -5.630572319030762
    5. ' numpy' → logprob: -5.755572319030762
    6. 'numpy' → logprob: -6.380572319030762
    7. 'collections' → logprob: -6.755572319030762
    8. ' math' → logprob: -7.130572319030762
    9. ' network' → logprob: -7.755572319030762
    10. 'sc' → logprob: -7.880572319030762

Token 24: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.33266109228134155
    2. 's' → logprob: -1.8326611518859863
    3. '.optimize' → logprob: -3.3326611518859863
    4. '.' → logprob: -3.5826611518859863
    5. '_sparse' → logprob: -3.9576611518859863
    6. ' import' → logprob: -4.582661151885986
    7. '.linalg' → logprob: -4.707661151885986
    8. 'import' → logprob: -4.707661151885986
    9. '.cluster' → logprob: -5.582661151885986
    10. '.interpolate' → logprob: -5.957661151885986

Token 25: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.07020362466573715
    2. 'patial' → logprob: -2.6952035427093506
    3. 'p' → logprob: -9.32020378112793
    4. 'par' → logprob: -9.69520378112793
    5. 'pat' → logprob: -10.57020378112793
    6. 'pecial' → logprob: -11.07020378112793
    7. 'pars' → logprob: -11.44520378112793
    8. 'pare' → logprob: -11.82020378112793
    9. 'import' → logprob: -11.94520378112793
    10. 'ignal' → logprob: -12.07020378112793

Token 26: '.cs' (ID: 37596)
  Prédit: '.linalg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.linalg' → logprob: -0.034354791045188904
    2. ' import' → logprob: -4.1593546867370605
    3. 'import' → logprob: -4.7843546867370605
    4. '.' → logprob: -5.4093546867370605
    5. '._' → logprob: -6.0343546867370605
    6. ' .' → logprob: -6.5343546867370605
    7. '.c' → logprob: -7.1593546867370605
    8. '<|end|>' → logprob: -8.909355163574219
    9. '.data' → logprob: -9.159355163574219
    10. '.cs' → logprob: -9.284355163574219

Token 27: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.05124921724200249
    2. 'r' → logprob: -3.0512492656707764
    3. 'raph' → logprob: -6.926249027252197
    4. 'ring' → logprob: -7.051249027252197
    5. 'c' → logprob: -8.926249504089355
    6. 'rg' → logprob: -9.301249504089355
    7. 't' → logprob: -9.676249504089355
    8. 'parse' → logprob: -9.676249504089355
    9. 're' → logprob: -9.926249504089355
    10. 'matrix' → logprob: -9.926249504089355

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.00468109967187047
    2. 'import' → logprob: -5.37968111038208
    3. ' ' → logprob: -10.504680633544922
    4. '_import' → logprob: -11.379680633544922
    5. '_' → logprob: -11.754680633544922
    6. '.' → logprob: -12.129680633544922
    7. '	import' → logprob: -13.504680633544922
    8. ' .' → logprob: -13.879680633544922
    9. ' imports' → logprob: -14.254680633544922
    10. ' _' → logprob: -14.254680633544922

Token 29: ' flo' (ID: 15037)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.4525126814842224
    2. ' d' → logprob: -1.8275127410888672
    3. 'short' → logprob: -2.452512741088867
    4. 'd' → logprob: -2.952512741088867
    5. '_short' → logprob: -3.577512741088867
    6. ' connected' → logprob: -4.327512741088867
    7. '_d' → logprob: -5.077512741088867
    8. 'connected' → logprob: -5.202512741088867
    9. ' minimum' → logprob: -5.702512741088867
    10. 'minimum' → logprob: -5.702512741088867

Token 30: 'yd' (ID: 3859)
  Prédit: 'yd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yd' → logprob: -0.0006981384940445423
    2. 'y' → logprob: -7.500698089599609
    3. 'yed' → logprob: -9.50069808959961
    4. 'yt' → logprob: -10.25069808959961
    5. 'ydd' → logprob: -11.62569808959961
    6. 'od' → logprob: -11.62569808959961
    7. 'yer' → logprob: -12.25069808959961
    8. 'ody' → logprob: -13.75069808959961
    9. '```' → logprob: -13.87569808959961
    10. 'w' → logprob: -14.00069808959961

Token 31: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -8.506661833962426e-05
    2. 'war' → logprob: -9.87508487701416
    3. '-war' → logprob: -11.12508487701416
    4. 'War' → logprob: -11.37508487701416
    5. '_' → logprob: -13.87508487701416
    6. '<|end|>' → logprob: -14.00008487701416
    7. '_W' → logprob: -14.12508487701416
    8. '_warn' → logprob: -14.25008487701416
    9. '\' → logprob: -14.50008487701416
    10. 'w' → logprob: -14.87508487701416

Token 32: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.003193516517058015
    2. 'arshal' → logprob: -5.753193378448486
    3. 'ars' → logprob: -12.378193855285645
    4. '```' → logprob: -12.628193855285645
    5. 'arst' → logprob: -13.503193855285645
    6. '_ar' → logprob: -13.628193855285645
    7. '	ar' → logprob: -13.878193855285645
    8. '(ar' → logprob: -14.128193855285645
    9. 'ар' → logprob: -14.253193855285645
    10. '``' → logprob: -14.753193855285645

Token 33: 'shall' (ID: 30275)
  Prédit: 'shall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shall' → logprob: -0.17187753319740295
    2. 'all' → logprob: -2.17187762260437
    3. 'ar' → logprob: -3.17187762260437
    4. 'arshal' → logprob: -6.796877384185791
    5. 'hall' → logprob: -8.42187786102295
    6. 'shal' → logprob: -8.54687786102295
    7. '```' → logprob: -9.42187786102295
    8. 'al' → logprob: -9.54687786102295
    9. 'sh' → logprob: -9.67187786102295
    10. '``' → logprob: -10.17187786102295

Token 34: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.09233339130878448
    2. '
' → logprob: -2.7173333168029785
    3. '#' → logprob: -4.9673333168029785
    4. 'def' → logprob: -4.9673333168029785
    5. 'import' → logprob: -6.0923333168029785
    6. '


' → logprob: -6.9673333168029785
    7. '
' → logprob: -6.9673333168029785
    8. '' → logprob: -7.3423333168029785
    9. '<|end|>' → logprob: -7.5923333168029785
    10. ' 

' → logprob: -7.8423333168029785

Token 35: 'input' (ID: 2586)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.06305941939353943
    2. '
' → logprob: -3.1880593299865723
    3. 'def' → logprob: -4.313059329986572
    4. 'import' → logprob: -5.813059329986572
    5. '```' → logprob: -6.938059329986572
    6. '<|end|>' → logprob: -7.438059329986572
    7. '' → logprob: -8.18805980682373
    8. '#' → logprob: -8.31305980682373
    9. '

' → logprob: -8.68805980682373
    10. '\n' → logprob: -8.68805980682373

Token 36: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08338133245706558
    2. '(' → logprob: -2.708381414413452
    3. '.' → logprob: -5.583381175994873
    4. '=' → logprob: -5.708381175994873
    5. ' =' → logprob: -5.708381175994873
    6. 'data' → logprob: -7.458381175994873
    7. '().' → logprob: -7.708381175994873
    8. ')' → logprob: -8.333381652832031
    9. '```' → logprob: -8.333381652832031
    10. '_data' → logprob: -8.583381652832031

Token 37: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10848261415958405
    2. 'input' → logprob: -2.858482599258423
    3. ' sys' → logprob: -3.108482599258423
    4. ' input' → logprob: -7.358482837677002
    5. 'lambda' → logprob: -9.483482360839844
    6. '(sys' → logprob: -10.733482360839844
    7. 'raw' → logprob: -10.983482360839844
    8. '=sys' → logprob: -11.358482360839844
    9. '	sys' → logprob: -12.108482360839844
    10. ' lambda' → logprob: -12.483482360839844

Token 38: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03494400903582573
    2. '.stdin' → logprob: -3.5349440574645996
    3. '.readline' → logprob: -5.9099440574646
    4. '.input' → logprob: -7.0349440574646
    5. '.argv' → logprob: -7.9099440574646
    6. ' .' → logprob: -7.9099440574646
    7. '.stdout' → logprob: -9.034943580627441
    8. '.version' → logprob: -9.034943580627441
    9. '.exit' → logprob: -9.534943580627441
    10. '.get' → logprob: -9.534943580627441

Token 39: '.buffer' (ID: 48964)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18157464265823364
    2. '.readline' → logprob: -1.8065745830535889
    3. '.read' → logprob: -6.431574821472168
    4. '.readlines' → logprob: -9.681574821472168
    5. '.
' → logprob: -10.431574821472168
    6. '.

' → logprob: -10.431574821472168
    7. '
' → logprob: -11.431574821472168
    8. 'read' → logprob: -11.431574821472168
    9. '.\' → logprob: -11.931574821472168
    10. '.write' → logprob: -11.931574821472168

Token 40: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.02011331170797348
    2. '.read' → logprob: -4.270113468170166
    3. '.' → logprob: -5.145113468170166
    4. '.readlines' → logprob: -9.770112991333008
    5. 'read' → logprob: -10.645112991333008
    6. '```' → logprob: -12.645112991333008
    7. '<|end|>' → logprob: -12.645112991333008
    8. ' readline' → logprob: -12.645112991333008
    9. '.Read' → logprob: -13.020112991333008
    10. '_read' → logprob: -13.270112991333008

Token 41: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23302656412124634
    2. '
' → logprob: -2.7330265045166016
    3. 'n' → logprob: -2.9830265045166016
    4. '(n' → logprob: -3.1080265045166016
    5. '(' → logprob: -4.233026504516602
    6. '

' → logprob: -4.608026504516602
    7. 'for' → logprob: -5.233026504516602
    8. '\n' → logprob: -5.858026504516602
    9. '()' → logprob: -6.108026504516602
    10. '
' → logprob: -6.608026504516602

Token 42: 'problem' (ID: 63922)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43152040243148804
    2. 'def' → logprob: -1.6815204620361328
    3. 'n' → logprob: -2.306520462036133
    4. '

' → logprob: -4.056520462036133
    5. '(n' → logprob: -4.306520462036133
    6. 'class' → logprob: -4.556520462036133
    7. '\n' → logprob: -5.181520462036133
    8. '(' → logprob: -5.681520462036133
    9. '
' → logprob: -6.181520462036133
    10. '```' → logprob: -6.181520462036133

Token 43: '_b' (ID: 1535)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28526771068573
    2. 's' → logprob: -2.0352678298950195
    3. ':' → logprob: -3.0352678298950195
    4. '=' → logprob: -3.5352678298950195
    5. '_' → logprob: -4.4102678298950195
    6. '.' → logprob: -4.7852678298950195
    7. 'def' → logprob: -5.5352678298950195
    8. '_s' → logprob: -5.6602678298950195
    9. '_name' → logprob: -6.7852678298950195
    10. '_size' → logprob: -6.9102678298950195

Token 44: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7222915291786194
    2. '_' → logprob: -1.5972914695739746
    3. 'y' → logprob: -2.8472914695739746
    4. 'ody' → logprob: -3.4722914695739746
    5. 'fs' → logprob: -3.5972914695739746
    6. 'ase' → logprob: -3.7222914695739746
    7. 'est' → logprob: -4.097291469573975
    8. 'r' → logprob: -4.347291469573975
    9. '.py' → logprob: -4.347291469573975
    10. '```' → logprob: -4.472291469573975

Token 45: ' True' (ID: 6432)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8106380105018616
    2. '{}' → logprob: -1.3106379508972168
    3. '{' → logprob: -2.435637950897217
    4. '[' → logprob: -2.810637950897217
    5. 'lambda' → logprob: -3.310637950897217
    6. ' []' → logprob: -4.060637950897217
    7. '""' → logprob: -4.185637950897217
    8. 'dict' → logprob: -4.435637950897217
    9. 'set' → logprob: -4.685637950897217
    10. '[int' → logprob: -5.435637950897217

Token 46: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2108314484357834
    2. '

' → logprob: -2.3358314037323
    3. 'if' → logprob: -3.2108314037323
    4. 'def' → logprob: -3.9608314037323
    5. 'n' → logprob: -5.335831642150879
    6. '' → logprob: -5.335831642150879
    7. '\n' → logprob: -5.335831642150879
    8. 'newline' → logprob: -5.335831642150879
    9. '#' → logprob: -5.710831642150879
    10. ' if' → logprob: -6.335831642150879

Token 47: 'V' (ID: 53)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.32615625858306885
    2. 'def' → logprob: -2.0761561393737793
    3. '
' → logprob: -2.9511561393737793
    4. '#' → logprob: -3.4511561393737793
    5. 'd' → logprob: -3.5761561393737793
    6. 'if' → logprob: -4.701156139373779
    7. 'class' → logprob: -5.201156139373779
    8. 'N' → logprob: -5.451156139373779
    9. '' → logprob: -6.201156139373779
    10. '

' → logprob: -6.201156139373779

Token 48: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2786402702331543
    2. '=' → logprob: -1.5286402702331543
    3. ',' → logprob: -3.6536402702331543
    4. ' ' → logprob: -9.028640747070312
    5. '_' → logprob: -9.403640747070312
    6. ' ,' → logprob: -9.528640747070312
    7. 'ALUE' → logprob: -9.778640747070312
    8. '   ' → logprob: -10.778640747070312
    9. '.' → logprob: -10.903640747070312
    10. '  ' → logprob: -11.028640747070312

Token 49: ' E' (ID: 457)
  Prédit: ' E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.2571853697299957
    2. 'E' → logprob: -1.5071853399276733
    3. ' ' → logprob: -5.507185459136963
    4. ' W' → logprob: -7.132185459136963
    5. ' =' → logprob: -9.007184982299805
    6. 'W' → logprob: -9.132184982299805
    7. 'F' → logprob: -11.132184982299805
    8. '=' → logprob: -11.257184982299805
    9. ' F' → logprob: -11.382184982299805
    10. '_' → logprob: -11.757184982299805

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697292864322662
    2. '=' → logprob: -2.1269729137420654
    3. ',' → logprob: -10.126973152160645
    4. ' ' → logprob: -12.876973152160645
    5. '=input' → logprob: -14.126973152160645
    6. ' ,' → logprob: -14.751973152160645
    7. ' =
' → logprob: -15.251973152160645
    8. '=int' → logprob: -15.376973152160645
    9. ' =
' → logprob: -16.501972198486328
    10. '＝' → logprob: -16.626972198486328

Token 51: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.016065575182437897
    2. 'map' → logprob: -4.14106559753418
    3. ' input' → logprob: -11.51606559753418
    4. ' ' → logprob: -11.89106559753418
    5. ' list' → logprob: -12.14106559753418
    6. ' [' → logprob: -12.39106559753418
    7. 'input' → logprob: -13.26606559753418
    8. '[' → logprob: -13.64106559753418
    9. 'list' → logprob: -14.39106559753418
    10. '	map' → logprob: -14.64106559753418

Token 52: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10355767607688904
    2. '(' → logprob: -2.353557586669922
    3. '(input' → logprob: -6.353557586669922
    4. '(lambda' → logprob: -6.603557586669922
    5. '(str' → logprob: -8.478557586669922
    6. 'int' → logprob: -10.978557586669922
    7. '(
' → logprob: -11.978557586669922
    8. ' (' → logprob: -12.228557586669922
    9. 'input' → logprob: -13.103557586669922
    10. '(eval' → logprob: -13.353557586669922

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023722205311059952
    2. ',input' → logprob: -3.7737221717834473
    3. 'input' → logprob: -8.523722648620605
    4. '(input' → logprob: -9.273722648620605
    5. ' ,' → logprob: -9.398722648620605
    6. '(' → logprob: -9.398722648620605
    7. ',int' → logprob: -11.523722648620605
    8. ' input' → logprob: -13.023722648620605
    9. '```' → logprob: -13.523722648620605
    10. ')' → logprob: -13.773722648620605

Token 54: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1269347220659256
    2. 'input' → logprob: -2.126934766769409
    3. ')' → logprob: -13.001935005187988
    4. ' ' → logprob: -13.501935005187988
    5. ' )' → logprob: -14.001935005187988
    6. '=input' → logprob: -14.251935005187988
    7. ',input' → logprob: -14.251935005187988
    8. '	input' → logprob: -15.376935005187988
    9. '(input' → logprob: -15.626935005187988
    10. ' sys' → logprob: -16.751934051513672

Token 55: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00038479414070025086
    2. '()' → logprob: -7.87538480758667
    3. '())' → logprob: -12.500384330749512
    4. ' ().' → logprob: -14.375384330749512
    5. '(' → logprob: -15.750384330749512
    6. ')' → logprob: -16.125385284423828
    7. '()
' → logprob: -16.500385284423828
    8. '()))' → logprob: -17.625385284423828
    9. '()[' → logprob: -18.000385284423828
    10. ' ()' → logprob: -18.250385284423828

Token 56: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04329684004187584
    2. 'strip' → logprob: -3.2932968139648438
    3. 'decode' → logprob: -6.043296813964844
    4. 'read' → logprob: -6.418296813964844
    5. 'rstrip' → logprob: -6.793296813964844
    6. ')' → logprob: -9.293296813964844
    7. '().' → logprob: -11.418296813964844
    8. ' split' → logprob: -12.043296813964844
    9. '())' → logprob: -13.293296813964844
    10. '(split' → logprob: -13.418296813964844

Token 57: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5978208780288696
    2. ')' → logprob: -0.8478208780288696
    3. '()' → logprob: -3.84782075881958
    4. '(' → logprob: -8.347821235656738
    5. '))' → logprob: -10.097821235656738
    6. '()))' → logprob: -11.722821235656738
    7. '(),' → logprob: -11.722821235656738
    8. '())
' → logprob: -12.597821235656738
    9. ' )' → logprob: -12.972821235656738
    10. '('' → logprob: -12.972821235656738

Token 58: 'v' (ID: 85)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1458479166030884
    2. 'graph' → logprob: -1.1458479166030884
    3. '<|end|>' → logprob: -2.270847797393799
    4. ')' → logprob: -2.645847797393799
    5. ',' → logprob: -3.645847797393799
    6. '\n' → logprob: -3.895847797393799
    7. 'newline' → logprob: -3.895847797393799
    8. ' graph' → logprob: -4.645847797393799
    9. 'edges' → logprob: -4.770847797393799
    10. 'data' → logprob: -4.770847797393799

Token 59: '_from' (ID: 12526)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.70197993516922
    2. 's' → logprob: -0.82697993516922
    3. 'ert' → logprob: -3.326979875564575
    4. 'als' → logprob: -4.826980113983154
    5. 'alid' → logprob: -5.201980113983154
    6. 'alue' → logprob: -5.576980113983154
    7. ' =' → logprob: -5.826980113983154
    8. 'tx' → logprob: -6.201980113983154
    9. 'er' → logprob: -6.451980113983154
    10. 'alist' → logprob: -6.701980113983154

Token 60: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01699678786098957
    2. 's' → logprob: -4.39199686050415
    3. ' ,' → logprob: -5.51699686050415
    4. '_,' → logprob: -8.516996383666992
    5. ',v' → logprob: -8.516996383666992
    6. '=' → logprob: -11.766996383666992
    7. ',s' → logprob: -12.016996383666992
    8. ' =' → logprob: -12.016996383666992
    9. '_list' → logprob: -12.141996383666992
    10. '[],' → logprob: -12.266996383666992

Token 61: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.050568319857120514
    2. '[' → logprob: -3.0505683422088623
    3. '[]
' → logprob: -6.550568103790283
    4. ' []' → logprob: -9.050568580627441
    5. '[]}' → logprob: -9.300568580627441
    6. '[v' → logprob: -9.300568580627441
    7. '[int' → logprob: -9.425568580627441
    8. '[]

' → logprob: -9.800568580627441
    9. '[],' → logprob: -10.925568580627441
    10. '[input' → logprob: -12.050568580627441

Token 62: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005470667965710163
    2. ' v' → logprob: -5.2554707527160645
    3. '[]' → logprob: -9.380470275878906
    4. '	v' → logprob: -9.380470275878906
    5. ' ' → logprob: -11.255470275878906
    6. '<|end|>' → logprob: -11.505470275878906
    7. '[v' → logprob: -11.505470275878906
    8. '_v' → logprob: -12.380470275878906
    9. '<|end|>' → logprob: -12.505470275878906
    10. ' []' → logprob: -12.880470275878906

Token 63: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.023741645738482475
    2. '_' → logprob: -3.7737417221069336
    3. 'to' → logprob: -7.898741722106934
    4. '_t' → logprob: -9.273741722106934
    5. '_=' → logprob: -10.898741722106934
    6. ' _' → logprob: -12.523741722106934
    7. 'To' → logprob: -13.898741722106934
    8. '_into' → logprob: -14.273741722106934
    9. '_,' → logprob: -14.398741722106934
    10. ' to' → logprob: -14.398741722106934

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47448253631591797
    2. '=' → logprob: -0.974482536315918
    3. '=[]' → logprob: -8.099482536315918
    4. '[]' → logprob: -9.724482536315918
    5. ',' → logprob: -11.349482536315918
    6. ' ' → logprob: -11.849482536315918
    7. '<|end|>' → logprob: -12.224482536315918
    8. 's' → logprob: -12.474482536315918
    9. ']' → logprob: -12.724482536315918
    10. ')' → logprob: -13.349482536315918

Token 65: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2519732713699341
    2. ' []' → logprob: -1.501973271369934
    3. '[]
' → logprob: -10.376973152160645
    4. ' []
' → logprob: -12.126973152160645
    5. '[]}' → logprob: -12.501973152160645
    6. ' ' → logprob: -14.251973152160645
    7. '[])' → logprob: -14.376973152160645
    8. '[]>' → logprob: -14.501973152160645
    9. '[' → logprob: -14.626973152160645
    10. '[]

' → logprob: -15.251973152160645

Token 66: 'cost' (ID: 33457)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16904650628566742
    2. 'w' → logprob: -2.294046401977539
    3. 'weights' → logprob: -3.419046401977539
    4. 'dist' → logprob: -4.419046401977539
    5. 'weight' → logprob: -5.544046401977539
    6. 'cost' → logprob: -5.919046401977539
    7. 'd' → logprob: -7.544046401977539
    8. 'edges' → logprob: -7.669046401977539
    9. 'c' → logprob: -7.919046401977539
    10. '[]' → logprob: -8.044046401977539

Token 67: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.038492508232593536
    2. '=' → logprob: -3.663492441177368
    3. ' =' → logprob: -4.413492679595947
    4. '=[]' → logprob: -12.663492202758789
    5. '[]' → logprob: -14.038492202758789
    6. 'es' → logprob: -14.913492202758789
    7. '_list' → logprob: -15.288492202758789
    8. '_' → logprob: -15.788492202758789
    9. '_s' → logprob: -15.913492202758789
    10. ' s' → logprob: -16.41349220275879

Token 68: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03805285319685936
    2. ' []' → logprob: -3.288052797317505
    3. '[]}' → logprob: -12.413052558898926
    4. '[' → logprob: -12.663052558898926
    5. '[]
' → logprob: -13.413052558898926
    6. '[]>' → logprob: -14.163052558898926
    7. '[])' → logprob: -14.913052558898926
    8. '=[]' → logprob: -14.913052558898926
    9. '[],' → logprob: -15.163052558898926
    10. '[int' → logprob: -15.413052558898926

Token 69: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032131264451891184
    2. ' for' → logprob: -6.003212928771973
    3. '<|end|>' → logprob: -7.753212928771973
    4. 'v' → logprob: -9.378212928771973
    5. '
' → logprob: -10.128212928771973
    6. '[' → logprob: -10.128212928771973
    7. '<|end|>' → logprob: -10.253212928771973
    8. '\n' → logprob: -10.503212928771973
    9. ' ' → logprob: -10.878212928771973
    10. '```' → logprob: -11.628212928771973

Token 70: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.007861185818910599
    2. '_' → logprob: -5.257861137390137
    3. ' i' → logprob: -6.257861137390137
    4. ' ' → logprob: -7.257861137390137
    5. ' ' → logprob: -13.382861137390137
    6. 'i' → logprob: -14.132861137390137
    7. '_i' → logprob: -14.757861137390137
    8. ' in' → logprob: -15.007861137390137
    9. '  ' → logprob: -15.132861137390137
    10. ' ‌' → logprob: -15.882861137390137

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0432356558740139
    2. 'in' → logprob: -3.7932355403900146
    3. '_' → logprob: -4.043235778808594
    4. ' ' → logprob: -6.918235778808594
    5. 's' → logprob: -7.793235778808594
    6. 'range' → logprob: -8.168235778808594
    7. ' _' → logprob: -8.543235778808594
    8. 'v' → logprob: -9.668235778808594
    9. '  ' → logprob: -9.793235778808594
    10. ' range' → logprob: -10.418235778808594

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00021212305000517517
    2. ' range' → logprob: -8.500211715698242
    3. '(range' → logprob: -12.500211715698242
    4. '	range' → logprob: -13.375211715698242
    5. 'v' → logprob: -13.500211715698242
    6. '```' → logprob: -14.875211715698242
    7. ')' → logprob: -15.000211715698242
    8. 'ange' → logprob: -15.250211715698242
    9. 'rang' → logprob: -15.375211715698242
    10. 'cost' → logprob: -15.625211715698242

Token 73: '(E' (ID: 20882)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6910492777824402
    2. '(E' → logprob: -0.8160492777824402
    3. ' (' → logprob: -3.066049337387085
    4. ' E' → logprob: -5.066049098968506
    5. '(int' → logprob: -6.316049098968506
    6. ')' → logprob: -7.441049098968506
    7. 'E' → logprob: -7.441049098968506
    8. '(V' → logprob: -7.566049098968506
    9. '(
' → logprob: -9.066049575805664
    10. ' )' → logprob: -9.566049575805664

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005151804536581039
    2. ')' → logprob: -5.380151748657227
    3. '):
' → logprob: -8.005151748657227
    4. ' ):' → logprob: -8.630151748657227
    5. ':' → logprob: -11.630151748657227
    6. ',' → logprob: -12.630151748657227
    7. ' )' → logprob: -12.755151748657227
    8. ' ' → logprob: -14.380151748657227
    9. '):
' → logprob: -14.630151748657227
    10. ')：' → logprob: -14.755151748657227

Token 75: '   ' (ID: 271)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.2523360550403595
    2. '   ' → logprob: -1.877336025238037
    3. 'v' → logprob: -2.877336025238037
    4. ' 
' → logprob: -5.127336025238037
    5. '<|end|>' → logprob: -6.252336025238037
    6. 'from' → logprob: -7.127336025238037
    7. '	v' → logprob: -7.127336025238037
    8. '    
' → logprob: -7.127336025238037
    9. ' from' → logprob: -7.252336025238037
    10. ' f' → logprob: -8.002336502075195

Token 76: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5909113883972168
    2. 'u' (adapté à ' u') → logprob: -0.9659113883972168
    3. 'v' → logprob: -3.465911388397217
    4. ' v' → logprob: -3.715911388397217
    5. 'f' → logprob: -5.715911388397217
    6. ' f' → logprob: -5.840911388397217
    7. 's' → logprob: -6.715911388397217
    8. 'a' → logprob: -7.090911388397217
    9. ' s' → logprob: -7.715911388397217
    10. ' a' → logprob: -8.090911865234375

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031413204851560295
    2. ' ,' → logprob: -8.750313758850098
    3. ',v' → logprob: -9.000313758850098
    4. ',u' → logprob: -10.500313758850098
    5. ',n' → logprob: -14.000313758850098
    6. '_,' → logprob: -14.375313758850098
    7. ',
' → logprob: -15.125313758850098
    8. ',)' → logprob: -15.125313758850098
    9. ',user' → logprob: -15.125313758850098
    10. ',int' → logprob: -15.250313758850098

Token 78: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.28700605034828186
    2. 'v' → logprob: -1.4120060205459595
    3. ' ' → logprob: -5.78700590133667
    4. '<|end|>' → logprob: -6.28700590133667
    5. 'w' → logprob: -7.78700590133667
    6. ' w' → logprob: -8.287006378173828
    7. ',v' → logprob: -9.287006378173828
    8. '_' → logprob: -10.537006378173828
    9. '  ' → logprob: -11.037006378173828
    10. '<|end|>' → logprob: -11.287006378173828

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23222716152668
    2. '=' → logprob: -1.8572272062301636
    3. ' =' → logprob: -2.982227087020874
    4. ' ,' → logprob: -8.232227325439453
    5. '<|end|>' → logprob: -9.482227325439453
    6. ')' → logprob: -9.607227325439453
    7. ' ' → logprob: -11.607227325439453
    8. '  ' → logprob: -12.232227325439453
    9. '   ' → logprob: -12.357227325439453
    10. '<|end|>' → logprob: -12.732227325439453

Token 80: ' d' (ID: 272)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.10243992507457733
    2. 'w' → logprob: -2.4774398803710938
    3. ' c' → logprob: -4.477439880371094
    4. 'c' → logprob: -6.602439880371094
    5. ' ' → logprob: -7.602439880371094
    6. ' d' → logprob: -9.977439880371094
    7. 'cost' → logprob: -10.602439880371094
    8. 'd' → logprob: -10.727439880371094
    9. '<|end|>' → logprob: -10.977439880371094
    10. '    ' → logprob: -10.977439880371094

Token 81: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11283145844936371
    2. ' =' → logprob: -2.2378313541412354
    3. '=int' → logprob: -12.862831115722656
    4. 'istance' → logprob: -13.112831115722656
    5. ',' → logprob: -13.862831115722656
    6. ')' → logprob: -14.237831115722656
    7. 'ist' → logprob: -14.487831115722656
    8. ' ' → logprob: -14.612831115722656
    9. '=}' → logprob: -14.737831115722656
    10. '=input' → logprob: -15.612831115722656

Token 82: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.006721995305269957
    2. 'map' → logprob: -5.0067219734191895
    3. '	map' → logprob: -12.256722450256348
    4. ' ' → logprob: -14.131722450256348
    5. ' ' → logprob: -14.631722450256348
    6. 'm' → logprob: -15.506722450256348
    7. '(map' → logprob: -16.00672149658203
    8. ' mapa' → logprob: -16.38172149658203
    9. '_map' → logprob: -16.88172149658203
    10. ' m' → logprob: -17.25672149658203

Token 83: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0052478681318461895
    2. '(' → logprob: -5.255248069763184
    3. '<int' → logprob: -12.255248069763184
    4. '<|end|>' → logprob: -12.380248069763184
    5. '[int' → logprob: -13.755248069763184
    6. '(
' → logprob: -14.255248069763184
    7. '(lambda' → logprob: -14.255248069763184
    8. 'int' → logprob: -14.505248069763184
    9. ' (' → logprob: -14.505248069763184
    10. '=int' → logprob: -14.630248069763184

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0486019104719162
    2. ',input' → logprob: -3.0486018657684326
    3. '(input' → logprob: -11.673602104187012
    4. '(' → logprob: -13.173602104187012
    5. 'input' → logprob: -13.423602104187012
    6. ' ,' → logprob: -13.923602104187012
    7. ',int' → logprob: -14.423602104187012
    8. '(),' → logprob: -14.673602104187012
    9. '，' → logprob: -16.048601150512695
    10. ',(' → logprob: -16.173601150512695

Token 85: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931508779525757
    2. ' input' → logprob: -0.6931508779525757
    3. '(input' → logprob: -13.068150520324707
    4. '=input' → logprob: -14.818150520324707
    5. ',input' → logprob: -14.943150520324707
    6. ')' → logprob: -15.193150520324707
    7. '	input' → logprob: -15.568150520324707
    8. ' ' → logprob: -15.693150520324707
    9. '[input' → logprob: -16.318151473999023
    10. '_input' → logprob: -17.068151473999023

Token 86: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.580929347255733e-05
    2. '()' → logprob: -11.125016212463379
    3. ')' → logprob: -14.625016212463379
    4. ' ().' → logprob: -15.125016212463379
    5. '(' → logprob: -16.250015258789062
    6. '()
' → logprob: -17.125015258789062
    7. '	' → logprob: -17.375015258789062
    8. '())' → logprob: -17.500015258789062
    9. ' ' → logprob: -17.625015258789062
    10. '().__' → logprob: -18.375015258789062

Token 87: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.1008713702030946e-06
    2. ' split' → logprob: -13.875001907348633
    3. 'strip' → logprob: -14.375001907348633
    4. 'spl' → logprob: -15.625001907348633
    5. '(split' → logprob: -15.750001907348633
    6. 'rstrip' → logprob: -16.000001907348633
    7. ')' → logprob: -18.125001907348633
    8. 'plit' → logprob: -18.750001907348633
    9. 'decode' → logprob: -19.750001907348633
    10. '.split' → logprob: -20.250001907348633

Token 88: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006434533279389143
    2. '())' → logprob: -8.000643730163574
    3. '()' → logprob: -8.125643730163574
    4. '(' → logprob: -12.750643730163574
    5. ' )' → logprob: -13.125643730163574
    6. '))' → logprob: -13.125643730163574
    7. '),' → logprob: -13.375643730163574
    8. ')
' → logprob: -13.500643730163574
    9. ')`' → logprob: -14.375643730163574
    10. '):' → logprob: -15.000643730163574

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8835545778274536
    2. '<|end|>' → logprob: -1.3835545778274536
    3. ')' → logprob: -1.7585545778274536
    4. 'v' → logprob: -2.258554458618164
    5. ' ' → logprob: -3.758554458618164
    6. ' 
' → logprob: -4.883554458618164
    7. '    
' → logprob: -5.508554458618164
    8. '  ' → logprob: -5.633554458618164
    9. '    ' → logprob: -5.758554458618164
    10. ' )' → logprob: -5.883554458618164

Token 90: ' v' (ID: 323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22432826459407806
    2. 'v' (adapté à ' v') → logprob: -2.5993282794952393
    3. '<|end|>' → logprob: -2.8493282794952393
    4. 'u' → logprob: -3.5993282794952393
    5. '    ' → logprob: -3.9743282794952393
    6. '	v' → logprob: -4.72432804107666
    7. '    
' → logprob: -5.47432804107666
    8. ' 
' → logprob: -6.09932804107666
    9. ' v' → logprob: -6.47432804107666
    10. ' ' → logprob: -6.72432804107666

Token 91: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.0025170387234538794
    2. '_to' → logprob: -6.002517223358154
    3. '_v' → logprob: -11.127516746520996
    4. 'from' → logprob: -11.252516746520996
    5. '_append' → logprob: -12.752516746520996
    6. '_' → logprob: -13.127516746520996
    7. ')_' → logprob: -13.377516746520996
    8. '_for' → logprob: -13.377516746520996
    9. '._' → logprob: -14.002516746520996
    10. '_u' → logprob: -14.127516746520996

Token 92: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0047508650459349155
    2. '.' → logprob: -5.379750728607178
    3. '.app' → logprob: -9.629751205444336
    4. ' .' → logprob: -10.879751205444336
    5. '.v' → logprob: -11.129751205444336
    6. '.ap' → logprob: -12.254751205444336
    7. '.extend' → logprob: -12.379751205444336
    8. ').' → logprob: -12.629751205444336
    9. '.setdefault' → logprob: -12.629751205444336
    10. '.py' → logprob: -12.754751205444336

Token 93: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0005631613312289119
    2. '(' → logprob: -7.500563144683838
    3. '(v' → logprob: -11.500563621520996
    4. 'u' → logprob: -16.25056266784668
    5. '((' → logprob: -19.12556266784668
    6. '(x' → logprob: -19.12556266784668
    7. '(i' → logprob: -19.25056266784668
    8. ' (' → logprob: -19.62556266784668
    9. ' u' → logprob: -19.75056266784668
    10. '(
' → logprob: -20.00056266784668

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05352700874209404
    2. '-' → logprob: -3.5535271167755127
    3. ' )' → logprob: -3.8035271167755127
    4. ' -' → logprob: -6.928526878356934
    5. '-)' → logprob: -8.678526878356934
    6. ')
' → logprob: -10.303526878356934
    7. ' )
' → logprob: -11.553526878356934
    8. '<|end|>' → logprob: -12.553526878356934
    9. '),' → logprob: -13.178526878356934
    10. ')v' → logprob: -14.053526878356934

Token 95: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.2850985825061798
    2. 'v' (adapté à ' v') → logprob: -1.4100985527038574
    3. '<|end|>' → logprob: -5.785098552703857
    4. ' ' → logprob: -8.535099029541016
    5. ',v' → logprob: -8.535099029541016
    6. '	v' → logprob: -8.660099029541016
    7. '(v' → logprob: -9.160099029541016
    8. ')' → logprob: -9.535099029541016
    9. ')v' → logprob: -10.285099029541016
    10. '_v' → logprob: -10.785099029541016

Token 97: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00019614976190496236
    2. '_' → logprob: -9.12519645690918
    3. '_from' → logprob: -10.12519645690918
    4. 'To' → logprob: -10.62519645690918
    5. 'to' → logprob: -11.37519645690918
    6. '<|end|>' → logprob: -12.37519645690918
    7. ' _' → logprob: -13.87519645690918
    8. '._' → logprob: -13.87519645690918
    9. '_s' → logprob: -14.12519645690918
    10. ''_' → logprob: -14.50019645690918

Token 98: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.016385534778237343
    2. '.append' → logprob: -4.141385555267334
    3. '<|end|>' → logprob: -8.516385078430176
    4. ').' → logprob: -9.266385078430176
    5. ' .' → logprob: -10.391385078430176
    6. '.app' → logprob: -11.641385078430176
    7. '​.' → logprob: -12.141385078430176
    8. ')' → logprob: -13.141385078430176
    9. '.
' → logprob: -13.641385078430176
    10. '.Append' → logprob: -13.641385078430176

Token 99: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.2519367039203644
    2. '(' → logprob: -1.501936674118042
    3. ' (' → logprob: -12.501936912536621
    4. '(
' → logprob: -13.251936912536621
    5. ')' → logprob: -13.751936912536621
    6. 'v' → logprob: -14.876936912536621
    7. '(u' → logprob: -15.251936912536621
    8. '(

' → logprob: -16.001935958862305
    9. '((' → logprob: -16.251935958862305
    10. '(s' → logprob: -16.876935958862305

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012524925405159593
    2. ')
' → logprob: -7.0012526512146
    3. '   ' → logprob: -8.376252174377441
    4. ' )' → logprob: -9.251252174377441
    5. ')d' → logprob: -12.251252174377441
    6. '<|end|>' → logprob: -12.376252174377441
    7. ',' → logprob: -13.251252174377441
    8. '),' → logprob: -13.501252174377441
    9. ' )
' → logprob: -14.251252174377441
    10. ')
' → logprob: -15.126252174377441

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025504580698907375
    2. '<|end|>' → logprob: -6.8775506019592285
    3. ' ' → logprob: -8.00255012512207
    4. '
' → logprob: -8.37755012512207
    5. ')' → logprob: -8.37755012512207
    6. '    
' → logprob: -8.75255012512207
    7. '  ' → logprob: -8.87755012512207
    8. ' cost' → logprob: -9.00255012512207
    9. ' 
' → logprob: -9.12755012512207
    10. 'cost' → logprob: -9.75255012512207

Token 102: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.023266442120075226
    2. ' cost' → logprob: -3.773266553878784
    3. 'd' → logprob: -10.898266792297363
    4. 'c' → logprob: -14.273266792297363
    5. ' d' → logprob: -14.898266792297363
    6. '_cost' → logprob: -15.023266792297363
    7. '
' → logprob: -15.148266792297363
    8. '   ' → logprob: -15.398266792297363
    9. '(cost' → logprob: -15.773266792297363
    10. '-cost' → logprob: -16.148265838623047

Token 103: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4742881953716278
    2. '.append' → logprob: -0.9742882251739502
    3. '<|end|>' → logprob: -9.474287986755371
    4. '.app' → logprob: -9.599287986755371
    5. ' .' → logprob: -10.349287986755371
    6. '.ap' → logprob: -11.974287986755371
    7. '.setdefault' → logprob: -12.099287986755371
    8. ').' → logprob: -12.224287986755371
    9. '.push' → logprob: -12.349287986755371
    10. '.Append' → logprob: -12.974287986755371

Token 104: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0015899618156254292
    2. '(' → logprob: -6.501589775085449
    3. 'd' → logprob: -9.50158977508545
    4. '(
' → logprob: -11.75158977508545
    5. ' (' → logprob: -12.75158977508545
    6. ' d' → logprob: -13.62658977508545
    7. ')d' → logprob: -14.62658977508545
    8. '(int' → logprob: -16.501590728759766
    9. '((' → logprob: -16.626590728759766
    10. ')' → logprob: -16.626590728759766

Token 105: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.2762428822461516e-05
    2. ')
' → logprob: -9.875052452087402
    3. ' )' → logprob: -13.625052452087402
    4. ')return' → logprob: -18.00005340576172
    5. ')

' → logprob: -18.00005340576172
    6. '),' → logprob: -18.12505340576172
    7. '
' → logprob: -18.25005340576172
    8. '}' → logprob: -18.25005340576172
    9. '   ' → logprob: -18.50005340576172
    10. '))' → logprob: -18.62505340576172

Token 106: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.34033095836639404
    2. 'dist' → logprob: -2.2153310775756836
    3. 'adj' → logprob: -2.4653310775756836
    4. 'G' → logprob: -4.215331077575684
    5. 'matrix' → logprob: -4.215331077575684
    6. 'W' → logprob: -4.215331077575684
    7. 'mat' → logprob: -4.715331077575684
    8. 'g' → logprob: -4.840331077575684
    9. 'edges' → logprob: -4.965331077575684
    10. 'A' → logprob: -5.465331077575684

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02098185010254383
    2. '=' → logprob: -4.020981788635254
    3. '_' → logprob: -6.020981788635254
    4. '_matrix' → logprob: -8.395981788635254
    5. 's' → logprob: -10.645981788635254
    6. ' _' → logprob: -11.020981788635254
    7. '_cost' → logprob: -11.145981788635254
    8. ' ' → logprob: -11.145981788635254
    9. ' =
' → logprob: -11.145981788635254
    10. '_data' → logprob: -11.645981788635254

Token 108: ' csr' (ID: 162927)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'csr' → logprob: -0.012560275383293629
    2. ' csr' → logprob: -4.3875603675842285
    3. '[[' → logprob: -10.26255989074707
    4. '[' → logprob: -11.38755989074707
    5. 'cs' → logprob: -14.13755989074707
    6. 'np' → logprob: -14.26255989074707
    7. ' [[' → logprob: -14.63755989074707
    8. '   ' → logprob: -15.13755989074707
    9. '```' → logprob: -15.26255989074707
    10. ' ' → logprob: -15.38755989074707

Token 109: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.0009284949628636241
    2. '_graph' → logprob: -7.0009284019470215
    3. '_' → logprob: -11.25092887878418
    4. '_mat' → logprob: -13.50092887878418
    5. 'matrix' → logprob: -13.75092887878418
    6. ' _' → logprob: -14.75092887878418
    7. '_m' → logprob: -15.37592887878418
    8. '_array' → logprob: -15.62592887878418
    9. '_vector' → logprob: -16.25092887878418
    10. '_tensor' → logprob: -16.25092887878418

Token 110: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.008924765512347221
    2. '(' → logprob: -5.008924961090088
    3. '(([' → logprob: -6.133924961090088
    4. '([' → logprob: -10.50892448425293
    5. '(
' → logprob: -11.50892448425293
    6. '(({' → logprob: -14.50892448425293
    7. '(('' → logprob: -14.75892448425293
    8. ' ((' → logprob: -16.00892448425293
    9. '((-' → logprob: -16.25892448425293
    10. '(((' → logprob: -16.38392448425293

Token 111: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0002669384120963514
    2. ' cost' → logprob: -8.250267028808594
    3. '(cost' → logprob: -12.125267028808594
    4. 'tuple' → logprob: -16.625267028808594
    5. '   ' → logprob: -17.125267028808594
    6. ')' → logprob: -17.625267028808594
    7. '
' → logprob: -18.000267028808594
    8. 'cos' → logprob: -18.250267028808594
    9. 'c' → logprob: -19.125267028808594
    10. 'list' → logprob: -20.375267028808594

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014238844625651836
    2. ',(' → logprob: -4.5142388343811035
    3. ' ,' → logprob: -5.7642388343811035
    4. '(' → logprob: -11.389239311218262
    5. ' (' → logprob: -11.514239311218262
    6. '(V' → logprob: -11.764239311218262
    7. ',V' → logprob: -12.264239311218262
    8. ',
' → logprob: -12.389239311218262
    9. ',v' → logprob: -12.514239311218262
    10. '),(' → logprob: -13.514239311218262

Token 113: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.03397230803966522
    2. ' (' → logprob: -3.4089722633361816
    3. '(V' → logprob: -8.15897274017334
    4. '(' → logprob: -10.40897274017334
    5. '(u' → logprob: -12.40897274017334
    6. '(np' → logprob: -12.78397274017334
    7. '((' → logprob: -14.03397274017334
    8. '   ' → logprob: -14.15897274017334
    9. '([' → logprob: -14.40897274017334
    10. ' ' → logprob: -15.15897274017334

Token 114: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007638105191290379
    2. ' v' → logprob: -5.132637977600098
    3. '(v' → logprob: -6.382637977600098
    4. '(' → logprob: -12.007637977600098
    5. ' (' → logprob: -12.007637977600098
    6. '	v' → logprob: -12.882637977600098
    7. '[v' → logprob: -13.757637977600098
    8. '(
' → logprob: -14.132637977600098
    9. '   ' → logprob: -15.007637977600098
    10. 'np' → logprob: -15.382637977600098

Token 115: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.0007135047344490886
    2. 'from' → logprob: -7.250713348388672
    3. 'From' → logprob: -13.000713348388672
    4. '(from' → logprob: -14.750713348388672
    5. '_to' → logprob: -15.000713348388672
    6. '_From' → logprob: -15.750713348388672
    7. '[from' → logprob: -16.250713348388672
    8. '_FROM' → logprob: -16.375713348388672
    9. '-from' → logprob: -16.625713348388672
    10. '.from' → logprob: -17.375713348388672

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003364146687090397
    2. ',v' → logprob: -5.753364086151123
    3. ' ,' → logprob: -8.628364562988281
    4. ',
' → logprob: -11.878364562988281
    5. ',b' → logprob: -15.753364562988281
    6. ',V' → logprob: -16.62836456298828
    7. ',to' → logprob: -16.87836456298828
    8. ',s' → logprob: -17.25336456298828
    9. ',p' → logprob: -17.37836456298828
    10. ',

' → logprob: -17.37836456298828

Token 117: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.17974859476089478
    2. ' v' → logprob: -1.80474853515625
    3. '	v' → logprob: -13.92974853515625
    4. ' ' → logprob: -14.42974853515625
    5. '(v' → logprob: -14.42974853515625
    6. '   ' → logprob: -14.92974853515625
    7. ')v' → logprob: -15.05474853515625
    8. '_v' → logprob: -15.42974853515625
    9. 'to' → logprob: -15.55474853515625
    10. '[v' → logprob: -15.92974853515625

Token 118: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.2233183042553719e-05
    2. 'to' → logprob: -11.750012397766113
    3. '_from' → logprob: -12.500012397766113
    4. '_' → logprob: -15.375012397766113
    5. 'To' → logprob: -15.500012397766113
    6. '_t' → logprob: -17.000011444091797
    7. '-to' → logprob: -17.875011444091797
    8. '_TO' → logprob: -18.250011444091797
    9. '-' → logprob: -19.250011444091797
    10. ' _' → logprob: -19.375011444091797

Token 119: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2026362419128418
    2. '))' → logprob: -1.7026362419128418
    3. ')),' → logprob: -7.077636241912842
    4. ')' → logprob: -7.952636241912842
    5. ' ),' → logprob: -11.45263671875
    6. ')))' → logprob: -11.82763671875
    7. '))
' → logprob: -12.57763671875
    8. '),
' → logprob: -13.32763671875
    9. ' ))' → logprob: -13.70263671875
    10. '),(' → logprob: -13.82763671875

Token 120: ' [' (ID: 723)
  Prédit: '(shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(shape' → logprob: -0.7104243636131287
    2. 'shape' → logprob: -1.0854244232177734
    3. ' (' → logprob: -2.3354244232177734
    4. ' shape' → logprob: -2.8354244232177734
    5. '(' → logprob: -4.835424423217773
    6. '(V' → logprob: -4.960424423217773
    7. '(dtype' → logprob: -8.710424423217773
    8. '(v' → logprob: -9.710424423217773
    9. '(n' → logprob: -10.085424423217773
    10. ')' → logprob: -10.335424423217773

Token 121: 'V' (ID: 53)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0039894734509289265
    2. 'V' → logprob: -6.0039896965026855
    3. ' (' → logprob: -6.6289896965026855
    4. '[V' → logprob: -9.253989219665527
    5. '(' → logprob: -10.003989219665527
    6. ' ' → logprob: -11.128989219665527
    7. ' V' → logprob: -11.628989219665527
    8. ']' → logprob: -11.878989219665527
    9. '<V' → logprob: -12.253989219665527
    10. '   ' → logprob: -12.628989219665527

Token 122: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025419168174266815
    2. ')' → logprob: -4.150419235229492
    3. '])' → logprob: -4.775419235229492
    4. ')]' → logprob: -8.150419235229492
    5. ',V' → logprob: -8.525419235229492
    6. ',)' → logprob: -8.900419235229492
    7. ')])' → logprob: -9.025419235229492
    8. ']' → logprob: -10.025419235229492
    9. ',
' → logprob: -10.025419235229492
    10. ' ,' → logprob: -11.275419235229492

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7222975492477417
    2. ',' → logprob: -1.3472975492477417
    3. 'V' → logprob: -1.5972975492477417
    4. ' V' → logprob: -3.5972976684570312
    5. ',V' → logprob: -4.472297668457031
    6. ' ' → logprob: -4.972297668457031
    7. 'E' → logprob: -5.847297668457031
    8. ' ,' → logprob: -6.222297668457031
    9. ',E' → logprob: -7.347297668457031
    10. ' E' → logprob: -7.972297668457031

Token 124: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5541009306907654
    2. ',' → logprob: -0.9291009306907654
    3. '])' → logprob: -3.55410099029541
    4. ',)' → logprob: -6.67910099029541
    5. ' )' → logprob: -8.80410099029541
    6. ']' → logprob: -9.42910099029541
    7. '))' → logprob: -9.42910099029541
    8. ')]' → logprob: -9.55410099029541
    9. ',V' → logprob: -10.05410099029541
    10. ' ,' → logprob: -10.17910099029541

Token 125: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.1269480586051941
    2. ' V' → logprob: -2.126948118209839
    3. ' ' → logprob: -11.751948356628418
    4. ']' → logprob: -12.626948356628418
    5. '[V' → logprob: -13.126948356628418
    6. ')' → logprob: -13.126948356628418
    7. '	V' → logprob: -13.626948356628418
    8. ')V' → logprob: -13.626948356628418
    9. '
' → logprob: -15.126948356628418
    10. '   ' → logprob: -15.376948356628418

Token 126: '+' (ID: 10)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3143630027770996
    2. '+' → logprob: -1.3143630027770996
    3. ')])' → logprob: -8.064363479614258
    4. ',' → logprob: -8.189363479614258
    5. ')' → logprob: -8.314363479614258
    6. ' ])' → logprob: -9.314363479614258
    7. '])
' → logprob: -10.314363479614258
    8. '])]' → logprob: -10.314363479614258
    9. ')]' → logprob: -10.564363479614258
    10. ']' → logprob: -11.189363479614258

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8074162653647363e-05
    2. ' ' → logprob: -11.000018119812012
    3. '])' → logprob: -14.625018119812012
    4. '0' → logprob: -14.625018119812012
    5. ')' → logprob: -15.625018119812012
    6. '<|end|>' → logprob: -15.875018119812012
    7. '   ' → logprob: -17.375017166137695
    8. 'E' → logprob: -17.625017166137695
    9. '  ' → logprob: -18.250017166137695
    10. '2' → logprob: -18.250017166137695

Token 128: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024596223374828696
    2. '])' → logprob: -8.375246047973633
    3. '))' → logprob: -11.625246047973633
    4. ')]' → logprob: -13.500246047973633
    5. ')])' → logprob: -13.625246047973633
    6. ' )' → logprob: -13.750246047973633
    7. ')
' → logprob: -13.750246047973633
    8. '})' → logprob: -14.125246047973633
    9. '),' → logprob: -15.000246047973633
    10. '）' → logprob: -15.500246047973633

Token 129: 'dist' (ID: 24126)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006159385200589895
    2. ',' → logprob: -5.25615930557251
    3. '[' → logprob: -7.75615930557251
    4. '(' → logprob: -8.006159782409668
    5. ')
' → logprob: -9.756159782409668
    6. ',
' → logprob: -10.006159782409668
    7. '()' → logprob: -11.506159782409668
    8. ']' → logprob: -11.631159782409668
    9. ',)' → logprob: -11.631159782409668
    10. '(
' → logprob: -12.006159782409668

Token 130: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6587847471237183
    2. '=' → logprob: -0.7837847471237183
    3. '[' → logprob: -4.533784866333008
    4. '_' → logprob: -5.283784866333008
    5. ',' → logprob: -5.408784866333008
    6. ')' → logprob: -6.158784866333008
    7. '_matrix' → logprob: -6.408784866333008
    8. 'ance' → logprob: -8.158784866333008
    9. ']' → logprob: -8.408784866333008
    10. '(' → logprob: -8.533784866333008

Token 131: ' predecessors' (ID: 143645)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.046053946018218994
    2. ' predecessors' → logprob: -3.421053886413574
    3. '_pre' → logprob: -4.921053886413574
    4. 'pred' → logprob: -5.921053886413574
    5. '_' → logprob: -7.171053886413574
    6. ' predecessor' → logprob: -7.421053886413574
    7. 'path' → logprob: -7.671053886413574
    8. '_path' → logprob: -8.296053886413574
    9. 'preced' → logprob: -9.171053886413574
    10. ' predecess' → logprob: -10.171053886413574

Token 132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021939873695374
    2. ' =' → logprob: -2.350219488143921
    3. ',' → logprob: -11.7252197265625
    4. ')' → logprob: -13.1002197265625
    5. ')=' → logprob: -13.8502197265625
    6. '<|end|>' → logprob: -14.2252197265625
    7. ' ' → logprob: -15.3502197265625
    8. '=
' → logprob: -15.8502197265625
    9. '＝' → logprob: -16.2252197265625
    10. 's' → logprob: -16.4752197265625

Token 133: ' flo' (ID: 15037)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.43087056279182434
    2. ' flo' → logprob: -1.055870532989502
    3. 'flo' → logprob: -6.305870532989502
    4. ' Floyd' → logprob: -9.43087100982666
    5. '	f' → logprob: -10.05587100982666
    6. 'fl' → logprob: -10.18087100982666
    7. ' f' → logprob: -10.43087100982666
    8. ' ' → logprob: -10.61837100982666
    9. ' ' → logprob: -11.30587100982666
    10. ' fle' → logprob: -11.30587100982666

Token 134: 'yd' (ID: 3859)
  Prédit: 'yd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yd' → logprob: -3.309382373117842e-05
    2. 'y' → logprob: -11.000033378601074
    3. 'w' → logprob: -12.125033378601074
    4. 'yed' → logprob: -12.625033378601074
    5. 'wd' → logprob: -12.875033378601074
    6. 'd' → logprob: -13.375033378601074
    7. 'loyd' → logprob: -14.250033378601074
    8. 'yw' → logprob: -14.250033378601074
    9. 'ydd' → logprob: -15.250033378601074
    10. 'ydro' → logprob: -15.625033378601074

Token 135: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -2.816093228830141e-06
    2. 'f' → logprob: -14.12500286102295
    3. '_f' → logprob: -14.12500286102295
    4. 'w' → logprob: -14.75000286102295
    5. 'war' → logprob: -14.75000286102295
    6. '_' → logprob: -16.375001907348633
    7. '_s' → logprob: -16.375001907348633
    8. '-war' → logprob: -17.000001907348633
    9. '_wall' → logprob: -17.000001907348633
    10. '(f' → logprob: -17.250001907348633

Token 136: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.002830673009157181
    2. 'arshal' → logprob: -5.877830505371094
    3. 'shall' → logprob: -11.752830505371094
    4. 'arsch' → logprob: -12.377830505371094
    5. 'r' → logprob: -12.752830505371094
    6. 'ars' → logprob: -13.002830505371094
    7. 'all' → logprob: -13.377830505371094
    8. 'al' → logprob: -13.752830505371094
    9. '```' → logprob: -14.002830505371094
    10. 'ash' → logprob: -14.002830505371094

Token 137: 'shall' (ID: 30275)
  Prédit: 'shall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shall' → logprob: -0.012502702884376049
    2. '_sh' → logprob: -5.137502670288086
    3. 'all' → logprob: -5.762502670288086
    4. '_all' → logprob: -6.637502670288086
    5. 'shaw' → logprob: -7.262502670288086
    6. 'sh' → logprob: -7.387502670288086
    7. '-sh' → logprob: -8.887502670288086
    8. 's' → logprob: -9.012502670288086
    9. 'hall' → logprob: -10.012502670288086
    10. 'll' → logprob: -10.012502670288086

Token 138: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.01655661314725876
    2. '(' → logprob: -4.766556739807129
    3. '(cs' → logprob: -4.891556739807129
    4. '(
' → logprob: -8.516556739807129
    5. '(Graph' → logprob: -9.391556739807129
    6. '(G' → logprob: -10.766556739807129
    7. '(c' → logprob: -11.266556739807129
    8. '(matrix' → logprob: -11.516556739807129
    9. ' (' → logprob: -11.641556739807129
    10. '((' → logprob: -11.766556739807129

Token 139: ',' (ID: 11)
  Prédit: '(return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(return' → logprob: -0.044253457337617874
    2. ',' → logprob: -3.294253349304199
    3. '(d' → logprob: -6.294253349304199
    4. '(' → logprob: -6.544253349304199
    5. '(),' → logprob: -7.544253349304199
    6. ' ,' → logprob: -8.1692533493042
    7. '(with' → logprob: -8.1692533493042
    8. '(indices' → logprob: -8.1692533493042
    9. '(as' → logprob: -8.5442533493042
    10. '(ret' → logprob: -8.6692533493042

Token 140: ' directed' (ID: 23699)
  Prédit: 'direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direct' → logprob: -0.5111222863197327
    2. 'return' → logprob: -1.261122226715088
    3. 'indices' → logprob: -2.886122226715088
    4. ' directed' → logprob: -2.886122226715088
    5. ' return' → logprob: -5.886122226715088
    6. 'indexed' → logprob: -7.511122226715088
    7. '(return' → logprob: -8.261122703552246
    8. 'True' → logprob: -8.636122703552246
    9. '_direct' → logprob: -8.761122703552246
    10. ',' → logprob: -8.761122703552246

Token 141: '=False' (ID: 12148)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.10020969063043594
    2. '=' → logprob: -2.3502097129821777
    3. '=False' → logprob: -13.60020923614502
    4. '=
' → logprob: -13.60020923614502
    5. '=

' → logprob: -14.97520923614502
    6. 's' → logprob: -16.725210189819336
    7. '=T' → logprob: -16.850210189819336
    8. ')=' → logprob: -17.975210189819336
    9. '=sys' → logprob: -18.100210189819336
    10. '='' → logprob: -18.100210189819336

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01114685833454132
    2. ')' → logprob: -4.5111470222473145
    3. ',)' → logprob: -10.136146545410156
    4. ' ,' → logprob: -10.511146545410156
    5. ',use' → logprob: -10.761146545410156
    6. ',
' → logprob: -13.261146545410156
    7. ',true' → logprob: -13.636146545410156
    8. ',re' → logprob: -14.011146545410156
    9. ',state' → logprob: -14.136146545410156
    10. '，' → logprob: -14.636146545410156

Token 143: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.012384618632495403
    2. 'indices' → logprob: -5.012384414672852
    3. ' return' → logprob: -5.262384414672852
    4. '   ' → logprob: -9.137384414672852
    5. 'True' → logprob: -9.387384414672852
    6. ' ' → logprob: -9.887384414672852
    7. '    ' → logprob: -10.387384414672852
    8. ' indices' → logprob: -10.512384414672852
    9. '  ' → logprob: -10.637384414672852
    10. '(return' → logprob: -10.887384414672852

Token 144: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -0.00010270876373397186
    2. 'pre' → logprob: -10.125102996826172
    3. '_pred' → logprob: -11.125102996826172
    4. '_path' → logprob: -11.625102996826172
    5. '_distance' → logprob: -11.750102996826172
    6. '_' → logprob: -12.000102996826172
    7. '_paths' → logprob: -12.125102996826172
    8. '_p' → logprob: -12.375102996826172
    9. '_inverse' → logprob: -13.125102996826172
    10. '_indices' → logprob: -13.375102996826172

Token 145: 'decess' (ID: 54010)
  Prédit: 'decess'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decess' → logprob: -0.003206711495295167
    2. 'de' → logprob: -6.128206729888916
    3. 'd' → logprob: -7.003206729888916
    4. 'des' → logprob: -9.628206253051758
    5. 'dec' → logprob: -10.753206253051758
    6. 'cess' → logprob: -11.003206253051758
    7. 'dict' → logprob: -12.378206253051758
    8. 'ds' → logprob: -13.253206253051758
    9. 'dis' → logprob: -14.128206253051758
    10. 'div' → logprob: -15.128206253051758

Token 146: 'ors' (ID: 914)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.5308398008346558
    2. 'cess' → logprob: -1.5308398008346558
    3. 'sses' → logprob: -2.7808399200439453
    4. 'ursors' → logprob: -3.1558399200439453
    5. 'ors' → logprob: -3.1558399200439453
    6. '```' → logprob: -4.030839920043945
    7. 'cors' → logprob: -5.155839920043945
    8. 's' → logprob: -5.530839920043945
    9. 'css' → logprob: -5.530839920043945
    10. 'ess' → logprob: -5.655839920043945

Token 147: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.020571084693074226
    2. '=' → logprob: -3.895570993423462
    3. ')' → logprob: -10.520570755004883
    4. 'True' → logprob: -13.770570755004883
    5. '=T' → logprob: -14.520570755004883
    6. ')=' → logprob: -15.395570755004883
    7. '=
' → logprob: -15.770570755004883
    8. '=False' → logprob: -16.145570755004883
    9. 's' → logprob: -17.145570755004883
    10. '=

' → logprob: -17.770570755004883

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -14.250001907348633
    4. '))' → logprob: -16.750001907348633
    5. ')`' → logprob: -16.875001907348633
    6. '())' → logprob: -17.375001907348633
    7. '),' → logprob: -17.375001907348633
    8. ')

' → logprob: -17.375001907348633
    9. '()' → logprob: -17.750001907348633
    10. ',)' → logprob: -18.125001907348633

Token 149: 'dist' (ID: 24126)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09948775172233582
    2. '
' → logprob: -2.599487781524658
    3. '(
' → logprob: -5.474487781524658
    4. '<|end|>' → logprob: -5.474487781524658
    5. ')
' → logprob: -5.599487781524658
    6. '(' → logprob: -5.724487781524658
    7. ',' → logprob: -6.724487781524658
    8. '[' → logprob: -6.974487781524658
    9. ',
' → logprob: -7.349487781524658
    10. '()' → logprob: -7.599487781524658

Token 150: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6208000779151917
    2. '<|end|>' → logprob: -1.3708000183105469
    3. ',' → logprob: -1.6208000183105469
    4. ')' → logprob: -5.870800018310547
    5. '[
' → logprob: -6.120800018310547
    6. '[np' → logprob: -7.370800018310547
    7. '
' → logprob: -7.370800018310547
    8. '<|end|>' → logprob: -7.620800018310547
    9. ',V' → logprob: -7.870800018310547
    10. '[:]' → logprob: -7.870800018310547

Token 151: 'dist' (ID: 24126)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7438592910766602
    2. 'dist' → logprob: -0.7438592910766602
    3. 'range' → logprob: -4.11885929107666
    4. '==' → logprob: -4.36885929107666
    5. '>' → logprob: -5.11885929107666
    6. '(dist' → logprob: -5.86885929107666
    7. 'V' → logprob: -5.99385929107666
    8. ' dist' → logprob: -6.86885929107666
    9. '
' → logprob: -6.86885929107666
    10. 'v' → logprob: -6.99385929107666

Token 152: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.043942976742982864
    2. ' ==' → logprob: -3.293942928314209
    3. '<' → logprob: -5.918942928314209
    4. '=' → logprob: -7.043942928314209
    5. '>' → logprob: -7.293942928314209
    6. '==-' → logprob: -7.418942928314209
    7. '<=' → logprob: -8.168943405151367
    8. '[' → logprob: -8.418943405151367
    9. '>=' → logprob: -8.668943405151367
    10. ' <' → logprob: -9.043943405151367

Token 153: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.02817264385521412
    2. '0' → logprob: -4.403172492980957
    3. ' float' → logprob: -4.653172492980957
    4. 'inf' → logprob: -5.278172492980957
    5. 'sys' → logprob: -7.653172492980957
    6. ' ' → logprob: -8.403172492980957
    7. ' inf' → logprob: -9.028172492980957
    8. ' sys' → logprob: -10.528172492980957
    9. '-' → logprob: -11.403172492980957
    10. '-inf' → logprob: -11.528172492980957

Token 154: '0' (ID: 15)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.24072705209255219
    2. 'inf' → logprob: -1.6157270669937134
    3. '0' → logprob: -4.615726947784424
    4. 'sys' → logprob: -5.740726947784424
    5. '-inf' → logprob: -7.240726947784424
    6. ' float' → logprob: -7.365726947784424
    7. ' inf' → logprob: -8.115727424621582
    8. 'csr' → logprob: -9.240727424621582
    9. 'numpy' → logprob: -9.365727424621582
    10. 'Inf' → logprob: -10.115727424621582

Token 155: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005274191964417696
    2. ']=' → logprob: -5.505274295806885
    3. ' ]' → logprob: -6.755274295806885
    4. ']+=' → logprob: -11.630273818969727
    5. ',' → logprob: -12.380273818969727
    6. ']=-' → logprob: -12.755273818969727
    7. '][' → logprob: -13.505273818969727
    8. '.' → logprob: -13.755273818969727
    9. ' ' → logprob: -13.880273818969727
    10. '[' → logprob: -13.880273818969727

Token 156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004906277637928724
    2. '[np' → logprob: -6.254906177520752
    3. '[' → logprob: -6.629906177520752
    4. ' =' → logprob: -6.754906177520752
    5. '=np' → logprob: -8.00490665435791
    6. 'inf' → logprob: -10.87990665435791
    7. '.' → logprob: -10.87990665435791
    8. '<|end|>' → logprob: -11.12990665435791
    9. '[:]' → logprob: -11.12990665435791
    10. ']=' → logprob: -11.37990665435791

Token 157: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.008741031400859356
    2. '999' → logprob: -5.5087409019470215
    3. '10' → logprob: -6.1337409019470215
    4. 'int' → logprob: -6.6337409019470215
    5. '1' → logprob: -7.2587409019470215
    6. 'sys' → logprob: -8.50874137878418
    7. ' float' → logprob: -9.63374137878418
    8. '100' → logprob: -9.88374137878418
    9. '9' → logprob: -10.00874137878418
    10. 'inf' → logprob: -10.13374137878418

Token 158: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.030384741723537445
    2. ''in' → logprob: -3.6553847789764404
    3. ''' → logprob: -6.030384540557861
    4. 'inf' → logprob: -7.280384540557861
    5. '("' → logprob: -7.655384540557861
    6. ''s' → logprob: -8.40538501739502
    7. '"' → logprob: -9.03038501739502
    8. '(' → logprob: -10.28038501739502
    9. '.inf' → logprob: -10.53038501739502
    10. ''inc' → logprob: -11.15538501739502

Token 159: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0009764790302142501
    2. ''in' → logprob: -7.6259765625
    3. ''' → logprob: -7.7509765625
    4. '_inf' → logprob: -10.7509765625
    5. '32' → logprob: -11.6259765625
    6. '.inf' → logprob: -11.7509765625
    7. 'Inf' → logprob: -12.7509765625
    8. '"' → logprob: -12.7509765625
    9. '-inf' → logprob: -12.7509765625
    10. '('' → logprob: -12.8759765625

Token 160: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014120421838015318
    2. ' )' → logprob: -9.250141143798828
    3. '')' → logprob: -10.375141143798828
    4. '[' → logprob: -12.500141143798828
    5. ')
' → logprob: -12.500141143798828
    6. '<|end|>' → logprob: -13.125141143798828
    7. ']' → logprob: -13.500141143798828
    8. '])' → logprob: -14.625141143798828
    9. '）' → logprob: -15.500141143798828
    10. ' ' → logprob: -15.500141143798828

Token 161: 'dist' (ID: 24126)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04357853904366493
    2. ' ' → logprob: -4.418578624725342
    3. '[' → logprob: -4.668578624725342
    4. '
' → logprob: -5.543578624725342
    5. '(' → logprob: -5.668578624725342
    6. '_' → logprob: -5.668578624725342
    7. '<|end|>' → logprob: -5.793578624725342
    8. ' 
' → logprob: -6.668578624725342
    9. ']' → logprob: -6.668578624725342
    10. '#' → logprob: -6.793578624725342

Token 162: '_min' (ID: 15950)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5811722874641418
    2. '=' → logprob: -0.8311722874641418
    3. '_' → logprob: -6.331172466278076
    4. ',' → logprob: -7.081172466278076
    5. '_idx' → logprob: -7.081172466278076
    6. ')' → logprob: -7.456172466278076
    7. ' ' → logprob: -7.581172466278076
    8. '[' → logprob: -8.581171989440918
    9. '.' → logprob: -8.831171989440918
    10. '=np' → logprob: -9.706171989440918

Token 164: ' list' (ID: 1562)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21325714886188507
    2. 'arg' → logprob: -2.088257074356079
    3. 'float' → logprob: -2.838257074356079
    4. 'inf' → logprob: -5.838257312774658
    5. ' dist' → logprob: -5.838257312774658
    6. 'min' → logprob: -6.588257312774658
    7. 'int' → logprob: -7.213257312774658
    8. ' arg' → logprob: -7.588257312774658
    9. '100' → logprob: -7.963257312774658
    10. ' float' → logprob: -8.2132568359375

Token 165: '(map' (ID: 16946)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.17854993045330048
    2. '(' → logprob: -1.928549885749817
    3. '(min' → logprob: -4.178549766540527
    4. '(arg' → logprob: -7.053549766540527
    5. '(map' → logprob: -7.303549766540527
    6. '(filter' → logprob: -7.553549766540527
    7. '(np' → logprob: -8.053549766540527
    8. '(range' → logprob: -8.928549766540527
    9. '(zip' → logprob: -9.428549766540527
    10. '()' → logprob: -9.678549766540527

Token 166: '(arg' (ID: 19030)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.004870826378464699
    2. '(lambda' → logprob: -6.379870891571045
    3. '(arg' → logprob: -6.629870891571045
    4. 'min' → logprob: -6.879870891571045
    5. '(' → logprob: -7.879870891571045
    6. '(float' → logprob: -8.004870414733887
    7. ' min' → logprob: -10.004870414733887
    8. '(int' → logprob: -10.504870414733887
    9. ',min' → logprob: -11.504870414733887
    10. ')' → logprob: -12.379870414733887

Token 167: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -9.088346359931165e-07
    2. ' min' → logprob: -14.500000953674316
    3. 'max' → logprob: -15.875000953674316
    4. '(min' → logprob: -16.0
    5. '_min' → logprob: -17.625
    6. ')' → logprob: -18.0
    7. 'index' → logprob: -18.375
    8. 'Min' → logprob: -18.5
    9. '	min' → logprob: -18.75
    10. '```' → logprob: -19.875

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018378669396042824
    2. '(dist' → logprob: -4.143378734588623
    3. ' ,' → logprob: -6.893378734588623
    4. ',(' → logprob: -7.018378734588623
    5. ',d' → logprob: -8.893378257751465
    6. '(' → logprob: -9.018378257751465
    7. ',
' → logprob: -9.518378257751465
    8. ',[' → logprob: -10.518378257751465
    9. ' (' → logprob: -10.643378257751465
    10. '
' → logprob: -11.393378257751465

Token 169: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.28593480587005615
    2. ' dist' → logprob: -1.4109348058700562
    3. '(dist' → logprob: -5.410934925079346
    4. '	dist' → logprob: -9.285934448242188
    5. '[' → logprob: -9.785934448242188
    6. ' (' → logprob: -10.160934448242188
    7. ' list' → logprob: -10.785934448242188
    8. 'list' → logprob: -11.035934448242188
    9. ')' → logprob: -11.160934448242188
    10. ' [' → logprob: -11.660934448242188

Token 170: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014669226482510567
    2. '[' → logprob: -4.264669418334961
    3. '))
' → logprob: -7.889669418334961
    4. ' ))' → logprob: -10.139669418334961
    5. '[:' → logprob: -10.389669418334961
    6. '))[' → logprob: -10.764669418334961
    7. '[:-' → logprob: -11.014669418334961
    8. '))

' → logprob: -11.639669418334961
    9. '[V' → logprob: -12.639669418334961
    10. '[
' → logprob: -12.764669418334961

Token 171: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09127838909626007
    2. '(' → logprob: -3.591278314590454
    3. '<|end|>' → logprob: -3.591278314590454
    4. '
' → logprob: -4.466278553009033
    5. '[' → logprob: -4.841278553009033
    6. '\n' → logprob: -5.466278553009033
    7. '(V' → logprob: -7.216278553009033
    8. ' ' → logprob: -7.216278553009033
    9. ' )' → logprob: -7.341278553009033
    10. '(
' → logprob: -7.466278553009033

Token 172: ' problem' (ID: 4792)
  Prédit: ' problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.04372083768248558
    2. 'problem' → logprob: -3.2937207221984863
    3. ' not' → logprob: -5.793720722198486
    4. ' len' → logprob: -7.168720722198486
    5. ' V' → logprob: -7.168720722198486
    6. '(problem' → logprob: -7.918720722198486
    7. 'not' → logprob: -8.543721199035645
    8. 'len' → logprob: -8.918721199035645
    9. ' ' → logprob: -9.543721199035645
    10. '_problem' → logprob: -9.543721199035645

Token 173: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.933173426659778e-05
    2. '_' → logprob: -9.625069618225098
    3. '_a' → logprob: -12.875069618225098
    4. ' _' → logprob: -15.250069618225098
    5. '_s' → logprob: -16.12506866455078
    6. '_=' → logprob: -17.25006866455078
    7. '__' → logprob: -17.37506866455078
    8. '_c' → logprob: -17.37506866455078
    9. 'b' → logprob: -17.37506866455078
    10. '_i' → logprob: -17.75006866455078

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015109812375158072
    2. ' :' → logprob: -9.375150680541992
    3. ':
' → logprob: -9.750150680541992
    4. '==' → logprob: -12.875150680541992
    5. ' ==' → logprob: -12.875150680541992
    6. '[' → logprob: -13.250150680541992
    7. '():' → logprob: -15.125150680541992
    8. ' and' → logprob: -15.250150680541992
    9. ':

' → logprob: -15.750150680541992
    10. ' is' → logprob: -16.750150680541992

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41309696435928345
    2. ' for' → logprob: -1.1630969047546387
    3. 'for' → logprob: -5.038096904754639
    4. '
' → logprob: -5.288096904754639
    5. ':
' → logprob: -5.288096904754639
    6. ' print' → logprob: -5.413096904754639
    7. ':' → logprob: -6.038096904754639
    8. '    
' → logprob: -8.163097381591797
    9. '):
' → logprob: -8.288097381591797
    10. 'print' → logprob: -8.538097381591797

Token 176: ' input' (ID: 3422)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34642884135246277
    2. 'for' → logprob: -1.8464288711547852
    3. ' print' → logprob: -3.971428871154785
    4. ' ans' → logprob: -4.221428871154785
    5. 'print' → logprob: -4.346428871154785
    6. '   ' → logprob: -4.471428871154785
    7. ' min' → logprob: -4.596428871154785
    8. 'ans' → logprob: -4.846428871154785
    9. ' answer' → logprob: -4.846428871154785
    10. 'answer' → logprob: -5.221428871154785

Token 177: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003016333794221282
    2. '()
' → logprob: -6.253016471862793
    3. '().' → logprob: -8.253016471862793
    4. '_data' → logprob: -8.628016471862793
    5. '_line' → logprob: -8.753016471862793
    6. '()

' → logprob: -9.003016471862793
    7. '(' → logprob: -9.253016471862793
    8. ' ()' → logprob: -10.128016471862793
    9. '()\' → logprob: -10.503016471862793
    10. '_lines' → logprob: -10.628016471862793

Token 178: 'T' (ID: 51)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3575513958930969
    2. 'u' → logprob: -3.357551336288452
    3. 'answer' → logprob: -3.857551336288452
    4. 'path' → logprob: -3.982551336288452
    5. '<|end|>' → logprob: -3.982551336288452
    6. 'q' → logprob: -4.107551574707031
    7. 'query' → logprob: -4.107551574707031
    8. 'while' → logprob: -4.607551574707031
    9. 'n' → logprob: -4.732551574707031
    10. 'Q' → logprob: -4.732551574707031

Token 179: '_max' (ID: 13731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2857131361961365
    2. ' =' → logprob: -1.4107131958007812
    3. ',' → logprob: -5.785713195800781
    4. '=int' → logprob: -7.160713195800781
    5. ')' → logprob: -8.285713195800781
    6. ' ' → logprob: -9.035713195800781
    7. 'C' → logprob: -9.410713195800781
    8. '	' → logprob: -9.660713195800781
    9. '  ' → logprob: -10.660713195800781
    10. ' ' → logprob: -10.785713195800781

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22891946136951447
    2. '=' → logprob: -1.603919506072998
    3. ',' → logprob: -5.853919506072998
    4. '=int' → logprob: -7.853919506072998
    5. ' ' → logprob: -9.22891902923584
    6. ' ,' → logprob: -9.72891902923584
    7. '=input' → logprob: -10.60391902923584
    8. '  ' → logprob: -11.35391902923584
    9. '   ' → logprob: -11.72891902923584
    10. '_' → logprob: -11.97891902923584

Token 181: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5148612856864929
    2. ' int' → logprob: -1.1398613452911377
    3. '100' → logprob: -3.3898613452911377
    4. '10' → logprob: -4.264861106872559
    5. ' ' → logprob: -4.764861106872559
    6. ' V' → logprob: -5.264861106872559
    7. ' float' → logprob: -5.764861106872559
    8. 'float' → logprob: -5.764861106872559
    9. ' dist' → logprob: -6.014861106872559
    10. 'V' → logprob: -6.264861106872559

Token 182: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004126603715121746
    2. '(' → logprob: -5.50412654876709
    3. 'input' → logprob: -10.25412654876709
    4. '()' → logprob: -11.62912654876709
    5. ' (' → logprob: -13.37912654876709
    6. ' input' → logprob: -13.50412654876709
    7. '(sys' → logprob: -15.75412654876709
    8. '(inputs' → logprob: -16.004127502441406
    9. ',input' → logprob: -16.129127502441406
    10. '((' → logprob: -16.379127502441406

Token 183: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.025070808827877045
    2. '()' → logprob: -4.275070667266846
    3. '().' → logprob: -4.525070667266846
    4. ' ())' → logprob: -12.275071144104004
    5. '())
' → logprob: -12.900071144104004
    6. ')' → logprob: -13.275071144104004
    7. '();)' → logprob: -13.525071144104004
    8. '()
' → logprob: -13.775071144104004
    9. '(' → logprob: -14.025071144104004
    10. '()`' → logprob: -14.650071144104004

Token 184: 'time' (ID: 4580)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.490190863609314
    2. ')' → logprob: -1.865190863609314
    3. ' ' → logprob: -1.865190863609314
    4. '<|end|>' → logprob: -1.865190863609314
    5. '[' → logprob: -1.990190863609314
    6. ' for' → logprob: -2.4901909828186035
    7. '#' → logprob: -4.1151909828186035
    8. ' 
' → logprob: -4.4901909828186035
    9. ':' → logprob: -4.7401909828186035
    10. '
' → logprob: -4.9901909828186035

Token 185: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.337028831243515
    2. '_' → logprob: -2.087028741836548
    3. ' =' → logprob: -2.462028741836548
    4. '=' → logprob: -3.087028741836548
    5. '_limit' → logprob: -5.087028980255127
    6. '_limits' → logprob: -5.587028980255127
    7. '_list' → logprob: -5.837028980255127
    8. '(' → logprob: -5.962028980255127
    9. '_lines' → logprob: -6.587028980255127
    10. '_s' → logprob: -6.837028980255127

Token 186: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.492163062095642
    2. '0' → logprob: -1.742163062095642
    3. ' [' → logprob: -1.742163062095642
    4. '[' → logprob: -1.867163062095642
    5. ' []' → logprob: -2.1171631813049316
    6. '[rand' → logprob: -2.7421631813049316
    7. '[int' → logprob: -3.1171631813049316
    8. ' randint' → logprob: -3.8671631813049316
    9. ' ' → logprob: -4.617163181304932
    10. 'rand' → logprob: -5.242163181304932

Token 187: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1096023321151733
    2. '[rand' → logprob: -1.3596023321151733
    3. '0' → logprob: -1.4846023321151733
    4. '[]' → logprob: -2.484602451324463
    5. '[int' → logprob: -2.609602451324463
    6. '[V' → logprob: -4.609602451324463
    7. 'rand' → logprob: -5.109602451324463
    8. '{}' → logprob: -5.859602451324463
    9. '[arg' → logprob: -5.859602451324463
    10. '[T' → logprob: -6.109602451324463

Token 188: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: 'del' (ID: 9145)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15812280774116516
    2. ' for' → logprob: -3.0331227779388428
    3. '0' → logprob: -3.7831227779388428
    4. 'time' → logprob: -4.033123016357422
    5. '<|end|>' → logprob: -4.533123016357422
    6. 'range' → logprob: -5.158123016357422
    7. 'answer' → logprob: -5.283123016357422
    8. 'while' → logprob: -5.408123016357422
    9. 'result' → logprob: -5.408123016357422
    10. 'current' → logprob: -5.658123016357422

Token 190: 'ivering' (ID: 134127)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.003467259928584099
    2. 'ete' → logprob: -5.753467082977295
    3. 'et' → logprob: -9.628467559814453
    4. '_' → logprob: -10.003467559814453
    5. 'ays' → logprob: -10.003467559814453
    6. 'ey' → logprob: -10.128467559814453
    7. 'ta' → logprob: -10.503467559814453
    8. 'T' → logprob: -11.503467559814453
    9. '_time' → logprob: -12.003467559814453
    10. 'eted' → logprob: -12.503467559814453

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1348271369934082
    2. '_' → logprob: -2.884827136993408
    3. '=' → logprob: -3.634827136993408
    4. '_time' → logprob: -4.259827136993408
    5. '_times' → logprob: -5.009827136993408
    6. '_items' → logprob: -5.884827136993408
    7. '_count' → logprob: -6.134827136993408
    8. 's' → logprob: -6.259827136993408
    9. '_cost' → logprob: -6.759827136993408
    10. '_queue' → logprob: -6.759827136993408

Token 192: ' False' (ID: 7983)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.23273161053657532
    2. 'False' → logprob: -1.857731580734253
    3. '0' → logprob: -3.857731580734253
    4. '{}' → logprob: -4.357731819152832
    5. 'set' → logprob: -4.732731819152832
    6. '[' → logprob: -5.482731819152832
    7. ' []' → logprob: -6.607731819152832
    8. 'None' → logprob: -7.232731819152832
    9. '-' → logprob: -7.357731819152832
    10. 'True' → logprob: -7.482731819152832

Token 193: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: 'return' (ID: 1034)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: 'ing' (ID: 289)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4148215651512146
    2. '<|end|>' → logprob: -1.1648216247558594
    3. 'time' → logprob: -4.664821624755859
    4. '_' → logprob: -5.039821624755859
    5. ' 
' → logprob: -6.164821624755859
    6. '_time' → logprob: -6.539821624755859
    7. '  ' → logprob: -6.664821624755859
    8. ' time' → logprob: -6.664821624755859
    9. '
' → logprob: -6.789821624755859
    10. '<|end|>' → logprob: -7.164821624755859

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06999757140874863
    2. '=' → logprob: -2.694997549057007
    3. '_' → logprob: -10.694997787475586
    4. ' ' → logprob: -10.819997787475586
    5. '=False' → logprob: -12.194997787475586
    6. ',' → logprob: -12.319997787475586
    7. '=True' → logprob: -12.444997787475586
    8. ')' → logprob: -13.819997787475586
    9. ' =
' → logprob: -14.569997787475586
    10. '_space' → logprob: -14.569997787475586

Token 197: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.007698314264416695
    2. ' False' → logprob: -4.8826985359191895
    3. 'True' → logprob: -9.507698059082031
    4. '0' → logprob: -11.132698059082031
    5. ' True' → logprob: -13.257698059082031
    6. '[]' → logprob: -14.382698059082031
    7. ' ' → logprob: -15.132698059082031
    8. '(False' → logprob: -15.257698059082031
    9. 'None' → logprob: -15.632698059082031
    10. '=False' → logprob: -15.757698059082031

Token 198: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30986782908439636
    2. '<|end|>' → logprob: -2.0598678588867188
    3. ' 
' → logprob: -2.4348678588867188
    4. ',' → logprob: -3.6848678588867188
    5. '
' → logprob: -5.059867858886719
    6. ' ,' → logprob: -5.684867858886719
    7. ')' → logprob: -5.809867858886719
    8. 't' → logprob: -6.559867858886719
    9. '#' → logprob: -6.684867858886719
    10. '_' → logprob: -6.934867858886719

Token 199: 'last' (ID: 6684)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.7687392234802246
    2. 'time' → logprob: -2.0187392234802246
    3. 'for' → logprob: -2.1437392234802246
    4. 'i' → logprob: -2.3937392234802246
    5. 'while' → logprob: -2.5187392234802246
    6. ' for' → logprob: -2.8937392234802246
    7. '0' → logprob: -3.0187392234802246
    8. ' while' → logprob: -3.2687392234802246
    9. 'position' → logprob: -3.7687392234802246
    10. ' current' → logprob: -4.018739223480225

Token 200: '_return' (ID: 29287)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8362241983413696
    2. '_node' → logprob: -2.21122407913208
    3. '_destination' → logprob: -2.33622407913208
    4. '_location' → logprob: -2.71122407913208
    5. '_time' → logprob: -3.08622407913208
    6. '_city' → logprob: -3.46122407913208
    7. '_point' → logprob: -3.46122407913208
    8. '_delivery' → logprob: -3.58622407913208
    9. '_action' → logprob: -3.96122407913208
    10. '_space' → logprob: -3.96122407913208

Token 201: '_time' (ID: 6425)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.4012601971626282
    2. '_' → logprob: -1.2762601375579834
    3. '_time' → logprob: -3.7762601375579834
    4. ' =' → logprob: -4.6512603759765625
    5. 'ing' → logprob: -4.9012603759765625
    6. '=' → logprob: -5.0262603759765625
    7. '_to' → logprob: -6.2762603759765625
    8. '_val' → logprob: -7.4012603759765625
    9. '_token' → logprob: -8.151260375976562
    10. '_=' → logprob: -8.276260375976562

Token 202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740819036960602
    2. ' =' → logprob: -0.9740818738937378
    3. ',' → logprob: -12.474081993103027
    4. ' ' → logprob: -14.849081993103027
    5. '=None' → logprob: -15.349081993103027
    6. '0' → logprob: -16.47408103942871
    7. ')' → logprob: -16.59908103942871
    8. ' ' → logprob: -16.72408103942871
    9. 'time' → logprob: -16.97408103942871
    10. '=time' → logprob: -16.97408103942871

Token 203: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027535123750567436
    2. '-' → logprob: -3.6525352001190186
    3. ' ' → logprob: -7.4025349617004395
    4. 'None' → logprob: -7.9025349617004395
    5. ' -' → logprob: -9.027535438537598
    6. 'time' → logprob: -9.277535438537598
    7. ' None' → logprob: -11.527535438537598
    8. '-time' → logprob: -11.527535438537598
    9. 'float' → logprob: -12.652535438537598
    10. '-V' → logprob: -12.777535438537598

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3498009741306305
    2. '-' → logprob: -1.224800944328308
    3. 'None' → logprob: -7.599801063537598
    4. '-time' → logprob: -7.724801063537598
    5. '-V' → logprob: -9.349801063537598
    6. 'time' → logprob: -9.474801063537598
    7. 'float' → logprob: -9.849801063537598
    8. '-inf' → logprob: -10.349801063537598
    9. ' ' → logprob: -10.474801063537598
    10. ' -' → logprob: -10.849801063537598

Token 205: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: 'dist' (ID: 24126)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1290656328201294
    2. 'current' → logprob: -1.2540656328201294
    3. 'i' → logprob: -1.8790656328201294
    4. '
' → logprob: -3.37906551361084
    5. 'last' → logprob: -3.75406551361084
    6. ' for' → logprob: -3.75406551361084
    7. 'time' → logprob: -4.25406551361084
    8. 'while' → logprob: -4.37906551361084
    9. 't' → logprob: -4.75406551361084
    10. 'order' → logprob: -4.75406551361084

Token 207: 'ination' (ID: 3273)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.21224263310432434
    2. ',' → logprob: -2.587242603302002
    3. '_' → logprob: -3.087242603302002
    4. '_max' → logprob: -3.462242603302002
    5. '<|end|>' → logprob: -4.462242603302002
    6. ' =' → logprob: -5.087242603302002
    7. '[' → logprob: -5.087242603302002
    8. '=' → logprob: -5.587242603302002
    9. 'min' → logprob: -6.087242603302002
    10. '_idx' → logprob: -6.587242603302002

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5914121270179749
    2. '=' → logprob: -0.8414121270179749
    3. '_' → logprob: -4.71641206741333
    4. 's' → logprob: -6.21641206741333
    5. 'ion' → logprob: -6.46641206741333
    6. 'ation' → logprob: -6.71641206741333
    7. '_idx' → logprob: -7.96641206741333
    8. ',' → logprob: -8.091412544250488
    9. '_time' → logprob: -8.341412544250488
    10. 'e' → logprob: -8.591412544250488

Token 209: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9004497528076172
    2. '0' → logprob: -1.0254497528076172
    3. 'None' → logprob: -1.5254497528076172
    4. '[]' → logprob: -4.775449752807617
    5. ' None' → logprob: -5.525449752807617
    6. ' -' → logprob: -5.650449752807617
    7. ' ' → logprob: -7.150449752807617
    8. 'V' → logprob: -7.900449752807617
    9. ' []' → logprob: -9.900449752807617
    10. '-V' → logprob: -10.150449752807617

Token 210: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5860145688056946
    2. '-' → logprob: -1.2110145092010498
    3. 'None' → logprob: -2.33601450920105
    4. '[]' → logprob: -3.08601450920105
    5. 'V' → logprob: -6.086014747619629
    6. '[]}' → logprob: -9.086014747619629
    7. 'dist' → logprob: -9.461014747619629
    8. ' None' → logprob: -9.586014747619629
    9. '[' → logprob: -9.586014747619629
    10. '1' → logprob: -9.586014747619629

Token 211: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: 'v' (ID: 85)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.389242023229599
    2. '<|end|>' → logprob: -1.7642420530319214
    3. '_' → logprob: -2.639241933822632
    4. ' 
' → logprob: -3.264241933822632
    5. '
' → logprob: -4.139242172241211
    6. ',' → logprob: -4.389242172241211
    7. 't' → logprob: -6.139242172241211
    8. ')' → logprob: -6.514242172241211
    9. 'd' → logprob: -6.889242172241211
    10. '#' → logprob: -7.139242172241211

Token 213: '_next' (ID: 25436)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7841721773147583
    2. ' =' → logprob: -2.0341720581054688
    3. '_current' → logprob: -2.5341720581054688
    4. '_now' → logprob: -2.7841720581054688
    5. 'al' → logprob: -3.0341720581054688
    6. 'alue' → logprob: -3.1591720581054688
    7. '=' → logprob: -3.2841720581054688
    8. '_from' → logprob: -3.4091720581054688
    9. 'alid' → logprob: -3.5341720581054688
    10. '_id' → logprob: -4.034172058105469

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5787231922149658
    2. ' =' → logprob: -0.8287231922149658
    3. '_' → logprob: -6.078722953796387
    4. ',' → logprob: -7.703722953796387
    5. '_=' → logprob: -12.203722953796387
    6. ' _' → logprob: -12.578722953796387
    7. ')' → logprob: -12.578722953796387
    8. ' ' → logprob: -12.828722953796387
    9. '=None' → logprob: -12.828722953796387
    10. '_idx' → logprob: -12.828722953796387

Token 215: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8037253022193909
    2. 'None' → logprob: -1.053725242614746
    3. 'dist' → logprob: -2.428725242614746
    4. '1' → logprob: -3.053725242614746
    5. '-' → logprob: -3.678725242614746
    6. ' None' → logprob: -4.053725242614746
    7. 'V' → logprob: -4.803725242614746
    8. ' ' → logprob: -4.803725242614746
    9. 'v' → logprob: -5.678725242614746
    10. ' -' → logprob: -6.053725242614746

Token 216: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7891157269477844
    2. 'None' → logprob: -1.6641156673431396
    3. '-' → logprob: -1.7891156673431396
    4. '1' → logprob: -1.9141156673431396
    5. 'dist' → logprob: -3.5391156673431396
    6. 'V' → logprob: -5.664115905761719
    7. 'v' → logprob: -5.789115905761719
    8. '2' → logprob: -5.914115905761719
    9. ' None' → logprob: -7.164115905761719
    10. '[]' → logprob: -7.289115905761719

Token 217: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: 'order' (ID: 2143)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2840547561645508
    2. ' ' → logprob: -1.6590547561645508
    3. 'for' → logprob: -2.409054756164551
    4. '<|end|>' → logprob: -2.659054756164551
    5. ' while' → logprob: -2.909054756164551
    6. 'while' → logprob: -3.034054756164551
    7. 'v' → logprob: -3.034054756164551
    8. ',' → logprob: -3.034054756164551
    9. '_' → logprob: -3.284054756164551
    10. ' for' → logprob: -3.659054756164551

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5256760120391846
    2. '=' → logprob: -1.5256760120391846
    3. 's' → logprob: -2.1506760120391846
    4. '_' → logprob: -3.0256760120391846
    5. '[' → logprob: -5.1506757736206055
    6. '_idx' → logprob: -5.2756757736206055
    7. '=[]' → logprob: -6.4006757736206055
    8. '_index' → logprob: -6.5256757736206055
    9. '_count' → logprob: -6.5256757736206055
    10. ',' → logprob: -6.6506757736206055

Token 220: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0003613256849348545
    2. '[]
' → logprob: -8.000361442565918
    3. '[' → logprob: -11.125361442565918
    4. ' []' → logprob: -12.125361442565918
    5. '[int' → logprob: -13.000361442565918
    6. '[]}' → logprob: -13.500361442565918
    7. '[]

' → logprob: -14.125361442565918
    8. '[]>' → logprob: -14.750361442565918
    9. 'list' → logprob: -15.375361442565918
    10. '0' → logprob: -15.500361442565918

Token 221: 'end' (ID: 419)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: '_order' (ID: 17446)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14248763024806976
    2. '=' → logprob: -2.5174875259399414
    3. ' =' → logprob: -3.3924875259399414
    4. '_time' → logprob: -4.642487525939941
    5. 'time' → logprob: -6.267487525939941
    6. '=[]' → logprob: -6.642487525939941
    7. '_of' → logprob: -6.767487525939941
    8. ')' → logprob: -7.517487525939941
    9. 'for' → logprob: -7.642487525939941
    10. '_line' → logprob: -8.017487525939941

Token 223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19029514491558075
    2. ' =' → logprob: -1.8152951002120972
    3. '_' → logprob: -4.690295219421387
    4. '=[]' → logprob: -7.940295219421387
    5. '[]' → logprob: -8.565295219421387
    6. ')' → logprob: -8.940295219421387
    7. '_idx' → logprob: -9.690295219421387
    8. '()' → logprob: -9.690295219421387
    9. '[' → logprob: -9.815295219421387
    10. '(' → logprob: -9.815295219421387

Token 224: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.000239536224398762
    2. '[]
' → logprob: -8.875239372253418
    3. ' []' → logprob: -9.375239372253418
    4. '[' → logprob: -11.500239372253418
    5. '[]}' → logprob: -13.250239372253418
    6. '0' → logprob: -13.875239372253418
    7. ']' → logprob: -14.125239372253418
    8. '[])' → logprob: -14.625239372253418
    9. '[]

' → logprob: -15.125239372253418
    10. '[]>' → logprob: -16.000240325927734

Token 225: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.954393079970032e-05
    2. '()
' → logprob: -10.250049591064453
    3. '(' → logprob: -12.375049591064453
    4. '()\' → logprob: -12.625049591064453
    5. '([]' → logprob: -13.375049591064453
    6. '()]' → logprob: -13.500049591064453
    7. '()

' → logprob: -13.875049591064453
    8. '(),' → logprob: -14.000049591064453
    9. '()
' → logprob: -14.375049591064453
    10. '()}' → logprob: -14.750049591064453

Token 226: 'n' (ID: 77)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2408145666122437
    2. 'for' → logprob: -1.8658145666122437
    3. '<|end|>' → logprob: -1.8658145666122437
    4. 'v' → logprob: -2.365814685821533
    5. ' for' → logprob: -2.740814685821533
    6. '_' → logprob: -2.740814685821533
    7. ' 
' → logprob: -2.990814685821533
    8. '
' → logprob: -3.115814685821533
    9. '[' → logprob: -3.615814685821533
    10. ')' → logprob: -4.615814685821533

Token 227: ' =' (ID: 314)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.9665259718894958
    2. '=' → logprob: -1.0915260314941406
    3. ' =' → logprob: -2.0915260314941406
    4. '_' → logprob: -2.4665260314941406
    5. 'o' → logprob: -3.2165260314941406
    6. 'e' → logprob: -4.466526031494141
    7. ' ' → logprob: -5.341526031494141
    8. 'um' → logprob: -5.966526031494141
    9. '_ext' → logprob: -6.216526031494141
    10. 'ew' → logprob: -6.466526031494141

Token 228: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03036346100270748
    2. 'T' → logprob: -4.7803635597229
    3. ' ' → logprob: -4.7803635597229
    4. 'V' → logprob: -5.4053635597229
    5. '1' → logprob: -5.7803635597229
    6. 'int' → logprob: -5.9053635597229
    7. ' T' → logprob: -6.7803635597229
    8. ' V' → logprob: -7.1553635597229
    9. ' int' → logprob: -7.7803635597229
    10. 'len' → logprob: -9.030363082885742

Token 229: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0006366660236380994
    2. '(' → logprob: -7.625636577606201
    3. '()' → logprob: -9.12563705444336
    4. 'input' → logprob: -10.62563705444336
    5. ' (' → logprob: -11.25063705444336
    6. ' input' → logprob: -14.25063705444336
    7. '(int' → logprob: -14.62563705444336
    8. '(T' → logprob: -14.87563705444336
    9. '(
' → logprob: -15.00063705444336
    10. '=input' → logprob: -15.25063705444336

Token 230: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008859786204993725
    2. '()' → logprob: -4.758859634399414
    3. ')' → logprob: -8.508859634399414
    4. '())
' → logprob: -10.633859634399414
    5. ' ())' → logprob: -11.633859634399414
    6. '()
' → logprob: -11.883859634399414
    7. '(' → logprob: -13.133859634399414
    8. '();)' → logprob: -14.508859634399414
    9. '().' → logprob: -14.883859634399414
    10. '(),' → logprob: -16.008859634399414

Token 231: 't' (ID: 83)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7649115324020386
    2. 'ime' → logprob: -1.6399115324020386
    3. ' =' → logprob: -1.6399115324020386
    4. '_' → logprob: -2.639911651611328
    5. ',' → logprob: -3.639911651611328
    6. 'imes' → logprob: -4.139911651611328
    7. '(' → logprob: -4.889911651611328
    8. '.' → logprob: -5.514911651611328
    9. 'oken' → logprob: -5.889911651611328
    10. ' ' → logprob: -6.014911651611328

Token 233: ' [' (ID: 723)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.018393635749817
    2. '[int' → logprob: -1.143393635749817
    3. '[]' → logprob: -1.643393635749817
    4. '0' → logprob: -2.2683935165405273
    5. 'list' → logprob: -4.893393516540527
    6. ' []' → logprob: -5.393393516540527
    7. '[]
' → logprob: -5.893393516540527
    8. ' int' → logprob: -6.143393516540527
    9. '[' → logprob: -6.143393516540527
    10. ' ' → logprob: -6.893393516540527

Token 234: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.22544382512569427
    2. ']' → logprob: -2.7254438400268555
    3. ']int' → logprob: -2.7254438400268555
    4. '0' → logprob: -2.8504438400268555
    5. ']*' → logprob: -4.7254438400268555
    6. 'list' → logprob: -6.4754438400268555
    7. '[]' → logprob: -6.9754438400268555
    8. '[int' → logprob: -7.8504438400268555
    9. '][]' → logprob: -8.225443840026855
    10. '])' → logprob: -8.475443840026855

Token 235: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5328594446182251
    2. '(' → logprob: -1.782859444618225
    3. '()]' → logprob: -1.782859444618225
    4. '()' → logprob: -2.7828593254089355
    5. '(i' → logprob: -4.7828593254089355
    6. '(x' → logprob: -5.2828593254089355
    7. ']' → logprob: -7.4078593254089355
    8. '(n' → logprob: -7.9078593254089355
    9. '(
' → logprob: -8.782859802246094
    10. ' (' → logprob: -9.657859802246094

Token 236: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012171948328614235
    2. '()' → logprob: -4.512171745300293
    3. ')' → logprob: -7.512171745300293
    4. '()]' → logprob: -8.137171745300293
    5. ')]' → logprob: -9.012171745300293
    6. '())
' → logprob: -9.762171745300293
    7. '(' → logprob: -10.262171745300293
    8. '()),' → logprob: -10.387171745300293
    9. '()
' → logprob: -11.137171745300293
    10. ' ())' → logprob: -11.387171745300293

Token 237: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2578360140323639
    2. ')' → logprob: -1.5078359842300415
    3. ')]' → logprob: -5.382835865020752
    4. 'split' → logprob: -7.882835865020752
    5. 'rstrip' → logprob: -8.13283634185791
    6. '0' → logprob: -8.63283634185791
    7. '
' → logprob: -8.88283634185791
    8. ')])' → logprob: -9.50783634185791
    9. ')]
' → logprob: -9.75783634185791
    10. ')
' → logprob: -10.50783634185791

Token 238: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.0002099773846566677
    2. '()' → logprob: -8.62520980834961
    3. '())[' → logprob: -11.37520980834961
    4. '(' → logprob: -12.00020980834961
    5. '()][' → logprob: -12.62520980834961
    6. '[' → logprob: -13.00020980834961
    7. '().' → logprob: -13.12520980834961
    8. '('' → logprob: -13.25020980834961
    9. '())' → logprob: -13.75020980834961
    10. '()
' → logprob: -14.25020980834961

Token 239: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021371750626713037
    2. '][' → logprob: -6.752137184143066
    3. '-' → logprob: -7.502137184143066
    4. '1' → logprob: -8.752137184143066
    5. ' ' → logprob: -9.002137184143066
    6. '[' → logprob: -9.627137184143066
    7. '])' → logprob: -11.002137184143066
    8. '(' → logprob: -11.502137184143066
    9. '])[' → logprob: -11.502137184143066
    10. ']' → logprob: -12.127137184143066

Token 240: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.11965180933475494
    2. '[' → logprob: -2.4946517944335938
    3. '])]' → logprob: -4.369651794433594
    4. ')' → logprob: -4.869651794433594
    5. ']' → logprob: -5.369651794433594
    6. '][' → logprob: -6.244651794433594
    7. ')])' → logprob: -6.494651794433594
    8. ')]' → logprob: -7.494651794433594
    9. '[-' → logprob: -7.744651794433594
    10. '0' → logprob: -7.869651794433594

Token 241: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6373302936553955
    2. ']' → logprob: -1.0123302936553955
    3. '])' → logprob: -2.8873302936553955
    4. ')' → logprob: -3.2623302936553955
    5. ' for' → logprob: -5.137330055236816
    6. 'for' → logprob: -5.887330055236816
    7. '()' → logprob: -6.762330055236816
    8. ')]' → logprob: -6.762330055236816
    9. ',' → logprob: -7.887330055236816
    10. '()]' → logprob: -7.887330055236816

Token 242: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.53050296427682e-05
    2. '_range' → logprob: -9.62508487701416
    3. '_i' → logprob: -11.37508487701416
    4. ' range' → logprob: -13.00008487701416
    5. '_in' → logprob: -13.12508487701416
    6. 'range' → logprob: -13.37508487701416
    7. ' _' → logprob: -13.62508487701416
    8. 'i' → logprob: -14.87508487701416
    9. '_
' → logprob: -16.500085830688477
    10. ' in' → logprob: -16.750085830688477

Token 243: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005649457452818751
    2. '_' → logprob: -7.750565052032471
    3. ' range' → logprob: -9.000564575195312
    4. 'in' → logprob: -11.625564575195312
    5. '_range' → logprob: -13.500564575195312
    6. 'i' → logprob: -15.000564575195312
    7. 'n' → logprob: -15.875564575195312
    8. ']' → logprob: -17.250564575195312
    9. '	range' → logprob: -17.250564575195312
    10. ' in' → logprob: -17.500564575195312

Token 244: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002475777640938759
    2. ' range' → logprob: -6.002475738525391
    3. '
' → logprob: -17.50247573852539
    4. '[' → logprob: -17.75247573852539
    5. '(range' → logprob: -17.75247573852539
    6. ' ' → logprob: -18.12747573852539
    7. '	range' → logprob: -18.12747573852539
    8. 'n' → logprob: -18.25247573852539
    9. '_range' → logprob: -18.62747573852539
    10. '_' → logprob: -18.75247573852539

Token 245: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003619217313826084
    2. 'n' → logprob: -8.000362396240234
    3. '(' → logprob: -10.625362396240234
    4. ' (' → logprob: -13.750362396240234
    5. ' n' → logprob: -14.125362396240234
    6. '(
' → logprob: -15.750362396240234
    7. '
' → logprob: -16.875362396240234
    8. '(len' → logprob: -17.000362396240234
    9. ')n' → logprob: -17.000362396240234
    10. '	n' → logprob: -17.375362396240234

Token 246: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3870847821235657
    2. ')' → logprob: -1.137084722518921
    3. ' )' → logprob: -9.5120849609375
    4. ')])' → logprob: -9.6370849609375
    5. '])' → logprob: -10.0120849609375
    6. ']' → logprob: -11.0120849609375
    7. '))' → logprob: -12.7620849609375
    8. ')
' → logprob: -12.7620849609375
    9. '）' → logprob: -13.0120849609375
    10. ')}' → logprob: -13.5120849609375

Token 247: 'order' (ID: 2143)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8755584955215454
    2. '[' → logprob: -1.1255584955215454
    3. '<|end|>' → logprob: -2.250558376312256
    4. ']' → logprob: -2.750558376312256
    5. ')' → logprob: -2.875558376312256
    6. ',' → logprob: -5.000558376312256
    7. ' ]' → logprob: -5.000558376312256
    8. 't' → logprob: -5.125558376312256
    9. 'n' → logprob: -6.000558376312256
    10. '#' → logprob: -6.500558376312256

Token 248: '.append' (ID: 3709)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7960320115089417
    2. '=' → logprob: -1.4210319519042969
    3. '<|end|>' → logprob: -1.4210319519042969
    4. ',' → logprob: -4.046031951904297
    5. '[' → logprob: -4.296031951904297
    6. '[:]' → logprob: -4.921031951904297
    7. '=[]' → logprob: -5.046031951904297
    8. '[]' → logprob: -5.296031951904297
    9. ']' → logprob: -5.421031951904297
    10. '.append' → logprob: -5.421031951904297

Token 249: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7742636799812317
    2. '([]' → logprob: -0.7742636799812317
    3. '([' → logprob: -3.274263620376587
    4. '(t' → logprob: -3.649263620376587
    5. '(n' → logprob: -5.524263858795166
    6. '((' → logprob: -5.524263858795166
    7. '(v' → logprob: -6.274263858795166
    8. '(range' → logprob: -6.649263858795166
    9. '(list' → logprob: -6.899263858795166
    10. '0' → logprob: -7.649263858795166

Token 250: ')
' (ID: 446)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5360211730003357
    2. '[' → logprob: -0.9110211730003357
    3. ')' → logprob: -5.4110212326049805
    4. '])' → logprob: -5.6610212326049805
    5. '[n' → logprob: -5.7860212326049805
    6. '.pop' → logprob: -6.5360212326049805
    7. ')])' → logprob: -9.16102123260498
    8. '0' → logprob: -9.78602123260498
    9. '[len' → logprob: -9.91102123260498
    10. ')]' → logprob: -10.03602123260498

Token 251: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5650644898414612
    2. '[' → logprob: -0.9400644898414612
    3. '[n' → logprob: -4.440064430236816
    4. '.' → logprob: -4.565064430236816
    5. '<|end|>' → logprob: -4.565064430236816
    6. ']' → logprob: -5.690064430236816
    7. '[
' → logprob: -7.190064430236816
    8. '
' → logprob: -7.190064430236816
    9. '[-' → logprob: -7.690064430236816
    10. '[]' → logprob: -7.690064430236816

Token 252: ' problem' (ID: 4792)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.7897244691848755
    2. ' not' → logprob: -1.5397244691848755
    3. ' problem' → logprob: -2.164724349975586
    4. ' n' → logprob: -2.789724349975586
    5. ' t' → logprob: -3.039724349975586
    6. ' v' → logprob: -3.914724349975586
    7. 'len' → logprob: -4.164724349975586
    8. ' True' → logprob: -4.164724349975586
    9. ' order' → logprob: -4.289724349975586
    10. ' False' → logprob: -4.539724349975586

Token 253: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.005404269322752953
    2. '_' → logprob: -6.630404472351074
    3. '[' → logprob: -6.880404472351074
    4. '.append' → logprob: -7.130404472351074
    5. '_n' → logprob: -7.880404472351074
    6. '_a' → logprob: -7.880404472351074
    7. ' ==' → logprob: -8.630404472351074
    8. '==' → logprob: -8.880404472351074
    9. 'append' → logprob: -9.005404472351074
    10. 's' → logprob: -9.255404472351074

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031400471925735474
    2. '[' → logprob: -5.878139972686768
    3. ' :' → logprob: -9.003140449523926
    4. ':
' → logprob: -9.003140449523926
    5. ' and' → logprob: -10.628140449523926
    6. '[n' → logprob: -11.253140449523926
    7. '.' → logprob: -11.628140449523926
    8. '==' → logprob: -12.003140449523926
    9. '[:]' → logprob: -12.003140449523926
    10. '[i' → logprob: -12.003140449523926

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7578604221343994
    2. ' ' → logprob: -2.1328604221343994
    3. '    ' → logprob: -2.5078604221343994
    4. '[' → logprob: -2.7578604221343994
    5. '
' → logprob: -3.2578604221343994
    6. '	' → logprob: -3.3828604221343994
    7. ',' → logprob: -3.8828604221343994
    8. '    
' → logprob: -3.8828604221343994
    9. '<|end|>' → logprob: -4.13286018371582
    10. ')' → logprob: -4.25786018371582

Token 256: ' [' (ID: 723)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' order' → logprob: -1.1237587928771973
    2. ' pass' → logprob: -1.2487587928771973
    3. ' for' → logprob: -1.6237587928771973
    4. ' t' → logprob: -3.2487587928771973
    5. 'order' → logprob: -3.4987587928771973
    6. 'pass' → logprob: -3.7487587928771973
    7. 'for' → logprob: -3.8737587928771973
    8. ' time' → logprob: -3.9987587928771973
    9. 't' → logprob: -4.498758792877197
    10. ' input' → logprob: -4.998758792877197

Token 257: 'input' (ID: 2586)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6846569776535034
    2. 'for' → logprob: -2.309657096862793
    3. ' order' → logprob: -2.809657096862793
    4. ']' → logprob: -2.934657096862793
    5. ' n' → logprob: -2.934657096862793
    6. ' t' → logprob: -3.184657096862793
    7. '   ' → logprob: -3.684657096862793
    8. ')' → logprob: -3.684657096862793
    9. ' pass' → logprob: -4.184657096862793
    10. ' ]' → logprob: -4.184657096862793

Token 258: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.251988023519516
    2. '()]' → logprob: -1.5019880533218384
    3. ' ()' → logprob: -10.626988410949707
    4. '()
' → logprob: -11.501988410949707
    5. '()]
' → logprob: -11.876988410949707
    6. '().' → logprob: -12.626988410949707
    7. '();' → logprob: -12.876988410949707
    8. ']()' → logprob: -12.876988410949707
    9. '())' → logprob: -13.501988410949707
    10. '()],' → logprob: -13.876988410949707

Token 259: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02043209969997406
    2. '()]' → logprob: -4.270431995391846
    3. ')]' → logprob: -6.020431995391846
    4. ')' → logprob: -7.020431995391846
    5. '])' → logprob: -7.270431995391846
    6. ' ]' → logprob: -7.395431995391846
    7. '   ' → logprob: -7.770431995391846
    8. ']
' → logprob: -8.020432472229004
    9. ' for' → logprob: -8.020432472229004
    10. '()' → logprob: -8.645432472229004

Token 260: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0012964237248525023
    2. ' range' → logprob: -7.251296520233154
    3. ' _' → logprob: -7.626296520233154
    4. 'range' → logprob: -9.251296043395996
    5. '_
' → logprob: -13.876296043395996
    6. '_range' → logprob: -14.376296043395996
    7. '__' → logprob: -15.001296043395996
    8. ' in' → logprob: -15.126296043395996
    9. ' ' → logprob: -15.751296043395996
    10. 'i' → logprob: -16.001296997070312

Token 261: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.033911582082509995
    2. '_' → logprob: -4.03391170501709
    3. ' range' → logprob: -4.15891170501709
    4. '_]' → logprob: -12.53391170501709
    5. ']' → logprob: -12.78391170501709
    6. ' ' → logprob: -13.65891170501709
    7. '(range' → logprob: -13.90891170501709
    8. '_range' → logprob: -14.15891170501709
    9. 't' → logprob: -14.28391170501709
    10. '	range' → logprob: -14.53391170501709

Token 262: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2533099055290222
    2. ' range' → logprob: -1.503309965133667
    3. '_' → logprob: -6.628309726715088
    4. '_range' → logprob: -10.878310203552246
    5. 't' → logprob: -11.253310203552246
    6. ' ' → logprob: -12.003310203552246
    7. '(range' → logprob: -12.753310203552246
    8. '	range' → logprob: -12.878310203552246
    9. ']' → logprob: -13.128310203552246
    10. '_]' → logprob: -13.253310203552246

Token 263: '(int' (ID: 2742)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.021532803773880005
    2. '(' → logprob: -4.021533012390137
    3. 'n' → logprob: -7.021533012390137
    4. '(t' → logprob: -7.396533012390137
    5. '(int' → logprob: -7.521533012390137
    6. '(T' → logprob: -7.896533012390137
    7. '(len' → logprob: -8.521533012390137
    8. '(V' → logprob: -8.521533012390137
    9. ' n' → logprob: -8.771533012390137
    10. '(max' → logprob: -9.896533012390137

Token 264: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16926270723342896
    2. '(n' → logprob: -1.9192626476287842
    3. '(' → logprob: -5.544262886047363
    4. '())' → logprob: -6.544262886047363
    5. '(sys' → logprob: -6.669262886047363
    6. '()' → logprob: -6.919262886047363
    7. 'n' → logprob: -7.794262886047363
    8. 'input' → logprob: -8.044262886047363
    9. '()]' → logprob: -8.294262886047363
    10. '(t' → logprob: -8.544262886047363

Token 265: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.002753045642748475
    2. '())' → logprob: -6.127753257751465
    3. '()' → logprob: -7.752753257751465
    4. '))' → logprob: -9.877753257751465
    5. '()))
' → logprob: -10.502753257751465
    6. '())
' → logprob: -11.377753257751465
    7. '(' → logprob: -11.502753257751465
    8. '().' → logprob: -11.627753257751465
    9. '()
' → logprob: -12.127753257751465
    10. '()[' → logprob: -12.252753257751465

Token 266: ']

' (ID: 3144)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3257519602775574
    2. ']' → logprob: -1.4507520198822021
    3. ')' → logprob: -3.200752019882202
    4. '])' → logprob: -6.575751781463623
    5. ')])' → logprob: -7.450751781463623
    6. '])]' → logprob: -7.950751781463623
    7. ' ]' → logprob: -8.200752258300781
    8. ' )' → logprob: -9.075752258300781
    9. '   ' → logprob: -10.075752258300781
    10. ']
' → logprob: -10.450752258300781

Token 267: 'while' (ID: 7032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4769492745399475
    2. '<|end|>' → logprob: -1.6019492149353027
    3. '[' → logprob: -2.4769492149353027
    4. '
' → logprob: -3.4769492149353027
    5. ']' → logprob: -3.6019492149353027
    6. ' ' → logprob: -3.8519492149353027
    7. '.' → logprob: -5.851949214935303
    8. ',' → logprob: -6.101949214935303
    9. '<|end|>' → logprob: -6.476949214935303
    10. '#' → logprob: -6.601949214935303

Token 268: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.08583192527294159
    2. ' not' → logprob: -3.460831880569458
    3. ' True' → logprob: -3.460831880569458
    4. ' n' → logprob: -5.210832118988037
    5. 'time' → logprob: -5.585832118988037
    6. ' len' → logprob: -6.085832118988037
    7. ' order' → logprob: -6.210832118988037
    8. 'True' → logprob: -6.710832118988037
    9. ' delivering' → logprob: -6.710832118988037
    10. ' ' → logprob: -7.335832118988037

Token 269: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07689954340457916
    2. ' <=' → logprob: -2.701899528503418
    3. '<' → logprob: -5.576899528503418
    4. ' ' → logprob: -6.701899528503418
    5. ' +=' → logprob: -6.826899528503418
    6. '<=' → logprob: -8.076899528503418
    7. '+' → logprob: -8.076899528503418
    8. ' +' → logprob: -9.201899528503418
    9. ' <
' → logprob: -9.951899528503418
    10. '  ' → logprob: -11.076899528503418

Token 270: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.2527015805244446
    2. ' T' → logprob: -1.5027015209197998
    3. ' ' → logprob: -7.877701759338379
    4. '100' → logprob: -8.127701759338379
    5. '10' → logprob: -10.627701759338379
    6. 'V' → logprob: -11.377701759338379
    7. '	T' → logprob: -11.877701759338379
    8. '1' → logprob: -12.252701759338379
    9. '=' → logprob: -12.377701759338379
    10. 'len' → logprob: -12.502701759338379

Token 271: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0015286672860383987
    2. 'max' → logprob: -7.126528739929199
    3. '+' → logprob: -7.501528739929199
    4. ':' → logprob: -9.5015287399292
    5. ' +' → logprob: -10.2515287399292
    6. ':
' → logprob: -10.8765287399292
    7. '_' → logprob: -11.7515287399292
    8. '_MAX' → logprob: -11.7515287399292
    9. '_:' → logprob: -11.7515287399292
    10. '+:' → logprob: -11.8765287399292

Token 272: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027644599322229624
    2. ' :' → logprob: -6.0027642250061035
    3. ':
' → logprob: -8.502764701843262
    4. ' and' → logprob: -10.002764701843262
    5. '   ' → logprob: -11.002764701843262
    6. ',' → logprob: -11.877764701843262
    7. ' :
' → logprob: -12.377764701843262
    8. '[' → logprob: -12.752764701843262
    9. '+:' → logprob: -12.877764701843262
    10. '+' → logprob: -13.627764701843262

Token 273: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0869704857468605
    2. ' :' → logprob: -3.211970567703247
    3. '<|end|>' → logprob: -4.086970329284668
    4. ' ,' → logprob: -5.086970329284668
    5. ':' → logprob: -5.586970329284668
    6. '    ' → logprob: -5.711970329284668
    7. '   ' → logprob: -5.711970329284668
    8. ' 
' → logprob: -6.336970329284668
    9. ',' → logprob: -6.461970329284668
    10. '_' → logprob: -7.086970329284668

Token 274: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7632680535316467
    2. ' if' → logprob: -0.7632680535316467
    3. '   ' → logprob: -4.013267993927002
    4. '<|end|>' → logprob: -4.013267993927002
    5. ')' → logprob: -4.638267993927002
    6. 'time' → logprob: -5.263267993927002
    7. 'v' → logprob: -5.388267993927002
    8. 'token' → logprob: -6.013267993927002
    9. '#' → logprob: -6.513267993927002
    10. '[' → logprob: -6.638267993927002

Token 275: ' delivering' (ID: 28556)
  Prédit: ' delivering'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' delivering' → logprob: -0.6640309691429138
    2. ' not' → logprob: -1.0390310287475586
    3. ' returning' → logprob: -2.5390310287475586
    4. 'del' → logprob: -3.7890310287475586
    5. 'not' → logprob: -3.7890310287475586
    6. 'return' → logprob: -5.164031028747559
    7. ' ' → logprob: -8.039031028747559
    8. ' v' → logprob: -8.164031028747559
    9. ' time' → logprob: -8.289031028747559
    10. 'v' → logprob: -9.164031028747559

Token 276: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31384509801864624
    2. ':' → logprob: -1.438845157623291
    3. ' :' → logprob: -3.813845157623291
    4. 'and' → logprob: -5.063845157623291
    5. ' ==' → logprob: -6.438845157623291
    6. ' ' → logprob: -7.063845157623291
    7. ':
' → logprob: -7.313845157623291
    8. '==' → logprob: -7.938845157623291
    9. ' :
' → logprob: -9.063844680786133
    10. '_' → logprob: -9.938844680786133

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9331916570663452
    2. ':' → logprob: -1.0581916570663452
    3. ' and' → logprob: -1.6831916570663452
    4. '   ' → logprob: -3.4331917762756348
    5. ':
' → logprob: -4.433191776275635
    6. '<|end|>' → logprob: -4.433191776275635
    7. '    ' → logprob: -5.183191776275635
    8. ' :' → logprob: -5.308191776275635
    9. ',' → logprob: -6.683191776275635
    10. 'and' → logprob: -6.933191776275635

Token 278: ' print' (ID: 2123)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40692687034606934
    2. 'if' → logprob: -1.9069268703460693
    3. '       ' → logprob: -2.5319268703460693
    4. 'v' → logprob: -3.0319268703460693
    5. ' v' → logprob: -4.031927108764648
    6. '   ' → logprob: -4.156927108764648
    7. ' pass' → logprob: -4.406927108764648
    8. ' time' → logprob: -5.781927108764648
    9. 'pass' → logprob: -6.031927108764648
    10. 'time' → logprob: -6.156927108764648

Token 279: '(v' (ID: 6932)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.7976305484771729
    2. '(' → logprob: -1.1726305484771729
    3. '('' → logprob: -2.297630548477173
    4. '(v' → logprob: -2.297630548477173
    5. '(f' → logprob: -4.047630310058594
    6. '()' → logprob: -4.047630310058594
    7. '(time' → logprob: -5.922630310058594
    8. '(dist' → logprob: -8.297630310058594
    9. '(
' → logprob: -8.422630310058594
    10. '("")' → logprob: -8.547630310058594

Token 280: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.00010402000043541193
    2. ')' → logprob: -10.375103950500488
    3. '_' → logprob: -10.375103950500488
    4. ')_' → logprob: -11.625103950500488
    5. '[next' → logprob: -12.125103950500488
    6. '_)' → logprob: -12.125103950500488
    7. ' )' → logprob: -12.500103950500488
    8. '_to' → logprob: -12.500103950500488
    9. 'next' → logprob: -13.500103950500488
    10. ''_' → logprob: -13.625103950500488

Token 281: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24116624891757965
    2. ')
' → logprob: -1.8661662340164185
    3. ',' → logprob: -2.866166353225708
    4. ' )' → logprob: -6.616166114807129
    5. ' )
' → logprob: -7.616166114807129
    6. ',end' → logprob: -7.991166114807129
    7. ',)' → logprob: -8.991166114807129
    8. ' ,' → logprob: -8.991166114807129
    9. '   ' → logprob: -10.116166114807129
    10. ',)
' → logprob: -10.491166114807129

Token 282: ' flush' (ID: 37790)
  Prédit: 'flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flush' → logprob: -0.032758232206106186
    2. ' flush' → logprob: -3.6577582359313965
    3. 'end' → logprob: -5.4077582359313965
    4. 'file' → logprob: -7.2827582359313965
    5. ')' → logprob: -7.4077582359313965
    6. 'time' → logprob: -8.407757759094238
    7. ' end' → logprob: -9.282757759094238
    8. ' )' → logprob: -9.907757759094238
    9. ')
' → logprob: -10.032757759094238
    10. 'sep' → logprob: -10.032757759094238

Token 283: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.000431861262768507
    2. '=' → logprob: -7.750432014465332
    3. '(True' → logprob: -14.625432014465332
    4. '=False' → logprob: -14.625432014465332
    5. '())' → logprob: -16.250431060791016
    6. '()' → logprob: -16.625431060791016
    7. ')' → logprob: -17.625431060791016
    8. ' =' → logprob: -18.125431060791016
    9. '=
' → logprob: -18.875431060791016
    10. '=sys' → logprob: -19.750431060791016

Token 284: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03807133063673973
    2. ')
' → logprob: -3.288071393966675
    3. '       ' → logprob: -11.288071632385254
    4. ')
' → logprob: -12.038071632385254
    5. ' )' → logprob: -12.663071632385254
    6. '   ' → logprob: -12.663071632385254
    7. ')

' → logprob: -13.288071632385254
    8. ',' → logprob: -14.913071632385254
    9. ')`' → logprob: -14.913071632385254
    10. '),' → logprob: -15.038071632385254

Token 285: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7700113654136658
    2. ' if' → logprob: -0.8950113654136658
    3. 'time' → logprob: -2.5200114250183105
    4. ' time' → logprob: -4.3950114250183105
    5. '   ' → logprob: -4.5200114250183105
    6. '
' → logprob: -4.7700114250183105
    7. 'v' → logprob: -5.2700114250183105
    8. '<|end|>' → logprob: -5.7700114250183105
    9. '    
' → logprob: -7.0200114250183105
    10. '       ' → logprob: -7.0200114250183105

Token 287: ' problem' (ID: 4792)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.8676343560218811
    2. ' v' → logprob: -0.9926343560218811
    3. 'v' → logprob: -2.3676342964172363
    4. 'dist' → logprob: -2.3676342964172363
    5. ' time' → logprob: -4.117634296417236
    6. 'time' → logprob: -5.492634296417236
    7. ' t' → logprob: -8.242634773254395
    8. 't' → logprob: -8.742634773254395
    9. ' ' → logprob: -8.867634773254395
    10. '(dist' → logprob: -9.242634773254395

Token 288: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0007706748438067734
    2. '_' → logprob: -7.750770568847656
    3. '_a' → logprob: -8.625770568847656
    4. ' _' → logprob: -9.000770568847656
    5. ')' → logprob: -11.750770568847656
    6. ' ' → logprob: -12.000770568847656
    7. '_del' → logprob: -12.625770568847656
    8. ' ==' → logprob: -13.000770568847656
    9. 's' → logprob: -13.250770568847656
    10. '   ' → logprob: -13.375770568847656

Token 289: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3737795352935791
    2. ':' → logprob: -1.248779535293579
    3. ' ==' → logprob: -4.998779296875
    4. ':
' → logprob: -4.998779296875
    5. '==' → logprob: -5.623779296875
    6. '   ' → logprob: -5.748779296875
    7. 'and' → logprob: -6.248779296875
    8. '       ' → logprob: -6.748779296875
    9. '           ' → logprob: -7.248779296875
    10. ' :' → logprob: -7.373779296875

Token 290: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17681154608726501
    2. '       ' → logprob: -3.051811456680298
    3. '<|end|>' → logprob: -3.176811456680298
    4. '   ' → logprob: -4.301811695098877
    5. '
' → logprob: -4.301811695098877
    6. ':' → logprob: -4.551811695098877
    7. ':
' → logprob: -5.301811695098877
    8. '            
' → logprob: -5.676811695098877
    9. ' ' → logprob: -5.926811695098877
    10. ' :' → logprob: -6.176811695098877

Token 291: ' input' (ID: 3422)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.43156099319458
    2. 'response' → logprob: -1.43156099319458
    3. ' response' → logprob: -1.55656099319458
    4. 'if' → logprob: -3.30656099319458
    5. ' if' → logprob: -3.43156099319458
    6. 'res' → logprob: -3.55656099319458
    7. ' _' → logprob: -3.55656099319458
    8. '_response' → logprob: -3.55656099319458
    9. 'result' → logprob: -4.05656099319458
    10. 'ans' → logprob: -4.43156099319458

Token 292: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012536493130028248
    2. '()
' → logprob: -4.387536525726318
    3. '()

' → logprob: -11.13753604888916
    4. '()
' → logprob: -12.26253604888916
    5. '())' → logprob: -13.01253604888916
    6. '(' → logprob: -13.38753604888916
    7. '()\' → logprob: -14.76253604888916
    8. ' ()' → logprob: -14.88753604888916
    9. '()==' → logprob: -14.88753604888916
    10. '()]' → logprob: -14.88753604888916

Token 293: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3311326503753662
    2. '<|end|>' → logprob: -1.9561326503753662
    3. '   ' → logprob: -2.081132650375366
    4. '
' → logprob: -4.706132888793945
    5. '<|end|>' → logprob: -6.581132888793945
    6. ')' → logprob: -6.581132888793945
    7. '	' → logprob: -7.081132888793945
    8. '    
' → logprob: -8.081132888793945
    9. '           ' → logprob: -8.081132888793945
    10. '        
' → logprob: -8.206132888793945

Token 294: ' [' (ID: 723)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20830880105495453
    2. '   ' → logprob: -2.583308696746826
    3. '<|end|>' → logprob: -2.958308696746826
    4. 'if' → logprob: -4.458308696746826
    5. 'elif' → logprob: -4.458308696746826
    6. '           ' → logprob: -4.958308696746826
    7. '
' → logprob: -5.083308696746826
    8. 'time' → logprob: -5.208308696746826
    9. ' if' → logprob: -5.583308696746826
    10. 'v' → logprob: -5.583308696746826

Token 295: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.30247145891189575
    2. '_' → logprob: -2.052471399307251
    3. '_]' → logprob: -3.552471399307251
    4. ']' → logprob: -4.17747163772583
    5. 'order' → logprob: -4.55247163772583
    6. 'time' → logprob: -4.55247163772583
    7. 'return' → logprob: -4.67747163772583
    8. 'pass' → logprob: -5.05247163772583
    9. 'continue' → logprob: -5.05247163772583
    10. 'v' → logprob: -5.17747163772583

Token 296: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.721228368813172e-05
    2. '()]' → logprob: -9.875086784362793
    3. 'for' → logprob: -10.750086784362793
    4. '()
' → logprob: -11.625086784362793
    5. '(' → logprob: -13.375086784362793
    6. '()]
' → logprob: -13.750086784362793
    7. ' ()' → logprob: -13.875086784362793
    8. '()`' → logprob: -14.875086784362793
    9. ' for' → logprob: -15.375086784362793
    10. '()[' → logprob: -15.625086784362793

Token 297: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.695911705493927
    2. 'for' → logprob: -0.695911705493927
    3. '()' → logprob: -6.820911884307861
    4. '           ' → logprob: -7.945911884307861
    5. '	for' → logprob: -8.195911407470703
    6. '       ' → logprob: -8.320911407470703
    7. '   ' → logprob: -8.695911407470703
    8. ')' → logprob: -8.695911407470703
    9. ']' → logprob: -8.695911407470703
    10. '               ' → logprob: -9.570911407470703

Token 298: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15477503836154938
    2. ' range' → logprob: -2.1547751426696777
    3. ' _' → logprob: -3.6547751426696777
    4. 'range' → logprob: -6.529775142669678
    5. '_range' → logprob: -9.27977466583252
    6. ' in' → logprob: -10.65477466583252
    7. ' ' → logprob: -12.65477466583252
    8. '_]' → logprob: -12.77977466583252
    9. ' ' → logprob: -12.90477466583252
    10. '	range' → logprob: -13.77977466583252

Token 299: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23779083788394928
    2. '_' → logprob: -1.987790822982788
    3. ' range' → logprob: -2.612790822982788
    4. '_range' → logprob: -7.862791061401367
    5. ' _' → logprob: -8.612791061401367
    6. 'input' → logprob: -8.862791061401367
    7. '_]' → logprob: -9.362791061401367
    8. '[]' → logprob: -9.612791061401367
    9. ' in' → logprob: -9.987791061401367
    10. '[' → logprob: -9.987791061401367

Token 300: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5804089307785034
    2. 'range' → logprob: -0.8304089307785034
    3. '_' → logprob: -5.455409049987793
    4. ' _' → logprob: -10.455409049987793
    5. 'r' → logprob: -10.705409049987793
    6. ' ' → logprob: -11.080409049987793
    7. '[' → logprob: -11.330409049987793
    8. '   ' → logprob: -11.705409049987793
    9. ' r' → logprob: -11.767909049987793
    10. '	range' → logprob: -11.767909049987793

Token 301: '(int' (ID: 2742)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10680416226387024
    2. ' range' → logprob: -2.356804132461548
    3. '(range' → logprob: -5.731804370880127
    4. '(int' → logprob: -6.856804370880127
    5. ' ' → logprob: -7.606804370880127
    6. 'int' → logprob: -7.856804370880127
    7. 't' → logprob: -8.356803894042969
    8. '   ' → logprob: -8.731803894042969
    9. '(' → logprob: -9.106803894042969
    10. '  ' → logprob: -9.106803894042969

Token 302: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0036353501491248608
    2. 'input' → logprob: -6.003635406494141
    3. '(' → logprob: -7.128635406494141
    4. ' input' → logprob: -8.37863540649414
    5. ' (' → logprob: -9.25363540649414
    6. ' ' → logprob: -10.87863540649414
    7. ',input' → logprob: -12.37863540649414
    8. '=input' → logprob: -13.12863540649414
    9. '()' → logprob: -13.37863540649414
    10. '(int' → logprob: -13.87863540649414

Token 303: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0003476209531072527
    2. '())' → logprob: -8.375348091125488
    3. '()' → logprob: -9.750348091125488
    4. '))' → logprob: -10.125348091125488
    5. '()))
' → logprob: -12.375348091125488
    6. '))]
' → logprob: -12.500348091125488
    7. '(' → logprob: -12.750348091125488
    8. '()
' → logprob: -13.000348091125488
    9. '())))' → logprob: -13.375348091125488
    10. '().' → logprob: -14.125348091125488

Token 304: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03815096244215965
    2. '       ' → logprob: -4.163150787353516
    3. ']
' → logprob: -4.163150787353516
    4. '           ' → logprob: -5.913150787353516
    5. ')]' → logprob: -5.913150787353516
    6. ')' → logprob: -7.913150787353516
    7. '               ' → logprob: -8.788150787353516
    8. '   ' → logprob: -9.288150787353516
    9. '()]' → logprob: -9.288150787353516
    10. '<|end|>' → logprob: -9.913150787353516

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3690573573112488
    2. '<|end|>' → logprob: -1.3690574169158936
    3. '
' → logprob: -3.2440574169158936
    4. '   ' → logprob: -4.7440571784973145
    5. '<|end|>' → logprob: -6.2440571784973145
    6. ')' → logprob: -6.2440571784973145
    7. '	' → logprob: -7.1190571784973145
    8. '           ' → logprob: -7.8690571784973145
    9. 'elif' → logprob: -8.369057655334473
    10. ')
' → logprob: -8.869057655334473

Token 306: ' remaining' (ID: 15448)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: '_next' (ID: 25436)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.4291706085205078
    2. ' =' → logprob: -1.6791706085205078
    3. ' -=' → logprob: -2.429170608520508
    4. '=' → logprob: -3.304170608520508
    5. '-=' → logprob: -4.054170608520508
    6. '_distance' → logprob: -4.554170608520508
    7. 'time' → logprob: -6.429170608520508
    8. '_dist' → logprob: -6.804170608520508
    9. '_' → logprob: -6.929170608520508
    10. '[' → logprob: -7.429170608520508

Token 308: ' -=' (ID: 12583)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.811006486415863
    2. ' -=' → logprob: -0.936006486415863
    3. ' =' → logprob: -2.311006546020508
    4. '-=' → logprob: -3.311006546020508
    5. '=' → logprob: -4.311006546020508
    6. 'time' → logprob: -5.561006546020508
    7. '_distance' → logprob: -6.186006546020508
    8. '_' → logprob: -6.311006546020508
    9. ',' → logprob: -6.436006546020508
    10. '[' → logprob: -7.311006546020508

Token 309: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001964082010090351
    2. ' ' → logprob: -6.251964092254639
    3. '   ' → logprob: -10.62696361541748
    4. 'time' → logprob: -12.50196361541748
    5. '       ' → logprob: -13.00196361541748
    6. ' time' → logprob: -13.87696361541748
    7. '           ' → logprob: -14.43946361541748
    8. '0' → logprob: -14.75196361541748
    9. ' ' → logprob: -14.75196361541748
    10. '    ' → logprob: -14.93946361541748

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00411129230633378
    2. 'dist' → logprob: -6.129111289978027
    3. ' ' → logprob: -6.504111289978027
    4. 'time' → logprob: -8.254111289978027
    5. '   ' → logprob: -11.004111289978027
    6. 'cost' → logprob: -11.191611289978027
    7. 'len' → logprob: -11.254111289978027
    8. 'int' → logprob: -11.316611289978027
    9. 'abs' → logprob: -11.316611289978027
    10. '(dist' → logprob: -11.379111289978027

Token 311: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 312: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8137669563293457
    2. 'if' (adapté à ' if') → logprob: -1.3137669563293457
    3. '   ' → logprob: -2.0637669563293457
    4. '<|end|>' → logprob: -2.3137669563293457
    5. '       ' → logprob: -3.1887669563293457
    6. 'time' → logprob: -5.563766956329346
    7. '    ' → logprob: -6.063766956329346
    8. 'elif' → logprob: -6.188766956329346
    9. ')' → logprob: -6.438766956329346
    10. ' ' → logprob: -6.563766956329346

Token 314: ' remaining' (ID: 15448)
  Prédit: ' remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remaining' → logprob: -0.22550907731056213
    2. 'remaining' → logprob: -1.6005090475082397
    3. ' not' → logprob: -9.350508689880371
    4. ' ' → logprob: -12.850508689880371
    5. ' ' → logprob: -13.225508689880371
    6. 'not' → logprob: -13.600508689880371
    7. '_remaining' → logprob: -13.850508689880371
    8. '.remaining' → logprob: -14.225508689880371
    9. '0' → logprob: -14.475508689880371
    10. '   ' → logprob: -15.475508689880371

Token 315: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.9146995327901095e-05
    2. '_' → logprob: -11.125019073486328
    3. ' _' → logprob: -13.125019073486328
    4. 'next' → logprob: -13.875019073486328
    5. '_
' → logprob: -15.500019073486328
    6. '```' → logprob: -15.500019073486328
    7. '==' → logprob: -15.625019073486328
    8. 'Next' → logprob: -16.000019073486328
    9. '
' → logprob: -16.000019073486328
    10. ' next' → logprob: -16.125019073486328

Token 316: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.117923304438591
    2. '==' → logprob: -2.4929232597351074
    3. ' <=' → logprob: -3.6179232597351074
    4. '<=' → logprob: -6.367923259735107
    5. '0' → logprob: -11.992923736572266
    6. ' ' → logprob: -12.867923736572266
    7. ' ' → logprob: -13.867923736572266
    8. '=' → logprob: -13.867923736572266
    9. ')' → logprob: -14.117923736572266
    10. '[' → logprob: -14.742923736572266

Token 317: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14267908036708832
    2. ' ' → logprob: -2.01767897605896
    3. ' ' → logprob: -12.892679214477539
    4. '1' → logprob: -15.580179214477539
    5. '=' → logprob: -15.767679214477539
    6. '  ' → logprob: -15.767679214477539
    7. '   ' → logprob: -15.830179214477539
    8. 's' → logprob: -16.01767921447754
    9. '<|end|>' → logprob: -16.33017921447754
    10. '00' → logprob: -16.64267921447754

Token 318: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007612305693328381
    2. ' ' → logprob: -4.882612228393555
    3. '   ' → logprob: -12.945112228393555
    4. '  ' → logprob: -14.320112228393555
    5. ' ' → logprob: -14.320112228393555
    6. '1' → logprob: -14.695112228393555
    7. '-' → logprob: -15.195112228393555
    8. ' -' → logprob: -15.445112228393555
    9. '    ' → logprob: -15.445112228393555
    10. '```' → logprob: -15.882612228393555

Token 319: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.39356544613838196
    2. ':' → logprob: -1.1435654163360596
    3. ' and' → logprob: -5.393565654754639
    4. ' or' → logprob: -6.393565654754639
    5. '       ' → logprob: -8.64356517791748
    6. '   ' → logprob: -8.89356517791748
    7. '<|end|>' → logprob: -10.51856517791748
    8. ' :
' → logprob: -10.76856517791748
    9. ',' → logprob: -10.89356517791748
    10. '):
' → logprob: -10.89356517791748

Token 320: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001669942052103579
    2. '   ' → logprob: -7.001669883728027
    3. ':
' → logprob: -8.501669883728027
    4. ',' → logprob: -8.876669883728027
    5. '           ' → logprob: -9.126669883728027
    6. ':' → logprob: -9.626669883728027
    7. ' and' → logprob: -9.626669883728027
    8. '
' → logprob: -10.501669883728027
    9. '#' → logprob: -10.501669883728027
    10. ' if' → logprob: -11.126669883728027

Token 321: ' if' (ID: 538)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.49441081285476685
    2. ' delivering' → logprob: -1.994410753250122
    3. '   ' → logprob: -2.119410753250122
    4. '           ' → logprob: -2.869410753250122
    5. 'return' → logprob: -3.244410753250122
    6. '       ' → logprob: -3.994410753250122
    7. ' returning' → logprob: -5.244410991668701
    8. ' if' → logprob: -5.744410991668701
    9. 'if' (adapté à ' if') → logprob: -5.744410991668701
    10. 'deliver' → logprob: -6.244410991668701

Token 322: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.4677271842956543
    2. ' dist' → logprob: -1.7177271842956543
    3. 'v' → logprob: -3.0927271842956543
    4. ' delivering' → logprob: -3.3427271842956543
    5. 'dist' → logprob: -3.5927271842956543
    6. ' not' → logprob: -3.9677271842956543
    7. ' order' → logprob: -4.467727184295654
    8. ' returning' → logprob: -4.467727184295654
    9. ' end' → logprob: -4.592727184295654
    10. ' len' → logprob: -4.592727184295654

Token 323: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0001584850688232109
    2. '_' → logprob: -8.875158309936523
    3. '_return' → logprob: -12.500158309936523
    4. '==' → logprob: -12.625158309936523
    5. '_to' → logprob: -12.875158309936523
    6. ' _' → logprob: -13.500158309936523
    7. '```' → logprob: -14.125158309936523
    8. '_not' → logprob: -14.250158309936523
    9. '_current' → logprob: -14.250158309936523
    10. 'next' → logprob: -14.375158309936523

Token 324: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1607949286699295
    2. '==' → logprob: -1.910794973373413
    3. ' !=' → logprob: -8.160795211791992
    4. ' not' → logprob: -9.035795211791992
    5. ' in' → logprob: -9.535795211791992
    6. '!=' → logprob: -9.910795211791992
    7. ' ' → logprob: -10.660795211791992
    8. ' ' → logprob: -12.035795211791992
    9. 'not' → logprob: -12.785795211791992
    10. '<|end|>' → logprob: -13.160795211791992

Token 325: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07767623662948608
    2. ' dist' → logprob: -2.827676296234131
    3. 'dest' → logprob: -4.577676296234131
    4. '1' → logprob: -5.952676296234131
    5. 'v' → logprob: -7.077676296234131
    6. ' ' → logprob: -7.452676296234131
    7. '0' → logprob: -7.952676296234131
    8. 'V' → logprob: -8.452675819396973
    9. 'destination' → logprob: -8.702675819396973
    10. ' dest' → logprob: -9.327675819396973

Token 326: '1' (ID: 16)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0235169418156147
    2. 'dest' → logprob: -4.27351713180542
    3. '1' → logprob: -5.27351713180542
    4. ' dist' → logprob: -6.02351713180542
    5. 'v' → logprob: -7.52351713180542
    6. 'destination' → logprob: -7.89851713180542
    7. '0' → logprob: -8.398516654968262
    8. 'V' → logprob: -8.523516654968262
    9. ' ' → logprob: -9.023516654968262
    10. '
' → logprob: -9.898516654968262

Token 327: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1883096843957901
    2. ':' → logprob: -2.063309669494629
    3. ' and' → logprob: -3.188309669494629
    4. ' or' → logprob: -6.063309669494629
    5. 'and' → logprob: -7.688309669494629
    6. '):
' → logprob: -8.938309669494629
    7. ')' → logprob: -9.313309669494629
    8. ':
' → logprob: -9.563309669494629
    9. ' :
' → logprob: -9.813309669494629
    10. ',' → logprob: -9.813309669494629

Token 328: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026776958256959915
    2. '           ' → logprob: -4.1517767906188965
    3. '       ' → logprob: -5.1517767906188965
    4. 'return' → logprob: -5.7767767906188965
    5. '   ' → logprob: -7.1517767906188965
    6. ' return' → logprob: -7.9017767906188965
    7. ',' → logprob: -9.026777267456055
    8. ' returning' → logprob: -9.276777267456055
    9. 'del' → logprob: -9.901777267456055
    10. ':
' → logprob: -9.901777267456055

Token 329: ' last' (ID: 2174)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.08008691668510437
    2. '   ' → logprob: -3.3300869464874268
    3. ' delivering' → logprob: -3.8300869464874268
    4. 'return' → logprob: -4.205086708068848
    5. 'time' → logprob: -6.705086708068848
    6. 'deliver' → logprob: -6.955086708068848
    7. 'if' → logprob: -7.705086708068848
    8. '
' → logprob: -8.205086708068848
    9. '	del' → logprob: -8.330086708068848
    10. ' time' → logprob: -8.580086708068848

Token 330: '_return' (ID: 29287)
  Prédit: '_return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_return' → logprob: -8.93579563125968e-05
    2. 'return' → logprob: -9.375089645385742
    3. ' return' → logprob: -13.750089645385742
    4. '_time' → logprob: -14.125089645385742
    5. 'Return' → logprob: -14.250089645385742
    6. '_' → logprob: -15.125089645385742
    7. '_RETURN' → logprob: -15.250089645385742
    8. '_continue' → logprob: -15.375089645385742
    9. '_print' → logprob: -16.375089645385742
    10. ' _' → logprob: -16.500089645385742

Token 331: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.3902033970225602e-05
    2. 'time' → logprob: -11.250014305114746
    3. '=' → logprob: -14.625014305114746
    4. 'Time' → logprob: -16.12501335144043
    5. '_' → logprob: -16.37501335144043
    6. ' =' → logprob: -17.12501335144043
    7. '```' → logprob: -17.50001335144043
    8. ' time' → logprob: -17.62501335144043
    9. '"time' → logprob: -17.62501335144043
    10. '_t' → logprob: -18.25001335144043

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5764039158821106
    2. '=' → logprob: -0.8264039158821106
    3. '=time' → logprob: -7.701404094696045
    4. ',' → logprob: -12.451403617858887
    5. ' ' → logprob: -13.076403617858887
    6. ' +=' → logprob: -13.451403617858887
    7. '+=' → logprob: -13.576403617858887
    8. ' time' → logprob: -13.951403617858887
    9. 'time' → logprob: -14.076403617858887
    10. '=int' → logprob: -15.326403617858887

Token 333: ' max' (ID: 2999)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.03368016332387924
    2. ' time' → logprob: -3.4086802005767822
    3. ' ' → logprob: -11.533679962158203
    4. '   ' → logprob: -11.658679962158203
    5. '0' → logprob: -12.033679962158203
    6. '	time' → logprob: -12.908679962158203
    7. '"time' → logprob: -13.783679962158203
    8. 'max' → logprob: -13.908679962158203
    9. '  ' → logprob: -13.908679962158203
    10. '=time' → logprob: -13.908679962158203

Token 334: '(last' (ID: 39599)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7035927772521973
    2. '(time' → logprob: -0.7035927772521973
    3. '(last' → logprob: -4.703592777252197
    4. '(t' → logprob: -7.453592777252197
    5. '(return' → logprob: -8.078592300415039
    6. '(-' → logprob: -8.203592300415039
    7. '(end' → logprob: -10.578592300415039
    8. '(input' → logprob: -11.078592300415039
    9. '((' → logprob: -11.078592300415039
    10. 'time' → logprob: -11.078592300415039

Token 335: '_return' (ID: 29287)
  Prédit: '_return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_return' → logprob: -0.015491177327930927
    2. 'return' → logprob: -4.390491008758545
    3. '_time' → logprob: -6.140491008758545
    4. '(' → logprob: -7.890491008758545
    5. '0' → logprob: -8.515491485595703
    6. 'time' → logprob: -9.015491485595703
    7. ' return' → logprob: -10.640491485595703
    8. ' ' → logprob: -10.640491485595703
    9. '_input' → logprob: -11.765491485595703
    10. '[' → logprob: -11.765491485595703

Token 336: '_time' (ID: 6425)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.1456087976694107
    2. '_time' → logprob: -2.020608901977539
    3. '0' → logprob: -6.020608901977539
    4. ')' → logprob: -8.895608901977539
    5. ' time' → logprob: -8.895608901977539
    6. ' ' → logprob: -9.895608901977539
    7. '
' → logprob: -10.270608901977539
    8. '_' → logprob: -10.895608901977539
    9. '+' → logprob: -11.520608901977539
    10. 'return' → logprob: -11.520608901977539

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04202112928032875
    2. ' ,' → logprob: -3.4170210361480713
    3. '+' → logprob: -5.16702127456665
    4. ' +' → logprob: -6.66702127456665
    5. ',time' → logprob: -7.16702127456665
    6. ',
' → logprob: -8.542020797729492
    7. ')' → logprob: -8.542020797729492
    8. ',v' → logprob: -11.167020797729492
    9. ' ,
' → logprob: -11.292020797729492
    10. '),' → logprob: -11.417020797729492

Token 338: ' ' (ID: 220)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.00605038134381175
    2. ' time' → logprob: -5.2560505867004395
    3. 'dist' → logprob: -7.8810505867004395
    4. '0' → logprob: -8.631050109863281
    5. 't' → logprob: -8.756050109863281
    6. ' ' → logprob: -11.256050109863281
    7. '   ' → logprob: -11.506050109863281
    8. ' dist' → logprob: -11.506050109863281
    9. 'int' → logprob: -11.881050109863281
    10. '
' → logprob: -12.006050109863281

Token 339: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0013528565177693963
    2. 'dist' → logprob: -7.376352787017822
    3. ' time' → logprob: -7.626352787017822
    4. 't' → logprob: -9.00135326385498
    5. '0' → logprob: -9.50135326385498
    6. 'int' → logprob: -11.37635326385498
    7. ' dist' → logprob: -12.75135326385498
    8. ' ' → logprob: -13.12635326385498
    9. '   ' → logprob: -13.12635326385498
    10. ')' → logprob: -13.12635326385498

Token 340: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6297159790992737
    2. ')' → logprob: -1.004715919494629
    3. ' +' → logprob: -2.379715919494629
    4. ' )' → logprob: -5.504715919494629
    5. ')
' → logprob: -5.629715919494629
    6. ')+' → logprob: -7.879715919494629
    7. ' )
' → logprob: -8.879715919494629
    8. '+)' → logprob: -9.379715919494629
    9. '+
' → logprob: -9.379715919494629
    10. '<|end|>' → logprob: -9.754715919494629

Token 341: ' randint' (ID: 135439)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.636941134929657
    2. ' dist' → logprob: -1.1369411945343018
    3. '1' → logprob: -2.3869411945343018
    4. ' ' → logprob: -3.7619411945343018
    5. '(dist' → logprob: -5.011940956115723
    6. ' (' → logprob: -5.761940956115723
    7. 'v' → logprob: -5.886940956115723
    8. 't' → logprob: -6.261940956115723
    9. 'return' → logprob: -6.386940956115723
    10. '(' → logprob: -6.636940956115723

Token 342: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006017791107296944
    2. ' (' → logprob: -5.756017684936523
    3. '(
' → logprob: -6.256017684936523
    4. '1' → logprob: -7.631017684936523
    5. '0' → logprob: -8.631017684936523
    6. '10' → logprob: -9.881017684936523
    7. '3' → logprob: -10.131017684936523
    8. '2' → logprob: -10.381017684936523
    9. '6' → logprob: -10.756017684936523
    10. '5' → logprob: -11.006017684936523

Token 343: '0' (ID: 15)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.4961597919464111
    2. '10' → logprob: -1.6211597919464111
    3. '1' → logprob: -1.8711597919464111
    4. '3' → logprob: -2.246159791946411
    5. '2' → logprob: -2.996159791946411
    6. '0' → logprob: -3.246159791946411
    7. '100' → logprob: -3.371159791946411
    8. '20' → logprob: -3.371159791946411
    9. '30' → logprob: -3.371159791946411
    10. '4' → logprob: -3.746159791946411

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032188981771469116
    2. '(' → logprob: -4.157188892364502
    3. ' ,' → logprob: -4.532188892364502
    4. '1' → logprob: -6.032188892364502
    5. ',
' → logprob: -7.407188892364502
    6. '10' → logprob: -7.657188892364502
    7. ')' → logprob: -8.28218936920166
    8. '2' → logprob: -8.53218936920166
    9. '3' → logprob: -8.65718936920166
    10. '100' → logprob: -8.65718936920166

Token 345: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -1.2932015657424927
    2. '10' → logprob: -1.4182015657424927
    3. '3' → logprob: -2.043201446533203
    4. '2' → logprob: -2.668201446533203
    5. '1' → logprob: -2.918201446533203
    6. '4' → logprob: -3.168201446533203
    7. '9' → logprob: -3.293201446533203
    8. '100' → logprob: -3.418201446533203
    9. '20' → logprob: -3.793201446533203
    10. '30' → logprob: -3.918201446533203

Token 346: '200' (ID: 1179)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2336055040359497
    2. '5' → logprob: -1.6086055040359497
    3. '3' → logprob: -2.10860538482666
    4. '2' → logprob: -2.73360538482666
    5. '1' → logprob: -2.85860538482666
    6. '100' → logprob: -2.98360538482666
    7. '4' → logprob: -3.23360538482666
    8. '20' → logprob: -3.48360538482666
    9. '9' → logprob: -3.60860538482666
    10. '30' → logprob: -3.73360538482666

Token 347: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06925725191831589
    2. '))' → logprob: -3.0692572593688965
    3. ' )' → logprob: -4.3192572593688965
    4. '+' → logprob: -5.9442572593688965
    5. ')
' → logprob: -6.9442572593688965
    6. '1' → logprob: -7.3192572593688965
    7. '0' → logprob: -7.5692572593688965
    8. '   ' → logprob: -7.8192572593688965
    9. ' +' → logprob: -7.8192572593688965
    10. ' ))' → logprob: -7.8192572593688965

Token 348: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3389040231704712
    2. '               ' → logprob: -1.3389040231704712
    3. ')' → logprob: -1.4639040231704712
    4. '<|end|>' → logprob: -1.8389040231704712
    5. ' ' → logprob: -3.5889039039611816
    6. '            ' → logprob: -4.588903903961182
    7. ' )' → logprob: -4.713903903961182
    8. '              ' → logprob: -5.213903903961182
    9. '       ' → logprob: -5.713903903961182
    10. '                ' → logprob: -5.838903903961182

Token 349: ' end' (ID: 1268)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46268752217292786
    2. ' else' → logprob: -2.2126874923706055
    3. '       ' → logprob: -2.4626874923706055
    4. ')' → logprob: -3.5876874923706055
    5. '   ' → logprob: -3.7126874923706055
    6. 'else' → logprob: -3.8376874923706055
    7. ' return' → logprob: -3.9626874923706055
    8. 'v' → logprob: -4.3376874923706055
    9. ' elif' → logprob: -4.7126874923706055
    10. 'return' → logprob: -4.8376874923706055

Token 350: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.005000820849090815
    2. 'elif' → logprob: -6.005000591278076
    3. 'order' → logprob: -6.380000591278076
    4. 'if' → logprob: -7.880000591278076
    5. '_' → logprob: -8.880001068115234
    6. '<|end|>' → logprob: -9.130001068115234
    7. '_time' → logprob: -10.255001068115234
    8. '   ' → logprob: -10.630001068115234
    9. ' if' → logprob: -11.005001068115234
    10. '_if' → logprob: -11.130001068115234

Token 351: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.007669918239116669
    2. '.' → logprob: -4.882669925689697
    3. '.update' → logprob: -10.007669448852539
    4. ' .' → logprob: -11.507669448852539
    5. 'add' → logprob: -13.257669448852539
    6. '.clear' → logprob: -13.382669448852539
    7. '.remove' → logprob: -13.632669448852539
    8. ').' → logprob: -13.882669448852539
    9. '.setdefault' → logprob: -14.132669448852539
    10. '().' → logprob: -14.632669448852539

Token 352: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.001129021286033094
    2. '(order' → logprob: -7.626129150390625
    3. '(' → logprob: -7.751129150390625
    4. '(t' → logprob: -9.001129150390625
    5. '((' → logprob: -9.751129150390625
    6. '(n' → logprob: -11.751129150390625
    7. '(ord' → logprob: -11.751129150390625
    8. 'v' → logprob: -12.251129150390625
    9. '(tuple' → logprob: -13.376129150390625
    10. '(time' → logprob: -13.751129150390625

Token 353: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -2.868328920158092e-05
    2. 'next' → logprob: -11.250028610229492
    3. '_' → logprob: -11.875028610229492
    4. '_to' → logprob: -13.000028610229492
    5. ')_' → logprob: -13.125028610229492
    6. ' next' → logprob: -14.000028610229492
    7. '_n' → logprob: -14.125028610229492
    8. ')' → logprob: -14.125028610229492
    9. ' _' → logprob: -14.625028610229492
    10. '_
' → logprob: -15.125028610229492

Token 354: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024370834580622613
    2. ')
' → logprob: -8.375244140625
    3. ' )' → logprob: -11.500244140625
    4. '   ' → logprob: -14.250244140625
    5. ')
' → logprob: -15.125244140625
    6. '       ' → logprob: -15.250244140625
    7. ',' → logprob: -15.500244140625
    8. '           ' → logprob: -15.750244140625
    9. ')

' → logprob: -15.875244140625
    10. ')}' → logprob: -15.875244140625

Token 355: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: ' next' (ID: 2613)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3902929723262787
    2. 'v' → logprob: -3.1402928829193115
    3. ')' → logprob: -3.2652928829193115
    4. '       ' → logprob: -3.3902928829193115
    5. 'return' → logprob: -3.3902928829193115
    6. '<|end|>' → logprob: -3.7652928829193115
    7. 'time' → logprob: -3.8902928829193115
    8. ' v' → logprob: -4.140293121337891
    9. ' return' → logprob: -4.515293121337891
    10. ' if' → logprob: -4.515293121337891

Token 357: '_temp' (ID: 27535)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.6265690326690674
    2. '_v' → logprob: -2.0015690326690674
    3. '_' → logprob: -2.1265690326690674
    4. '_destination' → logprob: -2.8765690326690674
    5. '_target' → logprob: -3.1265690326690674
    6. '_order' → logprob: -3.2515690326690674
    7. '_index' → logprob: -3.7515690326690674
    8. '_vertex' → logprob: -5.001568794250488
    9. '_dest' → logprob: -5.001568794250488
    10. '_node' → logprob: -5.251568794250488

Token 358: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7802773714065552
    2. ' =' → logprob: -0.7802773714065552
    3. '_' → logprob: -2.7802772521972656
    4. ',' → logprob: -4.155277252197266
    5. '_order' → logprob: -7.030277252197266
    6. '_idx' → logprob: -7.155277252197266
    7. '_time' → logprob: -7.405277252197266
    8. 'ation' → logprob: -7.780277252197266
    9. ' ' → logprob: -7.780277252197266
    10. 's' → logprob: -7.905277252197266

Token 359: ' predecessors' (ID: 143645)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.2887084484100342
    2. 'dist' → logprob: -1.9137084484100342
    3. 'None' → logprob: -2.163708448410034
    4. ' min' → logprob: -2.538708448410034
    5. 'arg' → logprob: -3.038708448410034
    6. 'v' → logprob: -3.038708448410034
    7. ' dist' → logprob: -3.163708448410034
    8. ' arg' → logprob: -3.413708448410034
    9. ' None' → logprob: -3.538708448410034
    10. '[min' → logprob: -3.538708448410034

Token 360: '[' (ID: 58)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.010211195796728134
    2. '[' → logprob: -4.635210990905762
    3. '[next' → logprob: -9.260210990905762
    4. '[:,' → logprob: -9.510210990905762
    5. '[end' → logprob: -10.010210990905762
    6. 'v' → logprob: -10.260210990905762
    7. '[last' → logprob: -10.385210990905762
    8. '[n' → logprob: -10.510210990905762
    9. '[d' → logprob: -10.760210990905762
    10. '[-' → logprob: -11.510210990905762

Token 361: 'dist' (ID: 24126)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.050495218485593796
    2. 'dist' → logprob: -3.550495147705078
    3. '[v' → logprob: -4.300495147705078
    4. '][' → logprob: -5.925495147705078
    5. '[' → logprob: -6.050495147705078
    6. ',' → logprob: -7.800495147705078
    7. '1' → logprob: -7.925495147705078
    8. 'dest' → logprob: -8.675495147705078
    9. ',v' → logprob: -8.925495147705078
    10. '0' → logprob: -9.425495147705078

Token 362: 'ination' (ID: 3273)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.16871845722198486
    2. '[v' → logprob: -2.2937183380126953
    3. 'min' → logprob: -3.1687183380126953
    4. '[' → logprob: -6.168718338012695
    5. ',v' → logprob: -6.168718338012695
    6. '[min' → logprob: -6.168718338012695
    7. '][' → logprob: -6.543718338012695
    8. ',' → logprob: -6.668718338012695
    9. 'v' → logprob: -7.043718338012695
    10. '_max' → logprob: -7.793718338012695

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6776400804519653
    2. '][' → logprob: -0.8026400804519653
    3. ',v' → logprob: -3.677639961242676
    4. '[v' → logprob: -4.927639961242676
    5. '[' → logprob: -5.427639961242676
    6. ']' → logprob: -5.927639961242676
    7. ',next' → logprob: -6.677639961242676
    8. 'v' → logprob: -6.927639961242676
    9. '[next' → logprob: -7.052639961242676
    10. ' ,' → logprob: -7.927639961242676

Token 364: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002515254309400916
    2. '
' → logprob: -6.7525153160095215
    3. ' v' → logprob: -7.8775153160095215
    4. 'dist' → logprob: -7.8775153160095215
    5. '1' → logprob: -8.002514839172363
    6. '   ' → logprob: -9.502514839172363
    7. '
' → logprob: -10.252514839172363
    8. '0' → logprob: -10.377514839172363
    9. 'order' → logprob: -10.502514839172363
    10. 'end' → logprob: -11.252514839172363

Token 365: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -6.551721889991313e-05
    2. '_from' → logprob: -10.125065803527832
    3. '_' → logprob: -11.625065803527832
    4. 'next' → logprob: -11.875065803527832
    5. '_to' → logprob: -12.625065803527832
    6. '_min' → logprob: -13.500065803527832
    7. '_n' → logprob: -14.000065803527832
    8. '_end' → logprob: -14.625065803527832
    9. '_
' → logprob: -14.750065803527832
    10. ']' → logprob: -14.875065803527832

Token 366: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03046325035393238
    2. ']
' → logprob: -3.905463218688965
    3. '][' → logprob: -5.155463218688965
    4. '[next' → logprob: -6.530463218688965
    5. '[' → logprob: -6.780463218688965
    6. ' ]' → logprob: -7.405463218688965
    7. '].' → logprob: -8.780463218688965
    8. ']
' → logprob: -9.155463218688965
    9. '[v' → logprob: -9.280463218688965
    10. '[
' → logprob: -9.655463218688965

Token 367: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03685127943754196
    2. 'v' → logprob: -3.786851167678833
    3. 'if' → logprob: -4.536851406097412
    4. '       ' → logprob: -6.661851406097412
    5. ' if' → logprob: -7.411851406097412
    6. 'next' → logprob: -7.536851406097412
    7. '   ' → logprob: -8.536850929260254
    8. ' v' → logprob: -10.286850929260254
    9. '            
' → logprob: -10.911850929260254
    10. ' next' → logprob: -11.036850929260254

Token 368: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18218356370925903
    2. 'v' → logprob: -2.8071835041046143
    3. ' if' → logprob: -3.3071835041046143
    4. '       ' → logprob: -3.3071835041046143
    5. '           ' → logprob: -3.8071835041046143
    6. '   ' → logprob: -4.682183742523193
    7. 'while' → logprob: -6.932183742523193
    8. ' v' → logprob: -8.682183265686035
    9. 'print' → logprob: -9.432183265686035
    10. '	if' → logprob: -9.557183265686035

Token 369: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.474220335483551
    2. 'next' → logprob: -0.974220335483551
    3. ' ' → logprob: -10.474220275878906
    4. 'not' → logprob: -10.599220275878906
    5. ' not' → logprob: -10.724220275878906
    6. 'v' → logprob: -10.974220275878906
    7. '(next' → logprob: -11.224220275878906
    8. ' v' → logprob: -11.599220275878906
    9. '	next' → logprob: -11.724220275878906
    10. '   ' → logprob: -12.224220275878906

Token 370: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -9.610702363715973e-06
    2. 'temp' → logprob: -12.375009536743164
    3. '_token' → logprob: -12.750009536743164
    4. '_' → logprob: -13.500009536743164
    5. '_tem' → logprob: -15.000009536743164
    6. '_tmp' → logprob: -15.375009536743164
    7. '_TEMP' → logprob: -16.500009536743164
    8. '>' → logprob: -16.750009536743164
    9. '_next' → logprob: -16.750009536743164
    10. '	temp' → logprob: -17.125009536743164

Token 371: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5919044017791748
    2. '==' → logprob: -0.8419044017791748
    3. ' !=' → logprob: -4.966904640197754
    4. '==-' → logprob: -5.341904640197754
    5. '!=' → logprob: -5.841904640197754
    6. ']==' → logprob: -8.091904640197754
    7. '[' → logprob: -8.841904640197754
    8. ']' → logprob: -8.966904640197754
    9. '!=-' → logprob: -8.966904640197754
    10. ')' → logprob: -8.966904640197754

Token 372: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029876254498958588
    2. ' -' → logprob: -4.029876232147217
    3. 'v' → logprob: -4.904876232147217
    4. '-v' → logprob: -5.904876232147217
    5. '0' → logprob: -7.154876232147217
    6. ' v' → logprob: -8.029876708984375
    7. 'dist' → logprob: -8.904876708984375
    8. ' ' → logprob: -8.904876708984375
    9. '1' → logprob: -10.404876708984375
    10. '-dist' → logprob: -10.404876708984375

Token 373: '999' (ID: 9130)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4498052223643754e-05
    2. ' ' → logprob: -11.625014305114746
    3. '2' → logprob: -12.375014305114746
    4. '-' → logprob: -14.375014305114746
    5. '100' → logprob: -16.125015258789062
    6. '999' → logprob: -16.437515258789062
    7. ',' → logprob: -16.687515258789062
    8. '99' → logprob: -16.750015258789062
    9. ' -' → logprob: -17.000015258789062
    10. ':' → logprob: -17.125015258789062

Token 374: '9' (ID: 24)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.32283586263656616
    2. ':
' → logprob: -1.697835922241211
    3. ':' → logprob: -2.572835922241211
    4. 'and' → logprob: -5.447835922241211
    5. ' :
' → logprob: -5.822835922241211
    6. '           ' → logprob: -6.322835922241211
    7. ' ' → logprob: -6.447835922241211
    8. ' :' → logprob: -6.572835922241211
    9. '1' → logprob: -7.322835922241211
    10. ' -' → logprob: -7.447835922241211

Token 375: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7267336249351501
    2. ' and' → logprob: -0.8517336249351501
    3. ':' → logprob: -2.476733684539795
    4. ' :
' → logprob: -6.101733684539795
    5. 'and' → logprob: -6.351733684539795
    6. ' :' → logprob: -7.726733684539795
    7. '   ' → logprob: -8.101733207702637
    8. '           ' → logprob: -8.851733207702637
    9. '):
' → logprob: -8.851733207702637
    10. '               ' → logprob: -8.851733207702637

Token 376: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03349607437849045
    2. 'v' → logprob: -4.783495903015137
    3. ' v' → logprob: -4.783495903015137
    4. ':
' → logprob: -5.033495903015137
    5. ' and' → logprob: -5.658495903015137
    6. '           ' → logprob: -6.533495903015137
    7. ':' → logprob: -6.533495903015137
    8. ' next' → logprob: -7.033495903015137
    9. '
' → logprob: -7.408495903015137
    10. '):
' → logprob: -8.158495903015137

Token 377: ' remaining' (ID: 15448)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.2630372643470764
    2. 'v' → logprob: -1.5130372047424316
    3. '               ' → logprob: -5.388037204742432
    4. '                   ' → logprob: -5.888037204742432
    5. '           ' → logprob: -6.513037204742432
    6. '   ' → logprob: -7.013037204742432
    7. '	v' → logprob: -7.513037204742432
    8. '
' → logprob: -8.38803768157959
    9. '       ' → logprob: -8.63803768157959
    10. ' ' → logprob: -9.51303768157959

Token 378: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.006860293447971344
    2. '=' → logprob: -5.881860256195068
    3. 'next' → logprob: -6.131860256195068
    4. ' =' → logprob: -7.381860256195068
    5. '-=' → logprob: -7.881860256195068
    6. ' -=' → logprob: -8.006860733032227
    7. '_remaining' → logprob: -9.131860733032227
    8. ' next' → logprob: -9.131860733032227
    9. '+=' → logprob: -9.256860733032227
    10. '```' → logprob: -10.381860733032227

Token 379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7465140223503113
    2. ' -=' → logprob: -1.246514081954956
    3. '=' → logprob: -1.496514081954956
    4. '-=' → logprob: -4.371513843536377
    5. ' +=' → logprob: -6.496513843536377
    6. '+=' → logprob: -8.371514320373535
    7. '-' → logprob: -9.621514320373535
    8. ' ' → logprob: -9.996514320373535
    9. ' -' → logprob: -10.246514320373535
    10. '   ' → logprob: -10.871514320373535

Token 380: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1357688307762146
    2. ' dist' → logprob: -2.1357688903808594
    3. '1' → logprob: -5.135768890380859
    4. 'int' → logprob: -6.885768890380859
    5. ' ' → logprob: -7.635768890380859
    6. '   ' → logprob: -8.01076889038086
    7. '	dist' → logprob: -8.51076889038086
    8. '           ' → logprob: -9.13576889038086
    9. 'graph' → logprob: -9.26076889038086
    10. 'len' → logprob: -9.51076889038086

Token 381: '[v' (ID: 36561)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.1868547648191452
    2. '_min' → logprob: -2.686854839324951
    3. '[' → logprob: -2.936854839324951
    4. '[min' → logprob: -3.186854839324951
    5. '[temp' → logprob: -5.311854839324951
    6. '[int' → logprob: -7.061854839324951
    7. '_temp' → logprob: -7.436854839324951
    8. 'min' → logprob: -7.561854839324951
    9. 'int' → logprob: -8.936854362487793
    10. 'dist' → logprob: -9.186854362487793

Token 382: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0002981624274980277
    2. 'next' → logprob: -8.750298500061035
    3. '[next' → logprob: -10.625298500061035
    4. 'Next' → logprob: -10.750298500061035
    5. 'estination' → logprob: -10.750298500061035
    6. '_from' → logprob: -10.875298500061035
    7. '_destination' → logprob: -11.375298500061035
    8. '_previous' → logprob: -11.750298500061035
    9. '[' → logprob: -12.250298500061035
    10. '_NEXT' → logprob: -12.750298500061035

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11414501070976257
    2. ',next' → logprob: -2.239145040512085
    3. '[next' → logprob: -7.614144802093506
    4. '][' → logprob: -7.989144802093506
    5. ' ,' → logprob: -8.239145278930664
    6. '_next' → logprob: -8.989145278930664
    7. 'next' → logprob: -10.114145278930664
    8. ',n' → logprob: -10.864145278930664
    9. '   ' → logprob: -11.739145278930664
    10. ',
' → logprob: -12.114145278930664

Token 384: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.08938183635473251
    2. ' next' → logprob: -2.4643819332122803
    3. '   ' → logprob: -9.21438217163086
    4. '           ' → logprob: -9.71438217163086
    5. '[next' → logprob: -9.71438217163086
    6. '               ' → logprob: -10.21438217163086
    7. ' ' → logprob: -10.33938217163086
    8. '  ' → logprob: -10.58938217163086
    9. '
' → logprob: -11.21438217163086
    10. '	next' → logprob: -11.33938217163086

Token 385: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.0003167545364703983
    2. '_next' → logprob: -8.375316619873047
    3. 'temp' → logprob: -9.750316619873047
    4. '_token' → logprob: -11.750316619873047
    5. '_tmp' → logprob: -11.750316619873047
    6. ']' → logprob: -12.625316619873047
    7. 'Temp' → logprob: -13.125316619873047
    8. 'next' → logprob: -13.375316619873047
    9. '_' → logprob: -13.875316619873047
    10. '_tem' → logprob: -14.375316619873047

Token 386: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009042790159583092
    2. ']
' → logprob: -5.509042739868164
    3. '+' → logprob: -6.384042739868164
    4. ' ]' → logprob: -6.634042739868164
    5. ']+' → logprob: -7.384042739868164
    6. ' +' → logprob: -7.634042739868164
    7. '[' → logprob: -8.134042739868164
    8. '-' → logprob: -9.009042739868164
    9. '   ' → logprob: -9.134042739868164
    10. ' -' → logprob: -10.384042739868164

Token 387: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.462759792804718
    2. ' ' → logprob: -1.3377597332000732
    3. '<|end|>' → logprob: -2.4627597332000732
    4. ' 
' → logprob: -4.587759971618652
    5. '           ' → logprob: -5.712759971618652
    6. '                ' → logprob: -5.712759971618652
    7. '
' → logprob: -6.587759971618652
    8. ')' → logprob: -7.087759971618652
    9. '              ' → logprob: -7.212759971618652
    10. '            ' → logprob: -7.587759971618652

Token 388: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.007963962852954865
    2. '               ' → logprob: -5.007964134216309
    3. '           ' → logprob: -7.507964134216309
    4. ' v' → logprob: -7.757964134216309
    5. 'print' → logprob: -9.132964134216309
    6. '       ' → logprob: -10.257964134216309
    7. '                   ' → logprob: -10.382964134216309
    8. 'time' → logprob: -10.757964134216309
    9. '   ' → logprob: -11.507964134216309
    10. '
' → logprob: -11.632964134216309

Token 389: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0008151084766723216
    2. '_' → logprob: -7.125814914703369
    3. 'next' → logprob: -12.500815391540527
    4. '_=' → logprob: -12.875815391540527
    5. '_to' → logprob: -14.000815391540527
    6. 'Next' → logprob: -14.375815391540527
    7. '=' → logprob: -14.625815391540527
    8. '```' → logprob: -14.750815391540527
    9. ' _' → logprob: -15.000815391540527
    10. '_
' → logprob: -15.375815391540527

Token 390: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1426856815814972
    2. '=' → logprob: -2.017685651779175
    3. ' ' → logprob: -12.517685890197754
    4. ' +=' → logprob: -12.642685890197754
    5. ',' → logprob: -13.017685890197754
    6. '+=' → logprob: -15.517685890197754
    7. '＝' → logprob: -15.517685890197754
    8. ' -=' → logprob: -15.892685890197754
    9. ' =
' → logprob: -16.017684936523438
    10. '.' → logprob: -16.142684936523438

Token 391: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.31327101588249207
    2. 'next' → logprob: -1.3132710456848145
    3. '	next' → logprob: -12.313270568847656
    4. 'int' → logprob: -13.313270568847656
    5. ' int' → logprob: -13.938270568847656
    6. '[next' → logprob: -13.938270568847656
    7. '(next' → logprob: -14.688270568847656
    8. ' ' → logprob: -15.063270568847656
    9. ' nex' → logprob: -15.313270568847656
    10. 'n' → logprob: -16.563270568847656

Token 392: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.0004039785999339074
    2. '_next' → logprob: -8.375404357910156
    3. '_token' → logprob: -8.875404357910156
    4. 'temp' → logprob: -10.875404357910156
    5. '_tmp' → logprob: -12.375404357910156
    6. '_' → logprob: -12.875404357910156
    7. '_tokens' → logprob: -13.125404357910156
    8. '+' → logprob: -14.125404357910156
    9. '_t' → logprob: -14.250404357910156
    10. 'Temp' → logprob: -14.250404357910156

Token 393: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 394: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 395: ' remaining' (ID: 15448)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7081747055053711
    2. ' else' → logprob: -1.333174705505371
    3. '   ' → logprob: -2.708174705505371
    4. 'else' → logprob: -3.333174705505371
    5. '<|end|>' → logprob: -3.583174705505371
    6. '
' → logprob: -3.708174705505371
    7. '       ' → logprob: -4.458174705505371
    8. '    ' → logprob: -4.458174705505371
    9. ':' → logprob: -4.458174705505371
    10. ')' → logprob: -4.708174705505371

Token 396: '_last' (ID: 26359)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.04315618798136711
    2. '_' → logprob: -3.168156147003174
    3. 'Next' → logprob: -10.168156623840332
    4. ' _' → logprob: -10.168156623840332
    5. '-' → logprob: -11.168156623840332
    6. ' -=' → logprob: -11.793156623840332
    7. 'next' → logprob: -11.793156623840332
    8. '=' → logprob: -11.918156623840332
    9. '-=' → logprob: -12.168156623840332
    10. '```' → logprob: -12.293156623840332

Token 397: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.005384587682783604
    2. '-=' → logprob: -5.38038444519043
    3. ' +=' → logprob: -8.38038444519043
    4. '_' → logprob: -9.13038444519043
    5. ' =' → logprob: -9.38038444519043
    6. '-' → logprob: -9.63038444519043
    7. ' ' → logprob: -9.75538444519043
    8. '   ' → logprob: -10.13038444519043
    9. '>' → logprob: -10.25538444519043
    10. '_next' → logprob: -10.50538444519043

Token 398: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5231374502182007
    2. '1' → logprob: -0.8981374502182007
    3. ' ' → logprob: -12.398137092590332
    4. '<|end|>' → logprob: -12.648137092590332
    5. '0' → logprob: -13.023137092590332
    6. '	' → logprob: -13.273137092590332
    7. '   ' → logprob: -13.523137092590332
    8. '    ' → logprob: -15.523137092590332
    9. '  ' → logprob: -15.648137092590332
    10. '       ' → logprob: -16.14813804626465

Token 399: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019347082125023007
    2. ' ' → logprob: -6.25193452835083
    3. '   ' → logprob: -13.001935005187988
    4. '0' → logprob: -13.376935005187988
    5. '<|end|>' → logprob: -14.501935005187988
    6. '	' → logprob: -15.064435005187988
    7. ' ' → logprob: -15.314435005187988
    8. '```' → logprob: -15.501935005187988
    9. '  ' → logprob: -15.626935005187988
    10. '
' → logprob: -16.126934051513672

Token 400: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 403: ' remaining' (ID: 15448)
  Prédit: ' remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remaining' → logprob: -0.030222250148653984
    2. 'remaining' → logprob: -3.530222177505493
    3. ' returning' → logprob: -7.780222415924072
    4. ' time' → logprob: -10.655221939086914
    5. ' not' → logprob: -12.030221939086914
    6. '_remaining' → logprob: -12.405221939086914
    7. ' False' → logprob: -12.905221939086914
    8. ' last' → logprob: -13.030221939086914
    9. ' problem' → logprob: -13.155221939086914
    10. ' ' → logprob: -13.155221939086914

Token 404: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.08126436918973923
    2. '_next' → logprob: -2.5812642574310303
    3. '_' → logprob: -6.081264495849609
    4. '```' → logprob: -10.20626449584961
    5. '==' → logprob: -11.20626449584961
    6. 'last' → logprob: -11.95626449584961
    7. ' _' → logprob: -12.08126449584961
    8. '_first' → logprob: -12.83126449584961
    9. '_remaining' → logprob: -12.95626449584961
    10. '_Last' → logprob: -13.08126449584961

Token 405: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014458819292485714
    2. '==' → logprob: -4.389458656311035
    3. ' <=' → logprob: -6.264458656311035
    4. ' >' → logprob: -10.889458656311035
    5. ' ' → logprob: -11.014458656311035
    6. '<=' → logprob: -12.139458656311035
    7. '>' → logprob: -13.514458656311035
    8. ' <' → logprob: -14.014458656311035
    9. '<|end|>' → logprob: -15.014458656311035
    10. ' ' → logprob: -15.139458656311035

Token 406: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231552124023438
    2. ' ' → logprob: -0.8981552124023438
    3. '   ' → logprob: -11.523155212402344
    4. ' ' → logprob: -11.773155212402344
    5. '  ' → logprob: -12.898155212402344
    6. '1' → logprob: -12.898155212402344
    7. '	' → logprob: -13.710655212402344
    8. '=' → logprob: -14.210655212402344
    9. '```' → logprob: -14.273155212402344
    10. '    ' → logprob: -14.273155212402344

Token 407: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018160121515393257
    2. ' ' → logprob: -4.018160343170166
    3. '1' → logprob: -12.518159866333008
    4. '   ' → logprob: -13.830659866333008
    5. '=' → logprob: -14.018159866333008
    6. '>' → logprob: -14.143159866333008
    7. ' ' → logprob: -14.893159866333008
    8. '-' → logprob: -15.205659866333008
    9. '==' → logprob: -15.205659866333008
    10. '  ' → logprob: -15.268159866333008

Token 408: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07179535180330276
    2. ':
' → logprob: -2.6967954635620117
    3. ' and' → logprob: -7.446795463562012
    4. '           ' → logprob: -7.571795463562012
    5. ',' → logprob: -8.446795463562012
    6. '<|end|>' → logprob: -8.696795463562012
    7. '       ' → logprob: -8.946795463562012
    8. ')' → logprob: -9.821795463562012
    9. ' or' → logprob: -9.946795463562012
    10. '):' → logprob: -9.946795463562012

Token 409: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07379031181335449
    2. '           ' → logprob: -3.3237903118133545
    3. 'return' → logprob: -4.448790550231934
    4. '   ' → logprob: -4.698790550231934
    5. 'v' → logprob: -5.323790550231934
    6. ':' → logprob: -5.823790550231934
    7. '<|end|>' → logprob: -6.573790550231934
    8. ':
' → logprob: -6.823790550231934
    9. 'del' → logprob: -7.323790550231934
    10. ' return' → logprob: -7.573790550231934

Token 410: ' if' (ID: 538)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.6510274410247803
    2. '           ' → logprob: -1.0260274410247803
    3. '       ' → logprob: -2.7760274410247803
    4. 'return' → logprob: -3.4010274410247803
    5. '   ' → logprob: -4.401027679443359
    6. '               ' → logprob: -5.276027679443359
    7. 'deliver' → logprob: -6.026027679443359
    8. ' delivering' → logprob: -6.526027679443359
    9. 'time' → logprob: -7.276027679443359
    10. 'print' → logprob: -7.651027679443359

Token 411: ' dist' (ID: 3601)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0024484395980835
    2. ' v' → logprob: -1.0024484395980835
    3. ' not' → logprob: -2.752448558807373
    4. ' returning' → logprob: -2.877448558807373
    5. ' delivering' → logprob: -3.127448558807373
    6. 'return' → logprob: -4.002448558807373
    7. ' problem' → logprob: -4.252448558807373
    8. 'not' → logprob: -4.252448558807373
    9. ' dist' → logprob: -4.502448558807373
    10. 'dist' → logprob: -4.627448558807373

Token 412: 'ination' (ID: 3273)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.05342474207282066
    2. '[' → logprob: -3.428424835205078
    3. 'min' → logprob: -5.053424835205078
    4. '[min' → logprob: -5.303424835205078
    5. '[v' → logprob: -5.428424835205078
    6. '[next' → logprob: -7.553424835205078
    7. '_max' → logprob: -7.803424835205078
    8. 'ion' → logprob: -7.928424835205078
    9. 'ation' → logprob: -8.053424835205078
    10. '_next' → logprob: -8.053424835205078

Token 413: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4641701579093933
    2. ' !=' → logprob: -1.714170217514038
    3. '==' → logprob: -1.839170217514038
    4. '!=' → logprob: -3.714170217514038
    5. ',' → logprob: -6.089169979095459
    6. '[' → logprob: -6.464169979095459
    7. ')' → logprob: -7.214169979095459
    8. ' ' → logprob: -7.464169979095459
    9. '<|end|>' → logprob: -7.589169979095459
    10. '>' → logprob: -8.214170455932617

Token 414: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6392818093299866
    2. ' ' → logprob: -0.8892818093299866
    3. '0' → logprob: -3.514281749725342
    4. 'v' → logprob: -3.889281749725342
    5. ' v' → logprob: -4.764281749725342
    6. ' -' → logprob: -7.389281749725342
    7. 'last' → logprob: -7.639281749725342
    8. '-' → logprob: -8.0142822265625
    9. ' last' → logprob: -8.1392822265625
    10. 'return' → logprob: -8.9517822265625

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08488481491804123
    2. '0' → logprob: -2.7098848819732666
    3. 'v' → logprob: -4.3348846435546875
    4. ' ' → logprob: -6.8348846435546875
    5. 'last' → logprob: -8.209884643554688
    6. '-' → logprob: -8.709884643554688
    7. 'return' → logprob: -9.209884643554688
    8. 'next' → logprob: -10.084884643554688
    9. ' v' → logprob: -11.084884643554688
    10. 'time' → logprob: -11.459884643554688

Token 416: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5977990627288818
    2. ':
' → logprob: -1.0977990627288818
    3. ' and' → logprob: -2.222799062728882
    4. ')' → logprob: -6.097799301147461
    5. ' or' → logprob: -6.722799301147461
    6. 'and' → logprob: -6.847799301147461
    7. '):
' → logprob: -6.972799301147461
    8. '):' → logprob: -7.347799301147461
    9. ',' → logprob: -7.972799301147461
    10. '           ' → logprob: -8.097799301147461

Token 417: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4501459002494812
    2. '           ' → logprob: -1.450145959854126
    3. 'return' → logprob: -2.575145959854126
    4. '       ' → logprob: -3.075145959854126
    5. '   ' → logprob: -6.325145721435547
    6. ' return' → logprob: -6.700145721435547
    7. 'del' → logprob: -7.325145721435547
    8. ' returning' → logprob: -7.950145721435547
    9. ':return' → logprob: -8.325145721435547
    10. 'break' → logprob: -8.450145721435547

Token 418: ' returning' (ID: 22968)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.9795700907707214
    2. ' delivering' → logprob: -1.4795701503753662
    3. '   ' → logprob: -1.7295701503753662
    4. 'return' → logprob: -2.479570150375366
    5. '               ' → logprob: -2.479570150375366
    6. '           ' → logprob: -3.479570150375366
    7. 'deliver' → logprob: -5.479569911956787
    8. ' returning' → logprob: -5.479569911956787
    9. 'break' → logprob: -5.729569911956787
    10. '                   ' → logprob: -6.604569911956787

Token 419: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3492578864097595
    2. '=' → logprob: -1.2242579460144043
    3. '=True' → logprob: -8.349257469177246
    4. '=False' → logprob: -8.599257469177246
    5. ':' → logprob: -8.724257469177246
    6. '<|end|>' → logprob: -9.849257469177246
    7. '   ' → logprob: -10.099257469177246
    8. '==' → logprob: -10.099257469177246
    9. ' ' → logprob: -10.599257469177246
    10. ',' → logprob: -10.974257469177246

Token 420: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07920470833778381
    2. 'True' → logprob: -2.704204797744751
    3. ' False' → logprob: -4.829204559326172
    4. ' True' → logprob: -6.704204559326172
    5. 'not' → logprob: -12.454204559326172
    6. '(False' → logprob: -14.454204559326172
    7. '0' → logprob: -14.704204559326172
    8. '=False' → logprob: -14.829204559326172
    9. '   ' → logprob: -15.204204559326172
    10. ' not' → logprob: -15.204204559326172

Token 421: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 423: ' delivering' (ID: 28556)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.0042632464319467545
    2. '           ' → logprob: -6.254263401031494
    3. ' delivering' → logprob: -6.879263401031494
    4. '               ' → logprob: -7.254263401031494
    5. 'deliver' → logprob: -8.504262924194336
    6. '       ' → logprob: -9.504262924194336
    7. '   ' → logprob: -9.504262924194336
    8. 'else' → logprob: -9.879262924194336
    9. 'time' → logprob: -9.879262924194336
    10. 'delivery' → logprob: -10.129262924194336

Token 424: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07896480709314346
    2. '=' → logprob: -2.5789647102355957
    3. '=False' → logprob: -9.953965187072754
    4. ' ' → logprob: -11.078965187072754
    5. ',' → logprob: -12.578965187072754
    6. '=True' → logprob: -12.578965187072754
    7. '<|end|>' → logprob: -13.328965187072754
    8. ')' → logprob: -13.703965187072754
    9. '   ' → logprob: -14.953965187072754
    10. '	' → logprob: -15.453965187072754

Token 425: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0015028368216007948
    2. ' False' → logprob: -6.501502990722656
    3. 'True' → logprob: -15.126502990722656
    4. '(False' → logprob: -15.251502990722656
    5. '=False' → logprob: -17.126502990722656
    6. '.False' → logprob: -18.501502990722656
    7. '0' → logprob: -18.626502990722656
    8. '_false' → logprob: -18.876502990722656
    9. '   ' → logprob: -19.001502990722656
    10. 'false' → logprob: -19.751502990722656

Token 426: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 427: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 428: ' elif' (ID: 9497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: ' not' (ID: 625)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.7838470339775085
    2. ' dist' → logprob: -1.4088470935821533
    3. 'v' → logprob: -2.1588470935821533
    4. 'dist' → logprob: -2.1588470935821533
    5. ' remaining' → logprob: -4.158846855163574
    6. ' next' → logprob: -4.283846855163574
    7. ' returning' → logprob: -4.408846855163574
    8. 'remaining' → logprob: -4.783846855163574
    9. 'next' → logprob: -5.283846855163574
    10. 'return' → logprob: -5.908846855163574

Token 430: ' returning' (ID: 22968)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.40249982476234436
    2. ' returning' → logprob: -1.152499794960022
    3. 'del' → logprob: -4.777499675750732
    4. 'end' → logprob: -6.152499675750732
    5. ' delivering' → logprob: -6.527499675750732
    6. ' return' → logprob: -6.902499675750732
    7. ' end' → logprob: -7.152499675750732
    8. 'problem' → logprob: -8.02750015258789
    9. 'order' → logprob: -8.27750015258789
    10. 'remaining' → logprob: -8.52750015258789

Token 431: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43510469794273376
    2. ':
' → logprob: -1.0601047277450562
    3. ' and' → logprob: -5.185104846954346
    4. ' :' → logprob: -8.810104370117188
    5. 'and' → logprob: -8.935104370117188
    6. ' :
' → logprob: -9.185104370117188
    7. '   ' → logprob: -9.685104370117188
    8. ':

' → logprob: -9.810104370117188
    9. ',' → logprob: -10.060104370117188
    10. '       ' → logprob: -10.310104370117188

Token 432: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42274409532546997
    2. ':
' → logprob: -1.2977440357208252
    3. ':' → logprob: -3.047744035720825
    4. '           ' → logprob: -4.422744274139404
    5. ' and' → logprob: -5.922744274139404
    6. ':return' → logprob: -5.922744274139404
    7. '                   ' → logprob: -6.797744274139404
    8. '       ' → logprob: -6.922744274139404
    9. '):
' → logprob: -7.047744274139404
    10. ',' → logprob: -7.172744274139404

Token 433: ' idx' (ID: 14016)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18822188675403595
    2. 'dist' → logprob: -2.1882219314575195
    3. 'remaining' → logprob: -3.4382219314575195
    4. '   ' → logprob: -4.4382219314575195
    5. ' returning' → logprob: -5.5632219314575195
    6. 'v' → logprob: -6.1882219314575195
    7. '       ' → logprob: -6.3132219314575195
    8. '           ' → logprob: -6.6882219314575195
    9. 'if' → logprob: -6.6882219314575195
    10. ' dist' → logprob: -6.8132219314575195

Token 434: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14330017566680908
    2. '=' → logprob: -2.0183000564575195
    3. ' ' → logprob: -8.51830005645752
    4. ',' → logprob: -8.89330005645752
    5. '<|end|>' → logprob: -10.26830005645752
    6. '   ' → logprob: -10.51830005645752
    7. '	' → logprob: -10.58080005645752
    8. 's' → logprob: -11.01830005645752
    9. '_' → logprob: -11.20580005645752
    10. '_next' → logprob: -11.45580005645752

Token 435: ' j' (ID: 441)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.08350284397602081
    2. 'dist' → logprob: -3.833502769470215
    3. 'order' → logprob: -3.958502769470215
    4. 'min' → logprob: -4.333502769470215
    5. ' arg' → logprob: -4.958502769470215
    6. 't' → logprob: -5.333502769470215
    7. '0' → logprob: -5.583502769470215
    8. 'len' → logprob: -6.333502769470215
    9. 'end' → logprob: -6.458502769470215
    10. '-' → logprob: -7.083502769470215

Token 436: 'dx' (ID: 22100)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7424424290657043
    2. '_' → logprob: -1.4924423694610596
    3. 'dx' → logprob: -2.2424423694610596
    4. ' _' → logprob: -3.1174423694610596
    5. ' +' → logprob: -3.3674423694610596
    6. ' ' → logprob: -4.117442607879639
    7. '0' → logprob: -4.117442607879639
    8. 's' → logprob: -4.242442607879639
    9. '=' → logprob: -4.492442607879639
    10. '-' → logprob: -4.492442607879639

Token 437: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2899901866912842
    2. ' +' → logprob: -1.4149901866912842
    3. '<|end|>' → logprob: -5.164990425109863
    4. ' ' → logprob: -6.664990425109863
    5. ' =' → logprob: -7.539990425109863
    6. '=' → logprob: -7.914990425109863
    7. 'for' → logprob: -8.914990425109863
    8. '[' → logprob: -9.164990425109863
    9. ' for' → logprob: -9.664990425109863
    10. '0' → logprob: -9.664990425109863

Token 438: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2860060930252075
    2. 'dist' → logprob: -2.661005973815918
    3. ' ' → logprob: -3.036005973815918
    4. 'arg' → logprob: -3.286005973815918
    5. 'end' → logprob: -4.286005973815918
    6. 'order' → logprob: -4.536005973815918
    7. 'len' → logprob: -4.536005973815918
    8. ' arg' → logprob: -4.536005973815918
    9. ' dist' → logprob: -4.661005973815918
    10. '-' → logprob: -5.036005973815918

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007429223624058068
    2. '999' → logprob: -8.00074291229248
    3. '2' → logprob: -8.50074291229248
    4. '-' → logprob: -10.12574291229248
    5. ' ' → logprob: -10.12574291229248
    6. 'len' → logprob: -10.37574291229248
    7. '100' → logprob: -10.81324291229248
    8. '99' → logprob: -11.87574291229248
    9. '(-' → logprob: -12.25074291229248
    10. '10' → logprob: -12.43824291229248

Token 440: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 442: ' dist' (ID: 3601)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3898538649082184
    2. 'for' → logprob: -1.139853835105896
    3. ' while' → logprob: -6.5148539543151855
    4. 'while' → logprob: -7.2648539543151855
    5. '<|end|>' → logprob: -9.389853477478027
    6. ' found' → logprob: -9.514853477478027
    7. ' if' → logprob: -9.514853477478027
    8. 'return' → logprob: -9.639853477478027
    9. ' next' → logprob: -9.889853477478027
    10. '
' → logprob: -9.889853477478027

Token 443: '_temp' (ID: 27535)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.23498979210853577
    2. 'min' → logprob: -2.859989881515503
    3. '_next' → logprob: -2.859989881515503
    4. '_max' → logprob: -3.859989881515503
    5. '_idx' → logprob: -4.609989643096924
    6. '_remaining' → logprob: -4.734989643096924
    7. '_temp' → logprob: -5.234989643096924
    8. 'from' → logprob: -5.484989643096924
    9. 'return' → logprob: -5.859989643096924
    10. 'max' → logprob: -5.859989643096924

Token 444: '_min' (ID: 15950)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4478926658630371
    2. '=' → logprob: -1.322892665863037
    3. ',' → logprob: -2.572892665863037
    4. '[' → logprob: -4.697892665863037
    5. '[idx' → logprob: -6.572892665863037
    6. ' ' → logprob: -6.697892665863037
    7. ' ,' → logprob: -7.322892665863037
    8. '<|end|>' → logprob: -7.572892665863037
    9. '=[]' → logprob: -7.822892665863037
    10. ')' → logprob: -8.072893142700195

Token 445: '_pos' (ID: 14692)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40953001379966736
    2. '=' → logprob: -1.1595300436019897
    3. ',' → logprob: -3.9095299243927
    4. ' ' → logprob: -6.909530162811279
    5. ' ,' → logprob: -8.159529685974121
    6. '_idx' → logprob: -9.034529685974121
    7. ')' → logprob: -9.159529685974121
    8. 'idx' → logprob: -9.409529685974121
    9. '[' → logprob: -9.659529685974121
    10. ',j' → logprob: -9.909529685974121

Token 446: 'session' (ID: 11854)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4228239953517914
    2. '=' → logprob: -1.5478240251541138
    3. ',' → logprob: -2.047823905944824
    4. ' ' → logprob: -6.672823905944824
    5. ' ,' → logprob: -7.297823905944824
    6. '<|end|>' → logprob: -7.797823905944824
    7. ')' → logprob: -8.922823905944824
    8. 's' → logprob: -9.047823905944824
    9. '<|end|>' → logprob: -10.422823905944824
    10. ']' → logprob: -10.547823905944824

Token 447: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5930852293968201
    2. ',' → logprob: -1.4680852890014648
    3. '=' → logprob: -1.7180852890014648
    4. ')' → logprob: -4.468085289001465
    5. '<|end|>' → logprob: -4.718085289001465
    6. ']' → logprob: -5.718085289001465
    7. '[idx' → logprob: -5.968085289001465
    8. '[' → logprob: -6.093085289001465
    9. ',j' → logprob: -6.343085289001465
    10. ' ' → logprob: -6.343085289001465

Token 448: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.02519960328936577
    2. ' float' → logprob: -4.6501994132995605
    3. '100' → logprob: -5.5251994132995605
    4. '10' → logprob: -6.1501994132995605
    5. 'min' → logprob: -6.2751994132995605
    6. '1' → logprob: -6.4001994132995605
    7. '999' → logprob: -6.4001994132995605
    8. 'int' → logprob: -6.7751994132995605
    9. 'dist' → logprob: -7.2751994132995605
    10. 'len' → logprob: -7.6501994132995605

Token 449: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.014779530465602875
    2. 'int' → logprob: -5.514779567718506
    3. '10' → logprob: -5.889779567718506
    4. '100' → logprob: -6.514779567718506
    5. '999' → logprob: -6.639779567718506
    6. 'min' → logprob: -6.764779567718506
    7. 'dist' → logprob: -6.889779567718506
    8. '1' → logprob: -7.264779567718506
    9. '0' → logprob: -7.764779567718506
    10. '[' → logprob: -7.764779567718506

Token 450: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018573742359876633
    2. '00' → logprob: -4.393573760986328
    3. '000' → logprob: -5.893573760986328
    4. '**' → logprob: -5.893573760986328
    5. '<|end|>' → logprob: -8.768573760986328
    6. ' ' → logprob: -9.018573760986328
    7. ',' → logprob: -10.018573760986328
    8. '^' → logprob: -10.268573760986328
    9. '1' → logprob: -10.518573760986328
    10. ' **' → logprob: -10.643573760986328

Token 451: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.3774581253528595
    2. '10' → logprob: -2.002458095550537
    3. '15' → logprob: -2.627458095550537
    4. '6' → logprob: -3.627458095550537
    5. '8' → logprob: -4.002458095550537
    6. '7' → logprob: -4.002458095550537
    7. '12' → logprob: -4.127458095550537
    8. '18' → logprob: -4.502458095550537
    9. '20' → logprob: -5.127458095550537
    10. '5' → logprob: -5.502458095550537

Token 452: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 453: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 454: ' dist' (ID: 3601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20206496119499207
    2. ' for' → logprob: -1.7020649909973145
    3. '<|end|>' → logprob: -7.9520649909973145
    4. ' ' → logprob: -9.452064514160156
    5. '
' → logprob: -10.452064514160156
    6. 'n' → logprob: -10.452064514160156
    7. '	for' → logprob: -11.077064514160156
    8. 'i' → logprob: -11.202064514160156
    9. 'while' → logprob: -11.327064514160156
    10. ' n' → logprob: -11.327064514160156

Token 455: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.5996077656745911
    2. '_min' → logprob: -0.8496077656745911
    3. '_next' → logprob: -4.349607944488525
    4. '_max' → logprob: -6.599607944488525
    5. '[' → logprob: -6.849607944488525
    6. 'from' → logprob: -6.849607944488525
    7. 'temp' → logprob: -6.849607944488525
    8. 'min' → logprob: -7.099607944488525
    9. ' =' → logprob: -7.599607944488525
    10. '=' → logprob: -7.724607944488525

Token 456: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.046293776482343674
    2. 'min' → logprob: -4.42129373550415
    3. ',' → logprob: -4.54629373550415
    4. '<|end|>' → logprob: -5.29629373550415
    5. '=' → logprob: -5.42129373550415
    6. '_max' → logprob: -5.54629373550415
    7. ' =' → logprob: -5.92129373550415
    8. 'import' → logprob: -6.79629373550415
    9. '[min' → logprob: -7.04629373550415
    10. '[' → logprob: -7.29629373550415

Token 457: '_not' (ID: 17599)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.5015883445739746
    2. ' =' → logprob: -2.3765883445739746
    3. 'pos' → logprob: -2.5015883445739746
    4. '=' → logprob: -2.5015883445739746
    5. ',' → logprob: -2.6265883445739746
    6. '_min' → logprob: -3.7515883445739746
    7. '_positions' → logprob: -4.501588344573975
    8. 'min' → logprob: -5.001588344573975
    9. 'from' → logprob: -5.376588344573975
    10. 'import' → logprob: -5.501588344573975

Token 458: '_pos' (ID: 14692)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10970693826675415
    2. '_pos' → logprob: -2.7347068786621094
    3. 'in' → logprob: -3.7347068786621094
    4. 'poss' → logprob: -4.859706878662109
    5. 'end' → logprob: -6.859706878662109
    6. 'found' → logprob: -7.109706878662109
    7. '_end' → logprob: -7.359706878662109
    8. 'del' → logprob: -7.484706878662109
    9. '_in' → logprob: -7.984706878662109
    10. 'finished' → logprob: -7.984706878662109

Token 459: 'session' (ID: 11854)
  Prédit: 'session'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'session' → logprob: -0.00019936825265176594
    2. 's' → logprob: -9.375199317932129
    3. 'ession' → logprob: -10.500199317932129
    4. 'sessions' → logprob: -10.500199317932129
    5. '_session' → logprob: -11.250199317932129
    6. 'SESSION' → logprob: -11.500199317932129
    7. 'ss' → logprob: -11.875199317932129
    8. '(session' → logprob: -12.375199317932129
    9. '.session' → logprob: -12.500199317932129
    10. '#' → logprob: -13.125199317932129

Token 460: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3485729694366455
    2. '=' → logprob: -1.2235729694366455
    3. ',' → logprob: -9.848572731018066
    4. ' ' → logprob: -10.598572731018066
    5. '_pos' → logprob: -11.098572731018066
    6. '   ' → logprob: -11.723572731018066
    7. 'pos' → logprob: -12.098572731018066
    8. '  ' → logprob: -13.223572731018066
    9. '=[]' → logprob: -13.348572731018066
    10. 'import' → logprob: -13.473572731018066

Token 461: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0021905910689383745
    2. ' ' → logprob: -6.252190589904785
    3. 'float' → logprob: -9.002190589904785
    4. '1' → logprob: -9.627190589904785
    5. '-' → logprob: -11.377190589904785
    6. '100' → logprob: -11.502190589904785
    7. '0' → logprob: -11.502190589904785
    8. '   ' → logprob: -11.752190589904785
    9. 'dist' → logprob: -11.752190589904785
    10. 'int' → logprob: -12.127190589904785

Token 462: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00021152703266125172
    2. ' ' → logprob: -9.250211715698242
    3. 'float' → logprob: -10.250211715698242
    4. '1' → logprob: -10.750211715698242
    5. '0' → logprob: -11.250211715698242
    6. '-' → logprob: -11.250211715698242
    7. 'int' → logprob: -11.625211715698242
    8. '100' → logprob: -11.750211715698242
    9. '   ' → logprob: -12.750211715698242
    10. 'dist' → logprob: -13.250211715698242

Token 463: '**' (ID: 410)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.009196130558848381
    2. '9' → logprob: -5.2591962814331055
    3. '**' → logprob: -6.1341962814331055
    4. '8' → logprob: -7.7591962814331055
    5. '7' → logprob: -8.009196281433105
    6. '15' → logprob: -8.134196281433105
    7. '6' → logprob: -8.384196281433105
    8. '12' → logprob: -8.884196281433105
    9. '17' → logprob: -9.134196281433105
    10. '```' → logprob: -9.259196281433105

Token 464: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.012659267522394657
    2. '15' → logprob: -5.762659072875977
    3. '9' → logprob: -5.887659072875977
    4. '17' → logprob: -6.137659072875977
    5. '10' → logprob: -7.262659072875977
    6. '16' → logprob: -7.387659072875977
    7. '12' → logprob: -7.512659072875977
    8. '8' → logprob: -7.512659072875977
    9. '6' → logprob: -7.637659072875977
    10. '14' → logprob: -8.012659072875977

Token 465: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6607779264450073
    2. '<|end|>' → logprob: -0.7857779264450073
    3. '                ' → logprob: -4.410778045654297
    4. ' ' → logprob: -5.035778045654297
    5. '              ' → logprob: -5.785778045654297
    6. '<|end|>' → logprob: -6.535778045654297
    7. ',' → logprob: -6.660778045654297
    8. ')' → logprob: -7.035778045654297
    9. '                   ' → logprob: -7.785778045654297
    10. '           ' → logprob: -8.035778045654297

Token 466: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5623033046722412
    2. ' for' → logprob: -1.4373033046722412
    3. '               ' → logprob: -2.187303304672241
    4. '<|end|>' → logprob: -2.937303304672241
    5. 'v' → logprob: -5.06230354309082
    6. 'if' → logprob: -5.43730354309082
    7. 'while' → logprob: -6.31230354309082
    8. ' if' → logprob: -6.43730354309082
    9. '           ' → logprob: -6.56230354309082
    10. '                   ' → logprob: -6.68730354309082

Token 468: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31314659118652344
    2. 'idx' → logprob: -1.6881465911865234
    3. ' i' → logprob: -3.4381465911865234
    4. 'k' → logprob: -3.8131465911865234
    5. 'j' → logprob: -4.563146591186523
    6. ' idx' → logprob: -5.063146591186523
    7. 'pos' → logprob: -5.563146591186523
    8. 'v' → logprob: -6.563146591186523
    9. 'next' → logprob: -7.563146591186523
    10. 'ix' → logprob: -7.750646591186523

Token 469: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02715744636952877
    2. 'in' → logprob: -3.9021575450897217
    3. ',' → logprob: -5.402157306671143
    4. ' ' → logprob: -6.902157306671143
    5. ' ,' → logprob: -7.652157306671143
    6. ' i' → logprob: -9.1521577835083
    7. '	in' → logprob: -9.1521577835083
    8. 'n' → logprob: -9.9021577835083
    9. ',v' → logprob: -10.4021577835083
    10. ' 
' → logprob: -10.5271577835083

Token 470: ' o' (ID: 293)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9481528997421265
    2. ' v' → logprob: -1.5731528997421265
    3. 't' → logprob: -3.573153018951416
    4. 'j' → logprob: -3.573153018951416
    5. ' t' → logprob: -3.573153018951416
    6. 'pos' → logprob: -3.698153018951416
    7. 'x' → logprob: -3.698153018951416
    8. 'o' → logprob: -3.948153018951416
    9. ' j' → logprob: -3.948153018951416
    10. 'order' → logprob: -4.198153018951416

Token 471: ' in' (ID: 306)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11270835250616074
    2. ',' → logprob: -2.737708330154419
    3. 'rd' → logprob: -3.737708330154419
    4. ' in' → logprob: -4.987708568572998
    5. 'f' → logprob: -5.612708568572998
    6. 'b' → logprob: -6.487708568572998
    7. 'in' → logprob: -6.612708568572998
    8. 'p' → logprob: -6.862708568572998
    9. 's' → logprob: -7.237708568572998
    10. 'n' → logprob: -8.11270809173584

Token 472: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.14318695664405823
    2. ' enumerate' → logprob: -2.0181870460510254
    3. 'order' → logprob: -8.643186569213867
    4. 'end' → logprob: -8.768186569213867
    5. 'zip' → logprob: -9.643186569213867
    6. 'range' → logprob: -10.018186569213867
    7. ' zip' → logprob: -10.643186569213867
    8. '[(' → logprob: -11.143186569213867
    9. ' order' → logprob: -12.018186569213867
    10. ' end' → logprob: -12.768186569213867

Token 473: '(order' (ID: 33050)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.009815115481615067
    2. 'range' → logprob: -5.009815216064453
    3. 'end' → logprob: -6.384815216064453
    4. 't' → logprob: -7.634815216064453
    5. ' order' → logprob: -8.259815216064453
    6. 'enumer' → logprob: -8.259815216064453
    7. '(order' → logprob: -8.509815216064453
    8. 'n' → logprob: -8.884815216064453
    9. '[end' → logprob: -10.884815216064453
    10. '[' → logprob: -11.759815216064453

Token 474: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22648049890995026
    2. '):
' → logprob: -1.601480484008789
    3. ',' → logprob: -7.101480484008789
    4. '):
' → logprob: -9.976480484008789
    5. ':' → logprob: -10.476480484008789
    6. '   ' → logprob: -10.851480484008789
    7. '       ' → logprob: -10.976480484008789
    8. '[' → logprob: -10.976480484008789
    9. '):

' → logprob: -10.976480484008789
    10. '():
' → logprob: -10.976480484008789

Token 475: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15155653655529022
    2. '<|end|>' → logprob: -2.6515564918518066
    3. ':' → logprob: -3.0265564918518066
    4. ',' → logprob: -5.151556491851807
    5. '           ' → logprob: -5.901556491851807
    6. '                  ' → logprob: -6.276556491851807
    7. '<|end|>' → logprob: -6.276556491851807
    8. '               ' → logprob: -6.526556491851807
    9. '                    ' → logprob: -6.526556491851807
    10. '   ' → logprob: -6.526556491851807

Token 476: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 477: ' not' (ID: 625)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.0175654888153076
    2. 'i' → logprob: -1.1425654888153076
    3. ' o' → logprob: -2.0175654888153076
    4. ' i' → logprob: -2.0175654888153076
    5. ' not' → logprob: -4.517565727233887
    6. 'len' → logprob: -4.892565727233887
    7. 'v' → logprob: -4.892565727233887
    8. 'not' → logprob: -5.267565727233887
    9. ' v' → logprob: -5.642565727233887
    10. '(i' → logprob: -6.017565727233887

Token 478: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.9536348581314087
    2. 'i' → logprob: -1.0786348581314087
    3. '(i' → logprob: -2.328634738922119
    4. ' o' → logprob: -2.828634738922119
    5. ' i' → logprob: -2.953634738922119
    6. '(o' → logprob: -3.453634738922119
    7. ' (' → logprob: -4.578634738922119
    8. 'end' → logprob: -4.828634738922119
    9. '(' → logprob: -5.578634738922119
    10. ' end' → logprob: -6.328634738922119

Token 479: ':
' (ID: 734)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.25858691334724426
    2. '[' → logprob: -1.8835868835449219
    3. ':' → logprob: -2.633586883544922
    4. ' ' → logprob: -6.883586883544922
    5. '):' → logprob: -7.258586883544922
    6. ' :' → logprob: -7.883586883544922
    7. ' and' → logprob: -8.133586883544922
    8. ':
' → logprob: -8.758586883544922
    9. ' or' → logprob: -8.883586883544922
    10. 'and' → logprob: -9.133586883544922

Token 480: '                       ' (ID: 968)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08280603587627411
    2. '                       ' → logprob: -3.70780611038208
    3. ':
' → logprob: -3.95780611038208
    4. ' :' → logprob: -4.08280611038208
    5. '<|end|>' → logprob: -4.58280611038208
    6. ' :
' → logprob: -6.33280611038208
    7. ' and' → logprob: -6.45780611038208
    8. '                   ' → logprob: -6.45780611038208
    9. ',' → logprob: -6.83280611038208
    10. ' ' → logprob: -6.83280611038208

Token 481: ' continue' (ID: 4901)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.548764705657959
    2. ' continue' → logprob: -1.423764705657959
    3. '<|end|>' → logprob: -2.798764705657959
    4. ' ' → logprob: -3.173764705657959
    5. '                       ' → logprob: -3.548764705657959
    6. '                   ' → logprob: -3.923764705657959
    7. '                               ' → logprob: -5.173764705657959
    8. 'continue' (adapté à ' continue') → logprob: -5.548764705657959
    9. '   ' → logprob: -5.673764705657959
    10. '               ' → logprob: -6.298764705657959

Token 482: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23226091265678406
    2. '<|end|>' → logprob: -1.7322609424591064
    3. '                       ' → logprob: -4.607260704040527
    4. ':' → logprob: -5.357260704040527
    5. '               ' → logprob: -5.607260704040527
    6. ')' → logprob: -6.232260704040527
    7. '
' → logprob: -6.607260704040527
    8. '           ' → logprob: -6.732260704040527
    9. '   ' → logprob: -6.857260704040527
    10. '       ' → logprob: -6.857260704040527

Token 483: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2929475009441376
    2. '<|end|>' → logprob: -1.54294753074646
    3. '               ' → logprob: -4.667947292327881
    4. '   ' → logprob: -4.792947292327881
    5. ')' → logprob: -5.292947292327881
    6. '                       ' → logprob: -5.417947292327881
    7. ' ' → logprob: -6.042947292327881
    8. '           ' → logprob: -6.167947292327881
    9. '
' → logprob: -6.292947292327881
    10. '       ' → logprob: -6.792947292327881

Token 484: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.537299633026123
    2. ' o' → logprob: -1.787299633026123
    3. ' dist' → logprob: -1.912299633026123
    4. ' v' → logprob: -2.162299633026123
    5. ' t' → logprob: -2.537299633026123
    6. 'dist' → logprob: -2.787299633026123
    7. ' not' → logprob: -3.787299633026123
    8. 't' → logprob: -3.787299633026123
    9. 'i' → logprob: -3.912299633026123
    10. ' len' → logprob: -4.037299633026123

Token 486: ' <=' (ID: 5017)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2168872207403183
    2. '==' → logprob: -2.9668872356414795
    3. ',' → logprob: -3.0918872356414795
    4. ' in' → logprob: -3.4668872356414795
    5. ' not' → logprob: -4.2168869972229
    6. ' >=' → logprob: -4.4668869972229
    7. ' <' → logprob: -4.5918869972229
    8. '<|end|>' → logprob: -4.9668869972229
    9. ' ' → logprob: -5.2168869972229
    10. ' ,' → logprob: -5.2168869972229

Token 487: ' last' (ID: 2174)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8618937730789185
    2. '0' → logprob: -1.9868937730789185
    3. 'idx' → logprob: -2.111893653869629
    4. 'v' → logprob: -2.361893653869629
    5. 'last' → logprob: -2.361893653869629
    6. 'dist' → logprob: -2.611893653869629
    7. ' ' → logprob: -2.986893653869629
    8. 'n' → logprob: -2.986893653869629
    9. '1' → logprob: -3.111893653869629
    10. 'time' → logprob: -3.486893653869629

Token 488: '_return' (ID: 29287)
  Prédit: '_return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_return' → logprob: -0.044602032750844955
    2. 'return' → logprob: -3.6696019172668457
    3. 'idx' → logprob: -5.044601917266846
    4. 'order' → logprob: -5.919601917266846
    5. '_order' → logprob: -6.044601917266846
    6. 'j' → logprob: -6.169601917266846
    7. '_end' → logprob: -7.169601917266846
    8. '_idx' → logprob: -7.544601917266846
    9. 'end' → logprob: -7.669601917266846
    10. 's' → logprob: -8.544602394104004

Token 489: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.043968867510557175
    2. 'time' → logprob: -3.293968915939331
    3. '_idx' → logprob: -5.668968677520752
    4. 'idx' → logprob: -7.043968677520752
    5. 'index' → logprob: -8.16896915435791
    6. ')' → logprob: -8.79396915435791
    7. ' time' → logprob: -9.29396915435791
    8. ' ' → logprob: -9.29396915435791
    9. 't' → logprob: -9.29396915435791
    10. ']' → logprob: -9.54396915435791

Token 490: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6397331357002258
    2. ' and' → logprob: -1.139733076095581
    3. ':
' → logprob: -2.014733076095581
    4. '                       ' → logprob: -4.63973331451416
    5. ' or' → logprob: -5.88973331451416
    6. ' :' → logprob: -6.01473331451416
    7. '                   ' → logprob: -6.63973331451416
    8. ' :
' → logprob: -6.88973331451416
    9. 'and' → logprob: -7.01473331451416
    10. '                           ' → logprob: -8.13973331451416

Token 491: '                       ' (ID: 968)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3675406277179718
    2. '                       ' → logprob: -1.7425405979156494
    3. ' :' → logprob: -3.2425405979156494
    4. '                   ' → logprob: -3.7425405979156494
    5. ' and' → logprob: -3.9925405979156494
    6. '<|end|>' → logprob: -4.1175408363342285
    7. ':
' → logprob: -4.3675408363342285
    8. ' ' → logprob: -4.7425408363342285
    9. ' :
' → logprob: -6.1175408363342285
    10. '                        ' → logprob: -6.3675408363342285

Token 492: ' for' (ID: 395)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.374958336353302
    2. ' continue' → logprob: -2.1249582767486572
    3. '                           ' → logprob: -2.1249582767486572
    4. ' ' → logprob: -3.8749582767486572
    5. '                   ' → logprob: -4.499958515167236
    6. 'continue' → logprob: -4.999958515167236
    7. '                               ' → logprob: -5.124958515167236
    8. '<|end|>' → logprob: -5.624958515167236
    9. '                        ' → logprob: -5.749958515167236
    10. '               ' → logprob: -6.124958515167236

Token 493: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3240172266960144
    2. ' j' → logprob: -1.3240172863006592
    3. 'v' → logprob: -5.19901704788208
    4. ' v' → logprob: -6.44901704788208
    5. 'k' → logprob: -7.57401704788208
    6. 'pos' → logprob: -8.074017524719238
    7. 'idx' → logprob: -8.199017524719238
    8. '```' → logprob: -8.386517524719238
    9. ' idx' → logprob: -8.886517524719238
    10. 'x' → logprob: -9.074017524719238

Token 494: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019367491826415062
    2. ' in' → logprob: -4.144367694854736
    3. ' ,' → logprob: -6.269367694854736
    4. 'in' → logprob: -7.394367694854736
    5. '<|end|>' → logprob: -8.894367218017578
    6. ',v' → logprob: -9.269367218017578
    7. ',
' → logprob: -9.394367218017578
    8. ',o' → logprob: -9.644367218017578
    9. ',k' → logprob: -9.769367218017578
    10. 'd' → logprob: -10.019367218017578

Token 495: ' dst' (ID: 23480)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.2807286977767944
    2. ' o' → logprob: -2.280728816986084
    3. 'v' → logprob: -2.405728816986084
    4. 'k' → logprob: -2.780728816986084
    5. 'p' → logprob: -2.780728816986084
    6. 'order' → logprob: -2.905728816986084
    7. ' order' → logprob: -3.155728816986084
    8. ' v' → logprob: -3.280728816986084
    9. ' p' → logprob: -3.530728816986084
    10. 'd' → logprob: -3.530728816986084

Token 496: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09689179807901382
    2. 'in' → logprob: -2.8468918800354004
    3. ',' → logprob: -3.5968918800354004
    4. '_' → logprob: -5.9718918800354
    5. 'ination' → logprob: -6.7218918800354
    6. ')' → logprob: -6.9718918800354
    7. 'n' → logprob: -8.346891403198242
    8. 'o' → logprob: -8.596891403198242
    9. 's' → logprob: -8.596891403198242
    10. ' ,' → logprob: -8.721891403198242

Token 497: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.5853984951972961
    2. ' enumerate' → logprob: -0.8353984951972961
    3. 'o' → logprob: -4.9603986740112305
    4. 'v' → logprob: -6.7103986740112305
    5. ' o' → logprob: -7.5853986740112305
    6. '[o' → logprob: -8.96039867401123
    7. ' v' → logprob: -9.33539867401123
    8. ' ' → logprob: -9.46039867401123
    9. 'order' → logprob: -9.46039867401123
    10. 'range' → logprob: -9.83539867401123

Token 498: '(o' (ID: 18928)
  Prédit: ' o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' o' → logprob: -0.39339807629585266
    2. 'o' → logprob: -1.5183980464935303
    3. ' order' → logprob: -3.6433980464935303
    4. '(o' → logprob: -3.7683980464935303
    5. 'order' → logprob: -3.8933980464935303
    6. ' dist' → logprob: -4.518398284912109
    7. ' v' → logprob: -5.268398284912109
    8. 'dist' → logprob: -5.268398284912109
    9. 'v' → logprob: -5.643398284912109
    10. ' t' → logprob: -5.893398284912109

Token 499: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05443013086915016
    2. '):
' → logprob: -3.0544302463531494
    3. '                           ' → logprob: -5.55443000793457
    4. '():' → logprob: -7.80443000793457
    5. '                       ' → logprob: -7.92943000793457
    6. ' ):' → logprob: -8.30443000793457
    7. '                               ' → logprob: -9.05443000793457
    8. '):
' → logprob: -9.30443000793457
    9. '():
' → logprob: -9.42943000793457
    10. '                   ' → logprob: -9.42943000793457

Token 500: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.380338191986084
    2. '<|end|>' → logprob: -1.380338191986084
    3. '                               ' → logprob: -3.380338191986084
    4. '                       ' → logprob: -4.380338191986084
    5. ':' → logprob: -5.005338191986084
    6. '):' → logprob: -6.005338191986084
    7. '                            ' → logprob: -6.255338191986084
    8. '<|end|>' → logprob: -6.630338191986084
    9. ')' → logprob: -7.130338191986084
    10. ' ' → logprob: -7.380338191986084

Token 501: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4258389174938202
    2. '                               ' → logprob: -1.6758389472961426
    3. '<|end|>' → logprob: -2.1758389472961426
    4. '                           ' → logprob: -3.9258389472961426
    5. '                            ' → logprob: -4.550838947296143
    6. ' )' → logprob: -5.925838947296143
    7. '                                ' → logprob: -6.050838947296143
    8. ' if' → logprob: -6.300838947296143
    9. ' ' → logprob: -6.550838947296143
    10. ')' → logprob: -6.550838947296143

Token 502: ' dst' (ID: 23480)
  Prédit: ' dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dst' → logprob: -0.19951550662517548
    2. 'dst' → logprob: -1.824515461921692
    3. ' not' → logprob: -4.699515342712402
    4. ' j' → logprob: -6.324515342712402
    5. ' t' → logprob: -6.574515342712402
    6. 'not' → logprob: -6.949515342712402
    7. ' dist' → logprob: -7.324515342712402
    8. '(dst' → logprob: -7.324515342712402
    9. ' o' → logprob: -7.699515342712402
    10. 't' → logprob: -7.824515342712402

Token 503: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15660236775875092
    2. '==' → logprob: -2.156602382659912
    3. ' !=' → logprob: -4.031602382659912
    4. '<|end|>' → logprob: -6.156602382659912
    5. ' <' → logprob: -6.281602382659912
    6. ')' → logprob: -6.406602382659912
    7. ' <=' → logprob: -7.031602382659912
    8. ' >=' → logprob: -7.156602382659912
    9. ' ' → logprob: -7.281602382659912
    10. ' not' → logprob: -7.531602382659912

Token 504: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4863981306552887
    2. ' end' → logprob: -0.9863981008529663
    3. 'order' → logprob: -5.111398220062256
    4. ' order' → logprob: -5.611398220062256
    5. ' remaining' → logprob: -7.736398220062256
    6. '[end' → logprob: -7.986398220062256
    7. 'return' → logprob: -8.486397743225098
    8. 'remaining' → logprob: -8.611397743225098
    9. ' v' → logprob: -8.736397743225098
    10. 'v' → logprob: -8.923897743225098

Token 505: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.00012487331696320325
    2. '_' → logprob: -9.87512493133545
    3. ')' → logprob: -10.37512493133545
    4. '_orders' → logprob: -11.00012493133545
    5. 'order' → logprob: -12.12512493133545
    6. '_)' → logprob: -12.87512493133545
    7. '_set' → logprob: -13.25012493133545
    8. '```' → logprob: -13.37512493133545
    9. '_return' → logprob: -13.50012493133545
    10. '
' → logprob: -13.62512493133545

Token 506: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47556614875793457
    2. ':' → logprob: -1.3505661487579346
    3. '                               ' → logprob: -2.9755661487579346
    4. ':
' → logprob: -3.1005661487579346
    5. '                           ' → logprob: -4.6005659103393555
    6. '):
' → logprob: -5.8505659103393555
    7. '<|end|>' → logprob: -5.9755659103393555
    8. ',' → logprob: -6.2255659103393555
    9. '):' → logprob: -6.2255659103393555
    10. ')' → logprob: -6.3505659103393555

Token 507: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.36417892575263977
    2. ' and' → logprob: -2.1141788959503174
    3. ':' → logprob: -2.7391788959503174
    4. '<|end|>' → logprob: -2.8641788959503174
    5. '                           ' → logprob: -3.2391788959503174
    6. ':
' → logprob: -4.2391791343688965
    7. '):
' → logprob: -6.6141791343688965
    8. ' ' → logprob: -6.9891791343688965
    9. '):' → logprob: -7.1141791343688965
    10. ',' → logprob: -7.1141791343688965

Token 508: ' o' (ID: 293)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.28165850043296814
    2. '<|end|>' → logprob: -2.406658411026001
    3. '                           ' → logprob: -2.781658411026001
    4. ' ' → logprob: -3.156658411026001
    5. ' continue' → logprob: -4.15665864944458
    6. '                                   ' → logprob: -5.40665864944458
    7. '                            ' → logprob: -5.40665864944458
    8. ')' → logprob: -5.40665864944458
    9. ' ' → logprob: -5.78165864944458
    10. ' return' → logprob: -6.15665864944458

Token 509: '[j' (ID: 7895)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5892419219017029
    2. ':
' → logprob: -2.5892419815063477
    3. '                           ' → logprob: -2.7142419815063477
    4. ' continue' → logprob: -2.7142419815063477
    5. 'continue' → logprob: -2.8392419815063477
    6. '=' → logprob: -2.9642419815063477
    7. '                               ' → logprob: -2.9642419815063477
    8. '==' → logprob: -3.9642419815063477
    9. ' =' → logprob: -4.089241981506348
    10. '[j' → logprob: -5.214241981506348

Token 510: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08550333231687546
    2. ']' → logprob: -3.335503339767456
    3. ']=' → logprob: -3.710503339767456
    4. ' =' → logprob: -3.835503339767456
    5. ']==' → logprob: -8.835503578186035
    6. '==' → logprob: -10.210503578186035
    7. ' ]' → logprob: -10.335503578186035
    8. ']+=' → logprob: -11.085503578186035
    9. ')' → logprob: -11.210503578186035
    10. ',' → logprob: -11.710503578186035

Token 511: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003188286442309618
    2. ' =' → logprob: -5.753188133239746
    3. '=
' → logprob: -11.878188133239746
    4. '=None' → logprob: -13.503188133239746
    5. '=False' → logprob: -13.878188133239746
    6. ']=' → logprob: -15.753188133239746
    7. '                               ' → logprob: -15.878188133239746
    8. '                           ' → logprob: -16.128189086914062
    9. '=True' → logprob: -16.253189086914062
    10. ' ' → logprob: -16.253189086914062

Token 512: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5337971448898315
    2. '0' → logprob: -0.9087971448898315
    3. 'None' → logprob: -5.158797264099121
    4. 'False' → logprob: -6.158797264099121
    5. ' -' → logprob: -6.783797264099121
    6. ' ' → logprob: -7.283797264099121
    7. ' None' → logprob: -8.408797264099121
    8. '[]' → logprob: -8.533797264099121
    9. 'float' → logprob: -9.033797264099121
    10. '''' → logprob: -10.158797264099121

Token 513: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4711267948150635
    2. '0' → logprob: -1.0961267948150635
    3. 'None' → logprob: -3.5961267948150635
    4. '[]' → logprob: -5.221126556396484
    5. 'float' → logprob: -5.596126556396484
    6. 'False' → logprob: -5.721126556396484
    7. '''' → logprob: -7.346126556396484
    8. '[]
' → logprob: -8.346126556396484
    9. '""' → logprob: -8.721126556396484
    10. '999' → logprob: -8.971126556396484

Token 514: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 515: '                           ' (ID: 1686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 516: ' else' (ID: 1203)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.11347796767950058
    2. ' else' → logprob: -2.988477945327759
    3. '                               ' → logprob: -4.113478183746338
    4. '<|end|>' → logprob: -4.238478183746338
    5. ' ' → logprob: -4.613478183746338
    6. '                            ' → logprob: -5.113478183746338
    7. 'else' (adapté à ' else') → logprob: -5.988478183746338
    8. '                       ' → logprob: -6.738478183746338
    9. ' return' → logprob: -6.988478183746338
    10. ' remaining' → logprob: -7.238478183746338

Token 517: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.06228012591600418
    2. ':' → logprob: -3.4372801780700684
    3. '<|end|>' → logprob: -4.312280178070068
    4. ':
' → logprob: -4.937280178070068
    5. '                           ' → logprob: -5.937280178070068
    6. ' and' → logprob: -6.812280178070068
    7. '                                ' → logprob: -7.187280178070068
    8. '                                   ' → logprob: -8.06227970123291
    9. '                                
' → logprob: -8.06227970123291
    10. '                              ' → logprob: -8.18727970123291

Token 518: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.23349444568157196
    2. ' ' → logprob: -1.8584944009780884
    3. ' return' → logprob: -4.108494281768799
    4. '<|end|>' → logprob: -4.358494281768799
    5. '                           ' → logprob: -5.608494281768799
    6. '                                ' → logprob: -5.858494281768799
    7. ' ' → logprob: -5.858494281768799
    8. '                                   ' → logprob: -6.108494281768799
    9. '                              ' → logprob: -6.233494281768799
    10. '                            ' → logprob: -6.983494281768799

Token 519: ' dist' (ID: 3601)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -1.271409034729004
    2. ' remaining' → logprob: -1.521409034729004
    3. ' if' → logprob: -1.646409034729004
    4. ' return' → logprob: -2.396409034729004
    5. ' dist' → logprob: -2.771409034729004
    6. ' v' → logprob: -3.021409034729004
    7. ' time' → logprob: -3.896409034729004
    8. '                                   ' → logprob: -4.271409034729004
    9. ' cost' → logprob: -4.896409034729004
    10. ' n' → logprob: -5.021409034729004

Token 520: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.01782527007162571
    2. '_min' → logprob: -4.267825126647949
    3. '[' → logprob: -6.267825126647949
    4. '_' → logprob: -7.892825126647949
    5. '[temp' → logprob: -8.39282512664795
    6. ' =' → logprob: -8.51782512664795
    7. '=' → logprob: -8.51782512664795
    8. '_tmp' → logprob: -8.76782512664795
    9. '_next' → logprob: -9.14282512664795
    10. '[i' → logprob: -9.39282512664795

Token 521: ' =' (ID: 314)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0025823204778134823
    2. 'min' → logprob: -6.752582550048828
    3. ' =' → logprob: -7.877582550048828
    4. '=' → logprob: -8.127582550048828
    5. '_temp' → logprob: -8.127582550048828
    6. '_next' → logprob: -9.377582550048828
    7. '[min' → logprob: -9.752582550048828
    8. '=min' → logprob: -9.877582550048828
    9. '_max' → logprob: -10.002582550048828
    10. '_' → logprob: -10.127582550048828

Token 522: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2820237874984741
    2. ' dist' → logprob: -1.4070237874984741
    3. ' min' → logprob: -8.532023429870605
    4. 'min' → logprob: -8.657023429870605
    5. 'int' → logprob: -9.282023429870605
    6. ' ' → logprob: -9.782023429870605
    7. '   ' → logprob: -10.032023429870605
    8. '(dist' → logprob: -10.407023429870605
    9. ' int' → logprob: -10.532023429870605
    10. '	dist' → logprob: -10.532023429870605

Token 523: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.20000313222408295
    2. '[' → logprob: -1.8250031471252441
    3. '[o' → logprob: -4.700003147125244
    4. '[i' → logprob: -5.700003147125244
    5. '[next' → logprob: -6.075003147125244
    6. '[temp' → logprob: -6.825003147125244
    7. '_temp' → logprob: -7.200003147125244
    8. 'dist' → logprob: -8.075002670288086
    9. ',' → logprob: -8.325002670288086
    10. '[j' → logprob: -8.450002670288086

Token 524: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0028589628636837006
    2. '_from' → logprob: -7.252859115600586
    3. '_' → logprob: -7.377859115600586
    4. '_to' → logprob: -7.627859115600586
    5. ',' → logprob: -7.877859115600586
    6. '_temp' → logprob: -8.127859115600586
    7. '_,' → logprob: -9.377859115600586
    8. ' _' → logprob: -9.502859115600586
    9. '[' → logprob: -10.502859115600586
    10. ' ,' → logprob: -10.627859115600586

Token 525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04558460786938667
    2. '[' → logprob: -3.6705846786499023
    3. ',d' → logprob: -4.420584678649902
    4. '][' → logprob: -6.170584678649902
    5. ',j' → logprob: -6.170584678649902
    6. ',v' → logprob: -6.295584678649902
    7. ']' → logprob: -8.795584678649902
    8. ',i' → logprob: -9.045584678649902
    9. '[v' → logprob: -9.295584678649902
    10. ' ,' → logprob: -9.420584678649902

Token 526: ' dst' (ID: 23480)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.0017590753268450499
    2. ' dst' → logprob: -6.751759052276611
    3. '                               ' → logprob: -9.00175952911377
    4. 'j' → logprob: -9.12675952911377
    5. 'v' → logprob: -9.62675952911377
    6. 'idx' → logprob: -10.00175952911377
    7. '1' → logprob: -10.25175952911377
    8. '                           ' → logprob: -10.50175952911377
    9. 'dist' → logprob: -10.62675952911377
    10. 't' → logprob: -10.75175952911377

Token 527: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03265175223350525
    2. '                           ' → logprob: -4.407651901245117
    3. '<|end|>' → logprob: -5.157651901245117
    4. '                               ' → logprob: -5.282651901245117
    5. ')' → logprob: -5.407651901245117
    6. ']
' → logprob: -6.282651901245117
    7. ' ]' → logprob: -7.032651901245117
    8. '<|end|>' → logprob: -7.657651901245117
    9. ']+' → logprob: -8.782651901245117
    10. '           ' → logprob: -8.907651901245117

Token 528: '                               ' (ID: 2419)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4555581212043762
    2. '                               ' → logprob: -1.0805580615997314
    3. 'if' (adapté à ' if') → logprob: -3.7055580615997314
    4. '                                   ' → logprob: -6.5805583000183105
    5. '                           ' → logprob: -8.580557823181152
    6. '							' → logprob: -9.580557823181152
    7. '                                       ' → logprob: -9.955557823181152
    8. '                                ' → logprob: -9.955557823181152
    9. '```' → logprob: -10.455557823181152
    10. '               ' → logprob: -11.080557823181152

Token 530: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.23052555322647095
    2. 'dist' → logprob: -1.6055254936218262
    3. ' dst' → logprob: -6.105525493621826
    4. '(dist' → logprob: -6.730525493621826
    5. 'dst' → logprob: -7.105525493621826
    6. ' not' → logprob: -8.730525970458984
    7. 'not' → logprob: -9.605525970458984
    8. 'v' → logprob: -9.980525970458984
    9. ' v' → logprob: -10.043025970458984
    10. ' dest' → logprob: -10.105525970458984

Token 531: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.0001907855912577361
    2. '_next' → logprob: -9.000190734863281
    3. '_' → logprob: -10.875190734863281
    4. ' <' → logprob: -11.250190734863281
    5. '_tmp' → logprob: -11.500190734863281
    6. '<' → logprob: -11.875190734863281
    7. 'temp' → logprob: -12.625190734863281
    8. ' _' → logprob: -12.875190734863281
    9. '                               ' → logprob: -13.375190734863281
    10. '_TEMP' → logprob: -13.625190734863281

Token 532: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0494830422103405
    2. '<' → logprob: -3.174483060836792
    3. ' <=' → logprob: -5.174482822418213
    4. '<=' → logprob: -8.424483299255371
    5. ' ' → logprob: -8.549483299255371
    6. ' >' → logprob: -9.549483299255371
    7. ' ==' → logprob: -9.549483299255371
    8. ' <
' → logprob: -10.174483299255371
    9. '[' → logprob: -10.924483299255371
    10. '<int' → logprob: -11.049483299255371

Token 533: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004629484377801418
    2. ' dist' → logprob: -5.379629611968994
    3. '                               ' → logprob: -12.004629135131836
    4. '                                   ' → logprob: -14.004629135131836
    5. '(dist' → logprob: -15.004629135131836
    6. '	dist' → logprob: -15.129629135131836
    7. '                           ' → logprob: -15.254629135131836
    8. 'distance' → logprob: -15.254629135131836
    9. '10' → logprob: -15.754629135131836
    10. '
' → logprob: -16.129629135131836

Token 534: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -5.288163083605468e-05
    2. '_next' → logprob: -10.625052452087402
    3. '[v' → logprob: -12.125052452087402
    4. '_tmp' → logprob: -12.250052452087402
    5. '_min' → logprob: -12.375052452087402
    6. '[' → logprob: -12.625052452087402
    7. '_' → logprob: -13.625052452087402
    8. 'temp' → logprob: -13.750052452087402
    9. '[_' → logprob: -14.000052452087402
    10. ')' → logprob: -14.250052452087402

Token 535: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.001768243033438921
    2. '_not' → logprob: -6.751768112182617
    3. '_temp' → logprob: -7.626768112182617
    4. '_max' → logprob: -9.376768112182617
    5. '_' → logprob: -12.126768112182617
    6. '_next' → logprob: -12.251768112182617
    7. '_pos' → logprob: -12.251768112182617
    8. 'min' → logprob: -12.876768112182617
    9. ')' → logprob: -14.001768112182617
    10. '```' → logprob: -14.251768112182617

Token 536: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0363844633102417
    2. '_not' → logprob: -3.5363845825195312
    3. 'pos' → logprob: -5.411384582519531
    4. 'not' → logprob: -6.536384582519531
    5. '_min' → logprob: -7.411384582519531
    6. '_temp' → logprob: -10.786384582519531
    7. ')' → logprob: -11.161384582519531
    8. '[pos' → logprob: -12.286384582519531
    9. '```' → logprob: -12.286384582519531
    10. '	pos' → logprob: -12.411384582519531

Token 537: 'session' (ID: 11854)
  Prédit: 'session'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'session' → logprob: -0.021332690492272377
    2. 'ession' → logprob: -3.8963327407836914
    3. 's' → logprob: -8.396332740783691
    4. '_session' → logprob: -8.771332740783691
    5. 'sess' → logprob: -9.771332740783691
    6. 'sessions' → logprob: -10.146332740783691
    7. 'ess' → logprob: -10.646332740783691
    8. '   ' → logprob: -10.771332740783691
    9. '.session' → logprob: -10.896332740783691
    10. 'SESSION' → logprob: -11.146332740783691

Token 538: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06805375963449478
    2. ':' → logprob: -3.693053722381592
    3. '                               ' → logprob: -3.693053722381592
    4. ':
' → logprob: -4.568053722381592
    5. 'and' → logprob: -6.443053722381592
    6. '                           ' → logprob: -7.068053722381592
    7. '							' → logprob: -7.443053722381592
    8. ' :' → logprob: -7.693053722381592
    9. '                                   ' → logprob: -7.818053722381592
    10. '<|end|>' → logprob: -8.06805419921875

Token 539: '                                   ' (ID: 3523)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.42442792654037476
    2. '                                   ' → logprob: -1.5494279861450195
    3. ':' → logprob: -2.5494279861450195
    4. ' and' → logprob: -3.5494279861450195
    5. ':
' → logprob: -5.5494279861450195
    6. '                           ' → logprob: -5.5494279861450195
    7. '                                ' → logprob: -5.9244279861450195
    8. '                                       ' → logprob: -5.9244279861450195
    9. '<|end|>' → logprob: -5.9244279861450195
    10. '):' → logprob: -6.0494279861450195

Token 540: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.015136649832129478
    2. 'idx' → logprob: -4.76513671875
    3. '                               ' → logprob: -5.76513671875
    4. '                                   ' → logprob: -6.39013671875
    5. ' dist' → logprob: -6.64013671875
    6. '                                       ' → logprob: -8.89013671875
    7. 'dst' → logprob: -9.51513671875
    8. '                           ' → logprob: -10.39013671875
    9. ' idx' → logprob: -10.51513671875
    10. 'v' → logprob: -11.14013671875

Token 541: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -8.554343366995454e-05
    2. '_token' → logprob: -10.500085830688477
    3. '=' → logprob: -10.875085830688477
    4. 'temp' → logprob: -11.000085830688477
    5. '                               ' → logprob: -12.875085830688477
    6. '=temp' → logprob: -13.000085830688477
    7. '_t' → logprob: -13.250085830688477
    8. '	temp' → logprob: -13.375085830688477
    9. '_next' → logprob: -13.375085830688477
    10. '_tmp' → logprob: -13.375085830688477

Token 542: '_min' (ID: 15950)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6473933458328247
    2. '_min' → logprob: -0.8973933458328247
    3. ' =' → logprob: -2.897393226623535
    4. '_pos' → logprob: -4.647393226623535
    5. 'min' → logprob: -6.272393226623535
    6. '=min' → logprob: -6.897393226623535
    7. '_temp' → logprob: -7.772393226623535
    8. ',' → logprob: -7.772393226623535
    9. '=temp' → logprob: -9.147393226623535
    10. 'pos' → logprob: -9.522393226623535

Token 543: '_pos' (ID: 14692)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23932349681854248
    2. '=i' → logprob: -2.239323616027832
    3. ' =' → logprob: -3.114323616027832
    4. 'pos' → logprob: -3.239323616027832
    5. '_pos' → logprob: -4.114323616027832
    6. '=j' → logprob: -5.489323616027832
    7. '=index' → logprob: -7.864323616027832
    8. '=v' → logprob: -7.989323616027832
    9. '                               ' → logprob: -8.239323616027832
    10. '=temp' → logprob: -8.614323616027832

Token 544: 'session' (ID: 11854)
  Prédit: 'ession'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ession' → logprob: -0.4293844997882843
    2. 'session' → logprob: -1.054384469985962
    3. 'ess' → logprob: -8.554384231567383
    4. '_session' → logprob: -8.804384231567383
    5. 'oss' → logprob: -9.554384231567383
    6. 'Session' → logprob: -10.679384231567383
    7. 'sess' → logprob: -10.679384231567383
    8. 'ion' → logprob: -11.054384231567383
    9. 'essions' → logprob: -11.179384231567383
    10. '(session' → logprob: -11.179384231567383

Token 545: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2823811173439026
    2. ' =' → logprob: -1.4073810577392578
    3. ',' → logprob: -7.282381057739258
    4. '                                   ' → logprob: -9.032381057739258
    5. '                               ' → logprob: -9.782381057739258
    6. ')' → logprob: -9.907381057739258
    7. ']=' → logprob: -10.407381057739258
    8. '=j' → logprob: -10.407381057739258
    9. '=i' → logprob: -10.657381057739258
    10. '                                       ' → logprob: -10.782381057739258

Token 546: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0059302207082509995
    2. ' dist' → logprob: -5.130930423736572
    3. '(dist' → logprob: -14.130929946899414
    4. 'dst' → logprob: -14.755929946899414
    5. '                               ' → logprob: -15.755929946899414
    6. '	dist' → logprob: -16.130929946899414
    7. 'dest' → logprob: -16.880929946899414
    8. '                           ' → logprob: -17.130929946899414
    9. ' ' → logprob: -17.505929946899414
    10. '   ' → logprob: -17.880929946899414

Token 547: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.003962162882089615
    2. ' temp' → logprob: -6.37896203994751
    3. 'temp' → logprob: -7.37896203994751
    4. ' _' → logprob: -7.75396203994751
    5. '_' → logprob: -8.128962516784668
    6. ',' → logprob: -8.378962516784668
    7. '_dst' → logprob: -8.503962516784668
    8. '_next' → logprob: -9.378962516784668
    9. ' ,' → logprob: -9.878962516784668
    10. '[j' → logprob: -10.003962516784668

Token 548: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 549: '                                   ' (ID: 3523)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.09960127621889114
    2. 'i' → logprob: -2.7246012687683105
    3. ' idx' → logprob: -4.3496012687683105
    4. 'j' → logprob: -4.9746012687683105
    5. '                           ' → logprob: -5.5996012687683105
    6. ' i' → logprob: -6.0996012687683105
    7. 'v' → logprob: -6.5996012687683105
    8. 'dist' → logprob: -7.4746012687683105
    9. '                               ' → logprob: -7.7246012687683105
    10. 'dst' → logprob: -8.474601745605469

Token 551: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4364793300628662
    2. '=' → logprob: -1.0614793300628662
    3. ',' → logprob: -4.936479568481445
    4. '=i' → logprob: -8.061479568481445
    5. ' ' → logprob: -9.436479568481445
    6. ',i' → logprob: -10.311479568481445
    7. '<|end|>' → logprob: -10.311479568481445
    8. ' =
' → logprob: -10.436479568481445
    9. '=
' → logprob: -10.561479568481445
    10. '=j' → logprob: -10.811479568481445

Token 552: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09595812857151031
    2. 'j' → logprob: -2.7209582328796387
    3. ' i' → logprob: -3.7209582328796387
    4. ' j' → logprob: -6.845958232879639
    5. 'v' → logprob: -8.34595775604248
    6. ' ' → logprob: -10.09595775604248
    7. 'dst' → logprob: -10.22095775604248
    8. '	i' → logprob: -10.84595775604248
    9. '   ' → logprob: -11.28345775604248
    10. '0' → logprob: -11.28345775604248

Token 553: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 554: '                                   ' (ID: 3523)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 555: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.004641472361981869
    2. ' j' → logprob: -5.379641532897949
    3. '                                   ' → logprob: -11.25464153289795
    4. '                           ' → logprob: -12.87964153289795
    5. '                               ' → logprob: -13.00464153289795
    6. 'jx' → logprob: -13.87964153289795
    7. 'dst' → logprob: -14.50464153289795
    8. '	j' → logprob: -14.62964153289795
    9. ',j' → logprob: -15.50464153289795
    10. ' ' → logprob: -15.62964153289795

Token 556: 'dx' (ID: 22100)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09934517741203308
    2. ' =' → logprob: -3.0993452072143555
    3. '<|end|>' → logprob: -3.3493452072143555
    4. 'dx' → logprob: -4.4743452072143555
    5. '<|end|>' → logprob: -6.9743452072143555
    6. 'j' → logprob: -7.0993452072143555
    7. '=j' → logprob: -7.8493452072143555
    8. ' ' → logprob: -8.349345207214355
    9. 'd' → logprob: -8.724345207214355
    10. '_=' → logprob: -9.224345207214355

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0891345664858818
    2. ' =' → logprob: -2.464134454727173
    3. ',' → logprob: -9.214134216308594
    4. ' ' → logprob: -10.089134216308594
    5. '=j' → logprob: -10.839134216308594
    6. '<|end|>' → logprob: -10.839134216308594
    7. '=
' → logprob: -12.214134216308594
    8. '                               ' → logprob: -12.964134216308594
    9. ')' → logprob: -13.839134216308594
    10. ' j' → logprob: -13.839134216308594

Token 558: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0003815756645053625
    2. ' j' → logprob: -7.8753814697265625
    3. '	j' → logprob: -14.250381469726562
    4. '   ' → logprob: -14.625381469726562
    5. ' ' → logprob: -16.125381469726562
    6. '$j' → logprob: -16.750381469726562
    7. '  ' → logprob: -17.000381469726562
    8. '0' → logprob: -17.375381469726562
    9. 'dst' → logprob: -17.500381469726562
    10. '    ' → logprob: -17.625381469726562

Token 559: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 560: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 561: ' end' (ID: 1268)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.6111786961555481
    2. '<|end|>' → logprob: -1.8611786365509033
    3. '                           ' → logprob: -2.2361786365509033
    4. ')' → logprob: -3.1111786365509033
    5. '                                   ' → logprob: -3.4861786365509033
    6. '               ' → logprob: -3.8611786365509033
    7. '                                       ' → logprob: -4.111178874969482
    8. '       ' → logprob: -4.611178874969482
    9. '                                           ' → logprob: -4.611178874969482
    10. ' ' → logprob: -4.986178874969482

Token 562: '_order' (ID: 17446)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 563: ' =' (ID: 314)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.07121391594409943
    2. '.' → logprob: -2.696213960647583
    3. '<|end|>' → logprob: -7.446213722229004
    4. '.clear' → logprob: -8.446213722229004
    5. '.update' → logprob: -8.571213722229004
    6. '.remove' → logprob: -9.321213722229004
    7. '.union' → logprob: -9.321213722229004
    8. ' .' → logprob: -10.446213722229004
    9. '.dis' → logprob: -10.946213722229004
    10. 'add' → logprob: -11.071213722229004

Token 564: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0005109758349135518
    2. ' set' → logprob: -7.750511169433594
    3. '{' → logprob: -9.875511169433594
    4. '{}' → logprob: -10.625511169433594
    5. '	set' → logprob: -12.500511169433594
    6. ' ' → logprob: -14.750511169433594
    7. ')set' → logprob: -15.875511169433594
    8. '   ' → logprob: -16.125511169433594
    9. '(set' → logprob: -16.375511169433594
    10. '=set' → logprob: -16.500511169433594

Token 565: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05783069506287575
    2. '()
' → logprob: -2.932830810546875
    3. '<|end|>' → logprob: -5.932830810546875
    4. '()\' → logprob: -9.307830810546875
    5. ')' → logprob: -10.182830810546875
    6. '()

' → logprob: -10.682830810546875
    7. '())' → logprob: -10.807830810546875
    8. '   ' → logprob: -10.932830810546875
    9. '<|end|>' → logprob: -11.057830810546875
    10. '}' → logprob: -11.432830810546875

Token 566: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 567: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.056078553199768
    2. ' if' → logprob: -1.056078553199768
    3. '                               ' → logprob: -2.4310784339904785
    4. 'v' → logprob: -3.4310784339904785
    5. ' v' → logprob: -3.4310784339904785
    6. 'if' (adapté à ' if') → logprob: -3.5560784339904785
    7. 'return' → logprob: -3.8060784339904785
    8. '                   ' → logprob: -4.0560784339904785
    9. '           ' → logprob: -4.3060784339904785
    10. '<|end|>' → logprob: -4.5560784339904785

Token 568: ' dist' (ID: 3601)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.45192399621009827
    2. 'idx' → logprob: -1.0769239664077759
    3. 'dist' → logprob: -4.701923847198486
    4. ' dist' → logprob: -5.326923847198486
    5. ' v' → logprob: -6.951923847198486
    6. ' j' → logprob: -7.076923847198486
    7. ' returning' → logprob: -7.076923847198486
    8. ' not' → logprob: -7.201923847198486
    9. 'v' → logprob: -7.201923847198486
    10. ' problem' → logprob: -7.326923847198486

Token 569: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.0004143456753809005
    2. '_next' → logprob: -8.25041389465332
    3. 'temp' → logprob: -10.25041389465332
    4. '_' → logprob: -10.37541389465332
    5. '_temperature' → logprob: -10.87541389465332
    6. '_tmp' → logprob: -11.37541389465332
    7. '[' → logprob: -11.87541389465332
    8. '_max' → logprob: -12.12541389465332
    9. '_min' → logprob: -12.25041389465332
    10. '[temp' → logprob: -12.50041389465332

Token 570: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.05497041344642639
    2. '_temp' → logprob: -2.9299705028533936
    3. 'min' → logprob: -10.554970741271973
    4. '_max' → logprob: -10.679970741271973
    5. '_pos' → logprob: -11.554970741271973
    6. '_' → logprob: -11.554970741271973
    7. '_next' → logprob: -12.179970741271973
    8. 'temp' → logprob: -12.429970741271973
    9. '<' → logprob: -12.554970741271973
    10. '_tmp' → logprob: -13.304970741271973

Token 571: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.009760694578289986
    2. '_not' → logprob: -5.384760856628418
    3. '_temp' → logprob: -6.009760856628418
    4. '_min' → logprob: -6.759760856628418
    5. 'pos' → logprob: -7.009760856628418
    6. '_pres' → logprob: -8.384760856628418
    7. '<' → logprob: -8.634760856628418
    8. 'not' → logprob: -9.634760856628418
    9. ' <' → logprob: -10.259760856628418
    10. '_pass' → logprob: -11.009760856628418

Token 572: 'session' (ID: 11854)
  Prédit: 'session'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'session' → logprob: -0.2824479937553406
    2. 'ession' → logprob: -1.4074480533599854
    3. 's' → logprob: -7.532447814941406
    4. 'ss' → logprob: -7.657447814941406
    5. '_session' → logprob: -9.657447814941406
    6. 'sess' → logprob: -10.657447814941406
    7. 'ion' → logprob: -10.782447814941406
    8. '(session' → logprob: -11.032447814941406
    9. '```' → logprob: -11.032447814941406
    10. 'ission' → logprob: -11.282447814941406

Token 573: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.21568261086940765
    2. ' ==' → logprob: -1.9656826257705688
    3. '<' → logprob: -3.4656825065612793
    4. '==' → logprob: -4.715682506561279
    5. ' >' → logprob: -4.965682506561279
    6. ' !=' → logprob: -6.090682506561279
    7. ' >=' → logprob: -6.465682506561279
    8. '>' → logprob: -6.715682506561279
    9. ' <=' → logprob: -7.215682506561279
    10. ':' → logprob: -8.090682983398438

Token 574: ' dist' (ID: 3601)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.023515542969107628
    2. 'dist' → logprob: -4.398515701293945
    3. '10' → logprob: -4.773515701293945
    4. '100' → logprob: -7.023515701293945
    5. '1' → logprob: -7.898515701293945
    6. ' float' → logprob: -8.148515701293945
    7. '999' → logprob: -8.273515701293945
    8. 'int' → logprob: -8.898515701293945
    9. 'time' → logprob: -9.023515701293945
    10. 'v' → logprob: -10.023515701293945

Token 575: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.47500863671302795
    2. 'temp' → logprob: -1.8500086069107056
    3. 'dist' → logprob: -2.225008726119995
    4. '1' → logprob: -3.725008726119995
    5. 'float' → logprob: -3.725008726119995
    6. '10' → logprob: -4.100008487701416
    7. '100' → logprob: -4.225008487701416
    8. 'inf' → logprob: -4.850008487701416
    9. '999' → logprob: -5.350008487701416
    10. ' ' → logprob: -5.725008487701416

Token 576: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.44407185912132263
    2. 'pos' → logprob: -2.4440717697143555
    3. '_not' → logprob: -3.3190717697143555
    4. '_pos' → logprob: -3.4440717697143555
    5. 'not' → logprob: -3.4440717697143555
    6. ':' → logprob: -3.6940717697143555
    7. '**' → logprob: -3.8190717697143555
    8. ':
' → logprob: -4.0690717697143555
    9. '```' → logprob: -4.0690717697143555
    10. '_temp' → logprob: -4.1940717697143555

Token 577: '_not' (ID: 17599)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2421807050704956
    2. '_pos' → logprob: -2.742180824279785
    3. 'dist' → logprob: -3.117180824279785
    4. 'f' → logprob: -3.992180824279785
    5. '_not' → logprob: -4.492180824279785
    6. 'not' → logprob: -4.492180824279785
    7. 'poss' → logprob: -5.242180824279785
    8. '1' → logprob: -5.367180824279785
    9. 'istance' → logprob: -5.367180824279785
    10. '_dist' → logprob: -5.367180824279785

Token 578: '_pos' (ID: 14692)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.15711036324501038
    2. '_pos' → logprob: -2.6571104526519775
    3. 'poss' → logprob: -3.1571104526519775
    4. 'ession' → logprob: -4.657110214233398
    5. 'pass' → logprob: -5.032110214233398
    6. 'ision' → logprob: -5.407110214233398
    7. 'cession' → logprob: -5.907110214233398
    8. '_' → logprob: -6.282110214233398
    9. 'position' → logprob: -6.782110214233398
    10. 'ation' → logprob: -7.282110214233398

Token 579: 'session' (ID: 11854)
  Prédit: 'ession'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ession' → logprob: -0.020573651418089867
    2. 'session' → logprob: -3.895573616027832
    3. 'esion' → logprob: -11.770573616027832
    4. 'ion' → logprob: -11.895573616027832
    5. 'ess' → logprob: -12.145573616027832
    6. '
' → logprob: -13.145573616027832
    7. 's' → logprob: -13.395573616027832
    8. 'ission' → logprob: -13.895573616027832
    9. '_session' → logprob: -14.020573616027832
    10. 'essions' → logprob: -14.020573616027832

Token 580: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02660691924393177
    2. ':
' → logprob: -3.901607036590576
    3. ' and' → logprob: -5.401607036590576
    4. '):' → logprob: -7.401607036590576
    5. ')' → logprob: -8.651606559753418
    6. ' :' → logprob: -8.776606559753418
    7. 'and' → logprob: -9.151606559753418
    8. '   ' → logprob: -9.276606559753418
    9. '                           ' → logprob: -9.401606559753418
    10. ' or' → logprob: -10.276606559753418

Token 581: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5100245475769043
    2. ':' → logprob: -1.0100245475769043
    3. ':
' → logprob: -4.010024547576904
    4. '                       ' → logprob: -5.385024547576904
    5. ' :' → logprob: -5.885024547576904
    6. '               ' → logprob: -6.260024547576904
    7. '                           ' → logprob: -6.510024547576904
    8. 'v' → logprob: -6.885024547576904
    9. ' and' → logprob: -7.260024547576904
    10. '<|end|>' → logprob: -7.260024547576904

Token 582: ' dist' (ID: 3601)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.7430195808410645
    2. 'return' → logprob: -1.7430195808410645
    3. 'dist' (adapté à ' dist') → logprob: -2.1180195808410645
    4. 'remaining' → logprob: -2.4930195808410645
    5. 'v' → logprob: -2.7430195808410645
    6. 'deliver' → logprob: -3.4930195808410645
    7. ' delivering' → logprob: -4.1180195808410645
    8. 'dest' → logprob: -5.2430195808410645
    9. '   ' → logprob: -5.4930195808410645
    10. 'delivery' → logprob: -5.4930195808410645

Token 583: 'ination' (ID: 3273)
  Prédit: '_temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.32707053422927856
    2. '_min' → logprob: -1.4520704746246338
    3. '_next' → logprob: -3.702070474624634
    4. 'ation' → logprob: -4.577070713043213
    5. '_destination' → logprob: -6.202070713043213
    6. '_' → logprob: -7.327070713043213
    7. '_temperature' → logprob: -7.577070713043213
    8. 'ination' → logprob: -7.577070713043213
    9. 'temp' → logprob: -7.827070713043213
    10. '_max' → logprob: -7.827070713043213

Token 584: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741467535495758
    2. '=' → logprob: -0.9741467237472534
    3. ',' → logprob: -9.599146842956543
    4. ' ' → logprob: -14.599146842956543
    5. ' ,' → logprob: -14.974146842956543
    6. '=v' → logprob: -15.224146842956543
    7. '＝' → logprob: -15.224146842956543
    8. ')' → logprob: -15.474146842956543
    9. '=index' → logprob: -16.474145889282227
    10. '=}' → logprob: -16.474145889282227

Token 585: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.015986738726496696
    2. ' order' → logprob: -4.390986919403076
    3. 't' → logprob: -6.515986919403076
    4. 'o' → logprob: -6.640986919403076
    5. 'idx' → logprob: -8.265986442565918
    6. 'dst' → logprob: -8.765986442565918
    7. ' t' → logprob: -9.515986442565918
    8. ' o' → logprob: -10.390986442565918
    9. 'v' → logprob: -10.390986442565918
    10. 'ord' → logprob: -10.640986442565918

Token 586: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -11.750008583068848
    3. 'idx' → logprob: -14.875008583068848
    4. ' [' → logprob: -16.000009536743164
    5. '```' → logprob: -16.500009536743164
    6. '[
' → logprob: -17.125009536743164
    7. '[i' → logprob: -17.125009536743164
    8. '[index' → logprob: -17.250009536743164
    9. '[int' → logprob: -17.375009536743164
    10. ' idx' → logprob: -18.250009536743164

Token 587: '].' (ID: 1651)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.054084040224552155
    2. '][' → logprob: -3.304084062576294
    3. '[idx' → logprob: -4.304083824157715
    4. '[' → logprob: -6.179083824157715
    5. '[
' → logprob: -9.054083824157715
    6. ']' → logprob: -9.554083824157715
    7. ')[' → logprob: -10.554083824157715
    8. '[js' → logprob: -10.679083824157715
    9. ' ][' → logprob: -11.179083824157715
    10. '[i' → logprob: -11.179083824157715

Token 588: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.00026288547087460756
    2. '__' → logprob: -8.500263214111328
    3. '.pop' → logprob: -9.750263214111328
    4. '.__' → logprob: -14.875263214111328
    5. ' pop' → logprob: -15.125263214111328
    6. '	pop' → logprob: -16.125263214111328
    7. '_pop' → logprob: -16.375263214111328
    8. '[' → logprob: -16.500263214111328
    9. '```' → logprob: -16.500263214111328
    10. 'insert' → logprob: -17.500263214111328

Token 589: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -11.87501049041748
    3. 'j' → logprob: -12.62501049041748
    4. '[j' → logprob: -15.62501049041748
    5. '(
' → logprob: -16.500011444091797
    6. '	j' → logprob: -17.875011444091797
    7. '```' → logprob: -17.875011444091797
    8. ',j' → logprob: -18.000011444091797
    9. ' (' → logprob: -18.375011444091797
    10. ' j' → logprob: -18.875011444091797

Token 590: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -2.1008713702030946e-06
    2. 'dex' → logprob: -13.250001907348633
    3. ' dx' → logprob: -15.750001907348633
    4. 'd' → logprob: -17.250001907348633
    5. 'idx' → logprob: -17.250001907348633
    6. '_dx' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '(dx' → logprob: -18.500001907348633
    9. ')' → logprob: -18.625001907348633
    10. ' ' → logprob: -20.125001907348633

Token 591: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47422897815704346
    2. ')' → logprob: -0.9742289781570435
    3. ')
' → logprob: -9.599228858947754
    4. ' )
' → logprob: -10.224228858947754
    5. '                   ' → logprob: -10.724228858947754
    6. ' )' → logprob: -11.724228858947754
    7. ')

' → logprob: -12.099228858947754
    8. '               ' → logprob: -12.349228858947754
    9. '                           ' → logprob: -13.599228858947754
    10. '                       ' → logprob: -13.849228858947754

Token 592: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 593: ' remaining' (ID: 15448)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6803846955299377
    2. ' remaining' → logprob: -0.9303846955299377
    3. ')' → logprob: -3.805384635925293
    4. ' )' → logprob: -3.930384635925293
    5. 'remaining' (adapté à ' remaining') → logprob: -4.555384635925293
    6. '<|end|>' → logprob: -5.055384635925293
    7. ' return' → logprob: -5.180384635925293
    8. ' else' → logprob: -5.305384635925293
    9. ' elif' → logprob: -5.305384635925293
    10. ' v' → logprob: -5.555384635925293

Token 594: '_last' (ID: 26359)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.004690118599683046
    2. '_last' → logprob: -5.379690170288086
    3. '_' → logprob: -10.504690170288086
    4. 'next' → logprob: -11.004690170288086
    5. '=' → logprob: -12.004690170288086
    6. '_=' → logprob: -12.879690170288086
    7. 'Next' → logprob: -13.129690170288086
    8. '_temp' → logprob: -13.504690170288086
    9. '[next' → logprob: -13.754690170288086
    10. '_prev' → logprob: -13.879690170288086

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132767081260681
    2. ' =' → logprob: -1.313276767730713
    3. '-=' → logprob: -12.188276290893555
    4. ' -=' → logprob: -12.563276290893555
    5. ',' → logprob: -13.313276290893555
    6. ' ' → logprob: -13.813276290893555
    7. '+=' → logprob: -14.063276290893555
    8. ' +=' → logprob: -14.438276290893555
    9. '   ' → logprob: -14.688276290893555
    10. '=int' → logprob: -15.063276290893555

Token 596: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0007868755492381752
    2. ' dist' → logprob: -7.750786781311035
    3. 'int' → logprob: -8.375786781311035
    4. '1' → logprob: -10.000786781311035
    5. '   ' → logprob: -10.000786781311035
    6. '  ' → logprob: -12.000786781311035
    7. 'cost' → logprob: -12.000786781311035
    8. ' ' → logprob: -12.125786781311035
    9. 'arg' → logprob: -13.125786781311035
    10. '           ' → logprob: -13.375786781311035

Token 597: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.01961195282638073
    2. '[' → logprob: -4.019611835479736
    3. 'ation' → logprob: -7.144611835479736
    4. 'dist' → logprob: -7.894611835479736
    5. '[int' → logprob: -9.144612312316895
    6. 'v' → logprob: -10.144612312316895
    7. 'int' → logprob: -11.144612312316895
    8. '(v' → logprob: -11.769612312316895
    9. 'ination' → logprob: -11.894612312316895
    10. '   ' → logprob: -12.144612312316895

Token 598: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -5.9795445849886164e-05
    2. '[next' → logprob: -10.250060081481934
    3. 'next' → logprob: -11.500060081481934
    4. '_from' → logprob: -13.375060081481934
    5. '_' → logprob: -13.375060081481934
    6. '[v' → logprob: -13.500060081481934
    7. 'Next' → logprob: -13.500060081481934
    8. '_last' → logprob: -13.625060081481934
    9. ',next' → logprob: -14.125060081481934
    10. '[' → logprob: -14.125060081481934

Token 599: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.762356209335849e-05
    2. ',v' → logprob: -11.12503719329834
    3. '[' → logprob: -11.37503719329834
    4. ' ,' → logprob: -12.25003719329834
    5. 'dist' → logprob: -13.00003719329834
    6. ',d' → logprob: -13.62503719329834
    7. ',
' → logprob: -14.00003719329834
    8. '
' → logprob: -14.25003719329834
    9. 'v' → logprob: -14.50003719329834
    10. ' ' → logprob: -15.75003719329834

Token 600: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00018446780450176448
    2. 'v' → logprob: -9.625184059143066
    3. 'dest' → logprob: -10.250184059143066
    4. ' dist' → logprob: -10.250184059143066
    5. '   ' → logprob: -11.000184059143066
    6. '1' → logprob: -11.750184059143066
    7. 'return' → logprob: -12.000184059143066
    8. '  ' → logprob: -12.875184059143066
    9. 'dst' → logprob: -12.875184059143066
    10. '	dist' → logprob: -13.125184059143066

Token 601: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -2.7133641196996905e-05
    2. 'estination' → logprob: -10.87502670288086
    3. 'nation' → logprob: -13.12502670288086
    4. 'ation' → logprob: -13.25002670288086
    5. 'inition' → logprob: -13.37502670288086
    6. 'destination' → logprob: -13.87502670288086
    7. '_destination' → logprob: -14.87502670288086
    8. 'inations' → logprob: -15.25002670288086
    9. 'istance' → logprob: -15.62502670288086
    10. '   ' → logprob: -15.75002670288086

Token 602: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030967436730861664
    2. ']
' → logprob: -3.5309674739837646
    3. ']+' → logprob: -7.4059672355651855
    4. ' ]' → logprob: -8.655967712402344
    5. '+' → logprob: -9.030967712402344
    6. ']
' → logprob: -9.155967712402344
    7. '-' → logprob: -9.405967712402344
    8. '   ' → logprob: -10.530967712402344
    9. ' -' → logprob: -10.780967712402344
    10. ']-' → logprob: -10.905967712402344

Token 603: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 604: ' next' (ID: 2613)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6301199793815613
    2. 'v' → logprob: -1.505120038986206
    3. '               ' → logprob: -2.255120038986206
    4. 'del' → logprob: -2.505120038986206
    5. ' v' → logprob: -3.505120038986206
    6. '           ' → logprob: -4.630119800567627
    7. ' delivering' → logprob: -5.255119800567627
    8. '   ' → logprob: -5.630119800567627
    9. 'print' → logprob: -5.880119800567627
    10. '       ' → logprob: -6.380119800567627

Token 605: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.0006905130576342344
    2. '_token' → logprob: -7.625690460205078
    3. 'temp' → logprob: -9.500690460205078
    4. '_' → logprob: -10.000690460205078
    5. '_tmp' → logprob: -10.375690460205078
    6. '_temperature' → logprob: -11.250690460205078
    7. 'Temp' → logprob: -11.625690460205078
    8. '_next' → logprob: -12.500690460205078
    9. '```' → logprob: -12.625690460205078
    10. '()' → logprob: -12.875690460205078

Token 606: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326038241386414
    2. '=' → logprob: -0.7576038241386414
    3. ' ' → logprob: -12.757603645324707
    4. '   ' → logprob: -15.132603645324707
    5. 's' → logprob: -15.257603645324707
    6. ',' → logprob: -15.382603645324707
    7. ')' → logprob: -16.257604598999023
    8. '＝' → logprob: -16.257604598999023
    9. '	' → logprob: -16.382604598999023
    10. '  ' → logprob: -16.382604598999023

Token 607: ' predecessors' (ID: 143645)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.005241344682872295
    2. ' predecessors' → logprob: -5.755241394042969
    3. '   ' → logprob: -6.380241394042969
    4. ' pre' → logprob: -8.880241394042969
    5. 'preced' → logprob: -9.255241394042969
    6. '	pre' → logprob: -10.130241394042969
    7. 'pred' → logprob: -10.255241394042969
    8. ' ' → logprob: -11.505241394042969
    9. '  ' → logprob: -12.005241394042969
    10. '                   ' → logprob: -12.255241394042969

Token 608: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.6060808522743173e-05
    2. 'dist' → logprob: -11.250025749206543
    3. '[v' → logprob: -12.250025749206543
    4. '(dist' → logprob: -12.625025749206543
    5. '[
' → logprob: -14.250025749206543
    6. '   ' → logprob: -14.250025749206543
    7. '[[' → logprob: -15.250025749206543
    8. ' ' → logprob: -15.250025749206543
    9. '       ' → logprob: -15.500025749206543
    10. '[int' → logprob: -15.500025749206543

Token 609: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.000215457082958892
    2. 'v' → logprob: -8.625215530395508
    3. '[' → logprob: -10.625215530395508
    4. ' dist' → logprob: -12.500215530395508
    5. '[v' → logprob: -12.875215530395508
    6. '(dist' → logprob: -13.250215530395508
    7. 'return' → logprob: -13.875215530395508
    8. '   ' → logprob: -14.000215530395508
    9. 'remaining' → logprob: -14.750215530395508
    10. '	dist' → logprob: -15.375215530395508

Token 610: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.0006080791936255991
    2. 'ation' → logprob: -8.125608444213867
    3. 'nation' → logprob: -9.000608444213867
    4. '[' → logprob: -9.750608444213867
    5. 'estination' → logprob: -11.000608444213867
    6. 'inition' → logprob: -11.125608444213867
    7. 'location' → logprob: -11.250608444213867
    8. 'INATION' → logprob: -11.625608444213867
    9. 'destination' → logprob: -11.625608444213867
    10. '_last' → logprob: -11.750608444213867

Token 611: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.000763510703109e-05
    2. ',v' → logprob: -10.375040054321289
    3. ' ,' → logprob: -12.625040054321289
    4. ',
' → logprob: -12.875040054321289
    5. 'v' → logprob: -13.125040054321289
    6. '[' → logprob: -14.750040054321289
    7. '][' → logprob: -15.125040054321289
    8. ',time' → logprob: -16.87504005432129
    9. '[v' → logprob: -17.00004005432129
    10. ',current' → logprob: -17.12504005432129

Token 612: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.961759259458631e-06
    2. ' v' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.375004768371582
    4. '1' → logprob: -15.000004768371582
    5. 'dist' → logprob: -16.3750057220459
    6. '	v' → logprob: -17.0000057220459
    7. 'return' → logprob: -18.0000057220459
    8. ' ' → logprob: -18.0000057220459
    9. '```' → logprob: -18.5000057220459
    10. 'last' → logprob: -18.6250057220459

Token 613: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -9.841743303695694e-05
    2. 'next' → logprob: -9.25009822845459
    3. '_' → logprob: -13.87509822845459
    4. '_last' → logprob: -14.87509822845459
    5. 'Next' → logprob: -15.25009822845459
    6. '_n' → logprob: -15.87509822845459
    7. '[next' → logprob: -16.250099182128906
    8. 'ext' → logprob: -16.500099182128906
    9. ']' → logprob: -16.625099182128906
    10. ' next' → logprob: -16.875099182128906

Token 614: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.05517270043492317
    2. ']' → logprob: -2.9301726818084717
    3. ']
' → logprob: -8.18017292022705
    4. ']

' → logprob: -12.43017292022705
    5. '   ' → logprob: -13.18017292022705
    6. ' ]
' → logprob: -13.43017292022705
    7. ')
' → logprob: -14.05517292022705
    8. '       ' → logprob: -15.18017292022705
    9. '```' → logprob: -15.18017292022705
    10. '               ' → logprob: -15.30517292022705

Token 615: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 616: ' remaining' (ID: 15448)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4734588861465454
    2. 'if' → logprob: -1.5984588861465454
    3. 'v' → logprob: -1.8484588861465454
    4. ' if' → logprob: -4.348458766937256
    5. ' v' → logprob: -6.973458766937256
    6. 'remaining' (adapté à ' remaining') → logprob: -6.973458766937256
    7. '               ' → logprob: -7.473458766937256
    8. 'while' → logprob: -7.473458766937256
    9. '   ' → logprob: -7.473458766937256
    10. '           ' → logprob: -8.348459243774414

Token 617: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0005312294815666974
    2. '_last' → logprob: -7.625531196594238
    3. 'next' → logprob: -10.875531196594238
    4. '_' → logprob: -11.625531196594238
    5. '=' → logprob: -12.125531196594238
    6. '_temp' → logprob: -12.375531196594238
    7. ' =' → logprob: -13.375531196594238
    8. ' next' → logprob: -14.250531196594238
    9. '_=' → logprob: -14.500531196594238
    10. '```' → logprob: -14.875531196594238

Token 618: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47569504380226135
    2. '=' → logprob: -0.975695013999939
    3. ' -=' → logprob: -6.4756951332092285
    4. '-=' → logprob: -10.10069465637207
    5. ' +=' → logprob: -10.47569465637207
    6. ' ' → logprob: -12.72569465637207
    7. '-' → logprob: -13.60069465637207
    8. '+=' → logprob: -13.72569465637207
    9. ' =
' → logprob: -14.60069465637207
    10. ' -' → logprob: -15.10069465637207

Token 619: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005319616291671991
    2. ' dist' → logprob: -5.255319595336914
    3. '   ' → logprob: -9.880319595336914
    4. '  ' → logprob: -12.130319595336914
    5. '           ' → logprob: -12.505319595336914
    6. '	dist' → logprob: -12.755319595336914
    7. '0' → logprob: -12.755319595336914
    8. '       ' → logprob: -12.880319595336914
    9. ' ' → logprob: -12.880319595336914
    10. '1' → logprob: -12.880319595336914

Token 620: '[v' (ID: 36561)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.47484150528907776
    2. '[v' → logprob: -1.2248414754867554
    3. '[' → logprob: -2.599841594696045
    4. '_next' → logprob: -4.974841594696045
    5. 'next' → logprob: -6.599841594696045
    6. ',next' → logprob: -7.599841594696045
    7. '[last' → logprob: -7.849841594696045
    8. ',' → logprob: -8.724841117858887
    9. '```' → logprob: -8.974841117858887
    10. '_last' → logprob: -9.599841117858887

Token 621: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0009137284359894693
    2. 'next' → logprob: -7.000913619995117
    3. 'Next' → logprob: -13.750913619995117
    4. '[next' → logprob: -14.000913619995117
    5. ' next' → logprob: -15.500913619995117
    6. '_NEXT' → logprob: -17.125913619995117
    7. '_' → logprob: -17.125913619995117
    8. ',next' → logprob: -17.125913619995117
    9. '	next' → logprob: -17.750913619995117
    10. ',' → logprob: -17.875913619995117

Token 622: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020621151197701693
    2. ',next' → logprob: -6.5020623207092285
    3. '[next' → logprob: -7.6270623207092285
    4. '[' → logprob: -10.75206184387207
    5. ' ,' → logprob: -11.37706184387207
    6. 'next' → logprob: -11.50206184387207
    7. ',
' → logprob: -11.62706184387207
    8. ' next' → logprob: -12.25206184387207
    9. '',' → logprob: -12.87706184387207
    10. '`,' → logprob: -13.00206184387207

Token 623: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.023253746330738068
    2. ' next' → logprob: -3.7732536792755127
    3. '[next' → logprob: -12.023253440856934
    4. '(next' → logprob: -14.023253440856934
    5. '	next' → logprob: -14.523253440856934
    6. 'dist' → logprob: -14.648253440856934
    7. '   ' → logprob: -16.64825439453125
    8. ' ' → logprob: -17.02325439453125
    9. ',next' → logprob: -17.14825439453125
    10. '                   ' → logprob: -17.14825439453125

Token 624: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.0009700604132376611
    2. '_next' → logprob: -7.000969886779785
    3. 'temp' → logprob: -10.500969886779785
    4. ',' → logprob: -11.000969886779785
    5. '_tmp' → logprob: -12.625969886779785
    6. '_token' → logprob: -12.875969886779785
    7. '_' → logprob: -13.125969886779785
    8. 'next' → logprob: -13.250969886779785
    9. '```' → logprob: -14.250969886779785
    10. 'Temp' → logprob: -14.375969886779785

Token 625: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14311876893043518
    2. ']
' → logprob: -2.0181188583374023
    3. '-' → logprob: -8.518118858337402
    4. ' ]' → logprob: -9.393118858337402
    5. '+' → logprob: -10.268118858337402
    6. ' -' → logprob: -10.768118858337402
    7. ' ]
' → logprob: -10.768118858337402
    8. ']

' → logprob: -10.893118858337402
    9. ']
' → logprob: -11.018118858337402
    10. '   ' → logprob: -11.393118858337402

Token 626: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 627: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.006906117312610149
    2. ' v' → logprob: -5.131906032562256
    3. '                   ' → logprob: -7.131906032562256
    4. '   ' → logprob: -9.256906509399414
    5. '	v' → logprob: -10.506906509399414
    6. '           ' → logprob: -11.006906509399414
    7. '               ' → logprob: -11.381906509399414
    8. '       ' → logprob: -12.131906509399414
    9. 'next' → logprob: -12.381906509399414
    10. '```' → logprob: -12.631906509399414

Token 628: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0002647927321959287
    2. '_' → logprob: -8.250265121459961
    3. ' _' → logprob: -13.000265121459961
    4. 'next' → logprob: -15.000265121459961
    5. 'Next' → logprob: -15.500265121459961
    6. '_=' → logprob: -15.625265121459961
    7. '```' → logprob: -16.00026512145996
    8. '_to' → logprob: -16.50026512145996
    9. ')_' → logprob: -16.75026512145996
    10. '_NEXT' → logprob: -16.75026512145996

Token 629: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759451985359192
    2. '=' → logprob: -0.8259451985359192
    3. ' ' → logprob: -12.825944900512695
    4. ',' → logprob: -13.200944900512695
    5. ' =
' → logprob: -15.075944900512695
    6. '=
' → logprob: -15.825944900512695
    7. ' +=' → logprob: -15.950944900512695
    8. ')' → logprob: -16.200944900512695
    9. '_' → logprob: -16.325944900512695
    10. '.' → logprob: -16.700944900512695

Token 630: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.12693031132221222
    2. ' next' → logprob: -2.1269302368164062
    3. '	next' → logprob: -13.251930236816406
    4. '[next' → logprob: -14.876930236816406
    5. '(next' → logprob: -16.376930236816406
    6. 'v' → logprob: -17.501930236816406
    7. ' nex' → logprob: -17.751930236816406
    8. '_next' → logprob: -17.751930236816406
    9. ' ' → logprob: -17.876930236816406
    10. '   ' → logprob: -17.876930236816406

Token 631: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -4.370294846012257e-05
    2. '_token' → logprob: -10.625043869018555
    3. '_' → logprob: -11.625043869018555
    4. '_tmp' → logprob: -11.875043869018555
    5. '_next' → logprob: -13.000043869018555
    6. 'temp' → logprob: -14.875043869018555
    7. ' _' → logprob: -15.625043869018555
    8. '_tem' → logprob: -16.000043869018555
    9. 'Temp' → logprob: -16.250043869018555
    10. '_TEMP' → logprob: -16.250043869018555

Token 632: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 633: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1264479160308838
    2. ' ' → logprob: -1.1264479160308838
    3. '<|end|>' → logprob: -1.3764479160308838
    4. '}' → logprob: -3.876447916030884
    5. ']' → logprob: -4.376447677612305
    6. '   ' → logprob: -4.626447677612305
    7. '```' → logprob: -4.876447677612305
    8. '#' → logprob: -4.876447677612305
    9. ':' → logprob: -5.126447677612305
    10. ' else' → logprob: -5.251447677612305

Token 634: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 635: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5451910495758057
    2. '{
' → logprob: -1.5451910495758057
    3. '{' → logprob: -2.7951910495758057
    4. ':
' → logprob: -2.7951910495758057
    5. '{return' → logprob: -3.1701910495758057
    6. 'return' → logprob: -3.7951910495758057
    7. '               ' → logprob: -4.670190811157227
    8. ':return' → logprob: -5.545190811157227
    9. ':' → logprob: -5.920190811157227
    10. ' return' → logprob: -6.795190811157227

Token 636: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.060184046626091
    2. '               ' → logprob: -4.060184001922607
    3. 'return' → logprob: -4.310184001922607
    4. '   ' → logprob: -4.435184001922607
    5. ' returning' → logprob: -5.185184001922607
    6. ' return' → logprob: -5.435184001922607
    7. 'dist' → logprob: -6.060184001922607
    8. '{
' → logprob: -7.060184001922607
    9. ' dist' → logprob: -7.185184001922607
    10. '           ' → logprob: -8.310184478759766

Token 637: ' returning' (ID: 22968)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16251714527606964
    2. 'remaining' → logprob: -2.6625170707702637
    3. 'dist' → logprob: -3.0375170707702637
    4. '   ' → logprob: -4.787517070770264
    5. '                   ' → logprob: -5.412517070770264
    6. 'time' → logprob: -5.412517070770264
    7. ' returning' → logprob: -5.662517070770264
    8. '               ' → logprob: -6.037517070770264
    9. 'v' → logprob: -6.537517070770264
    10. ' remaining' → logprob: -6.912517070770264

Token 638: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07165876030921936
    2. '=' → logprob: -2.6966588497161865
    3. '=True' → logprob: -7.196658611297607
    4. ' +=' → logprob: -7.946658611297607
    5. ' ' → logprob: -8.571659088134766
    6. '=False' → logprob: -8.696659088134766
    7. '<|end|>' → logprob: -9.321659088134766
    8. ':' → logprob: -10.446659088134766
    9. '[' → logprob: -10.571659088134766
    10. '+=' → logprob: -10.946659088134766

Token 639: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0031860284507274628
    2. ' True' → logprob: -5.753186225891113
    3. 'False' → logprob: -11.753186225891113
    4. '=True' → logprob: -15.503186225891113
    5. '   ' → logprob: -16.253185272216797
    6. '(True' → logprob: -16.253185272216797
    7. 'not' → logprob: -17.878185272216797
    8. ' ' → logprob: -18.503185272216797
    9. 'true' → logprob: -18.628185272216797
    10. '               ' → logprob: -18.753185272216797

Token 640: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 641: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 642: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' (adapté à ' remaining') → logprob: -0.15598571300506592
    2. 'dist' → logprob: -2.1559858322143555
    3. ' remaining' → logprob: -4.5309858322143555
    4. 'del' → logprob: -4.9059858322143555
    5. 'v' → logprob: -5.2809858322143555
    6. 'return' → logprob: -6.4059858322143555
    7. ' dist' → logprob: -6.6559858322143555
    8. '   ' → logprob: -7.1559858322143555
    9. 'print' → logprob: -8.155985832214355
    10. ' v' → logprob: -8.530985832214355

Token 643: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.00024096666311379522
    2. '_next' → logprob: -8.37524127960205
    3. '_return' → logprob: -12.12524127960205
    4. 'last' → logprob: -12.62524127960205
    5. '_max' → logprob: -14.62524127960205
    6. '_' → logprob: -15.00024127960205
    7. '_first' → logprob: -15.25024127960205
    8. '=' → logprob: -16.000240325927734
    9. '_temp' → logprob: -16.000240325927734
    10. '_time' → logprob: -16.500240325927734

Token 644: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0041662524454295635
    2. ' =' → logprob: -5.504166126251221
    3. '-=' → logprob: -9.629166603088379
    4. ' -=' → logprob: -11.254166603088379
    5. '+=' → logprob: -11.879166603088379
    6. ' +=' → logprob: -13.879166603088379
    7. '＝' → logprob: -15.879166603088379
    8. '=int' → logprob: -15.879166603088379
    9. '==' → logprob: -16.004165649414062
    10. ' ' → logprob: -16.004165649414062

Token 645: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0009249189170077443
    2. ' dist' → logprob: -7.000925064086914
    3. '1' → logprob: -12.500925064086914
    4. '0' → logprob: -12.875925064086914
    5. '	dist' → logprob: -13.250925064086914
    6. '   ' → logprob: -13.500925064086914
    7. ' ' → logprob: -14.000925064086914
    8. '  ' → logprob: -14.125925064086914
    9. '(dist' → logprob: -14.375925064086914
    10. '10' → logprob: -15.000925064086914

Token 646: '[' (ID: 58)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.02080696076154709
    2. '[' → logprob: -3.8958070278167725
    3. 'dist' → logprob: -9.395807266235352
    4. ' [' → logprob: -10.395807266235352
    5. 'return' → logprob: -10.770807266235352
    6. '```' → logprob: -10.895807266235352
    7. '[next' → logprob: -11.020807266235352
    8. 'v' → logprob: -11.145807266235352
    9. '[[' → logprob: -11.270807266235352
    10. '(v' → logprob: -11.270807266235352

Token 647: 'dist' (ID: 24126)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.496052371105179e-05
    2. '1' → logprob: -10.00009536743164
    3. 'dist' → logprob: -10.25009536743164
    4. 'return' → logprob: -12.50009536743164
    5. '[v' → logprob: -12.62509536743164
    6. ' v' → logprob: -12.75009536743164
    7. '   ' → logprob: -13.25009536743164
    8. '[' → logprob: -14.62509536743164
    9. '```' → logprob: -14.62509536743164
    10. '	v' → logprob: -14.87509536743164

Token 648: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.011776051484048367
    2. 'ation' → logprob: -5.386775970458984
    3. '_next' → logprob: -5.386775970458984
    4. '1' → logprob: -7.011775970458984
    5. 'inition' → logprob: -8.011775970458984
    6. '[' → logprob: -8.261775970458984
    7. 'estination' → logprob: -9.261775970458984
    8. 'next' → logprob: -9.261775970458984
    9. ',' → logprob: -9.386775970458984
    10. 'ignation' → logprob: -9.886775970458984

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020294437126722187
    2. '[' → logprob: -9.375203132629395
    3. ' ,' → logprob: -9.375203132629395
    4. ',
' → logprob: -11.125203132629395
    5. '1' → logprob: -11.875203132629395
    6. '][' → logprob: -12.625203132629395
    7. ' ' → logprob: -12.875203132629395
    8. ']' → logprob: -13.375203132629395
    9. ',v' → logprob: -13.750203132629395
    10. '[
' → logprob: -14.875203132629395

Token 650: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22873692214488983
    2. 'v' → logprob: -1.6037368774414062
    3. '0' → logprob: -5.853736877441406
    4. ' ' → logprob: -8.353736877441406
    5. ' v' → logprob: -8.603736877441406
    6. 'return' → logprob: -11.728736877441406
    7. 'next' → logprob: -11.978736877441406
    8. '
' → logprob: -12.853736877441406
    9. '   ' → logprob: -12.853736877441406
    10. '```' → logprob: -13.228736877441406

Token 651: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013315484393388033
    2. '0' → logprob: -6.876331329345703
    3. 'v' → logprob: -8.376331329345703
    4. ' ' → logprob: -9.626331329345703
    5. '   ' → logprob: -13.876331329345703
    6. 'return' → logprob: -14.501331329345703
    7. '
' → logprob: -15.251331329345703
    8. '  ' → logprob: -16.001331329345703
    9. ' v' → logprob: -16.126331329345703
    10. '```' → logprob: -16.126331329345703

Token 652: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0030320172663778067
    2. ' ]' → logprob: -6.628032207489014
    3. ']
' → logprob: -6.628032207489014
    4. '-' → logprob: -9.253031730651855
    5. ' -' → logprob: -9.378031730651855
    6. ']+' → logprob: -9.378031730651855
    7. '+' → logprob: -9.503031730651855
    8. ' +' → logprob: -11.378031730651855
    9. '<|end|>' → logprob: -12.378031730651855
    10. '   ' → logprob: -12.503031730651855

Token 653: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 654: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.012027564458549023
    2. 'remaining' → logprob: -5.137027740478516
    3. ' v' → logprob: -5.512027740478516
    4. 'next' → logprob: -7.387027740478516
    5. '   ' → logprob: -7.637027740478516
    6. 'dist' → logprob: -7.762027740478516
    7. ' remaining' → logprob: -8.762027740478516
    8. 'del' → logprob: -9.762027740478516
    9. 'print' → logprob: -9.762027740478516
    10. ' next' → logprob: -10.387027740478516

Token 655: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -9.889424836728722e-05
    2. '_' → logprob: -9.500099182128906
    3. 'next' → logprob: -11.250099182128906
    4. 'Next' → logprob: -13.125099182128906
    5. '_return' → logprob: -13.500099182128906
    6. ' next' → logprob: -13.625099182128906
    7. '_to' → logprob: -14.125099182128906
    8. '1' → logprob: -14.375099182128906
    9. ' _' → logprob: -14.375099182128906
    10. '_n' → logprob: -14.375099182128906

Token 656: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04919663071632385
    2. ' =' → logprob: -3.049196720123291
    3. ',' → logprob: -7.424196720123291
    4. ' ' → logprob: -12.674196243286133
    5. '+=' → logprob: -12.924196243286133
    6. ' ,' → logprob: -12.924196243286133
    7. ' +=' → logprob: -13.049196243286133
    8. '=
' → logprob: -14.549196243286133
    9. '<|end|>' → logprob: -14.549196243286133
    10. '_=' → logprob: -15.674196243286133

Token 657: ' predecessors' (ID: 143645)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.04968472942709923
    2. '1' → logprob: -3.174684762954712
    3. ' predecessors' → logprob: -5.924684524536133
    4. ' ' → logprob: -7.174684524536133
    5. '	pre' → logprob: -7.424684524536133
    6. 'pred' → logprob: -7.424684524536133
    7. '   ' → logprob: -7.549684524536133
    8. ' pre' → logprob: -7.924684524536133
    9. 'next' → logprob: -8.174684524536133
    10. 'dist' → logprob: -8.549684524536133

Token 658: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018558192532509565
    2. 'dist' → logprob: -6.501855850219727
    3. 'return' → logprob: -8.501855850219727
    4. '1' → logprob: -9.626855850219727
    5. '[v' → logprob: -10.251855850219727
    6. '[
' → logprob: -10.501855850219727
    7. 'v' → logprob: -11.376855850219727
    8. '(dist' → logprob: -12.626855850219727
    9. '```' → logprob: -13.876855850219727
    10. ' dist' → logprob: -14.876855850219727

Token 659: '1' (ID: 16)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14306578040122986
    2. '1' → logprob: -2.0180656909942627
    3. 'v' → logprob: -8.643065452575684
    4. 'return' → logprob: -9.268065452575684
    5. '[' → logprob: -10.768065452575684
    6. ' dist' → logprob: -10.768065452575684
    7. ' ' → logprob: -11.393065452575684
    8. '(dist' → logprob: -11.893065452575684
    9. '```' → logprob: -12.018065452575684
    10. '   ' → logprob: -12.018065452575684

Token 660: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20235322415828705
    2. ',' → logprob: -1.7023532390594482
    3. 'dist' → logprob: -7.702353000640869
    4. '[v' → logprob: -8.827353477478027
    5. ',[' → logprob: -9.327353477478027
    6. '(dist' → logprob: -9.452353477478027
    7. ',v' → logprob: -9.702353477478027
    8. 'v' → logprob: -10.452353477478027
    9. '[
' → logprob: -10.452353477478027
    10. ' ,' → logprob: -11.077353477478027

Token 661: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.012662799097597599
    2. 'v' → logprob: -4.387662887573242
    3. ' dist' → logprob: -9.387662887573242
    4. '   ' → logprob: -10.637662887573242
    5. '	dist' → logprob: -11.137662887573242
    6. 'dest' → logprob: -12.137662887573242
    7. 'return' → logprob: -12.262662887573242
    8. ' v' → logprob: -12.387662887573242
    9. '(dist' → logprob: -12.887662887573242
    10. '1' → logprob: -13.262662887573242

Token 662: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -3.7697225252486533e-06
    2. 'inition' → logprob: -13.375003814697266
    3. 'in' → logprob: -15.000003814697266
    4. 'ation' → logprob: -15.000003814697266
    5. 'INATION' → logprob: -15.125003814697266
    6. 'estination' → logprob: -15.250003814697266
    7. 'nation' → logprob: -15.750003814697266
    8. '_next' → logprob: -16.000003814697266
    9. '_destination' → logprob: -16.375003814697266
    10. 'inations' → logprob: -16.750003814697266

Token 663: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0490557886660099
    2. ']
' → logprob: -3.049055814743042
    3. ' ]' → logprob: -9.049056053161621
    4. ']+' → logprob: -9.424056053161621
    5. ']

' → logprob: -9.549056053161621
    6. '+' → logprob: -9.674056053161621
    7. '<|end|>' → logprob: -9.674056053161621
    8. ']
' → logprob: -10.799056053161621
    9. ' ]
' → logprob: -11.674056053161621
    10. ')' → logprob: -12.174056053161621

Token 664: '                   ' (ID: 699)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6333234310150146
    2. '<|end|>' → logprob: -0.8833234310150146
    3. '   ' → logprob: -3.2583234310150146
    4. '```' → logprob: -5.258323669433594
    5. ']' → logprob: -6.383323669433594
    6. '}' → logprob: -6.508323669433594
    7. 'elif' → logprob: -6.758323669433594
    8. '#' → logprob: -7.008323669433594
    9. ':' → logprob: -7.258323669433594
    10. '[' → logprob: -7.258323669433594

Token 665: ' remaining' (ID: 15448)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 666: '_next' (ID: 25436)
  Prédit: '_last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.01434284821152687
    2. '_next' → logprob: -4.264342784881592
    3. 'last' → logprob: -9.26434326171875
    4. '-=' → logprob: -10.76434326171875
    5. '_' → logprob: -10.88934326171875
    6. '-' → logprob: -11.38934326171875
    7. '_temp' → logprob: -12.38934326171875
    8. '=' → logprob: -12.38934326171875
    9. ' -=' → logprob: -12.63934326171875
    10. '_first' → logprob: -12.76434326171875

Token 667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06544915586709976
    2. ' =' → logprob: -2.8154492378234863
    3. '-=' → logprob: -6.315449237823486
    4. ' -=' → logprob: -6.440449237823486
    5. '+=' → logprob: -10.565448760986328
    6. '-' → logprob: -10.690448760986328
    7. ' +=' → logprob: -10.940448760986328
    8. ' ' → logprob: -13.940448760986328
    9. ' -' → logprob: -13.940448760986328
    10. '   ' → logprob: -14.065448760986328

Token 668: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.009862689301371574
    2. ' dist' → logprob: -4.634862899780273
    3. '   ' → logprob: -9.759862899780273
    4. '	dist' → logprob: -11.134862899780273
    5. ' ' → logprob: -11.759862899780273
    6. '0' → logprob: -11.759862899780273
    7. '  ' → logprob: -12.134862899780273
    8. '1' → logprob: -13.134862899780273
    9. '(dist' → logprob: -13.259862899780273
    10. '           ' → logprob: -13.759862899780273

Token 669: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07048173248767853
    2. '[v' → logprob: -2.695481777191162
    3. 'dist' → logprob: -7.695481777191162
    4. 'return' → logprob: -10.195481300354004
    5. '(dist' → logprob: -11.070481300354004
    6. 'v' → logprob: -11.195481300354004
    7. ' [' → logprob: -12.445481300354004
    8. '_dist' → logprob: -12.695481300354004
    9. '[next' → logprob: -12.820481300354004
    10. '   ' → logprob: -13.070481300354004

Token 670: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1278029978275299
    2. 'v' → logprob: -2.127803087234497
    3. '1' → logprob: -8.377802848815918
    4. 'return' → logprob: -8.752802848815918
    5. ' dist' → logprob: -9.127802848815918
    6. 'dest' → logprob: -9.627802848815918
    7. '[' → logprob: -9.627802848815918
    8. ' v' → logprob: -9.752802848815918
    9. '   ' → logprob: -9.752802848815918
    10. '[v' → logprob: -10.377802848815918

Token 671: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.0017020793166011572
    2. '_next' → logprob: -7.001702308654785
    3. 'ation' → logprob: -7.751702308654785
    4. 'inition' → logprob: -9.376702308654785
    5. '_destination' → logprob: -10.001702308654785
    6. ',' → logprob: -10.251702308654785
    7. '[' → logprob: -10.376702308654785
    8. 'estination' → logprob: -10.626702308654785
    9. 'INATION' → logprob: -10.751702308654785
    10. 'ocation' → logprob: -11.126702308654785

Token 672: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002269085729494691
    2. '[' → logprob: -6.252269268035889
    3. ',v' → logprob: -8.62726879119873
    4. ',
' → logprob: -10.12726879119873
    5. ' ,' → logprob: -10.25226879119873
    6. '[v' → logprob: -11.25226879119873
    7. '[
' → logprob: -11.50226879119873
    8. ']' → logprob: -11.50226879119873
    9. ',[' → logprob: -11.87726879119873
    10. 'v' → logprob: -12.12726879119873

Token 673: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.955703818472102e-05
    2. ' v' → logprob: -10.125059127807617
    3. '1' → logprob: -10.875059127807617
    4. '   ' → logprob: -14.875059127807617
    5. '	v' → logprob: -15.750059127807617
    6. 'return' → logprob: -18.250059127807617
    7. '
' → logprob: -18.250059127807617
    8. '  ' → logprob: -18.375059127807617
    9. ' ' → logprob: -18.750059127807617
    10. '    ' → logprob: -18.875059127807617

Token 674: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0010549608850851655
    2. 'next' → logprob: -7.376054763793945
    3. '1' → logprob: -8.376054763793945
    4. 'Next' → logprob: -9.001054763793945
    5. 'ext' → logprob: -9.626054763793945
    6. '_previous' → logprob: -13.626054763793945
    7. '_NEXT' → logprob: -13.751054763793945
    8. ' next' → logprob: -13.751054763793945
    9. 'v' → logprob: -14.251054763793945
    10. '[next' → logprob: -14.251054763793945

Token 675: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017947778105735779
    2. ')' → logprob: -7.001794815063477
    3. ']
' → logprob: -7.876794815063477
    4. '<|end|>' → logprob: -8.501794815063477
    5. ' ]' → logprob: -9.126794815063477
    6. '   ' → logprob: -9.376794815063477
    7. '}' → logprob: -10.501794815063477
    8. '+' → logprob: -10.876794815063477
    9. '']' → logprob: -11.126794815063477
    10. ']+' → logprob: -11.876794815063477

Token 676: '                   ' (ID: 699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032330902758985758
    2. '<|end|>' → logprob: -7.003232955932617
    3. ')' → logprob: -7.378232955932617
    4. 'time' → logprob: -7.628232955932617
    5. '```' → logprob: -7.878232955932617
    6. 'else' → logprob: -8.753232955932617
    7. '       ' → logprob: -9.253232955932617
    8. '[' → logprob: -9.503232955932617
    9. 'elif' → logprob: -9.503232955932617
    10. '#' → logprob: -9.753232955932617

Token 677: ' dist' (ID: 3601)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 678: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.00025192240718752146
    2. 'ation' → logprob: -9.625251770019531
    3. 'inition' → logprob: -9.625251770019531
    4. '[' → logprob: -10.500251770019531
    5. '   ' → logprob: -11.000251770019531
    6. 'inations' → logprob: -11.250251770019531
    7. 'INATION' → logprob: -11.500251770019531
    8. 'nation' → logprob: -11.625251770019531
    9. 'in' → logprob: -12.500251770019531
    10. 'uration' → logprob: -12.625251770019531

Token 679: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03853930905461311
    2. ' =' → logprob: -3.288539409637451
    3. ',' → logprob: -7.913539409637451
    4. '+=' → logprob: -9.788538932800293
    5. ' +=' → logprob: -9.788538932800293
    6. ' ' → logprob: -12.538538932800293
    7. ')' → logprob: -12.663538932800293
    8. ' ,' → logprob: -12.913538932800293
    9. '<|end|>' → logprob: -12.913538932800293
    10. '==' → logprob: -13.038538932800293

Token 680: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003457136917859316
    2. ' ' → logprob: -8.000346183776855
    3. 'v' → logprob: -12.250346183776855
    4. '0' → logprob: -13.250346183776855
    5. '   ' → logprob: -13.375346183776855
    6. 'return' → logprob: -13.875346183776855
    7. '	' → logprob: -15.250346183776855
    8. ' v' → logprob: -16.00034523010254
    9. ' ' → logprob: -16.25034523010254
    10. '                   ' → logprob: -16.37534523010254

Token 681: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018935515254270285
    2. ' ' → logprob: -9.000189781188965
    3. 'v' → logprob: -9.750189781188965
    4. 'return' → logprob: -12.875189781188965
    5. '   ' → logprob: -14.062689781188965
    6. '0' → logprob: -14.250189781188965
    7. ' v' → logprob: -14.562689781188965
    8. '```' → logprob: -14.750189781188965
    9. '<|end|>' → logprob: -15.187689781188965
    10. '  ' → logprob: -15.750189781188965

Token 682: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3411862254142761
    2. '<|end|>' → logprob: -1.966186285018921
    3. '   ' → logprob: -2.716186285018921
    4. ':' → logprob: -3.216186285018921
    5. '[' → logprob: -4.716186046600342
    6. ' ' → logprob: -4.841186046600342
    7. '
' → logprob: -5.466186046600342
    8. 'elif' → logprob: -5.841186046600342
    9. '    ' → logprob: -5.841186046600342
    10. ']' → logprob: -6.466186046600342

Token 683: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020807193592190742
    2. 'time' → logprob: -4.270807266235352
    3. 'else' → logprob: -5.895807266235352
    4. '<|end|>' → logprob: -6.520807266235352
    5. 'elif' → logprob: -7.395807266235352
    6. 'while' → logprob: -7.395807266235352
    7. '```' → logprob: -8.145807266235352
    8. '  ' → logprob: -8.270807266235352
    9. 'continue' → logprob: -9.020807266235352
    10. '    ' → logprob: -9.520807266235352

Token 684: ' time' (ID: 1058)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024196023121476173
    2. '<|end|>' → logprob: -4.524196147918701
    3. 'else' → logprob: -5.649196147918701
    4. '       ' → logprob: -6.149196147918701
    5. ' else' → logprob: -6.274196147918701
    6. ')' → logprob: -6.649196147918701
    7. '    ' → logprob: -7.024196147918701
    8. ' ' → logprob: -7.149196147918701
    9. 'elif' → logprob: -7.774196147918701
    10. '  ' → logprob: -8.274195671081543

Token 685: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31337830424308777
    2. ' +=' → logprob: -1.3133783340454102
    3. '+' → logprob: -9.31337833404541
    4. '=' → logprob: -10.56337833404541
    5. ']+=' → logprob: -15.68837833404541
    6. ' =' → logprob: -16.188377380371094
    7. ' +' → logprob: -17.188377380371094
    8. '   ' → logprob: -17.188377380371094
    9. ')' → logprob: -17.563377380371094
    10. '+='' → logprob: -17.938377380371094

Token 686: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003221150254830718
    2. ' ' → logprob: -8.125322341918945
    3. '   ' → logprob: -10.625322341918945
    4. '0' → logprob: -14.625322341918945
    5. '  ' → logprob: -14.750322341918945
    6. '```' → logprob: -15.625322341918945
    7. '100' → logprob: -16.000322341918945
    8. '10' → logprob: -16.250322341918945
    9. 'remaining' → logprob: -16.437822341918945
    10. '
' → logprob: -16.687822341918945

Token 687: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.500035285949707
    3. '   ' → logprob: -11.875035285949707
    4. '0' → logprob: -15.250035285949707
    5. '100' → logprob: -15.375035285949707
    6. '10' → logprob: -15.625035285949707
    7. '       ' → logprob: -16.562536239624023
    8. '
' → logprob: -16.562536239624023
    9. 'remaining' → logprob: -16.750036239624023
    10. '  ' → logprob: -16.875036239624023

Token 688: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4601973593235016
    2. '<|end|>' → logprob: -1.2101973295211792
    3. '
' → logprob: -2.9601974487304688
    4. '```' → logprob: -4.835197448730469
    5. '\n' → logprob: -5.585197448730469
    6. ':' → logprob: -6.710197448730469
    7. '#' → logprob: -6.835197448730469
    8. '   ' → logprob: -7.085197448730469
    9. '<|end|>' → logprob: -7.460197448730469
    10. '=' → logprob: -7.585197448730469

Token 689: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 690: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 691: ' time' (ID: 1058)
  Prédit: ' delivering'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' delivering' → logprob: -0.35696232318878174
    2. ' returning' → logprob: -1.9819623231887817
    3. ' not' → logprob: -2.606962203979492
    4. 'return' → logprob: -2.981962203979492
    5. 'not' → logprob: -4.356962203979492
    6. ' time' → logprob: -4.856962203979492
    7. 'del' → logprob: -5.106962203979492
    8. 'time' → logprob: -5.231962203979492
    9. 'remaining' → logprob: -6.606962203979492
    10. ' remaining' → logprob: -6.731962203979492

Token 692: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3293590247631073
    2. ' >=' → logprob: -2.4543590545654297
    3. ' <=' → logprob: -2.4543590545654297
    4. '==' → logprob: -2.8293590545654297
    5. ' <' → logprob: -3.3293590545654297
    6. '<=' → logprob: -5.45435905456543
    7. '>=' → logprob: -5.70435905456543
    8. '<' → logprob: -5.82935905456543
    9. ' >' → logprob: -6.32935905456543
    10. '>' → logprob: -7.82935905456543

Token 693: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.009769781492650509
    2. ' T' → logprob: -4.634769916534424
    3. '	T' → logprob: -12.259769439697266
    4. '100' → logprob: -13.134769439697266
    5. ' ' → logprob: -13.634769439697266
    6. '1' → logprob: -13.634769439697266
    7. '   ' → logprob: -13.884769439697266
    8. 'len' → logprob: -14.259769439697266
    9. '10' → logprob: -14.259769439697266
    10. 'remaining' → logprob: -14.509769439697266

Token 694: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.580929347255733e-05
    2. 'Max' → logprob: -11.875016212463379
    3. ' _' → logprob: -12.500016212463379
    4. 'max' → logprob: -12.875016212463379
    5. '_' → logprob: -13.250016212463379
    6. '_MAX' → logprob: -14.500016212463379
    7. '_Max' → logprob: -15.750016212463379
    8. ' Max' → logprob: -18.125015258789062
    9. '_min' → logprob: -18.375015258789062
    10. 'MAX' → logprob: -18.625015258789062

Token 695: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42120522260665894
    2. ':
' → logprob: -1.1712052822113037
    3. ' and' → logprob: -3.6712052822113037
    4. '       ' → logprob: -6.046205043792725
    5. '<|end|>' → logprob: -6.046205043792725
    6. '   ' → logprob: -6.671205043792725
    7. '               ' → logprob: -7.171205043792725
    8. '           ' → logprob: -8.171205520629883
    9. '```' → logprob: -8.421205520629883
    10. 'and' → logprob: -8.421205520629883

Token 696: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8634947538375854
    2. ' continue' → logprob: -1.6134947538375854
    3. 'continue' → logprob: -1.7384947538375854
    4. '   ' → logprob: -1.8634947538375854
    5. '<|end|>' → logprob: -4.113494873046875
    6. '           ' → logprob: -4.488494873046875
    7. '```' → logprob: -4.613494873046875
    8. '	continue' → logprob: -5.363494873046875
    9. '               ' → logprob: -5.613494873046875
    10. ' ' → logprob: -7.988494873046875

Token 697: ' n' (ID: 297)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.177610844373703
    2. 'print' → logprob: -2.5526108741760254
    3. ' continue' → logprob: -2.9276108741760254
    4. '   ' → logprob: -4.052610874176025
    5. ' print' → logprob: -5.802610874176025
    6. '           ' → logprob: -5.802610874176025
    7. '               ' → logprob: -5.927610874176025
    8. 'pass' → logprob: -6.177610874176025
    9. '       ' → logprob: -6.677610874176025
    10. '                   ' → logprob: -7.177610874176025

Token 698: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1815844774246216
    2. '+=' → logprob: -1.4315844774246216
    3. '=' → logprob: -1.5565844774246216
    4. ' =' → logprob: -2.431584358215332
    5. ' +=' → logprob: -2.931584358215332
    6. '<|end|>' → logprob: -3.181584358215332
    7. ')' → logprob: -3.931584358215332
    8. '.' → logprob: -5.056584358215332
    9. '[' → logprob: -5.181584358215332
    10. ' -=' → logprob: -5.806584358215332

Token 699: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.9424725148128346e-05
    2. ' int' → logprob: -10.000049591064453
    3. 'input' → logprob: -13.000049591064453
    4. 'n' → logprob: -14.375049591064453
    5. '[int' → logprob: -14.375049591064453
    6. '1' → logprob: -16.000049591064453
    7. 'len' → logprob: -16.000049591064453
    8. '<int' → logprob: -16.250049591064453
    9. '(int' → logprob: -16.750049591064453
    10. '	int' → logprob: -16.875049591064453

Token 700: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0024763736873865128
    2. 'input' → logprob: -6.002476215362549
    3. ' input' → logprob: -15.127476692199707
    4. '=input' → logprob: -15.877476692199707
    5. '(' → logprob: -16.00247573852539
    6. '()' → logprob: -17.00247573852539
    7. ',input' → logprob: -17.12747573852539
    8. '<input' → logprob: -17.12747573852539
    9. '	input' → logprob: -17.87747573852539
    10. '[input' → logprob: -18.25247573852539

Token 701: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06200409308075905
    2. '())
' → logprob: -2.8120040893554688
    3. '()' → logprob: -10.937004089355469
    4. '())
' → logprob: -11.937004089355469
    5. ')' → logprob: -12.187004089355469
    6. '())

' → logprob: -12.312004089355469
    7. '()
' → logprob: -14.062004089355469
    8. ' ())' → logprob: -14.187004089355469
    9. '().' → logprob: -14.437004089355469
    10. '();)' → logprob: -16.06200408935547

Token 702: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7572991251945496
    2. '<|end|>' → logprob: -0.7572991251945496
    3. ')' → logprob: -3.3822991847991943
    4. '[' → logprob: -5.007298946380615
    5. '       ' → logprob: -5.132298946380615
    6. ' ' → logprob: -5.882298946380615
    7. '<|end|>' → logprob: -6.132298946380615
    8. '               ' → logprob: -6.382298946380615
    9. ':' → logprob: -6.632298946380615
    10. '    ' → logprob: -7.007298946380615

Token 703: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0024484232999384403
    2. '   ' → logprob: -6.752448558807373
    3. ' t' → logprob: -8.002448081970215
    4. 'new' → logprob: -8.502448081970215
    5. '               ' → logprob: -8.752448081970215
    6. 'order' → logprob: -9.127448081970215
    7. '       ' → logprob: -9.377448081970215
    8. '           ' → logprob: -9.377448081970215
    9. '                   ' → logprob: -9.627448081970215
    10. 'if' → logprob: -9.752448081970215

Token 704: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12643006443977356
    2. '=' → logprob: -2.251430034637451
    3. '[' → logprob: -5.626430034637451
    4. ')' → logprob: -5.876430034637451
    5. '.append' → logprob: -6.001430034637451
    6. '_' → logprob: -6.876430034637451
    7. '.' → logprob: -7.251430034637451
    8. ',' → logprob: -7.751430034637451
    9. '[]' → logprob: -7.751430034637451
    10. '   ' → logprob: -8.37643051147461

Token 705: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0006721630343236029
    2. '[input' → logprob: -8.000672340393066
    3. '[list' → logprob: -8.750672340393066
    4. ' [' → logprob: -8.750672340393066
    5. '[t' → logprob: -11.500672340393066
    6. '[' → logprob: -12.125672340393066
    7. 'int' → logprob: -13.000672340393066
    8. 'list' → logprob: -13.500672340393066
    9. '[str' → logprob: -15.250672340393066
    10. '[List' → logprob: -15.875672340393066

Token 706: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.512236498361744e-07
    2. '[int' → logprob: -14.875000953674316
    3. ' int' → logprob: -17.125
    4. '*' → logprob: -17.5
    5. '<int' → logprob: -18.5
    6. '(int' → logprob: -18.875
    7. 'list' → logprob: -19.0
    8. '  ' → logprob: -19.0
    9. '	int' → logprob: -19.125
    10. 'input' → logprob: -19.5

Token 707: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12700769305229187
    2. '(input' → logprob: -2.1270077228546143
    3. ',input' → logprob: -10.877007484436035
    4. ' input' → logprob: -11.127007484436035
    5. '=input' → logprob: -11.127007484436035
    6. '[input' → logprob: -11.377007484436035
    7. '.input' → logprob: -11.752007484436035
    8. '()' → logprob: -12.627007484436035
    9. '(' → logprob: -12.627007484436035
    10. '<input' → logprob: -13.502007484436035

Token 708: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.584239938296378e-06
    2. '.split' → logprob: -12.125007629394531
    3. '()' → logprob: -13.750007629394531
    4. '()[' → logprob: -14.250007629394531
    5. '()].' → logprob: -16.50000762939453
    6. '()).' → logprob: -16.62500762939453
    7. ' ().' → logprob: -16.62500762939453
    8. '())' → logprob: -16.62500762939453
    9. '()
' → logprob: -17.75000762939453
    10. '.' → logprob: -18.37500762939453

Token 709: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.511406809295295e-06
    2. 'strip' → logprob: -12.000006675720215
    3. ' split' → logprob: -16.0000057220459
    4. 'spl' → logprob: -16.8750057220459
    5. '.split' → logprob: -17.2500057220459
    6. '(split' → logprob: -18.1250057220459
    7. 'pop' → logprob: -18.2500057220459
    8. 'rstrip' → logprob: -18.7500057220459
    9. '0' → logprob: -19.0000057220459
    10. '
' → logprob: -19.5000057220459

Token 710: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -5.2524021157296374e-05
    2. '[' → logprob: -10.250052452087402
    3. '()' → logprob: -11.500052452087402
    4. '())[' → logprob: -12.750052452087402
    5. '()][' → logprob: -13.500052452087402
    6. '('' → logprob: -13.875052452087402
    7. ')[' → logprob: -13.875052452087402
    8. '()['' → logprob: -15.750052452087402
    9. '(' → logprob: -15.875052452087402
    10. '()
' → logprob: -16.12505340576172

Token 711: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4617256056226324e-05
    2. ' ' → logprob: -12.125014305114746
    3. '
' → logprob: -13.125014305114746
    4. '0' → logprob: -13.250014305114746
    5. ']' → logprob: -13.875014305114746
    6. '][' → logprob: -14.000014305114746
    7. '```' → logprob: -14.437514305114746
    8. '])[' → logprob: -14.562514305114746
    9. '   ' → logprob: -14.687514305114746
    10. ')[' → logprob: -15.187514305114746

Token 712: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005619685165584087
    2. ')]' → logprob: -5.255619525909424
    3. ')])' → logprob: -8.130620002746582
    4. '),' → logprob: -10.755620002746582
    5. ' )' → logprob: -11.005620002746582
    6. ')]
' → logprob: -11.130620002746582
    7. ')
' → logprob: -11.380620002746582
    8. '])' → logprob: -11.630620002746582
    9. '))' → logprob: -12.630620002746582
    10. ')])
' → logprob: -12.880620002746582

Token 713: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.030659573152661324
    2. 'for' → logprob: -3.5306596755981445
    3. ')' → logprob: -7.4056596755981445
    4. ']' → logprob: -8.405659675598145
    5. '	for' → logprob: -10.030659675598145
    6. '<|end|>' → logprob: -11.780659675598145
    7. '[' → logprob: -12.030659675598145
    8. '])' → logprob: -12.530659675598145
    9. ',' → logprob: -12.905659675598145
    10. ')]' → logprob: -13.280659675598145

Token 714: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.0259150157216936e-05
    2. '_range' → logprob: -10.12505054473877
    3. ' range' → logprob: -11.87505054473877
    4. ' _' → logprob: -13.12505054473877
    5. 'range' → logprob: -14.37505054473877
    6. '_
' → logprob: -14.75005054473877
    7. '_i' → logprob: -16.500049591064453
    8. '
' → logprob: -17.750049591064453
    9. '_in' → logprob: -18.000049591064453
    10. ' in' → logprob: -18.250049591064453

Token 715: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0036478189285844564
    2. '_' → logprob: -6.003647804260254
    3. ' range' → logprob: -6.753647804260254
    4. '(range' → logprob: -13.003647804260254
    5. '_range' → logprob: -13.003647804260254
    6. '	range' → logprob: -15.503647804260254
    7. '_=' → logprob: -16.00364875793457
    8. ' _' → logprob: -17.37864875793457
    9. '_]' → logprob: -18.00364875793457
    10. '_
' → logprob: -18.00364875793457

Token 716: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0021933254320174456
    2. '_' → logprob: -6.252193450927734
    3. ' range' → logprob: -8.252193450927734
    4. '_range' → logprob: -12.502193450927734
    5. '	range' → logprob: -16.252193450927734
    6. '_
' → logprob: -16.502193450927734
    7. '_]' → logprob: -17.627193450927734
    8. '(range' → logprob: -18.127193450927734
    9. '_=' → logprob: -18.502193450927734
    10. '_
' → logprob: -19.377193450927734

Token 717: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00671584764495492
    2. ' range' → logprob: -5.006715774536133
    3. '(range' → logprob: -15.131715774536133
    4. '_' → logprob: -16.131715774536133
    5. '_range' → logprob: -16.256715774536133
    6. '	range' → logprob: -17.381715774536133
    7. '   ' → logprob: -17.756715774536133
    8. ' ' → logprob: -19.381715774536133
    9. 'n' → logprob: -19.506715774536133
    10. '
' → logprob: -19.506715774536133

Token 718: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0173893291503191
    2. ')]' → logprob: -4.392389297485352
    3. ']
' → logprob: -6.142389297485352
    4. ')' → logprob: -6.642389297485352
    5. '])' → logprob: -6.642389297485352
    6. ' ]' → logprob: -10.142389297485352
    7. ')])' → logprob: -11.017389297485352
    8. '])]' → logprob: -11.142389297485352
    9. '   ' → logprob: -11.767389297485352
    10. ']
' → logprob: -11.892389297485352

Token 719: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 720: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -0.007870648987591267
    2. ' order' → logprob: -5.507870674133301
    3. '   ' → logprob: -6.757870674133301
    4. '```' → logprob: -7.507870674133301
    5. 'if' → logprob: -7.632870674133301
    6. 'for' → logprob: -7.882870674133301
    7. 'time' → logprob: -8.0078706741333
    8. '       ' → logprob: -8.3828706741333
    9. '	order' → logprob: -8.3828706741333
    10. '<|end|>' → logprob: -9.3828706741333

Token 721: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011114011285826564
    2. '.' → logprob: -6.8761115074157715
    3. '.extend' → logprob: -9.626111030578613
    4. '.app' → logprob: -12.251111030578613
    5. '.setdefault' → logprob: -12.876111030578613
    6. '.ap' → logprob: -13.376111030578613
    7. ' .' → logprob: -13.876111030578613
    8. '.add' → logprob: -13.876111030578613
    9. '<|end|>' → logprob: -14.626111030578613
    10. '.clear' → logprob: -15.126111030578613

Token 722: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -2.5776860184123507e-06
    2. 't' → logprob: -13.25000286102295
    3. '(' → logprob: -14.12500286102295
    4. '(
' → logprob: -19.250001907348633
    5. ' (' → logprob: -21.125001907348633
    6. '	t' → logprob: -21.625001907348633
    7. '   ' → logprob: -21.875001907348633
    8. ' t' → logprob: -22.125001907348633
    9. '((' → logprob: -22.750001907348633
    10. '[t' → logprob: -23.375001907348633

Token 723: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009717292850837111
    2. ')
' → logprob: -7.000971794128418
    3. '               ' → logprob: -10.500971794128418
    4. '   ' → logprob: -11.250971794128418
    5. '           ' → logprob: -11.625971794128418
    6. '<|end|>' → logprob: -12.250971794128418
    7. '       ' → logprob: -13.000971794128418
    8. ' )' → logprob: -13.750971794128418
    9. ')
' → logprob: -15.000971794128418
    10. '                   ' → logprob: -15.250971794128418

Token 724: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07951545715332031
    2. '<|end|>' → logprob: -2.7045154571533203
    3. '   ' → logprob: -6.07951545715332
    4. '```' → logprob: -6.20451545715332
    5. ']' → logprob: -6.32951545715332
    6. '
' → logprob: -7.20451545715332
    7. '[' → logprob: -7.32951545715332
    8. '<|end|>' → logprob: -8.32951545715332
    9. 'else' → logprob: -8.57951545715332
    10. 'elif' → logprob: -8.82951545715332

Token 725: ' if' (ID: 538)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6648062467575073
    2. '<|end|>' → logprob: -1.4148062467575073
    3. 'else' → logprob: -1.9148062467575073
    4. 'time' → logprob: -3.289806365966797
    5. ' continue' → logprob: -3.914806365966797
    6. '   ' → logprob: -4.539806365966797
    7. 'elif' → logprob: -5.289806365966797
    8. '```' → logprob: -5.539806365966797
    9. '	continue' → logprob: -5.664806365966797
    10. ')' → logprob: -5.664806365966797

Token 726: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.5760258436203003
    2. ' problem' → logprob: -0.8260258436203003
    3. '(problem' → logprob: -10.07602596282959
    4. 'prob' → logprob: -11.07602596282959
    5. 'not' → logprob: -11.32602596282959
    6. 'Problem' → logprob: -12.32602596282959
    7. ' not' → logprob: -12.82602596282959
    8. 'proble' → logprob: -13.70102596282959
    9. 't' → logprob: -13.82602596282959
    10. '_problem' → logprob: -13.95102596282959

Token 727: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.8206473871250637e-05
    2. '_' → logprob: -10.625028610229492
    3. '_a' → logprob: -13.000028610229492
    4. 'b' → logprob: -14.625028610229492
    5. ')' → logprob: -14.750028610229492
    6. '=' → logprob: -15.375028610229492
    7. ' _' → logprob: -15.750028610229492
    8. 'a' → logprob: -15.875028610229492
    9. '```' → logprob: -16.375028610229492
    10. ')_' → logprob: -17.625028610229492

Token 728: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024889182299375534
    2. ':
' → logprob: -3.7748892307281494
    3. '   ' → logprob: -7.39988899230957
    4. '           ' → logprob: -7.77488899230957
    5. '       ' → logprob: -7.89988899230957
    6. '               ' → logprob: -9.02488899230957
    7. '=' → logprob: -10.64988899230957
    8. '==' → logprob: -10.64988899230957
    9. '):
' → logprob: -11.14988899230957
    10. '):' → logprob: -11.27488899230957

Token 729: '                   ' (ID: 699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5194055438041687
    2. '                   ' → logprob: -1.5194056034088135
    3. '               ' → logprob: -1.8944056034088135
    4. '           ' → logprob: -4.144405364990234
    5. '[' → logprob: -4.394405364990234
    6. '       ' → logprob: -5.769405364990234
    7. ' [' → logprob: -6.144405364990234
    8. '[input' → logprob: -6.144405364990234
    9. '                       ' → logprob: -10.519405364990234
    10. ' for' → logprob: -10.894405364990234

Token 730: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -1.0445127372804563e-05
    2. ' [' → logprob: -12.25001049041748
    3. '[' (adapté à ' [') → logprob: -13.25001049041748
    4. 'input' → logprob: -13.62501049041748
    5. '[int' → logprob: -13.62501049041748
    6. '   ' → logprob: -13.75001049041748
    7. 'for' → logprob: -16.625009536743164
    8. '[i' → logprob: -17.375009536743164
    9. '[n' → logprob: -18.125009536743164
    10. '[line' → logprob: -18.375009536743164

Token 731: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -8.65707261255011e-06
    2. '[input' → logprob: -12.375008583068848
    3. ' input' → logprob: -12.500008583068848
    4. 'int' → logprob: -15.375008583068848
    5. '   ' → logprob: -15.625008583068848
    6. '(input' → logprob: -15.875008583068848
    7. '	input' → logprob: -17.250009536743164
    8. ' ' → logprob: -17.500009536743164
    9. '[' → logprob: -17.875009536743164
    10. 'inputs' → logprob: -18.000009536743164

Token 732: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.173704271830502e-06
    2. '()]' → logprob: -13.00000286102295
    3. '()
' → logprob: -14.62500286102295
    4. ' ()' → logprob: -15.12500286102295
    5. 'for' → logprob: -16.875003814697266
    6. '(' → logprob: -18.375003814697266
    7. '()]
' → logprob: -18.500003814697266
    8. '()`' → logprob: -19.500003814697266
    9. '()[' → logprob: -19.750003814697266
    10. '()
' → logprob: -20.125003814697266

Token 733: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25561532378196716
    2. 'for' → logprob: -1.5056153535842896
    3. '()' → logprob: -6.005615234375
    4. ']' → logprob: -7.005615234375
    5. ')' → logprob: -8.380615234375
    6. '	for' → logprob: -10.380615234375
    7. '()]' → logprob: -11.005615234375
    8. '[' → logprob: -11.505615234375
    9. '[]' → logprob: -11.880615234375
    10. ')]' → logprob: -12.380615234375

Token 734: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005604196921922266
    2. ' range' → logprob: -8.250560760498047
    3. 'range' → logprob: -8.250560760498047
    4. ' _' → logprob: -10.875560760498047
    5. '_range' → logprob: -10.875560760498047
    6. '_=' → logprob: -17.375560760498047
    7. '_
' → logprob: -17.375560760498047
    8. '_
' → logprob: -17.500560760498047
    9. '    ' → logprob: -18.500560760498047
    10. '_]' → logprob: -18.875560760498047

Token 735: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.21302096545696259
    2. '_' → logprob: -1.713020920753479
    3. ' range' → logprob: -4.4630208015441895
    4. '_range' → logprob: -11.463021278381348
    5. '_]' → logprob: -14.088021278381348
    6. '(range' → logprob: -14.338021278381348
    7. '	range' → logprob: -14.838021278381348
    8. '_
' → logprob: -15.213021278381348
    9. '_=' → logprob: -15.338021278381348
    10. ' _' → logprob: -15.463021278381348

Token 736: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.027235521003603935
    2. '_' → logprob: -3.777235507965088
    3. ' range' → logprob: -5.527235507965088
    4. '_range' → logprob: -12.402235984802246
    5. '	range' → logprob: -15.027235984802246
    6. '(range' → logprob: -15.402235984802246
    7. 'r' → logprob: -16.27723503112793
    8. 'rang' → logprob: -16.77723503112793
    9. '   ' → logprob: -16.90223503112793
    10. ' _' → logprob: -16.90223503112793

Token 737: '(int' (ID: 2742)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2271382063627243
    2. 'int' → logprob: -1.7271381616592407
    3. ' range' → logprob: -3.9771382808685303
    4. '(int' → logprob: -5.227138042449951
    5. '_' → logprob: -6.977138042449951
    6. '   ' → logprob: -9.10213851928711
    7. '  ' → logprob: -9.47713851928711
    8. ' int' → logprob: -9.72713851928711
    9. '[int' → logprob: -9.85213851928711
    10. ' ' → logprob: -10.60213851928711

Token 738: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07903872430324554
    2. '(input' → logprob: -2.579038619995117
    3. ' input' → logprob: -8.829038619995117
    4. '<input' → logprob: -13.954038619995117
    5. '=input' → logprob: -14.204038619995117
    6. ',input' → logprob: -14.579038619995117
    7. '[input' → logprob: -15.204038619995117
    8. '	input' → logprob: -15.579038619995117
    9. '0' → logprob: -17.329038619995117
    10. 'import' → logprob: -17.704038619995117

Token 739: '()))' (ID: 16829)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0006713286275044084
    2. '()))' → logprob: -8.12567138671875
    3. ')])' → logprob: -8.75067138671875
    4. '()' → logprob: -8.75067138671875
    5. ')]' → logprob: -10.00067138671875
    6. '()]' → logprob: -12.12567138671875
    7. ' ())' → logprob: -13.00067138671875
    8. '])]' → logprob: -13.25067138671875
    9. '())
' → logprob: -14.25067138671875
    10. '(' → logprob: -14.50067138671875

Token 740: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.387294739484787
    2. ')]' → logprob: -1.2622947692871094
    3. ')' → logprob: -3.6372947692871094
    4. ']
' → logprob: -5.387294769287109
    5. '])' → logprob: -5.762294769287109
    6. '()]' → logprob: -6.137294769287109
    7. ')])' → logprob: -7.262294769287109
    8. '               ' → logprob: -8.38729476928711
    9. ')
' → logprob: -8.63729476928711
    10. '<|end|>' → logprob: -8.63729476928711

Token 741: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23909693956375122
    2. '<|end|>' → logprob: -1.6140968799591064
    3. '   ' → logprob: -5.2390971183776855
    4. ']' → logprob: -6.2390971183776855
    5. ':' → logprob: -6.7390971183776855
    6. '```' → logprob: -7.1140971183776855
    7. '<|end|>' → logprob: -7.6140971183776855
    8. '#' → logprob: -7.7390971183776855
    9. '}' → logprob: -7.8640971183776855
    10. 'else' → logprob: -8.114096641540527

Token 742: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 743: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3179820775985718
    2. ':
' → logprob: -1.3179820775985718
    3. '           ' → logprob: -5.817982196807861
    4. '       ' → logprob: -7.067982196807861
    5. '   ' → logprob: -7.692982196807861
    6. '```' → logprob: -9.067981719970703
    7. '{' → logprob: -9.192981719970703
    8. '               ' → logprob: -10.567981719970703
    9. ' :
' → logprob: -11.067981719970703
    10. ' :' → logprob: -11.192981719970703

Token 744: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6308528780937195
    2. '           ' → logprob: -1.0058529376983643
    3. '   ' → logprob: -2.6308529376983643
    4. ' time' → logprob: -3.7558529376983643
    5. 'time' → logprob: -6.005852699279785
    6. '               ' → logprob: -6.630852699279785
    7. '
' → logprob: -7.255852699279785
    8. '	time' → logprob: -7.255852699279785
    9. '```' → logprob: -7.630852699279785
    10. 'print' → logprob: -8.130852699279785

Token 745: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.7347357869148254
    2. 'time' (adapté à ' time') → logprob: -1.9847357273101807
    3. 'print' → logprob: -2.4847357273101807
    4. ' remaining' → logprob: -2.4847357273101807
    5. ' print' → logprob: -2.8597357273101807
    6. 'pass' → logprob: -2.9847357273101807
    7. 'remaining' → logprob: -3.2347357273101807
    8. ' pass' → logprob: -3.3597357273101807
    9. ' continue' → logprob: -4.23473596572876
    10. '   ' → logprob: -4.98473596572876

Token 746: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3920798897743225
    2. '+=' → logprob: -1.1420798301696777
    3. '+' → logprob: -5.267079830169678
    4. '=' → logprob: -11.017080307006836
    5. ' +' → logprob: -11.267080307006836
    6. ')' → logprob: -13.392080307006836
    7. ' ' → logprob: -14.142080307006836
    8. ']+=' → logprob: -14.142080307006836
    9. ' -=' → logprob: -14.267080307006836
    10. '[' → logprob: -14.392080307006836

Token 747: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019360085716471076
    2. ' ' → logprob: -6.251935958862305
    3. '0' → logprob: -12.251935958862305
    4. '   ' → logprob: -13.376935958862305
    5. ' ' → logprob: -15.251935958862305
    6. '```' → logprob: -15.251935958862305
    7. 'remaining' → logprob: -16.314435958862305
    8. '  ' → logprob: -16.439435958862305
    9. '           ' → logprob: -16.501935958862305
    10. '       ' → logprob: -16.939435958862305

Token 748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.750059127807617
    4. '
' → logprob: -17.250059127807617
    5. '0' → logprob: -17.375059127807617
    6. '```' → logprob: -17.875059127807617
    7. '  ' → logprob: -18.937559127807617
    8. ' ' → logprob: -19.187559127807617
    9. '１' → logprob: -19.375059127807617
    10. 'remaining' → logprob: -19.625059127807617

Token 749: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 750: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5470861196517944
    2. '<|end|>' → logprob: -1.2970861196517944
    3. ']' → logprob: -3.047086238861084
    4. '```' → logprob: -3.297086238861084
    5. ':' → logprob: -3.547086238861084
    6. '[' → logprob: -3.797086238861084
    7. '#' → logprob: -5.547086238861084
    8. '}' → logprob: -6.047086238861084
    9. 'else' → logprob: -7.172086238861084
    10. '<|end|>' → logprob: -7.172086238861084

Token 751: ' if' (ID: 538)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.608847439289093
    2. 'else' → logprob: -1.6088473796844482
    3. '<|end|>' → logprob: -1.6088473796844482
    4. '```' → logprob: -3.8588473796844482
    5. ' continue' → logprob: -4.108847618103027
    6. '   ' → logprob: -4.858847618103027
    7. '       ' → logprob: -6.233847618103027
    8. ' else' → logprob: -6.358847618103027
    9. '	continue' → logprob: -6.733847618103027
    10. ')' → logprob: -6.983847618103027

Token 752: ' time' (ID: 1058)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0030657052993774
    2. ' delivering' → logprob: -1.6280657052993774
    3. ' problem' → logprob: -2.628065586090088
    4. 'not' → logprob: -2.628065586090088
    5. ' remaining' → logprob: -2.753065586090088
    6. 'remaining' → logprob: -2.878065586090088
    7. ' v' → logprob: -3.003065586090088
    8. 'del' → logprob: -3.128065586090088
    9. 'problem' → logprob: -3.378065586090088
    10. ' returning' → logprob: -4.378065586090088

Token 753: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1794469803571701
    2. ' ==' → logprob: -2.4294469356536865
    3. '<' → logprob: -2.6794469356536865
    4. '==' → logprob: -5.179447174072266
    5. ' >=' → logprob: -6.804447174072266
    6. ' ' → logprob: -8.304447174072266
    7. ' <=' → logprob: -8.429447174072266
    8. ' +=' → logprob: -9.179447174072266
    9. ' !=' → logprob: -9.179447174072266
    10. '>=' → logprob: -10.179447174072266

Token 754: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.3868902921676636
    2. ' T' → logprob: -1.1368902921676636
    3. ' ' → logprob: -12.386890411376953
    4. 'input' → logprob: -12.636890411376953
    5. ' ' → logprob: -13.511890411376953
    6. ' input' → logprob: -13.511890411376953
    7. ' time' → logprob: -13.636890411376953
    8. 'int' → logprob: -13.761890411376953
    9. ' problem' → logprob: -13.886890411376953
    10. '```' → logprob: -14.011890411376953

Token 755: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0578165166079998
    2. '_' → logprob: -3.182816505432129
    3. ' _' → logprob: -4.307816505432129
    4. 'Max' → logprob: -7.182816505432129
    5. '_MAX' → logprob: -7.932816505432129
    6. '```' → logprob: -10.557816505432129
    7. '_Max' → logprob: -11.057816505432129
    8. '_
' → logprob: -11.182816505432129
    9. ' T' → logprob: -11.182816505432129
    10. 'T' → logprob: -11.307816505432129

Token 756: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15708774328231812
    2. ':
' → logprob: -2.282087802886963
    3. '               ' → logprob: -4.032087802886963
    4. '<|end|>' → logprob: -4.532087802886963
    5. ',' → logprob: -5.282087802886963
    6. '           ' → logprob: -5.657087802886963
    7. ' and' → logprob: -6.157087802886963
    8. '   ' → logprob: -6.532087802886963
    9. '       ' → logprob: -7.157087802886963
    10. '<|end|>' → logprob: -8.032087326049805

Token 757: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1768467426300049
    2. 'n' → logprob: -1.3018467426300049
    3. '       ' → logprob: -1.5518467426300049
    4. '           ' → logprob: -1.9268467426300049
    5. 't' → logprob: -4.301846504211426
    6. 'if' → logprob: -4.551846504211426
    7. 'v' → logprob: -4.676846504211426
    8. '[' → logprob: -5.051846504211426
    9. 'input' → logprob: -5.301846504211426
    10. '               ' → logprob: -5.301846504211426

Token 758: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.6413136720657349
    2. '   ' → logprob: -1.2663136720657349
    3. ' n' → logprob: -2.2663135528564453
    4. 'if' → logprob: -2.8913135528564453
    5. ' if' → logprob: -4.766313552856445
    6. 'continue' → logprob: -5.391313552856445
    7. ' continue' → logprob: -5.516313552856445
    8. 'v' → logprob: -5.641313552856445
    9. ' pass' → logprob: -5.766313552856445
    10. 'pass' → logprob: -6.266313552856445

Token 759: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026324333623051643
    2. '=' → logprob: -3.6513242721557617
    3. ')' → logprob: -12.401324272155762
    4. '<|end|>' → logprob: -12.401324272155762
    5. ' ' → logprob: -12.651324272155762
    6. '=input' → logprob: -12.901324272155762
    7. '   ' → logprob: -13.026324272155762
    8. '=int' → logprob: -13.276324272155762
    9. ',' → logprob: -13.401324272155762
    10. ' =
' → logprob: -13.776324272155762

Token 760: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011049824766814709
    2. ' int' → logprob: -4.511049747467041
    3. '[int' → logprob: -13.6360502243042
    4. '(int' → logprob: -15.1360502243042
    5. '=int' → logprob: -15.2610502243042
    6. '<int' → logprob: -15.2610502243042
    7. '	int' → logprob: -18.886049270629883
    8. ':int' → logprob: -19.511049270629883
    9. ' ' → logprob: -20.011049270629883
    10. '0' → logprob: -21.136049270629883

Token 761: '(input' (ID: 10054)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003929268103092909
    2. ' int' → logprob: -5.753929138183594
    3. '(int' → logprob: -7.503929138183594
    4. 'input' → logprob: -8.628929138183594
    5. '=int' → logprob: -11.128929138183594
    6. '<int' → logprob: -13.003929138183594
    7. '[int' → logprob: -13.128929138183594
    8. ' input' → logprob: -13.753929138183594
    9. '	int' → logprob: -14.253929138183594
    10. '(input' → logprob: -15.128929138183594

Token 762: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09026651084423065
    2. '())
' → logprob: -2.840266466140747
    3. '()' → logprob: -3.715266466140747
    4. ')' → logprob: -5.840266704559326
    5. '()
' → logprob: -7.465266704559326
    6. ')
' → logprob: -10.090266227722168
    7. '())
' → logprob: -11.465266227722168
    8. ' ())' → logprob: -12.465266227722168
    9. '()[' → logprob: -12.590266227722168
    10. '())

' → logprob: -12.965266227722168

Token 763: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 764: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.2014446258544922
    2. ' t' → logprob: -1.7014446258544922
    3. '	t' → logprob: -10.701444625854492
    4. '   ' → logprob: -12.826444625854492
    5. '`t' → logprob: -13.076444625854492
    6. ' ' → logprob: -13.701444625854492
    7. '       ' → logprob: -14.201444625854492
    8. ' ' → logprob: -14.201444625854492
    9. '```' → logprob: -15.451444625854492
    10. ' 
' → logprob: -15.701444625854492

Token 765: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012840057723224163
    2. '=' → logprob: -4.512840270996094
    3. ' +=' → logprob: -6.887840270996094
    4. '.append' → logprob: -7.887840270996094
    5. ')' → logprob: -9.137840270996094
    6. '[]' → logprob: -9.887840270996094
    7. '[' → logprob: -10.012840270996094
    8. ' ' → logprob: -10.137840270996094
    9. '   ' → logprob: -10.512840270996094
    10. '=[]' → logprob: -10.762840270996094

Token 766: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0011879685334861279
    2. '[input' → logprob: -6.751187801361084
    3. ' [' → logprob: -11.376188278198242
    4. '[list' → logprob: -12.626188278198242
    5. '[Int' → logprob: -14.001188278198242
    6. '[t' → logprob: -14.001188278198242
    7. '[' → logprob: -14.251188278198242
    8. '[List' → logprob: -15.126188278198242
    9. '[str' → logprob: -15.626188278198242
    10. '[ind' → logprob: -16.251188278198242

Token 767: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.755678961984813e-05
    2. '[int' → logprob: -9.500077247619629
    3. ' int' → logprob: -13.500077247619629
    4. 'list' → logprob: -13.750077247619629
    5. '[' → logprob: -15.250077247619629
    6. '(int' → logprob: -18.625078201293945
    7. 'input' → logprob: -19.875078201293945
    8. '<int' → logprob: -19.875078201293945
    9. 'ints' → logprob: -20.125078201293945
    10. '   ' → logprob: -20.625078201293945

Token 768: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.47413310408592224
    2. 'input' → logprob: -0.9741331338882446
    3. ' input' → logprob: -10.099133491516113
    4. '[input' → logprob: -12.474133491516113
    5. '(' → logprob: -12.849133491516113
    6. '=input' → logprob: -12.974133491516113
    7. '(int' → logprob: -13.099133491516113
    8. ',input' → logprob: -13.849133491516113
    9. 'int' → logprob: -13.974133491516113
    10. '<input' → logprob: -14.099133491516113

Token 769: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.706686690449715e-05
    2. '.split' → logprob: -9.750066757202148
    3. '()' → logprob: -12.125066757202148
    4. '.' → logprob: -13.500066757202148
    5. ' ().' → logprob: -14.125066757202148
    6. '].' → logprob: -15.250066757202148
    7. ' .' → logprob: -15.500066757202148
    8. '   ' → logprob: -15.750066757202148
    9. '()[' → logprob: -16.25006675720215
    10. '()).' → logprob: -16.37506675720215

Token 770: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.941850526549388e-06
    2. ' split' → logprob: -12.250007629394531
    3. '.split' → logprob: -13.500007629394531
    4. '0' → logprob: -14.500007629394531
    5. '1' → logprob: -15.000007629394531
    6. '```' → logprob: -15.125007629394531
    7. '
' → logprob: -15.625007629394531
    8. '(split' → logprob: -16.25000762939453
    9. 'spl' → logprob: -16.25000762939453
    10. '2' → logprob: -16.75000762939453

Token 771: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -2.4034345187828876e-05
    2. '()' → logprob: -10.75002384185791
    3. '()][' → logprob: -13.12502384185791
    4. '().' → logprob: -15.25002384185791
    5. '()]' → logprob: -16.000024795532227
    6. '()
' → logprob: -16.625024795532227
    7. '())[' → logprob: -17.250024795532227
    8. '[' → logprob: -17.500024795532227
    9. '()==' → logprob: -17.875024795532227
    10. '```' → logprob: -18.625024795532227

Token 772: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001302374730585143
    2. '()[' → logprob: -9.500130653381348
    3. ')[' → logprob: -10.500130653381348
    4. '][' → logprob: -12.000130653381348
    5. '0' → logprob: -12.250130653381348
    6. '')[' → logprob: -12.750130653381348
    7. ' ' → logprob: -13.125130653381348
    8. '[' → logprob: -13.250130653381348
    9. ')' → logprob: -13.375130653381348
    10. '   ' → logprob: -13.500130653381348

Token 773: '])' (ID: 4636)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.25135692954063416
    2. '())' → logprob: -2.126356840133667
    3. ')' → logprob: -3.001356840133667
    4. '])' → logprob: -3.501356840133667
    5. ')])' → logprob: -3.876356840133667
    6. ')]
' → logprob: -7.001357078552246
    7. '()' → logprob: -7.126357078552246
    8. '))' → logprob: -8.626357078552246
    9. '])]' → logprob: -9.126357078552246
    10. ')])
' → logprob: -9.126357078552246

Token 774: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4542011320590973
    2. ' for' → logprob: -1.204201102256775
    3. 'for' → logprob: -2.8292012214660645
    4. ')]' → logprob: -5.5792012214660645
    5. ' )' → logprob: -6.7042012214660645
    6. '])' → logprob: -7.7042012214660645
    7. '               ' → logprob: -7.8292012214660645
    8. ']' → logprob: -10.204200744628906
    9. '[' → logprob: -10.329200744628906
    10. ')])' → logprob: -10.579200744628906

Token 775: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09581819176673889
    2. ' range' → logprob: -2.970818281173706
    3. ' _' → logprob: -3.220818281173706
    4. 'range' → logprob: -8.845818519592285
    5. '_range' → logprob: -10.345818519592285
    6. ')' → logprob: -12.470818519592285
    7. ' ' → logprob: -13.845818519592285
    8. ' xrange' → logprob: -13.845818519592285
    9. ' ' → logprob: -14.095818519592285
    10. '	range' → logprob: -14.220818519592285

Token 776: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010166722349822521
    2. ' range' → logprob: -5.010166645050049
    3. ' _' → logprob: -6.385166645050049
    4. '_range' → logprob: -7.135166645050049
    5. 'range' → logprob: -7.135166645050049
    6. ''' → logprob: -9.510167121887207
    7. '_]' → logprob: -10.885167121887207
    8. '(' → logprob: -11.760167121887207
    9. ' ]' → logprob: -12.010167121887207
    10. ' ' → logprob: -12.010167121887207

Token 777: ' range' (ID: 3352)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019869204610586166
    2. ' range' → logprob: -4.644869327545166
    3. '_range' → logprob: -5.644869327545166
    4. 'range' → logprob: -5.769869327545166
    5. ' _' → logprob: -6.144869327545166
    6. '_]' → logprob: -6.769869327545166
    7. '_)' → logprob: -10.394868850708008
    8. ')' → logprob: -11.519868850708008
    9. ' ' → logprob: -11.644868850708008
    10. ']' → logprob: -11.644868850708008

Token 778: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4851559102535248
    2. ' range' → logprob: -1.6101559400558472
    3. '_' → logprob: -2.6101558208465576
    4. '()' → logprob: -2.7351558208465576
    5. '_range' → logprob: -4.360156059265137
    6. 'n' → logprob: -4.485156059265137
    7. '(range' → logprob: -4.985156059265137
    8. '(n' → logprob: -5.360156059265137
    9. '(' → logprob: -5.360156059265137
    10. '_n' → logprob: -6.610156059265137

Token 779: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.006908840965479612
    2. ')])' → logprob: -6.006908893585205
    3. ')]
' → logprob: -6.131908893585205
    4. '])' → logprob: -6.506908893585205
    5. ')' → logprob: -7.381908893585205
    6. '])]' → logprob: -9.506908416748047
    7. ']' → logprob: -11.256908416748047
    8. ')])
' → logprob: -11.381908416748047
    9. ')][' → logprob: -11.631908416748047
    10. '))' → logprob: -11.881908416748047

Token 780: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33158957958221436
    2. '<|end|>' → logprob: -1.4565895795822144
    3. '[' → logprob: -3.206589698791504
    4. '<|end|>' → logprob: -5.706589698791504
    5. '   ' → logprob: -6.456589698791504
    6. ']' → logprob: -7.331589698791504
    7. '[]' → logprob: -7.331589698791504
    8. '.append' → logprob: -7.581589698791504
    9. ' ' → logprob: -7.956589698791504
    10. '```' → logprob: -8.081589698791504

Token 781: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -0.4748832583427429
    2. ' order' → logprob: -0.9748832583427429
    3. '<|end|>' → logprob: -8.849883079528809
    4. '[' → logprob: -8.974883079528809
    5. '	order' → logprob: -8.974883079528809
    6. '               ' → logprob: -9.349883079528809
    7. '           ' → logprob: -9.849883079528809
    8. ')' → logprob: -9.849883079528809
    9. '       ' → logprob: -9.974883079528809
    10. '   ' → logprob: -10.474883079528809

Token 782: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.17998971045017242
    2. '.' → logprob: -1.8049896955490112
    3. '.extend' → logprob: -8.6799898147583
    4. ')' → logprob: -10.8049898147583
    5. '.app' → logprob: -10.9299898147583
    6. ',' → logprob: -11.9299898147583
    7. '.insert' → logprob: -12.1799898147583
    8. ').' → logprob: -12.3049898147583
    9. '.Append' → logprob: -12.3049898147583
    10. '.pop' → logprob: -13.0549898147583

Token 783: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.375001907348633
    3. 't' → logprob: -14.375001907348633
    4. '	t' → logprob: -17.500001907348633
    5. ' (' → logprob: -17.500001907348633
    6. '(
' → logprob: -18.000001907348633
    7. '   ' → logprob: -19.750001907348633
    8. '[t' → logprob: -20.500001907348633
    9. '       ' → logprob: -20.750001907348633
    10. ' t' → logprob: -21.125001907348633

Token 784: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041506090201437473
    2. ')
' → logprob: -7.875414848327637
    3. ' )' → logprob: -10.875414848327637
    4. ')]' → logprob: -12.250414848327637
    5. ']' → logprob: -12.625414848327637
    6. '               ' → logprob: -13.250414848327637
    7. '])' → logprob: -13.875414848327637
    8. '))' → logprob: -14.000414848327637
    9. '   ' → logprob: -14.125414848327637
    10. ')])' → logprob: -14.125414848327637

Token 785: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 786: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 787: ' problem' (ID: 4792)
  Prédit: ' problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.07890201359987259
    2. 'problem' → logprob: -2.578902006149292
    3. '(problem' → logprob: -11.578902244567871
    4. 'prob' → logprob: -13.328902244567871
    5. 'Problem' → logprob: -14.578902244567871
    6. '_problem' → logprob: -15.703902244567871
    7. ' ' → logprob: -15.828902244567871
    8. 'not' → logprob: -15.828902244567871
    9. ' not' → logprob: -15.828902244567871
    10. '.problem' → logprob: -16.953901290893555

Token 788: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.010851851664483547
    2. '_' → logprob: -4.760851860046387
    3. ' _' → logprob: -6.135851860046387
    4. '_a' → logprob: -10.635851860046387
    5. ')' → logprob: -10.760851860046387
    6. ' ' → logprob: -11.510851860046387
    7. 'b' → logprob: -12.260851860046387
    8. ' b' → logprob: -13.260851860046387
    9. ' )' → logprob: -13.510851860046387
    10. '=' → logprob: -13.760851860046387

Token 789: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6518374681472778
    2. '[' → logprob: -1.1518374681472778
    3. ':
' → logprob: -2.7768373489379883
    4. '   ' → logprob: -3.5268373489379883
    5. '==' → logprob: -4.026837348937988
    6. ')' → logprob: -4.026837348937988
    7. '[
' → logprob: -4.276837348937988
    8. '):' → logprob: -5.401837348937988
    9. ' ==' → logprob: -5.651837348937988
    10. '):
' → logprob: -5.901837348937988

Token 790: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8965286612510681
    2. '   ' → logprob: -1.771528720855713
    3. '           ' → logprob: -1.896528720855713
    4. '[' → logprob: -2.021528720855713
    5. '                   ' → logprob: -2.021528720855713
    6. '       ' → logprob: -5.771528720855713
    7. '                ' → logprob: -7.146528720855713
    8. '[input' → logprob: -7.396528720855713
    9. ' [' → logprob: -7.646528720855713
    10. '              ' → logprob: -7.896528720855713

Token 791: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -0.07302269339561462
    2. ' [' → logprob: -3.4480226039886475
    3. '[input' → logprob: -4.073022842407227
    4. '               ' → logprob: -4.323022842407227
    5. '                   ' → logprob: -4.948022842407227
    6. '           ' → logprob: -7.448022842407227
    7. '                    ' → logprob: -8.573022842407227
    8. '   ' → logprob: -8.823022842407227
    9. '                ' → logprob: -9.198022842407227
    10. '                       ' → logprob: -10.073022842407227

Token 792: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.320199877838604e-07
    2. ' input' → logprob: -15.5
    3. '[input' → logprob: -15.875
    4. '(input' → logprob: -17.5
    5. 'int' → logprob: -18.125
    6. '<input' → logprob: -20.125
    7. '
' → logprob: -20.125
    8. '   ' → logprob: -20.375
    9. 'inp' → logprob: -20.5
    10. ' ' → logprob: -21.0

Token 793: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.790129555156454e-05
    2. '()
' → logprob: -9.875067710876465
    3. '()]' → logprob: -11.375067710876465
    4. ' ()' → logprob: -12.500067710876465
    5. '(' → logprob: -14.500067710876465
    6. '()[' → logprob: -15.375067710876465
    7. 'for' → logprob: -16.25006866455078
    8. '()]
' → logprob: -16.37506866455078
    9. '()

' → logprob: -16.75006866455078
    10. '())' → logprob: -17.25006866455078

Token 794: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6705797910690308
    2. '()' → logprob: -1.2955797910690308
    3. ' for' → logprob: -1.5455797910690308
    4. ')' → logprob: -7.04557991027832
    5. '[' → logprob: -8.42057991027832
    6. ']' → logprob: -8.92057991027832
    7. '()[' → logprob: -9.17057991027832
    8. ' ()' → logprob: -9.42057991027832
    9. '[]' → logprob: -9.92057991027832
    10. '()]' → logprob: -10.04557991027832

Token 795: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02482011914253235
    2. 'range' → logprob: -4.024820327758789
    3. '_range' → logprob: -5.649820327758789
    4. ' range' → logprob: -5.774820327758789
    5. '(range' → logprob: -11.274820327758789
    6. ' _' → logprob: -11.774820327758789
    7. '_
' → logprob: -12.899820327758789
    8. 'int' → logprob: -14.399820327758789
    9. '	range' → logprob: -14.774820327758789
    10. '_[' → logprob: -15.274820327758789

Token 796: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01608598604798317
    2. ' range' → logprob: -4.141086101531982
    3. 'int' → logprob: -10.391085624694824
    4. 'set' → logprob: -12.016085624694824
    5. '(range' → logprob: -12.891085624694824
    6. '[' → logprob: -13.141085624694824
    7. ' ' → logprob: -13.141085624694824
    8. 'split' → logprob: -13.516085624694824
    9. 'len' → logprob: -13.766085624694824
    10. '        ' → logprob: -13.891085624694824

Token 797: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04861404746770859
    2. ' range' → logprob: -3.048614025115967
    3. '_' → logprob: -11.048614501953125
    4. '_range' → logprob: -12.298614501953125
    5. 'int' → logprob: -12.673614501953125
    6. '	range' → logprob: -14.173614501953125
    7. '(range' → logprob: -14.298614501953125
    8. '[' → logprob: -14.423614501953125
    9. '0' → logprob: -15.298614501953125
    10. ']' → logprob: -15.548614501953125

Token 798: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4741794168949127
    2. '(int' → logprob: -0.9741793870925903
    3. '[int' → logprob: -9.4741792678833
    4. '   ' → logprob: -11.9741792678833
    5. ' int' → logprob: -11.9741792678833
    6. '1' → logprob: -12.5991792678833
    7. '0' → logprob: -13.4741792678833
    8. '           ' → logprob: -13.5991792678833
    9. '(' → logprob: -13.5991792678833
    10. '
' → logprob: -14.2241792678833

Token 799: '(input' (ID: 10054)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00043937109876424074
    2. 'int' → logprob: -7.750439167022705
    3. '(' → logprob: -11.875439643859863
    4. '(input' → logprob: -13.875439643859863
    5. '[int' → logprob: -15.625439643859863
    6. '=int' → logprob: -16.125438690185547
    7. '(i' → logprob: -16.500438690185547
    8. '(in' → logprob: -16.875438690185547
    9. '((' → logprob: -16.875438690185547
    10. '   ' → logprob: -17.125438690185547

Token 800: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04865095764398575
    2. '())' → logprob: -3.0486509799957275
    3. '()' → logprob: -10.423650741577148
    4. '))' → logprob: -10.798650741577148
    5. '()]' → logprob: -13.048650741577148
    6. '(' → logprob: -13.298650741577148
    7. ' ())' → logprob: -13.298650741577148
    8. '())
' → logprob: -13.423650741577148
    9. '()
' → logprob: -13.673650741577148
    10. ')])' → logprob: -13.798650741577148

Token 801: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.09164369851350784
    2. ')' → logprob: -2.966643810272217
    3. ']' → logprob: -3.591643810272217
    4. ')])' → logprob: -5.216643810272217
    5. '])' → logprob: -5.966643810272217
    6. '])]' → logprob: -8.466643333435059
    7. ')
' → logprob: -9.091643333435059
    8. ')]
' → logprob: -9.341643333435059
    9. ']
' → logprob: -9.591643333435059
    10. ']))' → logprob: -11.341643333435059

Token 802: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 803: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7519282102584839
    2. ' else' → logprob: -1.7519282102584839
    3. '   ' → logprob: -2.1269283294677734
    4. ' ' → logprob: -2.6269283294677734
    5. '<|end|>' → logprob: -2.6269283294677734
    6. 'elif' → logprob: -3.7519283294677734
    7. ':' → logprob: -4.376928329467773
    8. ')' → logprob: -4.626928329467773
    9. '       ' → logprob: -4.751928329467773
    10. '[' → logprob: -5.126928329467773

Token 804: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6339616179466248
    2. ':' → logprob: -0.7589616179466248
    3. '   ' → logprob: -7.2589616775512695
    4. '       ' → logprob: -7.6339616775512695
    5. '    
' → logprob: -9.88396167755127
    6. '
' → logprob: -10.38396167755127
    7. ' :
' → logprob: -10.63396167755127
    8. ':

' → logprob: -10.88396167755127
    9. ' :' → logprob: -11.75896167755127
    10. '   
' → logprob: -12.13396167755127

Token 805: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13492880761623383
    2. ' v' → logprob: -2.7599287033081055
    3. ' print' → logprob: -3.0099287033081055
    4. ' if' → logprob: -5.1349287033081055
    5. ' remaining' → logprob: -6.0099287033081055
    6. 'print' → logprob: -6.1349287033081055
    7. 'v' → logprob: -6.2599287033081055
    8. '```' → logprob: -8.509928703308105
    9. '   ' → logprob: -8.634928703308105
    10. ' time' → logprob: -9.009928703308105

Token 806: ' last' (ID: 2174)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0158655643463135
    2. 'print' → logprob: -1.3908655643463135
    3. 'if' → logprob: -1.8908655643463135
    4. 'dist' → logprob: -2.2658655643463135
    5. 'idx' → logprob: -3.2658655643463135
    6. '   ' → logprob: -3.2658655643463135
    7. 'remaining' → logprob: -3.7658655643463135
    8. 'time' → logprob: -4.265865325927734
    9. '#' → logprob: -4.890865325927734
    10. 'del' → logprob: -6.140865325927734

Token 807: '_return' (ID: 29287)
  Prédit: '_return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_return' → logprob: -0.009490794502198696
    2. '_' → logprob: -5.134490966796875
    3. '_next' → logprob: -6.384490966796875
    4. '_space' → logprob: -7.009490966796875
    5. '_token' → logprob: -8.384490966796875
    6. '_continue' → logprob: -8.884490966796875
    7. '_order' → logprob: -9.134490966796875
    8. ' _' → logprob: -9.759490966796875
    9. '_destination' → logprob: -9.884490966796875
    10. '_time' → logprob: -9.884490966796875

Token 808: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0005952088395133615
    2. '_' → logprob: -7.8755950927734375
    3. '_token' → logprob: -9.625595092773438
    4. 'time' → logprob: -10.125595092773438
    5. ' =' → logprob: -10.125595092773438
    6. '_t' → logprob: -11.125595092773438
    7. '=' → logprob: -11.500595092773438
    8. '_=' → logprob: -12.125595092773438
    9. '_times' → logprob: -12.375595092773438
    10. '<|end|>' → logprob: -12.375595092773438

Token 809: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008688205853104591
    2. '+=' → logprob: -5.133687973022461
    3. ' =' → logprob: -6.008687973022461
    4. '=' → logprob: -8.508687973022461
    5. ' -=' → logprob: -10.258687973022461
    6. ',' → logprob: -10.633687973022461
    7. ' ,' → logprob: -11.258687973022461
    8. ' ' → logprob: -11.383687973022461
    9. ' +' → logprob: -12.258687973022461
    10. '+' → logprob: -13.133687973022461

Token 810: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.35467615723609924
    2. ' time' → logprob: -1.4796761274337769
    3. 'max' → logprob: -3.4796762466430664
    4. '-' → logprob: -4.354676246643066
    5. '0' → logprob: -4.354676246643066
    6. ' max' → logprob: -4.479676246643066
    7. ' ' → logprob: -6.479676246643066
    8. ' -' → logprob: -6.854676246643066
    9. 'min' → logprob: -9.354676246643066
    10. '	time' → logprob: -9.729676246643066

Token 811: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4276025891304016
    2. '<|end|>' → logprob: -1.1776025295257568
    3. ' if' → logprob: -3.927602529525757
    4. ' 
' → logprob: -5.427602767944336
    5. '   ' → logprob: -5.552602767944336
    6. '    
' → logprob: -6.052602767944336
    7. '  
' → logprob: -6.052602767944336
    8. '       ' → logprob: -6.427602767944336
    9. '<|end|>' → logprob: -6.927602767944336
    10. '\n' → logprob: -7.302602767944336

Token 812: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019923316314816475
    2. 'v' → logprob: -4.894923210144043
    3. 'if' → logprob: -5.144923210144043
    4. 'remaining' → logprob: -6.394923210144043
    5. ' if' → logprob: -6.519923210144043
    6. 'dist' → logprob: -6.769923210144043
    7. 'return' → logprob: -7.144923210144043
    8. '   ' → logprob: -7.519923210144043
    9. ' v' → logprob: -8.894923210144043
    10. ' remaining' → logprob: -9.394923210144043

Token 813: ' idx' (ID: 14016)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.7557712197303772
    2. 'if' → logprob: -1.0057711601257324
    3. 'dist' → logprob: -2.7557711601257324
    4. 'remaining' → logprob: -2.8807711601257324
    5. 'v' → logprob: -3.6307711601257324
    6. 'return' → logprob: -5.380771160125732
    7. 'idx' (adapté à ' idx') → logprob: -5.505771160125732
    8. 'print' → logprob: -5.880771160125732
    9. 'deliver' → logprob: -6.380771160125732
    10. '#' → logprob: -6.380771160125732

Token 814: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43181830644607544
    2. ',' → logprob: -1.3068182468414307
    3. '=' → logprob: -2.5568182468414307
    4. ' ,' → logprob: -6.18181848526001
    5. ' ' → logprob: -8.306818008422852
    6. ',v' → logprob: -10.556818008422852
    7. '<|end|>' → logprob: -10.681818008422852
    8. ')' → logprob: -11.431818008422852
    9. ',j' → logprob: -11.681818008422852
    10. ',n' → logprob: -12.056818008422852

Token 815: ' j' (ID: 441)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5320323705673218
    2. '0' → logprob: -1.7820323705673218
    3. 'j' → logprob: -1.7820323705673218
    4. ' j' → logprob: -3.1570324897766113
    5. ' -' → logprob: -3.9070324897766113
    6. ' ' → logprob: -5.157032489776611
    7. 'dist' → logprob: -6.157032489776611
    8. '-j' → logprob: -6.282032489776611
    9. 'len' → logprob: -7.157032489776611
    10. 'v' → logprob: -7.282032489776611

Token 816: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.4851679801940918
    2. '=' → logprob: -1.8601679801940918
    3. '0' → logprob: -2.110167980194092
    4. '<|end|>' → logprob: -3.110167980194092
    5. '-' → logprob: -3.485167980194092
    6. ' =' → logprob: -3.985167980194092
    7. 'd' → logprob: -6.110167980194092
    8. ' ' → logprob: -6.235167980194092
    9. '=-' → logprob: -6.235167980194092
    10. ' -' → logprob: -7.110167980194092

Token 817: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2823871374130249
    2. '=' → logprob: -1.407387137413025
    3. ',' → logprob: -6.9073872566223145
    4. '=-' → logprob: -8.657386779785156
    5. ' ' → logprob: -11.282386779785156
    6. 'dist' → logprob: -11.407386779785156
    7. '=j' → logprob: -11.657386779785156
    8. '<|end|>' → logprob: -11.782386779785156
    9. ' dist' → logprob: -12.657386779785156
    10. ' ,' → logprob: -13.032386779785156

Token 818: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.019744152203202248
    2. '0' → logprob: -4.019743919372559
    3. ' -' → logprob: -6.519743919372559
    4. ' ' → logprob: -9.394743919372559
    5. 'dist' → logprob: -10.644743919372559
    6. '-dist' → logprob: -11.644743919372559
    7. ' dist' → logprob: -13.144743919372559
    8. '-v' → logprob: -16.019744873046875
    9. 'v' → logprob: -16.019744873046875
    10. 'None' → logprob: -16.144744873046875

Token 819: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.375000953674316
    3. '9' → logprob: -15.812500953674316
    4. '１' → logprob: -16.312501907348633
    5. '999' → logprob: -16.375001907348633
    6. '' → logprob: -16.625001907348633
    7. '```' → logprob: -16.625001907348633
    8. '۱' → logprob: -16.812501907348633
    9. '१' → logprob: -17.250001907348633
    10. '
' → logprob: -17.375001907348633

Token 820: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 821: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 822: ' remaining' (ID: 15448)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.547789674485102e-05
    2. 'for' → logprob: -11.000035285949707
    3. '0' → logprob: -11.250035285949707
    4. ' dist' → logprob: -13.625035285949707
    5. 'min' → logprob: -14.375035285949707
    6. 'time' → logprob: -14.500035285949707
    7. 'distance' → logprob: -14.625035285949707
    8. 'v' → logprob: -14.750035285949707
    9. '   ' → logprob: -15.000035285949707
    10. '10' → logprob: -15.250035285949707

Token 823: '_last' (ID: 26359)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.16751787066459656
    2. '_last' → logprob: -2.042517900466919
    3. '_' → logprob: -4.41751766204834
    4. '<|end|>' → logprob: -4.91751766204834
    5. ' ' → logprob: -6.91751766204834
    6. '_temp' → logprob: -7.29251766204834
    7. 'next' → logprob: -7.41751766204834
    8. '_previous' → logprob: -8.16751766204834
    9. '_best' → logprob: -8.41751766204834
    10. '```' → logprob: -8.54251766204834

Token 824: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2821582853794098
    2. '=' → logprob: -1.4071582555770874
    3. ' ' → logprob: -7.282158374786377
    4. ',' → logprob: -8.157157897949219
    5. '<|end|>' → logprob: -10.657157897949219
    6. '=None' → logprob: -12.782157897949219
    7. ' ,' → logprob: -12.782157897949219
    8. ' ' → logprob: -14.407157897949219
    9. ')' → logprob: -14.532157897949219
    10. '_' → logprob: -14.782157897949219

Token 825: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.169754981994629
    2. 'dist' → logprob: -1.794754981994629
    3. ' dist' → logprob: -2.044754981994629
    4. ' float' → logprob: -2.044754981994629
    5. '0' → logprob: -2.294754981994629
    6. ' ' → logprob: -2.544754981994629
    7. '1' → logprob: -2.794754981994629
    8. '10' → logprob: -4.044754981994629
    9. '-' → logprob: -6.419754981994629
    10. '999' → logprob: -6.544754981994629

Token 826: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6169446706771851
    2. '10' → logprob: -1.241944670677185
    3. '1' → logprob: -2.4919447898864746
    4. '-' → logprob: -2.7419447898864746
    5. 'float' → logprob: -3.8669447898864746
    6. 'dist' → logprob: -6.616944789886475
    7. '999' → logprob: -7.116944789886475
    8. 'int' → logprob: -7.241944789886475
    9. '100' → logprob: -7.866944789886475
    10. 'None' → logprob: -9.241944313049316

Token 827: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 828: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.271963357925415
    2. 'for' → logprob: -1.396963357925415
    3. 'dist' → logprob: -2.146963357925415
    4. 'remaining' → logprob: -2.271963357925415
    5. ' for' → logprob: -2.521963357925415
    6. 'while' → logprob: -3.146963357925415
    7. 'if' → logprob: -3.146963357925415
    8. '<|end|>' → logprob: -3.646963357925415
    9. '   ' → logprob: -4.521963119506836
    10. 'v' → logprob: -4.646963119506836

Token 829: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.022070983424782753
    2. 'remaining' → logprob: -4.02207088470459
    3. 'for' → logprob: -6.14707088470459
    4. 'v' → logprob: -7.39707088470459
    5. 'idx' → logprob: -7.52207088470459
    6. '   ' → logprob: -9.39707088470459
    7. 'time' → logprob: -9.64707088470459
    8. ' dist' → logprob: -9.77207088470459
    9. 'if' → logprob: -9.89707088470459
    10. 'return' → logprob: -10.02207088470459

Token 830: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.0246293768286705
    2. '_min' → logprob: -4.149629592895508
    3. '_' → logprob: -5.649629592895508
    4. '_next' → logprob: -5.774629592895508
    5. '_max' → logprob: -6.774629592895508
    6. '_tmp' → logprob: -8.399629592895508
    7. '[' → logprob: -8.649629592895508
    8. '_temperature' → logprob: -8.899629592895508
    9. 'temp' → logprob: -9.774629592895508
    10. '_destination' → logprob: -10.524629592895508

Token 831: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.005730636417865753
    2. '_' → logprob: -5.630730628967285
    3. ' =' → logprob: -6.880730628967285
    4. '=' → logprob: -7.630730628967285
    5. '_max' → logprob: -8.380730628967285
    6. 'min' → logprob: -8.880730628967285
    7. '<|end|>' → logprob: -9.630730628967285
    8. '_temp' → logprob: -9.755730628967285
    9. ',' → logprob: -10.255730628967285
    10. '_=' → logprob: -11.130730628967285

Token 832: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5550228357315063
    2. '_pos' → logprob: -1.5550228357315063
    3. ' =' → logprob: -1.8050228357315063
    4. '_not' → logprob: -3.305022716522217
    5. 'pos' → logprob: -4.430022716522217
    6. 'not' → logprob: -7.555022716522217
    7. '=float' → logprob: -7.805022716522217
    8. 'poss' → logprob: -9.180023193359375
    9. ',pos' → logprob: -9.180023193359375
    10. '=-' → logprob: -9.680023193359375

Token 833: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.026747478172183037
    2. ' ' → logprob: -3.776747465133667
    3. 'float' → logprob: -5.776747703552246
    4. '1' → logprob: -8.526747703552246
    5. ' float' → logprob: -8.776747703552246
    6. '100' → logprob: -10.776747703552246
    7. 'int' → logprob: -11.776747703552246
    8. '999' → logprob: -12.651747703552246
    9. '
' → logprob: -12.776747703552246
    10. 'inf' → logprob: -12.776747703552246

Token 834: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.002011314034461975
    2. 'float' → logprob: -6.377011299133301
    3. '1' → logprob: -8.3770112991333
    4. ' ' → logprob: -10.3770112991333
    5. '100' → logprob: -10.6270112991333
    6. 'int' → logprob: -11.2520112991333
    7. '999' → logprob: -12.7520112991333
    8. ' float' → logprob: -13.5020112991333
    9. '
' → logprob: -13.6270112991333
    10. '0' → logprob: -13.7520112991333

Token 835: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.004686445463448763
    2. '18' → logprob: -5.37968635559082
    3. '```' → logprob: -9.75468635559082
    4. '**
' → logprob: -12.12968635559082
    5. '^' → logprob: -13.62968635559082
    6. '*' → logprob: -15.12968635559082
    7. '__' → logprob: -15.50468635559082
    8. '\
' → logprob: -15.62968635559082
    9. '**)' → logprob: -15.75468635559082
    10. '17' → logprob: -15.75468635559082

Token 836: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.005388022866100073
    2. '9' → logprob: -6.005388259887695
    3. '15' → logprob: -6.880388259887695
    4. '10' → logprob: -7.380388259887695
    5. '12' → logprob: -7.755388259887695
    6. '8' → logprob: -8.255388259887695
    7. '17' → logprob: -9.005388259887695
    8. '14' → logprob: -9.380388259887695
    9. '7' → logprob: -9.505388259887695
    10. '6' → logprob: -9.505388259887695

Token 837: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7145299911499023
    2. '<|end|>' → logprob: -0.7145299911499023
    3. ' 
' → logprob: -4.839529991149902
    4. 'for' → logprob: -4.964529991149902
    5. ' ' → logprob: -6.339529991149902
    6. '  
' → logprob: -6.464529991149902
    7. ' for' → logprob: -6.964529991149902
    8. '    
' → logprob: -7.714529991149902
    9. '       ' → logprob: -8.339529991149902
    10. '        
' → logprob: -8.589529991149902

Token 838: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0037184846587479115
    2. '       ' → logprob: -6.378718376159668
    3. ' for' → logprob: -6.378718376159668
    4. '<|end|>' → logprob: -8.128718376159668
    5. '   ' → logprob: -11.753718376159668
    6. 'i' → logprob: -12.503718376159668
    7. '```' → logprob: -12.628718376159668
    8. '
' → logprob: -13.253718376159668
    9. 'if' → logprob: -13.378718376159668
    10. '	for' → logprob: -13.503718376159668

Token 839: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00022022522171027958
    2. ' for' → logprob: -8.50022029876709
    3. 'if' → logprob: -11.75022029876709
    4. 'i' → logprob: -12.12522029876709
    5. '   ' → logprob: -13.75022029876709
    6. 'idx' → logprob: -14.87522029876709
    7. '
' → logprob: -15.12522029876709
    8. '	for' → logprob: -15.12522029876709
    9. 'n' → logprob: -15.12522029876709
    10. 'while' → logprob: -15.37522029876709

Token 840: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006771141663193703
    2. ' i' → logprob: -5.006771087646484
    3. 'k' → logprob: -11.006771087646484
    4. 'idx' → logprob: -11.631771087646484
    5. 'o' → logprob: -12.131771087646484
    6. '```' → logprob: -12.506771087646484
    7. 'time' → logprob: -12.631771087646484
    8. '	i' → logprob: -13.006771087646484
    9. ' ' → logprob: -13.131771087646484
    10. '_i' → logprob: -13.256771087646484

Token 841: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004946020431816578
    2. ' in' → logprob: -5.754946231842041
    3. ' ,' → logprob: -6.379946231842041
    4. 'in' → logprob: -10.254945755004883
    5. ',v' → logprob: -11.254945755004883
    6. '<|end|>' → logprob: -11.879945755004883
    7. ',
' → logprob: -12.629945755004883
    8. ',n' → logprob: -12.879945755004883
    9. ',t' → logprob: -13.379945755004883
    10. ' ' → logprob: -13.629945755004883

Token 842: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.07329192757606506
    2. ' o' → logprob: -2.9482920169830322
    3. '(o' → logprob: -4.073291778564453
    4. 'order' → logprob: -7.948291778564453
    5. 'v' → logprob: -8.448291778564453
    6. ' (' → logprob: -8.698291778564453
    7. '(' → logprob: -9.073291778564453
    8. '(v' → logprob: -9.198291778564453
    9. ' order' → logprob: -9.198291778564453
    10. '(order' → logprob: -9.573291778564453

Token 843: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07965560257434845
    2. 'in' → logprob: -3.204655647277832
    3. ' in' → logprob: -3.329655647277832
    4. ' ,' → logprob: -9.079655647277832
    5. ',in' → logprob: -11.204655647277832
    6. 's' → logprob: -11.454655647277832
    7. 'n' → logprob: -11.579655647277832
    8. ',i' → logprob: -11.829655647277832
    9. ',v' → logprob: -11.954655647277832
    10. '<|end|>' → logprob: -12.329655647277832

Token 844: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.40513673424720764
    2. 'enumer' → logprob: -1.1551367044448853
    3. 'order' → logprob: -4.780136585235596
    4. 'o' → logprob: -5.030136585235596
    5. ' order' → logprob: -6.155136585235596
    6. ' o' → logprob: -7.030136585235596
    7. 'range' → logprob: -9.530137062072754
    8. '```' → logprob: -10.780137062072754
    9. ' range' → logprob: -11.030137062072754
    10. ' in' → logprob: -11.155137062072754

Token 845: '(order' (ID: 33050)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0017764460062608123
    2. '(order' → logprob: -6.751776218414307
    3. ' order' → logprob: -7.501776218414307
    4. 'enumer' → logprob: -10.501776695251465
    5. 'range' → logprob: -11.126776695251465
    6. 'o' → logprob: -11.501776695251465
    7. '(o' → logprob: -14.501776695251465
    8. '(' → logprob: -15.001776695251465
    9. '	order' → logprob: -15.376776695251465
    10. ' enumerate' → logprob: -15.876776695251465

Token 846: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2064574956893921
    2. '):
' → logprob: -1.706457495689392
    3. ':' → logprob: -5.581457614898682
    4. '   ' → logprob: -6.956457614898682
    5. '       ' → logprob: -8.706457138061523
    6. '           ' → logprob: -10.206457138061523
    7. ':
' → logprob: -10.581457138061523
    8. '<|end|>' → logprob: -10.831457138061523
    9. '):
' → logprob: -10.956457138061523
    10. ',' → logprob: -11.081457138061523

Token 847: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009010541252791882
    2. '<|end|>' → logprob: -4.884010314941406
    3. '       ' → logprob: -6.759010314941406
    4. ' if' → logprob: -9.384010314941406
    5. '           ' → logprob: -9.634010314941406
    6. ':' → logprob: -10.134010314941406
    7. '<|end|>' → logprob: -11.134010314941406
    8. ',' → logprob: -11.259010314941406
    9. '    ' → logprob: -12.134010314941406
    10. ' ' → logprob: -12.384010314941406

Token 848: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11433429270982742
    2. ' if' → logprob: -2.4893343448638916
    3. 'if' (adapté à ' if') → logprob: -4.9893341064453125
    4. '       ' → logprob: -5.3643341064453125
    5. ' ' → logprob: -5.7393341064453125
    6. '<|end|>' → logprob: -5.7393341064453125
    7. '    ' → logprob: -5.8643341064453125
    8. ' for' → logprob: -5.9893341064453125
    9. '  ' → logprob: -7.8643341064453125
    10. 'for' → logprob: -7.9893341064453125

Token 849: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2016737312078476
    2. 'not' → logprob: -1.7016737461090088
    3. 'o' → logprob: -9.20167350769043
    4. ' o' → logprob: -10.07667350769043
    5. 'n' → logprob: -11.07667350769043
    6. 'len' → logprob: -11.07667350769043
    7. 'i' → logprob: -11.07667350769043
    8. '	not' → logprob: -11.07667350769043
    9. ' len' → logprob: -11.45167350769043
    10. '   ' → logprob: -11.45167350769043

Token 850: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.026311906054615974
    2. ' o' → logprob: -3.6513118743896484
    3. 'len' → logprob: -12.901311874389648
    4. ' ' → logprob: -13.026311874389648
    5. '	o' → logprob: -13.401311874389648
    6. '   ' → logprob: -13.526311874389648
    7. ' ' → logprob: -13.526311874389648
    8. '
' → logprob: -13.901311874389648
    9. '0' → logprob: -15.276311874389648
    10. '(o' → logprob: -15.401311874389648

Token 851: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7015635967254639
    2. ':
' → logprob: -0.7015635967254639
    3. '               ' → logprob: -6.326563835144043
    4. ' and' → logprob: -6.951563835144043
    5. '   ' → logprob: -7.201563835144043
    6. '[' → logprob: -7.201563835144043
    7. '<|end|>' → logprob: -7.201563835144043
    8. '           ' → logprob: -7.326563835144043
    9. '       ' → logprob: -7.451563835144043
    10. ',' → logprob: -7.451563835144043

Token 852: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01149032823741436
    2. ' continue' → logprob: -5.511490345001221
    3. '           ' → logprob: -6.011490345001221
    4. ':' → logprob: -6.761490345001221
    5. ':
' → logprob: -6.761490345001221
    6. '       ' → logprob: -7.511490345001221
    7. 'continue' → logprob: -7.511490345001221
    8. '                               ' → logprob: -7.886490345001221
    9. '   ' → logprob: -7.886490345001221
    10. '                   ' → logprob: -8.511489868164062

Token 853: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.12922126054763794
    2. 'continue' (adapté à ' continue') → logprob: -2.254221200942993
    3. '   ' → logprob: -4.879221439361572
    4. '	continue' → logprob: -5.004221439361572
    5. '       ' → logprob: -6.379221439361572
    6. '               ' → logprob: -9.129220962524414
    7. '           ' → logprob: -9.879220962524414
    8. '```' → logprob: -10.129220962524414
    9. '_continue' → logprob: -10.754220962524414
    10. ' ' → logprob: -11.629220962524414

Token 854: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 855: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4987584352493286
    2. '<|end|>' → logprob: -1.8737584352493286
    3. '   ' → logprob: -2.873758316040039
    4. ' 
' → logprob: -3.248758316040039
    5. ' ' → logprob: -3.623758316040039
    6. '       ' → logprob: -3.873758316040039
    7. '    ' → logprob: -3.873758316040039
    8. ' for' → logprob: -3.998758316040039
    9. '                               ' → logprob: -4.373758316040039
    10. '        ' → logprob: -5.123758316040039

Token 856: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.45471176505088806
    2. ' for' → logprob: -1.9547117948532104
    3. '   ' → logprob: -2.079711675643921
    4. '           ' → logprob: -2.704711675643921
    5. '       ' → logprob: -3.454711675643921
    6. ' ' → logprob: -8.8297119140625
    7. '               ' → logprob: -10.0797119140625
    8. '<|end|>' → logprob: -10.4547119140625
    9. '```' → logprob: -10.4547119140625
    10. '	for' → logprob: -10.5797119140625

Token 857: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6357455253601074
    2. ' j' → logprob: -0.7607455253601074
    3. 'dst' → logprob: -6.760745525360107
    4. 'v' → logprob: -7.135745525360107
    5. ' dst' → logprob: -7.260745525360107
    6. ' v' → logprob: -7.885745525360107
    7. '   ' → logprob: -10.885746002197266
    8. '	j' → logprob: -11.010746002197266
    9. ' ' → logprob: -11.135746002197266
    10. '```' → logprob: -11.885746002197266

Token 858: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04495618864893913
    2. ' ,' → logprob: -3.1699562072753906
    3. ' in' → logprob: -6.294956207275391
    4. 'in' → logprob: -10.29495620727539
    5. '<|end|>' → logprob: -10.91995620727539
    6. ',j' → logprob: -11.04495620727539
    7. ' ' → logprob: -11.29495620727539
    8. ',k' → logprob: -12.54495620727539
    9. ',
' → logprob: -12.91995620727539
    10. ',v' → logprob: -12.91995620727539

Token 859: ' dst' (ID: 23480)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.10090566426515579
    2. ' dst' → logprob: -2.350905656814575
    3. 'd' → logprob: -8.225905418395996
    4. 'v' → logprob: -8.475905418395996
    5. 't' → logprob: -10.225905418395996
    6. 'o' → logprob: -10.225905418395996
    7. ' v' → logprob: -10.350905418395996
    8. 'dest' → logprob: -10.850905418395996
    9. '	dst' → logprob: -10.975905418395996
    10. 'dist' → logprob: -11.225905418395996

Token 860: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028109403792768717
    2. 'in' → logprob: -5.877810955047607
    3. ' ' → logprob: -12.37781047821045
    4. ',' → logprob: -14.00281047821045
    5. '	in' → logprob: -15.25281047821045
    6. ' ' → logprob: -15.62781047821045
    7. '<|end|>' → logprob: -15.62781047821045
    8. '```' → logprob: -16.127811431884766
    9. ' 
' → logprob: -16.877811431884766
    10. 'import' → logprob: -17.377811431884766

Token 861: ' enumerate' (ID: 29671)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.2538781762123108
    2. 'enumer' → logprob: -1.628878116607666
    3. ' enumerate' → logprob: -3.628878116607666
    4. ' o' → logprob: -6.503878116607666
    5. 'dst' → logprob: -11.753878593444824
    6. 'range' → logprob: -12.253878593444824
    7. '	o' → logprob: -12.753878593444824
    8. ',o' → logprob: -13.253878593444824
    9. '(o' → logprob: -14.253878593444824
    10. '{o' → logprob: -14.503878593444824

Token 862: '(o' (ID: 18928)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.47419849038124084
    2. ' o' → logprob: -0.9741984605789185
    3. '(o' → logprob: -9.099198341369629
    4. '	o' → logprob: -12.099198341369629
    5. '[o' → logprob: -13.974198341369629
    6. '_o' → logprob: -14.224198341369629
    7. 'dst' → logprob: -14.474198341369629
    8. ',o' → logprob: -14.599198341369629
    9. ' ' → logprob: -15.224198341369629
    10. '{o' → logprob: -15.349198341369629

Token 863: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3919508755207062
    2. ':' → logprob: -1.8919508457183838
    3. '):
' → logprob: -2.141950845718384
    4. '               ' → logprob: -3.016950845718384
    5. ' :
' → logprob: -6.016951084136963
    6. '           ' → logprob: -6.891951084136963
    7. '       ' → logprob: -7.141951084136963
    8. '                               ' → logprob: -7.891951084136963
    9. '():
' → logprob: -8.016950607299805
    10. '<|end|>' → logprob: -8.141950607299805

Token 864: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002999335527420044
    2. '                               ' → logprob: -5.877999305725098
    3. '           ' → logprob: -9.877999305725098
    4. '                   ' → logprob: -10.377999305725098
    5. '                
' → logprob: -10.627999305725098
    6. '```' → logprob: -10.752999305725098
    7. '              ' → logprob: -11.127999305725098
    8. '                ' → logprob: -11.252999305725098
    9. '<|end|>' → logprob: -11.627999305725098
    10. '             ' → logprob: -12.252999305725098

Token 865: ' dist' (ID: 3601)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30136382579803467
    2. '                ' → logprob: -2.051363945007324
    3. '                   ' → logprob: -2.051363945007324
    4. '                               ' → logprob: -7.426363945007324
    5. ' if' → logprob: -7.426363945007324
    6. ' ' → logprob: -7.551363945007324
    7. '                    ' → logprob: -7.926363945007324
    8. '                       ' → logprob: -8.051363945007324
    9. '           ' → logprob: -9.176363945007324
    10. '   ' → logprob: -9.301363945007324

Token 866: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.0009467111667618155
    2. '_' → logprob: -7.375946521759033
    3. '[temp' → logprob: -9.250946998596191
    4. 'temp' → logprob: -9.875946998596191
    5. ' _' → logprob: -10.375946998596191
    6. '_tmp' → logprob: -10.500946998596191
    7. '_token' → logprob: -10.625946998596191
    8. '_TEMP' → logprob: -11.250946998596191
    9. '_tokens' → logprob: -11.500946998596191
    10. ' temp' → logprob: -11.500946998596191

Token 867: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.235230952501297
    2. '=' → logprob: -1.6102309226989746
    3. ' <' → logprob: -4.735230922698975
    4. '<' → logprob: -7.360230922698975
    5. '               ' → logprob: -9.235231399536133
    6. '<|end|>' → logprob: -9.610231399536133
    7. ' ' → logprob: -10.110231399536133
    8. '                   ' → logprob: -10.610231399536133
    9. '<v' → logprob: -10.735231399536133
    10. '                ' → logprob: -11.110231399536133

Token 868: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6931527853012085
    2. 'dist' → logprob: -0.6931527853012085
    3. '	dist' → logprob: -13.06815242767334
    4. '(dist' → logprob: -13.94315242767334
    5. '               ' → logprob: -14.31815242767334
    6. 'd' → logprob: -14.56815242767334
    7. '.dist' → logprob: -15.31815242767334
    8. 'int' → logprob: -15.44315242767334
    9. '```' → logprob: -15.69315242767334
    10. '_dist' → logprob: -16.068153381347656

Token 869: '[' (ID: 58)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00020783171930816025
    2. ' v' → logprob: -9.375207901000977
    3. '[' → logprob: -9.500207901000977
    4. 'v' → logprob: -10.250207901000977
    5. '	v' → logprob: -12.500207901000977
    6. '(v' → logprob: -13.125207901000977
    7. ' [' → logprob: -13.250207901000977
    8. '[
' → logprob: -14.000207901000977
    9. '[next' → logprob: -14.000207901000977
    10. '_next' → logprob: -14.125207901000977

Token 870: '1' (ID: 16)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011113370768725872
    2. ' v' → logprob: -4.511113166809082
    3. '[v' → logprob: -10.136113166809082
    4. '   ' → logprob: -11.511113166809082
    5. 'time' → logprob: -12.886113166809082
    6. '```' → logprob: -13.011113166809082
    7. ')v' → logprob: -13.136113166809082
    8. '	v' → logprob: -13.136113166809082
    9. ' ' → logprob: -13.886113166809082
    10. '(v' → logprob: -14.011113166809082

Token 871: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001653759740293026
    2. ',d' → logprob: -6.876653671264648
    3. ',v' → logprob: -7.751653671264648
    4. ' ,' → logprob: -9.126653671264648
    5. '][' → logprob: -10.251653671264648
    6. ',
' → logprob: -11.251653671264648
    7. ',j' → logprob: -11.501653671264648
    8. '[' → logprob: -11.751653671264648
    9. ',[' → logprob: -13.001653671264648
    10. '   ' → logprob: -13.001653671264648

Token 872: ' dst' (ID: 23480)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.11288970708847046
    2. ' dst' → logprob: -2.2378897666931152
    3. '               ' → logprob: -10.987889289855957
    4. '                               ' → logprob: -11.112889289855957
    5. '	dst' → logprob: -11.612889289855957
    6. 'v' → logprob: -12.612889289855957
    7. '                   ' → logprob: -12.612889289855957
    8. '(dst' → logprob: -12.862889289855957
    9. 'dest' → logprob: -13.112889289855957
    10. '_dst' → logprob: -13.237889289855957

Token 873: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19484944641590118
    2. ' ]' → logprob: -2.6948494911193848
    3. '               ' → logprob: -2.8198494911193848
    4. ']>' → logprob: -3.5698494911193848
    5. '<|end|>' → logprob: -4.444849491119385
    6. ']<' → logprob: -6.444849491119385
    7. ']
' → logprob: -6.944849491119385
    8. ']+' → logprob: -7.194849491119385
    9. '                               ' → logprob: -7.319849491119385
    10. ']>=' → logprob: -7.444849491119385

Token 874: ' +' (ID: 659)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.142703577876091
    2. '<|end|>' → logprob: -2.1427035331726074
    3. ' if' → logprob: -5.892703533172607
    4. '              ' → logprob: -5.892703533172607
    5. '                ' → logprob: -6.017703533172607
    6. '                   ' → logprob: -6.767703533172607
    7. '                               ' → logprob: -7.017703533172607
    8. ' 
' → logprob: -7.267703533172607
    9. '<|end|>' → logprob: -7.392703533172607
    10. '			' → logprob: -7.392703533172607

Token 875: ' abs' (ID: 8443)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.000920869642868638
    2. ' dist' → logprob: -7.00092077255249
    3. '               ' → logprob: -13.000921249389648
    4. '                   ' → logprob: -13.125921249389648
    5. '	dist' → logprob: -13.375921249389648
    6. '   ' → logprob: -14.125921249389648
    7. '
' → logprob: -14.375921249389648
    8. 'cost' → logprob: -14.500921249389648
    9. '(dist' → logprob: -15.250921249389648
    10. '           ' → logprob: -15.375921249389648

Token 876: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.49443015456199646
    2. '(dist' → logprob: -1.3694301843643188
    3. '(dst' → logprob: -3.1194300651550293
    4. '(t' → logprob: -3.2444300651550293
    5. '(v' → logprob: -3.4944300651550293
    6. '(' → logprob: -4.369430065155029
    7. '(last' → logprob: -5.619430065155029
    8. '(order' → logprob: -6.744430065155029
    9. '(cost' → logprob: -6.994430065155029
    10. '((' → logprob: -7.119430065155029

Token 877: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05558042228221893
    2. '-' → logprob: -2.9305803775787354
    3. ')' → logprob: -8.305580139160156
    4. '[' → logprob: -9.305580139160156
    5. '<|end|>' → logprob: -9.305580139160156
    6. '-time' → logprob: -9.680580139160156
    7. ',' → logprob: -9.805580139160156
    8. ' ' → logprob: -11.055580139160156
    9. '+' → logprob: -11.180580139160156
    10. '-t' → logprob: -11.305580139160156

Token 878: ' i' (ID: 575)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06769788265228271
    2. ' t' → logprob: -2.8176980018615723
    3. '0' → logprob: -6.192698001861572
    4. 'order' → logprob: -7.192698001861572
    5. '1' → logprob: -7.942698001861572
    6. 'idx' → logprob: -8.067697525024414
    7. 'last' → logprob: -8.192697525024414
    8. 'int' → logprob: -8.567697525024414
    9. 'time' → logprob: -8.817697525024414
    10. ' ' → logprob: -8.942697525024414

Token 879: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000622845720499754
    2. ' )' → logprob: -7.500622749328613
    3. ')
' → logprob: -10.250622749328613
    4. ')>' → logprob: -11.750622749328613
    5. '[' → logprob: -12.500622749328613
    6. ')*' → logprob: -12.625622749328613
    7. ')]' → logprob: -12.875622749328613
    8. ')])' → logprob: -13.000622749328613
    9. '])' → logprob: -13.250622749328613
    10. '<|end|>' → logprob: -13.500622749328613

Token 880: ' **' (ID: 6240)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18974366784095764
    2. '<|end|>' → logprob: -1.9397436380386353
    3. '                ' → logprob: -4.939743518829346
    4. ' if' → logprob: -5.189743518829346
    5. ' ' → logprob: -5.814743518829346
    6. '              ' → logprob: -5.939743518829346
    7. '                   ' → logprob: -6.064743518829346
    8. '                               ' → logprob: -6.064743518829346
    9. '           ' → logprob: -6.814743518829346
    10. '<|end|>' → logprob: -6.814743518829346

Token 881: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.15902604162693024
    2. ' ' → logprob: -2.6590261459350586
    3. '1' → logprob: -3.1590261459350586
    4. '3' → logprob: -3.9090261459350586
    5. '0' → logprob: -4.284026145935059
    6. '4' → logprob: -8.284026145935059
    7. '5' → logprob: -9.284026145935059
    8. '6' → logprob: -9.409026145935059
    9. '-' → logprob: -10.159026145935059
    10. ')' → logprob: -10.409026145935059

Token 882: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.27906396985054016
    2. '3' → logprob: -1.6540639400482178
    3. '1' → logprob: -3.4040639400482178
    4. '0' → logprob: -4.279064178466797
    5. '4' → logprob: -6.029064178466797
    6. '5' → logprob: -6.529064178466797
    7. '6' → logprob: -8.154064178466797
    8. '10' → logprob: -8.279064178466797
    9. '9' → logprob: -8.654064178466797
    10. '7' → logprob: -9.029064178466797

Token 883: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36701738834381104
    2. '<|end|>' → logprob: -1.242017388343811
    3. '                ' → logprob: -5.6170172691345215
    4. ' if' → logprob: -5.7420172691345215
    5. ' ' → logprob: -6.1170172691345215
    6. '<|end|>' → logprob: -6.2420172691345215
    7. '              ' → logprob: -6.3670172691345215
    8. '                               ' → logprob: -6.6170172691345215
    9. '                   ' → logprob: -6.9920172691345215
    10. ' 
' → logprob: -7.3670172691345215

Token 884: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8975481390953064
    2. '<|end|>' → logprob: -0.8975481390953064
    3. ' if' → logprob: -1.8975481986999512
    4. ' ' → logprob: -4.397548198699951
    5. '                   ' → logprob: -5.522548198699951
    6. '                               ' → logprob: -5.897548198699951
    7. '       ' → logprob: -6.272548198699951
    8. '                ' → logprob: -6.272548198699951
    9. '<|end|>' → logprob: -6.272548198699951
    10. '           ' → logprob: -6.647548198699951

Token 885: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06769967079162598
    2. '                ' → logprob: -3.317699670791626
    3. ' if' → logprob: -4.317699432373047
    4. '                   ' → logprob: -4.942699432373047
    5. '                               ' → logprob: -5.567699432373047
    6. ' ' → logprob: -6.692699432373047
    7. 'if' (adapté à ' if') → logprob: -7.192699432373047
    8. '              ' → logprob: -7.317699432373047
    9. '<|end|>' → logprob: -7.442699432373047
    10. '           ' → logprob: -8.067699432373047

Token 886: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.25200366973876953
    2. 'dist' → logprob: -1.5020036697387695
    3. '(dist' → logprob: -9.75200366973877
    4. '	dist' → logprob: -12.25200366973877
    5. 'd' → logprob: -13.12700366973877
    6. '```' → logprob: -13.50200366973877
    7. '
' → logprob: -13.75200366973877
    8. '0' → logprob: -13.87700366973877
    9. ' ' → logprob: -14.12700366973877
    10. '    ' → logprob: -14.25200366973877

Token 887: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.013141527771949768
    2. '_' → logprob: -4.388141632080078
    3. ' _' → logprob: -7.513141632080078
    4. '_tmp' → logprob: -10.513141632080078
    5. '_
' → logprob: -10.638141632080078
    6. '<' → logprob: -11.388141632080078
    7. '_TEMP' → logprob: -11.513141632080078
    8. '_token' → logprob: -12.763141632080078
    9. '```' → logprob: -13.138141632080078
    10. '<_' → logprob: -13.388141632080078

Token 888: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00675219064578414
    2. '<' → logprob: -5.006752014160156
    3. ' <=' → logprob: -11.506752014160156
    4. ' ' → logprob: -11.756752014160156
    5. '[' → logprob: -11.756752014160156
    6. '<|end|>' → logprob: -12.256752014160156
    7. ' <
' → logprob: -12.881752014160156
    8. ' <",' → logprob: -14.881752014160156
    9. ' ' → logprob: -14.881752014160156
    10. '   ' → logprob: -15.006752014160156

Token 889: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0067156096920371056
    2. ' dist' → logprob: -5.006715774536133
    3. '	dist' → logprob: -16.006715774536133
    4. '(dist' → logprob: -17.256715774536133
    5. '_dist' → logprob: -17.381715774536133
    6. '```' → logprob: -17.756715774536133
    7. '
' → logprob: -18.506715774536133
    8. ' ' → logprob: -18.881715774536133
    9. 'd' → logprob: -19.006715774536133
    10. '.dist' → logprob: -19.131715774536133

Token 890: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -1.759734732331708e-05
    2. '_' → logprob: -11.875017166137695
    3. 'temp' → logprob: -11.875017166137695
    4. '_
' → logprob: -14.000017166137695
    5. '_dist' → logprob: -14.250017166137695
    6. 'dist' → logprob: -14.250017166137695
    7. ' _' → logprob: -15.000017166137695
    8. '_tmp' → logprob: -15.500017166137695
    9. 'Temp' → logprob: -15.625017166137695
    10. '_t' → logprob: -16.000017166137695

Token 891: '_min' (ID: 15950)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02944924868643284
    2. '_temp' → logprob: -4.154449462890625
    3. ' dist' → logprob: -4.779449462890625
    4. '_dist' → logprob: -5.529449462890625
    5. '_min' → logprob: -7.029449462890625
    6. 'min' → logprob: -10.029449462890625
    7. '(dist' → logprob: -11.779449462890625
    8. 'temp' → logprob: -12.029449462890625
    9. '	dist' → logprob: -12.029449462890625
    10. '```' → logprob: -12.779449462890625

Token 892: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12792646884918213
    2. ':
' → logprob: -2.1279263496398926
    3. ' :' → logprob: -8.50292682647705
    4. ' and' → logprob: -8.75292682647705
    5. ' :
' → logprob: -8.87792682647705
    6. '                   ' → logprob: -9.50292682647705
    7. '               ' → logprob: -9.75292682647705
    8. '):
' → logprob: -9.75292682647705
    9. '<|end|>' → logprob: -10.00292682647705
    10. '           ' → logprob: -10.50292682647705

Token 893: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03510435298085213
    2. '               ' → logprob: -3.910104274749756
    3. '                    ' → logprob: -6.160104274749756
    4. '                       ' → logprob: -6.285104274749756
    5. '                               ' → logprob: -6.410104274749756
    6. '                ' → logprob: -6.535104274749756
    7. '                           ' → logprob: -6.785104274749756
    8. '           ' → logprob: -7.035104274749756
    9. ' ' → logprob: -7.285104274749756
    10. '                    
' → logprob: -7.535104274749756

Token 894: ' dist' (ID: 3601)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3804619610309601
    2. 'dist' (adapté à ' dist') → logprob: -1.3804619312286377
    3. ' idx' → logprob: -3.1304619312286377
    4. ' dist' → logprob: -3.8804619312286377
    5. 'remaining' → logprob: -9.005461692810059
    6. '	idx' → logprob: -9.005461692810059
    7. '	dist' → logprob: -9.255461692810059
    8. '<|end|>' → logprob: -9.505461692810059
    9. ' ' → logprob: -9.630461692810059
    10. 'index' → logprob: -10.255461692810059

Token 895: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.002445573452860117
    2. '_' → logprob: -6.127445697784424
    3. '_token' → logprob: -8.877445220947266
    4. '_
' → logprob: -10.377445220947266
    5. '_=' → logprob: -10.627445220947266
    6. 'temp' → logprob: -11.002445220947266
    7. ' _' → logprob: -11.627445220947266
    8. '_tmp' → logprob: -12.002445220947266
    9. '_TEMP' → logprob: -12.127445220947266
    10. '_t' → logprob: -12.252445220947266

Token 896: '_min' (ID: 15950)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09878288954496384
    2. '_min' → logprob: -2.598782777786255
    3. ' =' → logprob: -3.973782777786255
    4. '=min' → logprob: -7.473783016204834
    5. 'min' → logprob: -8.223782539367676
    6. '<|end|>' → logprob: -10.348782539367676
    7. ',' → logprob: -12.223782539367676
    8. '_temp' → logprob: -12.723782539367676
    9. ' min' → logprob: -13.348782539367676
    10. '=index' → logprob: -13.598782539367676

Token 897: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11289631575345993
    2. ' =' → logprob: -2.237896203994751
    3. ',' → logprob: -10.737895965576172
    4. '_min' → logprob: -10.987895965576172
    5. '=min' → logprob: -11.362895965576172
    6. '=i' → logprob: -12.112895965576172
    7. 'min' → logprob: -12.487895965576172
    8. '	' → logprob: -13.362895965576172
    9. '   ' → logprob: -13.487895965576172
    10. ' ' → logprob: -13.612895965576172

Token 898: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.023246292024850845
    2. ' dist' → logprob: -3.7732462882995605
    3. '(dist' → logprob: -14.773246765136719
    4. '	dist' → logprob: -14.898246765136719
    5. 'd' → logprob: -17.77324676513672
    6. '
' → logprob: -17.77324676513672
    7. '.dist' → logprob: -17.89824676513672
    8. '_dist' → logprob: -18.14824676513672
    9. '```' → logprob: -18.14824676513672
    10. 'Dist' → logprob: -18.52324676513672

Token 899: '_temp' (ID: 27535)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6049304604530334
    2. ' j' → logprob: -1.1049304008483887
    3. ' i' → logprob: -3.3549304008483887
    4. '_' → logprob: -3.4799304008483887
    5. 'i' → logprob: -3.9799304008483887
    6. 'j' → logprob: -4.229930400848389
    7. ' 
' → logprob: -5.479930400848389
    8. '[' → logprob: -5.729930400848389
    9. ' _' → logprob: -6.229930400848389
    10. '[j' → logprob: -6.479930400848389

Token 900: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 901: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.157831072807312
    2. '<|end|>' → logprob: -2.1578311920166016
    3. 'idx' → logprob: -4.282831192016602
    4. '                    
' → logprob: -5.407831192016602
    5. '```' → logprob: -5.532831192016602
    6. ' idx' → logprob: -7.032831192016602
    7. '                    ' → logprob: -7.407831192016602
    8. '				' → logprob: -7.407831192016602
    9. '           ' → logprob: -7.532831192016602
    10. ' ' → logprob: -7.532831192016602

Token 902: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.00013560164370574057
    2. ' idx' → logprob: -9.50013542175293
    3. 'i' → logprob: -9.75013542175293
    4. 'index' → logprob: -14.12513542175293
    5. '(idx' → logprob: -14.37513542175293
    6. '	idx' → logprob: -14.37513542175293
    7. 'v' → logprob: -15.00013542175293
    8. '(' → logprob: -16.50013542175293
    9. '
' → logprob: -17.00013542175293
    10. '0' → logprob: -17.37513542175293

Token 903: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8626387715339661
    2. ' =' → logprob: -0.8626387715339661
    3. ',' → logprob: -2.1126387119293213
    4. '<|end|>' → logprob: -3.6126387119293213
    5. ',j' → logprob: -5.2376389503479
    6. '=j' → logprob: -6.3626389503479
    7. ' ' → logprob: -7.9876389503479
    8. ' j' → logprob: -8.487638473510742
    9. ' ,' → logprob: -8.737638473510742
    10. 'j' → logprob: -8.987638473510742

Token 904: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01814994215965271
    2. ' i' → logprob: -4.0181498527526855
    3. '	i' → logprob: -16.893150329589844
    4. 'j' → logprob: -19.268150329589844
    5. ' ' → logprob: -19.268150329589844
    6. '0' → logprob: -21.143150329589844
    7. '_i' → logprob: -21.643150329589844
    8. ' ' → logprob: -21.893150329589844
    9. '$i' → logprob: -22.143150329589844
    10. ',i' → logprob: -22.268150329589844

Token 905: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 906: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 907: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.008614808320999146
    2. ' j' → logprob: -4.758615016937256
    3. '<|end|>' → logprob: -15.633614540100098
    4. '	j' → logprob: -16.508615493774414
    5. '```' → logprob: -17.883615493774414
    6. ',j' → logprob: -18.508615493774414
    7. '​' → logprob: -19.383615493774414
    8. ' ' → logprob: -19.383615493774414
    9. '_j' → logprob: -19.633615493774414
    10. '=j' → logprob: -19.758615493774414

Token 908: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -8.149051427608356e-05
    2. 'd' → logprob: -10.625081062316895
    3. ' dx' → logprob: -10.625081062316895
    4. '=' → logprob: -10.750081062316895
    5. ' =' → logprob: -12.375081062316895
    6. 'dex' → logprob: -12.500081062316895
    7. '   ' → logprob: -13.500081062316895
    8. ' ' → logprob: -14.375081062316895
    9. '.dx' → logprob: -15.375081062316895
    10. 'adx' → logprob: -15.625081062316895

Token 909: ' =' (ID: 314)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.007830196060240269
    2. ' ' → logprob: -5.8828301429748535
    3. '<|end|>' → logprob: -6.2578301429748535
    4. '=' → logprob: -6.6328301429748535
    5. ' =' → logprob: -7.0078301429748535
    6. ',' → logprob: -7.5078301429748535
    7. 'j' → logprob: -8.507830619812012
    8. '=j' → logprob: -10.132830619812012
    9. ',j' → logprob: -10.882830619812012
    10. ')' → logprob: -11.007830619812012

Token 910: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.860340752406046e-05
    2. ' j' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.625059127807617
    4. '<|end|>' → logprob: -16.625059127807617
    5. '0' → logprob: -16.750059127807617
    6. '	j' → logprob: -17.000059127807617
    7. 'user' → logprob: -17.625059127807617
    8. ' ' → logprob: -18.750059127807617
    9. '```' → logprob: -18.750059127807617
    10. '  ' → logprob: -19.250059127807617

Token 911: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6046552658081055
    2. '<|end|>' → logprob: -2.2296552658081055
    3. 'remaining' → logprob: -2.2296552658081055
    4. 'v' → logprob: -2.3546552658081055
    5. 'if' → logprob: -2.6046552658081055
    6. ' if' → logprob: -2.7296552658081055
    7. '   ' → logprob: -3.1046552658081055
    8. ' 
' → logprob: -3.1046552658081055
    9. 'd' → logprob: -3.2296552658081055
    10. ')' → logprob: -3.3546552658081055

Token 912: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0576576329767704
    2. '   ' → logprob: -4.307657718658447
    3. 'del' → logprob: -4.557657718658447
    4. 'v' → logprob: -4.932657718658447
    5. 'if' → logprob: -5.432657718658447
    6. 'remaining' → logprob: -5.432657718658447
    7. '       ' → logprob: -5.682657718658447
    8. '```' → logprob: -5.932657718658447
    9. '
' → logprob: -6.182657718658447
    10. 'deliver' → logprob: -6.182657718658447

Token 913: ' if' (ID: 538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.35763314366340637
    2. 'if' (adapté à ' if') → logprob: -1.607633113861084
    3. 'del' → logprob: -2.732633113861084
    4. 'v' → logprob: -4.232633113861084
    5. 'deliver' → logprob: -4.607633113861084
    6. 'remaining' → logprob: -4.982633113861084
    7. 'order' → logprob: -6.607633113861084
    8. 'delivery' → logprob: -7.357633113861084
    9. '```' → logprob: -7.482633113861084
    10. 'time' → logprob: -8.107633590698242

Token 914: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09751441329717636
    2. ' idx' → logprob: -2.4725143909454346
    3. 'dist' → logprob: -4.972514629364014
    4. ' dist' → logprob: -7.597514629364014
    5. 'time' → logprob: -8.597514152526855
    6. 'remaining' → logprob: -8.597514152526855
    7. 'not' → logprob: -8.972514152526855
    8. 'v' → logprob: -9.097514152526855
    9. '	idx' → logprob: -9.347514152526855
    10. 'problem' → logprob: -9.472514152526855

Token 915: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.10797850787639618
    2. ' ==' → logprob: -2.857978582382202
    3. '!=' → logprob: -3.357978582382202
    4. '==' → logprob: -5.607978343963623
    5. '!=-' → logprob: -6.107978343963623
    6. ' >=' → logprob: -6.357978343963623
    7. '>=' → logprob: -7.107978343963623
    8. '>' → logprob: -8.107978820800781
    9. ' >' → logprob: -8.357978820800781
    10. ' is' → logprob: -8.482978820800781

Token 916: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0206720617134124e-05
    2. ' -' → logprob: -11.50001049041748
    3. '-j' → logprob: -17.500009536743164
    4. '1' → logprob: -18.500009536743164
    5. '-
' → logprob: -18.500009536743164
    6. '   ' → logprob: -19.375009536743164
    7. '```' → logprob: -19.375009536743164
    8. 'j' → logprob: -19.875009536743164
    9. '−' → logprob: -20.000009536743164
    10. ' ' → logprob: -20.250009536743164

Token 917: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.250006675720215
    3. '```' → logprob: -14.625006675720215
    4. '<|end|>' → logprob: -15.250006675720215
    5. '`' → logprob: -16.25000762939453
    6. '۱' → logprob: -16.68750762939453
    7. ')' → logprob: -16.87500762939453
    8. '...' → logprob: -16.87500762939453
    9. '   ' → logprob: -16.93750762939453
    10. '１' → logprob: -17.00000762939453

Token 918: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.576680064201355
    2. ':
' → logprob: -0.826680064201355
    3. ' and' → logprob: -8.201680183410645
    4. ' or' → logprob: -8.326680183410645
    5. '       ' → logprob: -8.951680183410645
    6. '   ' → logprob: -10.326680183410645
    7. ':return' → logprob: -10.826680183410645
    8. '           ' → logprob: -11.076680183410645
    9. ',' → logprob: -12.076680183410645
    10. ' :
' → logprob: -12.701680183410645

Token 919: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7462026476860046
    2. '       ' → logprob: -0.8712026476860046
    3. 'break' → logprob: -2.7462027072906494
    4. 'time' → logprob: -3.6212027072906494
    5. '```' → logprob: -5.37120246887207
    6. ' time' → logprob: -5.49620246887207
    7. ' break' → logprob: -5.74620246887207
    8. '   ' → logprob: -5.87120246887207
    9. 'return' → logprob: -7.12120246887207
    10. 'print' → logprob: -8.24620246887207

Token 920: ' print' (ID: 2123)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.20150691270828247
    2. 'time' → logprob: -2.4515068531036377
    3. '   ' → logprob: -2.7015068531036377
    4. ' break' → logprob: -4.201507091522217
    5. 'print' (adapté à ' print') → logprob: -4.701507091522217
    6. ' time' → logprob: -6.076507091522217
    7. '       ' → logprob: -6.451507091522217
    8. '
' → logprob: -7.701507091522217
    9. '           ' → logprob: -8.326506614685059
    10. '	break' → logprob: -8.826506614685059

Token 921: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22766070067882538
    2. '(-' → logprob: -1.9776606559753418
    3. '()' → logprob: -2.852660655975342
    4. '("' → logprob: -5.477660655975342
    5. '('' → logprob: -5.977660655975342
    6. '("")' → logprob: -8.3526611328125
    7. '(
' → logprob: -8.6026611328125
    8. '1' → logprob: -9.3526611328125
    9. '()
' → logprob: -9.8526611328125
    10. '(None' → logprob: -10.1026611328125

Token 922: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.625005722045898
    3. '2' → logprob: -13.250005722045898
    4. '0' → logprob: -15.687505722045898
    5. '999' → logprob: -15.687505722045898
    6. '100' → logprob: -16.0625057220459
    7. '```' → logprob: -16.8125057220459
    8. '
' → logprob: -16.8750057220459
    9. '9' → logprob: -17.1250057220459
    10. '99' → logprob: -17.3125057220459

Token 923: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008598887361586094
    2. ')
' → logprob: -7.12585973739624
    3. ' )' → logprob: -10.125860214233398
    4. ',' → logprob: -11.250860214233398
    5. ')
' → logprob: -14.500860214233398
    6. '<|end|>' → logprob: -14.750860214233398
    7. ')return' → logprob: -14.875860214233398
    8. '),' → logprob: -15.250860214233398
    9. '       ' → logprob: -15.750860214233398
    10. ' )
' → logprob: -16.2508602142334

Token 924: ' flush' (ID: 37790)
  Prédit: 'flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flush' → logprob: -0.1602243334054947
    2. ' flush' → logprob: -1.9102243185043335
    3. '.flush' → logprob: -16.41022491455078
    4. '_flush' → logprob: -16.78522491455078
    5. ')' → logprob: -17.53522491455078
    6. 'Flush' → logprob: -19.03522491455078
    7. '
' → logprob: -19.66022491455078
    8. ' flushing' → logprob: -20.03522491455078
    9. 'fl' → logprob: -20.53522491455078
    10. ')
' → logprob: -21.03522491455078

Token 925: '=True' (ID: 7827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008124859305098653
    2. '=True' → logprob: -8.250812530517578
    3. ')
' → logprob: -8.375812530517578
    4. '())' → logprob: -9.000812530517578
    5. '()' → logprob: -9.250812530517578
    6. '(True' → logprob: -9.750812530517578
    7. ' )' → logprob: -10.625812530517578
    8. 'True' → logprob: -12.000812530517578
    9. '```' → logprob: -12.250812530517578
    10. '``' → logprob: -12.875812530517578

Token 926: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.42914366722106934
    2. ')' → logprob: -1.0541436672210693
    3. '           ' → logprob: -8.429143905639648
    4. ' )
' → logprob: -9.429143905639648
    5. ')return' → logprob: -10.304143905639648
    6. ' )' → logprob: -10.554143905639648
    7. '<|end|>' → logprob: -10.679143905639648
    8. ')
' → logprob: -10.804143905639648
    9. '       ' → logprob: -11.304143905639648
    10. ')

' → logprob: -11.429143905639648

Token 927: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 928: ' if' (ID: 538)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.41379526257514954
    2. '           ' → logprob: -1.7887952327728271
    3. ' break' → logprob: -2.288795232772827
    4. '   ' → logprob: -3.538795232772827
    5. 'continue' → logprob: -4.413795471191406
    6. '       ' → logprob: -4.538795471191406
    7. '
' → logprob: -5.288795471191406
    8. 'time' → logprob: -5.413795471191406
    9. ' time' → logprob: -6.163795471191406
    10. ' continue' → logprob: -6.538795471191406

Token 929: ' problem' (ID: 4792)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.9294748902320862
    2. 'time' → logprob: -1.3044748306274414
    3. ' problem' → logprob: -1.9294748306274414
    4. ' not' → logprob: -2.3044748306274414
    5. 'problem' → logprob: -2.9294748306274414
    6. 'not' → logprob: -4.054474830627441
    7. 'False' → logprob: -5.054474830627441
    8. ' False' → logprob: -5.429474830627441
    9. ' True' → logprob: -5.929474830627441
    10. 'True' → logprob: -6.429474830627441

Token 930: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -8.41866585687967e-06
    2. '_a' → logprob: -12.250008583068848
    3. '_' → logprob: -13.250008583068848
    4. 'b' → logprob: -14.250008583068848
    5. 'a' → logprob: -14.375008583068848
    6. '```' → logprob: -16.00000762939453
    7. ')' → logprob: -16.25000762939453
    8. '=False' → logprob: -16.87500762939453
    9. ' _' → logprob: -17.25000762939453
    10. '=True' → logprob: -17.50000762939453

Token 931: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9070072770118713
    2. '               ' → logprob: -1.4070072174072266
    3. ':
' → logprob: -1.6570072174072266
    4. '           ' → logprob: -2.0320072174072266
    5. '==' → logprob: -4.032007217407227
    6. '   ' → logprob: -5.782007217407227
    7. '       ' → logprob: -6.157007217407227
    8. ' ==' → logprob: -6.532007217407227
    9. '                       ' → logprob: -6.907007217407227
    10. '<|end|>' → logprob: -6.907007217407227

Token 932: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10390771180391312
    2. '               ' → logprob: -2.478907823562622
    3. 'input' → logprob: -5.228907585144043
    4. ' input' → logprob: -5.478907585144043
    5. '   ' → logprob: -6.353907585144043
    6. '	       ' → logprob: -6.478907585144043
    7. '       ' → logprob: -7.603907585144043
    8. '	           ' → logprob: -7.978907585144043
    9. '		' → logprob: -8.353907585144043
    10. '                   ' → logprob: -8.603907585144043

Token 933: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.11746808141469955
    2. '           ' → logprob: -3.7424681186676025
    3. ' input' → logprob: -3.7424681186676025
    4. 'break' → logprob: -3.8674681186676025
    5. '               ' → logprob: -4.242467880249023
    6. '   ' → logprob: -4.367467880249023
    7. '[input' → logprob: -4.367467880249023
    8. ' break' → logprob: -6.867467880249023
    9. '[' → logprob: -7.242467880249023
    10. '       ' → logprob: -8.367467880249023

Token 934: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019329203059896827
    2. '()
' → logprob: -6.2519330978393555
    3. '())' → logprob: -13.501933097839355
    4. '()\' → logprob: -13.751933097839355
    5. '(' → logprob: -14.626933097839355
    6. '()
' → logprob: -14.876933097839355
    7. '()

' → logprob: -15.001933097839355
    8. '()]' → logprob: -15.751933097839355
    9. '()`' → logprob: -15.876933097839355
    10. '()<' → logprob: -16.00193214416504

Token 935: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.630129337310791
    2. 'else' → logprob: -0.880129337310791
    3. '   ' → logprob: -3.880129337310791
    4. '
' → logprob: -4.380129337310791
    5. '```' → logprob: -4.880129337310791
    6. ' else' → logprob: -5.130129337310791
    7. '    
' → logprob: -6.880129337310791
    8. '           ' → logprob: -6.880129337310791
    9. 'continue' → logprob: -7.005129337310791
    10. '        
' → logprob: -7.130129337310791

Token 936: ' [' (ID: 723)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.42108088731765747
    2. ' continue' → logprob: -1.4210808277130127
    3. '           ' → logprob: -2.5460808277130127
    4. '       ' → logprob: -5.296081066131592
    5. '	continue' → logprob: -5.421081066131592
    6. 'time' → logprob: -5.546081066131592
    7. ' time' → logprob: -5.671081066131592
    8. 'break' → logprob: -6.546081066131592
    9. 'else' → logprob: -6.546081066131592
    10. '   ' → logprob: -6.921081066131592

Token 937: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -7.703443770878948e-06
    2. '
' → logprob: -13.125007629394531
    3. ' input' → logprob: -13.375007629394531
    4. 'int' → logprob: -13.875007629394531
    5. '_input' → logprob: -14.000007629394531
    6. '0' → logprob: -14.375007629394531
    7. '(input' → logprob: -14.625007629394531
    8. '	input' → logprob: -14.750007629394531
    9. '_' → logprob: -15.250007629394531
    10. ']' → logprob: -15.375007629394531

Token 938: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004562943649943918
    2. '()]' → logprob: -7.7504563331604
    3. '()
' → logprob: -11.125455856323242
    4. '()[' → logprob: -12.125455856323242
    5. '()]
' → logprob: -13.375455856323242
    6. ' ()' → logprob: -13.500455856323242
    7. 'for' → logprob: -13.750455856323242
    8. ']()' → logprob: -14.125455856323242
    9. ']' → logprob: -16.000455856323242
    10. '()][' → logprob: -16.250455856323242

Token 939: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6043404340744019
    2. 'for' → logprob: -1.1043404340744019
    3. '()' → logprob: -2.1043405532836914
    4. '[]' → logprob: -10.104340553283691
    5. '	for' → logprob: -10.229340553283691
    6. '()[' → logprob: -10.479340553283691
    7. '[' → logprob: -10.604340553283691
    8. '()]' → logprob: -10.604340553283691
    9. ']' → logprob: -11.229340553283691
    10. ')' → logprob: -11.354340553283691

Token 940: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1160349458805285e-05
    2. '_range' → logprob: -11.500011444091797
    3. ' _' → logprob: -14.500011444091797
    4. '_
' → logprob: -15.750011444091797
    5. '_j' → logprob: -16.500011444091797
    6. '_=' → logprob: -16.750011444091797
    7. '_in' → logprob: -16.875011444091797
    8. 'range' → logprob: -17.125011444091797
    9. '_input' → logprob: -17.500011444091797
    10. '_]' → logprob: -17.625011444091797

Token 941: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01266421563923359
    2. 'range' → logprob: -4.512664318084717
    3. '_range' → logprob: -6.512664318084717
    4. ' range' → logprob: -9.012663841247559
    5. '_
' → logprob: -12.637663841247559
    6. '_=' → logprob: -12.887663841247559
    7. '(range' → logprob: -14.387663841247559
    8. '	range' → logprob: -14.887663841247559
    9. '_]' → logprob: -15.012663841247559
    10. '_-' → logprob: -15.137663841247559

Token 942: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2439030557870865
    2. '_' → logprob: -1.7439030408859253
    3. ' range' → logprob: -3.493903160095215
    4. '_range' → logprob: -4.493903160095215
    5. '(range' → logprob: -10.493903160095215
    6. ' _' → logprob: -12.368903160095215
    7. '	range' → logprob: -12.868903160095215
    8. '_
' → logprob: -13.243903160095215
    9. '_input' → logprob: -13.868903160095215
    10. '_[' → logprob: -14.368903160095215

Token 943: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1010054498910904
    2. '(int' → logprob: -2.3510055541992188
    3. '_' → logprob: -7.476005554199219
    4. 'range' → logprob: -8.726005554199219
    5. '[int' → logprob: -11.226005554199219
    6. '_int' → logprob: -11.351005554199219
    7. '(' → logprob: -12.101005554199219
    8. ' int' → logprob: -12.351005554199219
    9. '_range' → logprob: -12.351005554199219
    10. '_(' → logprob: -12.476005554199219

Token 944: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10195787250995636
    2. '(input' → logprob: -2.3519577980041504
    3. ' input' → logprob: -6.35195779800415
    4. '(' → logprob: -13.101958274841309
    5. '<input' → logprob: -13.601958274841309
    6. '[input' → logprob: -13.976958274841309
    7. '=input' → logprob: -14.476958274841309
    8. ',input' → logprob: -14.601958274841309
    9. '```' → logprob: -14.976958274841309
    10. ' (' → logprob: -15.101958274841309

Token 945: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.029965106397867203
    2. '())' → logprob: -3.5299651622772217
    3. '()' → logprob: -8.6549654006958
    4. '))' → logprob: -11.4049654006958
    5. '(' → logprob: -12.0299654006958
    6. '()))
' → logprob: -12.0299654006958
    7. ' ())' → logprob: -12.5299654006958
    8. '())
' → logprob: -12.9049654006958
    9. '()]' → logprob: -13.1549654006958
    10. ']))' → logprob: -13.5299654006958

Token 946: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3566257357597351
    2. ']
' → logprob: -1.4816257953643799
    3. '()]' → logprob: -2.98162579536438
    4. ')]' → logprob: -4.981625556945801
    5. '           ' → logprob: -5.231625556945801
    6. '()]
' → logprob: -5.481625556945801
    7. '               ' → logprob: -5.731625556945801
    8. '()' → logprob: -7.356625556945801
    9. ']()
' → logprob: -7.606625556945801
    10. ')' → logprob: -8.4816255569458

Token 947: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4692094027996063
    2. 'remaining' → logprob: -1.5942094326019287
    3. 'del' → logprob: -2.7192094326019287
    4. 'v' → logprob: -3.2192094326019287
    5. '```' → logprob: -4.46920919418335
    6. '   ' → logprob: -4.59420919418335
    7. ')' → logprob: -4.96920919418335
    8. 'elif' → logprob: -5.21920919418335
    9. 'deliver' → logprob: -5.46920919418335
    10. ' else' → logprob: -5.46920919418335

Token 948: ' time' (ID: 1058)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.3645046949386597
    2. 'remaining' → logprob: -1.6145046949386597
    3. 'v' → logprob: -1.8645046949386597
    4. 'del' → logprob: -2.114504814147949
    5. '       ' → logprob: -2.989504814147949
    6. '```' → logprob: -3.239504814147949
    7. '
' → logprob: -3.364504814147949
    8. ')' → logprob: -3.614504814147949
    9. '   ' → logprob: -3.739504814147949
    10. 'return' → logprob: -4.239504814147949

Token 949: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7253366708755493
    2. '+=' → logprob: -0.9753366708755493
    3. '+' → logprob: -1.9753366708755493
    4. ' +' → logprob: -10.100337028503418
    5. '=' → logprob: -11.225337028503418
    6. ' ' → logprob: -13.725337028503418
    7. '   ' → logprob: -14.225337028503418
    8. '+
' → logprob: -14.350337028503418
    9. ']+=' → logprob: -15.225337028503418
    10. '+='' → logprob: -15.475337028503418

Token 950: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018280261429026723
    2. ' ' → logprob: -8.62518310546875
    3. '   ' → logprob: -12.75018310546875
    4. '100' → logprob: -16.50018310546875
    5. '0' → logprob: -16.75018310546875
    6. '10' → logprob: -17.00018310546875
    7. '  ' → logprob: -17.62518310546875
    8. '2' → logprob: -17.87518310546875
    9. '           ' → logprob: -17.87518310546875
    10. '       ' → logprob: -18.00018310546875

Token 951: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -12.00001335144043
    3. '10' → logprob: -13.25001335144043
    4. '0' → logprob: -13.37501335144043
    5. '100' → logprob: -13.37501335144043
    6. '5' → logprob: -15.00001335144043
    7. '2' → logprob: -15.12501335144043
    8. '3' → logprob: -15.43751335144043
    9. '   ' → logprob: -15.56251335144043
    10. '20' → logprob: -16.25001335144043

Token 952: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 953: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.32629311084747314
    2. '<|end|>' → logprob: -2.4512929916381836
    3. 'elif' → logprob: -2.7012929916381836
    4. '```' → logprob: -3.5762929916381836
    5. '   ' → logprob: -3.9512929916381836
    6. ')' → logprob: -4.201292991638184
    7. ' else' → logprob: -4.326292991638184
    8. '[' → logprob: -4.576292991638184
    9. 'continue' → logprob: -4.951292991638184
    10. '\n' → logprob: -5.326292991638184

Token 954: ' if' (ID: 538)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.05736794322729111
    2. '   ' → logprob: -3.682368040084839
    3. ' continue' → logprob: -3.932368040084839
    4. '       ' → logprob: -4.93236780166626
    5. 'else' → logprob: -6.30736780166626
    6. '	continue' → logprob: -6.43236780166626
    7. '           ' → logprob: -8.432368278503418
    8. 'elif' → logprob: -10.057368278503418
    9. '```' → logprob: -10.057368278503418
    10. 'contin' → logprob: -11.182368278503418

Token 955: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.14280050992965698
    2. ' time' → logprob: -2.0178005695343018
    3. 'problem' → logprob: -9.517800331115723
    4. ' problem' → logprob: -10.642800331115723
    5. 'True' → logprob: -11.892800331115723
    6. ' not' → logprob: -12.142800331115723
    7. ' ' → logprob: -12.642800331115723
    8. ' True' → logprob: -13.142800331115723
    9. 'prob' → logprob: -13.267800331115723
    10. 'not' → logprob: -13.267800331115723

Token 956: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14298444986343384
    2. '<' → logprob: -2.017984390258789
    3. ' <=' → logprob: -8.892984390258789
    4. ' ==' → logprob: -9.142984390258789
    5. '<|end|>' → logprob: -10.517984390258789
    6. '==' → logprob: -11.642984390258789
    7. '<=' → logprob: -11.767984390258789
    8. ' !=' → logprob: -12.642984390258789
    9. ' <
' → logprob: -12.767984390258789
    10. ' >=' → logprob: -13.017984390258789

Token 957: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.029752103611826897
    2. ' T' → logprob: -3.529752016067505
    3. '10' → logprob: -14.654751777648926
    4. ' ' → logprob: -14.904751777648926
    5. 'input' → logprob: -14.904751777648926
    6. '1' → logprob: -15.779751777648926
    7. 'int' → logprob: -16.404752731323242
    8. ' input' → logprob: -16.404752731323242
    9. '<T' → logprob: -16.529752731323242
    10. 'V' → logprob: -16.654752731323242

Token 958: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.006252623163163662
    2. 'Max' → logprob: -5.506252765655518
    3. '_MAX' → logprob: -6.506252765655518
    4. 'max' → logprob: -8.13125228881836
    5. '_Max' → logprob: -8.63125228881836
    6. ' Max' → logprob: -9.63125228881836
    7. ' max' → logprob: -10.13125228881836
    8. '_' → logprob: -10.88125228881836
    9. ' _' → logprob: -10.88125228881836
    10. ' T' → logprob: -11.00625228881836

Token 959: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8550339341163635
    2. ':' → logprob: -1.1050338745117188
    3. '       ' → logprob: -2.2300338745117188
    4. '   ' → logprob: -2.9800338745117188
    5. 'continue' → logprob: -3.8550338745117188
    6. ' continue' → logprob: -3.8550338745117188
    7. '<|end|>' → logprob: -4.480033874511719
    8. '           ' → logprob: -4.855033874511719
    9. '==' → logprob: -4.980033874511719
    10. '	continue' → logprob: -5.605033874511719

Token 960: '               ' (ID: 506)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06814352422952652
    2. '   ' → logprob: -3.568143606185913
    3. ' n' → logprob: -3.818143606185913
    4. '       ' → logprob: -4.318143367767334
    5. '           ' → logprob: -7.068143367767334
    6. '	n' → logprob: -7.193143367767334
    7. '```' → logprob: -7.943143367767334
    8. 'continue' → logprob: -8.818143844604492
    9. 't' → logprob: -9.068143844604492
    10. ' continue' → logprob: -10.818143844604492

Token 961: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -4.906711546937004e-05
    2. '   ' → logprob: -10.500048637390137
    3. '_n' → logprob: -11.750048637390137
    4. '_' → logprob: -12.250048637390137
    5. ' n' → logprob: -12.500048637390137
    6. '
' → logprob: -13.875048637390137
    7. 'input' → logprob: -14.000048637390137
    8. '```' → logprob: -14.375048637390137
    9. 'idx' → logprob: -14.500048637390137
    10. 'int' → logprob: -14.500048637390137

Token 962: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21334490180015564
    2. '=' → logprob: -1.713344931602478
    3. '<|end|>' → logprob: -4.588345050811768
    4. ')' → logprob: -7.713345050811768
    5. ' ==' → logprob: -7.963345050811768
    6. '==' → logprob: -8.08834457397461
    7. '<|end|>' → logprob: -8.96334457397461
    8. ' ' → logprob: -8.96334457397461
    9. ',' → logprob: -9.58834457397461
    10. ' +=' → logprob: -9.58834457397461

Token 963: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012356207298580557
    2. ' int' → logprob: -9.000123977661133
    3. '(int' → logprob: -16.375123977661133
    4. '<int' → logprob: -17.375123977661133
    5. '[int' → logprob: -17.875123977661133
    6. '=int' → logprob: -18.000123977661133
    7. '	int' → logprob: -20.250123977661133
    8. ':int' → logprob: -21.000123977661133
    9. ' ' → logprob: -21.500123977661133
    10. ']int' → logprob: -22.250123977661133

Token 964: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07903123646974564
    2. 'input' → logprob: -2.579031229019165
    3. ' input' → logprob: -9.329030990600586
    4. '=input' → logprob: -10.579030990600586
    5. '(' → logprob: -11.329030990600586
    6. '<input' → logprob: -12.204030990600586
    7. ',input' → logprob: -12.579030990600586
    8. '()' → logprob: -12.954030990600586
    9. '[input' → logprob: -12.954030990600586
    10. '(
' → logprob: -14.704030990600586

Token 965: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1542714685201645
    2. '()' → logprob: -2.029271364212036
    3. '())
' → logprob: -5.029271602630615
    4. ')' → logprob: -5.529271602630615
    5. '()
' → logprob: -7.279271602630615
    6. '()[' → logprob: -8.654271125793457
    7. '()\' → logprob: -10.029271125793457
    8. '();)' → logprob: -11.154271125793457
    9. '().' → logprob: -11.279271125793457
    10. '()<' → logprob: -11.779271125793457

Token 966: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 967: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0017212345264852047
    2. ' t' → logprob: -6.376721382141113
    3. '_' → logprob: -11.501721382141113
    4. 'time' → logprob: -13.126721382141113
    5. 'continue' → logprob: -13.626721382141113
    6. '[' → logprob: -13.626721382141113
    7. 'if' → logprob: -13.876721382141113
    8. '   ' → logprob: -13.876721382141113
    9. '_t' → logprob: -14.251721382141113
    10. 'input' → logprob: -14.751721382141113

Token 968: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142386853694916
    2. ' =' → logprob: -1.7014238834381104
    3. ')' → logprob: -12.951423645019531
    4. 's' → logprob: -13.076423645019531
    5. '<|end|>' → logprob: -13.201423645019531
    6. '=
' → logprob: -13.951423645019531
    7. '[' → logprob: -14.451423645019531
    8. '>' → logprob: -14.576423645019531
    9. 'okens' → logprob: -15.076423645019531
    10. '   ' → logprob: -15.076423645019531

Token 969: ' [' (ID: 723)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0008105786982923746
    2. '[int' → logprob: -7.250810623168945
    3. ' int' → logprob: -9.250810623168945
    4. '=int' → logprob: -12.625810623168945
    5. '(int' → logprob: -14.125810623168945
    6. '[' → logprob: -15.000810623168945
    7. 'input' → logprob: -16.250810623168945
    8. '<int' → logprob: -16.625810623168945
    9. '[input' → logprob: -17.000810623168945
    10. ':int' → logprob: -18.375810623168945

Token 970: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.128163257315464e-07
    2. '[int' → logprob: -15.25
    3. ' int' → logprob: -17.5
    4. '<int' → logprob: -18.875
    5. '(int' → logprob: -19.0
    6. '
' → logprob: -20.0
    7. 'input' → logprob: -20.75
    8. '0' → logprob: -21.625
    9. '=int' → logprob: -21.625
    10. '1' → logprob: -22.25

Token 971: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.000866083602886647
    2. 'input' → logprob: -7.125865936279297
    3. '(' → logprob: -10.500865936279297
    4. '(
' → logprob: -11.000865936279297
    5. '(int' → logprob: -11.125865936279297
    6. '[input' → logprob: -13.750865936279297
    7. '=input' → logprob: -14.500865936279297
    8. '<input' → logprob: -14.750865936279297
    9. ',input' → logprob: -15.000865936279297
    10. ' input' → logprob: -15.625865936279297

Token 972: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.690834273584187e-05
    2. '()' → logprob: -11.12503719329834
    3. '.split' → logprob: -11.50003719329834
    4. '()[' → logprob: -11.50003719329834
    5. '()].' → logprob: -14.75003719329834
    6. '()
' → logprob: -14.87503719329834
    7. '.' → logprob: -14.87503719329834
    8. '.input' → logprob: -15.62503719329834
    9. '(.' → logprob: -16.000036239624023
    10. '(' → logprob: -16.500036239624023

Token 973: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.45848218582978e-06
    2. '.split' → logprob: -13.25000286102295
    3. '(split' → logprob: -15.37500286102295
    4. 'spl' → logprob: -15.75000286102295
    5. ' split' → logprob: -16.875001907348633
    6. '0' → logprob: -17.000001907348633
    7. '().' → logprob: -17.125001907348633
    8. '1' → logprob: -17.375001907348633
    9. '_split' → logprob: -17.875001907348633
    10. '```' → logprob: -18.000001907348633

Token 974: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -4.842555426876061e-06
    2. '()' → logprob: -12.750004768371582
    3. '[' → logprob: -13.500004768371582
    4. '())[' → logprob: -15.500004768371582
    5. '()][' → logprob: -15.750004768371582
    6. '(' → logprob: -16.3750057220459
    7. '().' → logprob: -16.6250057220459
    8. ')[' → logprob: -17.8750057220459
    9. '()
' → logprob: -18.0000057220459
    10. '```' → logprob: -18.1250057220459

Token 975: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.500017166137695
    3. '
' → logprob: -13.625017166137695
    4. '0' → logprob: -13.875017166137695
    5. '   ' → logprob: -13.875017166137695
    6. '```' → logprob: -13.875017166137695
    7. '[' → logprob: -14.375017166137695
    8. '][' → logprob: -14.625017166137695
    9. 'j' → logprob: -15.062517166137695
    10. ']' → logprob: -15.125017166137695

Token 976: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01611354760825634
    2. '])' → logprob: -4.516113758087158
    3. ')]' → logprob: -5.641113758087158
    4. ')])' → logprob: -6.891113758087158
    5. '()' → logprob: -8.39111328125
    6. '())' → logprob: -8.89111328125
    7. 'for' → logprob: -10.01611328125
    8. ' for' → logprob: -10.89111328125
    9. ']' → logprob: -10.89111328125
    10. '))' → logprob: -11.51611328125

Token 977: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07987848669290543
    2. 'for' → logprob: -2.579878568649292
    3. ')' → logprob: -6.954878330230713
    4. '	for' → logprob: -10.454878807067871
    5. ' ' → logprob: -13.454878807067871
    6. ']' → logprob: -13.704878807067871
    7. '               ' → logprob: -13.954878807067871
    8. ' )' → logprob: -15.079878807067871
    9. '[' → logprob: -15.204878807067871
    10. ' ' → logprob: -15.329878807067871

Token 978: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4974866644479334e-05
    2. ' _' → logprob: -11.250015258789062
    3. ' range' → logprob: -13.500015258789062
    4. '_range' → logprob: -15.500015258789062
    5. '_
' → logprob: -16.000015258789062
    6. 'range' → logprob: -16.125015258789062
    7. '_]' → logprob: -17.875015258789062
    8. '_
' → logprob: -18.000015258789062
    9. ' in' → logprob: -19.500015258789062
    10. ']' → logprob: -19.750015258789062

Token 979: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3885146379470825
    2. ' range' → logprob: -1.1385146379470825
    3. '_range' → logprob: -7.138514518737793
    4. '_' → logprob: -7.513514518737793
    5. 'in' → logprob: -9.138514518737793
    6. ' in' → logprob: -9.263514518737793
    7. '(range' → logprob: -9.763514518737793
    8. '0' → logprob: -11.138514518737793
    9. ' j' → logprob: -11.888514518737793
    10. ' t' → logprob: -12.513514518737793

Token 980: ' range' (ID: 3352)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13001060485839844
    2. 'range' → logprob: -2.1300106048583984
    3. ' range' → logprob: -5.880010604858398
    4. '_range' → logprob: -8.255010604858398
    5. '_]' → logprob: -11.005010604858398
    6. '_=' → logprob: -13.255010604858398
    7. '_)' → logprob: -13.505010604858398
    8. '(range' → logprob: -14.005010604858398
    9. '_
' → logprob: -14.005010604858398
    10. '	range' → logprob: -14.130010604858398

Token 981: '(n' (ID: 2406)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07223217934370041
    2. 'n' → logprob: -2.947232246398926
    3. '(n' → logprob: -4.572232246398926
    4. ' n' → logprob: -5.947232246398926
    5. '_n' → logprob: -6.572232246398926
    6. ' _' → logprob: -6.947232246398926
    7. '_]' → logprob: -7.322232246398926
    8. ' range' → logprob: -7.697232246398926
    9. '_range' → logprob: -7.947232246398926
    10. 'range' → logprob: -8.072232246398926

Token 982: ')]
' (ID: 11587)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5191396474838257
    2. ')]' → logprob: -1.6441396474838257
    3. ']' → logprob: -2.0191397666931152
    4. ')' → logprob: -2.6441397666931152
    5. ')])' → logprob: -5.894139766693115
    6. '               ' → logprob: -6.519139766693115
    7. ' for' → logprob: -6.894139766693115
    8. 'for' → logprob: -7.269139766693115
    9. '])
' → logprob: -7.269139766693115
    10. ')]
' → logprob: -7.519139766693115

Token 983: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01059544924646616
    2. 'order' → logprob: -5.010595321655273
    3. ' order' → logprob: -6.385595321655273
    4. '           ' → logprob: -7.010595321655273
    5. '<|end|>' → logprob: -7.635595321655273
    6. '	       ' → logprob: -8.260595321655273
    7. '   ' → logprob: -8.885595321655273
    8. '       ' → logprob: -9.385595321655273
    9. '	           ' → logprob: -9.635595321655273
    10. '	order' → logprob: -9.885595321655273

Token 984: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -0.0036227621603757143
    2. ' order' → logprob: -5.628622531890869
    3. '	order' → logprob: -11.753623008728027
    4. '           ' → logprob: -12.003623008728027
    5. '               ' → logprob: -12.753623008728027
    6. '   ' → logprob: -13.003623008728027
    7. '       ' → logprob: -13.003623008728027
    8. '$order' → logprob: -15.378623008728027
    9. 'if' → logprob: -15.753623008728027
    10. '(order' → logprob: -16.00362205505371

Token 985: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004940562648698688
    2. '.' → logprob: -7.625494003295898
    3. '.app' → logprob: -13.000494003295898
    4. '.extend' → logprob: -13.250494003295898
    5. 'append' → logprob: -13.500494003295898
    6. ' .' → logprob: -15.250494003295898
    7. '.ap' → logprob: -16.2504940032959
    8. '.setdefault' → logprob: -16.7504940032959
    9. '.Append' → logprob: -17.0004940032959
    10. '.add' → logprob: -17.2504940032959

Token 986: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.125005722045898
    3. 't' → logprob: -16.1250057220459
    4. '(
' → logprob: -17.8750057220459
    5. '	t' → logprob: -19.3750057220459
    6. ')' → logprob: -19.8750057220459
    7. ' (' → logprob: -20.0000057220459
    8. ',t' → logprob: -20.8750057220459
    9. ' t' → logprob: -21.0000057220459
    10. '(ts' → logprob: -21.1250057220459

Token 987: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04866287484765053
    2. ')
' → logprob: -3.0486629009246826
    3. '               ' → logprob: -9.923663139343262
    4. '       ' → logprob: -11.548663139343262
    5. '           ' → logprob: -11.673663139343262
    6. ')
' → logprob: -12.923663139343262
    7. '                   ' → logprob: -13.423663139343262
    8. '   ' → logprob: -13.423663139343262
    9. ' )' → logprob: -14.048663139343262
    10. ' if' → logprob: -14.673663139343262

Token 988: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7225451469421387
    2. '   ' → logprob: -1.3475451469421387
    3. '[' → logprob: -3.2225451469421387
    4. 'v' → logprob: -3.3475451469421387
    5. 'd' → logprob: -3.4725451469421387
    6. '<|end|>' → logprob: -3.8475451469421387
    7. ',' → logprob: -4.347545146942139
    8. '       ' → logprob: -4.472545146942139
    9. '.' → logprob: -4.472545146942139
    10. 'elif' → logprob: -4.722545146942139

Token 989: ' if' (ID: 538)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7893873453140259
    2. 'if' (adapté à ' if') → logprob: -1.5393873453140259
    3. 'continue' → logprob: -1.6643873453140259
    4. ' if' → logprob: -2.0393872261047363
    5. '	continue' → logprob: -5.664387226104736
    6. '   ' → logprob: -5.664387226104736
    7. '       ' → logprob: -5.914387226104736
    8. '<|end|>' → logprob: -6.664387226104736
    9. '           ' → logprob: -7.789387226104736
    10. ' continues' → logprob: -8.539387702941895

Token 990: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.0031931623816490173
    2. ' problem' → logprob: -5.753193378448486
    3. 'prob' → logprob: -12.128192901611328
    4. 'not' → logprob: -12.378192901611328
    5. 'time' → logprob: -12.878192901611328
    6. '(problem' → logprob: -12.878192901611328
    7. 'proble' → logprob: -15.128192901611328
    8. ' not' → logprob: -16.253192901611328
    9. 'pro' → logprob: -16.628192901611328
    10. '_problem' → logprob: -16.878192901611328

Token 991: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -7.896309739408025e-07
    2. ' _' → logprob: -15.125000953674316
    3. '_a' → logprob: -15.625000953674316
    4. '_' → logprob: -15.875000953674316
    5. 'b' → logprob: -16.0
    6. '```' → logprob: -17.25
    7. '=' → logprob: -17.375
    8. '._' → logprob: -18.625
    9. '==' → logprob: -18.75
    10. ')' → logprob: -18.875

Token 992: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5636922121047974
    2. ')' → logprob: -1.1886922121047974
    3. '):' → logprob: -2.688692092895508
    4. '=' → logprob: -3.688692092895508
    5. '[' → logprob: -4.063692092895508
    6. '   ' → logprob: -5.563692092895508
    7. ']' → logprob: -5.688692092895508
    8. ':
' → logprob: -6.188692092895508
    9. '==' → logprob: -6.438692092895508
    10. ' =' → logprob: -7.063692092895508

Token 993: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11380783468484879
    2. '               ' → logprob: -2.3638079166412354
    3. '           ' → logprob: -5.488807678222656
    4. '[' → logprob: -5.863807678222656
    5. '                ' → logprob: -6.488807678222656
    6. '				' → logprob: -7.113807678222656
    7. '	               ' → logprob: -7.113807678222656
    8. '		           ' → logprob: -7.363807678222656
    9. '                       ' → logprob: -7.988807678222656
    10. '			       ' → logprob: -7.988807678222656

Token 994: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -2.4272752852994017e-05
    2. '[' (adapté à ' [') → logprob: -10.87502384185791
    3. '[int' → logprob: -13.12502384185791
    4. ' [' → logprob: -13.12502384185791
    5. '   ' → logprob: -13.75002384185791
    6. '           ' → logprob: -16.375024795532227
    7. '               ' → logprob: -16.625024795532227
    8. '                   ' → logprob: -16.875024795532227
    9. 'input' → logprob: -17.250024795532227
    10. '       ' → logprob: -18.125024795532227

Token 995: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.2200749754119897e-06
    2. '[input' → logprob: -13.125001907348633
    3. '(input' → logprob: -15.750001907348633
    4. ' input' → logprob: -17.625001907348633
    5. 'int' → logprob: -18.250001907348633
    6. '<input' → logprob: -19.375001907348633
    7. '	input' → logprob: -20.625001907348633
    8. '=input' → logprob: -21.125001907348633
    9. '
' → logprob: -21.250001907348633
    10. 'inp' → logprob: -21.250001907348633

Token 996: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1994775377388578e-05
    2. '()]' → logprob: -11.875012397766113
    3. '()
' → logprob: -12.750012397766113
    4. 'for' → logprob: -13.500012397766113
    5. '()[' → logprob: -14.875012397766113
    6. ' ()' → logprob: -16.000011444091797
    7. '```' → logprob: -16.875011444091797
    8. ']()' → logprob: -17.000011444091797
    9. '()]
' → logprob: -17.250011444091797
    10. '())' → logprob: -17.500011444091797

Token 997: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6037168502807617
    2. ' for' → logprob: -0.8537168502807617
    3. '()' → logprob: -4.103716850280762
    4. ')' → logprob: -5.103716850280762
    5. '               ' → logprob: -5.728716850280762
    6. '                   ' → logprob: -7.103716850280762
    7. '           ' → logprob: -8.728716850280762
    8. '   ' → logprob: -8.853716850280762
    9. '[' → logprob: -9.103716850280762
    10. '                       ' → logprob: -9.728716850280762

Token 998: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.038308046758174896
    2. ' _' → logprob: -3.2883081436157227
    3. 'int' → logprob: -8.913308143615723
    4. '_int' → logprob: -10.288308143615723
    5. '_
' → logprob: -10.913308143615723
    6. '_input' → logprob: -11.163308143615723
    7. '(int' → logprob: -11.163308143615723
    8. '_range' → logprob: -12.038308143615723
    9. '[int' → logprob: -12.163308143615723
    10. ' _
' → logprob: -12.413308143615723

Token 999: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09975136071443558
    2. '_range' → logprob: -2.4747514724731445
    3. '_' → logprob: -4.7247514724731445
    4. ' range' → logprob: -6.7247514724731445
    5. '(range' → logprob: -7.4747514724731445
    6. '	range' → logprob: -9.849751472473145
    7. '_problem' → logprob: -11.224751472473145
    8. 'int' → logprob: -11.974751472473145
    9. '.range' → logprob: -12.099751472473145
    10. 'problem' → logprob: -12.224751472473145

Token 1000: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05941860377788544
    2. '_range' → logprob: -2.9344186782836914
    3. '_' → logprob: -5.684418678283691
    4. ' range' → logprob: -6.934418678283691
    5. 'int' → logprob: -9.684418678283691
    6. '(range' → logprob: -10.059418678283691
    7. '	range' → logprob: -11.309418678283691
    8. '_input' → logprob: -12.184418678283691
    9. 'split' → logprob: -12.434418678283691
    10. '_problem' → logprob: -12.934418678283691

Token 1001: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011052886955440044
    2. 'int' → logprob: -4.511053085327148
    3. '[int' → logprob: -12.636053085327148
    4. ' (' → logprob: -14.261053085327148
    5. '   ' → logprob: -14.886053085327148
    6. ' int' → logprob: -15.386053085327148
    7. '=int' → logprob: -15.636053085327148
    8. '
' → logprob: -16.01105308532715
    9. '(' → logprob: -16.51105308532715
    10. 'range' → logprob: -16.63605308532715

Token 1002: '(input' (ID: 10054)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12404696643352509
    2. 'int' → logprob: -2.624047040939331
    3. '(input' → logprob: -3.624047040939331
    4. '_' → logprob: -4.749046802520752
    5. '(' → logprob: -4.999046802520752
    6. '_(' → logprob: -7.749046802520752
    7. ' int' → logprob: -8.12404727935791
    8. 'input' → logprob: -8.24904727935791
    9. '_int' → logprob: -8.49904727935791
    10. '(len' → logprob: -8.87404727935791

Token 1003: '()))' (ID: 16829)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0011204533511772752
    2. '()' → logprob: -7.626120567321777
    3. '()))' → logprob: -7.751120567321777
    4. ')]' → logprob: -9.376120567321777
    5. ')])' → logprob: -9.626120567321777
    6. '()]' → logprob: -10.626120567321777
    7. ' ())' → logprob: -11.751120567321777
    8. '])]' → logprob: -11.876120567321777
    9. '(' → logprob: -12.126120567321777
    10. '])' → logprob: -13.376120567321777

Token 1004: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015142290852963924
    2. ')]' → logprob: -4.640142440795898
    3. ']' → logprob: -5.890142440795898
    4. '               ' → logprob: -6.765142440795898
    5. '])' → logprob: -7.265142440795898
    6. ')
' → logprob: -7.640142440795898
    7. ')])' → logprob: -9.390142440795898
    8. '           ' → logprob: -9.640142440795898
    9. '       ' → logprob: -10.640142440795898
    10. '   ' → logprob: -10.640142440795898

Token 1005: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5662770867347717
    2. '   ' → logprob: -1.941277027130127
    3. ')' → logprob: -2.441277027130127
    4. '<|end|>' → logprob: -2.566277027130127
    5. 'else' → logprob: -3.191277027130127
    6. ' else' → logprob: -3.441277027130127
    7. 'elif' → logprob: -4.316277027130127
    8. '```' → logprob: -4.816277027130127
    9. 'continue' → logprob: -5.441277027130127
    10. ' continue' → logprob: -5.941277027130127

Token 1006: ' continue' (ID: 4901)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.12814608216285706
    2. 'remaining' → logprob: -2.878146171569824
    3. '   ' → logprob: -4.003146171569824
    4. 'del' → logprob: -4.128146171569824
    5. 'elif' → logprob: -4.253146171569824
    6. '       ' → logprob: -5.378146171569824
    7. ' else' → logprob: -5.628146171569824
    8. 'continue' (adapté à ' continue') → logprob: -6.628146171569824
    9. ')' → logprob: -7.003146171569824
    10. 'v' → logprob: -7.003146171569824

Token 1007: '
' (ID: 198)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.9485970139503479
    2. 'else' → logprob: -1.9485969543457031
    3. 'del' → logprob: -1.9485969543457031
    4. 'v' → logprob: -2.073596954345703
    5. 'if' → logprob: -2.448596954345703
    6. '   ' → logprob: -2.823596954345703
    7. 'deliver' → logprob: -3.948596954345703
    8. 'order' → logprob: -4.323596954345703
    9. 'elif' → logprob: -5.073596954345703
    10. 'print' → logprob: -6.323596954345703

Token 1008: '       ' (ID: 309)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.7819734811782837
    2. 'else' → logprob: -0.9069734811782837
    3. 'remaining' → logprob: -2.281973361968994
    4. 'deliver' → logprob: -4.156973361968994
    5. '   ' → logprob: -4.906973361968994
    6. 'if' → logprob: -5.406973361968994
    7. 'v' → logprob: -5.906973361968994
    8. 'elif' → logprob: -5.906973361968994
    9. 'order' → logprob: -7.156973361968994
    10. 'delivery' → logprob: -7.406973361968994

Token 1009: ' dist' (ID: 3601)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.09105617552995682
    2. 'remaining' → logprob: -2.9660561084747314
    3. 'dist' (adapté à ' dist') → logprob: -4.2160563468933105
    4. 'v' → logprob: -4.4660563468933105
    5. 'deliver' → logprob: -4.9660563468933105
    6. 'dest' → logprob: -7.7160563468933105
    7. 'order' → logprob: -7.9660563468933105
    8. 'time' → logprob: -8.091055870056152
    9. 'print' → logprob: -8.216055870056152
    10. 'delivery' → logprob: -8.466055870056152

Token 1010: 'ination' (ID: 3273)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.23460550606250763
    2. '_temp' → logprob: -1.7346055507659912
    3. '[' → logprob: -3.859605550765991
    4. '_' → logprob: -5.234605312347412
    5. 'ination' → logprob: -6.109605312347412
    6. '_temperature' → logprob: -6.859605312347412
    7. '_min' → logprob: -7.484605312347412
    8. '_destination' → logprob: -7.734605312347412
    9. '_tmp' → logprob: -8.48460578918457
    10. 'ance' → logprob: -8.60960578918457

Token 1011: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688141107559204
    2. '=' → logprob: -1.1368813514709473
    3. ')' → logprob: -12.386881828308105
    4. ' ' → logprob: -13.011881828308105
    5. ',' → logprob: -13.636881828308105
    6. ' =
' → logprob: -14.011881828308105
    7. ' +=' → logprob: -15.011881828308105
    8. '=
' → logprob: -15.261881828308105
    9. '[' → logprob: -15.511881828308105
    10. '.' → logprob: -15.761881828308105

Token 1012: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0067154900170862675
    2. ' order' → logprob: -5.006715297698975
    3. '	order' → logprob: -16.881715774536133
    4. '   ' → logprob: -17.506715774536133
    5. 'ord' → logprob: -17.631715774536133
    6. '(order' → logprob: -17.881715774536133
    7. 'orde' → logprob: -18.131715774536133
    8. ' ' → logprob: -18.756715774536133
    9. '$order' → logprob: -19.006715774536133
    10. 'orders' → logprob: -19.381715774536133

Token 1013: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.7133641196996905e-05
    2. 'idx' → logprob: -11.25002670288086
    3. '[' → logprob: -11.62502670288086
    4. '[next' → logprob: -13.87502670288086
    5. '[
' → logprob: -14.12502670288086
    6. '[token' → logprob: -14.25002670288086
    7. '[index' → logprob: -14.37502670288086
    8. '```' → logprob: -14.62502670288086
    9. '	idx' → logprob: -15.62502670288086
    10. '[src' → logprob: -15.62502670288086

Token 1014: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0003436872211750597
    2. '.pop' → logprob: -8.000343322753906
    3. '][' → logprob: -12.500343322753906
    4. '}.' → logprob: -13.125343322753906
    5. '.' → logprob: -14.000343322753906
    6. ''].' → logprob: -14.375343322753906
    7. ' ].' → logprob: -14.625343322753906
    8. ']' → logprob: -14.875343322753906
    9. ').' → logprob: -15.750343322753906
    10. '[' → logprob: -17.125343322753906

Token 1015: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -2.935296834039036e-06
    2. '.pop' → logprob: -12.75000286102295
    3. ' pop' → logprob: -18.875003814697266
    4. '```' → logprob: -19.500003814697266
    5. '	pop' → logprob: -20.000003814697266
    6. '_pop' → logprob: -20.375003814697266
    7. '
' → logprob: -21.500003814697266
    8. 'p' → logprob: -21.875003814697266
    9. '(pop' → logprob: -22.875003814697266
    10. 'po' → logprob: -23.500003814697266

Token 1016: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0002800471556838602
    2. '(' → logprob: -8.500280380249023
    3. 'j' → logprob: -9.625280380249023
    4. '(
' → logprob: -11.750280380249023
    5. '[j' → logprob: -14.125280380249023
    6. '	j' → logprob: -14.625280380249023
    7. ' (' → logprob: -14.750280380249023
    8. 'jax' → logprob: -15.000280380249023
    9. ' j' → logprob: -15.250280380249023
    10. ',j' → logprob: -15.750280380249023

Token 1017: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0002905334113165736
    2. 'j' → logprob: -8.250290870666504
    3. 'dex' → logprob: -11.625290870666504
    4. 'd' → logprob: -12.000290870666504
    5. '(dx' → logprob: -12.125290870666504
    6. ' dx' → logprob: -13.250290870666504
    7. 'idx' → logprob: -14.000290870666504
    8. ')' → logprob: -14.125290870666504
    9. '   ' → logprob: -14.125290870666504
    10. '(j' → logprob: -14.125290870666504

Token 1018: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026341751217842102
    2. ')
' → logprob: -3.651341676712036
    3. '())' → logprob: -11.026341438293457
    4. '()' → logprob: -12.026341438293457
    5. '[' → logprob: -12.026341438293457
    6. '       ' → logprob: -12.151341438293457
    7. '())
' → logprob: -13.401341438293457
    8. ' )' → logprob: -13.776341438293457
    9. ')
' → logprob: -14.026341438293457
    10. ')

' → logprob: -14.276341438293457

Token 1019: '       ' (ID: 309)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.12454577535390854
    2. 'del' → logprob: -2.3745458126068115
    3. 'return' → logprob: -4.249545574188232
    4. 'print' → logprob: -5.499545574188232
    5. 'deliver' → logprob: -6.124545574188232
    6. ' remaining' → logprob: -6.874545574188232
    7. 'next' → logprob: -7.124545574188232
    8. 'v' → logprob: -7.249545574188232
    9. '   ' → logprob: -8.24954605102539
    10. ' delivering' → logprob: -8.37454605102539

Token 1020: ' remaining' (ID: 15448)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.02927757240831852
    2. 'remaining' (adapté à ' remaining') → logprob: -3.6542775630950928
    3. 'print' → logprob: -6.529277801513672
    4. 'deliver' → logprob: -7.404277801513672
    5. 'v' → logprob: -8.029277801513672
    6. 'if' → logprob: -8.154277801513672
    7. 'return' → logprob: -8.779277801513672
    8. 'next' → logprob: -10.279277801513672
    9. ' delivering' → logprob: -10.529277801513672
    10. 'delivery' → logprob: -10.654277801513672

Token 1021: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.08396386355161667
    2. '_next' → logprob: -2.8339638710021973
    3. '_' → logprob: -3.8339638710021973
    4. ' _' → logprob: -10.208963394165039
    5. '_first' → logprob: -10.583963394165039
    6. '_
' → logprob: -11.083963394165039
    7. 'last' → logprob: -11.333963394165039
    8. '_=' → logprob: -11.708963394165039
    9. '_l' → logprob: -12.333963394165039
    10. '=' → logprob: -12.708963394165039

Token 1022: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931670308113098
    2. ' =' → logprob: -0.6931670308113098
    3. ',' → logprob: -11.443166732788086
    4. ' ' → logprob: -13.443166732788086
    5. ' -=' → logprob: -13.568166732788086
    6. '=
' → logprob: -13.943166732788086
    7. '=int' → logprob: -13.943166732788086
    8. ')' → logprob: -14.443166732788086
    9. ' +=' → logprob: -14.443166732788086
    10. ' =
' → logprob: -14.443166732788086

Token 1023: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -5.080963092041202e-06
    2. ' dist' → logprob: -12.500004768371582
    3. '0' → logprob: -14.125004768371582
    4. 'int' → logprob: -15.125004768371582
    5. '1' → logprob: -16.7500057220459
    6. '   ' → logprob: -16.7500057220459
    7. 'abs' → logprob: -17.0000057220459
    8. '  ' → logprob: -17.5000057220459
    9. '	dist' → logprob: -17.5000057220459
    10. '(dist' → logprob: -17.8750057220459

Token 1024: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016536559909582138
    2. '[v' → logprob: -4.141536712646484
    3. 'dist' → logprob: -8.266536712646484
    4. ' [' → logprob: -9.266536712646484
    5. '(dist' → logprob: -10.016536712646484
    6. '[int' → logprob: -10.141536712646484
    7. '[
' → logprob: -10.766536712646484
    8. '[d' → logprob: -11.516536712646484
    9. ' dist' → logprob: -11.891536712646484
    10. ' ' → logprob: -12.141536712646484

Token 1025: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014532958157360554
    2. 'v' → logprob: -4.264533042907715
    3. '0' → logprob: -8.264533042907715
    4. 'dist' → logprob: -9.514533042907715
    5. '
' → logprob: -11.139533042907715
    6. ' ' → logprob: -12.014533042907715
    7. '(' → logprob: -12.389533042907715
    8. ' v' → logprob: -12.764533042907715
    9. '```' → logprob: -13.139533042907715
    10. 'next' → logprob: -14.202033042907715

Token 1026: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006541779730468988
    2. '[' → logprob: -8.125654220581055
    3. ',v' → logprob: -8.250654220581055
    4. ' ,' → logprob: -9.625654220581055
    5. ',
' → logprob: -11.625654220581055
    6. '][' → logprob: -11.750654220581055
    7. ',[' → logprob: -12.250654220581055
    8. '```' → logprob: -13.250654220581055
    9. '[v' → logprob: -13.625654220581055
    10. ',d' → logprob: -14.125654220581055

Token 1027: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004111880902200937
    2. ' dist' → logprob: -5.5041117668151855
    3. 'v' → logprob: -10.504112243652344
    4. 'dest' → logprob: -12.504112243652344
    5. ' v' → logprob: -13.504112243652344
    6. '	dist' → logprob: -15.254112243652344
    7. '   ' → logprob: -15.754112243652344
    8. '(dist' → logprob: -15.879112243652344
    9. '```' → logprob: -16.629112243652344
    10. ' ' → logprob: -16.754112243652344

Token 1028: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -7.896309739408025e-07
    2. 'inition' → logprob: -15.000000953674316
    3. 'in' → logprob: -15.375000953674316
    4. 'INATION' → logprob: -16.75
    5. 'inations' → logprob: -17.125
    6. 'inação' → logprob: -17.625
    7. 'ignation' → logprob: -17.625
    8. 'nation' → logprob: -17.75
    9. 'ation' → logprob: -18.0
    10. 'ization' → logprob: -18.375

Token 1029: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027343282476067543
    2. ']
' → logprob: -3.902343273162842
    3. '-' → logprob: -5.902343273162842
    4. '+' → logprob: -6.152343273162842
    5. ' -' → logprob: -7.152343273162842
    6. ' ]' → logprob: -7.527343273162842
    7. ']+' → logprob: -8.77734375
    8. '<|end|>' → logprob: -8.77734375
    9. ' +' → logprob: -9.27734375
    10. '       ' → logprob: -10.15234375

Token 1030: '       ' (ID: 309)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8065944314002991
    2. 'remaining' → logprob: -0.8065944314002991
    3. '       ' → logprob: -2.4315943717956543
    4. 'v' → logprob: -4.931594371795654
    5. ' next' → logprob: -5.306594371795654
    6. 'return' → logprob: -5.681594371795654
    7. ' remaining' → logprob: -6.056594371795654
    8. '   ' → logprob: -7.556594371795654
    9. 'print' → logprob: -8.431594848632812
    10. ' v' → logprob: -8.681594848632812

Token 1031: ' v' (ID: 323)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.049209460616111755
    2. 'v' (adapté à ' v') → logprob: -3.4242093563079834
    3. 'remaining' → logprob: -4.1742095947265625
    4. 'if' → logprob: -10.674209594726562
    5. 'dist' → logprob: -11.299209594726562
    6. '```' → logprob: -11.799209594726562
    7. ' next' → logprob: -12.299209594726562
    8. 'return' → logprob: -12.799209594726562
    9. 'prev' → logprob: -14.299209594726562
    10. 'print' → logprob: -14.674209594726562

Token 1032: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -5.080963092041202e-06
    2. '_' → logprob: -13.000004768371582
    3. 'Next' → logprob: -14.375004768371582
    4. 'next' → logprob: -14.625004768371582
    5. '_from' → logprob: -14.625004768371582
    6. '_n' → logprob: -15.375004768371582
    7. '_=' → logprob: -15.500004768371582
    8. '=' → logprob: -15.625004768371582
    9. '_prev' → logprob: -15.750004768371582
    10. '_current' → logprob: -16.3750057220459

Token 1033: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22553059458732605
    2. ' =' → logprob: -1.6005306243896484
    3. ',' → logprob: -9.100530624389648
    4. ' ' → logprob: -13.225530624389648
    5. '<|end|>' → logprob: -14.350530624389648
    6. '_' → logprob: -14.600530624389648
    7. ' ,' → logprob: -14.600530624389648
    8. '=
' → logprob: -14.850530624389648
    9. 'space' → logprob: -15.100530624389648
    10. '=v' → logprob: -15.350530624389648

Token 1034: ' predecessors' (ID: 143645)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -7.266944157890975e-05
    2. 'pred' → logprob: -10.250072479248047
    3. 'preced' → logprob: -11.125072479248047
    4. ' predecessors' → logprob: -11.125072479248047
    5. '1' → logprob: -12.500072479248047
    6. 'pr' → logprob: -13.125072479248047
    7. 'preh' → logprob: -14.250072479248047
    8. '	pre' → logprob: -15.000072479248047
    9. 'pro' → logprob: -15.125072479248047
    10. ' predecess' → logprob: -16.125072479248047

Token 1035: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010580805974313989
    2. 'dist' → logprob: -9.750105857849121
    3. '(dist' → logprob: -11.250105857849121
    4. '[v' → logprob: -11.375105857849121
    5. '[
' → logprob: -11.500105857849121
    6. '[[' → logprob: -13.000105857849121
    7. '```' → logprob: -13.375105857849121
    8. '1' → logprob: -13.750105857849121
    9. 'v' → logprob: -14.250105857849121
    10. '[(' → logprob: -14.375105857849121

Token 1036: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00016921341011766344
    2. '[' → logprob: -8.750168800354004
    3. '1' → logprob: -11.625168800354004
    4. ' dist' → logprob: -13.875168800354004
    5. '(dist' → logprob: -15.250168800354004
    6. '
' → logprob: -15.375168800354004
    7. '	dist' → logprob: -16.12516975402832
    8. '   ' → logprob: -16.87516975402832
    9. 'dest' → logprob: -17.00016975402832
    10. '2' → logprob: -17.25016975402832

Token 1037: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.0007958084461279213
    2. '[' → logprob: -8.125795364379883
    3. 'ation' → logprob: -8.375795364379883
    4. 'nation' → logprob: -9.250795364379883
    5. '1' → logprob: -9.625795364379883
    6. 'destination' → logprob: -10.500795364379883
    7. 'estination' → logprob: -11.500795364379883
    8. 'inition' → logprob: -11.750795364379883
    9. 'inations' → logprob: -11.875795364379883
    10. '   ' → logprob: -11.875795364379883

Token 1038: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033069768687710166
    2. '1' → logprob: -8.500330924987793
    3. '[' → logprob: -9.250330924987793
    4. ' ,' → logprob: -10.875330924987793
    5. ',
' → logprob: -13.125330924987793
    6. ' ' → logprob: -13.375330924987793
    7. '[:,' → logprob: -13.375330924987793
    8. '[,' → logprob: -13.500330924987793
    9. ']' → logprob: -13.625330924987793
    10. '0' → logprob: -14.125330924987793

Token 1039: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'dist' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '
' → logprob: -18.000001907348633
    6. '```' → logprob: -18.750001907348633
    7. 'v' → logprob: -18.875001907348633
    8. '0' → logprob: -19.000001907348633
    9. '  ' → logprob: -20.125001907348633
    10. '۱' → logprob: -20.250001907348633

Token 1040: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.440506407059729e-05
    2. 'dist' → logprob: -10.37503433227539
    3. ' ' → logprob: -13.87503433227539
    4. '0' → logprob: -14.12503433227539
    5. 'v' → logprob: -14.50003433227539
    6. '
' → logprob: -14.75003433227539
    7. ' dist' → logprob: -15.00003433227539
    8. '
' → logprob: -16.87503433227539
    9. '```' → logprob: -16.93753433227539
    10. '   ' → logprob: -17.87503433227539

Token 1041: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06285547465085983
    2. ']
' → logprob: -2.8128554821014404
    3. '<|end|>' → logprob: -7.437855243682861
    4. ' ]' → logprob: -9.18785572052002
    5. '       ' → logprob: -10.43785572052002
    6. ']
' → logprob: -10.68785572052002
    7. '   ' → logprob: -10.68785572052002
    8. ']+' → logprob: -10.81285572052002
    9. '
' → logprob: -10.93785572052002
    10. ']

' → logprob: -11.56285572052002

Token 1042: '       ' (ID: 309)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.12944740056991577
    2. ' remaining' → logprob: -2.1294474601745605
    3. '[' → logprob: -7.1294474601745605
    4. '```' → logprob: -7.6294474601745605
    5. ')' → logprob: -8.254446983337402
    6. '`' → logprob: -8.254446983337402
    7. '.remaining' → logprob: -8.379446983337402
    8. '<|end|>' → logprob: -8.754446983337402
    9. ''' → logprob: -9.379446983337402
    10. '_remaining' → logprob: -9.879446983337402

Token 1043: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' (adapté à ' remaining') → logprob: -3.416665640543215e-05
    2. ' remaining' → logprob: -10.75003433227539
    3. 'return' → logprob: -12.00003433227539
    4. '       ' → logprob: -13.37503433227539
    5. '   ' → logprob: -13.37503433227539
    6. 'del' → logprob: -13.87503433227539
    7. '
' → logprob: -14.00003433227539
    8. 'next' → logprob: -14.25003433227539
    9. '           ' → logprob: -15.00003433227539
    10. '```' → logprob: -15.12503433227539

Token 1044: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.004240212496370077
    2. '_last' → logprob: -5.504240036010742
    3. 'next' → logprob: -8.754240036010742
    4. 'last' → logprob: -13.004240036010742
    5. '```' → logprob: -14.254240036010742
    6. '=' → logprob: -15.379240036010742
    7. '_prev' → logprob: -15.504240036010742
    8. '_first' → logprob: -15.629240036010742
    9. '_' → logprob: -16.004240036010742
    10. '   ' → logprob: -16.129240036010742

Token 1045: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004049552138894796
    2. ' =' → logprob: -5.754049777984619
    3. '-=' → logprob: -7.129049777984619
    4. '+=' → logprob: -10.254049301147461
    5. ' -=' → logprob: -10.379049301147461
    6. '-' → logprob: -13.379049301147461
    7. ' +=' → logprob: -13.879049301147461
    8. '*=' → logprob: -15.129049301147461
    9. '.=' → logprob: -15.629049301147461
    10. '   ' → logprob: -16.00404930114746

Token 1046: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -9.627176768844947e-05
    2. ' dist' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.87509536743164
    4. '	dist' → logprob: -17.00009536743164
    5. '(dist' → logprob: -17.62509536743164
    6. '0' → logprob: -18.87509536743164
    7. 'graph' → logprob: -18.87509536743164
    8. 'int' → logprob: -19.25009536743164
    9. '       ' → logprob: -19.75009536743164
    10. '1' → logprob: -19.87509536743164

Token 1047: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029811816290020943
    2. '[v' → logprob: -3.5298118591308594
    3. '[
' → logprob: -11.27981185913086
    4. '```' → logprob: -11.27981185913086
    5. 'v' → logprob: -11.52981185913086
    6. 'dist' → logprob: -11.65481185913086
    7. '1' → logprob: -12.15481185913086
    8. ' [' → logprob: -12.77981185913086
    9. '[,' → logprob: -13.77981185913086
    10. '[next' → logprob: -14.27981185913086

Token 1048: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11358620226383209
    2. 'dist' → logprob: -2.238586187362671
    3. 'v' → logprob: -7.48858642578125
    4. '[' → logprob: -8.73858642578125
    5. ' dist' → logprob: -10.98858642578125
    6. 'return' → logprob: -11.73858642578125
    7. '```' → logprob: -12.48858642578125
    8. '(dist' → logprob: -12.61358642578125
    9. '	dist' → logprob: -13.11358642578125
    10. '(' → logprob: -13.36358642578125

Token 1049: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004172779619693756
    2. ',v' → logprob: -5.5041728019714355
    3. 'v' → logprob: -9.879172325134277
    4. '[' → logprob: -10.254172325134277
    5. '[v' → logprob: -12.629172325134277
    6. ',
' → logprob: -13.129172325134277
    7. ' ,' → logprob: -14.004172325134277
    8. '   ' → logprob: -14.629172325134277
    9. '       ' → logprob: -14.754172325134277
    10. '```' → logprob: -14.754172325134277

Token 1050: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.9888433093437925e-05
    2. 'dist' → logprob: -10.500040054321289
    3. ' v' → logprob: -11.375040054321289
    4. '   ' → logprob: -14.250040054321289
    5. ' dist' → logprob: -16.12504005432129
    6. '	v' → logprob: -17.37504005432129
    7. '    ' → logprob: -18.00004005432129
    8. '       ' → logprob: -18.00004005432129
    9. '
' → logprob: -18.25004005432129
    10. '     ' → logprob: -18.37504005432129

Token 1051: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.00026777281891554594
    2. '_' → logprob: -8.25026798248291
    3. 'next' → logprob: -12.37526798248291
    4. '_
' → logprob: -13.62526798248291
    5. '_n' → logprob: -15.25026798248291
    6. ' _' → logprob: -15.37526798248291
    7. 'Next' → logprob: -15.37526798248291
    8. ' next' → logprob: -16.375267028808594
    9. '_NEXT' → logprob: -16.375267028808594
    10. ')_' → logprob: -17.000267028808594

Token 1052: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6851827502250671
    2. '<|end|>' → logprob: -1.185182809829712
    3. ']' → logprob: -1.685182809829712
    4. '}' → logprob: -6.310182571411133
    5. '```' → logprob: -6.935182571411133
    6. '<|end|>' → logprob: -7.435182571411133
    7. '   ' → logprob: -7.560182571411133
    8. '
' → logprob: -8.435182571411133
    9. ' ]' → logprob: -8.810182571411133
    10. '[' → logprob: -8.935182571411133

Token 1053: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4417860805988312
    2. ')' → logprob: -1.4417860507965088
    3. '<|end|>' → logprob: -2.816786050796509
    4. ':' → logprob: -4.066786289215088
    5. '\t' → logprob: -4.066786289215088
    6. '\n' → logprob: -4.941786289215088
    7. '\' → logprob: -5.816786289215088
    8. '       ' → logprob: -5.941786289215088
    9. ' ' → logprob: -5.941786289215088
    10. ':return' → logprob: -6.566786289215088

Token 1054: ' delivering' (ID: 28556)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.00015121731848921627
    2. 'return' → logprob: -9.000151634216309
    3. 'deliver' → logprob: -10.875151634216309
    4. '       ' → logprob: -11.875151634216309
    5. ' delivering' → logprob: -14.250151634216309
    6. '
' → logprob: -15.000151634216309
    7. 'delivery' → logprob: -15.250151634216309
    8. '           ' → logprob: -15.750151634216309
    9. '	del' → logprob: -16.000150680541992
    10. 'print' → logprob: -16.500150680541992

Token 1055: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687485456466675
    2. '=' → logprob: -1.1368749141693115
    3. '=True' → logprob: -12.63687515258789
    4. '	' → logprob: -15.01187515258789
    5. ' ' → logprob: -15.38687515258789
    6. ' ' → logprob: -17.13687515258789
    7. ' =
' → logprob: -17.63687515258789
    8. '＝' → logprob: -17.88687515258789
    9. ' |=' → logprob: -18.26187515258789
    10. ',' → logprob: -18.51187515258789

Token 1056: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.38687145709991455
    2. ' True' → logprob: -1.1368714570999146
    3. '(True' → logprob: -15.011871337890625
    4. '=True' → logprob: -16.511871337890625
    5. ' ' → logprob: -18.011871337890625
    6. 'False' → logprob: -18.636871337890625
    7. ' Tru' → logprob: -19.136871337890625
    8. ' not' → logprob: -19.386871337890625
    9. 'Tr' → logprob: -20.386871337890625
    10. 'not' → logprob: -20.511871337890625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1054
Tokens correctement prédits (1ère position, stricte): 388
Tokens correctement prédits (1ère position, avec adaptation): 417
Tokens correctement prédits (top 10): 822
Précision stricte (1ère position): 36.81%
Précision adaptée (1ère position): 39.56%
Précision (top 10): 77.99%
================================================================================
