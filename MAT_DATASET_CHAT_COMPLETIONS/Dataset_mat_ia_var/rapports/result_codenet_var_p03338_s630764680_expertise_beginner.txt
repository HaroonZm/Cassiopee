================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
S = input()

ans = 0
for i in range(1, n+1):
    X = S[:i]
    Y = S[i:]
    tmp = []
    for x in X:
        if x in Y:
            if x not in tmp:
                tmp.append(x)
    if len(tmp) > ans:
        ans = len(tmp)
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'S' (ID: 50)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19768550992012024
    2. '[' → logprob: -2.072685480117798
    3. '=' → logprob: -3.072685480117798
    4. ' =' → logprob: -5.447685718536377
    5. 't' → logprob: -7.447685718536377
    6. 'um' → logprob: -8.197685241699219
    7. ')' → logprob: -8.322685241699219
    8. '[i' → logprob: -8.322685241699219
    9. 'u' → logprob: -8.697685241699219
    10. '(' → logprob: -8.697685241699219

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.694463312625885
    2. ' input' → logprob: -0.694463312625885
    3. '"' → logprob: -8.319463729858398
    4. '""' → logprob: -8.319463729858398
    5. ' []' → logprob: -8.819463729858398
    6. ' ' → logprob: -9.069463729858398
    7. ' "' → logprob: -9.319463729858398
    8. ''' → logprob: -9.444463729858398
    9. '[]' → logprob: -9.569463729858398
    10. '(input' → logprob: -9.819463729858398

Token 8: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05717949569225311
    2. '()' → logprob: -2.9321794509887695
    3. ')' → logprob: -7.0571794509887695
    4. '('' → logprob: -7.9321794509887695
    5. ''' → logprob: -8.55717945098877
    6. '(

' → logprob: -8.55717945098877
    7. '"' → logprob: -8.93217945098877
    8. '(
' → logprob: -8.93217945098877
    9. '```' → logprob: -9.05717945098877
    10. ' ' → logprob: -9.93217945098877

Token 9: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49799394607543945
    2. 'count' → logprob: -1.3729939460754395
    3. 'result' → logprob: -2.4979939460754395
    4. 'if' → logprob: -3.4979939460754395
    5. 'c' → logprob: -5.1229939460754395
    6. 'f' → logprob: -5.4979939460754395
    7. 'd' → logprob: -5.8729939460754395
    8. 'sum' → logprob: -5.8729939460754395
    9. 's' → logprob: -6.2479939460754395
    10. 'counts' → logprob: -6.8729939460754395

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1616774946451187
    2. '=' → logprob: -1.9116774797439575
    3. '_' → logprob: -6.661677360534668
    4. ' +=' → logprob: -9.786677360534668
    5. ' ' → logprob: -9.786677360534668
    6. '[' → logprob: -11.286677360534668
    7. ')' → logprob: -11.411677360534668
    8. ',' → logprob: -12.036677360534668
    9. '+=' → logprob: -12.161677360534668
    10. 's' → logprob: -12.411677360534668

Token 11: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05109642446041107
    2. '""' → logprob: -3.4260964393615723
    3. ' ' → logprob: -5.301096439361572
    4. '''' → logprob: -5.426096439361572
    5. '"' → logprob: -5.676096439361572
    6. '[]' → logprob: -6.301096439361572
    7. 'n' → logprob: -7.176096439361572
    8. '[' → logprob: -7.801096439361572
    9. ''' → logprob: -7.926096439361572
    10. 'set' → logprob: -8.551095962524414

Token 12: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06059151887893677
    2. '""' → logprob: -3.560591459274292
    3. '''' → logprob: -4.560591697692871
    4. '[]' → logprob: -5.060591697692871
    5. '"' → logprob: -5.560591697692871
    6. 'S' → logprob: -5.685591697692871
    7. '[' → logprob: -6.935591697692871
    8. ''' → logprob: -6.935591697692871
    9. 'n' → logprob: -7.185591697692871
    10. 'max' → logprob: -7.310591697692871

Token 13: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03729066252708435
    2. ' for' → logprob: -3.537290573120117
    3. 'i' → logprob: -5.787290573120117
    4. 'f' → logprob: -6.912290573120117
    5. ' ' → logprob: -6.912290573120117
    6. '
' → logprob: -7.162290573120117
    7. '' → logprob: -7.537290573120117
    8. '_' → logprob: -8.287290573120117
    9. 't' → logprob: -8.662290573120117
    10. ')' → logprob: -9.037290573120117

Token 14: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010775440372526646
    2. 'f' → logprob: -4.885775566101074
    3. 'i' → logprob: -6.510775566101074
    4. ' for' → logprob: -6.760775566101074
    5. '_' → logprob: -9.635775566101074
    6. '```' → logprob: -9.885775566101074
    7. 'd' → logprob: -10.010775566101074
    8. 'count' → logprob: -10.135775566101074
    9. 'current' → logprob: -10.385775566101074
    10. 'a' → logprob: -10.510775566101074

Token 15: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03541012108325958
    2. ' i' → logprob: -3.410410165786743
    3. '  ' → logprob: -6.410409927368164
    4. 'i' → logprob: -10.285409927368164
    5. ' n' → logprob: -11.035409927368164
    6. '_' → logprob: -11.035409927368164
    7. ' )' → logprob: -11.660409927368164
    8. ''' → logprob: -11.785409927368164
    9. '"' → logprob: -12.160409927368164
    10. ' ‌' → logprob: -12.160409927368164

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07125178724527359
    2. 'in' → logprob: -2.69625186920166
    3. ' ' → logprob: -6.82125186920166
    4. '  ' → logprob: -9.69625186920166
    5. '<|end|>' → logprob: -10.19625186920166
    6. '+' → logprob: -10.82125186920166
    7. ')' → logprob: -11.07125186920166
    8. 'n' → logprob: -11.07125186920166
    9. ' n' → logprob: -11.69625186920166
    10. '[' → logprob: -11.94625186920166

Token 17: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1604257971048355
    2. 'range' → logprob: -1.9104257822036743
    3. ' ' → logprob: -8.535426139831543
    4. '	range' → logprob: -13.285426139831543
    5. ')' → logprob: -14.285426139831543
    6. '  ' → logprob: -14.410426139831543
    7. '(range' → logprob: -14.535426139831543
    8. ' in' → logprob: -14.535426139831543
    9. ' xrange' → logprob: -15.035426139831543
    10. ' n' → logprob: -15.535426139831543

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02090468257665634
    2. '(n' → logprob: -4.520904541015625
    3. ' (' → logprob: -4.645904541015625
    4. '(len' → logprob: -9.270904541015625
    5. ' ' → logprob: -9.395904541015625
    6. '(i' → logprob: -11.395904541015625
    7. '(range' → logprob: -12.645904541015625
    8. '(space' → logprob: -12.770904541015625
    9. '(
' → logprob: -12.895904541015625
    10. '  ' → logprob: -13.020904541015625

Token 19: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005059537012130022
    2. '1' → logprob: -5.505059719085693
    3. ' n' → logprob: -7.255059719085693
    4. ')' → logprob: -9.255059242248535
    5. '3' → logprob: -10.130059242248535
    6. '0' → logprob: -10.380059242248535
    7. 'len' → logprob: -10.380059242248535
    8. '2' → logprob: -10.505059242248535
    9. ')n' → logprob: -11.130059242248535
    10. ' ' → logprob: -11.630059242248535

Token 20: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.386439710855484
    2. ',' → logprob: -1.5114396810531616
    3. ',n' → logprob: -2.886439800262451
    4. ' n' → logprob: -3.511439800262451
    5. ' )' → logprob: -5.011439800262451
    6. '(n' → logprob: -5.511439800262451
    7. 'n' → logprob: -6.136439800262451
    8. ')' → logprob: -7.136439800262451
    9. ')n' → logprob: -8.511439323425293
    10. ',len' → logprob: -8.761439323425293

Token 21: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3484947383403778
    2. 'n' → logprob: -1.2234947681427002
    3. ' ' → logprob: -11.098494529724121
    4. ')' → logprob: -11.473494529724121
    5. ' len' → logprob: -11.473494529724121
    6. 'len' → logprob: -11.723494529724121
    7. ')n' → logprob: -12.848494529724121
    8. ' )' → logprob: -14.348494529724121
    9. '(n' → logprob: -14.348494529724121
    10. '	n' → logprob: -15.098494529724121

Token 22: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03915484994649887
    2. '+' → logprob: -3.4141547679901123
    3. ')' → logprob: -5.414155006408691
    4. ' ):' → logprob: -7.539155006408691
    5. '):
' → logprob: -8.414155006408691
    6. ' +' → logprob: -8.789155006408691
    7. ':' → logprob: -9.664155006408691
    8. ',' → logprob: -10.539155006408691
    9. '-' → logprob: -10.664155006408691
    10. ' ' → logprob: -12.289155006408691

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.872261317563243e-05
    2. ' ' → logprob: -9.750059127807617
    3. '2' → logprob: -15.500059127807617
    4. ')' → logprob: -16.125059127807617
    5. '```' → logprob: -17.875059127807617
    6. '   ' → logprob: -19.000059127807617
    7. '１' → logprob: -19.250059127807617
    8. '  ' → logprob: -20.000059127807617
    9. '۱' → logprob: -20.000059127807617
    10. '):' → logprob: -20.125059127807617

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02657162956893444
    2. ')' → logprob: -4.276571750640869
    3. ':' → logprob: -4.401571750640869
    4. ' ):' → logprob: -10.401571273803711
    5. '):
' → logprob: -10.526571273803711
    6. ':)' → logprob: -12.276571273803711
    7. '():' → logprob: -12.901571273803711
    8. ' ' → logprob: -13.151571273803711
    9. ' )' → logprob: -13.526571273803711
    10. ':**' → logprob: -13.526571273803711

Token 25: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014128712005913258
    2. '   ' → logprob: -5.264128684997559
    3. ' 
' → logprob: -5.264128684997559
    4. '    ' → logprob: -6.139128684997559
    5. '     
' → logprob: -7.764128684997559
    6. '<|end|>' → logprob: -8.264128684997559
    7. '    
' → logprob: -8.389128684997559
    8. '  ' → logprob: -8.639128684997559
    9. '\' → logprob: -8.889128684997559
    10. '   
' → logprob: -10.264128684997559

Token 26: ' X' (ID: 2127)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2619608640670776
    2. ' if' → logprob: -1.5119608640670776
    3. '   ' → logprob: -2.011960983276367
    4. 'if' → logprob: -2.511960983276367
    5. 'for' → logprob: -2.636960983276367
    6. ' ans' → logprob: -2.761960983276367
    7. ' ' → logprob: -3.136960983276367
    8. 'range' → logprob: -3.636960983276367
    9. ' range' → logprob: -4.011960983276367
    10. ' i' → logprob: -4.136960983276367

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44103237986564636
    2. ' ' → logprob: -1.4410324096679688
    3. '=' → logprob: -3.0660324096679688
    4. '[' → logprob: -3.3160324096679688
    5. '_' → logprob: -3.6910324096679688
    6. '   ' → logprob: -6.191032409667969
    7. '  ' → logprob: -6.191032409667969
    8. '[i' → logprob: -6.566032409667969
    9. 's' → logprob: -6.691032409667969
    10. '-' → logprob: -6.941032409667969

Token 28: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.4128209054470062
    2. 'S' → logprob: -1.1628209352493286
    3. 'int' → logprob: -4.537820816040039
    4. ' int' → logprob: -5.162820816040039
    5. ' i' → logprob: -5.912820816040039
    6. ' ' → logprob: -6.162820816040039
    7. 'i' → logprob: -6.537820816040039
    8. '"' → logprob: -7.912820816040039
    9. '   ' → logprob: -8.162820816040039
    10. 'len' → logprob: -8.162820816040039

Token 29: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.030628591775894165
    2. '[-' → logprob: -3.6556286811828613
    3. '[i' → logprob: -5.780628681182861
    4. '[:-' → logprob: -6.780628681182861
    5. '[' → logprob: -9.655628204345703
    6. ':i' → logprob: -11.280628204345703
    7. '[::-' → logprob: -12.155628204345703
    8. '-i' → logprob: -12.405628204345703
    9. '[:]' → logprob: -12.530628204345703
    10. '[len' → logprob: -13.155628204345703

Token 30: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00013202552509028465
    2. ' i' → logprob: -10.000131607055664
    3. '-i' → logprob: -10.500131607055664
    4. ' ' → logprob: -11.125131607055664
    5. '-' → logprob: -11.250131607055664
    6. ' -' → logprob: -11.375131607055664
    7. '   ' → logprob: -11.500131607055664
    8. 'n' → logprob: -12.125131607055664
    9. ')' → logprob: -13.875131607055664
    10. ']' → logprob: -14.000131607055664

Token 31: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020333228167146444
    2. '].' → logprob: -7.002033233642578
    3. '+' → logprob: -7.627033233642578
    4. ')' → logprob: -7.752033233642578
    5. '][' → logprob: -10.002033233642578
    6. '])' → logprob: -10.127033233642578
    7. ']+' → logprob: -10.252033233642578
    8. ' ]' → logprob: -11.002033233642578
    9. ']
' → logprob: -11.627033233642578
    10. '-' → logprob: -11.752033233642578

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04517338052392006
    2. '    
' → logprob: -4.670173168182373
    3. ' ' → logprob: -5.295173168182373
    4. '    ' → logprob: -5.795173168182373
    5. '
' → logprob: -5.795173168182373
    6. '<|end|>' → logprob: -5.920173168182373
    7. '  ' → logprob: -6.045173168182373
    8. 'for' → logprob: -6.045173168182373
    9. ')' → logprob: -6.295173168182373
    10. ' if' → logprob: -6.420173168182373

Token 33: ' Y' (ID: 865)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18811850249767303
    2. ' for' → logprob: -2.5631184577941895
    3. 'if' → logprob: -3.1881184577941895
    4. 'j' → logprob: -3.9381184577941895
    5. 'ans' → logprob: -4.3131184577941895
    6. '   ' → logprob: -4.8131184577941895
    7. ' if' → logprob: -5.6881184577941895
    8. 'count' → logprob: -5.9381184577941895
    9. ' ans' → logprob: -6.8131184577941895
    10. 'len' → logprob: -7.0631184577941895

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889385521411896
    2. '=' → logprob: -2.5788938999176025
    3. ' ' → logprob: -12.703893661499023
    4. 's' → logprob: -15.078893661499023
    5. '＝' → logprob: -15.203893661499023
    6. '[' → logprob: -15.953893661499023
    7. '   ' → logprob: -16.328893661499023
    8. ')' → logprob: -17.203893661499023
    9. '>' → logprob: -17.516393661499023
    10. '  ' → logprob: -17.578893661499023

Token 35: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.3487069308757782
    2. 'S' → logprob: -1.2237069606781006
    3. ' ' → logprob: -9.09870719909668
    4. '   ' → logprob: -9.84870719909668
    5. 's' → logprob: -10.47370719909668
    6. ''S' → logprob: -11.72370719909668
    7. '    ' → logprob: -11.97370719909668
    8. 'X' → logprob: -12.34870719909668
    9. '  ' → logprob: -12.41120719909668
    10. ' s' → logprob: -12.53620719909668

Token 36: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010245933663100004
    2. '[:' → logprob: -7.1260247230529785
    3. '[-' → logprob: -8.75102424621582
    4. '[' → logprob: -10.25102424621582
    5. '[:]' → logprob: -11.25102424621582
    6. '[:-' → logprob: -11.75102424621582
    7. '[::-' → logprob: -13.50102424621582
    8. '[I' → logprob: -14.00102424621582
    9. '(i' → logprob: -14.12602424621582
    10. 'i' → logprob: -14.25102424621582

Token 37: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.002494087442755699
    2. ':' → logprob: -6.252493858337402
    3. ':i' → logprob: -8.252493858337402
    4. ':].' → logprob: -8.877493858337402
    5. '*' → logprob: -9.877493858337402
    6. '+' → logprob: -10.627493858337402
    7. '//' → logprob: -10.627493858337402
    8. '-' → logprob: -11.002493858337402
    9. ' :]' → logprob: -11.127493858337402
    10. ']' → logprob: -11.627493858337402

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0769902765750885
    2. 'if' → logprob: -3.8269903659820557
    3. '    
' → logprob: -4.201990127563477
    4. ' ' → logprob: -4.201990127563477
    5. '
' → logprob: -5.326990127563477
    6. ' if' → logprob: -5.451990127563477
    7. 'for' → logprob: -5.951990127563477
    8. ' 
' → logprob: -6.201990127563477
    9. '    ' → logprob: -6.576990127563477
    10. '  ' → logprob: -6.576990127563477

Token 39: ' tmp' (ID: 8919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1974250078201294
    2. ' ' → logprob: -1.6974250078201294
    3. 'if' → logprob: -1.9474250078201294
    4. 'ans' → logprob: -2.44742488861084
    5. '   ' → logprob: -3.19742488861084
    6. 'a' → logprob: -3.19742488861084
    7. ' if' → logprob: -3.44742488861084
    8. 'n' → logprob: -3.44742488861084
    9. ' for' → logprob: -3.57242488861084
    10. ' 
' → logprob: -3.69742488861084

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05068380385637283
    2. '=' → logprob: -3.1756837368011475
    3. '_ans' → logprob: -4.925683975219727
    4. '_max' → logprob: -9.050683975219727
    5. '_cnt' → logprob: -9.925683975219727
    6. '_' → logprob: -10.300683975219727
    7. 'ans' → logprob: -10.425683975219727
    8. '_len' → logprob: -10.425683975219727
    9. 'max' → logprob: -10.800683975219727
    10. '_answer' → logprob: -10.925683975219727

Token 41: ' []
' (ID: 8911)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.4194977581501007
    2. 'len' → logprob: -2.1694977283477783
    3. '0' → logprob: -2.4194977283477783
    4. 'max' → logprob: -2.7944977283477783
    5. 'min' → logprob: -3.5444977283477783
    6. 'Y' → logprob: -3.7944977283477783
    7. 'sum' → logprob: -3.9194977283477783
    8. ' X' → logprob: -6.294497966766357
    9. 'abs' → logprob: -6.294497966766357
    10. 'S' → logprob: -6.919497966766357

Token 42: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1278783231973648
    2. '   ' → logprob: -2.627878427505493
    3. ' for' → logprob: -3.127878427505493
    4. ' ' → logprob: -6.502878189086914
    5. '    
' → logprob: -7.502878189086914
    6. '[' → logprob: -8.127878189086914
    7. '    ' → logprob: -8.127878189086914
    8. ' 
' → logprob: -8.127878189086914
    9. 'f' → logprob: -9.002878189086914
    10. '	for' → logprob: -9.252878189086914

Token 43: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002898547565564513
    2. ' for' → logprob: -5.877898693084717
    3. '   ' → logprob: -9.502898216247559
    4. 'i' → logprob: -12.127898216247559
    5. 'count' → logprob: -12.127898216247559
    6. '	for' → logprob: -13.377898216247559
    7. 'j' → logprob: -13.377898216247559
    8. '[' → logprob: -13.877898216247559
    9. ' ' → logprob: -14.002898216247559
    10. '    ' → logprob: -14.252898216247559

Token 44: ' x' (ID: 1215)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7349454164505005
    2. 'x' → logprob: -0.8599454164505005
    3. 'j' → logprob: -2.859945297241211
    4. 'a' → logprob: -4.359945297241211
    5. ' c' → logprob: -4.359945297241211
    6. 'k' → logprob: -5.359945297241211
    7. ' x' → logprob: -5.359945297241211
    8. ' j' → logprob: -6.234945297241211
    9. 's' → logprob: -6.609945297241211
    10. 'ch' → logprob: -6.984945297241211

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07050362229347229
    2. 'in' → logprob: -2.6955037117004395
    3. ' ' → logprob: -8.070503234863281
    4. 'x' → logprob: -9.195503234863281
    5. 's' → logprob: -10.320503234863281
    6. '  ' → logprob: -10.320503234863281
    7. 'i' → logprob: -10.695503234863281
    8. 'n' → logprob: -10.945503234863281
    9. 'a' → logprob: -12.070503234863281
    10. ' i' → logprob: -12.070503234863281

Token 46: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.014775073155760765
    2. ' X' → logprob: -4.764775276184082
    3. 'Y' → logprob: -5.389775276184082
    4. 'set' → logprob: -6.764775276184082
    5. ' set' → logprob: -8.514775276184082
    6. 'range' → logprob: -9.264775276184082
    7. ' Y' → logprob: -9.639775276184082
    8. ' range' → logprob: -11.014775276184082
    9. 'list' → logprob: -11.264775276184082
    10. ' ' → logprob: -11.264775276184082

Token 47: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7346929907798767
    2. 'if' → logprob: -1.3596930503845215
    3. 'in' → logprob: -1.6096930503845215
    4. ' if' → logprob: -2.8596930503845215
    5. ':' → logprob: -6.4846930503845215
    6. '   ' → logprob: -6.7346930503845215
    7. ' not' → logprob: -6.9846930503845215
    8. ' ' → logprob: -6.9846930503845215
    9. 'not' → logprob: -7.6096930503845215
    10. '  ' → logprob: -8.359692573547363

Token 48: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9347155690193176
    2. 'if' → logprob: -1.6847155094146729
    3. 'tmp' → logprob: -1.9347155094146729
    4. '   ' → logprob: -1.9347155094146729
    5. ' tmp' → logprob: -2.684715509414673
    6. '       ' → logprob: -2.809715509414673
    7. 'x' → logprob: -6.809715747833252
    8. '	tmp' → logprob: -7.684715747833252
    9. '+' → logprob: -7.809715747833252
    10. ' x' → logprob: -7.934715747833252

Token 49: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.44246456027030945
    2. '   ' → logprob: -1.5674645900726318
    3. ' if' → logprob: -2.317464590072632
    4. 'tmp' → logprob: -3.442464590072632
    5. '       ' → logprob: -4.692464351654053
    6. ' tmp' → logprob: -5.192464351654053
    7. 'x' → logprob: -6.442464351654053
    8. ' ' → logprob: -6.817464351654053
    9. '    ' → logprob: -7.567464351654053
    10. ' x' → logprob: -8.567464828491211

Token 50: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6931993365287781
    2. ' x' → logprob: -0.6931993365287781
    3. ' not' → logprob: -10.068199157714844
    4. 'not' → logprob: -11.943199157714844
    5. ' ' → logprob: -13.693199157714844
    6. ' all' → logprob: -14.693199157714844
    7. '(x' → logprob: -15.130699157714844
    8. '   ' → logprob: -15.568199157714844
    9. ')x' → logprob: -15.880699157714844
    10. '```' → logprob: -16.130699157714844

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7022308707237244
    2. ' not' → logprob: -0.8272308707237244
    3. 'in' → logprob: -2.952230930328369
    4. 'not' → logprob: -4.202230930328369
    5. ' ' → logprob: -10.827230453491211
    6. 'n' → logprob: -10.952230453491211
    7. 'n't' → logprob: -11.577230453491211
    8. ' n' → logprob: -12.577230453491211
    9. '	not' → logprob: -12.827230453491211
    10. 'i' → logprob: -13.077230453491211

Token 52: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.000840715249069035
    2. ' Y' → logprob: -7.625840663909912
    3. 'tmp' → logprob: -8.00084114074707
    4. '   ' → logprob: -11.87584114074707
    5. 'y' → logprob: -12.37584114074707
    6. ' ' → logprob: -13.50084114074707
    7. 'X' → logprob: -13.50084114074707
    8. ' tmp' → logprob: -13.75084114074707
    9. 'set' → logprob: -14.50084114074707
    10. ')' → logprob: -14.87584114074707

Token 53: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.025612536817789078
    2. 'and' → logprob: -4.2756123542785645
    3. ':' → logprob: -4.5256123542785645
    4. '           ' → logprob: -7.9006123542785645
    5. ':
' → logprob: -9.400612831115723
    6. '):' → logprob: -10.650612831115723
    7. '       ' → logprob: -10.775612831115723
    8. ' :' → logprob: -11.150612831115723
    9. ')' → logprob: -11.400612831115723
    10. ' ' → logprob: -11.525612831115723

Token 54: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001441780710592866
    2. 'tmp' → logprob: -7.251441955566406
    3. ' tmp' → logprob: -7.251441955566406
    4. '       ' → logprob: -11.876441955566406
    5. '          ' → logprob: -12.501441955566406
    6. '               ' → logprob: -12.626441955566406
    7. ' and' → logprob: -13.001441955566406
    8. '		' → logprob: -13.751441955566406
    9. '	       ' → logprob: -13.751441955566406
    10. ' ' → logprob: -14.501441955566406

Token 55: ' if' (ID: 538)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.29997947812080383
    2. ' tmp' → logprob: -1.4249794483184814
    3. '           ' → logprob: -4.0499796867370605
    4. '       ' → logprob: -7.0499796867370605
    5. '   ' → logprob: -8.799979209899902
    6. '               ' → logprob: -10.049979209899902
    7. '	tmp' → logprob: -10.424979209899902
    8. ' ' → logprob: -10.549979209899902
    9. ' if' → logprob: -10.799979209899902
    10. '/tmp' → logprob: -10.924979209899902

Token 56: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11286159604787827
    2. 'x' → logprob: -2.2378616333007812
    3. ' not' → logprob: -10.487861633300781
    4. 'not' → logprob: -11.737861633300781
    5. '           ' → logprob: -12.987861633300781
    6. '   ' → logprob: -15.237861633300781
    7. ' tmp' → logprob: -15.737861633300781
    8. 'tmp' → logprob: -15.987861633300781
    9. ' ' → logprob: -16.23786163330078
    10. '    ' → logprob: -16.36286163330078

Token 57: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.002489926293492317
    2. 'not' → logprob: -6.002490043640137
    3. ')' → logprob: -12.377490043640137
    4. ' in' → logprob: -12.877490043640137
    5. '	not' → logprob: -13.127490043640137
    6. 'ot' → logprob: -13.252490043640137
    7. ' ' → logprob: -14.002490043640137
    8. ' no' → logprob: -14.127490043640137
    9. ':not' → logprob: -14.877490043640137
    10. 'n't' → logprob: -15.377490043640137

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.037436746060848236
    2. '<|end|>' → logprob: -3.9124367237091064
    3. 'in' → logprob: -4.2874369621276855
    4. '<|end|>' → logprob: -6.5374369621276855
    5. ' ' → logprob: -7.1624369621276855
    6. ' tmp' → logprob: -7.6624369621276855
    7. ' to' → logprob: -9.537436485290527
    8. 'tmp' → logprob: -10.162436485290527
    9. '[tmp' → logprob: -10.537436485290527
    10. 'to' → logprob: -10.662436485290527

Token 59: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.004080897197127342
    2. ' tmp' → logprob: -5.504080772399902
    3. '   ' → logprob: -13.754080772399902
    4. '/tmp' → logprob: -14.629080772399902
    5. '	tmp' → logprob: -15.004080772399902
    6. 'temp' → logprob: -15.629080772399902
    7. '$tmp' → logprob: -15.754080772399902
    8. ' ' → logprob: -16.37908172607422
    9. '[tmp' → logprob: -16.62908172607422
    10. '_tmp' → logprob: -16.75408172607422

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006229164078831673
    2. '):' → logprob: -5.756229400634766
    3. ':
' → logprob: -6.506229400634766
    4. '.append' → logprob: -6.881229400634766
    5. ')' → logprob: -9.006229400634766
    6. '           ' → logprob: -9.131229400634766
    7. '):
' → logprob: -9.381229400634766
    8. '   ' → logprob: -9.881229400634766
    9. '.' → logprob: -10.381229400634766
    10. ',' → logprob: -10.506229400634766

Token 61: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06960023939609528
    2. '           ' → logprob: -2.9446003437042236
    3. ' tmp' → logprob: -4.8196001052856445
    4. 'tmp' → logprob: -5.0696001052856445
    5. '```' → logprob: -10.194600105285645
    6. '	       ' → logprob: -10.569600105285645
    7. '(tmp' → logprob: -10.819600105285645
    8. '	tmp' → logprob: -11.069600105285645
    9. '			' → logprob: -11.194600105285645
    10. '       ' → logprob: -11.194600105285645

Token 62: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.46242162585258484
    2. 'tmp' (adapté à ' tmp') → logprob: -1.0874216556549072
    3. '               ' → logprob: -3.5874216556549072
    4. '                   ' → logprob: -5.337421417236328
    5. '           ' → logprob: -7.462421417236328
    6. ' ans' → logprob: -10.712421417236328
    7. '	tmp' → logprob: -11.087421417236328
    8. '   ' → logprob: -11.087421417236328
    9. '       ' → logprob: -11.962421417236328
    10. '/tmp' → logprob: -12.087421417236328

Token 63: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001172129064798355
    2. '.' → logprob: -6.751172065734863
    3. '.add' → logprob: -14.251172065734863
    4. '.app' → logprob: -14.376172065734863
    5. ' .' → logprob: -14.876172065734863
    6. '.push' → logprob: -16.25117301940918
    7. '.ap' → logprob: -16.37617301940918
    8. '.extend' → logprob: -16.87617301940918
    9. 'append' → logprob: -17.00117301940918
    10. '.Append' → logprob: -17.12617301940918

Token 64: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0009115827269852161
    2. '(' → logprob: -7.000911712646484
    3. 'x' → logprob: -16.875911712646484
    4. '((' → logprob: -17.000911712646484
    5. '(
' → logprob: -17.750911712646484
    6. ' (' → logprob: -18.375911712646484
    7. '(i' → logprob: -19.875911712646484
    8. '("("' → logprob: -19.875911712646484
    9. '('' → logprob: -20.000911712646484
    10. '(s' → logprob: -20.500911712646484

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.496052371105179e-05
    2. ')
' → logprob: -9.37509536743164
    3. '   ' → logprob: -12.37509536743164
    4. '               ' → logprob: -13.50009536743164
    5. ' )' → logprob: -13.75009536743164
    6. '       ' → logprob: -14.37509536743164
    7. ')return' → logprob: -14.50009536743164
    8. '           ' → logprob: -14.87509536743164
    9. '`)' → logprob: -15.25009536743164
    10. '）' → logprob: -15.37509536743164

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6314159631729126
    2. 'ans' → logprob: -1.2564159631729126
    3. ')' → logprob: -2.256415843963623
    4. '               ' → logprob: -3.256415843963623
    5. ' ans' → logprob: -4.506415843963623
    6. ')
' → logprob: -4.881415843963623
    7. '    
' → logprob: -5.506415843963623
    8. '(ans' → logprob: -5.756415843963623
    9. '                
' → logprob: -5.881415843963623
    10. '
' → logprob: -5.881415843963623

Token 67: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02301042340695858
    2. '   ' → logprob: -4.39801025390625
    3. ' ans' → logprob: -4.64801025390625
    4. 'len' → logprob: -7.77301025390625
    5. '	ans' → logprob: -8.52301025390625
    6. '(ans' → logprob: -8.77301025390625
    7. ' ' → logprob: -10.39801025390625
    8. ')' → logprob: -11.52301025390625
    9. '_ans' → logprob: -11.77301025390625
    10. '
' → logprob: -11.89801025390625

Token 68: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.012977498583495617
    2. 'len' → logprob: -4.512977600097656
    3. ' ans' → logprob: -6.262977600097656
    4. 'ans' → logprob: -11.137977600097656
    5. ' tmp' → logprob: -11.887977600097656
    6. ' ' → logprob: -14.762977600097656
    7. 'tmp' → logprob: -15.262977600097656
    8. '(len' → logprob: -15.637977600097656
    9. ' max' → logprob: -16.012977600097656
    10. '(ans' → logprob: -17.637977600097656

Token 69: '(tmp' (ID: 22623)
  Prédit: '(tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.0003121056070085615
    2. '(' → logprob: -8.125311851501465
    3. '(temp' → logprob: -12.000311851501465
    4. ' (' → logprob: -12.375311851501465
    5. '(t' → logprob: -12.625311851501465
    6. '(ans' → logprob: -13.500311851501465
    7. 'tmp' → logprob: -14.250311851501465
    8. ' tmp' → logprob: -15.125311851501465
    9. '(max' → logprob: -17.12531280517578
    10. '	tmp' → logprob: -17.25031280517578

Token 70: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.45208150148391724
    2. '>' → logprob: -1.2020814418792725
    3. ')' → logprob: -2.9520814418792725
    4. ')>' → logprob: -4.577081680297852
    5. ' )' → logprob: -7.452081680297852
    6. ' ' → logprob: -11.202081680297852
    7. '>)' → logprob: -12.452081680297852
    8. '">' → logprob: -12.452081680297852
    9. '()>' → logprob: -12.577081680297852
    10. ' ' → logprob: -13.327081680297852

Token 71: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06200108304619789
    2. '>' → logprob: -2.8120009899139404
    3. ' ' → logprob: -11.31200122833252
    4. ')' → logprob: -12.18700122833252
    5. ')>' → logprob: -13.06200122833252
    6. ' ' → logprob: -13.06200122833252
    7. '">' → logprob: -13.06200122833252
    8. '   ' → logprob: -13.18700122833252
    9. '<|end|>' → logprob: -13.31200122833252
    10. '  ' → logprob: -13.81200122833252

Token 72: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.17994727194309235
    2. ' ans' → logprob: -1.8049472570419312
    3. '	ans' → logprob: -9.054946899414062
    4. ' ' → logprob: -10.429946899414062
    5. '(ans' → logprob: -10.804946899414062
    6. '0' → logprob: -11.179946899414062
    7. '_ans' → logprob: -12.429946899414062
    8. 'answer' → logprob: -12.929946899414062
    9. 'Ans' → logprob: -13.117446899414062
    10. '```' → logprob: -13.117446899414062

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016084164381027222
    2. ':
' → logprob: -6.501608371734619
    3. '):' → logprob: -10.251608848571777
    4. '=' → logprob: -10.501608848571777
    5. '   ' → logprob: -11.501608848571777
    6. '<|end|>' → logprob: -11.876608848571777
    7. '       ' → logprob: -12.001608848571777
    8. ' :' → logprob: -12.376608848571777
    9. ' =' → logprob: -12.876608848571777
    10. ' ans' → logprob: -13.251608848571777

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013994250446557999
    2. ' ans' → logprob: -5.013994216918945
    3. 'ans' → logprob: -5.013994216918945
    4. '	ans' → logprob: -8.138994216918945
    5. '   ' → logprob: -8.263994216918945
    6. '```' → logprob: -11.013994216918945
    7. '(ans' → logprob: -11.263994216918945
    8. '           ' → logprob: -11.638994216918945
    9. '<|end|>' → logprob: -12.013994216918945
    10. '      ' → logprob: -12.263994216918945

Token 75: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.029850801452994347
    2. 'ans' (adapté à ' ans') → logprob: -3.529850721359253
    3. '	ans' → logprob: -9.404850959777832
    4. '(ans' → logprob: -11.654850959777832
    5. '       ' → logprob: -11.904850959777832
    6. '_ans' → logprob: -13.904850959777832
    7. '   ' → logprob: -14.029850959777832
    8. '           ' → logprob: -14.904850959777832
    9. ' an' → logprob: -16.279850006103516
    10. ' ' → logprob: -16.654850006103516

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009757270105183125
    2. '=' → logprob: -4.634757041931152
    3. ' ' → logprob: -14.509757041931152
    4. '=len' → logprob: -15.134757041931152
    5. '＝' → logprob: -15.884757041931152
    6. '<|end|>' → logprob: -16.00975799560547
    7. ' =)' → logprob: -16.00975799560547
    8. ' =
' → logprob: -16.75975799560547
    9. ' +=' → logprob: -17.25975799560547
    10. '=int' → logprob: -17.25975799560547

Token 77: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5759427547454834
    2. 'len' → logprob: -0.8259427547454834
    3. '(len' → logprob: -13.450942993164062
    4. '[len' → logprob: -13.950942993164062
    5. '	len' → logprob: -14.450942993164062
    6. '=len' → logprob: -15.325942993164062
    7. '<len' → logprob: -15.700942993164062
    8. ',len' → logprob: -16.950942993164062
    9. ' ' → logprob: -17.325942993164062
    10. ' tmp' → logprob: -17.575942993164062

Token 78: '(tmp' (ID: 22623)
  Prédit: '(tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.0009162207134068012
    2. '(' → logprob: -7.000916004180908
    3. '(t' → logprob: -12.500916481018066
    4. '(temp' → logprob: -14.625916481018066
    5. 'tmp' → logprob: -14.875916481018066
    6. '(tm' → logprob: -16.62591552734375
    7. '(tx' → logprob: -17.00091552734375
    8. '(
' → logprob: -17.50091552734375
    9. '(tp' → logprob: -17.50091552734375
    10. '	tmp' → logprob: -17.62591552734375

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.862962229410186e-05
    2. ')
' → logprob: -9.500078201293945
    3. ')return' → logprob: -13.125078201293945
    4. ' )' → logprob: -14.000078201293945
    5. ')

' → logprob: -16.375078201293945
    6. '   ' → logprob: -16.375078201293945
    7. ')`' → logprob: -16.625078201293945
    8. ')#' → logprob: -16.625078201293945
    9. ')
' → logprob: -16.750078201293945
    10. ')i' → logprob: -16.875078201293945

Token 80: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.3080716346157715e-05
    2. 'p' → logprob: -11.250022888183594
    3. '
' → logprob: -12.500022888183594
    4. '```' → logprob: -13.250022888183594
    5. 'pr' → logprob: -13.500022888183594
    6. ')' → logprob: -13.625022888183594
    7. ' print' → logprob: -13.750022888183594
    8. 'prin' → logprob: -15.750022888183594
    9. '#print' → logprob: -16.250022888183594
    10. '(print' → logprob: -16.375022888183594

Token 81: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3871181905269623
    2. '(ans' → logprob: -1.1371182203292847
    3. '('' → logprob: -8.762118339538574
    4. '()' → logprob: -10.012118339538574
    5. '("("' → logprob: -10.262118339538574
    6. '("' → logprob: -12.762118339538574
    7. ' (' → logprob: -13.012118339538574
    8. 'ans' → logprob: -13.137118339538574
    9. '(answer' → logprob: -14.137118339538574
    10. '(len' → logprob: -14.262118339538574

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -13.500001907348633
    3. '))' → logprob: -16.875001907348633
    4. ')`' → logprob: -17.375001907348633
    5. ')
' → logprob: -17.500001907348633
    6. '()' → logprob: -18.000001907348633
    7. '())' → logprob: -18.625001907348633
    8. '`)' → logprob: -19.000001907348633
    9. '）' → logprob: -19.000001907348633
    10. '')' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 80
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 68
Précision stricte (1ère position): 48.75%
Précision adaptée (1ère position): 51.25%
Précision (top 10): 85.00%
================================================================================
